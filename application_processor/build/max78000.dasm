
/Users/spoiler/Documents/GitHub/CAT-ectf-2024/application_processor/build/max78000.elf:     file format elf32-littlearm


Disassembly of section .text:

1000e000 <__isr_vector>:
1000e000:	20020000 	.word	0x20020000
1000e004:	10011d7d 	.word	0x10011d7d
1000e008:	10011bb1 	.word	0x10011bb1
1000e00c:	10011dbb 	.word	0x10011dbb
1000e010:	10011dbd 	.word	0x10011dbd
1000e014:	10011dbf 	.word	0x10011dbf
1000e018:	10011dc1 	.word	0x10011dc1
	...
1000e02c:	10011dc3 	.word	0x10011dc3
1000e030:	10011dc5 	.word	0x10011dc5
1000e034:	00000000 	.word	0x00000000
1000e038:	10011dc7 	.word	0x10011dc7
1000e03c:	10011dc9 	.word	0x10011dc9
1000e040:	10011dcd 	.word	0x10011dcd
1000e044:	10011dcf 	.word	0x10011dcf
1000e048:	10011dd1 	.word	0x10011dd1
1000e04c:	10011dd3 	.word	0x10011dd3
1000e050:	10011dd5 	.word	0x10011dd5
1000e054:	10011dd7 	.word	0x10011dd7
1000e058:	10011dd9 	.word	0x10011dd9
1000e05c:	10011ddb 	.word	0x10011ddb
1000e060:	10011ddd 	.word	0x10011ddd
1000e064:	10011ddf 	.word	0x10011ddf
1000e068:	10011de1 	.word	0x10011de1
1000e06c:	10011de3 	.word	0x10011de3
1000e070:	10011de5 	.word	0x10011de5
1000e074:	10011de7 	.word	0x10011de7
1000e078:	10011de9 	.word	0x10011de9
1000e07c:	10011deb 	.word	0x10011deb
1000e080:	10011ded 	.word	0x10011ded
1000e084:	10011def 	.word	0x10011def
1000e088:	10011df1 	.word	0x10011df1
1000e08c:	10011df3 	.word	0x10011df3
1000e090:	10011df5 	.word	0x10011df5
1000e094:	10011df7 	.word	0x10011df7
1000e098:	10011df9 	.word	0x10011df9
1000e09c:	10011dfb 	.word	0x10011dfb
1000e0a0:	10011b35 	.word	0x10011b35
1000e0a4:	10011b3d 	.word	0x10011b3d
1000e0a8:	10011e01 	.word	0x10011e01
1000e0ac:	10011e03 	.word	0x10011e03
1000e0b0:	10011e05 	.word	0x10011e05
1000e0b4:	10011e07 	.word	0x10011e07
1000e0b8:	10011e09 	.word	0x10011e09
1000e0bc:	10011e0b 	.word	0x10011e0b
1000e0c0:	10011e0d 	.word	0x10011e0d
1000e0c4:	10011e0f 	.word	0x10011e0f
1000e0c8:	10011e11 	.word	0x10011e11
1000e0cc:	10011e13 	.word	0x10011e13
1000e0d0:	10011e15 	.word	0x10011e15
1000e0d4:	10011e17 	.word	0x10011e17
1000e0d8:	10011e19 	.word	0x10011e19
1000e0dc:	10011e1b 	.word	0x10011e1b
1000e0e0:	10011e1d 	.word	0x10011e1d
1000e0e4:	10011e1f 	.word	0x10011e1f
1000e0e8:	10011e21 	.word	0x10011e21
1000e0ec:	10011e23 	.word	0x10011e23
1000e0f0:	10011e25 	.word	0x10011e25
1000e0f4:	10011e27 	.word	0x10011e27
1000e0f8:	10011e29 	.word	0x10011e29
1000e0fc:	10011e2b 	.word	0x10011e2b
1000e100:	10011e2d 	.word	0x10011e2d
1000e104:	10011e2f 	.word	0x10011e2f
1000e108:	10011e31 	.word	0x10011e31
1000e10c:	10011e33 	.word	0x10011e33
1000e110:	10011e35 	.word	0x10011e35
1000e114:	10011e37 	.word	0x10011e37
1000e118:	10011e39 	.word	0x10011e39
1000e11c:	10011e3b 	.word	0x10011e3b
1000e120:	10011e3d 	.word	0x10011e3d
1000e124:	10011e3f 	.word	0x10011e3f
1000e128:	10011e41 	.word	0x10011e41
1000e12c:	10011e43 	.word	0x10011e43
1000e130:	10011e45 	.word	0x10011e45
1000e134:	10011e47 	.word	0x10011e47
1000e138:	10011e49 	.word	0x10011e49
1000e13c:	10011e4b 	.word	0x10011e4b
1000e140:	10011e4d 	.word	0x10011e4d
1000e144:	10011e4f 	.word	0x10011e4f
1000e148:	10011e51 	.word	0x10011e51
1000e14c:	10011e53 	.word	0x10011e53
1000e150:	10011e55 	.word	0x10011e55
1000e154:	10011e57 	.word	0x10011e57
1000e158:	10011e59 	.word	0x10011e59
1000e15c:	10011e5b 	.word	0x10011e5b
1000e160:	10011e5d 	.word	0x10011e5d
1000e164:	10011e5f 	.word	0x10011e5f
1000e168:	10011e61 	.word	0x10011e61
1000e16c:	10011e63 	.word	0x10011e63
1000e170:	10011e65 	.word	0x10011e65
1000e174:	10011e67 	.word	0x10011e67
1000e178:	10011e69 	.word	0x10011e69
1000e17c:	10011e6b 	.word	0x10011e6b
1000e180:	10011e6d 	.word	0x10011e6d
1000e184:	10011e6f 	.word	0x10011e6f
1000e188:	10011e71 	.word	0x10011e71
1000e18c:	10011e73 	.word	0x10011e73
1000e190:	10011e75 	.word	0x10011e75
1000e194:	10011e77 	.word	0x10011e77
1000e198:	10011e79 	.word	0x10011e79
1000e19c:	10011e7b 	.word	0x10011e7b
1000e1a0:	10011e7d 	.word	0x10011e7d
1000e1a4:	10011e7f 	.word	0x10011e7f
1000e1a8:	10011e81 	.word	0x10011e81
1000e1ac:	10011e83 	.word	0x10011e83
1000e1b0:	10011e85 	.word	0x10011e85
1000e1b4:	10011e87 	.word	0x10011e87
1000e1b8:	10011e89 	.word	0x10011e89
1000e1bc:	10011e8b 	.word	0x10011e8b
1000e1c0:	10011e8d 	.word	0x10011e8d
1000e1c4:	10011e8f 	.word	0x10011e8f
1000e1c8:	10011e91 	.word	0x10011e91
1000e1cc:	10011e93 	.word	0x10011e93
1000e1d0:	10011e95 	.word	0x10011e95
1000e1d4:	10011e97 	.word	0x10011e97
1000e1d8:	10011e99 	.word	0x10011e99
1000e1dc:	10011e9b 	.word	0x10011e9b
	...

1000e200 <firmware_startup>:
1000e200:	4800      	ldr	r0, [pc, #0]	@ (1000e204 <firmware_startup+0x4>)
1000e202:	4780      	blx	r0
1000e204:	10011d7d 	.word	0x10011d7d

1000e208 <deregister_tm_clones>:
1000e208:	4803      	ldr	r0, [pc, #12]	@ (1000e218 <deregister_tm_clones+0x10>)
1000e20a:	4b04      	ldr	r3, [pc, #16]	@ (1000e21c <deregister_tm_clones+0x14>)
1000e20c:	4283      	cmp	r3, r0
1000e20e:	d002      	beq.n	1000e216 <deregister_tm_clones+0xe>
1000e210:	4b03      	ldr	r3, [pc, #12]	@ (1000e220 <deregister_tm_clones+0x18>)
1000e212:	b103      	cbz	r3, 1000e216 <deregister_tm_clones+0xe>
1000e214:	4718      	bx	r3
1000e216:	4770      	bx	lr
1000e218:	20000bcc 	.word	0x20000bcc
1000e21c:	20000bcc 	.word	0x20000bcc
1000e220:	00000000 	.word	0x00000000

1000e224 <register_tm_clones>:
1000e224:	4805      	ldr	r0, [pc, #20]	@ (1000e23c <register_tm_clones+0x18>)
1000e226:	4b06      	ldr	r3, [pc, #24]	@ (1000e240 <register_tm_clones+0x1c>)
1000e228:	1a1b      	subs	r3, r3, r0
1000e22a:	0fd9      	lsrs	r1, r3, #31
1000e22c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
1000e230:	1049      	asrs	r1, r1, #1
1000e232:	d002      	beq.n	1000e23a <register_tm_clones+0x16>
1000e234:	4b03      	ldr	r3, [pc, #12]	@ (1000e244 <register_tm_clones+0x20>)
1000e236:	b103      	cbz	r3, 1000e23a <register_tm_clones+0x16>
1000e238:	4718      	bx	r3
1000e23a:	4770      	bx	lr
1000e23c:	20000bcc 	.word	0x20000bcc
1000e240:	20000bcc 	.word	0x20000bcc
1000e244:	00000000 	.word	0x00000000

1000e248 <__do_global_dtors_aux>:
1000e248:	b510      	push	{r4, lr}
1000e24a:	4c06      	ldr	r4, [pc, #24]	@ (1000e264 <__do_global_dtors_aux+0x1c>)
1000e24c:	7823      	ldrb	r3, [r4, #0]
1000e24e:	b943      	cbnz	r3, 1000e262 <__do_global_dtors_aux+0x1a>
1000e250:	f7ff ffda 	bl	1000e208 <deregister_tm_clones>
1000e254:	4b04      	ldr	r3, [pc, #16]	@ (1000e268 <__do_global_dtors_aux+0x20>)
1000e256:	b113      	cbz	r3, 1000e25e <__do_global_dtors_aux+0x16>
1000e258:	4804      	ldr	r0, [pc, #16]	@ (1000e26c <__do_global_dtors_aux+0x24>)
1000e25a:	f3af 8000 	nop.w
1000e25e:	2301      	movs	r3, #1
1000e260:	7023      	strb	r3, [r4, #0]
1000e262:	bd10      	pop	{r4, pc}
1000e264:	20000c00 	.word	0x20000c00
1000e268:	00000000 	.word	0x00000000
1000e26c:	1002abb0 	.word	0x1002abb0

1000e270 <frame_dummy>:
1000e270:	b508      	push	{r3, lr}
1000e272:	4b05      	ldr	r3, [pc, #20]	@ (1000e288 <frame_dummy+0x18>)
1000e274:	b11b      	cbz	r3, 1000e27e <frame_dummy+0xe>
1000e276:	4905      	ldr	r1, [pc, #20]	@ (1000e28c <frame_dummy+0x1c>)
1000e278:	4805      	ldr	r0, [pc, #20]	@ (1000e290 <frame_dummy+0x20>)
1000e27a:	f3af 8000 	nop.w
1000e27e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
1000e282:	f7ff bfcf 	b.w	1000e224 <register_tm_clones>
1000e286:	bf00      	nop
1000e288:	00000000 	.word	0x00000000
1000e28c:	20000c04 	.word	0x20000c04
1000e290:	1002abb0 	.word	0x1002abb0

1000e294 <deobfuscate>:
/********************************* REFERENCE FLAG **********************************/
// trust me, it's easier to get the boot reference flag by
// getting this running than to try to untangle this
// NOTE: you're not allowed to do this in your code
// Remove this in your design
typedef uint32_t aErjfkdfru;const aErjfkdfru aseiFuengleR[]={0x1ffe4b6,0x3098ac,0x2f56101,0x11a38bb,0x485124,0x11644a7,0x3c74e8,0x3c74e8,0x2f56101,0x12614f7,0x1ffe4b6,0x11a38bb,0x1ffe4b6,0x12614f7,0x1ffe4b6,0x12220e3,0x3098ac,0x1ffe4b6,0x2ca498,0x11a38bb,0xe6d3b7,0x1ffe4b6,0x127bc,0x3098ac,0x11a38bb,0x1d073c6,0x51bd0,0x127bc,0x2e590b1,0x1cc7fb2,0x1d073c6,0xeac7cb,0x51bd0,0x2ba13d5,0x2b22bad,0x2179d2e,0};const aErjfkdfru djFIehjkklIH[]={0x138e798,0x2cdbb14,0x1f9f376,0x23bcfda,0x1d90544,0x1cad2d2,0x860e2c,0x860e2c,0x1f9f376,0x38ec6f2,0x138e798,0x23bcfda,0x138e798,0x38ec6f2,0x138e798,0x31dc9ea,0x2cdbb14,0x138e798,0x25cbe0c,0x23bcfda,0x199a72,0x138e798,0x11c82b4,0x2cdbb14,0x23bcfda,0x3225338,0x18d7fbc,0x11c82b4,0x35ff56,0x2b15630,0x3225338,0x8a977a,0x18d7fbc,0x29067fe,0x1ae6dee,0x4431c8,0};typedef int skerufjp;skerufjp siNfidpL(skerufjp verLKUDSfj){aErjfkdfru ubkerpYBd=12+1;skerufjp xUrenrkldxpxx=2253667944%0x432a1f32;aErjfkdfru UfejrlcpD=1361423303;verLKUDSfj=(verLKUDSfj+0x12345678)%60466176;while(xUrenrkldxpxx--!=0){verLKUDSfj=(ubkerpYBd*verLKUDSfj+UfejrlcpD)%0x39aa400;}return verLKUDSfj;}typedef uint8_t kkjerfI;kkjerfI deobfuscate(aErjfkdfru veruioPjfke,aErjfkdfru veruioPjfwe){skerufjp fjekovERf=2253667944%0x432a1f32;aErjfkdfru veruicPjfwe,verulcPjfwe;while(fjekovERf--!=0){veruioPjfwe=(veruioPjfwe-siNfidpL(veruioPjfke))%0x39aa400;veruioPjfke=(veruioPjfke-siNfidpL(veruioPjfwe))%60466176;}veruicPjfwe=(veruioPjfke+0x39aa400)%60466176;verulcPjfwe=(veruioPjfwe+60466176)%0x39aa400;return veruicPjfwe*60466176+verulcPjfwe-89;}
1000e294:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1000e298:	4a29      	ldr	r2, [pc, #164]	@ (1000e340 <deobfuscate+0xac>)
1000e29a:	4e2a      	ldr	r6, [pc, #168]	@ (1000e344 <deobfuscate+0xb0>)
1000e29c:	4f2a      	ldr	r7, [pc, #168]	@ (1000e348 <deobfuscate+0xb4>)
1000e29e:	4d2b      	ldr	r5, [pc, #172]	@ (1000e34c <deobfuscate+0xb8>)
1000e2a0:	4c2b      	ldr	r4, [pc, #172]	@ (1000e350 <deobfuscate+0xbc>)
1000e2a2:	f04f 0c04 	mov.w	ip, #4
1000e2a6:	eb00 0e06 	add.w	lr, r0, r6
1000e2aa:	fb87 380e 	smull	r3, r8, r7, lr
1000e2ae:	ea4f 73ee 	mov.w	r3, lr, asr #31
1000e2b2:	ebc3 53e8 	rsb	r3, r3, r8, asr #23
1000e2b6:	fb02 e313 	mls	r3, r2, r3, lr
1000e2ba:	f04f 0804 	mov.w	r8, #4
1000e2be:	eb03 0e43 	add.w	lr, r3, r3, lsl #1
1000e2c2:	eb03 038e 	add.w	r3, r3, lr, lsl #2
1000e2c6:	442b      	add	r3, r5
1000e2c8:	ea4f 2e93 	mov.w	lr, r3, lsr #10
1000e2cc:	fba4 9e0e 	umull	r9, lr, r4, lr
1000e2d0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
1000e2d4:	f1b8 0801 	subs.w	r8, r8, #1
1000e2d8:	fb02 331e 	mls	r3, r2, lr, r3
1000e2dc:	d1ef      	bne.n	1000e2be <deobfuscate+0x2a>
1000e2de:	1acb      	subs	r3, r1, r3
1000e2e0:	0a99      	lsrs	r1, r3, #10
1000e2e2:	fba4 e101 	umull	lr, r1, r4, r1
1000e2e6:	0949      	lsrs	r1, r1, #5
1000e2e8:	fb02 3111 	mls	r1, r2, r1, r3
1000e2ec:	eb01 0e06 	add.w	lr, r1, r6
1000e2f0:	ea4f 239e 	mov.w	r3, lr, lsr #10
1000e2f4:	fba4 8303 	umull	r8, r3, r4, r3
1000e2f8:	095b      	lsrs	r3, r3, #5
1000e2fa:	fb02 e313 	mls	r3, r2, r3, lr
1000e2fe:	f04f 0804 	mov.w	r8, #4
1000e302:	eb03 0e43 	add.w	lr, r3, r3, lsl #1
1000e306:	eb03 038e 	add.w	r3, r3, lr, lsl #2
1000e30a:	442b      	add	r3, r5
1000e30c:	ea4f 2e93 	mov.w	lr, r3, lsr #10
1000e310:	fba4 9e0e 	umull	r9, lr, r4, lr
1000e314:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
1000e318:	f1b8 0801 	subs.w	r8, r8, #1
1000e31c:	fb02 331e 	mls	r3, r2, lr, r3
1000e320:	d1ef      	bne.n	1000e302 <deobfuscate+0x6e>
1000e322:	1ac3      	subs	r3, r0, r3
1000e324:	0a98      	lsrs	r0, r3, #10
1000e326:	fba4 e000 	umull	lr, r0, r4, r0
1000e32a:	0940      	lsrs	r0, r0, #5
1000e32c:	f1bc 0c01 	subs.w	ip, ip, #1
1000e330:	fb02 3010 	mls	r0, r2, r0, r3
1000e334:	d1b7      	bne.n	1000e2a6 <deobfuscate+0x12>
1000e336:	4807      	ldr	r0, [pc, #28]	@ (1000e354 <deobfuscate+0xc0>)
1000e338:	4408      	add	r0, r1
1000e33a:	b2c0      	uxtb	r0, r0
1000e33c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000e340:	039aa400 	.word	0x039aa400
1000e344:	12345678 	.word	0x12345678
1000e348:	2383f4bf 	.word	0x2383f4bf
1000e34c:	5125abc7 	.word	0x5125abc7
1000e350:	002383f5 	.word	0x002383f5
1000e354:	039aa3a7 	.word	0x039aa3a7

1000e358 <init>:

/********************************* UTILITIES **********************************/

// Initialize the device
// This must be called on startup to initialize the flash and i2c interfaces
void init() {
1000e358:	b510      	push	{r4, lr}
  \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
1000e35a:	b662      	cpsie	i

    // Setup Flash
    flash_simple_init();

    // Test application has been booted before
    flash_simple_read(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e35c:	4c1a      	ldr	r4, [pc, #104]	@ (1000e3c8 <init+0x70>)
    flash_simple_init();
1000e35e:	f000 fd9f 	bl	1000eea0 <flash_simple_init>
    flash_simple_read(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e362:	2288      	movs	r2, #136	@ 0x88
1000e364:	4819      	ldr	r0, [pc, #100]	@ (1000e3cc <init+0x74>)
1000e366:	4621      	mov	r1, r4
1000e368:	f000 fdb4 	bl	1000eed4 <flash_simple_read>

    // Write Component IDs from flash if first boot e.g. flash unwritten
    if (flash_status.flash_magic != FLASH_MAGIC) {
1000e36c:	4b18      	ldr	r3, [pc, #96]	@ (1000e3d0 <init+0x78>)
1000e36e:	6822      	ldr	r2, [r4, #0]
1000e370:	429a      	cmp	r2, r3
1000e372:	d01c      	beq.n	1000e3ae <init+0x56>
        print_debug("First boot, setting flash!\n");
1000e374:	4817      	ldr	r0, [pc, #92]	@ (1000e3d4 <init+0x7c>)
1000e376:	f005 ff3b 	bl	100141f0 <printf>
1000e37a:	4817      	ldr	r0, [pc, #92]	@ (1000e3d8 <init+0x80>)
1000e37c:	f008 fe6c 	bl	10017058 <puts>
1000e380:	4816      	ldr	r0, [pc, #88]	@ (1000e3dc <init+0x84>)
1000e382:	f005 ff35 	bl	100141f0 <printf>
1000e386:	4b16      	ldr	r3, [pc, #88]	@ (1000e3e0 <init+0x88>)
1000e388:	681b      	ldr	r3, [r3, #0]
1000e38a:	6898      	ldr	r0, [r3, #8]
1000e38c:	f009 f938 	bl	10017600 <fflush>

        flash_status.flash_magic = FLASH_MAGIC;
1000e390:	a109      	add	r1, pc, #36	@ (adr r1, 1000e3b8 <init+0x60>)
1000e392:	e9d1 0100 	ldrd	r0, r1, [r1]
1000e396:	a30a      	add	r3, pc, #40	@ (adr r3, 1000e3c0 <init+0x68>)
1000e398:	e9d3 2300 	ldrd	r2, r3, [r3]
1000e39c:	e9c4 0100 	strd	r0, r1, [r4]
1000e3a0:	e9c4 2302 	strd	r2, r3, [r4, #8]
        flash_status.component_cnt = COMPONENT_CNT;
        uint32_t component_ids[COMPONENT_CNT] = {COMPONENT_IDS};
        memcpy(flash_status.component_ids, component_ids, 
            COMPONENT_CNT*sizeof(uint32_t));

        flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e3a4:	4809      	ldr	r0, [pc, #36]	@ (1000e3cc <init+0x74>)
1000e3a6:	2288      	movs	r2, #136	@ 0x88
1000e3a8:	4621      	mov	r1, r4
1000e3aa:	f000 fd95 	bl	1000eed8 <flash_simple_write>
    }
    
    // Initialize board link interface
    board_link_init();
}
1000e3ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    board_link_init();
1000e3b2:	f000 bc79 	b.w	1000eca8 <board_link_init>
1000e3b6:	bf00      	nop
1000e3b8:	deadbeef 	.word	0xdeadbeef
1000e3bc:	00000002 	.word	0x00000002
1000e3c0:	11111111 	.word	0x11111111
1000e3c4:	11111112 	.word	0x11111112
1000e3c8:	20000c20 	.word	0x20000c20
1000e3cc:	1007c000 	.word	0x1007c000
1000e3d0:	deadbeef 	.word	0xdeadbeef
1000e3d4:	1002127c 	.word	0x1002127c
1000e3d8:	10021288 	.word	0x10021288
1000e3dc:	100212a4 	.word	0x100212a4
1000e3e0:	20000598 	.word	0x20000598

1000e3e4 <scan_components>:
    return len;
}

/******************************** COMPONENT COMMS ********************************/

int scan_components() {
1000e3e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    // Print out provisioned component IDs
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e3e8:	f8df a0dc 	ldr.w	sl, [pc, #220]	@ 1000e4c8 <scan_components+0xe4>
1000e3ec:	4e37      	ldr	r6, [pc, #220]	@ (1000e4cc <scan_components+0xe8>)
1000e3ee:	f8da 3004 	ldr.w	r3, [sl, #4]
int scan_components() {
1000e3f2:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e3f6:	b1db      	cbz	r3, 1000e430 <scan_components+0x4c>
        print_info("P>0x%08x\n", flash_status.component_ids[i]);
1000e3f8:	f8df 90d4 	ldr.w	r9, [pc, #212]	@ 1000e4d0 <scan_components+0xec>
1000e3fc:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 1000e4d4 <scan_components+0xf0>
1000e400:	4f35      	ldr	r7, [pc, #212]	@ (1000e4d8 <scan_components+0xf4>)
1000e402:	f10a 0504 	add.w	r5, sl, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e406:	2400      	movs	r4, #0
        print_info("P>0x%08x\n", flash_status.component_ids[i]);
1000e408:	4648      	mov	r0, r9
1000e40a:	f005 fef1 	bl	100141f0 <printf>
1000e40e:	f855 1f04 	ldr.w	r1, [r5, #4]!
1000e412:	4640      	mov	r0, r8
1000e414:	f005 feec 	bl	100141f0 <printf>
1000e418:	4638      	mov	r0, r7
1000e41a:	f005 fee9 	bl	100141f0 <printf>
1000e41e:	6833      	ldr	r3, [r6, #0]
1000e420:	6898      	ldr	r0, [r3, #8]
1000e422:	f009 f8ed 	bl	10017600 <fflush>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e426:	f8da 3004 	ldr.w	r3, [sl, #4]
1000e42a:	3401      	adds	r4, #1
1000e42c:	42a3      	cmp	r3, r4
1000e42e:	d8eb      	bhi.n	1000e408 <scan_components+0x24>
        int len = issue_cmd(addr, transmit_buffer, receive_buffer);

        // Success, device is present
        if (len > 0) {
            scan_message* scan = (scan_message*) receive_buffer;
            print_info("F>0x%08x\n", scan->component_id);
1000e430:	4d27      	ldr	r5, [pc, #156]	@ (1000e4d0 <scan_components+0xec>)
1000e432:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 1000e4dc <scan_components+0xf8>
1000e436:	4f28      	ldr	r7, [pc, #160]	@ (1000e4d8 <scan_components+0xf4>)
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e438:	2408      	movs	r4, #8
1000e43a:	e01f      	b.n	1000e47c <scan_components+0x98>
        command->opcode = COMPONENT_CMD_SCAN;
1000e43c:	f88d e100 	strb.w	lr, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e440:	f000 fc36 	bl	1000ecb0 <send_packet>
1000e444:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e446:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e448:	4669      	mov	r1, sp
1000e44a:	4620      	mov	r0, r4
    if (result == ERROR_RETURN) {
1000e44c:	d012      	beq.n	1000e474 <scan_components+0x90>
    int len = poll_and_receive_packet(addr, receive);
1000e44e:	f000 fc49 	bl	1000ece4 <poll_and_receive_packet>
1000e452:	4603      	mov	r3, r0
        if (len > 0) {
1000e454:	2b00      	cmp	r3, #0
            print_info("F>0x%08x\n", scan->component_id);
1000e456:	4628      	mov	r0, r5
        if (len > 0) {
1000e458:	dd0c      	ble.n	1000e474 <scan_components+0x90>
            print_info("F>0x%08x\n", scan->component_id);
1000e45a:	f005 fec9 	bl	100141f0 <printf>
1000e45e:	9900      	ldr	r1, [sp, #0]
1000e460:	4640      	mov	r0, r8
1000e462:	f005 fec5 	bl	100141f0 <printf>
1000e466:	4638      	mov	r0, r7
1000e468:	f005 fec2 	bl	100141f0 <printf>
1000e46c:	6833      	ldr	r3, [r6, #0]
1000e46e:	6898      	ldr	r0, [r3, #8]
1000e470:	f009 f8c6 	bl	10017600 <fflush>
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e474:	3401      	adds	r4, #1
1000e476:	b2e4      	uxtb	r4, r4
1000e478:	2c78      	cmp	r4, #120	@ 0x78
1000e47a:	d013      	beq.n	1000e4a4 <scan_components+0xc0>
        command->opcode = COMPONENT_CMD_SCAN;
1000e47c:	f1a4 0318 	sub.w	r3, r4, #24
1000e480:	b2db      	uxtb	r3, r3
1000e482:	f8df c05c 	ldr.w	ip, [pc, #92]	@ 1000e4e0 <scan_components+0xfc>
1000e486:	f04f 0e01 	mov.w	lr, #1
1000e48a:	2b1e      	cmp	r3, #30
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e48c:	aa40      	add	r2, sp, #256	@ 0x100
1000e48e:	4671      	mov	r1, lr
1000e490:	4620      	mov	r0, r4
1000e492:	fa2c fc03 	lsr.w	ip, ip, r3
1000e496:	d8d1      	bhi.n	1000e43c <scan_components+0x58>
1000e498:	f01c 0f01 	tst.w	ip, #1
1000e49c:	d0ce      	beq.n	1000e43c <scan_components+0x58>
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e49e:	4474      	add	r4, lr
1000e4a0:	b2e4      	uxtb	r4, r4
1000e4a2:	e7eb      	b.n	1000e47c <scan_components+0x98>
        }
    }
    print_success("List\n");
1000e4a4:	480f      	ldr	r0, [pc, #60]	@ (1000e4e4 <scan_components+0x100>)
1000e4a6:	f005 fea3 	bl	100141f0 <printf>
1000e4aa:	480f      	ldr	r0, [pc, #60]	@ (1000e4e8 <scan_components+0x104>)
1000e4ac:	f008 fdd4 	bl	10017058 <puts>
1000e4b0:	4809      	ldr	r0, [pc, #36]	@ (1000e4d8 <scan_components+0xf4>)
1000e4b2:	f005 fe9d 	bl	100141f0 <printf>
1000e4b6:	6833      	ldr	r3, [r6, #0]
1000e4b8:	6898      	ldr	r0, [r3, #8]
1000e4ba:	f009 f8a1 	bl	10017600 <fflush>
    return SUCCESS_RETURN;
}
1000e4be:	2000      	movs	r0, #0
1000e4c0:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e4c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1000e4c8:	20000c20 	.word	0x20000c20
1000e4cc:	20000598 	.word	0x20000598
1000e4d0:	100212a8 	.word	0x100212a8
1000e4d4:	100212b4 	.word	0x100212b4
1000e4d8:	100212a4 	.word	0x100212a4
1000e4dc:	100212c0 	.word	0x100212c0
1000e4e0:	40010001 	.word	0x40010001
1000e4e4:	100212cc 	.word	0x100212cc
1000e4e8:	100212d8 	.word	0x100212d8

1000e4ec <validate_components>:

int validate_components() {
1000e4ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Send validate command to each component
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4f0:	4f24      	ldr	r7, [pc, #144]	@ (1000e584 <validate_components+0x98>)
1000e4f2:	687b      	ldr	r3, [r7, #4]
int validate_components() {
1000e4f4:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4f8:	2b00      	cmp	r3, #0
1000e4fa:	d037      	beq.n	1000e56c <validate_components+0x80>
1000e4fc:	1d3d      	adds	r5, r7, #4
1000e4fe:	2600      	movs	r6, #0
        // Set the I2C address of the component
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);

        // Create command message
        command_message* command = (command_message*) transmit_buffer;
        command->opcode = COMPONENT_CMD_VALIDATE;
1000e500:	f04f 0802 	mov.w	r8, #2
1000e504:	e003      	b.n	1000e50e <validate_components+0x22>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e506:	687b      	ldr	r3, [r7, #4]
1000e508:	3601      	adds	r6, #1
1000e50a:	42b3      	cmp	r3, r6
1000e50c:	d92e      	bls.n	1000e56c <validate_components+0x80>
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e50e:	f855 0f04 	ldr.w	r0, [r5, #4]!
1000e512:	f000 fbcb 	bl	1000ecac <component_id_to_i2c_addr>
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e516:	2101      	movs	r1, #1
1000e518:	aa40      	add	r2, sp, #256	@ 0x100
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e51a:	4604      	mov	r4, r0
        command->opcode = COMPONENT_CMD_VALIDATE;
1000e51c:	f88d 8100 	strb.w	r8, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e520:	f000 fbc6 	bl	1000ecb0 <send_packet>
1000e524:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e526:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e528:	4669      	mov	r1, sp
1000e52a:	4620      	mov	r0, r4
    if (result == ERROR_RETURN) {
1000e52c:	d023      	beq.n	1000e576 <validate_components+0x8a>
    int len = poll_and_receive_packet(addr, receive);
1000e52e:	f000 fbd9 	bl	1000ece4 <poll_and_receive_packet>
    if (len == ERROR_RETURN) {
1000e532:	3001      	adds	r0, #1
1000e534:	d01f      	beq.n	1000e576 <validate_components+0x8a>
            return ERROR_RETURN;
        }

        validate_message* validate = (validate_message*) receive_buffer;
        // Check that the result is correct
        if (validate->component_id != flash_status.component_ids[i]) {
1000e536:	9a00      	ldr	r2, [sp, #0]
1000e538:	682b      	ldr	r3, [r5, #0]
1000e53a:	429a      	cmp	r2, r3
1000e53c:	d0e3      	beq.n	1000e506 <validate_components+0x1a>
            print_error("Component ID: 0x%08x invalid\n", flash_status.component_ids[i]);
1000e53e:	3602      	adds	r6, #2
1000e540:	4811      	ldr	r0, [pc, #68]	@ (1000e588 <validate_components+0x9c>)
1000e542:	f005 fe55 	bl	100141f0 <printf>
1000e546:	4811      	ldr	r0, [pc, #68]	@ (1000e58c <validate_components+0xa0>)
1000e548:	f857 1026 	ldr.w	r1, [r7, r6, lsl #2]
1000e54c:	f005 fe50 	bl	100141f0 <printf>
1000e550:	480f      	ldr	r0, [pc, #60]	@ (1000e590 <validate_components+0xa4>)
1000e552:	f005 fe4d 	bl	100141f0 <printf>
1000e556:	4b0f      	ldr	r3, [pc, #60]	@ (1000e594 <validate_components+0xa8>)
1000e558:	681b      	ldr	r3, [r3, #0]
1000e55a:	6898      	ldr	r0, [r3, #8]
1000e55c:	f009 f850 	bl	10017600 <fflush>
            return ERROR_RETURN;
1000e560:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
            return ERROR_RETURN;
        }
    }
    return SUCCESS_RETURN;
}
1000e564:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e568:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return SUCCESS_RETURN;
1000e56c:	2000      	movs	r0, #0
}
1000e56e:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e572:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            print_error("Could not validate component\n");
1000e576:	4804      	ldr	r0, [pc, #16]	@ (1000e588 <validate_components+0x9c>)
1000e578:	f005 fe3a 	bl	100141f0 <printf>
1000e57c:	4806      	ldr	r0, [pc, #24]	@ (1000e598 <validate_components+0xac>)
1000e57e:	f008 fd6b 	bl	10017058 <puts>
1000e582:	e7e5      	b.n	1000e550 <validate_components+0x64>
1000e584:	20000c20 	.word	0x20000c20
1000e588:	100212e0 	.word	0x100212e0
1000e58c:	1002130c 	.word	0x1002130c
1000e590:	100212a4 	.word	0x100212a4
1000e594:	20000598 	.word	0x20000598
1000e598:	100212ec 	.word	0x100212ec

1000e59c <boot_components>:

int boot_components() {
1000e59c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Send boot command to each component
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e5a0:	4f29      	ldr	r7, [pc, #164]	@ (1000e648 <boot_components+0xac>)
1000e5a2:	687b      	ldr	r3, [r7, #4]
int boot_components() {
1000e5a4:	f5ad 7d01 	sub.w	sp, sp, #516	@ 0x204
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e5a8:	b3a3      	cbz	r3, 1000e614 <boot_components+0x78>
1000e5aa:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 1000e64c <boot_components+0xb0>
            print_error("Could not boot component\n");
            return ERROR_RETURN;
        }

        // Print boot message from component
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e5ae:	f8df 90a0 	ldr.w	r9, [pc, #160]	@ 1000e650 <boot_components+0xb4>
1000e5b2:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 1000e654 <boot_components+0xb8>
1000e5b6:	f8df a0a0 	ldr.w	sl, [pc, #160]	@ 1000e658 <boot_components+0xbc>
1000e5ba:	1d3e      	adds	r6, r7, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e5bc:	2500      	movs	r5, #0
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e5be:	f856 0f04 	ldr.w	r0, [r6, #4]!
1000e5c2:	f000 fb73 	bl	1000ecac <component_id_to_i2c_addr>
        command->opcode = COMPONENT_CMD_BOOT;
1000e5c6:	2303      	movs	r3, #3
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e5c8:	2101      	movs	r1, #1
1000e5ca:	aa40      	add	r2, sp, #256	@ 0x100
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e5cc:	4604      	mov	r4, r0
        command->opcode = COMPONENT_CMD_BOOT;
1000e5ce:	f88d 3100 	strb.w	r3, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e5d2:	f000 fb6d 	bl	1000ecb0 <send_packet>
1000e5d6:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e5d8:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e5da:	4669      	mov	r1, sp
1000e5dc:	4620      	mov	r0, r4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e5de:	f105 0501 	add.w	r5, r5, #1
    if (result == ERROR_RETURN) {
1000e5e2:	d01c      	beq.n	1000e61e <boot_components+0x82>
    int len = poll_and_receive_packet(addr, receive);
1000e5e4:	f000 fb7e 	bl	1000ece4 <poll_and_receive_packet>
1000e5e8:	4603      	mov	r3, r0
    if (len == ERROR_RETURN) {
1000e5ea:	3301      	adds	r3, #1
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e5ec:	4648      	mov	r0, r9
    if (len == ERROR_RETURN) {
1000e5ee:	d016      	beq.n	1000e61e <boot_components+0x82>
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e5f0:	f005 fdfe 	bl	100141f0 <printf>
1000e5f4:	6831      	ldr	r1, [r6, #0]
1000e5f6:	466a      	mov	r2, sp
1000e5f8:	4658      	mov	r0, fp
1000e5fa:	f005 fdf9 	bl	100141f0 <printf>
1000e5fe:	4650      	mov	r0, sl
1000e600:	f005 fdf6 	bl	100141f0 <printf>
1000e604:	f8d8 3000 	ldr.w	r3, [r8]
1000e608:	6898      	ldr	r0, [r3, #8]
1000e60a:	f008 fff9 	bl	10017600 <fflush>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e60e:	687b      	ldr	r3, [r7, #4]
1000e610:	42ab      	cmp	r3, r5
1000e612:	d8d4      	bhi.n	1000e5be <boot_components+0x22>
    }
    return SUCCESS_RETURN;
1000e614:	2000      	movs	r0, #0
}
1000e616:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e61a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            print_error("Could not boot component\n");
1000e61e:	480f      	ldr	r0, [pc, #60]	@ (1000e65c <boot_components+0xc0>)
1000e620:	f005 fde6 	bl	100141f0 <printf>
1000e624:	480e      	ldr	r0, [pc, #56]	@ (1000e660 <boot_components+0xc4>)
1000e626:	f008 fd17 	bl	10017058 <puts>
1000e62a:	480b      	ldr	r0, [pc, #44]	@ (1000e658 <boot_components+0xbc>)
1000e62c:	f005 fde0 	bl	100141f0 <printf>
1000e630:	f8d8 3000 	ldr.w	r3, [r8]
1000e634:	6898      	ldr	r0, [r3, #8]
1000e636:	f008 ffe3 	bl	10017600 <fflush>
            return ERROR_RETURN;
1000e63a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e63e:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1000e646:	bf00      	nop
1000e648:	20000c20 	.word	0x20000c20
1000e64c:	20000598 	.word	0x20000598
1000e650:	100212a8 	.word	0x100212a8
1000e654:	1002132c 	.word	0x1002132c
1000e658:	100212a4 	.word	0x100212a4
1000e65c:	100212e0 	.word	0x100212e0
1000e660:	10021338 	.word	0x10021338

1000e664 <attest_component>:

int attest_component(uint32_t component_id) {
1000e664:	b530      	push	{r4, r5, lr}
1000e666:	f5ad 7d01 	sub.w	sp, sp, #516	@ 0x204
1000e66a:	4604      	mov	r4, r0
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Set the I2C address of the component
    i2c_addr_t addr = component_id_to_i2c_addr(component_id);
1000e66c:	f000 fb1e 	bl	1000ecac <component_id_to_i2c_addr>

    // Create command message
    command_message* command = (command_message*) transmit_buffer;
    command->opcode = COMPONENT_CMD_ATTEST;
1000e670:	2304      	movs	r3, #4
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e672:	aa40      	add	r2, sp, #256	@ 0x100
1000e674:	2101      	movs	r1, #1
    i2c_addr_t addr = component_id_to_i2c_addr(component_id);
1000e676:	4605      	mov	r5, r0
    command->opcode = COMPONENT_CMD_ATTEST;
1000e678:	f88d 3100 	strb.w	r3, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e67c:	f000 fb18 	bl	1000ecb0 <send_packet>
    if (result == ERROR_RETURN) {
1000e680:	3001      	adds	r0, #1
1000e682:	d026      	beq.n	1000e6d2 <attest_component+0x6e>
    int len = poll_and_receive_packet(addr, receive);
1000e684:	4669      	mov	r1, sp
1000e686:	4628      	mov	r0, r5
1000e688:	f000 fb2c 	bl	1000ece4 <poll_and_receive_packet>
    if (len == ERROR_RETURN) {
1000e68c:	3001      	adds	r0, #1
1000e68e:	d020      	beq.n	1000e6d2 <attest_component+0x6e>
        print_error("Could not attest component\n");
        return ERROR_RETURN;
    }

    // Print out attestation data 
    print_info("C>0x%08x\n", component_id);
1000e690:	4818      	ldr	r0, [pc, #96]	@ (1000e6f4 <attest_component+0x90>)
1000e692:	f005 fdad 	bl	100141f0 <printf>
1000e696:	4621      	mov	r1, r4
1000e698:	4817      	ldr	r0, [pc, #92]	@ (1000e6f8 <attest_component+0x94>)
1000e69a:	4c18      	ldr	r4, [pc, #96]	@ (1000e6fc <attest_component+0x98>)
1000e69c:	f005 fda8 	bl	100141f0 <printf>
1000e6a0:	4817      	ldr	r0, [pc, #92]	@ (1000e700 <attest_component+0x9c>)
1000e6a2:	f005 fda5 	bl	100141f0 <printf>
1000e6a6:	6823      	ldr	r3, [r4, #0]
1000e6a8:	6898      	ldr	r0, [r3, #8]
1000e6aa:	f008 ffa9 	bl	10017600 <fflush>
    print_info("%s", receive_buffer);
1000e6ae:	4811      	ldr	r0, [pc, #68]	@ (1000e6f4 <attest_component+0x90>)
1000e6b0:	f005 fd9e 	bl	100141f0 <printf>
1000e6b4:	4669      	mov	r1, sp
1000e6b6:	4813      	ldr	r0, [pc, #76]	@ (1000e704 <attest_component+0xa0>)
1000e6b8:	f005 fd9a 	bl	100141f0 <printf>
1000e6bc:	4810      	ldr	r0, [pc, #64]	@ (1000e700 <attest_component+0x9c>)
1000e6be:	f005 fd97 	bl	100141f0 <printf>
1000e6c2:	6823      	ldr	r3, [r4, #0]
1000e6c4:	6898      	ldr	r0, [r3, #8]
1000e6c6:	f008 ff9b 	bl	10017600 <fflush>
    return SUCCESS_RETURN;
1000e6ca:	2000      	movs	r0, #0
}
1000e6cc:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e6d0:	bd30      	pop	{r4, r5, pc}
        print_error("Could not attest component\n");
1000e6d2:	480d      	ldr	r0, [pc, #52]	@ (1000e708 <attest_component+0xa4>)
1000e6d4:	f005 fd8c 	bl	100141f0 <printf>
1000e6d8:	480c      	ldr	r0, [pc, #48]	@ (1000e70c <attest_component+0xa8>)
1000e6da:	f008 fcbd 	bl	10017058 <puts>
1000e6de:	4808      	ldr	r0, [pc, #32]	@ (1000e700 <attest_component+0x9c>)
1000e6e0:	f005 fd86 	bl	100141f0 <printf>
1000e6e4:	4b05      	ldr	r3, [pc, #20]	@ (1000e6fc <attest_component+0x98>)
1000e6e6:	681b      	ldr	r3, [r3, #0]
1000e6e8:	6898      	ldr	r0, [r3, #8]
1000e6ea:	f008 ff89 	bl	10017600 <fflush>
        return ERROR_RETURN;
1000e6ee:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e6f2:	e7eb      	b.n	1000e6cc <attest_component+0x68>
1000e6f4:	100212a8 	.word	0x100212a8
1000e6f8:	10021354 	.word	0x10021354
1000e6fc:	20000598 	.word	0x20000598
1000e700:	100212a4 	.word	0x100212a4
1000e704:	10021360 	.word	0x10021360
1000e708:	100212e0 	.word	0x100212e0
1000e70c:	10021364 	.word	0x10021364

1000e710 <attempt_attest.part.0>:
    print_error("Component 0x%08x is not provisioned for the system\r\n",
            component_id_out);
}

// Attest a component if the PIN is correct
void attempt_attest() {
1000e710:	b500      	push	{lr}
1000e712:	b08f      	sub	sp, #60	@ 0x3c

    if (validate_pin()) {
        return;
    }
    uint32_t component_id;
    recv_input("Component ID: ", buf);
1000e714:	4810      	ldr	r0, [pc, #64]	@ (1000e758 <attempt_attest.part.0+0x48>)
1000e716:	a901      	add	r1, sp, #4
1000e718:	f000 fb0c 	bl	1000ed34 <recv_input>
    sscanf(buf, "%x", &component_id);
1000e71c:	490f      	ldr	r1, [pc, #60]	@ (1000e75c <attempt_attest.part.0+0x4c>)
1000e71e:	466a      	mov	r2, sp
1000e720:	a801      	add	r0, sp, #4
1000e722:	f008 ffa7 	bl	10017674 <sscanf>
    if (attest_component(component_id) == SUCCESS_RETURN) {
1000e726:	9800      	ldr	r0, [sp, #0]
1000e728:	f7ff ff9c 	bl	1000e664 <attest_component>
1000e72c:	b110      	cbz	r0, 1000e734 <attempt_attest.part.0+0x24>
        print_success("Attest\n");
    }
}
1000e72e:	b00f      	add	sp, #60	@ 0x3c
1000e730:	f85d fb04 	ldr.w	pc, [sp], #4
        print_success("Attest\n");
1000e734:	480a      	ldr	r0, [pc, #40]	@ (1000e760 <attempt_attest.part.0+0x50>)
1000e736:	f005 fd5b 	bl	100141f0 <printf>
1000e73a:	480a      	ldr	r0, [pc, #40]	@ (1000e764 <attempt_attest.part.0+0x54>)
1000e73c:	f008 fc8c 	bl	10017058 <puts>
1000e740:	4809      	ldr	r0, [pc, #36]	@ (1000e768 <attempt_attest.part.0+0x58>)
1000e742:	f005 fd55 	bl	100141f0 <printf>
1000e746:	4b09      	ldr	r3, [pc, #36]	@ (1000e76c <attempt_attest.part.0+0x5c>)
1000e748:	681b      	ldr	r3, [r3, #0]
1000e74a:	6898      	ldr	r0, [r3, #8]
1000e74c:	f008 ff58 	bl	10017600 <fflush>
}
1000e750:	b00f      	add	sp, #60	@ 0x3c
1000e752:	f85d fb04 	ldr.w	pc, [sp], #4
1000e756:	bf00      	nop
1000e758:	10021380 	.word	0x10021380
1000e75c:	10021390 	.word	0x10021390
1000e760:	100212cc 	.word	0x100212cc
1000e764:	10021394 	.word	0x10021394
1000e768:	100212a4 	.word	0x100212a4
1000e76c:	20000598 	.word	0x20000598

1000e770 <boot>:
void boot() {
1000e770:	b510      	push	{r4, lr}
    bzero(key, BLOCK_SIZE);
1000e772:	2000      	movs	r0, #0
void boot() {
1000e774:	b090      	sub	sp, #64	@ 0x40
    encrypt_sym((uint8_t*)data, BLOCK_SIZE, key, ciphertext); 
1000e776:	aa04      	add	r2, sp, #16
1000e778:	2110      	movs	r1, #16
1000e77a:	466b      	mov	r3, sp
    bzero(key, BLOCK_SIZE);
1000e77c:	e9cd 0004 	strd	r0, r0, [sp, #16]
1000e780:	e9cd 0006 	strd	r0, r0, [sp, #24]
    encrypt_sym((uint8_t*)data, BLOCK_SIZE, key, ciphertext); 
1000e784:	483c      	ldr	r0, [pc, #240]	@ (1000e878 <boot+0x108>)
    print_debug("Encrypted data: ");
1000e786:	4c3d      	ldr	r4, [pc, #244]	@ (1000e87c <boot+0x10c>)
    encrypt_sym((uint8_t*)data, BLOCK_SIZE, key, ciphertext); 
1000e788:	f000 fb1a 	bl	1000edc0 <encrypt_sym>
    print_debug("Encrypted data: ");
1000e78c:	483c      	ldr	r0, [pc, #240]	@ (1000e880 <boot+0x110>)
1000e78e:	f005 fd2f 	bl	100141f0 <printf>
1000e792:	483c      	ldr	r0, [pc, #240]	@ (1000e884 <boot+0x114>)
1000e794:	f005 fd2c 	bl	100141f0 <printf>
1000e798:	483b      	ldr	r0, [pc, #236]	@ (1000e888 <boot+0x118>)
1000e79a:	f005 fd29 	bl	100141f0 <printf>
1000e79e:	6823      	ldr	r3, [r4, #0]
1000e7a0:	6898      	ldr	r0, [r3, #8]
1000e7a2:	f008 ff2d 	bl	10017600 <fflush>
    print_hex_debug(ciphertext, BLOCK_SIZE);
1000e7a6:	4836      	ldr	r0, [pc, #216]	@ (1000e880 <boot+0x110>)
1000e7a8:	f005 fd22 	bl	100141f0 <printf>
1000e7ac:	2110      	movs	r1, #16
1000e7ae:	4668      	mov	r0, sp
1000e7b0:	f000 faee 	bl	1000ed90 <print_hex>
1000e7b4:	4834      	ldr	r0, [pc, #208]	@ (1000e888 <boot+0x118>)
1000e7b6:	f005 fd1b 	bl	100141f0 <printf>
1000e7ba:	6823      	ldr	r3, [r4, #0]
1000e7bc:	6898      	ldr	r0, [r3, #8]
1000e7be:	f008 ff1f 	bl	10017600 <fflush>
    hash(ciphertext, BLOCK_SIZE, hash_out);
1000e7c2:	aa08      	add	r2, sp, #32
1000e7c4:	2110      	movs	r1, #16
1000e7c6:	4668      	mov	r0, sp
1000e7c8:	f000 fb50 	bl	1000ee6c <hash>
    print_debug("Hash result: ");
1000e7cc:	482c      	ldr	r0, [pc, #176]	@ (1000e880 <boot+0x110>)
1000e7ce:	f005 fd0f 	bl	100141f0 <printf>
1000e7d2:	482e      	ldr	r0, [pc, #184]	@ (1000e88c <boot+0x11c>)
1000e7d4:	f005 fd0c 	bl	100141f0 <printf>
1000e7d8:	482b      	ldr	r0, [pc, #172]	@ (1000e888 <boot+0x118>)
1000e7da:	f005 fd09 	bl	100141f0 <printf>
1000e7de:	6823      	ldr	r3, [r4, #0]
1000e7e0:	6898      	ldr	r0, [r3, #8]
1000e7e2:	f008 ff0d 	bl	10017600 <fflush>
    print_hex_debug(hash_out, HASH_SIZE);
1000e7e6:	4826      	ldr	r0, [pc, #152]	@ (1000e880 <boot+0x110>)
1000e7e8:	f005 fd02 	bl	100141f0 <printf>
1000e7ec:	2110      	movs	r1, #16
1000e7ee:	a808      	add	r0, sp, #32
1000e7f0:	f000 face 	bl	1000ed90 <print_hex>
1000e7f4:	4824      	ldr	r0, [pc, #144]	@ (1000e888 <boot+0x118>)
1000e7f6:	f005 fcfb 	bl	100141f0 <printf>
1000e7fa:	6823      	ldr	r3, [r4, #0]
1000e7fc:	6898      	ldr	r0, [r3, #8]
1000e7fe:	f008 feff 	bl	10017600 <fflush>
    decrypt_sym(ciphertext, BLOCK_SIZE, key, decrypted);
1000e802:	ab0c      	add	r3, sp, #48	@ 0x30
1000e804:	aa04      	add	r2, sp, #16
1000e806:	2110      	movs	r1, #16
1000e808:	4668      	mov	r0, sp
1000e80a:	f000 fb03 	bl	1000ee14 <decrypt_sym>
    print_debug("Decrypted message: %s\r\n", decrypted);
1000e80e:	481c      	ldr	r0, [pc, #112]	@ (1000e880 <boot+0x110>)
1000e810:	f005 fcee 	bl	100141f0 <printf>
1000e814:	a90c      	add	r1, sp, #48	@ 0x30
1000e816:	481e      	ldr	r0, [pc, #120]	@ (1000e890 <boot+0x120>)
1000e818:	f005 fcea 	bl	100141f0 <printf>
1000e81c:	481a      	ldr	r0, [pc, #104]	@ (1000e888 <boot+0x118>)
1000e81e:	f005 fce7 	bl	100141f0 <printf>
1000e822:	6823      	ldr	r3, [r4, #0]
        MXC_Delay(500000);
1000e824:	4c1b      	ldr	r4, [pc, #108]	@ (1000e894 <boot+0x124>)
    print_debug("Decrypted message: %s\r\n", decrypted);
1000e826:	6898      	ldr	r0, [r3, #8]
1000e828:	f008 feea 	bl	10017600 <fflush>
        LED_On(LED1);
1000e82c:	2000      	movs	r0, #0
1000e82e:	f003 fa49 	bl	10011cc4 <LED_On>
        MXC_Delay(500000);
1000e832:	4620      	mov	r0, r4
1000e834:	f003 fc64 	bl	10012100 <MXC_Delay>
        LED_On(LED2);
1000e838:	2001      	movs	r0, #1
1000e83a:	f003 fa43 	bl	10011cc4 <LED_On>
        MXC_Delay(500000);
1000e83e:	4620      	mov	r0, r4
1000e840:	f003 fc5e 	bl	10012100 <MXC_Delay>
        LED_On(LED3);
1000e844:	2002      	movs	r0, #2
1000e846:	f003 fa3d 	bl	10011cc4 <LED_On>
        MXC_Delay(500000);
1000e84a:	4620      	mov	r0, r4
1000e84c:	f003 fc58 	bl	10012100 <MXC_Delay>
        LED_Off(LED1);
1000e850:	2000      	movs	r0, #0
1000e852:	f003 fa57 	bl	10011d04 <LED_Off>
        MXC_Delay(500000);
1000e856:	4620      	mov	r0, r4
1000e858:	f003 fc52 	bl	10012100 <MXC_Delay>
        LED_Off(LED2);
1000e85c:	2001      	movs	r0, #1
1000e85e:	f003 fa51 	bl	10011d04 <LED_Off>
        MXC_Delay(500000);
1000e862:	4620      	mov	r0, r4
1000e864:	f003 fc4c 	bl	10012100 <MXC_Delay>
        LED_Off(LED3);
1000e868:	2002      	movs	r0, #2
1000e86a:	f003 fa4b 	bl	10011d04 <LED_Off>
        MXC_Delay(500000);
1000e86e:	4620      	mov	r0, r4
1000e870:	f003 fc46 	bl	10012100 <MXC_Delay>
    while (1) {
1000e874:	e7da      	b.n	1000e82c <boot+0xbc>
1000e876:	bf00      	nop
1000e878:	1002139c 	.word	0x1002139c
1000e87c:	20000598 	.word	0x20000598
1000e880:	1002127c 	.word	0x1002127c
1000e884:	100213ac 	.word	0x100213ac
1000e888:	100212a4 	.word	0x100212a4
1000e88c:	100213c0 	.word	0x100213c0
1000e890:	100213d0 	.word	0x100213d0
1000e894:	0007a120 	.word	0x0007a120

1000e898 <attempt_boot.part.0>:
void attempt_boot() {
1000e898:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    print_debug("All Components validated\n");
1000e89c:	482e      	ldr	r0, [pc, #184]	@ (1000e958 <attempt_boot.part.0+0xc0>)
1000e89e:	4d2f      	ldr	r5, [pc, #188]	@ (1000e95c <attempt_boot.part.0+0xc4>)
void attempt_boot() {
1000e8a0:	b08a      	sub	sp, #40	@ 0x28
    print_debug("All Components validated\n");
1000e8a2:	f005 fca5 	bl	100141f0 <printf>
1000e8a6:	482e      	ldr	r0, [pc, #184]	@ (1000e960 <attempt_boot.part.0+0xc8>)
1000e8a8:	f008 fbd6 	bl	10017058 <puts>
1000e8ac:	482d      	ldr	r0, [pc, #180]	@ (1000e964 <attempt_boot.part.0+0xcc>)
1000e8ae:	f005 fc9f 	bl	100141f0 <printf>
1000e8b2:	682b      	ldr	r3, [r5, #0]
1000e8b4:	6898      	ldr	r0, [r3, #8]
1000e8b6:	f008 fea3 	bl	10017600 <fflush>
    if (boot_components()) {
1000e8ba:	f7ff fe6f 	bl	1000e59c <boot_components>
1000e8be:	b178      	cbz	r0, 1000e8e0 <attempt_boot.part.0+0x48>
        print_error("Failed to boot all components\n");
1000e8c0:	4829      	ldr	r0, [pc, #164]	@ (1000e968 <attempt_boot.part.0+0xd0>)
1000e8c2:	f005 fc95 	bl	100141f0 <printf>
1000e8c6:	4829      	ldr	r0, [pc, #164]	@ (1000e96c <attempt_boot.part.0+0xd4>)
1000e8c8:	f008 fbc6 	bl	10017058 <puts>
1000e8cc:	4825      	ldr	r0, [pc, #148]	@ (1000e964 <attempt_boot.part.0+0xcc>)
1000e8ce:	f005 fc8f 	bl	100141f0 <printf>
1000e8d2:	682b      	ldr	r3, [r5, #0]
1000e8d4:	6898      	ldr	r0, [r3, #8]
}
1000e8d6:	b00a      	add	sp, #40	@ 0x28
1000e8d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        print_error("Failed to boot all components\n");
1000e8dc:	f008 be90 	b.w	10017600 <fflush>
1000e8e0:	4604      	mov	r4, r0
1000e8e2:	f8df 808c 	ldr.w	r8, [pc, #140]	@ 1000e970 <attempt_boot.part.0+0xd8>
1000e8e6:	4f23      	ldr	r7, [pc, #140]	@ (1000e974 <attempt_boot.part.0+0xdc>)
    for (int i = 0; aseiFuengleR[i]; i++) {
1000e8e8:	4823      	ldr	r0, [pc, #140]	@ (1000e978 <attempt_boot.part.0+0xe0>)
1000e8ea:	466e      	mov	r6, sp
        flag[i] = deobfuscate(aseiFuengleR[i], djFIehjkklIH[i]);
1000e8ec:	f858 1b04 	ldr.w	r1, [r8], #4
1000e8f0:	f7ff fcd0 	bl	1000e294 <deobfuscate>
1000e8f4:	7030      	strb	r0, [r6, #0]
    for (int i = 0; aseiFuengleR[i]; i++) {
1000e8f6:	f857 0f04 	ldr.w	r0, [r7, #4]!
        flag[i+1] = 0;
1000e8fa:	f806 4f01 	strb.w	r4, [r6, #1]!
    for (int i = 0; aseiFuengleR[i]; i++) {
1000e8fe:	2800      	cmp	r0, #0
1000e900:	d1f4      	bne.n	1000e8ec <attempt_boot.part.0+0x54>
    print_debug("%s\n", flag);
1000e902:	4815      	ldr	r0, [pc, #84]	@ (1000e958 <attempt_boot.part.0+0xc0>)
1000e904:	f005 fc74 	bl	100141f0 <printf>
1000e908:	4668      	mov	r0, sp
1000e90a:	f008 fba5 	bl	10017058 <puts>
1000e90e:	4815      	ldr	r0, [pc, #84]	@ (1000e964 <attempt_boot.part.0+0xcc>)
1000e910:	f005 fc6e 	bl	100141f0 <printf>
1000e914:	682b      	ldr	r3, [r5, #0]
1000e916:	6898      	ldr	r0, [r3, #8]
1000e918:	f008 fe72 	bl	10017600 <fflush>
    print_info("AP>%s\n", AP_BOOT_MSG);
1000e91c:	4817      	ldr	r0, [pc, #92]	@ (1000e97c <attempt_boot.part.0+0xe4>)
1000e91e:	f005 fc67 	bl	100141f0 <printf>
1000e922:	4917      	ldr	r1, [pc, #92]	@ (1000e980 <attempt_boot.part.0+0xe8>)
1000e924:	4817      	ldr	r0, [pc, #92]	@ (1000e984 <attempt_boot.part.0+0xec>)
1000e926:	f005 fc63 	bl	100141f0 <printf>
1000e92a:	480e      	ldr	r0, [pc, #56]	@ (1000e964 <attempt_boot.part.0+0xcc>)
1000e92c:	f005 fc60 	bl	100141f0 <printf>
1000e930:	682b      	ldr	r3, [r5, #0]
1000e932:	6898      	ldr	r0, [r3, #8]
1000e934:	f008 fe64 	bl	10017600 <fflush>
    print_success("Boot\n");
1000e938:	4813      	ldr	r0, [pc, #76]	@ (1000e988 <attempt_boot.part.0+0xf0>)
1000e93a:	f005 fc59 	bl	100141f0 <printf>
1000e93e:	4813      	ldr	r0, [pc, #76]	@ (1000e98c <attempt_boot.part.0+0xf4>)
1000e940:	f008 fb8a 	bl	10017058 <puts>
1000e944:	4807      	ldr	r0, [pc, #28]	@ (1000e964 <attempt_boot.part.0+0xcc>)
1000e946:	f005 fc53 	bl	100141f0 <printf>
1000e94a:	682b      	ldr	r3, [r5, #0]
1000e94c:	6898      	ldr	r0, [r3, #8]
1000e94e:	f008 fe57 	bl	10017600 <fflush>
    boot();
1000e952:	f7ff ff0d 	bl	1000e770 <boot>
1000e956:	bf00      	nop
1000e958:	1002127c 	.word	0x1002127c
1000e95c:	20000598 	.word	0x20000598
1000e960:	100213e8 	.word	0x100213e8
1000e964:	100212a4 	.word	0x100212a4
1000e968:	100212e0 	.word	0x100212e0
1000e96c:	10021404 	.word	0x10021404
1000e970:	100215cc 	.word	0x100215cc
1000e974:	10021660 	.word	0x10021660
1000e978:	01ffe4b6 	.word	0x01ffe4b6
1000e97c:	100212a8 	.word	0x100212a8
1000e980:	10021424 	.word	0x10021424
1000e984:	1002142c 	.word	0x1002142c
1000e988:	100212cc 	.word	0x100212cc
1000e98c:	10021434 	.word	0x10021434

1000e990 <validate_pin>:
int validate_pin() {
1000e990:	b510      	push	{r4, lr}
1000e992:	b08e      	sub	sp, #56	@ 0x38
    recv_input("Enter pin: ", buf);
1000e994:	4819      	ldr	r0, [pc, #100]	@ (1000e9fc <validate_pin+0x6c>)
1000e996:	a901      	add	r1, sp, #4
1000e998:	f000 f9cc 	bl	1000ed34 <recv_input>
    if (!strcmp(buf, AP_PIN)) {
1000e99c:	4b18      	ldr	r3, [pc, #96]	@ (1000ea00 <validate_pin+0x70>)
1000e99e:	9a01      	ldr	r2, [sp, #4]
1000e9a0:	429a      	cmp	r2, r3
1000e9a2:	d012      	beq.n	1000e9ca <validate_pin+0x3a>
    print_error("Invalid PIN!\n");
1000e9a4:	4817      	ldr	r0, [pc, #92]	@ (1000ea04 <validate_pin+0x74>)
1000e9a6:	f005 fc23 	bl	100141f0 <printf>
1000e9aa:	4817      	ldr	r0, [pc, #92]	@ (1000ea08 <validate_pin+0x78>)
1000e9ac:	f008 fb54 	bl	10017058 <puts>
1000e9b0:	4816      	ldr	r0, [pc, #88]	@ (1000ea0c <validate_pin+0x7c>)
1000e9b2:	f005 fc1d 	bl	100141f0 <printf>
1000e9b6:	4b16      	ldr	r3, [pc, #88]	@ (1000ea10 <validate_pin+0x80>)
1000e9b8:	681b      	ldr	r3, [r3, #0]
1000e9ba:	6898      	ldr	r0, [r3, #8]
1000e9bc:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
1000e9c0:	f008 fe1e 	bl	10017600 <fflush>
}
1000e9c4:	4620      	mov	r0, r4
1000e9c6:	b00e      	add	sp, #56	@ 0x38
1000e9c8:	bd10      	pop	{r4, pc}
    if (!strcmp(buf, AP_PIN)) {
1000e9ca:	f8bd 2008 	ldrh.w	r2, [sp, #8]
1000e9ce:	f243 6335 	movw	r3, #13877	@ 0x3635
1000e9d2:	429a      	cmp	r2, r3
1000e9d4:	d1e6      	bne.n	1000e9a4 <validate_pin+0x14>
1000e9d6:	f89d 400a 	ldrb.w	r4, [sp, #10]
1000e9da:	2c00      	cmp	r4, #0
1000e9dc:	d1e2      	bne.n	1000e9a4 <validate_pin+0x14>
        print_debug("Pin Accepted!\n");
1000e9de:	480d      	ldr	r0, [pc, #52]	@ (1000ea14 <validate_pin+0x84>)
1000e9e0:	f005 fc06 	bl	100141f0 <printf>
1000e9e4:	480c      	ldr	r0, [pc, #48]	@ (1000ea18 <validate_pin+0x88>)
1000e9e6:	f008 fb37 	bl	10017058 <puts>
1000e9ea:	4808      	ldr	r0, [pc, #32]	@ (1000ea0c <validate_pin+0x7c>)
1000e9ec:	f005 fc00 	bl	100141f0 <printf>
1000e9f0:	4b07      	ldr	r3, [pc, #28]	@ (1000ea10 <validate_pin+0x80>)
1000e9f2:	681b      	ldr	r3, [r3, #0]
1000e9f4:	6898      	ldr	r0, [r3, #8]
1000e9f6:	f008 fe03 	bl	10017600 <fflush>
        return SUCCESS_RETURN;
1000e9fa:	e7e3      	b.n	1000e9c4 <validate_pin+0x34>
1000e9fc:	1002143c 	.word	0x1002143c
1000ea00:	34333231 	.word	0x34333231
1000ea04:	100212e0 	.word	0x100212e0
1000ea08:	10021460 	.word	0x10021460
1000ea0c:	100212a4 	.word	0x100212a4
1000ea10:	20000598 	.word	0x20000598
1000ea14:	1002127c 	.word	0x1002127c
1000ea18:	10021450 	.word	0x10021450

1000ea1c <validate_token>:
int validate_token() {
1000ea1c:	b510      	push	{r4, lr}
1000ea1e:	b08e      	sub	sp, #56	@ 0x38
    recv_input("Enter token: ", buf);
1000ea20:	4815      	ldr	r0, [pc, #84]	@ (1000ea78 <validate_token+0x5c>)
1000ea22:	a901      	add	r1, sp, #4
1000ea24:	f000 f986 	bl	1000ed34 <recv_input>
    if (!strcmp(buf, AP_TOKEN)) {
1000ea28:	4914      	ldr	r1, [pc, #80]	@ (1000ea7c <validate_token+0x60>)
1000ea2a:	a801      	add	r0, sp, #4
1000ea2c:	f009 fbc8 	bl	100181c0 <strcmp>
1000ea30:	b988      	cbnz	r0, 1000ea56 <validate_token+0x3a>
        print_debug("Token Accepted!\n");
1000ea32:	4604      	mov	r4, r0
1000ea34:	4812      	ldr	r0, [pc, #72]	@ (1000ea80 <validate_token+0x64>)
1000ea36:	f005 fbdb 	bl	100141f0 <printf>
1000ea3a:	4812      	ldr	r0, [pc, #72]	@ (1000ea84 <validate_token+0x68>)
1000ea3c:	f008 fb0c 	bl	10017058 <puts>
1000ea40:	4811      	ldr	r0, [pc, #68]	@ (1000ea88 <validate_token+0x6c>)
1000ea42:	f005 fbd5 	bl	100141f0 <printf>
1000ea46:	4b11      	ldr	r3, [pc, #68]	@ (1000ea8c <validate_token+0x70>)
1000ea48:	681b      	ldr	r3, [r3, #0]
1000ea4a:	6898      	ldr	r0, [r3, #8]
1000ea4c:	f008 fdd8 	bl	10017600 <fflush>
}
1000ea50:	4620      	mov	r0, r4
1000ea52:	b00e      	add	sp, #56	@ 0x38
1000ea54:	bd10      	pop	{r4, pc}
    print_error("Invalid Token!\n");
1000ea56:	480e      	ldr	r0, [pc, #56]	@ (1000ea90 <validate_token+0x74>)
1000ea58:	f005 fbca 	bl	100141f0 <printf>
1000ea5c:	480d      	ldr	r0, [pc, #52]	@ (1000ea94 <validate_token+0x78>)
1000ea5e:	f008 fafb 	bl	10017058 <puts>
1000ea62:	4809      	ldr	r0, [pc, #36]	@ (1000ea88 <validate_token+0x6c>)
1000ea64:	f005 fbc4 	bl	100141f0 <printf>
1000ea68:	4b08      	ldr	r3, [pc, #32]	@ (1000ea8c <validate_token+0x70>)
1000ea6a:	681b      	ldr	r3, [r3, #0]
1000ea6c:	6898      	ldr	r0, [r3, #8]
1000ea6e:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
1000ea72:	f008 fdc5 	bl	10017600 <fflush>
    return ERROR_RETURN;
1000ea76:	e7eb      	b.n	1000ea50 <validate_token+0x34>
1000ea78:	10021470 	.word	0x10021470
1000ea7c:	10021480 	.word	0x10021480
1000ea80:	1002127c 	.word	0x1002127c
1000ea84:	10021494 	.word	0x10021494
1000ea88:	100212a4 	.word	0x100212a4
1000ea8c:	20000598 	.word	0x20000598
1000ea90:	100212e0 	.word	0x100212e0
1000ea94:	100214a4 	.word	0x100214a4

1000ea98 <attempt_replace>:
void attempt_replace() {
1000ea98:	b570      	push	{r4, r5, r6, lr}
1000ea9a:	b090      	sub	sp, #64	@ 0x40
    if (validate_token()) {
1000ea9c:	f7ff ffbe 	bl	1000ea1c <validate_token>
1000eaa0:	b108      	cbz	r0, 1000eaa6 <attempt_replace+0xe>
}
1000eaa2:	b010      	add	sp, #64	@ 0x40
1000eaa4:	bd70      	pop	{r4, r5, r6, pc}
    uint32_t component_id_in = 0;
1000eaa6:	4604      	mov	r4, r0
    recv_input("Component ID In: ", buf);
1000eaa8:	a903      	add	r1, sp, #12
1000eaaa:	482f      	ldr	r0, [pc, #188]	@ (1000eb68 <attempt_replace+0xd0>)
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000eaac:	4e2f      	ldr	r6, [pc, #188]	@ (1000eb6c <attempt_replace+0xd4>)
    uint32_t component_id_out = 0;
1000eaae:	e9cd 4401 	strd	r4, r4, [sp, #4]
    recv_input("Component ID In: ", buf);
1000eab2:	f000 f93f 	bl	1000ed34 <recv_input>
    sscanf(buf, "%x", &component_id_in);
1000eab6:	aa01      	add	r2, sp, #4
1000eab8:	492d      	ldr	r1, [pc, #180]	@ (1000eb70 <attempt_replace+0xd8>)
1000eaba:	a803      	add	r0, sp, #12
1000eabc:	f008 fdda 	bl	10017674 <sscanf>
    recv_input("Component ID Out: ", buf);
1000eac0:	482c      	ldr	r0, [pc, #176]	@ (1000eb74 <attempt_replace+0xdc>)
1000eac2:	a903      	add	r1, sp, #12
1000eac4:	f000 f936 	bl	1000ed34 <recv_input>
    sscanf(buf, "%x", &component_id_out);
1000eac8:	4929      	ldr	r1, [pc, #164]	@ (1000eb70 <attempt_replace+0xd8>)
1000eaca:	aa02      	add	r2, sp, #8
1000eacc:	a803      	add	r0, sp, #12
1000eace:	f008 fdd1 	bl	10017674 <sscanf>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000ead2:	6871      	ldr	r1, [r6, #4]
1000ead4:	2900      	cmp	r1, #0
1000ead6:	d035      	beq.n	1000eb44 <attempt_replace+0xac>
        if (flash_status.component_ids[i] == component_id_out) {
1000ead8:	9d02      	ldr	r5, [sp, #8]
1000eada:	1d33      	adds	r3, r6, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000eadc:	4620      	mov	r0, r4
1000eade:	e002      	b.n	1000eae6 <attempt_replace+0x4e>
1000eae0:	3001      	adds	r0, #1
1000eae2:	4288      	cmp	r0, r1
1000eae4:	d02e      	beq.n	1000eb44 <attempt_replace+0xac>
        if (flash_status.component_ids[i] == component_id_out) {
1000eae6:	f853 2f04 	ldr.w	r2, [r3, #4]!
1000eaea:	42aa      	cmp	r2, r5
1000eaec:	d1f8      	bne.n	1000eae0 <attempt_replace+0x48>
            flash_status.component_ids[i] = component_id_in;
1000eaee:	1c83      	adds	r3, r0, #2
1000eaf0:	9a01      	ldr	r2, [sp, #4]
            flash_simple_erase_page(FLASH_ADDR);
1000eaf2:	4821      	ldr	r0, [pc, #132]	@ (1000eb78 <attempt_replace+0xe0>)
            flash_status.component_ids[i] = component_id_in;
1000eaf4:	f846 2023 	str.w	r2, [r6, r3, lsl #2]
            flash_simple_erase_page(FLASH_ADDR);
1000eaf8:	f000 f9ea 	bl	1000eed0 <flash_simple_erase_page>
            flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000eafc:	491b      	ldr	r1, [pc, #108]	@ (1000eb6c <attempt_replace+0xd4>)
1000eafe:	481e      	ldr	r0, [pc, #120]	@ (1000eb78 <attempt_replace+0xe0>)
            print_debug("Replaced 0x%08x with 0x%08x\n", component_id_out,
1000eb00:	4c1e      	ldr	r4, [pc, #120]	@ (1000eb7c <attempt_replace+0xe4>)
            flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000eb02:	2288      	movs	r2, #136	@ 0x88
1000eb04:	f000 f9e8 	bl	1000eed8 <flash_simple_write>
            print_debug("Replaced 0x%08x with 0x%08x\n", component_id_out,
1000eb08:	481d      	ldr	r0, [pc, #116]	@ (1000eb80 <attempt_replace+0xe8>)
1000eb0a:	f005 fb71 	bl	100141f0 <printf>
1000eb0e:	e9dd 2101 	ldrd	r2, r1, [sp, #4]
1000eb12:	481c      	ldr	r0, [pc, #112]	@ (1000eb84 <attempt_replace+0xec>)
1000eb14:	f005 fb6c 	bl	100141f0 <printf>
1000eb18:	481b      	ldr	r0, [pc, #108]	@ (1000eb88 <attempt_replace+0xf0>)
1000eb1a:	f005 fb69 	bl	100141f0 <printf>
1000eb1e:	6823      	ldr	r3, [r4, #0]
1000eb20:	6898      	ldr	r0, [r3, #8]
1000eb22:	f008 fd6d 	bl	10017600 <fflush>
            print_success("Replace\n");
1000eb26:	4819      	ldr	r0, [pc, #100]	@ (1000eb8c <attempt_replace+0xf4>)
1000eb28:	f005 fb62 	bl	100141f0 <printf>
1000eb2c:	4818      	ldr	r0, [pc, #96]	@ (1000eb90 <attempt_replace+0xf8>)
1000eb2e:	f008 fa93 	bl	10017058 <puts>
1000eb32:	4815      	ldr	r0, [pc, #84]	@ (1000eb88 <attempt_replace+0xf0>)
1000eb34:	f005 fb5c 	bl	100141f0 <printf>
1000eb38:	6823      	ldr	r3, [r4, #0]
1000eb3a:	6898      	ldr	r0, [r3, #8]
1000eb3c:	f008 fd60 	bl	10017600 <fflush>
}
1000eb40:	b010      	add	sp, #64	@ 0x40
1000eb42:	bd70      	pop	{r4, r5, r6, pc}
    print_error("Component 0x%08x is not provisioned for the system\r\n",
1000eb44:	4813      	ldr	r0, [pc, #76]	@ (1000eb94 <attempt_replace+0xfc>)
1000eb46:	f005 fb53 	bl	100141f0 <printf>
1000eb4a:	9902      	ldr	r1, [sp, #8]
1000eb4c:	4812      	ldr	r0, [pc, #72]	@ (1000eb98 <attempt_replace+0x100>)
1000eb4e:	f005 fb4f 	bl	100141f0 <printf>
1000eb52:	480d      	ldr	r0, [pc, #52]	@ (1000eb88 <attempt_replace+0xf0>)
1000eb54:	f005 fb4c 	bl	100141f0 <printf>
1000eb58:	4b08      	ldr	r3, [pc, #32]	@ (1000eb7c <attempt_replace+0xe4>)
1000eb5a:	681b      	ldr	r3, [r3, #0]
1000eb5c:	6898      	ldr	r0, [r3, #8]
1000eb5e:	f008 fd4f 	bl	10017600 <fflush>
}
1000eb62:	b010      	add	sp, #64	@ 0x40
1000eb64:	bd70      	pop	{r4, r5, r6, pc}
1000eb66:	bf00      	nop
1000eb68:	100214d8 	.word	0x100214d8
1000eb6c:	20000c20 	.word	0x20000c20
1000eb70:	10021390 	.word	0x10021390
1000eb74:	100214ec 	.word	0x100214ec
1000eb78:	1007c000 	.word	0x1007c000
1000eb7c:	20000598 	.word	0x20000598
1000eb80:	1002127c 	.word	0x1002127c
1000eb84:	10021500 	.word	0x10021500
1000eb88:	100212a4 	.word	0x100212a4
1000eb8c:	100212cc 	.word	0x100212cc
1000eb90:	10021520 	.word	0x10021520
1000eb94:	100212e0 	.word	0x100212e0
1000eb98:	10021528 	.word	0x10021528

1000eb9c <main>:

/*********************************** MAIN *************************************/

int main() {
1000eb9c:	b580      	push	{r7, lr}
1000eb9e:	b09a      	sub	sp, #104	@ 0x68
    // Initialize board
    init();
1000eba0:	f7ff fbda 	bl	1000e358 <init>

    // Print the component IDs to be helpful
    // Your design does not need to do this
    print_info("Application Processor Started\n");
1000eba4:	4833      	ldr	r0, [pc, #204]	@ (1000ec74 <main+0xd8>)
1000eba6:	f8df 90d0 	ldr.w	r9, [pc, #208]	@ 1000ec78 <main+0xdc>

    // Handle commands forever
    char buf[100];
    while (1) {
        recv_input("Enter Command: ", buf);
1000ebaa:	4d34      	ldr	r5, [pc, #208]	@ (1000ec7c <main+0xe0>)

        // Execute requested command
        if (!strcmp(buf, "list")) {
1000ebac:	4c34      	ldr	r4, [pc, #208]	@ (1000ec80 <main+0xe4>)
            scan_components();
        } else if (!strcmp(buf, "boot")) {
1000ebae:	4e35      	ldr	r6, [pc, #212]	@ (1000ec84 <main+0xe8>)
            attempt_boot();
        } else if (!strcmp(buf, "replace")) {
1000ebb0:	4f35      	ldr	r7, [pc, #212]	@ (1000ec88 <main+0xec>)
            attempt_replace();
        } else if (!strcmp(buf, "attest")) {
1000ebb2:	f8df 80d8 	ldr.w	r8, [pc, #216]	@ 1000ec8c <main+0xf0>
        } else if (!strcmp(buf, "replace")) {
1000ebb6:	f8df a0d8 	ldr.w	sl, [pc, #216]	@ 1000ec90 <main+0xf4>
    print_info("Application Processor Started\n");
1000ebba:	f005 fb19 	bl	100141f0 <printf>
1000ebbe:	4835      	ldr	r0, [pc, #212]	@ (1000ec94 <main+0xf8>)
1000ebc0:	f008 fa4a 	bl	10017058 <puts>
1000ebc4:	4834      	ldr	r0, [pc, #208]	@ (1000ec98 <main+0xfc>)
1000ebc6:	f005 fb13 	bl	100141f0 <printf>
1000ebca:	f8d9 3000 	ldr.w	r3, [r9]
1000ebce:	6898      	ldr	r0, [r3, #8]
1000ebd0:	f008 fd16 	bl	10017600 <fflush>
        recv_input("Enter Command: ", buf);
1000ebd4:	a901      	add	r1, sp, #4
1000ebd6:	4628      	mov	r0, r5
1000ebd8:	f000 f8ac 	bl	1000ed34 <recv_input>
        if (!strcmp(buf, "list")) {
1000ebdc:	9b01      	ldr	r3, [sp, #4]
1000ebde:	42a3      	cmp	r3, r4
1000ebe0:	d018      	beq.n	1000ec14 <main+0x78>
        } else if (!strcmp(buf, "boot")) {
1000ebe2:	9b01      	ldr	r3, [sp, #4]
1000ebe4:	42b3      	cmp	r3, r6
1000ebe6:	d01c      	beq.n	1000ec22 <main+0x86>
        } else if (!strcmp(buf, "replace")) {
1000ebe8:	9b01      	ldr	r3, [sp, #4]
1000ebea:	42bb      	cmp	r3, r7
1000ebec:	d023      	beq.n	1000ec36 <main+0x9a>
        } else if (!strcmp(buf, "attest")) {
1000ebee:	9b01      	ldr	r3, [sp, #4]
1000ebf0:	4543      	cmp	r3, r8
1000ebf2:	d026      	beq.n	1000ec42 <main+0xa6>
            attempt_attest();
        } else {
            print_error("Unrecognized command '%s'\n", buf);
1000ebf4:	4829      	ldr	r0, [pc, #164]	@ (1000ec9c <main+0x100>)
1000ebf6:	f005 fafb 	bl	100141f0 <printf>
1000ebfa:	4829      	ldr	r0, [pc, #164]	@ (1000eca0 <main+0x104>)
1000ebfc:	a901      	add	r1, sp, #4
1000ebfe:	f005 faf7 	bl	100141f0 <printf>
1000ec02:	4825      	ldr	r0, [pc, #148]	@ (1000ec98 <main+0xfc>)
1000ec04:	f005 faf4 	bl	100141f0 <printf>
1000ec08:	f8d9 3000 	ldr.w	r3, [r9]
1000ec0c:	6898      	ldr	r0, [r3, #8]
1000ec0e:	f008 fcf7 	bl	10017600 <fflush>
1000ec12:	e7df      	b.n	1000ebd4 <main+0x38>
        if (!strcmp(buf, "list")) {
1000ec14:	f89d 3008 	ldrb.w	r3, [sp, #8]
1000ec18:	2b00      	cmp	r3, #0
1000ec1a:	d1e2      	bne.n	1000ebe2 <main+0x46>
            scan_components();
1000ec1c:	f7ff fbe2 	bl	1000e3e4 <scan_components>
1000ec20:	e7d8      	b.n	1000ebd4 <main+0x38>
        } else if (!strcmp(buf, "boot")) {
1000ec22:	f89d 3008 	ldrb.w	r3, [sp, #8]
1000ec26:	2b00      	cmp	r3, #0
1000ec28:	d1de      	bne.n	1000ebe8 <main+0x4c>
    if (validate_components()) {
1000ec2a:	f7ff fc5f 	bl	1000e4ec <validate_components>
1000ec2e:	b9c8      	cbnz	r0, 1000ec64 <main+0xc8>
1000ec30:	f7ff fe32 	bl	1000e898 <attempt_boot.part.0>
1000ec34:	e7ce      	b.n	1000ebd4 <main+0x38>
        } else if (!strcmp(buf, "replace")) {
1000ec36:	9b02      	ldr	r3, [sp, #8]
1000ec38:	4553      	cmp	r3, sl
1000ec3a:	d1d8      	bne.n	1000ebee <main+0x52>
            attempt_replace();
1000ec3c:	f7ff ff2c 	bl	1000ea98 <attempt_replace>
1000ec40:	e7c8      	b.n	1000ebd4 <main+0x38>
        } else if (!strcmp(buf, "attest")) {
1000ec42:	f8bd 2008 	ldrh.w	r2, [sp, #8]
1000ec46:	f247 4373 	movw	r3, #29811	@ 0x7473
1000ec4a:	429a      	cmp	r2, r3
1000ec4c:	d1d2      	bne.n	1000ebf4 <main+0x58>
1000ec4e:	f89d 300a 	ldrb.w	r3, [sp, #10]
1000ec52:	2b00      	cmp	r3, #0
1000ec54:	d1ce      	bne.n	1000ebf4 <main+0x58>
    if (validate_pin()) {
1000ec56:	f7ff fe9b 	bl	1000e990 <validate_pin>
1000ec5a:	2800      	cmp	r0, #0
1000ec5c:	d1ba      	bne.n	1000ebd4 <main+0x38>
1000ec5e:	f7ff fd57 	bl	1000e710 <attempt_attest.part.0>
1000ec62:	e7b7      	b.n	1000ebd4 <main+0x38>
        print_error("Components could not be validated\n");
1000ec64:	480d      	ldr	r0, [pc, #52]	@ (1000ec9c <main+0x100>)
1000ec66:	f005 fac3 	bl	100141f0 <printf>
1000ec6a:	480e      	ldr	r0, [pc, #56]	@ (1000eca4 <main+0x108>)
1000ec6c:	f008 f9f4 	bl	10017058 <puts>
1000ec70:	e7c7      	b.n	1000ec02 <main+0x66>
1000ec72:	bf00      	nop
1000ec74:	100212a8 	.word	0x100212a8
1000ec78:	20000598 	.word	0x20000598
1000ec7c:	10021580 	.word	0x10021580
1000ec80:	7473696c 	.word	0x7473696c
1000ec84:	746f6f62 	.word	0x746f6f62
1000ec88:	6c706572 	.word	0x6c706572
1000ec8c:	65747461 	.word	0x65747461
1000ec90:	00656361 	.word	0x00656361
1000ec94:	10021560 	.word	0x10021560
1000ec98:	100212a4 	.word	0x100212a4
1000ec9c:	100212e0 	.word	0x100212e0
1000eca0:	100215b0 	.word	0x100215b0
1000eca4:	100214b4 	.word	0x100214b4

1000eca8 <board_link_init>:
 * @brief Initialize the board link connection
 * 
 * Initiailize the underlying i2c simple interface
*/
void board_link_init(void) {
    i2c_simple_controller_init();
1000eca8:	f000 b922 	b.w	1000eef0 <i2c_simple_controller_init>

1000ecac <component_id_to_i2c_addr>:
 * 
 * @return i2c_addr_t, i2c address
*/
i2c_addr_t component_id_to_i2c_addr(uint32_t component_id) {
    return (uint8_t) component_id & COMPONENT_ADDR_MASK;
}
1000ecac:	b2c0      	uxtb	r0, r0
1000ecae:	4770      	bx	lr

1000ecb0 <send_packet>:
 * 
 * @return status: SUCCESS_RETURN if success, ERROR_RETURN if error
 *
 * Function sends an arbitrary packet over i2c to a specified component
*/
int send_packet(i2c_addr_t address, uint8_t len, uint8_t* packet) {
1000ecb0:	b570      	push	{r4, r5, r6, lr}
1000ecb2:	4604      	mov	r4, r0
1000ecb4:	460d      	mov	r5, r1
1000ecb6:	4616      	mov	r6, r2

    int result;
    result = i2c_simple_write_receive_len(address, len);
1000ecb8:	f000 f99e 	bl	1000eff8 <i2c_simple_write_receive_len>
    if (result < SUCCESS_RETURN) {
1000ecbc:	2800      	cmp	r0, #0
1000ecbe:	db0d      	blt.n	1000ecdc <send_packet+0x2c>
        return ERROR_RETURN;
    }
    result = i2c_simple_write_data_generic(address, RECEIVE, len, packet);
1000ecc0:	4633      	mov	r3, r6
1000ecc2:	462a      	mov	r2, r5
1000ecc4:	2100      	movs	r1, #0
1000ecc6:	4620      	mov	r0, r4
1000ecc8:	f000 f9e4 	bl	1000f094 <i2c_simple_write_data_generic>
    if (result < SUCCESS_RETURN) {
1000eccc:	2800      	cmp	r0, #0
1000ecce:	db05      	blt.n	1000ecdc <send_packet+0x2c>
        return ERROR_RETURN;
    }
    result = i2c_simple_write_receive_done(address, true);
1000ecd0:	2101      	movs	r1, #1
1000ecd2:	4620      	mov	r0, r4
1000ecd4:	f000 f974 	bl	1000efc0 <i2c_simple_write_receive_done>
    if (result < SUCCESS_RETURN) {
1000ecd8:	17c0      	asrs	r0, r0, #31
        return ERROR_RETURN;
    }

    return SUCCESS_RETURN;
}
1000ecda:	bd70      	pop	{r4, r5, r6, pc}
        return ERROR_RETURN;
1000ecdc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000ece0:	bd70      	pop	{r4, r5, r6, pc}
1000ece2:	bf00      	nop

1000ece4 <poll_and_receive_packet>:
 * @param address: i2c_addr_t, i2c address
 * @param packet: uint8_t*, pointer to a buffer where a packet will be received 
 * 
 * @return int: size of data received, ERROR_RETURN if error
*/
int poll_and_receive_packet(i2c_addr_t address, uint8_t* packet) {
1000ece4:	b570      	push	{r4, r5, r6, lr}
1000ece6:	4604      	mov	r4, r0
1000ece8:	460e      	mov	r6, r1

    int result = SUCCESS_RETURN;
1000ecea:	e002      	b.n	1000ecf2 <poll_and_receive_packet+0xe>
    while (true) {
        result = i2c_simple_read_transmit_done(address);
        if (result < SUCCESS_RETURN) {
            return ERROR_RETURN;
        }
        else if (result == SUCCESS_RETURN) {
1000ecec:	d00c      	beq.n	1000ed08 <poll_and_receive_packet+0x24>
            break;
        }
        MXC_Delay(50);
1000ecee:	f003 fa07 	bl	10012100 <MXC_Delay>
        result = i2c_simple_read_transmit_done(address);
1000ecf2:	4620      	mov	r0, r4
1000ecf4:	f000 f920 	bl	1000ef38 <i2c_simple_read_transmit_done>
        if (result < SUCCESS_RETURN) {
1000ecf8:	2800      	cmp	r0, #0
        MXC_Delay(50);
1000ecfa:	f04f 0032 	mov.w	r0, #50	@ 0x32
        if (result < SUCCESS_RETURN) {
1000ecfe:	daf5      	bge.n	1000ecec <poll_and_receive_packet+0x8>
            return ERROR_RETURN;
1000ed00:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
    if (result < SUCCESS_RETURN) {
        return ERROR_RETURN;
    }

    return len;
}
1000ed04:	4628      	mov	r0, r5
1000ed06:	bd70      	pop	{r4, r5, r6, pc}
    int len = i2c_simple_read_transmit_len(address);
1000ed08:	4620      	mov	r0, r4
1000ed0a:	f000 f937 	bl	1000ef7c <i2c_simple_read_transmit_len>
    if (len < SUCCESS_RETURN) {
1000ed0e:	1e05      	subs	r5, r0, #0
1000ed10:	dbf6      	blt.n	1000ed00 <poll_and_receive_packet+0x1c>
    result = i2c_simple_read_data_generic(address, TRANSMIT, (uint8_t)len, packet);
1000ed12:	4633      	mov	r3, r6
1000ed14:	b2ea      	uxtb	r2, r5
1000ed16:	2103      	movs	r1, #3
1000ed18:	4620      	mov	r0, r4
1000ed1a:	f000 f9a3 	bl	1000f064 <i2c_simple_read_data_generic>
    if (result < SUCCESS_RETURN) {
1000ed1e:	2800      	cmp	r0, #0
1000ed20:	dbee      	blt.n	1000ed00 <poll_and_receive_packet+0x1c>
    result = i2c_simple_write_transmit_done(address, true);
1000ed22:	2101      	movs	r1, #1
1000ed24:	4620      	mov	r0, r4
1000ed26:	f000 f981 	bl	1000f02c <i2c_simple_write_transmit_done>
    if (result < SUCCESS_RETURN) {
1000ed2a:	2800      	cmp	r0, #0
1000ed2c:	dbe8      	blt.n	1000ed00 <poll_and_receive_packet+0x1c>
}
1000ed2e:	4628      	mov	r0, r5
1000ed30:	bd70      	pop	{r4, r5, r6, pc}
1000ed32:	bf00      	nop

1000ed34 <recv_input>:
 */

#include "host_messaging.h"

// Print a message through USB UART and then receive a line over USB UART
void recv_input(const char *msg, char *buf) {
1000ed34:	b570      	push	{r4, r5, r6, lr}
1000ed36:	4605      	mov	r5, r0
    print_debug(msg);
1000ed38:	4810      	ldr	r0, [pc, #64]	@ (1000ed7c <recv_input+0x48>)
1000ed3a:	4e11      	ldr	r6, [pc, #68]	@ (1000ed80 <recv_input+0x4c>)
void recv_input(const char *msg, char *buf) {
1000ed3c:	460c      	mov	r4, r1
    print_debug(msg);
1000ed3e:	f005 fa57 	bl	100141f0 <printf>
1000ed42:	4628      	mov	r0, r5
1000ed44:	f005 fa54 	bl	100141f0 <printf>
1000ed48:	480e      	ldr	r0, [pc, #56]	@ (1000ed84 <recv_input+0x50>)
1000ed4a:	f005 fa51 	bl	100141f0 <printf>
1000ed4e:	6833      	ldr	r3, [r6, #0]
1000ed50:	6898      	ldr	r0, [r3, #8]
1000ed52:	f008 fc55 	bl	10017600 <fflush>
    fflush(0);
1000ed56:	2000      	movs	r0, #0
1000ed58:	f008 fc52 	bl	10017600 <fflush>
    print_ack();
1000ed5c:	480a      	ldr	r0, [pc, #40]	@ (1000ed88 <recv_input+0x54>)
1000ed5e:	f005 fa47 	bl	100141f0 <printf>
1000ed62:	6833      	ldr	r3, [r6, #0]
1000ed64:	6898      	ldr	r0, [r3, #8]
1000ed66:	f008 fc4b 	bl	10017600 <fflush>
    gets(buf);
1000ed6a:	4620      	mov	r0, r4
1000ed6c:	f009 f80e 	bl	10017d8c <gets>
    puts("");
}
1000ed70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    puts("");
1000ed74:	4805      	ldr	r0, [pc, #20]	@ (1000ed8c <recv_input+0x58>)
1000ed76:	f008 b96f 	b.w	10017058 <puts>
1000ed7a:	bf00      	nop
1000ed7c:	1002127c 	.word	0x1002127c
1000ed80:	20000598 	.word	0x20000598
1000ed84:	100212a4 	.word	0x100212a4
1000ed88:	100216f4 	.word	0x100216f4
1000ed8c:	1002155c 	.word	0x1002155c

1000ed90 <print_hex>:

// Prints a buffer of bytes as a hex string
void print_hex(uint8_t *buf, size_t len) {
    for (int i = 0; i < len; i++)
1000ed90:	b181      	cbz	r1, 1000edb4 <print_hex+0x24>
void print_hex(uint8_t *buf, size_t len) {
1000ed92:	b570      	push	{r4, r5, r6, lr}
1000ed94:	4401      	add	r1, r0
    	printf("%02x", buf[i]);
1000ed96:	4e09      	ldr	r6, [pc, #36]	@ (1000edbc <print_hex+0x2c>)
1000ed98:	1e44      	subs	r4, r0, #1
1000ed9a:	1e4d      	subs	r5, r1, #1
1000ed9c:	f814 1f01 	ldrb.w	r1, [r4, #1]!
1000eda0:	4630      	mov	r0, r6
1000eda2:	f005 fa25 	bl	100141f0 <printf>
    for (int i = 0; i < len; i++)
1000eda6:	42ac      	cmp	r4, r5
1000eda8:	d1f8      	bne.n	1000ed9c <print_hex+0xc>
    printf("\n");
}
1000edaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    printf("\n");
1000edae:	200a      	movs	r0, #10
1000edb0:	f008 b8f2 	b.w	10016f98 <putchar>
1000edb4:	200a      	movs	r0, #10
1000edb6:	f008 b8ef 	b.w	10016f98 <putchar>
1000edba:	bf00      	nop
1000edbc:	10021700 	.word	0x10021700

1000edc0 <encrypt_sym>:
 * @param ciphertext A pointer to a buffer of length len where the resulting
 *          ciphertext will be written to
 *
 * @return 0 on success, -1 on bad length, other non-zero for other error
 */
int encrypt_sym(uint8_t *plaintext, size_t len, uint8_t *key, uint8_t *ciphertext) {
1000edc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000edc4:	460c      	mov	r4, r1
1000edc6:	b0dc      	sub	sp, #368	@ 0x170
    Aes ctx; // Context for encryption
    int result; // Library result

    // Ensure valid length
    if (len <= 0 || len % BLOCK_SIZE)
1000edc8:	b309      	cbz	r1, 1000ee0e <encrypt_sym+0x4e>
1000edca:	461e      	mov	r6, r3
1000edcc:	f011 030f 	ands.w	r3, r1, #15
1000edd0:	d11d      	bne.n	1000ee0e <encrypt_sym+0x4e>
        return -1;

    // Set the key for encryption
    result = wc_AesSetKey(&ctx, key, 16, NULL, AES_ENCRYPTION);
1000edd2:	4611      	mov	r1, r2
1000edd4:	4605      	mov	r5, r0
1000edd6:	9300      	str	r3, [sp, #0]
1000edd8:	2210      	movs	r2, #16
1000edda:	a803      	add	r0, sp, #12
1000eddc:	f002 f9b8 	bl	10011150 <wc_AesSetKey>
    if (result != 0)
1000ede0:	4680      	mov	r8, r0
1000ede2:	b980      	cbnz	r0, 1000ee06 <encrypt_sym+0x46>
        return result; // Report error


    // Encrypt each block
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ede4:	2c01      	cmp	r4, #1
1000ede6:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
1000edea:	d00c      	beq.n	1000ee06 <encrypt_sym+0x46>
1000edec:	4604      	mov	r4, r0
1000edee:	e001      	b.n	1000edf4 <encrypt_sym+0x34>
1000edf0:	42a7      	cmp	r7, r4
1000edf2:	d908      	bls.n	1000ee06 <encrypt_sym+0x46>
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000edf4:	192a      	adds	r2, r5, r4
1000edf6:	1931      	adds	r1, r6, r4
1000edf8:	a803      	add	r0, sp, #12
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000edfa:	3410      	adds	r4, #16
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000edfc:	f002 f9b6 	bl	1001116c <wc_AesEncryptDirect>
        if (result != 0)
1000ee00:	2800      	cmp	r0, #0
1000ee02:	d0f5      	beq.n	1000edf0 <encrypt_sym+0x30>
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000ee04:	4680      	mov	r8, r0
            return result; // Report error
    }
    return 0;
}
1000ee06:	4640      	mov	r0, r8
1000ee08:	b05c      	add	sp, #368	@ 0x170
1000ee0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return -1;
1000ee0e:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1000ee12:	e7f8      	b.n	1000ee06 <encrypt_sym+0x46>

1000ee14 <decrypt_sym>:
 * @param plaintext A pointer to a buffer of length len where the resulting
 *          plaintext will be written to
 *
 * @return 0 on success, -1 on bad length, other non-zero for other error
 */
int decrypt_sym(uint8_t *ciphertext, size_t len, uint8_t *key, uint8_t *plaintext) {
1000ee14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000ee18:	b0dc      	sub	sp, #368	@ 0x170
    Aes ctx; // Context for decryption
    int result; // Library result

    // Ensure valid length
    if (len <= 0 || len % BLOCK_SIZE)
1000ee1a:	b319      	cbz	r1, 1000ee64 <decrypt_sym+0x50>
1000ee1c:	461e      	mov	r6, r3
1000ee1e:	f011 030f 	ands.w	r3, r1, #15
1000ee22:	460c      	mov	r4, r1
1000ee24:	d11e      	bne.n	1000ee64 <decrypt_sym+0x50>
        return -1;

    // Set the key for decryption
    result = wc_AesSetKey(&ctx, key, 16, NULL, AES_DECRYPTION);
1000ee26:	4611      	mov	r1, r2
1000ee28:	2201      	movs	r2, #1
1000ee2a:	9200      	str	r2, [sp, #0]
1000ee2c:	4605      	mov	r5, r0
1000ee2e:	2210      	movs	r2, #16
1000ee30:	a803      	add	r0, sp, #12
1000ee32:	f002 f98d 	bl	10011150 <wc_AesSetKey>
    if (result != 0)
1000ee36:	4680      	mov	r8, r0
1000ee38:	b980      	cbnz	r0, 1000ee5c <decrypt_sym+0x48>
        return result; // Report error

    // Decrypt each block
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ee3a:	2c01      	cmp	r4, #1
1000ee3c:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
1000ee40:	d00c      	beq.n	1000ee5c <decrypt_sym+0x48>
1000ee42:	4604      	mov	r4, r0
1000ee44:	e001      	b.n	1000ee4a <decrypt_sym+0x36>
1000ee46:	42a7      	cmp	r7, r4
1000ee48:	d908      	bls.n	1000ee5c <decrypt_sym+0x48>
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000ee4a:	192a      	adds	r2, r5, r4
1000ee4c:	1931      	adds	r1, r6, r4
1000ee4e:	a803      	add	r0, sp, #12
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ee50:	3410      	adds	r4, #16
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000ee52:	f002 f9a3 	bl	1001119c <wc_AesDecryptDirect>
        if (result != 0)
1000ee56:	2800      	cmp	r0, #0
1000ee58:	d0f5      	beq.n	1000ee46 <decrypt_sym+0x32>
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000ee5a:	4680      	mov	r8, r0
            return result; // Report error
    }
    return 0;
}
1000ee5c:	4640      	mov	r0, r8
1000ee5e:	b05c      	add	sp, #368	@ 0x170
1000ee60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return -1;
1000ee64:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1000ee68:	e7f8      	b.n	1000ee5c <decrypt_sym+0x48>
1000ee6a:	bf00      	nop

1000ee6c <hash>:
 *
 * @return 0 on success, non-zero for other error
 */
int hash(void *data, size_t len, uint8_t *hash_out) {
    // Pass values to hash
    return wc_Md5Hash((uint8_t *)data, len, hash_out);
1000ee6c:	f002 b9ae 	b.w	100111cc <wc_Md5Hash>

1000ee70 <flash_simple_irq>:
 * 
 * This ISR allows for access to the flash through simple_flash to operate
 */
void flash_simple_irq(void) {
    uint32_t temp;
    temp = MXC_FLC0->intr;
1000ee70:	4a09      	ldr	r2, [pc, #36]	@ (1000ee98 <flash_simple_irq+0x28>)
1000ee72:	6a53      	ldr	r3, [r2, #36]	@ 0x24

    if (temp & MXC_F_FLC_INTR_DONE) {
1000ee74:	07d9      	lsls	r1, r3, #31
1000ee76:	d503      	bpl.n	1000ee80 <flash_simple_irq+0x10>
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_DONE;
1000ee78:	6a51      	ldr	r1, [r2, #36]	@ 0x24
1000ee7a:	f021 0101 	bic.w	r1, r1, #1
1000ee7e:	6251      	str	r1, [r2, #36]	@ 0x24
    }

    if (temp & MXC_F_FLC_INTR_AF) {
1000ee80:	079b      	lsls	r3, r3, #30
1000ee82:	d400      	bmi.n	1000ee86 <flash_simple_irq+0x16>
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
        printf(" -> Interrupt! (Flash access failure)\n\n");
    }
}
1000ee84:	4770      	bx	lr
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
1000ee86:	4a04      	ldr	r2, [pc, #16]	@ (1000ee98 <flash_simple_irq+0x28>)
        printf(" -> Interrupt! (Flash access failure)\n\n");
1000ee88:	4804      	ldr	r0, [pc, #16]	@ (1000ee9c <flash_simple_irq+0x2c>)
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
1000ee8a:	6a53      	ldr	r3, [r2, #36]	@ 0x24
1000ee8c:	f023 0302 	bic.w	r3, r3, #2
1000ee90:	6253      	str	r3, [r2, #36]	@ 0x24
        printf(" -> Interrupt! (Flash access failure)\n\n");
1000ee92:	f008 b8e1 	b.w	10017058 <puts>
1000ee96:	bf00      	nop
1000ee98:	40029000 	.word	0x40029000
1000ee9c:	10021708 	.word	0x10021708

1000eea0 <flash_simple_init>:
 * @brief Initialize the Simple Flash Interface
 * 
 * This function registers the interrupt for the flash system,
 * enables the interrupt, and disables ICC
*/
void flash_simple_init(void) {
1000eea0:	b508      	push	{r3, lr}
    // Setup Flash
    MXC_NVIC_SetVector(FLC0_IRQn, flash_simple_irq);
1000eea2:	4908      	ldr	r1, [pc, #32]	@ (1000eec4 <flash_simple_init+0x24>)
1000eea4:	2017      	movs	r0, #23
1000eea6:	f003 f965 	bl	10012174 <MXC_NVIC_SetVector>
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000eeaa:	4b07      	ldr	r3, [pc, #28]	@ (1000eec8 <flash_simple_init+0x28>)
1000eeac:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
1000eeb0:	601a      	str	r2, [r3, #0]
    NVIC_EnableIRQ(FLC0_IRQn);
    MXC_FLC_EnableInt(MXC_F_FLC_INTR_DONEIE | MXC_F_FLC_INTR_AFIE);
1000eeb2:	f44f 7040 	mov.w	r0, #768	@ 0x300
1000eeb6:	f003 faa9 	bl	1001240c <MXC_FLC_EnableInt>
    MXC_ICC_Disable(MXC_ICC0);
}
1000eeba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    MXC_ICC_Disable(MXC_ICC0);
1000eebe:	4803      	ldr	r0, [pc, #12]	@ (1000eecc <flash_simple_init+0x2c>)
1000eec0:	f004 bb4a 	b.w	10013558 <MXC_ICC_Disable>
1000eec4:	1000ee71 	.word	0x1000ee71
1000eec8:	e000e100 	.word	0xe000e100
1000eecc:	4002a000 	.word	0x4002a000

1000eed0 <flash_simple_erase_page>:
 * Flash memory can only be erased in a large block size called a page.
 * Once erased, memory can only be written one way e.g. 1->0.
 * In order to be re-written the entire page must be erased.
*/
int flash_simple_erase_page(uint32_t address) {
    return MXC_FLC_PageErase(address);
1000eed0:	f01b be6a 	b.w	1002aba8 <__MXC_FLC_PageErase_veneer>

1000eed4 <flash_simple_read>:
 * 
 * This function reads data from the specified flash page into the buffer
 * with the specified amount of bytes
*/
void flash_simple_read(uint32_t address, uint32_t* buffer, uint32_t size) {
    MXC_FLC_Read(address, buffer, size);
1000eed4:	f003 ba98 	b.w	10012408 <MXC_FLC_Read>

1000eed8 <flash_simple_write>:
 * This function writes data to the specified flash page from the buffer passed
 * with the specified amount of bytes. Flash memory can only be written in one
 * way e.g. 1->0. To rewrite previously written memory see the 
 * flash_simple_erase_page documentation.
*/
int flash_simple_write(uint32_t address, uint32_t* buffer, uint32_t size) {
1000eed8:	460b      	mov	r3, r1
    return MXC_FLC_Write(address, size, buffer);
1000eeda:	4611      	mov	r1, r2
1000eedc:	461a      	mov	r2, r3
1000eede:	f003 ba91 	b.w	10012404 <MXC_FLC_Write>
1000eee2:	bf00      	nop

1000eee4 <I2C_Handler>:
 * @brief Built-In I2C Interrupt Handler
 *
 * Utilize the built-in I2C interrupt handler to allow for the use
 * of MXC_I2C_Master_Transaction() function calls
 */
static void I2C_Handler(void) { MXC_I2C_AsyncHandler(I2C_INTERFACE); }
1000eee4:	4801      	ldr	r0, [pc, #4]	@ (1000eeec <I2C_Handler+0x8>)
1000eee6:	f003 bcf5 	b.w	100128d4 <MXC_I2C_AsyncHandler>
1000eeea:	bf00      	nop
1000eeec:	4001e000 	.word	0x4001e000

1000eef0 <i2c_simple_controller_init>:
 * @brief Initialize the I2C Connection
 * 
 * Initialize the I2C by enabling the module, setting the correct
 * frequency, and enabling the interrupt to our I2C_Handler
*/
int i2c_simple_controller_init(void) {
1000eef0:	b510      	push	{r4, lr}
    int error;

    // Initialize the I2C Interface
    error = MXC_I2C_Init(I2C_INTERFACE, true, 0);
1000eef2:	480c      	ldr	r0, [pc, #48]	@ (1000ef24 <i2c_simple_controller_init+0x34>)
1000eef4:	2200      	movs	r2, #0
1000eef6:	2101      	movs	r1, #1
1000eef8:	f003 fc88 	bl	1001280c <MXC_I2C_Init>
    if (error != E_NO_ERROR) {
1000eefc:	4604      	mov	r4, r0
1000eefe:	b960      	cbnz	r0, 1000ef1a <i2c_simple_controller_init+0x2a>
        printf("Failed to initialize I2C.\n");
        return error;
    }
    // Set frequency to frequency macro
    MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_FREQ);
1000ef00:	4909      	ldr	r1, [pc, #36]	@ (1000ef28 <i2c_simple_controller_init+0x38>)
1000ef02:	4808      	ldr	r0, [pc, #32]	@ (1000ef24 <i2c_simple_controller_init+0x34>)
1000ef04:	f003 fccc 	bl	100128a0 <MXC_I2C_SetFrequency>
    
    // Set up interrupt
    MXC_NVIC_SetVector(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)), I2C_Handler);
1000ef08:	4908      	ldr	r1, [pc, #32]	@ (1000ef2c <i2c_simple_controller_init+0x3c>)
1000ef0a:	2024      	movs	r0, #36	@ 0x24
1000ef0c:	f003 f932 	bl	10012174 <MXC_NVIC_SetVector>
1000ef10:	4b07      	ldr	r3, [pc, #28]	@ (1000ef30 <i2c_simple_controller_init+0x40>)
1000ef12:	2210      	movs	r2, #16
1000ef14:	605a      	str	r2, [r3, #4]
    NVIC_EnableIRQ(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)));

    return E_NO_ERROR;
}
1000ef16:	4620      	mov	r0, r4
1000ef18:	bd10      	pop	{r4, pc}
        printf("Failed to initialize I2C.\n");
1000ef1a:	4806      	ldr	r0, [pc, #24]	@ (1000ef34 <i2c_simple_controller_init+0x44>)
1000ef1c:	f008 f89c 	bl	10017058 <puts>
}
1000ef20:	4620      	mov	r0, r4
1000ef22:	bd10      	pop	{r4, pc}
1000ef24:	4001e000 	.word	0x4001e000
1000ef28:	000186a0 	.word	0x000186a0
1000ef2c:	1000eee5 	.word	0x1000eee5
1000ef30:	e000e100 	.word	0xe000e100
1000ef34:	10021730 	.word	0x10021730

1000ef38 <i2c_simple_read_transmit_done>:
 * @return int: TRANSMIT_DONE value, negative if error
 *
 * Read the TRANSMIT_DONE for an I2C peripheral
 * and return the value 
*/
int i2c_simple_read_transmit_done(i2c_addr_t addr) {
1000ef38:	b510      	push	{r4, lr}
*/
int i2c_simple_read_status_generic(i2c_addr_t addr, ECTF_I2C_REGS reg) {
    uint8_t value = 0;

    mxc_i2c_req_t request;
    request.i2c = I2C_INTERFACE;
1000ef3a:	490f      	ldr	r1, [pc, #60]	@ (1000ef78 <i2c_simple_read_transmit_done+0x40>)
int i2c_simple_read_transmit_done(i2c_addr_t addr) {
1000ef3c:	b08a      	sub	sp, #40	@ 0x28
1000ef3e:	2404      	movs	r4, #4
    request.addr = addr;
1000ef40:	e9cd 1002 	strd	r1, r0, [sp, #8]
    uint8_t value = 0;
1000ef44:	2300      	movs	r3, #0
    request.tx_len = 1;
1000ef46:	2201      	movs	r2, #1
1000ef48:	f88d 4006 	strb.w	r4, [sp, #6]
    request.tx_buf = (uint8_t*)&reg;
    request.rx_len = 1;
    request.rx_buf = (uint8_t*)&value;
1000ef4c:	f10d 0107 	add.w	r1, sp, #7
    request.tx_buf = (uint8_t*)&reg;
1000ef50:	f10d 0406 	add.w	r4, sp, #6
    request.restart = 0;
    request.callback = NULL;

    int result = MXC_I2C_MasterTransaction(&request);
1000ef54:	a802      	add	r0, sp, #8
    request.tx_buf = (uint8_t*)&reg;
1000ef56:	e9cd 4204 	strd	r4, r2, [sp, #16]
    request.rx_buf = (uint8_t*)&value;
1000ef5a:	e9cd 1206 	strd	r1, r2, [sp, #24]
    request.callback = NULL;
1000ef5e:	e9cd 3308 	strd	r3, r3, [sp, #32]
    uint8_t value = 0;
1000ef62:	f88d 3007 	strb.w	r3, [sp, #7]
    int result = MXC_I2C_MasterTransaction(&request);
1000ef66:	f003 fcaf 	bl	100128c8 <MXC_I2C_MasterTransaction>
    if (result < 0) {
1000ef6a:	2800      	cmp	r0, #0
        return result;
    }
    return value;
1000ef6c:	bfa8      	it	ge
1000ef6e:	f89d 0007 	ldrbge.w	r0, [sp, #7]
}
1000ef72:	b00a      	add	sp, #40	@ 0x28
1000ef74:	bd10      	pop	{r4, pc}
1000ef76:	bf00      	nop
1000ef78:	4001e000 	.word	0x4001e000

1000ef7c <i2c_simple_read_transmit_len>:
int i2c_simple_read_transmit_len(i2c_addr_t addr) {
1000ef7c:	b510      	push	{r4, lr}
    request.i2c = I2C_INTERFACE;
1000ef7e:	490f      	ldr	r1, [pc, #60]	@ (1000efbc <i2c_simple_read_transmit_len+0x40>)
int i2c_simple_read_transmit_len(i2c_addr_t addr) {
1000ef80:	b08a      	sub	sp, #40	@ 0x28
1000ef82:	2405      	movs	r4, #5
    request.addr = addr;
1000ef84:	e9cd 1002 	strd	r1, r0, [sp, #8]
    uint8_t value = 0;
1000ef88:	2300      	movs	r3, #0
    request.tx_len = 1;
1000ef8a:	2201      	movs	r2, #1
1000ef8c:	f88d 4006 	strb.w	r4, [sp, #6]
    request.rx_buf = (uint8_t*)&value;
1000ef90:	f10d 0107 	add.w	r1, sp, #7
    request.tx_buf = (uint8_t*)&reg;
1000ef94:	f10d 0406 	add.w	r4, sp, #6
    int result = MXC_I2C_MasterTransaction(&request);
1000ef98:	a802      	add	r0, sp, #8
    request.tx_buf = (uint8_t*)&reg;
1000ef9a:	e9cd 4204 	strd	r4, r2, [sp, #16]
    request.rx_buf = (uint8_t*)&value;
1000ef9e:	e9cd 1206 	strd	r1, r2, [sp, #24]
    request.callback = NULL;
1000efa2:	e9cd 3308 	strd	r3, r3, [sp, #32]
    uint8_t value = 0;
1000efa6:	f88d 3007 	strb.w	r3, [sp, #7]
    int result = MXC_I2C_MasterTransaction(&request);
1000efaa:	f003 fc8d 	bl	100128c8 <MXC_I2C_MasterTransaction>
    if (result < 0) {
1000efae:	2800      	cmp	r0, #0
    return value;
1000efb0:	bfa8      	it	ge
1000efb2:	f89d 0007 	ldrbge.w	r0, [sp, #7]
}
1000efb6:	b00a      	add	sp, #40	@ 0x28
1000efb8:	bd10      	pop	{r4, pc}
1000efba:	bf00      	nop
1000efbc:	4001e000 	.word	0x4001e000

1000efc0 <i2c_simple_write_receive_done>:
int i2c_simple_write_receive_done(i2c_addr_t addr, bool done) {
1000efc0:	b530      	push	{r4, r5, lr}
1000efc2:	b08b      	sub	sp, #44	@ 0x2c
1000efc4:	4605      	mov	r5, r0
    uint8_t packet[2];
    packet[0] = (uint8_t) reg;
    packet[1] = value;
    
    mxc_i2c_req_t request;
    request.i2c = I2C_INTERFACE;
1000efc6:	4a0b      	ldr	r2, [pc, #44]	@ (1000eff4 <i2c_simple_write_receive_done+0x34>)
1000efc8:	9202      	str	r2, [sp, #8]
    packet[0] = (uint8_t) reg;
1000efca:	2001      	movs	r0, #1
    request.addr = addr;
    request.tx_len = 2;
    request.tx_buf = packet;
    request.rx_len = 0;
1000efcc:	2300      	movs	r3, #0
    packet[0] = (uint8_t) reg;
1000efce:	f88d 0004 	strb.w	r0, [sp, #4]
    request.tx_buf = packet;
1000efd2:	aa01      	add	r2, sp, #4
    request.tx_len = 2;
1000efd4:	2402      	movs	r4, #2
    request.rx_buf = 0;
    request.restart = 0;
    request.callback = NULL;

    return MXC_I2C_MasterTransaction(&request);
1000efd6:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000efd8:	e9cd 2404 	strd	r2, r4, [sp, #16]
    request.rx_buf = 0;
1000efdc:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000efe0:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[1] = value;
1000efe4:	f88d 1005 	strb.w	r1, [sp, #5]
    request.addr = addr;
1000efe8:	9503      	str	r5, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000efea:	f003 fc6d 	bl	100128c8 <MXC_I2C_MasterTransaction>
}
1000efee:	b00b      	add	sp, #44	@ 0x2c
1000eff0:	bd30      	pop	{r4, r5, pc}
1000eff2:	bf00      	nop
1000eff4:	4001e000 	.word	0x4001e000

1000eff8 <i2c_simple_write_receive_len>:
int i2c_simple_write_receive_len(i2c_addr_t addr, uint8_t len) {
1000eff8:	b510      	push	{r4, lr}
1000effa:	b08a      	sub	sp, #40	@ 0x28
1000effc:	4604      	mov	r4, r0
    request.i2c = I2C_INTERFACE;
1000effe:	480a      	ldr	r0, [pc, #40]	@ (1000f028 <i2c_simple_write_receive_len+0x30>)
    packet[1] = value;
1000f000:	f88d 1005 	strb.w	r1, [sp, #5]
    request.rx_len = 0;
1000f004:	2300      	movs	r3, #0
    packet[0] = (uint8_t) reg;
1000f006:	2202      	movs	r2, #2
    request.i2c = I2C_INTERFACE;
1000f008:	9002      	str	r0, [sp, #8]
    request.tx_buf = packet;
1000f00a:	a901      	add	r1, sp, #4
    return MXC_I2C_MasterTransaction(&request);
1000f00c:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000f00e:	e9cd 1204 	strd	r1, r2, [sp, #16]
    request.rx_buf = 0;
1000f012:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000f016:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[0] = (uint8_t) reg;
1000f01a:	f88d 2004 	strb.w	r2, [sp, #4]
    request.addr = addr;
1000f01e:	9403      	str	r4, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000f020:	f003 fc52 	bl	100128c8 <MXC_I2C_MasterTransaction>
}
1000f024:	b00a      	add	sp, #40	@ 0x28
1000f026:	bd10      	pop	{r4, pc}
1000f028:	4001e000 	.word	0x4001e000

1000f02c <i2c_simple_write_transmit_done>:
int i2c_simple_write_transmit_done(i2c_addr_t addr, bool done) {
1000f02c:	b530      	push	{r4, r5, lr}
1000f02e:	b08b      	sub	sp, #44	@ 0x2c
1000f030:	4605      	mov	r5, r0
    request.i2c = I2C_INTERFACE;
1000f032:	4a0b      	ldr	r2, [pc, #44]	@ (1000f060 <i2c_simple_write_transmit_done+0x34>)
1000f034:	9202      	str	r2, [sp, #8]
    packet[0] = (uint8_t) reg;
1000f036:	2004      	movs	r0, #4
    request.rx_len = 0;
1000f038:	2300      	movs	r3, #0
    request.tx_buf = packet;
1000f03a:	eb0d 0200 	add.w	r2, sp, r0
    packet[0] = (uint8_t) reg;
1000f03e:	f88d 0004 	strb.w	r0, [sp, #4]
    request.tx_len = 2;
1000f042:	2402      	movs	r4, #2
    return MXC_I2C_MasterTransaction(&request);
1000f044:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000f046:	e9cd 2404 	strd	r2, r4, [sp, #16]
    request.rx_buf = 0;
1000f04a:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000f04e:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[1] = value;
1000f052:	f88d 1005 	strb.w	r1, [sp, #5]
    request.addr = addr;
1000f056:	9503      	str	r5, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000f058:	f003 fc36 	bl	100128c8 <MXC_I2C_MasterTransaction>
}
1000f05c:	b00b      	add	sp, #44	@ 0x2c
1000f05e:	bd30      	pop	{r4, r5, pc}
1000f060:	4001e000 	.word	0x4001e000

1000f064 <i2c_simple_read_data_generic>:
{
1000f064:	b530      	push	{r4, r5, lr}
1000f066:	b08b      	sub	sp, #44	@ 0x2c
    request.i2c = I2C_INTERFACE;
1000f068:	4d09      	ldr	r5, [pc, #36]	@ (1000f090 <i2c_simple_read_data_generic+0x2c>)
{
1000f06a:	f88d 1007 	strb.w	r1, [sp, #7]
    request.addr = addr;
1000f06e:	9003      	str	r0, [sp, #12]
    request.tx_buf = (uint8_t*)&reg;
1000f070:	f10d 0107 	add.w	r1, sp, #7
    request.tx_len = 1;
1000f074:	2001      	movs	r0, #1
    request.tx_buf = (uint8_t*)&reg;
1000f076:	e9cd 1004 	strd	r1, r0, [sp, #16]
    request.restart = 0;
1000f07a:	2400      	movs	r4, #0
    return MXC_I2C_MasterTransaction(&request);
1000f07c:	a802      	add	r0, sp, #8
    request.rx_buf = buf;
1000f07e:	e9cd 3206 	strd	r3, r2, [sp, #24]
    request.callback = NULL;
1000f082:	e9cd 4408 	strd	r4, r4, [sp, #32]
    request.i2c = I2C_INTERFACE;
1000f086:	9502      	str	r5, [sp, #8]
    return MXC_I2C_MasterTransaction(&request);
1000f088:	f003 fc1e 	bl	100128c8 <MXC_I2C_MasterTransaction>
}
1000f08c:	b00b      	add	sp, #44	@ 0x2c
1000f08e:	bd30      	pop	{r4, r5, pc}
1000f090:	4001e000 	.word	0x4001e000

1000f094 <i2c_simple_write_data_generic>:
int i2c_simple_write_data_generic(i2c_addr_t addr, ECTF_I2C_REGS reg, uint8_t len, uint8_t* buf) {
1000f094:	b570      	push	{r4, r5, r6, lr}
1000f096:	b0ca      	sub	sp, #296	@ 0x128
1000f098:	468c      	mov	ip, r1
1000f09a:	4605      	mov	r5, r0
    memcpy(&packet[1], buf, len);
1000f09c:	4619      	mov	r1, r3
1000f09e:	f10d 0025 	add.w	r0, sp, #37	@ 0x25
int i2c_simple_write_data_generic(i2c_addr_t addr, ECTF_I2C_REGS reg, uint8_t len, uint8_t* buf) {
1000f0a2:	4614      	mov	r4, r2
    packet[0] = reg;
1000f0a4:	f88d c024 	strb.w	ip, [sp, #36]	@ 0x24
    memcpy(&packet[1], buf, len);
1000f0a8:	f009 fa7a 	bl	100185a0 <memcpy>
    request.i2c = I2C_INTERFACE;
1000f0ac:	4b08      	ldr	r3, [pc, #32]	@ (1000f0d0 <i2c_simple_write_data_generic+0x3c>)
1000f0ae:	9301      	str	r3, [sp, #4]
    packet[0] = reg;
1000f0b0:	ae09      	add	r6, sp, #36	@ 0x24
    request.rx_len = 0;
1000f0b2:	2300      	movs	r3, #0
    request.tx_len = len+1;
1000f0b4:	3401      	adds	r4, #1
    return MXC_I2C_MasterTransaction(&request);
1000f0b6:	a801      	add	r0, sp, #4
    request.rx_buf = 0;
1000f0b8:	e9cd 3305 	strd	r3, r3, [sp, #20]
    request.callback = NULL;
1000f0bc:	e9cd 3307 	strd	r3, r3, [sp, #28]
    request.addr = addr;
1000f0c0:	9502      	str	r5, [sp, #8]
    request.tx_len = len+1;
1000f0c2:	9404      	str	r4, [sp, #16]
    request.tx_buf = packet;
1000f0c4:	9603      	str	r6, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000f0c6:	f003 fbff 	bl	100128c8 <MXC_I2C_MasterTransaction>
}
1000f0ca:	b04a      	add	sp, #296	@ 0x128
1000f0cc:	bd70      	pop	{r4, r5, r6, pc}
1000f0ce:	bf00      	nop
1000f0d0:	4001e000 	.word	0x4001e000

1000f0d4 <AesEncrypt_C>:
 * @param [out] outBlock  Encrypted block.
 * @param [in]  r         Rounds divided by 2.
 */
static void AesEncrypt_C(Aes* aes, const byte* inBlock, byte* outBlock,
        word32 r)
{
1000f0d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000f0d8:	b087      	sub	sp, #28
1000f0da:	680d      	ldr	r5, [r1, #0]
1000f0dc:	684f      	ldr	r7, [r1, #4]
1000f0de:	688e      	ldr	r6, [r1, #8]
1000f0e0:	68cc      	ldr	r4, [r1, #12]
1000f0e2:	e9cd 3200 	strd	r3, r2, [sp]
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    /* AddRoundKey */
    s0 ^= rk[0];
1000f0e6:	6803      	ldr	r3, [r0, #0]
1000f0e8:	ba2d      	rev	r5, r5
1000f0ea:	405d      	eors	r5, r3
    s1 ^= rk[1];
1000f0ec:	6843      	ldr	r3, [r0, #4]
1000f0ee:	ba3f      	rev	r7, r7
1000f0f0:	405f      	eors	r7, r3
    s2 ^= rk[2];
1000f0f2:	6883      	ldr	r3, [r0, #8]
1000f0f4:	ba36      	rev	r6, r6
1000f0f6:	405e      	eors	r6, r3
    s3 ^= rk[3];
1000f0f8:	68c3      	ldr	r3, [r0, #12]
    s0 ^= rk[(o)+0]; s1 ^= rk[(o)+1]; s2 ^= rk[(o)+2]; s3 ^= rk[(o)+3];
#endif

#ifndef WOLFSSL_AES_NO_UNROLL
/* Unroll the loop. */
                       ENC_ROUND_T_S( 0);
1000f0fa:	b2f9      	uxtb	r1, r7
1000f0fc:	b2f2      	uxtb	r2, r6
1000f0fe:	ba24      	rev	r4, r4
    s3 ^= rk[3];
1000f100:	405c      	eors	r4, r3
                       ENC_ROUND_T_S( 0);
1000f102:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000f106:	4bea      	ldr	r3, [pc, #936]	@ (1000f4b0 <AesEncrypt_C+0x3dc>)
1000f108:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f10c:	fa5f fe84 	uxtb.w	lr, r4
1000f110:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
1000f114:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f118:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f11c:	0e2a      	lsrs	r2, r5, #24
1000f11e:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000f122:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f126:	fa5f fc85 	uxtb.w	ip, r5
1000f12a:	ea82 020e 	eor.w	r2, r2, lr
1000f12e:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000f132:	ea4f 6e17 	mov.w	lr, r7, lsr #24
1000f136:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f13a:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000f13e:	ea8e 0e0c 	eor.w	lr, lr, ip
1000f142:	ea4f 6c16 	mov.w	ip, r6, lsr #24
1000f146:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f14a:	ea8c 0c08 	eor.w	ip, ip, r8
1000f14e:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000f152:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f156:	ea88 0101 	eor.w	r1, r8, r1
1000f15a:	f3c7 4807 	ubfx	r8, r7, #16, #8
1000f15e:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f162:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f166:	9102      	str	r1, [sp, #8]
1000f168:	f853 b027 	ldr.w	fp, [r3, r7, lsl #2]
1000f16c:	6901      	ldr	r1, [r0, #16]
1000f16e:	f3c6 4707 	ubfx	r7, r6, #16, #8
1000f172:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f176:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f17a:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f17e:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000f182:	f853 a028 	ldr.w	sl, [r3, r8, lsl #2]
1000f186:	f3c4 4607 	ubfx	r6, r4, #16, #8
1000f18a:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f18e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1000f192:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f196:	404a      	eors	r2, r1
1000f198:	6941      	ldr	r1, [r0, #20]
1000f19a:	f853 8027 	ldr.w	r8, [r3, r7, lsl #2]
1000f19e:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
1000f1a2:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f1a6:	f3c5 4407 	ubfx	r4, r5, #16, #8
1000f1aa:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f1ae:	ea8e 0e01 	eor.w	lr, lr, r1
1000f1b2:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f1b6:	6981      	ldr	r1, [r0, #24]
1000f1b8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f1bc:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f1c0:	ea8c 0c01 	eor.w	ip, ip, r1
1000f1c4:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f1c8:	ea8c 0c06 	eor.w	ip, ip, r6
1000f1cc:	ea8c 0c05 	eor.w	ip, ip, r5
1000f1d0:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f1d4:	69c5      	ldr	r5, [r0, #28]
1000f1d6:	9902      	ldr	r1, [sp, #8]
1000f1d8:	4069      	eors	r1, r5
1000f1da:	4061      	eors	r1, r4
1000f1dc:	ea81 010b 	eor.w	r1, r1, fp
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f1e0:	b2cc      	uxtb	r4, r1
                       ENC_ROUND_T_S( 0);
1000f1e2:	ea8e 0e08 	eor.w	lr, lr, r8
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f1e6:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                       ENC_ROUND_T_S( 0);
1000f1ea:	ea8e 0e07 	eor.w	lr, lr, r7
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f1ee:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
1000f1f2:	f3ce 4407 	ubfx	r4, lr, #16, #8
1000f1f6:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                       ENC_ROUND_T_S( 0);
1000f1fa:	ea82 020a 	eor.w	r2, r2, sl
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f1fe:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
1000f202:	fa5f f48e 	uxtb.w	r4, lr
1000f206:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                       ENC_ROUND_T_S( 0);
1000f20a:	ea82 0209 	eor.w	r2, r2, r9
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f20e:	9403      	str	r4, [sp, #12]
1000f210:	fa5f f48c 	uxtb.w	r4, ip
1000f214:	f504 7940 	add.w	r9, r4, #768	@ 0x300
1000f218:	0e14      	lsrs	r4, r2, #24
1000f21a:	b2d6      	uxtb	r6, r2
1000f21c:	f3c2 4b07 	ubfx	fp, r2, #16, #8
1000f220:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f224:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f228:	f8cd 9014 	str.w	r9, [sp, #20]
1000f22c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f230:	9204      	str	r2, [sp, #16]
1000f232:	f3cc 2807 	ubfx	r8, ip, #8, #8
1000f236:	6a02      	ldr	r2, [r0, #32]
1000f238:	f508 7800 	add.w	r8, r8, #512	@ 0x200
1000f23c:	406c      	eors	r4, r5
1000f23e:	4054      	eors	r4, r2
1000f240:	ea4f 691e 	mov.w	r9, lr, lsr #24
1000f244:	407c      	eors	r4, r7
1000f246:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f24a:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000f24e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f252:	9a03      	ldr	r2, [sp, #12]
1000f254:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f258:	4067      	eors	r7, r4
1000f25a:	f50e 7a00 	add.w	sl, lr, #512	@ 0x200
1000f25e:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
1000f262:	f8dd 9014 	ldr.w	r9, [sp, #20]
1000f266:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
1000f26a:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
1000f26e:	f3cc 4c07 	ubfx	ip, ip, #16, #8
1000f272:	f50c 7580 	add.w	r5, ip, #256	@ 0x100
1000f276:	4074      	eors	r4, r6
1000f278:	ea4f 6c11 	mov.w	ip, r1, lsr #24
1000f27c:	f853 602e 	ldr.w	r6, [r3, lr, lsl #2]
1000f280:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f284:	9502      	str	r5, [sp, #8]
1000f286:	9a02      	ldr	r2, [sp, #8]
1000f288:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f28c:	ea86 060e 	eor.w	r6, r6, lr
1000f290:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000f294:	f3c1 4507 	ubfx	r5, r1, #16, #8
1000f298:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f29c:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f2a0:	ea8c 0c0e 	eor.w	ip, ip, lr
1000f2a4:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f2a8:	9a04      	ldr	r2, [sp, #16]
1000f2aa:	f853 9021 	ldr.w	r9, [r3, r1, lsl #2]
1000f2ae:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f2b2:	6a42      	ldr	r2, [r0, #36]	@ 0x24
1000f2b4:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f2b8:	4054      	eors	r4, r2
1000f2ba:	6a82      	ldr	r2, [r0, #40]	@ 0x28
1000f2bc:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1000f2c0:	4056      	eors	r6, r2
1000f2c2:	f50b 7b80 	add.w	fp, fp, #256	@ 0x100
1000f2c6:	ea86 0608 	eor.w	r6, r6, r8
1000f2ca:	404e      	eors	r6, r1
1000f2cc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000f2ce:	f853 502b 	ldr.w	r5, [r3, fp, lsl #2]
1000f2d2:	ea8c 0c01 	eor.w	ip, ip, r1
1000f2d6:	ea8c 0c05 	eor.w	ip, ip, r5
1000f2da:	ea8c 0c0a 	eor.w	ip, ip, sl
1000f2de:	fa5f f28c 	uxtb.w	r2, ip
1000f2e2:	ea84 040e 	eor.w	r4, r4, lr
1000f2e6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f2ea:	ea84 0409 	eor.w	r4, r4, r9
1000f2ee:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f2f2:	f3c4 4207 	ubfx	r2, r4, #16, #8
1000f2f6:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f2fa:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000f2fe:	f3c6 2207 	ubfx	r2, r6, #8, #8
1000f302:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f306:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f30a:	9502      	str	r5, [sp, #8]
1000f30c:	b2fa      	uxtb	r2, r7
1000f30e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f312:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f316:	f3c6 4207 	ubfx	r2, r6, #16, #8
1000f31a:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f31e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f322:	9203      	str	r2, [sp, #12]
1000f324:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f328:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f32c:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f330:	f8cd e010 	str.w	lr, [sp, #16]
1000f334:	b2e2      	uxtb	r2, r4
1000f336:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f33a:	fa5f fe86 	uxtb.w	lr, r6
1000f33e:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000f342:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000f346:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f34a:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f34e:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
1000f352:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000f356:	f3c7 2c07 	ubfx	ip, r7, #8, #8
1000f35a:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f35e:	0e36      	lsrs	r6, r6, #24
1000f360:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f364:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f368:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f36c:	ea86 060b 	eor.w	r6, r6, fp
1000f370:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000f374:	f3c7 4707 	ubfx	r7, r7, #16, #8
1000f378:	ea8b 0b01 	eor.w	fp, fp, r1
1000f37c:	f507 7180 	add.w	r1, r7, #256	@ 0x100
1000f380:	0e27      	lsrs	r7, r4, #24
1000f382:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f386:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f38a:	ea87 0c05 	eor.w	ip, r7, r5
1000f38e:	6b05      	ldr	r5, [r0, #48]	@ 0x30
1000f390:	ea8b 0b05 	eor.w	fp, fp, r5
1000f394:	9d02      	ldr	r5, [sp, #8]
1000f396:	ea8b 070a 	eor.w	r7, fp, sl
1000f39a:	406f      	eors	r7, r5
1000f39c:	6b45      	ldr	r5, [r0, #52]	@ 0x34
1000f39e:	ea8c 0c05 	eor.w	ip, ip, r5
1000f3a2:	9d03      	ldr	r5, [sp, #12]
1000f3a4:	ea8c 0c05 	eor.w	ip, ip, r5
1000f3a8:	9d04      	ldr	r5, [sp, #16]
1000f3aa:	ea8c 0c05 	eor.w	ip, ip, r5
1000f3ae:	6b85      	ldr	r5, [r0, #56]	@ 0x38
1000f3b0:	406e      	eors	r6, r5
1000f3b2:	f853 502e 	ldr.w	r5, [r3, lr, lsl #2]
1000f3b6:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f3ba:	ea82 0e05 	eor.w	lr, r2, r5
1000f3be:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f3c2:	f853 5021 	ldr.w	r5, [r3, r1, lsl #2]
1000f3c6:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
1000f3c8:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
1000f3cc:	ea8e 0e01 	eor.w	lr, lr, r1
1000f3d0:	ea8e 0e05 	eor.w	lr, lr, r5
1000f3d4:	ea8e 0e02 	eor.w	lr, lr, r2
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f3d8:	fa5f f28e 	uxtb.w	r2, lr
1000f3dc:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f3e0:	ea86 0609 	eor.w	r6, r6, r9
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f3e4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f3e8:	b2fa      	uxtb	r2, r7
1000f3ea:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f3ee:	ea86 0608 	eor.w	r6, r6, r8
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f3f2:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000f3f6:	fa5f f28c 	uxtb.w	r2, ip
1000f3fa:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f3fe:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f402:	b2f2      	uxtb	r2, r6
1000f404:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f408:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f40c:	0e3a      	lsrs	r2, r7, #24
1000f40e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f412:	4051      	eors	r1, r2
1000f414:	ea4f 621c 	mov.w	r2, ip, lsr #24
1000f418:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f41c:	ea82 0208 	eor.w	r2, r2, r8
1000f420:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f424:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f428:	ea88 0505 	eor.w	r5, r8, r5
1000f42c:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f430:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f434:	ea88 0404 	eor.w	r4, r8, r4
1000f438:	f3cc 4807 	ubfx	r8, ip, #16, #8
1000f43c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f440:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f444:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f448:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f44c:	9402      	str	r4, [sp, #8]
1000f44e:	f853 402c 	ldr.w	r4, [r3, ip, lsl #2]
1000f452:	9403      	str	r4, [sp, #12]
1000f454:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000f458:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f45c:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f460:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f464:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1000f468:	6c04      	ldr	r4, [r0, #64]	@ 0x40
1000f46a:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
1000f46e:	f3ce 4c07 	ubfx	ip, lr, #16, #8
1000f472:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f476:	f50e 7600 	add.w	r6, lr, #512	@ 0x200
1000f47a:	4061      	eors	r1, r4
1000f47c:	6c44      	ldr	r4, [r0, #68]	@ 0x44
1000f47e:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f482:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f486:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f48a:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f48e:	4062      	eors	r2, r4
1000f490:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f494:	6c84      	ldr	r4, [r0, #72]	@ 0x48
1000f496:	f853 e02c 	ldr.w	lr, [r3, ip, lsl #2]
1000f49a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f49e:	4065      	eors	r5, r4
1000f4a0:	ea85 050e 	eor.w	r5, r5, lr
1000f4a4:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f4a8:	407d      	eors	r5, r7
1000f4aa:	9c02      	ldr	r4, [sp, #8]
1000f4ac:	6cc7      	ldr	r7, [r0, #76]	@ 0x4c
1000f4ae:	e001      	b.n	1000f4b4 <AesEncrypt_C+0x3e0>
1000f4b0:	1002284c 	.word	0x1002284c
1000f4b4:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f4b8:	407c      	eors	r4, r7
1000f4ba:	9f03      	ldr	r7, [sp, #12]
1000f4bc:	4074      	eors	r4, r6
1000f4be:	407c      	eors	r4, r7
1000f4c0:	b2e6      	uxtb	r6, r4
1000f4c2:	ea82 0209 	eor.w	r2, r2, r9
1000f4c6:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f4ca:	ea82 0208 	eor.w	r2, r2, r8
1000f4ce:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000f4d2:	f3c2 4607 	ubfx	r6, r2, #16, #8
1000f4d6:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f4da:	ea81 010b 	eor.w	r1, r1, fp
1000f4de:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000f4e2:	f8cd c008 	str.w	ip, [sp, #8]
1000f4e6:	f3c5 4c07 	ubfx	ip, r5, #16, #8
1000f4ea:	f50c 7b80 	add.w	fp, ip, #256	@ 0x100
1000f4ee:	fa5f fc82 	uxtb.w	ip, r2
1000f4f2:	ea81 010a 	eor.w	r1, r1, sl
1000f4f6:	f3c5 2607 	ubfx	r6, r5, #8, #8
1000f4fa:	f50c 7940 	add.w	r9, ip, #768	@ 0x300
1000f4fe:	fa5f fc85 	uxtb.w	ip, r5
1000f502:	0e2d      	lsrs	r5, r5, #24
1000f504:	9504      	str	r5, [sp, #16]
1000f506:	0e0d      	lsrs	r5, r1, #24
1000f508:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f50c:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f510:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000f514:	f8cd e00c 	str.w	lr, [sp, #12]
1000f518:	b2ce      	uxtb	r6, r1
1000f51a:	406f      	eors	r7, r5
1000f51c:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f520:	0e15      	lsrs	r5, r2, #24
1000f522:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f526:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f52a:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1000f52e:	4075      	eors	r5, r6
1000f530:	6d06      	ldr	r6, [r0, #80]	@ 0x50
1000f532:	4077      	eors	r7, r6
1000f534:	9e02      	ldr	r6, [sp, #8]
1000f536:	4077      	eors	r7, r6
1000f538:	9e03      	ldr	r6, [sp, #12]
1000f53a:	4077      	eors	r7, r6
1000f53c:	6d46      	ldr	r6, [r0, #84]	@ 0x54
1000f53e:	4075      	eors	r5, r6
1000f540:	f853 602b 	ldr.w	r6, [r3, fp, lsl #2]
1000f544:	f8dd b010 	ldr.w	fp, [sp, #16]
1000f548:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000f54c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
1000f550:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f554:	f50c 7a40 	add.w	sl, ip, #768	@ 0x300
1000f558:	4075      	eors	r5, r6
1000f55a:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f55e:	f853 602b 	ldr.w	r6, [r3, fp, lsl #2]
1000f562:	f3c1 4c07 	ubfx	ip, r1, #16, #8
1000f566:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f56a:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f56e:	ea86 0909 	eor.w	r9, r6, r9
1000f572:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f576:	f853 6028 	ldr.w	r6, [r3, r8, lsl #2]
1000f57a:	f853 802a 	ldr.w	r8, [r3, sl, lsl #2]
1000f57e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f582:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f586:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f58a:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f58e:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f592:	ea85 0e04 	eor.w	lr, r5, r4
1000f596:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000f59a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f59e:	6d82      	ldr	r2, [r0, #88]	@ 0x58
1000f5a0:	ea86 0608 	eor.w	r6, r6, r8
1000f5a4:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f5a8:	ea89 0c02 	eor.w	ip, r9, r2
1000f5ac:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
1000f5ae:	4056      	eors	r6, r2
1000f5b0:	ea86 0608 	eor.w	r6, r6, r8
1000f5b4:	404e      	eors	r6, r1
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f5b6:	b2f2      	uxtb	r2, r6
1000f5b8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f5bc:	ea8c 0c0a 	eor.w	ip, ip, sl
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f5c0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000f5c4:	b2fa      	uxtb	r2, r7
1000f5c6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f5ca:	ea8c 0c04 	eor.w	ip, ip, r4
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f5ce:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f5d2:	fa5f f28e 	uxtb.w	r2, lr
1000f5d6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f5da:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f5de:	fa5f f28c 	uxtb.w	r2, ip
1000f5e2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f5e6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f5ea:	0e3a      	lsrs	r2, r7, #24
1000f5ec:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f5f0:	ea82 0208 	eor.w	r2, r2, r8
1000f5f4:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f5f8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f5fc:	ea88 0505 	eor.w	r5, r8, r5
1000f600:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000f604:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f608:	ea88 0404 	eor.w	r4, r8, r4
1000f60c:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f610:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f614:	ea88 0101 	eor.w	r1, r8, r1
1000f618:	f3ce 4807 	ubfx	r8, lr, #16, #8
1000f61c:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f620:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
1000f624:	9102      	str	r1, [sp, #8]
1000f626:	f853 102e 	ldr.w	r1, [r3, lr, lsl #2]
1000f62a:	9103      	str	r1, [sp, #12]
1000f62c:	f3cc 4e07 	ubfx	lr, ip, #16, #8
1000f630:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f634:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f638:	6e01      	ldr	r1, [r0, #96]	@ 0x60
1000f63a:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000f63e:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000f642:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f646:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f64a:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f64e:	404a      	eors	r2, r1
1000f650:	6e41      	ldr	r1, [r0, #100]	@ 0x64
1000f652:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f656:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f65a:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f65e:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f662:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f666:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f66a:	404d      	eors	r5, r1
1000f66c:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f670:	6e81      	ldr	r1, [r0, #104]	@ 0x68
1000f672:	f853 902e 	ldr.w	r9, [r3, lr, lsl #2]
1000f676:	f853 e02c 	ldr.w	lr, [r3, ip, lsl #2]
1000f67a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f67e:	404c      	eors	r4, r1
1000f680:	ea84 040e 	eor.w	r4, r4, lr
1000f684:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f688:	407c      	eors	r4, r7
1000f68a:	9902      	ldr	r1, [sp, #8]
1000f68c:	6ec7      	ldr	r7, [r0, #108]	@ 0x6c
1000f68e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f692:	4079      	eors	r1, r7
1000f694:	9f03      	ldr	r7, [sp, #12]
1000f696:	4071      	eors	r1, r6
1000f698:	4079      	eors	r1, r7
1000f69a:	ea82 020b 	eor.w	r2, r2, fp
1000f69e:	ea85 0509 	eor.w	r5, r5, r9
1000f6a2:	ea82 020a 	eor.w	r2, r2, sl
1000f6a6:	ea85 0508 	eor.w	r5, r5, r8
1000f6aa:	fa5f f881 	uxtb.w	r8, r1
1000f6ae:	0e17      	lsrs	r7, r2, #24
1000f6b0:	f508 7840 	add.w	r8, r8, #768	@ 0x300
1000f6b4:	fa5f fe82 	uxtb.w	lr, r2
1000f6b8:	b2e6      	uxtb	r6, r4
1000f6ba:	f853 9027 	ldr.w	r9, [r3, r7, lsl #2]
1000f6be:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000f6c2:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f6c6:	fa5f fc85 	uxtb.w	ip, r5
1000f6ca:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f6ce:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000f6d2:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f6d6:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f6da:	ea89 0707 	eor.w	r7, r9, r7
1000f6de:	0e2e      	lsrs	r6, r5, #24
1000f6e0:	f853 902e 	ldr.w	r9, [r3, lr, lsl #2]
1000f6e4:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f6e8:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f6ec:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f6f0:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f6f4:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f6f8:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f6fc:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f700:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f704:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000f708:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f70c:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f710:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f714:	ea8c 0c08 	eor.w	ip, ip, r8
1000f718:	ea4f 6811 	mov.w	r8, r1, lsr #24
1000f71c:	ea86 0609 	eor.w	r6, r6, r9
1000f720:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000f724:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f728:	f3c1 4407 	ubfx	r4, r1, #16, #8
1000f72c:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f730:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f734:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f738:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f73c:	ea88 0b0b 	eor.w	fp, r8, fp
1000f740:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1000f744:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
1000f748:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000f74c:	f3c2 4107 	ubfx	r1, r2, #16, #8
1000f750:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f754:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f758:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000f75c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f760:	9202      	str	r2, [sp, #8]
1000f762:	6f02      	ldr	r2, [r0, #112]	@ 0x70
1000f764:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000f768:	4057      	eors	r7, r2
1000f76a:	6f42      	ldr	r2, [r0, #116]	@ 0x74
1000f76c:	4056      	eors	r6, r2
1000f76e:	ea86 0608 	eor.w	r6, r6, r8
1000f772:	4066      	eors	r6, r4
1000f774:	6f84      	ldr	r4, [r0, #120]	@ 0x78
1000f776:	9a02      	ldr	r2, [sp, #8]
1000f778:	ea8c 0c04 	eor.w	ip, ip, r4
1000f77c:	6fc4      	ldr	r4, [r0, #124]	@ 0x7c
1000f77e:	ea8c 0c05 	eor.w	ip, ip, r5
1000f782:	ea8b 0404 	eor.w	r4, fp, r4
1000f786:	ea8c 0c02 	eor.w	ip, ip, r2
1000f78a:	404c      	eors	r4, r1
1000f78c:	4672      	mov	r2, lr
1000f78e:	4054      	eors	r4, r2
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f790:	b2e2      	uxtb	r2, r4
1000f792:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f796:	ea87 070a 	eor.w	r7, r7, sl
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f79a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f79e:	f3c6 4207 	ubfx	r2, r6, #16, #8
1000f7a2:	f502 7280 	add.w	r2, r2, #256	@ 0x100
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f7a6:	ea87 0709 	eor.w	r7, r7, r9
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f7aa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f7ae:	9202      	str	r2, [sp, #8]
1000f7b0:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f7b4:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f7b8:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000f7bc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f7c0:	9103      	str	r1, [sp, #12]
1000f7c2:	b2fa      	uxtb	r2, r7
1000f7c4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f7c8:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000f7cc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f7d0:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000f7d4:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f7d8:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f7dc:	f8cd e010 	str.w	lr, [sp, #16]
1000f7e0:	f3c4 2207 	ubfx	r2, r4, #8, #8
1000f7e4:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f7e8:	fa5f fe8c 	uxtb.w	lr, ip
1000f7ec:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000f7f0:	f8cd 8014 	str.w	r8, [sp, #20]
1000f7f4:	b2f2      	uxtb	r2, r6
1000f7f6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f7fa:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f7fe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f802:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f806:	ea8c 0202 	eor.w	r2, ip, r2
1000f80a:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f80e:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f812:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000f816:	ea8b 0b05 	eor.w	fp, fp, r5
1000f81a:	0e35      	lsrs	r5, r6, #24
1000f81c:	f507 7c00 	add.w	ip, r7, #512	@ 0x200
1000f820:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f824:	9f02      	ldr	r7, [sp, #8]
1000f826:	ea85 0a01 	eor.w	sl, r5, r1
1000f82a:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
1000f82e:	ea8b 0b05 	eor.w	fp, fp, r5
1000f832:	9d03      	ldr	r5, [sp, #12]
1000f834:	ea8b 0707 	eor.w	r7, fp, r7
1000f838:	406f      	eors	r7, r5
1000f83a:	f8d0 5084 	ldr.w	r5, [r0, #132]	@ 0x84
1000f83e:	ea8a 0a05 	eor.w	sl, sl, r5
1000f842:	9d04      	ldr	r5, [sp, #16]
1000f844:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000f848:	ea8a 0a05 	eor.w	sl, sl, r5
1000f84c:	f3c4 4407 	ubfx	r4, r4, #16, #8
1000f850:	9d05      	ldr	r5, [sp, #20]
1000f852:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f856:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f85a:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f85e:	f506 7100 	add.w	r1, r6, #512	@ 0x200
1000f862:	ea8a 0605 	eor.w	r6, sl, r5
1000f866:	f8d0 5088 	ldr.w	r5, [r0, #136]	@ 0x88
1000f86a:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f86e:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000f872:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f876:	406a      	eors	r2, r5
1000f878:	f853 502e 	ldr.w	r5, [r3, lr, lsl #2]
1000f87c:	ea82 0e04 	eor.w	lr, r2, r4
1000f880:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000f884:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
1000f888:	ea8e 0e02 	eor.w	lr, lr, r2
1000f88c:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
1000f890:	ea88 0505 	eor.w	r5, r8, r5
1000f894:	ea85 0c02 	eor.w	ip, r5, r2
1000f898:	ea8c 0c04 	eor.w	ip, ip, r4
1000f89c:	ea8c 0c01 	eor.w	ip, ip, r1
1000f8a0:	fa5f f28c 	uxtb.w	r2, ip
1000f8a4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f8a8:	ea4f 6817 	mov.w	r8, r7, lsr #24
1000f8ac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f8b0:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f8b4:	b2fa      	uxtb	r2, r7
1000f8b6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f8ba:	ea88 0101 	eor.w	r1, r8, r1
1000f8be:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f8c2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f8c6:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f8ca:	b2f2      	uxtb	r2, r6
1000f8cc:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f8d0:	ea88 0505 	eor.w	r5, r8, r5
1000f8d4:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f8d8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f8dc:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f8e0:	fa5f f28e 	uxtb.w	r2, lr
1000f8e4:	ea88 0404 	eor.w	r4, r8, r4
1000f8e8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f8ec:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000f8f0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f8f4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f8f8:	ea88 0202 	eor.w	r2, r8, r2
1000f8fc:	f3c6 4807 	ubfx	r8, r6, #16, #8
1000f900:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f904:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f908:	9202      	str	r2, [sp, #8]
1000f90a:	f853 2026 	ldr.w	r2, [r3, r6, lsl #2]
1000f90e:	9203      	str	r2, [sp, #12]
1000f910:	f3ce 4607 	ubfx	r6, lr, #16, #8
1000f914:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f918:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f91c:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000f920:	f3cc 4607 	ubfx	r6, ip, #16, #8
1000f924:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f928:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
1000f92c:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f930:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f934:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f938:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000f93c:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90
1000f940:	4051      	eors	r1, r2
1000f942:	f8d0 2094 	ldr.w	r2, [r0, #148]	@ 0x94
1000f946:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f94a:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f94e:	4055      	eors	r5, r2
1000f950:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f954:	f8d0 2098 	ldr.w	r2, [r0, #152]	@ 0x98
1000f958:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f95c:	4054      	eors	r4, r2
1000f95e:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f962:	ea84 040e 	eor.w	r4, r4, lr
1000f966:	9a02      	ldr	r2, [sp, #8]
1000f968:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f96c:	407c      	eors	r4, r7
1000f96e:	f8d0 709c 	ldr.w	r7, [r0, #156]	@ 0x9c
1000f972:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f976:	407a      	eors	r2, r7
1000f978:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f97c:	4072      	eors	r2, r6
    if (r > 5) {
1000f97e:	9e00      	ldr	r6, [sp, #0]
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f980:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f984:	9f03      	ldr	r7, [sp, #12]
1000f986:	ea81 010b 	eor.w	r1, r1, fp
1000f98a:	ea85 0509 	eor.w	r5, r5, r9
    if (r > 5) {
1000f98e:	2e05      	cmp	r6, #5
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f990:	ea81 010a 	eor.w	r1, r1, sl
1000f994:	ea85 0508 	eor.w	r5, r5, r8
1000f998:	ea82 0207 	eor.w	r2, r2, r7
    if (r > 5) {
1000f99c:	f240 81ed 	bls.w	1000fd7a <AesEncrypt_C+0xca6>
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000f9a0:	b2d6      	uxtb	r6, r2
1000f9a2:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f9a6:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f9aa:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000f9ae:	b2ce      	uxtb	r6, r1
1000f9b0:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f9b4:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f9b8:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000f9bc:	b2ee      	uxtb	r6, r5
1000f9be:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f9c2:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f9c6:	b2e6      	uxtb	r6, r4
1000f9c8:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f9cc:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f9d0:	0e0e      	lsrs	r6, r1, #24
1000f9d2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f9d6:	4077      	eors	r7, r6
1000f9d8:	0e2e      	lsrs	r6, r5, #24
1000f9da:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f9de:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f9e2:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f9e6:	ea86 060c 	eor.w	r6, r6, ip
1000f9ea:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f9ee:	f853 a025 	ldr.w	sl, [r3, r5, lsl #2]
1000f9f2:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f9f6:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f9fa:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f9fe:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fa02:	ea8c 0c08 	eor.w	ip, ip, r8
1000fa06:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000fa0a:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000fa0e:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000fa12:	f3c2 4407 	ubfx	r4, r2, #16, #8
1000fa16:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000fa1a:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000fa1e:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fa22:	ea88 0b0b 	eor.w	fp, r8, fp
1000fa26:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000fa2a:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000fa2e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000fa32:	f3c1 4207 	ubfx	r2, r1, #16, #8
1000fa36:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000fa3a:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000fa3e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fa42:	9202      	str	r2, [sp, #8]
1000fa44:	f8d0 20a0 	ldr.w	r2, [r0, #160]	@ 0xa0
1000fa48:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fa4c:	4057      	eors	r7, r2
1000fa4e:	f8d0 20a4 	ldr.w	r2, [r0, #164]	@ 0xa4
1000fa52:	4056      	eors	r6, r2
1000fa54:	ea86 060e 	eor.w	r6, r6, lr
1000fa58:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000fa5c:	4075      	eors	r5, r6
1000fa5e:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000fa62:	f8d0 60a8 	ldr.w	r6, [r0, #168]	@ 0xa8
1000fa66:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000fa6a:	9a02      	ldr	r2, [sp, #8]
1000fa6c:	ea8c 0c06 	eor.w	ip, ip, r6
1000fa70:	ea8c 0c04 	eor.w	ip, ip, r4
1000fa74:	ea8c 0c01 	eor.w	ip, ip, r1
1000fa78:	f8d0 10ac 	ldr.w	r1, [r0, #172]	@ 0xac
1000fa7c:	ea8b 0601 	eor.w	r6, fp, r1
1000fa80:	4056      	eors	r6, r2
1000fa82:	4652      	mov	r2, sl
1000fa84:	4056      	eors	r6, r2
1000fa86:	b2f2      	uxtb	r2, r6
1000fa88:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fa8c:	f3cc 4407 	ubfx	r4, ip, #16, #8
1000fa90:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000fa94:	f3c5 4207 	ubfx	r2, r5, #16, #8
1000fa98:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000fa9c:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000faa0:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000faa4:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000faa8:	9403      	str	r4, [sp, #12]
1000faaa:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000faae:	f3c6 2407 	ubfx	r4, r6, #8, #8
1000fab2:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fab6:	ea87 0708 	eor.w	r7, r7, r8
1000faba:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fabe:	ea87 0709 	eor.w	r7, r7, r9
1000fac2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fac6:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000faca:	9202      	str	r2, [sp, #8]
1000facc:	b2ec      	uxtb	r4, r5
1000face:	b2fa      	uxtb	r2, r7
1000fad0:	f8cd e010 	str.w	lr, [sp, #16]
1000fad4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fad8:	fa5f fe8c 	uxtb.w	lr, ip
1000fadc:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1000fae0:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000fae4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fae8:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000faec:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000faf0:	ea8c 0404 	eor.w	r4, ip, r4
1000faf4:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000faf8:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000fafc:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fb00:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000fb04:	ea8c 0101 	eor.w	r1, ip, r1
1000fb08:	ea4f 6c15 	mov.w	ip, r5, lsr #24
1000fb0c:	f3c6 4607 	ubfx	r6, r6, #16, #8
1000fb10:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000fb14:	ea8a 0a02 	eor.w	sl, sl, r2
1000fb18:	f8d0 20b0 	ldr.w	r2, [r0, #176]	@ 0xb0
1000fb1c:	4051      	eors	r1, r2
1000fb1e:	9a02      	ldr	r2, [sp, #8]
1000fb20:	ea81 010b 	eor.w	r1, r1, fp
1000fb24:	4051      	eors	r1, r2
1000fb26:	f8d0 20b4 	ldr.w	r2, [r0, #180]	@ 0xb4
1000fb2a:	ea8a 0a02 	eor.w	sl, sl, r2
1000fb2e:	9a03      	ldr	r2, [sp, #12]
1000fb30:	ea8a 0a02 	eor.w	sl, sl, r2
1000fb34:	9a04      	ldr	r2, [sp, #16]
1000fb36:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fb3a:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fb3e:	f505 7c00 	add.w	ip, r5, #512	@ 0x200
1000fb42:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000fb46:	ea8a 0502 	eor.w	r5, sl, r2
1000fb4a:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000fb4e:	f8d0 20b8 	ldr.w	r2, [r0, #184]	@ 0xb8
1000fb52:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fb56:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000fb5a:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000fb5e:	4054      	eors	r4, r2
1000fb60:	4074      	eors	r4, r6
1000fb62:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
1000fb66:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
1000fb6a:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
1000fb6e:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000fb72:	4074      	eors	r4, r6
1000fb74:	f8d0 60bc 	ldr.w	r6, [r0, #188]	@ 0xbc
1000fb78:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000fb7c:	ea88 0202 	eor.w	r2, r8, r2
1000fb80:	4072      	eors	r2, r6
        if (r > 6) {
1000fb82:	9e00      	ldr	r6, [sp, #0]
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000fb84:	ea82 020e 	eor.w	r2, r2, lr
        if (r > 6) {
1000fb88:	2e06      	cmp	r6, #6
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000fb8a:	ea82 0207 	eor.w	r2, r2, r7
        if (r > 6) {
1000fb8e:	f000 80f4 	beq.w	1000fd7a <AesEncrypt_C+0xca6>
            ENC_ROUND_S_T(48); ENC_ROUND_T_S(48);
1000fb92:	b2d6      	uxtb	r6, r2
1000fb94:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fb98:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000fb9c:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000fba0:	b2ce      	uxtb	r6, r1
1000fba2:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fba6:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000fbaa:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000fbae:	b2ee      	uxtb	r6, r5
1000fbb0:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fbb4:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000fbb8:	b2e6      	uxtb	r6, r4
1000fbba:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fbbe:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000fbc2:	0e0e      	lsrs	r6, r1, #24
1000fbc4:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fbc8:	4077      	eors	r7, r6
1000fbca:	0e2e      	lsrs	r6, r5, #24
1000fbcc:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fbd0:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fbd4:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000fbd8:	ea86 060c 	eor.w	r6, r6, ip
1000fbdc:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000fbe0:	f853 a025 	ldr.w	sl, [r3, r5, lsl #2]
1000fbe4:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fbe8:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000fbec:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000fbf0:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fbf4:	ea8c 0c08 	eor.w	ip, ip, r8
1000fbf8:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000fbfc:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000fc00:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000fc04:	f3c2 4407 	ubfx	r4, r2, #16, #8
1000fc08:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000fc0c:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000fc10:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fc14:	ea88 0b0b 	eor.w	fp, r8, fp
1000fc18:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000fc1c:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000fc20:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000fc24:	f3c1 4207 	ubfx	r2, r1, #16, #8
1000fc28:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000fc2c:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000fc30:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fc34:	9202      	str	r2, [sp, #8]
1000fc36:	f8d0 20c0 	ldr.w	r2, [r0, #192]	@ 0xc0
1000fc3a:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fc3e:	4057      	eors	r7, r2
1000fc40:	f8d0 20c4 	ldr.w	r2, [r0, #196]	@ 0xc4
1000fc44:	4056      	eors	r6, r2
1000fc46:	ea86 060e 	eor.w	r6, r6, lr
1000fc4a:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000fc4e:	4075      	eors	r5, r6
1000fc50:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000fc54:	f8d0 60c8 	ldr.w	r6, [r0, #200]	@ 0xc8
1000fc58:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000fc5c:	9a02      	ldr	r2, [sp, #8]
1000fc5e:	ea8c 0c06 	eor.w	ip, ip, r6
1000fc62:	ea8c 0c04 	eor.w	ip, ip, r4
1000fc66:	ea8c 0c01 	eor.w	ip, ip, r1
1000fc6a:	f8d0 10cc 	ldr.w	r1, [r0, #204]	@ 0xcc
1000fc6e:	ea8b 0601 	eor.w	r6, fp, r1
1000fc72:	4056      	eors	r6, r2
1000fc74:	4652      	mov	r2, sl
1000fc76:	4056      	eors	r6, r2
1000fc78:	b2f2      	uxtb	r2, r6
1000fc7a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fc7e:	f3cc 4407 	ubfx	r4, ip, #16, #8
1000fc82:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000fc86:	f3c5 4207 	ubfx	r2, r5, #16, #8
1000fc8a:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000fc8e:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000fc92:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000fc96:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fc9a:	9403      	str	r4, [sp, #12]
1000fc9c:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000fca0:	f3c6 2407 	ubfx	r4, r6, #8, #8
1000fca4:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fca8:	ea87 0708 	eor.w	r7, r7, r8
1000fcac:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fcb0:	ea87 0709 	eor.w	r7, r7, r9
1000fcb4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fcb8:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000fcbc:	9202      	str	r2, [sp, #8]
1000fcbe:	b2ec      	uxtb	r4, r5
1000fcc0:	b2fa      	uxtb	r2, r7
1000fcc2:	f8cd e010 	str.w	lr, [sp, #16]
1000fcc6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fcca:	fa5f fe8c 	uxtb.w	lr, ip
1000fcce:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1000fcd2:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000fcd6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fcda:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fcde:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fce2:	ea8c 0404 	eor.w	r4, ip, r4
1000fce6:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000fcea:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000fcee:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fcf2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000fcf6:	ea8c 0101 	eor.w	r1, ip, r1
1000fcfa:	ea4f 6c15 	mov.w	ip, r5, lsr #24
1000fcfe:	f3c6 4607 	ubfx	r6, r6, #16, #8
1000fd02:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000fd06:	ea8a 0a02 	eor.w	sl, sl, r2
1000fd0a:	f8d0 20d0 	ldr.w	r2, [r0, #208]	@ 0xd0
1000fd0e:	4051      	eors	r1, r2
1000fd10:	9a02      	ldr	r2, [sp, #8]
1000fd12:	ea81 010b 	eor.w	r1, r1, fp
1000fd16:	4051      	eors	r1, r2
1000fd18:	f8d0 20d4 	ldr.w	r2, [r0, #212]	@ 0xd4
1000fd1c:	ea8a 0a02 	eor.w	sl, sl, r2
1000fd20:	9a03      	ldr	r2, [sp, #12]
1000fd22:	ea8a 0a02 	eor.w	sl, sl, r2
1000fd26:	9a04      	ldr	r2, [sp, #16]
1000fd28:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fd2c:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fd30:	f505 7c00 	add.w	ip, r5, #512	@ 0x200
1000fd34:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000fd38:	ea8a 0502 	eor.w	r5, sl, r2
1000fd3c:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000fd40:	f8d0 20d8 	ldr.w	r2, [r0, #216]	@ 0xd8
1000fd44:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fd48:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000fd4c:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000fd50:	4054      	eors	r4, r2
1000fd52:	4074      	eors	r4, r6
1000fd54:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
1000fd58:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
1000fd5c:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
1000fd60:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000fd64:	4074      	eors	r4, r6
1000fd66:	f8d0 60dc 	ldr.w	r6, [r0, #220]	@ 0xdc
1000fd6a:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000fd6e:	ea88 0202 	eor.w	r2, r8, r2
1000fd72:	4072      	eors	r2, r6
1000fd74:	ea82 020e 	eor.w	r2, r2, lr
1000fd78:	407a      	eors	r2, r7
#ifndef WOLFSSL_AES_TOUCH_LINES
    s0 =
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fd7a:	b2d6      	uxtb	r6, r2
1000fd7c:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
        rk[1];
    s2 =
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fd80:	ea4f 6914 	mov.w	r9, r4, lsr #24
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fd84:	f813 c026 	ldrb.w	ip, [r3, r6, lsl #2]
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000fd88:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000fd8c:	f506 7640 	add.w	r6, r6, #768	@ 0x300
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fd90:	f509 7900 	add.w	r9, r9, #512	@ 0x200
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000fd94:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fd98:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000fd9c:	f406 087f 	and.w	r8, r6, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
1000fda0:	0e0e      	lsrs	r6, r1, #24
1000fda2:	f506 7600 	add.w	r6, r6, #512	@ 0x200
        rk[2];
    s3 =
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fda6:	fa5f fa84 	uxtb.w	sl, r4
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
1000fdaa:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fdae:	f006 467f 	and.w	r6, r6, #4278190080	@ 0xff000000
1000fdb2:	ea48 0806 	orr.w	r8, r8, r6
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fdb6:	b2ce      	uxtb	r6, r1
1000fdb8:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fdbc:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fdc0:	f813 7026 	ldrb.w	r7, [r3, r6, lsl #2]
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
1000fdc4:	f3c4 4607 	ubfx	r6, r4, #16, #8
1000fdc8:	f506 7640 	add.w	r6, r6, #768	@ 0x300
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000fdcc:	f3c4 2407 	ubfx	r4, r4, #8, #8
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
1000fdd0:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fdd4:	f406 0e7f 	and.w	lr, r6, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t1, 3)) & 0xff000000) ^
1000fdd8:	0e2e      	lsrs	r6, r5, #24
1000fdda:	f506 7600 	add.w	r6, r6, #512	@ 0x200
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fdde:	f009 497f 	and.w	r9, r9, #4278190080	@ 0xff000000
        (GetTable(Te[2], GETBYTE(t1, 3)) & 0xff000000) ^
1000fde2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fde6:	f006 467f 	and.w	r6, r6, #4278190080	@ 0xff000000
1000fdea:	ea4e 0e06 	orr.w	lr, lr, r6
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fdee:	b2ee      	uxtb	r6, r5
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
1000fdf0:	f3c5 2507 	ubfx	r5, r5, #8, #8
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fdf4:	ea4f 6b12 	mov.w	fp, r2, lsr #24
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
1000fdf8:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000fdfc:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
1000fe00:	9502      	str	r5, [sp, #8]
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000fe02:	f3c2 4507 	ubfx	r5, r2, #16, #8
1000fe06:	f505 7540 	add.w	r5, r5, #768	@ 0x300
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000fe0a:	f3c2 2207 	ubfx	r2, r2, #8, #8
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000fe0e:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000fe12:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000fe16:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fe1a:	ea45 0509 	orr.w	r5, r5, r9
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000fe1e:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fe22:	f813 402a 	ldrb.w	r4, [r3, sl, lsl #2]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fe26:	f3c1 4a07 	ubfx	sl, r1, #16, #8
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fe2a:	f50b 7b00 	add.w	fp, fp, #512	@ 0x200
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fe2e:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000fe32:	f3c1 2107 	ubfx	r1, r1, #8, #8
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fe36:	f50a 7a40 	add.w	sl, sl, #768	@ 0x300
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fe3a:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000fe3e:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fe42:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fe46:	f853 302b 	ldr.w	r3, [r3, fp, lsl #2]
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000fe4a:	f402 4b7f 	and.w	fp, r2, #65280	@ 0xff00
    rk += r * 8;
1000fe4e:	9a00      	ldr	r2, [sp, #0]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fe50:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fe54:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
1000fe58:	ea4a 0303 	orr.w	r3, sl, r3
    rk += r * 8;
1000fe5c:	eb00 1a42 	add.w	sl, r0, r2, lsl #5
1000fe60:	0152      	lsls	r2, r2, #5
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000fe62:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fe66:	5882      	ldr	r2, [r0, r2]
1000fe68:	ea8c 0c02 	eor.w	ip, ip, r2
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fe6c:	f8da 2004 	ldr.w	r2, [sl, #4]
1000fe70:	4057      	eors	r7, r2
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fe72:	f8da 2008 	ldr.w	r2, [sl, #8]
1000fe76:	4056      	eors	r6, r2
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fe78:	f8da 200c 	ldr.w	r2, [sl, #12]
1000fe7c:	4054      	eors	r4, r2
1000fe7e:	9a02      	ldr	r2, [sp, #8]
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000fe80:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fe84:	ea8c 0c09 	eor.w	ip, ip, r9
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fe88:	ea87 070b 	eor.w	r7, r7, fp
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fe8c:	404e      	eors	r6, r1
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fe8e:	4054      	eors	r4, r2
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    XMEMCPY(outBlock,                  &s0, sizeof(s0));
1000fe90:	9901      	ldr	r1, [sp, #4]
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fe92:	ea8c 0c08 	eor.w	ip, ip, r8
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fe96:	ea87 070e 	eor.w	r7, r7, lr
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fe9a:	406e      	eors	r6, r5
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fe9c:	405c      	eors	r4, r3
1000fe9e:	fa9c fc8c 	rev.w	ip, ip
    s1 = ByteReverseWord32(s1);
1000fea2:	ba3f      	rev	r7, r7
    s2 = ByteReverseWord32(s2);
1000fea4:	ba36      	rev	r6, r6
    s3 = ByteReverseWord32(s3);
1000fea6:	ba24      	rev	r4, r4
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
1000fea8:	f8c1 c000 	str.w	ip, [r1]
    XMEMCPY(outBlock +     sizeof(s0), &s1, sizeof(s1));
1000feac:	604f      	str	r7, [r1, #4]
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
1000feae:	608e      	str	r6, [r1, #8]
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
1000feb0:	60cc      	str	r4, [r1, #12]
}
1000feb2:	b007      	add	sp, #28
1000feb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1000feb8 <AesDecrypt_C>:
 * @param [out] outBlock  Encrypted block.
 * @param [in]  r         Rounds divided by 2.
 */
static void AesDecrypt_C(Aes* aes, const byte* inBlock, byte* outBlock,
    word32 r)
{
1000feb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000febc:	b087      	sub	sp, #28
1000febe:	680d      	ldr	r5, [r1, #0]
1000fec0:	684c      	ldr	r4, [r1, #4]
1000fec2:	f8d1 9008 	ldr.w	r9, [r1, #8]
1000fec6:	68ce      	ldr	r6, [r1, #12]
1000fec8:	e9cd 3200 	strd	r3, r2, [sp]
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    s0 ^= rk[0];
1000fecc:	6803      	ldr	r3, [r0, #0]
1000fece:	ba2d      	rev	r5, r5
1000fed0:	405d      	eors	r5, r3
    s1 ^= rk[1];
1000fed2:	6843      	ldr	r3, [r0, #4]
1000fed4:	ba24      	rev	r4, r4
1000fed6:	405c      	eors	r4, r3
    s2 ^= rk[2];
1000fed8:	6883      	ldr	r3, [r0, #8]
1000feda:	fa99 f989 	rev.w	r9, r9
1000fede:	ea89 0903 	eor.w	r9, r9, r3
    s3 ^= rk[3];
1000fee2:	68c3      	ldr	r3, [r0, #12]
                          &s2, GETBYTE(t3, 0), &s3, GETBYTE(t0, 0));           \
    s0 ^= rk[(o)+0]; s1 ^= rk[(o)+1]; s2 ^= rk[(o)+2]; s3 ^= rk[(o)+3];
#endif

#ifndef WOLFSSL_AES_NO_UNROLL
                       DEC_ROUND_T_S( 0);
1000fee4:	fa5f fc84 	uxtb.w	ip, r4
1000fee8:	fa5f f789 	uxtb.w	r7, r9
1000feec:	b2ea      	uxtb	r2, r5
1000feee:	ba36      	rev	r6, r6
    s3 ^= rk[3];
1000fef0:	405e      	eors	r6, r3
                       DEC_ROUND_T_S( 0);
1000fef2:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000fef6:	4be8      	ldr	r3, [pc, #928]	@ (10010298 <AesDecrypt_C+0x3e0>)
1000fef8:	f507 7740 	add.w	r7, r7, #768	@ 0x300
1000fefc:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ff00:	b2f1      	uxtb	r1, r6
1000ff02:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000ff06:	f853 c027 	ldr.w	ip, [r3, r7, lsl #2]
1000ff0a:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
1000ff0e:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000ff12:	0e2a      	lsrs	r2, r5, #24
1000ff14:	f853 e021 	ldr.w	lr, [r3, r1, lsl #2]
1000ff18:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000ff1c:	0e22      	lsrs	r2, r4, #24
1000ff1e:	ea81 0108 	eor.w	r1, r1, r8
1000ff22:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ff26:	ea82 020c 	eor.w	r2, r2, ip
1000ff2a:	ea4f 6c19 	mov.w	ip, r9, lsr #24
1000ff2e:	9202      	str	r2, [sp, #8]
1000ff30:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000ff34:	ea8c 0c0e 	eor.w	ip, ip, lr
1000ff38:	ea4f 6e16 	mov.w	lr, r6, lsr #24
1000ff3c:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
1000ff40:	ea8b 0b07 	eor.w	fp, fp, r7
1000ff44:	f3c6 4707 	ubfx	r7, r6, #16, #8
1000ff48:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000ff4c:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000ff50:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1000ff54:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000ff58:	f853 a027 	ldr.w	sl, [r3, r7, lsl #2]
1000ff5c:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000ff60:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000ff64:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000ff68:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000ff6c:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000ff70:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1000ff74:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000ff78:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000ff7c:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000ff80:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000ff84:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
1000ff88:	9203      	str	r2, [sp, #12]
1000ff8a:	6902      	ldr	r2, [r0, #16]
1000ff8c:	9c02      	ldr	r4, [sp, #8]
1000ff8e:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1000ff92:	4051      	eors	r1, r2
1000ff94:	6942      	ldr	r2, [r0, #20]
1000ff96:	f3c9 4507 	ubfx	r5, r9, #16, #8
1000ff9a:	f3c9 2907 	ubfx	r9, r9, #8, #8
1000ff9e:	4054      	eors	r4, r2
1000ffa0:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000ffa4:	f509 7900 	add.w	r9, r9, #512	@ 0x200
1000ffa8:	ea84 0208 	eor.w	r2, r4, r8
1000ffac:	ea82 020e 	eor.w	r2, r2, lr
1000ffb0:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000ffb4:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1000ffb8:	f8d0 e018 	ldr.w	lr, [r0, #24]
1000ffbc:	9c03      	ldr	r4, [sp, #12]
1000ffbe:	ea8c 0c0e 	eor.w	ip, ip, lr
1000ffc2:	ea8c 0c07 	eor.w	ip, ip, r7
1000ffc6:	ea8c 0c06 	eor.w	ip, ip, r6
1000ffca:	69c6      	ldr	r6, [r0, #28]
1000ffcc:	ea8b 0b06 	eor.w	fp, fp, r6
1000ffd0:	ea8b 0b05 	eor.w	fp, fp, r5
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000ffd4:	b2d5      	uxtb	r5, r2
1000ffd6:	f505 7540 	add.w	r5, r5, #768	@ 0x300
                       DEC_ROUND_T_S( 0);
1000ffda:	ea8b 0404 	eor.w	r4, fp, r4
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000ffde:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1000ffe2:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000ffe6:	f505 7580 	add.w	r5, r5, #256	@ 0x100
                       DEC_ROUND_T_S( 0);
1000ffea:	ea81 010a 	eor.w	r1, r1, sl
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000ffee:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1000fff2:	9702      	str	r7, [sp, #8]
1000fff4:	fa5f f58c 	uxtb.w	r5, ip
                       DEC_ROUND_T_S( 0);
1000fff8:	ea81 0109 	eor.w	r1, r1, r9
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fffc:	f505 7b40 	add.w	fp, r5, #768	@ 0x300
10010000:	b2e5      	uxtb	r5, r4
10010002:	f505 7e40 	add.w	lr, r5, #768	@ 0x300
10010006:	b2cd      	uxtb	r5, r1
10010008:	f505 7940 	add.w	r9, r5, #768	@ 0x300
1001000c:	0e0d      	lsrs	r5, r1, #24
1001000e:	ea4f 6812 	mov.w	r8, r2, lsr #24
10010012:	f3c2 4a07 	ubfx	sl, r2, #16, #8
10010016:	f3c2 2207 	ubfx	r2, r2, #8, #8
1001001a:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001001e:	f8cd e00c 	str.w	lr, [sp, #12]
10010022:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010026:	9205      	str	r2, [sp, #20]
10010028:	f3cc 2707 	ubfx	r7, ip, #8, #8
1001002c:	6a02      	ldr	r2, [r0, #32]
1001002e:	4075      	eors	r5, r6
10010030:	f507 7700 	add.w	r7, r7, #512	@ 0x200
10010034:	4055      	eors	r5, r2
10010036:	9a02      	ldr	r2, [sp, #8]
10010038:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1001003c:	4055      	eors	r5, r2
1001003e:	406f      	eors	r7, r5
10010040:	9a03      	ldr	r2, [sp, #12]
10010042:	f853 5028 	ldr.w	r5, [r3, r8, lsl #2]
10010046:	f853 802b 	ldr.w	r8, [r3, fp, lsl #2]
1001004a:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
1001004e:	f3cc 4c07 	ubfx	ip, ip, #16, #8
10010052:	f50c 7680 	add.w	r6, ip, #256	@ 0x100
10010056:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1001005a:	9604      	str	r6, [sp, #16]
1001005c:	ea4f 6c14 	mov.w	ip, r4, lsr #24
10010060:	ea85 0508 	eor.w	r5, r5, r8
10010064:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
10010068:	9a05      	ldr	r2, [sp, #20]
1001006a:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1001006e:	f3c1 4607 	ubfx	r6, r1, #16, #8
10010072:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
10010076:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1001007a:	ea8e 0e08 	eor.w	lr, lr, r8
1001007e:	f3c4 2407 	ubfx	r4, r4, #8, #8
10010082:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
10010086:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
1001008a:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1001008e:	6a42      	ldr	r2, [r0, #36]	@ 0x24
10010090:	f504 7400 	add.w	r4, r4, #512	@ 0x200
10010094:	ea8c 0c08 	eor.w	ip, ip, r8
10010098:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1001009c:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
100100a0:	9e04      	ldr	r6, [sp, #16]
100100a2:	4055      	eors	r5, r2
100100a4:	ea85 0508 	eor.w	r5, r5, r8
100100a8:	f3c1 2107 	ubfx	r1, r1, #8, #8
100100ac:	4065      	eors	r5, r4
100100ae:	f501 7100 	add.w	r1, r1, #512	@ 0x200
100100b2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
100100b4:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
100100b8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100100bc:	ea8e 0e04 	eor.w	lr, lr, r4
100100c0:	ea8e 0e09 	eor.w	lr, lr, r9
100100c4:	ea8e 0e01 	eor.w	lr, lr, r1
100100c8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
100100ca:	b2ea      	uxtb	r2, r5
100100cc:	ea8c 0c01 	eor.w	ip, ip, r1
100100d0:	ea8c 0c06 	eor.w	ip, ip, r6
100100d4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100100d8:	ea8c 0c0a 	eor.w	ip, ip, sl
100100dc:	f3c7 4107 	ubfx	r1, r7, #16, #8
100100e0:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
100100e4:	f3cc 4207 	ubfx	r2, ip, #16, #8
100100e8:	f502 7280 	add.w	r2, r2, #256	@ 0x100
100100ec:	f501 7180 	add.w	r1, r1, #256	@ 0x100
100100f0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100100f4:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
100100f8:	9103      	str	r1, [sp, #12]
100100fa:	f3cc 2107 	ubfx	r1, ip, #8, #8
100100fe:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010102:	9202      	str	r2, [sp, #8]
10010104:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
10010108:	f8cd 8010 	str.w	r8, [sp, #16]
1001010c:	fa5f f18c 	uxtb.w	r1, ip
10010110:	f501 7140 	add.w	r1, r1, #768	@ 0x300
10010114:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
10010118:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1001011c:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
10010120:	f3c5 4107 	ubfx	r1, r5, #16, #8
10010124:	f501 7180 	add.w	r1, r1, #256	@ 0x100
10010128:	f3ce 2207 	ubfx	r2, lr, #8, #8
1001012c:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
10010130:	f3c7 2107 	ubfx	r1, r7, #8, #8
10010134:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010138:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1001013c:	f853 c021 	ldr.w	ip, [r3, r1, lsl #2]
10010140:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
10010144:	b2f9      	uxtb	r1, r7
10010146:	0e3f      	lsrs	r7, r7, #24
10010148:	fa5f f28e 	uxtb.w	r2, lr
1001014c:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010150:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010154:	ea87 0a0a 	eor.w	sl, r7, sl
10010158:	0e2f      	lsrs	r7, r5, #24
1001015a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001015e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010162:	f3c5 2507 	ubfx	r5, r5, #8, #8
10010166:	ea87 0902 	eor.w	r9, r7, r2
1001016a:	f505 7200 	add.w	r2, r5, #512	@ 0x200
1001016e:	ea4f 651e 	mov.w	r5, lr, lsr #24
10010172:	f501 7140 	add.w	r1, r1, #768	@ 0x300
10010176:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1001017a:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1001017e:	4067      	eors	r7, r4
10010180:	6b04      	ldr	r4, [r0, #48]	@ 0x30
10010182:	ea8a 0a04 	eor.w	sl, sl, r4
10010186:	9c02      	ldr	r4, [sp, #8]
10010188:	ea8a 0a04 	eor.w	sl, sl, r4
1001018c:	6b44      	ldr	r4, [r0, #52]	@ 0x34
1001018e:	ea89 0904 	eor.w	r9, r9, r4
10010192:	9c03      	ldr	r4, [sp, #12]
10010194:	ea89 0904 	eor.w	r9, r9, r4
10010198:	9c04      	ldr	r4, [sp, #16]
1001019a:	ea8b 0b01 	eor.w	fp, fp, r1
1001019e:	ea89 0504 	eor.w	r5, r9, r4
100101a2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100101a6:	6b84      	ldr	r4, [r0, #56]	@ 0x38
100101a8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
100101aa:	f3ce 4e07 	ubfx	lr, lr, #16, #8
100101ae:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100101b2:	4067      	eors	r7, r4
100101b4:	ea8b 0b02 	eor.w	fp, fp, r2
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100101b8:	b2ea      	uxtb	r2, r5
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
100101ba:	f853 402e 	ldr.w	r4, [r3, lr, lsl #2]
100101be:	ea87 0708 	eor.w	r7, r7, r8
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100101c2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
100101c6:	ea87 070c 	eor.w	r7, r7, ip
100101ca:	ea8b 0b04 	eor.w	fp, fp, r4
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100101ce:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
100101d2:	b2fa      	uxtb	r2, r7
100101d4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
100101d8:	ea8b 0b01 	eor.w	fp, fp, r1
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100101dc:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
100101e0:	fa5f f28b 	uxtb.w	r2, fp
100101e4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
100101e8:	ea8a 0606 	eor.w	r6, sl, r6
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100101ec:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100101f0:	b2f2      	uxtb	r2, r6
100101f2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100101f6:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
100101fa:	0e32      	lsrs	r2, r6, #24
100101fc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010200:	4054      	eors	r4, r2
10010202:	0e2a      	lsrs	r2, r5, #24
10010204:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010208:	ea82 020e 	eor.w	r2, r2, lr
1001020c:	ea4f 6e17 	mov.w	lr, r7, lsr #24
10010210:	9202      	str	r2, [sp, #8]
10010212:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010216:	ea8e 0101 	eor.w	r1, lr, r1
1001021a:	ea4f 6e1b 	mov.w	lr, fp, lsr #24
1001021e:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010222:	ea8e 0808 	eor.w	r8, lr, r8
10010226:	f3cb 4e07 	ubfx	lr, fp, #16, #8
1001022a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
1001022e:	f50b 7c00 	add.w	ip, fp, #512	@ 0x200
10010232:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010236:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1001023a:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
1001023e:	9203      	str	r2, [sp, #12]
10010240:	f3c6 4c07 	ubfx	ip, r6, #16, #8
10010244:	f3c6 2607 	ubfx	r6, r6, #8, #8
10010248:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1001024c:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010250:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
10010254:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
10010258:	6c02      	ldr	r2, [r0, #64]	@ 0x40
1001025a:	f3c5 4607 	ubfx	r6, r5, #16, #8
1001025e:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010262:	4054      	eors	r4, r2
10010264:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
10010268:	9a02      	ldr	r2, [sp, #8]
1001026a:	f3c7 4607 	ubfx	r6, r7, #16, #8
1001026e:	f3c7 2707 	ubfx	r7, r7, #8, #8
10010272:	f507 7700 	add.w	r7, r7, #512	@ 0x200
10010276:	ea84 040b 	eor.w	r4, r4, fp
1001027a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1001027e:	ea84 0a07 	eor.w	sl, r4, r7
10010282:	6c47      	ldr	r7, [r0, #68]	@ 0x44
10010284:	9c03      	ldr	r4, [sp, #12]
10010286:	407a      	eors	r2, r7
10010288:	6c87      	ldr	r7, [r0, #72]	@ 0x48
1001028a:	ea82 0209 	eor.w	r2, r2, r9
1001028e:	f3c5 2507 	ubfx	r5, r5, #8, #8
10010292:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010296:	e001      	b.n	1001029c <AesDecrypt_C+0x3e4>
10010298:	1002184c 	.word	0x1002184c
1001029c:	4062      	eors	r2, r4
1001029e:	f505 7500 	add.w	r5, r5, #512	@ 0x200
100102a2:	ea81 0407 	eor.w	r4, r1, r7
100102a6:	6cc7      	ldr	r7, [r0, #76]	@ 0x4c
100102a8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100102ac:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100102b0:	ea88 0107 	eor.w	r1, r8, r7
100102b4:	ea84 040e 	eor.w	r4, r4, lr
100102b8:	ea84 040c 	eor.w	r4, r4, ip
100102bc:	4071      	eors	r1, r6
100102be:	f3ca 4c07 	ubfx	ip, sl, #16, #8
100102c2:	4069      	eors	r1, r5
100102c4:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
100102c8:	f8cd c00c 	str.w	ip, [sp, #12]
100102cc:	fa5f fc81 	uxtb.w	ip, r1
100102d0:	f50c 7e40 	add.w	lr, ip, #768	@ 0x300
100102d4:	b2d5      	uxtb	r5, r2
100102d6:	fa5f fc8a 	uxtb.w	ip, sl
100102da:	f50c 7940 	add.w	r9, ip, #768	@ 0x300
100102de:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100102e2:	ea4f 6c1a 	mov.w	ip, sl, lsr #24
100102e6:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100102ea:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
100102ee:	f8cd e010 	str.w	lr, [sp, #16]
100102f2:	b2e7      	uxtb	r7, r4
100102f4:	ea8b 0b05 	eor.w	fp, fp, r5
100102f8:	f507 7740 	add.w	r7, r7, #768	@ 0x300
100102fc:	0e15      	lsrs	r5, r2, #24
100102fe:	f3c1 4607 	ubfx	r6, r1, #16, #8
10010302:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010306:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001030a:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1001030e:	407d      	eors	r5, r7
10010310:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010314:	6d07      	ldr	r7, [r0, #80]	@ 0x50
10010316:	9602      	str	r6, [sp, #8]
10010318:	ea8b 0b07 	eor.w	fp, fp, r7
1001031c:	9f02      	ldr	r7, [sp, #8]
1001031e:	ea8b 0b07 	eor.w	fp, fp, r7
10010322:	6d47      	ldr	r7, [r0, #84]	@ 0x54
10010324:	407d      	eors	r5, r7
10010326:	9f03      	ldr	r7, [sp, #12]
10010328:	f3c4 2607 	ubfx	r6, r4, #8, #8
1001032c:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010330:	ea4f 6814 	mov.w	r8, r4, lsr #24
10010334:	ea4f 6e11 	mov.w	lr, r1, lsr #24
10010338:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1001033c:	f3c1 2107 	ubfx	r1, r1, #8, #8
10010340:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010344:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010348:	f3c2 4c07 	ubfx	ip, r2, #16, #8
1001034c:	407d      	eors	r5, r7
1001034e:	f3c2 2207 	ubfx	r2, r2, #8, #8
10010352:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
10010356:	f8dd 8010 	ldr.w	r8, [sp, #16]
1001035a:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1001035e:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010362:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010366:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1001036a:	404d      	eors	r5, r1
1001036c:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
10010370:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10010374:	6d82      	ldr	r2, [r0, #88]	@ 0x58
10010376:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1001037a:	ea87 0708 	eor.w	r7, r7, r8
1001037e:	f3ca 2a07 	ubfx	sl, sl, #8, #8
10010382:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
10010386:	f50a 7a00 	add.w	sl, sl, #512	@ 0x200
1001038a:	4057      	eors	r7, r2
1001038c:	f3c4 4407 	ubfx	r4, r4, #16, #8
10010390:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
10010392:	ea8e 0e08 	eor.w	lr, lr, r8
10010396:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1001039a:	f853 802a 	ldr.w	r8, [r3, sl, lsl #2]
1001039e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
100103a2:	ea87 070c 	eor.w	r7, r7, ip
100103a6:	ea8e 0c02 	eor.w	ip, lr, r2
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
100103aa:	b2ea      	uxtb	r2, r5
100103ac:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100103b0:	ea87 0708 	eor.w	r7, r7, r8
100103b4:	ea8c 0c04 	eor.w	ip, ip, r4
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
100103b8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
100103bc:	b2fa      	uxtb	r2, r7
100103be:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100103c2:	ea8c 0c01 	eor.w	ip, ip, r1
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
100103c6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100103ca:	fa5f f28c 	uxtb.w	r2, ip
100103ce:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
100103d2:	ea8b 0606 	eor.w	r6, fp, r6
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
100103d6:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
100103da:	b2f2      	uxtb	r2, r6
100103dc:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100103e0:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
100103e4:	0e32      	lsrs	r2, r6, #24
100103e6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100103ea:	4054      	eors	r4, r2
100103ec:	0e2a      	lsrs	r2, r5, #24
100103ee:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100103f2:	4051      	eors	r1, r2
100103f4:	0e3a      	lsrs	r2, r7, #24
100103f6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100103fa:	ea82 0208 	eor.w	r2, r2, r8
100103fe:	ea4f 681c 	mov.w	r8, ip, lsr #24
10010402:	9202      	str	r2, [sp, #8]
10010404:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010408:	6e02      	ldr	r2, [r0, #96]	@ 0x60
1001040a:	ea88 0e0e 	eor.w	lr, r8, lr
1001040e:	f3cc 4807 	ubfx	r8, ip, #16, #8
10010412:	f3cc 2c07 	ubfx	ip, ip, #8, #8
10010416:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1001041a:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1001041e:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
10010422:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
10010426:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1001042a:	f3c6 2607 	ubfx	r6, r6, #8, #8
1001042e:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
10010432:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010436:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1001043a:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1001043e:	f3c5 4607 	ubfx	r6, r5, #16, #8
10010442:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010446:	4054      	eors	r4, r2
10010448:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
1001044c:	9a02      	ldr	r2, [sp, #8]
1001044e:	f3c7 4607 	ubfx	r6, r7, #16, #8
10010452:	f3c7 2707 	ubfx	r7, r7, #8, #8
10010456:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1001045a:	ea84 040b 	eor.w	r4, r4, fp
1001045e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010462:	407c      	eors	r4, r7
10010464:	6e47      	ldr	r7, [r0, #100]	@ 0x64
10010466:	f3c5 2507 	ubfx	r5, r5, #8, #8
1001046a:	4079      	eors	r1, r7
1001046c:	f505 7500 	add.w	r5, r5, #512	@ 0x200
10010470:	6e87      	ldr	r7, [r0, #104]	@ 0x68
10010472:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
10010476:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1001047a:	407a      	eors	r2, r7
1001047c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010480:	6ec7      	ldr	r7, [r0, #108]	@ 0x6c
10010482:	ea82 020a 	eor.w	r2, r2, sl
10010486:	ea82 020c 	eor.w	r2, r2, ip
1001048a:	ea81 0109 	eor.w	r1, r1, r9
1001048e:	ea8e 0c07 	eor.w	ip, lr, r7
10010492:	ea81 0108 	eor.w	r1, r1, r8
10010496:	ea8c 0c06 	eor.w	ip, ip, r6
1001049a:	ea8c 0c05 	eor.w	ip, ip, r5
1001049e:	fa5f f881 	uxtb.w	r8, r1
100104a2:	fa5f fe82 	uxtb.w	lr, r2
100104a6:	b2e5      	uxtb	r5, r4
100104a8:	0e26      	lsrs	r6, r4, #24
100104aa:	f508 7840 	add.w	r8, r8, #768	@ 0x300
100104ae:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
100104b2:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100104b6:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
100104ba:	f853 6028 	ldr.w	r6, [r3, r8, lsl #2]
100104be:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
100104c2:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
100104c6:	0e0d      	lsrs	r5, r1, #24
100104c8:	fa5f f78c 	uxtb.w	r7, ip
100104cc:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100104d0:	f507 7740 	add.w	r7, r7, #768	@ 0x300
100104d4:	ea85 0508 	eor.w	r5, r5, r8
100104d8:	ea4f 6812 	mov.w	r8, r2, lsr #24
100104dc:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
100104e0:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100104e4:	ea88 0707 	eor.w	r7, r8, r7
100104e8:	ea4f 681c 	mov.w	r8, ip, lsr #24
100104ec:	f3c2 4a07 	ubfx	sl, r2, #16, #8
100104f0:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100104f4:	f3c2 2207 	ubfx	r2, r2, #8, #8
100104f8:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100104fc:	ea88 080e 	eor.w	r8, r8, lr
10010500:	f3cc 4e07 	ubfx	lr, ip, #16, #8
10010504:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010508:	9202      	str	r2, [sp, #8]
1001050a:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1001050e:	6f02      	ldr	r2, [r0, #112]	@ 0x70
10010510:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
10010514:	ea89 0606 	eor.w	r6, r9, r6
10010518:	4056      	eors	r6, r2
1001051a:	9a02      	ldr	r2, [sp, #8]
1001051c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
10010520:	ea86 060b 	eor.w	r6, r6, fp
10010524:	4056      	eors	r6, r2
10010526:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1001052a:	6f42      	ldr	r2, [r0, #116]	@ 0x74
1001052c:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010530:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
10010534:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010538:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1001053c:	4055      	eors	r5, r2
1001053e:	6f82      	ldr	r2, [r0, #120]	@ 0x78
10010540:	f3c1 4907 	ubfx	r9, r1, #16, #8
10010544:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
10010548:	f3c1 2107 	ubfx	r1, r1, #8, #8
1001054c:	ea85 050e 	eor.w	r5, r5, lr
10010550:	4057      	eors	r7, r2
10010552:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010556:	6fc2      	ldr	r2, [r0, #124]	@ 0x7c
10010558:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
1001055c:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010560:	ea85 0c0c 	eor.w	ip, r5, ip
10010564:	ea88 0e02 	eor.w	lr, r8, r2
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010568:	fa5f f28c 	uxtb.w	r2, ip
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001056c:	ea8e 0e0a 	eor.w	lr, lr, sl
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010570:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
10010574:	f3c4 2407 	ubfx	r4, r4, #8, #8
10010578:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1001057c:	ea8e 0e01 	eor.w	lr, lr, r1
10010580:	f504 7400 	add.w	r4, r4, #512	@ 0x200
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010584:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
10010588:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1001058c:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010590:	f3ce 4207 	ubfx	r2, lr, #16, #8
10010594:	f502 7280 	add.w	r2, r2, #256	@ 0x100
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
10010598:	ea87 0709 	eor.w	r7, r7, r9
1001059c:	4067      	eors	r7, r4
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
1001059e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100105a2:	9202      	str	r2, [sp, #8]
100105a4:	f3c7 2207 	ubfx	r2, r7, #8, #8
100105a8:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100105ac:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
100105b0:	f8cd 800c 	str.w	r8, [sp, #12]
100105b4:	b2fa      	uxtb	r2, r7
100105b6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100105ba:	fa5f f886 	uxtb.w	r8, r6
100105be:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
100105c2:	f3c6 4207 	ubfx	r2, r6, #16, #8
100105c6:	f502 7280 	add.w	r2, r2, #256	@ 0x100
100105ca:	f508 7840 	add.w	r8, r8, #768	@ 0x300
100105ce:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
100105d2:	f8cd 9010 	str.w	r9, [sp, #16]
100105d6:	f3ce 2207 	ubfx	r2, lr, #8, #8
100105da:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100105de:	f3cc 4907 	ubfx	r9, ip, #16, #8
100105e2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
100105e6:	fa5f f28e 	uxtb.w	r2, lr
100105ea:	ea4f 6e1e 	mov.w	lr, lr, lsr #24
100105ee:	f8cd e014 	str.w	lr, [sp, #20]
100105f2:	ea4f 6e16 	mov.w	lr, r6, lsr #24
100105f6:	f3c6 2607 	ubfx	r6, r6, #8, #8
100105fa:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100105fe:	ea8b 0b01 	eor.w	fp, fp, r1
10010602:	f506 7100 	add.w	r1, r6, #512	@ 0x200
10010606:	ea4f 661c 	mov.w	r6, ip, lsr #24
1001060a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001060e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010612:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010616:	ea86 0a04 	eor.w	sl, r6, r4
1001061a:	0e3c      	lsrs	r4, r7, #24
1001061c:	f3c7 4707 	ubfx	r7, r7, #16, #8
10010620:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010624:	ea84 0e02 	eor.w	lr, r4, r2
10010628:	f8d0 4080 	ldr.w	r4, [r0, #128]	@ 0x80
1001062c:	ea8b 0b04 	eor.w	fp, fp, r4
10010630:	9c02      	ldr	r4, [sp, #8]
10010632:	ea8b 0b04 	eor.w	fp, fp, r4
10010636:	9c03      	ldr	r4, [sp, #12]
10010638:	ea8b 0604 	eor.w	r6, fp, r4
1001063c:	f8d0 4084 	ldr.w	r4, [r0, #132]	@ 0x84
10010640:	ea8a 0a04 	eor.w	sl, sl, r4
10010644:	9c04      	ldr	r4, [sp, #16]
10010646:	ea8a 0a04 	eor.w	sl, sl, r4
1001064a:	f8d0 4088 	ldr.w	r4, [r0, #136]	@ 0x88
1001064e:	f507 7280 	add.w	r2, r7, #256	@ 0x100
10010652:	ea8e 0704 	eor.w	r7, lr, r4
10010656:	f8dd e014 	ldr.w	lr, [sp, #20]
1001065a:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
1001065e:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010662:	f509 7980 	add.w	r9, r9, #256	@ 0x100
10010666:	ea8e 0404 	eor.w	r4, lr, r4
1001066a:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1001066e:	ea87 070e 	eor.w	r7, r7, lr
10010672:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010676:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001067a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1001067e:	4057      	eors	r7, r2
10010680:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
10010684:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
10010688:	f853 102c 	ldr.w	r1, [r3, ip, lsl #2]
1001068c:	ea8a 0505 	eor.w	r5, sl, r5
10010690:	ea84 0c02 	eor.w	ip, r4, r2
10010694:	b2ea      	uxtb	r2, r5
10010696:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001069a:	ea8c 0c0e 	eor.w	ip, ip, lr
1001069e:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
100106a2:	b2fa      	uxtb	r2, r7
100106a4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100106a8:	ea8c 0c01 	eor.w	ip, ip, r1
100106ac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100106b0:	fa5f f28c 	uxtb.w	r2, ip
100106b4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100106b8:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
100106bc:	b2f2      	uxtb	r2, r6
100106be:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100106c2:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
100106c6:	0e32      	lsrs	r2, r6, #24
100106c8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100106cc:	4054      	eors	r4, r2
100106ce:	0e2a      	lsrs	r2, r5, #24
100106d0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100106d4:	4051      	eors	r1, r2
100106d6:	0e3a      	lsrs	r2, r7, #24
100106d8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100106dc:	ea82 0208 	eor.w	r2, r2, r8
100106e0:	ea4f 681c 	mov.w	r8, ip, lsr #24
100106e4:	9202      	str	r2, [sp, #8]
100106e6:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100106ea:	ea88 080e 	eor.w	r8, r8, lr
100106ee:	f3cc 4e07 	ubfx	lr, ip, #16, #8
100106f2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
100106f6:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
100106fa:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100106fe:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
10010702:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
10010706:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1001070a:	f3c6 2607 	ubfx	r6, r6, #8, #8
1001070e:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
10010712:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010716:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1001071a:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1001071e:	f3c5 4607 	ubfx	r6, r5, #16, #8
10010722:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010726:	f3c5 2507 	ubfx	r5, r5, #8, #8
1001072a:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1001072e:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
10010732:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
10010736:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90
1001073a:	f3c7 4607 	ubfx	r6, r7, #16, #8
1001073e:	f3c7 2707 	ubfx	r7, r7, #8, #8
10010742:	f507 7700 	add.w	r7, r7, #512	@ 0x200
10010746:	4054      	eors	r4, r2
10010748:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1001074c:	9a02      	ldr	r2, [sp, #8]
1001074e:	ea84 040b 	eor.w	r4, r4, fp
10010752:	407c      	eors	r4, r7
10010754:	f8d0 7094 	ldr.w	r7, [r0, #148]	@ 0x94
10010758:	4079      	eors	r1, r7
1001075a:	f8d0 7098 	ldr.w	r7, [r0, #152]	@ 0x98
1001075e:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010762:	407a      	eors	r2, r7
10010764:	f8d0 709c 	ldr.w	r7, [r0, #156]	@ 0x9c
10010768:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1001076c:	ea82 020e 	eor.w	r2, r2, lr
10010770:	ea82 020c 	eor.w	r2, r2, ip
10010774:	ea88 0c07 	eor.w	ip, r8, r7
10010778:	ea8c 0c06 	eor.w	ip, ip, r6
1001077c:	ea8c 0c05 	eor.w	ip, ip, r5
    if (r > 5) {
10010780:	9d00      	ldr	r5, [sp, #0]
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010782:	ea81 0109 	eor.w	r1, r1, r9
    if (r > 5) {
10010786:	2d05      	cmp	r5, #5
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010788:	ea81 010a 	eor.w	r1, r1, sl
    if (r > 5) {
1001078c:	f240 81ee 	bls.w	10010b6c <AesDecrypt_C+0xcb4>
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
10010790:	b2cd      	uxtb	r5, r1
10010792:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010796:	f3c2 4a07 	ubfx	sl, r2, #16, #8
1001079a:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1001079e:	b2d5      	uxtb	r5, r2
100107a0:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100107a4:	f3c1 4907 	ubfx	r9, r1, #16, #8
100107a8:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
100107ac:	fa5f f58c 	uxtb.w	r5, ip
100107b0:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100107b4:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
100107b8:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
100107bc:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
100107c0:	b2e5      	uxtb	r5, r4
100107c2:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100107c6:	f509 7980 	add.w	r9, r9, #256	@ 0x100
100107ca:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
100107ce:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
100107d2:	0e25      	lsrs	r5, r4, #24
100107d4:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100107d8:	406e      	eors	r6, r5
100107da:	0e0d      	lsrs	r5, r1, #24
100107dc:	f3c1 2107 	ubfx	r1, r1, #8, #8
100107e0:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100107e4:	ea85 0508 	eor.w	r5, r5, r8
100107e8:	ea4f 6812 	mov.w	r8, r2, lsr #24
100107ec:	f3c2 2207 	ubfx	r2, r2, #8, #8
100107f0:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100107f4:	ea88 0707 	eor.w	r7, r8, r7
100107f8:	ea4f 681c 	mov.w	r8, ip, lsr #24
100107fc:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010800:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010804:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010808:	9202      	str	r2, [sp, #8]
1001080a:	ea88 080e 	eor.w	r8, r8, lr
1001080e:	f3cc 4e07 	ubfx	lr, ip, #16, #8
10010812:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010816:	f8d0 20a0 	ldr.w	r2, [r0, #160]	@ 0xa0
1001081a:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
1001081e:	4056      	eors	r6, r2
10010820:	9a02      	ldr	r2, [sp, #8]
10010822:	f3c4 4e07 	ubfx	lr, r4, #16, #8
10010826:	ea86 060b 	eor.w	r6, r6, fp
1001082a:	4056      	eors	r6, r2
1001082c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
10010830:	f8d0 20a4 	ldr.w	r2, [r0, #164]	@ 0xa4
10010834:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010838:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1001083c:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010840:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
10010844:	4055      	eors	r5, r2
10010846:	f8d0 20a8 	ldr.w	r2, [r0, #168]	@ 0xa8
1001084a:	ea85 050e 	eor.w	r5, r5, lr
1001084e:	4057      	eors	r7, r2
10010850:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010854:	f8d0 20ac 	ldr.w	r2, [r0, #172]	@ 0xac
10010858:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1001085c:	ea85 050c 	eor.w	r5, r5, ip
10010860:	f3c4 2407 	ubfx	r4, r4, #8, #8
10010864:	ea88 0c02 	eor.w	ip, r8, r2
10010868:	b2ea      	uxtb	r2, r5
1001086a:	ea8c 0c0a 	eor.w	ip, ip, sl
1001086e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010872:	f504 7400 	add.w	r4, r4, #512	@ 0x200
10010876:	ea8c 0c01 	eor.w	ip, ip, r1
1001087a:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1001087e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010882:	f3cc 4207 	ubfx	r2, ip, #16, #8
10010886:	ea87 0709 	eor.w	r7, r7, r9
1001088a:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1001088e:	4067      	eors	r7, r4
10010890:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010894:	f3c7 2207 	ubfx	r2, r7, #8, #8
10010898:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1001089c:	ea4f 6816 	mov.w	r8, r6, lsr #24
100108a0:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
100108a4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100108a8:	b2fa      	uxtb	r2, r7
100108aa:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100108ae:	ea4f 6a1c 	mov.w	sl, ip, lsr #24
100108b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100108b6:	f3c6 4207 	ubfx	r2, r6, #16, #8
100108ba:	f502 7280 	add.w	r2, r2, #256	@ 0x100
100108be:	ea88 080e 	eor.w	r8, r8, lr
100108c2:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
100108c6:	f3cc 2207 	ubfx	r2, ip, #8, #8
100108ca:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100108ce:	ea4f 6e15 	mov.w	lr, r5, lsr #24
100108d2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100108d6:	9202      	str	r2, [sp, #8]
100108d8:	fa5f f28c 	uxtb.w	r2, ip
100108dc:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100108e0:	fa5f fc86 	uxtb.w	ip, r6
100108e4:	f3c6 2607 	ubfx	r6, r6, #8, #8
100108e8:	f506 7600 	add.w	r6, r6, #512	@ 0x200
100108ec:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100108f0:	9603      	str	r6, [sp, #12]
100108f2:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100108f6:	ea8e 0101 	eor.w	r1, lr, r1
100108fa:	ea4f 6e17 	mov.w	lr, r7, lsr #24
100108fe:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
10010902:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010906:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1001090a:	ea8e 0602 	eor.w	r6, lr, r2
1001090e:	f8d0 20b0 	ldr.w	r2, [r0, #176]	@ 0xb0
10010912:	ea88 0802 	eor.w	r8, r8, r2
10010916:	f8d0 20b4 	ldr.w	r2, [r0, #180]	@ 0xb4
1001091a:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1001091e:	4051      	eors	r1, r2
10010920:	9a02      	ldr	r2, [sp, #8]
10010922:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010926:	ea81 010b 	eor.w	r1, r1, fp
1001092a:	4051      	eors	r1, r2
1001092c:	f8d0 20b8 	ldr.w	r2, [r0, #184]	@ 0xb8
10010930:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010934:	4056      	eors	r6, r2
10010936:	ea86 020e 	eor.w	r2, r6, lr
1001093a:	9e03      	ldr	r6, [sp, #12]
1001093c:	f3c5 2507 	ubfx	r5, r5, #8, #8
10010940:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010944:	f505 7500 	add.w	r5, r5, #512	@ 0x200
10010948:	ea88 0804 	eor.w	r8, r8, r4
1001094c:	f3c7 4707 	ubfx	r7, r7, #16, #8
10010950:	ea88 0409 	eor.w	r4, r8, r9
10010954:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
10010958:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1001095c:	4072      	eors	r2, r6
1001095e:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
10010962:	f8d0 50bc 	ldr.w	r5, [r0, #188]	@ 0xbc
10010966:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1001096a:	ea89 0c0c 	eor.w	ip, r9, ip
1001096e:	ea8c 0c05 	eor.w	ip, ip, r5
        if (r > 6) {
10010972:	9d00      	ldr	r5, [sp, #0]
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
10010974:	ea8c 0c07 	eor.w	ip, ip, r7
        if (r > 6) {
10010978:	2d06      	cmp	r5, #6
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
1001097a:	ea8c 0c06 	eor.w	ip, ip, r6
        if (r > 6) {
1001097e:	f000 80f5 	beq.w	10010b6c <AesDecrypt_C+0xcb4>
            DEC_ROUND_S_T(48); DEC_ROUND_T_S(48);
10010982:	b2cd      	uxtb	r5, r1
10010984:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010988:	f3c2 4a07 	ubfx	sl, r2, #16, #8
1001098c:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
10010990:	b2d5      	uxtb	r5, r2
10010992:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010996:	f3c1 4907 	ubfx	r9, r1, #16, #8
1001099a:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1001099e:	fa5f f58c 	uxtb.w	r5, ip
100109a2:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100109a6:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
100109aa:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
100109ae:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
100109b2:	b2e5      	uxtb	r5, r4
100109b4:	f505 7540 	add.w	r5, r5, #768	@ 0x300
100109b8:	f509 7980 	add.w	r9, r9, #256	@ 0x100
100109bc:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
100109c0:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
100109c4:	0e25      	lsrs	r5, r4, #24
100109c6:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100109ca:	406e      	eors	r6, r5
100109cc:	0e0d      	lsrs	r5, r1, #24
100109ce:	f3c1 2107 	ubfx	r1, r1, #8, #8
100109d2:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100109d6:	ea85 0508 	eor.w	r5, r5, r8
100109da:	ea4f 6812 	mov.w	r8, r2, lsr #24
100109de:	f3c2 2207 	ubfx	r2, r2, #8, #8
100109e2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100109e6:	ea88 0707 	eor.w	r7, r8, r7
100109ea:	ea4f 681c 	mov.w	r8, ip, lsr #24
100109ee:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100109f2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100109f6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100109fa:	9202      	str	r2, [sp, #8]
100109fc:	ea88 080e 	eor.w	r8, r8, lr
10010a00:	f3cc 4e07 	ubfx	lr, ip, #16, #8
10010a04:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010a08:	f8d0 20c0 	ldr.w	r2, [r0, #192]	@ 0xc0
10010a0c:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
10010a10:	4056      	eors	r6, r2
10010a12:	9a02      	ldr	r2, [sp, #8]
10010a14:	f3c4 4e07 	ubfx	lr, r4, #16, #8
10010a18:	ea86 060b 	eor.w	r6, r6, fp
10010a1c:	4056      	eors	r6, r2
10010a1e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
10010a22:	f8d0 20c4 	ldr.w	r2, [r0, #196]	@ 0xc4
10010a26:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010a2a:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
10010a2e:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010a32:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
10010a36:	4055      	eors	r5, r2
10010a38:	f8d0 20c8 	ldr.w	r2, [r0, #200]	@ 0xc8
10010a3c:	ea85 050e 	eor.w	r5, r5, lr
10010a40:	4057      	eors	r7, r2
10010a42:	f501 7100 	add.w	r1, r1, #512	@ 0x200
10010a46:	f8d0 20cc 	ldr.w	r2, [r0, #204]	@ 0xcc
10010a4a:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010a4e:	ea85 050c 	eor.w	r5, r5, ip
10010a52:	f3c4 2407 	ubfx	r4, r4, #8, #8
10010a56:	ea88 0c02 	eor.w	ip, r8, r2
10010a5a:	b2ea      	uxtb	r2, r5
10010a5c:	ea8c 0c0a 	eor.w	ip, ip, sl
10010a60:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010a64:	f504 7400 	add.w	r4, r4, #512	@ 0x200
10010a68:	ea8c 0c01 	eor.w	ip, ip, r1
10010a6c:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010a70:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010a74:	f3cc 4207 	ubfx	r2, ip, #16, #8
10010a78:	ea87 0709 	eor.w	r7, r7, r9
10010a7c:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010a80:	4067      	eors	r7, r4
10010a82:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010a86:	f3c7 2207 	ubfx	r2, r7, #8, #8
10010a8a:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010a8e:	ea4f 6816 	mov.w	r8, r6, lsr #24
10010a92:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
10010a96:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010a9a:	b2fa      	uxtb	r2, r7
10010a9c:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010aa0:	ea4f 6a1c 	mov.w	sl, ip, lsr #24
10010aa4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10010aa8:	f3c6 4207 	ubfx	r2, r6, #16, #8
10010aac:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010ab0:	ea88 080e 	eor.w	r8, r8, lr
10010ab4:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
10010ab8:	f3cc 2207 	ubfx	r2, ip, #8, #8
10010abc:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010ac0:	ea4f 6e15 	mov.w	lr, r5, lsr #24
10010ac4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010ac8:	9202      	str	r2, [sp, #8]
10010aca:	fa5f f28c 	uxtb.w	r2, ip
10010ace:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010ad2:	fa5f fc86 	uxtb.w	ip, r6
10010ad6:	f3c6 2607 	ubfx	r6, r6, #8, #8
10010ada:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010ade:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010ae2:	9603      	str	r6, [sp, #12]
10010ae4:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010ae8:	ea8e 0101 	eor.w	r1, lr, r1
10010aec:	ea4f 6e17 	mov.w	lr, r7, lsr #24
10010af0:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
10010af4:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010af8:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
10010afc:	ea8e 0602 	eor.w	r6, lr, r2
10010b00:	f8d0 20d0 	ldr.w	r2, [r0, #208]	@ 0xd0
10010b04:	ea88 0802 	eor.w	r8, r8, r2
10010b08:	f8d0 20d4 	ldr.w	r2, [r0, #212]	@ 0xd4
10010b0c:	f3c5 4e07 	ubfx	lr, r5, #16, #8
10010b10:	4051      	eors	r1, r2
10010b12:	9a02      	ldr	r2, [sp, #8]
10010b14:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010b18:	ea81 010b 	eor.w	r1, r1, fp
10010b1c:	4051      	eors	r1, r2
10010b1e:	f8d0 20d8 	ldr.w	r2, [r0, #216]	@ 0xd8
10010b22:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010b26:	4056      	eors	r6, r2
10010b28:	f3c7 4707 	ubfx	r7, r7, #16, #8
10010b2c:	f3c5 2507 	ubfx	r5, r5, #8, #8
10010b30:	ea86 020e 	eor.w	r2, r6, lr
10010b34:	f507 7780 	add.w	r7, r7, #256	@ 0x100
10010b38:	9e03      	ldr	r6, [sp, #12]
10010b3a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010b3e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010b42:	f505 7500 	add.w	r5, r5, #512	@ 0x200
10010b46:	ea88 0804 	eor.w	r8, r8, r4
10010b4a:	ea88 0409 	eor.w	r4, r8, r9
10010b4e:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
10010b52:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
10010b56:	f8d0 30dc 	ldr.w	r3, [r0, #220]	@ 0xdc
10010b5a:	ea89 0c0c 	eor.w	ip, r9, ip
10010b5e:	ea8c 0c03 	eor.w	ip, ip, r3
10010b62:	ea8c 0c07 	eor.w	ip, ip, r7
10010b66:	4072      	eors	r2, r6
10010b68:	ea8c 0c05 	eor.w	ip, ip, r5

#ifndef WC_NO_CACHE_RESISTANT
    t0 |= PreFetchTd4();
#endif

    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010b6c:	4b31      	ldr	r3, [pc, #196]	@ (10010c34 <AesDecrypt_C+0xd7c>)
10010b6e:	0e25      	lsrs	r5, r4, #24
10010b70:	b2ce      	uxtb	r6, r1
10010b72:	5d5d      	ldrb	r5, [r3, r5]
10010b74:	5d9e      	ldrb	r6, [r3, r6]
10010b76:	ea46 6605 	orr.w	r6, r6, r5, lsl #24
                          GETBYTE(t2, 1), GETBYTE(t1, 0)) ^ rk[0];
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010b7a:	0e0d      	lsrs	r5, r1, #24
                          GETBYTE(t3, 1), GETBYTE(t2, 0)) ^ rk[1];
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010b7c:	fa5f fe8c 	uxtb.w	lr, ip
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010b80:	5d5f      	ldrb	r7, [r3, r5]
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010b82:	f813 e00e 	ldrb.w	lr, [r3, lr]
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010b86:	b2d5      	uxtb	r5, r2
10010b88:	5d5d      	ldrb	r5, [r3, r5]
10010b8a:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010b8e:	0e17      	lsrs	r7, r2, #24
10010b90:	5ddf      	ldrb	r7, [r3, r7]
10010b92:	ea4e 6e07 	orr.w	lr, lr, r7, lsl #24
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010b96:	ea4f 671c 	mov.w	r7, ip, lsr #24
10010b9a:	f813 8007 	ldrb.w	r8, [r3, r7]
10010b9e:	b2e7      	uxtb	r7, r4
10010ba0:	5ddf      	ldrb	r7, [r3, r7]
10010ba2:	ea47 6708 	orr.w	r7, r7, r8, lsl #24
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010ba6:	f3cc 4807 	ubfx	r8, ip, #16, #8
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010baa:	f3cc 2c07 	ubfx	ip, ip, #8, #8
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010bae:	f813 8008 	ldrb.w	r8, [r3, r8]
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010bb2:	f813 c00c 	ldrb.w	ip, [r3, ip]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010bb6:	ea46 4608 	orr.w	r6, r6, r8, lsl #16
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010bba:	f3c4 4807 	ubfx	r8, r4, #16, #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010bbe:	f3c4 2407 	ubfx	r4, r4, #8, #8
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010bc2:	f813 8008 	ldrb.w	r8, [r3, r8]
10010bc6:	ea45 4508 	orr.w	r5, r5, r8, lsl #16
10010bca:	ea45 250c 	orr.w	r5, r5, ip, lsl #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010bce:	f813 c004 	ldrb.w	ip, [r3, r4]
10010bd2:	f3c1 4407 	ubfx	r4, r1, #16, #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010bd6:	f3c1 2107 	ubfx	r1, r1, #8, #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010bda:	5d1c      	ldrb	r4, [r3, r4]
10010bdc:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
10010be0:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010be4:	f813 c001 	ldrb.w	ip, [r3, r1]
10010be8:	f3c2 4107 	ubfx	r1, r2, #16, #8
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010bec:	f3c2 2207 	ubfx	r2, r2, #8, #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010bf0:	5c59      	ldrb	r1, [r3, r1]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010bf2:	5c9b      	ldrb	r3, [r3, r2]
    rk += r * 8;
10010bf4:	9a00      	ldr	r2, [sp, #0]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010bf6:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
    rk += r * 8;
10010bfa:	eb00 1642 	add.w	r6, r0, r2, lsl #5
10010bfe:	0152      	lsls	r2, r2, #5
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010c00:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
                          GETBYTE(t2, 1), GETBYTE(t1, 0)) ^ rk[0];
10010c04:	5882      	ldr	r2, [r0, r2]
10010c06:	4053      	eors	r3, r2
                          GETBYTE(t3, 1), GETBYTE(t2, 0)) ^ rk[1];
10010c08:	6872      	ldr	r2, [r6, #4]
10010c0a:	ea85 0002 	eor.w	r0, r5, r2
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
10010c0e:	68b2      	ldr	r2, [r6, #8]
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    XMEMCPY(outBlock,                  &s0, sizeof(s0));
10010c10:	9d01      	ldr	r5, [sp, #4]
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
10010c12:	4062      	eors	r2, r4
                          GETBYTE(t1, 1), GETBYTE(t0, 0)) ^ rk[3];
10010c14:	68f4      	ldr	r4, [r6, #12]
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010c16:	ea41 210c 	orr.w	r1, r1, ip, lsl #8
10010c1a:	ba1b      	rev	r3, r3
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
10010c1c:	602b      	str	r3, [r5, #0]
                          GETBYTE(t1, 1), GETBYTE(t0, 0)) ^ rk[3];
10010c1e:	ea81 0304 	eor.w	r3, r1, r4
10010c22:	ba00      	rev	r0, r0
    s2 = ByteReverseWord32(s2);
10010c24:	ba12      	rev	r2, r2
    s3 = ByteReverseWord32(s3);
10010c26:	ba1b      	rev	r3, r3
    XMEMCPY(outBlock + sizeof(s0),     &s1, sizeof(s1));
10010c28:	6068      	str	r0, [r5, #4]
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
10010c2a:	60aa      	str	r2, [r5, #8]
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
10010c2c:	60eb      	str	r3, [r5, #12]

}
10010c2e:	b007      	add	sp, #28
10010c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10010c34:	1002174c 	.word	0x1002174c

10010c38 <wc_AesSetKeyLocal.constprop.0>:
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        byte   local[32];
        word32 localSz = 32;
    #endif

        if (aes == NULL)
10010c38:	2800      	cmp	r0, #0
10010c3a:	f000 827d 	beq.w	10011138 <wc_AesSetKeyLocal.constprop.0+0x500>
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
10010c3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        ret = wc_debug_CipherLifecycleCheck(aes->CipherLifecycleTag, 0);
        if (ret < 0)
            return ret;
#endif

        switch (keylen) {
10010c42:	f1a2 0510 	sub.w	r5, r2, #16
10010c46:	2d10      	cmp	r5, #16
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
10010c48:	b085      	sub	sp, #20
10010c4a:	4692      	mov	sl, r2
        switch (keylen) {
10010c4c:	d804      	bhi.n	10010c58 <wc_AesSetKeyLocal.constprop.0+0x20>
10010c4e:	461f      	mov	r7, r3
10010c50:	4bd8      	ldr	r3, [pc, #864]	@ (10010fb4 <wc_AesSetKeyLocal.constprop.0+0x37c>)
10010c52:	40eb      	lsrs	r3, r5
10010c54:	07db      	lsls	r3, r3, #31
10010c56:	d404      	bmi.n	10010c62 <wc_AesSetKeyLocal.constprop.0+0x2a>
10010c58:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
    #endif
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        ForceZero(local, sizeof(local));
    #endif
        return ret;
    } /* wc_AesSetKeyLocal */
10010c5c:	b005      	add	sp, #20
10010c5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        aes->rounds = (keylen/4) + 6;
10010c62:	ea4f 0892 	mov.w	r8, r2, lsr #2
10010c66:	f108 0306 	add.w	r3, r8, #6
10010c6a:	4689      	mov	r9, r1
10010c6c:	4604      	mov	r4, r0
        aes->keylen = (int)keylen;
10010c6e:	f8c0 20f4 	str.w	r2, [r0, #244]	@ 0xf4
        aes->rounds = (keylen/4) + 6;
10010c72:	f8c0 30f0 	str.w	r3, [r0, #240]	@ 0xf0
        XMEMCPY(aes->key, userKey, keylen);
10010c76:	4606      	mov	r6, r0
            return ret;
    }
#endif

    if (iv)
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
10010c78:	f100 0bf8 	add.w	fp, r0, #248	@ 0xf8
    if (iv)
10010c7c:	2f00      	cmp	r7, #0
10010c7e:	d047      	beq.n	10010d10 <wc_AesSetKeyLocal.constprop.0+0xd8>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
10010c80:	f8d7 e000 	ldr.w	lr, [r7]
10010c84:	f8d7 c004 	ldr.w	ip, [r7, #4]
10010c88:	68bd      	ldr	r5, [r7, #8]
10010c8a:	68fb      	ldr	r3, [r7, #12]
10010c8c:	f8c0 e0f8 	str.w	lr, [r0, #248]	@ 0xf8
10010c90:	f8cb c004 	str.w	ip, [fp, #4]
10010c94:	f8cb 5008 	str.w	r5, [fp, #8]
10010c98:	f8cb 300c 	str.w	r3, [fp, #12]
        XMEMCPY(aes->key, userKey, keylen);
10010c9c:	f007 fc80 	bl	100185a0 <memcpy>
    if ((((size_t)in & 0x3) == 0) &&
        (((size_t)out & 0x3) == 0))
#endif
    {
        word32 count = byteCount/(word32)sizeof(word32);
        for (i = 0; i < count; i++)
10010ca0:	eb04 0888 	add.w	r8, r4, r8, lsl #2
10010ca4:	4625      	mov	r5, r4
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
10010ca6:	4623      	mov	r3, r4
            out[i] = ByteReverseWord32(in[i]);
10010ca8:	681a      	ldr	r2, [r3, #0]
10010caa:	ba12      	rev	r2, r2
10010cac:	f843 2b04 	str.w	r2, [r3], #4
        for (i = 0; i < count; i++)
10010cb0:	4598      	cmp	r8, r3
10010cb2:	d1f9      	bne.n	10010ca8 <wc_AesSetKeyLocal.constprop.0+0x70>
    XMEMCPY(rk, key, keySz);
10010cb4:	4649      	mov	r1, r9
10010cb6:	4652      	mov	r2, sl
10010cb8:	4620      	mov	r0, r4
10010cba:	f007 fc71 	bl	100185a0 <memcpy>
10010cbe:	4623      	mov	r3, r4
            out[i] = ByteReverseWord32(in[i]);
10010cc0:	681a      	ldr	r2, [r3, #0]
10010cc2:	ba12      	rev	r2, r2
10010cc4:	f843 2b04 	str.w	r2, [r3], #4
        for (i = 0; i < count; i++)
10010cc8:	4598      	cmp	r8, r3
10010cca:	d1f9      	bne.n	10010cc0 <wc_AesSetKeyLocal.constprop.0+0x88>
    switch (keySz) {
10010ccc:	f1ba 0f18 	cmp.w	sl, #24
10010cd0:	f000 81e8 	beq.w	100110a4 <wc_AesSetKeyLocal.constprop.0+0x46c>
10010cd4:	f1ba 0f20 	cmp.w	sl, #32
10010cd8:	f000 815d 	beq.w	10010f96 <wc_AesSetKeyLocal.constprop.0+0x35e>
10010cdc:	f1ba 0f10 	cmp.w	sl, #16
10010ce0:	f000 8117 	beq.w	10010f12 <wc_AesSetKeyLocal.constprop.0+0x2da>
    if (dir == AES_DECRYPTION) {
10010ce4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10010ce6:	2b01      	cmp	r3, #1
10010ce8:	d01d      	beq.n	10010d26 <wc_AesSetKeyLocal.constprop.0+0xee>
    if (iv)
10010cea:	2f00      	cmp	r7, #0
10010cec:	f000 8108 	beq.w	10010f00 <wc_AesSetKeyLocal.constprop.0+0x2c8>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
10010cf0:	6838      	ldr	r0, [r7, #0]
10010cf2:	6879      	ldr	r1, [r7, #4]
10010cf4:	68ba      	ldr	r2, [r7, #8]
10010cf6:	68fb      	ldr	r3, [r7, #12]
10010cf8:	f8c4 00f8 	str.w	r0, [r4, #248]	@ 0xf8
10010cfc:	f8cb 1004 	str.w	r1, [fp, #4]
10010d00:	f8cb 2008 	str.w	r2, [fp, #8]
10010d04:	f8cb 300c 	str.w	r3, [fp, #12]
        return ret;
10010d08:	2000      	movs	r0, #0
    } /* wc_AesSetKeyLocal */
10010d0a:	b005      	add	sp, #20
10010d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    else
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
10010d10:	f8c0 70f8 	str.w	r7, [r0, #248]	@ 0xf8
10010d14:	f8cb 7004 	str.w	r7, [fp, #4]
10010d18:	f8cb 7008 	str.w	r7, [fp, #8]
10010d1c:	f8cb 700c 	str.w	r7, [fp, #12]
        XMEMCPY(aes->key, userKey, keylen);
10010d20:	f007 fc3e 	bl	100185a0 <memcpy>
10010d24:	e7bc      	b.n	10010ca0 <wc_AesSetKeyLocal.constprop.0+0x68>
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
10010d26:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
10010d2a:	009e      	lsls	r6, r3, #2
10010d2c:	d025      	beq.n	10010d7a <wc_AesSetKeyLocal.constprop.0+0x142>
10010d2e:	eb04 1303 	add.w	r3, r4, r3, lsl #4
10010d32:	4622      	mov	r2, r4
10010d34:	2100      	movs	r1, #0
            temp = rk[i    ]; rk[i    ] = rk[j    ]; rk[j    ] = temp;
10010d36:	6810      	ldr	r0, [r2, #0]
10010d38:	f8d3 c000 	ldr.w	ip, [r3]
10010d3c:	f8c2 c000 	str.w	ip, [r2]
10010d40:	6018      	str	r0, [r3, #0]
            temp = rk[i + 1]; rk[i + 1] = rk[j + 1]; rk[j + 1] = temp;
10010d42:	6850      	ldr	r0, [r2, #4]
10010d44:	f8d3 c004 	ldr.w	ip, [r3, #4]
10010d48:	f8c2 c004 	str.w	ip, [r2, #4]
10010d4c:	6058      	str	r0, [r3, #4]
            temp = rk[i + 2]; rk[i + 2] = rk[j + 2]; rk[j + 2] = temp;
10010d4e:	6890      	ldr	r0, [r2, #8]
10010d50:	f8d3 c008 	ldr.w	ip, [r3, #8]
10010d54:	f8c2 c008 	str.w	ip, [r2, #8]
10010d58:	6098      	str	r0, [r3, #8]
            temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
10010d5a:	68d0      	ldr	r0, [r2, #12]
10010d5c:	f8d3 c00c 	ldr.w	ip, [r3, #12]
10010d60:	f8c2 c00c 	str.w	ip, [r2, #12]
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
10010d64:	3104      	adds	r1, #4
            temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
10010d66:	60d8      	str	r0, [r3, #12]
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
10010d68:	1a70      	subs	r0, r6, r1
10010d6a:	4281      	cmp	r1, r0
10010d6c:	f102 0210 	add.w	r2, r2, #16
10010d70:	f1a3 0310 	sub.w	r3, r3, #16
10010d74:	d3df      	bcc.n	10010d36 <wc_AesSetKeyLocal.constprop.0+0xfe>
        for (i = 1; i < aes->rounds; i++) {
10010d76:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
10010d7a:	2b01      	cmp	r3, #1
10010d7c:	d9b5      	bls.n	10010cea <wc_AesSetKeyLocal.constprop.0+0xb2>
10010d7e:	4b8e      	ldr	r3, [pc, #568]	@ (10010fb8 <wc_AesSetKeyLocal.constprop.0+0x380>)
10010d80:	4a8e      	ldr	r2, [pc, #568]	@ (10010fbc <wc_AesSetKeyLocal.constprop.0+0x384>)
10010d82:	f8cd b008 	str.w	fp, [sp, #8]
10010d86:	f04f 0e01 	mov.w	lr, #1
10010d8a:	46a3      	mov	fp, r4
10010d8c:	9703      	str	r7, [sp, #12]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
10010d8e:	e9d5 6004 	ldrd	r6, r0, [r5, #16]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[0], 0)) & 0xff);
10010d92:	b2f4      	uxtb	r4, r6
10010d94:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010d98:	69a9      	ldr	r1, [r5, #24]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[0], 0)) & 0xff);
10010d9a:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
10010d9e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010da2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010da6:	f852 9024 	ldr.w	r9, [r2, r4, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010daa:	b2c4      	uxtb	r4, r0
10010dac:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010db0:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010db4:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010db8:	f813 a02a 	ldrb.w	sl, [r3, sl, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010dbc:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010dc0:	f852 a02a 	ldr.w	sl, [r2, sl, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010dc4:	f852 c024 	ldr.w	ip, [r2, r4, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[2], 0)) & 0xff);
10010dc8:	b2cc      	uxtb	r4, r1
10010dca:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010dce:	ea8a 0a09 	eor.w	sl, sl, r9
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[2], 0)) & 0xff);
10010dd2:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
10010dd6:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010dda:	f3c1 4707 	ubfx	r7, r1, #16, #8
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010dde:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
10010de2:	9401      	str	r4, [sp, #4]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
10010de4:	f3c6 4407 	ubfx	r4, r6, #16, #8
10010de8:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010dec:	f3c6 2607 	ubfx	r6, r6, #8, #8
10010df0:	f506 7680 	add.w	r6, r6, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
10010df4:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010df8:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
10010dfc:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010e00:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010e04:	f852 8024 	ldr.w	r8, [r2, r4, lsl #2]
10010e08:	f852 6026 	ldr.w	r6, [r2, r6, lsl #2]
10010e0c:	ea8a 0a08 	eor.w	sl, sl, r8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010e10:	f3c0 4407 	ubfx	r4, r0, #16, #8
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010e14:	ea8a 0606 	eor.w	r6, sl, r6
            rk[0] =
10010e18:	612e      	str	r6, [r5, #16]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010e1a:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
10010e1e:	0e06      	lsrs	r6, r0, #24
10010e20:	f506 7680 	add.w	r6, r6, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010e24:	f3c0 2007 	ubfx	r0, r0, #8, #8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010e28:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
10010e2c:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010e30:	f500 7080 	add.w	r0, r0, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010e34:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010e38:	f813 8020 	ldrb.w	r8, [r3, r0, lsl #2]
10010e3c:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
10010e40:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
10010e44:	f508 7800 	add.w	r8, r8, #512	@ 0x200
10010e48:	ea80 000c 	eor.w	r0, r0, ip
10010e4c:	4060      	eors	r0, r4
10010e4e:	f852 4028 	ldr.w	r4, [r2, r8, lsl #2]
10010e52:	4060      	eors	r0, r4
            rk[1] =
10010e54:	6168      	str	r0, [r5, #20]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010e56:	f507 7780 	add.w	r7, r7, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010e5a:	0e08      	lsrs	r0, r1, #24
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010e5c:	f3c1 2107 	ubfx	r1, r1, #8, #8
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010e60:	f500 7080 	add.w	r0, r0, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010e64:	f501 7180 	add.w	r1, r1, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010e68:	f813 7027 	ldrb.w	r7, [r3, r7, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010e6c:	f813 4020 	ldrb.w	r4, [r3, r0, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010e70:	f813 0021 	ldrb.w	r0, [r3, r1, lsl #2]
10010e74:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
10010e78:	9c01      	ldr	r4, [sp, #4]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010e7a:	f507 7780 	add.w	r7, r7, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010e7e:	f500 7000 	add.w	r0, r0, #512	@ 0x200
10010e82:	f852 7027 	ldr.w	r7, [r2, r7, lsl #2]
10010e86:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
10010e8a:	4061      	eors	r1, r4
10010e8c:	4079      	eors	r1, r7
10010e8e:	4041      	eors	r1, r0
            rk[2] =
10010e90:	61a9      	str	r1, [r5, #24]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[3], 3)) & 0xff) ^
10010e92:	69e9      	ldr	r1, [r5, #28]
10010e94:	0e08      	lsrs	r0, r1, #24
10010e96:	f500 7080 	add.w	r0, r0, #256	@ 0x100
        for (i = 1; i < aes->rounds; i++) {
10010e9a:	3510      	adds	r5, #16
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[3], 3)) & 0xff) ^
10010e9c:	f813 6020 	ldrb.w	r6, [r3, r0, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010ea0:	b2c8      	uxtb	r0, r1
10010ea2:	f500 7080 	add.w	r0, r0, #256	@ 0x100
        for (i = 1; i < aes->rounds; i++) {
10010ea6:	f10e 0e01 	add.w	lr, lr, #1
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010eaa:	f813 4020 	ldrb.w	r4, [r3, r0, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010eae:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010eb2:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010eb6:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
10010eba:	4060      	eors	r0, r4
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010ebc:	f3c1 4407 	ubfx	r4, r1, #16, #8
10010ec0:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010ec4:	f3c1 2107 	ubfx	r1, r1, #8, #8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010ec8:	f813 6024 	ldrb.w	r6, [r3, r4, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010ecc:	f501 7180 	add.w	r1, r1, #256	@ 0x100
10010ed0:	f813 4021 	ldrb.w	r4, [r3, r1, lsl #2]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010ed4:	f506 7180 	add.w	r1, r6, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010ed8:	f504 7400 	add.w	r4, r4, #512	@ 0x200
10010edc:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10010ee0:	4041      	eors	r1, r0
10010ee2:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
10010ee6:	4041      	eors	r1, r0
            rk[3] =
10010ee8:	60e9      	str	r1, [r5, #12]
        for (i = 1; i < aes->rounds; i++) {
10010eea:	f8db 10f0 	ldr.w	r1, [fp, #240]	@ 0xf0
10010eee:	458e      	cmp	lr, r1
10010ef0:	f4ff af4d 	bcc.w	10010d8e <wc_AesSetKeyLocal.constprop.0+0x156>
10010ef4:	465c      	mov	r4, fp
10010ef6:	e9dd b702 	ldrd	fp, r7, [sp, #8]
    if (iv)
10010efa:	2f00      	cmp	r7, #0
10010efc:	f47f aef8 	bne.w	10010cf0 <wc_AesSetKeyLocal.constprop.0+0xb8>
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
10010f00:	f8c4 70f8 	str.w	r7, [r4, #248]	@ 0xf8
10010f04:	f8cb 7004 	str.w	r7, [fp, #4]
10010f08:	f8cb 7008 	str.w	r7, [fp, #8]
10010f0c:	f8cb 700c 	str.w	r7, [fp, #12]
10010f10:	e6fa      	b.n	10010d08 <wc_AesSetKeyLocal.constprop.0+0xd0>
10010f12:	e9d4 ce01 	ldrd	ip, lr, [r4, #4]
10010f16:	4b28      	ldr	r3, [pc, #160]	@ (10010fb8 <wc_AesSetKeyLocal.constprop.0+0x380>)
10010f18:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 10010fc0 <wc_AesSetKeyLocal.constprop.0+0x388>
10010f1c:	6820      	ldr	r0, [r4, #0]
10010f1e:	68e1      	ldr	r1, [r4, #12]
10010f20:	46a2      	mov	sl, r4
10010f22:	461a      	mov	r2, r3
10010f24:	4674      	mov	r4, lr
10010f26:	4663      	mov	r3, ip
10010f28:	f108 0928 	add.w	r9, r8, #40	@ 0x28
10010f2c:	4694      	mov	ip, r2
10010f2e:	46d6      	mov	lr, sl
10010f30:	e000      	b.n	10010f34 <wc_AesSetKeyLocal.constprop.0+0x2fc>
            rk += 4;
10010f32:	3610      	adds	r6, #16
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010f34:	b2ca      	uxtb	r2, r1
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f36:	ea4f 6a11 	mov.w	sl, r1, lsr #24
10010f3a:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010f3e:	f85c 2022 	ldr.w	r2, [ip, r2, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f42:	f81c a02a 	ldrb.w	sl, [ip, sl, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010f46:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f4a:	ea42 020a 	orr.w	r2, r2, sl
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010f4e:	f3c1 4a07 	ubfx	sl, r1, #16, #8
10010f52:	f50a 7a00 	add.w	sl, sl, #512	@ 0x200
10010f56:	f85c a02a 	ldr.w	sl, [ip, sl, lsl #2]
10010f5a:	f00a 4a7f 	and.w	sl, sl, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f5e:	ea82 020a 	eor.w	r2, r2, sl
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10010f62:	f3c1 2a07 	ubfx	sl, r1, #8, #8
10010f66:	f50a 7a40 	add.w	sl, sl, #768	@ 0x300
10010f6a:	f85c a02a 	ldr.w	sl, [ip, sl, lsl #2]
10010f6e:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f72:	ea82 020a 	eor.w	r2, r2, sl
                rcon[i];
10010f76:	f858 ab04 	ldr.w	sl, [r8], #4
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f7a:	ea82 020a 	eor.w	r2, r2, sl
10010f7e:	4050      	eors	r0, r2
            rk[5] = rk[1] ^ rk[4];
10010f80:	4043      	eors	r3, r0
            rk[6] = rk[2] ^ rk[5];
10010f82:	405c      	eors	r4, r3
            rk[7] = rk[3] ^ rk[6];
10010f84:	4061      	eors	r1, r4
            if (++i == 10)
10010f86:	45c1      	cmp	r9, r8
            rk[5] = rk[1] ^ rk[4];
10010f88:	e9c6 0304 	strd	r0, r3, [r6, #16]
            rk[7] = rk[3] ^ rk[6];
10010f8c:	e9c6 4106 	strd	r4, r1, [r6, #24]
            if (++i == 10)
10010f90:	d1cf      	bne.n	10010f32 <wc_AesSetKeyLocal.constprop.0+0x2fa>
10010f92:	4674      	mov	r4, lr
10010f94:	e6a6      	b.n	10010ce4 <wc_AesSetKeyLocal.constprop.0+0xac>
10010f96:	e9d4 8e00 	ldrd	r8, lr, [r4]
10010f9a:	e9d4 c102 	ldrd	ip, r1, [r4, #8]
10010f9e:	4622      	mov	r2, r4
10010fa0:	9501      	str	r5, [sp, #4]
10010fa2:	4664      	mov	r4, ip
10010fa4:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 10010fc4 <wc_AesSetKeyLocal.constprop.0+0x38c>
10010fa8:	4b03      	ldr	r3, [pc, #12]	@ (10010fb8 <wc_AesSetKeyLocal.constprop.0+0x380>)
10010faa:	4640      	mov	r0, r8
10010fac:	4675      	mov	r5, lr
10010fae:	4694      	mov	ip, r2
10010fb0:	e041      	b.n	10011036 <wc_AesSetKeyLocal.constprop.0+0x3fe>
10010fb2:	bf00      	nop
10010fb4:	00010101 	.word	0x00010101
10010fb8:	1002284c 	.word	0x1002284c
10010fbc:	1002184c 	.word	0x1002184c
10010fc0:	1002384c 	.word	0x1002384c
10010fc4:	10023848 	.word	0x10023848
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010fc8:	f3c1 4e07 	ubfx	lr, r1, #16, #8
10010fcc:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010fd0:	f3c1 2807 	ubfx	r8, r1, #8, #8
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010fd4:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010fd8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010fdc:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010fe0:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
10010fe4:	ea4e 0e08 	orr.w	lr, lr, r8
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
10010fe8:	ea4f 6811 	mov.w	r8, r1, lsr #24
10010fec:	f508 7800 	add.w	r8, r8, #512	@ 0x200
10010ff0:	f853 a028 	ldr.w	sl, [r3, r8, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 0)) & 0x000000ff);
10010ff4:	fa5f f881 	uxtb.w	r8, r1
10010ff8:	f508 7880 	add.w	r8, r8, #256	@ 0x100
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
10010ffc:	f00a 4a7f 	and.w	sl, sl, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 0)) & 0x000000ff);
10011000:	f813 8028 	ldrb.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10011004:	ea4a 0808 	orr.w	r8, sl, r8
10011008:	f8d6 a010 	ldr.w	sl, [r6, #16]
1001100c:	ea8e 0e0a 	eor.w	lr, lr, sl
10011010:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[13] = rk[ 5] ^ rk[12];
10011014:	f8d6 8014 	ldr.w	r8, [r6, #20]
            rk[12] = rk[ 4] ^
10011018:	f8c6 e030 	str.w	lr, [r6, #48]	@ 0x30
            rk[13] = rk[ 5] ^ rk[12];
1001101c:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[14] = rk[ 6] ^ rk[13];
10011020:	f8d6 8018 	ldr.w	r8, [r6, #24]
            rk[13] = rk[ 5] ^ rk[12];
10011024:	f8c6 e034 	str.w	lr, [r6, #52]	@ 0x34
            rk[14] = rk[ 6] ^ rk[13];
10011028:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[15] = rk[ 7] ^ rk[14];
1001102c:	ea82 020e 	eor.w	r2, r2, lr
10011030:	e9c6 e20e 	strd	lr, r2, [r6, #56]	@ 0x38
            rk += 8;
10011034:	3620      	adds	r6, #32
            temp = rk[ 7];
10011036:	69f2      	ldr	r2, [r6, #28]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10011038:	f859 af04 	ldr.w	sl, [r9, #4]!
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
1001103c:	fa5f fe82 	uxtb.w	lr, r2
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10011040:	ea4f 6812 	mov.w	r8, r2, lsr #24
10011044:	f508 7880 	add.w	r8, r8, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10011048:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1001104c:	f813 8028 	ldrb.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10011050:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10011054:	ea4e 0e08 	orr.w	lr, lr, r8
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10011058:	f3c2 4807 	ubfx	r8, r2, #16, #8
1001105c:	f508 7800 	add.w	r8, r8, #512	@ 0x200
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10011060:	ea8e 0e0a 	eor.w	lr, lr, sl
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10011064:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10011068:	f008 487f 	and.w	r8, r8, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1001106c:	ea8e 0e08 	eor.w	lr, lr, r8
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10011070:	f3c2 2807 	ubfx	r8, r2, #8, #8
10011074:	f508 7840 	add.w	r8, r8, #768	@ 0x300
10011078:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001107c:	f408 087f 	and.w	r8, r8, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10011080:	ea8e 0e08 	eor.w	lr, lr, r8
10011084:	ea80 000e 	eor.w	r0, r0, lr
            rk[ 9] = rk[ 1] ^ rk[ 8];
10011088:	4045      	eors	r5, r0
            if (++i == 7)
1001108a:	f8df e0b4 	ldr.w	lr, [pc, #180]	@ 10011140 <wc_AesSetKeyLocal.constprop.0+0x508>
            rk[10] = rk[ 2] ^ rk[ 9];
1001108e:	406c      	eors	r4, r5
            rk[11] = rk[ 3] ^ rk[10];
10011090:	4061      	eors	r1, r4
            if (++i == 7)
10011092:	45ce      	cmp	lr, r9
            rk[ 9] = rk[ 1] ^ rk[ 8];
10011094:	e9c6 0508 	strd	r0, r5, [r6, #32]
            rk[11] = rk[ 3] ^ rk[10];
10011098:	e9c6 410a 	strd	r4, r1, [r6, #40]	@ 0x28
            if (++i == 7)
1001109c:	d194      	bne.n	10010fc8 <wc_AesSetKeyLocal.constprop.0+0x390>
1001109e:	9d01      	ldr	r5, [sp, #4]
100110a0:	4664      	mov	r4, ip
100110a2:	e61f      	b.n	10010ce4 <wc_AesSetKeyLocal.constprop.0+0xac>
100110a4:	e9d4 c902 	ldrd	ip, r9, [r4, #8]
100110a8:	4b26      	ldr	r3, [pc, #152]	@ (10011144 <wc_AesSetKeyLocal.constprop.0+0x50c>)
100110aa:	f8d4 e000 	ldr.w	lr, [r4]
100110ae:	6860      	ldr	r0, [r4, #4]
100110b0:	9501      	str	r5, [sp, #4]
100110b2:	461a      	mov	r2, r3
100110b4:	46a0      	mov	r8, r4
100110b6:	4663      	mov	r3, ip
100110b8:	f8df a08c 	ldr.w	sl, [pc, #140]	@ 10011148 <wc_AesSetKeyLocal.constprop.0+0x510>
100110bc:	4675      	mov	r5, lr
100110be:	464c      	mov	r4, r9
100110c0:	4694      	mov	ip, r2
100110c2:	e005      	b.n	100110d0 <wc_AesSetKeyLocal.constprop.0+0x498>
            rk[10] = rk[ 4] ^ rk[ 9];
100110c4:	6932      	ldr	r2, [r6, #16]
100110c6:	4062      	eors	r2, r4
            rk[11] = rk[ 5] ^ rk[10];
100110c8:	4051      	eors	r1, r2
100110ca:	e9c6 210a 	strd	r2, r1, [r6, #40]	@ 0x28
            rk += 6;
100110ce:	3618      	adds	r6, #24
            temp = rk[ 5];
100110d0:	6971      	ldr	r1, [r6, #20]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
100110d2:	f85a 9f04 	ldr.w	r9, [sl, #4]!
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
100110d6:	b2ca      	uxtb	r2, r1
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
100110d8:	ea4f 6e11 	mov.w	lr, r1, lsr #24
100110dc:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
100110e0:	f85c 2022 	ldr.w	r2, [ip, r2, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
100110e4:	f81c e02e 	ldrb.w	lr, [ip, lr, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
100110e8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
100110ec:	ea42 020e 	orr.w	r2, r2, lr
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
100110f0:	f3c1 4e07 	ubfx	lr, r1, #16, #8
100110f4:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
100110f8:	ea82 0209 	eor.w	r2, r2, r9
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
100110fc:	f85c e02e 	ldr.w	lr, [ip, lr, lsl #2]
10011100:	f00e 4e7f 	and.w	lr, lr, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10011104:	ea82 020e 	eor.w	r2, r2, lr
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10011108:	f3c1 2e07 	ubfx	lr, r1, #8, #8
1001110c:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
10011110:	f85c e02e 	ldr.w	lr, [ip, lr, lsl #2]
10011114:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10011118:	ea82 020e 	eor.w	r2, r2, lr
1001111c:	4055      	eors	r5, r2
            rk[ 7] = rk[ 1] ^ rk[ 6];
1001111e:	4068      	eors	r0, r5
            if (++i == 8)
10011120:	4a0a      	ldr	r2, [pc, #40]	@ (1001114c <wc_AesSetKeyLocal.constprop.0+0x514>)
            rk[ 8] = rk[ 2] ^ rk[ 7];
10011122:	4043      	eors	r3, r0
            rk[ 9] = rk[ 3] ^ rk[ 8];
10011124:	405c      	eors	r4, r3
            if (++i == 8)
10011126:	4552      	cmp	r2, sl
            rk[ 7] = rk[ 1] ^ rk[ 6];
10011128:	e9c6 5006 	strd	r5, r0, [r6, #24]
            rk[ 9] = rk[ 3] ^ rk[ 8];
1001112c:	e9c6 3408 	strd	r3, r4, [r6, #32]
            if (++i == 8)
10011130:	d1c8      	bne.n	100110c4 <wc_AesSetKeyLocal.constprop.0+0x48c>
10011132:	9d01      	ldr	r5, [sp, #4]
10011134:	4644      	mov	r4, r8
10011136:	e5d5      	b.n	10010ce4 <wc_AesSetKeyLocal.constprop.0+0xac>
10011138:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
    } /* wc_AesSetKeyLocal */
1001113c:	4770      	bx	lr
1001113e:	bf00      	nop
10011140:	10023864 	.word	0x10023864
10011144:	1002284c 	.word	0x1002284c
10011148:	10023848 	.word	0x10023848
1001114c:	10023868 	.word	0x10023868

10011150 <wc_AesSetKey>:
    {
10011150:	b410      	push	{r4}
10011152:	9c01      	ldr	r4, [sp, #4]
        if (aes == NULL) {
10011154:	b128      	cbz	r0, 10011162 <wc_AesSetKey+0x12>
        if (keylen > sizeof(aes->key)) {
10011156:	2af0      	cmp	r2, #240	@ 0xf0
10011158:	d803      	bhi.n	10011162 <wc_AesSetKey+0x12>
        return wc_AesSetKeyLocal(aes, userKey, keylen, iv, dir, 1);
1001115a:	9401      	str	r4, [sp, #4]
    } /* wc_AesSetKey() */
1001115c:	bc10      	pop	{r4}
        return wc_AesSetKeyLocal(aes, userKey, keylen, iv, dir, 1);
1001115e:	f7ff bd6b 	b.w	10010c38 <wc_AesSetKeyLocal.constprop.0>
    } /* wc_AesSetKey() */
10011162:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
10011166:	bc10      	pop	{r4}
10011168:	4770      	bx	lr
1001116a:	bf00      	nop

1001116c <wc_AesEncryptDirect>:
        /* Allow direct access to one block encrypt */
        int wc_AesEncryptDirect(Aes* aes, byte* out, const byte* in)
        {
            int ret;

            if (aes == NULL)
1001116c:	b190      	cbz	r0, 10011194 <wc_AesEncryptDirect+0x28>
        {
1001116e:	b508      	push	{r3, lr}
10011170:	4613      	mov	r3, r2
10011172:	460a      	mov	r2, r1
10011174:	4619      	mov	r1, r3
    r = aes->rounds >> 1;
10011176:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
1001117a:	085b      	lsrs	r3, r3, #1
    if (r > 7 || r == 0) {
1001117c:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
10011180:	f1bc 0f06 	cmp.w	ip, #6
10011184:	d803      	bhi.n	1001118e <wc_AesEncryptDirect+0x22>
    AesEncrypt_C(aes, inBlock, outBlock, r);
10011186:	f7fd ffa5 	bl	1000f0d4 <AesEncrypt_C>
    return 0;
1001118a:	2000      	movs	r0, #0
                return BAD_FUNC_ARG;
            VECTOR_REGISTERS_PUSH;
            ret = wc_AesEncrypt(aes, in, out);
            VECTOR_REGISTERS_POP;
            return ret;
        }
1001118c:	bd08      	pop	{r3, pc}
        return KEYUSAGE_E;
1001118e:	f06f 00e1 	mvn.w	r0, #225	@ 0xe1
        }
10011192:	bd08      	pop	{r3, pc}
                return BAD_FUNC_ARG;
10011194:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
        }
10011198:	4770      	bx	lr
1001119a:	bf00      	nop

1001119c <wc_AesDecryptDirect>:
        /* Allow direct access to one block decrypt */
        int wc_AesDecryptDirect(Aes* aes, byte* out, const byte* in)
        {
            int ret;

            if (aes == NULL)
1001119c:	b190      	cbz	r0, 100111c4 <wc_AesDecryptDirect+0x28>
        {
1001119e:	b508      	push	{r3, lr}
100111a0:	4613      	mov	r3, r2
100111a2:	460a      	mov	r2, r1
100111a4:	4619      	mov	r1, r3
    r = aes->rounds >> 1;
100111a6:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
100111aa:	085b      	lsrs	r3, r3, #1
    if (r > 7 || r == 0) {
100111ac:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
100111b0:	f1bc 0f06 	cmp.w	ip, #6
100111b4:	d803      	bhi.n	100111be <wc_AesDecryptDirect+0x22>
    AesDecrypt_C(aes, inBlock, outBlock, r);
100111b6:	f7fe fe7f 	bl	1000feb8 <AesDecrypt_C>
    return 0;
100111ba:	2000      	movs	r0, #0
                return BAD_FUNC_ARG;
            VECTOR_REGISTERS_PUSH;
            ret = wc_AesDecrypt(aes, in, out);
            VECTOR_REGISTERS_POP;
            return ret;
        }
100111bc:	bd08      	pop	{r3, pc}
        return KEYUSAGE_E;
100111be:	f06f 00e1 	mvn.w	r0, #225	@ 0xe1
        }
100111c2:	bd08      	pop	{r3, pc}
                return BAD_FUNC_ARG;
100111c4:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
        }
100111c8:	4770      	bx	lr
100111ca:	bf00      	nop

100111cc <wc_Md5Hash>:

#if !defined(WOLFSSL_TI_HASH)

#if !defined(NO_MD5)
    int wc_Md5Hash(const byte* data, word32 len, byte* hash)
    {
100111cc:	b5f0      	push	{r4, r5, r6, r7, lr}
100111ce:	b099      	sub	sp, #100	@ 0x64
100111d0:	4605      	mov	r5, r0
        md5 = (wc_Md5*)XMALLOC(sizeof(wc_Md5), NULL, DYNAMIC_TYPE_TMP_BUFFER);
        if (md5 == NULL)
            return MEMORY_E;
    #endif

        if ((ret = wc_InitMd5(md5)) != 0) {
100111d2:	4668      	mov	r0, sp
    {
100111d4:	460e      	mov	r6, r1
100111d6:	4617      	mov	r7, r2
        if ((ret = wc_InitMd5(md5)) != 0) {
100111d8:	f000 fc84 	bl	10011ae4 <wc_InitMd5>
100111dc:	b118      	cbz	r0, 100111e6 <wc_Md5Hash+0x1a>
100111de:	4604      	mov	r4, r0
    #ifdef WOLFSSL_SMALL_STACK
        XFREE(md5, NULL, DYNAMIC_TYPE_TMP_BUFFER);
    #endif

        return ret;
    }
100111e0:	4620      	mov	r0, r4
100111e2:	b019      	add	sp, #100	@ 0x64
100111e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            if ((ret = wc_Md5Update(md5, data, len)) != 0) {
100111e6:	4632      	mov	r2, r6
100111e8:	4629      	mov	r1, r5
100111ea:	4668      	mov	r0, sp
100111ec:	f000 fba2 	bl	10011934 <wc_Md5Update>
100111f0:	4604      	mov	r4, r0
100111f2:	b128      	cbz	r0, 10011200 <wc_Md5Hash+0x34>
            wc_Md5Free(md5);
100111f4:	4668      	mov	r0, sp
100111f6:	f000 fc93 	bl	10011b20 <wc_Md5Free>
    }
100111fa:	4620      	mov	r0, r4
100111fc:	b019      	add	sp, #100	@ 0x64
100111fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if ((ret = wc_Md5Final(md5, hash)) != 0) {
10011200:	4639      	mov	r1, r7
10011202:	4668      	mov	r0, sp
10011204:	f000 fc16 	bl	10011a34 <wc_Md5Final>
10011208:	4604      	mov	r4, r0
1001120a:	e7f3      	b.n	100111f4 <wc_Md5Hash+0x28>

1001120c <Transform>:
    word32 a = md5->digest[0];
    word32 b = md5->digest[1];
    word32 c = md5->digest[2];
    word32 d = md5->digest[3];

    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
1001120c:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
1001120e:	4ae9      	ldr	r2, [pc, #932]	@ (100115b4 <Transform+0x3a8>)
{
10011210:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
10011214:	441a      	add	r2, r3
10011216:	e9d0 3415 	ldrd	r3, r4, [r0, #84]	@ 0x54
    word32 b = md5->digest[1];
1001121a:	6d07      	ldr	r7, [r0, #80]	@ 0x50
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
1001121c:	f8d1 b000 	ldr.w	fp, [r1]
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
10011220:	6d46      	ldr	r6, [r0, #84]	@ 0x54
10011222:	684d      	ldr	r5, [r1, #4]
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
10011224:	f8d1 e014 	ldr.w	lr, [r1, #20]
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
10011228:	f8d1 8018 	ldr.w	r8, [r1, #24]
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
1001122c:	f8d1 a01c 	ldr.w	sl, [r1, #28]
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
10011230:	f8d1 9020 	ldr.w	r9, [r1, #32]
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
10011234:	4063      	eors	r3, r4
10011236:	403b      	ands	r3, r7
10011238:	445a      	add	r2, fp
1001123a:	4063      	eors	r3, r4
1001123c:	4413      	add	r3, r2
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
1001123e:	4ade      	ldr	r2, [pc, #888]	@ (100115b8 <Transform+0x3ac>)
10011240:	4422      	add	r2, r4
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
10011242:	eb07 6373 	add.w	r3, r7, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
10011246:	462c      	mov	r4, r5
10011248:	442a      	add	r2, r5
1001124a:	ea87 0506 	eor.w	r5, r7, r6
1001124e:	401d      	ands	r5, r3
10011250:	4075      	eors	r5, r6
10011252:	4415      	add	r5, r2
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
10011254:	4ad9      	ldr	r2, [pc, #868]	@ (100115bc <Transform+0x3b0>)
{
10011256:	b08d      	sub	sp, #52	@ 0x34
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
10011258:	4432      	add	r2, r6
1001125a:	688e      	ldr	r6, [r1, #8]
1001125c:	9601      	str	r6, [sp, #4]
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
1001125e:	eb03 5535 	add.w	r5, r3, r5, ror #20
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
10011262:	4432      	add	r2, r6
10011264:	ea87 0603 	eor.w	r6, r7, r3
10011268:	402e      	ands	r6, r5
1001126a:	970a      	str	r7, [sp, #40]	@ 0x28
1001126c:	407e      	eors	r6, r7
1001126e:	4416      	add	r6, r2
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
10011270:	4fd3      	ldr	r7, [pc, #844]	@ (100115c0 <Transform+0x3b4>)
10011272:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
10011274:	f8cd e010 	str.w	lr, [sp, #16]
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
10011278:	4417      	add	r7, r2
1001127a:	68ca      	ldr	r2, [r1, #12]
1001127c:	9202      	str	r2, [sp, #8]
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
1001127e:	eb05 36f6 	add.w	r6, r5, r6, ror #15
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
10011282:	4417      	add	r7, r2
10011284:	ea83 0205 	eor.w	r2, r3, r5
10011288:	4032      	ands	r2, r6
1001128a:	405a      	eors	r2, r3
1001128c:	443a      	add	r2, r7
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
1001128e:	690f      	ldr	r7, [r1, #16]
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
10011290:	f8cd 8014 	str.w	r8, [sp, #20]
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
10011294:	46bc      	mov	ip, r7
10011296:	4fcb      	ldr	r7, [pc, #812]	@ (100115c4 <Transform+0x3b8>)
10011298:	f8cd c00c 	str.w	ip, [sp, #12]
1001129c:	4467      	add	r7, ip
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
1001129e:	eb06 22b2 	add.w	r2, r6, r2, ror #10
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
100112a2:	441f      	add	r7, r3
100112a4:	ea85 0306 	eor.w	r3, r5, r6
100112a8:	4013      	ands	r3, r2
100112aa:	406b      	eors	r3, r5
100112ac:	443b      	add	r3, r7
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
100112ae:	4fc6      	ldr	r7, [pc, #792]	@ (100115c8 <Transform+0x3bc>)
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
100112b0:	f8cd 9018 	str.w	r9, [sp, #24]
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
100112b4:	4477      	add	r7, lr
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
100112b6:	eb02 6373 	add.w	r3, r2, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
100112ba:	442f      	add	r7, r5
100112bc:	ea86 0502 	eor.w	r5, r6, r2
100112c0:	401d      	ands	r5, r3
100112c2:	4075      	eors	r5, r6
100112c4:	443d      	add	r5, r7
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
100112c6:	4fc1      	ldr	r7, [pc, #772]	@ (100115cc <Transform+0x3c0>)
100112c8:	4447      	add	r7, r8
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
100112ca:	eb03 5535 	add.w	r5, r3, r5, ror #20
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
100112ce:	4437      	add	r7, r6
100112d0:	ea82 0603 	eor.w	r6, r2, r3
100112d4:	402e      	ands	r6, r5
100112d6:	4056      	eors	r6, r2
100112d8:	443e      	add	r6, r7
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
100112da:	4fbd      	ldr	r7, [pc, #756]	@ (100115d0 <Transform+0x3c4>)
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
100112dc:	f8d1 8030 	ldr.w	r8, [r1, #48]	@ 0x30
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
100112e0:	4457      	add	r7, sl
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
100112e2:	eb05 36f6 	add.w	r6, r5, r6, ror #15
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
100112e6:	4417      	add	r7, r2
100112e8:	ea83 0205 	eor.w	r2, r3, r5
100112ec:	4032      	ands	r2, r6
100112ee:	405a      	eors	r2, r3
100112f0:	443a      	add	r2, r7
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
100112f2:	4fb8      	ldr	r7, [pc, #736]	@ (100115d4 <Transform+0x3c8>)
100112f4:	444f      	add	r7, r9
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
100112f6:	eb06 22b2 	add.w	r2, r6, r2, ror #10
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
100112fa:	441f      	add	r7, r3
100112fc:	ea85 0306 	eor.w	r3, r5, r6
10011300:	4013      	ands	r3, r2
10011302:	406b      	eors	r3, r5
10011304:	443b      	add	r3, r7
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
10011306:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
10011308:	46bc      	mov	ip, r7
1001130a:	4fb3      	ldr	r7, [pc, #716]	@ (100115d8 <Transform+0x3cc>)
1001130c:	f8cd c01c 	str.w	ip, [sp, #28]
10011310:	4467      	add	r7, ip
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
10011312:	eb02 6373 	add.w	r3, r2, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
10011316:	443d      	add	r5, r7
10011318:	ea86 0702 	eor.w	r7, r6, r2
1001131c:	401f      	ands	r7, r3
1001131e:	4077      	eors	r7, r6
10011320:	442f      	add	r7, r5
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
10011322:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
10011324:	f5a5 4e24 	sub.w	lr, r5, #41984	@ 0xa400
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
10011328:	eb03 5737 	add.w	r7, r3, r7, ror #20
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
1001132c:	ea82 0c03 	eor.w	ip, r2, r3
10011330:	f1ae 0e4f 	sub.w	lr, lr, #79	@ 0x4f
10011334:	44b6      	add	lr, r6
10011336:	ea0c 0c07 	and.w	ip, ip, r7
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
1001133a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
1001133c:	ea8c 0c02 	eor.w	ip, ip, r2
10011340:	44f4      	add	ip, lr
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
10011342:	46b6      	mov	lr, r6
10011344:	4ea5      	ldr	r6, [pc, #660]	@ (100115dc <Transform+0x3d0>)
10011346:	f8cd e020 	str.w	lr, [sp, #32]
1001134a:	4476      	add	r6, lr
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
1001134c:	eb07 3cfc 	add.w	ip, r7, ip, ror #15
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
10011350:	4416      	add	r6, r2
10011352:	ea83 0207 	eor.w	r2, r3, r7
10011356:	ea02 020c 	and.w	r2, r2, ip
1001135a:	405a      	eors	r2, r3
1001135c:	4432      	add	r2, r6
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
1001135e:	4ea0      	ldr	r6, [pc, #640]	@ (100115e0 <Transform+0x3d4>)
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
10011360:	f8df e280 	ldr.w	lr, [pc, #640]	@ 100115e4 <Transform+0x3d8>
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
10011364:	4446      	add	r6, r8
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
10011366:	eb0c 22b2 	add.w	r2, ip, r2, ror #10
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
1001136a:	441e      	add	r6, r3
1001136c:	ea87 030c 	eor.w	r3, r7, ip
10011370:	4013      	ands	r3, r2
10011372:	407b      	eors	r3, r7
10011374:	4433      	add	r3, r6
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
10011376:	6b4e      	ldr	r6, [r1, #52]	@ 0x34
10011378:	44b6      	add	lr, r6
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
1001137a:	eb02 6373 	add.w	r3, r2, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
1001137e:	4477      	add	r7, lr
10011380:	ea8c 0e02 	eor.w	lr, ip, r2
10011384:	ea0e 0e03 	and.w	lr, lr, r3
10011388:	ea8e 0e0c 	eor.w	lr, lr, ip
1001138c:	44be      	add	lr, r7
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
1001138e:	e9d1 970e 	ldrd	r9, r7, [r1, #56]	@ 0x38
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
10011392:	4995      	ldr	r1, [pc, #596]	@ (100115e8 <Transform+0x3dc>)

    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
10011394:	9409      	str	r4, [sp, #36]	@ 0x24
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
10011396:	4449      	add	r1, r9
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
10011398:	eb03 5e3e 	add.w	lr, r3, lr, ror #20
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
1001139c:	4461      	add	r1, ip
1001139e:	ea82 0c03 	eor.w	ip, r2, r3
100113a2:	ea0c 0c0e 	and.w	ip, ip, lr
100113a6:	ea8c 0c02 	eor.w	ip, ip, r2
100113aa:	448c      	add	ip, r1
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
100113ac:	498f      	ldr	r1, [pc, #572]	@ (100115ec <Transform+0x3e0>)
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
100113ae:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
100113b2:	4439      	add	r1, r7
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
100113b4:	eb0e 3cfc 	add.w	ip, lr, ip, ror #15
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
100113b8:	4411      	add	r1, r2
100113ba:	ea83 020e 	eor.w	r2, r3, lr
100113be:	ea02 020c 	and.w	r2, r2, ip
100113c2:	405a      	eors	r2, r3
100113c4:	440a      	add	r2, r1
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
100113c6:	498a      	ldr	r1, [pc, #552]	@ (100115f0 <Transform+0x3e4>)
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
100113c8:	eb0c 22b2 	add.w	r2, ip, r2, ror #10
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
100113cc:	4421      	add	r1, r4
100113ce:	4419      	add	r1, r3
100113d0:	ea8c 0302 	eor.w	r3, ip, r2
100113d4:	ea03 030e 	and.w	r3, r3, lr
100113d8:	ea83 030c 	eor.w	r3, r3, ip
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
100113dc:	9c05      	ldr	r4, [sp, #20]
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
100113de:	440b      	add	r3, r1
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
100113e0:	4984      	ldr	r1, [pc, #528]	@ (100115f4 <Transform+0x3e8>)
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
100113e2:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
100113e6:	4421      	add	r1, r4
100113e8:	448e      	add	lr, r1
100113ea:	ea82 0103 	eor.w	r1, r2, r3
100113ee:	ea01 010c 	and.w	r1, r1, ip
100113f2:	4051      	eors	r1, r2
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
100113f4:	9c08      	ldr	r4, [sp, #32]
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
100113f6:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
100113f8:	f8df e1fc 	ldr.w	lr, [pc, #508]	@ 100115f8 <Transform+0x3ec>
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
100113fc:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
10011400:	44a6      	add	lr, r4
10011402:	44e6      	add	lr, ip
10011404:	ea83 0c01 	eor.w	ip, r3, r1
10011408:	ea0c 0c02 	and.w	ip, ip, r2
1001140c:	ea8c 0c03 	eor.w	ip, ip, r3
10011410:	44f4      	add	ip, lr
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
10011412:	f8df e1e8 	ldr.w	lr, [pc, #488]	@ 100115fc <Transform+0x3f0>
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
10011416:	9c07      	ldr	r4, [sp, #28]
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
10011418:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
1001141c:	44de      	add	lr, fp
1001141e:	4496      	add	lr, r2
10011420:	ea81 020c 	eor.w	r2, r1, ip
10011424:	401a      	ands	r2, r3
10011426:	404a      	eors	r2, r1
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
10011428:	f8dd b010 	ldr.w	fp, [sp, #16]
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
1001142c:	4472      	add	r2, lr
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
1001142e:	f8df e1d0 	ldr.w	lr, [pc, #464]	@ 10011600 <Transform+0x3f4>
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
10011432:	eb0c 3232 	add.w	r2, ip, r2, ror #12
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
10011436:	44de      	add	lr, fp
10011438:	449e      	add	lr, r3
1001143a:	ea8c 0302 	eor.w	r3, ip, r2
1001143e:	400b      	ands	r3, r1
10011440:	ea83 030c 	eor.w	r3, r3, ip
10011444:	4473      	add	r3, lr
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
10011446:	f8df e1bc 	ldr.w	lr, [pc, #444]	@ 10011604 <Transform+0x3f8>
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
1001144a:	f8dd b00c 	ldr.w	fp, [sp, #12]
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
1001144e:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
10011452:	44ae      	add	lr, r5
10011454:	448e      	add	lr, r1
10011456:	ea82 0103 	eor.w	r1, r2, r3
1001145a:	ea01 010c 	and.w	r1, r1, ip
1001145e:	4051      	eors	r1, r2
10011460:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
10011462:	f8df e1a4 	ldr.w	lr, [pc, #420]	@ 10011608 <Transform+0x3fc>
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
10011466:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
1001146a:	44be      	add	lr, r7
1001146c:	44e6      	add	lr, ip
1001146e:	ea83 0c01 	eor.w	ip, r3, r1
10011472:	ea0c 0c02 	and.w	ip, ip, r2
10011476:	ea8c 0c03 	eor.w	ip, ip, r3
1001147a:	44f4      	add	ip, lr
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
1001147c:	f8df e18c 	ldr.w	lr, [pc, #396]	@ 1001160c <Transform+0x400>
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
10011480:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
10011484:	44de      	add	lr, fp
10011486:	4496      	add	lr, r2
10011488:	ea81 020c 	eor.w	r2, r1, ip
1001148c:	401a      	ands	r2, r3
1001148e:	404a      	eors	r2, r1
10011490:	4472      	add	r2, lr
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
10011492:	f8df e17c 	ldr.w	lr, [pc, #380]	@ 10011610 <Transform+0x404>
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
    MD5STEP(F2, c, d, a, b, buffer[7]  + 0x676f02d9, 14);
    MD5STEP(F2, b, c, d, a, buffer[12] + 0x8d2a4c8a, 20);
10011496:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 10011614 <Transform+0x408>
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
1001149a:	eb0c 3232 	add.w	r2, ip, r2, ror #12
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
1001149e:	44a6      	add	lr, r4
100114a0:	449e      	add	lr, r3
100114a2:	ea8c 0302 	eor.w	r3, ip, r2
100114a6:	400b      	ands	r3, r1
100114a8:	ea83 030c 	eor.w	r3, r3, ip
100114ac:	4473      	add	r3, lr
    MD5STEP(F2, d, a, b, c, buffer[14] + 0xc33707d6,  9);
100114ae:	f8df e168 	ldr.w	lr, [pc, #360]	@ 10011618 <Transform+0x40c>
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
100114b2:	9c02      	ldr	r4, [sp, #8]
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
100114b4:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[14] + 0xc33707d6,  9);
100114b8:	44ce      	add	lr, r9
100114ba:	448e      	add	lr, r1
100114bc:	ea82 0103 	eor.w	r1, r2, r3
100114c0:	ea01 010c 	and.w	r1, r1, ip
100114c4:	4051      	eors	r1, r2
100114c6:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
100114c8:	f8df e150 	ldr.w	lr, [pc, #336]	@ 1001161c <Transform+0x410>
    MD5STEP(F2, d, a, b, c, buffer[14] + 0xc33707d6,  9);
100114cc:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
100114d0:	44a6      	add	lr, r4
100114d2:	44e6      	add	lr, ip
100114d4:	ea83 0c01 	eor.w	ip, r3, r1
100114d8:	ea0c 0c02 	and.w	ip, ip, r2
100114dc:	ea8c 0c03 	eor.w	ip, ip, r3
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
100114e0:	9c06      	ldr	r4, [sp, #24]
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
100114e2:	44f4      	add	ip, lr
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
100114e4:	f8df e138 	ldr.w	lr, [pc, #312]	@ 10011620 <Transform+0x414>
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
100114e8:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
100114ec:	44a6      	add	lr, r4
100114ee:	4496      	add	lr, r2
100114f0:	ea81 020c 	eor.w	r2, r1, ip
100114f4:	401a      	ands	r2, r3
100114f6:	404a      	eors	r2, r1
100114f8:	4472      	add	r2, lr
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
100114fa:	f8df e128 	ldr.w	lr, [pc, #296]	@ 10011624 <Transform+0x418>
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
100114fe:	9c01      	ldr	r4, [sp, #4]
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
10011500:	eb0c 3232 	add.w	r2, ip, r2, ror #12
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
10011504:	44b6      	add	lr, r6
10011506:	449e      	add	lr, r3
10011508:	ea8c 0302 	eor.w	r3, ip, r2
1001150c:	400b      	ands	r3, r1
1001150e:	ea83 030c 	eor.w	r3, r3, ip
10011512:	4473      	add	r3, lr
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
10011514:	f8df e110 	ldr.w	lr, [pc, #272]	@ 10011628 <Transform+0x41c>
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
10011518:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
1001151c:	44a6      	add	lr, r4
1001151e:	448e      	add	lr, r1
10011520:	ea82 0103 	eor.w	r1, r2, r3
10011524:	ea01 010c 	and.w	r1, r1, ip
10011528:	4051      	eors	r1, r2
1001152a:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[7]  + 0x676f02d9, 14);
1001152c:	f8df e0fc 	ldr.w	lr, [pc, #252]	@ 1001162c <Transform+0x420>

    MD5STEP(F3, a, b, c, d, buffer[5]  + 0xfffa3942,  4);
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
10011530:	9c09      	ldr	r4, [sp, #36]	@ 0x24
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
10011532:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[7]  + 0x676f02d9, 14);
10011536:	44d6      	add	lr, sl
10011538:	44e6      	add	lr, ip
1001153a:	ea83 0c01 	eor.w	ip, r3, r1
1001153e:	ea0c 0c02 	and.w	ip, ip, r2
10011542:	ea8c 0c03 	eor.w	ip, ip, r3
10011546:	44f4      	add	ip, lr
10011548:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[12] + 0x8d2a4c8a, 20);
1001154c:	44c3      	add	fp, r8
1001154e:	4493      	add	fp, r2
10011550:	ea81 020c 	eor.w	r2, r1, ip
10011554:	ea02 0e03 	and.w	lr, r2, r3
10011558:	ea8e 0e01 	eor.w	lr, lr, r1
1001155c:	44de      	add	lr, fp
1001155e:	eb0c 3e3e 	add.w	lr, ip, lr, ror #12
    MD5STEP(F3, a, b, c, d, buffer[5]  + 0xfffa3942,  4);
10011562:	ea82 0b0e 	eor.w	fp, r2, lr
10011566:	9a04      	ldr	r2, [sp, #16]
10011568:	f5a2 22b8 	sub.w	r2, r2, #376832	@ 0x5c000
1001156c:	f2a2 62be 	subw	r2, r2, #1726	@ 0x6be
10011570:	441a      	add	r2, r3
10011572:	445a      	add	r2, fp
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011574:	4b2e      	ldr	r3, [pc, #184]	@ (10011630 <Transform+0x424>)
10011576:	f8dd b018 	ldr.w	fp, [sp, #24]
1001157a:	445b      	add	r3, fp
    MD5STEP(F3, a, b, c, d, buffer[5]  + 0xfffa3942,  4);
1001157c:	eb0e 7232 	add.w	r2, lr, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011580:	4419      	add	r1, r3
10011582:	ea8c 030e 	eor.w	r3, ip, lr
10011586:	4053      	eors	r3, r2
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
10011588:	f8dd b020 	ldr.w	fp, [sp, #32]
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
1001158c:	440b      	add	r3, r1
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
1001158e:	4929      	ldr	r1, [pc, #164]	@ (10011634 <Transform+0x428>)
10011590:	4459      	add	r1, fp
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011592:	eb02 5373 	add.w	r3, r2, r3, ror #21
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
10011596:	4461      	add	r1, ip
10011598:	ea8e 0c02 	eor.w	ip, lr, r2
1001159c:	ea8c 0c03 	eor.w	ip, ip, r3
100115a0:	448c      	add	ip, r1
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
100115a2:	4925      	ldr	r1, [pc, #148]	@ (10011638 <Transform+0x42c>)
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
100115a4:	f8dd b00c 	ldr.w	fp, [sp, #12]
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
100115a8:	4449      	add	r1, r9
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
100115aa:	eb03 4c3c 	add.w	ip, r3, ip, ror #16
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
100115ae:	448e      	add	lr, r1
100115b0:	e044      	b.n	1001163c <Transform+0x430>
100115b2:	bf00      	nop
100115b4:	d76aa478 	.word	0xd76aa478
100115b8:	e8c7b756 	.word	0xe8c7b756
100115bc:	242070db 	.word	0x242070db
100115c0:	c1bdceee 	.word	0xc1bdceee
100115c4:	f57c0faf 	.word	0xf57c0faf
100115c8:	4787c62a 	.word	0x4787c62a
100115cc:	a8304613 	.word	0xa8304613
100115d0:	fd469501 	.word	0xfd469501
100115d4:	698098d8 	.word	0x698098d8
100115d8:	8b44f7af 	.word	0x8b44f7af
100115dc:	895cd7be 	.word	0x895cd7be
100115e0:	6b901122 	.word	0x6b901122
100115e4:	fd987193 	.word	0xfd987193
100115e8:	a679438e 	.word	0xa679438e
100115ec:	49b40821 	.word	0x49b40821
100115f0:	f61e2562 	.word	0xf61e2562
100115f4:	c040b340 	.word	0xc040b340
100115f8:	265e5a51 	.word	0x265e5a51
100115fc:	e9b6c7aa 	.word	0xe9b6c7aa
10011600:	d62f105d 	.word	0xd62f105d
10011604:	02441453 	.word	0x02441453
10011608:	d8a1e681 	.word	0xd8a1e681
1001160c:	e7d3fbc8 	.word	0xe7d3fbc8
10011610:	21e1cde6 	.word	0x21e1cde6
10011614:	8d2a4c8a 	.word	0x8d2a4c8a
10011618:	c33707d6 	.word	0xc33707d6
1001161c:	f4d50d87 	.word	0xf4d50d87
10011620:	455a14ed 	.word	0x455a14ed
10011624:	a9e3e905 	.word	0xa9e3e905
10011628:	fcefa3f8 	.word	0xfcefa3f8
1001162c:	676f02d9 	.word	0x676f02d9
10011630:	8771f681 	.word	0x8771f681
10011634:	6d9d6122 	.word	0x6d9d6122
10011638:	fde5380c 	.word	0xfde5380c
1001163c:	ea82 0103 	eor.w	r1, r2, r3
10011640:	ea81 010c 	eor.w	r1, r1, ip
10011644:	4471      	add	r1, lr
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
10011646:	f8df e280 	ldr.w	lr, [pc, #640]	@ 100118c8 <Transform+0x6bc>
1001164a:	44a6      	add	lr, r4
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
1001164c:	eb0c 2171 	add.w	r1, ip, r1, ror #9
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
10011650:	4496      	add	lr, r2
10011652:	ea83 020c 	eor.w	r2, r3, ip
10011656:	404a      	eors	r2, r1
10011658:	4472      	add	r2, lr
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
1001165a:	f8df e270 	ldr.w	lr, [pc, #624]	@ 100118cc <Transform+0x6c0>
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
1001165e:	9c02      	ldr	r4, [sp, #8]
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
10011660:	44de      	add	lr, fp
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
10011662:	eb01 7232 	add.w	r2, r1, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
10011666:	4473      	add	r3, lr
10011668:	ea8c 0e01 	eor.w	lr, ip, r1
1001166c:	ea8e 0e02 	eor.w	lr, lr, r2
10011670:	449e      	add	lr, r3
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
10011672:	4b97      	ldr	r3, [pc, #604]	@ (100118d0 <Transform+0x6c4>)
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
10011674:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
10011678:	4453      	add	r3, sl
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
1001167a:	eb02 5e7e 	add.w	lr, r2, lr, ror #21
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
1001167e:	449c      	add	ip, r3
10011680:	ea81 0302 	eor.w	r3, r1, r2
10011684:	ea83 030e 	eor.w	r3, r3, lr
10011688:	4463      	add	r3, ip
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
1001168a:	f8df c248 	ldr.w	ip, [pc, #584]	@ 100118d4 <Transform+0x6c8>
1001168e:	44ac      	add	ip, r5
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
10011690:	eb0e 4333 	add.w	r3, lr, r3, ror #16
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
10011694:	4461      	add	r1, ip
10011696:	ea82 0c0e 	eor.w	ip, r2, lr
1001169a:	ea8c 0c03 	eor.w	ip, ip, r3
1001169e:	448c      	add	ip, r1
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
100116a0:	498d      	ldr	r1, [pc, #564]	@ (100118d8 <Transform+0x6cc>)
100116a2:	4431      	add	r1, r6
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
100116a4:	eb03 2c7c 	add.w	ip, r3, ip, ror #9
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
100116a8:	4411      	add	r1, r2
100116aa:	ea8e 0203 	eor.w	r2, lr, r3
100116ae:	ea82 020c 	eor.w	r2, r2, ip
100116b2:	440a      	add	r2, r1
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
100116b4:	4989      	ldr	r1, [pc, #548]	@ (100118dc <Transform+0x6d0>)
100116b6:	4459      	add	r1, fp
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
100116b8:	eb0c 7232 	add.w	r2, ip, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
100116bc:	448e      	add	lr, r1
100116be:	ea83 010c 	eor.w	r1, r3, ip
100116c2:	4051      	eors	r1, r2
100116c4:	4471      	add	r1, lr
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
100116c6:	f8df e218 	ldr.w	lr, [pc, #536]	@ 100118e0 <Transform+0x6d4>
100116ca:	44a6      	add	lr, r4
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
100116cc:	eb02 5171 	add.w	r1, r2, r1, ror #21
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
100116d0:	449e      	add	lr, r3
100116d2:	ea8c 0302 	eor.w	r3, ip, r2
100116d6:	404b      	eors	r3, r1
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
100116d8:	9c05      	ldr	r4, [sp, #20]
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
100116da:	4473      	add	r3, lr
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
100116dc:	f8df e204 	ldr.w	lr, [pc, #516]	@ 100118e4 <Transform+0x6d8>
100116e0:	44a6      	add	lr, r4
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
100116e2:	eb01 4333 	add.w	r3, r1, r3, ror #16
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
100116e6:	44e6      	add	lr, ip
100116e8:	ea82 0c01 	eor.w	ip, r2, r1
100116ec:	ea8c 0c03 	eor.w	ip, ip, r3
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
100116f0:	9c07      	ldr	r4, [sp, #28]
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
100116f2:	44f4      	add	ip, lr
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
100116f4:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 100118e8 <Transform+0x6dc>
100116f8:	44a6      	add	lr, r4
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
100116fa:	eb03 2c7c 	add.w	ip, r3, ip, ror #9
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
100116fe:	4496      	add	lr, r2
10011700:	ea81 0203 	eor.w	r2, r1, r3
10011704:	ea82 020c 	eor.w	r2, r2, ip
10011708:	4472      	add	r2, lr
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
1001170a:	f8df e1e0 	ldr.w	lr, [pc, #480]	@ 100118ec <Transform+0x6e0>
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
1001170e:	9c01      	ldr	r4, [sp, #4]
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
10011710:	44c6      	add	lr, r8
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
10011712:	eb0c 7232 	add.w	r2, ip, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
10011716:	448e      	add	lr, r1
10011718:	ea83 010c 	eor.w	r1, r3, ip
1001171c:	4051      	eors	r1, r2
1001171e:	4471      	add	r1, lr
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
10011720:	f8df e1cc 	ldr.w	lr, [pc, #460]	@ 100118f0 <Transform+0x6e4>
10011724:	44be      	add	lr, r7
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
10011726:	eb02 5171 	add.w	r1, r2, r1, ror #21
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
1001172a:	4473      	add	r3, lr
1001172c:	ea8c 0e02 	eor.w	lr, ip, r2
10011730:	ea8e 0e01 	eor.w	lr, lr, r1
10011734:	449e      	add	lr, r3
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
10011736:	4b6f      	ldr	r3, [pc, #444]	@ (100118f4 <Transform+0x6e8>)
10011738:	4423      	add	r3, r4
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
1001173a:	eb01 4e3e 	add.w	lr, r1, lr, ror #16
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
1001173e:	449c      	add	ip, r3
10011740:	ea82 0301 	eor.w	r3, r2, r1
10011744:	ea83 030e 	eor.w	r3, r3, lr
10011748:	4463      	add	r3, ip

    MD5STEP(F4, a, b, c, d, buffer[0]  + 0xf4292244,  6);
1001174a:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 100118f8 <Transform+0x6ec>
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
1001174e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
10011750:	eb0e 2373 	add.w	r3, lr, r3, ror #9
    MD5STEP(F4, a, b, c, d, buffer[0]  + 0xf4292244,  6);
10011754:	44dc      	add	ip, fp
10011756:	4494      	add	ip, r2
10011758:	ea63 0201 	orn	r2, r3, r1
1001175c:	ea82 020e 	eor.w	r2, r2, lr
10011760:	4462      	add	r2, ip
    MD5STEP(F4, d, a, b, c, buffer[7]  + 0x432aff97, 10);
10011762:	f8df c198 	ldr.w	ip, [pc, #408]	@ 100118fc <Transform+0x6f0>
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
10011766:	f8dd b00c 	ldr.w	fp, [sp, #12]
    MD5STEP(F4, a, b, c, d, buffer[0]  + 0xf4292244,  6);
1001176a:	eb03 62b2 	add.w	r2, r3, r2, ror #26
    MD5STEP(F4, d, a, b, c, buffer[7]  + 0x432aff97, 10);
1001176e:	44d4      	add	ip, sl
10011770:	448c      	add	ip, r1
10011772:	ea62 010e 	orn	r1, r2, lr
10011776:	4059      	eors	r1, r3
10011778:	4461      	add	r1, ip
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
1001177a:	f8df c184 	ldr.w	ip, [pc, #388]	@ 10011900 <Transform+0x6f4>
    MD5STEP(F4, d, a, b, c, buffer[7]  + 0x432aff97, 10);
1001177e:	eb02 51b1 	add.w	r1, r2, r1, ror #22
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
10011782:	44cc      	add	ip, r9
10011784:	44f4      	add	ip, lr
10011786:	ea61 0e03 	orn	lr, r1, r3
1001178a:	ea8e 0e02 	eor.w	lr, lr, r2
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
1001178e:	f8dd 9010 	ldr.w	r9, [sp, #16]
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
10011792:	44f4      	add	ip, lr
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
10011794:	f8df e16c 	ldr.w	lr, [pc, #364]	@ 10011904 <Transform+0x6f8>
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
10011798:	eb01 4c7c 	add.w	ip, r1, ip, ror #17
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
1001179c:	44ce      	add	lr, r9
1001179e:	449e      	add	lr, r3
100117a0:	ea6c 0302 	orn	r3, ip, r2
100117a4:	404b      	eors	r3, r1
100117a6:	4473      	add	r3, lr
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
100117a8:	f8df e15c 	ldr.w	lr, [pc, #348]	@ 10011908 <Transform+0x6fc>
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
100117ac:	eb0c 23f3 	add.w	r3, ip, r3, ror #11
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
100117b0:	44c6      	add	lr, r8
100117b2:	4496      	add	lr, r2
100117b4:	ea63 0201 	orn	r2, r3, r1
100117b8:	ea82 020c 	eor.w	r2, r2, ip
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
100117bc:	f8dd 8008 	ldr.w	r8, [sp, #8]
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
100117c0:	4472      	add	r2, lr
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
100117c2:	f5a5 1580 	sub.w	r5, r5, #1048576	@ 0x100000
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
100117c6:	f8df e144 	ldr.w	lr, [pc, #324]	@ 1001190c <Transform+0x700>
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
100117ca:	eb03 62b2 	add.w	r2, r3, r2, ror #26
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
100117ce:	f6a5 3583 	subw	r5, r5, #2947	@ 0xb83
100117d2:	4465      	add	r5, ip
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
100117d4:	44c6      	add	lr, r8
100117d6:	ea62 0c0c 	orn	ip, r2, ip
100117da:	448e      	add	lr, r1
100117dc:	ea8c 0c03 	eor.w	ip, ip, r3
100117e0:	44f4      	add	ip, lr
100117e2:	eb02 5cbc 	add.w	ip, r2, ip, ror #22
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
100117e6:	ea6c 0103 	orn	r1, ip, r3
100117ea:	4051      	eors	r1, r2
100117ec:	4429      	add	r1, r5
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
100117ee:	4d48      	ldr	r5, [pc, #288]	@ (10011910 <Transform+0x704>)
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
100117f0:	f8dd e018 	ldr.w	lr, [sp, #24]
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
100117f4:	f8dd 8014 	ldr.w	r8, [sp, #20]
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
100117f8:	eb0c 4171 	add.w	r1, ip, r1, ror #17
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
100117fc:	4425      	add	r5, r4
100117fe:	441d      	add	r5, r3
10011800:	ea61 0302 	orn	r3, r1, r2
10011804:	ea83 030c 	eor.w	r3, r3, ip
10011808:	442b      	add	r3, r5
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
1001180a:	4d42      	ldr	r5, [pc, #264]	@ (10011914 <Transform+0x708>)
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
    MD5STEP(F4, c, d, a, b, buffer[2]  + 0x2ad7d2bb, 15);
1001180c:	9c01      	ldr	r4, [sp, #4]
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
1001180e:	eb01 23f3 	add.w	r3, r1, r3, ror #11
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
10011812:	4475      	add	r5, lr
10011814:	4415      	add	r5, r2
10011816:	ea63 020c 	orn	r2, r3, ip
1001181a:	404a      	eors	r2, r1
1001181c:	442a      	add	r2, r5
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
1001181e:	4d3e      	ldr	r5, [pc, #248]	@ (10011918 <Transform+0x70c>)
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
10011820:	eb03 62b2 	add.w	r2, r3, r2, ror #26
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
10011824:	443d      	add	r5, r7
10011826:	ea62 0701 	orn	r7, r2, r1
1001182a:	405f      	eors	r7, r3
1001182c:	4465      	add	r5, ip
1001182e:	443d      	add	r5, r7
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
10011830:	4f3a      	ldr	r7, [pc, #232]	@ (1001191c <Transform+0x710>)
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
10011832:	eb02 55b5 	add.w	r5, r2, r5, ror #22
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
10011836:	4447      	add	r7, r8
10011838:	440f      	add	r7, r1
1001183a:	ea65 0103 	orn	r1, r5, r3
1001183e:	4051      	eors	r1, r2
10011840:	4439      	add	r1, r7
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
10011842:	4f37      	ldr	r7, [pc, #220]	@ (10011920 <Transform+0x714>)
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
10011844:	eb05 4171 	add.w	r1, r5, r1, ror #17
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
10011848:	4437      	add	r7, r6
1001184a:	ea61 0602 	orn	r6, r1, r2
1001184e:	441f      	add	r7, r3
10011850:	406e      	eors	r6, r5
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
10011852:	4b34      	ldr	r3, [pc, #208]	@ (10011924 <Transform+0x718>)
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
10011854:	443e      	add	r6, r7
10011856:	eb01 26f6 	add.w	r6, r1, r6, ror #11
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
1001185a:	445b      	add	r3, fp
1001185c:	441a      	add	r2, r3
1001185e:	ea66 0305 	orn	r3, r6, r5
10011862:	404b      	eors	r3, r1
10011864:	4413      	add	r3, r2
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);

    /* Add the working vars back into digest state[]  */
    md5->digest[0] += a;
10011866:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
10011868:	f8dd b020 	ldr.w	fp, [sp, #32]
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
1001186c:	eb06 63b3 	add.w	r3, r6, r3, ror #26
    md5->digest[0] += a;
10011870:	441a      	add	r2, r3
10011872:	64c2      	str	r2, [r0, #76]	@ 0x4c
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
10011874:	4a2c      	ldr	r2, [pc, #176]	@ (10011928 <Transform+0x71c>)
10011876:	445a      	add	r2, fp
10011878:	4415      	add	r5, r2
1001187a:	ea63 0201 	orn	r2, r3, r1
1001187e:	4072      	eors	r2, r6
10011880:	442a      	add	r2, r5
    md5->digest[1] += b;
    md5->digest[2] += c;
    md5->digest[3] += d;
10011882:	6d85      	ldr	r5, [r0, #88]	@ 0x58
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
10011884:	eb03 52b2 	add.w	r2, r3, r2, ror #22
    md5->digest[3] += d;
10011888:	4415      	add	r5, r2
1001188a:	6585      	str	r5, [r0, #88]	@ 0x58
    MD5STEP(F4, c, d, a, b, buffer[2]  + 0x2ad7d2bb, 15);
1001188c:	4d27      	ldr	r5, [pc, #156]	@ (1001192c <Transform+0x720>)
1001188e:	4425      	add	r5, r4
10011890:	440d      	add	r5, r1
10011892:	ea62 0106 	orn	r1, r2, r6
10011896:	4059      	eors	r1, r3
10011898:	4429      	add	r1, r5
1001189a:	eb02 4171 	add.w	r1, r2, r1, ror #17
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
1001189e:	ea61 0303 	orn	r3, r1, r3
    md5->digest[1] += b;
100118a2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
100118a4:	4053      	eors	r3, r2
    md5->digest[2] += c;
100118a6:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
100118a8:	f8dd c01c 	ldr.w	ip, [sp, #28]
    md5->digest[1] += b;
100118ac:	440c      	add	r4, r1
    md5->digest[2] += c;
100118ae:	4411      	add	r1, r2
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
100118b0:	4a1f      	ldr	r2, [pc, #124]	@ (10011930 <Transform+0x724>)
    md5->digest[2] += c;
100118b2:	6541      	str	r1, [r0, #84]	@ 0x54
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
100118b4:	4462      	add	r2, ip
100118b6:	4432      	add	r2, r6
100118b8:	4413      	add	r3, r2
    md5->digest[1] += b;
100118ba:	eb04 24f3 	add.w	r4, r4, r3, ror #11
100118be:	6504      	str	r4, [r0, #80]	@ 0x50

    return 0;
}
100118c0:	2000      	movs	r0, #0
100118c2:	b00d      	add	sp, #52	@ 0x34
100118c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100118c8:	a4beea44 	.word	0xa4beea44
100118cc:	4bdecfa9 	.word	0x4bdecfa9
100118d0:	f6bb4b60 	.word	0xf6bb4b60
100118d4:	bebfbc70 	.word	0xbebfbc70
100118d8:	289b7ec6 	.word	0x289b7ec6
100118dc:	eaa127fa 	.word	0xeaa127fa
100118e0:	d4ef3085 	.word	0xd4ef3085
100118e4:	04881d05 	.word	0x04881d05
100118e8:	d9d4d039 	.word	0xd9d4d039
100118ec:	e6db99e5 	.word	0xe6db99e5
100118f0:	1fa27cf8 	.word	0x1fa27cf8
100118f4:	c4ac5665 	.word	0xc4ac5665
100118f8:	f4292244 	.word	0xf4292244
100118fc:	432aff97 	.word	0x432aff97
10011900:	ab9423a7 	.word	0xab9423a7
10011904:	fc93a039 	.word	0xfc93a039
10011908:	655b59c3 	.word	0x655b59c3
1001190c:	8f0ccc92 	.word	0x8f0ccc92
10011910:	85845dd1 	.word	0x85845dd1
10011914:	6fa87e4f 	.word	0x6fa87e4f
10011918:	fe2ce6e0 	.word	0xfe2ce6e0
1001191c:	a3014314 	.word	0xa3014314
10011920:	4e0811a1 	.word	0x4e0811a1
10011924:	f7537e82 	.word	0xf7537e82
10011928:	bd3af235 	.word	0xbd3af235
1001192c:	2ad7d2bb 	.word	0x2ad7d2bb
10011930:	eb86d391 	.word	0xeb86d391

10011934 <wc_Md5Update>:
    return ret;
}

/* do block size increments/updates */
int wc_Md5Update(wc_Md5* md5, const byte* data, word32 len)
{
10011934:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int ret = 0;
    word32 blocksLen;
    byte* local;

    if (md5 == NULL || (data == NULL && len > 0)) {
10011938:	2800      	cmp	r0, #0
1001193a:	d074      	beq.n	10011a26 <wc_Md5Update+0xf2>
1001193c:	460c      	mov	r4, r1
1001193e:	4690      	mov	r8, r2
10011940:	4605      	mov	r5, r0
10011942:	2900      	cmp	r1, #0
10011944:	d04d      	beq.n	100119e2 <wc_Md5Update+0xae>
#endif
    }
#endif /* WOLFSSL_ASYNC_CRYPT */

    /* check that internal buffLen is valid */
    if (md5->buffLen >= WC_MD5_BLOCK_SIZE)
10011946:	6800      	ldr	r0, [r0, #0]
10011948:	283f      	cmp	r0, #63	@ 0x3f
1001194a:	d86f      	bhi.n	10011a2c <wc_Md5Update+0xf8>
    if ((md5->loLen += len) < tmp) {
1001194c:	686b      	ldr	r3, [r5, #4]
1001194e:	18d3      	adds	r3, r2, r3
10011950:	606b      	str	r3, [r5, #4]
10011952:	d22c      	bcs.n	100119ae <wc_Md5Update+0x7a>
    }

    /* add length for final */
    AddLength(md5, len);

    local = (byte*)md5->buffer;
10011954:	f105 060c 	add.w	r6, r5, #12

    /* process any remainder from previous operation */
    if (md5->buffLen > 0) {
10011958:	bb80      	cbnz	r0, 100119bc <wc_Md5Update+0x88>
        XTRANSFORM_LEN(md5, data, blocksLen);
        data += blocksLen;
        len  -= blocksLen;
    }
#else
    while (len >= WC_MD5_BLOCK_SIZE) {
1001195a:	f1b8 0f3f 	cmp.w	r8, #63	@ 0x3f
1001195e:	d955      	bls.n	10011a0c <wc_Md5Update+0xd8>
10011960:	f1a8 0740 	sub.w	r7, r8, #64	@ 0x40
10011964:	f027 073f 	bic.w	r7, r7, #63	@ 0x3f
10011968:	3740      	adds	r7, #64	@ 0x40
1001196a:	4427      	add	r7, r4
            local32 = (word32*)data;
        }
        else
    #endif
        {
            XMEMCPY(local32, data, WC_MD5_BLOCK_SIZE);
1001196c:	4633      	mov	r3, r6
1001196e:	f104 0e40 	add.w	lr, r4, #64	@ 0x40
10011972:	f8d4 c000 	ldr.w	ip, [r4]
10011976:	6860      	ldr	r0, [r4, #4]
10011978:	68a1      	ldr	r1, [r4, #8]
1001197a:	68e2      	ldr	r2, [r4, #12]
1001197c:	60da      	str	r2, [r3, #12]
1001197e:	3410      	adds	r4, #16
10011980:	4574      	cmp	r4, lr
10011982:	f8c3 c000 	str.w	ip, [r3]
10011986:	6058      	str	r0, [r3, #4]
10011988:	6099      	str	r1, [r3, #8]
1001198a:	f103 0310 	add.w	r3, r3, #16
1001198e:	d1f0      	bne.n	10011972 <wc_Md5Update+0x3e>

    #if defined(BIG_ENDIAN_ORDER) && !defined(FREESCALE_MMCAU_SHA)
        ByteReverseWords(local32, local32, WC_MD5_BLOCK_SIZE);
    #endif

        ret = XTRANSFORM(md5, (const byte*)local32);
10011990:	4631      	mov	r1, r6
10011992:	4628      	mov	r0, r5
10011994:	f7ff fc3a 	bl	1001120c <Transform>
    while (len >= WC_MD5_BLOCK_SIZE) {
10011998:	42bc      	cmp	r4, r7
        ret = XTRANSFORM(md5, (const byte*)local32);
1001199a:	4681      	mov	r9, r0
    while (len >= WC_MD5_BLOCK_SIZE) {
1001199c:	d1e6      	bne.n	1001196c <wc_Md5Update+0x38>
        len  -= WC_MD5_BLOCK_SIZE;
1001199e:	f008 083f 	and.w	r8, r8, #63	@ 0x3f
    }
#endif /* XTRANSFORM_LEN */

    /* save remainder */
    if (len > 0) {
100119a2:	f1b8 0f00 	cmp.w	r8, #0
100119a6:	d127      	bne.n	100119f8 <wc_Md5Update+0xc4>
        XMEMCPY(local, data, len);
        md5->buffLen = len;
    }

    return ret;
}
100119a8:	4648      	mov	r0, r9
100119aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        md5->hiLen++;                       /* carry low to high */
100119ae:	68ab      	ldr	r3, [r5, #8]
100119b0:	3301      	adds	r3, #1
100119b2:	60ab      	str	r3, [r5, #8]
    local = (byte*)md5->buffer;
100119b4:	f105 060c 	add.w	r6, r5, #12
    if (md5->buffLen > 0) {
100119b8:	2800      	cmp	r0, #0
100119ba:	d0ce      	beq.n	1001195a <wc_Md5Update+0x26>
        blocksLen = min(len, WC_MD5_BLOCK_SIZE - md5->buffLen);
100119bc:	f1c0 0740 	rsb	r7, r0, #64	@ 0x40
        #define min min
    #endif
    /* returns the smaller of a and b */
    WC_MISC_STATIC WC_INLINE word32 min(word32 a, word32 b)
    {
        return a > b ? b : a;
100119c0:	4547      	cmp	r7, r8
100119c2:	bf28      	it	cs
100119c4:	4647      	movcs	r7, r8
        XMEMCPY(&local[md5->buffLen], data, blocksLen);
100119c6:	4430      	add	r0, r6
100119c8:	463a      	mov	r2, r7
100119ca:	4621      	mov	r1, r4
100119cc:	f006 fde8 	bl	100185a0 <memcpy>
        md5->buffLen += blocksLen;
100119d0:	682b      	ldr	r3, [r5, #0]
100119d2:	443b      	add	r3, r7
        if (md5->buffLen == WC_MD5_BLOCK_SIZE) {
100119d4:	2b40      	cmp	r3, #64	@ 0x40
        md5->buffLen += blocksLen;
100119d6:	602b      	str	r3, [r5, #0]
        if (md5->buffLen == WC_MD5_BLOCK_SIZE) {
100119d8:	d01c      	beq.n	10011a14 <wc_Md5Update+0xe0>
        data         += blocksLen;
100119da:	443c      	add	r4, r7
        len          -= blocksLen;
100119dc:	eba8 0807 	sub.w	r8, r8, r7
100119e0:	e7bb      	b.n	1001195a <wc_Md5Update+0x26>
    if (md5 == NULL || (data == NULL && len > 0)) {
100119e2:	bb02      	cbnz	r2, 10011a26 <wc_Md5Update+0xf2>
    if (md5->buffLen >= WC_MD5_BLOCK_SIZE)
100119e4:	6803      	ldr	r3, [r0, #0]
        return BUFFER_E;
100119e6:	2b40      	cmp	r3, #64	@ 0x40
100119e8:	bf34      	ite	cc
100119ea:	f04f 0900 	movcc.w	r9, #0
100119ee:	f06f 0983 	mvncs.w	r9, #131	@ 0x83
}
100119f2:	4648      	mov	r0, r9
100119f4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        XMEMCPY(local, data, len);
100119f8:	4639      	mov	r1, r7
100119fa:	4630      	mov	r0, r6
100119fc:	4642      	mov	r2, r8
100119fe:	f006 fdcf 	bl	100185a0 <memcpy>
        md5->buffLen = len;
10011a02:	f8c5 8000 	str.w	r8, [r5]
}
10011a06:	4648      	mov	r0, r9
10011a08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (len >= WC_MD5_BLOCK_SIZE) {
10011a0c:	4627      	mov	r7, r4
10011a0e:	f04f 0900 	mov.w	r9, #0
10011a12:	e7c6      	b.n	100119a2 <wc_Md5Update+0x6e>
            ret = XTRANSFORM(md5, (const byte*)local);
10011a14:	4631      	mov	r1, r6
10011a16:	4628      	mov	r0, r5
10011a18:	f7ff fbf8 	bl	1001120c <Transform>
            if (ret != 0)
10011a1c:	4681      	mov	r9, r0
10011a1e:	2800      	cmp	r0, #0
10011a20:	d1c2      	bne.n	100119a8 <wc_Md5Update+0x74>
            md5->buffLen = 0;
10011a22:	6028      	str	r0, [r5, #0]
10011a24:	e7d9      	b.n	100119da <wc_Md5Update+0xa6>
        return BAD_FUNC_ARG;
10011a26:	f06f 09ac 	mvn.w	r9, #172	@ 0xac
10011a2a:	e7bd      	b.n	100119a8 <wc_Md5Update+0x74>
        return BUFFER_E;
10011a2c:	f06f 0983 	mvn.w	r9, #131	@ 0x83
10011a30:	e7ba      	b.n	100119a8 <wc_Md5Update+0x74>
10011a32:	bf00      	nop

10011a34 <wc_Md5Final>:

int wc_Md5Final(wc_Md5* md5, byte* hash)
{
    byte* local;

    if (md5 == NULL || hash == NULL) {
10011a34:	2800      	cmp	r0, #0
10011a36:	d04a      	beq.n	10011ace <wc_Md5Final+0x9a>
{
10011a38:	b570      	push	{r4, r5, r6, lr}
10011a3a:	460d      	mov	r5, r1
    if (md5 == NULL || hash == NULL) {
10011a3c:	2900      	cmp	r1, #0
10011a3e:	d043      	beq.n	10011ac8 <wc_Md5Final+0x94>
        return IntelQaSymMd5(&md5->asyncDev, hash, NULL, WC_MD5_DIGEST_SIZE);
#endif
    }
#endif /* WOLFSSL_ASYNC_CRYPT */

    local = (byte*)md5->buffer; /* buffer allocated in word32 size */
10011a40:	4606      	mov	r6, r0
10011a42:	4604      	mov	r4, r0

    /* ensure we have a valid buffer length; (-1 to append a byte to length) */
    if (md5->buffLen > WC_MD5_BLOCK_SIZE - 1) {
10011a44:	f856 3b0c 	ldr.w	r3, [r6], #12
10011a48:	2b3f      	cmp	r3, #63	@ 0x3f
10011a4a:	d83a      	bhi.n	10011ac2 <wc_Md5Final+0x8e>
        return BUFFER_E;
    }

    local[md5->buffLen++] = 0x80;  /* add 1 */
10011a4c:	1c5a      	adds	r2, r3, #1
10011a4e:	6002      	str	r2, [r0, #0]
10011a50:	2280      	movs	r2, #128	@ 0x80
10011a52:	54f2      	strb	r2, [r6, r3]

    /* pad with zeros */
    if (md5->buffLen > WC_MD5_PAD_SIZE) {
10011a54:	6803      	ldr	r3, [r0, #0]
10011a56:	2b38      	cmp	r3, #56	@ 0x38
10011a58:	d826      	bhi.n	10011aa8 <wc_Md5Final+0x74>
        XMEMSET(&local[md5->buffLen], 0, WC_MD5_BLOCK_SIZE - md5->buffLen);
10011a5a:	18f0      	adds	r0, r6, r3
        ByteReverseWords(md5->buffer, md5->buffer, WC_MD5_BLOCK_SIZE);
#endif
        XTRANSFORM(md5, local);
        md5->buffLen = 0;
    }
    XMEMSET(&local[md5->buffLen], 0, WC_MD5_PAD_SIZE - md5->buffLen);
10011a5c:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
10011a60:	2100      	movs	r1, #0
10011a62:	f006 fa89 	bl	10017f78 <memset>
    ByteReverseWords(md5->buffer, md5->buffer, WC_MD5_BLOCK_SIZE);
#endif

    /* put lengths in bits */
    md5->hiLen = (md5->loLen >> (8 * sizeof(md5->loLen) - 3)) +
                 (md5->hiLen << 3);
10011a66:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
    md5->hiLen = (md5->loLen >> (8 * sizeof(md5->loLen) - 3)) +
10011a6a:	0f5a      	lsrs	r2, r3, #29
10011a6c:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
    md5->loLen = md5->loLen << 3;
10011a70:	00db      	lsls	r3, r3, #3
    /* ! length ordering dependent on digest endian type ! */
    XMEMCPY(&local[WC_MD5_PAD_SIZE], &md5->loLen, sizeof(word32));
    XMEMCPY(&local[WC_MD5_PAD_SIZE + sizeof(word32)], &md5->hiLen, sizeof(word32));

    /* final transform and result to hash */
    XTRANSFORM(md5, local);
10011a72:	4631      	mov	r1, r6
    XMEMCPY(&local[WC_MD5_PAD_SIZE], &md5->loLen, sizeof(word32));
10011a74:	6463      	str	r3, [r4, #68]	@ 0x44
    XMEMCPY(&local[WC_MD5_PAD_SIZE + sizeof(word32)], &md5->hiLen, sizeof(word32));
10011a76:	64a2      	str	r2, [r4, #72]	@ 0x48
    XTRANSFORM(md5, local);
10011a78:	4620      	mov	r0, r4
10011a7a:	f7ff fbc7 	bl	1001120c <Transform>
#ifdef BIG_ENDIAN_ORDER
    ByteReverseWords(md5->digest, md5->digest, WC_MD5_DIGEST_SIZE);
#endif
    XMEMCPY(hash, md5->digest, WC_MD5_DIGEST_SIZE);
10011a7e:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
10011a80:	6d63      	ldr	r3, [r4, #84]	@ 0x54
10011a82:	6d22      	ldr	r2, [r4, #80]	@ 0x50
10011a84:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10011a86:	6029      	str	r1, [r5, #0]
10011a88:	60ab      	str	r3, [r5, #8]
    md5->digest[0] = 0x67452301L;
10011a8a:	4912      	ldr	r1, [pc, #72]	@ (10011ad4 <wc_Md5Final+0xa0>)
    md5->digest[1] = 0xefcdab89L;
10011a8c:	4b12      	ldr	r3, [pc, #72]	@ (10011ad8 <wc_Md5Final+0xa4>)
    XMEMCPY(hash, md5->digest, WC_MD5_DIGEST_SIZE);
10011a8e:	60e8      	str	r0, [r5, #12]
10011a90:	606a      	str	r2, [r5, #4]
    md5->digest[1] = 0xefcdab89L;
10011a92:	e9c4 1313 	strd	r1, r3, [r4, #76]	@ 0x4c
    md5->digest[2] = 0x98badcfeL;
10011a96:	4a11      	ldr	r2, [pc, #68]	@ (10011adc <wc_Md5Final+0xa8>)
    md5->digest[3] = 0x10325476L;
10011a98:	4b11      	ldr	r3, [pc, #68]	@ (10011ae0 <wc_Md5Final+0xac>)
    md5->buffLen = 0;
10011a9a:	2000      	movs	r0, #0
    md5->digest[3] = 0x10325476L;
10011a9c:	e9c4 2315 	strd	r2, r3, [r4, #84]	@ 0x54
    md5->buffLen = 0;
10011aa0:	6020      	str	r0, [r4, #0]
10011aa2:	6060      	str	r0, [r4, #4]
    md5->hiLen   = 0;
10011aa4:	60a0      	str	r0, [r4, #8]

    return _InitMd5(md5); /* reset state */
}
10011aa6:	bd70      	pop	{r4, r5, r6, pc}
        XMEMSET(&local[md5->buffLen], 0, WC_MD5_BLOCK_SIZE - md5->buffLen);
10011aa8:	f1c3 0240 	rsb	r2, r3, #64	@ 0x40
10011aac:	18f0      	adds	r0, r6, r3
10011aae:	2100      	movs	r1, #0
10011ab0:	f006 fa62 	bl	10017f78 <memset>
        XTRANSFORM(md5, local);
10011ab4:	4631      	mov	r1, r6
10011ab6:	4620      	mov	r0, r4
10011ab8:	f7ff fba8 	bl	1001120c <Transform>
10011abc:	4630      	mov	r0, r6
10011abe:	2238      	movs	r2, #56	@ 0x38
10011ac0:	e7ce      	b.n	10011a60 <wc_Md5Final+0x2c>
        return BUFFER_E;
10011ac2:	f06f 0083 	mvn.w	r0, #131	@ 0x83
}
10011ac6:	bd70      	pop	{r4, r5, r6, pc}
        return BAD_FUNC_ARG;
10011ac8:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
}
10011acc:	bd70      	pop	{r4, r5, r6, pc}
        return BAD_FUNC_ARG;
10011ace:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
}
10011ad2:	4770      	bx	lr
10011ad4:	67452301 	.word	0x67452301
10011ad8:	efcdab89 	.word	0xefcdab89
10011adc:	98badcfe 	.word	0x98badcfe
10011ae0:	10325476 	.word	0x10325476

10011ae4 <wc_InitMd5>:
#endif /* !HAVE_MD5_CUST_API */


int wc_InitMd5(wc_Md5* md5)
{
    if (md5 == NULL) {
10011ae4:	b180      	cbz	r0, 10011b08 <wc_InitMd5+0x24>
{
10011ae6:	b410      	push	{r4}
    md5->digest[1] = 0xefcdab89L;
10011ae8:	4a09      	ldr	r2, [pc, #36]	@ (10011b10 <wc_InitMd5+0x2c>)
    md5->digest[0] = 0x67452301L;
10011aea:	4c0a      	ldr	r4, [pc, #40]	@ (10011b14 <wc_InitMd5+0x30>)
    md5->digest[2] = 0x98badcfeL;
10011aec:	490a      	ldr	r1, [pc, #40]	@ (10011b18 <wc_InitMd5+0x34>)
    md5->digest[1] = 0xefcdab89L;
10011aee:	e9c0 4213 	strd	r4, r2, [r0, #76]	@ 0x4c
    md5->digest[3] = 0x10325476L;
10011af2:	4a0a      	ldr	r2, [pc, #40]	@ (10011b1c <wc_InitMd5+0x38>)
        return BAD_FUNC_ARG;
    }
    return wc_InitMd5_ex(md5, NULL, INVALID_DEVID);
}
10011af4:	bc10      	pop	{r4}
    md5->heap = heap;
10011af6:	2300      	movs	r3, #0
    md5->digest[3] = 0x10325476L;
10011af8:	e9c0 1215 	strd	r1, r2, [r0, #84]	@ 0x54
    md5->heap = heap;
10011afc:	65c3      	str	r3, [r0, #92]	@ 0x5c
    md5->buffLen = 0;
10011afe:	6003      	str	r3, [r0, #0]
10011b00:	6043      	str	r3, [r0, #4]
    md5->hiLen   = 0;
10011b02:	6083      	str	r3, [r0, #8]
    return wc_InitMd5_ex(md5, NULL, INVALID_DEVID);
10011b04:	4618      	mov	r0, r3
}
10011b06:	4770      	bx	lr
        return BAD_FUNC_ARG;
10011b08:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
}
10011b0c:	4770      	bx	lr
10011b0e:	bf00      	nop
10011b10:	efcdab89 	.word	0xefcdab89
10011b14:	67452301 	.word	0x67452301
10011b18:	98badcfe 	.word	0x98badcfe
10011b1c:	10325476 	.word	0x10325476

10011b20 <wc_Md5Free>:
#endif /* WOLFSSL_ASYNC_CRYPT */

#ifdef WOLFSSL_PIC32MZ_HASH
    wc_Md5Pic32Free(md5);
#endif
}
10011b20:	4770      	bx	lr
10011b22:	bf00      	nop

10011b24 <mxc_assert>:
};
const unsigned int num_leds = (sizeof(led_pin) / sizeof(mxc_gpio_cfg_t));

/******************************************************************************/
void mxc_assert(const char *expr, const char *file, int line)
{
10011b24:	b508      	push	{r3, lr}
10011b26:	4603      	mov	r3, r0
    printf("MXC_ASSERT %s #%d: (%s)\n", file, line, expr);
10011b28:	4801      	ldr	r0, [pc, #4]	@ (10011b30 <mxc_assert+0xc>)
10011b2a:	f002 fb61 	bl	100141f0 <printf>

    while (1) {}
10011b2e:	e7fe      	b.n	10011b2e <mxc_assert+0xa>
10011b30:	10023874 	.word	0x10023874

10011b34 <GPIO0_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 0 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO0_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO0));
10011b34:	2000      	movs	r0, #0
10011b36:	f000 bdcf 	b.w	100126d8 <MXC_GPIO_Handler>
10011b3a:	bf00      	nop

10011b3c <GPIO1_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 1 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO1_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO1));
10011b3c:	2001      	movs	r0, #1
10011b3e:	f000 bdcb 	b.w	100126d8 <MXC_GPIO_Handler>
10011b42:	bf00      	nop

10011b44 <Board_Init>:
}

/******************************************************************************/
int Board_Init(void)
{
10011b44:	b510      	push	{r4, lr}
#ifndef __riscv
    int err;

    // Enable GPIO
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
10011b46:	2000      	movs	r0, #0
10011b48:	f000 fb5c 	bl	10012204 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
10011b4c:	2001      	movs	r0, #1
10011b4e:	f000 fb59 	bl	10012204 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
10011b52:	2040      	movs	r0, #64	@ 0x40
10011b54:	f000 fb56 	bl	10012204 <MXC_SYS_ClockEnable>
/******************************************************************************/
int Console_Init(void)
{
    int err;

    if ((err = MXC_UART_Init(ConsoleUart, CONSOLE_BAUD, MXC_UART_IBRO_CLK)) != E_NO_ERROR) {
10011b58:	4b10      	ldr	r3, [pc, #64]	@ (10011b9c <Board_Init+0x58>)
10011b5a:	2202      	movs	r2, #2
10011b5c:	6818      	ldr	r0, [r3, #0]
10011b5e:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
10011b62:	f001 fd51 	bl	10013608 <MXC_UART_Init>
    if ((err = Console_Init()) < E_NO_ERROR) {
10011b66:	1e04      	subs	r4, r0, #0
10011b68:	db0c      	blt.n	10011b84 <Board_Init+0x40>
    if ((err = PB_Init()) != E_NO_ERROR) {
10011b6a:	f000 f8eb 	bl	10011d44 <PB_Init>
10011b6e:	b958      	cbnz	r0, 10011b88 <Board_Init+0x44>
    if ((err = LED_Init()) != E_NO_ERROR) {
10011b70:	f000 f888 	bl	10011c84 <LED_Init>
10011b74:	4604      	mov	r4, r0
10011b76:	b960      	cbnz	r0, 10011b92 <Board_Init+0x4e>
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
10011b78:	4b09      	ldr	r3, [pc, #36]	@ (10011ba0 <Board_Init+0x5c>)
    MXC_Delay(200000);
10011b7a:	480a      	ldr	r0, [pc, #40]	@ (10011ba4 <Board_Init+0x60>)
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
10011b7c:	2243      	movs	r2, #67	@ 0x43
10011b7e:	60da      	str	r2, [r3, #12]
    MXC_Delay(200000);
10011b80:	f000 fabe 	bl	10012100 <MXC_Delay>
}
10011b84:	4620      	mov	r0, r4
10011b86:	bd10      	pop	{r4, pc}
        MXC_ASSERT_FAIL();
10011b88:	4907      	ldr	r1, [pc, #28]	@ (10011ba8 <Board_Init+0x64>)
10011b8a:	4808      	ldr	r0, [pc, #32]	@ (10011bac <Board_Init+0x68>)
10011b8c:	226f      	movs	r2, #111	@ 0x6f
10011b8e:	f7ff ffc9 	bl	10011b24 <mxc_assert>
        MXC_ASSERT_FAIL();
10011b92:	4905      	ldr	r1, [pc, #20]	@ (10011ba8 <Board_Init+0x64>)
10011b94:	4805      	ldr	r0, [pc, #20]	@ (10011bac <Board_Init+0x68>)
10011b96:	2274      	movs	r2, #116	@ 0x74
10011b98:	f7ff ffc4 	bl	10011b24 <mxc_assert>
10011b9c:	20000000 	.word	0x20000000
10011ba0:	40004400 	.word	0x40004400
10011ba4:	00030d40 	.word	0x00030d40
10011ba8:	10023890 	.word	0x10023890
10011bac:	100238f8 	.word	0x100238f8

10011bb0 <NMI_Handler>:
}

/******************************************************************************/
void NMI_Handler(void)
{
    __NOP();
10011bb0:	bf00      	nop
}
10011bb2:	4770      	bx	lr

10011bb4 <_close>:
    return -1;
}
int _close(int file)
{
    return -1;
}
10011bb4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011bb8:	4770      	bx	lr
10011bba:	bf00      	nop

10011bbc <_isatty>:
int _isatty(int file)
10011bbc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011bc0:	4770      	bx	lr
10011bc2:	bf00      	nop

10011bc4 <_lseek>:
    return -1;
}
int _lseek(int file, off_t offset, int whence)
{
    return -1;
}
10011bc4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011bc8:	4770      	bx	lr
10011bca:	bf00      	nop

10011bcc <_fstat>:
int _fstat(int file, struct stat *st)
{
    return -1;
}
10011bcc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011bd0:	4770      	bx	lr
10011bd2:	bf00      	nop

10011bd4 <_read>:
   fgetc for stdio */
#if defined(__ICCARM__) || defined(__GNUC__)

#if defined(__GNUC__) // GNUC _read function prototype
int _read(int file, char *ptr, int len)
{
10011bd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    size_t n;
#endif /*  */

    int num = 0; // count of number received.

    switch (file) {
10011bd6:	b9e0      	cbnz	r0, 10011c12 <_read+0x3e>
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
10011bd8:	2a00      	cmp	r2, #0
10011bda:	dd19      	ble.n	10011c10 <_read+0x3c>
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
10011bdc:	4d10      	ldr	r5, [pc, #64]	@ (10011c20 <_read+0x4c>)
10011bde:	460e      	mov	r6, r1
10011be0:	188f      	adds	r7, r1, r2
        for (n = 0; n < len; n++) {
10011be2:	460c      	mov	r4, r1
10011be4:	e002      	b.n	10011bec <_read+0x18>
10011be6:	42bb      	cmp	r3, r7
10011be8:	d00f      	beq.n	10011c0a <_read+0x36>
                num++;
                ptr++;

                break;
            } else {
                ptr++;
10011bea:	461c      	mov	r4, r3
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
10011bec:	4628      	mov	r0, r5
10011bee:	f001 fe03 	bl	100137f8 <MXC_UART_ReadCharacter>
10011bf2:	b2c1      	uxtb	r1, r0
10011bf4:	7021      	strb	r1, [r4, #0]
            MXC_UART_WriteCharacter(MXC_UARTn, *ptr); // echo the byte.
10011bf6:	4628      	mov	r0, r5
10011bf8:	f001 fe00 	bl	100137fc <MXC_UART_WriteCharacter>
            if (*ptr == '\r') { // check for end of line.
10011bfc:	7822      	ldrb	r2, [r4, #0]
10011bfe:	2a0d      	cmp	r2, #13
                ptr++;
10011c00:	f104 0301 	add.w	r3, r4, #1
            if (*ptr == '\r') { // check for end of line.
10011c04:	d1ef      	bne.n	10011be6 <_read+0x12>
                *ptr = '\n';
10011c06:	230a      	movs	r3, #10
10011c08:	7023      	strb	r3, [r4, #0]
                num++;
10011c0a:	f1c6 0601 	rsb	r6, r6, #1
10011c0e:	19a0      	adds	r0, r4, r6
        errno = EBADF;
        return -1;
    }

    return num;
}
10011c10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        errno = EBADF;
10011c12:	f006 fabd 	bl	10018190 <__errno>
10011c16:	2309      	movs	r3, #9
10011c18:	6003      	str	r3, [r0, #0]
        return -1;
10011c1a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011c1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011c20:	40042000 	.word	0x40042000

10011c24 <_write>:

/* newlib/libc printf() will eventually call write() to get the data to the stdout */
#if defined(__GNUC__)
// GNUC _write function prototype
int _write(int file, char *ptr, int len)
{
10011c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
int __write(int file, const unsigned char *ptr, size_t len)
{
    size_t n;
#endif /* __GNUC__ */

    switch (file) {
10011c26:	1e43      	subs	r3, r0, #1
10011c28:	2b01      	cmp	r3, #1
10011c2a:	d821      	bhi.n	10011c70 <_write+0x4c>
    case STDOUT_FILENO:
    case STDERR_FILENO:

        // This function should be as fast as possible
        // So we'll forgo the UART driver for now
        for (n = 0; n < len; n++) {
10011c2c:	2a00      	cmp	r2, #0
10011c2e:	4617      	mov	r7, r2
10011c30:	dd12      	ble.n	10011c58 <_write+0x34>
10011c32:	1e53      	subs	r3, r2, #1
            if (*ptr == '\n') {
                // Wait until there's room in the FIFO
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011c34:	4e12      	ldr	r6, [pc, #72]	@ (10011c80 <_write+0x5c>)
10011c36:	1e4c      	subs	r4, r1, #1
10011c38:	18cd      	adds	r5, r1, r3
            if (*ptr == '\n') {
10011c3a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
10011c3e:	2b0a      	cmp	r3, #10
10011c40:	d00c      	beq.n	10011c5c <_write+0x38>

                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
            }

            // Wait until there's room in the FIFO
            while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011c42:	480f      	ldr	r0, [pc, #60]	@ (10011c80 <_write+0x5c>)
10011c44:	f001 fdde 	bl	10013804 <MXC_UART_GetTXFIFOAvailable>
10011c48:	2800      	cmp	r0, #0
10011c4a:	d0fa      	beq.n	10011c42 <_write+0x1e>

            MXC_UART_WriteCharacter(MXC_UARTn, *ptr++);
10011c4c:	7821      	ldrb	r1, [r4, #0]
10011c4e:	4630      	mov	r0, r6
10011c50:	f001 fdd4 	bl	100137fc <MXC_UART_WriteCharacter>
        for (n = 0; n < len; n++) {
10011c54:	42ac      	cmp	r4, r5
10011c56:	d1f0      	bne.n	10011c3a <_write+0x16>

        break;

    default:
        errno = EBADF;
        return -1;
10011c58:	4638      	mov	r0, r7
    }

    return len;
}
10011c5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011c5c:	4808      	ldr	r0, [pc, #32]	@ (10011c80 <_write+0x5c>)
10011c5e:	f001 fdd1 	bl	10013804 <MXC_UART_GetTXFIFOAvailable>
10011c62:	2800      	cmp	r0, #0
10011c64:	d0fa      	beq.n	10011c5c <_write+0x38>
                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
10011c66:	210d      	movs	r1, #13
10011c68:	4630      	mov	r0, r6
10011c6a:	f001 fdc7 	bl	100137fc <MXC_UART_WriteCharacter>
10011c6e:	e7e8      	b.n	10011c42 <_write+0x1e>
        errno = EBADF;
10011c70:	f006 fa8e 	bl	10018190 <__errno>
10011c74:	2309      	movs	r3, #9
10011c76:	6003      	str	r3, [r0, #0]
        return -1;
10011c78:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011c7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011c7e:	bf00      	nop
10011c80:	40042000 	.word	0x40042000

10011c84 <LED_Init>:
#include "led.h"
#include "mxc_device.h"

/******************************************************************************/
int LED_Init(void)
{
10011c84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    /* setup GPIO for the LED */
    for (i = 0; i < num_leds; i++) {
10011c86:	4b0d      	ldr	r3, [pc, #52]	@ (10011cbc <LED_Init+0x38>)
10011c88:	681f      	ldr	r7, [r3, #0]
10011c8a:	b1a7      	cbz	r7, 10011cb6 <LED_Init+0x32>
10011c8c:	2500      	movs	r5, #0
10011c8e:	4c0c      	ldr	r4, [pc, #48]	@ (10011cc0 <LED_Init+0x3c>)
    int retval = E_NO_ERROR;
10011c90:	462e      	mov	r6, r5
//******************************************************************************
void LED_Off(unsigned int idx)
{
    MXC_ASSERT(idx < num_leds);
#if (LED_ON == 0)
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10011c92:	e9d4 0100 	ldrd	r0, r1, [r4]
10011c96:	f000 fcf1 	bl	1001267c <MXC_GPIO_OutSet>
        if (MXC_GPIO_Config(&led_pin[i]) != E_NO_ERROR) {
10011c9a:	4620      	mov	r0, r4
10011c9c:	f000 fbe8 	bl	10012470 <MXC_GPIO_Config>
    for (i = 0; i < num_leds; i++) {
10011ca0:	3501      	adds	r5, #1
            retval = E_UNKNOWN;
10011ca2:	2800      	cmp	r0, #0
10011ca4:	bf18      	it	ne
10011ca6:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_leds; i++) {
10011caa:	42af      	cmp	r7, r5
10011cac:	f104 040c 	add.w	r4, r4, #12
10011cb0:	d1ef      	bne.n	10011c92 <LED_Init+0xe>
}
10011cb2:	4630      	mov	r0, r6
10011cb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
10011cb6:	463e      	mov	r6, r7
}
10011cb8:	4630      	mov	r0, r6
10011cba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011cbc:	10023900 	.word	0x10023900
10011cc0:	10023904 	.word	0x10023904

10011cc4 <LED_On>:
    MXC_ASSERT(idx < num_leds);
10011cc4:	4b0b      	ldr	r3, [pc, #44]	@ (10011cf4 <LED_On+0x30>)
10011cc6:	681b      	ldr	r3, [r3, #0]
10011cc8:	4283      	cmp	r3, r0
{
10011cca:	b510      	push	{r4, lr}
10011ccc:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
10011cce:	d90b      	bls.n	10011ce8 <LED_On+0x24>
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
10011cd0:	4b09      	ldr	r3, [pc, #36]	@ (10011cf8 <LED_On+0x34>)
10011cd2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10011cd6:	eb03 0284 	add.w	r2, r3, r4, lsl #2
10011cda:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
10011cde:	6851      	ldr	r1, [r2, #4]
}
10011ce0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
10011ce4:	f000 bce0 	b.w	100126a8 <MXC_GPIO_OutClr>
    MXC_ASSERT(idx < num_leds);
10011ce8:	4904      	ldr	r1, [pc, #16]	@ (10011cfc <LED_On+0x38>)
10011cea:	4805      	ldr	r0, [pc, #20]	@ (10011d00 <LED_On+0x3c>)
10011cec:	223b      	movs	r2, #59	@ 0x3b
10011cee:	f7ff ff19 	bl	10011b24 <mxc_assert>
10011cf2:	e7ed      	b.n	10011cd0 <LED_On+0xc>
10011cf4:	10023900 	.word	0x10023900
10011cf8:	10023904 	.word	0x10023904
10011cfc:	10023944 	.word	0x10023944
10011d00:	10023998 	.word	0x10023998

10011d04 <LED_Off>:
    MXC_ASSERT(idx < num_leds);
10011d04:	4b0b      	ldr	r3, [pc, #44]	@ (10011d34 <LED_Off+0x30>)
10011d06:	681b      	ldr	r3, [r3, #0]
10011d08:	4283      	cmp	r3, r0
{
10011d0a:	b510      	push	{r4, lr}
10011d0c:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
10011d0e:	d90b      	bls.n	10011d28 <LED_Off+0x24>
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10011d10:	4b09      	ldr	r3, [pc, #36]	@ (10011d38 <LED_Off+0x34>)
10011d12:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10011d16:	eb03 0284 	add.w	r2, r3, r4, lsl #2
10011d1a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
10011d1e:	6851      	ldr	r1, [r2, #4]
#else
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
#endif
}
10011d20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10011d24:	f000 bcaa 	b.w	1001267c <MXC_GPIO_OutSet>
    MXC_ASSERT(idx < num_leds);
10011d28:	4904      	ldr	r1, [pc, #16]	@ (10011d3c <LED_Off+0x38>)
10011d2a:	4805      	ldr	r0, [pc, #20]	@ (10011d40 <LED_Off+0x3c>)
10011d2c:	2246      	movs	r2, #70	@ 0x46
10011d2e:	f7ff fef9 	bl	10011b24 <mxc_assert>
10011d32:	e7ed      	b.n	10011d10 <LED_Off+0xc>
10011d34:	10023900 	.word	0x10023900
10011d38:	10023904 	.word	0x10023904
10011d3c:	10023944 	.word	0x10023944
10011d40:	10023998 	.word	0x10023998

10011d44 <PB_Init>:
#include "mxc_assert.h"
#include "pb.h"

/******************************************************************************/
int PB_Init(void)
{
10011d44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    // Enable pushbutton inputs
    for (i = 0; i < num_pbs; i++) {
10011d46:	4b0b      	ldr	r3, [pc, #44]	@ (10011d74 <PB_Init+0x30>)
10011d48:	681f      	ldr	r7, [r3, #0]
10011d4a:	b187      	cbz	r7, 10011d6e <PB_Init+0x2a>
10011d4c:	2400      	movs	r4, #0
10011d4e:	4d0a      	ldr	r5, [pc, #40]	@ (10011d78 <PB_Init+0x34>)
    int retval = E_NO_ERROR;
10011d50:	4626      	mov	r6, r4
        if (MXC_GPIO_Config(&pb_pin[i]) != E_NO_ERROR) {
10011d52:	4628      	mov	r0, r5
10011d54:	f000 fb8c 	bl	10012470 <MXC_GPIO_Config>
    for (i = 0; i < num_pbs; i++) {
10011d58:	3401      	adds	r4, #1
            retval = E_UNKNOWN;
10011d5a:	2800      	cmp	r0, #0
10011d5c:	bf18      	it	ne
10011d5e:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_pbs; i++) {
10011d62:	42bc      	cmp	r4, r7
10011d64:	f105 050c 	add.w	r5, r5, #12
10011d68:	d1f3      	bne.n	10011d52 <PB_Init+0xe>
        }
    }

    return retval;
}
10011d6a:	4630      	mov	r0, r6
10011d6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
10011d6e:	463e      	mov	r6, r7
}
10011d70:	4630      	mov	r0, r6
10011d72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011d74:	10023928 	.word	0x10023928
10011d78:	1002392c 	.word	0x1002392c

10011d7c <Reset_Handler>:
10011d7c:	4847      	ldr	r0, [pc, #284]	@ (10011e9c <LPCMP_IRQHandler+0x2>)
10011d7e:	4685      	mov	sp, r0
10011d80:	4847      	ldr	r0, [pc, #284]	@ (10011ea0 <LPCMP_IRQHandler+0x6>)
10011d82:	4780      	blx	r0
10011d84:	b980      	cbnz	r0, 10011da8 <.SKIPRAMINIT>
10011d86:	4947      	ldr	r1, [pc, #284]	@ (10011ea4 <LPCMP_IRQHandler+0xa>)
10011d88:	4a47      	ldr	r2, [pc, #284]	@ (10011ea8 <LPCMP_IRQHandler+0xe>)
10011d8a:	4b48      	ldr	r3, [pc, #288]	@ (10011eac <LPCMP_IRQHandler+0x12>)
10011d8c:	1a9b      	subs	r3, r3, r2
10011d8e:	dd03      	ble.n	10011d98 <Reset_Handler+0x1c>
10011d90:	3b04      	subs	r3, #4
10011d92:	58c8      	ldr	r0, [r1, r3]
10011d94:	50d0      	str	r0, [r2, r3]
10011d96:	dcfb      	bgt.n	10011d90 <Reset_Handler+0x14>
10011d98:	4945      	ldr	r1, [pc, #276]	@ (10011eb0 <LPCMP_IRQHandler+0x16>)
10011d9a:	4a46      	ldr	r2, [pc, #280]	@ (10011eb4 <LPCMP_IRQHandler+0x1a>)
10011d9c:	2000      	movs	r0, #0
10011d9e:	4291      	cmp	r1, r2
10011da0:	bfbc      	itt	lt
10011da2:	f841 0b04 	strlt.w	r0, [r1], #4
10011da6:	e7fa      	blt.n	10011d9e <Reset_Handler+0x22>

10011da8 <.SKIPRAMINIT>:
10011da8:	4843      	ldr	r0, [pc, #268]	@ (10011eb8 <LPCMP_IRQHandler+0x1e>)
10011daa:	4780      	blx	r0
10011dac:	4843      	ldr	r0, [pc, #268]	@ (10011ebc <LPCMP_IRQHandler+0x22>)
10011dae:	4780      	blx	r0
10011db0:	4843      	ldr	r0, [pc, #268]	@ (10011ec0 <LPCMP_IRQHandler+0x26>)
10011db2:	4780      	blx	r0

10011db4 <.SPIN>:
10011db4:	f7ff fffe 	bl	10011db4 <.SPIN>
10011db8:	e7fe      	b.n	10011db8 <.SPIN+0x4>

10011dba <HardFault_Handler>:
10011dba:	e7fe      	b.n	10011dba <HardFault_Handler>

10011dbc <MemManage_Handler>:
10011dbc:	e7fe      	b.n	10011dbc <MemManage_Handler>

10011dbe <BusFault_Handler>:
10011dbe:	e7fe      	b.n	10011dbe <BusFault_Handler>

10011dc0 <UsageFault_Handler>:
10011dc0:	e7fe      	b.n	10011dc0 <UsageFault_Handler>

10011dc2 <SVC_Handler>:
10011dc2:	e7fe      	b.n	10011dc2 <SVC_Handler>

10011dc4 <DebugMon_Handler>:
10011dc4:	e7fe      	b.n	10011dc4 <DebugMon_Handler>

10011dc6 <PendSV_Handler>:
10011dc6:	e7fe      	b.n	10011dc6 <PendSV_Handler>

10011dc8 <SysTick_Handler>:
10011dc8:	e7fe      	b.n	10011dc8 <SysTick_Handler>

10011dca <Default_Handler>:
10011dca:	e7fe      	b.n	10011dca <Default_Handler>

10011dcc <PF_IRQHandler>:
10011dcc:	e7fe      	b.n	10011dcc <PF_IRQHandler>

10011dce <WDT0_IRQHandler>:
10011dce:	e7fe      	b.n	10011dce <WDT0_IRQHandler>

10011dd0 <RSV02_IRQHandler>:
10011dd0:	e7fe      	b.n	10011dd0 <RSV02_IRQHandler>

10011dd2 <RTC_IRQHandler>:
10011dd2:	e7fe      	b.n	10011dd2 <RTC_IRQHandler>

10011dd4 <TRNG_IRQHandler>:
10011dd4:	e7fe      	b.n	10011dd4 <TRNG_IRQHandler>

10011dd6 <TMR0_IRQHandler>:
10011dd6:	e7fe      	b.n	10011dd6 <TMR0_IRQHandler>

10011dd8 <TMR1_IRQHandler>:
10011dd8:	e7fe      	b.n	10011dd8 <TMR1_IRQHandler>

10011dda <TMR2_IRQHandler>:
10011dda:	e7fe      	b.n	10011dda <TMR2_IRQHandler>

10011ddc <TMR3_IRQHandler>:
10011ddc:	e7fe      	b.n	10011ddc <TMR3_IRQHandler>

10011dde <TMR4_IRQHandler>:
10011dde:	e7fe      	b.n	10011dde <TMR4_IRQHandler>

10011de0 <TMR5_IRQHandler>:
10011de0:	e7fe      	b.n	10011de0 <TMR5_IRQHandler>

10011de2 <RSV11_IRQHandler>:
10011de2:	e7fe      	b.n	10011de2 <RSV11_IRQHandler>

10011de4 <RSV12_IRQHandler>:
10011de4:	e7fe      	b.n	10011de4 <RSV12_IRQHandler>

10011de6 <I2C0_IRQHandler>:
10011de6:	e7fe      	b.n	10011de6 <I2C0_IRQHandler>

10011de8 <UART0_IRQHandler>:
10011de8:	e7fe      	b.n	10011de8 <UART0_IRQHandler>

10011dea <UART1_IRQHandler>:
10011dea:	e7fe      	b.n	10011dea <UART1_IRQHandler>

10011dec <SPI1_IRQHandler>:
10011dec:	e7fe      	b.n	10011dec <SPI1_IRQHandler>

10011dee <RSV17_IRQHandler>:
10011dee:	e7fe      	b.n	10011dee <RSV17_IRQHandler>

10011df0 <RSV18_IRQHandler>:
10011df0:	e7fe      	b.n	10011df0 <RSV18_IRQHandler>

10011df2 <RSV19_IRQHandler>:
10011df2:	e7fe      	b.n	10011df2 <RSV19_IRQHandler>

10011df4 <ADC_IRQHandler>:
10011df4:	e7fe      	b.n	10011df4 <ADC_IRQHandler>

10011df6 <RSV21_IRQHandler>:
10011df6:	e7fe      	b.n	10011df6 <RSV21_IRQHandler>

10011df8 <RSV22_IRQHandler>:
10011df8:	e7fe      	b.n	10011df8 <RSV22_IRQHandler>

10011dfa <FLC0_IRQHandler>:
10011dfa:	e7fe      	b.n	10011dfa <FLC0_IRQHandler>
10011dfc:	e7fe      	b.n	10011dfc <FLC0_IRQHandler+0x2>
10011dfe:	e7fe      	b.n	10011dfe <FLC0_IRQHandler+0x4>

10011e00 <GPIO2_IRQHandler>:
10011e00:	e7fe      	b.n	10011e00 <GPIO2_IRQHandler>

10011e02 <RSV27_IRQHandler>:
10011e02:	e7fe      	b.n	10011e02 <RSV27_IRQHandler>

10011e04 <DMA0_IRQHandler>:
10011e04:	e7fe      	b.n	10011e04 <DMA0_IRQHandler>

10011e06 <DMA1_IRQHandler>:
10011e06:	e7fe      	b.n	10011e06 <DMA1_IRQHandler>

10011e08 <DMA2_IRQHandler>:
10011e08:	e7fe      	b.n	10011e08 <DMA2_IRQHandler>

10011e0a <DMA3_IRQHandler>:
10011e0a:	e7fe      	b.n	10011e0a <DMA3_IRQHandler>

10011e0c <RSV32_IRQHandler>:
10011e0c:	e7fe      	b.n	10011e0c <RSV32_IRQHandler>

10011e0e <RSV33_IRQHandler>:
10011e0e:	e7fe      	b.n	10011e0e <RSV33_IRQHandler>

10011e10 <UART2_IRQHandler>:
10011e10:	e7fe      	b.n	10011e10 <UART2_IRQHandler>

10011e12 <RSV35_IRQHandler>:
10011e12:	e7fe      	b.n	10011e12 <RSV35_IRQHandler>

10011e14 <I2C1_IRQHandler>:
10011e14:	e7fe      	b.n	10011e14 <I2C1_IRQHandler>

10011e16 <RSV37_IRQHandler>:
10011e16:	e7fe      	b.n	10011e16 <RSV37_IRQHandler>

10011e18 <RSV38_IRQHandler>:
10011e18:	e7fe      	b.n	10011e18 <RSV38_IRQHandler>

10011e1a <RSV39_IRQHandler>:
10011e1a:	e7fe      	b.n	10011e1a <RSV39_IRQHandler>

10011e1c <RSV40_IRQHandler>:
10011e1c:	e7fe      	b.n	10011e1c <RSV40_IRQHandler>

10011e1e <RSV41_IRQHandler>:
10011e1e:	e7fe      	b.n	10011e1e <RSV41_IRQHandler>

10011e20 <RSV42_IRQHandler>:
10011e20:	e7fe      	b.n	10011e20 <RSV42_IRQHandler>

10011e22 <RSV43_IRQHandler>:
10011e22:	e7fe      	b.n	10011e22 <RSV43_IRQHandler>

10011e24 <RSV44_IRQHandler>:
10011e24:	e7fe      	b.n	10011e24 <RSV44_IRQHandler>

10011e26 <RSV45_IRQHandler>:
10011e26:	e7fe      	b.n	10011e26 <RSV45_IRQHandler>

10011e28 <RSV46_IRQHandler>:
10011e28:	e7fe      	b.n	10011e28 <RSV46_IRQHandler>

10011e2a <RSV47_IRQHandler>:
10011e2a:	e7fe      	b.n	10011e2a <RSV47_IRQHandler>

10011e2c <RSV48_IRQHandler>:
10011e2c:	e7fe      	b.n	10011e2c <RSV48_IRQHandler>

10011e2e <RSV49_IRQHandler>:
10011e2e:	e7fe      	b.n	10011e2e <RSV49_IRQHandler>

10011e30 <RSV50_IRQHandler>:
10011e30:	e7fe      	b.n	10011e30 <RSV50_IRQHandler>

10011e32 <RSV51_IRQHandler>:
10011e32:	e7fe      	b.n	10011e32 <RSV51_IRQHandler>

10011e34 <RSV52_IRQHandler>:
10011e34:	e7fe      	b.n	10011e34 <RSV52_IRQHandler>

10011e36 <WUT_IRQHandler>:
10011e36:	e7fe      	b.n	10011e36 <WUT_IRQHandler>

10011e38 <GPIOWAKE_IRQHandler>:
10011e38:	e7fe      	b.n	10011e38 <GPIOWAKE_IRQHandler>

10011e3a <RSV55_IRQHandler>:
10011e3a:	e7fe      	b.n	10011e3a <RSV55_IRQHandler>

10011e3c <SPI0_IRQHandler>:
10011e3c:	e7fe      	b.n	10011e3c <SPI0_IRQHandler>

10011e3e <WDT1_IRQHandler>:
10011e3e:	e7fe      	b.n	10011e3e <WDT1_IRQHandler>

10011e40 <RSV58_IRQHandler>:
10011e40:	e7fe      	b.n	10011e40 <RSV58_IRQHandler>

10011e42 <PT_IRQHandler>:
10011e42:	e7fe      	b.n	10011e42 <PT_IRQHandler>

10011e44 <RSV60_IRQHandler>:
10011e44:	e7fe      	b.n	10011e44 <RSV60_IRQHandler>

10011e46 <RSV61_IRQHandler>:
10011e46:	e7fe      	b.n	10011e46 <RSV61_IRQHandler>

10011e48 <I2C2_IRQHandler>:
10011e48:	e7fe      	b.n	10011e48 <I2C2_IRQHandler>

10011e4a <RISCV_IRQHandler>:
10011e4a:	e7fe      	b.n	10011e4a <RISCV_IRQHandler>

10011e4c <RSV64_IRQHandler>:
10011e4c:	e7fe      	b.n	10011e4c <RSV64_IRQHandler>

10011e4e <RSV65_IRQHandler>:
10011e4e:	e7fe      	b.n	10011e4e <RSV65_IRQHandler>

10011e50 <RSV66_IRQHandler>:
10011e50:	e7fe      	b.n	10011e50 <RSV66_IRQHandler>

10011e52 <OWM_IRQHandler>:
10011e52:	e7fe      	b.n	10011e52 <OWM_IRQHandler>

10011e54 <RSV68_IRQHandler>:
10011e54:	e7fe      	b.n	10011e54 <RSV68_IRQHandler>

10011e56 <RSV69_IRQHandler>:
10011e56:	e7fe      	b.n	10011e56 <RSV69_IRQHandler>

10011e58 <RSV70_IRQHandler>:
10011e58:	e7fe      	b.n	10011e58 <RSV70_IRQHandler>

10011e5a <RSV71_IRQHandler>:
10011e5a:	e7fe      	b.n	10011e5a <RSV71_IRQHandler>

10011e5c <RSV72_IRQHandler>:
10011e5c:	e7fe      	b.n	10011e5c <RSV72_IRQHandler>

10011e5e <RSV73_IRQHandler>:
10011e5e:	e7fe      	b.n	10011e5e <RSV73_IRQHandler>

10011e60 <RSV74_IRQHandler>:
10011e60:	e7fe      	b.n	10011e60 <RSV74_IRQHandler>

10011e62 <RSV75_IRQHandler>:
10011e62:	e7fe      	b.n	10011e62 <RSV75_IRQHandler>

10011e64 <RSV76_IRQHandler>:
10011e64:	e7fe      	b.n	10011e64 <RSV76_IRQHandler>

10011e66 <RSV77_IRQHandler>:
10011e66:	e7fe      	b.n	10011e66 <RSV77_IRQHandler>

10011e68 <RSV78_IRQHandler>:
10011e68:	e7fe      	b.n	10011e68 <RSV78_IRQHandler>

10011e6a <RSV79_IRQHandler>:
10011e6a:	e7fe      	b.n	10011e6a <RSV79_IRQHandler>

10011e6c <RSV80_IRQHandler>:
10011e6c:	e7fe      	b.n	10011e6c <RSV80_IRQHandler>

10011e6e <RSV81_IRQHandler>:
10011e6e:	e7fe      	b.n	10011e6e <RSV81_IRQHandler>

10011e70 <ECC_IRQHandler>:
10011e70:	e7fe      	b.n	10011e70 <ECC_IRQHandler>

10011e72 <DVS_IRQHandler>:
10011e72:	e7fe      	b.n	10011e72 <DVS_IRQHandler>

10011e74 <SIMO_IRQHandler>:
10011e74:	e7fe      	b.n	10011e74 <SIMO_IRQHandler>

10011e76 <RSV85_IRQHandler>:
10011e76:	e7fe      	b.n	10011e76 <RSV85_IRQHandler>

10011e78 <RSV86_IRQHandler>:
10011e78:	e7fe      	b.n	10011e78 <RSV86_IRQHandler>

10011e7a <RSV87_IRQHandler>:
10011e7a:	e7fe      	b.n	10011e7a <RSV87_IRQHandler>

10011e7c <UART3_IRQHandler>:
10011e7c:	e7fe      	b.n	10011e7c <UART3_IRQHandler>

10011e7e <RSV89_IRQHandler>:
10011e7e:	e7fe      	b.n	10011e7e <RSV89_IRQHandler>

10011e80 <RSV90_IRQHandler>:
10011e80:	e7fe      	b.n	10011e80 <RSV90_IRQHandler>

10011e82 <PCIF_IRQHandler>:
10011e82:	e7fe      	b.n	10011e82 <PCIF_IRQHandler>

10011e84 <RSV92_IRQHandler>:
10011e84:	e7fe      	b.n	10011e84 <RSV92_IRQHandler>

10011e86 <RSV93_IRQHandler>:
10011e86:	e7fe      	b.n	10011e86 <RSV93_IRQHandler>

10011e88 <RSV94_IRQHandler>:
10011e88:	e7fe      	b.n	10011e88 <RSV94_IRQHandler>

10011e8a <RSV95_IRQHandler>:
10011e8a:	e7fe      	b.n	10011e8a <RSV95_IRQHandler>

10011e8c <RSV96_IRQHandler>:
10011e8c:	e7fe      	b.n	10011e8c <RSV96_IRQHandler>

10011e8e <AES_IRQHandler>:
10011e8e:	e7fe      	b.n	10011e8e <AES_IRQHandler>

10011e90 <RSV98_IRQHandler>:
10011e90:	e7fe      	b.n	10011e90 <RSV98_IRQHandler>

10011e92 <I2S_IRQHandler>:
10011e92:	e7fe      	b.n	10011e92 <I2S_IRQHandler>

10011e94 <CNN_FIFO_IRQHandler>:
10011e94:	e7fe      	b.n	10011e94 <CNN_FIFO_IRQHandler>

10011e96 <CNN_IRQHandler>:
10011e96:	e7fe      	b.n	10011e96 <CNN_IRQHandler>

10011e98 <RSV102_IRQHandler>:
10011e98:	e7fe      	b.n	10011e98 <RSV102_IRQHandler>

10011e9a <LPCMP_IRQHandler>:
10011e9a:	e7fe      	b.n	10011e9a <LPCMP_IRQHandler>
10011e9c:	20020000 	.word	0x20020000
10011ea0:	10011f69 	.word	0x10011f69
10011ea4:	1002ac78 	.word	0x1002ac78
10011ea8:	20000000 	.word	0x20000000
10011eac:	20000bcc 	.word	0x20000bcc
10011eb0:	20000c00 	.word	0x20000c00
10011eb4:	20001768 	.word	0x20001768
10011eb8:	10011f6d 	.word	0x10011f6d
10011ebc:	100184a1 	.word	0x100184a1
10011ec0:	1000eb9d 	.word	0x1000eb9d

10011ec4 <_sbrk>:
extern unsigned int __HeapLimit;
caddr_t _sbrk(int incr)
{
    char *prev_heap_end;

    if (heap_end == 0) {
10011ec4:	4a0b      	ldr	r2, [pc, #44]	@ (10011ef4 <_sbrk+0x30>)
{
10011ec6:	b508      	push	{r3, lr}
10011ec8:	4603      	mov	r3, r0
    if (heap_end == 0) {
10011eca:	6810      	ldr	r0, [r2, #0]
10011ecc:	b128      	cbz	r0, 10011eda <_sbrk+0x16>
        heap_end = (caddr_t)&__HeapBase;
    }
    prev_heap_end = heap_end;

    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011ece:	490a      	ldr	r1, [pc, #40]	@ (10011ef8 <_sbrk+0x34>)
10011ed0:	4403      	add	r3, r0
10011ed2:	428b      	cmp	r3, r1
10011ed4:	d807      	bhi.n	10011ee6 <_sbrk+0x22>
        errno = ENOMEM;
        return (caddr_t)-1;
    }

    heap_end += incr;
10011ed6:	6013      	str	r3, [r2, #0]

    return (caddr_t)prev_heap_end;
}
10011ed8:	bd08      	pop	{r3, pc}
        heap_end = (caddr_t)&__HeapBase;
10011eda:	4808      	ldr	r0, [pc, #32]	@ (10011efc <_sbrk+0x38>)
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011edc:	4906      	ldr	r1, [pc, #24]	@ (10011ef8 <_sbrk+0x34>)
        heap_end = (caddr_t)&__HeapBase;
10011ede:	6010      	str	r0, [r2, #0]
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011ee0:	4403      	add	r3, r0
10011ee2:	428b      	cmp	r3, r1
10011ee4:	d9f7      	bls.n	10011ed6 <_sbrk+0x12>
        errno = ENOMEM;
10011ee6:	f006 f953 	bl	10018190 <__errno>
10011eea:	230c      	movs	r3, #12
10011eec:	6003      	str	r3, [r0, #0]
        return (caddr_t)-1;
10011eee:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011ef2:	bd08      	pop	{r3, pc}
10011ef4:	20000ca8 	.word	0x20000ca8
10011ef8:	2001f000 	.word	0x2001f000
10011efc:	20001770 	.word	0x20001770

10011f00 <SystemCoreClockUpdate>:
__weak void SystemCoreClockUpdate(void)
{
    uint32_t base_freq, div, clk_src;

    // Get the clock source and frequency
    clk_src = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL);
10011f00:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
10011f04:	689a      	ldr	r2, [r3, #8]
10011f06:	f402 6260 	and.w	r2, r2, #3584	@ 0xe00
    switch (clk_src) {
10011f0a:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
10011f0e:	d020      	beq.n	10011f52 <SystemCoreClockUpdate+0x52>
10011f10:	d911      	bls.n	10011f36 <SystemCoreClockUpdate+0x36>
10011f12:	f5b2 6f40 	cmp.w	r2, #3072	@ 0xc00
10011f16:	d017      	beq.n	10011f48 <SystemCoreClockUpdate+0x48>
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_INRO:
        base_freq = INRO_FREQ;
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_IPO:
        base_freq = IPO_FREQ;
10011f18:	4b0f      	ldr	r3, [pc, #60]	@ (10011f58 <SystemCoreClockUpdate+0x58>)
10011f1a:	4910      	ldr	r1, [pc, #64]	@ (10011f5c <SystemCoreClockUpdate+0x5c>)
10011f1c:	f5b2 6f60 	cmp.w	r2, #3584	@ 0xe00
10011f20:	bf18      	it	ne
10011f22:	460b      	movne	r3, r1
        // This code should never execute, however, initialize to safe value.
        base_freq = HIRC_FREQ;
        break;
    }

    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
10011f24:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000

    SystemCoreClock = base_freq >> div;
10011f28:	490d      	ldr	r1, [pc, #52]	@ (10011f60 <SystemCoreClockUpdate+0x60>)
    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
10011f2a:	6892      	ldr	r2, [r2, #8]
10011f2c:	f3c2 1282 	ubfx	r2, r2, #6, #3
    SystemCoreClock = base_freq >> div;
10011f30:	40d3      	lsrs	r3, r2
10011f32:	600b      	str	r3, [r1, #0]
}
10011f34:	4770      	bx	lr
    switch (clk_src) {
10011f36:	b152      	cbz	r2, 10011f4e <SystemCoreClockUpdate+0x4e>
        base_freq = IPO_FREQ;
10011f38:	4908      	ldr	r1, [pc, #32]	@ (10011f5c <SystemCoreClockUpdate+0x5c>)
10011f3a:	f247 5330 	movw	r3, #30000	@ 0x7530
10011f3e:	f5b2 6fc0 	cmp.w	r2, #1536	@ 0x600
10011f42:	bf18      	it	ne
10011f44:	460b      	movne	r3, r1
10011f46:	e7ed      	b.n	10011f24 <SystemCoreClockUpdate+0x24>
        base_freq = ERTCO_FREQ;
10011f48:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
10011f4c:	e7ea      	b.n	10011f24 <SystemCoreClockUpdate+0x24>
        base_freq = ISO_FREQ;
10011f4e:	4b05      	ldr	r3, [pc, #20]	@ (10011f64 <SystemCoreClockUpdate+0x64>)
10011f50:	e7e8      	b.n	10011f24 <SystemCoreClockUpdate+0x24>
        base_freq = IBRO_FREQ;
10011f52:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
10011f56:	e7e5      	b.n	10011f24 <SystemCoreClockUpdate+0x24>
10011f58:	047868c0 	.word	0x047868c0
10011f5c:	05f5e100 	.word	0x05f5e100
10011f60:	20001768 	.word	0x20001768
10011f64:	03938700 	.word	0x03938700

10011f68 <PreInit>:
 */
__weak int PreInit(void)
{
    /* Do nothing */
    return 0;
}
10011f68:	2000      	movs	r0, #0
10011f6a:	4770      	bx	lr

10011f6c <SystemInit>:
 * You may over-ride this function in your program by defining a custom 
 *  SystemInit(), but care should be taken to reproduce the initialization
 *  steps or a non-functional system may result.
 */
__weak void SystemInit(void)
{
10011f6c:	b510      	push	{r4, lr}
    /* Configure the interrupt controller to use the application vector table in */
    /* the application space */
#if defined(__CC_ARM) || defined(__GNUC__)
    /* IAR sets the VTOR pointer incorrectly and causes stack corruption */
    SCB->VTOR = (uint32_t)__isr_vector;
10011f6e:	4c0a      	ldr	r4, [pc, #40]	@ (10011f98 <SystemInit+0x2c>)
10011f70:	4b0a      	ldr	r3, [pc, #40]	@ (10011f9c <SystemInit+0x30>)
10011f72:	60a3      	str	r3, [r4, #8]
#endif /* __CC_ARM || __GNUC__ */

    /* Enable instruction cache */
    MXC_ICC_Enable(MXC_ICC0);
10011f74:	480a      	ldr	r0, [pc, #40]	@ (10011fa0 <SystemInit+0x34>)
10011f76:	f001 faed 	bl	10013554 <MXC_ICC_Enable>

    /* Enable FPU on Cortex-M4, which occupies coprocessor slots 10 & 11 */
    /* Grant full access, per "Table B3-24 CPACR bit assignments". */
    /* DDI0403D "ARMv7-M Architecture Reference Manual" */
    SCB->CPACR |= SCB_CPACR_CP10_Msk | SCB_CPACR_CP11_Msk;
10011f7a:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
10011f7e:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
10011f82:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
10011f86:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
10011f8a:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();

    SystemCoreClockUpdate();
10011f8e:	f7ff ffb7 	bl	10011f00 <SystemCoreClockUpdate>

    Board_Init();
10011f92:	f7ff fdd7 	bl	10011b44 <Board_Init>
}
10011f96:	bd10      	pop	{r4, pc}
10011f98:	e000ed00 	.word	0xe000ed00
10011f9c:	1000e000 	.word	0x1000e000
10011fa0:	4002a000 	.word	0x4002a000

10011fa4 <MXC_DelayInit>:
    }
}

/* ************************************************************************** */
static void MXC_DelayInit(uint32_t us)
{
10011fa4:	b538      	push	{r3, r4, r5, lr}
    uint32_t starttick, reload, ticks, lastticks;

    // Record the current tick value and clear the overflow flag
    starttick = SysTick->VAL;
10011fa6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000

    // Save the state of control register (and clear the overflow flag)
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
10011faa:	4918      	ldr	r1, [pc, #96]	@ (1001200c <MXC_DelayInit+0x68>)
    starttick = SysTick->VAL;
10011fac:	699c      	ldr	r4, [r3, #24]
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
10011fae:	691a      	ldr	r2, [r3, #16]
10011fb0:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
10011fb4:	600a      	str	r2, [r1, #0]

    // If the SysTick is not running, configure and start it
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk)) {
10011fb6:	691a      	ldr	r2, [r3, #16]
10011fb8:	07d2      	lsls	r2, r2, #31
10011fba:	d41f      	bmi.n	10011ffc <MXC_DelayInit+0x58>
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
10011fbc:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
10011fc0:	2205      	movs	r2, #5
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
10011fc2:	615c      	str	r4, [r3, #20]
        starttick = SysTick_VAL_CURRENT_Msk;
        reload = SysTick_LOAD_RELOAD_Msk + 1;
10011fc4:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
10011fc8:	619c      	str	r4, [r3, #24]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
10011fca:	611a      	str	r2, [r3, #16]
    } else {
        reload = SysTick->LOAD + 1; // get the current reload value
    }

    // Calculate the total number of ticks to delay
    ticks = (uint32_t)(((uint64_t)us * (uint64_t)SystemCoreClock) / 1000000);
10011fcc:	4b10      	ldr	r3, [pc, #64]	@ (10012010 <MXC_DelayInit+0x6c>)
10011fce:	4a11      	ldr	r2, [pc, #68]	@ (10012014 <MXC_DelayInit+0x70>)
10011fd0:	6819      	ldr	r1, [r3, #0]
10011fd2:	2300      	movs	r3, #0
10011fd4:	fba0 0101 	umull	r0, r1, r0, r1
10011fd8:	f00e ffa2 	bl	10020f20 <__aeabi_uldivmod>

    // How many overflows of the SysTick will occur
    overflows = ticks / reload;
10011fdc:	4b0e      	ldr	r3, [pc, #56]	@ (10012018 <MXC_DelayInit+0x74>)
10011fde:	fbb0 f2f5 	udiv	r2, r0, r5

    // How many remaining ticks after the last overflow
    lastticks = ticks % reload;
10011fe2:	fb05 0012 	mls	r0, r5, r2, r0

    // Check if there will be another overflow due to the current value of the SysTick
    if (lastticks >= starttick) {
10011fe6:	4284      	cmp	r4, r0
    overflows = ticks / reload;
10011fe8:	601a      	str	r2, [r3, #0]
    if (lastticks >= starttick) {
10011fea:	d80a      	bhi.n	10012002 <MXC_DelayInit+0x5e>
        overflows++;
10011fec:	681a      	ldr	r2, [r3, #0]
10011fee:	3201      	adds	r2, #1
10011ff0:	601a      	str	r2, [r3, #0]
        endtick = reload - (lastticks - starttick);
10011ff2:	4425      	add	r5, r4
10011ff4:	4b09      	ldr	r3, [pc, #36]	@ (1001201c <MXC_DelayInit+0x78>)
10011ff6:	1a28      	subs	r0, r5, r0
10011ff8:	6018      	str	r0, [r3, #0]
    } else {
        endtick = starttick - lastticks;
    }
}
10011ffa:	bd38      	pop	{r3, r4, r5, pc}
        reload = SysTick->LOAD + 1; // get the current reload value
10011ffc:	695d      	ldr	r5, [r3, #20]
10011ffe:	3501      	adds	r5, #1
10012000:	e7e4      	b.n	10011fcc <MXC_DelayInit+0x28>
        endtick = starttick - lastticks;
10012002:	4b06      	ldr	r3, [pc, #24]	@ (1001201c <MXC_DelayInit+0x78>)
10012004:	1a20      	subs	r0, r4, r0
10012006:	6018      	str	r0, [r3, #0]
}
10012008:	bd38      	pop	{r3, r4, r5, pc}
1001200a:	bf00      	nop
1001200c:	20000cb0 	.word	0x20000cb0
10012010:	20001768 	.word	0x20001768
10012014:	000f4240 	.word	0x000f4240
10012018:	20000004 	.word	0x20000004
1001201c:	20000cb4 	.word	0x20000cb4

10012020 <MXC_DelayAsync>:

/* ************************************************************************** */
int MXC_DelayAsync(uint32_t us, mxc_delay_complete_t callback)
{
10012020:	b510      	push	{r4, lr}
    cbFunc = callback;

    // Check if timeout currently ongoing
    if (overflows > 0) {
10012022:	4c0c      	ldr	r4, [pc, #48]	@ (10012054 <MXC_DelayAsync+0x34>)
    cbFunc = callback;
10012024:	4b0c      	ldr	r3, [pc, #48]	@ (10012058 <MXC_DelayAsync+0x38>)
    if (overflows > 0) {
10012026:	6822      	ldr	r2, [r4, #0]
    cbFunc = callback;
10012028:	6019      	str	r1, [r3, #0]
    if (overflows > 0) {
1001202a:	2a00      	cmp	r2, #0
1001202c:	dc0e      	bgt.n	1001204c <MXC_DelayAsync+0x2c>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1001202e:	b908      	cbnz	r0, 10012034 <MXC_DelayAsync+0x14>
        return E_NO_ERROR;
10012030:	2000      	movs	r0, #0
    if (overflows > 0) {
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
    }

    return E_NO_ERROR;
}
10012032:	bd10      	pop	{r4, pc}
    MXC_DelayInit(us);
10012034:	f7ff ffb6 	bl	10011fa4 <MXC_DelayInit>
    if (overflows > 0) {
10012038:	6823      	ldr	r3, [r4, #0]
1001203a:	2b00      	cmp	r3, #0
1001203c:	ddf8      	ble.n	10012030 <MXC_DelayAsync+0x10>
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
1001203e:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
10012042:	6913      	ldr	r3, [r2, #16]
10012044:	f043 0302 	orr.w	r3, r3, #2
10012048:	6113      	str	r3, [r2, #16]
1001204a:	e7f1      	b.n	10012030 <MXC_DelayAsync+0x10>
        return E_BUSY;
1001204c:	f06f 0005 	mvn.w	r0, #5
}
10012050:	bd10      	pop	{r4, pc}
10012052:	bf00      	nop
10012054:	20000004 	.word	0x20000004
10012058:	20000cac 	.word	0x20000cac

1001205c <MXC_DelayCheck>:

/* ************************************************************************** */
int MXC_DelayCheck(void)
{
1001205c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Check if timeout currently ongoing
    if (overflows < 0) {
1001205e:	4c17      	ldr	r4, [pc, #92]	@ (100120bc <MXC_DelayCheck+0x60>)
10012060:	6823      	ldr	r3, [r4, #0]
10012062:	2b00      	cmp	r3, #0
10012064:	db1e      	blt.n	100120a4 <MXC_DelayCheck+0x48>

        return E_NO_ERROR;
    }

    // Check the global values
    if ((overflows == 0) && (SysTick->VAL <= endtick)) {
10012066:	6826      	ldr	r6, [r4, #0]
10012068:	bb2e      	cbnz	r6, 100120b6 <MXC_DelayCheck+0x5a>
1001206a:	4b15      	ldr	r3, [pc, #84]	@ (100120c0 <MXC_DelayCheck+0x64>)
1001206c:	f04f 25e0 	mov.w	r5, #3758153728	@ 0xe000e000
10012070:	681b      	ldr	r3, [r3, #0]
10012072:	69aa      	ldr	r2, [r5, #24]
10012074:	429a      	cmp	r2, r3
10012076:	d81e      	bhi.n	100120b6 <MXC_DelayCheck+0x5a>
}

/* ************************************************************************** */
void MXC_DelayAbort(void)
{
    if (cbFunc != NULL) {
10012078:	4f12      	ldr	r7, [pc, #72]	@ (100120c4 <MXC_DelayCheck+0x68>)
1001207a:	683b      	ldr	r3, [r7, #0]
1001207c:	b15b      	cbz	r3, 10012096 <MXC_DelayCheck+0x3a>
        cbFunc(E_ABORT);
1001207e:	f06f 000f 	mvn.w	r0, #15
10012082:	4798      	blx	r3
        cbFunc = NULL;
    }

    SysTick->CTRL = ctrl_save;
10012084:	4b10      	ldr	r3, [pc, #64]	@ (100120c8 <MXC_DelayCheck+0x6c>)
        cbFunc = NULL;
10012086:	603e      	str	r6, [r7, #0]
    SysTick->CTRL = ctrl_save;
10012088:	681a      	ldr	r2, [r3, #0]
1001208a:	612a      	str	r2, [r5, #16]
    overflows = -1;
1001208c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10012090:	6023      	str	r3, [r4, #0]
        return E_NO_ERROR;
10012092:	2000      	movs	r0, #0
}
10012094:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SysTick->CTRL = ctrl_save;
10012096:	4a0c      	ldr	r2, [pc, #48]	@ (100120c8 <MXC_DelayCheck+0x6c>)
    overflows = -1;
10012098:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
1001209c:	6812      	ldr	r2, [r2, #0]
1001209e:	612a      	str	r2, [r5, #16]
    overflows = -1;
100120a0:	6023      	str	r3, [r4, #0]
        if (cbFunc != NULL) {
100120a2:	e7f6      	b.n	10012092 <MXC_DelayCheck+0x36>
        if (cbFunc != NULL) {
100120a4:	4c07      	ldr	r4, [pc, #28]	@ (100120c4 <MXC_DelayCheck+0x68>)
100120a6:	6823      	ldr	r3, [r4, #0]
100120a8:	2b00      	cmp	r3, #0
100120aa:	d0f2      	beq.n	10012092 <MXC_DelayCheck+0x36>
            cbFunc(E_NO_ERROR);
100120ac:	2000      	movs	r0, #0
100120ae:	4798      	blx	r3
            cbFunc = NULL;
100120b0:	2300      	movs	r3, #0
100120b2:	6023      	str	r3, [r4, #0]
100120b4:	e7ed      	b.n	10012092 <MXC_DelayCheck+0x36>
    return E_BUSY;
100120b6:	f06f 0005 	mvn.w	r0, #5
}
100120ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100120bc:	20000004 	.word	0x20000004
100120c0:	20000cb4 	.word	0x20000cb4
100120c4:	20000cac 	.word	0x20000cac
100120c8:	20000cb0 	.word	0x20000cb0

100120cc <MXC_DelayAbort>:
{
100120cc:	b510      	push	{r4, lr}
    if (cbFunc != NULL) {
100120ce:	4c09      	ldr	r4, [pc, #36]	@ (100120f4 <MXC_DelayAbort+0x28>)
100120d0:	6823      	ldr	r3, [r4, #0]
100120d2:	b123      	cbz	r3, 100120de <MXC_DelayAbort+0x12>
        cbFunc(E_ABORT);
100120d4:	f06f 000f 	mvn.w	r0, #15
100120d8:	4798      	blx	r3
        cbFunc = NULL;
100120da:	2300      	movs	r3, #0
100120dc:	6023      	str	r3, [r4, #0]
    SysTick->CTRL = ctrl_save;
100120de:	4a06      	ldr	r2, [pc, #24]	@ (100120f8 <MXC_DelayAbort+0x2c>)
    overflows = -1;
100120e0:	4b06      	ldr	r3, [pc, #24]	@ (100120fc <MXC_DelayAbort+0x30>)
    SysTick->CTRL = ctrl_save;
100120e2:	6810      	ldr	r0, [r2, #0]
100120e4:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
    overflows = -1;
100120e8:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
100120ec:	6108      	str	r0, [r1, #16]
    overflows = -1;
100120ee:	601a      	str	r2, [r3, #0]
}
100120f0:	bd10      	pop	{r4, pc}
100120f2:	bf00      	nop
100120f4:	20000cac 	.word	0x20000cac
100120f8:	20000cb0 	.word	0x20000cb0
100120fc:	20000004 	.word	0x20000004

10012100 <MXC_Delay>:

/* ************************************************************************** */
int MXC_Delay(uint32_t us)
{
10012100:	b538      	push	{r3, r4, r5, lr}
    // Check if timeout currently ongoing
    if (overflows > 0) {
10012102:	4c18      	ldr	r4, [pc, #96]	@ (10012164 <MXC_Delay+0x64>)
10012104:	6822      	ldr	r2, [r4, #0]
10012106:	2a00      	cmp	r2, #0
10012108:	dc29      	bgt.n	1001215e <MXC_Delay+0x5e>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1001210a:	b908      	cbnz	r0, 10012110 <MXC_Delay+0x10>
        return E_NO_ERROR;
1001210c:	2000      	movs	r0, #0
    // Wait for the counter value
    while (SysTick->VAL > endtick) {}

    MXC_DelayAbort();
    return E_NO_ERROR;
}
1001210e:	bd38      	pop	{r3, r4, r5, pc}
    MXC_DelayInit(us);
10012110:	f7ff ff48 	bl	10011fa4 <MXC_DelayInit>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
10012114:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    while (overflows > 0) {
10012118:	e002      	b.n	10012120 <MXC_Delay+0x20>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1001211a:	6913      	ldr	r3, [r2, #16]
1001211c:	03db      	lsls	r3, r3, #15
1001211e:	d41a      	bmi.n	10012156 <MXC_Delay+0x56>
    while (overflows > 0) {
10012120:	6823      	ldr	r3, [r4, #0]
10012122:	2b00      	cmp	r3, #0
10012124:	dcf9      	bgt.n	1001211a <MXC_Delay+0x1a>
    while (SysTick->VAL > endtick) {}
10012126:	4b10      	ldr	r3, [pc, #64]	@ (10012168 <MXC_Delay+0x68>)
10012128:	681a      	ldr	r2, [r3, #0]
1001212a:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
1001212e:	698b      	ldr	r3, [r1, #24]
10012130:	4293      	cmp	r3, r2
10012132:	d8fc      	bhi.n	1001212e <MXC_Delay+0x2e>
    if (cbFunc != NULL) {
10012134:	4d0d      	ldr	r5, [pc, #52]	@ (1001216c <MXC_Delay+0x6c>)
10012136:	682b      	ldr	r3, [r5, #0]
10012138:	b123      	cbz	r3, 10012144 <MXC_Delay+0x44>
        cbFunc(E_ABORT);
1001213a:	f06f 000f 	mvn.w	r0, #15
1001213e:	4798      	blx	r3
        cbFunc = NULL;
10012140:	2300      	movs	r3, #0
10012142:	602b      	str	r3, [r5, #0]
    SysTick->CTRL = ctrl_save;
10012144:	4b0a      	ldr	r3, [pc, #40]	@ (10012170 <MXC_Delay+0x70>)
10012146:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1001214a:	6819      	ldr	r1, [r3, #0]
1001214c:	6111      	str	r1, [r2, #16]
    overflows = -1;
1001214e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10012152:	6023      	str	r3, [r4, #0]
}
10012154:	e7da      	b.n	1001210c <MXC_Delay+0xc>
            overflows--;
10012156:	6823      	ldr	r3, [r4, #0]
10012158:	3b01      	subs	r3, #1
1001215a:	6023      	str	r3, [r4, #0]
1001215c:	e7e0      	b.n	10012120 <MXC_Delay+0x20>
        return E_BUSY;
1001215e:	f06f 0005 	mvn.w	r0, #5
}
10012162:	bd38      	pop	{r3, r4, r5, pc}
10012164:	20000004 	.word	0x20000004
10012168:	20000cb4 	.word	0x20000cb4
1001216c:	20000cac 	.word	0x20000cac
10012170:	20000cb0 	.word	0x20000cb0

10012174 <MXC_NVIC_SetVector>:
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
    SCB->VTOR = (uint32_t)&ramVectorTable;
}

void MXC_NVIC_SetVector(IRQn_Type irqn, void (*irq_handler)(void))
{
10012174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int index = irqn + 16; /* offset for externals */

    /* If not copied, do copy */
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
10012176:	4e0f      	ldr	r6, [pc, #60]	@ (100121b4 <MXC_NVIC_SetVector+0x40>)
10012178:	4b0f      	ldr	r3, [pc, #60]	@ (100121b8 <MXC_NVIC_SetVector+0x44>)
1001217a:	68b2      	ldr	r2, [r6, #8]
1001217c:	429a      	cmp	r2, r3
{
1001217e:	4604      	mov	r4, r0
10012180:	460d      	mov	r5, r1
    int index = irqn + 16; /* offset for externals */
10012182:	f100 0710 	add.w	r7, r0, #16
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
10012186:	d007      	beq.n	10012198 <MXC_NVIC_SetVector+0x24>
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
10012188:	4618      	mov	r0, r3
1001218a:	490c      	ldr	r1, [pc, #48]	@ (100121bc <MXC_NVIC_SetVector+0x48>)
1001218c:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
10012190:	f006 fa06 	bl	100185a0 <memcpy>
10012194:	4603      	mov	r3, r0
    SCB->VTOR = (uint32_t)&ramVectorTable;
10012196:	60b0      	str	r0, [r6, #8]
  if ((int32_t)(IRQn) >= 0)
10012198:	2c00      	cmp	r4, #0
        NVIC_SetRAM();
    }

    ramVectorTable[index] = irq_handler;
1001219a:	f843 5027 	str.w	r5, [r3, r7, lsl #2]
1001219e:	db07      	blt.n	100121b0 <MXC_NVIC_SetVector+0x3c>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
100121a0:	4a07      	ldr	r2, [pc, #28]	@ (100121c0 <MXC_NVIC_SetVector+0x4c>)
100121a2:	0961      	lsrs	r1, r4, #5
100121a4:	2301      	movs	r3, #1
100121a6:	f004 041f 	and.w	r4, r4, #31
100121aa:	40a3      	lsls	r3, r4
100121ac:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
    NVIC_EnableIRQ(irqn);
}
100121b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100121b2:	bf00      	nop
100121b4:	e000ed00 	.word	0xe000ed00
100121b8:	20000e00 	.word	0x20000e00
100121bc:	1000e000 	.word	0x1000e000
100121c0:	e000e100 	.word	0xe000e100

100121c4 <MXC_SYS_ClockDisable>:

/* ************************************************************************** */
void MXC_SYS_ClockDisable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
100121c4:	283f      	cmp	r0, #63	@ 0x3f
100121c6:	d908      	bls.n	100121da <MXC_SYS_ClockDisable+0x16>
        clock -= 64;
        MXC_LPGCR->pclkdis |= (0x1 << clock);
100121c8:	4a0d      	ldr	r2, [pc, #52]	@ (10012200 <MXC_SYS_ClockDisable+0x3c>)
        clock -= 64;
100121ca:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis |= (0x1 << clock);
100121cc:	68d1      	ldr	r1, [r2, #12]
100121ce:	b2c0      	uxtb	r0, r0
100121d0:	2301      	movs	r3, #1
100121d2:	4083      	lsls	r3, r0
100121d4:	430b      	orrs	r3, r1
100121d6:	60d3      	str	r3, [r2, #12]
100121d8:	4770      	bx	lr
    } else if (clock > 31) {
100121da:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 |= (0x1 << clock);
100121dc:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    } else if (clock > 31) {
100121e0:	d907      	bls.n	100121f2 <MXC_SYS_ClockDisable+0x2e>
        clock -= 32;
100121e2:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 |= (0x1 << clock);
100121e4:	6c91      	ldr	r1, [r2, #72]	@ 0x48
100121e6:	b2c0      	uxtb	r0, r0
100121e8:	2301      	movs	r3, #1
100121ea:	4083      	lsls	r3, r0
100121ec:	430b      	orrs	r3, r1
100121ee:	6493      	str	r3, [r2, #72]	@ 0x48
100121f0:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 |= (0x1 << clock);
100121f2:	6a51      	ldr	r1, [r2, #36]	@ 0x24
100121f4:	2301      	movs	r3, #1
100121f6:	4083      	lsls	r3, r0
100121f8:	430b      	orrs	r3, r1
100121fa:	6253      	str	r3, [r2, #36]	@ 0x24
    }
}
100121fc:	4770      	bx	lr
100121fe:	bf00      	nop
10012200:	40080000 	.word	0x40080000

10012204 <MXC_SYS_ClockEnable>:

/* ************************************************************************** */
void MXC_SYS_ClockEnable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
10012204:	283f      	cmp	r0, #63	@ 0x3f
10012206:	d909      	bls.n	1001221c <MXC_SYS_ClockEnable+0x18>
        clock -= 64;
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
10012208:	490e      	ldr	r1, [pc, #56]	@ (10012244 <MXC_SYS_ClockEnable+0x40>)
        clock -= 64;
1001220a:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1001220c:	68cb      	ldr	r3, [r1, #12]
1001220e:	b2c0      	uxtb	r0, r0
10012210:	2201      	movs	r2, #1
10012212:	4082      	lsls	r2, r0
10012214:	ea23 0302 	bic.w	r3, r3, r2
10012218:	60cb      	str	r3, [r1, #12]
1001221a:	4770      	bx	lr
    } else if (clock > 31) {
1001221c:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1001221e:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
    } else if (clock > 31) {
10012222:	d908      	bls.n	10012236 <MXC_SYS_ClockEnable+0x32>
        clock -= 32;
10012224:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
10012226:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
10012228:	b2c0      	uxtb	r0, r0
1001222a:	2201      	movs	r2, #1
1001222c:	4082      	lsls	r2, r0
1001222e:	ea23 0302 	bic.w	r3, r3, r2
10012232:	648b      	str	r3, [r1, #72]	@ 0x48
10012234:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 &= ~(0x1 << clock);
10012236:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10012238:	2201      	movs	r2, #1
1001223a:	4082      	lsls	r2, r0
1001223c:	ea23 0302 	bic.w	r3, r3, r2
10012240:	624b      	str	r3, [r1, #36]	@ 0x24
    }
}
10012242:	4770      	bx	lr
10012244:	40080000 	.word	0x40080000

10012248 <MXC_SYS_ClockSourceEnable>:
    }
}

/******************************************************************************/
int MXC_SYS_ClockSourceEnable(mxc_sys_system_clock_t clock)
{
10012248:	b510      	push	{r4, lr}
    switch (clock) {
1001224a:	2807      	cmp	r0, #7
1001224c:	d80a      	bhi.n	10012264 <MXC_SYS_ClockSourceEnable+0x1c>
1001224e:	e8df f000 	tbb	[pc, r0]
10012252:	090c      	.short	0x090c
10012254:	47332309 	.word	0x47332309
10012258:	045b      	.short	0x045b

    default:
        return E_BAD_PARAM;
        break;
    }
}
1001225a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return MXC_GPIO_Config(&gpio_cfg_extclk);
1001225e:	4836      	ldr	r0, [pc, #216]	@ (10012338 <MXC_SYS_ClockSourceEnable+0xf0>)
10012260:	f000 b906 	b.w	10012470 <MXC_GPIO_Config>
    switch (clock) {
10012264:	f06f 0002 	mvn.w	r0, #2
}
10012268:	bd10      	pop	{r4, pc}
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1001226a:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    // We do not have access to a system tick in the RV core.
    while (!(MXC_GCR->clkctrl & ready)) {}
    return E_NO_ERROR;
#else
    // Start timeout, wait for ready
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001226e:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
10012270:	68a3      	ldr	r3, [r4, #8]
10012272:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
10012276:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10012278:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001227c:	f7ff fed0 	bl	10012020 <MXC_DelayAsync>
10012280:	e003      	b.n	1001228a <MXC_SYS_ClockSourceEnable+0x42>
    do {
        if (MXC_GCR->clkctrl & ready) {
            MXC_DelayAbort();
            return E_NO_ERROR;
        }
    } while (MXC_DelayCheck() == E_BUSY);
10012282:	f7ff feeb 	bl	1001205c <MXC_DelayCheck>
10012286:	3006      	adds	r0, #6
10012288:	d152      	bne.n	10012330 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001228a:	68a3      	ldr	r3, [r4, #8]
1001228c:	0159      	lsls	r1, r3, #5
1001228e:	d5f8      	bpl.n	10012282 <MXC_SYS_ClockSourceEnable+0x3a>
            MXC_DelayAbort();
10012290:	f7ff ff1c 	bl	100120cc <MXC_DelayAbort>
            return E_NO_ERROR;
10012294:	2000      	movs	r0, #0
}
10012296:	bd10      	pop	{r4, pc}
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10012298:	2100      	movs	r1, #0
1001229a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001229e:	f7ff febf 	bl	10012020 <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
100122a2:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
100122a6:	e003      	b.n	100122b0 <MXC_SYS_ClockSourceEnable+0x68>
    } while (MXC_DelayCheck() == E_BUSY);
100122a8:	f7ff fed8 	bl	1001205c <MXC_DelayCheck>
100122ac:	3006      	adds	r0, #6
100122ae:	d13f      	bne.n	10012330 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
100122b0:	68a3      	ldr	r3, [r4, #8]
100122b2:	009a      	lsls	r2, r3, #2
100122b4:	d4ec      	bmi.n	10012290 <MXC_SYS_ClockSourceEnable+0x48>
100122b6:	e7f7      	b.n	100122a8 <MXC_SYS_ClockSourceEnable+0x60>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
100122b8:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100122bc:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
100122be:	68a3      	ldr	r3, [r4, #8]
100122c0:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
100122c4:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100122c6:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
100122ca:	f7ff fea9 	bl	10012020 <MXC_DelayAsync>
100122ce:	e003      	b.n	100122d8 <MXC_SYS_ClockSourceEnable+0x90>
    } while (MXC_DelayCheck() == E_BUSY);
100122d0:	f7ff fec4 	bl	1001205c <MXC_DelayCheck>
100122d4:	3006      	adds	r0, #6
100122d6:	d12b      	bne.n	10012330 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
100122d8:	68a3      	ldr	r3, [r4, #8]
100122da:	011b      	lsls	r3, r3, #4
100122dc:	d5f8      	bpl.n	100122d0 <MXC_SYS_ClockSourceEnable+0x88>
100122de:	e7d7      	b.n	10012290 <MXC_SYS_ClockSourceEnable+0x48>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
100122e0:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100122e4:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
100122e6:	68a3      	ldr	r3, [r4, #8]
100122e8:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
100122ec:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100122ee:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
100122f2:	f7ff fe95 	bl	10012020 <MXC_DelayAsync>
100122f6:	e003      	b.n	10012300 <MXC_SYS_ClockSourceEnable+0xb8>
    } while (MXC_DelayCheck() == E_BUSY);
100122f8:	f7ff feb0 	bl	1001205c <MXC_DelayCheck>
100122fc:	3006      	adds	r0, #6
100122fe:	d117      	bne.n	10012330 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
10012300:	68a3      	ldr	r3, [r4, #8]
10012302:	00d8      	lsls	r0, r3, #3
10012304:	d4c4      	bmi.n	10012290 <MXC_SYS_ClockSourceEnable+0x48>
10012306:	e7f7      	b.n	100122f8 <MXC_SYS_ClockSourceEnable+0xb0>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
10012308:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001230c:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1001230e:	68a3      	ldr	r3, [r4, #8]
10012310:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
10012314:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10012316:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001231a:	f7ff fe81 	bl	10012020 <MXC_DelayAsync>
1001231e:	e003      	b.n	10012328 <MXC_SYS_ClockSourceEnable+0xe0>
    } while (MXC_DelayCheck() == E_BUSY);
10012320:	f7ff fe9c 	bl	1001205c <MXC_DelayCheck>
10012324:	3006      	adds	r0, #6
10012326:	d103      	bne.n	10012330 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
10012328:	68a3      	ldr	r3, [r4, #8]
1001232a:	019b      	lsls	r3, r3, #6
1001232c:	d4b0      	bmi.n	10012290 <MXC_SYS_ClockSourceEnable+0x48>
1001232e:	e7f7      	b.n	10012320 <MXC_SYS_ClockSourceEnable+0xd8>

    return E_TIME_OUT;
10012330:	f06f 0009 	mvn.w	r0, #9
}
10012334:	bd10      	pop	{r4, pc}
10012336:	bf00      	nop
10012338:	100239fc 	.word	0x100239fc

1001233c <MXC_SYS_Reset_Periph>:

/* ************************************************************************** */
void MXC_SYS_Reset_Periph(mxc_sys_reset_t reset)
{
    /* The mxc_sys_reset_t enum uses enum values that are the offset by 32 and 64 for the rst register. */
    if (reset > 63) {
1001233c:	283f      	cmp	r0, #63	@ 0x3f
1001233e:	d909      	bls.n	10012354 <MXC_SYS_Reset_Periph+0x18>
        reset -= 64;
10012340:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->rst = (0x1 << reset);
10012342:	490f      	ldr	r1, [pc, #60]	@ (10012380 <MXC_SYS_Reset_Periph+0x44>)
10012344:	b2c0      	uxtb	r0, r0
10012346:	2201      	movs	r2, #1
10012348:	4082      	lsls	r2, r0
1001234a:	608a      	str	r2, [r1, #8]
        while (MXC_LPGCR->rst & (0x1 << reset)) {}
1001234c:	688b      	ldr	r3, [r1, #8]
1001234e:	421a      	tst	r2, r3
10012350:	d1fc      	bne.n	1001234c <MXC_SYS_Reset_Periph+0x10>
10012352:	4770      	bx	lr
    } else if (reset > 31) {
10012354:	281f      	cmp	r0, #31
10012356:	d90a      	bls.n	1001236e <MXC_SYS_Reset_Periph+0x32>
        reset -= 32;
10012358:	3820      	subs	r0, #32
        MXC_GCR->rst1 = (0x1 << reset);
1001235a:	b2c0      	uxtb	r0, r0
1001235c:	2201      	movs	r2, #1
1001235e:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
10012362:	4082      	lsls	r2, r0
10012364:	644a      	str	r2, [r1, #68]	@ 0x44
        while (MXC_GCR->rst1 & (0x1 << reset)) {}
10012366:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
10012368:	421a      	tst	r2, r3
1001236a:	d1fc      	bne.n	10012366 <MXC_SYS_Reset_Periph+0x2a>
1001236c:	4770      	bx	lr
    } else {
        MXC_GCR->rst0 = (0x1 << reset);
1001236e:	2201      	movs	r2, #1
10012370:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
10012374:	4082      	lsls	r2, r0
10012376:	604a      	str	r2, [r1, #4]
        while (MXC_GCR->rst0 & (0x1 << reset)) {}
10012378:	684b      	ldr	r3, [r1, #4]
1001237a:	421a      	tst	r2, r3
1001237c:	d1fc      	bne.n	10012378 <MXC_SYS_Reset_Periph+0x3c>
    }
}
1001237e:	4770      	bx	lr
10012380:	40080000 	.word	0x40080000

10012384 <MXC_FLC_Write32>:
    uint32_t addr, aligned;
    int err;
    mxc_flc_regs_t *flc = NULL;

    // Address checked if it is byte addressable
    if (address & 0x3) {
10012384:	0782      	lsls	r2, r0, #30
10012386:	d133      	bne.n	100123f0 <MXC_FLC_Write32+0x6c>
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
10012388:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
1001238c:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
10012390:	4684      	mov	ip, r0
10012392:	460a      	mov	r2, r1
10012394:	d329      	bcc.n	100123ea <MXC_FLC_Write32+0x66>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
10012396:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
1001239a:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
1001239e:	d227      	bcs.n	100123f0 <MXC_FLC_Write32+0x6c>
        return E_BAD_PARAM;
    }

    // Align address to 128-bit word
    aligned = address & 0xfffffff0;
100123a0:	f020 030f 	bic.w	r3, r0, #15
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
100123a4:	f1a3 5384 	sub.w	r3, r3, #276824064	@ 0x10800000
100123a8:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
100123ac:	d220      	bcs.n	100123f0 <MXC_FLC_Write32+0x6c>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
100123ae:	f643 73f0 	movw	r3, #16368	@ 0x3ff0
100123b2:	4003      	ands	r3, r0
100123b4:	f503 2300 	add.w	r3, r3, #524288	@ 0x80000
{
100123b8:	b500      	push	{lr}

    if ((err = MXC_FLC_ME17_GetPhysicalAddress(aligned, &addr)) < E_NO_ERROR) {
        return err;
    }

    err = MXC_FLC_RevA_Write32Using128((mxc_flc_reva_regs_t *)flc, address, data, addr);
100123ba:	480f      	ldr	r0, [pc, #60]	@ (100123f8 <MXC_FLC_Write32+0x74>)
{
100123bc:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_Write32Using128((mxc_flc_reva_regs_t *)flc, address, data, addr);
100123be:	4661      	mov	r1, ip
100123c0:	f018 fbe6 	bl	1002ab90 <__MXC_FLC_RevA_Write32Using128_veneer>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
100123c4:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
100123c8:	6813      	ldr	r3, [r2, #0]
100123ca:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100123ce:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
100123d0:	6813      	ldr	r3, [r2, #0]
100123d2:	065b      	lsls	r3, r3, #25
100123d4:	d4fc      	bmi.n	100123d0 <MXC_FLC_Write32+0x4c>
    line = *line_addr;
100123d6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
100123da:	4b08      	ldr	r3, [pc, #32]	@ (100123fc <MXC_FLC_Write32+0x78>)
    line = *line_addr;
100123dc:	6812      	ldr	r2, [r2, #0]
100123de:	9201      	str	r2, [sp, #4]
    line = *line_addr;
100123e0:	681b      	ldr	r3, [r3, #0]
100123e2:	9301      	str	r3, [sp, #4]

    // Flush the cache
    MXC_FLC_ME17_Flash_Operation();

    return err;
}
100123e4:	b003      	add	sp, #12
100123e6:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
100123ea:	4b05      	ldr	r3, [pc, #20]	@ (10012400 <MXC_FLC_Write32+0x7c>)
100123ec:	4003      	ands	r3, r0
100123ee:	e7e3      	b.n	100123b8 <MXC_FLC_Write32+0x34>
        return E_BAD_PARAM;
100123f0:	f06f 0002 	mvn.w	r0, #2
}
100123f4:	4770      	bx	lr
100123f6:	bf00      	nop
100123f8:	40029000 	.word	0x40029000
100123fc:	10002000 	.word	0x10002000
10012400:	0007fff0 	.word	0x0007fff0

10012404 <MXC_FLC_Write>:
}

//******************************************************************************
int MXC_FLC_Write(uint32_t address, uint32_t length, uint32_t *buffer)
{
    return MXC_FLC_Com_Write(address, length, buffer);
10012404:	f018 bbc8 	b.w	1002ab98 <__MXC_FLC_Com_Write_veneer>

10012408 <MXC_FLC_Read>:
}

//******************************************************************************
void MXC_FLC_Read(int address, void *buffer, int len)
{
    MXC_FLC_Com_Read(address, buffer, len);
10012408:	f018 bbca 	b.w	1002aba0 <__MXC_FLC_Com_Read_veneer>

1001240c <MXC_FLC_EnableInt>:
}

//******************************************************************************
int MXC_FLC_EnableInt(uint32_t flags)
{
    return MXC_FLC_RevA_EnableInt(flags);
1001240c:	f000 b800 	b.w	10012410 <MXC_FLC_RevA_EnableInt>

10012410 <MXC_FLC_RevA_EnableInt>:
//******************************************************************************
int MXC_FLC_RevA_EnableInt(uint32_t mask)
{
    mask &= (MXC_F_FLC_REVA_INTR_DONEIE | MXC_F_FLC_REVA_INTR_AFIE);

    if (!mask) {
10012410:	f410 7340 	ands.w	r3, r0, #768	@ 0x300
10012414:	d006      	beq.n	10012424 <MXC_FLC_RevA_EnableInt+0x14>
        /* No bits set? Wasn't something we can enable. */
        return E_BAD_PARAM;
    }

    /* Apply enables and write back, preserving the flags */
    flc_int->intr |= mask;
10012416:	4a05      	ldr	r2, [pc, #20]	@ (1001242c <MXC_FLC_RevA_EnableInt+0x1c>)
10012418:	6811      	ldr	r1, [r2, #0]
1001241a:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
1001241c:	4313      	orrs	r3, r2

    return E_NO_ERROR;
1001241e:	2000      	movs	r0, #0
    flc_int->intr |= mask;
10012420:	624b      	str	r3, [r1, #36]	@ 0x24
    return E_NO_ERROR;
10012422:	4770      	bx	lr
        return E_BAD_PARAM;
10012424:	f06f 0002 	mvn.w	r0, #2
}
10012428:	4770      	bx	lr
1001242a:	bf00      	nop
1001242c:	20000008 	.word	0x20000008

10012430 <MXC_GPIO_Init>:
/* **** Globals **** */

/* **** Functions **** */
int MXC_GPIO_Init(uint32_t portmask)
{
    if (portmask & 0x1) {
10012430:	07c1      	lsls	r1, r0, #31
{
10012432:	b510      	push	{r4, lr}
10012434:	4604      	mov	r4, r0
    if (portmask & 0x1) {
10012436:	d408      	bmi.n	1001244a <MXC_GPIO_Init+0x1a>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
    }

    if (portmask & 0x2) {
10012438:	07a2      	lsls	r2, r4, #30
1001243a:	d40b      	bmi.n	10012454 <MXC_GPIO_Init+0x24>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
    }

    if (portmask & 0x4) {
1001243c:	0763      	lsls	r3, r4, #29
1001243e:	d40e      	bmi.n	1001245e <MXC_GPIO_Init+0x2e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
    }

    return MXC_GPIO_Common_Init(portmask);
10012440:	4620      	mov	r0, r4
}
10012442:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
10012446:	f001 bbbd 	b.w	10013bc4 <MXC_GPIO_Common_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1001244a:	2000      	movs	r0, #0
1001244c:	f7ff feda 	bl	10012204 <MXC_SYS_ClockEnable>
    if (portmask & 0x2) {
10012450:	07a2      	lsls	r2, r4, #30
10012452:	d5f3      	bpl.n	1001243c <MXC_GPIO_Init+0xc>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
10012454:	2001      	movs	r0, #1
10012456:	f7ff fed5 	bl	10012204 <MXC_SYS_ClockEnable>
    if (portmask & 0x4) {
1001245a:	0763      	lsls	r3, r4, #29
1001245c:	d5f0      	bpl.n	10012440 <MXC_GPIO_Init+0x10>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1001245e:	2040      	movs	r0, #64	@ 0x40
10012460:	f7ff fed0 	bl	10012204 <MXC_SYS_ClockEnable>
    return MXC_GPIO_Common_Init(portmask);
10012464:	4620      	mov	r0, r4
}
10012466:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1001246a:	f001 bbab 	b.w	10013bc4 <MXC_GPIO_Common_Init>
1001246e:	bf00      	nop

10012470 <MXC_GPIO_Config>:

    return E_NO_ERROR;
}

int MXC_GPIO_Config(const mxc_gpio_cfg_t *cfg)
{
10012470:	b570      	push	{r4, r5, r6, lr}
    int port, error;
    mxc_gpio_regs_t *gpio = cfg->port;

    port = MXC_GPIO_GET_IDX(cfg->port);
10012472:	4b7f      	ldr	r3, [pc, #508]	@ (10012670 <MXC_GPIO_Config+0x200>)
    mxc_gpio_regs_t *gpio = cfg->port;
10012474:	6805      	ldr	r5, [r0, #0]
    port = MXC_GPIO_GET_IDX(cfg->port);
10012476:	429d      	cmp	r5, r3
{
10012478:	4604      	mov	r4, r0
    port = MXC_GPIO_GET_IDX(cfg->port);
1001247a:	d037      	beq.n	100124ec <MXC_GPIO_Config+0x7c>
1001247c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012480:	429d      	cmp	r5, r3
10012482:	d020      	beq.n	100124c6 <MXC_GPIO_Config+0x56>
10012484:	f503 23ee 	add.w	r3, r3, #487424	@ 0x77000
10012488:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
1001248c:	429d      	cmp	r5, r3
1001248e:	d07f      	beq.n	10012590 <MXC_GPIO_Config+0x120>
10012490:	4878      	ldr	r0, [pc, #480]	@ (10012674 <MXC_GPIO_Config+0x204>)
10012492:	1a28      	subs	r0, r5, r0
10012494:	fab0 f080 	clz	r0, r0
10012498:	0940      	lsrs	r0, r0, #5
1001249a:	00c0      	lsls	r0, r0, #3

    MXC_GPIO_Init(1 << port);
1001249c:	f7ff ffc8 	bl	10012430 <MXC_GPIO_Init>

    if (cfg->port == MXC_GPIO3) {
100124a0:	4b74      	ldr	r3, [pc, #464]	@ (10012674 <MXC_GPIO_Config+0x204>)
100124a2:	6822      	ldr	r2, [r4, #0]
100124a4:	429a      	cmp	r2, r3
100124a6:	d015      	beq.n	100124d4 <MXC_GPIO_Config+0x64>
        default:
            return E_NOT_SUPPORTED;
        }
    } else {
        // Configure alternate function
        error = MXC_GPIO_RevA_SetAF((mxc_gpio_reva_regs_t *)gpio, cfg->func, cfg->mask);
100124a8:	6862      	ldr	r2, [r4, #4]
100124aa:	7a21      	ldrb	r1, [r4, #8]
100124ac:	4628      	mov	r0, r5
100124ae:	f000 f94b 	bl	10012748 <MXC_GPIO_RevA_SetAF>
        if (error != E_NO_ERROR) {
100124b2:	b9d0      	cbnz	r0, 100124ea <MXC_GPIO_Config+0x7a>
            return error;
        }

        // Configure the pad
        switch (cfg->pad) {
100124b4:	7a63      	ldrb	r3, [r4, #9]
100124b6:	2b04      	cmp	r3, #4
100124b8:	f200 80d7 	bhi.w	1001266a <MXC_GPIO_Config+0x1fa>
100124bc:	e8df f003 	tbb	[pc, r3]
100124c0:	2f3e4c5a 	.word	0x2f3e4c5a
100124c4:	18          	.byte	0x18
100124c5:	00          	.byte	0x00
100124c6:	2002      	movs	r0, #2
    MXC_GPIO_Init(1 << port);
100124c8:	f7ff ffb2 	bl	10012430 <MXC_GPIO_Init>
    if (cfg->port == MXC_GPIO3) {
100124cc:	4b69      	ldr	r3, [pc, #420]	@ (10012674 <MXC_GPIO_Config+0x204>)
100124ce:	6822      	ldr	r2, [r4, #0]
100124d0:	429a      	cmp	r2, r3
100124d2:	d1e9      	bne.n	100124a8 <MXC_GPIO_Config+0x38>
        switch (cfg->func) {
100124d4:	7a23      	ldrb	r3, [r4, #8]
100124d6:	2b01      	cmp	r3, #1
100124d8:	f000 80bb 	beq.w	10012652 <MXC_GPIO_Config+0x1e2>
100124dc:	2b02      	cmp	r3, #2
100124de:	f000 80a5 	beq.w	1001262c <MXC_GPIO_Config+0x1bc>
100124e2:	2b00      	cmp	r3, #0
100124e4:	d056      	beq.n	10012594 <MXC_GPIO_Config+0x124>
            return E_NOT_SUPPORTED;
100124e6:	f06f 0010 	mvn.w	r0, #16
        }
    }

    // Configure the vssel
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
}
100124ea:	bd70      	pop	{r4, r5, r6, pc}
100124ec:	2001      	movs	r0, #1
100124ee:	e7d5      	b.n	1001249c <MXC_GPIO_Config+0x2c>
            gpio->padctrl0 &= ~cfg->mask;
100124f0:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100124f2:	6862      	ldr	r2, [r4, #4]
100124f4:	ea23 0302 	bic.w	r3, r3, r2
100124f8:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
100124fa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100124fc:	4313      	orrs	r3, r2
100124fe:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
10012500:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10012504:	ea23 0302 	bic.w	r3, r3, r2
10012508:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
}

/* ************************************************************************** */
int MXC_GPIO_SetVSSEL(mxc_gpio_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    if (port == MXC_GPIO3) {
1001250c:	4b59      	ldr	r3, [pc, #356]	@ (10012674 <MXC_GPIO_Config+0x204>)
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
1001250e:	7aa1      	ldrb	r1, [r4, #10]
    if (port == MXC_GPIO3) {
10012510:	429d      	cmp	r5, r3
10012512:	d039      	beq.n	10012588 <MXC_GPIO_Config+0x118>
        }

        return E_NO_ERROR;
    }

    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
10012514:	4628      	mov	r0, r5
}
10012516:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1001251a:	f000 b8ff 	b.w	1001271c <MXC_GPIO_RevA_SetVSSEL>
            gpio->padctrl0 |= cfg->mask;
1001251e:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
10012520:	6862      	ldr	r2, [r4, #4]
10012522:	4313      	orrs	r3, r2
10012524:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10012526:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10012528:	ea23 0302 	bic.w	r3, r3, r2
1001252c:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
1001252e:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10012532:	ea23 0302 	bic.w	r3, r3, r2
10012536:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1001253a:	e7e7      	b.n	1001250c <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1001253c:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1001253e:	6862      	ldr	r2, [r4, #4]
10012540:	ea23 0302 	bic.w	r3, r3, r2
10012544:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
10012546:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10012548:	4313      	orrs	r3, r2
1001254a:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1001254c:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10012550:	4313      	orrs	r3, r2
10012552:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
10012556:	e7d9      	b.n	1001250c <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 |= cfg->mask;
10012558:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1001255a:	6862      	ldr	r2, [r4, #4]
1001255c:	4313      	orrs	r3, r2
1001255e:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10012560:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10012562:	ea23 0302 	bic.w	r3, r3, r2
10012566:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
10012568:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1001256c:	4313      	orrs	r3, r2
1001256e:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
10012572:	e7cb      	b.n	1001250c <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
10012574:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
10012576:	6862      	ldr	r2, [r4, #4]
10012578:	ea23 0302 	bic.w	r3, r3, r2
1001257c:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1001257e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10012580:	ea23 0302 	bic.w	r3, r3, r2
10012584:	666b      	str	r3, [r5, #100]	@ 0x64
            break;
10012586:	e7c1      	b.n	1001250c <MXC_GPIO_Config+0x9c>
        if (vssel == MXC_GPIO_VSSEL_VDDIO) {
10012588:	2900      	cmp	r1, #0
1001258a:	d0ac      	beq.n	100124e6 <MXC_GPIO_Config+0x76>
        return E_NO_ERROR;
1001258c:	2000      	movs	r0, #0
}
1001258e:	bd70      	pop	{r4, r5, r6, pc}
10012590:	2004      	movs	r0, #4
10012592:	e783      	b.n	1001249c <MXC_GPIO_Config+0x2c>
            MXC_MCR->gpio3_ctrl &= ~(P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask));
10012594:	6863      	ldr	r3, [r4, #4]
10012596:	4938      	ldr	r1, [pc, #224]	@ (10012678 <MXC_GPIO_Config+0x208>)
10012598:	0058      	lsls	r0, r3, #1
1001259a:	011a      	lsls	r2, r3, #4
1001259c:	6a0e      	ldr	r6, [r1, #32]
1001259e:	f000 0002 	and.w	r0, r0, #2
100125a2:	f002 0220 	and.w	r2, r2, #32
100125a6:	4302      	orrs	r2, r0
100125a8:	ea26 0202 	bic.w	r2, r6, r2
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
100125ac:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen &= ~(SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask));
100125ae:	688a      	ldr	r2, [r1, #8]
100125b0:	f3c3 0340 	ubfx	r3, r3, #1, #1
100125b4:	4303      	orrs	r3, r0
100125b6:	ea22 0303 	bic.w	r3, r2, r3
100125ba:	608b      	str	r3, [r1, #8]
        switch (cfg->pad) {
100125bc:	7a63      	ldrb	r3, [r4, #9]
100125be:	2b04      	cmp	r3, #4
100125c0:	d891      	bhi.n	100124e6 <MXC_GPIO_Config+0x76>
100125c2:	e8df f003 	tbb	[pc, r3]
100125c6:	1b26      	.short	0x1b26
100125c8:	1b03      	.short	0x1b03
100125ca:	03          	.byte	0x03
100125cb:	00          	.byte	0x00
            MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask));
100125cc:	6862      	ldr	r2, [r4, #4]
100125ce:	492a      	ldr	r1, [pc, #168]	@ (10012678 <MXC_GPIO_Config+0x208>)
100125d0:	00d3      	lsls	r3, r2, #3
100125d2:	6a08      	ldr	r0, [r1, #32]
100125d4:	f003 0310 	and.w	r3, r3, #16
100125d8:	f002 0601 	and.w	r6, r2, #1
100125dc:	4333      	orrs	r3, r6
100125de:	ea20 0303 	bic.w	r3, r0, r3
100125e2:	620b      	str	r3, [r1, #32]
            MXC_MCR->gpio3_ctrl &= ~(P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask));
100125e4:	0156      	lsls	r6, r2, #5
100125e6:	0093      	lsls	r3, r2, #2
100125e8:	6a08      	ldr	r0, [r1, #32]
100125ea:	f003 0304 	and.w	r3, r3, #4
100125ee:	f006 0640 	and.w	r6, r6, #64	@ 0x40
100125f2:	4333      	orrs	r3, r6
100125f4:	ea20 0303 	bic.w	r3, r0, r3
100125f8:	620b      	str	r3, [r1, #32]
            break;
100125fa:	e787      	b.n	1001250c <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask);
100125fc:	491e      	ldr	r1, [pc, #120]	@ (10012678 <MXC_GPIO_Config+0x208>)
100125fe:	6862      	ldr	r2, [r4, #4]
10012600:	6a0e      	ldr	r6, [r1, #32]
10012602:	00d3      	lsls	r3, r2, #3
10012604:	f002 0001 	and.w	r0, r2, #1
10012608:	f003 0310 	and.w	r3, r3, #16
1001260c:	4330      	orrs	r0, r6
1001260e:	4303      	orrs	r3, r0
10012610:	e7e7      	b.n	100125e2 <MXC_GPIO_Config+0x172>
            MXC_MCR->gpio3_ctrl |= P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask);
10012612:	6862      	ldr	r2, [r4, #4]
10012614:	4818      	ldr	r0, [pc, #96]	@ (10012678 <MXC_GPIO_Config+0x208>)
10012616:	0093      	lsls	r3, r2, #2
10012618:	0151      	lsls	r1, r2, #5
1001261a:	6a06      	ldr	r6, [r0, #32]
1001261c:	f003 0304 	and.w	r3, r3, #4
10012620:	f001 0140 	and.w	r1, r1, #64	@ 0x40
10012624:	430b      	orrs	r3, r1
10012626:	4333      	orrs	r3, r6
10012628:	6203      	str	r3, [r0, #32]
            break;
1001262a:	e76f      	b.n	1001250c <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1001262c:	6863      	ldr	r3, [r4, #4]
1001262e:	4912      	ldr	r1, [pc, #72]	@ (10012678 <MXC_GPIO_Config+0x208>)
10012630:	0058      	lsls	r0, r3, #1
10012632:	011a      	lsls	r2, r3, #4
10012634:	6a0e      	ldr	r6, [r1, #32]
10012636:	f000 0002 	and.w	r0, r0, #2
1001263a:	f002 0220 	and.w	r2, r2, #32
1001263e:	4302      	orrs	r2, r0
10012640:	4332      	orrs	r2, r6
10012642:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen |= SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask);
10012644:	688a      	ldr	r2, [r1, #8]
10012646:	f3c3 0340 	ubfx	r3, r3, #1, #1
1001264a:	4303      	orrs	r3, r0
1001264c:	4313      	orrs	r3, r2
1001264e:	608b      	str	r3, [r1, #8]
            break;
10012650:	e7b4      	b.n	100125bc <MXC_GPIO_Config+0x14c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
10012652:	6863      	ldr	r3, [r4, #4]
10012654:	4908      	ldr	r1, [pc, #32]	@ (10012678 <MXC_GPIO_Config+0x208>)
10012656:	0058      	lsls	r0, r3, #1
10012658:	011a      	lsls	r2, r3, #4
1001265a:	6a0e      	ldr	r6, [r1, #32]
1001265c:	f000 0002 	and.w	r0, r0, #2
10012660:	f002 0220 	and.w	r2, r2, #32
10012664:	4302      	orrs	r2, r0
10012666:	4332      	orrs	r2, r6
10012668:	e7a0      	b.n	100125ac <MXC_GPIO_Config+0x13c>
        switch (cfg->pad) {
1001266a:	f06f 0002 	mvn.w	r0, #2
}
1001266e:	bd70      	pop	{r4, r5, r6, pc}
10012670:	40008000 	.word	0x40008000
10012674:	40080600 	.word	0x40080600
10012678:	40006c00 	.word	0x40006c00

1001267c <MXC_GPIO_OutSet>:
    if (port == MXC_GPIO3) {
1001267c:	4a08      	ldr	r2, [pc, #32]	@ (100126a0 <MXC_GPIO_OutSet+0x24>)
1001267e:	4290      	cmp	r0, r2
10012680:	d001      	beq.n	10012686 <MXC_GPIO_OutSet+0xa>
    MXC_GPIO_RevA_OutSet((mxc_gpio_reva_regs_t *)port, mask);
10012682:	f000 b843 	b.w	1001270c <MXC_GPIO_RevA_OutSet>
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
10012686:	4807      	ldr	r0, [pc, #28]	@ (100126a4 <MXC_GPIO_OutSet+0x28>)
{
10012688:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1001268a:	6a04      	ldr	r4, [r0, #32]
1001268c:	00ca      	lsls	r2, r1, #3
1001268e:	f001 0101 	and.w	r1, r1, #1
10012692:	4321      	orrs	r1, r4
10012694:	f002 0310 	and.w	r3, r2, #16
10012698:	430b      	orrs	r3, r1
}
1001269a:	bc10      	pop	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1001269c:	6203      	str	r3, [r0, #32]
}
1001269e:	4770      	bx	lr
100126a0:	40080600 	.word	0x40080600
100126a4:	40006c00 	.word	0x40006c00

100126a8 <MXC_GPIO_OutClr>:
    if (port == MXC_GPIO3) {
100126a8:	4a09      	ldr	r2, [pc, #36]	@ (100126d0 <MXC_GPIO_OutClr+0x28>)
100126aa:	4290      	cmp	r0, r2
100126ac:	d001      	beq.n	100126b2 <MXC_GPIO_OutClr+0xa>
    MXC_GPIO_RevA_OutClr((mxc_gpio_reva_regs_t *)port, mask);
100126ae:	f000 b82f 	b.w	10012710 <MXC_GPIO_RevA_OutClr>
{
100126b2:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(mask) | P31_DATA_OUT(mask));
100126b4:	4c07      	ldr	r4, [pc, #28]	@ (100126d4 <MXC_GPIO_OutClr+0x2c>)
100126b6:	00ca      	lsls	r2, r1, #3
100126b8:	6a20      	ldr	r0, [r4, #32]
100126ba:	f002 0210 	and.w	r2, r2, #16
100126be:	f001 0101 	and.w	r1, r1, #1
100126c2:	ea42 0301 	orr.w	r3, r2, r1
100126c6:	ea20 0303 	bic.w	r3, r0, r3
100126ca:	6223      	str	r3, [r4, #32]
}
100126cc:	bc10      	pop	{r4}
100126ce:	4770      	bx	lr
100126d0:	40080600 	.word	0x40080600
100126d4:	40006c00 	.word	0x40006c00

100126d8 <MXC_GPIO_Handler>:
    MXC_GPIO_Common_Handler(port);
100126d8:	f001 ba86 	b.w	10013be8 <MXC_GPIO_Common_Handler>

100126dc <MXC_GPIO_ClearFlags>:
    if (port == MXC_GPIO3) {
100126dc:	4a03      	ldr	r2, [pc, #12]	@ (100126ec <MXC_GPIO_ClearFlags+0x10>)
100126de:	4290      	cmp	r0, r2
100126e0:	d001      	beq.n	100126e6 <MXC_GPIO_ClearFlags+0xa>
    MXC_GPIO_RevA_ClearFlags((mxc_gpio_reva_regs_t *)port, flags);
100126e2:	f000 b817 	b.w	10012714 <MXC_GPIO_RevA_ClearFlags>
        MXC_PWRSEQ->lpwkst3 = flags;
100126e6:	4a02      	ldr	r2, [pc, #8]	@ (100126f0 <MXC_GPIO_ClearFlags+0x14>)
100126e8:	61d1      	str	r1, [r2, #28]
}
100126ea:	4770      	bx	lr
100126ec:	40080600 	.word	0x40080600
100126f0:	40006800 	.word	0x40006800

100126f4 <MXC_GPIO_GetFlags>:
    if (port == MXC_GPIO3) {
100126f4:	4b03      	ldr	r3, [pc, #12]	@ (10012704 <MXC_GPIO_GetFlags+0x10>)
100126f6:	4298      	cmp	r0, r3
100126f8:	d001      	beq.n	100126fe <MXC_GPIO_GetFlags+0xa>
    return MXC_GPIO_RevA_GetFlags((mxc_gpio_reva_regs_t *)port);
100126fa:	f000 b80d 	b.w	10012718 <MXC_GPIO_RevA_GetFlags>
        return MXC_PWRSEQ->lpwkst3;
100126fe:	4b02      	ldr	r3, [pc, #8]	@ (10012708 <MXC_GPIO_GetFlags+0x14>)
10012700:	69d8      	ldr	r0, [r3, #28]
}
10012702:	4770      	bx	lr
10012704:	40080600 	.word	0x40080600
10012708:	40006800 	.word	0x40006800

1001270c <MXC_GPIO_RevA_OutSet>:
    return (port->in & mask);
}

void MXC_GPIO_RevA_OutSet(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_set = mask;
1001270c:	61c1      	str	r1, [r0, #28]
}
1001270e:	4770      	bx	lr

10012710 <MXC_GPIO_RevA_OutClr>:

void MXC_GPIO_RevA_OutClr(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_clr = mask;
10012710:	6201      	str	r1, [r0, #32]
}
10012712:	4770      	bx	lr

10012714 <MXC_GPIO_RevA_ClearFlags>:
    port->inten_clr = mask;
}

void MXC_GPIO_RevA_ClearFlags(mxc_gpio_reva_regs_t *port, uint32_t flags)
{
    port->intfl_clr = flags;
10012714:	6481      	str	r1, [r0, #72]	@ 0x48
}
10012716:	4770      	bx	lr

10012718 <MXC_GPIO_RevA_GetFlags>:

uint32_t MXC_GPIO_RevA_GetFlags(mxc_gpio_reva_regs_t *port)
{
    return port->intfl;
10012718:	6c00      	ldr	r0, [r0, #64]	@ 0x40
}
1001271a:	4770      	bx	lr

1001271c <MXC_GPIO_RevA_SetVSSEL>:

int MXC_GPIO_RevA_SetVSSEL(mxc_gpio_reva_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    // Configure the vssel
    switch (vssel) {
1001271c:	b159      	cbz	r1, 10012736 <MXC_GPIO_RevA_SetVSSEL+0x1a>
1001271e:	2901      	cmp	r1, #1
10012720:	d106      	bne.n	10012730 <MXC_GPIO_RevA_SetVSSEL+0x14>
    case MXC_GPIO_VSSEL_VDDIO:
        port->vssel &= ~mask;
        break;

    case MXC_GPIO_VSSEL_VDDIOH:
        port->vssel |= mask;
10012722:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
10012726:	4313      	orrs	r3, r2
10012728:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1001272c:	2000      	movs	r0, #0
}
1001272e:	4770      	bx	lr
    switch (vssel) {
10012730:	f06f 0002 	mvn.w	r0, #2
10012734:	4770      	bx	lr
        port->vssel &= ~mask;
10012736:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1001273a:	ea23 0302 	bic.w	r3, r3, r2
1001273e:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    return E_NO_ERROR;
10012742:	2000      	movs	r0, #0
}
10012744:	4770      	bx	lr
10012746:	bf00      	nop

10012748 <MXC_GPIO_RevA_SetAF>:

int MXC_GPIO_RevA_SetAF(mxc_gpio_reva_regs_t *port, mxc_gpio_func_t func, uint32_t mask)
{
    //This is required for new devices going forward.
    port->inen |= mask;
10012748:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1001274a:	4313      	orrs	r3, r2
1001274c:	6303      	str	r3, [r0, #48]	@ 0x30

    //Switch to I/O mode first
    port->en0_set = mask;
1001274e:	6042      	str	r2, [r0, #4]

    switch (func) {
10012750:	2905      	cmp	r1, #5
10012752:	d82c      	bhi.n	100127ae <MXC_GPIO_RevA_SetAF+0x66>
10012754:	e8df f001 	tbb	[pc, r1]
10012758:	1f19120a 	.word	0x1f19120a
1001275c:	0325      	.short	0x0325
        port->en1_clr = mask;
        port->en0_clr = mask;
        break;

    case MXC_GPIO_FUNC_ALT4:
        port->en3_clr = mask;
1001275e:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
10012762:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_set = mask;
10012764:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
10012766:	6082      	str	r2, [r0, #8]
#endif
    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10012768:	2000      	movs	r0, #0
1001276a:	4770      	bx	lr
        port->outen_clr = mask;
1001276c:	6142      	str	r2, [r0, #20]
        port->en0_set = mask;
1001276e:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10012770:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
10012772:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
10012774:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    return E_NO_ERROR;
10012778:	2000      	movs	r0, #0
1001277a:	4770      	bx	lr
        port->outen_set = mask;
1001277c:	6102      	str	r2, [r0, #16]
        port->en0_set = mask;
1001277e:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10012780:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
10012782:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
10012784:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        break;
10012788:	e7ee      	b.n	10012768 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1001278a:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1001278e:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_clr = mask;
10012790:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
10012792:	6082      	str	r2, [r0, #8]
        break;
10012794:	e7e8      	b.n	10012768 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
10012796:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1001279a:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_set = mask;
1001279c:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1001279e:	6082      	str	r2, [r0, #8]
        break;
100127a0:	e7e2      	b.n	10012768 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
100127a2:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
100127a6:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_clr = mask;
100127a8:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
100127aa:	6082      	str	r2, [r0, #8]
        break;
100127ac:	e7dc      	b.n	10012768 <MXC_GPIO_RevA_SetAF+0x20>
    switch (func) {
100127ae:	f06f 0002 	mvn.w	r0, #2
}
100127b2:	4770      	bx	lr

100127b4 <MXC_I2C_SetSlaveAddr>:
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
}

int MXC_I2C_SetSlaveAddr(mxc_i2c_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    return MXC_I2C_RevA_SetSlaveAddr((mxc_i2c_reva_regs_t *)i2c, slaveAddr, idx);
100127b4:	f000 b8fa 	b.w	100129ac <MXC_I2C_RevA_SetSlaveAddr>

100127b8 <MXC_I2C_Shutdown>:
}

int MXC_I2C_Shutdown(mxc_i2c_regs_t *i2c)
{
100127b8:	b508      	push	{r3, lr}
    // Configure GPIO for I2C
    if (i2c == MXC_I2C0) {
100127ba:	4b11      	ldr	r3, [pc, #68]	@ (10012800 <MXC_I2C_Shutdown+0x48>)
100127bc:	4298      	cmp	r0, r3
100127be:	d00d      	beq.n	100127dc <MXC_I2C_Shutdown+0x24>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
    } else if (i2c == MXC_I2C1) {
100127c0:	4b10      	ldr	r3, [pc, #64]	@ (10012804 <MXC_I2C_Shutdown+0x4c>)
100127c2:	4298      	cmp	r0, r3
100127c4:	d011      	beq.n	100127ea <MXC_I2C_Shutdown+0x32>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
    } else if (i2c == MXC_I2C2) {
100127c6:	4b10      	ldr	r3, [pc, #64]	@ (10012808 <MXC_I2C_Shutdown+0x50>)
100127c8:	4298      	cmp	r0, r3
100127ca:	d115      	bne.n	100127f8 <MXC_I2C_Shutdown+0x40>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C2);
100127cc:	2038      	movs	r0, #56	@ 0x38
100127ce:	f7ff fcf9 	bl	100121c4 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C2);
100127d2:	2034      	movs	r0, #52	@ 0x34
100127d4:	f7ff fdb2 	bl	1001233c <MXC_SYS_Reset_Periph>
    } else {
        return E_NO_DEVICE;
    }

    return E_NO_ERROR;
100127d8:	2000      	movs	r0, #0
}
100127da:	bd08      	pop	{r3, pc}
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
100127dc:	200d      	movs	r0, #13
100127de:	f7ff fcf1 	bl	100121c4 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
100127e2:	2010      	movs	r0, #16
100127e4:	f7ff fdaa 	bl	1001233c <MXC_SYS_Reset_Periph>
100127e8:	e7f6      	b.n	100127d8 <MXC_I2C_Shutdown+0x20>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
100127ea:	201c      	movs	r0, #28
100127ec:	f7ff fcea 	bl	100121c4 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
100127f0:	2020      	movs	r0, #32
100127f2:	f7ff fda3 	bl	1001233c <MXC_SYS_Reset_Periph>
100127f6:	e7ef      	b.n	100127d8 <MXC_I2C_Shutdown+0x20>
        return E_NO_DEVICE;
100127f8:	f06f 0001 	mvn.w	r0, #1
}
100127fc:	bd08      	pop	{r3, pc}
100127fe:	bf00      	nop
10012800:	4001d000 	.word	0x4001d000
10012804:	4001e000 	.word	0x4001e000
10012808:	4001f000 	.word	0x4001f000

1001280c <MXC_I2C_Init>:
    if (i2c == NULL) {
1001280c:	b3c0      	cbz	r0, 10012880 <MXC_I2C_Init+0x74>
{
1001280e:	b570      	push	{r4, r5, r6, lr}
10012810:	4604      	mov	r4, r0
    MXC_I2C_Shutdown(i2c); // Clear everything out
10012812:	460d      	mov	r5, r1
10012814:	4616      	mov	r6, r2
10012816:	f7ff ffcf 	bl	100127b8 <MXC_I2C_Shutdown>
    if (i2c == MXC_I2C0) {
1001281a:	4b1b      	ldr	r3, [pc, #108]	@ (10012888 <MXC_I2C_Init+0x7c>)
1001281c:	429c      	cmp	r4, r3
1001281e:	d012      	beq.n	10012846 <MXC_I2C_Init+0x3a>
    } else if (i2c == MXC_I2C1) {
10012820:	4b1a      	ldr	r3, [pc, #104]	@ (1001288c <MXC_I2C_Init+0x80>)
10012822:	429c      	cmp	r4, r3
10012824:	d01c      	beq.n	10012860 <MXC_I2C_Init+0x54>
    } else if (i2c == MXC_I2C2) {
10012826:	4b1a      	ldr	r3, [pc, #104]	@ (10012890 <MXC_I2C_Init+0x84>)
10012828:	429c      	cmp	r4, r3
1001282a:	d126      	bne.n	1001287a <MXC_I2C_Init+0x6e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C2);
1001282c:	2038      	movs	r0, #56	@ 0x38
1001282e:	f7ff fce9 	bl	10012204 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c2);
10012832:	4818      	ldr	r0, [pc, #96]	@ (10012894 <MXC_I2C_Init+0x88>)
10012834:	f7ff fe1c 	bl	10012470 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10012838:	4632      	mov	r2, r6
1001283a:	4629      	mov	r1, r5
1001283c:	4620      	mov	r0, r4
}
1001283e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10012842:	f000 b84d 	b.w	100128e0 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C0);
10012846:	200d      	movs	r0, #13
10012848:	f7ff fcdc 	bl	10012204 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c0);
1001284c:	4812      	ldr	r0, [pc, #72]	@ (10012898 <MXC_I2C_Init+0x8c>)
1001284e:	f7ff fe0f 	bl	10012470 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10012852:	4632      	mov	r2, r6
10012854:	4629      	mov	r1, r5
10012856:	4620      	mov	r0, r4
}
10012858:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1001285c:	f000 b840 	b.w	100128e0 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C1);
10012860:	201c      	movs	r0, #28
10012862:	f7ff fccf 	bl	10012204 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c1);
10012866:	480d      	ldr	r0, [pc, #52]	@ (1001289c <MXC_I2C_Init+0x90>)
10012868:	f7ff fe02 	bl	10012470 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1001286c:	4632      	mov	r2, r6
1001286e:	4629      	mov	r1, r5
10012870:	4620      	mov	r0, r4
}
10012872:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10012876:	f000 b833 	b.w	100128e0 <MXC_I2C_RevA_Init>
        return E_NO_DEVICE;
1001287a:	f06f 0001 	mvn.w	r0, #1
}
1001287e:	bd70      	pop	{r4, r5, r6, pc}
        return E_NULL_PTR;
10012880:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012884:	4770      	bx	lr
10012886:	bf00      	nop
10012888:	4001d000 	.word	0x4001d000
1001288c:	4001e000 	.word	0x4001e000
10012890:	4001f000 	.word	0x4001f000
10012894:	100239d8 	.word	0x100239d8
10012898:	100239f0 	.word	0x100239f0
1001289c:	100239e4 	.word	0x100239e4

100128a0 <MXC_I2C_SetFrequency>:
    return E_NO_ERROR;
}

int MXC_I2C_SetFrequency(mxc_i2c_regs_t *i2c, unsigned int hz)
{
    return MXC_I2C_RevA_SetFrequency((mxc_i2c_reva_regs_t *)i2c, hz);
100128a0:	f000 b89e 	b.w	100129e0 <MXC_I2C_RevA_SetFrequency>

100128a4 <MXC_I2C_GetFrequency>:
}

int MXC_I2C_GetFrequency(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetFrequency((mxc_i2c_reva_regs_t *)i2c);
100128a4:	f000 b8ec 	b.w	10012a80 <MXC_I2C_RevA_GetFrequency>

100128a8 <MXC_I2C_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_Start(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Start((mxc_i2c_reva_regs_t *)i2c);
100128a8:	f000 b8fa 	b.w	10012aa0 <MXC_I2C_RevA_Start>

100128ac <MXC_I2C_Stop>:
}

int MXC_I2C_Stop(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Stop((mxc_i2c_reva_regs_t *)i2c);
100128ac:	f000 b90c 	b.w	10012ac8 <MXC_I2C_RevA_Stop>

100128b0 <MXC_I2C_ReadRXFIFO>:
    return MXC_I2C_RevA_Read((mxc_i2c_reva_regs_t *)i2c, bytes, len, ack);
}

int MXC_I2C_ReadRXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_ReadRXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
100128b0:	f000 b918 	b.w	10012ae4 <MXC_I2C_RevA_ReadRXFIFO>

100128b4 <MXC_I2C_WriteTXFIFO>:
    return MXC_I2C_RevA_GetRXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_WriteTXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_WriteTXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
100128b4:	f000 b934 	b.w	10012b20 <MXC_I2C_RevA_WriteTXFIFO>

100128b8 <MXC_I2C_ClearRXFIFO>:
    return MXC_I2C_RevA_GetTXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_ClearRXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearRXFIFO((mxc_i2c_reva_regs_t *)i2c);
100128b8:	f000 b94a 	b.w	10012b50 <MXC_I2C_RevA_ClearRXFIFO>

100128bc <MXC_I2C_ClearTXFIFO>:
}

void MXC_I2C_ClearTXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearTXFIFO((mxc_i2c_reva_regs_t *)i2c);
100128bc:	f000 b950 	b.w	10012b60 <MXC_I2C_RevA_ClearTXFIFO>

100128c0 <MXC_I2C_ClearFlags>:
    return MXC_I2C_RevA_GetFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
}

void MXC_I2C_ClearFlags(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_ClearFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
100128c0:	f000 b956 	b.w	10012b70 <MXC_I2C_RevA_ClearFlags>

100128c4 <MXC_I2C_Recover>:
    return MXC_I2C_RevA_GetTimeout((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_Recover(mxc_i2c_regs_t *i2c, unsigned int retries)
{
    return MXC_I2C_RevA_Recover((mxc_i2c_reva_regs_t *)i2c, retries);
100128c4:	f000 b958 	b.w	10012b78 <MXC_I2C_RevA_Recover>

100128c8 <MXC_I2C_MasterTransaction>:
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_MasterTransaction(mxc_i2c_req_t *req)
{
    return MXC_I2C_RevA_MasterTransaction((mxc_i2c_reva_req_t *)req);
100128c8:	f000 b9c2 	b.w	10012c50 <MXC_I2C_RevA_MasterTransaction>

100128cc <MXC_I2C_SetRXThreshold>:
        (mxc_i2c_reva_regs_t *)i2c, (mxc_i2c_reva_slave_handler_t)callback, interruptCheck);
}

int MXC_I2C_SetRXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetRXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
100128cc:	f000 ba90 	b.w	10012df0 <MXC_I2C_RevA_SetRXThreshold>

100128d0 <MXC_I2C_SetTXThreshold>:
    return MXC_I2C_RevA_GetRXThreshold((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_SetTXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetTXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
100128d0:	f000 ba9e 	b.w	10012e10 <MXC_I2C_RevA_SetTXThreshold>

100128d4 <MXC_I2C_AsyncHandler>:
    MXC_I2C_RevA_AbortAsync((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_AsyncHandler(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_AsyncHandler((mxc_i2c_reva_regs_t *)i2c, interruptCheck);
100128d4:	4b01      	ldr	r3, [pc, #4]	@ (100128dc <MXC_I2C_AsyncHandler+0x8>)
100128d6:	6819      	ldr	r1, [r3, #0]
100128d8:	f000 be08 	b.w	100134ec <MXC_I2C_RevA_AsyncHandler>
100128dc:	2000000c 	.word	0x2000000c

100128e0 <MXC_I2C_RevA_Init>:

/* ************************************************************************* */
/* Control/Configuration functions                                           */
/* ************************************************************************* */
int MXC_I2C_RevA_Init(mxc_i2c_reva_regs_t *i2c, int masterMode, unsigned int slaveAddr)
{
100128e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int err;

    if (i2c == NULL) {
100128e2:	2800      	cmp	r0, #0
100128e4:	d057      	beq.n	10012996 <MXC_I2C_RevA_Init+0xb6>
        return E_NULL_PTR;
    }

    if ((err = MXC_I2C_Recover((mxc_i2c_regs_t *)i2c, 16)) != E_NO_ERROR) {
100128e6:	460f      	mov	r7, r1
100128e8:	2110      	movs	r1, #16
100128ea:	4615      	mov	r5, r2
100128ec:	4604      	mov	r4, r0
100128ee:	f7ff ffe9 	bl	100128c4 <MXC_I2C_Recover>
100128f2:	4606      	mov	r6, r0
100128f4:	b108      	cbz	r0, 100128fa <MXC_I2C_RevA_Init+0x1a>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
    }

    return E_NO_ERROR;
}
100128f6:	4630      	mov	r0, r6
100128f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
100128fa:	6823      	ldr	r3, [r4, #0]
100128fc:	f043 0301 	orr.w	r3, r3, #1
10012900:	6023      	str	r3, [r4, #0]
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
10012902:	4620      	mov	r0, r4
10012904:	f7ff ffd8 	bl	100128b8 <MXC_I2C_ClearRXFIFO>
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
10012908:	4620      	mov	r0, r4
1001290a:	f7ff ffd7 	bl	100128bc <MXC_I2C_ClearTXFIFO>
    MXC_I2C_SetTXThreshold((mxc_i2c_regs_t *)i2c, 2); // set TX threshold to 2 bytes
1001290e:	2102      	movs	r1, #2
10012910:	4620      	mov	r0, r4
10012912:	f7ff ffdd 	bl	100128d0 <MXC_I2C_SetTXThreshold>
    MXC_I2C_SetRXThreshold((mxc_i2c_regs_t *)i2c, 6); // set RX threshold to 6 bytes
10012916:	2106      	movs	r1, #6
10012918:	4620      	mov	r0, r4
1001291a:	f7ff ffd7 	bl	100128cc <MXC_I2C_SetRXThreshold>
    if (!masterMode) {
1001291e:	b1df      	cbz	r7, 10012958 <MXC_I2C_RevA_Init+0x78>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
10012920:	6823      	ldr	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10012922:	4a1e      	ldr	r2, [pc, #120]	@ (1001299c <MXC_I2C_RevA_Init+0xbc>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
10012924:	f043 0302 	orr.w	r3, r3, #2
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10012928:	4294      	cmp	r4, r2
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1001292a:	6023      	str	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1001292c:	d02f      	beq.n	1001298e <MXC_I2C_RevA_Init+0xae>
1001292e:	4b1c      	ldr	r3, [pc, #112]	@ (100129a0 <MXC_I2C_RevA_Init+0xc0>)
10012930:	429c      	cmp	r4, r3
10012932:	d00f      	beq.n	10012954 <MXC_I2C_RevA_Init+0x74>
10012934:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012938:	429c      	cmp	r4, r3
1001293a:	bf14      	ite	ne
1001293c:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
10012940:	2402      	moveq	r4, #2
10012942:	4b18      	ldr	r3, [pc, #96]	@ (100129a4 <MXC_I2C_RevA_Init+0xc4>)
10012944:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10012948:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
1001294c:	2201      	movs	r2, #1
1001294e:	605a      	str	r2, [r3, #4]
}
10012950:	4630      	mov	r0, r6
10012952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10012954:	2401      	movs	r4, #1
10012956:	e7f4      	b.n	10012942 <MXC_I2C_RevA_Init+0x62>
        MXC_I2C_SetSlaveAddr((mxc_i2c_regs_t *)i2c, slaveAddr, 0);
10012958:	463a      	mov	r2, r7
1001295a:	4629      	mov	r1, r5
1001295c:	4620      	mov	r0, r4
1001295e:	f7ff ff29 	bl	100127b4 <MXC_I2C_SetSlaveAddr>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
10012962:	4b0e      	ldr	r3, [pc, #56]	@ (1001299c <MXC_I2C_RevA_Init+0xbc>)
10012964:	429c      	cmp	r4, r3
10012966:	d009      	beq.n	1001297c <MXC_I2C_RevA_Init+0x9c>
10012968:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001296c:	429c      	cmp	r4, r3
1001296e:	d010      	beq.n	10012992 <MXC_I2C_RevA_Init+0xb2>
10012970:	4f0d      	ldr	r7, [pc, #52]	@ (100129a8 <MXC_I2C_RevA_Init+0xc8>)
10012972:	42bc      	cmp	r4, r7
10012974:	bf14      	ite	ne
10012976:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
1001297a:	2702      	moveq	r7, #2
1001297c:	4b09      	ldr	r3, [pc, #36]	@ (100129a4 <MXC_I2C_RevA_Init+0xc4>)
1001297e:	eb07 0147 	add.w	r1, r7, r7, lsl #1
10012982:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
10012986:	2200      	movs	r2, #0
10012988:	605a      	str	r2, [r3, #4]
}
1001298a:	4630      	mov	r0, r6
1001298c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1001298e:	4634      	mov	r4, r6
10012990:	e7d7      	b.n	10012942 <MXC_I2C_RevA_Init+0x62>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
10012992:	2701      	movs	r7, #1
10012994:	e7f2      	b.n	1001297c <MXC_I2C_RevA_Init+0x9c>
        return E_NULL_PTR;
10012996:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
1001299a:	e7ac      	b.n	100128f6 <MXC_I2C_RevA_Init+0x16>
1001299c:	4001d000 	.word	0x4001d000
100129a0:	4001e000 	.word	0x4001e000
100129a4:	20001008 	.word	0x20001008
100129a8:	4001f000 	.word	0x4001f000

100129ac <MXC_I2C_RevA_SetSlaveAddr>:

int MXC_I2C_RevA_SetSlaveAddr(mxc_i2c_reva_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    if (i2c == NULL) {
100129ac:	4603      	mov	r3, r0
100129ae:	b1a0      	cbz	r0, 100129da <MXC_I2C_RevA_SetSlaveAddr+0x2e>
        return E_NULL_PTR;
    }

    if (idx != 0) {
100129b0:	b96a      	cbnz	r2, 100129ce <MXC_I2C_RevA_SetSlaveAddr+0x22>
        // Multiple slaves are not supported yet
        return E_NOT_SUPPORTED;
    }

    if (slaveAddr > MXC_F_I2C_REVA_SLAVE_ADDR) {
100129b2:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
100129b6:	d20d      	bcs.n	100129d4 <MXC_I2C_RevA_SetSlaveAddr+0x28>
        return E_BAD_PARAM;
    }

    i2c->slave = 0;

    if (slaveAddr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
100129b8:	297f      	cmp	r1, #127	@ 0x7f
    i2c->slave = 0;
100129ba:	64c2      	str	r2, [r0, #76]	@ 0x4c
        // Set for 10bit addressing mode
        i2c->slave = MXC_F_I2C_REVA_SLAVE_EXT_ADDR_EN;
100129bc:	bf84      	itt	hi
100129be:	f44f 4200 	movhi.w	r2, #32768	@ 0x8000
100129c2:	64c2      	strhi	r2, [r0, #76]	@ 0x4c
    }

    i2c->slave |= slaveAddr;
100129c4:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
100129c6:	430a      	orrs	r2, r1

    return E_NO_ERROR;
100129c8:	2000      	movs	r0, #0
    i2c->slave |= slaveAddr;
100129ca:	64da      	str	r2, [r3, #76]	@ 0x4c
    return E_NO_ERROR;
100129cc:	4770      	bx	lr
        return E_NOT_SUPPORTED;
100129ce:	f06f 0010 	mvn.w	r0, #16
100129d2:	4770      	bx	lr
        return E_BAD_PARAM;
100129d4:	f06f 0002 	mvn.w	r0, #2
}
100129d8:	4770      	bx	lr
        return E_NULL_PTR;
100129da:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100129de:	4770      	bx	lr

100129e0 <MXC_I2C_RevA_SetFrequency>:

int MXC_I2C_RevA_SetFrequency(mxc_i2c_reva_regs_t *i2c, unsigned int hz)
{
    unsigned int ticksTotal, hiClks, lowClks;

    if (i2c == NULL) {
100129e0:	2800      	cmp	r0, #0
100129e2:	d03f      	beq.n	10012a64 <MXC_I2C_RevA_SetFrequency+0x84>
{
100129e4:	b410      	push	{r4}
        return E_NULL_PTR;
    }

    if (hz > MXC_I2C_REVA_FASTPLUS_SPEED && hz <= MXC_I2C_REVA_HIGH_SPEED) {
100129e6:	4a21      	ldr	r2, [pc, #132]	@ (10012a6c <MXC_I2C_RevA_SetFrequency+0x8c>)
100129e8:	f5a1 2374 	sub.w	r3, r1, #999424	@ 0xf4000
100129ec:	f46f 7410 	mvn.w	r4, #576	@ 0x240
100129f0:	4423      	add	r3, r4
100129f2:	4293      	cmp	r3, r2
100129f4:	d313      	bcc.n	10012a1e <MXC_I2C_RevA_SetFrequency+0x3e>

        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;

        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz

    } else if (hz > MXC_I2C_REVA_HIGH_SPEED) {
100129f6:	4b1e      	ldr	r3, [pc, #120]	@ (10012a70 <MXC_I2C_RevA_SetFrequency+0x90>)
100129f8:	4299      	cmp	r1, r3
100129fa:	d82f      	bhi.n	10012a5c <MXC_I2C_RevA_SetFrequency+0x7c>
        ticksTotal = PeripheralClock / hz;
100129fc:	4b1d      	ldr	r3, [pc, #116]	@ (10012a74 <MXC_I2C_RevA_SetFrequency+0x94>)
        return E_BAD_PARAM;
    }

    // Calculate the period of SCL, 50% duty cycle
    ticksTotal = PeripheralClock / hz;
100129fe:	681b      	ldr	r3, [r3, #0]
10012a00:	085b      	lsrs	r3, r3, #1
10012a02:	fbb3 f3f1 	udiv	r3, r3, r1
    hiClks = (ticksTotal >> 1) - 1;
10012a06:	085b      	lsrs	r3, r3, #1
    if (ticksTotal % 1) {
        hiClks++;
    }

    // Check for maximum/minimum supported speeds
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
10012a08:	1e9a      	subs	r2, r3, #2
10012a0a:	f5b2 7fff 	cmp.w	r2, #510	@ 0x1fe
    hiClks = (ticksTotal >> 1) - 1;
10012a0e:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
10012a12:	d823      	bhi.n	10012a5c <MXC_I2C_RevA_SetFrequency+0x7c>
        return E_BAD_PARAM;
    }

    i2c->clklo = lowClks & MXC_F_I2C_REVA_CLKLO_LO;
10012a14:	6343      	str	r3, [r0, #52]	@ 0x34
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;

    // Return the actual speed set, since it won't be exactly what's requested
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
}
10012a16:	bc10      	pop	{r4}
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;
10012a18:	6383      	str	r3, [r0, #56]	@ 0x38
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
10012a1a:	f7ff bf43 	b.w	100128a4 <MXC_I2C_GetFrequency>
        ticksTotal = PeripheralClock / hz;
10012a1e:	4b15      	ldr	r3, [pc, #84]	@ (10012a74 <MXC_I2C_RevA_SetFrequency+0x94>)
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10012a20:	4c15      	ldr	r4, [pc, #84]	@ (10012a78 <MXC_I2C_RevA_SetFrequency+0x98>)
        ticksTotal = PeripheralClock / hz;
10012a22:	681b      	ldr	r3, [r3, #0]
10012a24:	085b      	lsrs	r3, r3, #1
10012a26:	fbb3 f1f1 	udiv	r1, r3, r1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10012a2a:	004a      	lsls	r2, r1, #1
        hsHiClks = ticksTotal / 3 - 1;
10012a2c:	fba4 c101 	umull	ip, r1, r4, r1
10012a30:	0849      	lsrs	r1, r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10012a32:	fba4 4202 	umull	r4, r2, r4, r2
        hsHiClks = ticksTotal / 3 - 1;
10012a36:	3901      	subs	r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10012a38:	0852      	lsrs	r2, r2, #1
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
10012a3a:	290f      	cmp	r1, #15
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10012a3c:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
10012a40:	dc0c      	bgt.n	10012a5c <MXC_I2C_RevA_SetFrequency+0x7c>
10012a42:	2a0f      	cmp	r2, #15
10012a44:	dc0a      	bgt.n	10012a5c <MXC_I2C_RevA_SetFrequency+0x7c>
        hsHiClks = (hsHiClks << MXC_F_I2C_REVA_HSCLK_HI_POS) & MXC_F_I2C_REVA_HSCLK_HI;
10012a46:	0209      	lsls	r1, r1, #8
10012a48:	b289      	uxth	r1, r1
        i2c->hsclk = (hsLowClks | hsHiClks);
10012a4a:	b2d2      	uxtb	r2, r2
10012a4c:	430a      	orrs	r2, r1
10012a4e:	63c2      	str	r2, [r0, #60]	@ 0x3c
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
10012a50:	6802      	ldr	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
10012a52:	490a      	ldr	r1, [pc, #40]	@ (10012a7c <MXC_I2C_RevA_SetFrequency+0x9c>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
10012a54:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
10012a58:	6002      	str	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
10012a5a:	e7d2      	b.n	10012a02 <MXC_I2C_RevA_SetFrequency+0x22>
            return E_BAD_PARAM;
10012a5c:	f06f 0002 	mvn.w	r0, #2
}
10012a60:	bc10      	pop	{r4}
10012a62:	4770      	bx	lr
        return E_NULL_PTR;
10012a64:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012a68:	4770      	bx	lr
10012a6a:	bf00      	nop
10012a6c:	00249f00 	.word	0x00249f00
10012a70:	0033e140 	.word	0x0033e140
10012a74:	20001768 	.word	0x20001768
10012a78:	aaaaaaab 	.word	0xaaaaaaab
10012a7c:	00061a80 	.word	0x00061a80

10012a80 <MXC_I2C_RevA_GetFrequency>:
    unsigned int sclCycles = 0;

    // Calculate the speed based on what we've written into registers
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);

    return PeripheralClock / sclCycles;
10012a80:	4906      	ldr	r1, [pc, #24]	@ (10012a9c <MXC_I2C_RevA_GetFrequency+0x1c>)
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
10012a82:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10012a84:	6b82      	ldr	r2, [r0, #56]	@ 0x38
    return PeripheralClock / sclCycles;
10012a86:	6808      	ldr	r0, [r1, #0]
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
10012a88:	f3c2 0208 	ubfx	r2, r2, #0, #9
10012a8c:	f3c3 0308 	ubfx	r3, r3, #0, #9
10012a90:	4413      	add	r3, r2
    return PeripheralClock / sclCycles;
10012a92:	0840      	lsrs	r0, r0, #1
}
10012a94:	fbb0 f0f3 	udiv	r0, r0, r3
10012a98:	4770      	bx	lr
10012a9a:	bf00      	nop
10012a9c:	20001768 	.word	0x20001768

10012aa0 <MXC_I2C_RevA_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_RevA_Start(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
10012aa0:	b170      	cbz	r0, 10012ac0 <MXC_I2C_RevA_Start+0x20>
        return E_NULL_PTR;
    }

    // If we have an incomplete transfer, we need to do a restart
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
10012aa2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
10012aa4:	f013 0f01 	tst.w	r3, #1
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012aa8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
10012aaa:	d104      	bne.n	10012ab6 <MXC_I2C_RevA_Start+0x16>
    } else {
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START; // No check for start generation
10012aac:	f043 0301 	orr.w	r3, r3, #1
10012ab0:	6303      	str	r3, [r0, #48]	@ 0x30
    }

    return E_NO_ERROR;
10012ab2:	2000      	movs	r0, #0
10012ab4:	4770      	bx	lr
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012ab6:	f043 0302 	orr.w	r3, r3, #2
10012aba:	6303      	str	r3, [r0, #48]	@ 0x30
    return E_NO_ERROR;
10012abc:	2000      	movs	r0, #0
10012abe:	4770      	bx	lr
        return E_NULL_PTR;
10012ac0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012ac4:	4770      	bx	lr
10012ac6:	bf00      	nop

10012ac8 <MXC_I2C_RevA_Stop>:

int MXC_I2C_RevA_Stop(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
10012ac8:	b148      	cbz	r0, 10012ade <MXC_I2C_RevA_Stop+0x16>
        return E_NULL_PTR;
    }

    i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
10012aca:	6b03      	ldr	r3, [r0, #48]	@ 0x30
10012acc:	f043 0304 	orr.w	r3, r3, #4
10012ad0:	6303      	str	r3, [r0, #48]	@ 0x30

    while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_STOP) {}
10012ad2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
10012ad4:	f013 0304 	ands.w	r3, r3, #4
10012ad8:	d1fb      	bne.n	10012ad2 <MXC_I2C_RevA_Stop+0xa>

    return E_NO_ERROR;
10012ada:	4618      	mov	r0, r3
10012adc:	4770      	bx	lr
        return E_NULL_PTR;
10012ade:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012ae2:	4770      	bx	lr

10012ae4 <MXC_I2C_RevA_ReadRXFIFO>:
int MXC_I2C_RevA_ReadRXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                            unsigned int len)
{
    unsigned read = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
10012ae4:	b1c8      	cbz	r0, 10012b1a <MXC_I2C_RevA_ReadRXFIFO+0x36>
10012ae6:	b1c1      	cbz	r1, 10012b1a <MXC_I2C_RevA_ReadRXFIFO+0x36>
        return E_NULL_PTR;
    }

    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10012ae8:	b1aa      	cbz	r2, 10012b16 <MXC_I2C_RevA_ReadRXFIFO+0x32>
{
10012aea:	b500      	push	{lr}
    unsigned read = 0;
10012aec:	2300      	movs	r3, #0
        bytes[read++] = i2c->fifo;
10012aee:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10012af2:	e007      	b.n	10012b04 <MXC_I2C_RevA_ReadRXFIFO+0x20>
10012af4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
10012af6:	3301      	adds	r3, #1
10012af8:	fa5f fc81 	uxtb.w	ip, r1
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10012afc:	429a      	cmp	r2, r3
        bytes[read++] = i2c->fifo;
10012afe:	f80e c003 	strb.w	ip, [lr, r3]
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10012b02:	d005      	beq.n	10012b10 <MXC_I2C_RevA_ReadRXFIFO+0x2c>
10012b04:	6841      	ldr	r1, [r0, #4]
10012b06:	0789      	lsls	r1, r1, #30
10012b08:	d5f4      	bpl.n	10012af4 <MXC_I2C_RevA_ReadRXFIFO+0x10>
    }

    return read;
10012b0a:	4618      	mov	r0, r3
}
10012b0c:	f85d fb04 	ldr.w	pc, [sp], #4
    return read;
10012b10:	4610      	mov	r0, r2
}
10012b12:	f85d fb04 	ldr.w	pc, [sp], #4
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10012b16:	4610      	mov	r0, r2
10012b18:	4770      	bx	lr
        return E_NULL_PTR;
10012b1a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012b1e:	4770      	bx	lr

10012b20 <MXC_I2C_RevA_WriteTXFIFO>:
int MXC_I2C_RevA_WriteTXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                             unsigned int len)
{
    unsigned written = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
10012b20:	b198      	cbz	r0, 10012b4a <MXC_I2C_RevA_WriteTXFIFO+0x2a>
10012b22:	b191      	cbz	r1, 10012b4a <MXC_I2C_RevA_WriteTXFIFO+0x2a>
        return E_NULL_PTR;
    }

    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10012b24:	b17a      	cbz	r2, 10012b46 <MXC_I2C_RevA_WriteTXFIFO+0x26>
    unsigned written = 0;
10012b26:	2300      	movs	r3, #0
        i2c->fifo = bytes[written++];
10012b28:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
10012b2c:	e006      	b.n	10012b3c <MXC_I2C_RevA_WriteTXFIFO+0x1c>
10012b2e:	3301      	adds	r3, #1
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10012b30:	429a      	cmp	r2, r3
        i2c->fifo = bytes[written++];
10012b32:	f81c 1003 	ldrb.w	r1, [ip, r3]
10012b36:	b2c9      	uxtb	r1, r1
10012b38:	62c1      	str	r1, [r0, #44]	@ 0x2c
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
10012b3a:	d004      	beq.n	10012b46 <MXC_I2C_RevA_WriteTXFIFO+0x26>
10012b3c:	6841      	ldr	r1, [r0, #4]
10012b3e:	06c9      	lsls	r1, r1, #27
10012b40:	d5f5      	bpl.n	10012b2e <MXC_I2C_RevA_WriteTXFIFO+0xe>
    }

    return written;
10012b42:	4618      	mov	r0, r3
10012b44:	4770      	bx	lr
10012b46:	4610      	mov	r0, r2
10012b48:	4770      	bx	lr
        return E_NULL_PTR;
10012b4a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012b4e:	4770      	bx	lr

10012b50 <MXC_I2C_RevA_ClearRXFIFO>:
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
}

void MXC_I2C_RevA_ClearRXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
10012b50:	69c3      	ldr	r3, [r0, #28]
10012b52:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10012b56:	61c3      	str	r3, [r0, #28]

    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
10012b58:	69c3      	ldr	r3, [r0, #28]
10012b5a:	061b      	lsls	r3, r3, #24
10012b5c:	d4fc      	bmi.n	10012b58 <MXC_I2C_RevA_ClearRXFIFO+0x8>
}
10012b5e:	4770      	bx	lr

10012b60 <MXC_I2C_RevA_ClearTXFIFO>:

void MXC_I2C_RevA_ClearTXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
10012b60:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10012b62:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10012b66:	6243      	str	r3, [r0, #36]	@ 0x24

    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
10012b68:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10012b6a:	061b      	lsls	r3, r3, #24
10012b6c:	d4fc      	bmi.n	10012b68 <MXC_I2C_RevA_ClearTXFIFO+0x8>
}
10012b6e:	4770      	bx	lr

10012b70 <MXC_I2C_RevA_ClearFlags>:
    return E_NO_ERROR;
}

void MXC_I2C_RevA_ClearFlags(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->intfl0 = flags0;
10012b70:	6081      	str	r1, [r0, #8]
    i2c->intfl1 = flags1;
10012b72:	6102      	str	r2, [r0, #16]
}
10012b74:	4770      	bx	lr
10012b76:	bf00      	nop

10012b78 <MXC_I2C_RevA_Recover>:
int MXC_I2C_RevA_Recover(mxc_i2c_reva_regs_t *i2c, unsigned int retries)
{
    int err;
    unsigned int i;

    if (i2c == NULL) {
10012b78:	2800      	cmp	r0, #0
10012b7a:	d065      	beq.n	10012c48 <MXC_I2C_RevA_Recover+0xd0>
        return E_NULL_PTR;
    }

    err = E_COMM_ERR;

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10012b7c:	6803      	ldr	r3, [r0, #0]
10012b7e:	f043 0301 	orr.w	r3, r3, #1
{
10012b82:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10012b86:	6003      	str	r3, [r0, #0]
    int swBit = i2c->ctrl & MXC_F_I2C_REVA_CTRL_BB_MODE;
10012b88:	6807      	ldr	r7, [r0, #0]

    if (i2c == NULL) {
        return E_NULL_PTR;
    }

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_BB_MODE;
10012b8a:	6803      	ldr	r3, [r0, #0]
10012b8c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
10012b90:	460e      	mov	r6, r1
10012b92:	4604      	mov	r4, r0
10012b94:	f407 6780 	and.w	r7, r7, #1024	@ 0x400
10012b98:	6003      	str	r3, [r0, #0]

    // Follow the procedure detailed in the header file
    // Delay 10uS between each step to give the line/slaves time to react
    for (i = 0; i < retries; i++) {
10012b9a:	2900      	cmp	r1, #0
10012b9c:	d043      	beq.n	10012c26 <MXC_I2C_RevA_Recover+0xae>
10012b9e:	2500      	movs	r5, #0
10012ba0:	e02b      	b.n	10012bfa <MXC_I2C_RevA_Recover+0x82>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10012ba2:	f7ff faad 	bl	10012100 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012ba6:	6823      	ldr	r3, [r4, #0]
10012ba8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10012bac:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10012bae:	200a      	movs	r0, #10
10012bb0:	f7ff faa6 	bl	10012100 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10012bb4:	6823      	ldr	r3, [r4, #0]
10012bb6:	f413 7800 	ands.w	r8, r3, #512	@ 0x200
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10012bba:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10012bbe:	d12b      	bne.n	10012c18 <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10012bc0:	f7ff fa9e 	bl	10012100 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012bc4:	6823      	ldr	r3, [r4, #0]
10012bc6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10012bca:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10012bcc:	200a      	movs	r0, #10
10012bce:	f7ff fa97 	bl	10012100 <MXC_Delay>

        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10012bd2:	6823      	ldr	r3, [r4, #0]
10012bd4:	059a      	lsls	r2, r3, #22
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10012bd6:	f04f 000a 	mov.w	r0, #10
        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10012bda:	d51d      	bpl.n	10012c18 <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10012bdc:	f7ff fa90 	bl	10012100 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT;
10012be0:	6823      	ldr	r3, [r4, #0]
10012be2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012be6:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10012be8:	200a      	movs	r0, #10
10012bea:	f7ff fa89 	bl	10012100 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10012bee:	6823      	ldr	r3, [r4, #0]
10012bf0:	05db      	lsls	r3, r3, #23
10012bf2:	d425      	bmi.n	10012c40 <MXC_I2C_RevA_Recover+0xc8>
    for (i = 0; i < retries; i++) {
10012bf4:	3501      	adds	r5, #1
10012bf6:	42ae      	cmp	r6, r5
10012bf8:	d015      	beq.n	10012c26 <MXC_I2C_RevA_Recover+0xae>
        MXC_Delay(10);
10012bfa:	200a      	movs	r0, #10
10012bfc:	f7ff fa80 	bl	10012100 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SCL_OUT;
10012c00:	6823      	ldr	r3, [r4, #0]
10012c02:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10012c06:	6023      	str	r3, [r4, #0]
        MXC_Delay(10);
10012c08:	200a      	movs	r0, #10
10012c0a:	f7ff fa79 	bl	10012100 <MXC_Delay>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10012c0e:	6823      	ldr	r3, [r4, #0]
10012c10:	05d9      	lsls	r1, r3, #23
        MXC_Delay(10);
10012c12:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10012c16:	d5c4      	bpl.n	10012ba2 <MXC_I2C_RevA_Recover+0x2a>
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012c18:	6823      	ldr	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10012c1a:	3501      	adds	r5, #1
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012c1c:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
    for (i = 0; i < retries; i++) {
10012c20:	42ae      	cmp	r6, r5
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012c22:	6023      	str	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10012c24:	d1e9      	bne.n	10012bfa <MXC_I2C_RevA_Recover+0x82>
    err = E_COMM_ERR;
10012c26:	f06f 0008 	mvn.w	r0, #8
            err = E_NO_ERROR; // We have control
            break;
        }
    }

    if (swBit == 0) {
10012c2a:	b91f      	cbnz	r7, 10012c34 <MXC_I2C_RevA_Recover+0xbc>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_BB_MODE;
10012c2c:	6823      	ldr	r3, [r4, #0]
10012c2e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10012c32:	6023      	str	r3, [r4, #0]
    }

    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_EN;
10012c34:	6823      	ldr	r3, [r4, #0]
10012c36:	f023 0301 	bic.w	r3, r3, #1
10012c3a:	6023      	str	r3, [r4, #0]

    return err;
}
10012c3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            err = E_NO_ERROR; // We have control
10012c40:	4640      	mov	r0, r8
    if (swBit == 0) {
10012c42:	2f00      	cmp	r7, #0
10012c44:	d1f6      	bne.n	10012c34 <MXC_I2C_RevA_Recover+0xbc>
10012c46:	e7f1      	b.n	10012c2c <MXC_I2C_RevA_Recover+0xb4>
        return E_NULL_PTR;
10012c48:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012c4c:	4770      	bx	lr
10012c4e:	bf00      	nop

10012c50 <MXC_I2C_RevA_MasterTransaction>:
/* ************************************************************************* */
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_RevA_MasterTransaction(mxc_i2c_reva_req_t *req)
{
10012c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    mxc_i2c_reva_regs_t *i2c = req->i2c; // Save off pointer for faster access
10012c54:	e9d0 4300 	ldrd	r4, r3, [r0]
    unsigned int written = 0;
    unsigned int read = 0;

    if (req->addr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
10012c58:	2b7f      	cmp	r3, #127	@ 0x7f
10012c5a:	f200 80c3 	bhi.w	10012de4 <MXC_I2C_RevA_MasterTransaction+0x194>
        return E_NOT_SUPPORTED;
    }

    if (MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c) < 0) {
10012c5e:	4b63      	ldr	r3, [pc, #396]	@ (10012dec <MXC_I2C_RevA_MasterTransaction+0x19c>)
10012c60:	429c      	cmp	r4, r3
10012c62:	4605      	mov	r5, r0
10012c64:	d008      	beq.n	10012c78 <MXC_I2C_RevA_MasterTransaction+0x28>
10012c66:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012c6a:	429c      	cmp	r4, r3
10012c6c:	d004      	beq.n	10012c78 <MXC_I2C_RevA_MasterTransaction+0x28>
10012c6e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012c72:	429c      	cmp	r4, r3
10012c74:	f040 80b0 	bne.w	10012dd8 <MXC_I2C_RevA_MasterTransaction+0x188>
        return E_BAD_PARAM;
    }

    if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE)) {
10012c78:	6823      	ldr	r3, [r4, #0]
10012c7a:	079e      	lsls	r6, r3, #30
10012c7c:	f140 80af 	bpl.w	10012dde <MXC_I2C_RevA_MasterTransaction+0x18e>
    //  send addr w/ read bit
    //  read rx_len bytes acking all
    // stop or restart
    // return good or error

    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
10012c80:	2207      	movs	r2, #7
10012c82:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
10012c86:	4620      	mov	r0, r4
10012c88:	f7ff fe1a 	bl	100128c0 <MXC_I2C_ClearFlags>
                       MXC_I2C_REVA_INTFL1_MASK); // Clear all I2C Interrupts
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
10012c8c:	4620      	mov	r0, r4
10012c8e:	f7ff fe15 	bl	100128bc <MXC_I2C_ClearTXFIFO>
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
10012c92:	4620      	mov	r0, r4
10012c94:	f7ff fe10 	bl	100128b8 <MXC_I2C_ClearRXFIFO>
    i2c->inten0 = 0;
    i2c->inten1 = 0;

    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012c98:	696a      	ldr	r2, [r5, #20]
    i2c->inten0 = 0;
10012c9a:	2300      	movs	r3, #0
10012c9c:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012c9e:	6163      	str	r3, [r4, #20]
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012ca0:	bb42      	cbnz	r2, 10012cf4 <MXC_I2C_RevA_MasterTransaction+0xa4>
10012ca2:	68ea      	ldr	r2, [r5, #12]
        // Load the slave address with write bit set
        i2c->fifo = (req->addr << 1) & ~0x1;
10012ca4:	686b      	ldr	r3, [r5, #4]
10012ca6:	005b      	lsls	r3, r3, #1
10012ca8:	62e3      	str	r3, [r4, #44]	@ 0x2c
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START;
10012caa:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012cac:	f043 0301 	orr.w	r3, r3, #1
10012cb0:	2600      	movs	r6, #0
10012cb2:	6323      	str	r3, [r4, #48]	@ 0x30

    while (req->tx_len > written) {
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
                                           req->tx_len - written);
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012cb4:	2720      	movs	r7, #32
10012cb6:	e004      	b.n	10012cc2 <MXC_I2C_RevA_MasterTransaction+0x72>
        }

        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012cb8:	68a3      	ldr	r3, [r4, #8]
10012cba:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012cbe:	d111      	bne.n	10012ce4 <MXC_I2C_RevA_MasterTransaction+0x94>
    while (req->tx_len > written) {
10012cc0:	68ea      	ldr	r2, [r5, #12]
10012cc2:	4296      	cmp	r6, r2
10012cc4:	d219      	bcs.n	10012cfa <MXC_I2C_RevA_MasterTransaction+0xaa>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
10012cc6:	68a3      	ldr	r3, [r4, #8]
10012cc8:	0698      	lsls	r0, r3, #26
10012cca:	d5f5      	bpl.n	10012cb8 <MXC_I2C_RevA_MasterTransaction+0x68>
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012ccc:	68a9      	ldr	r1, [r5, #8]
10012cce:	1b92      	subs	r2, r2, r6
10012cd0:	4431      	add	r1, r6
10012cd2:	4620      	mov	r0, r4
10012cd4:	f7ff fdee 	bl	100128b4 <MXC_I2C_WriteTXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012cd8:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012cda:	68a3      	ldr	r3, [r4, #8]
10012cdc:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012ce0:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012ce2:	d0ed      	beq.n	10012cc0 <MXC_I2C_RevA_MasterTransaction+0x70>
            req->tx_len = written;
10012ce4:	60ee      	str	r6, [r5, #12]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012ce6:	4620      	mov	r0, r4
10012ce8:	f7ff fde0 	bl	100128ac <MXC_I2C_Stop>
            return E_COMM_ERR;
10012cec:	f06f 0008 	mvn.w	r0, #8
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
        return E_COMM_ERR;
    }

    return E_NO_ERROR;
}
10012cf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012cf4:	68ea      	ldr	r2, [r5, #12]
10012cf6:	2a00      	cmp	r2, #0
10012cf8:	d1d4      	bne.n	10012ca4 <MXC_I2C_RevA_MasterTransaction+0x54>
    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c,
10012cfa:	2200      	movs	r2, #0
10012cfc:	2111      	movs	r1, #17
10012cfe:	4620      	mov	r0, r4
10012d00:	f7ff fdde 	bl	100128c0 <MXC_I2C_ClearFlags>
    if (req->rx_len != 0) {
10012d04:	696b      	ldr	r3, [r5, #20]
10012d06:	2b00      	cmp	r3, #0
10012d08:	d04a      	beq.n	10012da0 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (req->rx_len > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012d0a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->rxctrl1 = 0;
10012d0e:	bf88      	it	hi
10012d10:	2300      	movhi	r3, #0
            i2c->rxctrl1 = req->rx_len; // 0 for 256, otherwise number of bytes to read
10012d12:	6223      	str	r3, [r4, #32]
        MXC_I2C_Start((mxc_i2c_regs_t *)i2c); // Start or Restart as needed
10012d14:	4620      	mov	r0, r4
10012d16:	f7ff fdc7 	bl	100128a8 <MXC_I2C_Start>
        while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_RESTART) {}
10012d1a:	6b26      	ldr	r6, [r4, #48]	@ 0x30
10012d1c:	f016 0602 	ands.w	r6, r6, #2
10012d20:	d1fb      	bne.n	10012d1a <MXC_I2C_RevA_MasterTransaction+0xca>
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012d22:	686b      	ldr	r3, [r5, #4]
    while (req->rx_len > read) {
10012d24:	696a      	ldr	r2, [r5, #20]
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012d26:	005b      	lsls	r3, r3, #1
10012d28:	f043 0301 	orr.w	r3, r3, #1
10012d2c:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
10012d2e:	2a00      	cmp	r2, #0
10012d30:	d036      	beq.n	10012da0 <MXC_I2C_RevA_MasterTransaction+0x150>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012d32:	2710      	movs	r7, #16
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10012d34:	f04f 0801 	mov.w	r8, #1
10012d38:	e01d      	b.n	10012d76 <MXC_I2C_RevA_MasterTransaction+0x126>
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012d3a:	68a3      	ldr	r3, [r4, #8]
10012d3c:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
10012d40:	d129      	bne.n	10012d96 <MXC_I2C_RevA_MasterTransaction+0x146>
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
10012d42:	68a1      	ldr	r1, [r4, #8]
10012d44:	696a      	ldr	r2, [r5, #20]
10012d46:	07c9      	lsls	r1, r1, #31
10012d48:	d513      	bpl.n	10012d72 <MXC_I2C_RevA_MasterTransaction+0x122>
10012d4a:	4296      	cmp	r6, r2
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012d4c:	eba2 0106 	sub.w	r1, r2, r6
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
10012d50:	d90f      	bls.n	10012d72 <MXC_I2C_RevA_MasterTransaction+0x122>
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012d52:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
                i2c->rxctrl1 = 0;
10012d56:	bf8c      	ite	hi
10012d58:	6223      	strhi	r3, [r4, #32]
                i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
10012d5a:	6221      	strls	r1, [r4, #32]
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012d5c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012d5e:	f043 0302 	orr.w	r3, r3, #2
10012d62:	6323      	str	r3, [r4, #48]	@ 0x30
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012d64:	686b      	ldr	r3, [r5, #4]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10012d66:	f8c4 8008 	str.w	r8, [r4, #8]
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012d6a:	005b      	lsls	r3, r3, #1
10012d6c:	f043 0301 	orr.w	r3, r3, #1
10012d70:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
10012d72:	4296      	cmp	r6, r2
10012d74:	d214      	bcs.n	10012da0 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012d76:	68a3      	ldr	r3, [r4, #8]
10012d78:	f013 0f11 	tst.w	r3, #17
10012d7c:	d0dd      	beq.n	10012d3a <MXC_I2C_RevA_MasterTransaction+0xea>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
10012d7e:	6929      	ldr	r1, [r5, #16]
10012d80:	1b92      	subs	r2, r2, r6
10012d82:	4431      	add	r1, r6
10012d84:	4620      	mov	r0, r4
10012d86:	f7ff fd93 	bl	100128b0 <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012d8a:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012d8c:	68a3      	ldr	r3, [r4, #8]
10012d8e:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
            read +=
10012d92:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012d94:	d0d5      	beq.n	10012d42 <MXC_I2C_RevA_MasterTransaction+0xf2>
            req->rx_len = read;
10012d96:	616e      	str	r6, [r5, #20]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012d98:	4620      	mov	r0, r4
10012d9a:	f7ff fd87 	bl	100128ac <MXC_I2C_Stop>
            return E_COMM_ERR;
10012d9e:	e7a5      	b.n	10012cec <MXC_I2C_RevA_MasterTransaction+0x9c>
    if (req->restart) {
10012da0:	69ab      	ldr	r3, [r5, #24]
10012da2:	b173      	cbz	r3, 10012dc2 <MXC_I2C_RevA_MasterTransaction+0x172>
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012da4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012da6:	f043 0302 	orr.w	r3, r3, #2
10012daa:	6323      	str	r3, [r4, #48]	@ 0x30
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
10012dac:	68a3      	ldr	r3, [r4, #8]
10012dae:	07db      	lsls	r3, r3, #31
10012db0:	d5fc      	bpl.n	10012dac <MXC_I2C_RevA_MasterTransaction+0x15c>
    i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE | MXC_F_I2C_REVA_INTFL0_STOP;
10012db2:	2341      	movs	r3, #65	@ 0x41
10012db4:	60a3      	str	r3, [r4, #8]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012db6:	68a0      	ldr	r0, [r4, #8]
10012db8:	f410 40fe 	ands.w	r0, r0, #32512	@ 0x7f00
10012dbc:	d196      	bne.n	10012cec <MXC_I2C_RevA_MasterTransaction+0x9c>
}
10012dbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
10012dc2:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012dc4:	f043 0304 	orr.w	r3, r3, #4
10012dc8:	6323      	str	r3, [r4, #48]	@ 0x30
        while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_STOP)) {}
10012dca:	68a3      	ldr	r3, [r4, #8]
10012dcc:	065a      	lsls	r2, r3, #25
10012dce:	d5fc      	bpl.n	10012dca <MXC_I2C_RevA_MasterTransaction+0x17a>
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
10012dd0:	68a3      	ldr	r3, [r4, #8]
10012dd2:	07db      	lsls	r3, r3, #31
10012dd4:	d5ea      	bpl.n	10012dac <MXC_I2C_RevA_MasterTransaction+0x15c>
10012dd6:	e7ec      	b.n	10012db2 <MXC_I2C_RevA_MasterTransaction+0x162>
        return E_BAD_PARAM;
10012dd8:	f06f 0002 	mvn.w	r0, #2
10012ddc:	e7ef      	b.n	10012dbe <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_BAD_STATE;
10012dde:	f06f 0006 	mvn.w	r0, #6
10012de2:	e7ec      	b.n	10012dbe <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_NOT_SUPPORTED;
10012de4:	f06f 0010 	mvn.w	r0, #16
10012de8:	e7e9      	b.n	10012dbe <MXC_I2C_RevA_MasterTransaction+0x16e>
10012dea:	bf00      	nop
10012dec:	4001d000 	.word	0x4001d000

10012df0 <MXC_I2C_RevA_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_SetRXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int rxFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH) >>
10012df0:	6982      	ldr	r2, [r0, #24]
10012df2:	b2d2      	uxtb	r2, r2
                             MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH_POS;

    if (numBytes > rxFIFOlen) {
10012df4:	428a      	cmp	r2, r1
{
10012df6:	4603      	mov	r3, r0
    if (numBytes > rxFIFOlen) {
10012df8:	d307      	bcc.n	10012e0a <MXC_I2C_RevA_SetRXThreshold+0x1a>
        return E_BAD_PARAM;
    }

    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
10012dfa:	69c2      	ldr	r2, [r0, #28]
10012dfc:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10012e00:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10012e04:	2000      	movs	r0, #0
    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
10012e06:	61d9      	str	r1, [r3, #28]
    return E_NO_ERROR;
10012e08:	4770      	bx	lr
        return E_BAD_PARAM;
10012e0a:	f06f 0002 	mvn.w	r0, #2
}
10012e0e:	4770      	bx	lr

10012e10 <MXC_I2C_RevA_SetTXThreshold>:
    return (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_THD_LVL) >> MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS;
}

int MXC_I2C_RevA_SetTXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
10012e10:	6982      	ldr	r2, [r0, #24]
10012e12:	f3c2 2207 	ubfx	r2, r2, #8, #8
                             MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;

    if (numBytes > txFIFOlen) {
10012e16:	428a      	cmp	r2, r1
{
10012e18:	4603      	mov	r3, r0
    if (numBytes > txFIFOlen) {
10012e1a:	d307      	bcc.n	10012e2c <MXC_I2C_RevA_SetTXThreshold+0x1c>
        return E_BAD_PARAM;
    }

    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
10012e1c:	6a42      	ldr	r2, [r0, #36]	@ 0x24
10012e1e:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10012e22:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_TXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10012e26:	2000      	movs	r0, #0
    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
10012e28:	6259      	str	r1, [r3, #36]	@ 0x24
    return E_NO_ERROR;
10012e2a:	4770      	bx	lr
        return E_BAD_PARAM;
10012e2c:	f06f 0002 	mvn.w	r0, #2
}
10012e30:	4770      	bx	lr
10012e32:	bf00      	nop

10012e34 <MXC_I2C_RevA_MasterAsyncHandler>:
    MXC_I2C_RevA_AsyncCallback(i2c, E_ABORT);
    MXC_I2C_RevA_AsyncStop(i2c);
}

void MXC_I2C_RevA_MasterAsyncHandler(int i2cNum)
{
10012e34:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    unsigned int written = AsyncWritten[i2cNum];
10012e38:	f8df a298 	ldr.w	sl, [pc, #664]	@ 100130d4 <MXC_I2C_RevA_MasterAsyncHandler+0x2a0>
    unsigned int read = AsyncRead[i2cNum];
10012e3c:	f8df 9298 	ldr.w	r9, [pc, #664]	@ 100130d8 <MXC_I2C_RevA_MasterAsyncHandler+0x2a4>
    unsigned int written = AsyncWritten[i2cNum];
10012e40:	f85a 6020 	ldr.w	r6, [sl, r0, lsl #2]
    unsigned int read = AsyncRead[i2cNum];
10012e44:	f859 8020 	ldr.w	r8, [r9, r0, lsl #2]
{
10012e48:	4605      	mov	r5, r0
    mxc_i2c_reva_regs_t *i2c = (mxc_i2c_reva_regs_t *)MXC_I2C_GET_BASE(i2cNum);
10012e4a:	b320      	cbz	r0, 10012e96 <MXC_I2C_RevA_MasterAsyncHandler+0x62>
10012e4c:	2801      	cmp	r0, #1
10012e4e:	f000 809c 	beq.w	10012f8a <MXC_I2C_RevA_MasterAsyncHandler+0x156>
10012e52:	4ca2      	ldr	r4, [pc, #648]	@ (100130dc <MXC_I2C_RevA_MasterAsyncHandler+0x2a8>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012e54:	f8df b288 	ldr.w	fp, [pc, #648]	@ 100130e0 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    mxc_i2c_reva_regs_t *i2c = (mxc_i2c_reva_regs_t *)MXC_I2C_GET_BASE(i2cNum);
10012e58:	2802      	cmp	r0, #2
10012e5a:	bf0c      	ite	eq
10012e5c:	4623      	moveq	r3, r4
10012e5e:	2300      	movne	r3, #0
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012e60:	f85b 7020 	ldr.w	r7, [fp, r0, lsl #2]

    /* Check for errors */
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e64:	689b      	ldr	r3, [r3, #8]
10012e66:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012e6a:	f040 80b2 	bne.w	10012fd2 <MXC_I2C_RevA_MasterAsyncHandler+0x19e>

        return;
    }

    /* Write data to the TX FIFO */
    if (req->tx_len > written) {
10012e6e:	68fa      	ldr	r2, [r7, #12]
10012e70:	42b2      	cmp	r2, r6
10012e72:	4611      	mov	r1, r2
10012e74:	d82f      	bhi.n	10012ed6 <MXC_I2C_RevA_MasterAsyncHandler+0xa2>
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
        }
    }

    /* Read data in the RX FIFO */
    if (req->rx_len > read) {
10012e76:	697b      	ldr	r3, [r7, #20]
10012e78:	4543      	cmp	r3, r8
10012e7a:	d946      	bls.n	10012f0a <MXC_I2C_RevA_MasterAsyncHandler+0xd6>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012e7c:	68a1      	ldr	r1, [r4, #8]
10012e7e:	f011 0f11 	tst.w	r1, #17
10012e82:	d137      	bne.n	10012ef4 <MXC_I2C_RevA_MasterAsyncHandler+0xc0>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
        }
    }

    /* Done writing, still reading */
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012e84:	42b2      	cmp	r2, r6
10012e86:	f000 80eb 	beq.w	10013060 <MXC_I2C_RevA_MasterAsyncHandler+0x22c>

        /* Clear the async state */
        MXC_I2C_RevA_AsyncStop(i2c);

    } else {
        AsyncWritten[i2cNum] = written;
10012e8a:	f84a 6025 	str.w	r6, [sl, r5, lsl #2]
        AsyncRead[i2cNum] = read;
10012e8e:	f849 8025 	str.w	r8, [r9, r5, lsl #2]
    }
}
10012e92:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e96:	4c93      	ldr	r4, [pc, #588]	@ (100130e4 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012e98:	f8df b244 	ldr.w	fp, [pc, #580]	@ 100130e0 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e9c:	68a3      	ldr	r3, [r4, #8]
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012e9e:	f8db 7000 	ldr.w	r7, [fp]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012ea2:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012ea6:	d0e2      	beq.n	10012e6e <MXC_I2C_RevA_MasterAsyncHandler+0x3a>
        i2c->intfl0 = i2c->intfl0;
10012ea8:	68a3      	ldr	r3, [r4, #8]
10012eaa:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012eac:	6923      	ldr	r3, [r4, #16]
10012eae:	6123      	str	r3, [r4, #16]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012eb0:	4620      	mov	r0, r4
        i2c->inten0 = 0;
10012eb2:	60e5      	str	r5, [r4, #12]
        i2c->inten1 = 0;
10012eb4:	6165      	str	r5, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012eb6:	f7ff fcf9 	bl	100128ac <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10012eba:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
10012ebe:	69c3      	ldr	r3, [r0, #28]
10012ec0:	b113      	cbz	r3, 10012ec8 <MXC_I2C_RevA_MasterAsyncHandler+0x94>
        req->callback(req, retVal);
10012ec2:	f06f 0108 	mvn.w	r1, #8
10012ec6:	4798      	blx	r3
    i2c->inten0 = 0;
10012ec8:	60e5      	str	r5, [r4, #12]
    i2c->inten1 = 0;
10012eca:	6165      	str	r5, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012ecc:	68a3      	ldr	r3, [r4, #8]
10012ece:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012ed0:	6923      	ldr	r3, [r4, #16]
10012ed2:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012ed4:	e096      	b.n	10013004 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
10012ed6:	68a3      	ldr	r3, [r4, #8]
10012ed8:	0699      	lsls	r1, r3, #26
10012eda:	f100 8098 	bmi.w	1001300e <MXC_I2C_RevA_MasterAsyncHandler+0x1da>
            i2c->inten0 |= MXC_F_I2C_REVA_INTEN0_TX_THD;
10012ede:	68e3      	ldr	r3, [r4, #12]
10012ee0:	f043 0320 	orr.w	r3, r3, #32
10012ee4:	60e3      	str	r3, [r4, #12]
        if ((req->tx_len == written) && (req->rx_len)) {
10012ee6:	697b      	ldr	r3, [r7, #20]
    if (req->rx_len > read) {
10012ee8:	4598      	cmp	r8, r3
10012eea:	d2ce      	bcs.n	10012e8a <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012eec:	68a1      	ldr	r1, [r4, #8]
10012eee:	f011 0f11 	tst.w	r1, #17
10012ef2:	d0c7      	beq.n	10012e84 <MXC_I2C_RevA_MasterAsyncHandler+0x50>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
10012ef4:	6939      	ldr	r1, [r7, #16]
10012ef6:	eba3 0208 	sub.w	r2, r3, r8
10012efa:	4441      	add	r1, r8
10012efc:	4620      	mov	r0, r4
10012efe:	f7ff fcd7 	bl	100128b0 <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012f02:	2310      	movs	r3, #16
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012f04:	68f9      	ldr	r1, [r7, #12]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012f06:	60a3      	str	r3, [r4, #8]
            read +=
10012f08:	4480      	add	r8, r0
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012f0a:	42b1      	cmp	r1, r6
10012f0c:	d1bd      	bne.n	10012e8a <MXC_I2C_RevA_MasterAsyncHandler+0x56>
10012f0e:	697b      	ldr	r3, [r7, #20]
10012f10:	4543      	cmp	r3, r8
10012f12:	f040 80a5 	bne.w	10013060 <MXC_I2C_RevA_MasterAsyncHandler+0x22c>
        i2c->inten0 = 0;
10012f16:	2300      	movs	r3, #0
10012f18:	60e3      	str	r3, [r4, #12]
        i2c->inten1 = 0;
10012f1a:	6163      	str	r3, [r4, #20]
        i2c->intfl0 = i2c->intfl0;
10012f1c:	68a3      	ldr	r3, [r4, #8]
10012f1e:	60a3      	str	r3, [r4, #8]
        if (req->restart) {
10012f20:	69bb      	ldr	r3, [r7, #24]
        i2c->intfl1 = i2c->intfl1;
10012f22:	6922      	ldr	r2, [r4, #16]
10012f24:	6122      	str	r2, [r4, #16]
        if (req->restart) {
10012f26:	2b00      	cmp	r3, #0
10012f28:	f040 80b3 	bne.w	10013092 <MXC_I2C_RevA_MasterAsyncHandler+0x25e>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
10012f2c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012f2e:	f043 0304 	orr.w	r3, r3, #4
10012f32:	6323      	str	r3, [r4, #48]	@ 0x30
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012f34:	68a3      	ldr	r3, [r4, #8]
10012f36:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
10012f3a:	4b6a      	ldr	r3, [pc, #424]	@ (100130e4 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012f3c:	f000 80bc 	beq.w	100130b8 <MXC_I2C_RevA_MasterAsyncHandler+0x284>
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
10012f40:	429c      	cmp	r4, r3
10012f42:	f000 80da 	beq.w	100130fa <MXC_I2C_RevA_MasterAsyncHandler+0x2c6>
10012f46:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012f4a:	429c      	cmp	r4, r3
10012f4c:	f000 8105 	beq.w	1001315a <MXC_I2C_RevA_MasterAsyncHandler+0x326>
    mxc_i2c_reva_req_t *req =
10012f50:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
10012f54:	69c3      	ldr	r3, [r0, #28]
10012f56:	2b00      	cmp	r3, #0
10012f58:	f000 80e3 	beq.w	10013122 <MXC_I2C_RevA_MasterAsyncHandler+0x2ee>
        req->callback(req, retVal);
10012f5c:	f06f 0108 	mvn.w	r1, #8
10012f60:	4798      	blx	r3
    i2c->inten0 = 0;
10012f62:	2300      	movs	r3, #0
10012f64:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012f66:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012f68:	68a3      	ldr	r3, [r4, #8]
10012f6a:	60a3      	str	r3, [r4, #8]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012f6c:	4b5d      	ldr	r3, [pc, #372]	@ (100130e4 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
    i2c->intfl1 = i2c->intfl1;
10012f6e:	6922      	ldr	r2, [r4, #16]
10012f70:	6122      	str	r2, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012f72:	429c      	cmp	r4, r3
10012f74:	f000 80cd 	beq.w	10013112 <MXC_I2C_RevA_MasterAsyncHandler+0x2de>
10012f78:	4b5b      	ldr	r3, [pc, #364]	@ (100130e8 <MXC_I2C_RevA_MasterAsyncHandler+0x2b4>)
10012f7a:	429c      	cmp	r4, r3
10012f7c:	f000 80e4 	beq.w	10013148 <MXC_I2C_RevA_MasterAsyncHandler+0x314>
10012f80:	2202      	movs	r2, #2
10012f82:	2300      	movs	r3, #0
10012f84:	f84b 3022 	str.w	r3, [fp, r2, lsl #2]
}
10012f88:	e783      	b.n	10012e92 <MXC_I2C_RevA_MasterAsyncHandler+0x5e>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012f8a:	4c57      	ldr	r4, [pc, #348]	@ (100130e8 <MXC_I2C_RevA_MasterAsyncHandler+0x2b4>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012f8c:	f8df b150 	ldr.w	fp, [pc, #336]	@ 100130e0 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012f90:	68a3      	ldr	r3, [r4, #8]
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012f92:	f8db 7004 	ldr.w	r7, [fp, #4]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012f96:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012f9a:	f43f af68 	beq.w	10012e6e <MXC_I2C_RevA_MasterAsyncHandler+0x3a>
        i2c->intfl0 = i2c->intfl0;
10012f9e:	68a3      	ldr	r3, [r4, #8]
10012fa0:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012fa2:	6923      	ldr	r3, [r4, #16]
10012fa4:	6123      	str	r3, [r4, #16]
        i2c->inten0 = 0;
10012fa6:	2600      	movs	r6, #0
10012fa8:	60e6      	str	r6, [r4, #12]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012faa:	4620      	mov	r0, r4
        i2c->inten1 = 0;
10012fac:	6166      	str	r6, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012fae:	f7ff fc7d 	bl	100128ac <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10012fb2:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
10012fb6:	69c3      	ldr	r3, [r0, #28]
10012fb8:	2b00      	cmp	r3, #0
10012fba:	f000 80c7 	beq.w	1001314c <MXC_I2C_RevA_MasterAsyncHandler+0x318>
        req->callback(req, retVal);
10012fbe:	f06f 0108 	mvn.w	r1, #8
10012fc2:	4798      	blx	r3
    i2c->inten0 = 0;
10012fc4:	60e6      	str	r6, [r4, #12]
    i2c->inten1 = 0;
10012fc6:	6166      	str	r6, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012fc8:	68a3      	ldr	r3, [r4, #8]
10012fca:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012fcc:	6923      	ldr	r3, [r4, #16]
10012fce:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012fd0:	e018      	b.n	10013004 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
        i2c->intfl0 = i2c->intfl0;
10012fd2:	68a3      	ldr	r3, [r4, #8]
10012fd4:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012fd6:	6923      	ldr	r3, [r4, #16]
10012fd8:	6123      	str	r3, [r4, #16]
        i2c->inten0 = 0;
10012fda:	2500      	movs	r5, #0
10012fdc:	60e5      	str	r5, [r4, #12]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012fde:	4620      	mov	r0, r4
        i2c->inten1 = 0;
10012fe0:	6165      	str	r5, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012fe2:	f7ff fc63 	bl	100128ac <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10012fe6:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
10012fea:	69c3      	ldr	r3, [r0, #28]
10012fec:	2b00      	cmp	r3, #0
10012fee:	d07d      	beq.n	100130ec <MXC_I2C_RevA_MasterAsyncHandler+0x2b8>
        req->callback(req, retVal);
10012ff0:	f06f 0108 	mvn.w	r1, #8
10012ff4:	4798      	blx	r3
    i2c->inten0 = 0;
10012ff6:	60e5      	str	r5, [r4, #12]
    i2c->inten1 = 0;
10012ff8:	6165      	str	r5, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012ffa:	68a3      	ldr	r3, [r4, #8]
10012ffc:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012ffe:	6923      	ldr	r3, [r4, #16]
10013000:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013002:	2502      	movs	r5, #2
10013004:	2300      	movs	r3, #0
10013006:	f84b 3025 	str.w	r3, [fp, r5, lsl #2]
}
1001300a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
1001300e:	68b9      	ldr	r1, [r7, #8]
10013010:	1b92      	subs	r2, r2, r6
10013012:	4431      	add	r1, r6
10013014:	4620      	mov	r0, r4
10013016:	f7ff fc4d 	bl	100128b4 <MXC_I2C_WriteTXFIFO>
        if (written < req->tx_len) {
1001301a:	68fa      	ldr	r2, [r7, #12]
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
1001301c:	4406      	add	r6, r0
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
1001301e:	2320      	movs	r3, #32
        if (written < req->tx_len) {
10013020:	42b2      	cmp	r2, r6
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10013022:	60a3      	str	r3, [r4, #8]
        if (written < req->tx_len) {
10013024:	f63f af5b 	bhi.w	10012ede <MXC_I2C_RevA_MasterAsyncHandler+0xaa>
            i2c->inten0 &= ~(MXC_F_I2C_REVA_INTEN0_TX_THD);
10013028:	68e3      	ldr	r3, [r4, #12]
1001302a:	f023 0320 	bic.w	r3, r3, #32
1001302e:	60e3      	str	r3, [r4, #12]
        if ((req->tx_len == written) && (req->rx_len)) {
10013030:	697b      	ldr	r3, [r7, #20]
10013032:	f47f af59 	bne.w	10012ee8 <MXC_I2C_RevA_MasterAsyncHandler+0xb4>
10013036:	2b00      	cmp	r3, #0
10013038:	f43f af6a 	beq.w	10012f10 <MXC_I2C_RevA_MasterAsyncHandler+0xdc>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
1001303c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
1001303e:	f042 0202 	orr.w	r2, r2, #2
10013042:	6322      	str	r2, [r4, #48]	@ 0x30
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10013044:	2201      	movs	r2, #1
10013046:	60a2      	str	r2, [r4, #8]
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
10013048:	68e2      	ldr	r2, [r4, #12]
    if (req->rx_len > read) {
1001304a:	4598      	cmp	r8, r3
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
1001304c:	f042 0201 	orr.w	r2, r2, #1
10013050:	60e2      	str	r2, [r4, #12]
    if (req->rx_len > read) {
10013052:	f4bf af5d 	bcs.w	10012f10 <MXC_I2C_RevA_MasterAsyncHandler+0xdc>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10013056:	68a2      	ldr	r2, [r4, #8]
10013058:	f012 0f11 	tst.w	r2, #17
1001305c:	f47f af4a 	bne.w	10012ef4 <MXC_I2C_RevA_MasterAsyncHandler+0xc0>
        (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {
10013060:	68a2      	ldr	r2, [r4, #8]
    if ((req->tx_len == written) && (req->rx_len - read) &&
10013062:	07d2      	lsls	r2, r2, #31
10013064:	f57f af11 	bpl.w	10012e8a <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10013068:	2201      	movs	r2, #1
1001306a:	60a2      	str	r2, [r4, #8]
        if (read == 0) {
1001306c:	f1b8 0f00 	cmp.w	r8, #0
10013070:	d114      	bne.n	1001309c <MXC_I2C_RevA_MasterAsyncHandler+0x268>
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10013072:	687a      	ldr	r2, [r7, #4]
10013074:	0052      	lsls	r2, r2, #1
        if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10013076:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
1001307a:	f042 0201 	orr.w	r2, r2, #1
1001307e:	62e2      	str	r2, [r4, #44]	@ 0x2c
            i2c->rxctrl1 = 0;
10013080:	bf8c      	ite	hi
10013082:	f8c4 8020 	strhi.w	r8, [r4, #32]
            i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
10013086:	6223      	strls	r3, [r4, #32]
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_RX_THD | MXC_F_I2C_REVA_INTEN0_DONE);
10013088:	68e3      	ldr	r3, [r4, #12]
1001308a:	f043 0311 	orr.w	r3, r3, #17
1001308e:	60e3      	str	r3, [r4, #12]
10013090:	e6fb      	b.n	10012e8a <MXC_I2C_RevA_MasterAsyncHandler+0x56>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10013092:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10013094:	f043 0302 	orr.w	r3, r3, #2
10013098:	6323      	str	r3, [r4, #48]	@ 0x30
1001309a:	e74b      	b.n	10012f34 <MXC_I2C_RevA_MasterAsyncHandler+0x100>
        if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
1001309c:	eba3 0208 	sub.w	r2, r3, r8
100130a0:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
            i2c->rxctrl1 = 0;
100130a4:	bf88      	it	hi
100130a6:	2200      	movhi	r2, #0
        if (read < req->rx_len) {
100130a8:	4598      	cmp	r8, r3
            i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
100130aa:	6222      	str	r2, [r4, #32]
        if (read < req->rx_len) {
100130ac:	d3ec      	bcc.n	10013088 <MXC_I2C_RevA_MasterAsyncHandler+0x254>
            i2c->inten0 &= ~(MXC_F_I2C_REVA_INTEN0_RX_THD | MXC_F_I2C_REVA_INTEN0_DONE);
100130ae:	68e3      	ldr	r3, [r4, #12]
100130b0:	f023 0311 	bic.w	r3, r3, #17
100130b4:	60e3      	str	r3, [r4, #12]
100130b6:	e6e8      	b.n	10012e8a <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
100130b8:	429c      	cmp	r4, r3
100130ba:	d02c      	beq.n	10013116 <MXC_I2C_RevA_MasterAsyncHandler+0x2e2>
100130bc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100130c0:	429c      	cmp	r4, r3
100130c2:	d036      	beq.n	10013132 <MXC_I2C_RevA_MasterAsyncHandler+0x2fe>
    mxc_i2c_reva_req_t *req =
100130c4:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
100130c8:	69c3      	ldr	r3, [r0, #28]
100130ca:	b353      	cbz	r3, 10013122 <MXC_I2C_RevA_MasterAsyncHandler+0x2ee>
        req->callback(req, retVal);
100130cc:	2100      	movs	r1, #0
100130ce:	4798      	blx	r3
100130d0:	e747      	b.n	10012f62 <MXC_I2C_RevA_MasterAsyncHandler+0x12e>
100130d2:	bf00      	nop
100130d4:	20000fec 	.word	0x20000fec
100130d8:	20000fe0 	.word	0x20000fe0
100130dc:	4001f000 	.word	0x4001f000
100130e0:	20000ff8 	.word	0x20000ff8
100130e4:	4001d000 	.word	0x4001d000
100130e8:	4001e000 	.word	0x4001e000
    i2c->inten0 = 0;
100130ec:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
100130ee:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
100130f0:	68a3      	ldr	r3, [r4, #8]
100130f2:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
100130f4:	6923      	ldr	r3, [r4, #16]
100130f6:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100130f8:	e783      	b.n	10013002 <MXC_I2C_RevA_MasterAsyncHandler+0x1ce>
    mxc_i2c_reva_req_t *req =
100130fa:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
100130fe:	69c3      	ldr	r3, [r0, #28]
10013100:	2b00      	cmp	r3, #0
10013102:	f47f af2b 	bne.w	10012f5c <MXC_I2C_RevA_MasterAsyncHandler+0x128>
    i2c->inten0 = 0;
10013106:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10013108:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
1001310a:	68a3      	ldr	r3, [r4, #8]
1001310c:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
1001310e:	6923      	ldr	r3, [r4, #16]
10013110:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013112:	2200      	movs	r2, #0
10013114:	e735      	b.n	10012f82 <MXC_I2C_RevA_MasterAsyncHandler+0x14e>
    mxc_i2c_reva_req_t *req =
10013116:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
1001311a:	69c3      	ldr	r3, [r0, #28]
1001311c:	2b00      	cmp	r3, #0
1001311e:	d1d5      	bne.n	100130cc <MXC_I2C_RevA_MasterAsyncHandler+0x298>
10013120:	e7f1      	b.n	10013106 <MXC_I2C_RevA_MasterAsyncHandler+0x2d2>
    i2c->inten0 = 0;
10013122:	4a11      	ldr	r2, [pc, #68]	@ (10013168 <MXC_I2C_RevA_MasterAsyncHandler+0x334>)
10013124:	60d3      	str	r3, [r2, #12]
    i2c->inten1 = 0;
10013126:	6153      	str	r3, [r2, #20]
    i2c->intfl0 = i2c->intfl0;
10013128:	6893      	ldr	r3, [r2, #8]
1001312a:	6093      	str	r3, [r2, #8]
    i2c->intfl1 = i2c->intfl1;
1001312c:	6913      	ldr	r3, [r2, #16]
1001312e:	6113      	str	r3, [r2, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013130:	e726      	b.n	10012f80 <MXC_I2C_RevA_MasterAsyncHandler+0x14c>
    mxc_i2c_reva_req_t *req =
10013132:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
10013136:	69c3      	ldr	r3, [r0, #28]
10013138:	2b00      	cmp	r3, #0
1001313a:	d1c7      	bne.n	100130cc <MXC_I2C_RevA_MasterAsyncHandler+0x298>
    i2c->inten0 = 0;
1001313c:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
1001313e:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10013140:	68a3      	ldr	r3, [r4, #8]
10013142:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10013144:	6923      	ldr	r3, [r4, #16]
10013146:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013148:	2201      	movs	r2, #1
1001314a:	e71a      	b.n	10012f82 <MXC_I2C_RevA_MasterAsyncHandler+0x14e>
    i2c->inten0 = 0;
1001314c:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
1001314e:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10013150:	68a3      	ldr	r3, [r4, #8]
10013152:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10013154:	6923      	ldr	r3, [r4, #16]
10013156:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013158:	e754      	b.n	10013004 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
    mxc_i2c_reva_req_t *req =
1001315a:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
1001315e:	69c3      	ldr	r3, [r0, #28]
10013160:	2b00      	cmp	r3, #0
10013162:	f47f aefb 	bne.w	10012f5c <MXC_I2C_RevA_MasterAsyncHandler+0x128>
10013166:	e7e9      	b.n	1001313c <MXC_I2C_RevA_MasterAsyncHandler+0x308>
10013168:	4001f000 	.word	0x4001f000

1001316c <MXC_I2C_RevA_SlaveAsyncHandler>:

void MXC_I2C_RevA_SlaveAsyncHandler(mxc_i2c_reva_regs_t *i2c, mxc_i2c_reva_slave_handler_t callback,
                                    uint32_t *int_en, int *retVal)
{
1001316c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10013170:	4615      	mov	r5, r2
10013172:	460e      	mov	r6, r1
    // I2C_EVT_RX_THRESH
    // I2C_EVT_TX_THRESH
    // I2C_EVT_TRANS_COMP
    // I2C_EVT_UNDERFLOW
    // I2C_EVT_OVERFLOW
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
10013174:	6812      	ldr	r2, [r2, #0]
10013176:	49b2      	ldr	r1, [pc, #712]	@ (10013440 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d4>)
    uint32_t tFlags = i2c->intfl0;
10013178:	f8d0 9008 	ldr.w	r9, [r0, #8]
    *retVal = E_NO_ERROR;
1001317c:	2700      	movs	r7, #0
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
1001317e:	4011      	ands	r1, r2
    *retVal = E_NO_ERROR;
10013180:	601f      	str	r7, [r3, #0]
{
10013182:	4604      	mov	r4, r0
    uint32_t readFlag = i2c->ctrl & MXC_F_I2C_REVA_CTRL_READ;
10013184:	6807      	ldr	r7, [r0, #0]
{
10013186:	4698      	mov	r8, r3
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
10013188:	2900      	cmp	r1, #0
1001318a:	d15a      	bne.n	10013242 <MXC_I2C_RevA_SlaveAsyncHandler+0xd6>
                       MXC_F_I2C_REVA_INTFL0_ADDR_MATCH))) {
        // The STOPERR/STARTERR interrupt that's enabled here could fire before we are addressed
        // (fires anytime a stop/start is detected out of sequence).
        if (tFlags & MXC_I2C_REVA_ERROR) {
1001318c:	f419 4ffe 	tst.w	r9, #32512	@ 0x7f00
10013190:	f040 80cf 	bne.w	10013332 <MXC_I2C_RevA_SlaveAsyncHandler+0x1c6>
            int_en[0] = 0;
            int_en[1] = 0;
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
        }

        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013194:	06d3      	lsls	r3, r2, #27
10013196:	f140 81a4 	bpl.w	100134e2 <MXC_I2C_RevA_SlaveAsyncHandler+0x376>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_RX_THD) {
1001319a:	f019 0f10 	tst.w	r9, #16
1001319e:	f000 8148 	beq.w	10013432 <MXC_I2C_RevA_SlaveAsyncHandler+0x2c6>
                if (callback != NULL) {
100131a2:	2e00      	cmp	r6, #0
100131a4:	f000 815c 	beq.w	10013460 <MXC_I2C_RevA_SlaveAsyncHandler+0x2f4>
                    callback(i2c, MXC_I2C_REVA_EVT_RX_THRESH, NULL);
100131a8:	2200      	movs	r2, #0
100131aa:	2102      	movs	r1, #2
100131ac:	4620      	mov	r0, r4
100131ae:	47b0      	blx	r6
                }

                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
100131b0:	2310      	movs	r3, #16
100131b2:	60a3      	str	r3, [r4, #8]
            }

            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
100131b4:	6923      	ldr	r3, [r4, #16]
100131b6:	07da      	lsls	r2, r3, #31
100131b8:	d505      	bpl.n	100131c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x5a>
                if (callback != NULL) {
                    callback(i2c, MXC_I2C_REVA_EVT_OVERFLOW, NULL);
100131ba:	2200      	movs	r2, #0
100131bc:	2106      	movs	r1, #6
100131be:	4620      	mov	r0, r4
100131c0:	47b0      	blx	r6
                }

                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_RX_OV;
100131c2:	2301      	movs	r3, #1
100131c4:	6123      	str	r3, [r4, #16]
100131c6:	682a      	ldr	r2, [r5, #0]
            }
        }

        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
100131c8:	f248 0320 	movw	r3, #32800	@ 0x8020
100131cc:	4213      	tst	r3, r2
100131ce:	f000 80df 	beq.w	10013390 <MXC_I2C_RevA_SlaveAsyncHandler+0x224>
            int_en[1] & MXC_F_I2C_REVA_INTFL1_TX_UN) {
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_THD) {
100131d2:	f019 0f20 	tst.w	r9, #32
                }

                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
            }

            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100131d6:	f409 4a00 	and.w	sl, r9, #32768	@ 0x8000
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_THD) {
100131da:	f000 80fc 	beq.w	100133d6 <MXC_I2C_RevA_SlaveAsyncHandler+0x26a>
                if (callback != NULL) {
100131de:	2e00      	cmp	r6, #0
100131e0:	f000 8145 	beq.w	1001346e <MXC_I2C_RevA_SlaveAsyncHandler+0x302>
                    callback(i2c, MXC_I2C_REVA_EVT_TX_THRESH, NULL);
100131e4:	2103      	movs	r1, #3
100131e6:	2200      	movs	r2, #0
100131e8:	4620      	mov	r0, r4
100131ea:	47b0      	blx	r6
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
100131ec:	2320      	movs	r3, #32
100131ee:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
100131f0:	6923      	ldr	r3, [r4, #16]
100131f2:	0799      	lsls	r1, r3, #30
100131f4:	f100 80f5 	bmi.w	100133e2 <MXC_I2C_RevA_SlaveAsyncHandler+0x276>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100131f8:	f1ba 0f00 	cmp.w	sl, #0
100131fc:	f040 80fa 	bne.w	100133f4 <MXC_I2C_RevA_SlaveAsyncHandler+0x288>
                int_en[1] = 0;
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
            }
        }

        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10013200:	f019 0f40 	tst.w	r9, #64	@ 0x40
10013204:	f000 8168 	beq.w	100134d8 <MXC_I2C_RevA_SlaveAsyncHandler+0x36c>
            *retVal = E_NO_ERROR;
10013208:	f8c8 a000 	str.w	sl, [r8]

            if (callback != NULL) {
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
1001320c:	4642      	mov	r2, r8
1001320e:	2104      	movs	r1, #4
10013210:	4620      	mov	r0, r4
10013212:	47b0      	blx	r6
            }

            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
            int_en[0] = 0;
            int_en[1] = 0;
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013214:	4a8b      	ldr	r2, [pc, #556]	@ (10013444 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
            int_en[0] = 0;
10013216:	2300      	movs	r3, #0
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
10013218:	2140      	movs	r1, #64	@ 0x40
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001321a:	4294      	cmp	r4, r2
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
1001321c:	60a1      	str	r1, [r4, #8]
            int_en[0] = 0;
1001321e:	602b      	str	r3, [r5, #0]
10013220:	606b      	str	r3, [r5, #4]
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013222:	d00a      	beq.n	1001323a <MXC_I2C_RevA_SlaveAsyncHandler+0xce>
10013224:	4b88      	ldr	r3, [pc, #544]	@ (10013448 <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
10013226:	429c      	cmp	r4, r3
10013228:	f000 8131 	beq.w	1001348e <MXC_I2C_RevA_SlaveAsyncHandler+0x322>
1001322c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013230:	429c      	cmp	r4, r3
10013232:	bf0c      	ite	eq
10013234:	2302      	moveq	r3, #2
10013236:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
1001323a:	4a84      	ldr	r2, [pc, #528]	@ (1001344c <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
1001323c:	2100      	movs	r1, #0
1001323e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        }
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
10013242:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
10013246:	d011      	beq.n	1001326c <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
        if (callback != NULL) {
10013248:	b11e      	cbz	r6, 10013252 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
            callback(i2c, MXC_I2C_REVA_EVT_MASTER_WR, NULL);
1001324a:	2200      	movs	r2, #0
1001324c:	4611      	mov	r1, r2
1001324e:	4620      	mov	r0, r4
10013250:	47b0      	blx	r6
        }

        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
10013252:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
10013256:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10013258:	2308      	movs	r3, #8
1001325a:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
1001325c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
10013260:	60a3      	str	r3, [r4, #8]

        int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE | MXC_I2C_REVA_ERROR;
10013262:	f647 7311 	movw	r3, #32529	@ 0x7f11
10013266:	602b      	str	r3, [r5, #0]
10013268:	2301      	movs	r3, #1
1001326a:	606b      	str	r3, [r5, #4]
        int_en[1] = MXC_F_I2C_REVA_INTFL1_RX_OV;
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH) {
1001326c:	f419 0f00 	tst.w	r9, #8388608	@ 0x800000
10013270:	d00e      	beq.n	10013290 <MXC_I2C_RevA_SlaveAsyncHandler+0x124>
        if (callback != NULL) {
10013272:	b11e      	cbz	r6, 1001327c <MXC_I2C_RevA_SlaveAsyncHandler+0x110>
            callback(i2c, MXC_I2C_REVA_EVT_MASTER_RD, NULL);
10013274:	2200      	movs	r2, #0
10013276:	2101      	movs	r1, #1
10013278:	4620      	mov	r0, r4
1001327a:	47b0      	blx	r6
        }

        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH;
1001327c:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
10013280:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10013282:	2308      	movs	r3, #8
10013284:	60a3      	str	r3, [r4, #8]
        int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
10013286:	f64f 7320 	movw	r3, #65312	@ 0xff20
1001328a:	602b      	str	r3, [r5, #0]
1001328c:	2302      	movs	r3, #2
1001328e:	606b      	str	r3, [r5, #4]
                    MXC_I2C_REVA_ERROR;
        int_en[1] = MXC_F_I2C_REVA_INTFL1_TX_UN;
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_ADDR_MATCH) {
10013290:	f019 0f08 	tst.w	r9, #8
10013294:	d017      	beq.n	100132c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x15a>
        if (readFlag & MXC_F_I2C_REVA_CTRL_READ) {
10013296:	f417 6200 	ands.w	r2, r7, #2048	@ 0x800
1001329a:	f000 808c 	beq.w	100133b6 <MXC_I2C_RevA_SlaveAsyncHandler+0x24a>
            if (callback != NULL) {
1001329e:	b11e      	cbz	r6, 100132a8 <MXC_I2C_RevA_SlaveAsyncHandler+0x13c>
                callback(i2c, MXC_I2C_REVA_EVT_MASTER_RD, NULL);
100132a0:	2200      	movs	r2, #0
100132a2:	2101      	movs	r1, #1
100132a4:	4620      	mov	r0, r4
100132a6:	47b0      	blx	r6
            }

            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
100132a8:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100132ac:	2308      	movs	r3, #8
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
100132ae:	60a2      	str	r2, [r4, #8]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
100132b0:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100132b4:	60a3      	str	r3, [r4, #8]

            int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
100132b6:	f64f 7220 	movw	r2, #65312	@ 0xff20
100132ba:	2302      	movs	r3, #2
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
100132bc:	60a1      	str	r1, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
100132be:	602a      	str	r2, [r5, #0]
100132c0:	606b      	str	r3, [r5, #4]
        MXC_I2C_RevA_ClearRXFIFO(i2c);
        int_en[0] = 0;
        int_en[1] = 0;
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
    }
}
100132c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    } else if (tFlags & MXC_I2C_REVA_ERROR) {
100132c6:	f419 4ffe 	tst.w	r9, #32512	@ 0x7f00
100132ca:	d0fa      	beq.n	100132c2 <MXC_I2C_RevA_SlaveAsyncHandler+0x156>
        *retVal = E_COMM_ERR;
100132cc:	f06f 0308 	mvn.w	r3, #8
100132d0:	f8c8 3000 	str.w	r3, [r8]
        if (callback != NULL) {
100132d4:	b11e      	cbz	r6, 100132de <MXC_I2C_RevA_SlaveAsyncHandler+0x172>
            callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100132d6:	4642      	mov	r2, r8
100132d8:	2104      	movs	r1, #4
100132da:	4620      	mov	r0, r4
100132dc:	47b0      	blx	r6
    i2c->intfl1 = flags1;
100132de:	2307      	movs	r3, #7
    i2c->intfl0 = flags0;
100132e0:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
100132e4:	60a2      	str	r2, [r4, #8]
    i2c->intfl1 = flags1;
100132e6:	6123      	str	r3, [r4, #16]
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
100132e8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
100132ea:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
100132ee:	6263      	str	r3, [r4, #36]	@ 0x24
    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
100132f0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
100132f2:	061b      	lsls	r3, r3, #24
100132f4:	d4fc      	bmi.n	100132f0 <MXC_I2C_RevA_SlaveAsyncHandler+0x184>
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
100132f6:	69e3      	ldr	r3, [r4, #28]
100132f8:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
100132fc:	61e3      	str	r3, [r4, #28]
    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
100132fe:	69e3      	ldr	r3, [r4, #28]
10013300:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
10013304:	d1fb      	bne.n	100132fe <MXC_I2C_RevA_SlaveAsyncHandler+0x192>
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013306:	4a4f      	ldr	r2, [pc, #316]	@ (10013444 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
        int_en[0] = 0;
10013308:	602b      	str	r3, [r5, #0]
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001330a:	4294      	cmp	r4, r2
        int_en[0] = 0;
1001330c:	606b      	str	r3, [r5, #4]
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001330e:	d00a      	beq.n	10013326 <MXC_I2C_RevA_SlaveAsyncHandler+0x1ba>
10013310:	4b4d      	ldr	r3, [pc, #308]	@ (10013448 <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
10013312:	429c      	cmp	r4, r3
10013314:	f000 80bf 	beq.w	10013496 <MXC_I2C_RevA_SlaveAsyncHandler+0x32a>
10013318:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001331c:	429c      	cmp	r4, r3
1001331e:	bf14      	ite	ne
10013320:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
10013324:	2302      	moveq	r3, #2
10013326:	4a49      	ldr	r2, [pc, #292]	@ (1001344c <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
10013328:	2100      	movs	r1, #0
1001332a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
1001332e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            *retVal = E_COMM_ERR;
10013332:	f06f 0308 	mvn.w	r3, #8
10013336:	f8c8 3000 	str.w	r3, [r8]
            if (callback != NULL) {
1001333a:	b116      	cbz	r6, 10013342 <MXC_I2C_RevA_SlaveAsyncHandler+0x1d6>
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
1001333c:	4642      	mov	r2, r8
1001333e:	2104      	movs	r1, #4
10013340:	47b0      	blx	r6
            MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
10013342:	2207      	movs	r2, #7
10013344:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
10013348:	4620      	mov	r0, r4
1001334a:	f7ff fab9 	bl	100128c0 <MXC_I2C_ClearFlags>
            MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
1001334e:	4620      	mov	r0, r4
10013350:	f7ff fab4 	bl	100128bc <MXC_I2C_ClearTXFIFO>
            MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
10013354:	4620      	mov	r0, r4
10013356:	f7ff faaf 	bl	100128b8 <MXC_I2C_ClearRXFIFO>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001335a:	4a3a      	ldr	r2, [pc, #232]	@ (10013444 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
            int_en[0] = 0;
1001335c:	2300      	movs	r3, #0
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001335e:	4294      	cmp	r4, r2
            int_en[0] = 0;
10013360:	602b      	str	r3, [r5, #0]
10013362:	606b      	str	r3, [r5, #4]
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013364:	d00a      	beq.n	1001337c <MXC_I2C_RevA_SlaveAsyncHandler+0x210>
10013366:	4b38      	ldr	r3, [pc, #224]	@ (10013448 <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
10013368:	429c      	cmp	r4, r3
1001336a:	f000 8092 	beq.w	10013492 <MXC_I2C_RevA_SlaveAsyncHandler+0x326>
1001336e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013372:	429c      	cmp	r4, r3
10013374:	bf0c      	ite	eq
10013376:	2302      	moveq	r3, #2
10013378:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
1001337c:	4a33      	ldr	r2, [pc, #204]	@ (1001344c <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
1001337e:	2100      	movs	r1, #0
10013380:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013384:	682a      	ldr	r2, [r5, #0]
        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
10013386:	f248 0320 	movw	r3, #32800	@ 0x8020
1001338a:	4213      	tst	r3, r2
1001338c:	f47f af21 	bne.w	100131d2 <MXC_I2C_RevA_SlaveAsyncHandler+0x66>
            int_en[1] & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10013390:	686b      	ldr	r3, [r5, #4]
        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
10013392:	0798      	lsls	r0, r3, #30
10013394:	f53f af1d 	bmi.w	100131d2 <MXC_I2C_RevA_SlaveAsyncHandler+0x66>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10013398:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001339c:	f43f af51 	beq.w	10013242 <MXC_I2C_RevA_SlaveAsyncHandler+0xd6>
            *retVal = E_NO_ERROR;
100133a0:	2300      	movs	r3, #0
100133a2:	f8c8 3000 	str.w	r3, [r8]
            if (callback != NULL) {
100133a6:	2e00      	cmp	r6, #0
100133a8:	f43f af34 	beq.w	10013214 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100133ac:	4642      	mov	r2, r8
100133ae:	2104      	movs	r1, #4
100133b0:	4620      	mov	r0, r4
100133b2:	47b0      	blx	r6
100133b4:	e72e      	b.n	10013214 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
            if (callback != NULL) {
100133b6:	b116      	cbz	r6, 100133be <MXC_I2C_RevA_SlaveAsyncHandler+0x252>
                callback(i2c, MXC_I2C_REVA_EVT_MASTER_WR, NULL);
100133b8:	4611      	mov	r1, r2
100133ba:	4620      	mov	r0, r4
100133bc:	47b0      	blx	r6
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100133be:	2308      	movs	r3, #8
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH;
100133c0:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
100133c4:	60a1      	str	r1, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE |
100133c6:	f647 7211 	movw	r2, #32529	@ 0x7f11
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100133ca:	60a3      	str	r3, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE |
100133cc:	2301      	movs	r3, #1
100133ce:	602a      	str	r2, [r5, #0]
100133d0:	606b      	str	r3, [r5, #4]
}
100133d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
100133d6:	6923      	ldr	r3, [r4, #16]
100133d8:	f013 0302 	ands.w	r3, r3, #2
100133dc:	d038      	beq.n	10013450 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e4>
                if (callback != NULL) {
100133de:	2e00      	cmp	r6, #0
100133e0:	d05b      	beq.n	1001349a <MXC_I2C_RevA_SlaveAsyncHandler+0x32e>
                    callback(i2c, MXC_I2C_REVA_EVT_UNDERFLOW, NULL);
100133e2:	2200      	movs	r2, #0
100133e4:	2105      	movs	r1, #5
100133e6:	4620      	mov	r0, r4
100133e8:	47b0      	blx	r6
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
100133ea:	2302      	movs	r3, #2
100133ec:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100133ee:	f1ba 0f00 	cmp.w	sl, #0
100133f2:	d0d1      	beq.n	10013398 <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
                *retVal = E_NO_ERROR;
100133f4:	2300      	movs	r3, #0
100133f6:	f8c8 3000 	str.w	r3, [r8]
                    callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100133fa:	4642      	mov	r2, r8
100133fc:	2104      	movs	r1, #4
100133fe:	4620      	mov	r0, r4
10013400:	47b0      	blx	r6
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013402:	4a10      	ldr	r2, [pc, #64]	@ (10013444 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
                int_en[0] = 0;
10013404:	2300      	movs	r3, #0
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10013406:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001340a:	4294      	cmp	r4, r2
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
1001340c:	60a1      	str	r1, [r4, #8]
                int_en[0] = 0;
1001340e:	602b      	str	r3, [r5, #0]
10013410:	606b      	str	r3, [r5, #4]
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013412:	d009      	beq.n	10013428 <MXC_I2C_RevA_SlaveAsyncHandler+0x2bc>
10013414:	4b0c      	ldr	r3, [pc, #48]	@ (10013448 <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
10013416:	429c      	cmp	r4, r3
10013418:	d059      	beq.n	100134ce <MXC_I2C_RevA_SlaveAsyncHandler+0x362>
1001341a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001341e:	429c      	cmp	r4, r3
10013420:	bf0c      	ite	eq
10013422:	2302      	moveq	r3, #2
10013424:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
10013428:	4a08      	ldr	r2, [pc, #32]	@ (1001344c <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
1001342a:	2100      	movs	r1, #0
1001342c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
10013430:	e7b2      	b.n	10013398 <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013432:	6923      	ldr	r3, [r4, #16]
10013434:	07db      	lsls	r3, r3, #31
10013436:	d5a6      	bpl.n	10013386 <MXC_I2C_RevA_SlaveAsyncHandler+0x21a>
                if (callback != NULL) {
10013438:	2e00      	cmp	r6, #0
1001343a:	f47f aebe 	bne.w	100131ba <MXC_I2C_RevA_SlaveAsyncHandler+0x4e>
1001343e:	e6c0      	b.n	100131c2 <MXC_I2C_RevA_SlaveAsyncHandler+0x56>
10013440:	00c00008 	.word	0x00c00008
10013444:	4001d000 	.word	0x4001d000
10013448:	4001e000 	.word	0x4001e000
1001344c:	20000ff8 	.word	0x20000ff8
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10013450:	f1ba 0f00 	cmp.w	sl, #0
10013454:	d0a0      	beq.n	10013398 <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
                *retVal = E_NO_ERROR;
10013456:	f8c8 3000 	str.w	r3, [r8]
                if (callback != NULL) {
1001345a:	2e00      	cmp	r6, #0
1001345c:	d0d1      	beq.n	10013402 <MXC_I2C_RevA_SlaveAsyncHandler+0x296>
1001345e:	e7cc      	b.n	100133fa <MXC_I2C_RevA_SlaveAsyncHandler+0x28e>
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10013460:	2310      	movs	r3, #16
10013462:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013464:	6923      	ldr	r3, [r4, #16]
10013466:	07d9      	lsls	r1, r3, #31
10013468:	f53f aeab 	bmi.w	100131c2 <MXC_I2C_RevA_SlaveAsyncHandler+0x56>
1001346c:	e6ab      	b.n	100131c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x5a>
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
1001346e:	2320      	movs	r3, #32
10013470:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10013472:	6923      	ldr	r3, [r4, #16]
10013474:	079a      	lsls	r2, r3, #30
10013476:	d421      	bmi.n	100134bc <MXC_I2C_RevA_SlaveAsyncHandler+0x350>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10013478:	f1ba 0f00 	cmp.w	sl, #0
1001347c:	d123      	bne.n	100134c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x35a>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
1001347e:	f019 0f40 	tst.w	r9, #64	@ 0x40
10013482:	d126      	bne.n	100134d2 <MXC_I2C_RevA_SlaveAsyncHandler+0x366>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
10013484:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
10013488:	f47f aee3 	bne.w	10013252 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
1001348c:	e6ee      	b.n	1001326c <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001348e:	2301      	movs	r3, #1
10013490:	e6d3      	b.n	1001323a <MXC_I2C_RevA_SlaveAsyncHandler+0xce>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013492:	2301      	movs	r3, #1
10013494:	e772      	b.n	1001337c <MXC_I2C_RevA_SlaveAsyncHandler+0x210>
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013496:	2301      	movs	r3, #1
10013498:	e745      	b.n	10013326 <MXC_I2C_RevA_SlaveAsyncHandler+0x1ba>
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
1001349a:	2302      	movs	r3, #2
1001349c:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
1001349e:	f1ba 0f00 	cmp.w	sl, #0
100134a2:	d110      	bne.n	100134c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x35a>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
100134a4:	f019 0f40 	tst.w	r9, #64	@ 0x40
100134a8:	d113      	bne.n	100134d2 <MXC_I2C_RevA_SlaveAsyncHandler+0x366>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
100134aa:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
100134ae:	f47f aed0 	bne.w	10013252 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH) {
100134b2:	f419 0f00 	tst.w	r9, #8388608	@ 0x800000
100134b6:	f47f aee1 	bne.w	1001327c <MXC_I2C_RevA_SlaveAsyncHandler+0x110>
100134ba:	e6e9      	b.n	10013290 <MXC_I2C_RevA_SlaveAsyncHandler+0x124>
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
100134bc:	2302      	movs	r3, #2
100134be:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100134c0:	f1ba 0f00 	cmp.w	sl, #0
100134c4:	d0db      	beq.n	1001347e <MXC_I2C_RevA_SlaveAsyncHandler+0x312>
                *retVal = E_NO_ERROR;
100134c6:	2300      	movs	r3, #0
100134c8:	f8c8 3000 	str.w	r3, [r8]
                if (callback != NULL) {
100134cc:	e799      	b.n	10013402 <MXC_I2C_RevA_SlaveAsyncHandler+0x296>
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100134ce:	2301      	movs	r3, #1
100134d0:	e7aa      	b.n	10013428 <MXC_I2C_RevA_SlaveAsyncHandler+0x2bc>
            *retVal = E_NO_ERROR;
100134d2:	f8c8 6000 	str.w	r6, [r8]
            if (callback != NULL) {
100134d6:	e69d      	b.n	10013214 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
100134d8:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
100134dc:	f47f aeb5 	bne.w	1001324a <MXC_I2C_RevA_SlaveAsyncHandler+0xde>
100134e0:	e6c4      	b.n	1001326c <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
100134e2:	686b      	ldr	r3, [r5, #4]
100134e4:	07d8      	lsls	r0, r3, #31
100134e6:	f53f ae58 	bmi.w	1001319a <MXC_I2C_RevA_SlaveAsyncHandler+0x2e>
100134ea:	e74c      	b.n	10013386 <MXC_I2C_RevA_SlaveAsyncHandler+0x21a>

100134ec <MXC_I2C_RevA_AsyncHandler>:

void MXC_I2C_RevA_AsyncHandler(mxc_i2c_reva_regs_t *i2c, uint32_t interruptCheck)
{
100134ec:	b530      	push	{r4, r5, lr}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
100134ee:	4b17      	ldr	r3, [pc, #92]	@ (1001354c <MXC_I2C_RevA_AsyncHandler+0x60>)
100134f0:	4298      	cmp	r0, r3
{
100134f2:	b085      	sub	sp, #20
100134f4:	4604      	mov	r4, r0
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
100134f6:	d024      	beq.n	10013542 <MXC_I2C_RevA_AsyncHandler+0x56>
100134f8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100134fc:	4298      	cmp	r0, r3
100134fe:	d005      	beq.n	1001350c <MXC_I2C_RevA_AsyncHandler+0x20>
10013500:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013504:	4298      	cmp	r0, r3
10013506:	d01e      	beq.n	10013546 <MXC_I2C_RevA_AsyncHandler+0x5a>
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);

        i2c->inten0 = int_en[0];
        i2c->inten1 = int_en[1];
    }
}
10013508:	b005      	add	sp, #20
1001350a:	bd30      	pop	{r4, r5, pc}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
1001350c:	2001      	movs	r0, #1
    if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE) {
1001350e:	6823      	ldr	r3, [r4, #0]
10013510:	079b      	lsls	r3, r3, #30
10013512:	d504      	bpl.n	1001351e <MXC_I2C_RevA_AsyncHandler+0x32>
}
10013514:	b005      	add	sp, #20
10013516:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        MXC_I2C_RevA_MasterAsyncHandler(i2cNum);
1001351a:	f7ff bc8b 	b.w	10012e34 <MXC_I2C_RevA_MasterAsyncHandler>
        int_en[0] = i2c->inten0;
1001351e:	68e5      	ldr	r5, [r4, #12]
        mxc_i2c_reva_slave_handler_t callback = (mxc_i2c_reva_slave_handler_t)AsyncRequests[i2cNum];
10013520:	4b0b      	ldr	r3, [pc, #44]	@ (10013550 <MXC_I2C_RevA_AsyncHandler+0x64>)
        int_en[1] = i2c->inten1;
10013522:	6962      	ldr	r2, [r4, #20]
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);
10013524:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
        int_en[1] = i2c->inten1;
10013528:	e9cd 5202 	strd	r5, r2, [sp, #8]
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);
1001352c:	ab01      	add	r3, sp, #4
1001352e:	aa02      	add	r2, sp, #8
10013530:	4620      	mov	r0, r4
10013532:	f7ff fe1b 	bl	1001316c <MXC_I2C_RevA_SlaveAsyncHandler>
        i2c->inten1 = int_en[1];
10013536:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        i2c->inten0 = int_en[0];
1001353a:	60e2      	str	r2, [r4, #12]
        i2c->inten1 = int_en[1];
1001353c:	6163      	str	r3, [r4, #20]
}
1001353e:	b005      	add	sp, #20
10013540:	bd30      	pop	{r4, r5, pc}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
10013542:	2000      	movs	r0, #0
10013544:	e7e3      	b.n	1001350e <MXC_I2C_RevA_AsyncHandler+0x22>
10013546:	2002      	movs	r0, #2
10013548:	e7e1      	b.n	1001350e <MXC_I2C_RevA_AsyncHandler+0x22>
1001354a:	bf00      	nop
1001354c:	4001d000 	.word	0x4001d000
10013550:	20000ff8 	.word	0x20000ff8

10013554 <MXC_ICC_Enable>:
    return MXC_ICC_RevA_ID((mxc_icc_reva_regs_t *)icc, cid);
}

void MXC_ICC_Enable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Enable((mxc_icc_reva_regs_t *)icc);
10013554:	f000 b802 	b.w	1001355c <MXC_ICC_RevA_Enable>

10013558 <MXC_ICC_Disable>:
}

void MXC_ICC_Disable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Disable((mxc_icc_reva_regs_t *)icc);
10013558:	f000 b818 	b.w	1001358c <MXC_ICC_RevA_Disable>

1001355c <MXC_ICC_RevA_Enable>:
}

void MXC_ICC_RevA_Enable(mxc_icc_reva_regs_t *icc)
{
    // Invalidate cache and wait until ready
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
1001355c:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
10013560:	2201      	movs	r2, #1
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10013562:	f023 0301 	bic.w	r3, r3, #1
10013566:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
1001356a:	f8c0 2700 	str.w	r2, [r0, #1792]	@ 0x700
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
1001356e:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100

    while (!(MXC_ICC_Ready(icc))) {}
10013572:	03da      	lsls	r2, r3, #15
10013574:	d5fb      	bpl.n	1001356e <MXC_ICC_RevA_Enable+0x12>

    // Enable Cache
    icc->ctrl |= MXC_F_ICC_REVA_CTRL_EN;
10013576:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
1001357a:	f043 0301 	orr.w	r3, r3, #1
1001357e:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10013582:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    while (!(MXC_ICC_Ready(icc))) {}
10013586:	03db      	lsls	r3, r3, #15
10013588:	d5fb      	bpl.n	10013582 <MXC_ICC_RevA_Enable+0x26>
}
1001358a:	4770      	bx	lr

1001358c <MXC_ICC_RevA_Disable>:

void MXC_ICC_RevA_Disable(mxc_icc_reva_regs_t *icc)
{
    // Disable Cache
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
1001358c:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
10013590:	f023 0301 	bic.w	r3, r3, #1
10013594:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
}
10013598:	4770      	bx	lr
1001359a:	bf00      	nop

1001359c <MXC_UART_Shutdown>:

    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
}

int MXC_UART_Shutdown(mxc_uart_regs_t *uart)
{
1001359c:	b508      	push	{r3, lr}
    switch (MXC_UART_GET_IDX(uart)) {
1001359e:	4b16      	ldr	r3, [pc, #88]	@ (100135f8 <MXC_UART_Shutdown+0x5c>)
100135a0:	4298      	cmp	r0, r3
100135a2:	d010      	beq.n	100135c6 <MXC_UART_Shutdown+0x2a>
100135a4:	4b15      	ldr	r3, [pc, #84]	@ (100135fc <MXC_UART_Shutdown+0x60>)
100135a6:	4298      	cmp	r0, r3
100135a8:	d014      	beq.n	100135d4 <MXC_UART_Shutdown+0x38>
100135aa:	4b15      	ldr	r3, [pc, #84]	@ (10013600 <MXC_UART_Shutdown+0x64>)
100135ac:	4298      	cmp	r0, r3
100135ae:	d018      	beq.n	100135e2 <MXC_UART_Shutdown+0x46>
100135b0:	4b14      	ldr	r3, [pc, #80]	@ (10013604 <MXC_UART_Shutdown+0x68>)
100135b2:	4298      	cmp	r0, r3
100135b4:	d11c      	bne.n	100135f0 <MXC_UART_Shutdown+0x54>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
        break;

    case 3:
        MXC_SYS_Reset_Periph(MXC_SYS_RESET_UART3);
100135b6:	2044      	movs	r0, #68	@ 0x44
100135b8:	f7fe fec0 	bl	1001233c <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART3);
100135bc:	2044      	movs	r0, #68	@ 0x44
100135be:	f7fe fe01 	bl	100121c4 <MXC_SYS_ClockDisable>

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
100135c2:	2000      	movs	r0, #0
}
100135c4:	bd08      	pop	{r3, pc}
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART0);
100135c6:	200b      	movs	r0, #11
100135c8:	f7fe feb8 	bl	1001233c <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART0);
100135cc:	2009      	movs	r0, #9
100135ce:	f7fe fdf9 	bl	100121c4 <MXC_SYS_ClockDisable>
        break;
100135d2:	e7f6      	b.n	100135c2 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART1);
100135d4:	200c      	movs	r0, #12
100135d6:	f7fe feb1 	bl	1001233c <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART1);
100135da:	200a      	movs	r0, #10
100135dc:	f7fe fdf2 	bl	100121c4 <MXC_SYS_ClockDisable>
        break;
100135e0:	e7ef      	b.n	100135c2 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
100135e2:	201c      	movs	r0, #28
100135e4:	f7fe feaa 	bl	1001233c <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
100135e8:	2021      	movs	r0, #33	@ 0x21
100135ea:	f7fe fdeb 	bl	100121c4 <MXC_SYS_ClockDisable>
        break;
100135ee:	e7e8      	b.n	100135c2 <MXC_UART_Shutdown+0x26>
        return E_BAD_PARAM;
100135f0:	f06f 0002 	mvn.w	r0, #2
}
100135f4:	bd08      	pop	{r3, pc}
100135f6:	bf00      	nop
100135f8:	40042000 	.word	0x40042000
100135fc:	40043000 	.word	0x40043000
10013600:	40044000 	.word	0x40044000
10013604:	40081400 	.word	0x40081400

10013608 <MXC_UART_Init>:
{
10013608:	b570      	push	{r4, r5, r6, lr}
1001360a:	4604      	mov	r4, r0
1001360c:	460e      	mov	r6, r1
1001360e:	4615      	mov	r5, r2
    retval = MXC_UART_Shutdown(uart);
10013610:	f7ff ffc4 	bl	1001359c <MXC_UART_Shutdown>
    if (retval) {
10013614:	bba8      	cbnz	r0, 10013682 <MXC_UART_Init+0x7a>
    switch (clock) {
10013616:	2d02      	cmp	r5, #2
10013618:	d02d      	beq.n	10013676 <MXC_UART_Init+0x6e>
1001361a:	2d04      	cmp	r5, #4
1001361c:	d018      	beq.n	10013650 <MXC_UART_Init+0x48>
    switch (MXC_UART_GET_IDX(uart)) {
1001361e:	4b20      	ldr	r3, [pc, #128]	@ (100136a0 <MXC_UART_Init+0x98>)
10013620:	429c      	cmp	r4, r3
10013622:	d01b      	beq.n	1001365c <MXC_UART_Init+0x54>
10013624:	4b1f      	ldr	r3, [pc, #124]	@ (100136a4 <MXC_UART_Init+0x9c>)
10013626:	429c      	cmp	r4, r3
10013628:	d02c      	beq.n	10013684 <MXC_UART_Init+0x7c>
1001362a:	4b1f      	ldr	r3, [pc, #124]	@ (100136a8 <MXC_UART_Init+0xa0>)
1001362c:	429c      	cmp	r4, r3
1001362e:	d030      	beq.n	10013692 <MXC_UART_Init+0x8a>
10013630:	4b1e      	ldr	r3, [pc, #120]	@ (100136ac <MXC_UART_Init+0xa4>)
10013632:	429c      	cmp	r4, r3
10013634:	d123      	bne.n	1001367e <MXC_UART_Init+0x76>
        MXC_GPIO_Config(&gpio_cfg_uart3);
10013636:	481e      	ldr	r0, [pc, #120]	@ (100136b0 <MXC_UART_Init+0xa8>)
10013638:	f7fe ff1a 	bl	10012470 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART3);
1001363c:	2044      	movs	r0, #68	@ 0x44
1001363e:	f7fe fde1 	bl	10012204 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10013642:	462a      	mov	r2, r5
10013644:	4631      	mov	r1, r6
10013646:	4620      	mov	r0, r4
}
10013648:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1001364c:	f000 b8f8 	b.w	10013840 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_ERTCO);
10013650:	2006      	movs	r0, #6
10013652:	f7fe fdf9 	bl	10012248 <MXC_SYS_ClockSourceEnable>
    switch (MXC_UART_GET_IDX(uart)) {
10013656:	4b12      	ldr	r3, [pc, #72]	@ (100136a0 <MXC_UART_Init+0x98>)
10013658:	429c      	cmp	r4, r3
1001365a:	d1e3      	bne.n	10013624 <MXC_UART_Init+0x1c>
        MXC_GPIO_Config(&gpio_cfg_uart0);
1001365c:	4815      	ldr	r0, [pc, #84]	@ (100136b4 <MXC_UART_Init+0xac>)
1001365e:	f7fe ff07 	bl	10012470 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART0);
10013662:	2009      	movs	r0, #9
10013664:	f7fe fdce 	bl	10012204 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10013668:	462a      	mov	r2, r5
1001366a:	4631      	mov	r1, r6
1001366c:	4620      	mov	r0, r4
}
1001366e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10013672:	f000 b8e5 	b.w	10013840 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_IBRO);
10013676:	2005      	movs	r0, #5
10013678:	f7fe fde6 	bl	10012248 <MXC_SYS_ClockSourceEnable>
        break;
1001367c:	e7cf      	b.n	1001361e <MXC_UART_Init+0x16>
        return E_BAD_PARAM;
1001367e:	f06f 0002 	mvn.w	r0, #2
}
10013682:	bd70      	pop	{r4, r5, r6, pc}
        MXC_GPIO_Config(&gpio_cfg_uart1);
10013684:	480c      	ldr	r0, [pc, #48]	@ (100136b8 <MXC_UART_Init+0xb0>)
10013686:	f7fe fef3 	bl	10012470 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART1);
1001368a:	200a      	movs	r0, #10
1001368c:	f7fe fdba 	bl	10012204 <MXC_SYS_ClockEnable>
        break;
10013690:	e7d7      	b.n	10013642 <MXC_UART_Init+0x3a>
        MXC_GPIO_Config(&gpio_cfg_uart2);
10013692:	480a      	ldr	r0, [pc, #40]	@ (100136bc <MXC_UART_Init+0xb4>)
10013694:	f7fe feec 	bl	10012470 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART2);
10013698:	2021      	movs	r0, #33	@ 0x21
1001369a:	f7fe fdb3 	bl	10012204 <MXC_SYS_ClockEnable>
        break;
1001369e:	e7d0      	b.n	10013642 <MXC_UART_Init+0x3a>
100136a0:	40042000 	.word	0x40042000
100136a4:	40043000 	.word	0x40043000
100136a8:	40044000 	.word	0x40044000
100136ac:	40081400 	.word	0x40081400
100136b0:	100239a8 	.word	0x100239a8
100136b4:	100239cc 	.word	0x100239cc
100136b8:	100239c0 	.word	0x100239c0
100136bc:	100239b4 	.word	0x100239b4

100136c0 <MXC_UART_SetFrequency>:
}

int MXC_UART_SetFrequency(mxc_uart_regs_t *uart, unsigned int baud, mxc_uart_clock_t clock)
{
    int frequency, clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX(uart) < 0) {
100136c0:	4b31      	ldr	r3, [pc, #196]	@ (10013788 <MXC_UART_SetFrequency+0xc8>)
100136c2:	4298      	cmp	r0, r3
{
100136c4:	b510      	push	{r4, lr}
100136c6:	4604      	mov	r4, r0
    if (MXC_UART_GET_IDX(uart) < 0) {
100136c8:	d015      	beq.n	100136f6 <MXC_UART_SetFrequency+0x36>
100136ca:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100136ce:	4298      	cmp	r0, r3
100136d0:	d011      	beq.n	100136f6 <MXC_UART_SetFrequency+0x36>
100136d2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100136d6:	4298      	cmp	r0, r3
100136d8:	d00d      	beq.n	100136f6 <MXC_UART_SetFrequency+0x36>
100136da:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
100136de:	4298      	cmp	r0, r3
100136e0:	d106      	bne.n	100136f0 <MXC_UART_SetFrequency+0x30>
    }

    // check if the uart is LPUART
    if (uart == MXC_UART3) {
        // OSR default value
        uart->osr = 5;
100136e2:	2305      	movs	r3, #5

        switch (clock) {
100136e4:	2a02      	cmp	r2, #2
        uart->osr = 5;
100136e6:	6143      	str	r3, [r0, #20]
        switch (clock) {
100136e8:	d014      	beq.n	10013714 <MXC_UART_SetFrequency+0x54>
100136ea:	2a04      	cmp	r2, #4
100136ec:	d032      	beq.n	10013754 <MXC_UART_SetFrequency+0x94>
100136ee:	b18a      	cbz	r2, 10013714 <MXC_UART_SetFrequency+0x54>
        return E_BAD_PARAM;
100136f0:	f06f 0002 	mvn.w	r0, #2
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
    }

    return frequency;
}
100136f4:	bd10      	pop	{r4, pc}
        if (clock == MXC_UART_ERTCO_CLK) {
100136f6:	2a04      	cmp	r2, #4
100136f8:	d0fa      	beq.n	100136f0 <MXC_UART_SetFrequency+0x30>
        frequency = MXC_UART_RevB_SetFrequency((mxc_uart_revb_regs_t *)uart, baud, clock);
100136fa:	4620      	mov	r0, r4
100136fc:	f000 f8d8 	bl	100138b0 <MXC_UART_RevB_SetFrequency>
    if (frequency > 0) {
10013700:	2800      	cmp	r0, #0
10013702:	ddf7      	ble.n	100136f4 <MXC_UART_SetFrequency+0x34>
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
10013704:	6823      	ldr	r3, [r4, #0]
10013706:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
1001370a:	6023      	str	r3, [r4, #0]
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
1001370c:	6823      	ldr	r3, [r4, #0]
1001370e:	031b      	lsls	r3, r3, #12
10013710:	d5fc      	bpl.n	1001370c <MXC_UART_SetFrequency+0x4c>
}
10013712:	bd10      	pop	{r4, pc}
            clkDiv = ((IBRO_FREQ) / baud);
10013714:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
10013718:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((IBRO_FREQ) % baud);
1001371c:	fb01 f203 	mul.w	r2, r1, r3
10013720:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        if (!clkDiv || mod > (baud / 2)) {
10013724:	b113      	cbz	r3, 1001372c <MXC_UART_SetFrequency+0x6c>
10013726:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1001372a:	d900      	bls.n	1001372e <MXC_UART_SetFrequency+0x6e>
            clkDiv++;
1001372c:	3301      	adds	r3, #1
        uart->clkdiv = clkDiv;
1001372e:	4a17      	ldr	r2, [pc, #92]	@ (1001378c <MXC_UART_SetFrequency+0xcc>)
10013730:	6113      	str	r3, [r2, #16]
        return E_BAD_PARAM;
    }

    // check if UARt is LP UART
    if (uart == MXC_UART3) {
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
10013732:	6810      	ldr	r0, [r2, #0]
10013734:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
10013738:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
1001373c:	d005      	beq.n	1001374a <MXC_UART_SetFrequency+0x8a>
            periphClock = ERTCO_FREQ * 2;
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
1001373e:	6813      	ldr	r3, [r2, #0]
10013740:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10013744:	d1d4      	bne.n	100136f0 <MXC_UART_SetFrequency+0x30>
10013746:	f44f 00e1 	mov.w	r0, #7372800	@ 0x708000
                   MXC_S_UART_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
            periphClock = IBRO_FREQ;
        } else {
            return E_BAD_PARAM;
        }
        return (periphClock / uart->clkdiv);
1001374a:	4b10      	ldr	r3, [pc, #64]	@ (1001378c <MXC_UART_SetFrequency+0xcc>)
1001374c:	691b      	ldr	r3, [r3, #16]
1001374e:	fbb0 f0f3 	udiv	r0, r0, r3
10013752:	e7d5      	b.n	10013700 <MXC_UART_SetFrequency+0x40>
            uart->ctrl |= MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10013754:	6803      	ldr	r3, [r0, #0]
10013756:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
1001375a:	6003      	str	r3, [r0, #0]
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
1001375c:	6803      	ldr	r3, [r0, #0]
            if (baud > 2400) {
1001375e:	f5b1 6f16 	cmp.w	r1, #2400	@ 0x960
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
10013762:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
10013766:	6003      	str	r3, [r0, #0]
            if (baud > 2400) {
10013768:	d90a      	bls.n	10013780 <MXC_UART_SetFrequency+0xc0>
                uart->osr = 0;
1001376a:	2300      	movs	r3, #0
1001376c:	6143      	str	r3, [r0, #20]
            clkDiv = ((ERTCO_FREQ * 2) / baud);
1001376e:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
10013772:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((ERTCO_FREQ * 2) % baud);
10013776:	fb01 f203 	mul.w	r2, r1, r3
1001377a:	f5c2 3280 	rsb	r2, r2, #65536	@ 0x10000
1001377e:	e7d1      	b.n	10013724 <MXC_UART_SetFrequency+0x64>
                uart->osr = 1;
10013780:	2301      	movs	r3, #1
10013782:	6143      	str	r3, [r0, #20]
10013784:	e7f3      	b.n	1001376e <MXC_UART_SetFrequency+0xae>
10013786:	bf00      	nop
10013788:	40042000 	.word	0x40042000
1001378c:	40081400 	.word	0x40081400

10013790 <MXC_UART_GetFrequency>:
    if (MXC_UART_GET_IDX(uart) < 0) {
10013790:	4b12      	ldr	r3, [pc, #72]	@ (100137dc <MXC_UART_GetFrequency+0x4c>)
10013792:	4298      	cmp	r0, r3
10013794:	d01c      	beq.n	100137d0 <MXC_UART_GetFrequency+0x40>
10013796:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001379a:	4298      	cmp	r0, r3
1001379c:	d018      	beq.n	100137d0 <MXC_UART_GetFrequency+0x40>
1001379e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100137a2:	4298      	cmp	r0, r3
100137a4:	d014      	beq.n	100137d0 <MXC_UART_GetFrequency+0x40>
100137a6:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
100137aa:	4298      	cmp	r0, r3
100137ac:	d112      	bne.n	100137d4 <MXC_UART_GetFrequency+0x44>
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
100137ae:	6803      	ldr	r3, [r0, #0]
100137b0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
100137b4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
100137b8:	d005      	beq.n	100137c6 <MXC_UART_GetFrequency+0x36>
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
100137ba:	6803      	ldr	r3, [r0, #0]
100137bc:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
100137c0:	d108      	bne.n	100137d4 <MXC_UART_GetFrequency+0x44>
100137c2:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        return (periphClock / uart->clkdiv);
100137c6:	4a06      	ldr	r2, [pc, #24]	@ (100137e0 <MXC_UART_GetFrequency+0x50>)
100137c8:	6910      	ldr	r0, [r2, #16]
100137ca:	fbb3 f0f0 	udiv	r0, r3, r0
100137ce:	4770      	bx	lr
    } else {
        return MXC_UART_RevB_GetFrequency((mxc_uart_revb_regs_t *)uart);
100137d0:	f000 b8ba 	b.w	10013948 <MXC_UART_RevB_GetFrequency>
        return E_BAD_PARAM;
100137d4:	f06f 0002 	mvn.w	r0, #2
    }
}
100137d8:	4770      	bx	lr
100137da:	bf00      	nop
100137dc:	40042000 	.word	0x40042000
100137e0:	40081400 	.word	0x40081400

100137e4 <MXC_UART_SetDataSize>:

int MXC_UART_SetDataSize(mxc_uart_regs_t *uart, int dataSize)
{
    return MXC_UART_RevB_SetDataSize((mxc_uart_revb_regs_t *)uart, dataSize);
100137e4:	f000 b8f0 	b.w	100139c8 <MXC_UART_RevB_SetDataSize>

100137e8 <MXC_UART_SetStopBits>:
}

int MXC_UART_SetStopBits(mxc_uart_regs_t *uart, mxc_uart_stop_t stopBits)
{
    return MXC_UART_RevB_SetStopBits((mxc_uart_revb_regs_t *)uart, stopBits);
100137e8:	f000 b90e 	b.w	10013a08 <MXC_UART_RevB_SetStopBits>

100137ec <MXC_UART_SetParity>:
}

int MXC_UART_SetParity(mxc_uart_regs_t *uart, mxc_uart_parity_t parity)
{
    return MXC_UART_RevB_SetParity((mxc_uart_revb_regs_t *)uart, parity);
100137ec:	f000 b930 	b.w	10013a50 <MXC_UART_RevB_SetParity>

100137f0 <MXC_UART_ReadCharacterRaw>:
    return MXC_UART_RevB_AbortTransmission((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_ReadCharacterRaw(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_ReadCharacterRaw((mxc_uart_revb_regs_t *)uart);
100137f0:	f000 b984 	b.w	10013afc <MXC_UART_RevB_ReadCharacterRaw>

100137f4 <MXC_UART_WriteCharacterRaw>:
}

int MXC_UART_WriteCharacterRaw(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_RevB_WriteCharacterRaw((mxc_uart_revb_regs_t *)uart, character);
100137f4:	f000 b99e 	b.w	10013b34 <MXC_UART_RevB_WriteCharacterRaw>

100137f8 <MXC_UART_ReadCharacter>:
}

int MXC_UART_ReadCharacter(mxc_uart_regs_t *uart)
{
    return MXC_UART_Common_ReadCharacter(uart);
100137f8:	f000 b808 	b.w	1001380c <MXC_UART_Common_ReadCharacter>

100137fc <MXC_UART_WriteCharacter>:
}

int MXC_UART_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_Common_WriteCharacter(uart, character);
100137fc:	f000 b812 	b.w	10013824 <MXC_UART_Common_WriteCharacter>

10013800 <MXC_UART_GetRXFIFOAvailable>:
    return MXC_UART_RevB_ReadRXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetRXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetRXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10013800:	f000 b9b6 	b.w	10013b70 <MXC_UART_RevB_GetRXFIFOAvailable>

10013804 <MXC_UART_GetTXFIFOAvailable>:
    return MXC_UART_RevB_WriteTXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetTXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetTXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10013804:	f000 b9b8 	b.w	10013b78 <MXC_UART_RevB_GetTXFIFOAvailable>

10013808 <MXC_UART_SetRXThreshold>:
    return MXC_UART_RevB_ClearTXFIFO((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_SetRXThreshold(mxc_uart_regs_t *uart, unsigned int numBytes)
{
    return MXC_UART_RevB_SetRXThreshold((mxc_uart_revb_regs_t *)uart, numBytes);
10013808:	f000 b9bc 	b.w	10013b84 <MXC_UART_RevB_SetRXThreshold>

1001380c <MXC_UART_Common_ReadCharacter>:

#include "uart_common.h"
#include "uart.h"

int MXC_UART_Common_ReadCharacter(mxc_uart_regs_t *uart)
{
1001380c:	b510      	push	{r4, lr}
1001380e:	4604      	mov	r4, r0
    // Wait until FIFO has a character ready.
    while (MXC_UART_GetRXFIFOAvailable(uart) < 1) {}
10013810:	4620      	mov	r0, r4
10013812:	f7ff fff5 	bl	10013800 <MXC_UART_GetRXFIFOAvailable>
10013816:	2800      	cmp	r0, #0
10013818:	d0fa      	beq.n	10013810 <MXC_UART_Common_ReadCharacter+0x4>

    // Read the character using the non-blocking function.
    return MXC_UART_ReadCharacterRaw(uart);
1001381a:	4620      	mov	r0, r4
}
1001381c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_UART_ReadCharacterRaw(uart);
10013820:	f7ff bfe6 	b.w	100137f0 <MXC_UART_ReadCharacterRaw>

10013824 <MXC_UART_Common_WriteCharacter>:

int MXC_UART_Common_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
10013824:	b538      	push	{r3, r4, r5, lr}
10013826:	4604      	mov	r4, r0
10013828:	460d      	mov	r5, r1
    // Wait until FIFO has space for the character.
    while (MXC_UART_GetTXFIFOAvailable(uart) < 1) {}
1001382a:	4620      	mov	r0, r4
1001382c:	f7ff ffea 	bl	10013804 <MXC_UART_GetTXFIFOAvailable>
10013830:	2800      	cmp	r0, #0
10013832:	d0fa      	beq.n	1001382a <MXC_UART_Common_WriteCharacter+0x6>

    // Write the character using the non-blocking function.
    return MXC_UART_WriteCharacterRaw(uart, character);
10013834:	4629      	mov	r1, r5
10013836:	4620      	mov	r0, r4
}
10013838:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    return MXC_UART_WriteCharacterRaw(uart, character);
1001383c:	f7ff bfda 	b.w	100137f4 <MXC_UART_WriteCharacterRaw>

10013840 <MXC_UART_RevB_Init>:
/* ************************************************************************* */
int MXC_UART_RevB_Init(mxc_uart_revb_regs_t *uart, unsigned int baud, mxc_uart_revb_clock_t clock)
{
    int err;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013840:	4b1a      	ldr	r3, [pc, #104]	@ (100138ac <MXC_UART_RevB_Init+0x6c>)
10013842:	4298      	cmp	r0, r3
{
10013844:	b570      	push	{r4, r5, r6, lr}
10013846:	4604      	mov	r4, r0
10013848:	460d      	mov	r5, r1
1001384a:	4616      	mov	r6, r2
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1001384c:	d00b      	beq.n	10013866 <MXC_UART_RevB_Init+0x26>
1001384e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013852:	4298      	cmp	r0, r3
10013854:	d007      	beq.n	10013866 <MXC_UART_RevB_Init+0x26>
10013856:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001385a:	4298      	cmp	r0, r3
1001385c:	d003      	beq.n	10013866 <MXC_UART_RevB_Init+0x26>
1001385e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013862:	4298      	cmp	r0, r3
10013864:	d11f      	bne.n	100138a6 <MXC_UART_RevB_Init+0x66>
        return E_BAD_PARAM;
    }

    // Initialize UART
    if ((err = MXC_UART_SetRXThreshold((mxc_uart_regs_t *)uart, 1)) !=
10013866:	2101      	movs	r1, #1
10013868:	4620      	mov	r0, r4
1001386a:	f7ff ffcd 	bl	10013808 <MXC_UART_SetRXThreshold>
1001386e:	b100      	cbz	r0, 10013872 <MXC_UART_RevB_Init+0x32>
        E_NO_ERROR) {
        return err;
    }

    return E_NO_ERROR;
}
10013870:	bd70      	pop	{r4, r5, r6, pc}
    if ((err = MXC_UART_SetDataSize((mxc_uart_regs_t *)uart, 8)) !=
10013872:	2108      	movs	r1, #8
10013874:	4620      	mov	r0, r4
10013876:	f7ff ffb5 	bl	100137e4 <MXC_UART_SetDataSize>
1001387a:	2800      	cmp	r0, #0
1001387c:	d1f8      	bne.n	10013870 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetParity((mxc_uart_regs_t *)uart, MXC_UART_PARITY_DISABLE)) !=
1001387e:	4601      	mov	r1, r0
10013880:	4620      	mov	r0, r4
10013882:	f7ff ffb3 	bl	100137ec <MXC_UART_SetParity>
10013886:	2800      	cmp	r0, #0
10013888:	d1f2      	bne.n	10013870 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetStopBits((mxc_uart_regs_t *)uart, MXC_UART_STOP_1)) != E_NO_ERROR) {
1001388a:	4601      	mov	r1, r0
1001388c:	4620      	mov	r0, r4
1001388e:	f7ff ffab 	bl	100137e8 <MXC_UART_SetStopBits>
10013892:	2800      	cmp	r0, #0
10013894:	d1ec      	bne.n	10013870 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetFrequency((mxc_uart_regs_t *)uart, baud, (mxc_uart_clock_t)clock)) <
10013896:	4632      	mov	r2, r6
10013898:	4629      	mov	r1, r5
1001389a:	4620      	mov	r0, r4
1001389c:	f7ff ff10 	bl	100136c0 <MXC_UART_SetFrequency>
100138a0:	ea00 70e0 	and.w	r0, r0, r0, asr #31
}
100138a4:	bd70      	pop	{r4, r5, r6, pc}
        return E_BAD_PARAM;
100138a6:	f06f 0002 	mvn.w	r0, #2
}
100138aa:	bd70      	pop	{r4, r5, r6, pc}
100138ac:	40042000 	.word	0x40042000

100138b0 <MXC_UART_RevB_SetFrequency>:

int MXC_UART_RevB_SetFrequency(mxc_uart_revb_regs_t *uart, unsigned int baud,
                               mxc_uart_revb_clock_t clock)
{
    unsigned clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100138b0:	4b22      	ldr	r3, [pc, #136]	@ (1001393c <MXC_UART_RevB_SetFrequency+0x8c>)
100138b2:	4298      	cmp	r0, r3
100138b4:	d00b      	beq.n	100138ce <MXC_UART_RevB_SetFrequency+0x1e>
100138b6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100138ba:	4298      	cmp	r0, r3
100138bc:	d007      	beq.n	100138ce <MXC_UART_RevB_SetFrequency+0x1e>
100138be:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100138c2:	4298      	cmp	r0, r3
100138c4:	d003      	beq.n	100138ce <MXC_UART_RevB_SetFrequency+0x1e>
100138c6:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
100138ca:	4298      	cmp	r0, r3
100138cc:	d132      	bne.n	10013934 <MXC_UART_RevB_SetFrequency+0x84>
        return E_BAD_PARAM;
    }

    // OSR default value
    uart->osr = 5;
100138ce:	2305      	movs	r3, #5

    switch (clock) {
100138d0:	2a01      	cmp	r2, #1
{
100138d2:	b410      	push	{r4}
    uart->osr = 5;
100138d4:	6143      	str	r3, [r0, #20]
    switch (clock) {
100138d6:	d023      	beq.n	10013920 <MXC_UART_RevB_SetFrequency+0x70>
100138d8:	2a02      	cmp	r2, #2
100138da:	d014      	beq.n	10013906 <MXC_UART_RevB_SetFrequency+0x56>
100138dc:	b11a      	cbz	r2, 100138e6 <MXC_UART_RevB_SetFrequency+0x36>
    if (!clkDiv || mod > (baud / 2)) {
        clkDiv++;
    }
    uart->clkdiv = clkDiv;
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
}
100138de:	f06f 0002 	mvn.w	r0, #2
100138e2:	bc10      	pop	{r4}
100138e4:	4770      	bx	lr
        clkDiv = (PeripheralClock / baud);
100138e6:	4b16      	ldr	r3, [pc, #88]	@ (10013940 <MXC_UART_RevB_SetFrequency+0x90>)
100138e8:	681a      	ldr	r2, [r3, #0]
100138ea:	0852      	lsrs	r2, r2, #1
100138ec:	fbb2 f3f1 	udiv	r3, r2, r1
        mod = (PeripheralClock % baud);
100138f0:	fb01 2213 	mls	r2, r1, r3, r2
    if (!clkDiv || mod > (baud / 2)) {
100138f4:	b113      	cbz	r3, 100138fc <MXC_UART_RevB_SetFrequency+0x4c>
100138f6:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
100138fa:	d900      	bls.n	100138fe <MXC_UART_RevB_SetFrequency+0x4e>
        clkDiv++;
100138fc:	3301      	adds	r3, #1
}
100138fe:	bc10      	pop	{r4}
    uart->clkdiv = clkDiv;
10013900:	6103      	str	r3, [r0, #16]
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
10013902:	f7ff bf45 	b.w	10013790 <MXC_UART_GetFrequency>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10013906:	6804      	ldr	r4, [r0, #0]
        clkDiv = (IBRO_FREQ / baud);
10013908:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1001390c:	f444 3400 	orr.w	r4, r4, #131072	@ 0x20000
        clkDiv = (IBRO_FREQ / baud);
10013910:	fbb3 f3f1 	udiv	r3, r3, r1
        mod = (IBRO_FREQ % baud);
10013914:	fb01 f203 	mul.w	r2, r1, r3
10013918:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1001391c:	6004      	str	r4, [r0, #0]
        break;
1001391e:	e7e9      	b.n	100138f4 <MXC_UART_RevB_SetFrequency+0x44>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10013920:	6804      	ldr	r4, [r0, #0]
        clkDiv = UART_EXTCLK_FREQ / baud;
10013922:	4a08      	ldr	r2, [pc, #32]	@ (10013944 <MXC_UART_RevB_SetFrequency+0x94>)
10013924:	fbb2 f3f1 	udiv	r3, r2, r1
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10013928:	f444 3480 	orr.w	r4, r4, #65536	@ 0x10000
1001392c:	6004      	str	r4, [r0, #0]
        mod = UART_EXTCLK_FREQ % baud;
1001392e:	fb01 2213 	mls	r2, r1, r3, r2
        break;
10013932:	e7df      	b.n	100138f4 <MXC_UART_RevB_SetFrequency+0x44>
}
10013934:	f06f 0002 	mvn.w	r0, #2
10013938:	4770      	bx	lr
1001393a:	bf00      	nop
1001393c:	40042000 	.word	0x40042000
10013940:	20001768 	.word	0x20001768
10013944:	047868c0 	.word	0x047868c0

10013948 <MXC_UART_RevB_GetFrequency>:

int MXC_UART_RevB_GetFrequency(mxc_uart_revb_regs_t *uart)
{
    int periphClock = 0;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013948:	4b1c      	ldr	r3, [pc, #112]	@ (100139bc <MXC_UART_RevB_GetFrequency+0x74>)
1001394a:	4298      	cmp	r0, r3
1001394c:	d00b      	beq.n	10013966 <MXC_UART_RevB_GetFrequency+0x1e>
1001394e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013952:	4298      	cmp	r0, r3
10013954:	d007      	beq.n	10013966 <MXC_UART_RevB_GetFrequency+0x1e>
10013956:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001395a:	4298      	cmp	r0, r3
1001395c:	d003      	beq.n	10013966 <MXC_UART_RevB_GetFrequency+0x1e>
1001395e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013962:	4298      	cmp	r0, r3
10013964:	d122      	bne.n	100139ac <MXC_UART_RevB_GetFrequency+0x64>
        return E_BAD_PARAM;
    }

    if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10013966:	6803      	ldr	r3, [r0, #0]
10013968:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1001396c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
10013970:	d017      	beq.n	100139a2 <MXC_UART_RevB_GetFrequency+0x5a>
        MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
        periphClock = UART_EXTCLK_FREQ;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10013972:	6803      	ldr	r3, [r0, #0]
10013974:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10013978:	d00c      	beq.n	10013994 <MXC_UART_RevB_GetFrequency+0x4c>
               MXC_S_UART_REVB_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
        periphClock = PeripheralClock;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2) {
1001397a:	6803      	ldr	r3, [r0, #0]
1001397c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10013980:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
10013984:	bf08      	it	eq
10013986:	f44f 03e1 	moveq.w	r3, #7372800	@ 0x708000
1001398a:	d112      	bne.n	100139b2 <MXC_UART_RevB_GetFrequency+0x6a>
#endif
    } else {
        return E_BAD_PARAM;
    }

    return (periphClock / uart->clkdiv);
1001398c:	6900      	ldr	r0, [r0, #16]
1001398e:	fbb3 f0f0 	udiv	r0, r3, r0
10013992:	4770      	bx	lr
        periphClock = PeripheralClock;
10013994:	4b0a      	ldr	r3, [pc, #40]	@ (100139c0 <MXC_UART_RevB_GetFrequency+0x78>)
    return (periphClock / uart->clkdiv);
10013996:	6900      	ldr	r0, [r0, #16]
        periphClock = PeripheralClock;
10013998:	681b      	ldr	r3, [r3, #0]
1001399a:	085b      	lsrs	r3, r3, #1
    return (periphClock / uart->clkdiv);
1001399c:	fbb3 f0f0 	udiv	r0, r3, r0
100139a0:	4770      	bx	lr
100139a2:	4b08      	ldr	r3, [pc, #32]	@ (100139c4 <MXC_UART_RevB_GetFrequency+0x7c>)
100139a4:	6900      	ldr	r0, [r0, #16]
100139a6:	fbb3 f0f0 	udiv	r0, r3, r0
100139aa:	4770      	bx	lr
        return E_BAD_PARAM;
100139ac:	f06f 0002 	mvn.w	r0, #2
}
100139b0:	4770      	bx	lr
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK3) {
100139b2:	6803      	ldr	r3, [r0, #0]
        return E_BAD_PARAM;
100139b4:	f06f 0002 	mvn.w	r0, #2
        return E_BAD_PARAM;
100139b8:	4770      	bx	lr
100139ba:	bf00      	nop
100139bc:	40042000 	.word	0x40042000
100139c0:	20001768 	.word	0x20001768
100139c4:	047868c0 	.word	0x047868c0

100139c8 <MXC_UART_RevB_SetDataSize>:

int MXC_UART_RevB_SetDataSize(mxc_uart_revb_regs_t *uart, int dataSize)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100139c8:	4a0e      	ldr	r2, [pc, #56]	@ (10013a04 <MXC_UART_RevB_SetDataSize+0x3c>)
100139ca:	4290      	cmp	r0, r2
{
100139cc:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100139ce:	d00b      	beq.n	100139e8 <MXC_UART_RevB_SetDataSize+0x20>
100139d0:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100139d4:	4290      	cmp	r0, r2
100139d6:	d007      	beq.n	100139e8 <MXC_UART_RevB_SetDataSize+0x20>
100139d8:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100139dc:	4290      	cmp	r0, r2
100139de:	d003      	beq.n	100139e8 <MXC_UART_RevB_SetDataSize+0x20>
100139e0:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
100139e4:	4290      	cmp	r0, r2
100139e6:	d10a      	bne.n	100139fe <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    if (dataSize < 5 || dataSize > 8) {
100139e8:	3905      	subs	r1, #5
100139ea:	2903      	cmp	r1, #3
100139ec:	d807      	bhi.n	100139fe <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    dataSize = (dataSize - 5) << MXC_F_UART_REVB_CTRL_CHAR_SIZE_POS;

    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
100139ee:	681a      	ldr	r2, [r3, #0]
100139f0:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
100139f4:	ea42 2281 	orr.w	r2, r2, r1, lsl #10

    return E_NO_ERROR;
100139f8:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
100139fa:	601a      	str	r2, [r3, #0]
    return E_NO_ERROR;
100139fc:	4770      	bx	lr
        return E_BAD_PARAM;
100139fe:	f06f 0002 	mvn.w	r0, #2
}
10013a02:	4770      	bx	lr
10013a04:	40042000 	.word	0x40042000

10013a08 <MXC_UART_RevB_SetStopBits>:

int MXC_UART_RevB_SetStopBits(mxc_uart_revb_regs_t *uart, mxc_uart_stop_t stopBits)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013a08:	4b10      	ldr	r3, [pc, #64]	@ (10013a4c <MXC_UART_RevB_SetStopBits+0x44>)
10013a0a:	4298      	cmp	r0, r3
10013a0c:	d00b      	beq.n	10013a26 <MXC_UART_RevB_SetStopBits+0x1e>
10013a0e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013a12:	4298      	cmp	r0, r3
10013a14:	d007      	beq.n	10013a26 <MXC_UART_RevB_SetStopBits+0x1e>
10013a16:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013a1a:	4298      	cmp	r0, r3
10013a1c:	d003      	beq.n	10013a26 <MXC_UART_RevB_SetStopBits+0x1e>
10013a1e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013a22:	4298      	cmp	r0, r3
10013a24:	d108      	bne.n	10013a38 <MXC_UART_RevB_SetStopBits+0x30>
        return E_BAD_PARAM;
    }

    switch (stopBits) {
10013a26:	b151      	cbz	r1, 10013a3e <MXC_UART_RevB_SetStopBits+0x36>
10013a28:	2901      	cmp	r1, #1
10013a2a:	d105      	bne.n	10013a38 <MXC_UART_RevB_SetStopBits+0x30>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
                     0 << MXC_F_UART_REVB_CTRL_STOPBITS_POS);
        break;

    case MXC_UART_STOP_2:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
10013a2c:	6803      	ldr	r3, [r0, #0]
10013a2e:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
10013a32:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10013a34:	2000      	movs	r0, #0
10013a36:	4770      	bx	lr
10013a38:	f06f 0002 	mvn.w	r0, #2
}
10013a3c:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
10013a3e:	6803      	ldr	r3, [r0, #0]
10013a40:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10013a44:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
10013a46:	2000      	movs	r0, #0
10013a48:	4770      	bx	lr
10013a4a:	bf00      	nop
10013a4c:	40042000 	.word	0x40042000

10013a50 <MXC_UART_RevB_SetParity>:

int MXC_UART_RevB_SetParity(mxc_uart_revb_regs_t *uart, mxc_uart_parity_t parity)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013a50:	4b29      	ldr	r3, [pc, #164]	@ (10013af8 <MXC_UART_RevB_SetParity+0xa8>)
10013a52:	4298      	cmp	r0, r3
10013a54:	d00b      	beq.n	10013a6e <MXC_UART_RevB_SetParity+0x1e>
10013a56:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013a5a:	4298      	cmp	r0, r3
10013a5c:	d007      	beq.n	10013a6e <MXC_UART_RevB_SetParity+0x1e>
10013a5e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013a62:	4298      	cmp	r0, r3
10013a64:	d003      	beq.n	10013a6e <MXC_UART_RevB_SetParity+0x1e>
10013a66:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013a6a:	4298      	cmp	r0, r3
10013a6c:	d141      	bne.n	10013af2 <MXC_UART_RevB_SetParity+0xa2>
        return E_BAD_PARAM;
    }

    switch (parity) {
10013a6e:	2904      	cmp	r1, #4
10013a70:	d83f      	bhi.n	10013af2 <MXC_UART_RevB_SetParity+0xa2>
10013a72:	e8df f001 	tbb	[pc, r1]
10013a76:	1711      	.short	0x1711
10013a78:	3124      	.short	0x3124
10013a7a:	03          	.byte	0x03
10013a7b:	00          	.byte	0x00
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
        break;

    case MXC_UART_PARITY_ODD_1:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10013a7c:	6803      	ldr	r3, [r0, #0]
10013a7e:	f043 0310 	orr.w	r3, r3, #16
10013a82:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10013a84:	6803      	ldr	r3, [r0, #0]
10013a86:	f043 0320 	orr.w	r3, r3, #32
10013a8a:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10013a8c:	6803      	ldr	r3, [r0, #0]
10013a8e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013a92:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10013a94:	2000      	movs	r0, #0
10013a96:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 0 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10013a98:	6803      	ldr	r3, [r0, #0]
10013a9a:	f023 0310 	bic.w	r3, r3, #16
10013a9e:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
10013aa0:	2000      	movs	r0, #0
10013aa2:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10013aa4:	6803      	ldr	r3, [r0, #0]
10013aa6:	f043 0310 	orr.w	r3, r3, #16
10013aaa:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10013aac:	6803      	ldr	r3, [r0, #0]
10013aae:	f023 0320 	bic.w	r3, r3, #32
10013ab2:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10013ab4:	6803      	ldr	r3, [r0, #0]
10013ab6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10013aba:	6003      	str	r3, [r0, #0]
        break;
10013abc:	e7ea      	b.n	10013a94 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10013abe:	6803      	ldr	r3, [r0, #0]
10013ac0:	f043 0310 	orr.w	r3, r3, #16
10013ac4:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10013ac6:	6803      	ldr	r3, [r0, #0]
10013ac8:	f023 0320 	bic.w	r3, r3, #32
10013acc:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10013ace:	6803      	ldr	r3, [r0, #0]
10013ad0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013ad4:	6003      	str	r3, [r0, #0]
        break;
10013ad6:	e7dd      	b.n	10013a94 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10013ad8:	6803      	ldr	r3, [r0, #0]
10013ada:	f043 0310 	orr.w	r3, r3, #16
10013ade:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10013ae0:	6803      	ldr	r3, [r0, #0]
10013ae2:	f043 0320 	orr.w	r3, r3, #32
10013ae6:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10013ae8:	6803      	ldr	r3, [r0, #0]
10013aea:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10013aee:	6003      	str	r3, [r0, #0]
        break;
10013af0:	e7d0      	b.n	10013a94 <MXC_UART_RevB_SetParity+0x44>
    switch (parity) {
10013af2:	f06f 0002 	mvn.w	r0, #2
}
10013af6:	4770      	bx	lr
10013af8:	40042000 	.word	0x40042000

10013afc <MXC_UART_RevB_ReadCharacterRaw>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_ReadCharacterRaw(mxc_uart_revb_regs_t *uart)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013afc:	4b0c      	ldr	r3, [pc, #48]	@ (10013b30 <MXC_UART_RevB_ReadCharacterRaw+0x34>)
10013afe:	4298      	cmp	r0, r3
10013b00:	d00b      	beq.n	10013b1a <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10013b02:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013b06:	4298      	cmp	r0, r3
10013b08:	d007      	beq.n	10013b1a <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10013b0a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013b0e:	4298      	cmp	r0, r3
10013b10:	d003      	beq.n	10013b1a <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10013b12:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013b16:	4298      	cmp	r0, r3
10013b18:	d104      	bne.n	10013b24 <MXC_UART_RevB_ReadCharacterRaw+0x28>
        return E_BAD_PARAM;
    }

    if (uart->status & MXC_F_UART_REVB_STATUS_RX_EM) {
10013b1a:	6843      	ldr	r3, [r0, #4]
10013b1c:	06db      	lsls	r3, r3, #27
10013b1e:	d404      	bmi.n	10013b2a <MXC_UART_RevB_ReadCharacterRaw+0x2e>
        return E_UNDERFLOW;
    }

    return uart->fifo;
10013b20:	6a00      	ldr	r0, [r0, #32]
10013b22:	4770      	bx	lr
        return E_BAD_PARAM;
10013b24:	f06f 0002 	mvn.w	r0, #2
10013b28:	4770      	bx	lr
        return E_UNDERFLOW;
10013b2a:	f06f 000c 	mvn.w	r0, #12
}
10013b2e:	4770      	bx	lr
10013b30:	40042000 	.word	0x40042000

10013b34 <MXC_UART_RevB_WriteCharacterRaw>:

int MXC_UART_RevB_WriteCharacterRaw(mxc_uart_revb_regs_t *uart, uint8_t character)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013b34:	4a0d      	ldr	r2, [pc, #52]	@ (10013b6c <MXC_UART_RevB_WriteCharacterRaw+0x38>)
10013b36:	4290      	cmp	r0, r2
{
10013b38:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013b3a:	d00b      	beq.n	10013b54 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10013b3c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013b40:	4290      	cmp	r0, r2
10013b42:	d007      	beq.n	10013b54 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10013b44:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013b48:	4290      	cmp	r0, r2
10013b4a:	d003      	beq.n	10013b54 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10013b4c:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10013b50:	4290      	cmp	r0, r2
10013b52:	d105      	bne.n	10013b60 <MXC_UART_RevB_WriteCharacterRaw+0x2c>
        return E_BAD_PARAM;
    }

    // Require the TX FIFO to be empty, so that we write out the expected character
    // Return error if the FIFO is full
    if (uart->status & MXC_F_UART_REVB_STATUS_TX_FULL) {
10013b54:	6858      	ldr	r0, [r3, #4]
10013b56:	f010 0080 	ands.w	r0, r0, #128	@ 0x80
10013b5a:	d104      	bne.n	10013b66 <MXC_UART_RevB_WriteCharacterRaw+0x32>
        return E_OVERFLOW;
    }

    uart->fifo = character;
10013b5c:	6219      	str	r1, [r3, #32]

    return E_NO_ERROR;
10013b5e:	4770      	bx	lr
        return E_BAD_PARAM;
10013b60:	f06f 0002 	mvn.w	r0, #2
10013b64:	4770      	bx	lr
        return E_OVERFLOW;
10013b66:	f06f 000b 	mvn.w	r0, #11
}
10013b6a:	4770      	bx	lr
10013b6c:	40042000 	.word	0x40042000

10013b70 <MXC_UART_RevB_GetRXFIFOAvailable>:
    return read;
}

unsigned int MXC_UART_RevB_GetRXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    return (uart->status & MXC_F_UART_REVB_STATUS_RX_LVL) >> MXC_F_UART_REVB_STATUS_RX_LVL_POS;
10013b70:	6840      	ldr	r0, [r0, #4]
}
10013b72:	f3c0 2003 	ubfx	r0, r0, #8, #4
10013b76:	4770      	bx	lr

10013b78 <MXC_UART_RevB_GetTXFIFOAvailable>:
    return written;
}

unsigned int MXC_UART_RevB_GetTXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    int txCnt = (uart->status & MXC_F_UART_REVB_STATUS_TX_LVL) >> MXC_F_UART_REVB_STATUS_TX_LVL_POS;
10013b78:	6840      	ldr	r0, [r0, #4]
10013b7a:	f3c0 3003 	ubfx	r0, r0, #12, #4
    return MXC_UART_FIFO_DEPTH - txCnt;
}
10013b7e:	f1c0 0008 	rsb	r0, r0, #8
10013b82:	4770      	bx	lr

10013b84 <MXC_UART_RevB_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_SetRXThreshold(mxc_uart_revb_regs_t *uart, unsigned int numBytes)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013b84:	4a0e      	ldr	r2, [pc, #56]	@ (10013bc0 <MXC_UART_RevB_SetRXThreshold+0x3c>)
10013b86:	4290      	cmp	r0, r2
{
10013b88:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013b8a:	d00b      	beq.n	10013ba4 <MXC_UART_RevB_SetRXThreshold+0x20>
10013b8c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013b90:	4290      	cmp	r0, r2
10013b92:	d007      	beq.n	10013ba4 <MXC_UART_RevB_SetRXThreshold+0x20>
10013b94:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013b98:	4290      	cmp	r0, r2
10013b9a:	d003      	beq.n	10013ba4 <MXC_UART_RevB_SetRXThreshold+0x20>
10013b9c:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10013ba0:	4290      	cmp	r0, r2
10013ba2:	d109      	bne.n	10013bb8 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    if (numBytes < 1 || numBytes > MXC_UART_FIFO_DEPTH) {
10013ba4:	1e4a      	subs	r2, r1, #1
10013ba6:	2a07      	cmp	r2, #7
10013ba8:	d806      	bhi.n	10013bb8 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    numBytes <<= MXC_F_UART_REVB_CTRL_RX_THD_VAL_POS;
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
10013baa:	681a      	ldr	r2, [r3, #0]
10013bac:	f022 020f 	bic.w	r2, r2, #15
10013bb0:	4311      	orrs	r1, r2

    return E_NO_ERROR;
10013bb2:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
10013bb4:	6019      	str	r1, [r3, #0]
    return E_NO_ERROR;
10013bb6:	4770      	bx	lr
        return E_BAD_PARAM;
10013bb8:	f06f 0002 	mvn.w	r0, #2
}
10013bbc:	4770      	bx	lr
10013bbe:	bf00      	nop
10013bc0:	40042000 	.word	0x40042000

10013bc4 <MXC_GPIO_Common_Init>:
static void *cbparam[MXC_CFG_GPIO_INSTANCES][MXC_CFG_GPIO_PINS_PORT];
static uint8_t initialized = 0;

/* **** Functions **** */
int MXC_GPIO_Common_Init(uint32_t portmask)
{
10013bc4:	b510      	push	{r4, lr}
    if (!initialized) {
10013bc6:	4c06      	ldr	r4, [pc, #24]	@ (10013be0 <MXC_GPIO_Common_Init+0x1c>)
10013bc8:	7821      	ldrb	r1, [r4, #0]
10013bca:	b931      	cbnz	r1, 10013bda <MXC_GPIO_Common_Init+0x16>
        int i, j;

        for (i = 0; i < MXC_CFG_GPIO_INSTANCES; i++) {
            // Initialize call back arrays
            for (j = 0; j < MXC_CFG_GPIO_PINS_PORT; j++) {
                callback[i][j] = NULL;
10013bcc:	4805      	ldr	r0, [pc, #20]	@ (10013be4 <MXC_GPIO_Common_Init+0x20>)
10013bce:	f44f 7200 	mov.w	r2, #512	@ 0x200
10013bd2:	f004 f9d1 	bl	10017f78 <memset>
            }
        }

        initialized = 1;
10013bd6:	2301      	movs	r3, #1
10013bd8:	7023      	strb	r3, [r4, #0]
    }

    return E_NO_ERROR;
}
10013bda:	2000      	movs	r0, #0
10013bdc:	bd10      	pop	{r4, pc}
10013bde:	bf00      	nop
10013be0:	20001050 	.word	0x20001050
10013be4:	20001254 	.word	0x20001254

10013be8 <MXC_GPIO_Common_Handler>:
void MXC_GPIO_Common_Handler(unsigned int port)
{
    uint32_t stat;
    unsigned int pin;

    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10013be8:	2803      	cmp	r0, #3
{
10013bea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10013bec:	4607      	mov	r7, r0
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10013bee:	d81d      	bhi.n	10013c2c <MXC_GPIO_Common_Handler+0x44>

    mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(port);
10013bf0:	bb18      	cbnz	r0, 10013c3a <MXC_GPIO_Common_Handler+0x52>
10013bf2:	4d14      	ldr	r5, [pc, #80]	@ (10013c44 <MXC_GPIO_Common_Handler+0x5c>)

    stat = MXC_GPIO_GetFlags(gpio);
10013bf4:	4628      	mov	r0, r5
10013bf6:	f7fe fd7d 	bl	100126f4 <MXC_GPIO_GetFlags>
10013bfa:	4604      	mov	r4, r0
    MXC_GPIO_ClearFlags(gpio, stat);
10013bfc:	4601      	mov	r1, r0
10013bfe:	4628      	mov	r0, r5
10013c00:	f7fe fd6c 	bl	100126dc <MXC_GPIO_ClearFlags>

    pin = 0;

    while (stat) {
10013c04:	b18c      	cbz	r4, 10013c2a <MXC_GPIO_Common_Handler+0x42>
10013c06:	4e10      	ldr	r6, [pc, #64]	@ (10013c48 <MXC_GPIO_Common_Handler+0x60>)
10013c08:	4d10      	ldr	r5, [pc, #64]	@ (10013c4c <MXC_GPIO_Common_Handler+0x64>)
10013c0a:	eb06 16c7 	add.w	r6, r6, r7, lsl #7
10013c0e:	eb05 15c7 	add.w	r5, r5, r7, lsl #7
        if (stat & 1) {
10013c12:	07e3      	lsls	r3, r4, #31
10013c14:	d503      	bpl.n	10013c1e <MXC_GPIO_Common_Handler+0x36>
            if (callback[port][pin]) {
10013c16:	682b      	ldr	r3, [r5, #0]
10013c18:	b10b      	cbz	r3, 10013c1e <MXC_GPIO_Common_Handler+0x36>
                callback[port][pin](cbparam[port][pin]);
10013c1a:	6830      	ldr	r0, [r6, #0]
10013c1c:	4798      	blx	r3
    while (stat) {
10013c1e:	0864      	lsrs	r4, r4, #1
10013c20:	f106 0604 	add.w	r6, r6, #4
10013c24:	f105 0504 	add.w	r5, r5, #4
10013c28:	d1f3      	bne.n	10013c12 <MXC_GPIO_Common_Handler+0x2a>
        }

        pin++;
        stat >>= 1;
    }
}
10013c2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10013c2c:	4908      	ldr	r1, [pc, #32]	@ (10013c50 <MXC_GPIO_Common_Handler+0x68>)
10013c2e:	4809      	ldr	r0, [pc, #36]	@ (10013c54 <MXC_GPIO_Common_Handler+0x6c>)
10013c30:	225a      	movs	r2, #90	@ 0x5a
10013c32:	f7fd ff77 	bl	10011b24 <mxc_assert>
10013c36:	2500      	movs	r5, #0
10013c38:	e7dc      	b.n	10013bf4 <MXC_GPIO_Common_Handler+0xc>
10013c3a:	4b07      	ldr	r3, [pc, #28]	@ (10013c58 <MXC_GPIO_Common_Handler+0x70>)
10013c3c:	1e42      	subs	r2, r0, #1
10013c3e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
10013c42:	e7d7      	b.n	10013bf4 <MXC_GPIO_Common_Handler+0xc>
10013c44:	40008000 	.word	0x40008000
10013c48:	20001054 	.word	0x20001054
10013c4c:	20001254 	.word	0x20001254
10013c50:	10023a08 	.word	0x10023a08
10013c54:	10023a78 	.word	0x10023a78
10013c58:	10023a98 	.word	0x10023a98

10013c5c <malloc>:
10013c5c:	4b02      	ldr	r3, [pc, #8]	@ (10013c68 <malloc+0xc>)
10013c5e:	4601      	mov	r1, r0
10013c60:	6818      	ldr	r0, [r3, #0]
10013c62:	f000 b80b 	b.w	10013c7c <_malloc_r>
10013c66:	bf00      	nop
10013c68:	20000598 	.word	0x20000598

10013c6c <free>:
10013c6c:	4b02      	ldr	r3, [pc, #8]	@ (10013c78 <free+0xc>)
10013c6e:	4601      	mov	r1, r0
10013c70:	6818      	ldr	r0, [r3, #0]
10013c72:	f005 be45 	b.w	10019900 <_free_r>
10013c76:	bf00      	nop
10013c78:	20000598 	.word	0x20000598

10013c7c <_malloc_r>:
10013c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10013c80:	f101 050b 	add.w	r5, r1, #11
10013c84:	2d16      	cmp	r5, #22
10013c86:	b085      	sub	sp, #20
10013c88:	4606      	mov	r6, r0
10013c8a:	d824      	bhi.n	10013cd6 <_malloc_r+0x5a>
10013c8c:	2910      	cmp	r1, #16
10013c8e:	f200 80b1 	bhi.w	10013df4 <_malloc_r+0x178>
10013c92:	f003 f989 	bl	10016fa8 <__malloc_lock>
10013c96:	2510      	movs	r5, #16
10013c98:	2318      	movs	r3, #24
10013c9a:	f04f 0c02 	mov.w	ip, #2
10013c9e:	4fba      	ldr	r7, [pc, #744]	@ (10013f88 <_malloc_r+0x30c>)
10013ca0:	443b      	add	r3, r7
10013ca2:	f1a3 0208 	sub.w	r2, r3, #8
10013ca6:	685c      	ldr	r4, [r3, #4]
10013ca8:	4294      	cmp	r4, r2
10013caa:	f000 8122 	beq.w	10013ef2 <_malloc_r+0x276>
10013cae:	6863      	ldr	r3, [r4, #4]
10013cb0:	68e2      	ldr	r2, [r4, #12]
10013cb2:	68a1      	ldr	r1, [r4, #8]
10013cb4:	f023 0303 	bic.w	r3, r3, #3
10013cb8:	60ca      	str	r2, [r1, #12]
10013cba:	4423      	add	r3, r4
10013cbc:	4630      	mov	r0, r6
10013cbe:	6091      	str	r1, [r2, #8]
10013cc0:	685a      	ldr	r2, [r3, #4]
10013cc2:	f042 0201 	orr.w	r2, r2, #1
10013cc6:	605a      	str	r2, [r3, #4]
10013cc8:	3408      	adds	r4, #8
10013cca:	f003 f973 	bl	10016fb4 <__malloc_unlock>
10013cce:	4620      	mov	r0, r4
10013cd0:	b005      	add	sp, #20
10013cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013cd6:	f035 0507 	bics.w	r5, r5, #7
10013cda:	f100 808b 	bmi.w	10013df4 <_malloc_r+0x178>
10013cde:	42a9      	cmp	r1, r5
10013ce0:	f200 8088 	bhi.w	10013df4 <_malloc_r+0x178>
10013ce4:	f003 f960 	bl	10016fa8 <__malloc_lock>
10013ce8:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
10013cec:	f0c0 8173 	bcc.w	10013fd6 <_malloc_r+0x35a>
10013cf0:	0a6b      	lsrs	r3, r5, #9
10013cf2:	f000 8083 	beq.w	10013dfc <_malloc_r+0x180>
10013cf6:	2b04      	cmp	r3, #4
10013cf8:	f200 8122 	bhi.w	10013f40 <_malloc_r+0x2c4>
10013cfc:	09ab      	lsrs	r3, r5, #6
10013cfe:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
10013d02:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
10013d06:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10013d0a:	4f9f      	ldr	r7, [pc, #636]	@ (10013f88 <_malloc_r+0x30c>)
10013d0c:	443b      	add	r3, r7
10013d0e:	f1a3 0008 	sub.w	r0, r3, #8
10013d12:	685c      	ldr	r4, [r3, #4]
10013d14:	42a0      	cmp	r0, r4
10013d16:	d107      	bne.n	10013d28 <_malloc_r+0xac>
10013d18:	e00d      	b.n	10013d36 <_malloc_r+0xba>
10013d1a:	2a00      	cmp	r2, #0
10013d1c:	68e1      	ldr	r1, [r4, #12]
10013d1e:	f280 80e2 	bge.w	10013ee6 <_malloc_r+0x26a>
10013d22:	4288      	cmp	r0, r1
10013d24:	d007      	beq.n	10013d36 <_malloc_r+0xba>
10013d26:	460c      	mov	r4, r1
10013d28:	6863      	ldr	r3, [r4, #4]
10013d2a:	f023 0303 	bic.w	r3, r3, #3
10013d2e:	1b5a      	subs	r2, r3, r5
10013d30:	2a0f      	cmp	r2, #15
10013d32:	ddf2      	ble.n	10013d1a <_malloc_r+0x9e>
10013d34:	46f4      	mov	ip, lr
10013d36:	f8df 8254 	ldr.w	r8, [pc, #596]	@ 10013f8c <_malloc_r+0x310>
10013d3a:	693c      	ldr	r4, [r7, #16]
10013d3c:	4544      	cmp	r4, r8
10013d3e:	f000 80bf 	beq.w	10013ec0 <_malloc_r+0x244>
10013d42:	6863      	ldr	r3, [r4, #4]
10013d44:	f023 0903 	bic.w	r9, r3, #3
10013d48:	eba9 0305 	sub.w	r3, r9, r5
10013d4c:	2b0f      	cmp	r3, #15
10013d4e:	f300 8147 	bgt.w	10013fe0 <_malloc_r+0x364>
10013d52:	2b00      	cmp	r3, #0
10013d54:	e9c7 8804 	strd	r8, r8, [r7, #16]
10013d58:	f280 8131 	bge.w	10013fbe <_malloc_r+0x342>
10013d5c:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
10013d60:	f8d7 e004 	ldr.w	lr, [r7, #4]
10013d64:	f080 80cc 	bcs.w	10013f00 <_malloc_r+0x284>
10013d68:	ea4f 01d9 	mov.w	r1, r9, lsr #3
10013d6c:	3101      	adds	r1, #1
10013d6e:	ea4f 1959 	mov.w	r9, r9, lsr #5
10013d72:	2301      	movs	r3, #1
10013d74:	fa03 f309 	lsl.w	r3, r3, r9
10013d78:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
10013d7c:	60a2      	str	r2, [r4, #8]
10013d7e:	ea4e 0e03 	orr.w	lr, lr, r3
10013d82:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
10013d86:	3b08      	subs	r3, #8
10013d88:	60e3      	str	r3, [r4, #12]
10013d8a:	f8c7 e004 	str.w	lr, [r7, #4]
10013d8e:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
10013d92:	60d4      	str	r4, [r2, #12]
10013d94:	ea4f 03ac 	mov.w	r3, ip, asr #2
10013d98:	2001      	movs	r0, #1
10013d9a:	4098      	lsls	r0, r3
10013d9c:	4570      	cmp	r0, lr
10013d9e:	d834      	bhi.n	10013e0a <_malloc_r+0x18e>
10013da0:	ea10 0f0e 	tst.w	r0, lr
10013da4:	d107      	bne.n	10013db6 <_malloc_r+0x13a>
10013da6:	f02c 0c03 	bic.w	ip, ip, #3
10013daa:	0040      	lsls	r0, r0, #1
10013dac:	ea10 0f0e 	tst.w	r0, lr
10013db0:	f10c 0c04 	add.w	ip, ip, #4
10013db4:	d0f9      	beq.n	10013daa <_malloc_r+0x12e>
10013db6:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
10013dba:	4652      	mov	r2, sl
10013dbc:	46e1      	mov	r9, ip
10013dbe:	68d1      	ldr	r1, [r2, #12]
10013dc0:	e00e      	b.n	10013de0 <_malloc_r+0x164>
10013dc2:	684b      	ldr	r3, [r1, #4]
10013dc4:	f023 0303 	bic.w	r3, r3, #3
10013dc8:	eba3 0e05 	sub.w	lr, r3, r5
10013dcc:	f1be 0f0f 	cmp.w	lr, #15
10013dd0:	460c      	mov	r4, r1
10013dd2:	68c9      	ldr	r1, [r1, #12]
10013dd4:	f300 80c1 	bgt.w	10013f5a <_malloc_r+0x2de>
10013dd8:	f1be 0f00 	cmp.w	lr, #0
10013ddc:	f280 80e2 	bge.w	10013fa4 <_malloc_r+0x328>
10013de0:	428a      	cmp	r2, r1
10013de2:	d1ee      	bne.n	10013dc2 <_malloc_r+0x146>
10013de4:	f109 0901 	add.w	r9, r9, #1
10013de8:	f019 0f03 	tst.w	r9, #3
10013dec:	f102 0208 	add.w	r2, r2, #8
10013df0:	d1e5      	bne.n	10013dbe <_malloc_r+0x142>
10013df2:	e121      	b.n	10014038 <_malloc_r+0x3bc>
10013df4:	230c      	movs	r3, #12
10013df6:	6033      	str	r3, [r6, #0]
10013df8:	2400      	movs	r4, #0
10013dfa:	e768      	b.n	10013cce <_malloc_r+0x52>
10013dfc:	f44f 7300 	mov.w	r3, #512	@ 0x200
10013e00:	f04f 0c40 	mov.w	ip, #64	@ 0x40
10013e04:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
10013e08:	e77f      	b.n	10013d0a <_malloc_r+0x8e>
10013e0a:	68bc      	ldr	r4, [r7, #8]
10013e0c:	6863      	ldr	r3, [r4, #4]
10013e0e:	f023 0903 	bic.w	r9, r3, #3
10013e12:	45a9      	cmp	r9, r5
10013e14:	d303      	bcc.n	10013e1e <_malloc_r+0x1a2>
10013e16:	eba9 0305 	sub.w	r3, r9, r5
10013e1a:	2b0f      	cmp	r3, #15
10013e1c:	dc53      	bgt.n	10013ec6 <_malloc_r+0x24a>
10013e1e:	4b5c      	ldr	r3, [pc, #368]	@ (10013f90 <_malloc_r+0x314>)
10013e20:	f8df b170 	ldr.w	fp, [pc, #368]	@ 10013f94 <_malloc_r+0x318>
10013e24:	681b      	ldr	r3, [r3, #0]
10013e26:	2008      	movs	r0, #8
10013e28:	f103 0810 	add.w	r8, r3, #16
10013e2c:	f004 f9b6 	bl	1001819c <sysconf>
10013e30:	f8db 3000 	ldr.w	r3, [fp]
10013e34:	9001      	str	r0, [sp, #4]
10013e36:	3301      	adds	r3, #1
10013e38:	44a8      	add	r8, r5
10013e3a:	eb04 0209 	add.w	r2, r4, r9
10013e3e:	d005      	beq.n	10013e4c <_malloc_r+0x1d0>
10013e40:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
10013e44:	4480      	add	r8, r0
10013e46:	4243      	negs	r3, r0
10013e48:	ea03 0808 	and.w	r8, r3, r8
10013e4c:	4641      	mov	r1, r8
10013e4e:	4630      	mov	r0, r6
10013e50:	9202      	str	r2, [sp, #8]
10013e52:	f004 f975 	bl	10018140 <_sbrk_r>
10013e56:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10013e5a:	9a02      	ldr	r2, [sp, #8]
10013e5c:	4682      	mov	sl, r0
10013e5e:	f000 80dc 	beq.w	1001401a <_malloc_r+0x39e>
10013e62:	4282      	cmp	r2, r0
10013e64:	f200 80d7 	bhi.w	10014016 <_malloc_r+0x39a>
10013e68:	4b4b      	ldr	r3, [pc, #300]	@ (10013f98 <_malloc_r+0x31c>)
10013e6a:	9901      	ldr	r1, [sp, #4]
10013e6c:	6818      	ldr	r0, [r3, #0]
10013e6e:	4440      	add	r0, r8
10013e70:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
10013e74:	6018      	str	r0, [r3, #0]
10013e76:	4684      	mov	ip, r0
10013e78:	f040 80fc 	bne.w	10014074 <_malloc_r+0x3f8>
10013e7c:	ea1a 0f01 	tst.w	sl, r1
10013e80:	f040 80f8 	bne.w	10014074 <_malloc_r+0x3f8>
10013e84:	f8d7 a008 	ldr.w	sl, [r7, #8]
10013e88:	44c8      	add	r8, r9
10013e8a:	f048 0201 	orr.w	r2, r8, #1
10013e8e:	f8ca 2004 	str.w	r2, [sl, #4]
10013e92:	4b42      	ldr	r3, [pc, #264]	@ (10013f9c <_malloc_r+0x320>)
10013e94:	6819      	ldr	r1, [r3, #0]
10013e96:	4281      	cmp	r1, r0
10013e98:	bf38      	it	cc
10013e9a:	6018      	strcc	r0, [r3, #0]
10013e9c:	4b40      	ldr	r3, [pc, #256]	@ (10013fa0 <_malloc_r+0x324>)
10013e9e:	6819      	ldr	r1, [r3, #0]
10013ea0:	4281      	cmp	r1, r0
10013ea2:	bf38      	it	cc
10013ea4:	6018      	strcc	r0, [r3, #0]
10013ea6:	4654      	mov	r4, sl
10013ea8:	f022 0803 	bic.w	r8, r2, #3
10013eac:	45a8      	cmp	r8, r5
10013eae:	eba8 0305 	sub.w	r3, r8, r5
10013eb2:	d301      	bcc.n	10013eb8 <_malloc_r+0x23c>
10013eb4:	2b0f      	cmp	r3, #15
10013eb6:	dc06      	bgt.n	10013ec6 <_malloc_r+0x24a>
10013eb8:	4630      	mov	r0, r6
10013eba:	f003 f87b 	bl	10016fb4 <__malloc_unlock>
10013ebe:	e79b      	b.n	10013df8 <_malloc_r+0x17c>
10013ec0:	f8d7 e004 	ldr.w	lr, [r7, #4]
10013ec4:	e766      	b.n	10013d94 <_malloc_r+0x118>
10013ec6:	1962      	adds	r2, r4, r5
10013ec8:	f043 0301 	orr.w	r3, r3, #1
10013ecc:	f045 0501 	orr.w	r5, r5, #1
10013ed0:	6065      	str	r5, [r4, #4]
10013ed2:	4630      	mov	r0, r6
10013ed4:	60ba      	str	r2, [r7, #8]
10013ed6:	6053      	str	r3, [r2, #4]
10013ed8:	f003 f86c 	bl	10016fb4 <__malloc_unlock>
10013edc:	3408      	adds	r4, #8
10013ede:	4620      	mov	r0, r4
10013ee0:	b005      	add	sp, #20
10013ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013ee6:	68a2      	ldr	r2, [r4, #8]
10013ee8:	4423      	add	r3, r4
10013eea:	60d1      	str	r1, [r2, #12]
10013eec:	4630      	mov	r0, r6
10013eee:	608a      	str	r2, [r1, #8]
10013ef0:	e6e6      	b.n	10013cc0 <_malloc_r+0x44>
10013ef2:	68dc      	ldr	r4, [r3, #12]
10013ef4:	42a3      	cmp	r3, r4
10013ef6:	f47f aeda 	bne.w	10013cae <_malloc_r+0x32>
10013efa:	f10c 0c02 	add.w	ip, ip, #2
10013efe:	e71a      	b.n	10013d36 <_malloc_r+0xba>
10013f00:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
10013f04:	ea4f 2259 	mov.w	r2, r9, lsr #9
10013f08:	d37e      	bcc.n	10014008 <_malloc_r+0x38c>
10013f0a:	2a14      	cmp	r2, #20
10013f0c:	f200 8115 	bhi.w	1001413a <_malloc_r+0x4be>
10013f10:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
10013f14:	00db      	lsls	r3, r3, #3
10013f16:	325b      	adds	r2, #91	@ 0x5b
10013f18:	18f9      	adds	r1, r7, r3
10013f1a:	58fb      	ldr	r3, [r7, r3]
10013f1c:	3908      	subs	r1, #8
10013f1e:	4299      	cmp	r1, r3
10013f20:	d103      	bne.n	10013f2a <_malloc_r+0x2ae>
10013f22:	e0f0      	b.n	10014106 <_malloc_r+0x48a>
10013f24:	689b      	ldr	r3, [r3, #8]
10013f26:	4299      	cmp	r1, r3
10013f28:	d004      	beq.n	10013f34 <_malloc_r+0x2b8>
10013f2a:	685a      	ldr	r2, [r3, #4]
10013f2c:	f022 0203 	bic.w	r2, r2, #3
10013f30:	454a      	cmp	r2, r9
10013f32:	d8f7      	bhi.n	10013f24 <_malloc_r+0x2a8>
10013f34:	68d9      	ldr	r1, [r3, #12]
10013f36:	e9c4 3102 	strd	r3, r1, [r4, #8]
10013f3a:	608c      	str	r4, [r1, #8]
10013f3c:	60dc      	str	r4, [r3, #12]
10013f3e:	e729      	b.n	10013d94 <_malloc_r+0x118>
10013f40:	2b14      	cmp	r3, #20
10013f42:	d96d      	bls.n	10014020 <_malloc_r+0x3a4>
10013f44:	2b54      	cmp	r3, #84	@ 0x54
10013f46:	f200 8101 	bhi.w	1001414c <_malloc_r+0x4d0>
10013f4a:	0b2b      	lsrs	r3, r5, #12
10013f4c:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
10013f50:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
10013f54:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10013f58:	e6d7      	b.n	10013d0a <_malloc_r+0x8e>
10013f5a:	4630      	mov	r0, r6
10013f5c:	68a6      	ldr	r6, [r4, #8]
10013f5e:	1962      	adds	r2, r4, r5
10013f60:	f045 0501 	orr.w	r5, r5, #1
10013f64:	6065      	str	r5, [r4, #4]
10013f66:	60f1      	str	r1, [r6, #12]
10013f68:	608e      	str	r6, [r1, #8]
10013f6a:	f04e 0101 	orr.w	r1, lr, #1
10013f6e:	e9c7 2204 	strd	r2, r2, [r7, #16]
10013f72:	f8c2 8008 	str.w	r8, [r2, #8]
10013f76:	f8c2 800c 	str.w	r8, [r2, #12]
10013f7a:	6051      	str	r1, [r2, #4]
10013f7c:	f844 e003 	str.w	lr, [r4, r3]
10013f80:	f003 f818 	bl	10016fb4 <__malloc_unlock>
10013f84:	3408      	adds	r4, #8
10013f86:	e6a2      	b.n	10013cce <_malloc_r+0x52>
10013f88:	20000018 	.word	0x20000018
10013f8c:	20000020 	.word	0x20000020
10013f90:	20001484 	.word	0x20001484
10013f94:	20000010 	.word	0x20000010
10013f98:	20001454 	.word	0x20001454
10013f9c:	20001480 	.word	0x20001480
10013fa0:	2000147c 	.word	0x2000147c
10013fa4:	4423      	add	r3, r4
10013fa6:	4630      	mov	r0, r6
10013fa8:	685a      	ldr	r2, [r3, #4]
10013faa:	f042 0201 	orr.w	r2, r2, #1
10013fae:	605a      	str	r2, [r3, #4]
10013fb0:	f854 3f08 	ldr.w	r3, [r4, #8]!
10013fb4:	60d9      	str	r1, [r3, #12]
10013fb6:	608b      	str	r3, [r1, #8]
10013fb8:	f002 fffc 	bl	10016fb4 <__malloc_unlock>
10013fbc:	e687      	b.n	10013cce <_malloc_r+0x52>
10013fbe:	44a1      	add	r9, r4
10013fc0:	4630      	mov	r0, r6
10013fc2:	f8d9 3004 	ldr.w	r3, [r9, #4]
10013fc6:	f043 0301 	orr.w	r3, r3, #1
10013fca:	f8c9 3004 	str.w	r3, [r9, #4]
10013fce:	3408      	adds	r4, #8
10013fd0:	f002 fff0 	bl	10016fb4 <__malloc_unlock>
10013fd4:	e67b      	b.n	10013cce <_malloc_r+0x52>
10013fd6:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
10013fda:	f105 0308 	add.w	r3, r5, #8
10013fde:	e65e      	b.n	10013c9e <_malloc_r+0x22>
10013fe0:	1962      	adds	r2, r4, r5
10013fe2:	f043 0101 	orr.w	r1, r3, #1
10013fe6:	f045 0501 	orr.w	r5, r5, #1
10013fea:	6065      	str	r5, [r4, #4]
10013fec:	4630      	mov	r0, r6
10013fee:	e9c7 2204 	strd	r2, r2, [r7, #16]
10013ff2:	f8c2 8008 	str.w	r8, [r2, #8]
10013ff6:	f8c2 800c 	str.w	r8, [r2, #12]
10013ffa:	6051      	str	r1, [r2, #4]
10013ffc:	f844 3009 	str.w	r3, [r4, r9]
10014000:	f002 ffd8 	bl	10016fb4 <__malloc_unlock>
10014004:	3408      	adds	r4, #8
10014006:	e662      	b.n	10013cce <_malloc_r+0x52>
10014008:	ea4f 1299 	mov.w	r2, r9, lsr #6
1001400c:	f102 0339 	add.w	r3, r2, #57	@ 0x39
10014010:	00db      	lsls	r3, r3, #3
10014012:	3238      	adds	r2, #56	@ 0x38
10014014:	e780      	b.n	10013f18 <_malloc_r+0x29c>
10014016:	42bc      	cmp	r4, r7
10014018:	d024      	beq.n	10014064 <_malloc_r+0x3e8>
1001401a:	68bc      	ldr	r4, [r7, #8]
1001401c:	6862      	ldr	r2, [r4, #4]
1001401e:	e743      	b.n	10013ea8 <_malloc_r+0x22c>
10014020:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
10014024:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
10014028:	ea4f 03cc 	mov.w	r3, ip, lsl #3
1001402c:	e66d      	b.n	10013d0a <_malloc_r+0x8e>
1001402e:	f85a 3908 	ldr.w	r3, [sl], #-8
10014032:	4553      	cmp	r3, sl
10014034:	f040 80d8 	bne.w	100141e8 <_malloc_r+0x56c>
10014038:	f01c 0f03 	tst.w	ip, #3
1001403c:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
10014040:	d1f5      	bne.n	1001402e <_malloc_r+0x3b2>
10014042:	687b      	ldr	r3, [r7, #4]
10014044:	ea23 0300 	bic.w	r3, r3, r0
10014048:	607b      	str	r3, [r7, #4]
1001404a:	0040      	lsls	r0, r0, #1
1001404c:	4298      	cmp	r0, r3
1001404e:	f63f aedc 	bhi.w	10013e0a <_malloc_r+0x18e>
10014052:	b918      	cbnz	r0, 1001405c <_malloc_r+0x3e0>
10014054:	e6d9      	b.n	10013e0a <_malloc_r+0x18e>
10014056:	0040      	lsls	r0, r0, #1
10014058:	f109 0904 	add.w	r9, r9, #4
1001405c:	4218      	tst	r0, r3
1001405e:	d0fa      	beq.n	10014056 <_malloc_r+0x3da>
10014060:	46cc      	mov	ip, r9
10014062:	e6a8      	b.n	10013db6 <_malloc_r+0x13a>
10014064:	4b61      	ldr	r3, [pc, #388]	@ (100141ec <_malloc_r+0x570>)
10014066:	9901      	ldr	r1, [sp, #4]
10014068:	6818      	ldr	r0, [r3, #0]
1001406a:	eb08 0c00 	add.w	ip, r8, r0
1001406e:	3901      	subs	r1, #1
10014070:	f8c3 c000 	str.w	ip, [r3]
10014074:	f8db 0000 	ldr.w	r0, [fp]
10014078:	3001      	adds	r0, #1
1001407a:	bf1b      	ittet	ne
1001407c:	ebaa 0202 	subne.w	r2, sl, r2
10014080:	4462      	addne	r2, ip
10014082:	f8cb a000 	streq.w	sl, [fp]
10014086:	601a      	strne	r2, [r3, #0]
10014088:	f01a 0207 	ands.w	r2, sl, #7
1001408c:	e9cd 2302 	strd	r2, r3, [sp, #8]
10014090:	d042      	beq.n	10014118 <_malloc_r+0x49c>
10014092:	f1c2 0208 	rsb	r2, r2, #8
10014096:	9b01      	ldr	r3, [sp, #4]
10014098:	4492      	add	sl, r2
1001409a:	44d0      	add	r8, sl
1001409c:	4413      	add	r3, r2
1001409e:	ea08 0001 	and.w	r0, r8, r1
100140a2:	1a1a      	subs	r2, r3, r0
100140a4:	ea02 0b01 	and.w	fp, r2, r1
100140a8:	4659      	mov	r1, fp
100140aa:	4630      	mov	r0, r6
100140ac:	f004 f848 	bl	10018140 <_sbrk_r>
100140b0:	1c42      	adds	r2, r0, #1
100140b2:	9b03      	ldr	r3, [sp, #12]
100140b4:	d07a      	beq.n	100141ac <_malloc_r+0x530>
100140b6:	eba0 000a 	sub.w	r0, r0, sl
100140ba:	eb00 080b 	add.w	r8, r0, fp
100140be:	6818      	ldr	r0, [r3, #0]
100140c0:	f8c7 a008 	str.w	sl, [r7, #8]
100140c4:	f048 0201 	orr.w	r2, r8, #1
100140c8:	4458      	add	r0, fp
100140ca:	42bc      	cmp	r4, r7
100140cc:	f8ca 2004 	str.w	r2, [sl, #4]
100140d0:	6018      	str	r0, [r3, #0]
100140d2:	f43f aede 	beq.w	10013e92 <_malloc_r+0x216>
100140d6:	f1b9 0f0f 	cmp.w	r9, #15
100140da:	d942      	bls.n	10014162 <_malloc_r+0x4e6>
100140dc:	6861      	ldr	r1, [r4, #4]
100140de:	f1a9 020c 	sub.w	r2, r9, #12
100140e2:	f022 0207 	bic.w	r2, r2, #7
100140e6:	f001 0101 	and.w	r1, r1, #1
100140ea:	4311      	orrs	r1, r2
100140ec:	6061      	str	r1, [r4, #4]
100140ee:	18a1      	adds	r1, r4, r2
100140f0:	f04f 0c05 	mov.w	ip, #5
100140f4:	2a0f      	cmp	r2, #15
100140f6:	f8c1 c004 	str.w	ip, [r1, #4]
100140fa:	f8c1 c008 	str.w	ip, [r1, #8]
100140fe:	d84a      	bhi.n	10014196 <_malloc_r+0x51a>
10014100:	f8da 2004 	ldr.w	r2, [sl, #4]
10014104:	e6c5      	b.n	10013e92 <_malloc_r+0x216>
10014106:	1092      	asrs	r2, r2, #2
10014108:	2001      	movs	r0, #1
1001410a:	fa00 f202 	lsl.w	r2, r0, r2
1001410e:	ea4e 0e02 	orr.w	lr, lr, r2
10014112:	f8c7 e004 	str.w	lr, [r7, #4]
10014116:	e70e      	b.n	10013f36 <_malloc_r+0x2ba>
10014118:	9b01      	ldr	r3, [sp, #4]
1001411a:	eb0a 0208 	add.w	r2, sl, r8
1001411e:	400a      	ands	r2, r1
10014120:	1a9a      	subs	r2, r3, r2
10014122:	ea02 0b01 	and.w	fp, r2, r1
10014126:	4659      	mov	r1, fp
10014128:	4630      	mov	r0, r6
1001412a:	f004 f809 	bl	10018140 <_sbrk_r>
1001412e:	1c43      	adds	r3, r0, #1
10014130:	9b03      	ldr	r3, [sp, #12]
10014132:	d1c0      	bne.n	100140b6 <_malloc_r+0x43a>
10014134:	f8dd b008 	ldr.w	fp, [sp, #8]
10014138:	e7c1      	b.n	100140be <_malloc_r+0x442>
1001413a:	2a54      	cmp	r2, #84	@ 0x54
1001413c:	d815      	bhi.n	1001416a <_malloc_r+0x4ee>
1001413e:	ea4f 3219 	mov.w	r2, r9, lsr #12
10014142:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
10014146:	00db      	lsls	r3, r3, #3
10014148:	326e      	adds	r2, #110	@ 0x6e
1001414a:	e6e5      	b.n	10013f18 <_malloc_r+0x29c>
1001414c:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10014150:	d815      	bhi.n	1001417e <_malloc_r+0x502>
10014152:	0beb      	lsrs	r3, r5, #15
10014154:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
10014158:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
1001415c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014160:	e5d3      	b.n	10013d0a <_malloc_r+0x8e>
10014162:	2301      	movs	r3, #1
10014164:	f8ca 3004 	str.w	r3, [sl, #4]
10014168:	e6a6      	b.n	10013eb8 <_malloc_r+0x23c>
1001416a:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
1001416e:	d825      	bhi.n	100141bc <_malloc_r+0x540>
10014170:	ea4f 32d9 	mov.w	r2, r9, lsr #15
10014174:	f102 0378 	add.w	r3, r2, #120	@ 0x78
10014178:	00db      	lsls	r3, r3, #3
1001417a:	3277      	adds	r2, #119	@ 0x77
1001417c:	e6cc      	b.n	10013f18 <_malloc_r+0x29c>
1001417e:	f240 5254 	movw	r2, #1364	@ 0x554
10014182:	4293      	cmp	r3, r2
10014184:	d825      	bhi.n	100141d2 <_malloc_r+0x556>
10014186:	0cab      	lsrs	r3, r5, #18
10014188:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
1001418c:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
10014190:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014194:	e5b9      	b.n	10013d0a <_malloc_r+0x8e>
10014196:	4630      	mov	r0, r6
10014198:	f104 0108 	add.w	r1, r4, #8
1001419c:	9301      	str	r3, [sp, #4]
1001419e:	f005 fbaf 	bl	10019900 <_free_r>
100141a2:	9b01      	ldr	r3, [sp, #4]
100141a4:	f8d7 a008 	ldr.w	sl, [r7, #8]
100141a8:	6818      	ldr	r0, [r3, #0]
100141aa:	e7a9      	b.n	10014100 <_malloc_r+0x484>
100141ac:	9a02      	ldr	r2, [sp, #8]
100141ae:	3a08      	subs	r2, #8
100141b0:	4490      	add	r8, r2
100141b2:	eba8 080a 	sub.w	r8, r8, sl
100141b6:	f04f 0b00 	mov.w	fp, #0
100141ba:	e780      	b.n	100140be <_malloc_r+0x442>
100141bc:	f240 5354 	movw	r3, #1364	@ 0x554
100141c0:	429a      	cmp	r2, r3
100141c2:	d80d      	bhi.n	100141e0 <_malloc_r+0x564>
100141c4:	ea4f 4299 	mov.w	r2, r9, lsr #18
100141c8:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
100141cc:	00db      	lsls	r3, r3, #3
100141ce:	327c      	adds	r2, #124	@ 0x7c
100141d0:	e6a2      	b.n	10013f18 <_malloc_r+0x29c>
100141d2:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100141d6:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
100141da:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
100141de:	e594      	b.n	10013d0a <_malloc_r+0x8e>
100141e0:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100141e4:	227e      	movs	r2, #126	@ 0x7e
100141e6:	e697      	b.n	10013f18 <_malloc_r+0x29c>
100141e8:	687b      	ldr	r3, [r7, #4]
100141ea:	e72e      	b.n	1001404a <_malloc_r+0x3ce>
100141ec:	20001454 	.word	0x20001454

100141f0 <printf>:
100141f0:	b40f      	push	{r0, r1, r2, r3}
100141f2:	b500      	push	{lr}
100141f4:	4907      	ldr	r1, [pc, #28]	@ (10014214 <printf+0x24>)
100141f6:	b083      	sub	sp, #12
100141f8:	ab04      	add	r3, sp, #16
100141fa:	6808      	ldr	r0, [r1, #0]
100141fc:	f853 2b04 	ldr.w	r2, [r3], #4
10014200:	6881      	ldr	r1, [r0, #8]
10014202:	9301      	str	r3, [sp, #4]
10014204:	f000 f808 	bl	10014218 <_vfprintf_r>
10014208:	b003      	add	sp, #12
1001420a:	f85d eb04 	ldr.w	lr, [sp], #4
1001420e:	b004      	add	sp, #16
10014210:	4770      	bx	lr
10014212:	bf00      	nop
10014214:	20000598 	.word	0x20000598

10014218 <_vfprintf_r>:
10014218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001421c:	b0df      	sub	sp, #380	@ 0x17c
1001421e:	461c      	mov	r4, r3
10014220:	9107      	str	r1, [sp, #28]
10014222:	4691      	mov	r9, r2
10014224:	4683      	mov	fp, r0
10014226:	f003 ff33 	bl	10018090 <_localeconv_r>
1001422a:	6803      	ldr	r3, [r0, #0]
1001422c:	9319      	str	r3, [sp, #100]	@ 0x64
1001422e:	4618      	mov	r0, r3
10014230:	f004 fa66 	bl	10018700 <strlen>
10014234:	2208      	movs	r2, #8
10014236:	9018      	str	r0, [sp, #96]	@ 0x60
10014238:	2100      	movs	r1, #0
1001423a:	a82e      	add	r0, sp, #184	@ 0xb8
1001423c:	940d      	str	r4, [sp, #52]	@ 0x34
1001423e:	f003 fe9b 	bl	10017f78 <memset>
10014242:	f1bb 0f00 	cmp.w	fp, #0
10014246:	d004      	beq.n	10014252 <_vfprintf_r+0x3a>
10014248:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
1001424c:	2b00      	cmp	r3, #0
1001424e:	f001 807f 	beq.w	10015350 <_vfprintf_r+0x1138>
10014252:	9b07      	ldr	r3, [sp, #28]
10014254:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
10014256:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001425a:	07d5      	lsls	r5, r2, #31
1001425c:	d402      	bmi.n	10014264 <_vfprintf_r+0x4c>
1001425e:	0598      	lsls	r0, r3, #22
10014260:	f140 869f 	bpl.w	10014fa2 <_vfprintf_r+0xd8a>
10014264:	0499      	lsls	r1, r3, #18
10014266:	d407      	bmi.n	10014278 <_vfprintf_r+0x60>
10014268:	9907      	ldr	r1, [sp, #28]
1001426a:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
1001426c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10014270:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10014274:	818b      	strh	r3, [r1, #12]
10014276:	664a      	str	r2, [r1, #100]	@ 0x64
10014278:	071a      	lsls	r2, r3, #28
1001427a:	f140 80cc 	bpl.w	10014416 <_vfprintf_r+0x1fe>
1001427e:	9a07      	ldr	r2, [sp, #28]
10014280:	6912      	ldr	r2, [r2, #16]
10014282:	2a00      	cmp	r2, #0
10014284:	f000 80c7 	beq.w	10014416 <_vfprintf_r+0x1fe>
10014288:	f003 021a 	and.w	r2, r3, #26
1001428c:	2a0a      	cmp	r2, #10
1001428e:	f000 80d1 	beq.w	10014434 <_vfprintf_r+0x21c>
10014292:	2300      	movs	r3, #0
10014294:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10014298:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
1001429c:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
100142a0:	9313      	str	r3, [sp, #76]	@ 0x4c
100142a2:	931a      	str	r3, [sp, #104]	@ 0x68
100142a4:	930a      	str	r3, [sp, #40]	@ 0x28
100142a6:	2400      	movs	r4, #0
100142a8:	2300      	movs	r3, #0
100142aa:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
100142ae:	aa35      	add	r2, sp, #212	@ 0xd4
100142b0:	9232      	str	r2, [sp, #200]	@ 0xc8
100142b2:	4690      	mov	r8, r2
100142b4:	f8cd b020 	str.w	fp, [sp, #32]
100142b8:	464d      	mov	r5, r9
100142ba:	9f08      	ldr	r7, [sp, #32]
100142bc:	462e      	mov	r6, r5
100142be:	4b8d      	ldr	r3, [pc, #564]	@ (100144f4 <_vfprintf_r+0x2dc>)
100142c0:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
100142c4:	f003 fede 	bl	10018084 <__locale_mb_cur_max>
100142c8:	4603      	mov	r3, r0
100142ca:	a82e      	add	r0, sp, #184	@ 0xb8
100142cc:	9000      	str	r0, [sp, #0]
100142ce:	4632      	mov	r2, r6
100142d0:	a92a      	add	r1, sp, #168	@ 0xa8
100142d2:	4638      	mov	r0, r7
100142d4:	47a0      	blx	r4
100142d6:	2800      	cmp	r0, #0
100142d8:	f000 80cb 	beq.w	10014472 <_vfprintf_r+0x25a>
100142dc:	f2c0 80c1 	blt.w	10014462 <_vfprintf_r+0x24a>
100142e0:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
100142e2:	2a25      	cmp	r2, #37	@ 0x25
100142e4:	4603      	mov	r3, r0
100142e6:	d001      	beq.n	100142ec <_vfprintf_r+0xd4>
100142e8:	441e      	add	r6, r3
100142ea:	e7e8      	b.n	100142be <_vfprintf_r+0xa6>
100142ec:	1b77      	subs	r7, r6, r5
100142ee:	4604      	mov	r4, r0
100142f0:	f040 80c2 	bne.w	10014478 <_vfprintf_r+0x260>
100142f4:	2300      	movs	r3, #0
100142f6:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
100142fa:	4699      	mov	r9, r3
100142fc:	930b      	str	r3, [sp, #44]	@ 0x2c
100142fe:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10014302:	7873      	ldrb	r3, [r6, #1]
10014304:	9209      	str	r2, [sp, #36]	@ 0x24
10014306:	1c74      	adds	r4, r6, #1
10014308:	3401      	adds	r4, #1
1001430a:	f1a3 0220 	sub.w	r2, r3, #32
1001430e:	2a5a      	cmp	r2, #90	@ 0x5a
10014310:	f200 80f2 	bhi.w	100144f8 <_vfprintf_r+0x2e0>
10014314:	e8df f012 	tbh	[pc, r2, lsl #1]
10014318:	00f002c7 	.word	0x00f002c7
1001431c:	02c300f0 	.word	0x02c300f0
10014320:	00f000f0 	.word	0x00f000f0
10014324:	006a00f0 	.word	0x006a00f0
10014328:	00f000f0 	.word	0x00f000f0
1001432c:	02a0027d 	.word	0x02a0027d
10014330:	028800f0 	.word	0x028800f0
10014334:	00f002a9 	.word	0x00f002a9
10014338:	005b02a5 	.word	0x005b02a5
1001433c:	005b005b 	.word	0x005b005b
10014340:	005b005b 	.word	0x005b005b
10014344:	005b005b 	.word	0x005b005b
10014348:	005b005b 	.word	0x005b005b
1001434c:	00f000f0 	.word	0x00f000f0
10014350:	00f000f0 	.word	0x00f000f0
10014354:	00f000f0 	.word	0x00f000f0
10014358:	017100f0 	.word	0x017100f0
1001435c:	020800f0 	.word	0x020800f0
10014360:	01710322 	.word	0x01710322
10014364:	01710171 	.word	0x01710171
10014368:	00f000f0 	.word	0x00f000f0
1001436c:	00f000f0 	.word	0x00f000f0
10014370:	00f0031e 	.word	0x00f0031e
10014374:	02da00f0 	.word	0x02da00f0
10014378:	00f000f0 	.word	0x00f000f0
1001437c:	022600f0 	.word	0x022600f0
10014380:	030b00f0 	.word	0x030b00f0
10014384:	00f000f0 	.word	0x00f000f0
10014388:	00f00717 	.word	0x00f00717
1001438c:	00f000f0 	.word	0x00f000f0
10014390:	00f000f0 	.word	0x00f000f0
10014394:	00f000f0 	.word	0x00f000f0
10014398:	017100f0 	.word	0x017100f0
1001439c:	020800f0 	.word	0x020800f0
100143a0:	01710258 	.word	0x01710258
100143a4:	01710171 	.word	0x01710171
100143a8:	02580296 	.word	0x02580296
100143ac:	00f00204 	.word	0x00f00204
100143b0:	00f0028c 	.word	0x00f0028c
100143b4:	073f034d 	.word	0x073f034d
100143b8:	0204033b 	.word	0x0204033b
100143bc:	022600f0 	.word	0x022600f0
100143c0:	073a007d 	.word	0x073a007d
100143c4:	00f000f0 	.word	0x00f000f0
100143c8:	00f00743 	.word	0x00f00743
100143cc:	007d      	.short	0x007d
100143ce:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100143d2:	2100      	movs	r1, #0
100143d4:	f814 3b01 	ldrb.w	r3, [r4], #1
100143d8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100143dc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
100143e0:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100143e4:	2a09      	cmp	r2, #9
100143e6:	d9f5      	bls.n	100143d4 <_vfprintf_r+0x1bc>
100143e8:	910b      	str	r1, [sp, #44]	@ 0x2c
100143ea:	e78e      	b.n	1001430a <_vfprintf_r+0xf2>
100143ec:	9f08      	ldr	r7, [sp, #32]
100143ee:	4638      	mov	r0, r7
100143f0:	f003 fe4e 	bl	10018090 <_localeconv_r>
100143f4:	6843      	ldr	r3, [r0, #4]
100143f6:	931d      	str	r3, [sp, #116]	@ 0x74
100143f8:	4618      	mov	r0, r3
100143fa:	f004 f981 	bl	10018700 <strlen>
100143fe:	901e      	str	r0, [sp, #120]	@ 0x78
10014400:	4606      	mov	r6, r0
10014402:	4638      	mov	r0, r7
10014404:	f003 fe44 	bl	10018090 <_localeconv_r>
10014408:	6883      	ldr	r3, [r0, #8]
1001440a:	931b      	str	r3, [sp, #108]	@ 0x6c
1001440c:	2e00      	cmp	r6, #0
1001440e:	f040 8621 	bne.w	10015054 <_vfprintf_r+0xe3c>
10014412:	7823      	ldrb	r3, [r4, #0]
10014414:	e778      	b.n	10014308 <_vfprintf_r+0xf0>
10014416:	9d07      	ldr	r5, [sp, #28]
10014418:	4658      	mov	r0, fp
1001441a:	4629      	mov	r1, r5
1001441c:	f003 fc0c 	bl	10017c38 <__swsetup_r>
10014420:	2800      	cmp	r0, #0
10014422:	f041 83a6 	bne.w	10015b72 <_vfprintf_r+0x195a>
10014426:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
1001442a:	f003 021a 	and.w	r2, r3, #26
1001442e:	2a0a      	cmp	r2, #10
10014430:	f47f af2f 	bne.w	10014292 <_vfprintf_r+0x7a>
10014434:	9907      	ldr	r1, [sp, #28]
10014436:	f9b1 200e 	ldrsh.w	r2, [r1, #14]
1001443a:	2a00      	cmp	r2, #0
1001443c:	f6ff af29 	blt.w	10014292 <_vfprintf_r+0x7a>
10014440:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
10014442:	07d5      	lsls	r5, r2, #31
10014444:	d402      	bmi.n	1001444c <_vfprintf_r+0x234>
10014446:	0598      	lsls	r0, r3, #22
10014448:	f141 81bf 	bpl.w	100157ca <_vfprintf_r+0x15b2>
1001444c:	9907      	ldr	r1, [sp, #28]
1001444e:	4623      	mov	r3, r4
10014450:	464a      	mov	r2, r9
10014452:	4658      	mov	r0, fp
10014454:	f001 fd04 	bl	10015e60 <__sbprintf>
10014458:	900a      	str	r0, [sp, #40]	@ 0x28
1001445a:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001445c:	b05f      	add	sp, #380	@ 0x17c
1001445e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014462:	2208      	movs	r2, #8
10014464:	2100      	movs	r1, #0
10014466:	a82e      	add	r0, sp, #184	@ 0xb8
10014468:	f003 fd86 	bl	10017f78 <memset>
1001446c:	2301      	movs	r3, #1
1001446e:	441e      	add	r6, r3
10014470:	e725      	b.n	100142be <_vfprintf_r+0xa6>
10014472:	1b77      	subs	r7, r6, r5
10014474:	4604      	mov	r4, r0
10014476:	d011      	beq.n	1001449c <_vfprintf_r+0x284>
10014478:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
1001447a:	443b      	add	r3, r7
1001447c:	9334      	str	r3, [sp, #208]	@ 0xd0
1001447e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014480:	3301      	adds	r3, #1
10014482:	2b07      	cmp	r3, #7
10014484:	e9c8 5700 	strd	r5, r7, [r8]
10014488:	9333      	str	r3, [sp, #204]	@ 0xcc
1001448a:	dc13      	bgt.n	100144b4 <_vfprintf_r+0x29c>
1001448c:	f108 0808 	add.w	r8, r8, #8
10014490:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10014492:	443b      	add	r3, r7
10014494:	930a      	str	r3, [sp, #40]	@ 0x28
10014496:	2c00      	cmp	r4, #0
10014498:	f47f af2c 	bne.w	100142f4 <_vfprintf_r+0xdc>
1001449c:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
1001449e:	f8dd b020 	ldr.w	fp, [sp, #32]
100144a2:	2b00      	cmp	r3, #0
100144a4:	f041 80d6 	bne.w	10015654 <_vfprintf_r+0x143c>
100144a8:	9b07      	ldr	r3, [sp, #28]
100144aa:	2200      	movs	r2, #0
100144ac:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100144b0:	9233      	str	r2, [sp, #204]	@ 0xcc
100144b2:	e012      	b.n	100144da <_vfprintf_r+0x2c2>
100144b4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100144b8:	aa32      	add	r2, sp, #200	@ 0xc8
100144ba:	f001 fd4d 	bl	10015f58 <__sprint_r>
100144be:	b948      	cbnz	r0, 100144d4 <_vfprintf_r+0x2bc>
100144c0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100144c4:	e7e4      	b.n	10014490 <_vfprintf_r+0x278>
100144c6:	46bb      	mov	fp, r7
100144c8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100144ca:	b11b      	cbz	r3, 100144d4 <_vfprintf_r+0x2bc>
100144cc:	990c      	ldr	r1, [sp, #48]	@ 0x30
100144ce:	4658      	mov	r0, fp
100144d0:	f005 fa16 	bl	10019900 <_free_r>
100144d4:	9b07      	ldr	r3, [sp, #28]
100144d6:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100144da:	9a07      	ldr	r2, [sp, #28]
100144dc:	6e52      	ldr	r2, [r2, #100]	@ 0x64
100144de:	07d4      	lsls	r4, r2, #31
100144e0:	f140 8114 	bpl.w	1001470c <_vfprintf_r+0x4f4>
100144e4:	0659      	lsls	r1, r3, #25
100144e6:	f101 8350 	bmi.w	10015b8a <_vfprintf_r+0x1972>
100144ea:	980a      	ldr	r0, [sp, #40]	@ 0x28
100144ec:	b05f      	add	sp, #380	@ 0x17c
100144ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100144f2:	bf00      	nop
100144f4:	2000042c 	.word	0x2000042c
100144f8:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100144fc:	2b00      	cmp	r3, #0
100144fe:	d0cd      	beq.n	1001449c <_vfprintf_r+0x284>
10014500:	2200      	movs	r2, #0
10014502:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10014506:	2301      	movs	r3, #1
10014508:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001450c:	9306      	str	r3, [sp, #24]
1001450e:	920c      	str	r2, [sp, #48]	@ 0x30
10014510:	469b      	mov	fp, r3
10014512:	9209      	str	r2, [sp, #36]	@ 0x24
10014514:	9214      	str	r2, [sp, #80]	@ 0x50
10014516:	9210      	str	r2, [sp, #64]	@ 0x40
10014518:	9212      	str	r2, [sp, #72]	@ 0x48
1001451a:	ad45      	add	r5, sp, #276	@ 0x114
1001451c:	f019 0302 	ands.w	r3, r9, #2
10014520:	d002      	beq.n	10014528 <_vfprintf_r+0x310>
10014522:	9906      	ldr	r1, [sp, #24]
10014524:	3102      	adds	r1, #2
10014526:	9106      	str	r1, [sp, #24]
10014528:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
1001452c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001452e:	d105      	bne.n	1001453c <_vfprintf_r+0x324>
10014530:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10014532:	9806      	ldr	r0, [sp, #24]
10014534:	1a0e      	subs	r6, r1, r0
10014536:	2e00      	cmp	r6, #0
10014538:	f300 80a7 	bgt.w	1001468a <_vfprintf_r+0x472>
1001453c:	b182      	cbz	r2, 10014560 <_vfprintf_r+0x348>
1001453e:	2201      	movs	r2, #1
10014540:	f8c8 2004 	str.w	r2, [r8, #4]
10014544:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10014546:	3201      	adds	r2, #1
10014548:	3401      	adds	r4, #1
1001454a:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
1001454e:	2a07      	cmp	r2, #7
10014550:	9434      	str	r4, [sp, #208]	@ 0xd0
10014552:	9233      	str	r2, [sp, #204]	@ 0xcc
10014554:	f8c8 1000 	str.w	r1, [r8]
10014558:	f300 83e1 	bgt.w	10014d1e <_vfprintf_r+0xb06>
1001455c:	f108 0808 	add.w	r8, r8, #8
10014560:	b183      	cbz	r3, 10014584 <_vfprintf_r+0x36c>
10014562:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014564:	aa28      	add	r2, sp, #160	@ 0xa0
10014566:	3301      	adds	r3, #1
10014568:	3402      	adds	r4, #2
1001456a:	f8c8 2000 	str.w	r2, [r8]
1001456e:	2b07      	cmp	r3, #7
10014570:	f04f 0202 	mov.w	r2, #2
10014574:	9434      	str	r4, [sp, #208]	@ 0xd0
10014576:	9333      	str	r3, [sp, #204]	@ 0xcc
10014578:	f8c8 2004 	str.w	r2, [r8, #4]
1001457c:	f300 83dd 	bgt.w	10014d3a <_vfprintf_r+0xb22>
10014580:	f108 0808 	add.w	r8, r8, #8
10014584:	2f80      	cmp	r7, #128	@ 0x80
10014586:	f000 82be 	beq.w	10014b06 <_vfprintf_r+0x8ee>
1001458a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001458c:	eba3 060b 	sub.w	r6, r3, fp
10014590:	2e00      	cmp	r6, #0
10014592:	f300 82fd 	bgt.w	10014b90 <_vfprintf_r+0x978>
10014596:	f419 7f80 	tst.w	r9, #256	@ 0x100
1001459a:	f040 8219 	bne.w	100149d0 <_vfprintf_r+0x7b8>
1001459e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100145a0:	f8c8 5000 	str.w	r5, [r8]
100145a4:	3301      	adds	r3, #1
100145a6:	445c      	add	r4, fp
100145a8:	2b07      	cmp	r3, #7
100145aa:	f8c8 b004 	str.w	fp, [r8, #4]
100145ae:	9434      	str	r4, [sp, #208]	@ 0xd0
100145b0:	9333      	str	r3, [sp, #204]	@ 0xcc
100145b2:	f300 834d 	bgt.w	10014c50 <_vfprintf_r+0xa38>
100145b6:	f108 0808 	add.w	r8, r8, #8
100145ba:	f019 0f04 	tst.w	r9, #4
100145be:	d005      	beq.n	100145cc <_vfprintf_r+0x3b4>
100145c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100145c2:	9a06      	ldr	r2, [sp, #24]
100145c4:	1a9d      	subs	r5, r3, r2
100145c6:	2d00      	cmp	r5, #0
100145c8:	f300 83c3 	bgt.w	10014d52 <_vfprintf_r+0xb3a>
100145cc:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
100145d0:	9906      	ldr	r1, [sp, #24]
100145d2:	428a      	cmp	r2, r1
100145d4:	bfac      	ite	ge
100145d6:	189b      	addge	r3, r3, r2
100145d8:	185b      	addlt	r3, r3, r1
100145da:	930a      	str	r3, [sp, #40]	@ 0x28
100145dc:	2c00      	cmp	r4, #0
100145de:	f040 830f 	bne.w	10014c00 <_vfprintf_r+0x9e8>
100145e2:	2300      	movs	r3, #0
100145e4:	9333      	str	r3, [sp, #204]	@ 0xcc
100145e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100145e8:	b11b      	cbz	r3, 100145f2 <_vfprintf_r+0x3da>
100145ea:	990c      	ldr	r1, [sp, #48]	@ 0x30
100145ec:	9808      	ldr	r0, [sp, #32]
100145ee:	f005 f987 	bl	10019900 <_free_r>
100145f2:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100145f6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100145f8:	e65f      	b.n	100142ba <_vfprintf_r+0xa2>
100145fa:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100145fe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014600:	3307      	adds	r3, #7
10014602:	f023 0307 	bic.w	r3, r3, #7
10014606:	e8f3 6702 	ldrd	r6, r7, [r3], #8
1001460a:	930d      	str	r3, [sp, #52]	@ 0x34
1001460c:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10014610:	9323      	str	r3, [sp, #140]	@ 0x8c
10014612:	9622      	str	r6, [sp, #136]	@ 0x88
10014614:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
10014618:	4ba8      	ldr	r3, [pc, #672]	@ (100148bc <_vfprintf_r+0x6a4>)
1001461a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001461e:	4650      	mov	r0, sl
10014620:	4659      	mov	r1, fp
10014622:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
10014626:	f00c fbcd 	bl	10020dc4 <__aeabi_dcmpun>
1001462a:	2800      	cmp	r0, #0
1001462c:	f040 8530 	bne.w	10015090 <_vfprintf_r+0xe78>
10014630:	4ba2      	ldr	r3, [pc, #648]	@ (100148bc <_vfprintf_r+0x6a4>)
10014632:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10014636:	4650      	mov	r0, sl
10014638:	4659      	mov	r1, fp
1001463a:	f00c fba5 	bl	10020d88 <__aeabi_dcmple>
1001463e:	2800      	cmp	r0, #0
10014640:	f040 8526 	bne.w	10015090 <_vfprintf_r+0xe78>
10014644:	2200      	movs	r2, #0
10014646:	2300      	movs	r3, #0
10014648:	4630      	mov	r0, r6
1001464a:	4639      	mov	r1, r7
1001464c:	f00c fb92 	bl	10020d74 <__aeabi_dcmplt>
10014650:	2800      	cmp	r0, #0
10014652:	f041 810f 	bne.w	10015874 <_vfprintf_r+0x165c>
10014656:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001465a:	4d99      	ldr	r5, [pc, #612]	@ (100148c0 <_vfprintf_r+0x6a8>)
1001465c:	4b99      	ldr	r3, [pc, #612]	@ (100148c4 <_vfprintf_r+0x6ac>)
1001465e:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10014662:	990e      	ldr	r1, [sp, #56]	@ 0x38
10014664:	2947      	cmp	r1, #71	@ 0x47
10014666:	bfc8      	it	gt
10014668:	461d      	movgt	r5, r3
1001466a:	2300      	movs	r3, #0
1001466c:	2103      	movs	r1, #3
1001466e:	930c      	str	r3, [sp, #48]	@ 0x30
10014670:	9106      	str	r1, [sp, #24]
10014672:	468b      	mov	fp, r1
10014674:	9309      	str	r3, [sp, #36]	@ 0x24
10014676:	9314      	str	r3, [sp, #80]	@ 0x50
10014678:	9310      	str	r3, [sp, #64]	@ 0x40
1001467a:	9312      	str	r3, [sp, #72]	@ 0x48
1001467c:	2a00      	cmp	r2, #0
1001467e:	f43f af4d 	beq.w	1001451c <_vfprintf_r+0x304>
10014682:	9b06      	ldr	r3, [sp, #24]
10014684:	3301      	adds	r3, #1
10014686:	9306      	str	r3, [sp, #24]
10014688:	e748      	b.n	1001451c <_vfprintf_r+0x304>
1001468a:	2e10      	cmp	r6, #16
1001468c:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
1001468e:	f341 823d 	ble.w	10015b0c <_vfprintf_r+0x18f4>
10014692:	488d      	ldr	r0, [pc, #564]	@ (100148c8 <_vfprintf_r+0x6b0>)
10014694:	9521      	str	r5, [sp, #132]	@ 0x84
10014696:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
1001469a:	4621      	mov	r1, r4
1001469c:	9d07      	ldr	r5, [sp, #28]
1001469e:	9c08      	ldr	r4, [sp, #32]
100146a0:	9015      	str	r0, [sp, #84]	@ 0x54
100146a2:	f04f 0a10 	mov.w	sl, #16
100146a6:	4607      	mov	r7, r0
100146a8:	e004      	b.n	100146b4 <_vfprintf_r+0x49c>
100146aa:	3e10      	subs	r6, #16
100146ac:	2e10      	cmp	r6, #16
100146ae:	f108 0808 	add.w	r8, r8, #8
100146b2:	dd16      	ble.n	100146e2 <_vfprintf_r+0x4ca>
100146b4:	3201      	adds	r2, #1
100146b6:	3110      	adds	r1, #16
100146b8:	2a07      	cmp	r2, #7
100146ba:	e9c8 7a00 	strd	r7, sl, [r8]
100146be:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
100146c2:	ddf2      	ble.n	100146aa <_vfprintf_r+0x492>
100146c4:	aa32      	add	r2, sp, #200	@ 0xc8
100146c6:	4629      	mov	r1, r5
100146c8:	4620      	mov	r0, r4
100146ca:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100146ce:	f001 fc43 	bl	10015f58 <__sprint_r>
100146d2:	2800      	cmp	r0, #0
100146d4:	f040 8636 	bne.w	10015344 <_vfprintf_r+0x112c>
100146d8:	3e10      	subs	r6, #16
100146da:	2e10      	cmp	r6, #16
100146dc:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
100146e0:	dce8      	bgt.n	100146b4 <_vfprintf_r+0x49c>
100146e2:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
100146e6:	9d21      	ldr	r5, [sp, #132]	@ 0x84
100146e8:	460c      	mov	r4, r1
100146ea:	3201      	adds	r2, #1
100146ec:	9915      	ldr	r1, [sp, #84]	@ 0x54
100146ee:	f8c8 1000 	str.w	r1, [r8]
100146f2:	4434      	add	r4, r6
100146f4:	2a07      	cmp	r2, #7
100146f6:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
100146fa:	f8c8 6004 	str.w	r6, [r8, #4]
100146fe:	f300 8610 	bgt.w	10015322 <_vfprintf_r+0x110a>
10014702:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10014706:	f108 0808 	add.w	r8, r8, #8
1001470a:	e717      	b.n	1001453c <_vfprintf_r+0x324>
1001470c:	0598      	lsls	r0, r3, #22
1001470e:	f53f aee9 	bmi.w	100144e4 <_vfprintf_r+0x2cc>
10014712:	9c07      	ldr	r4, [sp, #28]
10014714:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014716:	f003 fef1 	bl	100184fc <__retarget_lock_release_recursive>
1001471a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001471e:	e6e1      	b.n	100144e4 <_vfprintf_r+0x2cc>
10014720:	7823      	ldrb	r3, [r4, #0]
10014722:	f049 0920 	orr.w	r9, r9, #32
10014726:	e5ef      	b.n	10014308 <_vfprintf_r+0xf0>
10014728:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001472a:	2b43      	cmp	r3, #67	@ 0x43
1001472c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014730:	f102 0404 	add.w	r4, r2, #4
10014734:	f000 8562 	beq.w	100151fc <_vfprintf_r+0xfe4>
10014738:	f019 0f10 	tst.w	r9, #16
1001473c:	f040 855e 	bne.w	100151fc <_vfprintf_r+0xfe4>
10014740:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014742:	681b      	ldr	r3, [r3, #0]
10014744:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10014748:	2301      	movs	r3, #1
1001474a:	9306      	str	r3, [sp, #24]
1001474c:	469b      	mov	fp, r3
1001474e:	ad45      	add	r5, sp, #276	@ 0x114
10014750:	2200      	movs	r2, #0
10014752:	940d      	str	r4, [sp, #52]	@ 0x34
10014754:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10014758:	920c      	str	r2, [sp, #48]	@ 0x30
1001475a:	9209      	str	r2, [sp, #36]	@ 0x24
1001475c:	9214      	str	r2, [sp, #80]	@ 0x50
1001475e:	9210      	str	r2, [sp, #64]	@ 0x40
10014760:	9212      	str	r2, [sp, #72]	@ 0x48
10014762:	e6db      	b.n	1001451c <_vfprintf_r+0x304>
10014764:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10014766:	f856 5b04 	ldr.w	r5, [r6], #4
1001476a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001476e:	2300      	movs	r3, #0
10014770:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10014774:	2d00      	cmp	r5, #0
10014776:	f000 8530 	beq.w	100151da <_vfprintf_r+0xfc2>
1001477a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001477c:	2b53      	cmp	r3, #83	@ 0x53
1001477e:	f000 8601 	beq.w	10015384 <_vfprintf_r+0x116c>
10014782:	f019 0310 	ands.w	r3, r9, #16
10014786:	9312      	str	r3, [sp, #72]	@ 0x48
10014788:	f040 85fc 	bne.w	10015384 <_vfprintf_r+0x116c>
1001478c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001478e:	1c5a      	adds	r2, r3, #1
10014790:	f000 876a 	beq.w	10015668 <_vfprintf_r+0x1450>
10014794:	9912      	ldr	r1, [sp, #72]	@ 0x48
10014796:	461a      	mov	r2, r3
10014798:	4628      	mov	r0, r5
1001479a:	f003 feb1 	bl	10018500 <memchr>
1001479e:	900c      	str	r0, [sp, #48]	@ 0x30
100147a0:	2800      	cmp	r0, #0
100147a2:	f001 82c5 	beq.w	10015d30 <_vfprintf_r+0x1b18>
100147a6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100147a8:	960d      	str	r6, [sp, #52]	@ 0x34
100147aa:	eba3 0b05 	sub.w	fp, r3, r5
100147ae:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100147b0:	9309      	str	r3, [sp, #36]	@ 0x24
100147b2:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
100147b6:	9314      	str	r3, [sp, #80]	@ 0x50
100147b8:	9310      	str	r3, [sp, #64]	@ 0x40
100147ba:	930c      	str	r3, [sp, #48]	@ 0x30
100147bc:	2373      	movs	r3, #115	@ 0x73
100147be:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100147c2:	9106      	str	r1, [sp, #24]
100147c4:	930e      	str	r3, [sp, #56]	@ 0x38
100147c6:	e759      	b.n	1001467c <_vfprintf_r+0x464>
100147c8:	f019 0f20 	tst.w	r9, #32
100147cc:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100147d0:	f000 80cc 	beq.w	1001496c <_vfprintf_r+0x754>
100147d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100147d6:	3307      	adds	r3, #7
100147d8:	f023 0307 	bic.w	r3, r3, #7
100147dc:	461a      	mov	r2, r3
100147de:	6859      	ldr	r1, [r3, #4]
100147e0:	f852 3b08 	ldr.w	r3, [r2], #8
100147e4:	920d      	str	r2, [sp, #52]	@ 0x34
100147e6:	460a      	mov	r2, r1
100147e8:	2900      	cmp	r1, #0
100147ea:	f2c0 8425 	blt.w	10015038 <_vfprintf_r+0xe20>
100147ee:	9909      	ldr	r1, [sp, #36]	@ 0x24
100147f0:	3101      	adds	r1, #1
100147f2:	f000 8285 	beq.w	10014d00 <_vfprintf_r+0xae8>
100147f6:	ea53 0102 	orrs.w	r1, r3, r2
100147fa:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
100147fe:	f040 8280 	bne.w	10014d02 <_vfprintf_r+0xaea>
10014802:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10014804:	2a00      	cmp	r2, #0
10014806:	f040 8281 	bne.w	10014d0c <_vfprintf_r+0xaf4>
1001480a:	46a1      	mov	r9, r4
1001480c:	4693      	mov	fp, r2
1001480e:	ad5e      	add	r5, sp, #376	@ 0x178
10014810:	e150      	b.n	10014ab4 <_vfprintf_r+0x89c>
10014812:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014814:	f853 2b04 	ldr.w	r2, [r3], #4
10014818:	920b      	str	r2, [sp, #44]	@ 0x2c
1001481a:	2a00      	cmp	r2, #0
1001481c:	f280 83ce 	bge.w	10014fbc <_vfprintf_r+0xda4>
10014820:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10014822:	930d      	str	r3, [sp, #52]	@ 0x34
10014824:	4252      	negs	r2, r2
10014826:	920b      	str	r2, [sp, #44]	@ 0x2c
10014828:	7823      	ldrb	r3, [r4, #0]
1001482a:	f049 0904 	orr.w	r9, r9, #4
1001482e:	e56b      	b.n	10014308 <_vfprintf_r+0xf0>
10014830:	7823      	ldrb	r3, [r4, #0]
10014832:	2b6c      	cmp	r3, #108	@ 0x6c
10014834:	bf03      	ittte	eq
10014836:	7863      	ldrbeq	r3, [r4, #1]
10014838:	f049 0920 	orreq.w	r9, r9, #32
1001483c:	3401      	addeq	r4, #1
1001483e:	f049 0910 	orrne.w	r9, r9, #16
10014842:	e561      	b.n	10014308 <_vfprintf_r+0xf0>
10014844:	7823      	ldrb	r3, [r4, #0]
10014846:	2b68      	cmp	r3, #104	@ 0x68
10014848:	bf03      	ittte	eq
1001484a:	7863      	ldrbeq	r3, [r4, #1]
1001484c:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10014850:	3401      	addeq	r4, #1
10014852:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
10014856:	e557      	b.n	10014308 <_vfprintf_r+0xf0>
10014858:	232b      	movs	r3, #43	@ 0x2b
1001485a:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001485e:	7823      	ldrb	r3, [r4, #0]
10014860:	e552      	b.n	10014308 <_vfprintf_r+0xf0>
10014862:	7823      	ldrb	r3, [r4, #0]
10014864:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
10014868:	e54e      	b.n	10014308 <_vfprintf_r+0xf0>
1001486a:	4621      	mov	r1, r4
1001486c:	f811 3b01 	ldrb.w	r3, [r1], #1
10014870:	2b2a      	cmp	r3, #42	@ 0x2a
10014872:	f001 82db 	beq.w	10015e2c <_vfprintf_r+0x1c14>
10014876:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001487a:	2a09      	cmp	r2, #9
1001487c:	460c      	mov	r4, r1
1001487e:	bf98      	it	ls
10014880:	2100      	movls	r1, #0
10014882:	f201 8172 	bhi.w	10015b6a <_vfprintf_r+0x1952>
10014886:	f814 3b01 	ldrb.w	r3, [r4], #1
1001488a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001488e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10014892:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10014896:	2a09      	cmp	r2, #9
10014898:	d9f5      	bls.n	10014886 <_vfprintf_r+0x66e>
1001489a:	9109      	str	r1, [sp, #36]	@ 0x24
1001489c:	e535      	b.n	1001430a <_vfprintf_r+0xf2>
1001489e:	7823      	ldrb	r3, [r4, #0]
100148a0:	f049 0901 	orr.w	r9, r9, #1
100148a4:	e530      	b.n	10014308 <_vfprintf_r+0xf0>
100148a6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100148aa:	7823      	ldrb	r3, [r4, #0]
100148ac:	2a00      	cmp	r2, #0
100148ae:	f47f ad2b 	bne.w	10014308 <_vfprintf_r+0xf0>
100148b2:	2220      	movs	r2, #32
100148b4:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100148b8:	e526      	b.n	10014308 <_vfprintf_r+0xf0>
100148ba:	bf00      	nop
100148bc:	7fefffff 	.word	0x7fefffff
100148c0:	10023aa4 	.word	0x10023aa4
100148c4:	10023aa8 	.word	0x10023aa8
100148c8:	10023af8 	.word	0x10023af8
100148cc:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100148d0:	f049 0910 	orr.w	r9, r9, #16
100148d4:	f019 0220 	ands.w	r2, r9, #32
100148d8:	f000 8354 	beq.w	10014f84 <_vfprintf_r+0xd6c>
100148dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100148de:	3307      	adds	r3, #7
100148e0:	f023 0307 	bic.w	r3, r3, #7
100148e4:	4619      	mov	r1, r3
100148e6:	685a      	ldr	r2, [r3, #4]
100148e8:	f851 3b08 	ldr.w	r3, [r1], #8
100148ec:	910d      	str	r1, [sp, #52]	@ 0x34
100148ee:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
100148f2:	2100      	movs	r1, #0
100148f4:	2000      	movs	r0, #0
100148f6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
100148f8:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
100148fc:	1c6f      	adds	r7, r5, #1
100148fe:	f000 80c2 	beq.w	10014a86 <_vfprintf_r+0x86e>
10014902:	ea53 0002 	orrs.w	r0, r3, r2
10014906:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
1001490a:	f040 80bb 	bne.w	10014a84 <_vfprintf_r+0x86c>
1001490e:	2d00      	cmp	r5, #0
10014910:	f040 8523 	bne.w	1001535a <_vfprintf_r+0x1142>
10014914:	2900      	cmp	r1, #0
10014916:	f040 8496 	bne.w	10015246 <_vfprintf_r+0x102e>
1001491a:	f014 0b01 	ands.w	fp, r4, #1
1001491e:	f000 8351 	beq.w	10014fc4 <_vfprintf_r+0xdac>
10014922:	2330      	movs	r3, #48	@ 0x30
10014924:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10014928:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001492c:	e0c2      	b.n	10014ab4 <_vfprintf_r+0x89c>
1001492e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014932:	f049 0410 	orr.w	r4, r9, #16
10014936:	f014 0220 	ands.w	r2, r4, #32
1001493a:	f000 8315 	beq.w	10014f68 <_vfprintf_r+0xd50>
1001493e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014940:	3307      	adds	r3, #7
10014942:	f023 0307 	bic.w	r3, r3, #7
10014946:	4619      	mov	r1, r3
10014948:	685a      	ldr	r2, [r3, #4]
1001494a:	f851 3b08 	ldr.w	r3, [r1], #8
1001494e:	910d      	str	r1, [sp, #52]	@ 0x34
10014950:	2101      	movs	r1, #1
10014952:	e7cf      	b.n	100148f4 <_vfprintf_r+0x6dc>
10014954:	7823      	ldrb	r3, [r4, #0]
10014956:	f049 0908 	orr.w	r9, r9, #8
1001495a:	e4d5      	b.n	10014308 <_vfprintf_r+0xf0>
1001495c:	f049 0910 	orr.w	r9, r9, #16
10014960:	f019 0f20 	tst.w	r9, #32
10014964:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014968:	f47f af34 	bne.w	100147d4 <_vfprintf_r+0x5bc>
1001496c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001496e:	f019 0f10 	tst.w	r9, #16
10014972:	f852 3b04 	ldr.w	r3, [r2], #4
10014976:	920d      	str	r2, [sp, #52]	@ 0x34
10014978:	f040 8359 	bne.w	1001502e <_vfprintf_r+0xe16>
1001497c:	f019 0f40 	tst.w	r9, #64	@ 0x40
10014980:	f000 8351 	beq.w	10015026 <_vfprintf_r+0xe0e>
10014984:	f343 32c0 	sbfx	r2, r3, #15, #1
10014988:	4611      	mov	r1, r2
1001498a:	b21b      	sxth	r3, r3
1001498c:	e72c      	b.n	100147e8 <_vfprintf_r+0x5d0>
1001498e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10014990:	940f      	str	r4, [sp, #60]	@ 0x3c
10014992:	f852 3b04 	ldr.w	r3, [r2], #4
10014996:	920d      	str	r2, [sp, #52]	@ 0x34
10014998:	f647 0230 	movw	r2, #30768	@ 0x7830
1001499c:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
100149a0:	2078      	movs	r0, #120	@ 0x78
100149a2:	4ab1      	ldr	r2, [pc, #708]	@ (10014c68 <_vfprintf_r+0xa50>)
100149a4:	921a      	str	r2, [sp, #104]	@ 0x68
100149a6:	f049 0402 	orr.w	r4, r9, #2
100149aa:	2200      	movs	r2, #0
100149ac:	2102      	movs	r1, #2
100149ae:	900e      	str	r0, [sp, #56]	@ 0x38
100149b0:	e7a0      	b.n	100148f4 <_vfprintf_r+0x6dc>
100149b2:	f019 0f20 	tst.w	r9, #32
100149b6:	940f      	str	r4, [sp, #60]	@ 0x3c
100149b8:	f000 8359 	beq.w	1001506e <_vfprintf_r+0xe56>
100149bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100149be:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100149c0:	681b      	ldr	r3, [r3, #0]
100149c2:	601a      	str	r2, [r3, #0]
100149c4:	17d2      	asrs	r2, r2, #31
100149c6:	605a      	str	r2, [r3, #4]
100149c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100149ca:	3304      	adds	r3, #4
100149cc:	930d      	str	r3, [sp, #52]	@ 0x34
100149ce:	e612      	b.n	100145f6 <_vfprintf_r+0x3de>
100149d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100149d2:	2b65      	cmp	r3, #101	@ 0x65
100149d4:	f340 814e 	ble.w	10014c74 <_vfprintf_r+0xa5c>
100149d8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100149dc:	2200      	movs	r2, #0
100149de:	2300      	movs	r3, #0
100149e0:	f00c f9be 	bl	10020d60 <__aeabi_dcmpeq>
100149e4:	2800      	cmp	r0, #0
100149e6:	f000 81ee 	beq.w	10014dc6 <_vfprintf_r+0xbae>
100149ea:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100149ec:	4a9f      	ldr	r2, [pc, #636]	@ (10014c6c <_vfprintf_r+0xa54>)
100149ee:	f8c8 2000 	str.w	r2, [r8]
100149f2:	3301      	adds	r3, #1
100149f4:	3401      	adds	r4, #1
100149f6:	2201      	movs	r2, #1
100149f8:	2b07      	cmp	r3, #7
100149fa:	9434      	str	r4, [sp, #208]	@ 0xd0
100149fc:	9333      	str	r3, [sp, #204]	@ 0xcc
100149fe:	f8c8 2004 	str.w	r2, [r8, #4]
10014a02:	f300 84af 	bgt.w	10015364 <_vfprintf_r+0x114c>
10014a06:	f108 0808 	add.w	r8, r8, #8
10014a0a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10014a0c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10014a0e:	4293      	cmp	r3, r2
10014a10:	f280 82cf 	bge.w	10014fb2 <_vfprintf_r+0xd9a>
10014a14:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014a16:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10014a18:	441c      	add	r4, r3
10014a1a:	e9c8 2300 	strd	r2, r3, [r8]
10014a1e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014a20:	9434      	str	r4, [sp, #208]	@ 0xd0
10014a22:	3301      	adds	r3, #1
10014a24:	2b07      	cmp	r3, #7
10014a26:	9333      	str	r3, [sp, #204]	@ 0xcc
10014a28:	f300 83cb 	bgt.w	100151c2 <_vfprintf_r+0xfaa>
10014a2c:	f108 0808 	add.w	r8, r8, #8
10014a30:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014a32:	1e5d      	subs	r5, r3, #1
10014a34:	2d00      	cmp	r5, #0
10014a36:	f77f adc0 	ble.w	100145ba <_vfprintf_r+0x3a2>
10014a3a:	2d10      	cmp	r5, #16
10014a3c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014a3e:	f340 84fa 	ble.w	10015436 <_vfprintf_r+0x121e>
10014a42:	4f8b      	ldr	r7, [pc, #556]	@ (10014c70 <_vfprintf_r+0xa58>)
10014a44:	9715      	str	r7, [sp, #84]	@ 0x54
10014a46:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
10014a4a:	2610      	movs	r6, #16
10014a4c:	e005      	b.n	10014a5a <_vfprintf_r+0x842>
10014a4e:	f108 0808 	add.w	r8, r8, #8
10014a52:	3d10      	subs	r5, #16
10014a54:	2d10      	cmp	r5, #16
10014a56:	f340 84f0 	ble.w	1001543a <_vfprintf_r+0x1222>
10014a5a:	3301      	adds	r3, #1
10014a5c:	3410      	adds	r4, #16
10014a5e:	2b07      	cmp	r3, #7
10014a60:	e9c8 7600 	strd	r7, r6, [r8]
10014a64:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014a68:	ddf1      	ble.n	10014a4e <_vfprintf_r+0x836>
10014a6a:	aa32      	add	r2, sp, #200	@ 0xc8
10014a6c:	4651      	mov	r1, sl
10014a6e:	4658      	mov	r0, fp
10014a70:	f001 fa72 	bl	10015f58 <__sprint_r>
10014a74:	2800      	cmp	r0, #0
10014a76:	f47f ad27 	bne.w	100144c8 <_vfprintf_r+0x2b0>
10014a7a:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10014a7e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014a82:	e7e6      	b.n	10014a52 <_vfprintf_r+0x83a>
10014a84:	464c      	mov	r4, r9
10014a86:	2901      	cmp	r1, #1
10014a88:	f000 813b 	beq.w	10014d02 <_vfprintf_r+0xaea>
10014a8c:	2902      	cmp	r1, #2
10014a8e:	ad5e      	add	r5, sp, #376	@ 0x178
10014a90:	d11e      	bne.n	10014ad0 <_vfprintf_r+0x8b8>
10014a92:	981a      	ldr	r0, [sp, #104]	@ 0x68
10014a94:	f003 010f 	and.w	r1, r3, #15
10014a98:	091b      	lsrs	r3, r3, #4
10014a9a:	5c41      	ldrb	r1, [r0, r1]
10014a9c:	f805 1d01 	strb.w	r1, [r5, #-1]!
10014aa0:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10014aa4:	0912      	lsrs	r2, r2, #4
10014aa6:	ea53 0102 	orrs.w	r1, r3, r2
10014aaa:	d1f3      	bne.n	10014a94 <_vfprintf_r+0x87c>
10014aac:	ab5e      	add	r3, sp, #376	@ 0x178
10014aae:	46a1      	mov	r9, r4
10014ab0:	eba3 0b05 	sub.w	fp, r3, r5
10014ab4:	9909      	ldr	r1, [sp, #36]	@ 0x24
10014ab6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10014aba:	4559      	cmp	r1, fp
10014abc:	f04f 0300 	mov.w	r3, #0
10014ac0:	bfb8      	it	lt
10014ac2:	4659      	movlt	r1, fp
10014ac4:	930c      	str	r3, [sp, #48]	@ 0x30
10014ac6:	9106      	str	r1, [sp, #24]
10014ac8:	9314      	str	r3, [sp, #80]	@ 0x50
10014aca:	9310      	str	r3, [sp, #64]	@ 0x40
10014acc:	9312      	str	r3, [sp, #72]	@ 0x48
10014ace:	e5d5      	b.n	1001467c <_vfprintf_r+0x464>
10014ad0:	f003 0107 	and.w	r1, r3, #7
10014ad4:	08db      	lsrs	r3, r3, #3
10014ad6:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
10014ada:	08d2      	lsrs	r2, r2, #3
10014adc:	3130      	adds	r1, #48	@ 0x30
10014ade:	ea53 0602 	orrs.w	r6, r3, r2
10014ae2:	4628      	mov	r0, r5
10014ae4:	f805 1d01 	strb.w	r1, [r5, #-1]!
10014ae8:	d1f2      	bne.n	10014ad0 <_vfprintf_r+0x8b8>
10014aea:	07e6      	lsls	r6, r4, #31
10014aec:	d5de      	bpl.n	10014aac <_vfprintf_r+0x894>
10014aee:	2930      	cmp	r1, #48	@ 0x30
10014af0:	d0dc      	beq.n	10014aac <_vfprintf_r+0x894>
10014af2:	2330      	movs	r3, #48	@ 0x30
10014af4:	3802      	subs	r0, #2
10014af6:	f805 3c01 	strb.w	r3, [r5, #-1]
10014afa:	ab5e      	add	r3, sp, #376	@ 0x178
10014afc:	46a1      	mov	r9, r4
10014afe:	eba3 0b00 	sub.w	fp, r3, r0
10014b02:	4605      	mov	r5, r0
10014b04:	e7d6      	b.n	10014ab4 <_vfprintf_r+0x89c>
10014b06:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10014b08:	9a06      	ldr	r2, [sp, #24]
10014b0a:	1a9e      	subs	r6, r3, r2
10014b0c:	2e00      	cmp	r6, #0
10014b0e:	f77f ad3c 	ble.w	1001458a <_vfprintf_r+0x372>
10014b12:	2e10      	cmp	r6, #16
10014b14:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014b16:	f341 80ad 	ble.w	10015c74 <_vfprintf_r+0x1a5c>
10014b1a:	4855      	ldr	r0, [pc, #340]	@ (10014c70 <_vfprintf_r+0xa58>)
10014b1c:	f8dd a020 	ldr.w	sl, [sp, #32]
10014b20:	9015      	str	r0, [sp, #84]	@ 0x54
10014b22:	4621      	mov	r1, r4
10014b24:	2710      	movs	r7, #16
10014b26:	461a      	mov	r2, r3
10014b28:	4604      	mov	r4, r0
10014b2a:	e004      	b.n	10014b36 <_vfprintf_r+0x91e>
10014b2c:	3e10      	subs	r6, #16
10014b2e:	2e10      	cmp	r6, #16
10014b30:	f108 0808 	add.w	r8, r8, #8
10014b34:	dd16      	ble.n	10014b64 <_vfprintf_r+0x94c>
10014b36:	3201      	adds	r2, #1
10014b38:	3110      	adds	r1, #16
10014b3a:	2a07      	cmp	r2, #7
10014b3c:	e9c8 4700 	strd	r4, r7, [r8]
10014b40:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10014b44:	ddf2      	ble.n	10014b2c <_vfprintf_r+0x914>
10014b46:	9907      	ldr	r1, [sp, #28]
10014b48:	aa32      	add	r2, sp, #200	@ 0xc8
10014b4a:	4650      	mov	r0, sl
10014b4c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014b50:	f001 fa02 	bl	10015f58 <__sprint_r>
10014b54:	2800      	cmp	r0, #0
10014b56:	f040 83f8 	bne.w	1001534a <_vfprintf_r+0x1132>
10014b5a:	3e10      	subs	r6, #16
10014b5c:	2e10      	cmp	r6, #16
10014b5e:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10014b62:	dce8      	bgt.n	10014b36 <_vfprintf_r+0x91e>
10014b64:	460c      	mov	r4, r1
10014b66:	4613      	mov	r3, r2
10014b68:	3301      	adds	r3, #1
10014b6a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10014b6c:	f8c8 2000 	str.w	r2, [r8]
10014b70:	4434      	add	r4, r6
10014b72:	2b07      	cmp	r3, #7
10014b74:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014b78:	f8c8 6004 	str.w	r6, [r8, #4]
10014b7c:	f300 8314 	bgt.w	100151a8 <_vfprintf_r+0xf90>
10014b80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014b82:	eba3 060b 	sub.w	r6, r3, fp
10014b86:	2e00      	cmp	r6, #0
10014b88:	f108 0808 	add.w	r8, r8, #8
10014b8c:	f77f ad03 	ble.w	10014596 <_vfprintf_r+0x37e>
10014b90:	4a37      	ldr	r2, [pc, #220]	@ (10014c70 <_vfprintf_r+0xa58>)
10014b92:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014b94:	9215      	str	r2, [sp, #84]	@ 0x54
10014b96:	2e10      	cmp	r6, #16
10014b98:	dd23      	ble.n	10014be2 <_vfprintf_r+0x9ca>
10014b9a:	4622      	mov	r2, r4
10014b9c:	f04f 0a10 	mov.w	sl, #16
10014ba0:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
10014ba4:	e004      	b.n	10014bb0 <_vfprintf_r+0x998>
10014ba6:	3e10      	subs	r6, #16
10014ba8:	2e10      	cmp	r6, #16
10014baa:	f108 0808 	add.w	r8, r8, #8
10014bae:	dd17      	ble.n	10014be0 <_vfprintf_r+0x9c8>
10014bb0:	3301      	adds	r3, #1
10014bb2:	492f      	ldr	r1, [pc, #188]	@ (10014c70 <_vfprintf_r+0xa58>)
10014bb4:	3210      	adds	r2, #16
10014bb6:	2b07      	cmp	r3, #7
10014bb8:	e9c8 1a00 	strd	r1, sl, [r8]
10014bbc:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
10014bc0:	ddf1      	ble.n	10014ba6 <_vfprintf_r+0x98e>
10014bc2:	aa32      	add	r2, sp, #200	@ 0xc8
10014bc4:	4621      	mov	r1, r4
10014bc6:	4638      	mov	r0, r7
10014bc8:	f001 f9c6 	bl	10015f58 <__sprint_r>
10014bcc:	2800      	cmp	r0, #0
10014bce:	f47f ac7a 	bne.w	100144c6 <_vfprintf_r+0x2ae>
10014bd2:	3e10      	subs	r6, #16
10014bd4:	2e10      	cmp	r6, #16
10014bd6:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
10014bda:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014bde:	dce7      	bgt.n	10014bb0 <_vfprintf_r+0x998>
10014be0:	4614      	mov	r4, r2
10014be2:	3301      	adds	r3, #1
10014be4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10014be6:	f8c8 2000 	str.w	r2, [r8]
10014bea:	4434      	add	r4, r6
10014bec:	2b07      	cmp	r3, #7
10014bee:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014bf2:	f8c8 6004 	str.w	r6, [r8, #4]
10014bf6:	f300 81aa 	bgt.w	10014f4e <_vfprintf_r+0xd36>
10014bfa:	f108 0808 	add.w	r8, r8, #8
10014bfe:	e4ca      	b.n	10014596 <_vfprintf_r+0x37e>
10014c00:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014c04:	aa32      	add	r2, sp, #200	@ 0xc8
10014c06:	f001 f9a7 	bl	10015f58 <__sprint_r>
10014c0a:	2800      	cmp	r0, #0
10014c0c:	f43f ace9 	beq.w	100145e2 <_vfprintf_r+0x3ca>
10014c10:	f8dd b020 	ldr.w	fp, [sp, #32]
10014c14:	e458      	b.n	100144c8 <_vfprintf_r+0x2b0>
10014c16:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014c18:	9919      	ldr	r1, [sp, #100]	@ 0x64
10014c1a:	441c      	add	r4, r3
10014c1c:	e9c8 1300 	strd	r1, r3, [r8]
10014c20:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014c22:	9434      	str	r4, [sp, #208]	@ 0xd0
10014c24:	3301      	adds	r3, #1
10014c26:	2b07      	cmp	r3, #7
10014c28:	9333      	str	r3, [sp, #204]	@ 0xcc
10014c2a:	f300 85bf 	bgt.w	100157ac <_vfprintf_r+0x1594>
10014c2e:	f108 0808 	add.w	r8, r8, #8
10014c32:	2a00      	cmp	r2, #0
10014c34:	f2c0 87ae 	blt.w	10015b94 <_vfprintf_r+0x197c>
10014c38:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10014c3a:	f8c8 5000 	str.w	r5, [r8]
10014c3e:	3301      	adds	r3, #1
10014c40:	4414      	add	r4, r2
10014c42:	2b07      	cmp	r3, #7
10014c44:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014c48:	f8c8 2004 	str.w	r2, [r8, #4]
10014c4c:	f77f acb3 	ble.w	100145b6 <_vfprintf_r+0x39e>
10014c50:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014c54:	aa32      	add	r2, sp, #200	@ 0xc8
10014c56:	f001 f97f 	bl	10015f58 <__sprint_r>
10014c5a:	2800      	cmp	r0, #0
10014c5c:	d1d8      	bne.n	10014c10 <_vfprintf_r+0x9f8>
10014c5e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014c60:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014c64:	e4a9      	b.n	100145ba <_vfprintf_r+0x3a2>
10014c66:	bf00      	nop
10014c68:	10023ab4 	.word	0x10023ab4
10014c6c:	10023ae4 	.word	0x10023ae4
10014c70:	10023ae8 	.word	0x10023ae8
10014c74:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014c76:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10014c78:	2b01      	cmp	r3, #1
10014c7a:	f104 0401 	add.w	r4, r4, #1
10014c7e:	f106 0601 	add.w	r6, r6, #1
10014c82:	f108 0708 	add.w	r7, r8, #8
10014c86:	f340 811d 	ble.w	10014ec4 <_vfprintf_r+0xcac>
10014c8a:	2301      	movs	r3, #1
10014c8c:	2e07      	cmp	r6, #7
10014c8e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014c92:	f8c8 5000 	str.w	r5, [r8]
10014c96:	f8c8 3004 	str.w	r3, [r8, #4]
10014c9a:	f300 82e4 	bgt.w	10015266 <_vfprintf_r+0x104e>
10014c9e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014ca0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10014ca2:	3601      	adds	r6, #1
10014ca4:	441c      	add	r4, r3
10014ca6:	2e07      	cmp	r6, #7
10014ca8:	e9c7 2300 	strd	r2, r3, [r7]
10014cac:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014cb0:	f300 82cd 	bgt.w	1001524e <_vfprintf_r+0x1036>
10014cb4:	3708      	adds	r7, #8
10014cb6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014cb8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10014cbc:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
10014cc0:	2200      	movs	r2, #0
10014cc2:	2300      	movs	r3, #0
10014cc4:	f00c f84c 	bl	10020d60 <__aeabi_dcmpeq>
10014cc8:	2800      	cmp	r0, #0
10014cca:	f040 8115 	bne.w	10014ef8 <_vfprintf_r+0xce0>
10014cce:	3601      	adds	r6, #1
10014cd0:	3501      	adds	r5, #1
10014cd2:	4444      	add	r4, r8
10014cd4:	2e07      	cmp	r6, #7
10014cd6:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014cda:	603d      	str	r5, [r7, #0]
10014cdc:	f8c7 8004 	str.w	r8, [r7, #4]
10014ce0:	f300 80fe 	bgt.w	10014ee0 <_vfprintf_r+0xcc8>
10014ce4:	3708      	adds	r7, #8
10014ce6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10014ce8:	607b      	str	r3, [r7, #4]
10014cea:	3601      	adds	r6, #1
10014cec:	441c      	add	r4, r3
10014cee:	2e07      	cmp	r6, #7
10014cf0:	ab2c      	add	r3, sp, #176	@ 0xb0
10014cf2:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014cf6:	603b      	str	r3, [r7, #0]
10014cf8:	dcaa      	bgt.n	10014c50 <_vfprintf_r+0xa38>
10014cfa:	f107 0808 	add.w	r8, r7, #8
10014cfe:	e45c      	b.n	100145ba <_vfprintf_r+0x3a2>
10014d00:	464c      	mov	r4, r9
10014d02:	2b0a      	cmp	r3, #10
10014d04:	f172 0100 	sbcs.w	r1, r2, #0
10014d08:	f080 82b9 	bcs.w	1001527e <_vfprintf_r+0x1066>
10014d0c:	3330      	adds	r3, #48	@ 0x30
10014d0e:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10014d12:	46a1      	mov	r9, r4
10014d14:	f04f 0b01 	mov.w	fp, #1
10014d18:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10014d1c:	e6ca      	b.n	10014ab4 <_vfprintf_r+0x89c>
10014d1e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014d22:	aa32      	add	r2, sp, #200	@ 0xc8
10014d24:	9315      	str	r3, [sp, #84]	@ 0x54
10014d26:	f001 f917 	bl	10015f58 <__sprint_r>
10014d2a:	2800      	cmp	r0, #0
10014d2c:	f47f af70 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10014d30:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014d32:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10014d34:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014d38:	e412      	b.n	10014560 <_vfprintf_r+0x348>
10014d3a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014d3e:	aa32      	add	r2, sp, #200	@ 0xc8
10014d40:	f001 f90a 	bl	10015f58 <__sprint_r>
10014d44:	2800      	cmp	r0, #0
10014d46:	f47f af63 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10014d4a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014d4c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014d50:	e418      	b.n	10014584 <_vfprintf_r+0x36c>
10014d52:	2d10      	cmp	r5, #16
10014d54:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014d56:	f340 8752 	ble.w	10015bfe <_vfprintf_r+0x19e6>
10014d5a:	4fbb      	ldr	r7, [pc, #748]	@ (10015048 <_vfprintf_r+0xe30>)
10014d5c:	9715      	str	r7, [sp, #84]	@ 0x54
10014d5e:	e9dd a907 	ldrd	sl, r9, [sp, #28]
10014d62:	2610      	movs	r6, #16
10014d64:	e004      	b.n	10014d70 <_vfprintf_r+0xb58>
10014d66:	3d10      	subs	r5, #16
10014d68:	2d10      	cmp	r5, #16
10014d6a:	f108 0808 	add.w	r8, r8, #8
10014d6e:	dd16      	ble.n	10014d9e <_vfprintf_r+0xb86>
10014d70:	3301      	adds	r3, #1
10014d72:	3410      	adds	r4, #16
10014d74:	2b07      	cmp	r3, #7
10014d76:	e9c8 7600 	strd	r7, r6, [r8]
10014d7a:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014d7e:	ddf2      	ble.n	10014d66 <_vfprintf_r+0xb4e>
10014d80:	aa32      	add	r2, sp, #200	@ 0xc8
10014d82:	4651      	mov	r1, sl
10014d84:	4648      	mov	r0, r9
10014d86:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014d8a:	f001 f8e5 	bl	10015f58 <__sprint_r>
10014d8e:	2800      	cmp	r0, #0
10014d90:	f040 82f5 	bne.w	1001537e <_vfprintf_r+0x1166>
10014d94:	3d10      	subs	r5, #16
10014d96:	2d10      	cmp	r5, #16
10014d98:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10014d9c:	dce8      	bgt.n	10014d70 <_vfprintf_r+0xb58>
10014d9e:	3301      	adds	r3, #1
10014da0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10014da2:	442c      	add	r4, r5
10014da4:	2b07      	cmp	r3, #7
10014da6:	e9c8 2500 	strd	r2, r5, [r8]
10014daa:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014dae:	f77f ac0d 	ble.w	100145cc <_vfprintf_r+0x3b4>
10014db2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014db6:	aa32      	add	r2, sp, #200	@ 0xc8
10014db8:	f001 f8ce 	bl	10015f58 <__sprint_r>
10014dbc:	2800      	cmp	r0, #0
10014dbe:	f47f af27 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10014dc2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014dc4:	e402      	b.n	100145cc <_vfprintf_r+0x3b4>
10014dc6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10014dc8:	2a00      	cmp	r2, #0
10014dca:	f340 80fd 	ble.w	10014fc8 <_vfprintf_r+0xdb0>
10014dce:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10014dd2:	429f      	cmp	r7, r3
10014dd4:	bfa8      	it	ge
10014dd6:	461f      	movge	r7, r3
10014dd8:	2f00      	cmp	r7, #0
10014dda:	eb05 0b03 	add.w	fp, r5, r3
10014dde:	dd0b      	ble.n	10014df8 <_vfprintf_r+0xbe0>
10014de0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014de2:	3301      	adds	r3, #1
10014de4:	443c      	add	r4, r7
10014de6:	2b07      	cmp	r3, #7
10014de8:	e9c8 5700 	strd	r5, r7, [r8]
10014dec:	9434      	str	r4, [sp, #208]	@ 0xd0
10014dee:	9333      	str	r3, [sp, #204]	@ 0xcc
10014df0:	f300 866f 	bgt.w	10015ad2 <_vfprintf_r+0x18ba>
10014df4:	f108 0808 	add.w	r8, r8, #8
10014df8:	9e12      	ldr	r6, [sp, #72]	@ 0x48
10014dfa:	2f00      	cmp	r7, #0
10014dfc:	bfa8      	it	ge
10014dfe:	1bf6      	subge	r6, r6, r7
10014e00:	2e00      	cmp	r6, #0
10014e02:	f300 8347 	bgt.w	10015494 <_vfprintf_r+0x127c>
10014e06:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
10014e0a:	f419 6f80 	tst.w	r9, #1024	@ 0x400
10014e0e:	44aa      	add	sl, r5
10014e10:	f040 857a 	bne.w	10015908 <_vfprintf_r+0x16f0>
10014e14:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10014e16:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014e18:	429d      	cmp	r5, r3
10014e1a:	db03      	blt.n	10014e24 <_vfprintf_r+0xc0c>
10014e1c:	f019 0f01 	tst.w	r9, #1
10014e20:	f000 8404 	beq.w	1001562c <_vfprintf_r+0x1414>
10014e24:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014e26:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10014e28:	441c      	add	r4, r3
10014e2a:	e9c8 2300 	strd	r2, r3, [r8]
10014e2e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014e30:	9434      	str	r4, [sp, #208]	@ 0xd0
10014e32:	3301      	adds	r3, #1
10014e34:	2b07      	cmp	r3, #7
10014e36:	9333      	str	r3, [sp, #204]	@ 0xcc
10014e38:	f300 865a 	bgt.w	10015af0 <_vfprintf_r+0x18d8>
10014e3c:	f108 0808 	add.w	r8, r8, #8
10014e40:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014e42:	ebab 060a 	sub.w	r6, fp, sl
10014e46:	1b5d      	subs	r5, r3, r5
10014e48:	42ae      	cmp	r6, r5
10014e4a:	bfa8      	it	ge
10014e4c:	462e      	movge	r6, r5
10014e4e:	2e00      	cmp	r6, #0
10014e50:	dd0d      	ble.n	10014e6e <_vfprintf_r+0xc56>
10014e52:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014e54:	f8c8 a000 	str.w	sl, [r8]
10014e58:	3301      	adds	r3, #1
10014e5a:	4434      	add	r4, r6
10014e5c:	2b07      	cmp	r3, #7
10014e5e:	f8c8 6004 	str.w	r6, [r8, #4]
10014e62:	9434      	str	r4, [sp, #208]	@ 0xd0
10014e64:	9333      	str	r3, [sp, #204]	@ 0xcc
10014e66:	f300 8655 	bgt.w	10015b14 <_vfprintf_r+0x18fc>
10014e6a:	f108 0808 	add.w	r8, r8, #8
10014e6e:	2e00      	cmp	r6, #0
10014e70:	bfa8      	it	ge
10014e72:	1bad      	subge	r5, r5, r6
10014e74:	2d00      	cmp	r5, #0
10014e76:	f77f aba0 	ble.w	100145ba <_vfprintf_r+0x3a2>
10014e7a:	2d10      	cmp	r5, #16
10014e7c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014e7e:	f340 82da 	ble.w	10015436 <_vfprintf_r+0x121e>
10014e82:	4f72      	ldr	r7, [pc, #456]	@ (1001504c <_vfprintf_r+0xe34>)
10014e84:	9715      	str	r7, [sp, #84]	@ 0x54
10014e86:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
10014e8a:	2610      	movs	r6, #16
10014e8c:	e005      	b.n	10014e9a <_vfprintf_r+0xc82>
10014e8e:	f108 0808 	add.w	r8, r8, #8
10014e92:	3d10      	subs	r5, #16
10014e94:	2d10      	cmp	r5, #16
10014e96:	f340 82d0 	ble.w	1001543a <_vfprintf_r+0x1222>
10014e9a:	3301      	adds	r3, #1
10014e9c:	3410      	adds	r4, #16
10014e9e:	2b07      	cmp	r3, #7
10014ea0:	e9c8 7600 	strd	r7, r6, [r8]
10014ea4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014ea8:	ddf1      	ble.n	10014e8e <_vfprintf_r+0xc76>
10014eaa:	aa32      	add	r2, sp, #200	@ 0xc8
10014eac:	4651      	mov	r1, sl
10014eae:	4658      	mov	r0, fp
10014eb0:	f001 f852 	bl	10015f58 <__sprint_r>
10014eb4:	2800      	cmp	r0, #0
10014eb6:	f47f ab07 	bne.w	100144c8 <_vfprintf_r+0x2b0>
10014eba:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10014ebe:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014ec2:	e7e6      	b.n	10014e92 <_vfprintf_r+0xc7a>
10014ec4:	f019 0f01 	tst.w	r9, #1
10014ec8:	f47f aedf 	bne.w	10014c8a <_vfprintf_r+0xa72>
10014ecc:	2301      	movs	r3, #1
10014ece:	2e07      	cmp	r6, #7
10014ed0:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014ed4:	f8c8 5000 	str.w	r5, [r8]
10014ed8:	f8c8 3004 	str.w	r3, [r8, #4]
10014edc:	f77f af03 	ble.w	10014ce6 <_vfprintf_r+0xace>
10014ee0:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014ee4:	aa32      	add	r2, sp, #200	@ 0xc8
10014ee6:	f001 f837 	bl	10015f58 <__sprint_r>
10014eea:	2800      	cmp	r0, #0
10014eec:	f47f ae90 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10014ef0:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10014ef4:	af35      	add	r7, sp, #212	@ 0xd4
10014ef6:	e6f6      	b.n	10014ce6 <_vfprintf_r+0xace>
10014ef8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014efa:	2b01      	cmp	r3, #1
10014efc:	f77f aef3 	ble.w	10014ce6 <_vfprintf_r+0xace>
10014f00:	2b11      	cmp	r3, #17
10014f02:	4b52      	ldr	r3, [pc, #328]	@ (1001504c <_vfprintf_r+0xe34>)
10014f04:	9315      	str	r3, [sp, #84]	@ 0x54
10014f06:	f340 82b9 	ble.w	1001547c <_vfprintf_r+0x1264>
10014f0a:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
10014f0e:	e9dd ba07 	ldrd	fp, sl, [sp, #28]
10014f12:	2510      	movs	r5, #16
10014f14:	4699      	mov	r9, r3
10014f16:	e006      	b.n	10014f26 <_vfprintf_r+0xd0e>
10014f18:	3708      	adds	r7, #8
10014f1a:	f1a8 0810 	sub.w	r8, r8, #16
10014f1e:	f1b8 0f10 	cmp.w	r8, #16
10014f22:	f340 82a9 	ble.w	10015478 <_vfprintf_r+0x1260>
10014f26:	3601      	adds	r6, #1
10014f28:	3410      	adds	r4, #16
10014f2a:	2e07      	cmp	r6, #7
10014f2c:	e9c7 9500 	strd	r9, r5, [r7]
10014f30:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014f34:	ddf0      	ble.n	10014f18 <_vfprintf_r+0xd00>
10014f36:	aa32      	add	r2, sp, #200	@ 0xc8
10014f38:	4659      	mov	r1, fp
10014f3a:	4650      	mov	r0, sl
10014f3c:	f001 f80c 	bl	10015f58 <__sprint_r>
10014f40:	2800      	cmp	r0, #0
10014f42:	f040 8202 	bne.w	1001534a <_vfprintf_r+0x1132>
10014f46:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10014f4a:	af35      	add	r7, sp, #212	@ 0xd4
10014f4c:	e7e5      	b.n	10014f1a <_vfprintf_r+0xd02>
10014f4e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014f52:	aa32      	add	r2, sp, #200	@ 0xc8
10014f54:	f001 f800 	bl	10015f58 <__sprint_r>
10014f58:	2800      	cmp	r0, #0
10014f5a:	f47f ae59 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10014f5e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014f60:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014f64:	f7ff bb17 	b.w	10014596 <_vfprintf_r+0x37e>
10014f68:	990d      	ldr	r1, [sp, #52]	@ 0x34
10014f6a:	f851 3b04 	ldr.w	r3, [r1], #4
10014f6e:	910d      	str	r1, [sp, #52]	@ 0x34
10014f70:	f014 0110 	ands.w	r1, r4, #16
10014f74:	d155      	bne.n	10015022 <_vfprintf_r+0xe0a>
10014f76:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10014f7a:	d04d      	beq.n	10015018 <_vfprintf_r+0xe00>
10014f7c:	460a      	mov	r2, r1
10014f7e:	b29b      	uxth	r3, r3
10014f80:	2101      	movs	r1, #1
10014f82:	e4b7      	b.n	100148f4 <_vfprintf_r+0x6dc>
10014f84:	990d      	ldr	r1, [sp, #52]	@ 0x34
10014f86:	f851 3b04 	ldr.w	r3, [r1], #4
10014f8a:	910d      	str	r1, [sp, #52]	@ 0x34
10014f8c:	f019 0110 	ands.w	r1, r9, #16
10014f90:	f47f acad 	bne.w	100148ee <_vfprintf_r+0x6d6>
10014f94:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10014f98:	f000 82a9 	beq.w	100154ee <_vfprintf_r+0x12d6>
10014f9c:	b29b      	uxth	r3, r3
10014f9e:	460a      	mov	r2, r1
10014fa0:	e4a5      	b.n	100148ee <_vfprintf_r+0x6d6>
10014fa2:	9d07      	ldr	r5, [sp, #28]
10014fa4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10014fa6:	f003 faa7 	bl	100184f8 <__retarget_lock_acquire_recursive>
10014faa:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
10014fae:	f7ff b959 	b.w	10014264 <_vfprintf_r+0x4c>
10014fb2:	f019 0f01 	tst.w	r9, #1
10014fb6:	f43f ab00 	beq.w	100145ba <_vfprintf_r+0x3a2>
10014fba:	e52b      	b.n	10014a14 <_vfprintf_r+0x7fc>
10014fbc:	930d      	str	r3, [sp, #52]	@ 0x34
10014fbe:	7823      	ldrb	r3, [r4, #0]
10014fc0:	f7ff b9a2 	b.w	10014308 <_vfprintf_r+0xf0>
10014fc4:	ad5e      	add	r5, sp, #376	@ 0x178
10014fc6:	e575      	b.n	10014ab4 <_vfprintf_r+0x89c>
10014fc8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014fca:	4921      	ldr	r1, [pc, #132]	@ (10015050 <_vfprintf_r+0xe38>)
10014fcc:	f8c8 1000 	str.w	r1, [r8]
10014fd0:	3301      	adds	r3, #1
10014fd2:	3401      	adds	r4, #1
10014fd4:	2101      	movs	r1, #1
10014fd6:	2b07      	cmp	r3, #7
10014fd8:	9434      	str	r4, [sp, #208]	@ 0xd0
10014fda:	9333      	str	r3, [sp, #204]	@ 0xcc
10014fdc:	f8c8 1004 	str.w	r1, [r8, #4]
10014fe0:	f300 8551 	bgt.w	10015a86 <_vfprintf_r+0x186e>
10014fe4:	f108 0808 	add.w	r8, r8, #8
10014fe8:	2a00      	cmp	r2, #0
10014fea:	f47f ae14 	bne.w	10014c16 <_vfprintf_r+0x9fe>
10014fee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10014ff0:	f009 0301 	and.w	r3, r9, #1
10014ff4:	4313      	orrs	r3, r2
10014ff6:	f43f aae0 	beq.w	100145ba <_vfprintf_r+0x3a2>
10014ffa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014ffc:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10014ffe:	441c      	add	r4, r3
10015000:	e9c8 2300 	strd	r2, r3, [r8]
10015004:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10015006:	9434      	str	r4, [sp, #208]	@ 0xd0
10015008:	3301      	adds	r3, #1
1001500a:	2b07      	cmp	r3, #7
1001500c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001500e:	f300 83cd 	bgt.w	100157ac <_vfprintf_r+0x1594>
10015012:	f108 0808 	add.w	r8, r8, #8
10015016:	e60f      	b.n	10014c38 <_vfprintf_r+0xa20>
10015018:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
1001501c:	bf1c      	itt	ne
1001501e:	b2db      	uxtbne	r3, r3
10015020:	4602      	movne	r2, r0
10015022:	2101      	movs	r1, #1
10015024:	e466      	b.n	100148f4 <_vfprintf_r+0x6dc>
10015026:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001502a:	f040 8307 	bne.w	1001563c <_vfprintf_r+0x1424>
1001502e:	17da      	asrs	r2, r3, #31
10015030:	4611      	mov	r1, r2
10015032:	2900      	cmp	r1, #0
10015034:	f6bf abdb 	bge.w	100147ee <_vfprintf_r+0x5d6>
10015038:	425b      	negs	r3, r3
1001503a:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
1001503e:	464c      	mov	r4, r9
10015040:	202d      	movs	r0, #45	@ 0x2d
10015042:	2101      	movs	r1, #1
10015044:	e457      	b.n	100148f6 <_vfprintf_r+0x6de>
10015046:	bf00      	nop
10015048:	10023af8 	.word	0x10023af8
1001504c:	10023ae8 	.word	0x10023ae8
10015050:	10023ae4 	.word	0x10023ae4
10015054:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
10015056:	7823      	ldrb	r3, [r4, #0]
10015058:	2a00      	cmp	r2, #0
1001505a:	f43f a955 	beq.w	10014308 <_vfprintf_r+0xf0>
1001505e:	7812      	ldrb	r2, [r2, #0]
10015060:	2a00      	cmp	r2, #0
10015062:	f43f a951 	beq.w	10014308 <_vfprintf_r+0xf0>
10015066:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
1001506a:	f7ff b94d 	b.w	10014308 <_vfprintf_r+0xf0>
1001506e:	f019 0f10 	tst.w	r9, #16
10015072:	f040 81fb 	bne.w	1001546c <_vfprintf_r+0x1254>
10015076:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001507a:	f040 82e5 	bne.w	10015648 <_vfprintf_r+0x1430>
1001507e:	f419 7f00 	tst.w	r9, #512	@ 0x200
10015082:	f000 81f3 	beq.w	1001546c <_vfprintf_r+0x1254>
10015086:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015088:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001508a:	681b      	ldr	r3, [r3, #0]
1001508c:	701a      	strb	r2, [r3, #0]
1001508e:	e49b      	b.n	100149c8 <_vfprintf_r+0x7b0>
10015090:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10015094:	4602      	mov	r2, r0
10015096:	460b      	mov	r3, r1
10015098:	f00b fe94 	bl	10020dc4 <__aeabi_dcmpun>
1001509c:	2800      	cmp	r0, #0
1001509e:	f040 8638 	bne.w	10015d12 <_vfprintf_r+0x1afa>
100150a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100150a4:	2b61      	cmp	r3, #97	@ 0x61
100150a6:	f000 8521 	beq.w	10015aec <_vfprintf_r+0x18d4>
100150aa:	2b41      	cmp	r3, #65	@ 0x41
100150ac:	f000 82e3 	beq.w	10015676 <_vfprintf_r+0x145e>
100150b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100150b2:	3301      	adds	r3, #1
100150b4:	f000 8617 	beq.w	10015ce6 <_vfprintf_r+0x1ace>
100150b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100150ba:	f023 0320 	bic.w	r3, r3, #32
100150be:	2b47      	cmp	r3, #71	@ 0x47
100150c0:	d104      	bne.n	100150cc <_vfprintf_r+0xeb4>
100150c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100150c4:	2b00      	cmp	r3, #0
100150c6:	bf08      	it	eq
100150c8:	2301      	moveq	r3, #1
100150ca:	9309      	str	r3, [sp, #36]	@ 0x24
100150cc:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
100150d0:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
100150d4:	2a00      	cmp	r2, #0
100150d6:	9015      	str	r0, [sp, #84]	@ 0x54
100150d8:	f8cd 9018 	str.w	r9, [sp, #24]
100150dc:	f04f 0300 	mov.w	r3, #0
100150e0:	f2c0 84df 	blt.w	10015aa2 <_vfprintf_r+0x188a>
100150e4:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
100150e8:	931f      	str	r3, [sp, #124]	@ 0x7c
100150ea:	930c      	str	r3, [sp, #48]	@ 0x30
100150ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100150ee:	3b41      	subs	r3, #65	@ 0x41
100150f0:	2b25      	cmp	r3, #37	@ 0x25
100150f2:	f200 8203 	bhi.w	100154fc <_vfprintf_r+0x12e4>
100150f6:	e8df f013 	tbh	[pc, r3, lsl #1]
100150fa:	0374      	.short	0x0374
100150fc:	02010201 	.word	0x02010201
10015100:	036d0201 	.word	0x036d0201
10015104:	02010371 	.word	0x02010371
10015108:	02010201 	.word	0x02010201
1001510c:	02010201 	.word	0x02010201
10015110:	02010201 	.word	0x02010201
10015114:	02010201 	.word	0x02010201
10015118:	02010201 	.word	0x02010201
1001511c:	02010201 	.word	0x02010201
10015120:	02010201 	.word	0x02010201
10015124:	02010201 	.word	0x02010201
10015128:	02010201 	.word	0x02010201
1001512c:	02010201 	.word	0x02010201
10015130:	02010201 	.word	0x02010201
10015134:	02010201 	.word	0x02010201
10015138:	02010201 	.word	0x02010201
1001513c:	02010201 	.word	0x02010201
10015140:	036d0201 	.word	0x036d0201
10015144:	0371      	.short	0x0371
10015146:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001514a:	4bc3      	ldr	r3, [pc, #780]	@ (10015458 <_vfprintf_r+0x1240>)
1001514c:	931a      	str	r3, [sp, #104]	@ 0x68
1001514e:	f019 0220 	ands.w	r2, r9, #32
10015152:	d06a      	beq.n	1001522a <_vfprintf_r+0x1012>
10015154:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015156:	3307      	adds	r3, #7
10015158:	f023 0307 	bic.w	r3, r3, #7
1001515c:	4619      	mov	r1, r3
1001515e:	685a      	ldr	r2, [r3, #4]
10015160:	f851 3b08 	ldr.w	r3, [r1], #8
10015164:	910d      	str	r1, [sp, #52]	@ 0x34
10015166:	f019 0f01 	tst.w	r9, #1
1001516a:	d00a      	beq.n	10015182 <_vfprintf_r+0xf6a>
1001516c:	ea53 0102 	orrs.w	r1, r3, r2
10015170:	d007      	beq.n	10015182 <_vfprintf_r+0xf6a>
10015172:	990e      	ldr	r1, [sp, #56]	@ 0x38
10015174:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
10015178:	2130      	movs	r1, #48	@ 0x30
1001517a:	f049 0902 	orr.w	r9, r9, #2
1001517e:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10015182:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10015186:	2102      	movs	r1, #2
10015188:	f7ff bbb4 	b.w	100148f4 <_vfprintf_r+0x6dc>
1001518c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015190:	464c      	mov	r4, r9
10015192:	f7ff bbd0 	b.w	10014936 <_vfprintf_r+0x71e>
10015196:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001519a:	f7ff bb9b 	b.w	100148d4 <_vfprintf_r+0x6bc>
1001519e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100151a2:	4bae      	ldr	r3, [pc, #696]	@ (1001545c <_vfprintf_r+0x1244>)
100151a4:	931a      	str	r3, [sp, #104]	@ 0x68
100151a6:	e7d2      	b.n	1001514e <_vfprintf_r+0xf36>
100151a8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100151ac:	aa32      	add	r2, sp, #200	@ 0xc8
100151ae:	f000 fed3 	bl	10015f58 <__sprint_r>
100151b2:	2800      	cmp	r0, #0
100151b4:	f47f ad2c 	bne.w	10014c10 <_vfprintf_r+0x9f8>
100151b8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100151ba:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100151be:	f7ff b9e4 	b.w	1001458a <_vfprintf_r+0x372>
100151c2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100151c6:	aa32      	add	r2, sp, #200	@ 0xc8
100151c8:	f000 fec6 	bl	10015f58 <__sprint_r>
100151cc:	2800      	cmp	r0, #0
100151ce:	f47f ad1f 	bne.w	10014c10 <_vfprintf_r+0x9f8>
100151d2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100151d4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100151d8:	e42a      	b.n	10014a30 <_vfprintf_r+0x818>
100151da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100151dc:	950c      	str	r5, [sp, #48]	@ 0x30
100151de:	2b06      	cmp	r3, #6
100151e0:	4629      	mov	r1, r5
100151e2:	bf28      	it	cs
100151e4:	2306      	movcs	r3, #6
100151e6:	9509      	str	r5, [sp, #36]	@ 0x24
100151e8:	462a      	mov	r2, r5
100151ea:	9306      	str	r3, [sp, #24]
100151ec:	4d9c      	ldr	r5, [pc, #624]	@ (10015460 <_vfprintf_r+0x1248>)
100151ee:	960d      	str	r6, [sp, #52]	@ 0x34
100151f0:	469b      	mov	fp, r3
100151f2:	9114      	str	r1, [sp, #80]	@ 0x50
100151f4:	9110      	str	r1, [sp, #64]	@ 0x40
100151f6:	9112      	str	r1, [sp, #72]	@ 0x48
100151f8:	f7ff ba40 	b.w	1001467c <_vfprintf_r+0x464>
100151fc:	2208      	movs	r2, #8
100151fe:	2100      	movs	r1, #0
10015200:	a830      	add	r0, sp, #192	@ 0xc0
10015202:	f002 feb9 	bl	10017f78 <memset>
10015206:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015208:	9808      	ldr	r0, [sp, #32]
1001520a:	681a      	ldr	r2, [r3, #0]
1001520c:	ad45      	add	r5, sp, #276	@ 0x114
1001520e:	ab30      	add	r3, sp, #192	@ 0xc0
10015210:	4629      	mov	r1, r5
10015212:	f003 fae1 	bl	100187d8 <_wcrtomb_r>
10015216:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001521a:	4683      	mov	fp, r0
1001521c:	f000 8544 	beq.w	10015ca8 <_vfprintf_r+0x1a90>
10015220:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10015224:	9306      	str	r3, [sp, #24]
10015226:	f7ff ba93 	b.w	10014750 <_vfprintf_r+0x538>
1001522a:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001522c:	f851 3b04 	ldr.w	r3, [r1], #4
10015230:	910d      	str	r1, [sp, #52]	@ 0x34
10015232:	f019 0110 	ands.w	r1, r9, #16
10015236:	d196      	bne.n	10015166 <_vfprintf_r+0xf4e>
10015238:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001523c:	f000 8151 	beq.w	100154e2 <_vfprintf_r+0x12ca>
10015240:	b29b      	uxth	r3, r3
10015242:	460a      	mov	r2, r1
10015244:	e78f      	b.n	10015166 <_vfprintf_r+0xf4e>
10015246:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001524a:	ad5e      	add	r5, sp, #376	@ 0x178
1001524c:	e432      	b.n	10014ab4 <_vfprintf_r+0x89c>
1001524e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015252:	aa32      	add	r2, sp, #200	@ 0xc8
10015254:	f000 fe80 	bl	10015f58 <__sprint_r>
10015258:	2800      	cmp	r0, #0
1001525a:	f47f acd9 	bne.w	10014c10 <_vfprintf_r+0x9f8>
1001525e:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10015262:	af35      	add	r7, sp, #212	@ 0xd4
10015264:	e527      	b.n	10014cb6 <_vfprintf_r+0xa9e>
10015266:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001526a:	aa32      	add	r2, sp, #200	@ 0xc8
1001526c:	f000 fe74 	bl	10015f58 <__sprint_r>
10015270:	2800      	cmp	r0, #0
10015272:	f47f accd 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10015276:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001527a:	af35      	add	r7, sp, #212	@ 0xd4
1001527c:	e50f      	b.n	10014c9e <_vfprintf_r+0xa86>
1001527e:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10015282:	2100      	movs	r1, #0
10015284:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10015288:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 10015464 <_vfprintf_r+0x124c>
1001528c:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10015290:	9406      	str	r4, [sp, #24]
10015292:	ad5e      	add	r5, sp, #376	@ 0x178
10015294:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10015298:	2705      	movs	r7, #5
1001529a:	468c      	mov	ip, r1
1001529c:	465e      	mov	r6, fp
1001529e:	e005      	b.n	100152ac <_vfprintf_r+0x1094>
100152a0:	2b0a      	cmp	r3, #10
100152a2:	f172 0200 	sbcs.w	r2, r2, #0
100152a6:	d333      	bcc.n	10015310 <_vfprintf_r+0x10f8>
100152a8:	465b      	mov	r3, fp
100152aa:	4622      	mov	r2, r4
100152ac:	1899      	adds	r1, r3, r2
100152ae:	f141 0100 	adc.w	r1, r1, #0
100152b2:	fba9 0401 	umull	r0, r4, r9, r1
100152b6:	f024 0003 	bic.w	r0, r4, #3
100152ba:	eb00 0094 	add.w	r0, r0, r4, lsr #2
100152be:	1a09      	subs	r1, r1, r0
100152c0:	1a58      	subs	r0, r3, r1
100152c2:	f162 0e00 	sbc.w	lr, r2, #0
100152c6:	fb0a f400 	mul.w	r4, sl, r0
100152ca:	fba0 b009 	umull	fp, r0, r0, r9
100152ce:	fb09 440e 	mla	r4, r9, lr, r4
100152d2:	f00b 0e01 	and.w	lr, fp, #1
100152d6:	4404      	add	r4, r0
100152d8:	fbae 0e07 	umull	r0, lr, lr, r7
100152dc:	1840      	adds	r0, r0, r1
100152de:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
100152e2:	3030      	adds	r0, #48	@ 0x30
100152e4:	f805 0c01 	strb.w	r0, [r5, #-1]
100152e8:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
100152ec:	f10c 0c01 	add.w	ip, ip, #1
100152f0:	3d01      	subs	r5, #1
100152f2:	0864      	lsrs	r4, r4, #1
100152f4:	2e00      	cmp	r6, #0
100152f6:	d0d3      	beq.n	100152a0 <_vfprintf_r+0x1088>
100152f8:	f898 1000 	ldrb.w	r1, [r8]
100152fc:	458c      	cmp	ip, r1
100152fe:	d1cf      	bne.n	100152a0 <_vfprintf_r+0x1088>
10015300:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10015304:	d0cc      	beq.n	100152a0 <_vfprintf_r+0x1088>
10015306:	2b0a      	cmp	r3, #10
10015308:	f172 0200 	sbcs.w	r2, r2, #0
1001530c:	f080 82c5 	bcs.w	1001589a <_vfprintf_r+0x1682>
10015310:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
10015314:	9c06      	ldr	r4, [sp, #24]
10015316:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
1001531a:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
1001531e:	f7ff bbc5 	b.w	10014aac <_vfprintf_r+0x894>
10015322:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015326:	aa32      	add	r2, sp, #200	@ 0xc8
10015328:	9315      	str	r3, [sp, #84]	@ 0x54
1001532a:	f000 fe15 	bl	10015f58 <__sprint_r>
1001532e:	2800      	cmp	r0, #0
10015330:	f47f ac6e 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10015334:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015338:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001533a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001533c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015340:	f7ff b8fc 	b.w	1001453c <_vfprintf_r+0x324>
10015344:	46a3      	mov	fp, r4
10015346:	f7ff b8bf 	b.w	100144c8 <_vfprintf_r+0x2b0>
1001534a:	46d3      	mov	fp, sl
1001534c:	f7ff b8bc 	b.w	100144c8 <_vfprintf_r+0x2b0>
10015350:	4658      	mov	r0, fp
10015352:	f002 faa7 	bl	100178a4 <__sinit>
10015356:	f7fe bf7c 	b.w	10014252 <_vfprintf_r+0x3a>
1001535a:	2901      	cmp	r1, #1
1001535c:	464c      	mov	r4, r9
1001535e:	f47f ab95 	bne.w	10014a8c <_vfprintf_r+0x874>
10015362:	e4d3      	b.n	10014d0c <_vfprintf_r+0xaf4>
10015364:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015368:	aa32      	add	r2, sp, #200	@ 0xc8
1001536a:	f000 fdf5 	bl	10015f58 <__sprint_r>
1001536e:	2800      	cmp	r0, #0
10015370:	f47f ac4e 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10015374:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015376:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001537a:	f7ff bb46 	b.w	10014a0a <_vfprintf_r+0x7f2>
1001537e:	46cb      	mov	fp, r9
10015380:	f7ff b8a2 	b.w	100144c8 <_vfprintf_r+0x2b0>
10015384:	af30      	add	r7, sp, #192	@ 0xc0
10015386:	2208      	movs	r2, #8
10015388:	2100      	movs	r1, #0
1001538a:	4638      	mov	r0, r7
1001538c:	952b      	str	r5, [sp, #172]	@ 0xac
1001538e:	f002 fdf3 	bl	10017f78 <memset>
10015392:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10015396:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
1001539a:	f000 8270 	beq.w	1001587e <_vfprintf_r+0x1666>
1001539e:	2400      	movs	r4, #0
100153a0:	f8cd 9018 	str.w	r9, [sp, #24]
100153a4:	46a3      	mov	fp, r4
100153a6:	f8dd 9020 	ldr.w	r9, [sp, #32]
100153aa:	e00c      	b.n	100153c6 <_vfprintf_r+0x11ae>
100153ac:	a945      	add	r1, sp, #276	@ 0x114
100153ae:	4648      	mov	r0, r9
100153b0:	f003 fa12 	bl	100187d8 <_wcrtomb_r>
100153b4:	1c41      	adds	r1, r0, #1
100153b6:	4458      	add	r0, fp
100153b8:	f000 8476 	beq.w	10015ca8 <_vfprintf_r+0x1a90>
100153bc:	4550      	cmp	r0, sl
100153be:	dc08      	bgt.n	100153d2 <_vfprintf_r+0x11ba>
100153c0:	f000 84c3 	beq.w	10015d4a <_vfprintf_r+0x1b32>
100153c4:	4683      	mov	fp, r0
100153c6:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
100153c8:	5912      	ldr	r2, [r2, r4]
100153ca:	463b      	mov	r3, r7
100153cc:	3404      	adds	r4, #4
100153ce:	2a00      	cmp	r2, #0
100153d0:	d1ec      	bne.n	100153ac <_vfprintf_r+0x1194>
100153d2:	f8dd 9018 	ldr.w	r9, [sp, #24]
100153d6:	f1bb 0f00 	cmp.w	fp, #0
100153da:	f000 8343 	beq.w	10015a64 <_vfprintf_r+0x184c>
100153de:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
100153e2:	f340 83fa 	ble.w	10015bda <_vfprintf_r+0x19c2>
100153e6:	9808      	ldr	r0, [sp, #32]
100153e8:	f10b 0101 	add.w	r1, fp, #1
100153ec:	f7fe fc46 	bl	10013c7c <_malloc_r>
100153f0:	4605      	mov	r5, r0
100153f2:	2800      	cmp	r0, #0
100153f4:	f000 8458 	beq.w	10015ca8 <_vfprintf_r+0x1a90>
100153f8:	900c      	str	r0, [sp, #48]	@ 0x30
100153fa:	2208      	movs	r2, #8
100153fc:	2100      	movs	r1, #0
100153fe:	4638      	mov	r0, r7
10015400:	f002 fdba 	bl	10017f78 <memset>
10015404:	9808      	ldr	r0, [sp, #32]
10015406:	9700      	str	r7, [sp, #0]
10015408:	465b      	mov	r3, fp
1001540a:	aa2b      	add	r2, sp, #172	@ 0xac
1001540c:	4629      	mov	r1, r5
1001540e:	f003 fa09 	bl	10018824 <_wcsrtombs_r>
10015412:	4583      	cmp	fp, r0
10015414:	f040 8519 	bne.w	10015e4a <_vfprintf_r+0x1c32>
10015418:	2300      	movs	r3, #0
1001541a:	f805 300b 	strb.w	r3, [r5, fp]
1001541e:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10015422:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015426:	960d      	str	r6, [sp, #52]	@ 0x34
10015428:	9309      	str	r3, [sp, #36]	@ 0x24
1001542a:	9106      	str	r1, [sp, #24]
1001542c:	9314      	str	r3, [sp, #80]	@ 0x50
1001542e:	9310      	str	r3, [sp, #64]	@ 0x40
10015430:	9312      	str	r3, [sp, #72]	@ 0x48
10015432:	f7ff b923 	b.w	1001467c <_vfprintf_r+0x464>
10015436:	4a0c      	ldr	r2, [pc, #48]	@ (10015468 <_vfprintf_r+0x1250>)
10015438:	9215      	str	r2, [sp, #84]	@ 0x54
1001543a:	3301      	adds	r3, #1
1001543c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001543e:	f8c8 2000 	str.w	r2, [r8]
10015442:	442c      	add	r4, r5
10015444:	2b07      	cmp	r3, #7
10015446:	f8c8 5004 	str.w	r5, [r8, #4]
1001544a:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001544e:	f77f a8b2 	ble.w	100145b6 <_vfprintf_r+0x39e>
10015452:	f7ff bbfd 	b.w	10014c50 <_vfprintf_r+0xa38>
10015456:	bf00      	nop
10015458:	10023ac8 	.word	0x10023ac8
1001545c:	10023ab4 	.word	0x10023ab4
10015460:	10023adc 	.word	0x10023adc
10015464:	cccccccd 	.word	0xcccccccd
10015468:	10023ae8 	.word	0x10023ae8
1001546c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001546e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10015470:	681b      	ldr	r3, [r3, #0]
10015472:	601a      	str	r2, [r3, #0]
10015474:	f7ff baa8 	b.w	100149c8 <_vfprintf_r+0x7b0>
10015478:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
1001547c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001547e:	603b      	str	r3, [r7, #0]
10015480:	3601      	adds	r6, #1
10015482:	4444      	add	r4, r8
10015484:	2e07      	cmp	r6, #7
10015486:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001548a:	f8c7 8004 	str.w	r8, [r7, #4]
1001548e:	f77f ac29 	ble.w	10014ce4 <_vfprintf_r+0xacc>
10015492:	e525      	b.n	10014ee0 <_vfprintf_r+0xcc8>
10015494:	2e10      	cmp	r6, #16
10015496:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10015498:	f340 84ad 	ble.w	10015df6 <_vfprintf_r+0x1bde>
1001549c:	4898      	ldr	r0, [pc, #608]	@ (10015700 <_vfprintf_r+0x14e8>)
1001549e:	9015      	str	r0, [sp, #84]	@ 0x54
100154a0:	4642      	mov	r2, r8
100154a2:	4621      	mov	r1, r4
100154a4:	46a8      	mov	r8, r5
100154a6:	e9dd 4a07 	ldrd	r4, sl, [sp, #28]
100154aa:	2710      	movs	r7, #16
100154ac:	4605      	mov	r5, r0
100154ae:	e004      	b.n	100154ba <_vfprintf_r+0x12a2>
100154b0:	3208      	adds	r2, #8
100154b2:	3e10      	subs	r6, #16
100154b4:	2e10      	cmp	r6, #16
100154b6:	f340 81ca 	ble.w	1001584e <_vfprintf_r+0x1636>
100154ba:	3301      	adds	r3, #1
100154bc:	3110      	adds	r1, #16
100154be:	2b07      	cmp	r3, #7
100154c0:	e9c2 5700 	strd	r5, r7, [r2]
100154c4:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
100154c8:	ddf2      	ble.n	100154b0 <_vfprintf_r+0x1298>
100154ca:	aa32      	add	r2, sp, #200	@ 0xc8
100154cc:	4621      	mov	r1, r4
100154ce:	4650      	mov	r0, sl
100154d0:	f000 fd42 	bl	10015f58 <__sprint_r>
100154d4:	2800      	cmp	r0, #0
100154d6:	f47f af38 	bne.w	1001534a <_vfprintf_r+0x1132>
100154da:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
100154de:	aa35      	add	r2, sp, #212	@ 0xd4
100154e0:	e7e7      	b.n	100154b2 <_vfprintf_r+0x129a>
100154e2:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
100154e6:	bf1c      	itt	ne
100154e8:	b2db      	uxtbne	r3, r3
100154ea:	4602      	movne	r2, r0
100154ec:	e63b      	b.n	10015166 <_vfprintf_r+0xf4e>
100154ee:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
100154f2:	bf1c      	itt	ne
100154f4:	b2db      	uxtbne	r3, r3
100154f6:	4602      	movne	r2, r0
100154f8:	f7ff b9f9 	b.w	100148ee <_vfprintf_r+0x6d6>
100154fc:	9e09      	ldr	r6, [sp, #36]	@ 0x24
100154fe:	2302      	movs	r3, #2
10015500:	e9cd 3600 	strd	r3, r6, [sp]
10015504:	ab30      	add	r3, sp, #192	@ 0xc0
10015506:	9304      	str	r3, [sp, #16]
10015508:	ab2b      	add	r3, sp, #172	@ 0xac
1001550a:	9303      	str	r3, [sp, #12]
1001550c:	ab29      	add	r3, sp, #164	@ 0xa4
1001550e:	9302      	str	r3, [sp, #8]
10015510:	9808      	ldr	r0, [sp, #32]
10015512:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
10015516:	f003 fa73 	bl	10018a00 <_dtoa_r>
1001551a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001551c:	2b67      	cmp	r3, #103	@ 0x67
1001551e:	4605      	mov	r5, r0
10015520:	f000 8177 	beq.w	10015812 <_vfprintf_r+0x15fa>
10015524:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10015526:	2b47      	cmp	r3, #71	@ 0x47
10015528:	f000 8173 	beq.w	10015812 <_vfprintf_r+0x15fa>
1001552c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001552e:	f023 0720 	bic.w	r7, r3, #32
10015532:	2f46      	cmp	r7, #70	@ 0x46
10015534:	eb00 0406 	add.w	r4, r0, r6
10015538:	d105      	bne.n	10015546 <_vfprintf_r+0x132e>
1001553a:	7803      	ldrb	r3, [r0, #0]
1001553c:	2b30      	cmp	r3, #48	@ 0x30
1001553e:	f000 83db 	beq.w	10015cf8 <_vfprintf_r+0x1ae0>
10015542:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
10015544:	4434      	add	r4, r6
10015546:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001554a:	2200      	movs	r2, #0
1001554c:	2300      	movs	r3, #0
1001554e:	f00b fc07 	bl	10020d60 <__aeabi_dcmpeq>
10015552:	2800      	cmp	r0, #0
10015554:	f000 81cc 	beq.w	100158f0 <_vfprintf_r+0x16d8>
10015558:	4623      	mov	r3, r4
1001555a:	1b5b      	subs	r3, r3, r5
1001555c:	9313      	str	r3, [sp, #76]	@ 0x4c
1001555e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10015560:	9212      	str	r2, [sp, #72]	@ 0x48
10015562:	2f47      	cmp	r7, #71	@ 0x47
10015564:	f000 815d 	beq.w	10015822 <_vfprintf_r+0x160a>
10015568:	2f46      	cmp	r7, #70	@ 0x46
1001556a:	f000 82e3 	beq.w	10015b34 <_vfprintf_r+0x191c>
1001556e:	990e      	ldr	r1, [sp, #56]	@ 0x38
10015570:	1e53      	subs	r3, r2, #1
10015572:	2961      	cmp	r1, #97	@ 0x61
10015574:	9329      	str	r3, [sp, #164]	@ 0xa4
10015576:	f000 8441 	beq.w	10015dfc <_vfprintf_r+0x1be4>
1001557a:	2941      	cmp	r1, #65	@ 0x41
1001557c:	f040 815c 	bne.w	10015838 <_vfprintf_r+0x1620>
10015580:	2150      	movs	r1, #80	@ 0x50
10015582:	2001      	movs	r0, #1
10015584:	2b00      	cmp	r3, #0
10015586:	bfb6      	itet	lt
10015588:	f1c2 0301 	rsblt	r3, r2, #1
1001558c:	222b      	movge	r2, #43	@ 0x2b
1001558e:	222d      	movlt	r2, #45	@ 0x2d
10015590:	2b09      	cmp	r3, #9
10015592:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
10015596:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001559a:	f340 8377 	ble.w	10015c8c <_vfprintf_r+0x1a74>
1001559e:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
100155a2:	4e58      	ldr	r6, [pc, #352]	@ (10015704 <_vfprintf_r+0x14ec>)
100155a4:	4622      	mov	r2, r4
100155a6:	4610      	mov	r0, r2
100155a8:	fba6 1203 	umull	r1, r2, r6, r3
100155ac:	08d2      	lsrs	r2, r2, #3
100155ae:	eb02 0182 	add.w	r1, r2, r2, lsl #2
100155b2:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
100155b6:	3130      	adds	r1, #48	@ 0x30
100155b8:	f800 1c01 	strb.w	r1, [r0, #-1]
100155bc:	4619      	mov	r1, r3
100155be:	2963      	cmp	r1, #99	@ 0x63
100155c0:	4613      	mov	r3, r2
100155c2:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
100155c6:	dcee      	bgt.n	100155a6 <_vfprintf_r+0x138e>
100155c8:	3330      	adds	r3, #48	@ 0x30
100155ca:	f802 3c01 	strb.w	r3, [r2, #-1]
100155ce:	1e83      	subs	r3, r0, #2
100155d0:	42a3      	cmp	r3, r4
100155d2:	f080 840c 	bcs.w	10015dee <_vfprintf_r+0x1bd6>
100155d6:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
100155da:	f813 1b01 	ldrb.w	r1, [r3], #1
100155de:	f802 1f01 	strb.w	r1, [r2, #1]!
100155e2:	42a3      	cmp	r3, r4
100155e4:	d1f9      	bne.n	100155da <_vfprintf_r+0x13c2>
100155e6:	ab5e      	add	r3, sp, #376	@ 0x178
100155e8:	1a18      	subs	r0, r3, r0
100155ea:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
100155ee:	931c      	str	r3, [sp, #112]	@ 0x70
100155f0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100155f2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
100155f4:	2b01      	cmp	r3, #1
100155f6:	eb03 0b02 	add.w	fp, r3, r2
100155fa:	f340 8378 	ble.w	10015cee <_vfprintf_r+0x1ad6>
100155fe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10015600:	449b      	add	fp, r3
10015602:	9b06      	ldr	r3, [sp, #24]
10015604:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10015608:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
1001560c:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
10015610:	2300      	movs	r3, #0
10015612:	9314      	str	r3, [sp, #80]	@ 0x50
10015614:	9206      	str	r2, [sp, #24]
10015616:	9310      	str	r3, [sp, #64]	@ 0x40
10015618:	9312      	str	r3, [sp, #72]	@ 0x48
1001561a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
1001561c:	2b00      	cmp	r3, #0
1001561e:	f040 810f 	bne.w	10015840 <_vfprintf_r+0x1628>
10015622:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015626:	9309      	str	r3, [sp, #36]	@ 0x24
10015628:	f7ff b828 	b.w	1001467c <_vfprintf_r+0x464>
1001562c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001562e:	ebab 060a 	sub.w	r6, fp, sl
10015632:	1b5d      	subs	r5, r3, r5
10015634:	42ae      	cmp	r6, r5
10015636:	bfa8      	it	ge
10015638:	462e      	movge	r6, r5
1001563a:	e418      	b.n	10014e6e <_vfprintf_r+0xc56>
1001563c:	f343 12c0 	sbfx	r2, r3, #7, #1
10015640:	4611      	mov	r1, r2
10015642:	b25b      	sxtb	r3, r3
10015644:	f7ff b8d0 	b.w	100147e8 <_vfprintf_r+0x5d0>
10015648:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001564a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001564c:	681b      	ldr	r3, [r3, #0]
1001564e:	801a      	strh	r2, [r3, #0]
10015650:	f7ff b9ba 	b.w	100149c8 <_vfprintf_r+0x7b0>
10015654:	9907      	ldr	r1, [sp, #28]
10015656:	aa32      	add	r2, sp, #200	@ 0xc8
10015658:	4658      	mov	r0, fp
1001565a:	f000 fc7d 	bl	10015f58 <__sprint_r>
1001565e:	2800      	cmp	r0, #0
10015660:	f43e af22 	beq.w	100144a8 <_vfprintf_r+0x290>
10015664:	f7fe bf36 	b.w	100144d4 <_vfprintf_r+0x2bc>
10015668:	4628      	mov	r0, r5
1001566a:	960d      	str	r6, [sp, #52]	@ 0x34
1001566c:	f003 f848 	bl	10018700 <strlen>
10015670:	4683      	mov	fp, r0
10015672:	f7ff b89c 	b.w	100147ae <_vfprintf_r+0x596>
10015676:	2358      	movs	r3, #88	@ 0x58
10015678:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
1001567c:	2330      	movs	r3, #48	@ 0x30
1001567e:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
10015682:	f049 0302 	orr.w	r3, r9, #2
10015686:	9306      	str	r3, [sp, #24]
10015688:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001568a:	2b63      	cmp	r3, #99	@ 0x63
1001568c:	f300 82f6 	bgt.w	10015c7c <_vfprintf_r+0x1a64>
10015690:	2300      	movs	r3, #0
10015692:	930c      	str	r3, [sp, #48]	@ 0x30
10015694:	ad45      	add	r5, sp, #276	@ 0x114
10015696:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
1001569a:	9315      	str	r3, [sp, #84]	@ 0x54
1001569c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001569e:	2b00      	cmp	r3, #0
100156a0:	f2c0 8200 	blt.w	10015aa4 <_vfprintf_r+0x188c>
100156a4:	2300      	movs	r3, #0
100156a6:	931f      	str	r3, [sp, #124]	@ 0x7c
100156a8:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
100156ac:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
100156b0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100156b2:	2b61      	cmp	r3, #97	@ 0x61
100156b4:	f47f ad1a 	bne.w	100150ec <_vfprintf_r+0xed4>
100156b8:	aa29      	add	r2, sp, #164	@ 0xa4
100156ba:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100156be:	f003 f8bf 	bl	10018840 <frexp>
100156c2:	2200      	movs	r2, #0
100156c4:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
100156c8:	f00b f8e2 	bl	10020890 <__aeabi_dmul>
100156cc:	4602      	mov	r2, r0
100156ce:	460b      	mov	r3, r1
100156d0:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
100156d4:	2200      	movs	r2, #0
100156d6:	2300      	movs	r3, #0
100156d8:	f00b fb42 	bl	10020d60 <__aeabi_dcmpeq>
100156dc:	2800      	cmp	r0, #0
100156de:	f040 82f8 	bne.w	10015cd2 <_vfprintf_r+0x1aba>
100156e2:	4b09      	ldr	r3, [pc, #36]	@ (10015708 <_vfprintf_r+0x14f0>)
100156e4:	9312      	str	r3, [sp, #72]	@ 0x48
100156e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100156e8:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
100156ec:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
100156f0:	462e      	mov	r6, r5
100156f2:	9514      	str	r5, [sp, #80]	@ 0x50
100156f4:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
100156f8:	464d      	mov	r5, r9
100156fa:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
100156fe:	e00b      	b.n	10015718 <_vfprintf_r+0x1500>
10015700:	10023ae8 	.word	0x10023ae8
10015704:	cccccccd 	.word	0xcccccccd
10015708:	10023ab4 	.word	0x10023ab4
1001570c:	2200      	movs	r2, #0
1001570e:	2300      	movs	r3, #0
10015710:	f00b fb26 	bl	10020d60 <__aeabi_dcmpeq>
10015714:	b9f0      	cbnz	r0, 10015754 <_vfprintf_r+0x153c>
10015716:	463d      	mov	r5, r7
10015718:	4ba9      	ldr	r3, [pc, #676]	@ (100159c0 <_vfprintf_r+0x17a8>)
1001571a:	2200      	movs	r2, #0
1001571c:	4640      	mov	r0, r8
1001571e:	4649      	mov	r1, r9
10015720:	f00b f8b6 	bl	10020890 <__aeabi_dmul>
10015724:	4689      	mov	r9, r1
10015726:	4680      	mov	r8, r0
10015728:	f00b fb62 	bl	10020df0 <__aeabi_d2iz>
1001572c:	4604      	mov	r4, r0
1001572e:	f00b f845 	bl	100207bc <__aeabi_i2d>
10015732:	4602      	mov	r2, r0
10015734:	460b      	mov	r3, r1
10015736:	4640      	mov	r0, r8
10015738:	4649      	mov	r1, r9
1001573a:	f00a fef1 	bl	10020520 <__aeabi_dsub>
1001573e:	f81b 3004 	ldrb.w	r3, [fp, r4]
10015742:	1c6a      	adds	r2, r5, #1
10015744:	46b2      	mov	sl, r6
10015746:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
1001574a:	f806 3b01 	strb.w	r3, [r6], #1
1001574e:	4680      	mov	r8, r0
10015750:	4689      	mov	r9, r1
10015752:	d1db      	bne.n	1001570c <_vfprintf_r+0x14f4>
10015754:	46cb      	mov	fp, r9
10015756:	4657      	mov	r7, sl
10015758:	46c2      	mov	sl, r8
1001575a:	4b9a      	ldr	r3, [pc, #616]	@ (100159c4 <_vfprintf_r+0x17ac>)
1001575c:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
10015760:	2200      	movs	r2, #0
10015762:	4650      	mov	r0, sl
10015764:	4659      	mov	r1, fp
10015766:	46a9      	mov	r9, r5
10015768:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001576a:	f00b fb21 	bl	10020db0 <__aeabi_dcmpgt>
1001576e:	2800      	cmp	r0, #0
10015770:	f040 8264 	bne.w	10015c3c <_vfprintf_r+0x1a24>
10015774:	4b93      	ldr	r3, [pc, #588]	@ (100159c4 <_vfprintf_r+0x17ac>)
10015776:	4650      	mov	r0, sl
10015778:	4659      	mov	r1, fp
1001577a:	2200      	movs	r2, #0
1001577c:	f00b faf0 	bl	10020d60 <__aeabi_dcmpeq>
10015780:	b110      	cbz	r0, 10015788 <_vfprintf_r+0x1570>
10015782:	07e3      	lsls	r3, r4, #31
10015784:	f100 825a 	bmi.w	10015c3c <_vfprintf_r+0x1a24>
10015788:	f1b9 0f00 	cmp.w	r9, #0
1001578c:	f2c0 8270 	blt.w	10015c70 <_vfprintf_r+0x1a58>
10015790:	f109 0301 	add.w	r3, r9, #1
10015794:	4433      	add	r3, r6
10015796:	2230      	movs	r2, #48	@ 0x30
10015798:	f806 2b01 	strb.w	r2, [r6], #1
1001579c:	42b3      	cmp	r3, r6
1001579e:	d1fb      	bne.n	10015798 <_vfprintf_r+0x1580>
100157a0:	1b5b      	subs	r3, r3, r5
100157a2:	9313      	str	r3, [sp, #76]	@ 0x4c
100157a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100157a6:	f023 0720 	bic.w	r7, r3, #32
100157aa:	e6d8      	b.n	1001555e <_vfprintf_r+0x1346>
100157ac:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100157b0:	aa32      	add	r2, sp, #200	@ 0xc8
100157b2:	f000 fbd1 	bl	10015f58 <__sprint_r>
100157b6:	2800      	cmp	r0, #0
100157b8:	f47f aa2a 	bne.w	10014c10 <_vfprintf_r+0x9f8>
100157bc:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100157c0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100157c2:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100157c6:	f7ff ba34 	b.w	10014c32 <_vfprintf_r+0xa1a>
100157ca:	6d88      	ldr	r0, [r1, #88]	@ 0x58
100157cc:	f002 fe96 	bl	100184fc <__retarget_lock_release_recursive>
100157d0:	f7fe be3c 	b.w	1001444c <_vfprintf_r+0x234>
100157d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100157d6:	1c5e      	adds	r6, r3, #1
100157d8:	2302      	movs	r3, #2
100157da:	e691      	b.n	10015500 <_vfprintf_r+0x12e8>
100157dc:	9e09      	ldr	r6, [sp, #36]	@ 0x24
100157de:	2303      	movs	r3, #3
100157e0:	e68e      	b.n	10015500 <_vfprintf_r+0x12e8>
100157e2:	aa29      	add	r2, sp, #164	@ 0xa4
100157e4:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100157e8:	f003 f82a 	bl	10018840 <frexp>
100157ec:	2200      	movs	r2, #0
100157ee:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
100157f2:	f00b f84d 	bl	10020890 <__aeabi_dmul>
100157f6:	4602      	mov	r2, r0
100157f8:	460b      	mov	r3, r1
100157fa:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
100157fe:	2200      	movs	r2, #0
10015800:	2300      	movs	r3, #0
10015802:	f00b faad 	bl	10020d60 <__aeabi_dcmpeq>
10015806:	2800      	cmp	r0, #0
10015808:	f040 8263 	bne.w	10015cd2 <_vfprintf_r+0x1aba>
1001580c:	4b6e      	ldr	r3, [pc, #440]	@ (100159c8 <_vfprintf_r+0x17b0>)
1001580e:	9312      	str	r3, [sp, #72]	@ 0x48
10015810:	e769      	b.n	100156e6 <_vfprintf_r+0x14ce>
10015812:	9b06      	ldr	r3, [sp, #24]
10015814:	07df      	lsls	r7, r3, #31
10015816:	f100 81e4 	bmi.w	10015be2 <_vfprintf_r+0x19ca>
1001581a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001581c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001581e:	1b5b      	subs	r3, r3, r5
10015820:	9313      	str	r3, [sp, #76]	@ 0x4c
10015822:	1cd3      	adds	r3, r2, #3
10015824:	9212      	str	r2, [sp, #72]	@ 0x48
10015826:	db02      	blt.n	1001582e <_vfprintf_r+0x1616>
10015828:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001582a:	4293      	cmp	r3, r2
1001582c:	da44      	bge.n	100158b8 <_vfprintf_r+0x16a0>
1001582e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10015830:	3b02      	subs	r3, #2
10015832:	930e      	str	r3, [sp, #56]	@ 0x38
10015834:	1e53      	subs	r3, r2, #1
10015836:	9329      	str	r3, [sp, #164]	@ 0xa4
10015838:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
1001583c:	2000      	movs	r0, #0
1001583e:	e6a1      	b.n	10015584 <_vfprintf_r+0x136c>
10015840:	222d      	movs	r2, #45	@ 0x2d
10015842:	2300      	movs	r3, #0
10015844:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10015848:	9309      	str	r3, [sp, #36]	@ 0x24
1001584a:	f7fe bf1a 	b.w	10014682 <_vfprintf_r+0x46a>
1001584e:	4645      	mov	r5, r8
10015850:	460c      	mov	r4, r1
10015852:	4690      	mov	r8, r2
10015854:	3301      	adds	r3, #1
10015856:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10015858:	f8c8 2000 	str.w	r2, [r8]
1001585c:	4434      	add	r4, r6
1001585e:	2b07      	cmp	r3, #7
10015860:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10015864:	f8c8 6004 	str.w	r6, [r8, #4]
10015868:	f300 8226 	bgt.w	10015cb8 <_vfprintf_r+0x1aa0>
1001586c:	f108 0808 	add.w	r8, r8, #8
10015870:	f7ff bac9 	b.w	10014e06 <_vfprintf_r+0xbee>
10015874:	222d      	movs	r2, #45	@ 0x2d
10015876:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001587a:	f7fe beee 	b.w	1001465a <_vfprintf_r+0x442>
1001587e:	2300      	movs	r3, #0
10015880:	9808      	ldr	r0, [sp, #32]
10015882:	9700      	str	r7, [sp, #0]
10015884:	aa2b      	add	r2, sp, #172	@ 0xac
10015886:	4619      	mov	r1, r3
10015888:	f002 ffcc 	bl	10018824 <_wcsrtombs_r>
1001588c:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10015890:	4683      	mov	fp, r0
10015892:	f000 8209 	beq.w	10015ca8 <_vfprintf_r+0x1a90>
10015896:	952b      	str	r5, [sp, #172]	@ 0xac
10015898:	e59d      	b.n	100153d6 <_vfprintf_r+0x11be>
1001589a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
1001589c:	991d      	ldr	r1, [sp, #116]	@ 0x74
1001589e:	1aed      	subs	r5, r5, r3
100158a0:	461a      	mov	r2, r3
100158a2:	4628      	mov	r0, r5
100158a4:	f002 fbba 	bl	1001801c <strncpy>
100158a8:	f898 3001 	ldrb.w	r3, [r8, #1]
100158ac:	b10b      	cbz	r3, 100158b2 <_vfprintf_r+0x169a>
100158ae:	f108 0801 	add.w	r8, r8, #1
100158b2:	f04f 0c00 	mov.w	ip, #0
100158b6:	e4f7      	b.n	100152a8 <_vfprintf_r+0x1090>
100158b8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100158ba:	4293      	cmp	r3, r2
100158bc:	f300 8194 	bgt.w	10015be8 <_vfprintf_r+0x19d0>
100158c0:	9b06      	ldr	r3, [sp, #24]
100158c2:	07dc      	lsls	r4, r3, #31
100158c4:	f140 824a 	bpl.w	10015d5c <_vfprintf_r+0x1b44>
100158c8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100158ca:	eb02 0b03 	add.w	fp, r2, r3
100158ce:	9b06      	ldr	r3, [sp, #24]
100158d0:	0558      	lsls	r0, r3, #21
100158d2:	d502      	bpl.n	100158da <_vfprintf_r+0x16c2>
100158d4:	2a00      	cmp	r2, #0
100158d6:	f300 824a 	bgt.w	10015d6e <_vfprintf_r+0x1b56>
100158da:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100158de:	9306      	str	r3, [sp, #24]
100158e0:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
100158e4:	2367      	movs	r3, #103	@ 0x67
100158e6:	930e      	str	r3, [sp, #56]	@ 0x38
100158e8:	2300      	movs	r3, #0
100158ea:	9314      	str	r3, [sp, #80]	@ 0x50
100158ec:	9310      	str	r3, [sp, #64]	@ 0x40
100158ee:	e694      	b.n	1001561a <_vfprintf_r+0x1402>
100158f0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100158f2:	42a3      	cmp	r3, r4
100158f4:	f4bf ae31 	bcs.w	1001555a <_vfprintf_r+0x1342>
100158f8:	2130      	movs	r1, #48	@ 0x30
100158fa:	1c5a      	adds	r2, r3, #1
100158fc:	9230      	str	r2, [sp, #192]	@ 0xc0
100158fe:	7019      	strb	r1, [r3, #0]
10015900:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10015902:	429c      	cmp	r4, r3
10015904:	d8f9      	bhi.n	100158fa <_vfprintf_r+0x16e2>
10015906:	e628      	b.n	1001555a <_vfprintf_r+0x1342>
10015908:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001590a:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
1001590e:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
10015912:	4642      	mov	r2, r8
10015914:	4621      	mov	r1, r4
10015916:	4f2d      	ldr	r7, [pc, #180]	@ (100159cc <_vfprintf_r+0x17b4>)
10015918:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
1001591c:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
10015920:	f8dd b020 	ldr.w	fp, [sp, #32]
10015924:	4654      	mov	r4, sl
10015926:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
1001592a:	b37b      	cbz	r3, 1001598c <_vfprintf_r+0x1774>
1001592c:	f1b9 0f00 	cmp.w	r9, #0
10015930:	f000 8085 	beq.w	10015a3e <_vfprintf_r+0x1826>
10015934:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10015938:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001593a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001593c:	3001      	adds	r0, #1
1001593e:	4441      	add	r1, r8
10015940:	2807      	cmp	r0, #7
10015942:	e9c2 3800 	strd	r3, r8, [r2]
10015946:	9134      	str	r1, [sp, #208]	@ 0xd0
10015948:	9033      	str	r0, [sp, #204]	@ 0xcc
1001594a:	dc6d      	bgt.n	10015a28 <_vfprintf_r+0x1810>
1001594c:	3208      	adds	r2, #8
1001594e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10015950:	f89a 0000 	ldrb.w	r0, [sl]
10015954:	1b1e      	subs	r6, r3, r4
10015956:	4286      	cmp	r6, r0
10015958:	bfa8      	it	ge
1001595a:	4606      	movge	r6, r0
1001595c:	2e00      	cmp	r6, #0
1001595e:	dd0b      	ble.n	10015978 <_vfprintf_r+0x1760>
10015960:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10015962:	3001      	adds	r0, #1
10015964:	4431      	add	r1, r6
10015966:	2807      	cmp	r0, #7
10015968:	e9c2 4600 	strd	r4, r6, [r2]
1001596c:	9134      	str	r1, [sp, #208]	@ 0xd0
1001596e:	9033      	str	r0, [sp, #204]	@ 0xcc
10015970:	dc6b      	bgt.n	10015a4a <_vfprintf_r+0x1832>
10015972:	f89a 0000 	ldrb.w	r0, [sl]
10015976:	3208      	adds	r2, #8
10015978:	2e00      	cmp	r6, #0
1001597a:	bfac      	ite	ge
1001597c:	1b85      	subge	r5, r0, r6
1001597e:	4605      	movlt	r5, r0
10015980:	2d00      	cmp	r5, #0
10015982:	dc14      	bgt.n	100159ae <_vfprintf_r+0x1796>
10015984:	4404      	add	r4, r0
10015986:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10015988:	2b00      	cmp	r3, #0
1001598a:	d1cf      	bne.n	1001592c <_vfprintf_r+0x1714>
1001598c:	f1b9 0f00 	cmp.w	r9, #0
10015990:	d1d0      	bne.n	10015934 <_vfprintf_r+0x171c>
10015992:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10015996:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
1001599a:	46a2      	mov	sl, r4
1001599c:	45da      	cmp	sl, fp
1001599e:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
100159a2:	4690      	mov	r8, r2
100159a4:	460c      	mov	r4, r1
100159a6:	bf28      	it	cs
100159a8:	46da      	movcs	sl, fp
100159aa:	f7ff ba33 	b.w	10014e14 <_vfprintf_r+0xbfc>
100159ae:	2d10      	cmp	r5, #16
100159b0:	9833      	ldr	r0, [sp, #204]	@ 0xcc
100159b2:	f340 821a 	ble.w	10015dea <_vfprintf_r+0x1bd2>
100159b6:	4623      	mov	r3, r4
100159b8:	463e      	mov	r6, r7
100159ba:	462c      	mov	r4, r5
100159bc:	461d      	mov	r5, r3
100159be:	e00c      	b.n	100159da <_vfprintf_r+0x17c2>
100159c0:	40300000 	.word	0x40300000
100159c4:	3fe00000 	.word	0x3fe00000
100159c8:	10023ac8 	.word	0x10023ac8
100159cc:	10023ae8 	.word	0x10023ae8
100159d0:	3c10      	subs	r4, #16
100159d2:	2c10      	cmp	r4, #16
100159d4:	f102 0208 	add.w	r2, r2, #8
100159d8:	dd16      	ble.n	10015a08 <_vfprintf_r+0x17f0>
100159da:	3001      	adds	r0, #1
100159dc:	3110      	adds	r1, #16
100159de:	2310      	movs	r3, #16
100159e0:	2807      	cmp	r0, #7
100159e2:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
100159e6:	6017      	str	r7, [r2, #0]
100159e8:	6053      	str	r3, [r2, #4]
100159ea:	ddf1      	ble.n	100159d0 <_vfprintf_r+0x17b8>
100159ec:	9907      	ldr	r1, [sp, #28]
100159ee:	aa32      	add	r2, sp, #200	@ 0xc8
100159f0:	4658      	mov	r0, fp
100159f2:	f000 fab1 	bl	10015f58 <__sprint_r>
100159f6:	2800      	cmp	r0, #0
100159f8:	f47e ad66 	bne.w	100144c8 <_vfprintf_r+0x2b0>
100159fc:	3c10      	subs	r4, #16
100159fe:	2c10      	cmp	r4, #16
10015a00:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
10015a04:	aa35      	add	r2, sp, #212	@ 0xd4
10015a06:	dce8      	bgt.n	100159da <_vfprintf_r+0x17c2>
10015a08:	462b      	mov	r3, r5
10015a0a:	4625      	mov	r5, r4
10015a0c:	461c      	mov	r4, r3
10015a0e:	3001      	adds	r0, #1
10015a10:	4429      	add	r1, r5
10015a12:	2807      	cmp	r0, #7
10015a14:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10015a18:	6016      	str	r6, [r2, #0]
10015a1a:	6055      	str	r5, [r2, #4]
10015a1c:	dc4b      	bgt.n	10015ab6 <_vfprintf_r+0x189e>
10015a1e:	f89a 0000 	ldrb.w	r0, [sl]
10015a22:	3208      	adds	r2, #8
10015a24:	4404      	add	r4, r0
10015a26:	e7ae      	b.n	10015986 <_vfprintf_r+0x176e>
10015a28:	9907      	ldr	r1, [sp, #28]
10015a2a:	aa32      	add	r2, sp, #200	@ 0xc8
10015a2c:	4658      	mov	r0, fp
10015a2e:	f000 fa93 	bl	10015f58 <__sprint_r>
10015a32:	2800      	cmp	r0, #0
10015a34:	f47e ad48 	bne.w	100144c8 <_vfprintf_r+0x2b0>
10015a38:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10015a3a:	aa35      	add	r2, sp, #212	@ 0xd4
10015a3c:	e787      	b.n	1001594e <_vfprintf_r+0x1736>
10015a3e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10015a40:	3b01      	subs	r3, #1
10015a42:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
10015a46:	9310      	str	r3, [sp, #64]	@ 0x40
10015a48:	e776      	b.n	10015938 <_vfprintf_r+0x1720>
10015a4a:	9907      	ldr	r1, [sp, #28]
10015a4c:	aa32      	add	r2, sp, #200	@ 0xc8
10015a4e:	4658      	mov	r0, fp
10015a50:	f000 fa82 	bl	10015f58 <__sprint_r>
10015a54:	2800      	cmp	r0, #0
10015a56:	f47e ad37 	bne.w	100144c8 <_vfprintf_r+0x2b0>
10015a5a:	f89a 0000 	ldrb.w	r0, [sl]
10015a5e:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10015a60:	aa35      	add	r2, sp, #212	@ 0xd4
10015a62:	e789      	b.n	10015978 <_vfprintf_r+0x1760>
10015a64:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015a68:	960d      	str	r6, [sp, #52]	@ 0x34
10015a6a:	f8cd b018 	str.w	fp, [sp, #24]
10015a6e:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10015a72:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10015a76:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
10015a7a:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
10015a7e:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10015a82:	f7fe bdfb 	b.w	1001467c <_vfprintf_r+0x464>
10015a86:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015a8a:	aa32      	add	r2, sp, #200	@ 0xc8
10015a8c:	f000 fa64 	bl	10015f58 <__sprint_r>
10015a90:	2800      	cmp	r0, #0
10015a92:	f47f a8bd 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10015a96:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10015a98:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015a9a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015a9e:	f7ff baa3 	b.w	10014fe8 <_vfprintf_r+0xdd0>
10015aa2:	930c      	str	r3, [sp, #48]	@ 0x30
10015aa4:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
10015aa8:	9324      	str	r3, [sp, #144]	@ 0x90
10015aaa:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
10015aae:	9325      	str	r3, [sp, #148]	@ 0x94
10015ab0:	232d      	movs	r3, #45	@ 0x2d
10015ab2:	931f      	str	r3, [sp, #124]	@ 0x7c
10015ab4:	e5fc      	b.n	100156b0 <_vfprintf_r+0x1498>
10015ab6:	9907      	ldr	r1, [sp, #28]
10015ab8:	aa32      	add	r2, sp, #200	@ 0xc8
10015aba:	4658      	mov	r0, fp
10015abc:	f000 fa4c 	bl	10015f58 <__sprint_r>
10015ac0:	2800      	cmp	r0, #0
10015ac2:	f47e ad01 	bne.w	100144c8 <_vfprintf_r+0x2b0>
10015ac6:	f89a 0000 	ldrb.w	r0, [sl]
10015aca:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10015acc:	aa35      	add	r2, sp, #212	@ 0xd4
10015ace:	4404      	add	r4, r0
10015ad0:	e759      	b.n	10015986 <_vfprintf_r+0x176e>
10015ad2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015ad6:	aa32      	add	r2, sp, #200	@ 0xc8
10015ad8:	f000 fa3e 	bl	10015f58 <__sprint_r>
10015adc:	2800      	cmp	r0, #0
10015ade:	f47f a897 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10015ae2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015ae4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015ae8:	f7ff b986 	b.w	10014df8 <_vfprintf_r+0xbe0>
10015aec:	2378      	movs	r3, #120	@ 0x78
10015aee:	e5c3      	b.n	10015678 <_vfprintf_r+0x1460>
10015af0:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015af4:	aa32      	add	r2, sp, #200	@ 0xc8
10015af6:	f000 fa2f 	bl	10015f58 <__sprint_r>
10015afa:	2800      	cmp	r0, #0
10015afc:	f47f a888 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10015b00:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10015b02:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015b04:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015b08:	f7ff b99a 	b.w	10014e40 <_vfprintf_r+0xc28>
10015b0c:	49ab      	ldr	r1, [pc, #684]	@ (10015dbc <_vfprintf_r+0x1ba4>)
10015b0e:	9115      	str	r1, [sp, #84]	@ 0x54
10015b10:	f7fe bdeb 	b.w	100146ea <_vfprintf_r+0x4d2>
10015b14:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015b18:	aa32      	add	r2, sp, #200	@ 0xc8
10015b1a:	f000 fa1d 	bl	10015f58 <__sprint_r>
10015b1e:	2800      	cmp	r0, #0
10015b20:	f47f a876 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10015b24:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10015b26:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10015b28:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015b2a:	1b5d      	subs	r5, r3, r5
10015b2c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015b30:	f7ff b99d 	b.w	10014e6e <_vfprintf_r+0xc56>
10015b34:	9b06      	ldr	r3, [sp, #24]
10015b36:	9912      	ldr	r1, [sp, #72]	@ 0x48
10015b38:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10015b3a:	f003 0301 	and.w	r3, r3, #1
10015b3e:	2900      	cmp	r1, #0
10015b40:	ea43 0302 	orr.w	r3, r3, r2
10015b44:	f340 815d 	ble.w	10015e02 <_vfprintf_r+0x1bea>
10015b48:	2b00      	cmp	r3, #0
10015b4a:	f040 8109 	bne.w	10015d60 <_vfprintf_r+0x1b48>
10015b4e:	2366      	movs	r3, #102	@ 0x66
10015b50:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10015b54:	930e      	str	r3, [sp, #56]	@ 0x38
10015b56:	9b06      	ldr	r3, [sp, #24]
10015b58:	055a      	lsls	r2, r3, #21
10015b5a:	f100 810a 	bmi.w	10015d72 <_vfprintf_r+0x1b5a>
10015b5e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015b62:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10015b66:	9306      	str	r3, [sp, #24]
10015b68:	e6be      	b.n	100158e8 <_vfprintf_r+0x16d0>
10015b6a:	2200      	movs	r2, #0
10015b6c:	9209      	str	r2, [sp, #36]	@ 0x24
10015b6e:	f7fe bbcc 	b.w	1001430a <_vfprintf_r+0xf2>
10015b72:	9b07      	ldr	r3, [sp, #28]
10015b74:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10015b76:	07df      	lsls	r7, r3, #31
10015b78:	d407      	bmi.n	10015b8a <_vfprintf_r+0x1972>
10015b7a:	9b07      	ldr	r3, [sp, #28]
10015b7c:	899b      	ldrh	r3, [r3, #12]
10015b7e:	059e      	lsls	r6, r3, #22
10015b80:	d403      	bmi.n	10015b8a <_vfprintf_r+0x1972>
10015b82:	9b07      	ldr	r3, [sp, #28]
10015b84:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10015b86:	f002 fcb9 	bl	100184fc <__retarget_lock_release_recursive>
10015b8a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10015b8e:	930a      	str	r3, [sp, #40]	@ 0x28
10015b90:	f7fe bcab 	b.w	100144ea <_vfprintf_r+0x2d2>
10015b94:	4256      	negs	r6, r2
10015b96:	3210      	adds	r2, #16
10015b98:	4a89      	ldr	r2, [pc, #548]	@ (10015dc0 <_vfprintf_r+0x1ba8>)
10015b9a:	9215      	str	r2, [sp, #84]	@ 0x54
10015b9c:	da34      	bge.n	10015c08 <_vfprintf_r+0x19f0>
10015b9e:	46aa      	mov	sl, r5
10015ba0:	2710      	movs	r7, #16
10015ba2:	4615      	mov	r5, r2
10015ba4:	e004      	b.n	10015bb0 <_vfprintf_r+0x1998>
10015ba6:	f108 0808 	add.w	r8, r8, #8
10015baa:	3e10      	subs	r6, #16
10015bac:	2e10      	cmp	r6, #16
10015bae:	dd2a      	ble.n	10015c06 <_vfprintf_r+0x19ee>
10015bb0:	3301      	adds	r3, #1
10015bb2:	3410      	adds	r4, #16
10015bb4:	2b07      	cmp	r3, #7
10015bb6:	e9c8 5700 	strd	r5, r7, [r8]
10015bba:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10015bbe:	ddf2      	ble.n	10015ba6 <_vfprintf_r+0x198e>
10015bc0:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015bc4:	aa32      	add	r2, sp, #200	@ 0xc8
10015bc6:	f000 f9c7 	bl	10015f58 <__sprint_r>
10015bca:	2800      	cmp	r0, #0
10015bcc:	f47f a820 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10015bd0:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10015bd4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015bd8:	e7e7      	b.n	10015baa <_vfprintf_r+0x1992>
10015bda:	2300      	movs	r3, #0
10015bdc:	930c      	str	r3, [sp, #48]	@ 0x30
10015bde:	ad45      	add	r5, sp, #276	@ 0x114
10015be0:	e40b      	b.n	100153fa <_vfprintf_r+0x11e2>
10015be2:	19ac      	adds	r4, r5, r6
10015be4:	2747      	movs	r7, #71	@ 0x47
10015be6:	e4ae      	b.n	10015546 <_vfprintf_r+0x132e>
10015be8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10015bea:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10015bec:	eb03 0b02 	add.w	fp, r3, r2
10015bf0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10015bf2:	2b00      	cmp	r3, #0
10015bf4:	f340 80ee 	ble.w	10015dd4 <_vfprintf_r+0x1bbc>
10015bf8:	2367      	movs	r3, #103	@ 0x67
10015bfa:	930e      	str	r3, [sp, #56]	@ 0x38
10015bfc:	e7ab      	b.n	10015b56 <_vfprintf_r+0x193e>
10015bfe:	4a6f      	ldr	r2, [pc, #444]	@ (10015dbc <_vfprintf_r+0x1ba4>)
10015c00:	9215      	str	r2, [sp, #84]	@ 0x54
10015c02:	f7ff b8cc 	b.w	10014d9e <_vfprintf_r+0xb86>
10015c06:	4655      	mov	r5, sl
10015c08:	3301      	adds	r3, #1
10015c0a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10015c0c:	f8c8 2000 	str.w	r2, [r8]
10015c10:	4434      	add	r4, r6
10015c12:	2b07      	cmp	r3, #7
10015c14:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10015c18:	f8c8 6004 	str.w	r6, [r8, #4]
10015c1c:	f77f a9f9 	ble.w	10015012 <_vfprintf_r+0xdfa>
10015c20:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015c24:	aa32      	add	r2, sp, #200	@ 0xc8
10015c26:	f000 f997 	bl	10015f58 <__sprint_r>
10015c2a:	2800      	cmp	r0, #0
10015c2c:	f47e aff0 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10015c30:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10015c34:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015c38:	f7fe bffe 	b.w	10014c38 <_vfprintf_r+0xa20>
10015c3c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10015c3e:	9730      	str	r7, [sp, #192]	@ 0xc0
10015c40:	7bd9      	ldrb	r1, [r3, #15]
10015c42:	f816 2c01 	ldrb.w	r2, [r6, #-1]
10015c46:	428a      	cmp	r2, r1
10015c48:	4633      	mov	r3, r6
10015c4a:	d109      	bne.n	10015c60 <_vfprintf_r+0x1a48>
10015c4c:	2030      	movs	r0, #48	@ 0x30
10015c4e:	f803 0c01 	strb.w	r0, [r3, #-1]
10015c52:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10015c54:	1e5a      	subs	r2, r3, #1
10015c56:	9230      	str	r2, [sp, #192]	@ 0xc0
10015c58:	f813 2c01 	ldrb.w	r2, [r3, #-1]
10015c5c:	4291      	cmp	r1, r2
10015c5e:	d0f6      	beq.n	10015c4e <_vfprintf_r+0x1a36>
10015c60:	2a39      	cmp	r2, #57	@ 0x39
10015c62:	bf0b      	itete	eq
10015c64:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
10015c66:	3201      	addne	r2, #1
10015c68:	7a92      	ldrbeq	r2, [r2, #10]
10015c6a:	b2d2      	uxtbne	r2, r2
10015c6c:	f803 2c01 	strb.w	r2, [r3, #-1]
10015c70:	4633      	mov	r3, r6
10015c72:	e595      	b.n	100157a0 <_vfprintf_r+0x1588>
10015c74:	4a52      	ldr	r2, [pc, #328]	@ (10015dc0 <_vfprintf_r+0x1ba8>)
10015c76:	9215      	str	r2, [sp, #84]	@ 0x54
10015c78:	f7fe bf76 	b.w	10014b68 <_vfprintf_r+0x950>
10015c7c:	9808      	ldr	r0, [sp, #32]
10015c7e:	1c59      	adds	r1, r3, #1
10015c80:	f7fd fffc 	bl	10013c7c <_malloc_r>
10015c84:	4605      	mov	r5, r0
10015c86:	b178      	cbz	r0, 10015ca8 <_vfprintf_r+0x1a90>
10015c88:	900c      	str	r0, [sp, #48]	@ 0x30
10015c8a:	e504      	b.n	10015696 <_vfprintf_r+0x147e>
10015c8c:	2800      	cmp	r0, #0
10015c8e:	d162      	bne.n	10015d56 <_vfprintf_r+0x1b3e>
10015c90:	2230      	movs	r2, #48	@ 0x30
10015c92:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
10015c96:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
10015c9a:	3330      	adds	r3, #48	@ 0x30
10015c9c:	f802 3b01 	strb.w	r3, [r2], #1
10015ca0:	ab2c      	add	r3, sp, #176	@ 0xb0
10015ca2:	1ad3      	subs	r3, r2, r3
10015ca4:	931c      	str	r3, [sp, #112]	@ 0x70
10015ca6:	e4a3      	b.n	100155f0 <_vfprintf_r+0x13d8>
10015ca8:	9a07      	ldr	r2, [sp, #28]
10015caa:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
10015cae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015cb2:	8193      	strh	r3, [r2, #12]
10015cb4:	f7fe bc11 	b.w	100144da <_vfprintf_r+0x2c2>
10015cb8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015cbc:	aa32      	add	r2, sp, #200	@ 0xc8
10015cbe:	f000 f94b 	bl	10015f58 <__sprint_r>
10015cc2:	2800      	cmp	r0, #0
10015cc4:	f47e afa4 	bne.w	10014c10 <_vfprintf_r+0x9f8>
10015cc8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015cca:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015cce:	f7ff b89a 	b.w	10014e06 <_vfprintf_r+0xbee>
10015cd2:	4b3c      	ldr	r3, [pc, #240]	@ (10015dc4 <_vfprintf_r+0x1bac>)
10015cd4:	4a3c      	ldr	r2, [pc, #240]	@ (10015dc8 <_vfprintf_r+0x1bb0>)
10015cd6:	990e      	ldr	r1, [sp, #56]	@ 0x38
10015cd8:	2961      	cmp	r1, #97	@ 0x61
10015cda:	bf18      	it	ne
10015cdc:	461a      	movne	r2, r3
10015cde:	2301      	movs	r3, #1
10015ce0:	9212      	str	r2, [sp, #72]	@ 0x48
10015ce2:	9329      	str	r3, [sp, #164]	@ 0xa4
10015ce4:	e4ff      	b.n	100156e6 <_vfprintf_r+0x14ce>
10015ce6:	2306      	movs	r3, #6
10015ce8:	9309      	str	r3, [sp, #36]	@ 0x24
10015cea:	f7ff b9ef 	b.w	100150cc <_vfprintf_r+0xeb4>
10015cee:	9b06      	ldr	r3, [sp, #24]
10015cf0:	07de      	lsls	r6, r3, #31
10015cf2:	f57f ac86 	bpl.w	10015602 <_vfprintf_r+0x13ea>
10015cf6:	e482      	b.n	100155fe <_vfprintf_r+0x13e6>
10015cf8:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10015cfc:	2200      	movs	r2, #0
10015cfe:	2300      	movs	r3, #0
10015d00:	f00b f82e 	bl	10020d60 <__aeabi_dcmpeq>
10015d04:	2800      	cmp	r0, #0
10015d06:	f47f ac1c 	bne.w	10015542 <_vfprintf_r+0x132a>
10015d0a:	f1c6 0601 	rsb	r6, r6, #1
10015d0e:	9629      	str	r6, [sp, #164]	@ 0xa4
10015d10:	e418      	b.n	10015544 <_vfprintf_r+0x132c>
10015d12:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10015d14:	4d2d      	ldr	r5, [pc, #180]	@ (10015dcc <_vfprintf_r+0x1bb4>)
10015d16:	2b00      	cmp	r3, #0
10015d18:	bfb4      	ite	lt
10015d1a:	222d      	movlt	r2, #45	@ 0x2d
10015d1c:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
10015d20:	4b2b      	ldr	r3, [pc, #172]	@ (10015dd0 <_vfprintf_r+0x1bb8>)
10015d22:	bfb8      	it	lt
10015d24:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
10015d28:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10015d2c:	f7fe bc99 	b.w	10014662 <_vfprintf_r+0x44a>
10015d30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10015d32:	9306      	str	r3, [sp, #24]
10015d34:	469b      	mov	fp, r3
10015d36:	2373      	movs	r3, #115	@ 0x73
10015d38:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015d3c:	960d      	str	r6, [sp, #52]	@ 0x34
10015d3e:	9009      	str	r0, [sp, #36]	@ 0x24
10015d40:	9014      	str	r0, [sp, #80]	@ 0x50
10015d42:	9010      	str	r0, [sp, #64]	@ 0x40
10015d44:	930e      	str	r3, [sp, #56]	@ 0x38
10015d46:	f7fe bc99 	b.w	1001467c <_vfprintf_r+0x464>
10015d4a:	f8dd 9018 	ldr.w	r9, [sp, #24]
10015d4e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10015d52:	f7ff bb40 	b.w	100153d6 <_vfprintf_r+0x11be>
10015d56:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10015d5a:	e79e      	b.n	10015c9a <_vfprintf_r+0x1a82>
10015d5c:	4693      	mov	fp, r2
10015d5e:	e5b6      	b.n	100158ce <_vfprintf_r+0x16b6>
10015d60:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10015d62:	18cf      	adds	r7, r1, r3
10015d64:	443a      	add	r2, r7
10015d66:	2366      	movs	r3, #102	@ 0x66
10015d68:	4693      	mov	fp, r2
10015d6a:	930e      	str	r3, [sp, #56]	@ 0x38
10015d6c:	e6f3      	b.n	10015b56 <_vfprintf_r+0x193e>
10015d6e:	2367      	movs	r3, #103	@ 0x67
10015d70:	930e      	str	r3, [sp, #56]	@ 0x38
10015d72:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10015d74:	780b      	ldrb	r3, [r1, #0]
10015d76:	2bff      	cmp	r3, #255	@ 0xff
10015d78:	d063      	beq.n	10015e42 <_vfprintf_r+0x1c2a>
10015d7a:	2400      	movs	r4, #0
10015d7c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
10015d7e:	4620      	mov	r0, r4
10015d80:	e003      	b.n	10015d8a <_vfprintf_r+0x1b72>
10015d82:	3001      	adds	r0, #1
10015d84:	3101      	adds	r1, #1
10015d86:	2bff      	cmp	r3, #255	@ 0xff
10015d88:	d008      	beq.n	10015d9c <_vfprintf_r+0x1b84>
10015d8a:	4293      	cmp	r3, r2
10015d8c:	da06      	bge.n	10015d9c <_vfprintf_r+0x1b84>
10015d8e:	1ad2      	subs	r2, r2, r3
10015d90:	784b      	ldrb	r3, [r1, #1]
10015d92:	2b00      	cmp	r3, #0
10015d94:	d1f5      	bne.n	10015d82 <_vfprintf_r+0x1b6a>
10015d96:	780b      	ldrb	r3, [r1, #0]
10015d98:	3401      	adds	r4, #1
10015d9a:	e7f4      	b.n	10015d86 <_vfprintf_r+0x1b6e>
10015d9c:	911b      	str	r1, [sp, #108]	@ 0x6c
10015d9e:	9212      	str	r2, [sp, #72]	@ 0x48
10015da0:	9010      	str	r0, [sp, #64]	@ 0x40
10015da2:	9414      	str	r4, [sp, #80]	@ 0x50
10015da4:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
10015da8:	9a10      	ldr	r2, [sp, #64]	@ 0x40
10015daa:	4413      	add	r3, r2
10015dac:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
10015dae:	fb02 bb03 	mla	fp, r2, r3, fp
10015db2:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015db6:	9306      	str	r3, [sp, #24]
10015db8:	e42f      	b.n	1001561a <_vfprintf_r+0x1402>
10015dba:	bf00      	nop
10015dbc:	10023af8 	.word	0x10023af8
10015dc0:	10023ae8 	.word	0x10023ae8
10015dc4:	10023ac8 	.word	0x10023ac8
10015dc8:	10023ab4 	.word	0x10023ab4
10015dcc:	10023aac 	.word	0x10023aac
10015dd0:	10023ab0 	.word	0x10023ab0
10015dd4:	f1c3 0301 	rsb	r3, r3, #1
10015dd8:	449b      	add	fp, r3
10015dda:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015dde:	9306      	str	r3, [sp, #24]
10015de0:	2367      	movs	r3, #103	@ 0x67
10015de2:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10015de6:	930e      	str	r3, [sp, #56]	@ 0x38
10015de8:	e57e      	b.n	100158e8 <_vfprintf_r+0x16d0>
10015dea:	4e1c      	ldr	r6, [pc, #112]	@ (10015e5c <_vfprintf_r+0x1c44>)
10015dec:	e60f      	b.n	10015a0e <_vfprintf_r+0x17f6>
10015dee:	2302      	movs	r3, #2
10015df0:	931c      	str	r3, [sp, #112]	@ 0x70
10015df2:	f7ff bbfd 	b.w	100155f0 <_vfprintf_r+0x13d8>
10015df6:	4a19      	ldr	r2, [pc, #100]	@ (10015e5c <_vfprintf_r+0x1c44>)
10015df8:	9215      	str	r2, [sp, #84]	@ 0x54
10015dfa:	e52b      	b.n	10015854 <_vfprintf_r+0x163c>
10015dfc:	2170      	movs	r1, #112	@ 0x70
10015dfe:	f7ff bbc0 	b.w	10015582 <_vfprintf_r+0x136a>
10015e02:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10015e06:	b933      	cbnz	r3, 10015e16 <_vfprintf_r+0x1bfe>
10015e08:	f04f 0b01 	mov.w	fp, #1
10015e0c:	2366      	movs	r3, #102	@ 0x66
10015e0e:	f8cd b018 	str.w	fp, [sp, #24]
10015e12:	930e      	str	r3, [sp, #56]	@ 0x38
10015e14:	e568      	b.n	100158e8 <_vfprintf_r+0x16d0>
10015e16:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10015e18:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10015e1c:	1c5f      	adds	r7, r3, #1
10015e1e:	44bb      	add	fp, r7
10015e20:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015e24:	9306      	str	r3, [sp, #24]
10015e26:	2366      	movs	r3, #102	@ 0x66
10015e28:	930e      	str	r3, [sp, #56]	@ 0x38
10015e2a:	e55d      	b.n	100158e8 <_vfprintf_r+0x16d0>
10015e2c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10015e2e:	7863      	ldrb	r3, [r4, #1]
10015e30:	460c      	mov	r4, r1
10015e32:	f852 1b04 	ldr.w	r1, [r2], #4
10015e36:	920d      	str	r2, [sp, #52]	@ 0x34
10015e38:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10015e3c:	9109      	str	r1, [sp, #36]	@ 0x24
10015e3e:	f7fe ba63 	b.w	10014308 <_vfprintf_r+0xf0>
10015e42:	2300      	movs	r3, #0
10015e44:	9314      	str	r3, [sp, #80]	@ 0x50
10015e46:	9310      	str	r3, [sp, #64]	@ 0x40
10015e48:	e7ac      	b.n	10015da4 <_vfprintf_r+0x1b8c>
10015e4a:	e9dd 2b07 	ldrd	r2, fp, [sp, #28]
10015e4e:	8993      	ldrh	r3, [r2, #12]
10015e50:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015e54:	8193      	strh	r3, [r2, #12]
10015e56:	f7fe bb37 	b.w	100144c8 <_vfprintf_r+0x2b0>
10015e5a:	bf00      	nop
10015e5c:	10023ae8 	.word	0x10023ae8

10015e60 <__sbprintf>:
10015e60:	b5f0      	push	{r4, r5, r6, r7, lr}
10015e62:	461f      	mov	r7, r3
10015e64:	898b      	ldrh	r3, [r1, #12]
10015e66:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
10015e6a:	f023 0302 	bic.w	r3, r3, #2
10015e6e:	f8ad 300c 	strh.w	r3, [sp, #12]
10015e72:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10015e74:	9319      	str	r3, [sp, #100]	@ 0x64
10015e76:	89cb      	ldrh	r3, [r1, #14]
10015e78:	f8ad 300e 	strh.w	r3, [sp, #14]
10015e7c:	69cb      	ldr	r3, [r1, #28]
10015e7e:	9307      	str	r3, [sp, #28]
10015e80:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10015e82:	9309      	str	r3, [sp, #36]	@ 0x24
10015e84:	ab1a      	add	r3, sp, #104	@ 0x68
10015e86:	9300      	str	r3, [sp, #0]
10015e88:	9304      	str	r3, [sp, #16]
10015e8a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10015e8e:	4615      	mov	r5, r2
10015e90:	4606      	mov	r6, r0
10015e92:	9302      	str	r3, [sp, #8]
10015e94:	9305      	str	r3, [sp, #20]
10015e96:	a816      	add	r0, sp, #88	@ 0x58
10015e98:	2300      	movs	r3, #0
10015e9a:	460c      	mov	r4, r1
10015e9c:	9306      	str	r3, [sp, #24]
10015e9e:	f002 fb27 	bl	100184f0 <__retarget_lock_init_recursive>
10015ea2:	462a      	mov	r2, r5
10015ea4:	463b      	mov	r3, r7
10015ea6:	4669      	mov	r1, sp
10015ea8:	4630      	mov	r0, r6
10015eaa:	f7fe f9b5 	bl	10014218 <_vfprintf_r>
10015eae:	1e05      	subs	r5, r0, #0
10015eb0:	db07      	blt.n	10015ec2 <__sbprintf+0x62>
10015eb2:	4669      	mov	r1, sp
10015eb4:	4630      	mov	r0, r6
10015eb6:	f001 fb79 	bl	100175ac <_fflush_r>
10015eba:	2800      	cmp	r0, #0
10015ebc:	bf18      	it	ne
10015ebe:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10015ec2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10015ec6:	065b      	lsls	r3, r3, #25
10015ec8:	d503      	bpl.n	10015ed2 <__sbprintf+0x72>
10015eca:	89a3      	ldrh	r3, [r4, #12]
10015ecc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015ed0:	81a3      	strh	r3, [r4, #12]
10015ed2:	9816      	ldr	r0, [sp, #88]	@ 0x58
10015ed4:	f002 fb0e 	bl	100184f4 <__retarget_lock_close_recursive>
10015ed8:	4628      	mov	r0, r5
10015eda:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10015ede:	bdf0      	pop	{r4, r5, r6, r7, pc}

10015ee0 <__sprint_r.part.0>:
10015ee0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015ee4:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10015ee6:	049c      	lsls	r4, r3, #18
10015ee8:	4690      	mov	r8, r2
10015eea:	d52e      	bpl.n	10015f4a <__sprint_r.part.0+0x6a>
10015eec:	6893      	ldr	r3, [r2, #8]
10015eee:	6812      	ldr	r2, [r2, #0]
10015ef0:	b34b      	cbz	r3, 10015f46 <__sprint_r.part.0+0x66>
10015ef2:	460d      	mov	r5, r1
10015ef4:	4606      	mov	r6, r0
10015ef6:	f102 0908 	add.w	r9, r2, #8
10015efa:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
10015efe:	ea5f 079a 	movs.w	r7, sl, lsr #2
10015f02:	d016      	beq.n	10015f32 <__sprint_r.part.0+0x52>
10015f04:	f1a2 0b04 	sub.w	fp, r2, #4
10015f08:	2400      	movs	r4, #0
10015f0a:	e001      	b.n	10015f10 <__sprint_r.part.0+0x30>
10015f0c:	42a7      	cmp	r7, r4
10015f0e:	d00e      	beq.n	10015f2e <__sprint_r.part.0+0x4e>
10015f10:	f85b 1f04 	ldr.w	r1, [fp, #4]!
10015f14:	462a      	mov	r2, r5
10015f16:	4630      	mov	r0, r6
10015f18:	f001 ff7e 	bl	10017e18 <_fputwc_r>
10015f1c:	1c43      	adds	r3, r0, #1
10015f1e:	f104 0401 	add.w	r4, r4, #1
10015f22:	d1f3      	bne.n	10015f0c <__sprint_r.part.0+0x2c>
10015f24:	2300      	movs	r3, #0
10015f26:	e9c8 3301 	strd	r3, r3, [r8, #4]
10015f2a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015f2e:	f8d8 3008 	ldr.w	r3, [r8, #8]
10015f32:	f02a 0a03 	bic.w	sl, sl, #3
10015f36:	eba3 030a 	sub.w	r3, r3, sl
10015f3a:	f8c8 3008 	str.w	r3, [r8, #8]
10015f3e:	f109 0908 	add.w	r9, r9, #8
10015f42:	2b00      	cmp	r3, #0
10015f44:	d1d9      	bne.n	10015efa <__sprint_r.part.0+0x1a>
10015f46:	2000      	movs	r0, #0
10015f48:	e7ec      	b.n	10015f24 <__sprint_r.part.0+0x44>
10015f4a:	f001 fcd5 	bl	100178f8 <__sfvwrite_r>
10015f4e:	2300      	movs	r3, #0
10015f50:	e9c8 3301 	strd	r3, r3, [r8, #4]
10015f54:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

10015f58 <__sprint_r>:
10015f58:	b410      	push	{r4}
10015f5a:	6894      	ldr	r4, [r2, #8]
10015f5c:	b114      	cbz	r4, 10015f64 <__sprint_r+0xc>
10015f5e:	bc10      	pop	{r4}
10015f60:	f7ff bfbe 	b.w	10015ee0 <__sprint_r.part.0>
10015f64:	4620      	mov	r0, r4
10015f66:	6054      	str	r4, [r2, #4]
10015f68:	bc10      	pop	{r4}
10015f6a:	4770      	bx	lr

10015f6c <_vfiprintf_r>:
10015f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015f70:	b0c7      	sub	sp, #284	@ 0x11c
10015f72:	af16      	add	r7, sp, #88	@ 0x58
10015f74:	4683      	mov	fp, r0
10015f76:	9103      	str	r1, [sp, #12]
10015f78:	9206      	str	r2, [sp, #24]
10015f7a:	2100      	movs	r1, #0
10015f7c:	2208      	movs	r2, #8
10015f7e:	4638      	mov	r0, r7
10015f80:	461c      	mov	r4, r3
10015f82:	930a      	str	r3, [sp, #40]	@ 0x28
10015f84:	f001 fff8 	bl	10017f78 <memset>
10015f88:	f1bb 0f00 	cmp.w	fp, #0
10015f8c:	d004      	beq.n	10015f98 <_vfiprintf_r+0x2c>
10015f8e:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
10015f92:	2b00      	cmp	r3, #0
10015f94:	f000 86bb 	beq.w	10016d0e <_vfiprintf_r+0xda2>
10015f98:	9a03      	ldr	r2, [sp, #12]
10015f9a:	6e53      	ldr	r3, [r2, #100]	@ 0x64
10015f9c:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
10015fa0:	07db      	lsls	r3, r3, #31
10015fa2:	d402      	bmi.n	10015faa <_vfiprintf_r+0x3e>
10015fa4:	0596      	lsls	r6, r2, #22
10015fa6:	f140 859f 	bpl.w	10016ae8 <_vfiprintf_r+0xb7c>
10015faa:	0495      	lsls	r5, r2, #18
10015fac:	d407      	bmi.n	10015fbe <_vfiprintf_r+0x52>
10015fae:	9903      	ldr	r1, [sp, #12]
10015fb0:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10015fb2:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10015fb6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
10015fba:	818a      	strh	r2, [r1, #12]
10015fbc:	664b      	str	r3, [r1, #100]	@ 0x64
10015fbe:	0710      	lsls	r0, r2, #28
10015fc0:	f140 80c9 	bpl.w	10016156 <_vfiprintf_r+0x1ea>
10015fc4:	9b03      	ldr	r3, [sp, #12]
10015fc6:	691b      	ldr	r3, [r3, #16]
10015fc8:	2b00      	cmp	r3, #0
10015fca:	f000 80c4 	beq.w	10016156 <_vfiprintf_r+0x1ea>
10015fce:	f002 031a 	and.w	r3, r2, #26
10015fd2:	2b0a      	cmp	r3, #10
10015fd4:	f000 80ce 	beq.w	10016174 <_vfiprintf_r+0x208>
10015fd8:	2300      	movs	r3, #0
10015fda:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10015fde:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
10015fe2:	aa1d      	add	r2, sp, #116	@ 0x74
10015fe4:	f8df a260 	ldr.w	sl, [pc, #608]	@ 10016248 <_vfiprintf_r+0x2dc>
10015fe8:	930d      	str	r3, [sp, #52]	@ 0x34
10015fea:	921a      	str	r2, [sp, #104]	@ 0x68
10015fec:	4691      	mov	r9, r2
10015fee:	9310      	str	r3, [sp, #64]	@ 0x40
10015ff0:	9307      	str	r3, [sp, #28]
10015ff2:	9d06      	ldr	r5, [sp, #24]
10015ff4:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
10015ff8:	f002 f844 	bl	10018084 <__locale_mb_cur_max>
10015ffc:	462a      	mov	r2, r5
10015ffe:	4603      	mov	r3, r0
10016000:	a914      	add	r1, sp, #80	@ 0x50
10016002:	9700      	str	r7, [sp, #0]
10016004:	4658      	mov	r0, fp
10016006:	47a0      	blx	r4
10016008:	2800      	cmp	r0, #0
1001600a:	f000 80d2 	beq.w	100161b2 <_vfiprintf_r+0x246>
1001600e:	f2c0 80c8 	blt.w	100161a2 <_vfiprintf_r+0x236>
10016012:	9a14      	ldr	r2, [sp, #80]	@ 0x50
10016014:	2a25      	cmp	r2, #37	@ 0x25
10016016:	4603      	mov	r3, r0
10016018:	d001      	beq.n	1001601e <_vfiprintf_r+0xb2>
1001601a:	441d      	add	r5, r3
1001601c:	e7ea      	b.n	10015ff4 <_vfiprintf_r+0x88>
1001601e:	9b06      	ldr	r3, [sp, #24]
10016020:	1aee      	subs	r6, r5, r3
10016022:	4604      	mov	r4, r0
10016024:	f040 80c9 	bne.w	100161ba <_vfiprintf_r+0x24e>
10016028:	2300      	movs	r3, #0
1001602a:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001602e:	786a      	ldrb	r2, [r5, #1]
10016030:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10016034:	9308      	str	r3, [sp, #32]
10016036:	1c6c      	adds	r4, r5, #1
10016038:	9105      	str	r1, [sp, #20]
1001603a:	9302      	str	r3, [sp, #8]
1001603c:	3401      	adds	r4, #1
1001603e:	f1a2 0320 	sub.w	r3, r2, #32
10016042:	2b5a      	cmp	r3, #90	@ 0x5a
10016044:	f200 8102 	bhi.w	1001624c <_vfiprintf_r+0x2e0>
10016048:	e8df f013 	tbh	[pc, r3, lsl #1]
1001604c:	01000303 	.word	0x01000303
10016050:	02fd0100 	.word	0x02fd0100
10016054:	01000100 	.word	0x01000100
10016058:	006b0100 	.word	0x006b0100
1001605c:	01000100 	.word	0x01000100
10016060:	032d0218 	.word	0x032d0218
10016064:	02230100 	.word	0x02230100
10016068:	01000313 	.word	0x01000313
1001606c:	005b030d 	.word	0x005b030d
10016070:	005b005b 	.word	0x005b005b
10016074:	005b005b 	.word	0x005b005b
10016078:	005b005b 	.word	0x005b005b
1001607c:	005b005b 	.word	0x005b005b
10016080:	01000100 	.word	0x01000100
10016084:	01000100 	.word	0x01000100
10016088:	01000100 	.word	0x01000100
1001608c:	01000100 	.word	0x01000100
10016090:	01ce0100 	.word	0x01ce0100
10016094:	0100025d 	.word	0x0100025d
10016098:	01000100 	.word	0x01000100
1001609c:	01000100 	.word	0x01000100
100160a0:	01000100 	.word	0x01000100
100160a4:	01000100 	.word	0x01000100
100160a8:	02290100 	.word	0x02290100
100160ac:	01000100 	.word	0x01000100
100160b0:	01a60100 	.word	0x01a60100
100160b4:	02760100 	.word	0x02760100
100160b8:	01000100 	.word	0x01000100
100160bc:	0100058e 	.word	0x0100058e
100160c0:	01000100 	.word	0x01000100
100160c4:	01000100 	.word	0x01000100
100160c8:	01000100 	.word	0x01000100
100160cc:	01000100 	.word	0x01000100
100160d0:	01ce0100 	.word	0x01ce0100
100160d4:	010001f3 	.word	0x010001f3
100160d8:	01000100 	.word	0x01000100
100160dc:	01f302c4 	.word	0x01f302c4
100160e0:	0100007f 	.word	0x0100007f
100160e4:	01000332 	.word	0x01000332
100160e8:	058b02ee 	.word	0x058b02ee
100160ec:	007f02cd 	.word	0x007f02cd
100160f0:	01a60100 	.word	0x01a60100
100160f4:	0588007d 	.word	0x0588007d
100160f8:	01000100 	.word	0x01000100
100160fc:	010005b1 	.word	0x010005b1
10016100:	007d      	.short	0x007d
10016102:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10016106:	2200      	movs	r2, #0
10016108:	4611      	mov	r1, r2
1001610a:	f814 2b01 	ldrb.w	r2, [r4], #1
1001610e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10016112:	eb03 0141 	add.w	r1, r3, r1, lsl #1
10016116:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001611a:	2b09      	cmp	r3, #9
1001611c:	d9f5      	bls.n	1001610a <_vfiprintf_r+0x19e>
1001611e:	9108      	str	r1, [sp, #32]
10016120:	e78d      	b.n	1001603e <_vfiprintf_r+0xd2>
10016122:	4658      	mov	r0, fp
10016124:	f001 ffb4 	bl	10018090 <_localeconv_r>
10016128:	6843      	ldr	r3, [r0, #4]
1001612a:	9310      	str	r3, [sp, #64]	@ 0x40
1001612c:	4618      	mov	r0, r3
1001612e:	f002 fae7 	bl	10018700 <strlen>
10016132:	900f      	str	r0, [sp, #60]	@ 0x3c
10016134:	4605      	mov	r5, r0
10016136:	4658      	mov	r0, fp
10016138:	f001 ffaa 	bl	10018090 <_localeconv_r>
1001613c:	6883      	ldr	r3, [r0, #8]
1001613e:	930e      	str	r3, [sp, #56]	@ 0x38
10016140:	2d00      	cmp	r5, #0
10016142:	f040 84e5 	bne.w	10016b10 <_vfiprintf_r+0xba4>
10016146:	7822      	ldrb	r2, [r4, #0]
10016148:	e778      	b.n	1001603c <_vfiprintf_r+0xd0>
1001614a:	9b02      	ldr	r3, [sp, #8]
1001614c:	7822      	ldrb	r2, [r4, #0]
1001614e:	f043 0320 	orr.w	r3, r3, #32
10016152:	9302      	str	r3, [sp, #8]
10016154:	e772      	b.n	1001603c <_vfiprintf_r+0xd0>
10016156:	9d03      	ldr	r5, [sp, #12]
10016158:	4658      	mov	r0, fp
1001615a:	4629      	mov	r1, r5
1001615c:	f001 fd6c 	bl	10017c38 <__swsetup_r>
10016160:	2800      	cmp	r0, #0
10016162:	f040 86a6 	bne.w	10016eb2 <_vfiprintf_r+0xf46>
10016166:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
1001616a:	f002 031a 	and.w	r3, r2, #26
1001616e:	2b0a      	cmp	r3, #10
10016170:	f47f af32 	bne.w	10015fd8 <_vfiprintf_r+0x6c>
10016174:	9903      	ldr	r1, [sp, #12]
10016176:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
1001617a:	2b00      	cmp	r3, #0
1001617c:	f6ff af2c 	blt.w	10015fd8 <_vfiprintf_r+0x6c>
10016180:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10016182:	07db      	lsls	r3, r3, #31
10016184:	d402      	bmi.n	1001618c <_vfiprintf_r+0x220>
10016186:	0597      	lsls	r7, r2, #22
10016188:	f140 865e 	bpl.w	10016e48 <_vfiprintf_r+0xedc>
1001618c:	9a06      	ldr	r2, [sp, #24]
1001618e:	9903      	ldr	r1, [sp, #12]
10016190:	4623      	mov	r3, r4
10016192:	4658      	mov	r0, fp
10016194:	f000 fec0 	bl	10016f18 <__sbprintf>
10016198:	9007      	str	r0, [sp, #28]
1001619a:	9807      	ldr	r0, [sp, #28]
1001619c:	b047      	add	sp, #284	@ 0x11c
1001619e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100161a2:	2208      	movs	r2, #8
100161a4:	2100      	movs	r1, #0
100161a6:	4638      	mov	r0, r7
100161a8:	f001 fee6 	bl	10017f78 <memset>
100161ac:	2301      	movs	r3, #1
100161ae:	441d      	add	r5, r3
100161b0:	e720      	b.n	10015ff4 <_vfiprintf_r+0x88>
100161b2:	9b06      	ldr	r3, [sp, #24]
100161b4:	1aee      	subs	r6, r5, r3
100161b6:	4604      	mov	r4, r0
100161b8:	d012      	beq.n	100161e0 <_vfiprintf_r+0x274>
100161ba:	9b06      	ldr	r3, [sp, #24]
100161bc:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
100161be:	e9c9 3600 	strd	r3, r6, [r9]
100161c2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
100161c4:	3301      	adds	r3, #1
100161c6:	4432      	add	r2, r6
100161c8:	2b07      	cmp	r3, #7
100161ca:	921c      	str	r2, [sp, #112]	@ 0x70
100161cc:	931b      	str	r3, [sp, #108]	@ 0x6c
100161ce:	dc11      	bgt.n	100161f4 <_vfiprintf_r+0x288>
100161d0:	f109 0908 	add.w	r9, r9, #8
100161d4:	9b07      	ldr	r3, [sp, #28]
100161d6:	4433      	add	r3, r6
100161d8:	9307      	str	r3, [sp, #28]
100161da:	2c00      	cmp	r4, #0
100161dc:	f47f af24 	bne.w	10016028 <_vfiprintf_r+0xbc>
100161e0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100161e2:	2b00      	cmp	r3, #0
100161e4:	f040 8650 	bne.w	10016e88 <_vfiprintf_r+0xf1c>
100161e8:	9b03      	ldr	r3, [sp, #12]
100161ea:	2200      	movs	r2, #0
100161ec:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100161f0:	921b      	str	r2, [sp, #108]	@ 0x6c
100161f2:	e01c      	b.n	1001622e <_vfiprintf_r+0x2c2>
100161f4:	2a00      	cmp	r2, #0
100161f6:	f000 842f 	beq.w	10016a58 <_vfiprintf_r+0xaec>
100161fa:	9903      	ldr	r1, [sp, #12]
100161fc:	aa1a      	add	r2, sp, #104	@ 0x68
100161fe:	4658      	mov	r0, fp
10016200:	f7ff fe6e 	bl	10015ee0 <__sprint_r.part.0>
10016204:	b980      	cbnz	r0, 10016228 <_vfiprintf_r+0x2bc>
10016206:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001620a:	e7e3      	b.n	100161d4 <_vfiprintf_r+0x268>
1001620c:	9903      	ldr	r1, [sp, #12]
1001620e:	aa1a      	add	r2, sp, #104	@ 0x68
10016210:	4658      	mov	r0, fp
10016212:	f7ff fe65 	bl	10015ee0 <__sprint_r.part.0>
10016216:	2800      	cmp	r0, #0
10016218:	f000 80a9 	beq.w	1001636e <_vfiprintf_r+0x402>
1001621c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001621e:	b11b      	cbz	r3, 10016228 <_vfiprintf_r+0x2bc>
10016220:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10016222:	4658      	mov	r0, fp
10016224:	f003 fb6c 	bl	10019900 <_free_r>
10016228:	9b03      	ldr	r3, [sp, #12]
1001622a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001622e:	9a03      	ldr	r2, [sp, #12]
10016230:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10016232:	07d1      	lsls	r1, r2, #31
10016234:	f140 80a6 	bpl.w	10016384 <_vfiprintf_r+0x418>
10016238:	065b      	lsls	r3, r3, #25
1001623a:	f100 8646 	bmi.w	10016eca <_vfiprintf_r+0xf5e>
1001623e:	9807      	ldr	r0, [sp, #28]
10016240:	b047      	add	sp, #284	@ 0x11c
10016242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016246:	bf00      	nop
10016248:	2000042c 	.word	0x2000042c
1001624c:	9406      	str	r4, [sp, #24]
1001624e:	2a00      	cmp	r2, #0
10016250:	d0c6      	beq.n	100161e0 <_vfiprintf_r+0x274>
10016252:	2300      	movs	r3, #0
10016254:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10016258:	2301      	movs	r3, #1
1001625a:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
1001625e:	9304      	str	r3, [sp, #16]
10016260:	9309      	str	r3, [sp, #36]	@ 0x24
10016262:	ac2d      	add	r4, sp, #180	@ 0xb4
10016264:	2300      	movs	r3, #0
10016266:	930b      	str	r3, [sp, #44]	@ 0x2c
10016268:	9305      	str	r3, [sp, #20]
1001626a:	9b02      	ldr	r3, [sp, #8]
1001626c:	f013 0302 	ands.w	r3, r3, #2
10016270:	d002      	beq.n	10016278 <_vfiprintf_r+0x30c>
10016272:	9a04      	ldr	r2, [sp, #16]
10016274:	3202      	adds	r2, #2
10016276:	9204      	str	r2, [sp, #16]
10016278:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001627c:	9d02      	ldr	r5, [sp, #8]
1001627e:	1c50      	adds	r0, r2, #1
10016280:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
10016284:	4601      	mov	r1, r0
10016286:	950c      	str	r5, [sp, #48]	@ 0x30
10016288:	d105      	bne.n	10016296 <_vfiprintf_r+0x32a>
1001628a:	9d08      	ldr	r5, [sp, #32]
1001628c:	9e04      	ldr	r6, [sp, #16]
1001628e:	1bad      	subs	r5, r5, r6
10016290:	2d00      	cmp	r5, #0
10016292:	f300 8331 	bgt.w	100168f8 <_vfiprintf_r+0x98c>
10016296:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
1001629a:	b188      	cbz	r0, 100162c0 <_vfiprintf_r+0x354>
1001629c:	2201      	movs	r2, #1
1001629e:	f10c 0c01 	add.w	ip, ip, #1
100162a2:	f8c9 2004 	str.w	r2, [r9, #4]
100162a6:	2907      	cmp	r1, #7
100162a8:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
100162ac:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
100162b0:	f8c9 2000 	str.w	r2, [r9]
100162b4:	f300 82e1 	bgt.w	1001687a <_vfiprintf_r+0x90e>
100162b8:	460a      	mov	r2, r1
100162ba:	f109 0908 	add.w	r9, r9, #8
100162be:	3101      	adds	r1, #1
100162c0:	b1eb      	cbz	r3, 100162fe <_vfiprintf_r+0x392>
100162c2:	ab13      	add	r3, sp, #76	@ 0x4c
100162c4:	f10c 0c02 	add.w	ip, ip, #2
100162c8:	f8c9 3000 	str.w	r3, [r9]
100162cc:	2907      	cmp	r1, #7
100162ce:	f04f 0302 	mov.w	r3, #2
100162d2:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
100162d6:	f8c9 3004 	str.w	r3, [r9, #4]
100162da:	f340 82ec 	ble.w	100168b6 <_vfiprintf_r+0x94a>
100162de:	f1bc 0f00 	cmp.w	ip, #0
100162e2:	f000 83da 	beq.w	10016a9a <_vfiprintf_r+0xb2e>
100162e6:	9903      	ldr	r1, [sp, #12]
100162e8:	aa1a      	add	r2, sp, #104	@ 0x68
100162ea:	4658      	mov	r0, fp
100162ec:	f7ff fdf8 	bl	10015ee0 <__sprint_r.part.0>
100162f0:	2800      	cmp	r0, #0
100162f2:	d193      	bne.n	1001621c <_vfiprintf_r+0x2b0>
100162f4:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
100162f8:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100162fc:	1c51      	adds	r1, r2, #1
100162fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10016300:	2b80      	cmp	r3, #128	@ 0x80
10016302:	f000 8213 	beq.w	1001672c <_vfiprintf_r+0x7c0>
10016306:	9b05      	ldr	r3, [sp, #20]
10016308:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001630a:	1a1d      	subs	r5, r3, r0
1001630c:	2d00      	cmp	r5, #0
1001630e:	f300 8268 	bgt.w	100167e2 <_vfiprintf_r+0x876>
10016312:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10016314:	f8c9 4000 	str.w	r4, [r9]
10016318:	eb02 030c 	add.w	r3, r2, ip
1001631c:	2907      	cmp	r1, #7
1001631e:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
10016322:	f8c9 2004 	str.w	r2, [r9, #4]
10016326:	f340 81fe 	ble.w	10016726 <_vfiprintf_r+0x7ba>
1001632a:	2b00      	cmp	r3, #0
1001632c:	f000 832b 	beq.w	10016986 <_vfiprintf_r+0xa1a>
10016330:	9903      	ldr	r1, [sp, #12]
10016332:	aa1a      	add	r2, sp, #104	@ 0x68
10016334:	4658      	mov	r0, fp
10016336:	f7ff fdd3 	bl	10015ee0 <__sprint_r.part.0>
1001633a:	2800      	cmp	r0, #0
1001633c:	f47f af6e 	bne.w	1001621c <_vfiprintf_r+0x2b0>
10016340:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10016342:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016346:	9a02      	ldr	r2, [sp, #8]
10016348:	0750      	lsls	r0, r2, #29
1001634a:	d505      	bpl.n	10016358 <_vfiprintf_r+0x3ec>
1001634c:	9a08      	ldr	r2, [sp, #32]
1001634e:	9904      	ldr	r1, [sp, #16]
10016350:	1a54      	subs	r4, r2, r1
10016352:	2c00      	cmp	r4, #0
10016354:	f300 8322 	bgt.w	1001699c <_vfiprintf_r+0xa30>
10016358:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
1001635c:	9804      	ldr	r0, [sp, #16]
1001635e:	4281      	cmp	r1, r0
10016360:	bfac      	ite	ge
10016362:	1852      	addge	r2, r2, r1
10016364:	1812      	addlt	r2, r2, r0
10016366:	9207      	str	r2, [sp, #28]
10016368:	2b00      	cmp	r3, #0
1001636a:	f47f af4f 	bne.w	1001620c <_vfiprintf_r+0x2a0>
1001636e:	2300      	movs	r3, #0
10016370:	931b      	str	r3, [sp, #108]	@ 0x6c
10016372:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016374:	b11b      	cbz	r3, 1001637e <_vfiprintf_r+0x412>
10016376:	4619      	mov	r1, r3
10016378:	4658      	mov	r0, fp
1001637a:	f003 fac1 	bl	10019900 <_free_r>
1001637e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016382:	e636      	b.n	10015ff2 <_vfiprintf_r+0x86>
10016384:	059a      	lsls	r2, r3, #22
10016386:	f53f af57 	bmi.w	10016238 <_vfiprintf_r+0x2cc>
1001638a:	9c03      	ldr	r4, [sp, #12]
1001638c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001638e:	f002 f8b5 	bl	100184fc <__retarget_lock_release_recursive>
10016392:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016396:	e74f      	b.n	10016238 <_vfiprintf_r+0x2cc>
10016398:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001639a:	9406      	str	r4, [sp, #24]
1001639c:	f856 4b04 	ldr.w	r4, [r6], #4
100163a0:	2300      	movs	r3, #0
100163a2:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100163a6:	2c00      	cmp	r4, #0
100163a8:	f000 84c9 	beq.w	10016d3e <_vfiprintf_r+0xdd2>
100163ac:	2a53      	cmp	r2, #83	@ 0x53
100163ae:	f000 8421 	beq.w	10016bf4 <_vfiprintf_r+0xc88>
100163b2:	9b02      	ldr	r3, [sp, #8]
100163b4:	f013 0510 	ands.w	r5, r3, #16
100163b8:	f040 841c 	bne.w	10016bf4 <_vfiprintf_r+0xc88>
100163bc:	9b05      	ldr	r3, [sp, #20]
100163be:	1c5a      	adds	r2, r3, #1
100163c0:	f000 854e 	beq.w	10016e60 <_vfiprintf_r+0xef4>
100163c4:	461a      	mov	r2, r3
100163c6:	4629      	mov	r1, r5
100163c8:	4620      	mov	r0, r4
100163ca:	f002 f899 	bl	10018500 <memchr>
100163ce:	900b      	str	r0, [sp, #44]	@ 0x2c
100163d0:	2800      	cmp	r0, #0
100163d2:	f000 853e 	beq.w	10016e52 <_vfiprintf_r+0xee6>
100163d6:	1b03      	subs	r3, r0, r4
100163d8:	9309      	str	r3, [sp, #36]	@ 0x24
100163da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
100163de:	9505      	str	r5, [sp, #20]
100163e0:	960a      	str	r6, [sp, #40]	@ 0x28
100163e2:	9304      	str	r3, [sp, #16]
100163e4:	950b      	str	r5, [sp, #44]	@ 0x2c
100163e6:	e18d      	b.n	10016704 <_vfiprintf_r+0x798>
100163e8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100163ea:	9406      	str	r4, [sp, #24]
100163ec:	2a43      	cmp	r2, #67	@ 0x43
100163ee:	f103 0504 	add.w	r5, r3, #4
100163f2:	d003      	beq.n	100163fc <_vfiprintf_r+0x490>
100163f4:	9b02      	ldr	r3, [sp, #8]
100163f6:	06de      	lsls	r6, r3, #27
100163f8:	f140 83e4 	bpl.w	10016bc4 <_vfiprintf_r+0xc58>
100163fc:	2208      	movs	r2, #8
100163fe:	2100      	movs	r1, #0
10016400:	a818      	add	r0, sp, #96	@ 0x60
10016402:	f001 fdb9 	bl	10017f78 <memset>
10016406:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016408:	ac2d      	add	r4, sp, #180	@ 0xb4
1001640a:	681a      	ldr	r2, [r3, #0]
1001640c:	4621      	mov	r1, r4
1001640e:	ab18      	add	r3, sp, #96	@ 0x60
10016410:	4658      	mov	r0, fp
10016412:	f002 f9e1 	bl	100187d8 <_wcrtomb_r>
10016416:	4603      	mov	r3, r0
10016418:	3301      	adds	r3, #1
1001641a:	9009      	str	r0, [sp, #36]	@ 0x24
1001641c:	f000 8541 	beq.w	10016ea2 <_vfiprintf_r+0xf36>
10016420:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10016422:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10016426:	9304      	str	r3, [sp, #16]
10016428:	2300      	movs	r3, #0
1001642a:	950a      	str	r5, [sp, #40]	@ 0x28
1001642c:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10016430:	e718      	b.n	10016264 <_vfiprintf_r+0x2f8>
10016432:	9b02      	ldr	r3, [sp, #8]
10016434:	9406      	str	r4, [sp, #24]
10016436:	069c      	lsls	r4, r3, #26
10016438:	d56d      	bpl.n	10016516 <_vfiprintf_r+0x5aa>
1001643a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001643c:	3307      	adds	r3, #7
1001643e:	f023 0307 	bic.w	r3, r3, #7
10016442:	4619      	mov	r1, r3
10016444:	685a      	ldr	r2, [r3, #4]
10016446:	f851 3b08 	ldr.w	r3, [r1], #8
1001644a:	910a      	str	r1, [sp, #40]	@ 0x28
1001644c:	4611      	mov	r1, r2
1001644e:	2a00      	cmp	r2, #0
10016450:	f2c0 8137 	blt.w	100166c2 <_vfiprintf_r+0x756>
10016454:	9a05      	ldr	r2, [sp, #20]
10016456:	3201      	adds	r2, #1
10016458:	f000 8140 	beq.w	100166dc <_vfiprintf_r+0x770>
1001645c:	9a02      	ldr	r2, [sp, #8]
1001645e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
10016462:	9202      	str	r2, [sp, #8]
10016464:	ea53 0201 	orrs.w	r2, r3, r1
10016468:	f040 8138 	bne.w	100166dc <_vfiprintf_r+0x770>
1001646c:	9b05      	ldr	r3, [sp, #20]
1001646e:	2b00      	cmp	r3, #0
10016470:	f040 8508 	bne.w	10016e84 <_vfiprintf_r+0xf18>
10016474:	9304      	str	r3, [sp, #16]
10016476:	9309      	str	r3, [sp, #36]	@ 0x24
10016478:	ac46      	add	r4, sp, #280	@ 0x118
1001647a:	e141      	b.n	10016700 <_vfiprintf_r+0x794>
1001647c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001647e:	f853 2b04 	ldr.w	r2, [r3], #4
10016482:	9208      	str	r2, [sp, #32]
10016484:	2a00      	cmp	r2, #0
10016486:	f280 8327 	bge.w	10016ad8 <_vfiprintf_r+0xb6c>
1001648a:	9a08      	ldr	r2, [sp, #32]
1001648c:	930a      	str	r3, [sp, #40]	@ 0x28
1001648e:	4252      	negs	r2, r2
10016490:	9208      	str	r2, [sp, #32]
10016492:	9b02      	ldr	r3, [sp, #8]
10016494:	7822      	ldrb	r2, [r4, #0]
10016496:	f043 0304 	orr.w	r3, r3, #4
1001649a:	9302      	str	r3, [sp, #8]
1001649c:	e5ce      	b.n	1001603c <_vfiprintf_r+0xd0>
1001649e:	9b02      	ldr	r3, [sp, #8]
100164a0:	9406      	str	r4, [sp, #24]
100164a2:	f043 0210 	orr.w	r2, r3, #16
100164a6:	f012 0120 	ands.w	r1, r2, #32
100164aa:	f000 82e7 	beq.w	10016a7c <_vfiprintf_r+0xb10>
100164ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100164b0:	3307      	adds	r3, #7
100164b2:	f023 0307 	bic.w	r3, r3, #7
100164b6:	4618      	mov	r0, r3
100164b8:	6859      	ldr	r1, [r3, #4]
100164ba:	f850 3b08 	ldr.w	r3, [r0], #8
100164be:	900a      	str	r0, [sp, #40]	@ 0x28
100164c0:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
100164c4:	9402      	str	r4, [sp, #8]
100164c6:	9c05      	ldr	r4, [sp, #20]
100164c8:	2000      	movs	r0, #0
100164ca:	3401      	adds	r4, #1
100164cc:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
100164d0:	d05d      	beq.n	1001658e <_vfiprintf_r+0x622>
100164d2:	ea53 0401 	orrs.w	r4, r3, r1
100164d6:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
100164da:	f040 8414 	bne.w	10016d06 <_vfiprintf_r+0xd9a>
100164de:	9c02      	ldr	r4, [sp, #8]
100164e0:	9202      	str	r2, [sp, #8]
100164e2:	9b05      	ldr	r3, [sp, #20]
100164e4:	2b00      	cmp	r3, #0
100164e6:	d14a      	bne.n	1001657e <_vfiprintf_r+0x612>
100164e8:	2800      	cmp	r0, #0
100164ea:	f040 82f0 	bne.w	10016ace <_vfiprintf_r+0xb62>
100164ee:	f014 0201 	ands.w	r2, r4, #1
100164f2:	9209      	str	r2, [sp, #36]	@ 0x24
100164f4:	f000 82f4 	beq.w	10016ae0 <_vfiprintf_r+0xb74>
100164f8:	2330      	movs	r3, #48	@ 0x30
100164fa:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
100164fe:	9204      	str	r2, [sp, #16]
10016500:	f20d 1417 	addw	r4, sp, #279	@ 0x117
10016504:	e0fc      	b.n	10016700 <_vfiprintf_r+0x794>
10016506:	9b02      	ldr	r3, [sp, #8]
10016508:	9406      	str	r4, [sp, #24]
1001650a:	f043 0310 	orr.w	r3, r3, #16
1001650e:	9302      	str	r3, [sp, #8]
10016510:	9b02      	ldr	r3, [sp, #8]
10016512:	069c      	lsls	r4, r3, #26
10016514:	d491      	bmi.n	1001643a <_vfiprintf_r+0x4ce>
10016516:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016518:	f852 3b04 	ldr.w	r3, [r2], #4
1001651c:	920a      	str	r2, [sp, #40]	@ 0x28
1001651e:	9a02      	ldr	r2, [sp, #8]
10016520:	06d0      	lsls	r0, r2, #27
10016522:	f100 82f2 	bmi.w	10016b0a <_vfiprintf_r+0xb9e>
10016526:	9a02      	ldr	r2, [sp, #8]
10016528:	0651      	lsls	r1, r2, #25
1001652a:	f140 82ea 	bpl.w	10016b02 <_vfiprintf_r+0xb96>
1001652e:	f343 31c0 	sbfx	r1, r3, #15, #1
10016532:	460a      	mov	r2, r1
10016534:	b21b      	sxth	r3, r3
10016536:	e78a      	b.n	1001644e <_vfiprintf_r+0x4e2>
10016538:	9b02      	ldr	r3, [sp, #8]
1001653a:	9406      	str	r4, [sp, #24]
1001653c:	f043 0410 	orr.w	r4, r3, #16
10016540:	f014 0120 	ands.w	r1, r4, #32
10016544:	f000 828b 	beq.w	10016a5e <_vfiprintf_r+0xaf2>
10016548:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001654a:	3307      	adds	r3, #7
1001654c:	f023 0307 	bic.w	r3, r3, #7
10016550:	461a      	mov	r2, r3
10016552:	6859      	ldr	r1, [r3, #4]
10016554:	f852 3b08 	ldr.w	r3, [r2], #8
10016558:	920a      	str	r2, [sp, #40]	@ 0x28
1001655a:	2200      	movs	r2, #0
1001655c:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
10016560:	9a05      	ldr	r2, [sp, #20]
10016562:	3201      	adds	r2, #1
10016564:	f000 83d1 	beq.w	10016d0a <_vfiprintf_r+0xd9e>
10016568:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
1001656c:	9202      	str	r2, [sp, #8]
1001656e:	ea53 0201 	orrs.w	r2, r3, r1
10016572:	f040 80b3 	bne.w	100166dc <_vfiprintf_r+0x770>
10016576:	9b05      	ldr	r3, [sp, #20]
10016578:	2001      	movs	r0, #1
1001657a:	2b00      	cmp	r3, #0
1001657c:	d0b4      	beq.n	100164e8 <_vfiprintf_r+0x57c>
1001657e:	2801      	cmp	r0, #1
10016580:	f000 8480 	beq.w	10016e84 <_vfiprintf_r+0xf18>
10016584:	2300      	movs	r3, #0
10016586:	2802      	cmp	r0, #2
10016588:	4619      	mov	r1, r3
1001658a:	f000 8199 	beq.w	100168c0 <_vfiprintf_r+0x954>
1001658e:	ac46      	add	r4, sp, #280	@ 0x118
10016590:	f003 0207 	and.w	r2, r3, #7
10016594:	08db      	lsrs	r3, r3, #3
10016596:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
1001659a:	08c9      	lsrs	r1, r1, #3
1001659c:	3230      	adds	r2, #48	@ 0x30
1001659e:	ea53 0501 	orrs.w	r5, r3, r1
100165a2:	4620      	mov	r0, r4
100165a4:	f804 2d01 	strb.w	r2, [r4, #-1]!
100165a8:	d1f2      	bne.n	10016590 <_vfiprintf_r+0x624>
100165aa:	9b02      	ldr	r3, [sp, #8]
100165ac:	07dd      	lsls	r5, r3, #31
100165ae:	f140 8195 	bpl.w	100168dc <_vfiprintf_r+0x970>
100165b2:	2a30      	cmp	r2, #48	@ 0x30
100165b4:	f000 8192 	beq.w	100168dc <_vfiprintf_r+0x970>
100165b8:	2330      	movs	r3, #48	@ 0x30
100165ba:	9a05      	ldr	r2, [sp, #20]
100165bc:	f804 3c01 	strb.w	r3, [r4, #-1]
100165c0:	3802      	subs	r0, #2
100165c2:	ab46      	add	r3, sp, #280	@ 0x118
100165c4:	1a1b      	subs	r3, r3, r0
100165c6:	429a      	cmp	r2, r3
100165c8:	bfb8      	it	lt
100165ca:	461a      	movlt	r2, r3
100165cc:	9309      	str	r3, [sp, #36]	@ 0x24
100165ce:	4604      	mov	r4, r0
100165d0:	9204      	str	r2, [sp, #16]
100165d2:	e095      	b.n	10016700 <_vfiprintf_r+0x794>
100165d4:	7822      	ldrb	r2, [r4, #0]
100165d6:	9b02      	ldr	r3, [sp, #8]
100165d8:	2a68      	cmp	r2, #104	@ 0x68
100165da:	f000 839d 	beq.w	10016d18 <_vfiprintf_r+0xdac>
100165de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100165e2:	9302      	str	r3, [sp, #8]
100165e4:	e52a      	b.n	1001603c <_vfiprintf_r+0xd0>
100165e6:	9b02      	ldr	r3, [sp, #8]
100165e8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100165ea:	9406      	str	r4, [sp, #24]
100165ec:	f043 0302 	orr.w	r3, r3, #2
100165f0:	9302      	str	r3, [sp, #8]
100165f2:	f852 3b04 	ldr.w	r3, [r2], #4
100165f6:	920a      	str	r2, [sp, #40]	@ 0x28
100165f8:	f647 0230 	movw	r2, #30768	@ 0x7830
100165fc:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
10016600:	4abb      	ldr	r2, [pc, #748]	@ (100168f0 <_vfiprintf_r+0x984>)
10016602:	920d      	str	r2, [sp, #52]	@ 0x34
10016604:	2100      	movs	r1, #0
10016606:	2200      	movs	r2, #0
10016608:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001660c:	9a05      	ldr	r2, [sp, #20]
1001660e:	3201      	adds	r2, #1
10016610:	f000 8156 	beq.w	100168c0 <_vfiprintf_r+0x954>
10016614:	9c02      	ldr	r4, [sp, #8]
10016616:	ea53 0001 	orrs.w	r0, r3, r1
1001661a:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
1001661e:	9202      	str	r2, [sp, #8]
10016620:	f040 814e 	bne.w	100168c0 <_vfiprintf_r+0x954>
10016624:	2002      	movs	r0, #2
10016626:	e75c      	b.n	100164e2 <_vfiprintf_r+0x576>
10016628:	9b02      	ldr	r3, [sp, #8]
1001662a:	9406      	str	r4, [sp, #24]
1001662c:	069e      	lsls	r6, r3, #26
1001662e:	f140 827e 	bpl.w	10016b2e <_vfiprintf_r+0xbc2>
10016632:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016634:	9a07      	ldr	r2, [sp, #28]
10016636:	681b      	ldr	r3, [r3, #0]
10016638:	601a      	str	r2, [r3, #0]
1001663a:	17d2      	asrs	r2, r2, #31
1001663c:	605a      	str	r2, [r3, #4]
1001663e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016640:	3304      	adds	r3, #4
10016642:	930a      	str	r3, [sp, #40]	@ 0x28
10016644:	e4d5      	b.n	10015ff2 <_vfiprintf_r+0x86>
10016646:	9b02      	ldr	r3, [sp, #8]
10016648:	7822      	ldrb	r2, [r4, #0]
1001664a:	f043 0301 	orr.w	r3, r3, #1
1001664e:	9302      	str	r3, [sp, #8]
10016650:	e4f4      	b.n	1001603c <_vfiprintf_r+0xd0>
10016652:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
10016656:	7822      	ldrb	r2, [r4, #0]
10016658:	2b00      	cmp	r3, #0
1001665a:	f47f acef 	bne.w	1001603c <_vfiprintf_r+0xd0>
1001665e:	2320      	movs	r3, #32
10016660:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10016664:	e4ea      	b.n	1001603c <_vfiprintf_r+0xd0>
10016666:	9b02      	ldr	r3, [sp, #8]
10016668:	7822      	ldrb	r2, [r4, #0]
1001666a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1001666e:	9302      	str	r3, [sp, #8]
10016670:	e4e4      	b.n	1001603c <_vfiprintf_r+0xd0>
10016672:	4621      	mov	r1, r4
10016674:	f811 2b01 	ldrb.w	r2, [r1], #1
10016678:	2a2a      	cmp	r2, #42	@ 0x2a
1001667a:	f000 8433 	beq.w	10016ee4 <_vfiprintf_r+0xf78>
1001667e:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10016682:	2b09      	cmp	r3, #9
10016684:	460c      	mov	r4, r1
10016686:	f200 83f6 	bhi.w	10016e76 <_vfiprintf_r+0xf0a>
1001668a:	2200      	movs	r2, #0
1001668c:	4611      	mov	r1, r2
1001668e:	f814 2b01 	ldrb.w	r2, [r4], #1
10016692:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10016696:	eb03 0141 	add.w	r1, r3, r1, lsl #1
1001669a:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001669e:	2b09      	cmp	r3, #9
100166a0:	d9f5      	bls.n	1001668e <_vfiprintf_r+0x722>
100166a2:	9105      	str	r1, [sp, #20]
100166a4:	e4cb      	b.n	1001603e <_vfiprintf_r+0xd2>
100166a6:	232b      	movs	r3, #43	@ 0x2b
100166a8:	7822      	ldrb	r2, [r4, #0]
100166aa:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100166ae:	e4c5      	b.n	1001603c <_vfiprintf_r+0xd0>
100166b0:	7822      	ldrb	r2, [r4, #0]
100166b2:	9b02      	ldr	r3, [sp, #8]
100166b4:	2a6c      	cmp	r2, #108	@ 0x6c
100166b6:	f000 8336 	beq.w	10016d26 <_vfiprintf_r+0xdba>
100166ba:	f043 0310 	orr.w	r3, r3, #16
100166be:	9302      	str	r3, [sp, #8]
100166c0:	e4bc      	b.n	1001603c <_vfiprintf_r+0xd0>
100166c2:	222d      	movs	r2, #45	@ 0x2d
100166c4:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
100166c8:	9a05      	ldr	r2, [sp, #20]
100166ca:	425b      	negs	r3, r3
100166cc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
100166d0:	3201      	adds	r2, #1
100166d2:	d003      	beq.n	100166dc <_vfiprintf_r+0x770>
100166d4:	9a02      	ldr	r2, [sp, #8]
100166d6:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
100166da:	9202      	str	r2, [sp, #8]
100166dc:	2b0a      	cmp	r3, #10
100166de:	f171 0200 	sbcs.w	r2, r1, #0
100166e2:	f080 82bd 	bcs.w	10016c60 <_vfiprintf_r+0xcf4>
100166e6:	3330      	adds	r3, #48	@ 0x30
100166e8:	b2db      	uxtb	r3, r3
100166ea:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
100166ee:	9b05      	ldr	r3, [sp, #20]
100166f0:	2b01      	cmp	r3, #1
100166f2:	bfb8      	it	lt
100166f4:	2301      	movlt	r3, #1
100166f6:	9304      	str	r3, [sp, #16]
100166f8:	2301      	movs	r3, #1
100166fa:	9309      	str	r3, [sp, #36]	@ 0x24
100166fc:	f20d 1417 	addw	r4, sp, #279	@ 0x117
10016700:	2300      	movs	r3, #0
10016702:	930b      	str	r3, [sp, #44]	@ 0x2c
10016704:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
10016708:	2b00      	cmp	r3, #0
1001670a:	f43f adae 	beq.w	1001626a <_vfiprintf_r+0x2fe>
1001670e:	9b04      	ldr	r3, [sp, #16]
10016710:	3301      	adds	r3, #1
10016712:	9304      	str	r3, [sp, #16]
10016714:	e5a9      	b.n	1001626a <_vfiprintf_r+0x2fe>
10016716:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10016718:	941d      	str	r4, [sp, #116]	@ 0x74
1001671a:	2201      	movs	r2, #1
1001671c:	931e      	str	r3, [sp, #120]	@ 0x78
1001671e:	931c      	str	r3, [sp, #112]	@ 0x70
10016720:	921b      	str	r2, [sp, #108]	@ 0x6c
10016722:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016726:	f109 0908 	add.w	r9, r9, #8
1001672a:	e60c      	b.n	10016346 <_vfiprintf_r+0x3da>
1001672c:	9b08      	ldr	r3, [sp, #32]
1001672e:	9804      	ldr	r0, [sp, #16]
10016730:	1a1d      	subs	r5, r3, r0
10016732:	2d00      	cmp	r5, #0
10016734:	f77f ade7 	ble.w	10016306 <_vfiprintf_r+0x39a>
10016738:	2d10      	cmp	r5, #16
1001673a:	f340 83cb 	ble.w	10016ed4 <_vfiprintf_r+0xf68>
1001673e:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 100168f4 <_vfiprintf_r+0x988>
10016742:	4643      	mov	r3, r8
10016744:	2610      	movs	r6, #16
10016746:	46a0      	mov	r8, r4
10016748:	4661      	mov	r1, ip
1001674a:	461c      	mov	r4, r3
1001674c:	e007      	b.n	1001675e <_vfiprintf_r+0x7f2>
1001674e:	f102 0c02 	add.w	ip, r2, #2
10016752:	f109 0908 	add.w	r9, r9, #8
10016756:	4602      	mov	r2, r0
10016758:	3d10      	subs	r5, #16
1001675a:	2d10      	cmp	r5, #16
1001675c:	dd1a      	ble.n	10016794 <_vfiprintf_r+0x828>
1001675e:	1c50      	adds	r0, r2, #1
10016760:	3110      	adds	r1, #16
10016762:	2807      	cmp	r0, #7
10016764:	e9c9 4600 	strd	r4, r6, [r9]
10016768:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
1001676c:	ddef      	ble.n	1001674e <_vfiprintf_r+0x7e2>
1001676e:	aa1a      	add	r2, sp, #104	@ 0x68
10016770:	2900      	cmp	r1, #0
10016772:	d07c      	beq.n	1001686e <_vfiprintf_r+0x902>
10016774:	9903      	ldr	r1, [sp, #12]
10016776:	4658      	mov	r0, fp
10016778:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001677c:	f7ff fbb0 	bl	10015ee0 <__sprint_r.part.0>
10016780:	2800      	cmp	r0, #0
10016782:	f47f ad4b 	bne.w	1001621c <_vfiprintf_r+0x2b0>
10016786:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
1001678a:	3d10      	subs	r5, #16
1001678c:	2d10      	cmp	r5, #16
1001678e:	f102 0c01 	add.w	ip, r2, #1
10016792:	dce4      	bgt.n	1001675e <_vfiprintf_r+0x7f2>
10016794:	4623      	mov	r3, r4
10016796:	4660      	mov	r0, ip
10016798:	4644      	mov	r4, r8
1001679a:	468c      	mov	ip, r1
1001679c:	4698      	mov	r8, r3
1001679e:	44ac      	add	ip, r5
100167a0:	2807      	cmp	r0, #7
100167a2:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
100167a6:	f8c9 8000 	str.w	r8, [r9]
100167aa:	f8c9 5004 	str.w	r5, [r9, #4]
100167ae:	f340 81a3 	ble.w	10016af8 <_vfiprintf_r+0xb8c>
100167b2:	f1bc 0f00 	cmp.w	ip, #0
100167b6:	f000 8327 	beq.w	10016e08 <_vfiprintf_r+0xe9c>
100167ba:	9903      	ldr	r1, [sp, #12]
100167bc:	aa1a      	add	r2, sp, #104	@ 0x68
100167be:	4658      	mov	r0, fp
100167c0:	f7ff fb8e 	bl	10015ee0 <__sprint_r.part.0>
100167c4:	2800      	cmp	r0, #0
100167c6:	f47f ad29 	bne.w	1001621c <_vfiprintf_r+0x2b0>
100167ca:	9b05      	ldr	r3, [sp, #20]
100167cc:	9809      	ldr	r0, [sp, #36]	@ 0x24
100167ce:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
100167d2:	1a1d      	subs	r5, r3, r0
100167d4:	2d00      	cmp	r5, #0
100167d6:	f102 0101 	add.w	r1, r2, #1
100167da:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100167de:	f77f ad98 	ble.w	10016312 <_vfiprintf_r+0x3a6>
100167e2:	2d10      	cmp	r5, #16
100167e4:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 100168f4 <_vfiprintf_r+0x988>
100167e8:	dd2d      	ble.n	10016846 <_vfiprintf_r+0x8da>
100167ea:	462b      	mov	r3, r5
100167ec:	2610      	movs	r6, #16
100167ee:	4625      	mov	r5, r4
100167f0:	4660      	mov	r0, ip
100167f2:	461c      	mov	r4, r3
100167f4:	e007      	b.n	10016806 <_vfiprintf_r+0x89a>
100167f6:	f102 0c02 	add.w	ip, r2, #2
100167fa:	f109 0908 	add.w	r9, r9, #8
100167fe:	460a      	mov	r2, r1
10016800:	3c10      	subs	r4, #16
10016802:	2c10      	cmp	r4, #16
10016804:	dd1a      	ble.n	1001683c <_vfiprintf_r+0x8d0>
10016806:	1c51      	adds	r1, r2, #1
10016808:	4b3a      	ldr	r3, [pc, #232]	@ (100168f4 <_vfiprintf_r+0x988>)
1001680a:	3010      	adds	r0, #16
1001680c:	2907      	cmp	r1, #7
1001680e:	e9c9 3600 	strd	r3, r6, [r9]
10016812:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
10016816:	ddee      	ble.n	100167f6 <_vfiprintf_r+0x88a>
10016818:	aa1a      	add	r2, sp, #104	@ 0x68
1001681a:	b310      	cbz	r0, 10016862 <_vfiprintf_r+0x8f6>
1001681c:	9903      	ldr	r1, [sp, #12]
1001681e:	4658      	mov	r0, fp
10016820:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016824:	f7ff fb5c 	bl	10015ee0 <__sprint_r.part.0>
10016828:	2800      	cmp	r0, #0
1001682a:	f47f acf7 	bne.w	1001621c <_vfiprintf_r+0x2b0>
1001682e:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
10016832:	3c10      	subs	r4, #16
10016834:	2c10      	cmp	r4, #16
10016836:	f102 0c01 	add.w	ip, r2, #1
1001683a:	dce4      	bgt.n	10016806 <_vfiprintf_r+0x89a>
1001683c:	4623      	mov	r3, r4
1001683e:	4661      	mov	r1, ip
10016840:	462c      	mov	r4, r5
10016842:	4684      	mov	ip, r0
10016844:	461d      	mov	r5, r3
10016846:	44ac      	add	ip, r5
10016848:	2907      	cmp	r1, #7
1001684a:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001684e:	f8c9 8000 	str.w	r8, [r9]
10016852:	f8c9 5004 	str.w	r5, [r9, #4]
10016856:	f300 80ec 	bgt.w	10016a32 <_vfiprintf_r+0xac6>
1001685a:	f109 0908 	add.w	r9, r9, #8
1001685e:	3101      	adds	r1, #1
10016860:	e557      	b.n	10016312 <_vfiprintf_r+0x3a6>
10016862:	f04f 0c01 	mov.w	ip, #1
10016866:	4602      	mov	r2, r0
10016868:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001686c:	e7c8      	b.n	10016800 <_vfiprintf_r+0x894>
1001686e:	f04f 0c01 	mov.w	ip, #1
10016872:	460a      	mov	r2, r1
10016874:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016878:	e76e      	b.n	10016758 <_vfiprintf_r+0x7ec>
1001687a:	f1bc 0f00 	cmp.w	ip, #0
1001687e:	d00f      	beq.n	100168a0 <_vfiprintf_r+0x934>
10016880:	9903      	ldr	r1, [sp, #12]
10016882:	9311      	str	r3, [sp, #68]	@ 0x44
10016884:	aa1a      	add	r2, sp, #104	@ 0x68
10016886:	4658      	mov	r0, fp
10016888:	f7ff fb2a 	bl	10015ee0 <__sprint_r.part.0>
1001688c:	2800      	cmp	r0, #0
1001688e:	f47f acc5 	bne.w	1001621c <_vfiprintf_r+0x2b0>
10016892:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10016896:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10016898:	1c51      	adds	r1, r2, #1
1001689a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001689e:	e50f      	b.n	100162c0 <_vfiprintf_r+0x354>
100168a0:	2b00      	cmp	r3, #0
100168a2:	f000 8155 	beq.w	10016b50 <_vfiprintf_r+0xbe4>
100168a6:	2302      	movs	r3, #2
100168a8:	931e      	str	r3, [sp, #120]	@ 0x78
100168aa:	469c      	mov	ip, r3
100168ac:	ab13      	add	r3, sp, #76	@ 0x4c
100168ae:	931d      	str	r3, [sp, #116]	@ 0x74
100168b0:	2101      	movs	r1, #1
100168b2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100168b6:	460a      	mov	r2, r1
100168b8:	f109 0908 	add.w	r9, r9, #8
100168bc:	3101      	adds	r1, #1
100168be:	e51e      	b.n	100162fe <_vfiprintf_r+0x392>
100168c0:	980d      	ldr	r0, [sp, #52]	@ 0x34
100168c2:	ac46      	add	r4, sp, #280	@ 0x118
100168c4:	f003 020f 	and.w	r2, r3, #15
100168c8:	091b      	lsrs	r3, r3, #4
100168ca:	5c82      	ldrb	r2, [r0, r2]
100168cc:	f804 2d01 	strb.w	r2, [r4, #-1]!
100168d0:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
100168d4:	0909      	lsrs	r1, r1, #4
100168d6:	ea53 0201 	orrs.w	r2, r3, r1
100168da:	d1f3      	bne.n	100168c4 <_vfiprintf_r+0x958>
100168dc:	9a05      	ldr	r2, [sp, #20]
100168de:	ab46      	add	r3, sp, #280	@ 0x118
100168e0:	1b1b      	subs	r3, r3, r4
100168e2:	429a      	cmp	r2, r3
100168e4:	bfb8      	it	lt
100168e6:	461a      	movlt	r2, r3
100168e8:	9309      	str	r3, [sp, #36]	@ 0x24
100168ea:	9204      	str	r2, [sp, #16]
100168ec:	e708      	b.n	10016700 <_vfiprintf_r+0x794>
100168ee:	bf00      	nop
100168f0:	10023ab4 	.word	0x10023ab4
100168f4:	10023b08 	.word	0x10023b08
100168f8:	2d10      	cmp	r5, #16
100168fa:	f340 82c0 	ble.w	10016e7e <_vfiprintf_r+0xf12>
100168fe:	4eae      	ldr	r6, [pc, #696]	@ (10016bb8 <_vfiprintf_r+0xc4c>)
10016900:	9311      	str	r3, [sp, #68]	@ 0x44
10016902:	4649      	mov	r1, r9
10016904:	f04f 0810 	mov.w	r8, #16
10016908:	46a1      	mov	r9, r4
1001690a:	4634      	mov	r4, r6
1001690c:	4666      	mov	r6, ip
1001690e:	e007      	b.n	10016920 <_vfiprintf_r+0x9b4>
10016910:	f102 0e02 	add.w	lr, r2, #2
10016914:	3108      	adds	r1, #8
10016916:	4602      	mov	r2, r0
10016918:	3d10      	subs	r5, #16
1001691a:	2d10      	cmp	r5, #16
1001691c:	dd18      	ble.n	10016950 <_vfiprintf_r+0x9e4>
1001691e:	1c50      	adds	r0, r2, #1
10016920:	3610      	adds	r6, #16
10016922:	2807      	cmp	r0, #7
10016924:	e9c1 4800 	strd	r4, r8, [r1]
10016928:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
1001692c:	ddf0      	ble.n	10016910 <_vfiprintf_r+0x9a4>
1001692e:	9903      	ldr	r1, [sp, #12]
10016930:	aa1a      	add	r2, sp, #104	@ 0x68
10016932:	4658      	mov	r0, fp
10016934:	b316      	cbz	r6, 1001697c <_vfiprintf_r+0xa10>
10016936:	f7ff fad3 	bl	10015ee0 <__sprint_r.part.0>
1001693a:	2800      	cmp	r0, #0
1001693c:	f47f ac6e 	bne.w	1001621c <_vfiprintf_r+0x2b0>
10016940:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
10016944:	3d10      	subs	r5, #16
10016946:	2d10      	cmp	r5, #16
10016948:	f102 0e01 	add.w	lr, r2, #1
1001694c:	a91d      	add	r1, sp, #116	@ 0x74
1001694e:	dce6      	bgt.n	1001691e <_vfiprintf_r+0x9b2>
10016950:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10016952:	46b4      	mov	ip, r6
10016954:	4626      	mov	r6, r4
10016956:	464c      	mov	r4, r9
10016958:	4689      	mov	r9, r1
1001695a:	44ac      	add	ip, r5
1001695c:	f1be 0f07 	cmp.w	lr, #7
10016960:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
10016964:	f8c9 6000 	str.w	r6, [r9]
10016968:	f8c9 5004 	str.w	r5, [r9, #4]
1001696c:	f300 809a 	bgt.w	10016aa4 <_vfiprintf_r+0xb38>
10016970:	f109 0908 	add.w	r9, r9, #8
10016974:	f10e 0101 	add.w	r1, lr, #1
10016978:	4672      	mov	r2, lr
1001697a:	e48c      	b.n	10016296 <_vfiprintf_r+0x32a>
1001697c:	4632      	mov	r2, r6
1001697e:	f04f 0e01 	mov.w	lr, #1
10016982:	a91d      	add	r1, sp, #116	@ 0x74
10016984:	e7c8      	b.n	10016918 <_vfiprintf_r+0x9ac>
10016986:	9a02      	ldr	r2, [sp, #8]
10016988:	931b      	str	r3, [sp, #108]	@ 0x6c
1001698a:	0754      	lsls	r4, r2, #29
1001698c:	d548      	bpl.n	10016a20 <_vfiprintf_r+0xab4>
1001698e:	9a08      	ldr	r2, [sp, #32]
10016990:	9904      	ldr	r1, [sp, #16]
10016992:	1a54      	subs	r4, r2, r1
10016994:	2c00      	cmp	r4, #0
10016996:	dd43      	ble.n	10016a20 <_vfiprintf_r+0xab4>
10016998:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001699c:	2c10      	cmp	r4, #16
1001699e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
100169a0:	f340 827c 	ble.w	10016e9c <_vfiprintf_r+0xf30>
100169a4:	4e84      	ldr	r6, [pc, #528]	@ (10016bb8 <_vfiprintf_r+0xc4c>)
100169a6:	f8dd 800c 	ldr.w	r8, [sp, #12]
100169aa:	2510      	movs	r5, #16
100169ac:	e006      	b.n	100169bc <_vfiprintf_r+0xa50>
100169ae:	1c88      	adds	r0, r1, #2
100169b0:	f109 0908 	add.w	r9, r9, #8
100169b4:	4611      	mov	r1, r2
100169b6:	3c10      	subs	r4, #16
100169b8:	2c10      	cmp	r4, #16
100169ba:	dd19      	ble.n	100169f0 <_vfiprintf_r+0xa84>
100169bc:	1c4a      	adds	r2, r1, #1
100169be:	3310      	adds	r3, #16
100169c0:	2a07      	cmp	r2, #7
100169c2:	e9c9 6500 	strd	r6, r5, [r9]
100169c6:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
100169ca:	ddf0      	ble.n	100169ae <_vfiprintf_r+0xa42>
100169cc:	aa1a      	add	r2, sp, #104	@ 0x68
100169ce:	b313      	cbz	r3, 10016a16 <_vfiprintf_r+0xaaa>
100169d0:	4641      	mov	r1, r8
100169d2:	4658      	mov	r0, fp
100169d4:	f7ff fa84 	bl	10015ee0 <__sprint_r.part.0>
100169d8:	2800      	cmp	r0, #0
100169da:	f47f ac1f 	bne.w	1001621c <_vfiprintf_r+0x2b0>
100169de:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
100169e2:	3c10      	subs	r4, #16
100169e4:	2c10      	cmp	r4, #16
100169e6:	f101 0001 	add.w	r0, r1, #1
100169ea:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100169ee:	dce5      	bgt.n	100169bc <_vfiprintf_r+0xa50>
100169f0:	4423      	add	r3, r4
100169f2:	2807      	cmp	r0, #7
100169f4:	e9c9 6400 	strd	r6, r4, [r9]
100169f8:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
100169fc:	f77f acac 	ble.w	10016358 <_vfiprintf_r+0x3ec>
10016a00:	b173      	cbz	r3, 10016a20 <_vfiprintf_r+0xab4>
10016a02:	9903      	ldr	r1, [sp, #12]
10016a04:	aa1a      	add	r2, sp, #104	@ 0x68
10016a06:	4658      	mov	r0, fp
10016a08:	f7ff fa6a 	bl	10015ee0 <__sprint_r.part.0>
10016a0c:	2800      	cmp	r0, #0
10016a0e:	f47f ac05 	bne.w	1001621c <_vfiprintf_r+0x2b0>
10016a12:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10016a14:	e4a0      	b.n	10016358 <_vfiprintf_r+0x3ec>
10016a16:	2001      	movs	r0, #1
10016a18:	4619      	mov	r1, r3
10016a1a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016a1e:	e7ca      	b.n	100169b6 <_vfiprintf_r+0xa4a>
10016a20:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
10016a24:	9904      	ldr	r1, [sp, #16]
10016a26:	428a      	cmp	r2, r1
10016a28:	bfac      	ite	ge
10016a2a:	189b      	addge	r3, r3, r2
10016a2c:	185b      	addlt	r3, r3, r1
10016a2e:	9307      	str	r3, [sp, #28]
10016a30:	e49d      	b.n	1001636e <_vfiprintf_r+0x402>
10016a32:	f1bc 0f00 	cmp.w	ip, #0
10016a36:	f43f ae6e 	beq.w	10016716 <_vfiprintf_r+0x7aa>
10016a3a:	9903      	ldr	r1, [sp, #12]
10016a3c:	aa1a      	add	r2, sp, #104	@ 0x68
10016a3e:	4658      	mov	r0, fp
10016a40:	f7ff fa4e 	bl	10015ee0 <__sprint_r.part.0>
10016a44:	2800      	cmp	r0, #0
10016a46:	f47f abe9 	bne.w	1001621c <_vfiprintf_r+0x2b0>
10016a4a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10016a4c:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
10016a50:	3101      	adds	r1, #1
10016a52:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016a56:	e45c      	b.n	10016312 <_vfiprintf_r+0x3a6>
10016a58:	921b      	str	r2, [sp, #108]	@ 0x6c
10016a5a:	f7ff bbd4 	b.w	10016206 <_vfiprintf_r+0x29a>
10016a5e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016a60:	f852 3b04 	ldr.w	r3, [r2], #4
10016a64:	920a      	str	r2, [sp, #40]	@ 0x28
10016a66:	f014 0210 	ands.w	r2, r4, #16
10016a6a:	f47f ad76 	bne.w	1001655a <_vfiprintf_r+0x5ee>
10016a6e:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10016a72:	f000 816e 	beq.w	10016d52 <_vfiprintf_r+0xde6>
10016a76:	b29b      	uxth	r3, r3
10016a78:	4611      	mov	r1, r2
10016a7a:	e56e      	b.n	1001655a <_vfiprintf_r+0x5ee>
10016a7c:	980a      	ldr	r0, [sp, #40]	@ 0x28
10016a7e:	f850 3b04 	ldr.w	r3, [r0], #4
10016a82:	900a      	str	r0, [sp, #40]	@ 0x28
10016a84:	f012 0010 	ands.w	r0, r2, #16
10016a88:	f47f ad1a 	bne.w	100164c0 <_vfiprintf_r+0x554>
10016a8c:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
10016a90:	f000 8167 	beq.w	10016d62 <_vfiprintf_r+0xdf6>
10016a94:	b29b      	uxth	r3, r3
10016a96:	4601      	mov	r1, r0
10016a98:	e512      	b.n	100164c0 <_vfiprintf_r+0x554>
10016a9a:	2101      	movs	r1, #1
10016a9c:	4662      	mov	r2, ip
10016a9e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016aa2:	e42c      	b.n	100162fe <_vfiprintf_r+0x392>
10016aa4:	f1bc 0f00 	cmp.w	ip, #0
10016aa8:	f000 8095 	beq.w	10016bd6 <_vfiprintf_r+0xc6a>
10016aac:	9903      	ldr	r1, [sp, #12]
10016aae:	9311      	str	r3, [sp, #68]	@ 0x44
10016ab0:	aa1a      	add	r2, sp, #104	@ 0x68
10016ab2:	4658      	mov	r0, fp
10016ab4:	f7ff fa14 	bl	10015ee0 <__sprint_r.part.0>
10016ab8:	2800      	cmp	r0, #0
10016aba:	f47f abaf 	bne.w	1001621c <_vfiprintf_r+0x2b0>
10016abe:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10016ac2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10016ac4:	1c51      	adds	r1, r2, #1
10016ac6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016aca:	f7ff bbe4 	b.w	10016296 <_vfiprintf_r+0x32a>
10016ace:	9b05      	ldr	r3, [sp, #20]
10016ad0:	9304      	str	r3, [sp, #16]
10016ad2:	9309      	str	r3, [sp, #36]	@ 0x24
10016ad4:	ac46      	add	r4, sp, #280	@ 0x118
10016ad6:	e613      	b.n	10016700 <_vfiprintf_r+0x794>
10016ad8:	7822      	ldrb	r2, [r4, #0]
10016ada:	930a      	str	r3, [sp, #40]	@ 0x28
10016adc:	f7ff baae 	b.w	1001603c <_vfiprintf_r+0xd0>
10016ae0:	9b05      	ldr	r3, [sp, #20]
10016ae2:	9304      	str	r3, [sp, #16]
10016ae4:	ac46      	add	r4, sp, #280	@ 0x118
10016ae6:	e60b      	b.n	10016700 <_vfiprintf_r+0x794>
10016ae8:	9d03      	ldr	r5, [sp, #12]
10016aea:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10016aec:	f001 fd04 	bl	100184f8 <__retarget_lock_acquire_recursive>
10016af0:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
10016af4:	f7ff ba59 	b.w	10015faa <_vfiprintf_r+0x3e>
10016af8:	f109 0908 	add.w	r9, r9, #8
10016afc:	1c41      	adds	r1, r0, #1
10016afe:	4602      	mov	r2, r0
10016b00:	e401      	b.n	10016306 <_vfiprintf_r+0x39a>
10016b02:	9a02      	ldr	r2, [sp, #8]
10016b04:	0592      	lsls	r2, r2, #22
10016b06:	f100 8185 	bmi.w	10016e14 <_vfiprintf_r+0xea8>
10016b0a:	17d9      	asrs	r1, r3, #31
10016b0c:	460a      	mov	r2, r1
10016b0e:	e49e      	b.n	1001644e <_vfiprintf_r+0x4e2>
10016b10:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10016b12:	7822      	ldrb	r2, [r4, #0]
10016b14:	2b00      	cmp	r3, #0
10016b16:	f43f aa91 	beq.w	1001603c <_vfiprintf_r+0xd0>
10016b1a:	781b      	ldrb	r3, [r3, #0]
10016b1c:	2b00      	cmp	r3, #0
10016b1e:	f43f aa8d 	beq.w	1001603c <_vfiprintf_r+0xd0>
10016b22:	9b02      	ldr	r3, [sp, #8]
10016b24:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
10016b28:	9302      	str	r3, [sp, #8]
10016b2a:	f7ff ba87 	b.w	1001603c <_vfiprintf_r+0xd0>
10016b2e:	9b02      	ldr	r3, [sp, #8]
10016b30:	06dd      	lsls	r5, r3, #27
10016b32:	f100 80ff 	bmi.w	10016d34 <_vfiprintf_r+0xdc8>
10016b36:	9b02      	ldr	r3, [sp, #8]
10016b38:	065c      	lsls	r4, r3, #25
10016b3a:	f100 8177 	bmi.w	10016e2c <_vfiprintf_r+0xec0>
10016b3e:	9b02      	ldr	r3, [sp, #8]
10016b40:	0598      	lsls	r0, r3, #22
10016b42:	f140 80f7 	bpl.w	10016d34 <_vfiprintf_r+0xdc8>
10016b46:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016b48:	9a07      	ldr	r2, [sp, #28]
10016b4a:	681b      	ldr	r3, [r3, #0]
10016b4c:	701a      	strb	r2, [r3, #0]
10016b4e:	e576      	b.n	1001663e <_vfiprintf_r+0x6d2>
10016b50:	4662      	mov	r2, ip
10016b52:	2101      	movs	r1, #1
10016b54:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016b58:	f7ff bbd1 	b.w	100162fe <_vfiprintf_r+0x392>
10016b5c:	9406      	str	r4, [sp, #24]
10016b5e:	9c02      	ldr	r4, [sp, #8]
10016b60:	e4ee      	b.n	10016540 <_vfiprintf_r+0x5d4>
10016b62:	9a02      	ldr	r2, [sp, #8]
10016b64:	9406      	str	r4, [sp, #24]
10016b66:	e49e      	b.n	100164a6 <_vfiprintf_r+0x53a>
10016b68:	4b14      	ldr	r3, [pc, #80]	@ (10016bbc <_vfiprintf_r+0xc50>)
10016b6a:	9406      	str	r4, [sp, #24]
10016b6c:	930d      	str	r3, [sp, #52]	@ 0x34
10016b6e:	9b02      	ldr	r3, [sp, #8]
10016b70:	f013 0120 	ands.w	r1, r3, #32
10016b74:	d064      	beq.n	10016c40 <_vfiprintf_r+0xcd4>
10016b76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016b78:	3307      	adds	r3, #7
10016b7a:	f023 0307 	bic.w	r3, r3, #7
10016b7e:	4618      	mov	r0, r3
10016b80:	6859      	ldr	r1, [r3, #4]
10016b82:	f850 3b08 	ldr.w	r3, [r0], #8
10016b86:	900a      	str	r0, [sp, #40]	@ 0x28
10016b88:	9c02      	ldr	r4, [sp, #8]
10016b8a:	07e6      	lsls	r6, r4, #31
10016b8c:	d50a      	bpl.n	10016ba4 <_vfiprintf_r+0xc38>
10016b8e:	ea53 0001 	orrs.w	r0, r3, r1
10016b92:	d007      	beq.n	10016ba4 <_vfiprintf_r+0xc38>
10016b94:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
10016b98:	f044 0202 	orr.w	r2, r4, #2
10016b9c:	9202      	str	r2, [sp, #8]
10016b9e:	2230      	movs	r2, #48	@ 0x30
10016ba0:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
10016ba4:	9a02      	ldr	r2, [sp, #8]
10016ba6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
10016baa:	9202      	str	r2, [sp, #8]
10016bac:	e52b      	b.n	10016606 <_vfiprintf_r+0x69a>
10016bae:	4b04      	ldr	r3, [pc, #16]	@ (10016bc0 <_vfiprintf_r+0xc54>)
10016bb0:	9406      	str	r4, [sp, #24]
10016bb2:	930d      	str	r3, [sp, #52]	@ 0x34
10016bb4:	e7db      	b.n	10016b6e <_vfiprintf_r+0xc02>
10016bb6:	bf00      	nop
10016bb8:	10023b18 	.word	0x10023b18
10016bbc:	10023ac8 	.word	0x10023ac8
10016bc0:	10023ab4 	.word	0x10023ab4
10016bc4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016bc6:	681b      	ldr	r3, [r3, #0]
10016bc8:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
10016bcc:	2301      	movs	r3, #1
10016bce:	9304      	str	r3, [sp, #16]
10016bd0:	9309      	str	r3, [sp, #36]	@ 0x24
10016bd2:	ac2d      	add	r4, sp, #180	@ 0xb4
10016bd4:	e428      	b.n	10016428 <_vfiprintf_r+0x4bc>
10016bd6:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
10016bda:	2a00      	cmp	r2, #0
10016bdc:	f000 8120 	beq.w	10016e20 <_vfiprintf_r+0xeb4>
10016be0:	2101      	movs	r1, #1
10016be2:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
10016be6:	911e      	str	r1, [sp, #120]	@ 0x78
10016be8:	921d      	str	r2, [sp, #116]	@ 0x74
10016bea:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016bee:	468c      	mov	ip, r1
10016bf0:	f7ff bb62 	b.w	100162b8 <_vfiprintf_r+0x34c>
10016bf4:	2208      	movs	r2, #8
10016bf6:	2100      	movs	r1, #0
10016bf8:	a818      	add	r0, sp, #96	@ 0x60
10016bfa:	9415      	str	r4, [sp, #84]	@ 0x54
10016bfc:	f001 f9bc 	bl	10017f78 <memset>
10016c00:	f8dd 8014 	ldr.w	r8, [sp, #20]
10016c04:	f1b8 3fff 	cmp.w	r8, #4294967295	@ 0xffffffff
10016c08:	f000 80b9 	beq.w	10016d7e <_vfiprintf_r+0xe12>
10016c0c:	2500      	movs	r5, #0
10016c0e:	9404      	str	r4, [sp, #16]
10016c10:	462c      	mov	r4, r5
10016c12:	e00c      	b.n	10016c2e <_vfiprintf_r+0xcc2>
10016c14:	a92d      	add	r1, sp, #180	@ 0xb4
10016c16:	4658      	mov	r0, fp
10016c18:	f001 fdde 	bl	100187d8 <_wcrtomb_r>
10016c1c:	1c41      	adds	r1, r0, #1
10016c1e:	4420      	add	r0, r4
10016c20:	f000 813f 	beq.w	10016ea2 <_vfiprintf_r+0xf36>
10016c24:	4540      	cmp	r0, r8
10016c26:	dc08      	bgt.n	10016c3a <_vfiprintf_r+0xcce>
10016c28:	f000 8158 	beq.w	10016edc <_vfiprintf_r+0xf70>
10016c2c:	4604      	mov	r4, r0
10016c2e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10016c30:	5952      	ldr	r2, [r2, r5]
10016c32:	ab18      	add	r3, sp, #96	@ 0x60
10016c34:	3504      	adds	r5, #4
10016c36:	2a00      	cmp	r2, #0
10016c38:	d1ec      	bne.n	10016c14 <_vfiprintf_r+0xca8>
10016c3a:	9409      	str	r4, [sp, #36]	@ 0x24
10016c3c:	9c04      	ldr	r4, [sp, #16]
10016c3e:	e0ac      	b.n	10016d9a <_vfiprintf_r+0xe2e>
10016c40:	980a      	ldr	r0, [sp, #40]	@ 0x28
10016c42:	f850 3b04 	ldr.w	r3, [r0], #4
10016c46:	900a      	str	r0, [sp, #40]	@ 0x28
10016c48:	9802      	ldr	r0, [sp, #8]
10016c4a:	f010 0010 	ands.w	r0, r0, #16
10016c4e:	d19b      	bne.n	10016b88 <_vfiprintf_r+0xc1c>
10016c50:	9902      	ldr	r1, [sp, #8]
10016c52:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
10016c56:	f000 808b 	beq.w	10016d70 <_vfiprintf_r+0xe04>
10016c5a:	b29b      	uxth	r3, r3
10016c5c:	4601      	mov	r1, r0
10016c5e:	e793      	b.n	10016b88 <_vfiprintf_r+0xc1c>
10016c60:	9a02      	ldr	r2, [sp, #8]
10016c62:	f8cd 9010 	str.w	r9, [sp, #16]
10016c66:	ac46      	add	r4, sp, #280	@ 0x118
10016c68:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
10016c6c:	46a1      	mov	r9, r4
10016c6e:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10016c72:	4ea5      	ldr	r6, [pc, #660]	@ (10016f08 <_vfiprintf_r+0xf9c>)
10016c74:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
10016c78:	f04f 0c00 	mov.w	ip, #0
10016c7c:	4614      	mov	r4, r2
10016c7e:	e005      	b.n	10016c8c <_vfiprintf_r+0xd20>
10016c80:	2b0a      	cmp	r3, #10
10016c82:	f171 0100 	sbcs.w	r1, r1, #0
10016c86:	d336      	bcc.n	10016cf6 <_vfiprintf_r+0xd8a>
10016c88:	4643      	mov	r3, r8
10016c8a:	4629      	mov	r1, r5
10016c8c:	185a      	adds	r2, r3, r1
10016c8e:	f142 0200 	adc.w	r2, r2, #0
10016c92:	fba6 0502 	umull	r0, r5, r6, r2
10016c96:	f025 0003 	bic.w	r0, r5, #3
10016c9a:	eb00 0095 	add.w	r0, r0, r5, lsr #2
10016c9e:	1a12      	subs	r2, r2, r0
10016ca0:	1a98      	subs	r0, r3, r2
10016ca2:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
10016ca6:	f161 0e00 	sbc.w	lr, r1, #0
10016caa:	fb05 f500 	mul.w	r5, r5, r0
10016cae:	fb06 550e 	mla	r5, r6, lr, r5
10016cb2:	fba0 8006 	umull	r8, r0, r0, r6
10016cb6:	4405      	add	r5, r0
10016cb8:	f008 0e01 	and.w	lr, r8, #1
10016cbc:	2005      	movs	r0, #5
10016cbe:	fbae 0e00 	umull	r0, lr, lr, r0
10016cc2:	1880      	adds	r0, r0, r2
10016cc4:	ea4f 0858 	mov.w	r8, r8, lsr #1
10016cc8:	3030      	adds	r0, #48	@ 0x30
10016cca:	f809 0c01 	strb.w	r0, [r9, #-1]
10016cce:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
10016cd2:	f10c 0c01 	add.w	ip, ip, #1
10016cd6:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10016cda:	086d      	lsrs	r5, r5, #1
10016cdc:	2c00      	cmp	r4, #0
10016cde:	d0cf      	beq.n	10016c80 <_vfiprintf_r+0xd14>
10016ce0:	f89b 2000 	ldrb.w	r2, [fp]
10016ce4:	4562      	cmp	r2, ip
10016ce6:	d1cb      	bne.n	10016c80 <_vfiprintf_r+0xd14>
10016ce8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10016cec:	d0c8      	beq.n	10016c80 <_vfiprintf_r+0xd14>
10016cee:	2b0a      	cmp	r3, #10
10016cf0:	f171 0100 	sbcs.w	r1, r1, #0
10016cf4:	d272      	bcs.n	10016ddc <_vfiprintf_r+0xe70>
10016cf6:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10016cfa:	464c      	mov	r4, r9
10016cfc:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10016d00:	f8dd 9010 	ldr.w	r9, [sp, #16]
10016d04:	e5ea      	b.n	100168dc <_vfiprintf_r+0x970>
10016d06:	9202      	str	r2, [sp, #8]
10016d08:	e441      	b.n	1001658e <_vfiprintf_r+0x622>
10016d0a:	9402      	str	r4, [sp, #8]
10016d0c:	e4e6      	b.n	100166dc <_vfiprintf_r+0x770>
10016d0e:	4658      	mov	r0, fp
10016d10:	f000 fdc8 	bl	100178a4 <__sinit>
10016d14:	f7ff b940 	b.w	10015f98 <_vfiprintf_r+0x2c>
10016d18:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
10016d1c:	7862      	ldrb	r2, [r4, #1]
10016d1e:	9302      	str	r3, [sp, #8]
10016d20:	3401      	adds	r4, #1
10016d22:	f7ff b98b 	b.w	1001603c <_vfiprintf_r+0xd0>
10016d26:	f043 0320 	orr.w	r3, r3, #32
10016d2a:	7862      	ldrb	r2, [r4, #1]
10016d2c:	9302      	str	r3, [sp, #8]
10016d2e:	3401      	adds	r4, #1
10016d30:	f7ff b984 	b.w	1001603c <_vfiprintf_r+0xd0>
10016d34:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016d36:	9a07      	ldr	r2, [sp, #28]
10016d38:	681b      	ldr	r3, [r3, #0]
10016d3a:	601a      	str	r2, [r3, #0]
10016d3c:	e47f      	b.n	1001663e <_vfiprintf_r+0x6d2>
10016d3e:	9b05      	ldr	r3, [sp, #20]
10016d40:	4c72      	ldr	r4, [pc, #456]	@ (10016f0c <_vfiprintf_r+0xfa0>)
10016d42:	2b06      	cmp	r3, #6
10016d44:	bf28      	it	cs
10016d46:	2306      	movcs	r3, #6
10016d48:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
10016d4c:	9304      	str	r3, [sp, #16]
10016d4e:	f7ff ba89 	b.w	10016264 <_vfiprintf_r+0x2f8>
10016d52:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
10016d56:	f43f ac00 	beq.w	1001655a <_vfiprintf_r+0x5ee>
10016d5a:	b2db      	uxtb	r3, r3
10016d5c:	4601      	mov	r1, r0
10016d5e:	f7ff bbfc 	b.w	1001655a <_vfiprintf_r+0x5ee>
10016d62:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
10016d66:	bf1c      	itt	ne
10016d68:	b2db      	uxtbne	r3, r3
10016d6a:	4621      	movne	r1, r4
10016d6c:	f7ff bba8 	b.w	100164c0 <_vfiprintf_r+0x554>
10016d70:	9902      	ldr	r1, [sp, #8]
10016d72:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
10016d76:	bf1c      	itt	ne
10016d78:	b2db      	uxtbne	r3, r3
10016d7a:	4621      	movne	r1, r4
10016d7c:	e704      	b.n	10016b88 <_vfiprintf_r+0xc1c>
10016d7e:	ab18      	add	r3, sp, #96	@ 0x60
10016d80:	9300      	str	r3, [sp, #0]
10016d82:	2300      	movs	r3, #0
10016d84:	4619      	mov	r1, r3
10016d86:	aa15      	add	r2, sp, #84	@ 0x54
10016d88:	4658      	mov	r0, fp
10016d8a:	f001 fd4b 	bl	10018824 <_wcsrtombs_r>
10016d8e:	4603      	mov	r3, r0
10016d90:	3301      	adds	r3, #1
10016d92:	9009      	str	r0, [sp, #36]	@ 0x24
10016d94:	f000 8085 	beq.w	10016ea2 <_vfiprintf_r+0xf36>
10016d98:	9415      	str	r4, [sp, #84]	@ 0x54
10016d9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10016d9c:	b373      	cbz	r3, 10016dfc <_vfiprintf_r+0xe90>
10016d9e:	2b63      	cmp	r3, #99	@ 0x63
10016da0:	dc49      	bgt.n	10016e36 <_vfiprintf_r+0xeca>
10016da2:	2300      	movs	r3, #0
10016da4:	930b      	str	r3, [sp, #44]	@ 0x2c
10016da6:	ac2d      	add	r4, sp, #180	@ 0xb4
10016da8:	2208      	movs	r2, #8
10016daa:	2100      	movs	r1, #0
10016dac:	a818      	add	r0, sp, #96	@ 0x60
10016dae:	f001 f8e3 	bl	10017f78 <memset>
10016db2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10016db4:	ab18      	add	r3, sp, #96	@ 0x60
10016db6:	9300      	str	r3, [sp, #0]
10016db8:	aa15      	add	r2, sp, #84	@ 0x54
10016dba:	462b      	mov	r3, r5
10016dbc:	4621      	mov	r1, r4
10016dbe:	4658      	mov	r0, fp
10016dc0:	f001 fd30 	bl	10018824 <_wcsrtombs_r>
10016dc4:	4285      	cmp	r5, r0
10016dc6:	f040 8098 	bne.w	10016efa <_vfiprintf_r+0xf8e>
10016dca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10016dcc:	960a      	str	r6, [sp, #40]	@ 0x28
10016dce:	2300      	movs	r3, #0
10016dd0:	54a3      	strb	r3, [r4, r2]
10016dd2:	9305      	str	r3, [sp, #20]
10016dd4:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
10016dd8:	9304      	str	r3, [sp, #16]
10016dda:	e493      	b.n	10016704 <_vfiprintf_r+0x798>
10016ddc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10016dde:	9910      	ldr	r1, [sp, #64]	@ 0x40
10016de0:	eba9 0903 	sub.w	r9, r9, r3
10016de4:	461a      	mov	r2, r3
10016de6:	4648      	mov	r0, r9
10016de8:	f001 f918 	bl	1001801c <strncpy>
10016dec:	f89b 3001 	ldrb.w	r3, [fp, #1]
10016df0:	b10b      	cbz	r3, 10016df6 <_vfiprintf_r+0xe8a>
10016df2:	f10b 0b01 	add.w	fp, fp, #1
10016df6:	f04f 0c00 	mov.w	ip, #0
10016dfa:	e745      	b.n	10016c88 <_vfiprintf_r+0xd1c>
10016dfc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10016dfe:	960a      	str	r6, [sp, #40]	@ 0x28
10016e00:	e9cd 3304 	strd	r3, r3, [sp, #16]
10016e04:	930b      	str	r3, [sp, #44]	@ 0x2c
10016e06:	e47d      	b.n	10016704 <_vfiprintf_r+0x798>
10016e08:	2101      	movs	r1, #1
10016e0a:	4662      	mov	r2, ip
10016e0c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016e10:	f7ff ba79 	b.w	10016306 <_vfiprintf_r+0x39a>
10016e14:	f343 11c0 	sbfx	r1, r3, #7, #1
10016e18:	460a      	mov	r2, r1
10016e1a:	b25b      	sxtb	r3, r3
10016e1c:	f7ff bb17 	b.w	1001644e <_vfiprintf_r+0x4e2>
10016e20:	4662      	mov	r2, ip
10016e22:	2101      	movs	r1, #1
10016e24:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016e28:	f7ff ba4a 	b.w	100162c0 <_vfiprintf_r+0x354>
10016e2c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016e2e:	9a07      	ldr	r2, [sp, #28]
10016e30:	681b      	ldr	r3, [r3, #0]
10016e32:	801a      	strh	r2, [r3, #0]
10016e34:	e403      	b.n	1001663e <_vfiprintf_r+0x6d2>
10016e36:	1c59      	adds	r1, r3, #1
10016e38:	4658      	mov	r0, fp
10016e3a:	f7fc ff1f 	bl	10013c7c <_malloc_r>
10016e3e:	4604      	mov	r4, r0
10016e40:	2800      	cmp	r0, #0
10016e42:	d02e      	beq.n	10016ea2 <_vfiprintf_r+0xf36>
10016e44:	900b      	str	r0, [sp, #44]	@ 0x2c
10016e46:	e7af      	b.n	10016da8 <_vfiprintf_r+0xe3c>
10016e48:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10016e4a:	f001 fb57 	bl	100184fc <__retarget_lock_release_recursive>
10016e4e:	f7ff b99d 	b.w	1001618c <_vfiprintf_r+0x220>
10016e52:	9b05      	ldr	r3, [sp, #20]
10016e54:	9304      	str	r3, [sp, #16]
10016e56:	9309      	str	r3, [sp, #36]	@ 0x24
10016e58:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016e5a:	960a      	str	r6, [sp, #40]	@ 0x28
10016e5c:	9305      	str	r3, [sp, #20]
10016e5e:	e451      	b.n	10016704 <_vfiprintf_r+0x798>
10016e60:	4620      	mov	r0, r4
10016e62:	9505      	str	r5, [sp, #20]
10016e64:	960a      	str	r6, [sp, #40]	@ 0x28
10016e66:	f001 fc4b 	bl	10018700 <strlen>
10016e6a:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10016e6e:	9009      	str	r0, [sp, #36]	@ 0x24
10016e70:	9304      	str	r3, [sp, #16]
10016e72:	950b      	str	r5, [sp, #44]	@ 0x2c
10016e74:	e446      	b.n	10016704 <_vfiprintf_r+0x798>
10016e76:	2300      	movs	r3, #0
10016e78:	9305      	str	r3, [sp, #20]
10016e7a:	f7ff b8e0 	b.w	1001603e <_vfiprintf_r+0xd2>
10016e7e:	4e24      	ldr	r6, [pc, #144]	@ (10016f10 <_vfiprintf_r+0xfa4>)
10016e80:	4686      	mov	lr, r0
10016e82:	e56a      	b.n	1001695a <_vfiprintf_r+0x9ee>
10016e84:	2330      	movs	r3, #48	@ 0x30
10016e86:	e430      	b.n	100166ea <_vfiprintf_r+0x77e>
10016e88:	9903      	ldr	r1, [sp, #12]
10016e8a:	aa1a      	add	r2, sp, #104	@ 0x68
10016e8c:	4658      	mov	r0, fp
10016e8e:	f7ff f827 	bl	10015ee0 <__sprint_r.part.0>
10016e92:	2800      	cmp	r0, #0
10016e94:	f43f a9a8 	beq.w	100161e8 <_vfiprintf_r+0x27c>
10016e98:	f7ff b9c6 	b.w	10016228 <_vfiprintf_r+0x2bc>
10016e9c:	4e1c      	ldr	r6, [pc, #112]	@ (10016f10 <_vfiprintf_r+0xfa4>)
10016e9e:	1c48      	adds	r0, r1, #1
10016ea0:	e5a6      	b.n	100169f0 <_vfiprintf_r+0xa84>
10016ea2:	9a03      	ldr	r2, [sp, #12]
10016ea4:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
10016ea8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016eac:	8193      	strh	r3, [r2, #12]
10016eae:	f7ff b9be 	b.w	1001622e <_vfiprintf_r+0x2c2>
10016eb2:	9b03      	ldr	r3, [sp, #12]
10016eb4:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10016eb6:	07d9      	lsls	r1, r3, #31
10016eb8:	d407      	bmi.n	10016eca <_vfiprintf_r+0xf5e>
10016eba:	9b03      	ldr	r3, [sp, #12]
10016ebc:	899b      	ldrh	r3, [r3, #12]
10016ebe:	059a      	lsls	r2, r3, #22
10016ec0:	d403      	bmi.n	10016eca <_vfiprintf_r+0xf5e>
10016ec2:	9b03      	ldr	r3, [sp, #12]
10016ec4:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10016ec6:	f001 fb19 	bl	100184fc <__retarget_lock_release_recursive>
10016eca:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10016ece:	9307      	str	r3, [sp, #28]
10016ed0:	f7ff b9b5 	b.w	1001623e <_vfiprintf_r+0x2d2>
10016ed4:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 10016f14 <_vfiprintf_r+0xfa8>
10016ed8:	4608      	mov	r0, r1
10016eda:	e460      	b.n	1001679e <_vfiprintf_r+0x832>
10016edc:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
10016ee0:	9309      	str	r3, [sp, #36]	@ 0x24
10016ee2:	e75a      	b.n	10016d9a <_vfiprintf_r+0xe2e>
10016ee4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016ee6:	7862      	ldrb	r2, [r4, #1]
10016ee8:	460c      	mov	r4, r1
10016eea:	f853 1b04 	ldr.w	r1, [r3], #4
10016eee:	930a      	str	r3, [sp, #40]	@ 0x28
10016ef0:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10016ef4:	9105      	str	r1, [sp, #20]
10016ef6:	f7ff b8a1 	b.w	1001603c <_vfiprintf_r+0xd0>
10016efa:	9a03      	ldr	r2, [sp, #12]
10016efc:	8993      	ldrh	r3, [r2, #12]
10016efe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016f02:	8193      	strh	r3, [r2, #12]
10016f04:	f7ff b98a 	b.w	1001621c <_vfiprintf_r+0x2b0>
10016f08:	cccccccd 	.word	0xcccccccd
10016f0c:	10023adc 	.word	0x10023adc
10016f10:	10023b18 	.word	0x10023b18
10016f14:	10023b08 	.word	0x10023b08

10016f18 <__sbprintf>:
10016f18:	b5f0      	push	{r4, r5, r6, r7, lr}
10016f1a:	461f      	mov	r7, r3
10016f1c:	898b      	ldrh	r3, [r1, #12]
10016f1e:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
10016f22:	f023 0302 	bic.w	r3, r3, #2
10016f26:	f8ad 300c 	strh.w	r3, [sp, #12]
10016f2a:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10016f2c:	9319      	str	r3, [sp, #100]	@ 0x64
10016f2e:	89cb      	ldrh	r3, [r1, #14]
10016f30:	f8ad 300e 	strh.w	r3, [sp, #14]
10016f34:	69cb      	ldr	r3, [r1, #28]
10016f36:	9307      	str	r3, [sp, #28]
10016f38:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10016f3a:	9309      	str	r3, [sp, #36]	@ 0x24
10016f3c:	ab1a      	add	r3, sp, #104	@ 0x68
10016f3e:	9300      	str	r3, [sp, #0]
10016f40:	9304      	str	r3, [sp, #16]
10016f42:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10016f46:	4615      	mov	r5, r2
10016f48:	4606      	mov	r6, r0
10016f4a:	9302      	str	r3, [sp, #8]
10016f4c:	9305      	str	r3, [sp, #20]
10016f4e:	a816      	add	r0, sp, #88	@ 0x58
10016f50:	2300      	movs	r3, #0
10016f52:	460c      	mov	r4, r1
10016f54:	9306      	str	r3, [sp, #24]
10016f56:	f001 facb 	bl	100184f0 <__retarget_lock_init_recursive>
10016f5a:	462a      	mov	r2, r5
10016f5c:	463b      	mov	r3, r7
10016f5e:	4669      	mov	r1, sp
10016f60:	4630      	mov	r0, r6
10016f62:	f7ff f803 	bl	10015f6c <_vfiprintf_r>
10016f66:	1e05      	subs	r5, r0, #0
10016f68:	db07      	blt.n	10016f7a <__sbprintf+0x62>
10016f6a:	4669      	mov	r1, sp
10016f6c:	4630      	mov	r0, r6
10016f6e:	f000 fb1d 	bl	100175ac <_fflush_r>
10016f72:	2800      	cmp	r0, #0
10016f74:	bf18      	it	ne
10016f76:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10016f7a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10016f7e:	065b      	lsls	r3, r3, #25
10016f80:	d503      	bpl.n	10016f8a <__sbprintf+0x72>
10016f82:	89a3      	ldrh	r3, [r4, #12]
10016f84:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016f88:	81a3      	strh	r3, [r4, #12]
10016f8a:	9816      	ldr	r0, [sp, #88]	@ 0x58
10016f8c:	f001 fab2 	bl	100184f4 <__retarget_lock_close_recursive>
10016f90:	4628      	mov	r0, r5
10016f92:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10016f96:	bdf0      	pop	{r4, r5, r6, r7, pc}

10016f98 <putchar>:
10016f98:	4b02      	ldr	r3, [pc, #8]	@ (10016fa4 <putchar+0xc>)
10016f9a:	4601      	mov	r1, r0
10016f9c:	6818      	ldr	r0, [r3, #0]
10016f9e:	6882      	ldr	r2, [r0, #8]
10016fa0:	f006 b83e 	b.w	1001d020 <_putc_r>
10016fa4:	20000598 	.word	0x20000598

10016fa8 <__malloc_lock>:
10016fa8:	4801      	ldr	r0, [pc, #4]	@ (10016fb0 <__malloc_lock+0x8>)
10016faa:	f001 baa5 	b.w	100184f8 <__retarget_lock_acquire_recursive>
10016fae:	bf00      	nop
10016fb0:	200015c8 	.word	0x200015c8

10016fb4 <__malloc_unlock>:
10016fb4:	4801      	ldr	r0, [pc, #4]	@ (10016fbc <__malloc_unlock+0x8>)
10016fb6:	f001 baa1 	b.w	100184fc <__retarget_lock_release_recursive>
10016fba:	bf00      	nop
10016fbc:	200015c8 	.word	0x200015c8

10016fc0 <_puts_r>:
10016fc0:	b570      	push	{r4, r5, r6, lr}
10016fc2:	4605      	mov	r5, r0
10016fc4:	b088      	sub	sp, #32
10016fc6:	4608      	mov	r0, r1
10016fc8:	460c      	mov	r4, r1
10016fca:	f001 fb99 	bl	10018700 <strlen>
10016fce:	4e21      	ldr	r6, [pc, #132]	@ (10017054 <_puts_r+0x94>)
10016fd0:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
10016fd2:	9005      	str	r0, [sp, #20]
10016fd4:	2101      	movs	r1, #1
10016fd6:	1843      	adds	r3, r0, r1
10016fd8:	e9cd 6106 	strd	r6, r1, [sp, #24]
10016fdc:	a804      	add	r0, sp, #16
10016fde:	2102      	movs	r1, #2
10016fe0:	9404      	str	r4, [sp, #16]
10016fe2:	9303      	str	r3, [sp, #12]
10016fe4:	68ac      	ldr	r4, [r5, #8]
10016fe6:	9001      	str	r0, [sp, #4]
10016fe8:	9102      	str	r1, [sp, #8]
10016fea:	2a00      	cmp	r2, #0
10016fec:	d02e      	beq.n	1001704c <_puts_r+0x8c>
10016fee:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10016ff0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016ff4:	07d6      	lsls	r6, r2, #31
10016ff6:	d401      	bmi.n	10016ffc <_puts_r+0x3c>
10016ff8:	0598      	lsls	r0, r3, #22
10016ffa:	d521      	bpl.n	10017040 <_puts_r+0x80>
10016ffc:	0499      	lsls	r1, r3, #18
10016ffe:	d406      	bmi.n	1001700e <_puts_r+0x4e>
10017000:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10017002:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10017006:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001700a:	81a3      	strh	r3, [r4, #12]
1001700c:	6662      	str	r2, [r4, #100]	@ 0x64
1001700e:	4628      	mov	r0, r5
10017010:	aa01      	add	r2, sp, #4
10017012:	4621      	mov	r1, r4
10017014:	f000 fc70 	bl	100178f8 <__sfvwrite_r>
10017018:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001701a:	2800      	cmp	r0, #0
1001701c:	bf0c      	ite	eq
1001701e:	250a      	moveq	r5, #10
10017020:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10017024:	07da      	lsls	r2, r3, #31
10017026:	d402      	bmi.n	1001702e <_puts_r+0x6e>
10017028:	89a3      	ldrh	r3, [r4, #12]
1001702a:	059b      	lsls	r3, r3, #22
1001702c:	d502      	bpl.n	10017034 <_puts_r+0x74>
1001702e:	4628      	mov	r0, r5
10017030:	b008      	add	sp, #32
10017032:	bd70      	pop	{r4, r5, r6, pc}
10017034:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017036:	f001 fa61 	bl	100184fc <__retarget_lock_release_recursive>
1001703a:	4628      	mov	r0, r5
1001703c:	b008      	add	sp, #32
1001703e:	bd70      	pop	{r4, r5, r6, pc}
10017040:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017042:	f001 fa59 	bl	100184f8 <__retarget_lock_acquire_recursive>
10017046:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001704a:	e7d7      	b.n	10016ffc <_puts_r+0x3c>
1001704c:	4628      	mov	r0, r5
1001704e:	f000 fc29 	bl	100178a4 <__sinit>
10017052:	e7cc      	b.n	10016fee <_puts_r+0x2e>
10017054:	10021328 	.word	0x10021328

10017058 <puts>:
10017058:	4b02      	ldr	r3, [pc, #8]	@ (10017064 <puts+0xc>)
1001705a:	4601      	mov	r1, r0
1001705c:	6818      	ldr	r0, [r3, #0]
1001705e:	f7ff bfaf 	b.w	10016fc0 <_puts_r>
10017062:	bf00      	nop
10017064:	20000598 	.word	0x20000598

10017068 <realloc>:
10017068:	b410      	push	{r4}
1001706a:	4c04      	ldr	r4, [pc, #16]	@ (1001707c <realloc+0x14>)
1001706c:	4603      	mov	r3, r0
1001706e:	460a      	mov	r2, r1
10017070:	6820      	ldr	r0, [r4, #0]
10017072:	bc10      	pop	{r4}
10017074:	4619      	mov	r1, r3
10017076:	f000 b863 	b.w	10017140 <_realloc_r>
1001707a:	bf00      	nop
1001707c:	20000598 	.word	0x20000598

10017080 <_fclose_r>:
10017080:	b570      	push	{r4, r5, r6, lr}
10017082:	2900      	cmp	r1, #0
10017084:	d03f      	beq.n	10017106 <_fclose_r+0x86>
10017086:	4605      	mov	r5, r0
10017088:	460c      	mov	r4, r1
1001708a:	b110      	cbz	r0, 10017092 <_fclose_r+0x12>
1001708c:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001708e:	2b00      	cmp	r3, #0
10017090:	d03c      	beq.n	1001710c <_fclose_r+0x8c>
10017092:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017094:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10017098:	07de      	lsls	r6, r3, #31
1001709a:	d432      	bmi.n	10017102 <_fclose_r+0x82>
1001709c:	0590      	lsls	r0, r2, #22
1001709e:	d538      	bpl.n	10017112 <_fclose_r+0x92>
100170a0:	4621      	mov	r1, r4
100170a2:	4628      	mov	r0, r5
100170a4:	f000 f9ee 	bl	10017484 <__sflush_r>
100170a8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
100170aa:	4606      	mov	r6, r0
100170ac:	b133      	cbz	r3, 100170bc <_fclose_r+0x3c>
100170ae:	69e1      	ldr	r1, [r4, #28]
100170b0:	4628      	mov	r0, r5
100170b2:	4798      	blx	r3
100170b4:	2800      	cmp	r0, #0
100170b6:	bfb8      	it	lt
100170b8:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
100170bc:	89a3      	ldrh	r3, [r4, #12]
100170be:	061a      	lsls	r2, r3, #24
100170c0:	d439      	bmi.n	10017136 <_fclose_r+0xb6>
100170c2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
100170c4:	b141      	cbz	r1, 100170d8 <_fclose_r+0x58>
100170c6:	f104 0340 	add.w	r3, r4, #64	@ 0x40
100170ca:	4299      	cmp	r1, r3
100170cc:	d002      	beq.n	100170d4 <_fclose_r+0x54>
100170ce:	4628      	mov	r0, r5
100170d0:	f002 fc16 	bl	10019900 <_free_r>
100170d4:	2300      	movs	r3, #0
100170d6:	6323      	str	r3, [r4, #48]	@ 0x30
100170d8:	6c61      	ldr	r1, [r4, #68]	@ 0x44
100170da:	b121      	cbz	r1, 100170e6 <_fclose_r+0x66>
100170dc:	4628      	mov	r0, r5
100170de:	f002 fc0f 	bl	10019900 <_free_r>
100170e2:	2300      	movs	r3, #0
100170e4:	6463      	str	r3, [r4, #68]	@ 0x44
100170e6:	f000 fbfb 	bl	100178e0 <__sfp_lock_acquire>
100170ea:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100170ec:	2200      	movs	r2, #0
100170ee:	07db      	lsls	r3, r3, #31
100170f0:	81a2      	strh	r2, [r4, #12]
100170f2:	d51c      	bpl.n	1001712e <_fclose_r+0xae>
100170f4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100170f6:	f001 f9fd 	bl	100184f4 <__retarget_lock_close_recursive>
100170fa:	f000 fbf7 	bl	100178ec <__sfp_lock_release>
100170fe:	4630      	mov	r0, r6
10017100:	bd70      	pop	{r4, r5, r6, pc}
10017102:	2a00      	cmp	r2, #0
10017104:	d1cc      	bne.n	100170a0 <_fclose_r+0x20>
10017106:	2600      	movs	r6, #0
10017108:	4630      	mov	r0, r6
1001710a:	bd70      	pop	{r4, r5, r6, pc}
1001710c:	f000 fbca 	bl	100178a4 <__sinit>
10017110:	e7bf      	b.n	10017092 <_fclose_r+0x12>
10017112:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017114:	f001 f9f0 	bl	100184f8 <__retarget_lock_acquire_recursive>
10017118:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001711c:	2b00      	cmp	r3, #0
1001711e:	d1bf      	bne.n	100170a0 <_fclose_r+0x20>
10017120:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017122:	07d9      	lsls	r1, r3, #31
10017124:	d4ef      	bmi.n	10017106 <_fclose_r+0x86>
10017126:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017128:	f001 f9e8 	bl	100184fc <__retarget_lock_release_recursive>
1001712c:	e7eb      	b.n	10017106 <_fclose_r+0x86>
1001712e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017130:	f001 f9e4 	bl	100184fc <__retarget_lock_release_recursive>
10017134:	e7de      	b.n	100170f4 <_fclose_r+0x74>
10017136:	6921      	ldr	r1, [r4, #16]
10017138:	4628      	mov	r0, r5
1001713a:	f002 fbe1 	bl	10019900 <_free_r>
1001713e:	e7c0      	b.n	100170c2 <_fclose_r+0x42>

10017140 <_realloc_r>:
10017140:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017144:	4616      	mov	r6, r2
10017146:	2900      	cmp	r1, #0
10017148:	f000 8096 	beq.w	10017278 <_realloc_r+0x138>
1001714c:	460c      	mov	r4, r1
1001714e:	4680      	mov	r8, r0
10017150:	f106 050b 	add.w	r5, r6, #11
10017154:	f7ff ff28 	bl	10016fa8 <__malloc_lock>
10017158:	f854 1c04 	ldr.w	r1, [r4, #-4]
1001715c:	2d16      	cmp	r5, #22
1001715e:	f1a4 0908 	sub.w	r9, r4, #8
10017162:	f021 0703 	bic.w	r7, r1, #3
10017166:	d858      	bhi.n	1001721a <_realloc_r+0xda>
10017168:	2510      	movs	r5, #16
1001716a:	42ae      	cmp	r6, r5
1001716c:	d858      	bhi.n	10017220 <_realloc_r+0xe0>
1001716e:	42af      	cmp	r7, r5
10017170:	da60      	bge.n	10017234 <_realloc_r+0xf4>
10017172:	4bbe      	ldr	r3, [pc, #760]	@ (1001746c <_realloc_r+0x32c>)
10017174:	689a      	ldr	r2, [r3, #8]
10017176:	eb09 0c07 	add.w	ip, r9, r7
1001717a:	4562      	cmp	r2, ip
1001717c:	f8dc 0004 	ldr.w	r0, [ip, #4]
10017180:	f000 8090 	beq.w	100172a4 <_realloc_r+0x164>
10017184:	f020 0301 	bic.w	r3, r0, #1
10017188:	4463      	add	r3, ip
1001718a:	685b      	ldr	r3, [r3, #4]
1001718c:	07da      	lsls	r2, r3, #31
1001718e:	d468      	bmi.n	10017262 <_realloc_r+0x122>
10017190:	f020 0003 	bic.w	r0, r0, #3
10017194:	183b      	adds	r3, r7, r0
10017196:	429d      	cmp	r5, r3
10017198:	dd47      	ble.n	1001722a <_realloc_r+0xea>
1001719a:	07cb      	lsls	r3, r1, #31
1001719c:	d412      	bmi.n	100171c4 <_realloc_r+0x84>
1001719e:	f854 3c08 	ldr.w	r3, [r4, #-8]
100171a2:	eba9 0b03 	sub.w	fp, r9, r3
100171a6:	f8db 3004 	ldr.w	r3, [fp, #4]
100171aa:	f023 0203 	bic.w	r2, r3, #3
100171ae:	4410      	add	r0, r2
100171b0:	eb00 0a07 	add.w	sl, r0, r7
100171b4:	4555      	cmp	r5, sl
100171b6:	f340 80f6 	ble.w	100173a6 <_realloc_r+0x266>
100171ba:	eb07 0a02 	add.w	sl, r7, r2
100171be:	4555      	cmp	r5, sl
100171c0:	f340 80cc 	ble.w	1001735c <_realloc_r+0x21c>
100171c4:	4631      	mov	r1, r6
100171c6:	4640      	mov	r0, r8
100171c8:	f7fc fd58 	bl	10013c7c <_malloc_r>
100171cc:	4606      	mov	r6, r0
100171ce:	2800      	cmp	r0, #0
100171d0:	f000 8120 	beq.w	10017414 <_realloc_r+0x2d4>
100171d4:	f854 3c04 	ldr.w	r3, [r4, #-4]
100171d8:	f023 0301 	bic.w	r3, r3, #1
100171dc:	444b      	add	r3, r9
100171de:	f1a0 0208 	sub.w	r2, r0, #8
100171e2:	4293      	cmp	r3, r2
100171e4:	f000 80b4 	beq.w	10017350 <_realloc_r+0x210>
100171e8:	1f3a      	subs	r2, r7, #4
100171ea:	2a24      	cmp	r2, #36	@ 0x24
100171ec:	f200 80d7 	bhi.w	1001739e <_realloc_r+0x25e>
100171f0:	2a13      	cmp	r2, #19
100171f2:	f200 80a2 	bhi.w	1001733a <_realloc_r+0x1fa>
100171f6:	4603      	mov	r3, r0
100171f8:	4622      	mov	r2, r4
100171fa:	6811      	ldr	r1, [r2, #0]
100171fc:	6019      	str	r1, [r3, #0]
100171fe:	6851      	ldr	r1, [r2, #4]
10017200:	6059      	str	r1, [r3, #4]
10017202:	6892      	ldr	r2, [r2, #8]
10017204:	609a      	str	r2, [r3, #8]
10017206:	4621      	mov	r1, r4
10017208:	4640      	mov	r0, r8
1001720a:	f002 fb79 	bl	10019900 <_free_r>
1001720e:	4640      	mov	r0, r8
10017210:	f7ff fed0 	bl	10016fb4 <__malloc_unlock>
10017214:	4630      	mov	r0, r6
10017216:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001721a:	f035 0507 	bics.w	r5, r5, #7
1001721e:	d5a4      	bpl.n	1001716a <_realloc_r+0x2a>
10017220:	230c      	movs	r3, #12
10017222:	f8c8 3000 	str.w	r3, [r8]
10017226:	2600      	movs	r6, #0
10017228:	e018      	b.n	1001725c <_realloc_r+0x11c>
1001722a:	461f      	mov	r7, r3
1001722c:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
10017230:	60d3      	str	r3, [r2, #12]
10017232:	609a      	str	r2, [r3, #8]
10017234:	f8d9 3004 	ldr.w	r3, [r9, #4]
10017238:	1b7a      	subs	r2, r7, r5
1001723a:	2a0f      	cmp	r2, #15
1001723c:	f003 0301 	and.w	r3, r3, #1
10017240:	eb09 0007 	add.w	r0, r9, r7
10017244:	d81d      	bhi.n	10017282 <_realloc_r+0x142>
10017246:	433b      	orrs	r3, r7
10017248:	f8c9 3004 	str.w	r3, [r9, #4]
1001724c:	6843      	ldr	r3, [r0, #4]
1001724e:	f043 0301 	orr.w	r3, r3, #1
10017252:	6043      	str	r3, [r0, #4]
10017254:	4640      	mov	r0, r8
10017256:	f7ff fead 	bl	10016fb4 <__malloc_unlock>
1001725a:	4626      	mov	r6, r4
1001725c:	4630      	mov	r0, r6
1001725e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017262:	07c9      	lsls	r1, r1, #31
10017264:	d4ae      	bmi.n	100171c4 <_realloc_r+0x84>
10017266:	f854 3c08 	ldr.w	r3, [r4, #-8]
1001726a:	eba9 0b03 	sub.w	fp, r9, r3
1001726e:	f8db 3004 	ldr.w	r3, [fp, #4]
10017272:	f023 0203 	bic.w	r2, r3, #3
10017276:	e7a0      	b.n	100171ba <_realloc_r+0x7a>
10017278:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001727c:	4611      	mov	r1, r2
1001727e:	f7fc bcfd 	b.w	10013c7c <_malloc_r>
10017282:	eb09 0105 	add.w	r1, r9, r5
10017286:	432b      	orrs	r3, r5
10017288:	f042 0201 	orr.w	r2, r2, #1
1001728c:	f8c9 3004 	str.w	r3, [r9, #4]
10017290:	604a      	str	r2, [r1, #4]
10017292:	6843      	ldr	r3, [r0, #4]
10017294:	f043 0301 	orr.w	r3, r3, #1
10017298:	6043      	str	r3, [r0, #4]
1001729a:	3108      	adds	r1, #8
1001729c:	4640      	mov	r0, r8
1001729e:	f002 fb2f 	bl	10019900 <_free_r>
100172a2:	e7d7      	b.n	10017254 <_realloc_r+0x114>
100172a4:	f020 0003 	bic.w	r0, r0, #3
100172a8:	19c2      	adds	r2, r0, r7
100172aa:	f105 0c10 	add.w	ip, r5, #16
100172ae:	4562      	cmp	r2, ip
100172b0:	f280 8091 	bge.w	100173d6 <_realloc_r+0x296>
100172b4:	07ca      	lsls	r2, r1, #31
100172b6:	d485      	bmi.n	100171c4 <_realloc_r+0x84>
100172b8:	f854 2c08 	ldr.w	r2, [r4, #-8]
100172bc:	eba9 0b02 	sub.w	fp, r9, r2
100172c0:	f8db 2004 	ldr.w	r2, [fp, #4]
100172c4:	f022 0203 	bic.w	r2, r2, #3
100172c8:	4410      	add	r0, r2
100172ca:	eb00 0a07 	add.w	sl, r0, r7
100172ce:	45d4      	cmp	ip, sl
100172d0:	f73f af73 	bgt.w	100171ba <_realloc_r+0x7a>
100172d4:	465e      	mov	r6, fp
100172d6:	f8db 100c 	ldr.w	r1, [fp, #12]
100172da:	f856 0f08 	ldr.w	r0, [r6, #8]!
100172de:	1f3a      	subs	r2, r7, #4
100172e0:	2a24      	cmp	r2, #36	@ 0x24
100172e2:	60c1      	str	r1, [r0, #12]
100172e4:	6088      	str	r0, [r1, #8]
100172e6:	f200 80ae 	bhi.w	10017446 <_realloc_r+0x306>
100172ea:	2a13      	cmp	r2, #19
100172ec:	f240 80a9 	bls.w	10017442 <_realloc_r+0x302>
100172f0:	6821      	ldr	r1, [r4, #0]
100172f2:	f8cb 1008 	str.w	r1, [fp, #8]
100172f6:	6861      	ldr	r1, [r4, #4]
100172f8:	f8cb 100c 	str.w	r1, [fp, #12]
100172fc:	2a1b      	cmp	r2, #27
100172fe:	f200 80a8 	bhi.w	10017452 <_realloc_r+0x312>
10017302:	3408      	adds	r4, #8
10017304:	f10b 0210 	add.w	r2, fp, #16
10017308:	6821      	ldr	r1, [r4, #0]
1001730a:	6011      	str	r1, [r2, #0]
1001730c:	6861      	ldr	r1, [r4, #4]
1001730e:	6051      	str	r1, [r2, #4]
10017310:	68a1      	ldr	r1, [r4, #8]
10017312:	6091      	str	r1, [r2, #8]
10017314:	eb0b 0105 	add.w	r1, fp, r5
10017318:	ebaa 0205 	sub.w	r2, sl, r5
1001731c:	f042 0201 	orr.w	r2, r2, #1
10017320:	6099      	str	r1, [r3, #8]
10017322:	604a      	str	r2, [r1, #4]
10017324:	f8db 3004 	ldr.w	r3, [fp, #4]
10017328:	f003 0301 	and.w	r3, r3, #1
1001732c:	432b      	orrs	r3, r5
1001732e:	4640      	mov	r0, r8
10017330:	f8cb 3004 	str.w	r3, [fp, #4]
10017334:	f7ff fe3e 	bl	10016fb4 <__malloc_unlock>
10017338:	e790      	b.n	1001725c <_realloc_r+0x11c>
1001733a:	6823      	ldr	r3, [r4, #0]
1001733c:	6003      	str	r3, [r0, #0]
1001733e:	6863      	ldr	r3, [r4, #4]
10017340:	6043      	str	r3, [r0, #4]
10017342:	2a1b      	cmp	r2, #27
10017344:	d83c      	bhi.n	100173c0 <_realloc_r+0x280>
10017346:	f104 0208 	add.w	r2, r4, #8
1001734a:	f100 0308 	add.w	r3, r0, #8
1001734e:	e754      	b.n	100171fa <_realloc_r+0xba>
10017350:	f850 3c04 	ldr.w	r3, [r0, #-4]
10017354:	f023 0303 	bic.w	r3, r3, #3
10017358:	441f      	add	r7, r3
1001735a:	e76b      	b.n	10017234 <_realloc_r+0xf4>
1001735c:	1f3a      	subs	r2, r7, #4
1001735e:	465e      	mov	r6, fp
10017360:	f8db 300c 	ldr.w	r3, [fp, #12]
10017364:	f856 1f08 	ldr.w	r1, [r6, #8]!
10017368:	2a24      	cmp	r2, #36	@ 0x24
1001736a:	60cb      	str	r3, [r1, #12]
1001736c:	6099      	str	r1, [r3, #8]
1001736e:	d822      	bhi.n	100173b6 <_realloc_r+0x276>
10017370:	2a13      	cmp	r2, #19
10017372:	d91e      	bls.n	100173b2 <_realloc_r+0x272>
10017374:	6823      	ldr	r3, [r4, #0]
10017376:	f8cb 3008 	str.w	r3, [fp, #8]
1001737a:	6863      	ldr	r3, [r4, #4]
1001737c:	f8cb 300c 	str.w	r3, [fp, #12]
10017380:	2a1b      	cmp	r2, #27
10017382:	d83b      	bhi.n	100173fc <_realloc_r+0x2bc>
10017384:	3408      	adds	r4, #8
10017386:	f10b 0310 	add.w	r3, fp, #16
1001738a:	6822      	ldr	r2, [r4, #0]
1001738c:	601a      	str	r2, [r3, #0]
1001738e:	6862      	ldr	r2, [r4, #4]
10017390:	605a      	str	r2, [r3, #4]
10017392:	68a2      	ldr	r2, [r4, #8]
10017394:	609a      	str	r2, [r3, #8]
10017396:	4634      	mov	r4, r6
10017398:	4657      	mov	r7, sl
1001739a:	46d9      	mov	r9, fp
1001739c:	e74a      	b.n	10017234 <_realloc_r+0xf4>
1001739e:	4621      	mov	r1, r4
100173a0:	f000 fd6a 	bl	10017e78 <memmove>
100173a4:	e72f      	b.n	10017206 <_realloc_r+0xc6>
100173a6:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
100173aa:	1f3a      	subs	r2, r7, #4
100173ac:	60cb      	str	r3, [r1, #12]
100173ae:	6099      	str	r1, [r3, #8]
100173b0:	e7d5      	b.n	1001735e <_realloc_r+0x21e>
100173b2:	4633      	mov	r3, r6
100173b4:	e7e9      	b.n	1001738a <_realloc_r+0x24a>
100173b6:	4621      	mov	r1, r4
100173b8:	4630      	mov	r0, r6
100173ba:	f000 fd5d 	bl	10017e78 <memmove>
100173be:	e7ea      	b.n	10017396 <_realloc_r+0x256>
100173c0:	68a3      	ldr	r3, [r4, #8]
100173c2:	6083      	str	r3, [r0, #8]
100173c4:	68e3      	ldr	r3, [r4, #12]
100173c6:	60c3      	str	r3, [r0, #12]
100173c8:	2a24      	cmp	r2, #36	@ 0x24
100173ca:	d027      	beq.n	1001741c <_realloc_r+0x2dc>
100173cc:	f104 0210 	add.w	r2, r4, #16
100173d0:	f100 0310 	add.w	r3, r0, #16
100173d4:	e711      	b.n	100171fa <_realloc_r+0xba>
100173d6:	eb09 0105 	add.w	r1, r9, r5
100173da:	6099      	str	r1, [r3, #8]
100173dc:	1b53      	subs	r3, r2, r5
100173de:	f043 0301 	orr.w	r3, r3, #1
100173e2:	604b      	str	r3, [r1, #4]
100173e4:	f854 3c04 	ldr.w	r3, [r4, #-4]
100173e8:	f003 0301 	and.w	r3, r3, #1
100173ec:	432b      	orrs	r3, r5
100173ee:	4640      	mov	r0, r8
100173f0:	f844 3c04 	str.w	r3, [r4, #-4]
100173f4:	f7ff fdde 	bl	10016fb4 <__malloc_unlock>
100173f8:	4626      	mov	r6, r4
100173fa:	e72f      	b.n	1001725c <_realloc_r+0x11c>
100173fc:	68a3      	ldr	r3, [r4, #8]
100173fe:	f8cb 3010 	str.w	r3, [fp, #16]
10017402:	68e3      	ldr	r3, [r4, #12]
10017404:	f8cb 3014 	str.w	r3, [fp, #20]
10017408:	2a24      	cmp	r2, #36	@ 0x24
1001740a:	d010      	beq.n	1001742e <_realloc_r+0x2ee>
1001740c:	3410      	adds	r4, #16
1001740e:	f10b 0318 	add.w	r3, fp, #24
10017412:	e7ba      	b.n	1001738a <_realloc_r+0x24a>
10017414:	4640      	mov	r0, r8
10017416:	f7ff fdcd 	bl	10016fb4 <__malloc_unlock>
1001741a:	e704      	b.n	10017226 <_realloc_r+0xe6>
1001741c:	6923      	ldr	r3, [r4, #16]
1001741e:	6103      	str	r3, [r0, #16]
10017420:	6961      	ldr	r1, [r4, #20]
10017422:	6141      	str	r1, [r0, #20]
10017424:	f104 0218 	add.w	r2, r4, #24
10017428:	f100 0318 	add.w	r3, r0, #24
1001742c:	e6e5      	b.n	100171fa <_realloc_r+0xba>
1001742e:	6923      	ldr	r3, [r4, #16]
10017430:	f8cb 3018 	str.w	r3, [fp, #24]
10017434:	6963      	ldr	r3, [r4, #20]
10017436:	f8cb 301c 	str.w	r3, [fp, #28]
1001743a:	3418      	adds	r4, #24
1001743c:	f10b 0320 	add.w	r3, fp, #32
10017440:	e7a3      	b.n	1001738a <_realloc_r+0x24a>
10017442:	4632      	mov	r2, r6
10017444:	e760      	b.n	10017308 <_realloc_r+0x1c8>
10017446:	4621      	mov	r1, r4
10017448:	4630      	mov	r0, r6
1001744a:	f000 fd15 	bl	10017e78 <memmove>
1001744e:	4b07      	ldr	r3, [pc, #28]	@ (1001746c <_realloc_r+0x32c>)
10017450:	e760      	b.n	10017314 <_realloc_r+0x1d4>
10017452:	68a1      	ldr	r1, [r4, #8]
10017454:	f8cb 1010 	str.w	r1, [fp, #16]
10017458:	68e1      	ldr	r1, [r4, #12]
1001745a:	f8cb 1014 	str.w	r1, [fp, #20]
1001745e:	2a24      	cmp	r2, #36	@ 0x24
10017460:	d006      	beq.n	10017470 <_realloc_r+0x330>
10017462:	3410      	adds	r4, #16
10017464:	f10b 0218 	add.w	r2, fp, #24
10017468:	e74e      	b.n	10017308 <_realloc_r+0x1c8>
1001746a:	bf00      	nop
1001746c:	20000018 	.word	0x20000018
10017470:	6922      	ldr	r2, [r4, #16]
10017472:	f8cb 2018 	str.w	r2, [fp, #24]
10017476:	6962      	ldr	r2, [r4, #20]
10017478:	f8cb 201c 	str.w	r2, [fp, #28]
1001747c:	3418      	adds	r4, #24
1001747e:	f10b 0220 	add.w	r2, fp, #32
10017482:	e741      	b.n	10017308 <_realloc_r+0x1c8>

10017484 <__sflush_r>:
10017484:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
10017488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001748a:	4607      	mov	r7, r0
1001748c:	0710      	lsls	r0, r2, #28
1001748e:	460c      	mov	r4, r1
10017490:	d446      	bmi.n	10017520 <__sflush_r+0x9c>
10017492:	6849      	ldr	r1, [r1, #4]
10017494:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
10017498:	2900      	cmp	r1, #0
1001749a:	81a3      	strh	r3, [r4, #12]
1001749c:	dd5c      	ble.n	10017558 <__sflush_r+0xd4>
1001749e:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
100174a0:	2d00      	cmp	r5, #0
100174a2:	d03b      	beq.n	1001751c <__sflush_r+0x98>
100174a4:	2100      	movs	r1, #0
100174a6:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
100174aa:	683e      	ldr	r6, [r7, #0]
100174ac:	6039      	str	r1, [r7, #0]
100174ae:	69e1      	ldr	r1, [r4, #28]
100174b0:	d15e      	bne.n	10017570 <__sflush_r+0xec>
100174b2:	2301      	movs	r3, #1
100174b4:	4638      	mov	r0, r7
100174b6:	47a8      	blx	r5
100174b8:	1c41      	adds	r1, r0, #1
100174ba:	4602      	mov	r2, r0
100174bc:	d068      	beq.n	10017590 <__sflush_r+0x10c>
100174be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100174c2:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
100174c4:	69e1      	ldr	r1, [r4, #28]
100174c6:	075b      	lsls	r3, r3, #29
100174c8:	d505      	bpl.n	100174d6 <__sflush_r+0x52>
100174ca:	6863      	ldr	r3, [r4, #4]
100174cc:	1ad2      	subs	r2, r2, r3
100174ce:	6b23      	ldr	r3, [r4, #48]	@ 0x30
100174d0:	b10b      	cbz	r3, 100174d6 <__sflush_r+0x52>
100174d2:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
100174d4:	1ad2      	subs	r2, r2, r3
100174d6:	2300      	movs	r3, #0
100174d8:	4638      	mov	r0, r7
100174da:	47a8      	blx	r5
100174dc:	1c45      	adds	r5, r0, #1
100174de:	d149      	bne.n	10017574 <__sflush_r+0xf0>
100174e0:	6839      	ldr	r1, [r7, #0]
100174e2:	291d      	cmp	r1, #29
100174e4:	d83c      	bhi.n	10017560 <__sflush_r+0xdc>
100174e6:	4a30      	ldr	r2, [pc, #192]	@ (100175a8 <__sflush_r+0x124>)
100174e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100174ec:	410a      	asrs	r2, r1
100174ee:	f012 0201 	ands.w	r2, r2, #1
100174f2:	d137      	bne.n	10017564 <__sflush_r+0xe0>
100174f4:	6062      	str	r2, [r4, #4]
100174f6:	6922      	ldr	r2, [r4, #16]
100174f8:	6022      	str	r2, [r4, #0]
100174fa:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
100174fe:	81a2      	strh	r2, [r4, #12]
10017500:	04da      	lsls	r2, r3, #19
10017502:	d44e      	bmi.n	100175a2 <__sflush_r+0x11e>
10017504:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10017506:	603e      	str	r6, [r7, #0]
10017508:	b141      	cbz	r1, 1001751c <__sflush_r+0x98>
1001750a:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001750e:	4299      	cmp	r1, r3
10017510:	d002      	beq.n	10017518 <__sflush_r+0x94>
10017512:	4638      	mov	r0, r7
10017514:	f002 f9f4 	bl	10019900 <_free_r>
10017518:	2300      	movs	r3, #0
1001751a:	6323      	str	r3, [r4, #48]	@ 0x30
1001751c:	2000      	movs	r0, #0
1001751e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10017520:	690e      	ldr	r6, [r1, #16]
10017522:	2e00      	cmp	r6, #0
10017524:	d0fa      	beq.n	1001751c <__sflush_r+0x98>
10017526:	680d      	ldr	r5, [r1, #0]
10017528:	600e      	str	r6, [r1, #0]
1001752a:	0791      	lsls	r1, r2, #30
1001752c:	bf0c      	ite	eq
1001752e:	6963      	ldreq	r3, [r4, #20]
10017530:	2300      	movne	r3, #0
10017532:	1bad      	subs	r5, r5, r6
10017534:	60a3      	str	r3, [r4, #8]
10017536:	e00c      	b.n	10017552 <__sflush_r+0xce>
10017538:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
1001753c:	69e1      	ldr	r1, [r4, #28]
1001753e:	462b      	mov	r3, r5
10017540:	4632      	mov	r2, r6
10017542:	4638      	mov	r0, r7
10017544:	47e0      	blx	ip
10017546:	f1b0 0c00 	subs.w	ip, r0, #0
1001754a:	eba5 050c 	sub.w	r5, r5, ip
1001754e:	4466      	add	r6, ip
10017550:	dd06      	ble.n	10017560 <__sflush_r+0xdc>
10017552:	2d00      	cmp	r5, #0
10017554:	dcf0      	bgt.n	10017538 <__sflush_r+0xb4>
10017556:	e7e1      	b.n	1001751c <__sflush_r+0x98>
10017558:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
1001755a:	2900      	cmp	r1, #0
1001755c:	dc9f      	bgt.n	1001749e <__sflush_r+0x1a>
1001755e:	e7dd      	b.n	1001751c <__sflush_r+0x98>
10017560:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017564:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017568:	81a3      	strh	r3, [r4, #12]
1001756a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001756e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10017570:	6d22      	ldr	r2, [r4, #80]	@ 0x50
10017572:	e7a8      	b.n	100174c6 <__sflush_r+0x42>
10017574:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017578:	6922      	ldr	r2, [r4, #16]
1001757a:	6022      	str	r2, [r4, #0]
1001757c:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10017580:	81a2      	strh	r2, [r4, #12]
10017582:	04db      	lsls	r3, r3, #19
10017584:	f04f 0200 	mov.w	r2, #0
10017588:	6062      	str	r2, [r4, #4]
1001758a:	d5bb      	bpl.n	10017504 <__sflush_r+0x80>
1001758c:	6520      	str	r0, [r4, #80]	@ 0x50
1001758e:	e7b9      	b.n	10017504 <__sflush_r+0x80>
10017590:	683b      	ldr	r3, [r7, #0]
10017592:	2b00      	cmp	r3, #0
10017594:	d093      	beq.n	100174be <__sflush_r+0x3a>
10017596:	2b1d      	cmp	r3, #29
10017598:	d001      	beq.n	1001759e <__sflush_r+0x11a>
1001759a:	2b16      	cmp	r3, #22
1001759c:	d1e0      	bne.n	10017560 <__sflush_r+0xdc>
1001759e:	603e      	str	r6, [r7, #0]
100175a0:	e7bc      	b.n	1001751c <__sflush_r+0x98>
100175a2:	2900      	cmp	r1, #0
100175a4:	d1ae      	bne.n	10017504 <__sflush_r+0x80>
100175a6:	e7f1      	b.n	1001758c <__sflush_r+0x108>
100175a8:	dfbffffe 	.word	0xdfbffffe

100175ac <_fflush_r>:
100175ac:	b538      	push	{r3, r4, r5, lr}
100175ae:	460c      	mov	r4, r1
100175b0:	4605      	mov	r5, r0
100175b2:	b108      	cbz	r0, 100175b8 <_fflush_r+0xc>
100175b4:	6b43      	ldr	r3, [r0, #52]	@ 0x34
100175b6:	b303      	cbz	r3, 100175fa <_fflush_r+0x4e>
100175b8:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
100175bc:	b188      	cbz	r0, 100175e2 <_fflush_r+0x36>
100175be:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100175c0:	07db      	lsls	r3, r3, #31
100175c2:	d401      	bmi.n	100175c8 <_fflush_r+0x1c>
100175c4:	0581      	lsls	r1, r0, #22
100175c6:	d50f      	bpl.n	100175e8 <_fflush_r+0x3c>
100175c8:	4628      	mov	r0, r5
100175ca:	4621      	mov	r1, r4
100175cc:	f7ff ff5a 	bl	10017484 <__sflush_r>
100175d0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100175d2:	07da      	lsls	r2, r3, #31
100175d4:	4605      	mov	r5, r0
100175d6:	d402      	bmi.n	100175de <_fflush_r+0x32>
100175d8:	89a3      	ldrh	r3, [r4, #12]
100175da:	059b      	lsls	r3, r3, #22
100175dc:	d508      	bpl.n	100175f0 <_fflush_r+0x44>
100175de:	4628      	mov	r0, r5
100175e0:	bd38      	pop	{r3, r4, r5, pc}
100175e2:	4605      	mov	r5, r0
100175e4:	4628      	mov	r0, r5
100175e6:	bd38      	pop	{r3, r4, r5, pc}
100175e8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100175ea:	f000 ff85 	bl	100184f8 <__retarget_lock_acquire_recursive>
100175ee:	e7eb      	b.n	100175c8 <_fflush_r+0x1c>
100175f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100175f2:	f000 ff83 	bl	100184fc <__retarget_lock_release_recursive>
100175f6:	4628      	mov	r0, r5
100175f8:	bd38      	pop	{r3, r4, r5, pc}
100175fa:	f000 f953 	bl	100178a4 <__sinit>
100175fe:	e7db      	b.n	100175b8 <_fflush_r+0xc>

10017600 <fflush>:
10017600:	b350      	cbz	r0, 10017658 <fflush+0x58>
10017602:	b538      	push	{r3, r4, r5, lr}
10017604:	4b17      	ldr	r3, [pc, #92]	@ (10017664 <fflush+0x64>)
10017606:	681d      	ldr	r5, [r3, #0]
10017608:	4604      	mov	r4, r0
1001760a:	b10d      	cbz	r5, 10017610 <fflush+0x10>
1001760c:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
1001760e:	b1bb      	cbz	r3, 10017640 <fflush+0x40>
10017610:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
10017614:	b188      	cbz	r0, 1001763a <fflush+0x3a>
10017616:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017618:	07db      	lsls	r3, r3, #31
1001761a:	d401      	bmi.n	10017620 <fflush+0x20>
1001761c:	0581      	lsls	r1, r0, #22
1001761e:	d513      	bpl.n	10017648 <fflush+0x48>
10017620:	4628      	mov	r0, r5
10017622:	4621      	mov	r1, r4
10017624:	f7ff ff2e 	bl	10017484 <__sflush_r>
10017628:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001762a:	07da      	lsls	r2, r3, #31
1001762c:	4605      	mov	r5, r0
1001762e:	d402      	bmi.n	10017636 <fflush+0x36>
10017630:	89a3      	ldrh	r3, [r4, #12]
10017632:	059b      	lsls	r3, r3, #22
10017634:	d50c      	bpl.n	10017650 <fflush+0x50>
10017636:	4628      	mov	r0, r5
10017638:	bd38      	pop	{r3, r4, r5, pc}
1001763a:	4605      	mov	r5, r0
1001763c:	4628      	mov	r0, r5
1001763e:	bd38      	pop	{r3, r4, r5, pc}
10017640:	4628      	mov	r0, r5
10017642:	f000 f92f 	bl	100178a4 <__sinit>
10017646:	e7e3      	b.n	10017610 <fflush+0x10>
10017648:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001764a:	f000 ff55 	bl	100184f8 <__retarget_lock_acquire_recursive>
1001764e:	e7e7      	b.n	10017620 <fflush+0x20>
10017650:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017652:	f000 ff53 	bl	100184fc <__retarget_lock_release_recursive>
10017656:	e7ee      	b.n	10017636 <fflush+0x36>
10017658:	4a03      	ldr	r2, [pc, #12]	@ (10017668 <fflush+0x68>)
1001765a:	4904      	ldr	r1, [pc, #16]	@ (1001766c <fflush+0x6c>)
1001765c:	4804      	ldr	r0, [pc, #16]	@ (10017670 <fflush+0x70>)
1001765e:	f000 bac7 	b.w	10017bf0 <_fwalk_sglue>
10017662:	bf00      	nop
10017664:	20000598 	.word	0x20000598
10017668:	20000420 	.word	0x20000420
1001766c:	100175ad 	.word	0x100175ad
10017670:	200005a0 	.word	0x200005a0

10017674 <sscanf>:
10017674:	b40e      	push	{r1, r2, r3}
10017676:	b530      	push	{r4, r5, lr}
10017678:	b09c      	sub	sp, #112	@ 0x70
1001767a:	ac1f      	add	r4, sp, #124	@ 0x7c
1001767c:	f44f 7201 	mov.w	r2, #516	@ 0x204
10017680:	f854 5b04 	ldr.w	r5, [r4], #4
10017684:	f8ad 2014 	strh.w	r2, [sp, #20]
10017688:	9002      	str	r0, [sp, #8]
1001768a:	9006      	str	r0, [sp, #24]
1001768c:	f001 f838 	bl	10018700 <strlen>
10017690:	9003      	str	r0, [sp, #12]
10017692:	9007      	str	r0, [sp, #28]
10017694:	480a      	ldr	r0, [pc, #40]	@ (100176c0 <sscanf+0x4c>)
10017696:	490b      	ldr	r1, [pc, #44]	@ (100176c4 <sscanf+0x50>)
10017698:	910a      	str	r1, [sp, #40]	@ 0x28
1001769a:	2300      	movs	r3, #0
1001769c:	f64f 7cff 	movw	ip, #65535	@ 0xffff
100176a0:	930e      	str	r3, [sp, #56]	@ 0x38
100176a2:	9313      	str	r3, [sp, #76]	@ 0x4c
100176a4:	462a      	mov	r2, r5
100176a6:	4623      	mov	r3, r4
100176a8:	a902      	add	r1, sp, #8
100176aa:	6800      	ldr	r0, [r0, #0]
100176ac:	f8ad c016 	strh.w	ip, [sp, #22]
100176b0:	9401      	str	r4, [sp, #4]
100176b2:	f004 f873 	bl	1001b79c <__ssvfscanf_r>
100176b6:	b01c      	add	sp, #112	@ 0x70
100176b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
100176bc:	b003      	add	sp, #12
100176be:	4770      	bx	lr
100176c0:	20000598 	.word	0x20000598
100176c4:	100176ed 	.word	0x100176ed

100176c8 <__sread>:
100176c8:	b510      	push	{r4, lr}
100176ca:	460c      	mov	r4, r1
100176cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
100176d0:	f000 fd20 	bl	10018114 <_read_r>
100176d4:	2800      	cmp	r0, #0
100176d6:	db03      	blt.n	100176e0 <__sread+0x18>
100176d8:	6d23      	ldr	r3, [r4, #80]	@ 0x50
100176da:	4403      	add	r3, r0
100176dc:	6523      	str	r3, [r4, #80]	@ 0x50
100176de:	bd10      	pop	{r4, pc}
100176e0:	89a3      	ldrh	r3, [r4, #12]
100176e2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
100176e6:	81a3      	strh	r3, [r4, #12]
100176e8:	bd10      	pop	{r4, pc}
100176ea:	bf00      	nop

100176ec <__seofread>:
100176ec:	2000      	movs	r0, #0
100176ee:	4770      	bx	lr

100176f0 <__swrite>:
100176f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100176f4:	460c      	mov	r4, r1
100176f6:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
100176fa:	461f      	mov	r7, r3
100176fc:	05cb      	lsls	r3, r1, #23
100176fe:	4605      	mov	r5, r0
10017700:	4616      	mov	r6, r2
10017702:	d40b      	bmi.n	1001771c <__swrite+0x2c>
10017704:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
10017708:	81a1      	strh	r1, [r4, #12]
1001770a:	463b      	mov	r3, r7
1001770c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10017710:	4632      	mov	r2, r6
10017712:	4628      	mov	r0, r5
10017714:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10017718:	f000 bd24 	b.w	10018164 <_write_r>
1001771c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10017720:	2302      	movs	r3, #2
10017722:	2200      	movs	r2, #0
10017724:	f000 fce0 	bl	100180e8 <_lseek_r>
10017728:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
1001772c:	e7ea      	b.n	10017704 <__swrite+0x14>
1001772e:	bf00      	nop

10017730 <__sseek>:
10017730:	b510      	push	{r4, lr}
10017732:	460c      	mov	r4, r1
10017734:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10017738:	f000 fcd6 	bl	100180e8 <_lseek_r>
1001773c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017740:	1c42      	adds	r2, r0, #1
10017742:	bf0e      	itee	eq
10017744:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
10017748:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
1001774c:	6520      	strne	r0, [r4, #80]	@ 0x50
1001774e:	81a3      	strh	r3, [r4, #12]
10017750:	bd10      	pop	{r4, pc}
10017752:	bf00      	nop

10017754 <__sclose>:
10017754:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10017758:	f000 bc9e 	b.w	10018098 <_close_r>

1001775c <stdio_exit_handler>:
1001775c:	4a02      	ldr	r2, [pc, #8]	@ (10017768 <stdio_exit_handler+0xc>)
1001775e:	4903      	ldr	r1, [pc, #12]	@ (1001776c <stdio_exit_handler+0x10>)
10017760:	4803      	ldr	r0, [pc, #12]	@ (10017770 <stdio_exit_handler+0x14>)
10017762:	f000 ba45 	b.w	10017bf0 <_fwalk_sglue>
10017766:	bf00      	nop
10017768:	20000420 	.word	0x20000420
1001776c:	10017081 	.word	0x10017081
10017770:	200005a0 	.word	0x200005a0

10017774 <cleanup_stdio>:
10017774:	4b0c      	ldr	r3, [pc, #48]	@ (100177a8 <cleanup_stdio+0x34>)
10017776:	6841      	ldr	r1, [r0, #4]
10017778:	4299      	cmp	r1, r3
1001777a:	b510      	push	{r4, lr}
1001777c:	4604      	mov	r4, r0
1001777e:	d001      	beq.n	10017784 <cleanup_stdio+0x10>
10017780:	f7ff fc7e 	bl	10017080 <_fclose_r>
10017784:	68a1      	ldr	r1, [r4, #8]
10017786:	4b09      	ldr	r3, [pc, #36]	@ (100177ac <cleanup_stdio+0x38>)
10017788:	4299      	cmp	r1, r3
1001778a:	d002      	beq.n	10017792 <cleanup_stdio+0x1e>
1001778c:	4620      	mov	r0, r4
1001778e:	f7ff fc77 	bl	10017080 <_fclose_r>
10017792:	68e1      	ldr	r1, [r4, #12]
10017794:	4b06      	ldr	r3, [pc, #24]	@ (100177b0 <cleanup_stdio+0x3c>)
10017796:	4299      	cmp	r1, r3
10017798:	d004      	beq.n	100177a4 <cleanup_stdio+0x30>
1001779a:	4620      	mov	r0, r4
1001779c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100177a0:	f7ff bc6e 	b.w	10017080 <_fclose_r>
100177a4:	bd10      	pop	{r4, pc}
100177a6:	bf00      	nop
100177a8:	20001488 	.word	0x20001488
100177ac:	200014f0 	.word	0x200014f0
100177b0:	20001558 	.word	0x20001558

100177b4 <global_stdio_init.part.0>:
100177b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100177b8:	4c31      	ldr	r4, [pc, #196]	@ (10017880 <global_stdio_init.part.0+0xcc>)
100177ba:	4b32      	ldr	r3, [pc, #200]	@ (10017884 <global_stdio_init.part.0+0xd0>)
100177bc:	4832      	ldr	r0, [pc, #200]	@ (10017888 <global_stdio_init.part.0+0xd4>)
100177be:	f8df 90cc 	ldr.w	r9, [pc, #204]	@ 1001788c <global_stdio_init.part.0+0xd8>
100177c2:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 10017890 <global_stdio_init.part.0+0xdc>
100177c6:	4f33      	ldr	r7, [pc, #204]	@ (10017894 <global_stdio_init.part.0+0xe0>)
100177c8:	6018      	str	r0, [r3, #0]
100177ca:	2500      	movs	r5, #0
100177cc:	4629      	mov	r1, r5
100177ce:	2304      	movs	r3, #4
100177d0:	2208      	movs	r2, #8
100177d2:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
100177d6:	4e30      	ldr	r6, [pc, #192]	@ (10017898 <global_stdio_init.part.0+0xe4>)
100177d8:	60e3      	str	r3, [r4, #12]
100177da:	e9c4 5500 	strd	r5, r5, [r4]
100177de:	e9c4 5504 	strd	r5, r5, [r4, #16]
100177e2:	60a5      	str	r5, [r4, #8]
100177e4:	6665      	str	r5, [r4, #100]	@ 0x64
100177e6:	61a5      	str	r5, [r4, #24]
100177e8:	f000 fbc6 	bl	10017f78 <memset>
100177ec:	f104 0058 	add.w	r0, r4, #88	@ 0x58
100177f0:	e9c4 4907 	strd	r4, r9, [r4, #28]
100177f4:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
100177f8:	62e6      	str	r6, [r4, #44]	@ 0x2c
100177fa:	f000 fe79 	bl	100184f0 <__retarget_lock_init_recursive>
100177fe:	4629      	mov	r1, r5
10017800:	4b26      	ldr	r3, [pc, #152]	@ (1001789c <global_stdio_init.part.0+0xe8>)
10017802:	6763      	str	r3, [r4, #116]	@ 0x74
10017804:	2208      	movs	r2, #8
10017806:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
1001780a:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
1001780e:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
10017812:	6725      	str	r5, [r4, #112]	@ 0x70
10017814:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
10017818:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
1001781c:	f000 fbac 	bl	10017f78 <memset>
10017820:	f104 0368 	add.w	r3, r4, #104	@ 0x68
10017824:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
10017828:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
1001782c:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
10017830:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
10017834:	f000 fe5c 	bl	100184f0 <__retarget_lock_init_recursive>
10017838:	4b19      	ldr	r3, [pc, #100]	@ (100178a0 <global_stdio_init.part.0+0xec>)
1001783a:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
1001783e:	4629      	mov	r1, r5
10017840:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
10017844:	2208      	movs	r2, #8
10017846:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
1001784a:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
1001784e:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
10017852:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
10017856:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
1001785a:	f000 fb8d 	bl	10017f78 <memset>
1001785e:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
10017862:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
10017866:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
1001786a:	f504 7094 	add.w	r0, r4, #296	@ 0x128
1001786e:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
10017872:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
10017876:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001787a:	f000 be39 	b.w	100184f0 <__retarget_lock_init_recursive>
1001787e:	bf00      	nop
10017880:	20001488 	.word	0x20001488
10017884:	200015c0 	.word	0x200015c0
10017888:	1001775d 	.word	0x1001775d
1001788c:	100176c9 	.word	0x100176c9
10017890:	100176f1 	.word	0x100176f1
10017894:	10017731 	.word	0x10017731
10017898:	10017755 	.word	0x10017755
1001789c:	00010009 	.word	0x00010009
100178a0:	00020012 	.word	0x00020012

100178a4 <__sinit>:
100178a4:	b510      	push	{r4, lr}
100178a6:	4604      	mov	r4, r0
100178a8:	480a      	ldr	r0, [pc, #40]	@ (100178d4 <__sinit+0x30>)
100178aa:	f000 fe25 	bl	100184f8 <__retarget_lock_acquire_recursive>
100178ae:	6b63      	ldr	r3, [r4, #52]	@ 0x34
100178b0:	b923      	cbnz	r3, 100178bc <__sinit+0x18>
100178b2:	4b09      	ldr	r3, [pc, #36]	@ (100178d8 <__sinit+0x34>)
100178b4:	4a09      	ldr	r2, [pc, #36]	@ (100178dc <__sinit+0x38>)
100178b6:	681b      	ldr	r3, [r3, #0]
100178b8:	6362      	str	r2, [r4, #52]	@ 0x34
100178ba:	b123      	cbz	r3, 100178c6 <__sinit+0x22>
100178bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100178c0:	4804      	ldr	r0, [pc, #16]	@ (100178d4 <__sinit+0x30>)
100178c2:	f000 be1b 	b.w	100184fc <__retarget_lock_release_recursive>
100178c6:	f7ff ff75 	bl	100177b4 <global_stdio_init.part.0>
100178ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100178ce:	4801      	ldr	r0, [pc, #4]	@ (100178d4 <__sinit+0x30>)
100178d0:	f000 be14 	b.w	100184fc <__retarget_lock_release_recursive>
100178d4:	200015d0 	.word	0x200015d0
100178d8:	200015c0 	.word	0x200015c0
100178dc:	10017775 	.word	0x10017775

100178e0 <__sfp_lock_acquire>:
100178e0:	4801      	ldr	r0, [pc, #4]	@ (100178e8 <__sfp_lock_acquire+0x8>)
100178e2:	f000 be09 	b.w	100184f8 <__retarget_lock_acquire_recursive>
100178e6:	bf00      	nop
100178e8:	200015d0 	.word	0x200015d0

100178ec <__sfp_lock_release>:
100178ec:	4801      	ldr	r0, [pc, #4]	@ (100178f4 <__sfp_lock_release+0x8>)
100178ee:	f000 be05 	b.w	100184fc <__retarget_lock_release_recursive>
100178f2:	bf00      	nop
100178f4:	200015d0 	.word	0x200015d0

100178f8 <__sfvwrite_r>:
100178f8:	6893      	ldr	r3, [r2, #8]
100178fa:	2b00      	cmp	r3, #0
100178fc:	f000 80f6 	beq.w	10017aec <__sfvwrite_r+0x1f4>
10017900:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017904:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
10017908:	f01c 0f08 	tst.w	ip, #8
1001790c:	b083      	sub	sp, #12
1001790e:	4690      	mov	r8, r2
10017910:	4681      	mov	r9, r0
10017912:	460c      	mov	r4, r1
10017914:	d031      	beq.n	1001797a <__sfvwrite_r+0x82>
10017916:	690b      	ldr	r3, [r1, #16]
10017918:	b37b      	cbz	r3, 1001797a <__sfvwrite_r+0x82>
1001791a:	f01c 0702 	ands.w	r7, ip, #2
1001791e:	f8d8 6000 	ldr.w	r6, [r8]
10017922:	d038      	beq.n	10017996 <__sfvwrite_r+0x9e>
10017924:	2700      	movs	r7, #0
10017926:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
1001792a:	69e1      	ldr	r1, [r4, #28]
1001792c:	f8df a2bc 	ldr.w	sl, [pc, #700]	@ 10017bec <__sfvwrite_r+0x2f4>
10017930:	463d      	mov	r5, r7
10017932:	4555      	cmp	r5, sl
10017934:	462b      	mov	r3, r5
10017936:	463a      	mov	r2, r7
10017938:	bf28      	it	cs
1001793a:	4653      	movcs	r3, sl
1001793c:	4648      	mov	r0, r9
1001793e:	b1c5      	cbz	r5, 10017972 <__sfvwrite_r+0x7a>
10017940:	47d8      	blx	fp
10017942:	2800      	cmp	r0, #0
10017944:	f340 80c8 	ble.w	10017ad8 <__sfvwrite_r+0x1e0>
10017948:	f8d8 3008 	ldr.w	r3, [r8, #8]
1001794c:	1a1b      	subs	r3, r3, r0
1001794e:	4407      	add	r7, r0
10017950:	1a2d      	subs	r5, r5, r0
10017952:	f8c8 3008 	str.w	r3, [r8, #8]
10017956:	2b00      	cmp	r3, #0
10017958:	f000 80b4 	beq.w	10017ac4 <__sfvwrite_r+0x1cc>
1001795c:	4555      	cmp	r5, sl
1001795e:	462b      	mov	r3, r5
10017960:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10017964:	69e1      	ldr	r1, [r4, #28]
10017966:	bf28      	it	cs
10017968:	4653      	movcs	r3, sl
1001796a:	463a      	mov	r2, r7
1001796c:	4648      	mov	r0, r9
1001796e:	2d00      	cmp	r5, #0
10017970:	d1e6      	bne.n	10017940 <__sfvwrite_r+0x48>
10017972:	e9d6 7500 	ldrd	r7, r5, [r6]
10017976:	3608      	adds	r6, #8
10017978:	e7db      	b.n	10017932 <__sfvwrite_r+0x3a>
1001797a:	4621      	mov	r1, r4
1001797c:	4648      	mov	r0, r9
1001797e:	f000 f95b 	bl	10017c38 <__swsetup_r>
10017982:	2800      	cmp	r0, #0
10017984:	f040 80ad 	bne.w	10017ae2 <__sfvwrite_r+0x1ea>
10017988:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
1001798c:	f8d8 6000 	ldr.w	r6, [r8]
10017990:	f01c 0702 	ands.w	r7, ip, #2
10017994:	d1c6      	bne.n	10017924 <__sfvwrite_r+0x2c>
10017996:	f01c 0a01 	ands.w	sl, ip, #1
1001799a:	d163      	bne.n	10017a64 <__sfvwrite_r+0x16c>
1001799c:	6823      	ldr	r3, [r4, #0]
1001799e:	68a1      	ldr	r1, [r4, #8]
100179a0:	4657      	mov	r7, sl
100179a2:	4618      	mov	r0, r3
100179a4:	468b      	mov	fp, r1
100179a6:	2f00      	cmp	r7, #0
100179a8:	d058      	beq.n	10017a5c <__sfvwrite_r+0x164>
100179aa:	f41c 7f00 	tst.w	ip, #512	@ 0x200
100179ae:	f000 80b1 	beq.w	10017b14 <__sfvwrite_r+0x21c>
100179b2:	42b9      	cmp	r1, r7
100179b4:	460a      	mov	r2, r1
100179b6:	f200 80dd 	bhi.w	10017b74 <__sfvwrite_r+0x27c>
100179ba:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
100179be:	d02f      	beq.n	10017a20 <__sfvwrite_r+0x128>
100179c0:	6921      	ldr	r1, [r4, #16]
100179c2:	6962      	ldr	r2, [r4, #20]
100179c4:	1a5d      	subs	r5, r3, r1
100179c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
100179ca:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
100179ce:	1c6b      	adds	r3, r5, #1
100179d0:	1052      	asrs	r2, r2, #1
100179d2:	443b      	add	r3, r7
100179d4:	4293      	cmp	r3, r2
100179d6:	bf92      	itee	ls
100179d8:	4693      	movls	fp, r2
100179da:	469b      	movhi	fp, r3
100179dc:	461a      	movhi	r2, r3
100179de:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
100179e2:	f000 80e6 	beq.w	10017bb2 <__sfvwrite_r+0x2ba>
100179e6:	4611      	mov	r1, r2
100179e8:	4648      	mov	r0, r9
100179ea:	f7fc f947 	bl	10013c7c <_malloc_r>
100179ee:	2800      	cmp	r0, #0
100179f0:	f000 80f5 	beq.w	10017bde <__sfvwrite_r+0x2e6>
100179f4:	462a      	mov	r2, r5
100179f6:	6921      	ldr	r1, [r4, #16]
100179f8:	9001      	str	r0, [sp, #4]
100179fa:	f000 fdd1 	bl	100185a0 <memcpy>
100179fe:	89a2      	ldrh	r2, [r4, #12]
10017a00:	9b01      	ldr	r3, [sp, #4]
10017a02:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10017a06:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
10017a0a:	81a2      	strh	r2, [r4, #12]
10017a0c:	1958      	adds	r0, r3, r5
10017a0e:	ebab 0505 	sub.w	r5, fp, r5
10017a12:	f8c4 b014 	str.w	fp, [r4, #20]
10017a16:	6123      	str	r3, [r4, #16]
10017a18:	60a5      	str	r5, [r4, #8]
10017a1a:	6020      	str	r0, [r4, #0]
10017a1c:	46bb      	mov	fp, r7
10017a1e:	463a      	mov	r2, r7
10017a20:	4651      	mov	r1, sl
10017a22:	9201      	str	r2, [sp, #4]
10017a24:	f000 fa28 	bl	10017e78 <memmove>
10017a28:	68a1      	ldr	r1, [r4, #8]
10017a2a:	6823      	ldr	r3, [r4, #0]
10017a2c:	9a01      	ldr	r2, [sp, #4]
10017a2e:	eba1 010b 	sub.w	r1, r1, fp
10017a32:	441a      	add	r2, r3
10017a34:	463d      	mov	r5, r7
10017a36:	60a1      	str	r1, [r4, #8]
10017a38:	6022      	str	r2, [r4, #0]
10017a3a:	2700      	movs	r7, #0
10017a3c:	f8d8 3008 	ldr.w	r3, [r8, #8]
10017a40:	1b5b      	subs	r3, r3, r5
10017a42:	44aa      	add	sl, r5
10017a44:	f8c8 3008 	str.w	r3, [r8, #8]
10017a48:	2b00      	cmp	r3, #0
10017a4a:	d03b      	beq.n	10017ac4 <__sfvwrite_r+0x1cc>
10017a4c:	6823      	ldr	r3, [r4, #0]
10017a4e:	68a1      	ldr	r1, [r4, #8]
10017a50:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10017a54:	4618      	mov	r0, r3
10017a56:	468b      	mov	fp, r1
10017a58:	2f00      	cmp	r7, #0
10017a5a:	d1a6      	bne.n	100179aa <__sfvwrite_r+0xb2>
10017a5c:	e9d6 a700 	ldrd	sl, r7, [r6]
10017a60:	3608      	adds	r6, #8
10017a62:	e79e      	b.n	100179a2 <__sfvwrite_r+0xaa>
10017a64:	4638      	mov	r0, r7
10017a66:	46bb      	mov	fp, r7
10017a68:	463d      	mov	r5, r7
10017a6a:	2d00      	cmp	r5, #0
10017a6c:	d040      	beq.n	10017af0 <__sfvwrite_r+0x1f8>
10017a6e:	2800      	cmp	r0, #0
10017a70:	d045      	beq.n	10017afe <__sfvwrite_r+0x206>
10017a72:	463a      	mov	r2, r7
10017a74:	e9d4 c304 	ldrd	ip, r3, [r4, #16]
10017a78:	6820      	ldr	r0, [r4, #0]
10017a7a:	68a1      	ldr	r1, [r4, #8]
10017a7c:	42aa      	cmp	r2, r5
10017a7e:	bf28      	it	cs
10017a80:	462a      	movcs	r2, r5
10017a82:	4560      	cmp	r0, ip
10017a84:	d904      	bls.n	10017a90 <__sfvwrite_r+0x198>
10017a86:	eb01 0a03 	add.w	sl, r1, r3
10017a8a:	4552      	cmp	r2, sl
10017a8c:	f300 8082 	bgt.w	10017b94 <__sfvwrite_r+0x29c>
10017a90:	4293      	cmp	r3, r2
10017a92:	dc72      	bgt.n	10017b7a <__sfvwrite_r+0x282>
10017a94:	69e1      	ldr	r1, [r4, #28]
10017a96:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
10017a9a:	465a      	mov	r2, fp
10017a9c:	4648      	mov	r0, r9
10017a9e:	47e0      	blx	ip
10017aa0:	f1b0 0a00 	subs.w	sl, r0, #0
10017aa4:	dd18      	ble.n	10017ad8 <__sfvwrite_r+0x1e0>
10017aa6:	ebb7 070a 	subs.w	r7, r7, sl
10017aaa:	d00f      	beq.n	10017acc <__sfvwrite_r+0x1d4>
10017aac:	2001      	movs	r0, #1
10017aae:	f8d8 3008 	ldr.w	r3, [r8, #8]
10017ab2:	eba3 030a 	sub.w	r3, r3, sl
10017ab6:	44d3      	add	fp, sl
10017ab8:	eba5 050a 	sub.w	r5, r5, sl
10017abc:	f8c8 3008 	str.w	r3, [r8, #8]
10017ac0:	2b00      	cmp	r3, #0
10017ac2:	d1d2      	bne.n	10017a6a <__sfvwrite_r+0x172>
10017ac4:	2000      	movs	r0, #0
10017ac6:	b003      	add	sp, #12
10017ac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017acc:	4621      	mov	r1, r4
10017ace:	4648      	mov	r0, r9
10017ad0:	f7ff fd6c 	bl	100175ac <_fflush_r>
10017ad4:	2800      	cmp	r0, #0
10017ad6:	d0ea      	beq.n	10017aae <__sfvwrite_r+0x1b6>
10017ad8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017adc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017ae0:	81a3      	strh	r3, [r4, #12]
10017ae2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017ae6:	b003      	add	sp, #12
10017ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017aec:	2000      	movs	r0, #0
10017aee:	4770      	bx	lr
10017af0:	6875      	ldr	r5, [r6, #4]
10017af2:	4633      	mov	r3, r6
10017af4:	3608      	adds	r6, #8
10017af6:	2d00      	cmp	r5, #0
10017af8:	d0fa      	beq.n	10017af0 <__sfvwrite_r+0x1f8>
10017afa:	f8d3 b000 	ldr.w	fp, [r3]
10017afe:	462a      	mov	r2, r5
10017b00:	210a      	movs	r1, #10
10017b02:	4658      	mov	r0, fp
10017b04:	f000 fcfc 	bl	10018500 <memchr>
10017b08:	2800      	cmp	r0, #0
10017b0a:	d065      	beq.n	10017bd8 <__sfvwrite_r+0x2e0>
10017b0c:	3001      	adds	r0, #1
10017b0e:	eba0 070b 	sub.w	r7, r0, fp
10017b12:	e7ae      	b.n	10017a72 <__sfvwrite_r+0x17a>
10017b14:	6922      	ldr	r2, [r4, #16]
10017b16:	429a      	cmp	r2, r3
10017b18:	d314      	bcc.n	10017b44 <__sfvwrite_r+0x24c>
10017b1a:	6962      	ldr	r2, [r4, #20]
10017b1c:	42ba      	cmp	r2, r7
10017b1e:	d811      	bhi.n	10017b44 <__sfvwrite_r+0x24c>
10017b20:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10017b24:	42bb      	cmp	r3, r7
10017b26:	bf28      	it	cs
10017b28:	463b      	movcs	r3, r7
10017b2a:	6a65      	ldr	r5, [r4, #36]	@ 0x24
10017b2c:	fb93 f3f2 	sdiv	r3, r3, r2
10017b30:	69e1      	ldr	r1, [r4, #28]
10017b32:	fb02 f303 	mul.w	r3, r2, r3
10017b36:	4648      	mov	r0, r9
10017b38:	4652      	mov	r2, sl
10017b3a:	47a8      	blx	r5
10017b3c:	1e05      	subs	r5, r0, #0
10017b3e:	ddcb      	ble.n	10017ad8 <__sfvwrite_r+0x1e0>
10017b40:	1b7f      	subs	r7, r7, r5
10017b42:	e77b      	b.n	10017a3c <__sfvwrite_r+0x144>
10017b44:	42b9      	cmp	r1, r7
10017b46:	bf28      	it	cs
10017b48:	4639      	movcs	r1, r7
10017b4a:	460d      	mov	r5, r1
10017b4c:	4618      	mov	r0, r3
10017b4e:	460a      	mov	r2, r1
10017b50:	4651      	mov	r1, sl
10017b52:	f000 f991 	bl	10017e78 <memmove>
10017b56:	68a1      	ldr	r1, [r4, #8]
10017b58:	6823      	ldr	r3, [r4, #0]
10017b5a:	1b49      	subs	r1, r1, r5
10017b5c:	442b      	add	r3, r5
10017b5e:	60a1      	str	r1, [r4, #8]
10017b60:	6023      	str	r3, [r4, #0]
10017b62:	2900      	cmp	r1, #0
10017b64:	d1ec      	bne.n	10017b40 <__sfvwrite_r+0x248>
10017b66:	4621      	mov	r1, r4
10017b68:	4648      	mov	r0, r9
10017b6a:	f7ff fd1f 	bl	100175ac <_fflush_r>
10017b6e:	2800      	cmp	r0, #0
10017b70:	d0e6      	beq.n	10017b40 <__sfvwrite_r+0x248>
10017b72:	e7b1      	b.n	10017ad8 <__sfvwrite_r+0x1e0>
10017b74:	46bb      	mov	fp, r7
10017b76:	463a      	mov	r2, r7
10017b78:	e752      	b.n	10017a20 <__sfvwrite_r+0x128>
10017b7a:	4659      	mov	r1, fp
10017b7c:	9201      	str	r2, [sp, #4]
10017b7e:	f000 f97b 	bl	10017e78 <memmove>
10017b82:	9a01      	ldr	r2, [sp, #4]
10017b84:	68a3      	ldr	r3, [r4, #8]
10017b86:	1a9b      	subs	r3, r3, r2
10017b88:	60a3      	str	r3, [r4, #8]
10017b8a:	6823      	ldr	r3, [r4, #0]
10017b8c:	4413      	add	r3, r2
10017b8e:	6023      	str	r3, [r4, #0]
10017b90:	4692      	mov	sl, r2
10017b92:	e788      	b.n	10017aa6 <__sfvwrite_r+0x1ae>
10017b94:	4659      	mov	r1, fp
10017b96:	4652      	mov	r2, sl
10017b98:	f000 f96e 	bl	10017e78 <memmove>
10017b9c:	6823      	ldr	r3, [r4, #0]
10017b9e:	4453      	add	r3, sl
10017ba0:	6023      	str	r3, [r4, #0]
10017ba2:	4621      	mov	r1, r4
10017ba4:	4648      	mov	r0, r9
10017ba6:	f7ff fd01 	bl	100175ac <_fflush_r>
10017baa:	2800      	cmp	r0, #0
10017bac:	f43f af7b 	beq.w	10017aa6 <__sfvwrite_r+0x1ae>
10017bb0:	e792      	b.n	10017ad8 <__sfvwrite_r+0x1e0>
10017bb2:	4648      	mov	r0, r9
10017bb4:	f7ff fac4 	bl	10017140 <_realloc_r>
10017bb8:	4603      	mov	r3, r0
10017bba:	2800      	cmp	r0, #0
10017bbc:	f47f af26 	bne.w	10017a0c <__sfvwrite_r+0x114>
10017bc0:	6921      	ldr	r1, [r4, #16]
10017bc2:	4648      	mov	r0, r9
10017bc4:	f001 fe9c 	bl	10019900 <_free_r>
10017bc8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017bcc:	220c      	movs	r2, #12
10017bce:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10017bd2:	f8c9 2000 	str.w	r2, [r9]
10017bd6:	e781      	b.n	10017adc <__sfvwrite_r+0x1e4>
10017bd8:	1c6a      	adds	r2, r5, #1
10017bda:	4617      	mov	r7, r2
10017bdc:	e74a      	b.n	10017a74 <__sfvwrite_r+0x17c>
10017bde:	220c      	movs	r2, #12
10017be0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017be4:	f8c9 2000 	str.w	r2, [r9]
10017be8:	e778      	b.n	10017adc <__sfvwrite_r+0x1e4>
10017bea:	bf00      	nop
10017bec:	7ffffc00 	.word	0x7ffffc00

10017bf0 <_fwalk_sglue>:
10017bf0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10017bf4:	4680      	mov	r8, r0
10017bf6:	460f      	mov	r7, r1
10017bf8:	4616      	mov	r6, r2
10017bfa:	f04f 0900 	mov.w	r9, #0
10017bfe:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
10017c02:	3d01      	subs	r5, #1
10017c04:	d411      	bmi.n	10017c2a <_fwalk_sglue+0x3a>
10017c06:	89a3      	ldrh	r3, [r4, #12]
10017c08:	2b01      	cmp	r3, #1
10017c0a:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
10017c0e:	d908      	bls.n	10017c22 <_fwalk_sglue+0x32>
10017c10:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
10017c14:	3301      	adds	r3, #1
10017c16:	4621      	mov	r1, r4
10017c18:	d003      	beq.n	10017c22 <_fwalk_sglue+0x32>
10017c1a:	4640      	mov	r0, r8
10017c1c:	47b8      	blx	r7
10017c1e:	ea49 0900 	orr.w	r9, r9, r0
10017c22:	1c6b      	adds	r3, r5, #1
10017c24:	f104 0468 	add.w	r4, r4, #104	@ 0x68
10017c28:	d1ed      	bne.n	10017c06 <_fwalk_sglue+0x16>
10017c2a:	6836      	ldr	r6, [r6, #0]
10017c2c:	2e00      	cmp	r6, #0
10017c2e:	d1e6      	bne.n	10017bfe <_fwalk_sglue+0xe>
10017c30:	4648      	mov	r0, r9
10017c32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10017c36:	bf00      	nop

10017c38 <__swsetup_r>:
10017c38:	b538      	push	{r3, r4, r5, lr}
10017c3a:	4b2e      	ldr	r3, [pc, #184]	@ (10017cf4 <__swsetup_r+0xbc>)
10017c3c:	681b      	ldr	r3, [r3, #0]
10017c3e:	4605      	mov	r5, r0
10017c40:	460c      	mov	r4, r1
10017c42:	b113      	cbz	r3, 10017c4a <__swsetup_r+0x12>
10017c44:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
10017c46:	2a00      	cmp	r2, #0
10017c48:	d04b      	beq.n	10017ce2 <__swsetup_r+0xaa>
10017c4a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017c4e:	0718      	lsls	r0, r3, #28
10017c50:	d51c      	bpl.n	10017c8c <__swsetup_r+0x54>
10017c52:	6922      	ldr	r2, [r4, #16]
10017c54:	b322      	cbz	r2, 10017ca0 <__swsetup_r+0x68>
10017c56:	f013 0101 	ands.w	r1, r3, #1
10017c5a:	d007      	beq.n	10017c6c <__swsetup_r+0x34>
10017c5c:	6961      	ldr	r1, [r4, #20]
10017c5e:	2000      	movs	r0, #0
10017c60:	4249      	negs	r1, r1
10017c62:	60a0      	str	r0, [r4, #8]
10017c64:	61a1      	str	r1, [r4, #24]
10017c66:	b13a      	cbz	r2, 10017c78 <__swsetup_r+0x40>
10017c68:	2000      	movs	r0, #0
10017c6a:	bd38      	pop	{r3, r4, r5, pc}
10017c6c:	0798      	lsls	r0, r3, #30
10017c6e:	bf58      	it	pl
10017c70:	6961      	ldrpl	r1, [r4, #20]
10017c72:	60a1      	str	r1, [r4, #8]
10017c74:	2a00      	cmp	r2, #0
10017c76:	d1f7      	bne.n	10017c68 <__swsetup_r+0x30>
10017c78:	0619      	lsls	r1, r3, #24
10017c7a:	bf58      	it	pl
10017c7c:	4610      	movpl	r0, r2
10017c7e:	d5f4      	bpl.n	10017c6a <__swsetup_r+0x32>
10017c80:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017c84:	81a3      	strh	r3, [r4, #12]
10017c86:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017c8a:	bd38      	pop	{r3, r4, r5, pc}
10017c8c:	06d9      	lsls	r1, r3, #27
10017c8e:	d52c      	bpl.n	10017cea <__swsetup_r+0xb2>
10017c90:	075a      	lsls	r2, r3, #29
10017c92:	d412      	bmi.n	10017cba <__swsetup_r+0x82>
10017c94:	6922      	ldr	r2, [r4, #16]
10017c96:	f043 0308 	orr.w	r3, r3, #8
10017c9a:	81a3      	strh	r3, [r4, #12]
10017c9c:	2a00      	cmp	r2, #0
10017c9e:	d1da      	bne.n	10017c56 <__swsetup_r+0x1e>
10017ca0:	f403 7120 	and.w	r1, r3, #640	@ 0x280
10017ca4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10017ca8:	d0d5      	beq.n	10017c56 <__swsetup_r+0x1e>
10017caa:	4621      	mov	r1, r4
10017cac:	4628      	mov	r0, r5
10017cae:	f003 fd07 	bl	1001b6c0 <__smakebuf_r>
10017cb2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017cb6:	6922      	ldr	r2, [r4, #16]
10017cb8:	e7cd      	b.n	10017c56 <__swsetup_r+0x1e>
10017cba:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10017cbc:	b151      	cbz	r1, 10017cd4 <__swsetup_r+0x9c>
10017cbe:	f104 0240 	add.w	r2, r4, #64	@ 0x40
10017cc2:	4291      	cmp	r1, r2
10017cc4:	d004      	beq.n	10017cd0 <__swsetup_r+0x98>
10017cc6:	4628      	mov	r0, r5
10017cc8:	f001 fe1a 	bl	10019900 <_free_r>
10017ccc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017cd0:	2200      	movs	r2, #0
10017cd2:	6322      	str	r2, [r4, #48]	@ 0x30
10017cd4:	6922      	ldr	r2, [r4, #16]
10017cd6:	2100      	movs	r1, #0
10017cd8:	e9c4 2100 	strd	r2, r1, [r4]
10017cdc:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
10017ce0:	e7d9      	b.n	10017c96 <__swsetup_r+0x5e>
10017ce2:	4618      	mov	r0, r3
10017ce4:	f7ff fdde 	bl	100178a4 <__sinit>
10017ce8:	e7af      	b.n	10017c4a <__swsetup_r+0x12>
10017cea:	2209      	movs	r2, #9
10017cec:	602a      	str	r2, [r5, #0]
10017cee:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017cf2:	e7c7      	b.n	10017c84 <__swsetup_r+0x4c>
10017cf4:	20000598 	.word	0x20000598

10017cf8 <_gets_r>:
10017cf8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10017cfa:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10017cfc:	6844      	ldr	r4, [r0, #4]
10017cfe:	4607      	mov	r7, r0
10017d00:	460d      	mov	r5, r1
10017d02:	2b00      	cmp	r3, #0
10017d04:	d033      	beq.n	10017d6e <_gets_r+0x76>
10017d06:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017d08:	07d9      	lsls	r1, r3, #31
10017d0a:	d402      	bmi.n	10017d12 <_gets_r+0x1a>
10017d0c:	89a3      	ldrh	r3, [r4, #12]
10017d0e:	059a      	lsls	r2, r3, #22
10017d10:	d524      	bpl.n	10017d5c <_gets_r+0x64>
10017d12:	462e      	mov	r6, r5
10017d14:	e007      	b.n	10017d26 <_gets_r+0x2e>
10017d16:	6823      	ldr	r3, [r4, #0]
10017d18:	1c5a      	adds	r2, r3, #1
10017d1a:	6022      	str	r2, [r4, #0]
10017d1c:	781b      	ldrb	r3, [r3, #0]
10017d1e:	2b0a      	cmp	r3, #10
10017d20:	d012      	beq.n	10017d48 <_gets_r+0x50>
10017d22:	f806 3b01 	strb.w	r3, [r6], #1
10017d26:	6863      	ldr	r3, [r4, #4]
10017d28:	3b01      	subs	r3, #1
10017d2a:	2b00      	cmp	r3, #0
10017d2c:	6063      	str	r3, [r4, #4]
10017d2e:	daf2      	bge.n	10017d16 <_gets_r+0x1e>
10017d30:	4621      	mov	r1, r4
10017d32:	4638      	mov	r0, r7
10017d34:	f005 ff5c 	bl	1001dbf0 <__srget_r>
10017d38:	280a      	cmp	r0, #10
10017d3a:	d005      	beq.n	10017d48 <_gets_r+0x50>
10017d3c:	1c43      	adds	r3, r0, #1
10017d3e:	d001      	beq.n	10017d44 <_gets_r+0x4c>
10017d40:	b2c3      	uxtb	r3, r0
10017d42:	e7ee      	b.n	10017d22 <_gets_r+0x2a>
10017d44:	42ae      	cmp	r6, r5
10017d46:	d015      	beq.n	10017d74 <_gets_r+0x7c>
10017d48:	2300      	movs	r3, #0
10017d4a:	7033      	strb	r3, [r6, #0]
10017d4c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017d4e:	07d8      	lsls	r0, r3, #31
10017d50:	d402      	bmi.n	10017d58 <_gets_r+0x60>
10017d52:	89a3      	ldrh	r3, [r4, #12]
10017d54:	059b      	lsls	r3, r3, #22
10017d56:	d505      	bpl.n	10017d64 <_gets_r+0x6c>
10017d58:	4628      	mov	r0, r5
10017d5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10017d5c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017d5e:	f000 fbcb 	bl	100184f8 <__retarget_lock_acquire_recursive>
10017d62:	e7d6      	b.n	10017d12 <_gets_r+0x1a>
10017d64:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017d66:	f000 fbc9 	bl	100184fc <__retarget_lock_release_recursive>
10017d6a:	4628      	mov	r0, r5
10017d6c:	e7f5      	b.n	10017d5a <_gets_r+0x62>
10017d6e:	f7ff fd99 	bl	100178a4 <__sinit>
10017d72:	e7c8      	b.n	10017d06 <_gets_r+0xe>
10017d74:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017d76:	07d9      	lsls	r1, r3, #31
10017d78:	d501      	bpl.n	10017d7e <_gets_r+0x86>
10017d7a:	2000      	movs	r0, #0
10017d7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10017d7e:	89a3      	ldrh	r3, [r4, #12]
10017d80:	059a      	lsls	r2, r3, #22
10017d82:	d4fa      	bmi.n	10017d7a <_gets_r+0x82>
10017d84:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017d86:	f000 fbb9 	bl	100184fc <__retarget_lock_release_recursive>
10017d8a:	e7f6      	b.n	10017d7a <_gets_r+0x82>

10017d8c <gets>:
10017d8c:	4b02      	ldr	r3, [pc, #8]	@ (10017d98 <gets+0xc>)
10017d8e:	4601      	mov	r1, r0
10017d90:	6818      	ldr	r0, [r3, #0]
10017d92:	f7ff bfb1 	b.w	10017cf8 <_gets_r>
10017d96:	bf00      	nop
10017d98:	20000598 	.word	0x20000598

10017d9c <__fputwc>:
10017d9c:	b570      	push	{r4, r5, r6, lr}
10017d9e:	b082      	sub	sp, #8
10017da0:	4606      	mov	r6, r0
10017da2:	460d      	mov	r5, r1
10017da4:	4614      	mov	r4, r2
10017da6:	f000 f96d 	bl	10018084 <__locale_mb_cur_max>
10017daa:	2801      	cmp	r0, #1
10017dac:	d102      	bne.n	10017db4 <__fputwc+0x18>
10017dae:	1e6b      	subs	r3, r5, #1
10017db0:	2bfe      	cmp	r3, #254	@ 0xfe
10017db2:	d926      	bls.n	10017e02 <__fputwc+0x66>
10017db4:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
10017db8:	462a      	mov	r2, r5
10017dba:	a901      	add	r1, sp, #4
10017dbc:	4630      	mov	r0, r6
10017dbe:	f000 fd0b 	bl	100187d8 <_wcrtomb_r>
10017dc2:	1c43      	adds	r3, r0, #1
10017dc4:	d020      	beq.n	10017e08 <__fputwc+0x6c>
10017dc6:	b178      	cbz	r0, 10017de8 <__fputwc+0x4c>
10017dc8:	68a3      	ldr	r3, [r4, #8]
10017dca:	f89d 1004 	ldrb.w	r1, [sp, #4]
10017dce:	3b01      	subs	r3, #1
10017dd0:	2b00      	cmp	r3, #0
10017dd2:	60a3      	str	r3, [r4, #8]
10017dd4:	da04      	bge.n	10017de0 <__fputwc+0x44>
10017dd6:	69a2      	ldr	r2, [r4, #24]
10017dd8:	4293      	cmp	r3, r2
10017dda:	db08      	blt.n	10017dee <__fputwc+0x52>
10017ddc:	290a      	cmp	r1, #10
10017dde:	d006      	beq.n	10017dee <__fputwc+0x52>
10017de0:	6823      	ldr	r3, [r4, #0]
10017de2:	1c5a      	adds	r2, r3, #1
10017de4:	6022      	str	r2, [r4, #0]
10017de6:	7019      	strb	r1, [r3, #0]
10017de8:	4628      	mov	r0, r5
10017dea:	b002      	add	sp, #8
10017dec:	bd70      	pop	{r4, r5, r6, pc}
10017dee:	4622      	mov	r2, r4
10017df0:	4630      	mov	r0, r6
10017df2:	f007 f8b5 	bl	1001ef60 <__swbuf_r>
10017df6:	3001      	adds	r0, #1
10017df8:	d1f6      	bne.n	10017de8 <__fputwc+0x4c>
10017dfa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017dfe:	b002      	add	sp, #8
10017e00:	bd70      	pop	{r4, r5, r6, pc}
10017e02:	f88d 5004 	strb.w	r5, [sp, #4]
10017e06:	e7df      	b.n	10017dc8 <__fputwc+0x2c>
10017e08:	89a3      	ldrh	r3, [r4, #12]
10017e0a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017e0e:	81a3      	strh	r3, [r4, #12]
10017e10:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017e14:	e7f3      	b.n	10017dfe <__fputwc+0x62>
10017e16:	bf00      	nop

10017e18 <_fputwc_r>:
10017e18:	b530      	push	{r4, r5, lr}
10017e1a:	4614      	mov	r4, r2
10017e1c:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10017e1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017e22:	4605      	mov	r5, r0
10017e24:	07d0      	lsls	r0, r2, #31
10017e26:	b083      	sub	sp, #12
10017e28:	d401      	bmi.n	10017e2e <_fputwc_r+0x16>
10017e2a:	059a      	lsls	r2, r3, #22
10017e2c:	d51c      	bpl.n	10017e68 <_fputwc_r+0x50>
10017e2e:	0498      	lsls	r0, r3, #18
10017e30:	d406      	bmi.n	10017e40 <_fputwc_r+0x28>
10017e32:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10017e34:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10017e38:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10017e3c:	81a3      	strh	r3, [r4, #12]
10017e3e:	6662      	str	r2, [r4, #100]	@ 0x64
10017e40:	4622      	mov	r2, r4
10017e42:	4628      	mov	r0, r5
10017e44:	f7ff ffaa 	bl	10017d9c <__fputwc>
10017e48:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017e4a:	07da      	lsls	r2, r3, #31
10017e4c:	4605      	mov	r5, r0
10017e4e:	d402      	bmi.n	10017e56 <_fputwc_r+0x3e>
10017e50:	89a3      	ldrh	r3, [r4, #12]
10017e52:	059b      	lsls	r3, r3, #22
10017e54:	d502      	bpl.n	10017e5c <_fputwc_r+0x44>
10017e56:	4628      	mov	r0, r5
10017e58:	b003      	add	sp, #12
10017e5a:	bd30      	pop	{r4, r5, pc}
10017e5c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017e5e:	f000 fb4d 	bl	100184fc <__retarget_lock_release_recursive>
10017e62:	4628      	mov	r0, r5
10017e64:	b003      	add	sp, #12
10017e66:	bd30      	pop	{r4, r5, pc}
10017e68:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017e6a:	9101      	str	r1, [sp, #4]
10017e6c:	f000 fb44 	bl	100184f8 <__retarget_lock_acquire_recursive>
10017e70:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017e74:	9901      	ldr	r1, [sp, #4]
10017e76:	e7da      	b.n	10017e2e <_fputwc_r+0x16>

10017e78 <memmove>:
10017e78:	4288      	cmp	r0, r1
10017e7a:	d90e      	bls.n	10017e9a <memmove+0x22>
10017e7c:	188b      	adds	r3, r1, r2
10017e7e:	4283      	cmp	r3, r0
10017e80:	d90b      	bls.n	10017e9a <memmove+0x22>
10017e82:	eb00 0c02 	add.w	ip, r0, r2
10017e86:	2a00      	cmp	r2, #0
10017e88:	d06e      	beq.n	10017f68 <memmove+0xf0>
10017e8a:	4662      	mov	r2, ip
10017e8c:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
10017e90:	f802 cd01 	strb.w	ip, [r2, #-1]!
10017e94:	4299      	cmp	r1, r3
10017e96:	d1f9      	bne.n	10017e8c <memmove+0x14>
10017e98:	4770      	bx	lr
10017e9a:	2a0f      	cmp	r2, #15
10017e9c:	d80f      	bhi.n	10017ebe <memmove+0x46>
10017e9e:	4603      	mov	r3, r0
10017ea0:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10017ea4:	2a00      	cmp	r2, #0
10017ea6:	d05f      	beq.n	10017f68 <memmove+0xf0>
10017ea8:	f10c 0c01 	add.w	ip, ip, #1
10017eac:	3b01      	subs	r3, #1
10017eae:	448c      	add	ip, r1
10017eb0:	f811 2b01 	ldrb.w	r2, [r1], #1
10017eb4:	f803 2f01 	strb.w	r2, [r3, #1]!
10017eb8:	4561      	cmp	r1, ip
10017eba:	d1f9      	bne.n	10017eb0 <memmove+0x38>
10017ebc:	4770      	bx	lr
10017ebe:	ea40 0301 	orr.w	r3, r0, r1
10017ec2:	079b      	lsls	r3, r3, #30
10017ec4:	d151      	bne.n	10017f6a <memmove+0xf2>
10017ec6:	f1a2 0310 	sub.w	r3, r2, #16
10017eca:	b570      	push	{r4, r5, r6, lr}
10017ecc:	f101 0c20 	add.w	ip, r1, #32
10017ed0:	f023 050f 	bic.w	r5, r3, #15
10017ed4:	f101 0e10 	add.w	lr, r1, #16
10017ed8:	f100 0410 	add.w	r4, r0, #16
10017edc:	44ac      	add	ip, r5
10017ede:	091b      	lsrs	r3, r3, #4
10017ee0:	f85e 5c10 	ldr.w	r5, [lr, #-16]
10017ee4:	f844 5c10 	str.w	r5, [r4, #-16]
10017ee8:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
10017eec:	f844 5c0c 	str.w	r5, [r4, #-12]
10017ef0:	f85e 5c08 	ldr.w	r5, [lr, #-8]
10017ef4:	f844 5c08 	str.w	r5, [r4, #-8]
10017ef8:	f85e 5c04 	ldr.w	r5, [lr, #-4]
10017efc:	f844 5c04 	str.w	r5, [r4, #-4]
10017f00:	f10e 0e10 	add.w	lr, lr, #16
10017f04:	45e6      	cmp	lr, ip
10017f06:	f104 0410 	add.w	r4, r4, #16
10017f0a:	d1e9      	bne.n	10017ee0 <memmove+0x68>
10017f0c:	3301      	adds	r3, #1
10017f0e:	f012 0f0c 	tst.w	r2, #12
10017f12:	eb01 1103 	add.w	r1, r1, r3, lsl #4
10017f16:	f002 040f 	and.w	r4, r2, #15
10017f1a:	eb00 1303 	add.w	r3, r0, r3, lsl #4
10017f1e:	d028      	beq.n	10017f72 <memmove+0xfa>
10017f20:	3c04      	subs	r4, #4
10017f22:	f024 0603 	bic.w	r6, r4, #3
10017f26:	ea4f 0c94 	mov.w	ip, r4, lsr #2
10017f2a:	441e      	add	r6, r3
10017f2c:	1f1c      	subs	r4, r3, #4
10017f2e:	468e      	mov	lr, r1
10017f30:	f85e 5b04 	ldr.w	r5, [lr], #4
10017f34:	f844 5f04 	str.w	r5, [r4, #4]!
10017f38:	42b4      	cmp	r4, r6
10017f3a:	d1f9      	bne.n	10017f30 <memmove+0xb8>
10017f3c:	f10c 0401 	add.w	r4, ip, #1
10017f40:	f002 0203 	and.w	r2, r2, #3
10017f44:	eb03 0384 	add.w	r3, r3, r4, lsl #2
10017f48:	eb01 0184 	add.w	r1, r1, r4, lsl #2
10017f4c:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10017f50:	b14a      	cbz	r2, 10017f66 <memmove+0xee>
10017f52:	f10c 0c01 	add.w	ip, ip, #1
10017f56:	3b01      	subs	r3, #1
10017f58:	448c      	add	ip, r1
10017f5a:	f811 2b01 	ldrb.w	r2, [r1], #1
10017f5e:	f803 2f01 	strb.w	r2, [r3, #1]!
10017f62:	4561      	cmp	r1, ip
10017f64:	d1f9      	bne.n	10017f5a <memmove+0xe2>
10017f66:	bd70      	pop	{r4, r5, r6, pc}
10017f68:	4770      	bx	lr
10017f6a:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10017f6e:	4603      	mov	r3, r0
10017f70:	e79a      	b.n	10017ea8 <memmove+0x30>
10017f72:	4622      	mov	r2, r4
10017f74:	e7ea      	b.n	10017f4c <memmove+0xd4>
10017f76:	bf00      	nop

10017f78 <memset>:
10017f78:	0783      	lsls	r3, r0, #30
10017f7a:	b530      	push	{r4, r5, lr}
10017f7c:	d047      	beq.n	1001800e <memset+0x96>
10017f7e:	1e54      	subs	r4, r2, #1
10017f80:	2a00      	cmp	r2, #0
10017f82:	d03e      	beq.n	10018002 <memset+0x8a>
10017f84:	b2ca      	uxtb	r2, r1
10017f86:	4603      	mov	r3, r0
10017f88:	e001      	b.n	10017f8e <memset+0x16>
10017f8a:	3c01      	subs	r4, #1
10017f8c:	d339      	bcc.n	10018002 <memset+0x8a>
10017f8e:	f803 2b01 	strb.w	r2, [r3], #1
10017f92:	079d      	lsls	r5, r3, #30
10017f94:	d1f9      	bne.n	10017f8a <memset+0x12>
10017f96:	2c03      	cmp	r4, #3
10017f98:	d92c      	bls.n	10017ff4 <memset+0x7c>
10017f9a:	b2cd      	uxtb	r5, r1
10017f9c:	eb05 2505 	add.w	r5, r5, r5, lsl #8
10017fa0:	2c0f      	cmp	r4, #15
10017fa2:	eb05 4505 	add.w	r5, r5, r5, lsl #16
10017fa6:	d935      	bls.n	10018014 <memset+0x9c>
10017fa8:	f1a4 0210 	sub.w	r2, r4, #16
10017fac:	f022 0c0f 	bic.w	ip, r2, #15
10017fb0:	f103 0e10 	add.w	lr, r3, #16
10017fb4:	44e6      	add	lr, ip
10017fb6:	ea4f 1c12 	mov.w	ip, r2, lsr #4
10017fba:	461a      	mov	r2, r3
10017fbc:	6015      	str	r5, [r2, #0]
10017fbe:	6055      	str	r5, [r2, #4]
10017fc0:	6095      	str	r5, [r2, #8]
10017fc2:	60d5      	str	r5, [r2, #12]
10017fc4:	3210      	adds	r2, #16
10017fc6:	4572      	cmp	r2, lr
10017fc8:	d1f8      	bne.n	10017fbc <memset+0x44>
10017fca:	f10c 0201 	add.w	r2, ip, #1
10017fce:	f014 0f0c 	tst.w	r4, #12
10017fd2:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10017fd6:	f004 0c0f 	and.w	ip, r4, #15
10017fda:	d013      	beq.n	10018004 <memset+0x8c>
10017fdc:	f1ac 0304 	sub.w	r3, ip, #4
10017fe0:	f023 0303 	bic.w	r3, r3, #3
10017fe4:	3304      	adds	r3, #4
10017fe6:	4413      	add	r3, r2
10017fe8:	f842 5b04 	str.w	r5, [r2], #4
10017fec:	429a      	cmp	r2, r3
10017fee:	d1fb      	bne.n	10017fe8 <memset+0x70>
10017ff0:	f00c 0403 	and.w	r4, ip, #3
10017ff4:	b12c      	cbz	r4, 10018002 <memset+0x8a>
10017ff6:	b2c9      	uxtb	r1, r1
10017ff8:	441c      	add	r4, r3
10017ffa:	f803 1b01 	strb.w	r1, [r3], #1
10017ffe:	429c      	cmp	r4, r3
10018000:	d1fb      	bne.n	10017ffa <memset+0x82>
10018002:	bd30      	pop	{r4, r5, pc}
10018004:	4664      	mov	r4, ip
10018006:	4613      	mov	r3, r2
10018008:	2c00      	cmp	r4, #0
1001800a:	d1f4      	bne.n	10017ff6 <memset+0x7e>
1001800c:	e7f9      	b.n	10018002 <memset+0x8a>
1001800e:	4603      	mov	r3, r0
10018010:	4614      	mov	r4, r2
10018012:	e7c0      	b.n	10017f96 <memset+0x1e>
10018014:	461a      	mov	r2, r3
10018016:	46a4      	mov	ip, r4
10018018:	e7e0      	b.n	10017fdc <memset+0x64>
1001801a:	bf00      	nop

1001801c <strncpy>:
1001801c:	ea40 0301 	orr.w	r3, r0, r1
10018020:	079b      	lsls	r3, r3, #30
10018022:	b510      	push	{r4, lr}
10018024:	d101      	bne.n	1001802a <strncpy+0xe>
10018026:	2a03      	cmp	r2, #3
10018028:	d817      	bhi.n	1001805a <strncpy+0x3e>
1001802a:	4684      	mov	ip, r0
1001802c:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10018030:	e007      	b.n	10018042 <strncpy+0x26>
10018032:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
10018036:	f803 1b01 	strb.w	r1, [r3], #1
1001803a:	1e54      	subs	r4, r2, #1
1001803c:	b129      	cbz	r1, 1001804a <strncpy+0x2e>
1001803e:	469c      	mov	ip, r3
10018040:	4622      	mov	r2, r4
10018042:	4663      	mov	r3, ip
10018044:	2a00      	cmp	r2, #0
10018046:	d1f4      	bne.n	10018032 <strncpy+0x16>
10018048:	bd10      	pop	{r4, pc}
1001804a:	4494      	add	ip, r2
1001804c:	2c00      	cmp	r4, #0
1001804e:	d0fb      	beq.n	10018048 <strncpy+0x2c>
10018050:	f803 1b01 	strb.w	r1, [r3], #1
10018054:	4563      	cmp	r3, ip
10018056:	d1fb      	bne.n	10018050 <strncpy+0x34>
10018058:	bd10      	pop	{r4, pc}
1001805a:	468e      	mov	lr, r1
1001805c:	4684      	mov	ip, r0
1001805e:	f8de 4000 	ldr.w	r4, [lr]
10018062:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
10018066:	ea23 0304 	bic.w	r3, r3, r4
1001806a:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
1001806e:	4671      	mov	r1, lr
10018070:	f10e 0e04 	add.w	lr, lr, #4
10018074:	d1da      	bne.n	1001802c <strncpy+0x10>
10018076:	3a04      	subs	r2, #4
10018078:	2a03      	cmp	r2, #3
1001807a:	f84c 4b04 	str.w	r4, [ip], #4
1001807e:	d8ee      	bhi.n	1001805e <strncpy+0x42>
10018080:	4671      	mov	r1, lr
10018082:	e7d3      	b.n	1001802c <strncpy+0x10>

10018084 <__locale_mb_cur_max>:
10018084:	4b01      	ldr	r3, [pc, #4]	@ (1001808c <__locale_mb_cur_max+0x8>)
10018086:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
1001808a:	4770      	bx	lr
1001808c:	2000042c 	.word	0x2000042c

10018090 <_localeconv_r>:
10018090:	4800      	ldr	r0, [pc, #0]	@ (10018094 <_localeconv_r+0x4>)
10018092:	4770      	bx	lr
10018094:	2000051c 	.word	0x2000051c

10018098 <_close_r>:
10018098:	b538      	push	{r3, r4, r5, lr}
1001809a:	4d07      	ldr	r5, [pc, #28]	@ (100180b8 <_close_r+0x20>)
1001809c:	2200      	movs	r2, #0
1001809e:	4604      	mov	r4, r0
100180a0:	4608      	mov	r0, r1
100180a2:	602a      	str	r2, [r5, #0]
100180a4:	f7f9 fd86 	bl	10011bb4 <_close>
100180a8:	1c43      	adds	r3, r0, #1
100180aa:	d000      	beq.n	100180ae <_close_r+0x16>
100180ac:	bd38      	pop	{r3, r4, r5, pc}
100180ae:	682b      	ldr	r3, [r5, #0]
100180b0:	2b00      	cmp	r3, #0
100180b2:	d0fb      	beq.n	100180ac <_close_r+0x14>
100180b4:	6023      	str	r3, [r4, #0]
100180b6:	bd38      	pop	{r3, r4, r5, pc}
100180b8:	200015c4 	.word	0x200015c4

100180bc <_fstat_r>:
100180bc:	b570      	push	{r4, r5, r6, lr}
100180be:	460c      	mov	r4, r1
100180c0:	4d08      	ldr	r5, [pc, #32]	@ (100180e4 <_fstat_r+0x28>)
100180c2:	4603      	mov	r3, r0
100180c4:	2600      	movs	r6, #0
100180c6:	4620      	mov	r0, r4
100180c8:	4611      	mov	r1, r2
100180ca:	461c      	mov	r4, r3
100180cc:	602e      	str	r6, [r5, #0]
100180ce:	f7f9 fd7d 	bl	10011bcc <_fstat>
100180d2:	1c43      	adds	r3, r0, #1
100180d4:	d000      	beq.n	100180d8 <_fstat_r+0x1c>
100180d6:	bd70      	pop	{r4, r5, r6, pc}
100180d8:	682b      	ldr	r3, [r5, #0]
100180da:	2b00      	cmp	r3, #0
100180dc:	d0fb      	beq.n	100180d6 <_fstat_r+0x1a>
100180de:	6023      	str	r3, [r4, #0]
100180e0:	bd70      	pop	{r4, r5, r6, pc}
100180e2:	bf00      	nop
100180e4:	200015c4 	.word	0x200015c4

100180e8 <_lseek_r>:
100180e8:	b538      	push	{r3, r4, r5, lr}
100180ea:	460c      	mov	r4, r1
100180ec:	4d08      	ldr	r5, [pc, #32]	@ (10018110 <_lseek_r+0x28>)
100180ee:	4684      	mov	ip, r0
100180f0:	4611      	mov	r1, r2
100180f2:	4620      	mov	r0, r4
100180f4:	461a      	mov	r2, r3
100180f6:	2300      	movs	r3, #0
100180f8:	602b      	str	r3, [r5, #0]
100180fa:	4664      	mov	r4, ip
100180fc:	f7f9 fd62 	bl	10011bc4 <_lseek>
10018100:	1c43      	adds	r3, r0, #1
10018102:	d000      	beq.n	10018106 <_lseek_r+0x1e>
10018104:	bd38      	pop	{r3, r4, r5, pc}
10018106:	682b      	ldr	r3, [r5, #0]
10018108:	2b00      	cmp	r3, #0
1001810a:	d0fb      	beq.n	10018104 <_lseek_r+0x1c>
1001810c:	6023      	str	r3, [r4, #0]
1001810e:	bd38      	pop	{r3, r4, r5, pc}
10018110:	200015c4 	.word	0x200015c4

10018114 <_read_r>:
10018114:	b538      	push	{r3, r4, r5, lr}
10018116:	460c      	mov	r4, r1
10018118:	4d08      	ldr	r5, [pc, #32]	@ (1001813c <_read_r+0x28>)
1001811a:	4684      	mov	ip, r0
1001811c:	4611      	mov	r1, r2
1001811e:	4620      	mov	r0, r4
10018120:	461a      	mov	r2, r3
10018122:	2300      	movs	r3, #0
10018124:	602b      	str	r3, [r5, #0]
10018126:	4664      	mov	r4, ip
10018128:	f7f9 fd54 	bl	10011bd4 <_read>
1001812c:	1c43      	adds	r3, r0, #1
1001812e:	d000      	beq.n	10018132 <_read_r+0x1e>
10018130:	bd38      	pop	{r3, r4, r5, pc}
10018132:	682b      	ldr	r3, [r5, #0]
10018134:	2b00      	cmp	r3, #0
10018136:	d0fb      	beq.n	10018130 <_read_r+0x1c>
10018138:	6023      	str	r3, [r4, #0]
1001813a:	bd38      	pop	{r3, r4, r5, pc}
1001813c:	200015c4 	.word	0x200015c4

10018140 <_sbrk_r>:
10018140:	b538      	push	{r3, r4, r5, lr}
10018142:	4d07      	ldr	r5, [pc, #28]	@ (10018160 <_sbrk_r+0x20>)
10018144:	2200      	movs	r2, #0
10018146:	4604      	mov	r4, r0
10018148:	4608      	mov	r0, r1
1001814a:	602a      	str	r2, [r5, #0]
1001814c:	f7f9 feba 	bl	10011ec4 <_sbrk>
10018150:	1c43      	adds	r3, r0, #1
10018152:	d000      	beq.n	10018156 <_sbrk_r+0x16>
10018154:	bd38      	pop	{r3, r4, r5, pc}
10018156:	682b      	ldr	r3, [r5, #0]
10018158:	2b00      	cmp	r3, #0
1001815a:	d0fb      	beq.n	10018154 <_sbrk_r+0x14>
1001815c:	6023      	str	r3, [r4, #0]
1001815e:	bd38      	pop	{r3, r4, r5, pc}
10018160:	200015c4 	.word	0x200015c4

10018164 <_write_r>:
10018164:	b538      	push	{r3, r4, r5, lr}
10018166:	460c      	mov	r4, r1
10018168:	4d08      	ldr	r5, [pc, #32]	@ (1001818c <_write_r+0x28>)
1001816a:	4684      	mov	ip, r0
1001816c:	4611      	mov	r1, r2
1001816e:	4620      	mov	r0, r4
10018170:	461a      	mov	r2, r3
10018172:	2300      	movs	r3, #0
10018174:	602b      	str	r3, [r5, #0]
10018176:	4664      	mov	r4, ip
10018178:	f7f9 fd54 	bl	10011c24 <_write>
1001817c:	1c43      	adds	r3, r0, #1
1001817e:	d000      	beq.n	10018182 <_write_r+0x1e>
10018180:	bd38      	pop	{r3, r4, r5, pc}
10018182:	682b      	ldr	r3, [r5, #0]
10018184:	2b00      	cmp	r3, #0
10018186:	d0fb      	beq.n	10018180 <_write_r+0x1c>
10018188:	6023      	str	r3, [r4, #0]
1001818a:	bd38      	pop	{r3, r4, r5, pc}
1001818c:	200015c4 	.word	0x200015c4

10018190 <__errno>:
10018190:	4b01      	ldr	r3, [pc, #4]	@ (10018198 <__errno+0x8>)
10018192:	6818      	ldr	r0, [r3, #0]
10018194:	4770      	bx	lr
10018196:	bf00      	nop
10018198:	20000598 	.word	0x20000598

1001819c <sysconf>:
1001819c:	2808      	cmp	r0, #8
1001819e:	d102      	bne.n	100181a6 <sysconf+0xa>
100181a0:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
100181a4:	4770      	bx	lr
100181a6:	b508      	push	{r3, lr}
100181a8:	f7ff fff2 	bl	10018190 <__errno>
100181ac:	2316      	movs	r3, #22
100181ae:	6003      	str	r3, [r0, #0]
100181b0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100181b4:	bd08      	pop	{r3, pc}
100181b6:	bf00      	nop
	...

100181c0 <strcmp>:
100181c0:	7802      	ldrb	r2, [r0, #0]
100181c2:	780b      	ldrb	r3, [r1, #0]
100181c4:	2a01      	cmp	r2, #1
100181c6:	bf28      	it	cs
100181c8:	429a      	cmpcs	r2, r3
100181ca:	f040 80d8 	bne.w	1001837e <strcmp+0x1be>
100181ce:	e96d 4504 	strd	r4, r5, [sp, #-16]!
100181d2:	ea40 0401 	orr.w	r4, r0, r1
100181d6:	e9cd 6702 	strd	r6, r7, [sp, #8]
100181da:	f06f 0c00 	mvn.w	ip, #0
100181de:	ea4f 7244 	mov.w	r2, r4, lsl #29
100181e2:	b31a      	cbz	r2, 1001822c <strcmp+0x6c>
100181e4:	ea80 0401 	eor.w	r4, r0, r1
100181e8:	f014 0f07 	tst.w	r4, #7
100181ec:	d16b      	bne.n	100182c6 <strcmp+0x106>
100181ee:	f000 0407 	and.w	r4, r0, #7
100181f2:	f020 0007 	bic.w	r0, r0, #7
100181f6:	f004 0503 	and.w	r5, r4, #3
100181fa:	f021 0107 	bic.w	r1, r1, #7
100181fe:	ea4f 05c5 	mov.w	r5, r5, lsl #3
10018202:	e8f0 2304 	ldrd	r2, r3, [r0], #16
10018206:	f014 0f04 	tst.w	r4, #4
1001820a:	e8f1 6704 	ldrd	r6, r7, [r1], #16
1001820e:	fa0c f405 	lsl.w	r4, ip, r5
10018212:	ea62 0204 	orn	r2, r2, r4
10018216:	ea66 0604 	orn	r6, r6, r4
1001821a:	d00b      	beq.n	10018234 <strcmp+0x74>
1001821c:	ea63 0304 	orn	r3, r3, r4
10018220:	4662      	mov	r2, ip
10018222:	ea67 0704 	orn	r7, r7, r4
10018226:	4666      	mov	r6, ip
10018228:	e004      	b.n	10018234 <strcmp+0x74>
1001822a:	bf00      	nop
1001822c:	e8f0 2304 	ldrd	r2, r3, [r0], #16
10018230:	e8f1 6704 	ldrd	r6, r7, [r1], #16
10018234:	fa82 f54c 	uadd8	r5, r2, ip
10018238:	ea82 0406 	eor.w	r4, r2, r6
1001823c:	faa4 f48c 	sel	r4, r4, ip
10018240:	bb6c      	cbnz	r4, 1001829e <strcmp+0xde>
10018242:	fa83 f54c 	uadd8	r5, r3, ip
10018246:	ea83 0507 	eor.w	r5, r3, r7
1001824a:	faa5 f58c 	sel	r5, r5, ip
1001824e:	b995      	cbnz	r5, 10018276 <strcmp+0xb6>
10018250:	e950 2302 	ldrd	r2, r3, [r0, #-8]
10018254:	e951 6702 	ldrd	r6, r7, [r1, #-8]
10018258:	fa82 f54c 	uadd8	r5, r2, ip
1001825c:	ea82 0406 	eor.w	r4, r2, r6
10018260:	faa4 f48c 	sel	r4, r4, ip
10018264:	fa83 f54c 	uadd8	r5, r3, ip
10018268:	ea83 0507 	eor.w	r5, r3, r7
1001826c:	faa5 f58c 	sel	r5, r5, ip
10018270:	4325      	orrs	r5, r4
10018272:	d0db      	beq.n	1001822c <strcmp+0x6c>
10018274:	b99c      	cbnz	r4, 1001829e <strcmp+0xde>
10018276:	ba2d      	rev	r5, r5
10018278:	fab5 f485 	clz	r4, r5
1001827c:	f024 0407 	bic.w	r4, r4, #7
10018280:	fa27 f104 	lsr.w	r1, r7, r4
10018284:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
10018288:	fa23 f304 	lsr.w	r3, r3, r4
1001828c:	f003 00ff 	and.w	r0, r3, #255	@ 0xff
10018290:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10018294:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10018298:	eba0 0001 	sub.w	r0, r0, r1
1001829c:	4770      	bx	lr
1001829e:	ba24      	rev	r4, r4
100182a0:	fab4 f484 	clz	r4, r4
100182a4:	f024 0407 	bic.w	r4, r4, #7
100182a8:	fa26 f104 	lsr.w	r1, r6, r4
100182ac:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
100182b0:	fa22 f204 	lsr.w	r2, r2, r4
100182b4:	f002 00ff 	and.w	r0, r2, #255	@ 0xff
100182b8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
100182bc:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100182c0:	eba0 0001 	sub.w	r0, r0, r1
100182c4:	4770      	bx	lr
100182c6:	f014 0f03 	tst.w	r4, #3
100182ca:	d13c      	bne.n	10018346 <strcmp+0x186>
100182cc:	f010 0403 	ands.w	r4, r0, #3
100182d0:	d128      	bne.n	10018324 <strcmp+0x164>
100182d2:	f850 2b08 	ldr.w	r2, [r0], #8
100182d6:	f851 3b08 	ldr.w	r3, [r1], #8
100182da:	fa82 f54c 	uadd8	r5, r2, ip
100182de:	ea82 0503 	eor.w	r5, r2, r3
100182e2:	faa5 f58c 	sel	r5, r5, ip
100182e6:	b95d      	cbnz	r5, 10018300 <strcmp+0x140>
100182e8:	f850 2c04 	ldr.w	r2, [r0, #-4]
100182ec:	f851 3c04 	ldr.w	r3, [r1, #-4]
100182f0:	fa82 f54c 	uadd8	r5, r2, ip
100182f4:	ea82 0503 	eor.w	r5, r2, r3
100182f8:	faa5 f58c 	sel	r5, r5, ip
100182fc:	2d00      	cmp	r5, #0
100182fe:	d0e8      	beq.n	100182d2 <strcmp+0x112>
10018300:	ba2d      	rev	r5, r5
10018302:	fab5 f485 	clz	r4, r5
10018306:	f024 0407 	bic.w	r4, r4, #7
1001830a:	fa23 f104 	lsr.w	r1, r3, r4
1001830e:	fa22 f204 	lsr.w	r2, r2, r4
10018312:	f002 00ff 	and.w	r0, r2, #255	@ 0xff
10018316:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001831a:	e8fd 4504 	ldrd	r4, r5, [sp], #16
1001831e:	eba0 0001 	sub.w	r0, r0, r1
10018322:	4770      	bx	lr
10018324:	ea4f 04c4 	mov.w	r4, r4, lsl #3
10018328:	f020 0003 	bic.w	r0, r0, #3
1001832c:	f850 2b08 	ldr.w	r2, [r0], #8
10018330:	f021 0103 	bic.w	r1, r1, #3
10018334:	f851 3b08 	ldr.w	r3, [r1], #8
10018338:	fa0c f404 	lsl.w	r4, ip, r4
1001833c:	ea62 0204 	orn	r2, r2, r4
10018340:	ea63 0304 	orn	r3, r3, r4
10018344:	e7c9      	b.n	100182da <strcmp+0x11a>
10018346:	f010 0403 	ands.w	r4, r0, #3
1001834a:	d01d      	beq.n	10018388 <strcmp+0x1c8>
1001834c:	eba1 0104 	sub.w	r1, r1, r4
10018350:	f020 0003 	bic.w	r0, r0, #3
10018354:	07e4      	lsls	r4, r4, #31
10018356:	f850 2b04 	ldr.w	r2, [r0], #4
1001835a:	d006      	beq.n	1001836a <strcmp+0x1aa>
1001835c:	d212      	bcs.n	10018384 <strcmp+0x1c4>
1001835e:	788b      	ldrb	r3, [r1, #2]
10018360:	fa5f f4a2 	uxtb.w	r4, r2, ror #16
10018364:	1ae4      	subs	r4, r4, r3
10018366:	d106      	bne.n	10018376 <strcmp+0x1b6>
10018368:	b12b      	cbz	r3, 10018376 <strcmp+0x1b6>
1001836a:	78cb      	ldrb	r3, [r1, #3]
1001836c:	fa5f f4b2 	uxtb.w	r4, r2, ror #24
10018370:	1ae4      	subs	r4, r4, r3
10018372:	d100      	bne.n	10018376 <strcmp+0x1b6>
10018374:	b933      	cbnz	r3, 10018384 <strcmp+0x1c4>
10018376:	4620      	mov	r0, r4
10018378:	f85d 4b10 	ldr.w	r4, [sp], #16
1001837c:	4770      	bx	lr
1001837e:	eba2 0003 	sub.w	r0, r2, r3
10018382:	4770      	bx	lr
10018384:	f101 0104 	add.w	r1, r1, #4
10018388:	f850 2b04 	ldr.w	r2, [r0], #4
1001838c:	07cc      	lsls	r4, r1, #31
1001838e:	f021 0103 	bic.w	r1, r1, #3
10018392:	f851 3b04 	ldr.w	r3, [r1], #4
10018396:	d848      	bhi.n	1001842a <strcmp+0x26a>
10018398:	d224      	bcs.n	100183e4 <strcmp+0x224>
1001839a:	f022 447f 	bic.w	r4, r2, #4278190080	@ 0xff000000
1001839e:	fa82 f54c 	uadd8	r5, r2, ip
100183a2:	ea94 2513 	eors.w	r5, r4, r3, lsr #8
100183a6:	faa5 f58c 	sel	r5, r5, ip
100183aa:	d10a      	bne.n	100183c2 <strcmp+0x202>
100183ac:	b965      	cbnz	r5, 100183c8 <strcmp+0x208>
100183ae:	f851 3b04 	ldr.w	r3, [r1], #4
100183b2:	ea84 0402 	eor.w	r4, r4, r2
100183b6:	ebb4 6f03 	cmp.w	r4, r3, lsl #24
100183ba:	d10e      	bne.n	100183da <strcmp+0x21a>
100183bc:	f850 2b04 	ldr.w	r2, [r0], #4
100183c0:	e7eb      	b.n	1001839a <strcmp+0x1da>
100183c2:	ea4f 2313 	mov.w	r3, r3, lsr #8
100183c6:	e055      	b.n	10018474 <strcmp+0x2b4>
100183c8:	f035 457f 	bics.w	r5, r5, #4278190080	@ 0xff000000
100183cc:	d14d      	bne.n	1001846a <strcmp+0x2aa>
100183ce:	7808      	ldrb	r0, [r1, #0]
100183d0:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100183d4:	f1c0 0000 	rsb	r0, r0, #0
100183d8:	4770      	bx	lr
100183da:	ea4f 6212 	mov.w	r2, r2, lsr #24
100183de:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
100183e2:	e047      	b.n	10018474 <strcmp+0x2b4>
100183e4:	ea02 441c 	and.w	r4, r2, ip, lsr #16
100183e8:	fa82 f54c 	uadd8	r5, r2, ip
100183ec:	ea94 4513 	eors.w	r5, r4, r3, lsr #16
100183f0:	faa5 f58c 	sel	r5, r5, ip
100183f4:	d10a      	bne.n	1001840c <strcmp+0x24c>
100183f6:	b965      	cbnz	r5, 10018412 <strcmp+0x252>
100183f8:	f851 3b04 	ldr.w	r3, [r1], #4
100183fc:	ea84 0402 	eor.w	r4, r4, r2
10018400:	ebb4 4f03 	cmp.w	r4, r3, lsl #16
10018404:	d10c      	bne.n	10018420 <strcmp+0x260>
10018406:	f850 2b04 	ldr.w	r2, [r0], #4
1001840a:	e7eb      	b.n	100183e4 <strcmp+0x224>
1001840c:	ea4f 4313 	mov.w	r3, r3, lsr #16
10018410:	e030      	b.n	10018474 <strcmp+0x2b4>
10018412:	ea15 451c 	ands.w	r5, r5, ip, lsr #16
10018416:	d128      	bne.n	1001846a <strcmp+0x2aa>
10018418:	880b      	ldrh	r3, [r1, #0]
1001841a:	ea4f 4212 	mov.w	r2, r2, lsr #16
1001841e:	e029      	b.n	10018474 <strcmp+0x2b4>
10018420:	ea4f 4212 	mov.w	r2, r2, lsr #16
10018424:	ea03 431c 	and.w	r3, r3, ip, lsr #16
10018428:	e024      	b.n	10018474 <strcmp+0x2b4>
1001842a:	f002 04ff 	and.w	r4, r2, #255	@ 0xff
1001842e:	fa82 f54c 	uadd8	r5, r2, ip
10018432:	ea94 6513 	eors.w	r5, r4, r3, lsr #24
10018436:	faa5 f58c 	sel	r5, r5, ip
1001843a:	d10a      	bne.n	10018452 <strcmp+0x292>
1001843c:	b965      	cbnz	r5, 10018458 <strcmp+0x298>
1001843e:	f851 3b04 	ldr.w	r3, [r1], #4
10018442:	ea84 0402 	eor.w	r4, r4, r2
10018446:	ebb4 2f03 	cmp.w	r4, r3, lsl #8
1001844a:	d109      	bne.n	10018460 <strcmp+0x2a0>
1001844c:	f850 2b04 	ldr.w	r2, [r0], #4
10018450:	e7eb      	b.n	1001842a <strcmp+0x26a>
10018452:	ea4f 6313 	mov.w	r3, r3, lsr #24
10018456:	e00d      	b.n	10018474 <strcmp+0x2b4>
10018458:	f015 0fff 	tst.w	r5, #255	@ 0xff
1001845c:	d105      	bne.n	1001846a <strcmp+0x2aa>
1001845e:	680b      	ldr	r3, [r1, #0]
10018460:	ea4f 2212 	mov.w	r2, r2, lsr #8
10018464:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
10018468:	e004      	b.n	10018474 <strcmp+0x2b4>
1001846a:	f04f 0000 	mov.w	r0, #0
1001846e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10018472:	4770      	bx	lr
10018474:	ba12      	rev	r2, r2
10018476:	ba1b      	rev	r3, r3
10018478:	fa82 f44c 	uadd8	r4, r2, ip
1001847c:	ea82 0403 	eor.w	r4, r2, r3
10018480:	faa4 f58c 	sel	r5, r4, ip
10018484:	fab5 f485 	clz	r4, r5
10018488:	fa02 f204 	lsl.w	r2, r2, r4
1001848c:	fa03 f304 	lsl.w	r3, r3, r4
10018490:	ea4f 6012 	mov.w	r0, r2, lsr #24
10018494:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10018498:	eba0 6013 	sub.w	r0, r0, r3, lsr #24
1001849c:	4770      	bx	lr
1001849e:	bf00      	nop

100184a0 <__libc_init_array>:
100184a0:	b570      	push	{r4, r5, r6, lr}
100184a2:	4b0f      	ldr	r3, [pc, #60]	@ (100184e0 <__libc_init_array+0x40>)
100184a4:	4d0f      	ldr	r5, [pc, #60]	@ (100184e4 <__libc_init_array+0x44>)
100184a6:	42ab      	cmp	r3, r5
100184a8:	eba3 0605 	sub.w	r6, r3, r5
100184ac:	d007      	beq.n	100184be <__libc_init_array+0x1e>
100184ae:	10b6      	asrs	r6, r6, #2
100184b0:	2400      	movs	r4, #0
100184b2:	f855 3b04 	ldr.w	r3, [r5], #4
100184b6:	3401      	adds	r4, #1
100184b8:	4798      	blx	r3
100184ba:	42a6      	cmp	r6, r4
100184bc:	d8f9      	bhi.n	100184b2 <__libc_init_array+0x12>
100184be:	f012 fb59 	bl	1002ab74 <_init>
100184c2:	4d09      	ldr	r5, [pc, #36]	@ (100184e8 <__libc_init_array+0x48>)
100184c4:	4b09      	ldr	r3, [pc, #36]	@ (100184ec <__libc_init_array+0x4c>)
100184c6:	1b5e      	subs	r6, r3, r5
100184c8:	42ab      	cmp	r3, r5
100184ca:	ea4f 06a6 	mov.w	r6, r6, asr #2
100184ce:	d006      	beq.n	100184de <__libc_init_array+0x3e>
100184d0:	2400      	movs	r4, #0
100184d2:	f855 3b04 	ldr.w	r3, [r5], #4
100184d6:	3401      	adds	r4, #1
100184d8:	4798      	blx	r3
100184da:	42a6      	cmp	r6, r4
100184dc:	d8f9      	bhi.n	100184d2 <__libc_init_array+0x32>
100184de:	bd70      	pop	{r4, r5, r6, pc}
100184e0:	20000bc0 	.word	0x20000bc0
100184e4:	20000bc0 	.word	0x20000bc0
100184e8:	20000bc0 	.word	0x20000bc0
100184ec:	20000bc8 	.word	0x20000bc8

100184f0 <__retarget_lock_init_recursive>:
100184f0:	4770      	bx	lr
100184f2:	bf00      	nop

100184f4 <__retarget_lock_close_recursive>:
100184f4:	4770      	bx	lr
100184f6:	bf00      	nop

100184f8 <__retarget_lock_acquire_recursive>:
100184f8:	4770      	bx	lr
100184fa:	bf00      	nop

100184fc <__retarget_lock_release_recursive>:
100184fc:	4770      	bx	lr
100184fe:	bf00      	nop

10018500 <memchr>:
10018500:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10018504:	2a10      	cmp	r2, #16
10018506:	db2b      	blt.n	10018560 <memchr+0x60>
10018508:	f010 0f07 	tst.w	r0, #7
1001850c:	d008      	beq.n	10018520 <memchr+0x20>
1001850e:	f810 3b01 	ldrb.w	r3, [r0], #1
10018512:	3a01      	subs	r2, #1
10018514:	428b      	cmp	r3, r1
10018516:	d02d      	beq.n	10018574 <memchr+0x74>
10018518:	f010 0f07 	tst.w	r0, #7
1001851c:	b342      	cbz	r2, 10018570 <memchr+0x70>
1001851e:	d1f6      	bne.n	1001850e <memchr+0xe>
10018520:	b4f0      	push	{r4, r5, r6, r7}
10018522:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
10018526:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1001852a:	f022 0407 	bic.w	r4, r2, #7
1001852e:	f07f 0700 	mvns.w	r7, #0
10018532:	2300      	movs	r3, #0
10018534:	e8f0 5602 	ldrd	r5, r6, [r0], #8
10018538:	3c08      	subs	r4, #8
1001853a:	ea85 0501 	eor.w	r5, r5, r1
1001853e:	ea86 0601 	eor.w	r6, r6, r1
10018542:	fa85 f547 	uadd8	r5, r5, r7
10018546:	faa3 f587 	sel	r5, r3, r7
1001854a:	fa86 f647 	uadd8	r6, r6, r7
1001854e:	faa5 f687 	sel	r6, r5, r7
10018552:	b98e      	cbnz	r6, 10018578 <memchr+0x78>
10018554:	d1ee      	bne.n	10018534 <memchr+0x34>
10018556:	bcf0      	pop	{r4, r5, r6, r7}
10018558:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001855c:	f002 0207 	and.w	r2, r2, #7
10018560:	b132      	cbz	r2, 10018570 <memchr+0x70>
10018562:	f810 3b01 	ldrb.w	r3, [r0], #1
10018566:	3a01      	subs	r2, #1
10018568:	ea83 0301 	eor.w	r3, r3, r1
1001856c:	b113      	cbz	r3, 10018574 <memchr+0x74>
1001856e:	d1f8      	bne.n	10018562 <memchr+0x62>
10018570:	2000      	movs	r0, #0
10018572:	4770      	bx	lr
10018574:	3801      	subs	r0, #1
10018576:	4770      	bx	lr
10018578:	2d00      	cmp	r5, #0
1001857a:	bf06      	itte	eq
1001857c:	4635      	moveq	r5, r6
1001857e:	3803      	subeq	r0, #3
10018580:	3807      	subne	r0, #7
10018582:	f015 0f01 	tst.w	r5, #1
10018586:	d107      	bne.n	10018598 <memchr+0x98>
10018588:	3001      	adds	r0, #1
1001858a:	f415 7f80 	tst.w	r5, #256	@ 0x100
1001858e:	bf02      	ittt	eq
10018590:	3001      	addeq	r0, #1
10018592:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
10018596:	3001      	addeq	r0, #1
10018598:	bcf0      	pop	{r4, r5, r6, r7}
1001859a:	3801      	subs	r0, #1
1001859c:	4770      	bx	lr
1001859e:	bf00      	nop

100185a0 <memcpy>:
100185a0:	4684      	mov	ip, r0
100185a2:	ea41 0300 	orr.w	r3, r1, r0
100185a6:	f013 0303 	ands.w	r3, r3, #3
100185aa:	d16d      	bne.n	10018688 <memcpy+0xe8>
100185ac:	3a40      	subs	r2, #64	@ 0x40
100185ae:	d341      	bcc.n	10018634 <memcpy+0x94>
100185b0:	f851 3b04 	ldr.w	r3, [r1], #4
100185b4:	f840 3b04 	str.w	r3, [r0], #4
100185b8:	f851 3b04 	ldr.w	r3, [r1], #4
100185bc:	f840 3b04 	str.w	r3, [r0], #4
100185c0:	f851 3b04 	ldr.w	r3, [r1], #4
100185c4:	f840 3b04 	str.w	r3, [r0], #4
100185c8:	f851 3b04 	ldr.w	r3, [r1], #4
100185cc:	f840 3b04 	str.w	r3, [r0], #4
100185d0:	f851 3b04 	ldr.w	r3, [r1], #4
100185d4:	f840 3b04 	str.w	r3, [r0], #4
100185d8:	f851 3b04 	ldr.w	r3, [r1], #4
100185dc:	f840 3b04 	str.w	r3, [r0], #4
100185e0:	f851 3b04 	ldr.w	r3, [r1], #4
100185e4:	f840 3b04 	str.w	r3, [r0], #4
100185e8:	f851 3b04 	ldr.w	r3, [r1], #4
100185ec:	f840 3b04 	str.w	r3, [r0], #4
100185f0:	f851 3b04 	ldr.w	r3, [r1], #4
100185f4:	f840 3b04 	str.w	r3, [r0], #4
100185f8:	f851 3b04 	ldr.w	r3, [r1], #4
100185fc:	f840 3b04 	str.w	r3, [r0], #4
10018600:	f851 3b04 	ldr.w	r3, [r1], #4
10018604:	f840 3b04 	str.w	r3, [r0], #4
10018608:	f851 3b04 	ldr.w	r3, [r1], #4
1001860c:	f840 3b04 	str.w	r3, [r0], #4
10018610:	f851 3b04 	ldr.w	r3, [r1], #4
10018614:	f840 3b04 	str.w	r3, [r0], #4
10018618:	f851 3b04 	ldr.w	r3, [r1], #4
1001861c:	f840 3b04 	str.w	r3, [r0], #4
10018620:	f851 3b04 	ldr.w	r3, [r1], #4
10018624:	f840 3b04 	str.w	r3, [r0], #4
10018628:	f851 3b04 	ldr.w	r3, [r1], #4
1001862c:	f840 3b04 	str.w	r3, [r0], #4
10018630:	3a40      	subs	r2, #64	@ 0x40
10018632:	d2bd      	bcs.n	100185b0 <memcpy+0x10>
10018634:	3230      	adds	r2, #48	@ 0x30
10018636:	d311      	bcc.n	1001865c <memcpy+0xbc>
10018638:	f851 3b04 	ldr.w	r3, [r1], #4
1001863c:	f840 3b04 	str.w	r3, [r0], #4
10018640:	f851 3b04 	ldr.w	r3, [r1], #4
10018644:	f840 3b04 	str.w	r3, [r0], #4
10018648:	f851 3b04 	ldr.w	r3, [r1], #4
1001864c:	f840 3b04 	str.w	r3, [r0], #4
10018650:	f851 3b04 	ldr.w	r3, [r1], #4
10018654:	f840 3b04 	str.w	r3, [r0], #4
10018658:	3a10      	subs	r2, #16
1001865a:	d2ed      	bcs.n	10018638 <memcpy+0x98>
1001865c:	320c      	adds	r2, #12
1001865e:	d305      	bcc.n	1001866c <memcpy+0xcc>
10018660:	f851 3b04 	ldr.w	r3, [r1], #4
10018664:	f840 3b04 	str.w	r3, [r0], #4
10018668:	3a04      	subs	r2, #4
1001866a:	d2f9      	bcs.n	10018660 <memcpy+0xc0>
1001866c:	3204      	adds	r2, #4
1001866e:	d008      	beq.n	10018682 <memcpy+0xe2>
10018670:	07d2      	lsls	r2, r2, #31
10018672:	bf1c      	itt	ne
10018674:	f811 3b01 	ldrbne.w	r3, [r1], #1
10018678:	f800 3b01 	strbne.w	r3, [r0], #1
1001867c:	d301      	bcc.n	10018682 <memcpy+0xe2>
1001867e:	880b      	ldrh	r3, [r1, #0]
10018680:	8003      	strh	r3, [r0, #0]
10018682:	4660      	mov	r0, ip
10018684:	4770      	bx	lr
10018686:	bf00      	nop
10018688:	2a08      	cmp	r2, #8
1001868a:	d313      	bcc.n	100186b4 <memcpy+0x114>
1001868c:	078b      	lsls	r3, r1, #30
1001868e:	d08d      	beq.n	100185ac <memcpy+0xc>
10018690:	f010 0303 	ands.w	r3, r0, #3
10018694:	d08a      	beq.n	100185ac <memcpy+0xc>
10018696:	f1c3 0304 	rsb	r3, r3, #4
1001869a:	1ad2      	subs	r2, r2, r3
1001869c:	07db      	lsls	r3, r3, #31
1001869e:	bf1c      	itt	ne
100186a0:	f811 3b01 	ldrbne.w	r3, [r1], #1
100186a4:	f800 3b01 	strbne.w	r3, [r0], #1
100186a8:	d380      	bcc.n	100185ac <memcpy+0xc>
100186aa:	f831 3b02 	ldrh.w	r3, [r1], #2
100186ae:	f820 3b02 	strh.w	r3, [r0], #2
100186b2:	e77b      	b.n	100185ac <memcpy+0xc>
100186b4:	3a04      	subs	r2, #4
100186b6:	d3d9      	bcc.n	1001866c <memcpy+0xcc>
100186b8:	3a01      	subs	r2, #1
100186ba:	f811 3b01 	ldrb.w	r3, [r1], #1
100186be:	f800 3b01 	strb.w	r3, [r0], #1
100186c2:	d2f9      	bcs.n	100186b8 <memcpy+0x118>
100186c4:	780b      	ldrb	r3, [r1, #0]
100186c6:	7003      	strb	r3, [r0, #0]
100186c8:	784b      	ldrb	r3, [r1, #1]
100186ca:	7043      	strb	r3, [r0, #1]
100186cc:	788b      	ldrb	r3, [r1, #2]
100186ce:	7083      	strb	r3, [r0, #2]
100186d0:	4660      	mov	r0, ip
100186d2:	4770      	bx	lr
	...

10018700 <strlen>:
10018700:	b430      	push	{r4, r5}
10018702:	f890 f000 	pld	[r0]
10018706:	f020 0107 	bic.w	r1, r0, #7
1001870a:	f06f 0c00 	mvn.w	ip, #0
1001870e:	f010 0407 	ands.w	r4, r0, #7
10018712:	f891 f020 	pld	[r1, #32]
10018716:	f040 8048 	bne.w	100187aa <strlen+0xaa>
1001871a:	f04f 0400 	mov.w	r4, #0
1001871e:	f06f 0007 	mvn.w	r0, #7
10018722:	e9d1 2300 	ldrd	r2, r3, [r1]
10018726:	f891 f040 	pld	[r1, #64]	@ 0x40
1001872a:	f100 0008 	add.w	r0, r0, #8
1001872e:	fa82 f24c 	uadd8	r2, r2, ip
10018732:	faa4 f28c 	sel	r2, r4, ip
10018736:	fa83 f34c 	uadd8	r3, r3, ip
1001873a:	faa2 f38c 	sel	r3, r2, ip
1001873e:	bb4b      	cbnz	r3, 10018794 <strlen+0x94>
10018740:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
10018744:	fa82 f24c 	uadd8	r2, r2, ip
10018748:	f100 0008 	add.w	r0, r0, #8
1001874c:	faa4 f28c 	sel	r2, r4, ip
10018750:	fa83 f34c 	uadd8	r3, r3, ip
10018754:	faa2 f38c 	sel	r3, r2, ip
10018758:	b9e3      	cbnz	r3, 10018794 <strlen+0x94>
1001875a:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1001875e:	fa82 f24c 	uadd8	r2, r2, ip
10018762:	f100 0008 	add.w	r0, r0, #8
10018766:	faa4 f28c 	sel	r2, r4, ip
1001876a:	fa83 f34c 	uadd8	r3, r3, ip
1001876e:	faa2 f38c 	sel	r3, r2, ip
10018772:	b97b      	cbnz	r3, 10018794 <strlen+0x94>
10018774:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
10018778:	f101 0120 	add.w	r1, r1, #32
1001877c:	fa82 f24c 	uadd8	r2, r2, ip
10018780:	f100 0008 	add.w	r0, r0, #8
10018784:	faa4 f28c 	sel	r2, r4, ip
10018788:	fa83 f34c 	uadd8	r3, r3, ip
1001878c:	faa2 f38c 	sel	r3, r2, ip
10018790:	2b00      	cmp	r3, #0
10018792:	d0c6      	beq.n	10018722 <strlen+0x22>
10018794:	2a00      	cmp	r2, #0
10018796:	bf04      	itt	eq
10018798:	3004      	addeq	r0, #4
1001879a:	461a      	moveq	r2, r3
1001879c:	ba12      	rev	r2, r2
1001879e:	fab2 f282 	clz	r2, r2
100187a2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
100187a6:	bc30      	pop	{r4, r5}
100187a8:	4770      	bx	lr
100187aa:	e9d1 2300 	ldrd	r2, r3, [r1]
100187ae:	f004 0503 	and.w	r5, r4, #3
100187b2:	f1c4 0000 	rsb	r0, r4, #0
100187b6:	ea4f 05c5 	mov.w	r5, r5, lsl #3
100187ba:	f014 0f04 	tst.w	r4, #4
100187be:	f891 f040 	pld	[r1, #64]	@ 0x40
100187c2:	fa0c f505 	lsl.w	r5, ip, r5
100187c6:	ea62 0205 	orn	r2, r2, r5
100187ca:	bf1c      	itt	ne
100187cc:	ea63 0305 	ornne	r3, r3, r5
100187d0:	4662      	movne	r2, ip
100187d2:	f04f 0400 	mov.w	r4, #0
100187d6:	e7aa      	b.n	1001872e <strlen+0x2e>

100187d8 <_wcrtomb_r>:
100187d8:	b570      	push	{r4, r5, r6, lr}
100187da:	4605      	mov	r5, r0
100187dc:	b084      	sub	sp, #16
100187de:	b15b      	cbz	r3, 100187f8 <_wcrtomb_r+0x20>
100187e0:	461c      	mov	r4, r3
100187e2:	4b0f      	ldr	r3, [pc, #60]	@ (10018820 <_wcrtomb_r+0x48>)
100187e4:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
100187e8:	4623      	mov	r3, r4
100187ea:	b169      	cbz	r1, 10018808 <_wcrtomb_r+0x30>
100187ec:	4628      	mov	r0, r5
100187ee:	47b0      	blx	r6
100187f0:	1c43      	adds	r3, r0, #1
100187f2:	d00f      	beq.n	10018814 <_wcrtomb_r+0x3c>
100187f4:	b004      	add	sp, #16
100187f6:	bd70      	pop	{r4, r5, r6, pc}
100187f8:	4b09      	ldr	r3, [pc, #36]	@ (10018820 <_wcrtomb_r+0x48>)
100187fa:	f500 7482 	add.w	r4, r0, #260	@ 0x104
100187fe:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10018802:	4623      	mov	r3, r4
10018804:	2900      	cmp	r1, #0
10018806:	d1f1      	bne.n	100187ec <_wcrtomb_r+0x14>
10018808:	460a      	mov	r2, r1
1001880a:	4628      	mov	r0, r5
1001880c:	a901      	add	r1, sp, #4
1001880e:	47b0      	blx	r6
10018810:	1c43      	adds	r3, r0, #1
10018812:	d1ef      	bne.n	100187f4 <_wcrtomb_r+0x1c>
10018814:	2200      	movs	r2, #0
10018816:	238a      	movs	r3, #138	@ 0x8a
10018818:	6022      	str	r2, [r4, #0]
1001881a:	602b      	str	r3, [r5, #0]
1001881c:	b004      	add	sp, #16
1001881e:	bd70      	pop	{r4, r5, r6, pc}
10018820:	2000042c 	.word	0x2000042c

10018824 <_wcsrtombs_r>:
10018824:	b500      	push	{lr}
10018826:	b083      	sub	sp, #12
10018828:	f8dd c010 	ldr.w	ip, [sp, #16]
1001882c:	e9cd 3c00 	strd	r3, ip, [sp]
10018830:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10018834:	f006 feb8 	bl	1001f5a8 <_wcsnrtombs_r>
10018838:	b003      	add	sp, #12
1001883a:	f85d fb04 	ldr.w	pc, [sp], #4
1001883e:	bf00      	nop

10018840 <frexp>:
10018840:	f8df c060 	ldr.w	ip, [pc, #96]	@ 100188a4 <frexp+0x64>
10018844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10018846:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
1001884a:	2700      	movs	r7, #0
1001884c:	4563      	cmp	r3, ip
1001884e:	4604      	mov	r4, r0
10018850:	460d      	mov	r5, r1
10018852:	4616      	mov	r6, r2
10018854:	6017      	str	r7, [r2, #0]
10018856:	d822      	bhi.n	1001889e <frexp+0x5e>
10018858:	4684      	mov	ip, r0
1001885a:	ea53 0c0c 	orrs.w	ip, r3, ip
1001885e:	d01e      	beq.n	1001889e <frexp+0x5e>
10018860:	f8df c044 	ldr.w	ip, [pc, #68]	@ 100188a8 <frexp+0x68>
10018864:	ea01 0c0c 	and.w	ip, r1, ip
10018868:	460a      	mov	r2, r1
1001886a:	f1bc 0f00 	cmp.w	ip, #0
1001886e:	d109      	bne.n	10018884 <frexp+0x44>
10018870:	4b0e      	ldr	r3, [pc, #56]	@ (100188ac <frexp+0x6c>)
10018872:	2200      	movs	r2, #0
10018874:	f008 f80c 	bl	10020890 <__aeabi_dmul>
10018878:	f06f 0735 	mvn.w	r7, #53	@ 0x35
1001887c:	4604      	mov	r4, r0
1001887e:	460a      	mov	r2, r1
10018880:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
10018884:	f022 42ff 	bic.w	r2, r2, #2139095040	@ 0x7f800000
10018888:	151b      	asrs	r3, r3, #20
1001888a:	f422 02e0 	bic.w	r2, r2, #7340032	@ 0x700000
1001888e:	f2a3 33fe 	subw	r3, r3, #1022	@ 0x3fe
10018892:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
10018896:	443b      	add	r3, r7
10018898:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
1001889c:	6033      	str	r3, [r6, #0]
1001889e:	4620      	mov	r0, r4
100188a0:	4629      	mov	r1, r5
100188a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100188a4:	7fefffff 	.word	0x7fefffff
100188a8:	7ff00000 	.word	0x7ff00000
100188ac:	43500000 	.word	0x43500000

100188b0 <register_fini>:
100188b0:	4b02      	ldr	r3, [pc, #8]	@ (100188bc <register_fini+0xc>)
100188b2:	b113      	cbz	r3, 100188ba <register_fini+0xa>
100188b4:	4802      	ldr	r0, [pc, #8]	@ (100188c0 <register_fini+0x10>)
100188b6:	f000 b805 	b.w	100188c4 <atexit>
100188ba:	4770      	bx	lr
100188bc:	00000000 	.word	0x00000000
100188c0:	1001f2a9 	.word	0x1001f2a9

100188c4 <atexit>:
100188c4:	2300      	movs	r3, #0
100188c6:	4601      	mov	r1, r0
100188c8:	461a      	mov	r2, r3
100188ca:	4618      	mov	r0, r3
100188cc:	f006 be96 	b.w	1001f5fc <__register_exitproc>

100188d0 <quorem>:
100188d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100188d4:	6903      	ldr	r3, [r0, #16]
100188d6:	690c      	ldr	r4, [r1, #16]
100188d8:	42a3      	cmp	r3, r4
100188da:	b083      	sub	sp, #12
100188dc:	f2c0 808a 	blt.w	100189f4 <quorem+0x124>
100188e0:	3c01      	subs	r4, #1
100188e2:	f101 0514 	add.w	r5, r1, #20
100188e6:	f100 0814 	add.w	r8, r0, #20
100188ea:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
100188ee:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
100188f2:	3301      	adds	r3, #1
100188f4:	429a      	cmp	r2, r3
100188f6:	468e      	mov	lr, r1
100188f8:	4681      	mov	r9, r0
100188fa:	ea4f 0184 	mov.w	r1, r4, lsl #2
100188fe:	eb05 0784 	add.w	r7, r5, r4, lsl #2
10018902:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
10018906:	fbb2 f6f3 	udiv	r6, r2, r3
1001890a:	d33a      	bcc.n	10018982 <quorem+0xb2>
1001890c:	e9cd 1500 	strd	r1, r5, [sp]
10018910:	2200      	movs	r2, #0
10018912:	46ac      	mov	ip, r5
10018914:	4640      	mov	r0, r8
10018916:	4613      	mov	r3, r2
10018918:	f85c 1b04 	ldr.w	r1, [ip], #4
1001891c:	6805      	ldr	r5, [r0, #0]
1001891e:	fa1f fb81 	uxth.w	fp, r1
10018922:	fb06 220b 	mla	r2, r6, fp, r2
10018926:	0c09      	lsrs	r1, r1, #16
10018928:	ea4f 4b12 	mov.w	fp, r2, lsr #16
1001892c:	fb06 bb01 	mla	fp, r6, r1, fp
10018930:	b292      	uxth	r2, r2
10018932:	b2a9      	uxth	r1, r5
10018934:	1a89      	subs	r1, r1, r2
10018936:	4419      	add	r1, r3
10018938:	fa1f f38b 	uxth.w	r3, fp
1001893c:	ebc3 4321 	rsb	r3, r3, r1, asr #16
10018940:	eb03 4315 	add.w	r3, r3, r5, lsr #16
10018944:	b289      	uxth	r1, r1
10018946:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1001894a:	4567      	cmp	r7, ip
1001894c:	f840 1b04 	str.w	r1, [r0], #4
10018950:	ea4f 421b 	mov.w	r2, fp, lsr #16
10018954:	ea4f 4323 	mov.w	r3, r3, asr #16
10018958:	d2de      	bcs.n	10018918 <quorem+0x48>
1001895a:	e9dd 1500 	ldrd	r1, r5, [sp]
1001895e:	f858 3001 	ldr.w	r3, [r8, r1]
10018962:	b973      	cbnz	r3, 10018982 <quorem+0xb2>
10018964:	f1aa 0a04 	sub.w	sl, sl, #4
10018968:	45d0      	cmp	r8, sl
1001896a:	d304      	bcc.n	10018976 <quorem+0xa6>
1001896c:	e007      	b.n	1001897e <quorem+0xae>
1001896e:	45d0      	cmp	r8, sl
10018970:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
10018974:	d203      	bcs.n	1001897e <quorem+0xae>
10018976:	f85a 3904 	ldr.w	r3, [sl], #-4
1001897a:	2b00      	cmp	r3, #0
1001897c:	d0f7      	beq.n	1001896e <quorem+0x9e>
1001897e:	f8c9 4010 	str.w	r4, [r9, #16]
10018982:	4671      	mov	r1, lr
10018984:	4648      	mov	r0, r9
10018986:	f004 fe67 	bl	1001d658 <__mcmp>
1001898a:	2800      	cmp	r0, #0
1001898c:	db2e      	blt.n	100189ec <quorem+0x11c>
1001898e:	4641      	mov	r1, r8
10018990:	2200      	movs	r2, #0
10018992:	f855 0b04 	ldr.w	r0, [r5], #4
10018996:	f8d1 c000 	ldr.w	ip, [r1]
1001899a:	fa1f fe80 	uxth.w	lr, r0
1001899e:	fa1f f38c 	uxth.w	r3, ip
100189a2:	eba3 030e 	sub.w	r3, r3, lr
100189a6:	4413      	add	r3, r2
100189a8:	0c02      	lsrs	r2, r0, #16
100189aa:	ebc2 4223 	rsb	r2, r2, r3, asr #16
100189ae:	eb02 421c 	add.w	r2, r2, ip, lsr #16
100189b2:	b29b      	uxth	r3, r3
100189b4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
100189b8:	42af      	cmp	r7, r5
100189ba:	f841 3b04 	str.w	r3, [r1], #4
100189be:	ea4f 4222 	mov.w	r2, r2, asr #16
100189c2:	d2e6      	bcs.n	10018992 <quorem+0xc2>
100189c4:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
100189c8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
100189cc:	b96a      	cbnz	r2, 100189ea <quorem+0x11a>
100189ce:	3b04      	subs	r3, #4
100189d0:	4598      	cmp	r8, r3
100189d2:	d304      	bcc.n	100189de <quorem+0x10e>
100189d4:	e007      	b.n	100189e6 <quorem+0x116>
100189d6:	4598      	cmp	r8, r3
100189d8:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
100189dc:	d203      	bcs.n	100189e6 <quorem+0x116>
100189de:	f853 2904 	ldr.w	r2, [r3], #-4
100189e2:	2a00      	cmp	r2, #0
100189e4:	d0f7      	beq.n	100189d6 <quorem+0x106>
100189e6:	f8c9 4010 	str.w	r4, [r9, #16]
100189ea:	3601      	adds	r6, #1
100189ec:	4630      	mov	r0, r6
100189ee:	b003      	add	sp, #12
100189f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100189f4:	2000      	movs	r0, #0
100189f6:	b003      	add	sp, #12
100189f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100189fc:	0000      	movs	r0, r0
	...

10018a00 <_dtoa_r>:
10018a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018a04:	6b81      	ldr	r1, [r0, #56]	@ 0x38
10018a06:	b09f      	sub	sp, #124	@ 0x7c
10018a08:	4616      	mov	r6, r2
10018a0a:	461f      	mov	r7, r3
10018a0c:	e9cd 6704 	strd	r6, r7, [sp, #16]
10018a10:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
10018a12:	9003      	str	r0, [sp, #12]
10018a14:	b149      	cbz	r1, 10018a2a <_dtoa_r+0x2a>
10018a16:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
10018a18:	604a      	str	r2, [r1, #4]
10018a1a:	2301      	movs	r3, #1
10018a1c:	4093      	lsls	r3, r2
10018a1e:	4604      	mov	r4, r0
10018a20:	608b      	str	r3, [r1, #8]
10018a22:	f004 fb5f 	bl	1001d0e4 <_Bfree>
10018a26:	2300      	movs	r3, #0
10018a28:	63a3      	str	r3, [r4, #56]	@ 0x38
10018a2a:	f1b7 0900 	subs.w	r9, r7, #0
10018a2e:	bfb4      	ite	lt
10018a30:	2301      	movlt	r3, #1
10018a32:	2300      	movge	r3, #0
10018a34:	602b      	str	r3, [r5, #0]
10018a36:	4b76      	ldr	r3, [pc, #472]	@ (10018c10 <_dtoa_r+0x210>)
10018a38:	bfbc      	itt	lt
10018a3a:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
10018a3e:	f8cd 9014 	strlt.w	r9, [sp, #20]
10018a42:	ea33 0309 	bics.w	r3, r3, r9
10018a46:	f000 80aa 	beq.w	10018b9e <_dtoa_r+0x19e>
10018a4a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
10018a4e:	2200      	movs	r2, #0
10018a50:	4618      	mov	r0, r3
10018a52:	4621      	mov	r1, r4
10018a54:	2300      	movs	r3, #0
10018a56:	e9cd 0108 	strd	r0, r1, [sp, #32]
10018a5a:	f008 f981 	bl	10020d60 <__aeabi_dcmpeq>
10018a5e:	4680      	mov	r8, r0
10018a60:	b168      	cbz	r0, 10018a7e <_dtoa_r+0x7e>
10018a62:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10018a64:	2301      	movs	r3, #1
10018a66:	6013      	str	r3, [r2, #0]
10018a68:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10018a6a:	b113      	cbz	r3, 10018a72 <_dtoa_r+0x72>
10018a6c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
10018a6e:	4b69      	ldr	r3, [pc, #420]	@ (10018c14 <_dtoa_r+0x214>)
10018a70:	6013      	str	r3, [r2, #0]
10018a72:	4b69      	ldr	r3, [pc, #420]	@ (10018c18 <_dtoa_r+0x218>)
10018a74:	930a      	str	r3, [sp, #40]	@ 0x28
10018a76:	980a      	ldr	r0, [sp, #40]	@ 0x28
10018a78:	b01f      	add	sp, #124	@ 0x7c
10018a7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018a7e:	ab1c      	add	r3, sp, #112	@ 0x70
10018a80:	9301      	str	r3, [sp, #4]
10018a82:	ab1d      	add	r3, sp, #116	@ 0x74
10018a84:	9300      	str	r3, [sp, #0]
10018a86:	9803      	ldr	r0, [sp, #12]
10018a88:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10018a8c:	f004 ff3c 	bl	1001d908 <__d2b>
10018a90:	ea5f 5519 	movs.w	r5, r9, lsr #20
10018a94:	4682      	mov	sl, r0
10018a96:	f040 8098 	bne.w	10018bca <_dtoa_r+0x1ca>
10018a9a:	e9dd 851c 	ldrd	r8, r5, [sp, #112]	@ 0x70
10018a9e:	4445      	add	r5, r8
10018aa0:	f205 4332 	addw	r3, r5, #1074	@ 0x432
10018aa4:	2b20      	cmp	r3, #32
10018aa6:	f340 8383 	ble.w	100191b0 <_dtoa_r+0x7b0>
10018aaa:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
10018aae:	fa09 f903 	lsl.w	r9, r9, r3
10018ab2:	f205 4312 	addw	r3, r5, #1042	@ 0x412
10018ab6:	fa26 f303 	lsr.w	r3, r6, r3
10018aba:	ea49 0003 	orr.w	r0, r9, r3
10018abe:	f007 fe6d 	bl	1002079c <__aeabi_ui2d>
10018ac2:	2301      	movs	r3, #1
10018ac4:	3d01      	subs	r5, #1
10018ac6:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
10018aca:	9311      	str	r3, [sp, #68]	@ 0x44
10018acc:	4b53      	ldr	r3, [pc, #332]	@ (10018c1c <_dtoa_r+0x21c>)
10018ace:	2200      	movs	r2, #0
10018ad0:	f007 fd26 	bl	10020520 <__aeabi_dsub>
10018ad4:	a348      	add	r3, pc, #288	@ (adr r3, 10018bf8 <_dtoa_r+0x1f8>)
10018ad6:	e9d3 2300 	ldrd	r2, r3, [r3]
10018ada:	f007 fed9 	bl	10020890 <__aeabi_dmul>
10018ade:	a348      	add	r3, pc, #288	@ (adr r3, 10018c00 <_dtoa_r+0x200>)
10018ae0:	e9d3 2300 	ldrd	r2, r3, [r3]
10018ae4:	f007 fd1e 	bl	10020524 <__adddf3>
10018ae8:	4606      	mov	r6, r0
10018aea:	4628      	mov	r0, r5
10018aec:	460f      	mov	r7, r1
10018aee:	f007 fe65 	bl	100207bc <__aeabi_i2d>
10018af2:	a345      	add	r3, pc, #276	@ (adr r3, 10018c08 <_dtoa_r+0x208>)
10018af4:	e9d3 2300 	ldrd	r2, r3, [r3]
10018af8:	f007 feca 	bl	10020890 <__aeabi_dmul>
10018afc:	4602      	mov	r2, r0
10018afe:	460b      	mov	r3, r1
10018b00:	4630      	mov	r0, r6
10018b02:	4639      	mov	r1, r7
10018b04:	f007 fd0e 	bl	10020524 <__adddf3>
10018b08:	4606      	mov	r6, r0
10018b0a:	460f      	mov	r7, r1
10018b0c:	f008 f970 	bl	10020df0 <__aeabi_d2iz>
10018b10:	2200      	movs	r2, #0
10018b12:	4683      	mov	fp, r0
10018b14:	2300      	movs	r3, #0
10018b16:	4630      	mov	r0, r6
10018b18:	4639      	mov	r1, r7
10018b1a:	f008 f92b 	bl	10020d74 <__aeabi_dcmplt>
10018b1e:	2800      	cmp	r0, #0
10018b20:	f040 831a 	bne.w	10019158 <_dtoa_r+0x758>
10018b24:	eba8 0805 	sub.w	r8, r8, r5
10018b28:	f1bb 0f16 	cmp.w	fp, #22
10018b2c:	f108 34ff 	add.w	r4, r8, #4294967295	@ 0xffffffff
10018b30:	f200 818b 	bhi.w	10018e4a <_dtoa_r+0x44a>
10018b34:	4d3a      	ldr	r5, [pc, #232]	@ (10018c20 <_dtoa_r+0x220>)
10018b36:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
10018b3a:	e9d5 2300 	ldrd	r2, r3, [r5]
10018b3e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10018b42:	f008 f917 	bl	10020d74 <__aeabi_dcmplt>
10018b46:	2800      	cmp	r0, #0
10018b48:	d070      	beq.n	10018c2c <_dtoa_r+0x22c>
10018b4a:	2300      	movs	r3, #0
10018b4c:	2c00      	cmp	r4, #0
10018b4e:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10018b52:	9310      	str	r3, [sp, #64]	@ 0x40
10018b54:	f2c0 817e 	blt.w	10018e54 <_dtoa_r+0x454>
10018b58:	2300      	movs	r3, #0
10018b5a:	930b      	str	r3, [sp, #44]	@ 0x2c
10018b5c:	f1bb 0f00 	cmp.w	fp, #0
10018b60:	da6a      	bge.n	10018c38 <_dtoa_r+0x238>
10018b62:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10018b64:	eba3 030b 	sub.w	r3, r3, fp
10018b68:	930b      	str	r3, [sp, #44]	@ 0x2c
10018b6a:	f1cb 0300 	rsb	r3, fp, #0
10018b6e:	e9cd b30e 	strd	fp, r3, [sp, #56]	@ 0x38
10018b72:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10018b74:	2b09      	cmp	r3, #9
10018b76:	f04f 0b00 	mov.w	fp, #0
10018b7a:	d865      	bhi.n	10018c48 <_dtoa_r+0x248>
10018b7c:	2b05      	cmp	r3, #5
10018b7e:	f340 831c 	ble.w	100191ba <_dtoa_r+0x7ba>
10018b82:	3b04      	subs	r3, #4
10018b84:	9328      	str	r3, [sp, #160]	@ 0xa0
10018b86:	2500      	movs	r5, #0
10018b88:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10018b8a:	3b02      	subs	r3, #2
10018b8c:	2b03      	cmp	r3, #3
10018b8e:	f200 8623 	bhi.w	100197d8 <_dtoa_r+0xdd8>
10018b92:	e8df f013 	tbh	[pc, r3, lsl #1]
10018b96:	0460      	.short	0x0460
10018b98:	0454045d 	.word	0x0454045d
10018b9c:	0438      	.short	0x0438
10018b9e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10018ba0:	f3c9 0913 	ubfx	r9, r9, #0, #20
10018ba4:	f242 730f 	movw	r3, #9999	@ 0x270f
10018ba8:	ea59 0906 	orrs.w	r9, r9, r6
10018bac:	6013      	str	r3, [r2, #0]
10018bae:	d11c      	bne.n	10018bea <_dtoa_r+0x1ea>
10018bb0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10018bb2:	2b00      	cmp	r3, #0
10018bb4:	f000 862b 	beq.w	1001980e <_dtoa_r+0xe0e>
10018bb8:	4b1a      	ldr	r3, [pc, #104]	@ (10018c24 <_dtoa_r+0x224>)
10018bba:	930a      	str	r3, [sp, #40]	@ 0x28
10018bbc:	3308      	adds	r3, #8
10018bbe:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
10018bc0:	980a      	ldr	r0, [sp, #40]	@ 0x28
10018bc2:	6013      	str	r3, [r2, #0]
10018bc4:	b01f      	add	sp, #124	@ 0x7c
10018bc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018bca:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
10018bce:	f3c2 0313 	ubfx	r3, r2, #0, #20
10018bd2:	4608      	mov	r0, r1
10018bd4:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
10018bd8:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
10018bdc:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
10018be0:	f8dd 8070 	ldr.w	r8, [sp, #112]	@ 0x70
10018be4:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
10018be8:	e770      	b.n	10018acc <_dtoa_r+0xcc>
10018bea:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10018bec:	2b00      	cmp	r3, #0
10018bee:	f040 83e7 	bne.w	100193c0 <_dtoa_r+0x9c0>
10018bf2:	4b0d      	ldr	r3, [pc, #52]	@ (10018c28 <_dtoa_r+0x228>)
10018bf4:	930a      	str	r3, [sp, #40]	@ 0x28
10018bf6:	e73e      	b.n	10018a76 <_dtoa_r+0x76>
10018bf8:	636f4361 	.word	0x636f4361
10018bfc:	3fd287a7 	.word	0x3fd287a7
10018c00:	8b60c8b3 	.word	0x8b60c8b3
10018c04:	3fc68a28 	.word	0x3fc68a28
10018c08:	509f79fb 	.word	0x509f79fb
10018c0c:	3fd34413 	.word	0x3fd34413
10018c10:	7ff00000 	.word	0x7ff00000
10018c14:	10023ae5 	.word	0x10023ae5
10018c18:	10023ae4 	.word	0x10023ae4
10018c1c:	3ff80000 	.word	0x3ff80000
10018c20:	10023de0 	.word	0x10023de0
10018c24:	10023c70 	.word	0x10023c70
10018c28:	10023c7c 	.word	0x10023c7c
10018c2c:	f1b8 0f00 	cmp.w	r8, #0
10018c30:	f340 8460 	ble.w	100194f4 <_dtoa_r+0xaf4>
10018c34:	9010      	str	r0, [sp, #64]	@ 0x40
10018c36:	900b      	str	r0, [sp, #44]	@ 0x2c
10018c38:	2300      	movs	r3, #0
10018c3a:	930f      	str	r3, [sp, #60]	@ 0x3c
10018c3c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10018c3e:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10018c42:	2b09      	cmp	r3, #9
10018c44:	445c      	add	r4, fp
10018c46:	d999      	bls.n	10018b7c <_dtoa_r+0x17c>
10018c48:	2300      	movs	r3, #0
10018c4a:	e9cd 3328 	strd	r3, r3, [sp, #160]	@ 0xa0
10018c4e:	2501      	movs	r5, #1
10018c50:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10018c54:	950c      	str	r5, [sp, #48]	@ 0x30
10018c56:	9306      	str	r3, [sp, #24]
10018c58:	9b03      	ldr	r3, [sp, #12]
10018c5a:	2100      	movs	r1, #0
10018c5c:	63d9      	str	r1, [r3, #60]	@ 0x3c
10018c5e:	9b06      	ldr	r3, [sp, #24]
10018c60:	9318      	str	r3, [sp, #96]	@ 0x60
10018c62:	9803      	ldr	r0, [sp, #12]
10018c64:	f004 fa18 	bl	1001d098 <_Balloc>
10018c68:	900a      	str	r0, [sp, #40]	@ 0x28
10018c6a:	2800      	cmp	r0, #0
10018c6c:	f000 85bd 	beq.w	100197ea <_dtoa_r+0xdea>
10018c70:	9b03      	ldr	r3, [sp, #12]
10018c72:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10018c74:	639a      	str	r2, [r3, #56]	@ 0x38
10018c76:	9b06      	ldr	r3, [sp, #24]
10018c78:	2b0e      	cmp	r3, #14
10018c7a:	f200 8115 	bhi.w	10018ea8 <_dtoa_r+0x4a8>
10018c7e:	2d00      	cmp	r5, #0
10018c80:	f000 8112 	beq.w	10018ea8 <_dtoa_r+0x4a8>
10018c84:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10018c86:	2a00      	cmp	r2, #0
10018c88:	f340 843b 	ble.w	10019502 <_dtoa_r+0xb02>
10018c8c:	4db2      	ldr	r5, [pc, #712]	@ (10018f58 <_dtoa_r+0x558>)
10018c8e:	f002 030f 	and.w	r3, r2, #15
10018c92:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10018c96:	e9d3 8900 	ldrd	r8, r9, [r3]
10018c9a:	4613      	mov	r3, r2
10018c9c:	1115      	asrs	r5, r2, #4
10018c9e:	05da      	lsls	r2, r3, #23
10018ca0:	f140 83fa 	bpl.w	10019498 <_dtoa_r+0xa98>
10018ca4:	4bad      	ldr	r3, [pc, #692]	@ (10018f5c <_dtoa_r+0x55c>)
10018ca6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10018caa:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
10018cae:	f007 ff19 	bl	10020ae4 <__aeabi_ddiv>
10018cb2:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
10018cb6:	f005 050f 	and.w	r5, r5, #15
10018cba:	2703      	movs	r7, #3
10018cbc:	b17d      	cbz	r5, 10018cde <_dtoa_r+0x2de>
10018cbe:	4ea7      	ldr	r6, [pc, #668]	@ (10018f5c <_dtoa_r+0x55c>)
10018cc0:	07eb      	lsls	r3, r5, #31
10018cc2:	d508      	bpl.n	10018cd6 <_dtoa_r+0x2d6>
10018cc4:	4640      	mov	r0, r8
10018cc6:	4649      	mov	r1, r9
10018cc8:	e9d6 2300 	ldrd	r2, r3, [r6]
10018ccc:	f007 fde0 	bl	10020890 <__aeabi_dmul>
10018cd0:	3701      	adds	r7, #1
10018cd2:	4680      	mov	r8, r0
10018cd4:	4689      	mov	r9, r1
10018cd6:	106d      	asrs	r5, r5, #1
10018cd8:	f106 0608 	add.w	r6, r6, #8
10018cdc:	d1f0      	bne.n	10018cc0 <_dtoa_r+0x2c0>
10018cde:	4642      	mov	r2, r8
10018ce0:	464b      	mov	r3, r9
10018ce2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
10018ce6:	f007 fefd 	bl	10020ae4 <__aeabi_ddiv>
10018cea:	4680      	mov	r8, r0
10018cec:	4689      	mov	r9, r1
10018cee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10018cf0:	b143      	cbz	r3, 10018d04 <_dtoa_r+0x304>
10018cf2:	4b9b      	ldr	r3, [pc, #620]	@ (10018f60 <_dtoa_r+0x560>)
10018cf4:	2200      	movs	r2, #0
10018cf6:	4640      	mov	r0, r8
10018cf8:	4649      	mov	r1, r9
10018cfa:	f008 f83b 	bl	10020d74 <__aeabi_dcmplt>
10018cfe:	2800      	cmp	r0, #0
10018d00:	f040 84f1 	bne.w	100196e6 <_dtoa_r+0xce6>
10018d04:	4638      	mov	r0, r7
10018d06:	f007 fd59 	bl	100207bc <__aeabi_i2d>
10018d0a:	4642      	mov	r2, r8
10018d0c:	464b      	mov	r3, r9
10018d0e:	f007 fdbf 	bl	10020890 <__aeabi_dmul>
10018d12:	4b94      	ldr	r3, [pc, #592]	@ (10018f64 <_dtoa_r+0x564>)
10018d14:	2200      	movs	r2, #0
10018d16:	f007 fc05 	bl	10020524 <__adddf3>
10018d1a:	9b06      	ldr	r3, [sp, #24]
10018d1c:	4606      	mov	r6, r0
10018d1e:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10018d22:	2b00      	cmp	r3, #0
10018d24:	f000 80a9 	beq.w	10018e7a <_dtoa_r+0x47a>
10018d28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018d2a:	9319      	str	r3, [sp, #100]	@ 0x64
10018d2c:	9b06      	ldr	r3, [sp, #24]
10018d2e:	9312      	str	r3, [sp, #72]	@ 0x48
10018d30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10018d32:	4d89      	ldr	r5, [pc, #548]	@ (10018f58 <_dtoa_r+0x558>)
10018d34:	4649      	mov	r1, r9
10018d36:	4640      	mov	r0, r8
10018d38:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
10018d3c:	1c5e      	adds	r6, r3, #1
10018d3e:	f008 f857 	bl	10020df0 <__aeabi_d2iz>
10018d42:	9912      	ldr	r1, [sp, #72]	@ 0x48
10018d44:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
10018d48:	e953 1202 	ldrd	r1, r2, [r3, #-8]
10018d4c:	4607      	mov	r7, r0
10018d4e:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
10018d52:	f007 fd33 	bl	100207bc <__aeabi_i2d>
10018d56:	4602      	mov	r2, r0
10018d58:	460b      	mov	r3, r1
10018d5a:	4640      	mov	r0, r8
10018d5c:	4649      	mov	r1, r9
10018d5e:	f007 fbdf 	bl	10020520 <__aeabi_dsub>
10018d62:	4689      	mov	r9, r1
10018d64:	990c      	ldr	r1, [sp, #48]	@ 0x30
10018d66:	3730      	adds	r7, #48	@ 0x30
10018d68:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	@ 0x58
10018d6c:	4680      	mov	r8, r0
10018d6e:	b2ff      	uxtb	r7, r7
10018d70:	2900      	cmp	r1, #0
10018d72:	f000 8453 	beq.w	1001961c <_dtoa_r+0xc1c>
10018d76:	497c      	ldr	r1, [pc, #496]	@ (10018f68 <_dtoa_r+0x568>)
10018d78:	2000      	movs	r0, #0
10018d7a:	f007 feb3 	bl	10020ae4 <__aeabi_ddiv>
10018d7e:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
10018d82:	f007 fbcd 	bl	10020520 <__aeabi_dsub>
10018d86:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
10018d88:	4602      	mov	r2, r0
10018d8a:	460b      	mov	r3, r1
10018d8c:	e9cd 2314 	strd	r2, r3, [sp, #80]	@ 0x50
10018d90:	702f      	strb	r7, [r5, #0]
10018d92:	4642      	mov	r2, r8
10018d94:	464b      	mov	r3, r9
10018d96:	f008 f80b 	bl	10020db0 <__aeabi_dcmpgt>
10018d9a:	2800      	cmp	r0, #0
10018d9c:	f040 8497 	bne.w	100196ce <_dtoa_r+0xcce>
10018da0:	e9cd b41a 	strd	fp, r4, [sp, #104]	@ 0x68
10018da4:	f8cd a058 	str.w	sl, [sp, #88]	@ 0x58
10018da8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
10018daa:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	@ 0x50
10018dae:	2700      	movs	r7, #0
10018db0:	e02a      	b.n	10018e08 <_dtoa_r+0x408>
10018db2:	3701      	adds	r7, #1
10018db4:	42af      	cmp	r7, r5
10018db6:	f280 84de 	bge.w	10019776 <_dtoa_r+0xd76>
10018dba:	4b6c      	ldr	r3, [pc, #432]	@ (10018f6c <_dtoa_r+0x56c>)
10018dbc:	4650      	mov	r0, sl
10018dbe:	4659      	mov	r1, fp
10018dc0:	2200      	movs	r2, #0
10018dc2:	f007 fd65 	bl	10020890 <__aeabi_dmul>
10018dc6:	4b69      	ldr	r3, [pc, #420]	@ (10018f6c <_dtoa_r+0x56c>)
10018dc8:	2200      	movs	r2, #0
10018dca:	4682      	mov	sl, r0
10018dcc:	468b      	mov	fp, r1
10018dce:	4640      	mov	r0, r8
10018dd0:	4649      	mov	r1, r9
10018dd2:	f007 fd5d 	bl	10020890 <__aeabi_dmul>
10018dd6:	4689      	mov	r9, r1
10018dd8:	4680      	mov	r8, r0
10018dda:	f008 f809 	bl	10020df0 <__aeabi_d2iz>
10018dde:	4604      	mov	r4, r0
10018de0:	f007 fcec 	bl	100207bc <__aeabi_i2d>
10018de4:	4602      	mov	r2, r0
10018de6:	460b      	mov	r3, r1
10018de8:	4640      	mov	r0, r8
10018dea:	4649      	mov	r1, r9
10018dec:	f007 fb98 	bl	10020520 <__aeabi_dsub>
10018df0:	3430      	adds	r4, #48	@ 0x30
10018df2:	f806 4b01 	strb.w	r4, [r6], #1
10018df6:	4652      	mov	r2, sl
10018df8:	465b      	mov	r3, fp
10018dfa:	4680      	mov	r8, r0
10018dfc:	4689      	mov	r9, r1
10018dfe:	f007 ffb9 	bl	10020d74 <__aeabi_dcmplt>
10018e02:	2800      	cmp	r0, #0
10018e04:	f040 84b4 	bne.w	10019770 <_dtoa_r+0xd70>
10018e08:	4642      	mov	r2, r8
10018e0a:	464b      	mov	r3, r9
10018e0c:	4954      	ldr	r1, [pc, #336]	@ (10018f60 <_dtoa_r+0x560>)
10018e0e:	2000      	movs	r0, #0
10018e10:	f007 fb86 	bl	10020520 <__aeabi_dsub>
10018e14:	4652      	mov	r2, sl
10018e16:	465b      	mov	r3, fp
10018e18:	f007 ffac 	bl	10020d74 <__aeabi_dcmplt>
10018e1c:	2800      	cmp	r0, #0
10018e1e:	d0c8      	beq.n	10018db2 <_dtoa_r+0x3b2>
10018e20:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10018e22:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
10018e26:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10018e28:	4637      	mov	r7, r6
10018e2a:	f103 0801 	add.w	r8, r3, #1
10018e2e:	e002      	b.n	10018e36 <_dtoa_r+0x436>
10018e30:	4297      	cmp	r7, r2
10018e32:	f000 847c 	beq.w	1001972e <_dtoa_r+0xd2e>
10018e36:	463e      	mov	r6, r7
10018e38:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
10018e3c:	2b39      	cmp	r3, #57	@ 0x39
10018e3e:	d0f7      	beq.n	10018e30 <_dtoa_r+0x430>
10018e40:	3301      	adds	r3, #1
10018e42:	b2db      	uxtb	r3, r3
10018e44:	703b      	strb	r3, [r7, #0]
10018e46:	4645      	mov	r5, r8
10018e48:	e175      	b.n	10019136 <_dtoa_r+0x736>
10018e4a:	2301      	movs	r3, #1
10018e4c:	2c00      	cmp	r4, #0
10018e4e:	9310      	str	r3, [sp, #64]	@ 0x40
10018e50:	f6bf ae82 	bge.w	10018b58 <_dtoa_r+0x158>
10018e54:	f1c8 0301 	rsb	r3, r8, #1
10018e58:	930b      	str	r3, [sp, #44]	@ 0x2c
10018e5a:	2400      	movs	r4, #0
10018e5c:	e67e      	b.n	10018b5c <_dtoa_r+0x15c>
10018e5e:	4638      	mov	r0, r7
10018e60:	f007 fcac 	bl	100207bc <__aeabi_i2d>
10018e64:	4642      	mov	r2, r8
10018e66:	464b      	mov	r3, r9
10018e68:	f007 fd12 	bl	10020890 <__aeabi_dmul>
10018e6c:	4b3d      	ldr	r3, [pc, #244]	@ (10018f64 <_dtoa_r+0x564>)
10018e6e:	2200      	movs	r2, #0
10018e70:	f007 fb58 	bl	10020524 <__adddf3>
10018e74:	4606      	mov	r6, r0
10018e76:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10018e7a:	4b3d      	ldr	r3, [pc, #244]	@ (10018f70 <_dtoa_r+0x570>)
10018e7c:	4640      	mov	r0, r8
10018e7e:	4649      	mov	r1, r9
10018e80:	2200      	movs	r2, #0
10018e82:	f007 fb4d 	bl	10020520 <__aeabi_dsub>
10018e86:	4632      	mov	r2, r6
10018e88:	463b      	mov	r3, r7
10018e8a:	4680      	mov	r8, r0
10018e8c:	4689      	mov	r9, r1
10018e8e:	f007 ff8f 	bl	10020db0 <__aeabi_dcmpgt>
10018e92:	2800      	cmp	r0, #0
10018e94:	f040 845a 	bne.w	1001974c <_dtoa_r+0xd4c>
10018e98:	4640      	mov	r0, r8
10018e9a:	4649      	mov	r1, r9
10018e9c:	4632      	mov	r2, r6
10018e9e:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
10018ea2:	f007 ff67 	bl	10020d74 <__aeabi_dcmplt>
10018ea6:	bb28      	cbnz	r0, 10018ef4 <_dtoa_r+0x4f4>
10018ea8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10018eaa:	2b00      	cmp	r3, #0
10018eac:	f2c0 8092 	blt.w	10018fd4 <_dtoa_r+0x5d4>
10018eb0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10018eb2:	2a0e      	cmp	r2, #14
10018eb4:	f300 808e 	bgt.w	10018fd4 <_dtoa_r+0x5d4>
10018eb8:	4d27      	ldr	r5, [pc, #156]	@ (10018f58 <_dtoa_r+0x558>)
10018eba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018ebc:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
10018ec0:	e9d5 3400 	ldrd	r3, r4, [r5]
10018ec4:	e9cd 3404 	strd	r3, r4, [sp, #16]
10018ec8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10018eca:	2b00      	cmp	r3, #0
10018ecc:	da19      	bge.n	10018f02 <_dtoa_r+0x502>
10018ece:	9b06      	ldr	r3, [sp, #24]
10018ed0:	2b00      	cmp	r3, #0
10018ed2:	dc16      	bgt.n	10018f02 <_dtoa_r+0x502>
10018ed4:	d10e      	bne.n	10018ef4 <_dtoa_r+0x4f4>
10018ed6:	4b26      	ldr	r3, [pc, #152]	@ (10018f70 <_dtoa_r+0x570>)
10018ed8:	2200      	movs	r2, #0
10018eda:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10018ede:	f007 fcd7 	bl	10020890 <__aeabi_dmul>
10018ee2:	4602      	mov	r2, r0
10018ee4:	460b      	mov	r3, r1
10018ee6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10018eea:	f007 ff4d 	bl	10020d88 <__aeabi_dcmple>
10018eee:	2800      	cmp	r0, #0
10018ef0:	f000 842c 	beq.w	1001974c <_dtoa_r+0xd4c>
10018ef4:	f04f 0900 	mov.w	r9, #0
10018ef8:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10018efa:	464f      	mov	r7, r9
10018efc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10018efe:	43dd      	mvns	r5, r3
10018f00:	e225      	b.n	1001934e <_dtoa_r+0x94e>
10018f02:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
10018f06:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
10018f0a:	4622      	mov	r2, r4
10018f0c:	462b      	mov	r3, r5
10018f0e:	4640      	mov	r0, r8
10018f10:	4649      	mov	r1, r9
10018f12:	f007 fde7 	bl	10020ae4 <__aeabi_ddiv>
10018f16:	f007 ff6b 	bl	10020df0 <__aeabi_d2iz>
10018f1a:	4606      	mov	r6, r0
10018f1c:	f007 fc4e 	bl	100207bc <__aeabi_i2d>
10018f20:	4622      	mov	r2, r4
10018f22:	462b      	mov	r3, r5
10018f24:	f007 fcb4 	bl	10020890 <__aeabi_dmul>
10018f28:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
10018f2a:	460b      	mov	r3, r1
10018f2c:	4602      	mov	r2, r0
10018f2e:	4649      	mov	r1, r9
10018f30:	4640      	mov	r0, r8
10018f32:	f007 faf5 	bl	10020520 <__aeabi_dsub>
10018f36:	f106 0330 	add.w	r3, r6, #48	@ 0x30
10018f3a:	f807 3b01 	strb.w	r3, [r7], #1
10018f3e:	9b06      	ldr	r3, [sp, #24]
10018f40:	2b01      	cmp	r3, #1
10018f42:	f000 8312 	beq.w	1001956a <_dtoa_r+0xb6a>
10018f46:	2501      	movs	r5, #1
10018f48:	f8cd a018 	str.w	sl, [sp, #24]
10018f4c:	4699      	mov	r9, r3
10018f4e:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
10018f52:	46a8      	mov	r8, r5
10018f54:	e02c      	b.n	10018fb0 <_dtoa_r+0x5b0>
10018f56:	bf00      	nop
10018f58:	10023de0 	.word	0x10023de0
10018f5c:	10023db8 	.word	0x10023db8
10018f60:	3ff00000 	.word	0x3ff00000
10018f64:	401c0000 	.word	0x401c0000
10018f68:	3fe00000 	.word	0x3fe00000
10018f6c:	40240000 	.word	0x40240000
10018f70:	40140000 	.word	0x40140000
10018f74:	4652      	mov	r2, sl
10018f76:	465b      	mov	r3, fp
10018f78:	4620      	mov	r0, r4
10018f7a:	4629      	mov	r1, r5
10018f7c:	f007 fdb2 	bl	10020ae4 <__aeabi_ddiv>
10018f80:	f007 ff36 	bl	10020df0 <__aeabi_d2iz>
10018f84:	4606      	mov	r6, r0
10018f86:	f007 fc19 	bl	100207bc <__aeabi_i2d>
10018f8a:	4652      	mov	r2, sl
10018f8c:	465b      	mov	r3, fp
10018f8e:	f007 fc7f 	bl	10020890 <__aeabi_dmul>
10018f92:	f108 0801 	add.w	r8, r8, #1
10018f96:	460b      	mov	r3, r1
10018f98:	4602      	mov	r2, r0
10018f9a:	4629      	mov	r1, r5
10018f9c:	4620      	mov	r0, r4
10018f9e:	f007 fabf 	bl	10020520 <__aeabi_dsub>
10018fa2:	f106 0330 	add.w	r3, r6, #48	@ 0x30
10018fa6:	45c8      	cmp	r8, r9
10018fa8:	f807 3b01 	strb.w	r3, [r7], #1
10018fac:	f000 82db 	beq.w	10019566 <_dtoa_r+0xb66>
10018fb0:	4bb9      	ldr	r3, [pc, #740]	@ (10019298 <_dtoa_r+0x898>)
10018fb2:	2200      	movs	r2, #0
10018fb4:	f007 fc6c 	bl	10020890 <__aeabi_dmul>
10018fb8:	2200      	movs	r2, #0
10018fba:	2300      	movs	r3, #0
10018fbc:	4604      	mov	r4, r0
10018fbe:	460d      	mov	r5, r1
10018fc0:	f007 fece 	bl	10020d60 <__aeabi_dcmpeq>
10018fc4:	2800      	cmp	r0, #0
10018fc6:	d0d5      	beq.n	10018f74 <_dtoa_r+0x574>
10018fc8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10018fca:	f8dd a018 	ldr.w	sl, [sp, #24]
10018fce:	3501      	adds	r5, #1
10018fd0:	463e      	mov	r6, r7
10018fd2:	e0b0      	b.n	10019136 <_dtoa_r+0x736>
10018fd4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10018fd6:	2a00      	cmp	r2, #0
10018fd8:	f040 80d2 	bne.w	10019180 <_dtoa_r+0x780>
10018fdc:	2300      	movs	r3, #0
10018fde:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10018fe0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
10018fe2:	930c      	str	r3, [sp, #48]	@ 0x30
10018fe4:	461f      	mov	r7, r3
10018fe6:	b156      	cbz	r6, 10018ffe <_dtoa_r+0x5fe>
10018fe8:	2c00      	cmp	r4, #0
10018fea:	dd08      	ble.n	10018ffe <_dtoa_r+0x5fe>
10018fec:	42a6      	cmp	r6, r4
10018fee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10018ff0:	4633      	mov	r3, r6
10018ff2:	bfa8      	it	ge
10018ff4:	4623      	movge	r3, r4
10018ff6:	1ad2      	subs	r2, r2, r3
10018ff8:	920b      	str	r2, [sp, #44]	@ 0x2c
10018ffa:	1af6      	subs	r6, r6, r3
10018ffc:	1ae4      	subs	r4, r4, r3
10018ffe:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10019000:	b153      	cbz	r3, 10019018 <_dtoa_r+0x618>
10019002:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10019004:	b113      	cbz	r3, 1001900c <_dtoa_r+0x60c>
10019006:	2d00      	cmp	r5, #0
10019008:	f040 82e8 	bne.w	100195dc <_dtoa_r+0xbdc>
1001900c:	4651      	mov	r1, sl
1001900e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10019010:	9803      	ldr	r0, [sp, #12]
10019012:	f004 fa4f 	bl	1001d4b4 <__pow5mult>
10019016:	4682      	mov	sl, r0
10019018:	9803      	ldr	r0, [sp, #12]
1001901a:	2101      	movs	r1, #1
1001901c:	f004 f966 	bl	1001d2ec <__i2b>
10019020:	4681      	mov	r9, r0
10019022:	f1bb 0f00 	cmp.w	fp, #0
10019026:	f040 81b6 	bne.w	10019396 <_dtoa_r+0x996>
1001902a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001902c:	2b01      	cmp	r3, #1
1001902e:	f340 81cc 	ble.w	100193ca <_dtoa_r+0x9ca>
10019032:	2001      	movs	r0, #1
10019034:	4420      	add	r0, r4
10019036:	f010 001f 	ands.w	r0, r0, #31
1001903a:	f000 809a 	beq.w	10019172 <_dtoa_r+0x772>
1001903e:	f1c0 0320 	rsb	r3, r0, #32
10019042:	2b04      	cmp	r3, #4
10019044:	f340 81da 	ble.w	100193fc <_dtoa_r+0x9fc>
10019048:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001904a:	f1c0 001c 	rsb	r0, r0, #28
1001904e:	4403      	add	r3, r0
10019050:	930b      	str	r3, [sp, #44]	@ 0x2c
10019052:	4406      	add	r6, r0
10019054:	4404      	add	r4, r0
10019056:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10019058:	2b00      	cmp	r3, #0
1001905a:	dd05      	ble.n	10019068 <_dtoa_r+0x668>
1001905c:	4651      	mov	r1, sl
1001905e:	9803      	ldr	r0, [sp, #12]
10019060:	461a      	mov	r2, r3
10019062:	f004 fa81 	bl	1001d568 <__lshift>
10019066:	4682      	mov	sl, r0
10019068:	2c00      	cmp	r4, #0
1001906a:	dd05      	ble.n	10019078 <_dtoa_r+0x678>
1001906c:	4649      	mov	r1, r9
1001906e:	9803      	ldr	r0, [sp, #12]
10019070:	4622      	mov	r2, r4
10019072:	f004 fa79 	bl	1001d568 <__lshift>
10019076:	4681      	mov	r9, r0
10019078:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001907a:	2b00      	cmp	r3, #0
1001907c:	f040 8170 	bne.w	10019360 <_dtoa_r+0x960>
10019080:	9b06      	ldr	r3, [sp, #24]
10019082:	2b00      	cmp	r3, #0
10019084:	f340 8148 	ble.w	10019318 <_dtoa_r+0x918>
10019088:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001908a:	2b00      	cmp	r3, #0
1001908c:	f040 80a4 	bne.w	100191d8 <_dtoa_r+0x7d8>
10019090:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10019092:	3501      	adds	r5, #1
10019094:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
10019098:	9c06      	ldr	r4, [sp, #24]
1001909a:	f8dd b00c 	ldr.w	fp, [sp, #12]
1001909e:	2601      	movs	r6, #1
100190a0:	e007      	b.n	100190b2 <_dtoa_r+0x6b2>
100190a2:	4651      	mov	r1, sl
100190a4:	2300      	movs	r3, #0
100190a6:	220a      	movs	r2, #10
100190a8:	4658      	mov	r0, fp
100190aa:	f004 f825 	bl	1001d0f8 <__multadd>
100190ae:	3601      	adds	r6, #1
100190b0:	4682      	mov	sl, r0
100190b2:	4649      	mov	r1, r9
100190b4:	4650      	mov	r0, sl
100190b6:	f7ff fc0b 	bl	100188d0 <quorem>
100190ba:	42a6      	cmp	r6, r4
100190bc:	f100 0330 	add.w	r3, r0, #48	@ 0x30
100190c0:	f808 3b01 	strb.w	r3, [r8], #1
100190c4:	dbed      	blt.n	100190a2 <_dtoa_r+0x6a2>
100190c6:	9a06      	ldr	r2, [sp, #24]
100190c8:	2a00      	cmp	r2, #0
100190ca:	bfc8      	it	gt
100190cc:	4616      	movgt	r6, r2
100190ce:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100190d0:	bfd8      	it	le
100190d2:	2601      	movle	r6, #1
100190d4:	eb02 0b06 	add.w	fp, r2, r6
100190d8:	2400      	movs	r4, #0
100190da:	4651      	mov	r1, sl
100190dc:	2201      	movs	r2, #1
100190de:	9803      	ldr	r0, [sp, #12]
100190e0:	9304      	str	r3, [sp, #16]
100190e2:	f004 fa41 	bl	1001d568 <__lshift>
100190e6:	4649      	mov	r1, r9
100190e8:	4682      	mov	sl, r0
100190ea:	f004 fab5 	bl	1001d658 <__mcmp>
100190ee:	2800      	cmp	r0, #0
100190f0:	f340 81e3 	ble.w	100194ba <_dtoa_r+0xaba>
100190f4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100190f6:	e002      	b.n	100190fe <_dtoa_r+0x6fe>
100190f8:	455a      	cmp	r2, fp
100190fa:	f000 81e9 	beq.w	100194d0 <_dtoa_r+0xad0>
100190fe:	465e      	mov	r6, fp
10019100:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10019104:	f816 3c01 	ldrb.w	r3, [r6, #-1]
10019108:	2b39      	cmp	r3, #57	@ 0x39
1001910a:	d0f5      	beq.n	100190f8 <_dtoa_r+0x6f8>
1001910c:	3301      	adds	r3, #1
1001910e:	f88b 3000 	strb.w	r3, [fp]
10019112:	f8dd 800c 	ldr.w	r8, [sp, #12]
10019116:	4649      	mov	r1, r9
10019118:	4640      	mov	r0, r8
1001911a:	f003 ffe3 	bl	1001d0e4 <_Bfree>
1001911e:	b157      	cbz	r7, 10019136 <_dtoa_r+0x736>
10019120:	b12c      	cbz	r4, 1001912e <_dtoa_r+0x72e>
10019122:	42bc      	cmp	r4, r7
10019124:	d003      	beq.n	1001912e <_dtoa_r+0x72e>
10019126:	4621      	mov	r1, r4
10019128:	4640      	mov	r0, r8
1001912a:	f003 ffdb 	bl	1001d0e4 <_Bfree>
1001912e:	9803      	ldr	r0, [sp, #12]
10019130:	4639      	mov	r1, r7
10019132:	f003 ffd7 	bl	1001d0e4 <_Bfree>
10019136:	9803      	ldr	r0, [sp, #12]
10019138:	4651      	mov	r1, sl
1001913a:	f003 ffd3 	bl	1001d0e4 <_Bfree>
1001913e:	2300      	movs	r3, #0
10019140:	7033      	strb	r3, [r6, #0]
10019142:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10019144:	601d      	str	r5, [r3, #0]
10019146:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10019148:	2b00      	cmp	r3, #0
1001914a:	f43f ac94 	beq.w	10018a76 <_dtoa_r+0x76>
1001914e:	980a      	ldr	r0, [sp, #40]	@ 0x28
10019150:	601e      	str	r6, [r3, #0]
10019152:	b01f      	add	sp, #124	@ 0x7c
10019154:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10019158:	4658      	mov	r0, fp
1001915a:	f007 fb2f 	bl	100207bc <__aeabi_i2d>
1001915e:	4632      	mov	r2, r6
10019160:	463b      	mov	r3, r7
10019162:	f007 fdfd 	bl	10020d60 <__aeabi_dcmpeq>
10019166:	2800      	cmp	r0, #0
10019168:	f47f acdc 	bne.w	10018b24 <_dtoa_r+0x124>
1001916c:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10019170:	e4d8      	b.n	10018b24 <_dtoa_r+0x124>
10019172:	231c      	movs	r3, #28
10019174:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10019176:	441a      	add	r2, r3
10019178:	920b      	str	r2, [sp, #44]	@ 0x2c
1001917a:	441e      	add	r6, r3
1001917c:	441c      	add	r4, r3
1001917e:	e76a      	b.n	10019056 <_dtoa_r+0x656>
10019180:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10019182:	2a01      	cmp	r2, #1
10019184:	f340 81a9 	ble.w	100194da <_dtoa_r+0xada>
10019188:	9a06      	ldr	r2, [sp, #24]
1001918a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001918c:	1e55      	subs	r5, r2, #1
1001918e:	42ab      	cmp	r3, r5
10019190:	f2c0 816b 	blt.w	1001946a <_dtoa_r+0xa6a>
10019194:	2a00      	cmp	r2, #0
10019196:	eba3 0505 	sub.w	r5, r3, r5
1001919a:	f280 82dd 	bge.w	10019758 <_dtoa_r+0xd58>
1001919e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100191a0:	9a06      	ldr	r2, [sp, #24]
100191a2:	1a9e      	subs	r6, r3, r2
100191a4:	9803      	ldr	r0, [sp, #12]
100191a6:	2101      	movs	r1, #1
100191a8:	f004 f8a0 	bl	1001d2ec <__i2b>
100191ac:	4607      	mov	r7, r0
100191ae:	e71a      	b.n	10018fe6 <_dtoa_r+0x5e6>
100191b0:	f1c3 0320 	rsb	r3, r3, #32
100191b4:	fa06 f003 	lsl.w	r0, r6, r3
100191b8:	e481      	b.n	10018abe <_dtoa_r+0xbe>
100191ba:	2501      	movs	r5, #1
100191bc:	e4e4      	b.n	10018b88 <_dtoa_r+0x188>
100191be:	4639      	mov	r1, r7
100191c0:	2300      	movs	r3, #0
100191c2:	9803      	ldr	r0, [sp, #12]
100191c4:	220a      	movs	r2, #10
100191c6:	f003 ff97 	bl	1001d0f8 <__multadd>
100191ca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100191cc:	2b00      	cmp	r3, #0
100191ce:	4607      	mov	r7, r0
100191d0:	f340 82ef 	ble.w	100197b2 <_dtoa_r+0xdb2>
100191d4:	950e      	str	r5, [sp, #56]	@ 0x38
100191d6:	9306      	str	r3, [sp, #24]
100191d8:	2e00      	cmp	r6, #0
100191da:	f300 813f 	bgt.w	1001945c <_dtoa_r+0xa5c>
100191de:	f1bb 0f00 	cmp.w	fp, #0
100191e2:	f040 81df 	bne.w	100195a4 <_dtoa_r+0xba4>
100191e6:	46b8      	mov	r8, r7
100191e8:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
100191ea:	9c06      	ldr	r4, [sp, #24]
100191ec:	1e73      	subs	r3, r6, #1
100191ee:	441c      	add	r4, r3
100191f0:	9b04      	ldr	r3, [sp, #16]
100191f2:	940c      	str	r4, [sp, #48]	@ 0x30
100191f4:	f003 0301 	and.w	r3, r3, #1
100191f8:	9c03      	ldr	r4, [sp, #12]
100191fa:	930f      	str	r3, [sp, #60]	@ 0x3c
100191fc:	4649      	mov	r1, r9
100191fe:	4650      	mov	r0, sl
10019200:	f7ff fb66 	bl	100188d0 <quorem>
10019204:	4639      	mov	r1, r7
10019206:	4683      	mov	fp, r0
10019208:	4650      	mov	r0, sl
1001920a:	f004 fa25 	bl	1001d658 <__mcmp>
1001920e:	4642      	mov	r2, r8
10019210:	4649      	mov	r1, r9
10019212:	4605      	mov	r5, r0
10019214:	4620      	mov	r0, r4
10019216:	f004 fa3f 	bl	1001d698 <__mdiff>
1001921a:	68c2      	ldr	r2, [r0, #12]
1001921c:	4601      	mov	r1, r0
1001921e:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
10019222:	2a00      	cmp	r2, #0
10019224:	d13a      	bne.n	1001929c <_dtoa_r+0x89c>
10019226:	9008      	str	r0, [sp, #32]
10019228:	4650      	mov	r0, sl
1001922a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001922c:	f004 fa14 	bl	1001d658 <__mcmp>
10019230:	9908      	ldr	r1, [sp, #32]
10019232:	9006      	str	r0, [sp, #24]
10019234:	4620      	mov	r0, r4
10019236:	f003 ff55 	bl	1001d0e4 <_Bfree>
1001923a:	9a06      	ldr	r2, [sp, #24]
1001923c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001923e:	2a00      	cmp	r2, #0
10019240:	d15a      	bne.n	100192f8 <_dtoa_r+0x8f8>
10019242:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10019244:	b91a      	cbnz	r2, 1001924e <_dtoa_r+0x84e>
10019246:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10019248:	2a00      	cmp	r2, #0
1001924a:	f000 829a 	beq.w	10019782 <_dtoa_r+0xd82>
1001924e:	2d00      	cmp	r5, #0
10019250:	db45      	blt.n	100192de <_dtoa_r+0x8de>
10019252:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10019254:	46b3      	mov	fp, r6
10019256:	42b2      	cmp	r2, r6
10019258:	f80b 3b01 	strb.w	r3, [fp], #1
1001925c:	f000 81b9 	beq.w	100195d2 <_dtoa_r+0xbd2>
10019260:	4651      	mov	r1, sl
10019262:	2300      	movs	r3, #0
10019264:	220a      	movs	r2, #10
10019266:	4620      	mov	r0, r4
10019268:	f003 ff46 	bl	1001d0f8 <__multadd>
1001926c:	4547      	cmp	r7, r8
1001926e:	4682      	mov	sl, r0
10019270:	4639      	mov	r1, r7
10019272:	f04f 0300 	mov.w	r3, #0
10019276:	f04f 020a 	mov.w	r2, #10
1001927a:	4620      	mov	r0, r4
1001927c:	d036      	beq.n	100192ec <_dtoa_r+0x8ec>
1001927e:	f003 ff3b 	bl	1001d0f8 <__multadd>
10019282:	4641      	mov	r1, r8
10019284:	4607      	mov	r7, r0
10019286:	2300      	movs	r3, #0
10019288:	220a      	movs	r2, #10
1001928a:	4620      	mov	r0, r4
1001928c:	f003 ff34 	bl	1001d0f8 <__multadd>
10019290:	465e      	mov	r6, fp
10019292:	4680      	mov	r8, r0
10019294:	e7b2      	b.n	100191fc <_dtoa_r+0x7fc>
10019296:	bf00      	nop
10019298:	40240000 	.word	0x40240000
1001929c:	9803      	ldr	r0, [sp, #12]
1001929e:	9306      	str	r3, [sp, #24]
100192a0:	f003 ff20 	bl	1001d0e4 <_Bfree>
100192a4:	2d00      	cmp	r5, #0
100192a6:	9b06      	ldr	r3, [sp, #24]
100192a8:	db06      	blt.n	100192b8 <_dtoa_r+0x8b8>
100192aa:	9a04      	ldr	r2, [sp, #16]
100192ac:	9928      	ldr	r1, [sp, #160]	@ 0xa0
100192ae:	f002 0201 	and.w	r2, r2, #1
100192b2:	430d      	orrs	r5, r1
100192b4:	432a      	orrs	r2, r5
100192b6:	d12a      	bne.n	1001930e <_dtoa_r+0x90e>
100192b8:	4651      	mov	r1, sl
100192ba:	2201      	movs	r2, #1
100192bc:	9803      	ldr	r0, [sp, #12]
100192be:	9304      	str	r3, [sp, #16]
100192c0:	f004 f952 	bl	1001d568 <__lshift>
100192c4:	4649      	mov	r1, r9
100192c6:	4682      	mov	sl, r0
100192c8:	f004 f9c6 	bl	1001d658 <__mcmp>
100192cc:	2800      	cmp	r0, #0
100192ce:	9b04      	ldr	r3, [sp, #16]
100192d0:	f340 80e8 	ble.w	100194a4 <_dtoa_r+0xaa4>
100192d4:	2b39      	cmp	r3, #57	@ 0x39
100192d6:	f000 822f 	beq.w	10019738 <_dtoa_r+0xd38>
100192da:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
100192de:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100192e0:	f806 3b01 	strb.w	r3, [r6], #1
100192e4:	463c      	mov	r4, r7
100192e6:	3501      	adds	r5, #1
100192e8:	4647      	mov	r7, r8
100192ea:	e712      	b.n	10019112 <_dtoa_r+0x712>
100192ec:	f003 ff04 	bl	1001d0f8 <__multadd>
100192f0:	465e      	mov	r6, fp
100192f2:	4607      	mov	r7, r0
100192f4:	4680      	mov	r8, r0
100192f6:	e781      	b.n	100191fc <_dtoa_r+0x7fc>
100192f8:	2d00      	cmp	r5, #0
100192fa:	f2c0 827d 	blt.w	100197f8 <_dtoa_r+0xdf8>
100192fe:	9928      	ldr	r1, [sp, #160]	@ 0xa0
10019300:	430d      	orrs	r5, r1
10019302:	990f      	ldr	r1, [sp, #60]	@ 0x3c
10019304:	430d      	orrs	r5, r1
10019306:	f000 8277 	beq.w	100197f8 <_dtoa_r+0xdf8>
1001930a:	2a00      	cmp	r2, #0
1001930c:	dda1      	ble.n	10019252 <_dtoa_r+0x852>
1001930e:	2b39      	cmp	r3, #57	@ 0x39
10019310:	f000 8212 	beq.w	10019738 <_dtoa_r+0xd38>
10019314:	3301      	adds	r3, #1
10019316:	e7e2      	b.n	100192de <_dtoa_r+0x8de>
10019318:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001931a:	2b02      	cmp	r3, #2
1001931c:	f77f aeb4 	ble.w	10019088 <_dtoa_r+0x688>
10019320:	9b06      	ldr	r3, [sp, #24]
10019322:	2b00      	cmp	r3, #0
10019324:	f040 811d 	bne.w	10019562 <_dtoa_r+0xb62>
10019328:	4649      	mov	r1, r9
1001932a:	2205      	movs	r2, #5
1001932c:	9803      	ldr	r0, [sp, #12]
1001932e:	f003 fee3 	bl	1001d0f8 <__multadd>
10019332:	4601      	mov	r1, r0
10019334:	4681      	mov	r9, r0
10019336:	4650      	mov	r0, sl
10019338:	f004 f98e 	bl	1001d658 <__mcmp>
1001933c:	2800      	cmp	r0, #0
1001933e:	f340 8110 	ble.w	10019562 <_dtoa_r+0xb62>
10019342:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10019344:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10019346:	2331      	movs	r3, #49	@ 0x31
10019348:	f806 3b01 	strb.w	r3, [r6], #1
1001934c:	3501      	adds	r5, #1
1001934e:	9803      	ldr	r0, [sp, #12]
10019350:	4649      	mov	r1, r9
10019352:	3501      	adds	r5, #1
10019354:	f003 fec6 	bl	1001d0e4 <_Bfree>
10019358:	2f00      	cmp	r7, #0
1001935a:	f47f aee8 	bne.w	1001912e <_dtoa_r+0x72e>
1001935e:	e6ea      	b.n	10019136 <_dtoa_r+0x736>
10019360:	4649      	mov	r1, r9
10019362:	4650      	mov	r0, sl
10019364:	f004 f978 	bl	1001d658 <__mcmp>
10019368:	2800      	cmp	r0, #0
1001936a:	f6bf ae89 	bge.w	10019080 <_dtoa_r+0x680>
1001936e:	4651      	mov	r1, sl
10019370:	2300      	movs	r3, #0
10019372:	9803      	ldr	r0, [sp, #12]
10019374:	220a      	movs	r2, #10
10019376:	f003 febf 	bl	1001d0f8 <__multadd>
1001937a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001937c:	1e5d      	subs	r5, r3, #1
1001937e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10019380:	4682      	mov	sl, r0
10019382:	2b00      	cmp	r3, #0
10019384:	f47f af1b 	bne.w	100191be <_dtoa_r+0x7be>
10019388:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001938a:	2b00      	cmp	r3, #0
1001938c:	f340 81ff 	ble.w	1001978e <_dtoa_r+0xd8e>
10019390:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10019392:	9306      	str	r3, [sp, #24]
10019394:	e67e      	b.n	10019094 <_dtoa_r+0x694>
10019396:	4601      	mov	r1, r0
10019398:	465a      	mov	r2, fp
1001939a:	9803      	ldr	r0, [sp, #12]
1001939c:	f004 f88a 	bl	1001d4b4 <__pow5mult>
100193a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
100193a2:	2b01      	cmp	r3, #1
100193a4:	4681      	mov	r9, r0
100193a6:	dd6c      	ble.n	10019482 <_dtoa_r+0xa82>
100193a8:	f04f 0b00 	mov.w	fp, #0
100193ac:	f8d9 3010 	ldr.w	r3, [r9, #16]
100193b0:	eb09 0383 	add.w	r3, r9, r3, lsl #2
100193b4:	6918      	ldr	r0, [r3, #16]
100193b6:	f003 ff47 	bl	1001d248 <__hi0bits>
100193ba:	f1c0 0020 	rsb	r0, r0, #32
100193be:	e639      	b.n	10019034 <_dtoa_r+0x634>
100193c0:	4b92      	ldr	r3, [pc, #584]	@ (1001960c <_dtoa_r+0xc0c>)
100193c2:	930a      	str	r3, [sp, #40]	@ 0x28
100193c4:	3303      	adds	r3, #3
100193c6:	f7ff bbfa 	b.w	10018bbe <_dtoa_r+0x1be>
100193ca:	9b04      	ldr	r3, [sp, #16]
100193cc:	2b00      	cmp	r3, #0
100193ce:	f47f ae30 	bne.w	10019032 <_dtoa_r+0x632>
100193d2:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
100193d6:	f3c2 0313 	ubfx	r3, r2, #0, #20
100193da:	2b00      	cmp	r3, #0
100193dc:	f47f ae29 	bne.w	10019032 <_dtoa_r+0x632>
100193e0:	4b8b      	ldr	r3, [pc, #556]	@ (10019610 <_dtoa_r+0xc10>)
100193e2:	4013      	ands	r3, r2
100193e4:	b123      	cbz	r3, 100193f0 <_dtoa_r+0x9f0>
100193e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100193e8:	3301      	adds	r3, #1
100193ea:	930b      	str	r3, [sp, #44]	@ 0x2c
100193ec:	3401      	adds	r4, #1
100193ee:	2301      	movs	r3, #1
100193f0:	f1bb 0f00 	cmp.w	fp, #0
100193f4:	f040 81ae 	bne.w	10019754 <_dtoa_r+0xd54>
100193f8:	469b      	mov	fp, r3
100193fa:	e61a      	b.n	10019032 <_dtoa_r+0x632>
100193fc:	f43f ae2b 	beq.w	10019056 <_dtoa_r+0x656>
10019400:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
10019404:	e6b6      	b.n	10019174 <_dtoa_r+0x774>
10019406:	2301      	movs	r3, #1
10019408:	930c      	str	r3, [sp, #48]	@ 0x30
1001940a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001940c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001940e:	4413      	add	r3, r2
10019410:	9318      	str	r3, [sp, #96]	@ 0x60
10019412:	3301      	adds	r3, #1
10019414:	2b01      	cmp	r3, #1
10019416:	461e      	mov	r6, r3
10019418:	9306      	str	r3, [sp, #24]
1001941a:	bfb8      	it	lt
1001941c:	2601      	movlt	r6, #1
1001941e:	2e17      	cmp	r6, #23
10019420:	f340 81d5 	ble.w	100197ce <_dtoa_r+0xdce>
10019424:	2201      	movs	r2, #1
10019426:	2304      	movs	r3, #4
10019428:	005b      	lsls	r3, r3, #1
1001942a:	f103 0014 	add.w	r0, r3, #20
1001942e:	42b0      	cmp	r0, r6
10019430:	4611      	mov	r1, r2
10019432:	f102 0201 	add.w	r2, r2, #1
10019436:	d9f7      	bls.n	10019428 <_dtoa_r+0xa28>
10019438:	9b03      	ldr	r3, [sp, #12]
1001943a:	63d9      	str	r1, [r3, #60]	@ 0x3c
1001943c:	e411      	b.n	10018c62 <_dtoa_r+0x262>
1001943e:	2301      	movs	r3, #1
10019440:	930c      	str	r3, [sp, #48]	@ 0x30
10019442:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10019444:	2b00      	cmp	r3, #0
10019446:	dd33      	ble.n	100194b0 <_dtoa_r+0xab0>
10019448:	9318      	str	r3, [sp, #96]	@ 0x60
1001944a:	9306      	str	r3, [sp, #24]
1001944c:	461e      	mov	r6, r3
1001944e:	e7e6      	b.n	1001941e <_dtoa_r+0xa1e>
10019450:	2300      	movs	r3, #0
10019452:	930c      	str	r3, [sp, #48]	@ 0x30
10019454:	e7d9      	b.n	1001940a <_dtoa_r+0xa0a>
10019456:	2300      	movs	r3, #0
10019458:	930c      	str	r3, [sp, #48]	@ 0x30
1001945a:	e7f2      	b.n	10019442 <_dtoa_r+0xa42>
1001945c:	4639      	mov	r1, r7
1001945e:	9803      	ldr	r0, [sp, #12]
10019460:	4632      	mov	r2, r6
10019462:	f004 f881 	bl	1001d568 <__lshift>
10019466:	4607      	mov	r7, r0
10019468:	e6b9      	b.n	100191de <_dtoa_r+0x7de>
1001946a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001946c:	9a06      	ldr	r2, [sp, #24]
1001946e:	950f      	str	r5, [sp, #60]	@ 0x3c
10019470:	1aeb      	subs	r3, r5, r3
10019472:	449b      	add	fp, r3
10019474:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10019476:	461e      	mov	r6, r3
10019478:	4413      	add	r3, r2
1001947a:	4414      	add	r4, r2
1001947c:	930b      	str	r3, [sp, #44]	@ 0x2c
1001947e:	2500      	movs	r5, #0
10019480:	e690      	b.n	100191a4 <_dtoa_r+0x7a4>
10019482:	9b04      	ldr	r3, [sp, #16]
10019484:	2b00      	cmp	r3, #0
10019486:	d18f      	bne.n	100193a8 <_dtoa_r+0x9a8>
10019488:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001948c:	f3c1 0313 	ubfx	r3, r1, #0, #20
10019490:	460a      	mov	r2, r1
10019492:	2b00      	cmp	r3, #0
10019494:	d188      	bne.n	100193a8 <_dtoa_r+0x9a8>
10019496:	e7a3      	b.n	100193e0 <_dtoa_r+0x9e0>
10019498:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
1001949c:	2702      	movs	r7, #2
1001949e:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
100194a2:	e40b      	b.n	10018cbc <_dtoa_r+0x2bc>
100194a4:	f47f af1b 	bne.w	100192de <_dtoa_r+0x8de>
100194a8:	07da      	lsls	r2, r3, #31
100194aa:	f57f af18 	bpl.w	100192de <_dtoa_r+0x8de>
100194ae:	e711      	b.n	100192d4 <_dtoa_r+0x8d4>
100194b0:	2301      	movs	r3, #1
100194b2:	9329      	str	r3, [sp, #164]	@ 0xa4
100194b4:	9306      	str	r3, [sp, #24]
100194b6:	f7ff bbcf 	b.w	10018c58 <_dtoa_r+0x258>
100194ba:	d103      	bne.n	100194c4 <_dtoa_r+0xac4>
100194bc:	9b04      	ldr	r3, [sp, #16]
100194be:	07db      	lsls	r3, r3, #31
100194c0:	f53f ae18 	bmi.w	100190f4 <_dtoa_r+0x6f4>
100194c4:	465e      	mov	r6, fp
100194c6:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
100194ca:	2b30      	cmp	r3, #48	@ 0x30
100194cc:	d0fa      	beq.n	100194c4 <_dtoa_r+0xac4>
100194ce:	e620      	b.n	10019112 <_dtoa_r+0x712>
100194d0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100194d2:	2331      	movs	r3, #49	@ 0x31
100194d4:	3501      	adds	r5, #1
100194d6:	7013      	strb	r3, [r2, #0]
100194d8:	e61b      	b.n	10019112 <_dtoa_r+0x712>
100194da:	9a11      	ldr	r2, [sp, #68]	@ 0x44
100194dc:	2a00      	cmp	r2, #0
100194de:	f000 80f9 	beq.w	100196d4 <_dtoa_r+0xcd4>
100194e2:	f203 4333 	addw	r3, r3, #1075	@ 0x433
100194e6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100194e8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100194ea:	4616      	mov	r6, r2
100194ec:	441a      	add	r2, r3
100194ee:	441c      	add	r4, r3
100194f0:	920b      	str	r2, [sp, #44]	@ 0x2c
100194f2:	e657      	b.n	100191a4 <_dtoa_r+0x7a4>
100194f4:	f1c8 0301 	rsb	r3, r8, #1
100194f8:	4604      	mov	r4, r0
100194fa:	930b      	str	r3, [sp, #44]	@ 0x2c
100194fc:	9010      	str	r0, [sp, #64]	@ 0x40
100194fe:	f7ff bb9b 	b.w	10018c38 <_dtoa_r+0x238>
10019502:	f000 80eb 	beq.w	100196dc <_dtoa_r+0xcdc>
10019506:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019508:	4d42      	ldr	r5, [pc, #264]	@ (10019614 <_dtoa_r+0xc14>)
1001950a:	425e      	negs	r6, r3
1001950c:	f006 030f 	and.w	r3, r6, #15
10019510:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10019514:	e9d3 2300 	ldrd	r2, r3, [r3]
10019518:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001951c:	f007 f9b8 	bl	10020890 <__aeabi_dmul>
10019520:	1135      	asrs	r5, r6, #4
10019522:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
10019526:	f000 814d 	beq.w	100197c4 <_dtoa_r+0xdc4>
1001952a:	4e3b      	ldr	r6, [pc, #236]	@ (10019618 <_dtoa_r+0xc18>)
1001952c:	2300      	movs	r3, #0
1001952e:	2702      	movs	r7, #2
10019530:	4680      	mov	r8, r0
10019532:	4689      	mov	r9, r1
10019534:	07e8      	lsls	r0, r5, #31
10019536:	d509      	bpl.n	1001954c <_dtoa_r+0xb4c>
10019538:	e9d6 2300 	ldrd	r2, r3, [r6]
1001953c:	4640      	mov	r0, r8
1001953e:	4649      	mov	r1, r9
10019540:	f007 f9a6 	bl	10020890 <__aeabi_dmul>
10019544:	3701      	adds	r7, #1
10019546:	4680      	mov	r8, r0
10019548:	4689      	mov	r9, r1
1001954a:	2301      	movs	r3, #1
1001954c:	106d      	asrs	r5, r5, #1
1001954e:	f106 0608 	add.w	r6, r6, #8
10019552:	d1ef      	bne.n	10019534 <_dtoa_r+0xb34>
10019554:	2b00      	cmp	r3, #0
10019556:	f47f abca 	bne.w	10018cee <_dtoa_r+0x2ee>
1001955a:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
1001955e:	f7ff bbc6 	b.w	10018cee <_dtoa_r+0x2ee>
10019562:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10019564:	e4ca      	b.n	10018efc <_dtoa_r+0x4fc>
10019566:	f8dd a018 	ldr.w	sl, [sp, #24]
1001956a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001956c:	4602      	mov	r2, r0
1001956e:	460b      	mov	r3, r1
10019570:	f006 ffd8 	bl	10020524 <__adddf3>
10019574:	4602      	mov	r2, r0
10019576:	460b      	mov	r3, r1
10019578:	e9cd 2306 	strd	r2, r3, [sp, #24]
1001957c:	3501      	adds	r5, #1
1001957e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10019582:	46a8      	mov	r8, r5
10019584:	f007 fc14 	bl	10020db0 <__aeabi_dcmpgt>
10019588:	b940      	cbnz	r0, 1001959c <_dtoa_r+0xb9c>
1001958a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001958e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10019592:	f007 fbe5 	bl	10020d60 <__aeabi_dcmpeq>
10019596:	b118      	cbz	r0, 100195a0 <_dtoa_r+0xba0>
10019598:	07f1      	lsls	r1, r6, #31
1001959a:	d501      	bpl.n	100195a0 <_dtoa_r+0xba0>
1001959c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001959e:	e44a      	b.n	10018e36 <_dtoa_r+0x436>
100195a0:	463e      	mov	r6, r7
100195a2:	e5c8      	b.n	10019136 <_dtoa_r+0x736>
100195a4:	6879      	ldr	r1, [r7, #4]
100195a6:	9803      	ldr	r0, [sp, #12]
100195a8:	f003 fd76 	bl	1001d098 <_Balloc>
100195ac:	4605      	mov	r5, r0
100195ae:	2800      	cmp	r0, #0
100195b0:	f000 8126 	beq.w	10019800 <_dtoa_r+0xe00>
100195b4:	693b      	ldr	r3, [r7, #16]
100195b6:	3302      	adds	r3, #2
100195b8:	009a      	lsls	r2, r3, #2
100195ba:	f107 010c 	add.w	r1, r7, #12
100195be:	300c      	adds	r0, #12
100195c0:	f7fe ffee 	bl	100185a0 <memcpy>
100195c4:	9803      	ldr	r0, [sp, #12]
100195c6:	4629      	mov	r1, r5
100195c8:	2201      	movs	r2, #1
100195ca:	f003 ffcd 	bl	1001d568 <__lshift>
100195ce:	4680      	mov	r8, r0
100195d0:	e60a      	b.n	100191e8 <_dtoa_r+0x7e8>
100195d2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100195d4:	463c      	mov	r4, r7
100195d6:	3501      	adds	r5, #1
100195d8:	4647      	mov	r7, r8
100195da:	e57e      	b.n	100190da <_dtoa_r+0x6da>
100195dc:	f8dd 800c 	ldr.w	r8, [sp, #12]
100195e0:	4639      	mov	r1, r7
100195e2:	462a      	mov	r2, r5
100195e4:	4640      	mov	r0, r8
100195e6:	f003 ff65 	bl	1001d4b4 <__pow5mult>
100195ea:	4652      	mov	r2, sl
100195ec:	4601      	mov	r1, r0
100195ee:	4607      	mov	r7, r0
100195f0:	4640      	mov	r0, r8
100195f2:	f003 fea9 	bl	1001d348 <__multiply>
100195f6:	4651      	mov	r1, sl
100195f8:	4682      	mov	sl, r0
100195fa:	4640      	mov	r0, r8
100195fc:	f003 fd72 	bl	1001d0e4 <_Bfree>
10019600:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10019602:	1b5b      	subs	r3, r3, r5
10019604:	930f      	str	r3, [sp, #60]	@ 0x3c
10019606:	f43f ad07 	beq.w	10019018 <_dtoa_r+0x618>
1001960a:	e4ff      	b.n	1001900c <_dtoa_r+0x60c>
1001960c:	10023c7c 	.word	0x10023c7c
10019610:	7ff00000 	.word	0x7ff00000
10019614:	10023de0 	.word	0x10023de0
10019618:	10023db8 	.word	0x10023db8
1001961c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
10019620:	f007 f936 	bl	10020890 <__aeabi_dmul>
10019624:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10019626:	701f      	strb	r7, [r3, #0]
10019628:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001962a:	2b01      	cmp	r3, #1
1001962c:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
10019630:	f000 80c6 	beq.w	100197c0 <_dtoa_r+0xdc0>
10019634:	9f12      	ldr	r7, [sp, #72]	@ 0x48
10019636:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10019638:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
1001963c:	441f      	add	r7, r3
1001963e:	4b7c      	ldr	r3, [pc, #496]	@ (10019830 <_dtoa_r+0xe30>)
10019640:	2200      	movs	r2, #0
10019642:	4640      	mov	r0, r8
10019644:	4649      	mov	r1, r9
10019646:	f007 f923 	bl	10020890 <__aeabi_dmul>
1001964a:	4689      	mov	r9, r1
1001964c:	4680      	mov	r8, r0
1001964e:	f007 fbcf 	bl	10020df0 <__aeabi_d2iz>
10019652:	4683      	mov	fp, r0
10019654:	f007 f8b2 	bl	100207bc <__aeabi_i2d>
10019658:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
1001965c:	4602      	mov	r2, r0
1001965e:	460b      	mov	r3, r1
10019660:	4640      	mov	r0, r8
10019662:	4649      	mov	r1, r9
10019664:	f006 ff5c 	bl	10020520 <__aeabi_dsub>
10019668:	f806 bb01 	strb.w	fp, [r6], #1
1001966c:	42b7      	cmp	r7, r6
1001966e:	4680      	mov	r8, r0
10019670:	4689      	mov	r9, r1
10019672:	d1e4      	bne.n	1001963e <_dtoa_r+0xc3e>
10019674:	f8dd b044 	ldr.w	fp, [sp, #68]	@ 0x44
10019678:	4b6e      	ldr	r3, [pc, #440]	@ (10019834 <_dtoa_r+0xe34>)
1001967a:	2200      	movs	r2, #0
1001967c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
10019680:	f006 ff50 	bl	10020524 <__adddf3>
10019684:	4602      	mov	r2, r0
10019686:	460b      	mov	r3, r1
10019688:	4640      	mov	r0, r8
1001968a:	4649      	mov	r1, r9
1001968c:	f007 fb90 	bl	10020db0 <__aeabi_dcmpgt>
10019690:	2800      	cmp	r0, #0
10019692:	d167      	bne.n	10019764 <_dtoa_r+0xd64>
10019694:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
10019698:	4966      	ldr	r1, [pc, #408]	@ (10019834 <_dtoa_r+0xe34>)
1001969a:	2000      	movs	r0, #0
1001969c:	f006 ff40 	bl	10020520 <__aeabi_dsub>
100196a0:	4602      	mov	r2, r0
100196a2:	460b      	mov	r3, r1
100196a4:	4640      	mov	r0, r8
100196a6:	4649      	mov	r1, r9
100196a8:	f007 fb64 	bl	10020d74 <__aeabi_dcmplt>
100196ac:	b948      	cbnz	r0, 100196c2 <_dtoa_r+0xcc2>
100196ae:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
100196b0:	2b00      	cmp	r3, #0
100196b2:	f6ff ac93 	blt.w	10018fdc <_dtoa_r+0x5dc>
100196b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100196b8:	2b0e      	cmp	r3, #14
100196ba:	f73f ac8f 	bgt.w	10018fdc <_dtoa_r+0x5dc>
100196be:	f7ff bbfc 	b.w	10018eba <_dtoa_r+0x4ba>
100196c2:	463e      	mov	r6, r7
100196c4:	3f01      	subs	r7, #1
100196c6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
100196ca:	2b30      	cmp	r3, #48	@ 0x30
100196cc:	d0f9      	beq.n	100196c2 <_dtoa_r+0xcc2>
100196ce:	9d19      	ldr	r5, [sp, #100]	@ 0x64
100196d0:	3501      	adds	r5, #1
100196d2:	e530      	b.n	10019136 <_dtoa_r+0x736>
100196d4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100196d6:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
100196da:	e704      	b.n	100194e6 <_dtoa_r+0xae6>
100196dc:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
100196e0:	2702      	movs	r7, #2
100196e2:	f7ff bb04 	b.w	10018cee <_dtoa_r+0x2ee>
100196e6:	9b06      	ldr	r3, [sp, #24]
100196e8:	2b00      	cmp	r3, #0
100196ea:	f43f abb8 	beq.w	10018e5e <_dtoa_r+0x45e>
100196ee:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100196f0:	2b00      	cmp	r3, #0
100196f2:	f77f abd9 	ble.w	10018ea8 <_dtoa_r+0x4a8>
100196f6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
100196f8:	9312      	str	r3, [sp, #72]	@ 0x48
100196fa:	3a01      	subs	r2, #1
100196fc:	4b4c      	ldr	r3, [pc, #304]	@ (10019830 <_dtoa_r+0xe30>)
100196fe:	9219      	str	r2, [sp, #100]	@ 0x64
10019700:	4640      	mov	r0, r8
10019702:	2200      	movs	r2, #0
10019704:	4649      	mov	r1, r9
10019706:	f007 f8c3 	bl	10020890 <__aeabi_dmul>
1001970a:	4680      	mov	r8, r0
1001970c:	4689      	mov	r9, r1
1001970e:	1c78      	adds	r0, r7, #1
10019710:	f007 f854 	bl	100207bc <__aeabi_i2d>
10019714:	4642      	mov	r2, r8
10019716:	464b      	mov	r3, r9
10019718:	f007 f8ba 	bl	10020890 <__aeabi_dmul>
1001971c:	4b46      	ldr	r3, [pc, #280]	@ (10019838 <_dtoa_r+0xe38>)
1001971e:	2200      	movs	r2, #0
10019720:	f006 ff00 	bl	10020524 <__adddf3>
10019724:	4606      	mov	r6, r0
10019726:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001972a:	f7ff bb01 	b.w	10018d30 <_dtoa_r+0x330>
1001972e:	f108 0801 	add.w	r8, r8, #1
10019732:	2331      	movs	r3, #49	@ 0x31
10019734:	f7ff bb86 	b.w	10018e44 <_dtoa_r+0x444>
10019738:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001973a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001973c:	46b3      	mov	fp, r6
1001973e:	2339      	movs	r3, #57	@ 0x39
10019740:	463c      	mov	r4, r7
10019742:	f80b 3b01 	strb.w	r3, [fp], #1
10019746:	3501      	adds	r5, #1
10019748:	4647      	mov	r7, r8
1001974a:	e4d8      	b.n	100190fe <_dtoa_r+0x6fe>
1001974c:	f04f 0900 	mov.w	r9, #0
10019750:	464f      	mov	r7, r9
10019752:	e5f6      	b.n	10019342 <_dtoa_r+0x942>
10019754:	469b      	mov	fp, r3
10019756:	e629      	b.n	100193ac <_dtoa_r+0x9ac>
10019758:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001975a:	461e      	mov	r6, r3
1001975c:	4413      	add	r3, r2
1001975e:	4414      	add	r4, r2
10019760:	930b      	str	r3, [sp, #44]	@ 0x2c
10019762:	e51f      	b.n	100191a4 <_dtoa_r+0x7a4>
10019764:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10019766:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10019768:	f103 0801 	add.w	r8, r3, #1
1001976c:	f7ff bb63 	b.w	10018e36 <_dtoa_r+0x436>
10019770:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
10019774:	e7ab      	b.n	100196ce <_dtoa_r+0xcce>
10019776:	e9dd b41a 	ldrd	fp, r4, [sp, #104]	@ 0x68
1001977a:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
1001977e:	f7ff bb93 	b.w	10018ea8 <_dtoa_r+0x4a8>
10019782:	2b39      	cmp	r3, #57	@ 0x39
10019784:	d0d8      	beq.n	10019738 <_dtoa_r+0xd38>
10019786:	2d00      	cmp	r5, #0
10019788:	f73f ada7 	bgt.w	100192da <_dtoa_r+0x8da>
1001978c:	e5a7      	b.n	100192de <_dtoa_r+0x8de>
1001978e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10019790:	2b02      	cmp	r3, #2
10019792:	dc0a      	bgt.n	100197aa <_dtoa_r+0xdaa>
10019794:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10019796:	9306      	str	r3, [sp, #24]
10019798:	4649      	mov	r1, r9
1001979a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001979c:	f7ff f898 	bl	100188d0 <quorem>
100197a0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100197a2:	f100 0330 	add.w	r3, r0, #48	@ 0x30
100197a6:	7013      	strb	r3, [r2, #0]
100197a8:	e48d      	b.n	100190c6 <_dtoa_r+0x6c6>
100197aa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100197ac:	9306      	str	r3, [sp, #24]
100197ae:	950e      	str	r5, [sp, #56]	@ 0x38
100197b0:	e5b6      	b.n	10019320 <_dtoa_r+0x920>
100197b2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
100197b4:	2b02      	cmp	r3, #2
100197b6:	dcf8      	bgt.n	100197aa <_dtoa_r+0xdaa>
100197b8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100197ba:	950e      	str	r5, [sp, #56]	@ 0x38
100197bc:	9306      	str	r3, [sp, #24]
100197be:	e50b      	b.n	100191d8 <_dtoa_r+0x7d8>
100197c0:	4637      	mov	r7, r6
100197c2:	e759      	b.n	10019678 <_dtoa_r+0xc78>
100197c4:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
100197c8:	2702      	movs	r7, #2
100197ca:	f7ff ba90 	b.w	10018cee <_dtoa_r+0x2ee>
100197ce:	9b03      	ldr	r3, [sp, #12]
100197d0:	2100      	movs	r1, #0
100197d2:	63d9      	str	r1, [r3, #60]	@ 0x3c
100197d4:	f7ff ba45 	b.w	10018c62 <_dtoa_r+0x262>
100197d8:	9b03      	ldr	r3, [sp, #12]
100197da:	2500      	movs	r5, #0
100197dc:	63dd      	str	r5, [r3, #60]	@ 0x3c
100197de:	4629      	mov	r1, r5
100197e0:	4618      	mov	r0, r3
100197e2:	f003 fc59 	bl	1001d098 <_Balloc>
100197e6:	900a      	str	r0, [sp, #40]	@ 0x28
100197e8:	b9a8      	cbnz	r0, 10019816 <_dtoa_r+0xe16>
100197ea:	4b14      	ldr	r3, [pc, #80]	@ (1001983c <_dtoa_r+0xe3c>)
100197ec:	4814      	ldr	r0, [pc, #80]	@ (10019840 <_dtoa_r+0xe40>)
100197ee:	2200      	movs	r2, #0
100197f0:	f240 11af 	movw	r1, #431	@ 0x1af
100197f4:	f005 ff4c 	bl	1001f690 <__assert_func>
100197f8:	2a00      	cmp	r2, #0
100197fa:	f77f ad70 	ble.w	100192de <_dtoa_r+0x8de>
100197fe:	e55b      	b.n	100192b8 <_dtoa_r+0x8b8>
10019800:	4b0e      	ldr	r3, [pc, #56]	@ (1001983c <_dtoa_r+0xe3c>)
10019802:	480f      	ldr	r0, [pc, #60]	@ (10019840 <_dtoa_r+0xe40>)
10019804:	462a      	mov	r2, r5
10019806:	f240 21ef 	movw	r1, #751	@ 0x2ef
1001980a:	f005 ff41 	bl	1001f690 <__assert_func>
1001980e:	4b0d      	ldr	r3, [pc, #52]	@ (10019844 <_dtoa_r+0xe44>)
10019810:	930a      	str	r3, [sp, #40]	@ 0x28
10019812:	f7ff b930 	b.w	10018a76 <_dtoa_r+0x76>
10019816:	9b03      	ldr	r3, [sp, #12]
10019818:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001981a:	639a      	str	r2, [r3, #56]	@ 0x38
1001981c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10019820:	2201      	movs	r2, #1
10019822:	9529      	str	r5, [sp, #164]	@ 0xa4
10019824:	9318      	str	r3, [sp, #96]	@ 0x60
10019826:	920c      	str	r2, [sp, #48]	@ 0x30
10019828:	9306      	str	r3, [sp, #24]
1001982a:	f7ff bb3d 	b.w	10018ea8 <_dtoa_r+0x4a8>
1001982e:	bf00      	nop
10019830:	40240000 	.word	0x40240000
10019834:	3fe00000 	.word	0x3fe00000
10019838:	401c0000 	.word	0x401c0000
1001983c:	10023c80 	.word	0x10023c80
10019840:	10023c94 	.word	0x10023c94
10019844:	10023c70 	.word	0x10023c70

10019848 <_malloc_trim_r>:
10019848:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001984c:	4606      	mov	r6, r0
1001984e:	2008      	movs	r0, #8
10019850:	4689      	mov	r9, r1
10019852:	f7fe fca3 	bl	1001819c <sysconf>
10019856:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 100198f4 <_malloc_trim_r+0xac>
1001985a:	4605      	mov	r5, r0
1001985c:	4630      	mov	r0, r6
1001985e:	f7fd fba3 	bl	10016fa8 <__malloc_lock>
10019862:	f8d8 3008 	ldr.w	r3, [r8, #8]
10019866:	685f      	ldr	r7, [r3, #4]
10019868:	f027 0703 	bic.w	r7, r7, #3
1001986c:	f1a7 0411 	sub.w	r4, r7, #17
10019870:	eba4 0409 	sub.w	r4, r4, r9
10019874:	442c      	add	r4, r5
10019876:	fbb4 f4f5 	udiv	r4, r4, r5
1001987a:	3c01      	subs	r4, #1
1001987c:	fb05 f404 	mul.w	r4, r5, r4
10019880:	42a5      	cmp	r5, r4
10019882:	dc08      	bgt.n	10019896 <_malloc_trim_r+0x4e>
10019884:	2100      	movs	r1, #0
10019886:	4630      	mov	r0, r6
10019888:	f7fe fc5a 	bl	10018140 <_sbrk_r>
1001988c:	f8d8 3008 	ldr.w	r3, [r8, #8]
10019890:	443b      	add	r3, r7
10019892:	4298      	cmp	r0, r3
10019894:	d005      	beq.n	100198a2 <_malloc_trim_r+0x5a>
10019896:	4630      	mov	r0, r6
10019898:	f7fd fb8c 	bl	10016fb4 <__malloc_unlock>
1001989c:	2000      	movs	r0, #0
1001989e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
100198a2:	4261      	negs	r1, r4
100198a4:	4630      	mov	r0, r6
100198a6:	f7fe fc4b 	bl	10018140 <_sbrk_r>
100198aa:	3001      	adds	r0, #1
100198ac:	d00f      	beq.n	100198ce <_malloc_trim_r+0x86>
100198ae:	4a12      	ldr	r2, [pc, #72]	@ (100198f8 <_malloc_trim_r+0xb0>)
100198b0:	f8d8 3008 	ldr.w	r3, [r8, #8]
100198b4:	1b3f      	subs	r7, r7, r4
100198b6:	f047 0701 	orr.w	r7, r7, #1
100198ba:	605f      	str	r7, [r3, #4]
100198bc:	6813      	ldr	r3, [r2, #0]
100198be:	4630      	mov	r0, r6
100198c0:	1b1b      	subs	r3, r3, r4
100198c2:	6013      	str	r3, [r2, #0]
100198c4:	f7fd fb76 	bl	10016fb4 <__malloc_unlock>
100198c8:	2001      	movs	r0, #1
100198ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
100198ce:	2100      	movs	r1, #0
100198d0:	4630      	mov	r0, r6
100198d2:	f7fe fc35 	bl	10018140 <_sbrk_r>
100198d6:	f8d8 2008 	ldr.w	r2, [r8, #8]
100198da:	1a83      	subs	r3, r0, r2
100198dc:	2b0f      	cmp	r3, #15
100198de:	ddda      	ble.n	10019896 <_malloc_trim_r+0x4e>
100198e0:	f043 0301 	orr.w	r3, r3, #1
100198e4:	6053      	str	r3, [r2, #4]
100198e6:	4b05      	ldr	r3, [pc, #20]	@ (100198fc <_malloc_trim_r+0xb4>)
100198e8:	4903      	ldr	r1, [pc, #12]	@ (100198f8 <_malloc_trim_r+0xb0>)
100198ea:	681b      	ldr	r3, [r3, #0]
100198ec:	1ac0      	subs	r0, r0, r3
100198ee:	6008      	str	r0, [r1, #0]
100198f0:	e7d1      	b.n	10019896 <_malloc_trim_r+0x4e>
100198f2:	bf00      	nop
100198f4:	20000018 	.word	0x20000018
100198f8:	20001454 	.word	0x20001454
100198fc:	20000010 	.word	0x20000010

10019900 <_free_r>:
10019900:	2900      	cmp	r1, #0
10019902:	d07c      	beq.n	100199fe <_free_r+0xfe>
10019904:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10019906:	460c      	mov	r4, r1
10019908:	4606      	mov	r6, r0
1001990a:	f7fd fb4d 	bl	10016fa8 <__malloc_lock>
1001990e:	f854 3c04 	ldr.w	r3, [r4, #-4]
10019912:	4f77      	ldr	r7, [pc, #476]	@ (10019af0 <_free_r+0x1f0>)
10019914:	f1a4 0508 	sub.w	r5, r4, #8
10019918:	f023 0101 	bic.w	r1, r3, #1
1001991c:	1868      	adds	r0, r5, r1
1001991e:	f8d7 c008 	ldr.w	ip, [r7, #8]
10019922:	6842      	ldr	r2, [r0, #4]
10019924:	4584      	cmp	ip, r0
10019926:	f022 0203 	bic.w	r2, r2, #3
1001992a:	f000 8083 	beq.w	10019a34 <_free_r+0x134>
1001992e:	07db      	lsls	r3, r3, #31
10019930:	6042      	str	r2, [r0, #4]
10019932:	eb00 0c02 	add.w	ip, r0, r2
10019936:	d433      	bmi.n	100199a0 <_free_r+0xa0>
10019938:	f854 4c08 	ldr.w	r4, [r4, #-8]
1001993c:	f8dc 3004 	ldr.w	r3, [ip, #4]
10019940:	1b2d      	subs	r5, r5, r4
10019942:	4421      	add	r1, r4
10019944:	68ac      	ldr	r4, [r5, #8]
10019946:	f107 0c08 	add.w	ip, r7, #8
1001994a:	4564      	cmp	r4, ip
1001994c:	f003 0301 	and.w	r3, r3, #1
10019950:	d064      	beq.n	10019a1c <_free_r+0x11c>
10019952:	f8d5 e00c 	ldr.w	lr, [r5, #12]
10019956:	f8c4 e00c 	str.w	lr, [r4, #12]
1001995a:	f8ce 4008 	str.w	r4, [lr, #8]
1001995e:	2b00      	cmp	r3, #0
10019960:	f000 8081 	beq.w	10019a66 <_free_r+0x166>
10019964:	f041 0301 	orr.w	r3, r1, #1
10019968:	606b      	str	r3, [r5, #4]
1001996a:	6001      	str	r1, [r0, #0]
1001996c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10019970:	d222      	bcs.n	100199b8 <_free_r+0xb8>
10019972:	6878      	ldr	r0, [r7, #4]
10019974:	08cb      	lsrs	r3, r1, #3
10019976:	2201      	movs	r2, #1
10019978:	0949      	lsrs	r1, r1, #5
1001997a:	3301      	adds	r3, #1
1001997c:	408a      	lsls	r2, r1
1001997e:	4302      	orrs	r2, r0
10019980:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
10019984:	607a      	str	r2, [r7, #4]
10019986:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
1001998a:	3a08      	subs	r2, #8
1001998c:	e9c5 1202 	strd	r1, r2, [r5, #8]
10019990:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
10019994:	60cd      	str	r5, [r1, #12]
10019996:	4630      	mov	r0, r6
10019998:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1001999c:	f7fd bb0a 	b.w	10016fb4 <__malloc_unlock>
100199a0:	f8dc 3004 	ldr.w	r3, [ip, #4]
100199a4:	07db      	lsls	r3, r3, #31
100199a6:	d52b      	bpl.n	10019a00 <_free_r+0x100>
100199a8:	f041 0301 	orr.w	r3, r1, #1
100199ac:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
100199b0:	f844 3c04 	str.w	r3, [r4, #-4]
100199b4:	6001      	str	r1, [r0, #0]
100199b6:	d3dc      	bcc.n	10019972 <_free_r+0x72>
100199b8:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
100199bc:	ea4f 2351 	mov.w	r3, r1, lsr #9
100199c0:	d253      	bcs.n	10019a6a <_free_r+0x16a>
100199c2:	098b      	lsrs	r3, r1, #6
100199c4:	f103 0039 	add.w	r0, r3, #57	@ 0x39
100199c8:	f103 0238 	add.w	r2, r3, #56	@ 0x38
100199cc:	00c3      	lsls	r3, r0, #3
100199ce:	18f8      	adds	r0, r7, r3
100199d0:	58fb      	ldr	r3, [r7, r3]
100199d2:	3808      	subs	r0, #8
100199d4:	4298      	cmp	r0, r3
100199d6:	d103      	bne.n	100199e0 <_free_r+0xe0>
100199d8:	e063      	b.n	10019aa2 <_free_r+0x1a2>
100199da:	689b      	ldr	r3, [r3, #8]
100199dc:	4298      	cmp	r0, r3
100199de:	d004      	beq.n	100199ea <_free_r+0xea>
100199e0:	685a      	ldr	r2, [r3, #4]
100199e2:	f022 0203 	bic.w	r2, r2, #3
100199e6:	428a      	cmp	r2, r1
100199e8:	d8f7      	bhi.n	100199da <_free_r+0xda>
100199ea:	68d8      	ldr	r0, [r3, #12]
100199ec:	e9c5 3002 	strd	r3, r0, [r5, #8]
100199f0:	6085      	str	r5, [r0, #8]
100199f2:	60dd      	str	r5, [r3, #12]
100199f4:	4630      	mov	r0, r6
100199f6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
100199fa:	f7fd badb 	b.w	10016fb4 <__malloc_unlock>
100199fe:	4770      	bx	lr
10019a00:	4411      	add	r1, r2
10019a02:	f107 0c08 	add.w	ip, r7, #8
10019a06:	6883      	ldr	r3, [r0, #8]
10019a08:	4563      	cmp	r3, ip
10019a0a:	d03f      	beq.n	10019a8c <_free_r+0x18c>
10019a0c:	68c2      	ldr	r2, [r0, #12]
10019a0e:	60da      	str	r2, [r3, #12]
10019a10:	6093      	str	r3, [r2, #8]
10019a12:	f041 0301 	orr.w	r3, r1, #1
10019a16:	606b      	str	r3, [r5, #4]
10019a18:	5069      	str	r1, [r5, r1]
10019a1a:	e7a7      	b.n	1001996c <_free_r+0x6c>
10019a1c:	2b00      	cmp	r3, #0
10019a1e:	d161      	bne.n	10019ae4 <_free_r+0x1e4>
10019a20:	440a      	add	r2, r1
10019a22:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
10019a26:	60cb      	str	r3, [r1, #12]
10019a28:	6099      	str	r1, [r3, #8]
10019a2a:	f042 0301 	orr.w	r3, r2, #1
10019a2e:	606b      	str	r3, [r5, #4]
10019a30:	50aa      	str	r2, [r5, r2]
10019a32:	e7b0      	b.n	10019996 <_free_r+0x96>
10019a34:	440a      	add	r2, r1
10019a36:	07d9      	lsls	r1, r3, #31
10019a38:	d407      	bmi.n	10019a4a <_free_r+0x14a>
10019a3a:	f854 3c08 	ldr.w	r3, [r4, #-8]
10019a3e:	1aed      	subs	r5, r5, r3
10019a40:	441a      	add	r2, r3
10019a42:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
10019a46:	60cb      	str	r3, [r1, #12]
10019a48:	6099      	str	r1, [r3, #8]
10019a4a:	f042 0301 	orr.w	r3, r2, #1
10019a4e:	606b      	str	r3, [r5, #4]
10019a50:	4b28      	ldr	r3, [pc, #160]	@ (10019af4 <_free_r+0x1f4>)
10019a52:	60bd      	str	r5, [r7, #8]
10019a54:	681b      	ldr	r3, [r3, #0]
10019a56:	4293      	cmp	r3, r2
10019a58:	d89d      	bhi.n	10019996 <_free_r+0x96>
10019a5a:	4b27      	ldr	r3, [pc, #156]	@ (10019af8 <_free_r+0x1f8>)
10019a5c:	4630      	mov	r0, r6
10019a5e:	6819      	ldr	r1, [r3, #0]
10019a60:	f7ff fef2 	bl	10019848 <_malloc_trim_r>
10019a64:	e797      	b.n	10019996 <_free_r+0x96>
10019a66:	4411      	add	r1, r2
10019a68:	e7cd      	b.n	10019a06 <_free_r+0x106>
10019a6a:	2b14      	cmp	r3, #20
10019a6c:	d908      	bls.n	10019a80 <_free_r+0x180>
10019a6e:	2b54      	cmp	r3, #84	@ 0x54
10019a70:	d81f      	bhi.n	10019ab2 <_free_r+0x1b2>
10019a72:	0b0b      	lsrs	r3, r1, #12
10019a74:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
10019a78:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
10019a7c:	00c3      	lsls	r3, r0, #3
10019a7e:	e7a6      	b.n	100199ce <_free_r+0xce>
10019a80:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
10019a84:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
10019a88:	00c3      	lsls	r3, r0, #3
10019a8a:	e7a0      	b.n	100199ce <_free_r+0xce>
10019a8c:	f041 0301 	orr.w	r3, r1, #1
10019a90:	613d      	str	r5, [r7, #16]
10019a92:	617d      	str	r5, [r7, #20]
10019a94:	f8c5 c008 	str.w	ip, [r5, #8]
10019a98:	f8c5 c00c 	str.w	ip, [r5, #12]
10019a9c:	606b      	str	r3, [r5, #4]
10019a9e:	5069      	str	r1, [r5, r1]
10019aa0:	e779      	b.n	10019996 <_free_r+0x96>
10019aa2:	6879      	ldr	r1, [r7, #4]
10019aa4:	1092      	asrs	r2, r2, #2
10019aa6:	2401      	movs	r4, #1
10019aa8:	fa04 f202 	lsl.w	r2, r4, r2
10019aac:	430a      	orrs	r2, r1
10019aae:	607a      	str	r2, [r7, #4]
10019ab0:	e79c      	b.n	100199ec <_free_r+0xec>
10019ab2:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10019ab6:	d806      	bhi.n	10019ac6 <_free_r+0x1c6>
10019ab8:	0bcb      	lsrs	r3, r1, #15
10019aba:	f103 0078 	add.w	r0, r3, #120	@ 0x78
10019abe:	f103 0277 	add.w	r2, r3, #119	@ 0x77
10019ac2:	00c3      	lsls	r3, r0, #3
10019ac4:	e783      	b.n	100199ce <_free_r+0xce>
10019ac6:	f240 5254 	movw	r2, #1364	@ 0x554
10019aca:	4293      	cmp	r3, r2
10019acc:	d806      	bhi.n	10019adc <_free_r+0x1dc>
10019ace:	0c8b      	lsrs	r3, r1, #18
10019ad0:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
10019ad4:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
10019ad8:	00c3      	lsls	r3, r0, #3
10019ada:	e778      	b.n	100199ce <_free_r+0xce>
10019adc:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10019ae0:	227e      	movs	r2, #126	@ 0x7e
10019ae2:	e774      	b.n	100199ce <_free_r+0xce>
10019ae4:	f041 0301 	orr.w	r3, r1, #1
10019ae8:	606b      	str	r3, [r5, #4]
10019aea:	6001      	str	r1, [r0, #0]
10019aec:	e753      	b.n	10019996 <_free_r+0x96>
10019aee:	bf00      	nop
10019af0:	20000018 	.word	0x20000018
10019af4:	20000014 	.word	0x20000014
10019af8:	20001484 	.word	0x20001484

10019afc <__ascii_mbtowc>:
10019afc:	b082      	sub	sp, #8
10019afe:	b149      	cbz	r1, 10019b14 <__ascii_mbtowc+0x18>
10019b00:	b15a      	cbz	r2, 10019b1a <__ascii_mbtowc+0x1e>
10019b02:	b16b      	cbz	r3, 10019b20 <__ascii_mbtowc+0x24>
10019b04:	7813      	ldrb	r3, [r2, #0]
10019b06:	600b      	str	r3, [r1, #0]
10019b08:	7812      	ldrb	r2, [r2, #0]
10019b0a:	1e10      	subs	r0, r2, #0
10019b0c:	bf18      	it	ne
10019b0e:	2001      	movne	r0, #1
10019b10:	b002      	add	sp, #8
10019b12:	4770      	bx	lr
10019b14:	a901      	add	r1, sp, #4
10019b16:	2a00      	cmp	r2, #0
10019b18:	d1f3      	bne.n	10019b02 <__ascii_mbtowc+0x6>
10019b1a:	4610      	mov	r0, r2
10019b1c:	b002      	add	sp, #8
10019b1e:	4770      	bx	lr
10019b20:	f06f 0001 	mvn.w	r0, #1
10019b24:	e7f4      	b.n	10019b10 <__ascii_mbtowc+0x14>
10019b26:	bf00      	nop

10019b28 <_svfprintf_r>:
10019b28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10019b2c:	b0df      	sub	sp, #380	@ 0x17c
10019b2e:	460c      	mov	r4, r1
10019b30:	9109      	str	r1, [sp, #36]	@ 0x24
10019b32:	4691      	mov	r9, r2
10019b34:	930d      	str	r3, [sp, #52]	@ 0x34
10019b36:	4683      	mov	fp, r0
10019b38:	f7fe faaa 	bl	10018090 <_localeconv_r>
10019b3c:	6803      	ldr	r3, [r0, #0]
10019b3e:	931a      	str	r3, [sp, #104]	@ 0x68
10019b40:	4618      	mov	r0, r3
10019b42:	f7fe fddd 	bl	10018700 <strlen>
10019b46:	2100      	movs	r1, #0
10019b48:	9018      	str	r0, [sp, #96]	@ 0x60
10019b4a:	2208      	movs	r2, #8
10019b4c:	a82e      	add	r0, sp, #184	@ 0xb8
10019b4e:	f7fe fa13 	bl	10017f78 <memset>
10019b52:	89a3      	ldrh	r3, [r4, #12]
10019b54:	0619      	lsls	r1, r3, #24
10019b56:	d503      	bpl.n	10019b60 <_svfprintf_r+0x38>
10019b58:	6923      	ldr	r3, [r4, #16]
10019b5a:	2b00      	cmp	r3, #0
10019b5c:	f000 8788 	beq.w	1001aa70 <_svfprintf_r+0xf48>
10019b60:	2300      	movs	r3, #0
10019b62:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10019b66:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10019b6a:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
10019b6e:	9313      	str	r3, [sp, #76]	@ 0x4c
10019b70:	9319      	str	r3, [sp, #100]	@ 0x64
10019b72:	930a      	str	r3, [sp, #40]	@ 0x28
10019b74:	2400      	movs	r4, #0
10019b76:	2300      	movs	r3, #0
10019b78:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
10019b7c:	aa35      	add	r2, sp, #212	@ 0xd4
10019b7e:	9232      	str	r2, [sp, #200]	@ 0xc8
10019b80:	4690      	mov	r8, r2
10019b82:	f8cd b01c 	str.w	fp, [sp, #28]
10019b86:	464d      	mov	r5, r9
10019b88:	9f07      	ldr	r7, [sp, #28]
10019b8a:	462e      	mov	r6, r5
10019b8c:	4b73      	ldr	r3, [pc, #460]	@ (10019d5c <_svfprintf_r+0x234>)
10019b8e:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10019b92:	f7fe fa77 	bl	10018084 <__locale_mb_cur_max>
10019b96:	4603      	mov	r3, r0
10019b98:	a82e      	add	r0, sp, #184	@ 0xb8
10019b9a:	9000      	str	r0, [sp, #0]
10019b9c:	4632      	mov	r2, r6
10019b9e:	a92a      	add	r1, sp, #168	@ 0xa8
10019ba0:	4638      	mov	r0, r7
10019ba2:	47a0      	blx	r4
10019ba4:	2800      	cmp	r0, #0
10019ba6:	f000 80a9 	beq.w	10019cfc <_svfprintf_r+0x1d4>
10019baa:	f2c0 809f 	blt.w	10019cec <_svfprintf_r+0x1c4>
10019bae:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10019bb0:	2a25      	cmp	r2, #37	@ 0x25
10019bb2:	4603      	mov	r3, r0
10019bb4:	d001      	beq.n	10019bba <_svfprintf_r+0x92>
10019bb6:	441e      	add	r6, r3
10019bb8:	e7e8      	b.n	10019b8c <_svfprintf_r+0x64>
10019bba:	1b77      	subs	r7, r6, r5
10019bbc:	4604      	mov	r4, r0
10019bbe:	f040 80a0 	bne.w	10019d02 <_svfprintf_r+0x1da>
10019bc2:	2300      	movs	r3, #0
10019bc4:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10019bc8:	4699      	mov	r9, r3
10019bca:	930b      	str	r3, [sp, #44]	@ 0x2c
10019bcc:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10019bd0:	7873      	ldrb	r3, [r6, #1]
10019bd2:	9208      	str	r2, [sp, #32]
10019bd4:	1c74      	adds	r4, r6, #1
10019bd6:	3401      	adds	r4, #1
10019bd8:	f1a3 0220 	sub.w	r2, r3, #32
10019bdc:	2a5a      	cmp	r2, #90	@ 0x5a
10019bde:	f200 80bf 	bhi.w	10019d60 <_svfprintf_r+0x238>
10019be2:	e8df f012 	tbh	[pc, r2, lsl #1]
10019be6:	02e6      	.short	0x02e6
10019be8:	00bd00bd 	.word	0x00bd00bd
10019bec:	00bd02e2 	.word	0x00bd02e2
10019bf0:	00bd00bd 	.word	0x00bd00bd
10019bf4:	00bd006a 	.word	0x00bd006a
10019bf8:	024800bd 	.word	0x024800bd
10019bfc:	00bd0257 	.word	0x00bd0257
10019c00:	02f40253 	.word	0x02f40253
10019c04:	02f000bd 	.word	0x02f000bd
10019c08:	005b005b 	.word	0x005b005b
10019c0c:	005b005b 	.word	0x005b005b
10019c10:	005b005b 	.word	0x005b005b
10019c14:	005b005b 	.word	0x005b005b
10019c18:	00bd005b 	.word	0x00bd005b
10019c1c:	00bd00bd 	.word	0x00bd00bd
10019c20:	00bd00bd 	.word	0x00bd00bd
10019c24:	00bd00bd 	.word	0x00bd00bd
10019c28:	00bd013e 	.word	0x00bd013e
10019c2c:	030e01c7 	.word	0x030e01c7
10019c30:	013e013e 	.word	0x013e013e
10019c34:	00bd013e 	.word	0x00bd013e
10019c38:	00bd00bd 	.word	0x00bd00bd
10019c3c:	02de00bd 	.word	0x02de00bd
10019c40:	00bd00bd 	.word	0x00bd00bd
10019c44:	00bd025c 	.word	0x00bd025c
10019c48:	00bd00bd 	.word	0x00bd00bd
10019c4c:	00bd01f1 	.word	0x00bd01f1
10019c50:	00bd02cb 	.word	0x00bd02cb
10019c54:	070600bd 	.word	0x070600bd
10019c58:	00bd00bd 	.word	0x00bd00bd
10019c5c:	00bd00bd 	.word	0x00bd00bd
10019c60:	00bd00bd 	.word	0x00bd00bd
10019c64:	00bd00bd 	.word	0x00bd00bd
10019c68:	00bd013e 	.word	0x00bd013e
10019c6c:	022301c7 	.word	0x022301c7
10019c70:	013e013e 	.word	0x013e013e
10019c74:	028d013e 	.word	0x028d013e
10019c78:	007f0223 	.word	0x007f0223
10019c7c:	02a600bd 	.word	0x02a600bd
10019c80:	029700bd 	.word	0x029700bd
10019c84:	02b906fb 	.word	0x02b906fb
10019c88:	00bd007f 	.word	0x00bd007f
10019c8c:	007d01f1 	.word	0x007d01f1
10019c90:	00bd0701 	.word	0x00bd0701
10019c94:	072a00bd 	.word	0x072a00bd
10019c98:	007d00bd 	.word	0x007d00bd
10019c9c:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10019ca0:	2100      	movs	r1, #0
10019ca2:	f814 3b01 	ldrb.w	r3, [r4], #1
10019ca6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10019caa:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10019cae:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10019cb2:	2a09      	cmp	r2, #9
10019cb4:	d9f5      	bls.n	10019ca2 <_svfprintf_r+0x17a>
10019cb6:	910b      	str	r1, [sp, #44]	@ 0x2c
10019cb8:	e78e      	b.n	10019bd8 <_svfprintf_r+0xb0>
10019cba:	9f07      	ldr	r7, [sp, #28]
10019cbc:	4638      	mov	r0, r7
10019cbe:	f7fe f9e7 	bl	10018090 <_localeconv_r>
10019cc2:	6843      	ldr	r3, [r0, #4]
10019cc4:	931d      	str	r3, [sp, #116]	@ 0x74
10019cc6:	4618      	mov	r0, r3
10019cc8:	f7fe fd1a 	bl	10018700 <strlen>
10019ccc:	901e      	str	r0, [sp, #120]	@ 0x78
10019cce:	4606      	mov	r6, r0
10019cd0:	4638      	mov	r0, r7
10019cd2:	f7fe f9dd 	bl	10018090 <_localeconv_r>
10019cd6:	6883      	ldr	r3, [r0, #8]
10019cd8:	931b      	str	r3, [sp, #108]	@ 0x6c
10019cda:	2e00      	cmp	r6, #0
10019cdc:	f040 8616 	bne.w	1001a90c <_svfprintf_r+0xde4>
10019ce0:	7823      	ldrb	r3, [r4, #0]
10019ce2:	e778      	b.n	10019bd6 <_svfprintf_r+0xae>
10019ce4:	7823      	ldrb	r3, [r4, #0]
10019ce6:	f049 0920 	orr.w	r9, r9, #32
10019cea:	e774      	b.n	10019bd6 <_svfprintf_r+0xae>
10019cec:	2208      	movs	r2, #8
10019cee:	2100      	movs	r1, #0
10019cf0:	a82e      	add	r0, sp, #184	@ 0xb8
10019cf2:	f7fe f941 	bl	10017f78 <memset>
10019cf6:	2301      	movs	r3, #1
10019cf8:	441e      	add	r6, r3
10019cfa:	e747      	b.n	10019b8c <_svfprintf_r+0x64>
10019cfc:	1b77      	subs	r7, r6, r5
10019cfe:	4604      	mov	r4, r0
10019d00:	d011      	beq.n	10019d26 <_svfprintf_r+0x1fe>
10019d02:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10019d04:	443b      	add	r3, r7
10019d06:	9334      	str	r3, [sp, #208]	@ 0xd0
10019d08:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019d0a:	3301      	adds	r3, #1
10019d0c:	2b07      	cmp	r3, #7
10019d0e:	e9c8 5700 	strd	r5, r7, [r8]
10019d12:	9333      	str	r3, [sp, #204]	@ 0xcc
10019d14:	dc18      	bgt.n	10019d48 <_svfprintf_r+0x220>
10019d16:	f108 0808 	add.w	r8, r8, #8
10019d1a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10019d1c:	443b      	add	r3, r7
10019d1e:	930a      	str	r3, [sp, #40]	@ 0x28
10019d20:	2c00      	cmp	r4, #0
10019d22:	f47f af4e 	bne.w	10019bc2 <_svfprintf_r+0x9a>
10019d26:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10019d28:	f8dd b01c 	ldr.w	fp, [sp, #28]
10019d2c:	2b00      	cmp	r3, #0
10019d2e:	f041 81ed 	bne.w	1001b10c <_svfprintf_r+0x15e4>
10019d32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10019d34:	899b      	ldrh	r3, [r3, #12]
10019d36:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10019d3a:	2b00      	cmp	r3, #0
10019d3c:	f041 83bd 	bne.w	1001b4ba <_svfprintf_r+0x1992>
10019d40:	980a      	ldr	r0, [sp, #40]	@ 0x28
10019d42:	b05f      	add	sp, #380	@ 0x17c
10019d44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10019d48:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019d4a:	9807      	ldr	r0, [sp, #28]
10019d4c:	aa32      	add	r2, sp, #200	@ 0xc8
10019d4e:	f006 fa0d 	bl	1002016c <__ssprint_r>
10019d52:	2800      	cmp	r0, #0
10019d54:	d1ed      	bne.n	10019d32 <_svfprintf_r+0x20a>
10019d56:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019d5a:	e7de      	b.n	10019d1a <_svfprintf_r+0x1f2>
10019d5c:	2000042c 	.word	0x2000042c
10019d60:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019d64:	2b00      	cmp	r3, #0
10019d66:	d0de      	beq.n	10019d26 <_svfprintf_r+0x1fe>
10019d68:	2200      	movs	r2, #0
10019d6a:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10019d6e:	2301      	movs	r3, #1
10019d70:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10019d74:	9306      	str	r3, [sp, #24]
10019d76:	920c      	str	r2, [sp, #48]	@ 0x30
10019d78:	469b      	mov	fp, r3
10019d7a:	9208      	str	r2, [sp, #32]
10019d7c:	9214      	str	r2, [sp, #80]	@ 0x50
10019d7e:	9210      	str	r2, [sp, #64]	@ 0x40
10019d80:	9212      	str	r2, [sp, #72]	@ 0x48
10019d82:	ad45      	add	r5, sp, #276	@ 0x114
10019d84:	f019 0302 	ands.w	r3, r9, #2
10019d88:	d002      	beq.n	10019d90 <_svfprintf_r+0x268>
10019d8a:	9906      	ldr	r1, [sp, #24]
10019d8c:	3102      	adds	r1, #2
10019d8e:	9106      	str	r1, [sp, #24]
10019d90:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10019d94:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10019d96:	d105      	bne.n	10019da4 <_svfprintf_r+0x27c>
10019d98:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10019d9a:	9806      	ldr	r0, [sp, #24]
10019d9c:	1a0e      	subs	r6, r1, r0
10019d9e:	2e00      	cmp	r6, #0
10019da0:	f300 80a7 	bgt.w	10019ef2 <_svfprintf_r+0x3ca>
10019da4:	b182      	cbz	r2, 10019dc8 <_svfprintf_r+0x2a0>
10019da6:	2201      	movs	r2, #1
10019da8:	f8c8 2004 	str.w	r2, [r8, #4]
10019dac:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10019dae:	3201      	adds	r2, #1
10019db0:	3401      	adds	r4, #1
10019db2:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
10019db6:	2a07      	cmp	r2, #7
10019db8:	9434      	str	r4, [sp, #208]	@ 0xd0
10019dba:	9233      	str	r2, [sp, #204]	@ 0xcc
10019dbc:	f8c8 1000 	str.w	r1, [r8]
10019dc0:	f300 8403 	bgt.w	1001a5ca <_svfprintf_r+0xaa2>
10019dc4:	f108 0808 	add.w	r8, r8, #8
10019dc8:	b183      	cbz	r3, 10019dec <_svfprintf_r+0x2c4>
10019dca:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019dcc:	aa28      	add	r2, sp, #160	@ 0xa0
10019dce:	3301      	adds	r3, #1
10019dd0:	3402      	adds	r4, #2
10019dd2:	f8c8 2000 	str.w	r2, [r8]
10019dd6:	2b07      	cmp	r3, #7
10019dd8:	f04f 0202 	mov.w	r2, #2
10019ddc:	9434      	str	r4, [sp, #208]	@ 0xd0
10019dde:	9333      	str	r3, [sp, #204]	@ 0xcc
10019de0:	f8c8 2004 	str.w	r2, [r8, #4]
10019de4:	f300 83e5 	bgt.w	1001a5b2 <_svfprintf_r+0xa8a>
10019de8:	f108 0808 	add.w	r8, r8, #8
10019dec:	2f80      	cmp	r7, #128	@ 0x80
10019dee:	f000 82be 	beq.w	1001a36e <_svfprintf_r+0x846>
10019df2:	9b08      	ldr	r3, [sp, #32]
10019df4:	eba3 060b 	sub.w	r6, r3, fp
10019df8:	2e00      	cmp	r6, #0
10019dfa:	f300 82fd 	bgt.w	1001a3f8 <_svfprintf_r+0x8d0>
10019dfe:	f419 7f80 	tst.w	r9, #256	@ 0x100
10019e02:	f040 8217 	bne.w	1001a234 <_svfprintf_r+0x70c>
10019e06:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019e08:	f8c8 5000 	str.w	r5, [r8]
10019e0c:	3301      	adds	r3, #1
10019e0e:	445c      	add	r4, fp
10019e10:	2b07      	cmp	r3, #7
10019e12:	f8c8 b004 	str.w	fp, [r8, #4]
10019e16:	9434      	str	r4, [sp, #208]	@ 0xd0
10019e18:	9333      	str	r3, [sp, #204]	@ 0xcc
10019e1a:	f300 836a 	bgt.w	1001a4f2 <_svfprintf_r+0x9ca>
10019e1e:	f108 0808 	add.w	r8, r8, #8
10019e22:	f019 0f04 	tst.w	r9, #4
10019e26:	d005      	beq.n	10019e34 <_svfprintf_r+0x30c>
10019e28:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10019e2a:	9a06      	ldr	r2, [sp, #24]
10019e2c:	1a9d      	subs	r5, r3, r2
10019e2e:	2d00      	cmp	r5, #0
10019e30:	f300 83da 	bgt.w	1001a5e8 <_svfprintf_r+0xac0>
10019e34:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10019e38:	9906      	ldr	r1, [sp, #24]
10019e3a:	428a      	cmp	r2, r1
10019e3c:	bfac      	ite	ge
10019e3e:	189b      	addge	r3, r3, r2
10019e40:	185b      	addlt	r3, r3, r1
10019e42:	930a      	str	r3, [sp, #40]	@ 0x28
10019e44:	2c00      	cmp	r4, #0
10019e46:	f040 8316 	bne.w	1001a476 <_svfprintf_r+0x94e>
10019e4a:	2300      	movs	r3, #0
10019e4c:	9333      	str	r3, [sp, #204]	@ 0xcc
10019e4e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10019e50:	b11b      	cbz	r3, 10019e5a <_svfprintf_r+0x332>
10019e52:	990c      	ldr	r1, [sp, #48]	@ 0x30
10019e54:	9807      	ldr	r0, [sp, #28]
10019e56:	f7ff fd53 	bl	10019900 <_free_r>
10019e5a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019e5e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10019e60:	e692      	b.n	10019b88 <_svfprintf_r+0x60>
10019e62:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019e66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019e68:	3307      	adds	r3, #7
10019e6a:	f023 0307 	bic.w	r3, r3, #7
10019e6e:	e8f3 6702 	ldrd	r6, r7, [r3], #8
10019e72:	930d      	str	r3, [sp, #52]	@ 0x34
10019e74:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10019e78:	9323      	str	r3, [sp, #140]	@ 0x8c
10019e7a:	9622      	str	r6, [sp, #136]	@ 0x88
10019e7c:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
10019e80:	4bb1      	ldr	r3, [pc, #708]	@ (1001a148 <_svfprintf_r+0x620>)
10019e82:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10019e86:	4650      	mov	r0, sl
10019e88:	4659      	mov	r1, fp
10019e8a:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
10019e8e:	f006 ff99 	bl	10020dc4 <__aeabi_dcmpun>
10019e92:	2800      	cmp	r0, #0
10019e94:	f040 8547 	bne.w	1001a926 <_svfprintf_r+0xdfe>
10019e98:	4bab      	ldr	r3, [pc, #684]	@ (1001a148 <_svfprintf_r+0x620>)
10019e9a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10019e9e:	4650      	mov	r0, sl
10019ea0:	4659      	mov	r1, fp
10019ea2:	f006 ff71 	bl	10020d88 <__aeabi_dcmple>
10019ea6:	2800      	cmp	r0, #0
10019ea8:	f040 853d 	bne.w	1001a926 <_svfprintf_r+0xdfe>
10019eac:	2200      	movs	r2, #0
10019eae:	2300      	movs	r3, #0
10019eb0:	4630      	mov	r0, r6
10019eb2:	4639      	mov	r1, r7
10019eb4:	f006 ff5e 	bl	10020d74 <__aeabi_dcmplt>
10019eb8:	2800      	cmp	r0, #0
10019eba:	f041 8053 	bne.w	1001af64 <_svfprintf_r+0x143c>
10019ebe:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019ec2:	4da2      	ldr	r5, [pc, #648]	@ (1001a14c <_svfprintf_r+0x624>)
10019ec4:	4ba2      	ldr	r3, [pc, #648]	@ (1001a150 <_svfprintf_r+0x628>)
10019ec6:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10019eca:	990e      	ldr	r1, [sp, #56]	@ 0x38
10019ecc:	2947      	cmp	r1, #71	@ 0x47
10019ece:	bfc8      	it	gt
10019ed0:	461d      	movgt	r5, r3
10019ed2:	2300      	movs	r3, #0
10019ed4:	2103      	movs	r1, #3
10019ed6:	930c      	str	r3, [sp, #48]	@ 0x30
10019ed8:	9106      	str	r1, [sp, #24]
10019eda:	468b      	mov	fp, r1
10019edc:	9308      	str	r3, [sp, #32]
10019ede:	9314      	str	r3, [sp, #80]	@ 0x50
10019ee0:	9310      	str	r3, [sp, #64]	@ 0x40
10019ee2:	9312      	str	r3, [sp, #72]	@ 0x48
10019ee4:	2a00      	cmp	r2, #0
10019ee6:	f43f af4d 	beq.w	10019d84 <_svfprintf_r+0x25c>
10019eea:	9b06      	ldr	r3, [sp, #24]
10019eec:	3301      	adds	r3, #1
10019eee:	9306      	str	r3, [sp, #24]
10019ef0:	e748      	b.n	10019d84 <_svfprintf_r+0x25c>
10019ef2:	2e10      	cmp	r6, #16
10019ef4:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10019ef6:	f341 8279 	ble.w	1001b3ec <_svfprintf_r+0x18c4>
10019efa:	4896      	ldr	r0, [pc, #600]	@ (1001a154 <_svfprintf_r+0x62c>)
10019efc:	9521      	str	r5, [sp, #132]	@ 0x84
10019efe:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
10019f02:	4621      	mov	r1, r4
10019f04:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10019f06:	9c07      	ldr	r4, [sp, #28]
10019f08:	9015      	str	r0, [sp, #84]	@ 0x54
10019f0a:	f04f 0a10 	mov.w	sl, #16
10019f0e:	4607      	mov	r7, r0
10019f10:	e004      	b.n	10019f1c <_svfprintf_r+0x3f4>
10019f12:	3e10      	subs	r6, #16
10019f14:	2e10      	cmp	r6, #16
10019f16:	f108 0808 	add.w	r8, r8, #8
10019f1a:	dd16      	ble.n	10019f4a <_svfprintf_r+0x422>
10019f1c:	3201      	adds	r2, #1
10019f1e:	3110      	adds	r1, #16
10019f20:	2a07      	cmp	r2, #7
10019f22:	e9c8 7a00 	strd	r7, sl, [r8]
10019f26:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10019f2a:	ddf2      	ble.n	10019f12 <_svfprintf_r+0x3ea>
10019f2c:	aa32      	add	r2, sp, #200	@ 0xc8
10019f2e:	4629      	mov	r1, r5
10019f30:	4620      	mov	r0, r4
10019f32:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019f36:	f006 f919 	bl	1002016c <__ssprint_r>
10019f3a:	2800      	cmp	r0, #0
10019f3c:	f040 86f1 	bne.w	1001ad22 <_svfprintf_r+0x11fa>
10019f40:	3e10      	subs	r6, #16
10019f42:	2e10      	cmp	r6, #16
10019f44:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10019f48:	dce8      	bgt.n	10019f1c <_svfprintf_r+0x3f4>
10019f4a:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10019f4e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
10019f50:	460c      	mov	r4, r1
10019f52:	3201      	adds	r2, #1
10019f54:	9915      	ldr	r1, [sp, #84]	@ 0x54
10019f56:	f8c8 1000 	str.w	r1, [r8]
10019f5a:	4434      	add	r4, r6
10019f5c:	2a07      	cmp	r2, #7
10019f5e:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
10019f62:	f8c8 6004 	str.w	r6, [r8, #4]
10019f66:	f300 86cb 	bgt.w	1001ad00 <_svfprintf_r+0x11d8>
10019f6a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019f6e:	f108 0808 	add.w	r8, r8, #8
10019f72:	e717      	b.n	10019da4 <_svfprintf_r+0x27c>
10019f74:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10019f76:	2b43      	cmp	r3, #67	@ 0x43
10019f78:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019f7c:	f102 0404 	add.w	r4, r2, #4
10019f80:	d003      	beq.n	10019f8a <_svfprintf_r+0x462>
10019f82:	f019 0f10 	tst.w	r9, #16
10019f86:	f000 855d 	beq.w	1001aa44 <_svfprintf_r+0xf1c>
10019f8a:	2208      	movs	r2, #8
10019f8c:	2100      	movs	r1, #0
10019f8e:	a830      	add	r0, sp, #192	@ 0xc0
10019f90:	f7fd fff2 	bl	10017f78 <memset>
10019f94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019f96:	9807      	ldr	r0, [sp, #28]
10019f98:	681a      	ldr	r2, [r3, #0]
10019f9a:	ad45      	add	r5, sp, #276	@ 0x114
10019f9c:	ab30      	add	r3, sp, #192	@ 0xc0
10019f9e:	4629      	mov	r1, r5
10019fa0:	f7fe fc1a 	bl	100187d8 <_wcrtomb_r>
10019fa4:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10019fa8:	4683      	mov	fp, r0
10019faa:	f001 8281 	beq.w	1001b4b0 <_svfprintf_r+0x1988>
10019fae:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10019fb2:	9306      	str	r3, [sp, #24]
10019fb4:	2200      	movs	r2, #0
10019fb6:	940d      	str	r4, [sp, #52]	@ 0x34
10019fb8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10019fbc:	920c      	str	r2, [sp, #48]	@ 0x30
10019fbe:	9208      	str	r2, [sp, #32]
10019fc0:	9214      	str	r2, [sp, #80]	@ 0x50
10019fc2:	9210      	str	r2, [sp, #64]	@ 0x40
10019fc4:	9212      	str	r2, [sp, #72]	@ 0x48
10019fc6:	e6dd      	b.n	10019d84 <_svfprintf_r+0x25c>
10019fc8:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10019fca:	f856 5b04 	ldr.w	r5, [r6], #4
10019fce:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019fd2:	2300      	movs	r3, #0
10019fd4:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10019fd8:	2d00      	cmp	r5, #0
10019fda:	f000 8558 	beq.w	1001aa8e <_svfprintf_r+0xf66>
10019fde:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019fe0:	2b53      	cmp	r3, #83	@ 0x53
10019fe2:	f000 86ba 	beq.w	1001ad5a <_svfprintf_r+0x1232>
10019fe6:	f019 0310 	ands.w	r3, r9, #16
10019fea:	9312      	str	r3, [sp, #72]	@ 0x48
10019fec:	f040 86b5 	bne.w	1001ad5a <_svfprintf_r+0x1232>
10019ff0:	9b08      	ldr	r3, [sp, #32]
10019ff2:	1c5a      	adds	r2, r3, #1
10019ff4:	f001 8095 	beq.w	1001b122 <_svfprintf_r+0x15fa>
10019ff8:	9912      	ldr	r1, [sp, #72]	@ 0x48
10019ffa:	461a      	mov	r2, r3
10019ffc:	4628      	mov	r0, r5
10019ffe:	f7fe fa7f 	bl	10018500 <memchr>
1001a002:	900c      	str	r0, [sp, #48]	@ 0x30
1001a004:	2800      	cmp	r0, #0
1001a006:	f001 82f0 	beq.w	1001b5ea <_svfprintf_r+0x1ac2>
1001a00a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001a00c:	960d      	str	r6, [sp, #52]	@ 0x34
1001a00e:	eba3 0b05 	sub.w	fp, r3, r5
1001a012:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001a014:	9308      	str	r3, [sp, #32]
1001a016:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
1001a01a:	9314      	str	r3, [sp, #80]	@ 0x50
1001a01c:	9310      	str	r3, [sp, #64]	@ 0x40
1001a01e:	930c      	str	r3, [sp, #48]	@ 0x30
1001a020:	2373      	movs	r3, #115	@ 0x73
1001a022:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001a026:	9106      	str	r1, [sp, #24]
1001a028:	930e      	str	r3, [sp, #56]	@ 0x38
1001a02a:	e75b      	b.n	10019ee4 <_svfprintf_r+0x3bc>
1001a02c:	f019 0f20 	tst.w	r9, #32
1001a030:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a034:	f000 80ed 	beq.w	1001a212 <_svfprintf_r+0x6ea>
1001a038:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a03a:	3307      	adds	r3, #7
1001a03c:	f023 0307 	bic.w	r3, r3, #7
1001a040:	461a      	mov	r2, r3
1001a042:	6859      	ldr	r1, [r3, #4]
1001a044:	f852 3b08 	ldr.w	r3, [r2], #8
1001a048:	920d      	str	r2, [sp, #52]	@ 0x34
1001a04a:	460a      	mov	r2, r1
1001a04c:	2900      	cmp	r1, #0
1001a04e:	f2c0 841a 	blt.w	1001a886 <_svfprintf_r+0xd5e>
1001a052:	9908      	ldr	r1, [sp, #32]
1001a054:	3101      	adds	r1, #1
1001a056:	f000 829d 	beq.w	1001a594 <_svfprintf_r+0xa6c>
1001a05a:	ea53 0102 	orrs.w	r1, r3, r2
1001a05e:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
1001a062:	f040 8298 	bne.w	1001a596 <_svfprintf_r+0xa6e>
1001a066:	9a08      	ldr	r2, [sp, #32]
1001a068:	2a00      	cmp	r2, #0
1001a06a:	f040 8299 	bne.w	1001a5a0 <_svfprintf_r+0xa78>
1001a06e:	46a1      	mov	r9, r4
1001a070:	4693      	mov	fp, r2
1001a072:	ad5e      	add	r5, sp, #376	@ 0x178
1001a074:	e152      	b.n	1001a31c <_svfprintf_r+0x7f4>
1001a076:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a078:	f853 2b04 	ldr.w	r2, [r3], #4
1001a07c:	920b      	str	r2, [sp, #44]	@ 0x2c
1001a07e:	2a00      	cmp	r2, #0
1001a080:	f280 8425 	bge.w	1001a8ce <_svfprintf_r+0xda6>
1001a084:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001a086:	930d      	str	r3, [sp, #52]	@ 0x34
1001a088:	4252      	negs	r2, r2
1001a08a:	920b      	str	r2, [sp, #44]	@ 0x2c
1001a08c:	7823      	ldrb	r3, [r4, #0]
1001a08e:	f049 0904 	orr.w	r9, r9, #4
1001a092:	e5a0      	b.n	10019bd6 <_svfprintf_r+0xae>
1001a094:	232b      	movs	r3, #43	@ 0x2b
1001a096:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001a09a:	7823      	ldrb	r3, [r4, #0]
1001a09c:	e59b      	b.n	10019bd6 <_svfprintf_r+0xae>
1001a09e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a0a2:	f049 0910 	orr.w	r9, r9, #16
1001a0a6:	f019 0220 	ands.w	r2, r9, #32
1001a0aa:	f000 83b5 	beq.w	1001a818 <_svfprintf_r+0xcf0>
1001a0ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a0b0:	3307      	adds	r3, #7
1001a0b2:	f023 0307 	bic.w	r3, r3, #7
1001a0b6:	4619      	mov	r1, r3
1001a0b8:	685a      	ldr	r2, [r3, #4]
1001a0ba:	f851 3b08 	ldr.w	r3, [r1], #8
1001a0be:	910d      	str	r1, [sp, #52]	@ 0x34
1001a0c0:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001a0c4:	2100      	movs	r1, #0
1001a0c6:	2000      	movs	r0, #0
1001a0c8:	9d08      	ldr	r5, [sp, #32]
1001a0ca:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
1001a0ce:	1c6f      	adds	r7, r5, #1
1001a0d0:	f000 810d 	beq.w	1001a2ee <_svfprintf_r+0x7c6>
1001a0d4:	ea53 0002 	orrs.w	r0, r3, r2
1001a0d8:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
1001a0dc:	f040 8106 	bne.w	1001a2ec <_svfprintf_r+0x7c4>
1001a0e0:	2d00      	cmp	r5, #0
1001a0e2:	f040 8628 	bne.w	1001ad36 <_svfprintf_r+0x120e>
1001a0e6:	2900      	cmp	r1, #0
1001a0e8:	f040 83c9 	bne.w	1001a87e <_svfprintf_r+0xd56>
1001a0ec:	f014 0b01 	ands.w	fp, r4, #1
1001a0f0:	f000 83f1 	beq.w	1001a8d6 <_svfprintf_r+0xdae>
1001a0f4:	2330      	movs	r3, #48	@ 0x30
1001a0f6:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001a0fa:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001a0fe:	e10d      	b.n	1001a31c <_svfprintf_r+0x7f4>
1001a100:	7823      	ldrb	r3, [r4, #0]
1001a102:	2b68      	cmp	r3, #104	@ 0x68
1001a104:	bf03      	ittte	eq
1001a106:	7863      	ldrbeq	r3, [r4, #1]
1001a108:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
1001a10c:	3401      	addeq	r4, #1
1001a10e:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
1001a112:	e560      	b.n	10019bd6 <_svfprintf_r+0xae>
1001a114:	f019 0f20 	tst.w	r9, #32
1001a118:	940f      	str	r4, [sp, #60]	@ 0x3c
1001a11a:	f000 83e6 	beq.w	1001a8ea <_svfprintf_r+0xdc2>
1001a11e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a120:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001a122:	681b      	ldr	r3, [r3, #0]
1001a124:	601a      	str	r2, [r3, #0]
1001a126:	17d2      	asrs	r2, r2, #31
1001a128:	605a      	str	r2, [r3, #4]
1001a12a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a12c:	3304      	adds	r3, #4
1001a12e:	930d      	str	r3, [sp, #52]	@ 0x34
1001a130:	e695      	b.n	10019e5e <_svfprintf_r+0x336>
1001a132:	7823      	ldrb	r3, [r4, #0]
1001a134:	2b6c      	cmp	r3, #108	@ 0x6c
1001a136:	bf03      	ittte	eq
1001a138:	7863      	ldrbeq	r3, [r4, #1]
1001a13a:	f049 0920 	orreq.w	r9, r9, #32
1001a13e:	3401      	addeq	r4, #1
1001a140:	f049 0910 	orrne.w	r9, r9, #16
1001a144:	e547      	b.n	10019bd6 <_svfprintf_r+0xae>
1001a146:	bf00      	nop
1001a148:	7fefffff 	.word	0x7fefffff
1001a14c:	10023aa4 	.word	0x10023aa4
1001a150:	10023aa8 	.word	0x10023aa8
1001a154:	10023d08 	.word	0x10023d08
1001a158:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001a15a:	940f      	str	r4, [sp, #60]	@ 0x3c
1001a15c:	f852 3b04 	ldr.w	r3, [r2], #4
1001a160:	920d      	str	r2, [sp, #52]	@ 0x34
1001a162:	f647 0230 	movw	r2, #30768	@ 0x7830
1001a166:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
1001a16a:	2078      	movs	r0, #120	@ 0x78
1001a16c:	4aa8      	ldr	r2, [pc, #672]	@ (1001a410 <_svfprintf_r+0x8e8>)
1001a16e:	9219      	str	r2, [sp, #100]	@ 0x64
1001a170:	f049 0402 	orr.w	r4, r9, #2
1001a174:	2200      	movs	r2, #0
1001a176:	2102      	movs	r1, #2
1001a178:	900e      	str	r0, [sp, #56]	@ 0x38
1001a17a:	e7a4      	b.n	1001a0c6 <_svfprintf_r+0x59e>
1001a17c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a180:	f049 0410 	orr.w	r4, r9, #16
1001a184:	f014 0220 	ands.w	r2, r4, #32
1001a188:	f000 8355 	beq.w	1001a836 <_svfprintf_r+0xd0e>
1001a18c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a18e:	3307      	adds	r3, #7
1001a190:	f023 0307 	bic.w	r3, r3, #7
1001a194:	4619      	mov	r1, r3
1001a196:	685a      	ldr	r2, [r3, #4]
1001a198:	f851 3b08 	ldr.w	r3, [r1], #8
1001a19c:	910d      	str	r1, [sp, #52]	@ 0x34
1001a19e:	2101      	movs	r1, #1
1001a1a0:	e791      	b.n	1001a0c6 <_svfprintf_r+0x59e>
1001a1a2:	7823      	ldrb	r3, [r4, #0]
1001a1a4:	f049 0908 	orr.w	r9, r9, #8
1001a1a8:	e515      	b.n	10019bd6 <_svfprintf_r+0xae>
1001a1aa:	7823      	ldrb	r3, [r4, #0]
1001a1ac:	f049 0901 	orr.w	r9, r9, #1
1001a1b0:	e511      	b.n	10019bd6 <_svfprintf_r+0xae>
1001a1b2:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001a1b6:	7823      	ldrb	r3, [r4, #0]
1001a1b8:	2a00      	cmp	r2, #0
1001a1ba:	f47f ad0c 	bne.w	10019bd6 <_svfprintf_r+0xae>
1001a1be:	2220      	movs	r2, #32
1001a1c0:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001a1c4:	e507      	b.n	10019bd6 <_svfprintf_r+0xae>
1001a1c6:	7823      	ldrb	r3, [r4, #0]
1001a1c8:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
1001a1cc:	e503      	b.n	10019bd6 <_svfprintf_r+0xae>
1001a1ce:	4621      	mov	r1, r4
1001a1d0:	f811 3b01 	ldrb.w	r3, [r1], #1
1001a1d4:	2b2a      	cmp	r3, #42	@ 0x2a
1001a1d6:	f001 822b 	beq.w	1001b630 <_svfprintf_r+0x1b08>
1001a1da:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001a1de:	2a09      	cmp	r2, #9
1001a1e0:	460c      	mov	r4, r1
1001a1e2:	bf98      	it	ls
1001a1e4:	2100      	movls	r1, #0
1001a1e6:	f201 8132 	bhi.w	1001b44e <_svfprintf_r+0x1926>
1001a1ea:	f814 3b01 	ldrb.w	r3, [r4], #1
1001a1ee:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001a1f2:	eb02 0141 	add.w	r1, r2, r1, lsl #1
1001a1f6:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001a1fa:	2a09      	cmp	r2, #9
1001a1fc:	d9f5      	bls.n	1001a1ea <_svfprintf_r+0x6c2>
1001a1fe:	9108      	str	r1, [sp, #32]
1001a200:	e4ea      	b.n	10019bd8 <_svfprintf_r+0xb0>
1001a202:	f049 0910 	orr.w	r9, r9, #16
1001a206:	f019 0f20 	tst.w	r9, #32
1001a20a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a20e:	f47f af13 	bne.w	1001a038 <_svfprintf_r+0x510>
1001a212:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001a214:	f019 0f10 	tst.w	r9, #16
1001a218:	f852 3b04 	ldr.w	r3, [r2], #4
1001a21c:	920d      	str	r2, [sp, #52]	@ 0x34
1001a21e:	f040 8360 	bne.w	1001a8e2 <_svfprintf_r+0xdba>
1001a222:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001a226:	f000 8358 	beq.w	1001a8da <_svfprintf_r+0xdb2>
1001a22a:	f343 32c0 	sbfx	r2, r3, #15, #1
1001a22e:	4611      	mov	r1, r2
1001a230:	b21b      	sxth	r3, r3
1001a232:	e70b      	b.n	1001a04c <_svfprintf_r+0x524>
1001a234:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a236:	2b65      	cmp	r3, #101	@ 0x65
1001a238:	f340 8166 	ble.w	1001a508 <_svfprintf_r+0x9e0>
1001a23c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001a240:	2200      	movs	r2, #0
1001a242:	2300      	movs	r3, #0
1001a244:	f006 fd8c 	bl	10020d60 <__aeabi_dcmpeq>
1001a248:	2800      	cmp	r0, #0
1001a24a:	f000 8211 	beq.w	1001a670 <_svfprintf_r+0xb48>
1001a24e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a250:	4a70      	ldr	r2, [pc, #448]	@ (1001a414 <_svfprintf_r+0x8ec>)
1001a252:	f8c8 2000 	str.w	r2, [r8]
1001a256:	3301      	adds	r3, #1
1001a258:	3401      	adds	r4, #1
1001a25a:	2201      	movs	r2, #1
1001a25c:	2b07      	cmp	r3, #7
1001a25e:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a260:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a262:	f8c8 2004 	str.w	r2, [r8, #4]
1001a266:	f300 856b 	bgt.w	1001ad40 <_svfprintf_r+0x1218>
1001a26a:	f108 0808 	add.w	r8, r8, #8
1001a26e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001a270:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001a272:	4293      	cmp	r3, r2
1001a274:	f280 8326 	bge.w	1001a8c4 <_svfprintf_r+0xd9c>
1001a278:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a27a:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a27c:	441c      	add	r4, r3
1001a27e:	e9c8 2300 	strd	r2, r3, [r8]
1001a282:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a284:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a286:	3301      	adds	r3, #1
1001a288:	2b07      	cmp	r3, #7
1001a28a:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a28c:	f300 83e4 	bgt.w	1001aa58 <_svfprintf_r+0xf30>
1001a290:	f108 0808 	add.w	r8, r8, #8
1001a294:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a296:	1e5d      	subs	r5, r3, #1
1001a298:	2d00      	cmp	r5, #0
1001a29a:	f77f adc2 	ble.w	10019e22 <_svfprintf_r+0x2fa>
1001a29e:	2d10      	cmp	r5, #16
1001a2a0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a2a2:	f340 85ae 	ble.w	1001ae02 <_svfprintf_r+0x12da>
1001a2a6:	4f5c      	ldr	r7, [pc, #368]	@ (1001a418 <_svfprintf_r+0x8f0>)
1001a2a8:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001a2ac:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001a2b0:	9715      	str	r7, [sp, #84]	@ 0x54
1001a2b2:	2610      	movs	r6, #16
1001a2b4:	e005      	b.n	1001a2c2 <_svfprintf_r+0x79a>
1001a2b6:	f108 0808 	add.w	r8, r8, #8
1001a2ba:	3d10      	subs	r5, #16
1001a2bc:	2d10      	cmp	r5, #16
1001a2be:	f340 85a2 	ble.w	1001ae06 <_svfprintf_r+0x12de>
1001a2c2:	3301      	adds	r3, #1
1001a2c4:	3410      	adds	r4, #16
1001a2c6:	2b07      	cmp	r3, #7
1001a2c8:	e9c8 7600 	strd	r7, r6, [r8]
1001a2cc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a2d0:	ddf1      	ble.n	1001a2b6 <_svfprintf_r+0x78e>
1001a2d2:	aa32      	add	r2, sp, #200	@ 0xc8
1001a2d4:	4651      	mov	r1, sl
1001a2d6:	4658      	mov	r0, fp
1001a2d8:	f005 ff48 	bl	1002016c <__ssprint_r>
1001a2dc:	2800      	cmp	r0, #0
1001a2de:	f040 82c0 	bne.w	1001a862 <_svfprintf_r+0xd3a>
1001a2e2:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001a2e6:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a2ea:	e7e6      	b.n	1001a2ba <_svfprintf_r+0x792>
1001a2ec:	464c      	mov	r4, r9
1001a2ee:	2901      	cmp	r1, #1
1001a2f0:	f000 8151 	beq.w	1001a596 <_svfprintf_r+0xa6e>
1001a2f4:	2902      	cmp	r1, #2
1001a2f6:	ad5e      	add	r5, sp, #376	@ 0x178
1001a2f8:	d11e      	bne.n	1001a338 <_svfprintf_r+0x810>
1001a2fa:	9819      	ldr	r0, [sp, #100]	@ 0x64
1001a2fc:	f003 010f 	and.w	r1, r3, #15
1001a300:	091b      	lsrs	r3, r3, #4
1001a302:	5c41      	ldrb	r1, [r0, r1]
1001a304:	f805 1d01 	strb.w	r1, [r5, #-1]!
1001a308:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
1001a30c:	0912      	lsrs	r2, r2, #4
1001a30e:	ea53 0102 	orrs.w	r1, r3, r2
1001a312:	d1f3      	bne.n	1001a2fc <_svfprintf_r+0x7d4>
1001a314:	ab5e      	add	r3, sp, #376	@ 0x178
1001a316:	46a1      	mov	r9, r4
1001a318:	eba3 0b05 	sub.w	fp, r3, r5
1001a31c:	9908      	ldr	r1, [sp, #32]
1001a31e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001a322:	4559      	cmp	r1, fp
1001a324:	f04f 0300 	mov.w	r3, #0
1001a328:	bfb8      	it	lt
1001a32a:	4659      	movlt	r1, fp
1001a32c:	930c      	str	r3, [sp, #48]	@ 0x30
1001a32e:	9106      	str	r1, [sp, #24]
1001a330:	9314      	str	r3, [sp, #80]	@ 0x50
1001a332:	9310      	str	r3, [sp, #64]	@ 0x40
1001a334:	9312      	str	r3, [sp, #72]	@ 0x48
1001a336:	e5d5      	b.n	10019ee4 <_svfprintf_r+0x3bc>
1001a338:	f003 0107 	and.w	r1, r3, #7
1001a33c:	08db      	lsrs	r3, r3, #3
1001a33e:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
1001a342:	08d2      	lsrs	r2, r2, #3
1001a344:	3130      	adds	r1, #48	@ 0x30
1001a346:	ea53 0602 	orrs.w	r6, r3, r2
1001a34a:	4628      	mov	r0, r5
1001a34c:	f805 1d01 	strb.w	r1, [r5, #-1]!
1001a350:	d1f2      	bne.n	1001a338 <_svfprintf_r+0x810>
1001a352:	07e6      	lsls	r6, r4, #31
1001a354:	d5de      	bpl.n	1001a314 <_svfprintf_r+0x7ec>
1001a356:	2930      	cmp	r1, #48	@ 0x30
1001a358:	d0dc      	beq.n	1001a314 <_svfprintf_r+0x7ec>
1001a35a:	2330      	movs	r3, #48	@ 0x30
1001a35c:	3802      	subs	r0, #2
1001a35e:	f805 3c01 	strb.w	r3, [r5, #-1]
1001a362:	ab5e      	add	r3, sp, #376	@ 0x178
1001a364:	46a1      	mov	r9, r4
1001a366:	eba3 0b00 	sub.w	fp, r3, r0
1001a36a:	4605      	mov	r5, r0
1001a36c:	e7d6      	b.n	1001a31c <_svfprintf_r+0x7f4>
1001a36e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001a370:	9a06      	ldr	r2, [sp, #24]
1001a372:	1a9e      	subs	r6, r3, r2
1001a374:	2e00      	cmp	r6, #0
1001a376:	f77f ad3c 	ble.w	10019df2 <_svfprintf_r+0x2ca>
1001a37a:	2e10      	cmp	r6, #16
1001a37c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a37e:	f341 80a1 	ble.w	1001b4c4 <_svfprintf_r+0x199c>
1001a382:	4825      	ldr	r0, [pc, #148]	@ (1001a418 <_svfprintf_r+0x8f0>)
1001a384:	f8dd a01c 	ldr.w	sl, [sp, #28]
1001a388:	9015      	str	r0, [sp, #84]	@ 0x54
1001a38a:	4621      	mov	r1, r4
1001a38c:	2710      	movs	r7, #16
1001a38e:	461a      	mov	r2, r3
1001a390:	4604      	mov	r4, r0
1001a392:	e004      	b.n	1001a39e <_svfprintf_r+0x876>
1001a394:	3e10      	subs	r6, #16
1001a396:	2e10      	cmp	r6, #16
1001a398:	f108 0808 	add.w	r8, r8, #8
1001a39c:	dd16      	ble.n	1001a3cc <_svfprintf_r+0x8a4>
1001a39e:	3201      	adds	r2, #1
1001a3a0:	3110      	adds	r1, #16
1001a3a2:	2a07      	cmp	r2, #7
1001a3a4:	e9c8 4700 	strd	r4, r7, [r8]
1001a3a8:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
1001a3ac:	ddf2      	ble.n	1001a394 <_svfprintf_r+0x86c>
1001a3ae:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a3b0:	aa32      	add	r2, sp, #200	@ 0xc8
1001a3b2:	4650      	mov	r0, sl
1001a3b4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a3b8:	f005 fed8 	bl	1002016c <__ssprint_r>
1001a3bc:	2800      	cmp	r0, #0
1001a3be:	f040 84b2 	bne.w	1001ad26 <_svfprintf_r+0x11fe>
1001a3c2:	3e10      	subs	r6, #16
1001a3c4:	2e10      	cmp	r6, #16
1001a3c6:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
1001a3ca:	dce8      	bgt.n	1001a39e <_svfprintf_r+0x876>
1001a3cc:	460c      	mov	r4, r1
1001a3ce:	4613      	mov	r3, r2
1001a3d0:	3301      	adds	r3, #1
1001a3d2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001a3d4:	f8c8 2000 	str.w	r2, [r8]
1001a3d8:	4434      	add	r4, r6
1001a3da:	2b07      	cmp	r3, #7
1001a3dc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a3e0:	f8c8 6004 	str.w	r6, [r8, #4]
1001a3e4:	f300 851d 	bgt.w	1001ae22 <_svfprintf_r+0x12fa>
1001a3e8:	9b08      	ldr	r3, [sp, #32]
1001a3ea:	eba3 060b 	sub.w	r6, r3, fp
1001a3ee:	2e00      	cmp	r6, #0
1001a3f0:	f108 0808 	add.w	r8, r8, #8
1001a3f4:	f77f ad03 	ble.w	10019dfe <_svfprintf_r+0x2d6>
1001a3f8:	4a07      	ldr	r2, [pc, #28]	@ (1001a418 <_svfprintf_r+0x8f0>)
1001a3fa:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a3fc:	9215      	str	r2, [sp, #84]	@ 0x54
1001a3fe:	2e10      	cmp	r6, #16
1001a400:	dd2a      	ble.n	1001a458 <_svfprintf_r+0x930>
1001a402:	4622      	mov	r2, r4
1001a404:	9f07      	ldr	r7, [sp, #28]
1001a406:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1001a408:	f04f 0a10 	mov.w	sl, #16
1001a40c:	e00b      	b.n	1001a426 <_svfprintf_r+0x8fe>
1001a40e:	bf00      	nop
1001a410:	10023ab4 	.word	0x10023ab4
1001a414:	10023ae4 	.word	0x10023ae4
1001a418:	10023cf8 	.word	0x10023cf8
1001a41c:	3e10      	subs	r6, #16
1001a41e:	2e10      	cmp	r6, #16
1001a420:	f108 0808 	add.w	r8, r8, #8
1001a424:	dd17      	ble.n	1001a456 <_svfprintf_r+0x92e>
1001a426:	3301      	adds	r3, #1
1001a428:	498e      	ldr	r1, [pc, #568]	@ (1001a664 <_svfprintf_r+0xb3c>)
1001a42a:	3210      	adds	r2, #16
1001a42c:	2b07      	cmp	r3, #7
1001a42e:	e9c8 1a00 	strd	r1, sl, [r8]
1001a432:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
1001a436:	ddf1      	ble.n	1001a41c <_svfprintf_r+0x8f4>
1001a438:	aa32      	add	r2, sp, #200	@ 0xc8
1001a43a:	4621      	mov	r1, r4
1001a43c:	4638      	mov	r0, r7
1001a43e:	f005 fe95 	bl	1002016c <__ssprint_r>
1001a442:	2800      	cmp	r0, #0
1001a444:	f040 820c 	bne.w	1001a860 <_svfprintf_r+0xd38>
1001a448:	3e10      	subs	r6, #16
1001a44a:	2e10      	cmp	r6, #16
1001a44c:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
1001a450:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a454:	dce7      	bgt.n	1001a426 <_svfprintf_r+0x8fe>
1001a456:	4614      	mov	r4, r2
1001a458:	3301      	adds	r3, #1
1001a45a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001a45c:	f8c8 2000 	str.w	r2, [r8]
1001a460:	4434      	add	r4, r6
1001a462:	2b07      	cmp	r3, #7
1001a464:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a468:	f8c8 6004 	str.w	r6, [r8, #4]
1001a46c:	f300 81c7 	bgt.w	1001a7fe <_svfprintf_r+0xcd6>
1001a470:	f108 0808 	add.w	r8, r8, #8
1001a474:	e4c3      	b.n	10019dfe <_svfprintf_r+0x2d6>
1001a476:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a478:	9807      	ldr	r0, [sp, #28]
1001a47a:	aa32      	add	r2, sp, #200	@ 0xc8
1001a47c:	f005 fe76 	bl	1002016c <__ssprint_r>
1001a480:	2800      	cmp	r0, #0
1001a482:	f43f ace2 	beq.w	10019e4a <_svfprintf_r+0x322>
1001a486:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001a48a:	e1ea      	b.n	1001a862 <_svfprintf_r+0xd3a>
1001a48c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a48e:	4976      	ldr	r1, [pc, #472]	@ (1001a668 <_svfprintf_r+0xb40>)
1001a490:	f8c8 1000 	str.w	r1, [r8]
1001a494:	3301      	adds	r3, #1
1001a496:	3401      	adds	r4, #1
1001a498:	2101      	movs	r1, #1
1001a49a:	2b07      	cmp	r3, #7
1001a49c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a49e:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a4a0:	f8c8 1004 	str.w	r1, [r8, #4]
1001a4a4:	f300 8574 	bgt.w	1001af90 <_svfprintf_r+0x1468>
1001a4a8:	f108 0808 	add.w	r8, r8, #8
1001a4ac:	2a00      	cmp	r2, #0
1001a4ae:	f040 84e6 	bne.w	1001ae7e <_svfprintf_r+0x1356>
1001a4b2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001a4b4:	f009 0301 	and.w	r3, r9, #1
1001a4b8:	4313      	orrs	r3, r2
1001a4ba:	f43f acb2 	beq.w	10019e22 <_svfprintf_r+0x2fa>
1001a4be:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a4c0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a4c2:	441c      	add	r4, r3
1001a4c4:	e9c8 2300 	strd	r2, r3, [r8]
1001a4c8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a4ca:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a4cc:	3301      	adds	r3, #1
1001a4ce:	2b07      	cmp	r3, #7
1001a4d0:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a4d2:	f300 8645 	bgt.w	1001b160 <_svfprintf_r+0x1638>
1001a4d6:	f108 0808 	add.w	r8, r8, #8
1001a4da:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001a4dc:	f8c8 5000 	str.w	r5, [r8]
1001a4e0:	3301      	adds	r3, #1
1001a4e2:	4414      	add	r4, r2
1001a4e4:	2b07      	cmp	r3, #7
1001a4e6:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a4ea:	f8c8 2004 	str.w	r2, [r8, #4]
1001a4ee:	f77f ac96 	ble.w	10019e1e <_svfprintf_r+0x2f6>
1001a4f2:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a4f4:	9807      	ldr	r0, [sp, #28]
1001a4f6:	aa32      	add	r2, sp, #200	@ 0xc8
1001a4f8:	f005 fe38 	bl	1002016c <__ssprint_r>
1001a4fc:	2800      	cmp	r0, #0
1001a4fe:	d1c2      	bne.n	1001a486 <_svfprintf_r+0x95e>
1001a500:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a502:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a506:	e48c      	b.n	10019e22 <_svfprintf_r+0x2fa>
1001a508:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a50a:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
1001a50c:	2b01      	cmp	r3, #1
1001a50e:	f104 0401 	add.w	r4, r4, #1
1001a512:	f106 0601 	add.w	r6, r6, #1
1001a516:	f108 0708 	add.w	r7, r8, #8
1001a51a:	f340 8129 	ble.w	1001a770 <_svfprintf_r+0xc48>
1001a51e:	2301      	movs	r3, #1
1001a520:	2e07      	cmp	r6, #7
1001a522:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a526:	f8c8 5000 	str.w	r5, [r8]
1001a52a:	f8c8 3004 	str.w	r3, [r8, #4]
1001a52e:	f300 81b1 	bgt.w	1001a894 <_svfprintf_r+0xd6c>
1001a532:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a534:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a536:	3601      	adds	r6, #1
1001a538:	441c      	add	r4, r3
1001a53a:	2e07      	cmp	r6, #7
1001a53c:	e9c7 2300 	strd	r2, r3, [r7]
1001a540:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a544:	f300 81b2 	bgt.w	1001a8ac <_svfprintf_r+0xd84>
1001a548:	3708      	adds	r7, #8
1001a54a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a54c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001a550:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
1001a554:	2200      	movs	r2, #0
1001a556:	2300      	movs	r3, #0
1001a558:	f006 fc02 	bl	10020d60 <__aeabi_dcmpeq>
1001a55c:	2800      	cmp	r0, #0
1001a55e:	f040 8121 	bne.w	1001a7a4 <_svfprintf_r+0xc7c>
1001a562:	3601      	adds	r6, #1
1001a564:	3501      	adds	r5, #1
1001a566:	4444      	add	r4, r8
1001a568:	2e07      	cmp	r6, #7
1001a56a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a56e:	603d      	str	r5, [r7, #0]
1001a570:	f8c7 8004 	str.w	r8, [r7, #4]
1001a574:	f300 810a 	bgt.w	1001a78c <_svfprintf_r+0xc64>
1001a578:	3708      	adds	r7, #8
1001a57a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001a57c:	607b      	str	r3, [r7, #4]
1001a57e:	3601      	adds	r6, #1
1001a580:	441c      	add	r4, r3
1001a582:	2e07      	cmp	r6, #7
1001a584:	ab2c      	add	r3, sp, #176	@ 0xb0
1001a586:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a58a:	603b      	str	r3, [r7, #0]
1001a58c:	dcb1      	bgt.n	1001a4f2 <_svfprintf_r+0x9ca>
1001a58e:	f107 0808 	add.w	r8, r7, #8
1001a592:	e446      	b.n	10019e22 <_svfprintf_r+0x2fa>
1001a594:	464c      	mov	r4, r9
1001a596:	2b0a      	cmp	r3, #10
1001a598:	f172 0100 	sbcs.w	r1, r2, #0
1001a59c:	f080 8353 	bcs.w	1001ac46 <_svfprintf_r+0x111e>
1001a5a0:	3330      	adds	r3, #48	@ 0x30
1001a5a2:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001a5a6:	46a1      	mov	r9, r4
1001a5a8:	f04f 0b01 	mov.w	fp, #1
1001a5ac:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001a5b0:	e6b4      	b.n	1001a31c <_svfprintf_r+0x7f4>
1001a5b2:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a5b4:	9807      	ldr	r0, [sp, #28]
1001a5b6:	aa32      	add	r2, sp, #200	@ 0xc8
1001a5b8:	f005 fdd8 	bl	1002016c <__ssprint_r>
1001a5bc:	2800      	cmp	r0, #0
1001a5be:	f47f af62 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001a5c2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a5c4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a5c8:	e410      	b.n	10019dec <_svfprintf_r+0x2c4>
1001a5ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a5cc:	9807      	ldr	r0, [sp, #28]
1001a5ce:	9315      	str	r3, [sp, #84]	@ 0x54
1001a5d0:	aa32      	add	r2, sp, #200	@ 0xc8
1001a5d2:	f005 fdcb 	bl	1002016c <__ssprint_r>
1001a5d6:	2800      	cmp	r0, #0
1001a5d8:	f47f af55 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001a5dc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a5de:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001a5e0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a5e4:	f7ff bbf0 	b.w	10019dc8 <_svfprintf_r+0x2a0>
1001a5e8:	2d10      	cmp	r5, #16
1001a5ea:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a5ec:	f340 8733 	ble.w	1001b456 <_svfprintf_r+0x192e>
1001a5f0:	4f1e      	ldr	r7, [pc, #120]	@ (1001a66c <_svfprintf_r+0xb44>)
1001a5f2:	f8dd 901c 	ldr.w	r9, [sp, #28]
1001a5f6:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001a5fa:	9715      	str	r7, [sp, #84]	@ 0x54
1001a5fc:	2610      	movs	r6, #16
1001a5fe:	e004      	b.n	1001a60a <_svfprintf_r+0xae2>
1001a600:	3d10      	subs	r5, #16
1001a602:	2d10      	cmp	r5, #16
1001a604:	f108 0808 	add.w	r8, r8, #8
1001a608:	dd16      	ble.n	1001a638 <_svfprintf_r+0xb10>
1001a60a:	3301      	adds	r3, #1
1001a60c:	3410      	adds	r4, #16
1001a60e:	2b07      	cmp	r3, #7
1001a610:	e9c8 7600 	strd	r7, r6, [r8]
1001a614:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a618:	ddf2      	ble.n	1001a600 <_svfprintf_r+0xad8>
1001a61a:	aa32      	add	r2, sp, #200	@ 0xc8
1001a61c:	4651      	mov	r1, sl
1001a61e:	4648      	mov	r0, r9
1001a620:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a624:	f005 fda2 	bl	1002016c <__ssprint_r>
1001a628:	2800      	cmp	r0, #0
1001a62a:	f040 83e8 	bne.w	1001adfe <_svfprintf_r+0x12d6>
1001a62e:	3d10      	subs	r5, #16
1001a630:	2d10      	cmp	r5, #16
1001a632:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001a636:	dce8      	bgt.n	1001a60a <_svfprintf_r+0xae2>
1001a638:	3301      	adds	r3, #1
1001a63a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001a63c:	442c      	add	r4, r5
1001a63e:	2b07      	cmp	r3, #7
1001a640:	e9c8 2500 	strd	r2, r5, [r8]
1001a644:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a648:	f77f abf4 	ble.w	10019e34 <_svfprintf_r+0x30c>
1001a64c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a64e:	9807      	ldr	r0, [sp, #28]
1001a650:	aa32      	add	r2, sp, #200	@ 0xc8
1001a652:	f005 fd8b 	bl	1002016c <__ssprint_r>
1001a656:	2800      	cmp	r0, #0
1001a658:	f47f af15 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001a65c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a65e:	f7ff bbe9 	b.w	10019e34 <_svfprintf_r+0x30c>
1001a662:	bf00      	nop
1001a664:	10023cf8 	.word	0x10023cf8
1001a668:	10023ae4 	.word	0x10023ae4
1001a66c:	10023d08 	.word	0x10023d08
1001a670:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001a672:	2a00      	cmp	r2, #0
1001a674:	f77f af0a 	ble.w	1001a48c <_svfprintf_r+0x964>
1001a678:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
1001a67c:	429f      	cmp	r7, r3
1001a67e:	bfa8      	it	ge
1001a680:	461f      	movge	r7, r3
1001a682:	2f00      	cmp	r7, #0
1001a684:	eb05 0b03 	add.w	fp, r5, r3
1001a688:	dd0b      	ble.n	1001a6a2 <_svfprintf_r+0xb7a>
1001a68a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a68c:	3301      	adds	r3, #1
1001a68e:	443c      	add	r4, r7
1001a690:	2b07      	cmp	r3, #7
1001a692:	e9c8 5700 	strd	r5, r7, [r8]
1001a696:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a698:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a69a:	f300 8642 	bgt.w	1001b322 <_svfprintf_r+0x17fa>
1001a69e:	f108 0808 	add.w	r8, r8, #8
1001a6a2:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001a6a4:	2f00      	cmp	r7, #0
1001a6a6:	bfa8      	it	ge
1001a6a8:	1bf6      	subge	r6, r6, r7
1001a6aa:	2e00      	cmp	r6, #0
1001a6ac:	f300 8200 	bgt.w	1001aab0 <_svfprintf_r+0xf88>
1001a6b0:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
1001a6b4:	f419 6f80 	tst.w	r9, #1024	@ 0x400
1001a6b8:	44aa      	add	sl, r5
1001a6ba:	f040 8221 	bne.w	1001ab00 <_svfprintf_r+0xfd8>
1001a6be:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001a6c0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a6c2:	429d      	cmp	r5, r3
1001a6c4:	db03      	blt.n	1001a6ce <_svfprintf_r+0xba6>
1001a6c6:	f019 0f01 	tst.w	r9, #1
1001a6ca:	f000 846f 	beq.w	1001afac <_svfprintf_r+0x1484>
1001a6ce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a6d0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a6d2:	441c      	add	r4, r3
1001a6d4:	e9c8 2300 	strd	r2, r3, [r8]
1001a6d8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a6da:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a6dc:	3301      	adds	r3, #1
1001a6de:	2b07      	cmp	r3, #7
1001a6e0:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a6e2:	f300 8675 	bgt.w	1001b3d0 <_svfprintf_r+0x18a8>
1001a6e6:	f108 0808 	add.w	r8, r8, #8
1001a6ea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a6ec:	ebab 060a 	sub.w	r6, fp, sl
1001a6f0:	1b5d      	subs	r5, r3, r5
1001a6f2:	42ae      	cmp	r6, r5
1001a6f4:	bfa8      	it	ge
1001a6f6:	462e      	movge	r6, r5
1001a6f8:	2e00      	cmp	r6, #0
1001a6fa:	dd0d      	ble.n	1001a718 <_svfprintf_r+0xbf0>
1001a6fc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a6fe:	f8c8 a000 	str.w	sl, [r8]
1001a702:	3301      	adds	r3, #1
1001a704:	4434      	add	r4, r6
1001a706:	2b07      	cmp	r3, #7
1001a708:	f8c8 6004 	str.w	r6, [r8, #4]
1001a70c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a70e:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a710:	f300 8670 	bgt.w	1001b3f4 <_svfprintf_r+0x18cc>
1001a714:	f108 0808 	add.w	r8, r8, #8
1001a718:	2e00      	cmp	r6, #0
1001a71a:	bfa8      	it	ge
1001a71c:	1bad      	subge	r5, r5, r6
1001a71e:	2d00      	cmp	r5, #0
1001a720:	f77f ab7f 	ble.w	10019e22 <_svfprintf_r+0x2fa>
1001a724:	2d10      	cmp	r5, #16
1001a726:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a728:	f340 836b 	ble.w	1001ae02 <_svfprintf_r+0x12da>
1001a72c:	4fad      	ldr	r7, [pc, #692]	@ (1001a9e4 <_svfprintf_r+0xebc>)
1001a72e:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001a732:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001a736:	9715      	str	r7, [sp, #84]	@ 0x54
1001a738:	2610      	movs	r6, #16
1001a73a:	e005      	b.n	1001a748 <_svfprintf_r+0xc20>
1001a73c:	f108 0808 	add.w	r8, r8, #8
1001a740:	3d10      	subs	r5, #16
1001a742:	2d10      	cmp	r5, #16
1001a744:	f340 835f 	ble.w	1001ae06 <_svfprintf_r+0x12de>
1001a748:	3301      	adds	r3, #1
1001a74a:	3410      	adds	r4, #16
1001a74c:	2b07      	cmp	r3, #7
1001a74e:	e9c8 7600 	strd	r7, r6, [r8]
1001a752:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a756:	ddf1      	ble.n	1001a73c <_svfprintf_r+0xc14>
1001a758:	aa32      	add	r2, sp, #200	@ 0xc8
1001a75a:	4651      	mov	r1, sl
1001a75c:	4658      	mov	r0, fp
1001a75e:	f005 fd05 	bl	1002016c <__ssprint_r>
1001a762:	2800      	cmp	r0, #0
1001a764:	d17d      	bne.n	1001a862 <_svfprintf_r+0xd3a>
1001a766:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001a76a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a76e:	e7e7      	b.n	1001a740 <_svfprintf_r+0xc18>
1001a770:	f019 0f01 	tst.w	r9, #1
1001a774:	f47f aed3 	bne.w	1001a51e <_svfprintf_r+0x9f6>
1001a778:	2301      	movs	r3, #1
1001a77a:	2e07      	cmp	r6, #7
1001a77c:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a780:	f8c8 5000 	str.w	r5, [r8]
1001a784:	f8c8 3004 	str.w	r3, [r8, #4]
1001a788:	f77f aef7 	ble.w	1001a57a <_svfprintf_r+0xa52>
1001a78c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a78e:	9807      	ldr	r0, [sp, #28]
1001a790:	aa32      	add	r2, sp, #200	@ 0xc8
1001a792:	f005 fceb 	bl	1002016c <__ssprint_r>
1001a796:	2800      	cmp	r0, #0
1001a798:	f47f ae75 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001a79c:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a7a0:	af35      	add	r7, sp, #212	@ 0xd4
1001a7a2:	e6ea      	b.n	1001a57a <_svfprintf_r+0xa52>
1001a7a4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a7a6:	2b01      	cmp	r3, #1
1001a7a8:	f77f aee7 	ble.w	1001a57a <_svfprintf_r+0xa52>
1001a7ac:	2b11      	cmp	r3, #17
1001a7ae:	4b8d      	ldr	r3, [pc, #564]	@ (1001a9e4 <_svfprintf_r+0xebc>)
1001a7b0:	9315      	str	r3, [sp, #84]	@ 0x54
1001a7b2:	f340 8358 	ble.w	1001ae66 <_svfprintf_r+0x133e>
1001a7b6:	f8cd 9020 	str.w	r9, [sp, #32]
1001a7ba:	f8dd a01c 	ldr.w	sl, [sp, #28]
1001a7be:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001a7c2:	2510      	movs	r5, #16
1001a7c4:	4699      	mov	r9, r3
1001a7c6:	e006      	b.n	1001a7d6 <_svfprintf_r+0xcae>
1001a7c8:	3708      	adds	r7, #8
1001a7ca:	f1a8 0810 	sub.w	r8, r8, #16
1001a7ce:	f1b8 0f10 	cmp.w	r8, #16
1001a7d2:	f340 8346 	ble.w	1001ae62 <_svfprintf_r+0x133a>
1001a7d6:	3601      	adds	r6, #1
1001a7d8:	3410      	adds	r4, #16
1001a7da:	2e07      	cmp	r6, #7
1001a7dc:	e9c7 9500 	strd	r9, r5, [r7]
1001a7e0:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a7e4:	ddf0      	ble.n	1001a7c8 <_svfprintf_r+0xca0>
1001a7e6:	aa32      	add	r2, sp, #200	@ 0xc8
1001a7e8:	4659      	mov	r1, fp
1001a7ea:	4650      	mov	r0, sl
1001a7ec:	f005 fcbe 	bl	1002016c <__ssprint_r>
1001a7f0:	2800      	cmp	r0, #0
1001a7f2:	f040 8298 	bne.w	1001ad26 <_svfprintf_r+0x11fe>
1001a7f6:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a7fa:	af35      	add	r7, sp, #212	@ 0xd4
1001a7fc:	e7e5      	b.n	1001a7ca <_svfprintf_r+0xca2>
1001a7fe:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a800:	9807      	ldr	r0, [sp, #28]
1001a802:	aa32      	add	r2, sp, #200	@ 0xc8
1001a804:	f005 fcb2 	bl	1002016c <__ssprint_r>
1001a808:	2800      	cmp	r0, #0
1001a80a:	f47f ae3c 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001a80e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a810:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a814:	f7ff baf3 	b.w	10019dfe <_svfprintf_r+0x2d6>
1001a818:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001a81a:	f851 3b04 	ldr.w	r3, [r1], #4
1001a81e:	910d      	str	r1, [sp, #52]	@ 0x34
1001a820:	f019 0110 	ands.w	r1, r9, #16
1001a824:	f47f ac4c 	bne.w	1001a0c0 <_svfprintf_r+0x598>
1001a828:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001a82c:	f000 8363 	beq.w	1001aef6 <_svfprintf_r+0x13ce>
1001a830:	b29b      	uxth	r3, r3
1001a832:	460a      	mov	r2, r1
1001a834:	e444      	b.n	1001a0c0 <_svfprintf_r+0x598>
1001a836:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001a838:	f851 3b04 	ldr.w	r3, [r1], #4
1001a83c:	910d      	str	r1, [sp, #52]	@ 0x34
1001a83e:	f014 0110 	ands.w	r1, r4, #16
1001a842:	d10b      	bne.n	1001a85c <_svfprintf_r+0xd34>
1001a844:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
1001a848:	d003      	beq.n	1001a852 <_svfprintf_r+0xd2a>
1001a84a:	460a      	mov	r2, r1
1001a84c:	b29b      	uxth	r3, r3
1001a84e:	2101      	movs	r1, #1
1001a850:	e439      	b.n	1001a0c6 <_svfprintf_r+0x59e>
1001a852:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
1001a856:	bf1c      	itt	ne
1001a858:	b2db      	uxtbne	r3, r3
1001a85a:	4602      	movne	r2, r0
1001a85c:	2101      	movs	r1, #1
1001a85e:	e432      	b.n	1001a0c6 <_svfprintf_r+0x59e>
1001a860:	46bb      	mov	fp, r7
1001a862:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001a864:	2b00      	cmp	r3, #0
1001a866:	f43f aa64 	beq.w	10019d32 <_svfprintf_r+0x20a>
1001a86a:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001a86c:	4658      	mov	r0, fp
1001a86e:	f7ff f847 	bl	10019900 <_free_r>
1001a872:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001a874:	899b      	ldrh	r3, [r3, #12]
1001a876:	f003 0340 	and.w	r3, r3, #64	@ 0x40
1001a87a:	f7ff ba5e 	b.w	10019d3a <_svfprintf_r+0x212>
1001a87e:	f8dd b020 	ldr.w	fp, [sp, #32]
1001a882:	ad5e      	add	r5, sp, #376	@ 0x178
1001a884:	e54a      	b.n	1001a31c <_svfprintf_r+0x7f4>
1001a886:	425b      	negs	r3, r3
1001a888:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
1001a88c:	464c      	mov	r4, r9
1001a88e:	202d      	movs	r0, #45	@ 0x2d
1001a890:	2101      	movs	r1, #1
1001a892:	e419      	b.n	1001a0c8 <_svfprintf_r+0x5a0>
1001a894:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a896:	9807      	ldr	r0, [sp, #28]
1001a898:	aa32      	add	r2, sp, #200	@ 0xc8
1001a89a:	f005 fc67 	bl	1002016c <__ssprint_r>
1001a89e:	2800      	cmp	r0, #0
1001a8a0:	f47f adf1 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001a8a4:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a8a8:	af35      	add	r7, sp, #212	@ 0xd4
1001a8aa:	e642      	b.n	1001a532 <_svfprintf_r+0xa0a>
1001a8ac:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a8ae:	9807      	ldr	r0, [sp, #28]
1001a8b0:	aa32      	add	r2, sp, #200	@ 0xc8
1001a8b2:	f005 fc5b 	bl	1002016c <__ssprint_r>
1001a8b6:	2800      	cmp	r0, #0
1001a8b8:	f47f ade5 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001a8bc:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a8c0:	af35      	add	r7, sp, #212	@ 0xd4
1001a8c2:	e642      	b.n	1001a54a <_svfprintf_r+0xa22>
1001a8c4:	f019 0f01 	tst.w	r9, #1
1001a8c8:	f43f aaab 	beq.w	10019e22 <_svfprintf_r+0x2fa>
1001a8cc:	e4d4      	b.n	1001a278 <_svfprintf_r+0x750>
1001a8ce:	930d      	str	r3, [sp, #52]	@ 0x34
1001a8d0:	7823      	ldrb	r3, [r4, #0]
1001a8d2:	f7ff b980 	b.w	10019bd6 <_svfprintf_r+0xae>
1001a8d6:	ad5e      	add	r5, sp, #376	@ 0x178
1001a8d8:	e520      	b.n	1001a31c <_svfprintf_r+0x7f4>
1001a8da:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001a8de:	f040 8374 	bne.w	1001afca <_svfprintf_r+0x14a2>
1001a8e2:	17da      	asrs	r2, r3, #31
1001a8e4:	4611      	mov	r1, r2
1001a8e6:	f7ff bbb1 	b.w	1001a04c <_svfprintf_r+0x524>
1001a8ea:	f019 0f10 	tst.w	r9, #16
1001a8ee:	f040 82b2 	bne.w	1001ae56 <_svfprintf_r+0x132e>
1001a8f2:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001a8f6:	f040 8362 	bne.w	1001afbe <_svfprintf_r+0x1496>
1001a8fa:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001a8fe:	f000 82aa 	beq.w	1001ae56 <_svfprintf_r+0x132e>
1001a902:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a904:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001a906:	681b      	ldr	r3, [r3, #0]
1001a908:	701a      	strb	r2, [r3, #0]
1001a90a:	e40e      	b.n	1001a12a <_svfprintf_r+0x602>
1001a90c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
1001a90e:	7823      	ldrb	r3, [r4, #0]
1001a910:	2a00      	cmp	r2, #0
1001a912:	f43f a960 	beq.w	10019bd6 <_svfprintf_r+0xae>
1001a916:	7812      	ldrb	r2, [r2, #0]
1001a918:	2a00      	cmp	r2, #0
1001a91a:	f43f a95c 	beq.w	10019bd6 <_svfprintf_r+0xae>
1001a91e:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
1001a922:	f7ff b958 	b.w	10019bd6 <_svfprintf_r+0xae>
1001a926:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001a92a:	4602      	mov	r2, r0
1001a92c:	460b      	mov	r3, r1
1001a92e:	f006 fa49 	bl	10020dc4 <__aeabi_dcmpun>
1001a932:	2800      	cmp	r0, #0
1001a934:	f040 860f 	bne.w	1001b556 <_svfprintf_r+0x1a2e>
1001a938:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a93a:	2b61      	cmp	r3, #97	@ 0x61
1001a93c:	f000 8506 	beq.w	1001b34c <_svfprintf_r+0x1824>
1001a940:	2b41      	cmp	r3, #65	@ 0x41
1001a942:	f000 8582 	beq.w	1001b44a <_svfprintf_r+0x1922>
1001a946:	9b08      	ldr	r3, [sp, #32]
1001a948:	3301      	adds	r3, #1
1001a94a:	f000 8417 	beq.w	1001b17c <_svfprintf_r+0x1654>
1001a94e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a950:	f023 0320 	bic.w	r3, r3, #32
1001a954:	2b47      	cmp	r3, #71	@ 0x47
1001a956:	d104      	bne.n	1001a962 <_svfprintf_r+0xe3a>
1001a958:	9b08      	ldr	r3, [sp, #32]
1001a95a:	2b00      	cmp	r3, #0
1001a95c:	bf08      	it	eq
1001a95e:	2301      	moveq	r3, #1
1001a960:	9308      	str	r3, [sp, #32]
1001a962:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
1001a966:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
1001a96a:	2a00      	cmp	r2, #0
1001a96c:	9015      	str	r0, [sp, #84]	@ 0x54
1001a96e:	f8cd 9018 	str.w	r9, [sp, #24]
1001a972:	f04f 0300 	mov.w	r3, #0
1001a976:	f2c0 8521 	blt.w	1001b3bc <_svfprintf_r+0x1894>
1001a97a:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
1001a97e:	931f      	str	r3, [sp, #124]	@ 0x7c
1001a980:	930c      	str	r3, [sp, #48]	@ 0x30
1001a982:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a984:	3b41      	subs	r3, #65	@ 0x41
1001a986:	2b25      	cmp	r3, #37	@ 0x25
1001a988:	f200 8328 	bhi.w	1001afdc <_svfprintf_r+0x14b4>
1001a98c:	e8df f013 	tbh	[pc, r3, lsl #1]
1001a990:	03260401 	.word	0x03260401
1001a994:	03260326 	.word	0x03260326
1001a998:	03fe03fa 	.word	0x03fe03fa
1001a99c:	03260326 	.word	0x03260326
1001a9a0:	03260326 	.word	0x03260326
1001a9a4:	03260326 	.word	0x03260326
1001a9a8:	03260326 	.word	0x03260326
1001a9ac:	03260326 	.word	0x03260326
1001a9b0:	03260326 	.word	0x03260326
1001a9b4:	03260326 	.word	0x03260326
1001a9b8:	03260326 	.word	0x03260326
1001a9bc:	03260326 	.word	0x03260326
1001a9c0:	03260326 	.word	0x03260326
1001a9c4:	03260326 	.word	0x03260326
1001a9c8:	03260326 	.word	0x03260326
1001a9cc:	03260326 	.word	0x03260326
1001a9d0:	03260326 	.word	0x03260326
1001a9d4:	03260326 	.word	0x03260326
1001a9d8:	03fe03fa 	.word	0x03fe03fa
1001a9dc:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a9e0:	f7ff bb61 	b.w	1001a0a6 <_svfprintf_r+0x57e>
1001a9e4:	10023cf8 	.word	0x10023cf8
1001a9e8:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a9ec:	464c      	mov	r4, r9
1001a9ee:	f7ff bbc9 	b.w	1001a184 <_svfprintf_r+0x65c>
1001a9f2:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a9f6:	4bbd      	ldr	r3, [pc, #756]	@ (1001acec <_svfprintf_r+0x11c4>)
1001a9f8:	9319      	str	r3, [sp, #100]	@ 0x64
1001a9fa:	f019 0220 	ands.w	r2, r9, #32
1001a9fe:	f000 8108 	beq.w	1001ac12 <_svfprintf_r+0x10ea>
1001aa02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001aa04:	3307      	adds	r3, #7
1001aa06:	f023 0307 	bic.w	r3, r3, #7
1001aa0a:	4619      	mov	r1, r3
1001aa0c:	685a      	ldr	r2, [r3, #4]
1001aa0e:	f851 3b08 	ldr.w	r3, [r1], #8
1001aa12:	910d      	str	r1, [sp, #52]	@ 0x34
1001aa14:	f019 0f01 	tst.w	r9, #1
1001aa18:	d00a      	beq.n	1001aa30 <_svfprintf_r+0xf08>
1001aa1a:	ea53 0102 	orrs.w	r1, r3, r2
1001aa1e:	d007      	beq.n	1001aa30 <_svfprintf_r+0xf08>
1001aa20:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001aa22:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
1001aa26:	2130      	movs	r1, #48	@ 0x30
1001aa28:	f049 0902 	orr.w	r9, r9, #2
1001aa2c:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
1001aa30:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001aa34:	2102      	movs	r1, #2
1001aa36:	f7ff bb46 	b.w	1001a0c6 <_svfprintf_r+0x59e>
1001aa3a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001aa3e:	4bac      	ldr	r3, [pc, #688]	@ (1001acf0 <_svfprintf_r+0x11c8>)
1001aa40:	9319      	str	r3, [sp, #100]	@ 0x64
1001aa42:	e7da      	b.n	1001a9fa <_svfprintf_r+0xed2>
1001aa44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001aa46:	681b      	ldr	r3, [r3, #0]
1001aa48:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001aa4c:	2301      	movs	r3, #1
1001aa4e:	9306      	str	r3, [sp, #24]
1001aa50:	469b      	mov	fp, r3
1001aa52:	ad45      	add	r5, sp, #276	@ 0x114
1001aa54:	f7ff baae 	b.w	10019fb4 <_svfprintf_r+0x48c>
1001aa58:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001aa5a:	9807      	ldr	r0, [sp, #28]
1001aa5c:	aa32      	add	r2, sp, #200	@ 0xc8
1001aa5e:	f005 fb85 	bl	1002016c <__ssprint_r>
1001aa62:	2800      	cmp	r0, #0
1001aa64:	f47f ad0f 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001aa68:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001aa6a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001aa6e:	e411      	b.n	1001a294 <_svfprintf_r+0x76c>
1001aa70:	2140      	movs	r1, #64	@ 0x40
1001aa72:	4658      	mov	r0, fp
1001aa74:	f7f9 f902 	bl	10013c7c <_malloc_r>
1001aa78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001aa7a:	6018      	str	r0, [r3, #0]
1001aa7c:	6118      	str	r0, [r3, #16]
1001aa7e:	2800      	cmp	r0, #0
1001aa80:	f000 8614 	beq.w	1001b6ac <_svfprintf_r+0x1b84>
1001aa84:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001aa86:	2340      	movs	r3, #64	@ 0x40
1001aa88:	6153      	str	r3, [r2, #20]
1001aa8a:	f7ff b869 	b.w	10019b60 <_svfprintf_r+0x38>
1001aa8e:	9b08      	ldr	r3, [sp, #32]
1001aa90:	950c      	str	r5, [sp, #48]	@ 0x30
1001aa92:	2b06      	cmp	r3, #6
1001aa94:	4629      	mov	r1, r5
1001aa96:	bf28      	it	cs
1001aa98:	2306      	movcs	r3, #6
1001aa9a:	9508      	str	r5, [sp, #32]
1001aa9c:	462a      	mov	r2, r5
1001aa9e:	9306      	str	r3, [sp, #24]
1001aaa0:	4d94      	ldr	r5, [pc, #592]	@ (1001acf4 <_svfprintf_r+0x11cc>)
1001aaa2:	960d      	str	r6, [sp, #52]	@ 0x34
1001aaa4:	469b      	mov	fp, r3
1001aaa6:	9114      	str	r1, [sp, #80]	@ 0x50
1001aaa8:	9110      	str	r1, [sp, #64]	@ 0x40
1001aaaa:	9112      	str	r1, [sp, #72]	@ 0x48
1001aaac:	f7ff ba1a 	b.w	10019ee4 <_svfprintf_r+0x3bc>
1001aab0:	2e10      	cmp	r6, #16
1001aab2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001aab4:	f340 85eb 	ble.w	1001b68e <_svfprintf_r+0x1b66>
1001aab8:	488f      	ldr	r0, [pc, #572]	@ (1001acf8 <_svfprintf_r+0x11d0>)
1001aaba:	f8dd a01c 	ldr.w	sl, [sp, #28]
1001aabe:	9015      	str	r0, [sp, #84]	@ 0x54
1001aac0:	4642      	mov	r2, r8
1001aac2:	4621      	mov	r1, r4
1001aac4:	46a8      	mov	r8, r5
1001aac6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1001aac8:	2710      	movs	r7, #16
1001aaca:	4605      	mov	r5, r0
1001aacc:	e004      	b.n	1001aad8 <_svfprintf_r+0xfb0>
1001aace:	3208      	adds	r2, #8
1001aad0:	3e10      	subs	r6, #16
1001aad2:	2e10      	cmp	r6, #16
1001aad4:	f340 8224 	ble.w	1001af20 <_svfprintf_r+0x13f8>
1001aad8:	3301      	adds	r3, #1
1001aada:	3110      	adds	r1, #16
1001aadc:	2b07      	cmp	r3, #7
1001aade:	e9c2 5700 	strd	r5, r7, [r2]
1001aae2:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
1001aae6:	ddf2      	ble.n	1001aace <_svfprintf_r+0xfa6>
1001aae8:	aa32      	add	r2, sp, #200	@ 0xc8
1001aaea:	4621      	mov	r1, r4
1001aaec:	4650      	mov	r0, sl
1001aaee:	f005 fb3d 	bl	1002016c <__ssprint_r>
1001aaf2:	2800      	cmp	r0, #0
1001aaf4:	f040 8117 	bne.w	1001ad26 <_svfprintf_r+0x11fe>
1001aaf8:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
1001aafc:	aa35      	add	r2, sp, #212	@ 0xd4
1001aafe:	e7e7      	b.n	1001aad0 <_svfprintf_r+0xfa8>
1001ab00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001ab02:	f8cd b020 	str.w	fp, [sp, #32]
1001ab06:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
1001ab0a:	4642      	mov	r2, r8
1001ab0c:	4621      	mov	r1, r4
1001ab0e:	4f7a      	ldr	r7, [pc, #488]	@ (1001acf8 <_svfprintf_r+0x11d0>)
1001ab10:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
1001ab14:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
1001ab18:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001ab1c:	4654      	mov	r4, sl
1001ab1e:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
1001ab22:	b383      	cbz	r3, 1001ab86 <_svfprintf_r+0x105e>
1001ab24:	f1b9 0f00 	cmp.w	r9, #0
1001ab28:	f000 80ff 	beq.w	1001ad2a <_svfprintf_r+0x1202>
1001ab2c:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001ab30:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001ab32:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001ab34:	3001      	adds	r0, #1
1001ab36:	4441      	add	r1, r8
1001ab38:	2807      	cmp	r0, #7
1001ab3a:	e9c2 3800 	strd	r3, r8, [r2]
1001ab3e:	9134      	str	r1, [sp, #208]	@ 0xd0
1001ab40:	9033      	str	r0, [sp, #204]	@ 0xcc
1001ab42:	dc75      	bgt.n	1001ac30 <_svfprintf_r+0x1108>
1001ab44:	3208      	adds	r2, #8
1001ab46:	9b08      	ldr	r3, [sp, #32]
1001ab48:	f89a 0000 	ldrb.w	r0, [sl]
1001ab4c:	1b1e      	subs	r6, r3, r4
1001ab4e:	4286      	cmp	r6, r0
1001ab50:	bfa8      	it	ge
1001ab52:	4606      	movge	r6, r0
1001ab54:	2e00      	cmp	r6, #0
1001ab56:	dd0c      	ble.n	1001ab72 <_svfprintf_r+0x104a>
1001ab58:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001ab5a:	3001      	adds	r0, #1
1001ab5c:	4431      	add	r1, r6
1001ab5e:	2807      	cmp	r0, #7
1001ab60:	e9c2 4600 	strd	r4, r6, [r2]
1001ab64:	9134      	str	r1, [sp, #208]	@ 0xd0
1001ab66:	9033      	str	r0, [sp, #204]	@ 0xcc
1001ab68:	f300 8168 	bgt.w	1001ae3c <_svfprintf_r+0x1314>
1001ab6c:	f89a 0000 	ldrb.w	r0, [sl]
1001ab70:	3208      	adds	r2, #8
1001ab72:	2e00      	cmp	r6, #0
1001ab74:	bfac      	ite	ge
1001ab76:	1b85      	subge	r5, r0, r6
1001ab78:	4605      	movlt	r5, r0
1001ab7a:	2d00      	cmp	r5, #0
1001ab7c:	dc13      	bgt.n	1001aba6 <_svfprintf_r+0x107e>
1001ab7e:	4404      	add	r4, r0
1001ab80:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001ab82:	2b00      	cmp	r3, #0
1001ab84:	d1ce      	bne.n	1001ab24 <_svfprintf_r+0xffc>
1001ab86:	f1b9 0f00 	cmp.w	r9, #0
1001ab8a:	d1cf      	bne.n	1001ab2c <_svfprintf_r+0x1004>
1001ab8c:	f8dd b020 	ldr.w	fp, [sp, #32]
1001ab90:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
1001ab94:	46a2      	mov	sl, r4
1001ab96:	45da      	cmp	sl, fp
1001ab98:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
1001ab9c:	4690      	mov	r8, r2
1001ab9e:	460c      	mov	r4, r1
1001aba0:	bf28      	it	cs
1001aba2:	46da      	movcs	sl, fp
1001aba4:	e58b      	b.n	1001a6be <_svfprintf_r+0xb96>
1001aba6:	2d10      	cmp	r5, #16
1001aba8:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001abaa:	f340 853e 	ble.w	1001b62a <_svfprintf_r+0x1b02>
1001abae:	4623      	mov	r3, r4
1001abb0:	463e      	mov	r6, r7
1001abb2:	462c      	mov	r4, r5
1001abb4:	461d      	mov	r5, r3
1001abb6:	e004      	b.n	1001abc2 <_svfprintf_r+0x109a>
1001abb8:	3c10      	subs	r4, #16
1001abba:	2c10      	cmp	r4, #16
1001abbc:	f102 0208 	add.w	r2, r2, #8
1001abc0:	dd16      	ble.n	1001abf0 <_svfprintf_r+0x10c8>
1001abc2:	3001      	adds	r0, #1
1001abc4:	3110      	adds	r1, #16
1001abc6:	2310      	movs	r3, #16
1001abc8:	2807      	cmp	r0, #7
1001abca:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001abce:	6017      	str	r7, [r2, #0]
1001abd0:	6053      	str	r3, [r2, #4]
1001abd2:	ddf1      	ble.n	1001abb8 <_svfprintf_r+0x1090>
1001abd4:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001abd6:	aa32      	add	r2, sp, #200	@ 0xc8
1001abd8:	4658      	mov	r0, fp
1001abda:	f005 fac7 	bl	1002016c <__ssprint_r>
1001abde:	2800      	cmp	r0, #0
1001abe0:	f47f ae3f 	bne.w	1001a862 <_svfprintf_r+0xd3a>
1001abe4:	3c10      	subs	r4, #16
1001abe6:	2c10      	cmp	r4, #16
1001abe8:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
1001abec:	aa35      	add	r2, sp, #212	@ 0xd4
1001abee:	dce8      	bgt.n	1001abc2 <_svfprintf_r+0x109a>
1001abf0:	462b      	mov	r3, r5
1001abf2:	4625      	mov	r5, r4
1001abf4:	461c      	mov	r4, r3
1001abf6:	3001      	adds	r0, #1
1001abf8:	4429      	add	r1, r5
1001abfa:	2807      	cmp	r0, #7
1001abfc:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001ac00:	6016      	str	r6, [r2, #0]
1001ac02:	6055      	str	r5, [r2, #4]
1001ac04:	f300 837f 	bgt.w	1001b306 <_svfprintf_r+0x17de>
1001ac08:	f89a 0000 	ldrb.w	r0, [sl]
1001ac0c:	3208      	adds	r2, #8
1001ac0e:	4404      	add	r4, r0
1001ac10:	e7b6      	b.n	1001ab80 <_svfprintf_r+0x1058>
1001ac12:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001ac14:	f851 3b04 	ldr.w	r3, [r1], #4
1001ac18:	910d      	str	r1, [sp, #52]	@ 0x34
1001ac1a:	f019 0110 	ands.w	r1, r9, #16
1001ac1e:	f47f aef9 	bne.w	1001aa14 <_svfprintf_r+0xeec>
1001ac22:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001ac26:	f000 8160 	beq.w	1001aeea <_svfprintf_r+0x13c2>
1001ac2a:	b29b      	uxth	r3, r3
1001ac2c:	460a      	mov	r2, r1
1001ac2e:	e6f1      	b.n	1001aa14 <_svfprintf_r+0xeec>
1001ac30:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ac32:	aa32      	add	r2, sp, #200	@ 0xc8
1001ac34:	4658      	mov	r0, fp
1001ac36:	f005 fa99 	bl	1002016c <__ssprint_r>
1001ac3a:	2800      	cmp	r0, #0
1001ac3c:	f47f ae11 	bne.w	1001a862 <_svfprintf_r+0xd3a>
1001ac40:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001ac42:	aa35      	add	r2, sp, #212	@ 0xd4
1001ac44:	e77f      	b.n	1001ab46 <_svfprintf_r+0x101e>
1001ac46:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
1001ac4a:	2100      	movs	r1, #0
1001ac4c:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
1001ac50:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 1001acfc <_svfprintf_r+0x11d4>
1001ac54:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
1001ac58:	9406      	str	r4, [sp, #24]
1001ac5a:	ad5e      	add	r5, sp, #376	@ 0x178
1001ac5c:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
1001ac60:	2705      	movs	r7, #5
1001ac62:	468c      	mov	ip, r1
1001ac64:	465e      	mov	r6, fp
1001ac66:	e005      	b.n	1001ac74 <_svfprintf_r+0x114c>
1001ac68:	2b0a      	cmp	r3, #10
1001ac6a:	f172 0200 	sbcs.w	r2, r2, #0
1001ac6e:	d333      	bcc.n	1001acd8 <_svfprintf_r+0x11b0>
1001ac70:	465b      	mov	r3, fp
1001ac72:	4622      	mov	r2, r4
1001ac74:	1899      	adds	r1, r3, r2
1001ac76:	f141 0100 	adc.w	r1, r1, #0
1001ac7a:	fba9 0401 	umull	r0, r4, r9, r1
1001ac7e:	f024 0003 	bic.w	r0, r4, #3
1001ac82:	eb00 0094 	add.w	r0, r0, r4, lsr #2
1001ac86:	1a09      	subs	r1, r1, r0
1001ac88:	1a58      	subs	r0, r3, r1
1001ac8a:	f162 0e00 	sbc.w	lr, r2, #0
1001ac8e:	fb0a f400 	mul.w	r4, sl, r0
1001ac92:	fba0 b009 	umull	fp, r0, r0, r9
1001ac96:	fb09 440e 	mla	r4, r9, lr, r4
1001ac9a:	f00b 0e01 	and.w	lr, fp, #1
1001ac9e:	4404      	add	r4, r0
1001aca0:	fbae 0e07 	umull	r0, lr, lr, r7
1001aca4:	1840      	adds	r0, r0, r1
1001aca6:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
1001acaa:	3030      	adds	r0, #48	@ 0x30
1001acac:	f805 0c01 	strb.w	r0, [r5, #-1]
1001acb0:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
1001acb4:	f10c 0c01 	add.w	ip, ip, #1
1001acb8:	3d01      	subs	r5, #1
1001acba:	0864      	lsrs	r4, r4, #1
1001acbc:	2e00      	cmp	r6, #0
1001acbe:	d0d3      	beq.n	1001ac68 <_svfprintf_r+0x1140>
1001acc0:	f898 1000 	ldrb.w	r1, [r8]
1001acc4:	458c      	cmp	ip, r1
1001acc6:	d1cf      	bne.n	1001ac68 <_svfprintf_r+0x1140>
1001acc8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
1001accc:	d0cc      	beq.n	1001ac68 <_svfprintf_r+0x1140>
1001acce:	2b0a      	cmp	r3, #10
1001acd0:	f172 0200 	sbcs.w	r2, r2, #0
1001acd4:	f080 8137 	bcs.w	1001af46 <_svfprintf_r+0x141e>
1001acd8:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
1001acdc:	9c06      	ldr	r4, [sp, #24]
1001acde:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
1001ace2:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
1001ace6:	f7ff bb15 	b.w	1001a314 <_svfprintf_r+0x7ec>
1001acea:	bf00      	nop
1001acec:	10023ac8 	.word	0x10023ac8
1001acf0:	10023ab4 	.word	0x10023ab4
1001acf4:	10023adc 	.word	0x10023adc
1001acf8:	10023cf8 	.word	0x10023cf8
1001acfc:	cccccccd 	.word	0xcccccccd
1001ad00:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ad02:	9807      	ldr	r0, [sp, #28]
1001ad04:	9315      	str	r3, [sp, #84]	@ 0x54
1001ad06:	aa32      	add	r2, sp, #200	@ 0xc8
1001ad08:	f005 fa30 	bl	1002016c <__ssprint_r>
1001ad0c:	2800      	cmp	r0, #0
1001ad0e:	f47f abba 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001ad12:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001ad16:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001ad18:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001ad1a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ad1e:	f7ff b841 	b.w	10019da4 <_svfprintf_r+0x27c>
1001ad22:	46a3      	mov	fp, r4
1001ad24:	e59d      	b.n	1001a862 <_svfprintf_r+0xd3a>
1001ad26:	46d3      	mov	fp, sl
1001ad28:	e59b      	b.n	1001a862 <_svfprintf_r+0xd3a>
1001ad2a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001ad2c:	3b01      	subs	r3, #1
1001ad2e:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
1001ad32:	9310      	str	r3, [sp, #64]	@ 0x40
1001ad34:	e6fc      	b.n	1001ab30 <_svfprintf_r+0x1008>
1001ad36:	2901      	cmp	r1, #1
1001ad38:	464c      	mov	r4, r9
1001ad3a:	f47f aadb 	bne.w	1001a2f4 <_svfprintf_r+0x7cc>
1001ad3e:	e42f      	b.n	1001a5a0 <_svfprintf_r+0xa78>
1001ad40:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ad42:	9807      	ldr	r0, [sp, #28]
1001ad44:	aa32      	add	r2, sp, #200	@ 0xc8
1001ad46:	f005 fa11 	bl	1002016c <__ssprint_r>
1001ad4a:	2800      	cmp	r0, #0
1001ad4c:	f47f ab9b 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001ad50:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001ad52:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ad56:	f7ff ba8a 	b.w	1001a26e <_svfprintf_r+0x746>
1001ad5a:	af30      	add	r7, sp, #192	@ 0xc0
1001ad5c:	2208      	movs	r2, #8
1001ad5e:	2100      	movs	r1, #0
1001ad60:	4638      	mov	r0, r7
1001ad62:	952b      	str	r5, [sp, #172]	@ 0xac
1001ad64:	f7fd f908 	bl	10017f78 <memset>
1001ad68:	f8dd a020 	ldr.w	sl, [sp, #32]
1001ad6c:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
1001ad70:	f000 80c8 	beq.w	1001af04 <_svfprintf_r+0x13dc>
1001ad74:	2400      	movs	r4, #0
1001ad76:	f8cd 9018 	str.w	r9, [sp, #24]
1001ad7a:	46a3      	mov	fp, r4
1001ad7c:	f8dd 901c 	ldr.w	r9, [sp, #28]
1001ad80:	e00c      	b.n	1001ad9c <_svfprintf_r+0x1274>
1001ad82:	a945      	add	r1, sp, #276	@ 0x114
1001ad84:	4648      	mov	r0, r9
1001ad86:	f7fd fd27 	bl	100187d8 <_wcrtomb_r>
1001ad8a:	1c41      	adds	r1, r0, #1
1001ad8c:	4458      	add	r0, fp
1001ad8e:	f000 838f 	beq.w	1001b4b0 <_svfprintf_r+0x1988>
1001ad92:	4550      	cmp	r0, sl
1001ad94:	dc08      	bgt.n	1001ada8 <_svfprintf_r+0x1280>
1001ad96:	f000 8442 	beq.w	1001b61e <_svfprintf_r+0x1af6>
1001ad9a:	4683      	mov	fp, r0
1001ad9c:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
1001ad9e:	5912      	ldr	r2, [r2, r4]
1001ada0:	463b      	mov	r3, r7
1001ada2:	3404      	adds	r4, #4
1001ada4:	2a00      	cmp	r2, #0
1001ada6:	d1ec      	bne.n	1001ad82 <_svfprintf_r+0x125a>
1001ada8:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001adac:	f1bb 0f00 	cmp.w	fp, #0
1001adb0:	f000 80dd 	beq.w	1001af6e <_svfprintf_r+0x1446>
1001adb4:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
1001adb8:	f300 81ba 	bgt.w	1001b130 <_svfprintf_r+0x1608>
1001adbc:	2300      	movs	r3, #0
1001adbe:	930c      	str	r3, [sp, #48]	@ 0x30
1001adc0:	ad45      	add	r5, sp, #276	@ 0x114
1001adc2:	2208      	movs	r2, #8
1001adc4:	2100      	movs	r1, #0
1001adc6:	4638      	mov	r0, r7
1001adc8:	f7fd f8d6 	bl	10017f78 <memset>
1001adcc:	9807      	ldr	r0, [sp, #28]
1001adce:	9700      	str	r7, [sp, #0]
1001add0:	465b      	mov	r3, fp
1001add2:	aa2b      	add	r2, sp, #172	@ 0xac
1001add4:	4629      	mov	r1, r5
1001add6:	f7fd fd25 	bl	10018824 <_wcsrtombs_r>
1001adda:	4583      	cmp	fp, r0
1001addc:	f040 845d 	bne.w	1001b69a <_svfprintf_r+0x1b72>
1001ade0:	2300      	movs	r3, #0
1001ade2:	f805 300b 	strb.w	r3, [r5, fp]
1001ade6:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
1001adea:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001adee:	960d      	str	r6, [sp, #52]	@ 0x34
1001adf0:	9308      	str	r3, [sp, #32]
1001adf2:	9106      	str	r1, [sp, #24]
1001adf4:	9314      	str	r3, [sp, #80]	@ 0x50
1001adf6:	9310      	str	r3, [sp, #64]	@ 0x40
1001adf8:	9312      	str	r3, [sp, #72]	@ 0x48
1001adfa:	f7ff b873 	b.w	10019ee4 <_svfprintf_r+0x3bc>
1001adfe:	46cb      	mov	fp, r9
1001ae00:	e52f      	b.n	1001a862 <_svfprintf_r+0xd3a>
1001ae02:	4a75      	ldr	r2, [pc, #468]	@ (1001afd8 <_svfprintf_r+0x14b0>)
1001ae04:	9215      	str	r2, [sp, #84]	@ 0x54
1001ae06:	3301      	adds	r3, #1
1001ae08:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001ae0a:	f8c8 2000 	str.w	r2, [r8]
1001ae0e:	442c      	add	r4, r5
1001ae10:	2b07      	cmp	r3, #7
1001ae12:	f8c8 5004 	str.w	r5, [r8, #4]
1001ae16:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001ae1a:	f77f a800 	ble.w	10019e1e <_svfprintf_r+0x2f6>
1001ae1e:	f7ff bb68 	b.w	1001a4f2 <_svfprintf_r+0x9ca>
1001ae22:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ae24:	9807      	ldr	r0, [sp, #28]
1001ae26:	aa32      	add	r2, sp, #200	@ 0xc8
1001ae28:	f005 f9a0 	bl	1002016c <__ssprint_r>
1001ae2c:	2800      	cmp	r0, #0
1001ae2e:	f47f ab2a 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001ae32:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001ae34:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ae38:	f7fe bfdb 	b.w	10019df2 <_svfprintf_r+0x2ca>
1001ae3c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ae3e:	aa32      	add	r2, sp, #200	@ 0xc8
1001ae40:	4658      	mov	r0, fp
1001ae42:	f005 f993 	bl	1002016c <__ssprint_r>
1001ae46:	2800      	cmp	r0, #0
1001ae48:	f47f ad0b 	bne.w	1001a862 <_svfprintf_r+0xd3a>
1001ae4c:	f89a 0000 	ldrb.w	r0, [sl]
1001ae50:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001ae52:	aa35      	add	r2, sp, #212	@ 0xd4
1001ae54:	e68d      	b.n	1001ab72 <_svfprintf_r+0x104a>
1001ae56:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001ae58:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001ae5a:	681b      	ldr	r3, [r3, #0]
1001ae5c:	601a      	str	r2, [r3, #0]
1001ae5e:	f7ff b964 	b.w	1001a12a <_svfprintf_r+0x602>
1001ae62:	f8dd 9020 	ldr.w	r9, [sp, #32]
1001ae66:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001ae68:	603b      	str	r3, [r7, #0]
1001ae6a:	3601      	adds	r6, #1
1001ae6c:	4444      	add	r4, r8
1001ae6e:	2e07      	cmp	r6, #7
1001ae70:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001ae74:	f8c7 8004 	str.w	r8, [r7, #4]
1001ae78:	f77f ab7e 	ble.w	1001a578 <_svfprintf_r+0xa50>
1001ae7c:	e486      	b.n	1001a78c <_svfprintf_r+0xc64>
1001ae7e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001ae80:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001ae82:	441c      	add	r4, r3
1001ae84:	e9c8 1300 	strd	r1, r3, [r8]
1001ae88:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001ae8a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001ae8c:	3301      	adds	r3, #1
1001ae8e:	2b07      	cmp	r3, #7
1001ae90:	9333      	str	r3, [sp, #204]	@ 0xcc
1001ae92:	f300 8165 	bgt.w	1001b160 <_svfprintf_r+0x1638>
1001ae96:	f108 0808 	add.w	r8, r8, #8
1001ae9a:	2a00      	cmp	r2, #0
1001ae9c:	f6bf ab1d 	bge.w	1001a4da <_svfprintf_r+0x9b2>
1001aea0:	4256      	negs	r6, r2
1001aea2:	3210      	adds	r2, #16
1001aea4:	4a4c      	ldr	r2, [pc, #304]	@ (1001afd8 <_svfprintf_r+0x14b0>)
1001aea6:	9215      	str	r2, [sp, #84]	@ 0x54
1001aea8:	f280 82e8 	bge.w	1001b47c <_svfprintf_r+0x1954>
1001aeac:	46aa      	mov	sl, r5
1001aeae:	2710      	movs	r7, #16
1001aeb0:	4615      	mov	r5, r2
1001aeb2:	e005      	b.n	1001aec0 <_svfprintf_r+0x1398>
1001aeb4:	f108 0808 	add.w	r8, r8, #8
1001aeb8:	3e10      	subs	r6, #16
1001aeba:	2e10      	cmp	r6, #16
1001aebc:	f340 82dd 	ble.w	1001b47a <_svfprintf_r+0x1952>
1001aec0:	3301      	adds	r3, #1
1001aec2:	3410      	adds	r4, #16
1001aec4:	2b07      	cmp	r3, #7
1001aec6:	e9c8 5700 	strd	r5, r7, [r8]
1001aeca:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001aece:	ddf1      	ble.n	1001aeb4 <_svfprintf_r+0x138c>
1001aed0:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001aed2:	9807      	ldr	r0, [sp, #28]
1001aed4:	aa32      	add	r2, sp, #200	@ 0xc8
1001aed6:	f005 f949 	bl	1002016c <__ssprint_r>
1001aeda:	2800      	cmp	r0, #0
1001aedc:	f47f aad3 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001aee0:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001aee4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001aee8:	e7e6      	b.n	1001aeb8 <_svfprintf_r+0x1390>
1001aeea:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001aeee:	bf1c      	itt	ne
1001aef0:	b2db      	uxtbne	r3, r3
1001aef2:	4602      	movne	r2, r0
1001aef4:	e58e      	b.n	1001aa14 <_svfprintf_r+0xeec>
1001aef6:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001aefa:	bf1c      	itt	ne
1001aefc:	b2db      	uxtbne	r3, r3
1001aefe:	4602      	movne	r2, r0
1001af00:	f7ff b8de 	b.w	1001a0c0 <_svfprintf_r+0x598>
1001af04:	2300      	movs	r3, #0
1001af06:	9807      	ldr	r0, [sp, #28]
1001af08:	9700      	str	r7, [sp, #0]
1001af0a:	aa2b      	add	r2, sp, #172	@ 0xac
1001af0c:	4619      	mov	r1, r3
1001af0e:	f7fd fc89 	bl	10018824 <_wcsrtombs_r>
1001af12:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001af16:	4683      	mov	fp, r0
1001af18:	f000 82ca 	beq.w	1001b4b0 <_svfprintf_r+0x1988>
1001af1c:	952b      	str	r5, [sp, #172]	@ 0xac
1001af1e:	e745      	b.n	1001adac <_svfprintf_r+0x1284>
1001af20:	4645      	mov	r5, r8
1001af22:	460c      	mov	r4, r1
1001af24:	4690      	mov	r8, r2
1001af26:	3301      	adds	r3, #1
1001af28:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001af2a:	f8c8 2000 	str.w	r2, [r8]
1001af2e:	4434      	add	r4, r6
1001af30:	2b07      	cmp	r3, #7
1001af32:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001af36:	f8c8 6004 	str.w	r6, [r8, #4]
1001af3a:	f300 8104 	bgt.w	1001b146 <_svfprintf_r+0x161e>
1001af3e:	f108 0808 	add.w	r8, r8, #8
1001af42:	f7ff bbb5 	b.w	1001a6b0 <_svfprintf_r+0xb88>
1001af46:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
1001af48:	991d      	ldr	r1, [sp, #116]	@ 0x74
1001af4a:	1aed      	subs	r5, r5, r3
1001af4c:	461a      	mov	r2, r3
1001af4e:	4628      	mov	r0, r5
1001af50:	f7fd f864 	bl	1001801c <strncpy>
1001af54:	f898 3001 	ldrb.w	r3, [r8, #1]
1001af58:	b10b      	cbz	r3, 1001af5e <_svfprintf_r+0x1436>
1001af5a:	f108 0801 	add.w	r8, r8, #1
1001af5e:	f04f 0c00 	mov.w	ip, #0
1001af62:	e685      	b.n	1001ac70 <_svfprintf_r+0x1148>
1001af64:	222d      	movs	r2, #45	@ 0x2d
1001af66:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001af6a:	f7fe bfaa 	b.w	10019ec2 <_svfprintf_r+0x39a>
1001af6e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001af72:	960d      	str	r6, [sp, #52]	@ 0x34
1001af74:	f8cd b018 	str.w	fp, [sp, #24]
1001af78:	f8cd b020 	str.w	fp, [sp, #32]
1001af7c:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
1001af80:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
1001af84:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
1001af88:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
1001af8c:	f7fe bfaa 	b.w	10019ee4 <_svfprintf_r+0x3bc>
1001af90:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001af92:	9807      	ldr	r0, [sp, #28]
1001af94:	aa32      	add	r2, sp, #200	@ 0xc8
1001af96:	f005 f8e9 	bl	1002016c <__ssprint_r>
1001af9a:	2800      	cmp	r0, #0
1001af9c:	f47f aa73 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001afa0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001afa2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001afa4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001afa8:	f7ff ba80 	b.w	1001a4ac <_svfprintf_r+0x984>
1001afac:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001afae:	ebab 060a 	sub.w	r6, fp, sl
1001afb2:	1b5d      	subs	r5, r3, r5
1001afb4:	42ae      	cmp	r6, r5
1001afb6:	bfa8      	it	ge
1001afb8:	462e      	movge	r6, r5
1001afba:	f7ff bbad 	b.w	1001a718 <_svfprintf_r+0xbf0>
1001afbe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001afc0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001afc2:	681b      	ldr	r3, [r3, #0]
1001afc4:	801a      	strh	r2, [r3, #0]
1001afc6:	f7ff b8b0 	b.w	1001a12a <_svfprintf_r+0x602>
1001afca:	f343 12c0 	sbfx	r2, r3, #7, #1
1001afce:	4611      	mov	r1, r2
1001afd0:	b25b      	sxtb	r3, r3
1001afd2:	f7ff b83b 	b.w	1001a04c <_svfprintf_r+0x524>
1001afd6:	bf00      	nop
1001afd8:	10023cf8 	.word	0x10023cf8
1001afdc:	9e08      	ldr	r6, [sp, #32]
1001afde:	2302      	movs	r3, #2
1001afe0:	e9cd 3600 	strd	r3, r6, [sp]
1001afe4:	ab30      	add	r3, sp, #192	@ 0xc0
1001afe6:	9304      	str	r3, [sp, #16]
1001afe8:	ab2b      	add	r3, sp, #172	@ 0xac
1001afea:	9303      	str	r3, [sp, #12]
1001afec:	ab29      	add	r3, sp, #164	@ 0xa4
1001afee:	9302      	str	r3, [sp, #8]
1001aff0:	9807      	ldr	r0, [sp, #28]
1001aff2:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
1001aff6:	f7fd fd03 	bl	10018a00 <_dtoa_r>
1001affa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001affc:	2b67      	cmp	r3, #103	@ 0x67
1001affe:	4605      	mov	r5, r0
1001b000:	f000 813b 	beq.w	1001b27a <_svfprintf_r+0x1752>
1001b004:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b006:	2b47      	cmp	r3, #71	@ 0x47
1001b008:	f000 8137 	beq.w	1001b27a <_svfprintf_r+0x1752>
1001b00c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b00e:	f023 0720 	bic.w	r7, r3, #32
1001b012:	2f46      	cmp	r7, #70	@ 0x46
1001b014:	eb00 0406 	add.w	r4, r0, r6
1001b018:	d105      	bne.n	1001b026 <_svfprintf_r+0x14fe>
1001b01a:	7803      	ldrb	r3, [r0, #0]
1001b01c:	2b30      	cmp	r3, #48	@ 0x30
1001b01e:	f000 82f1 	beq.w	1001b604 <_svfprintf_r+0x1adc>
1001b022:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
1001b024:	4434      	add	r4, r6
1001b026:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001b02a:	2200      	movs	r2, #0
1001b02c:	2300      	movs	r3, #0
1001b02e:	f005 fe97 	bl	10020d60 <__aeabi_dcmpeq>
1001b032:	2800      	cmp	r0, #0
1001b034:	f000 813f 	beq.w	1001b2b6 <_svfprintf_r+0x178e>
1001b038:	4623      	mov	r3, r4
1001b03a:	1b5b      	subs	r3, r3, r5
1001b03c:	9313      	str	r3, [sp, #76]	@ 0x4c
1001b03e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001b040:	9212      	str	r2, [sp, #72]	@ 0x48
1001b042:	2f47      	cmp	r7, #71	@ 0x47
1001b044:	f000 8121 	beq.w	1001b28a <_svfprintf_r+0x1762>
1001b048:	2f46      	cmp	r7, #70	@ 0x46
1001b04a:	f000 81e3 	beq.w	1001b414 <_svfprintf_r+0x18ec>
1001b04e:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001b050:	1e53      	subs	r3, r2, #1
1001b052:	2961      	cmp	r1, #97	@ 0x61
1001b054:	9329      	str	r3, [sp, #164]	@ 0xa4
1001b056:	f000 8318 	beq.w	1001b68a <_svfprintf_r+0x1b62>
1001b05a:	2941      	cmp	r1, #65	@ 0x41
1001b05c:	f040 8120 	bne.w	1001b2a0 <_svfprintf_r+0x1778>
1001b060:	2150      	movs	r1, #80	@ 0x50
1001b062:	2001      	movs	r0, #1
1001b064:	2b00      	cmp	r3, #0
1001b066:	bfb6      	itet	lt
1001b068:	f1c2 0301 	rsblt	r3, r2, #1
1001b06c:	222b      	movge	r2, #43	@ 0x2b
1001b06e:	222d      	movlt	r2, #45	@ 0x2d
1001b070:	2b09      	cmp	r3, #9
1001b072:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
1001b076:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001b07a:	f340 8227 	ble.w	1001b4cc <_svfprintf_r+0x19a4>
1001b07e:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
1001b082:	4eae      	ldr	r6, [pc, #696]	@ (1001b33c <_svfprintf_r+0x1814>)
1001b084:	4622      	mov	r2, r4
1001b086:	4610      	mov	r0, r2
1001b088:	fba6 1203 	umull	r1, r2, r6, r3
1001b08c:	08d2      	lsrs	r2, r2, #3
1001b08e:	eb02 0182 	add.w	r1, r2, r2, lsl #2
1001b092:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
1001b096:	3130      	adds	r1, #48	@ 0x30
1001b098:	f800 1c01 	strb.w	r1, [r0, #-1]
1001b09c:	4619      	mov	r1, r3
1001b09e:	2963      	cmp	r1, #99	@ 0x63
1001b0a0:	4613      	mov	r3, r2
1001b0a2:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
1001b0a6:	dcee      	bgt.n	1001b086 <_svfprintf_r+0x155e>
1001b0a8:	3330      	adds	r3, #48	@ 0x30
1001b0aa:	f802 3c01 	strb.w	r3, [r2, #-1]
1001b0ae:	1e83      	subs	r3, r0, #2
1001b0b0:	42a3      	cmp	r3, r4
1001b0b2:	f080 82ef 	bcs.w	1001b694 <_svfprintf_r+0x1b6c>
1001b0b6:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
1001b0ba:	f813 1b01 	ldrb.w	r1, [r3], #1
1001b0be:	f802 1f01 	strb.w	r1, [r2, #1]!
1001b0c2:	42a3      	cmp	r3, r4
1001b0c4:	d1f9      	bne.n	1001b0ba <_svfprintf_r+0x1592>
1001b0c6:	ab5e      	add	r3, sp, #376	@ 0x178
1001b0c8:	1a18      	subs	r0, r3, r0
1001b0ca:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
1001b0ce:	931c      	str	r3, [sp, #112]	@ 0x70
1001b0d0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b0d2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001b0d4:	2b01      	cmp	r3, #1
1001b0d6:	eb03 0b02 	add.w	fp, r3, r2
1001b0da:	f340 822a 	ble.w	1001b532 <_svfprintf_r+0x1a0a>
1001b0de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b0e0:	449b      	add	fp, r3
1001b0e2:	9b06      	ldr	r3, [sp, #24]
1001b0e4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1001b0e8:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
1001b0ec:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
1001b0f0:	2300      	movs	r3, #0
1001b0f2:	9314      	str	r3, [sp, #80]	@ 0x50
1001b0f4:	9206      	str	r2, [sp, #24]
1001b0f6:	9310      	str	r3, [sp, #64]	@ 0x40
1001b0f8:	9312      	str	r3, [sp, #72]	@ 0x48
1001b0fa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
1001b0fc:	2b00      	cmp	r3, #0
1001b0fe:	f040 80d3 	bne.w	1001b2a8 <_svfprintf_r+0x1780>
1001b102:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b106:	9308      	str	r3, [sp, #32]
1001b108:	f7fe beec 	b.w	10019ee4 <_svfprintf_r+0x3bc>
1001b10c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1001b10e:	aa32      	add	r2, sp, #200	@ 0xc8
1001b110:	4621      	mov	r1, r4
1001b112:	4658      	mov	r0, fp
1001b114:	f005 f82a 	bl	1002016c <__ssprint_r>
1001b118:	89a3      	ldrh	r3, [r4, #12]
1001b11a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
1001b11e:	f7fe be0c 	b.w	10019d3a <_svfprintf_r+0x212>
1001b122:	4628      	mov	r0, r5
1001b124:	960d      	str	r6, [sp, #52]	@ 0x34
1001b126:	f7fd faeb 	bl	10018700 <strlen>
1001b12a:	4683      	mov	fp, r0
1001b12c:	f7fe bf71 	b.w	1001a012 <_svfprintf_r+0x4ea>
1001b130:	9807      	ldr	r0, [sp, #28]
1001b132:	f10b 0101 	add.w	r1, fp, #1
1001b136:	f7f8 fda1 	bl	10013c7c <_malloc_r>
1001b13a:	4605      	mov	r5, r0
1001b13c:	2800      	cmp	r0, #0
1001b13e:	f000 81b7 	beq.w	1001b4b0 <_svfprintf_r+0x1988>
1001b142:	900c      	str	r0, [sp, #48]	@ 0x30
1001b144:	e63d      	b.n	1001adc2 <_svfprintf_r+0x129a>
1001b146:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b148:	9807      	ldr	r0, [sp, #28]
1001b14a:	aa32      	add	r2, sp, #200	@ 0xc8
1001b14c:	f005 f80e 	bl	1002016c <__ssprint_r>
1001b150:	2800      	cmp	r0, #0
1001b152:	f47f a998 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001b156:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b158:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b15c:	f7ff baa8 	b.w	1001a6b0 <_svfprintf_r+0xb88>
1001b160:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b162:	9807      	ldr	r0, [sp, #28]
1001b164:	aa32      	add	r2, sp, #200	@ 0xc8
1001b166:	f005 f801 	bl	1002016c <__ssprint_r>
1001b16a:	2800      	cmp	r0, #0
1001b16c:	f47f a98b 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001b170:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001b174:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001b176:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b17a:	e68e      	b.n	1001ae9a <_svfprintf_r+0x1372>
1001b17c:	2306      	movs	r3, #6
1001b17e:	9308      	str	r3, [sp, #32]
1001b180:	f7ff bbef 	b.w	1001a962 <_svfprintf_r+0xe3a>
1001b184:	9b08      	ldr	r3, [sp, #32]
1001b186:	1c5e      	adds	r6, r3, #1
1001b188:	2302      	movs	r3, #2
1001b18a:	e729      	b.n	1001afe0 <_svfprintf_r+0x14b8>
1001b18c:	9e08      	ldr	r6, [sp, #32]
1001b18e:	2303      	movs	r3, #3
1001b190:	e726      	b.n	1001afe0 <_svfprintf_r+0x14b8>
1001b192:	aa29      	add	r2, sp, #164	@ 0xa4
1001b194:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001b198:	f7fd fb52 	bl	10018840 <frexp>
1001b19c:	2200      	movs	r2, #0
1001b19e:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001b1a2:	f005 fb75 	bl	10020890 <__aeabi_dmul>
1001b1a6:	4602      	mov	r2, r0
1001b1a8:	460b      	mov	r3, r1
1001b1aa:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001b1ae:	2200      	movs	r2, #0
1001b1b0:	2300      	movs	r3, #0
1001b1b2:	f005 fdd5 	bl	10020d60 <__aeabi_dcmpeq>
1001b1b6:	2800      	cmp	r0, #0
1001b1b8:	f040 81c0 	bne.w	1001b53c <_svfprintf_r+0x1a14>
1001b1bc:	4b60      	ldr	r3, [pc, #384]	@ (1001b340 <_svfprintf_r+0x1818>)
1001b1be:	9312      	str	r3, [sp, #72]	@ 0x48
1001b1c0:	9b08      	ldr	r3, [sp, #32]
1001b1c2:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
1001b1c6:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
1001b1ca:	462e      	mov	r6, r5
1001b1cc:	9514      	str	r5, [sp, #80]	@ 0x50
1001b1ce:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001b1d2:	464d      	mov	r5, r9
1001b1d4:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001b1d8:	e005      	b.n	1001b1e6 <_svfprintf_r+0x16be>
1001b1da:	2200      	movs	r2, #0
1001b1dc:	2300      	movs	r3, #0
1001b1de:	f005 fdbf 	bl	10020d60 <__aeabi_dcmpeq>
1001b1e2:	b9f0      	cbnz	r0, 1001b222 <_svfprintf_r+0x16fa>
1001b1e4:	463d      	mov	r5, r7
1001b1e6:	4b57      	ldr	r3, [pc, #348]	@ (1001b344 <_svfprintf_r+0x181c>)
1001b1e8:	2200      	movs	r2, #0
1001b1ea:	4640      	mov	r0, r8
1001b1ec:	4649      	mov	r1, r9
1001b1ee:	f005 fb4f 	bl	10020890 <__aeabi_dmul>
1001b1f2:	4689      	mov	r9, r1
1001b1f4:	4680      	mov	r8, r0
1001b1f6:	f005 fdfb 	bl	10020df0 <__aeabi_d2iz>
1001b1fa:	4604      	mov	r4, r0
1001b1fc:	f005 fade 	bl	100207bc <__aeabi_i2d>
1001b200:	4602      	mov	r2, r0
1001b202:	460b      	mov	r3, r1
1001b204:	4640      	mov	r0, r8
1001b206:	4649      	mov	r1, r9
1001b208:	f005 f98a 	bl	10020520 <__aeabi_dsub>
1001b20c:	f81b 3004 	ldrb.w	r3, [fp, r4]
1001b210:	1c6a      	adds	r2, r5, #1
1001b212:	46b2      	mov	sl, r6
1001b214:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
1001b218:	f806 3b01 	strb.w	r3, [r6], #1
1001b21c:	4680      	mov	r8, r0
1001b21e:	4689      	mov	r9, r1
1001b220:	d1db      	bne.n	1001b1da <_svfprintf_r+0x16b2>
1001b222:	46cb      	mov	fp, r9
1001b224:	4657      	mov	r7, sl
1001b226:	46c2      	mov	sl, r8
1001b228:	4b47      	ldr	r3, [pc, #284]	@ (1001b348 <_svfprintf_r+0x1820>)
1001b22a:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
1001b22e:	2200      	movs	r2, #0
1001b230:	4650      	mov	r0, sl
1001b232:	4659      	mov	r1, fp
1001b234:	46a9      	mov	r9, r5
1001b236:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001b238:	f005 fdba 	bl	10020db0 <__aeabi_dcmpgt>
1001b23c:	2800      	cmp	r0, #0
1001b23e:	f040 8153 	bne.w	1001b4e8 <_svfprintf_r+0x19c0>
1001b242:	4b41      	ldr	r3, [pc, #260]	@ (1001b348 <_svfprintf_r+0x1820>)
1001b244:	4650      	mov	r0, sl
1001b246:	4659      	mov	r1, fp
1001b248:	2200      	movs	r2, #0
1001b24a:	f005 fd89 	bl	10020d60 <__aeabi_dcmpeq>
1001b24e:	b110      	cbz	r0, 1001b256 <_svfprintf_r+0x172e>
1001b250:	07e3      	lsls	r3, r4, #31
1001b252:	f100 8149 	bmi.w	1001b4e8 <_svfprintf_r+0x19c0>
1001b256:	f1b9 0f00 	cmp.w	r9, #0
1001b25a:	f2c0 815f 	blt.w	1001b51c <_svfprintf_r+0x19f4>
1001b25e:	f109 0301 	add.w	r3, r9, #1
1001b262:	4433      	add	r3, r6
1001b264:	2230      	movs	r2, #48	@ 0x30
1001b266:	f806 2b01 	strb.w	r2, [r6], #1
1001b26a:	42b3      	cmp	r3, r6
1001b26c:	d1fb      	bne.n	1001b266 <_svfprintf_r+0x173e>
1001b26e:	1b5b      	subs	r3, r3, r5
1001b270:	9313      	str	r3, [sp, #76]	@ 0x4c
1001b272:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b274:	f023 0720 	bic.w	r7, r3, #32
1001b278:	e6e1      	b.n	1001b03e <_svfprintf_r+0x1516>
1001b27a:	9b06      	ldr	r3, [sp, #24]
1001b27c:	07df      	lsls	r7, r3, #31
1001b27e:	f100 80f9 	bmi.w	1001b474 <_svfprintf_r+0x194c>
1001b282:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001b284:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001b286:	1b5b      	subs	r3, r3, r5
1001b288:	9313      	str	r3, [sp, #76]	@ 0x4c
1001b28a:	1cd3      	adds	r3, r2, #3
1001b28c:	9212      	str	r2, [sp, #72]	@ 0x48
1001b28e:	db02      	blt.n	1001b296 <_svfprintf_r+0x176e>
1001b290:	9b08      	ldr	r3, [sp, #32]
1001b292:	4293      	cmp	r3, r2
1001b294:	da1b      	bge.n	1001b2ce <_svfprintf_r+0x17a6>
1001b296:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b298:	3b02      	subs	r3, #2
1001b29a:	930e      	str	r3, [sp, #56]	@ 0x38
1001b29c:	1e53      	subs	r3, r2, #1
1001b29e:	9329      	str	r3, [sp, #164]	@ 0xa4
1001b2a0:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
1001b2a4:	2000      	movs	r0, #0
1001b2a6:	e6dd      	b.n	1001b064 <_svfprintf_r+0x153c>
1001b2a8:	222d      	movs	r2, #45	@ 0x2d
1001b2aa:	2300      	movs	r3, #0
1001b2ac:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001b2b0:	9308      	str	r3, [sp, #32]
1001b2b2:	f7fe be1a 	b.w	10019eea <_svfprintf_r+0x3c2>
1001b2b6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001b2b8:	42a3      	cmp	r3, r4
1001b2ba:	f4bf aebe 	bcs.w	1001b03a <_svfprintf_r+0x1512>
1001b2be:	2130      	movs	r1, #48	@ 0x30
1001b2c0:	1c5a      	adds	r2, r3, #1
1001b2c2:	9230      	str	r2, [sp, #192]	@ 0xc0
1001b2c4:	7019      	strb	r1, [r3, #0]
1001b2c6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001b2c8:	429c      	cmp	r4, r3
1001b2ca:	d8f9      	bhi.n	1001b2c0 <_svfprintf_r+0x1798>
1001b2cc:	e6b5      	b.n	1001b03a <_svfprintf_r+0x1512>
1001b2ce:	9913      	ldr	r1, [sp, #76]	@ 0x4c
1001b2d0:	428a      	cmp	r2, r1
1001b2d2:	f2c0 80c4 	blt.w	1001b45e <_svfprintf_r+0x1936>
1001b2d6:	9b06      	ldr	r3, [sp, #24]
1001b2d8:	07dc      	lsls	r4, r3, #31
1001b2da:	f140 8184 	bpl.w	1001b5e6 <_svfprintf_r+0x1abe>
1001b2de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b2e0:	eb02 0b03 	add.w	fp, r2, r3
1001b2e4:	9b06      	ldr	r3, [sp, #24]
1001b2e6:	0558      	lsls	r0, r3, #21
1001b2e8:	d502      	bpl.n	1001b2f0 <_svfprintf_r+0x17c8>
1001b2ea:	2a00      	cmp	r2, #0
1001b2ec:	f300 814d 	bgt.w	1001b58a <_svfprintf_r+0x1a62>
1001b2f0:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b2f4:	9306      	str	r3, [sp, #24]
1001b2f6:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b2fa:	2367      	movs	r3, #103	@ 0x67
1001b2fc:	930e      	str	r3, [sp, #56]	@ 0x38
1001b2fe:	2300      	movs	r3, #0
1001b300:	9314      	str	r3, [sp, #80]	@ 0x50
1001b302:	9310      	str	r3, [sp, #64]	@ 0x40
1001b304:	e6f9      	b.n	1001b0fa <_svfprintf_r+0x15d2>
1001b306:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b308:	aa32      	add	r2, sp, #200	@ 0xc8
1001b30a:	4658      	mov	r0, fp
1001b30c:	f004 ff2e 	bl	1002016c <__ssprint_r>
1001b310:	2800      	cmp	r0, #0
1001b312:	f47f aaa6 	bne.w	1001a862 <_svfprintf_r+0xd3a>
1001b316:	f89a 0000 	ldrb.w	r0, [sl]
1001b31a:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001b31c:	aa35      	add	r2, sp, #212	@ 0xd4
1001b31e:	4404      	add	r4, r0
1001b320:	e42e      	b.n	1001ab80 <_svfprintf_r+0x1058>
1001b322:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b324:	9807      	ldr	r0, [sp, #28]
1001b326:	aa32      	add	r2, sp, #200	@ 0xc8
1001b328:	f004 ff20 	bl	1002016c <__ssprint_r>
1001b32c:	2800      	cmp	r0, #0
1001b32e:	f47f a8aa 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001b332:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b334:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b338:	f7ff b9b3 	b.w	1001a6a2 <_svfprintf_r+0xb7a>
1001b33c:	cccccccd 	.word	0xcccccccd
1001b340:	10023ac8 	.word	0x10023ac8
1001b344:	40300000 	.word	0x40300000
1001b348:	3fe00000 	.word	0x3fe00000
1001b34c:	2378      	movs	r3, #120	@ 0x78
1001b34e:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
1001b352:	2330      	movs	r3, #48	@ 0x30
1001b354:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
1001b358:	f049 0302 	orr.w	r3, r9, #2
1001b35c:	9306      	str	r3, [sp, #24]
1001b35e:	9b08      	ldr	r3, [sp, #32]
1001b360:	2b63      	cmp	r3, #99	@ 0x63
1001b362:	f300 80dd 	bgt.w	1001b520 <_svfprintf_r+0x19f8>
1001b366:	2300      	movs	r3, #0
1001b368:	930c      	str	r3, [sp, #48]	@ 0x30
1001b36a:	ad45      	add	r5, sp, #276	@ 0x114
1001b36c:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
1001b370:	9315      	str	r3, [sp, #84]	@ 0x54
1001b372:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001b374:	2b00      	cmp	r3, #0
1001b376:	db22      	blt.n	1001b3be <_svfprintf_r+0x1896>
1001b378:	2300      	movs	r3, #0
1001b37a:	931f      	str	r3, [sp, #124]	@ 0x7c
1001b37c:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001b380:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
1001b384:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b386:	2b61      	cmp	r3, #97	@ 0x61
1001b388:	f47f aafb 	bne.w	1001a982 <_svfprintf_r+0xe5a>
1001b38c:	aa29      	add	r2, sp, #164	@ 0xa4
1001b38e:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001b392:	f7fd fa55 	bl	10018840 <frexp>
1001b396:	2200      	movs	r2, #0
1001b398:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001b39c:	f005 fa78 	bl	10020890 <__aeabi_dmul>
1001b3a0:	4602      	mov	r2, r0
1001b3a2:	460b      	mov	r3, r1
1001b3a4:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001b3a8:	2200      	movs	r2, #0
1001b3aa:	2300      	movs	r3, #0
1001b3ac:	f005 fcd8 	bl	10020d60 <__aeabi_dcmpeq>
1001b3b0:	2800      	cmp	r0, #0
1001b3b2:	f040 80c3 	bne.w	1001b53c <_svfprintf_r+0x1a14>
1001b3b6:	4ba9      	ldr	r3, [pc, #676]	@ (1001b65c <_svfprintf_r+0x1b34>)
1001b3b8:	9312      	str	r3, [sp, #72]	@ 0x48
1001b3ba:	e701      	b.n	1001b1c0 <_svfprintf_r+0x1698>
1001b3bc:	930c      	str	r3, [sp, #48]	@ 0x30
1001b3be:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001b3c2:	9324      	str	r3, [sp, #144]	@ 0x90
1001b3c4:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
1001b3c8:	9325      	str	r3, [sp, #148]	@ 0x94
1001b3ca:	232d      	movs	r3, #45	@ 0x2d
1001b3cc:	931f      	str	r3, [sp, #124]	@ 0x7c
1001b3ce:	e7d9      	b.n	1001b384 <_svfprintf_r+0x185c>
1001b3d0:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b3d2:	9807      	ldr	r0, [sp, #28]
1001b3d4:	aa32      	add	r2, sp, #200	@ 0xc8
1001b3d6:	f004 fec9 	bl	1002016c <__ssprint_r>
1001b3da:	2800      	cmp	r0, #0
1001b3dc:	f47f a853 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001b3e0:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001b3e2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b3e4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b3e8:	f7ff b97f 	b.w	1001a6ea <_svfprintf_r+0xbc2>
1001b3ec:	499c      	ldr	r1, [pc, #624]	@ (1001b660 <_svfprintf_r+0x1b38>)
1001b3ee:	9115      	str	r1, [sp, #84]	@ 0x54
1001b3f0:	f7fe bdaf 	b.w	10019f52 <_svfprintf_r+0x42a>
1001b3f4:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b3f6:	9807      	ldr	r0, [sp, #28]
1001b3f8:	aa32      	add	r2, sp, #200	@ 0xc8
1001b3fa:	f004 feb7 	bl	1002016c <__ssprint_r>
1001b3fe:	2800      	cmp	r0, #0
1001b400:	f47f a841 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001b404:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001b406:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b408:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b40a:	1b5d      	subs	r5, r3, r5
1001b40c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b410:	f7ff b982 	b.w	1001a718 <_svfprintf_r+0xbf0>
1001b414:	9b06      	ldr	r3, [sp, #24]
1001b416:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001b418:	9a08      	ldr	r2, [sp, #32]
1001b41a:	f003 0301 	and.w	r3, r3, #1
1001b41e:	2900      	cmp	r1, #0
1001b420:	ea43 0302 	orr.w	r3, r3, r2
1001b424:	f340 810f 	ble.w	1001b646 <_svfprintf_r+0x1b1e>
1001b428:	2b00      	cmp	r3, #0
1001b42a:	f040 80d5 	bne.w	1001b5d8 <_svfprintf_r+0x1ab0>
1001b42e:	2366      	movs	r3, #102	@ 0x66
1001b430:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001b434:	930e      	str	r3, [sp, #56]	@ 0x38
1001b436:	9b06      	ldr	r3, [sp, #24]
1001b438:	055a      	lsls	r2, r3, #21
1001b43a:	f100 80a8 	bmi.w	1001b58e <_svfprintf_r+0x1a66>
1001b43e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b442:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b446:	9306      	str	r3, [sp, #24]
1001b448:	e759      	b.n	1001b2fe <_svfprintf_r+0x17d6>
1001b44a:	2358      	movs	r3, #88	@ 0x58
1001b44c:	e77f      	b.n	1001b34e <_svfprintf_r+0x1826>
1001b44e:	2200      	movs	r2, #0
1001b450:	9208      	str	r2, [sp, #32]
1001b452:	f7fe bbc1 	b.w	10019bd8 <_svfprintf_r+0xb0>
1001b456:	4a82      	ldr	r2, [pc, #520]	@ (1001b660 <_svfprintf_r+0x1b38>)
1001b458:	9215      	str	r2, [sp, #84]	@ 0x54
1001b45a:	f7ff b8ed 	b.w	1001a638 <_svfprintf_r+0xb10>
1001b45e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b460:	9a18      	ldr	r2, [sp, #96]	@ 0x60
1001b462:	eb03 0b02 	add.w	fp, r3, r2
1001b466:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001b468:	2b00      	cmp	r3, #0
1001b46a:	f340 8083 	ble.w	1001b574 <_svfprintf_r+0x1a4c>
1001b46e:	2367      	movs	r3, #103	@ 0x67
1001b470:	930e      	str	r3, [sp, #56]	@ 0x38
1001b472:	e7e0      	b.n	1001b436 <_svfprintf_r+0x190e>
1001b474:	19ac      	adds	r4, r5, r6
1001b476:	2747      	movs	r7, #71	@ 0x47
1001b478:	e5d5      	b.n	1001b026 <_svfprintf_r+0x14fe>
1001b47a:	4655      	mov	r5, sl
1001b47c:	3301      	adds	r3, #1
1001b47e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001b480:	f8c8 2000 	str.w	r2, [r8]
1001b484:	4434      	add	r4, r6
1001b486:	2b07      	cmp	r3, #7
1001b488:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001b48c:	f8c8 6004 	str.w	r6, [r8, #4]
1001b490:	f77f a821 	ble.w	1001a4d6 <_svfprintf_r+0x9ae>
1001b494:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b496:	9807      	ldr	r0, [sp, #28]
1001b498:	aa32      	add	r2, sp, #200	@ 0xc8
1001b49a:	f004 fe67 	bl	1002016c <__ssprint_r>
1001b49e:	2800      	cmp	r0, #0
1001b4a0:	f47e aff1 	bne.w	1001a486 <_svfprintf_r+0x95e>
1001b4a4:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001b4a8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b4ac:	f7ff b815 	b.w	1001a4da <_svfprintf_r+0x9b2>
1001b4b0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001b4b2:	8993      	ldrh	r3, [r2, #12]
1001b4b4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001b4b8:	8193      	strh	r3, [r2, #12]
1001b4ba:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001b4be:	930a      	str	r3, [sp, #40]	@ 0x28
1001b4c0:	f7fe bc3e 	b.w	10019d40 <_svfprintf_r+0x218>
1001b4c4:	4a67      	ldr	r2, [pc, #412]	@ (1001b664 <_svfprintf_r+0x1b3c>)
1001b4c6:	9215      	str	r2, [sp, #84]	@ 0x54
1001b4c8:	f7fe bf82 	b.w	1001a3d0 <_svfprintf_r+0x8a8>
1001b4cc:	2800      	cmp	r0, #0
1001b4ce:	d13f      	bne.n	1001b550 <_svfprintf_r+0x1a28>
1001b4d0:	2230      	movs	r2, #48	@ 0x30
1001b4d2:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
1001b4d6:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
1001b4da:	3330      	adds	r3, #48	@ 0x30
1001b4dc:	f802 3b01 	strb.w	r3, [r2], #1
1001b4e0:	ab2c      	add	r3, sp, #176	@ 0xb0
1001b4e2:	1ad3      	subs	r3, r2, r3
1001b4e4:	931c      	str	r3, [sp, #112]	@ 0x70
1001b4e6:	e5f3      	b.n	1001b0d0 <_svfprintf_r+0x15a8>
1001b4e8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001b4ea:	9730      	str	r7, [sp, #192]	@ 0xc0
1001b4ec:	7bd9      	ldrb	r1, [r3, #15]
1001b4ee:	f816 2c01 	ldrb.w	r2, [r6, #-1]
1001b4f2:	428a      	cmp	r2, r1
1001b4f4:	4633      	mov	r3, r6
1001b4f6:	d109      	bne.n	1001b50c <_svfprintf_r+0x19e4>
1001b4f8:	2030      	movs	r0, #48	@ 0x30
1001b4fa:	f803 0c01 	strb.w	r0, [r3, #-1]
1001b4fe:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001b500:	1e5a      	subs	r2, r3, #1
1001b502:	9230      	str	r2, [sp, #192]	@ 0xc0
1001b504:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1001b508:	4291      	cmp	r1, r2
1001b50a:	d0f6      	beq.n	1001b4fa <_svfprintf_r+0x19d2>
1001b50c:	2a39      	cmp	r2, #57	@ 0x39
1001b50e:	bf0b      	itete	eq
1001b510:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
1001b512:	3201      	addne	r2, #1
1001b514:	7a92      	ldrbeq	r2, [r2, #10]
1001b516:	b2d2      	uxtbne	r2, r2
1001b518:	f803 2c01 	strb.w	r2, [r3, #-1]
1001b51c:	4633      	mov	r3, r6
1001b51e:	e6a6      	b.n	1001b26e <_svfprintf_r+0x1746>
1001b520:	9807      	ldr	r0, [sp, #28]
1001b522:	1c59      	adds	r1, r3, #1
1001b524:	f7f8 fbaa 	bl	10013c7c <_malloc_r>
1001b528:	4605      	mov	r5, r0
1001b52a:	2800      	cmp	r0, #0
1001b52c:	d0c0      	beq.n	1001b4b0 <_svfprintf_r+0x1988>
1001b52e:	900c      	str	r0, [sp, #48]	@ 0x30
1001b530:	e71c      	b.n	1001b36c <_svfprintf_r+0x1844>
1001b532:	9b06      	ldr	r3, [sp, #24]
1001b534:	07de      	lsls	r6, r3, #31
1001b536:	f57f add4 	bpl.w	1001b0e2 <_svfprintf_r+0x15ba>
1001b53a:	e5d0      	b.n	1001b0de <_svfprintf_r+0x15b6>
1001b53c:	4b4a      	ldr	r3, [pc, #296]	@ (1001b668 <_svfprintf_r+0x1b40>)
1001b53e:	4a47      	ldr	r2, [pc, #284]	@ (1001b65c <_svfprintf_r+0x1b34>)
1001b540:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001b542:	2961      	cmp	r1, #97	@ 0x61
1001b544:	bf18      	it	ne
1001b546:	461a      	movne	r2, r3
1001b548:	2301      	movs	r3, #1
1001b54a:	9212      	str	r2, [sp, #72]	@ 0x48
1001b54c:	9329      	str	r3, [sp, #164]	@ 0xa4
1001b54e:	e637      	b.n	1001b1c0 <_svfprintf_r+0x1698>
1001b550:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
1001b554:	e7c1      	b.n	1001b4da <_svfprintf_r+0x19b2>
1001b556:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001b558:	4d44      	ldr	r5, [pc, #272]	@ (1001b66c <_svfprintf_r+0x1b44>)
1001b55a:	2b00      	cmp	r3, #0
1001b55c:	bfb4      	ite	lt
1001b55e:	222d      	movlt	r2, #45	@ 0x2d
1001b560:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
1001b564:	4b42      	ldr	r3, [pc, #264]	@ (1001b670 <_svfprintf_r+0x1b48>)
1001b566:	bfb8      	it	lt
1001b568:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
1001b56c:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
1001b570:	f7fe bcab 	b.w	10019eca <_svfprintf_r+0x3a2>
1001b574:	f1c3 0301 	rsb	r3, r3, #1
1001b578:	449b      	add	fp, r3
1001b57a:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b57e:	9306      	str	r3, [sp, #24]
1001b580:	2367      	movs	r3, #103	@ 0x67
1001b582:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b586:	930e      	str	r3, [sp, #56]	@ 0x38
1001b588:	e6b9      	b.n	1001b2fe <_svfprintf_r+0x17d6>
1001b58a:	2367      	movs	r3, #103	@ 0x67
1001b58c:	930e      	str	r3, [sp, #56]	@ 0x38
1001b58e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
1001b590:	780b      	ldrb	r3, [r1, #0]
1001b592:	2bff      	cmp	r3, #255	@ 0xff
1001b594:	f000 808e 	beq.w	1001b6b4 <_svfprintf_r+0x1b8c>
1001b598:	2400      	movs	r4, #0
1001b59a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1001b59c:	4620      	mov	r0, r4
1001b59e:	e003      	b.n	1001b5a8 <_svfprintf_r+0x1a80>
1001b5a0:	3001      	adds	r0, #1
1001b5a2:	3101      	adds	r1, #1
1001b5a4:	2bff      	cmp	r3, #255	@ 0xff
1001b5a6:	d008      	beq.n	1001b5ba <_svfprintf_r+0x1a92>
1001b5a8:	4293      	cmp	r3, r2
1001b5aa:	da06      	bge.n	1001b5ba <_svfprintf_r+0x1a92>
1001b5ac:	1ad2      	subs	r2, r2, r3
1001b5ae:	784b      	ldrb	r3, [r1, #1]
1001b5b0:	2b00      	cmp	r3, #0
1001b5b2:	d1f5      	bne.n	1001b5a0 <_svfprintf_r+0x1a78>
1001b5b4:	780b      	ldrb	r3, [r1, #0]
1001b5b6:	3401      	adds	r4, #1
1001b5b8:	e7f4      	b.n	1001b5a4 <_svfprintf_r+0x1a7c>
1001b5ba:	911b      	str	r1, [sp, #108]	@ 0x6c
1001b5bc:	9010      	str	r0, [sp, #64]	@ 0x40
1001b5be:	9414      	str	r4, [sp, #80]	@ 0x50
1001b5c0:	9212      	str	r2, [sp, #72]	@ 0x48
1001b5c2:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
1001b5c6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1001b5c8:	4413      	add	r3, r2
1001b5ca:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
1001b5cc:	fb02 bb03 	mla	fp, r2, r3, fp
1001b5d0:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b5d4:	9306      	str	r3, [sp, #24]
1001b5d6:	e590      	b.n	1001b0fa <_svfprintf_r+0x15d2>
1001b5d8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b5da:	18cf      	adds	r7, r1, r3
1001b5dc:	443a      	add	r2, r7
1001b5de:	2366      	movs	r3, #102	@ 0x66
1001b5e0:	4693      	mov	fp, r2
1001b5e2:	930e      	str	r3, [sp, #56]	@ 0x38
1001b5e4:	e727      	b.n	1001b436 <_svfprintf_r+0x190e>
1001b5e6:	4693      	mov	fp, r2
1001b5e8:	e67c      	b.n	1001b2e4 <_svfprintf_r+0x17bc>
1001b5ea:	9b08      	ldr	r3, [sp, #32]
1001b5ec:	9306      	str	r3, [sp, #24]
1001b5ee:	469b      	mov	fp, r3
1001b5f0:	2373      	movs	r3, #115	@ 0x73
1001b5f2:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b5f6:	960d      	str	r6, [sp, #52]	@ 0x34
1001b5f8:	9008      	str	r0, [sp, #32]
1001b5fa:	9014      	str	r0, [sp, #80]	@ 0x50
1001b5fc:	9010      	str	r0, [sp, #64]	@ 0x40
1001b5fe:	930e      	str	r3, [sp, #56]	@ 0x38
1001b600:	f7fe bc70 	b.w	10019ee4 <_svfprintf_r+0x3bc>
1001b604:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001b608:	2200      	movs	r2, #0
1001b60a:	2300      	movs	r3, #0
1001b60c:	f005 fba8 	bl	10020d60 <__aeabi_dcmpeq>
1001b610:	2800      	cmp	r0, #0
1001b612:	f47f ad06 	bne.w	1001b022 <_svfprintf_r+0x14fa>
1001b616:	f1c6 0601 	rsb	r6, r6, #1
1001b61a:	9629      	str	r6, [sp, #164]	@ 0xa4
1001b61c:	e502      	b.n	1001b024 <_svfprintf_r+0x14fc>
1001b61e:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001b622:	f8dd b020 	ldr.w	fp, [sp, #32]
1001b626:	f7ff bbc1 	b.w	1001adac <_svfprintf_r+0x1284>
1001b62a:	4e0e      	ldr	r6, [pc, #56]	@ (1001b664 <_svfprintf_r+0x1b3c>)
1001b62c:	f7ff bae3 	b.w	1001abf6 <_svfprintf_r+0x10ce>
1001b630:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001b632:	7863      	ldrb	r3, [r4, #1]
1001b634:	460c      	mov	r4, r1
1001b636:	f852 1b04 	ldr.w	r1, [r2], #4
1001b63a:	920d      	str	r2, [sp, #52]	@ 0x34
1001b63c:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
1001b640:	9108      	str	r1, [sp, #32]
1001b642:	f7fe bac8 	b.w	10019bd6 <_svfprintf_r+0xae>
1001b646:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b64a:	b99b      	cbnz	r3, 1001b674 <_svfprintf_r+0x1b4c>
1001b64c:	f04f 0b01 	mov.w	fp, #1
1001b650:	2366      	movs	r3, #102	@ 0x66
1001b652:	f8cd b018 	str.w	fp, [sp, #24]
1001b656:	930e      	str	r3, [sp, #56]	@ 0x38
1001b658:	e651      	b.n	1001b2fe <_svfprintf_r+0x17d6>
1001b65a:	bf00      	nop
1001b65c:	10023ab4 	.word	0x10023ab4
1001b660:	10023d08 	.word	0x10023d08
1001b664:	10023cf8 	.word	0x10023cf8
1001b668:	10023ac8 	.word	0x10023ac8
1001b66c:	10023aac 	.word	0x10023aac
1001b670:	10023ab0 	.word	0x10023ab0
1001b674:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b676:	f8dd b020 	ldr.w	fp, [sp, #32]
1001b67a:	1c5f      	adds	r7, r3, #1
1001b67c:	44bb      	add	fp, r7
1001b67e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b682:	9306      	str	r3, [sp, #24]
1001b684:	2366      	movs	r3, #102	@ 0x66
1001b686:	930e      	str	r3, [sp, #56]	@ 0x38
1001b688:	e639      	b.n	1001b2fe <_svfprintf_r+0x17d6>
1001b68a:	2170      	movs	r1, #112	@ 0x70
1001b68c:	e4e9      	b.n	1001b062 <_svfprintf_r+0x153a>
1001b68e:	4a0b      	ldr	r2, [pc, #44]	@ (1001b6bc <_svfprintf_r+0x1b94>)
1001b690:	9215      	str	r2, [sp, #84]	@ 0x54
1001b692:	e448      	b.n	1001af26 <_svfprintf_r+0x13fe>
1001b694:	2302      	movs	r3, #2
1001b696:	931c      	str	r3, [sp, #112]	@ 0x70
1001b698:	e51a      	b.n	1001b0d0 <_svfprintf_r+0x15a8>
1001b69a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001b69c:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001b6a0:	8993      	ldrh	r3, [r2, #12]
1001b6a2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001b6a6:	8193      	strh	r3, [r2, #12]
1001b6a8:	f7ff b8db 	b.w	1001a862 <_svfprintf_r+0xd3a>
1001b6ac:	230c      	movs	r3, #12
1001b6ae:	f8cb 3000 	str.w	r3, [fp]
1001b6b2:	e702      	b.n	1001b4ba <_svfprintf_r+0x1992>
1001b6b4:	2300      	movs	r3, #0
1001b6b6:	9314      	str	r3, [sp, #80]	@ 0x50
1001b6b8:	9310      	str	r3, [sp, #64]	@ 0x40
1001b6ba:	e782      	b.n	1001b5c2 <_svfprintf_r+0x1a9a>
1001b6bc:	10023cf8 	.word	0x10023cf8

1001b6c0 <__smakebuf_r>:
1001b6c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001b6c4:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
1001b6c8:	460c      	mov	r4, r1
1001b6ca:	0799      	lsls	r1, r3, #30
1001b6cc:	b096      	sub	sp, #88	@ 0x58
1001b6ce:	d508      	bpl.n	1001b6e2 <__smakebuf_r+0x22>
1001b6d0:	f104 0343 	add.w	r3, r4, #67	@ 0x43
1001b6d4:	2201      	movs	r2, #1
1001b6d6:	e9c4 3204 	strd	r3, r2, [r4, #16]
1001b6da:	6023      	str	r3, [r4, #0]
1001b6dc:	b016      	add	sp, #88	@ 0x58
1001b6de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001b6e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1001b6e6:	2900      	cmp	r1, #0
1001b6e8:	4606      	mov	r6, r0
1001b6ea:	db26      	blt.n	1001b73a <__smakebuf_r+0x7a>
1001b6ec:	466a      	mov	r2, sp
1001b6ee:	f7fc fce5 	bl	100180bc <_fstat_r>
1001b6f2:	2800      	cmp	r0, #0
1001b6f4:	db1f      	blt.n	1001b736 <__smakebuf_r+0x76>
1001b6f6:	9d01      	ldr	r5, [sp, #4]
1001b6f8:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
1001b6fc:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
1001b700:	fab5 f585 	clz	r5, r5
1001b704:	f44f 6880 	mov.w	r8, #1024	@ 0x400
1001b708:	096d      	lsrs	r5, r5, #5
1001b70a:	f44f 6700 	mov.w	r7, #2048	@ 0x800
1001b70e:	4641      	mov	r1, r8
1001b710:	4630      	mov	r0, r6
1001b712:	f7f8 fab3 	bl	10013c7c <_malloc_r>
1001b716:	b1e8      	cbz	r0, 1001b754 <__smakebuf_r+0x94>
1001b718:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001b71c:	f8c4 8014 	str.w	r8, [r4, #20]
1001b720:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1001b724:	6020      	str	r0, [r4, #0]
1001b726:	6120      	str	r0, [r4, #16]
1001b728:	81a3      	strh	r3, [r4, #12]
1001b72a:	bb3d      	cbnz	r5, 1001b77c <__smakebuf_r+0xbc>
1001b72c:	433b      	orrs	r3, r7
1001b72e:	81a3      	strh	r3, [r4, #12]
1001b730:	b016      	add	sp, #88	@ 0x58
1001b732:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001b736:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001b73a:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
1001b73e:	d019      	beq.n	1001b774 <__smakebuf_r+0xb4>
1001b740:	f04f 0840 	mov.w	r8, #64	@ 0x40
1001b744:	2500      	movs	r5, #0
1001b746:	4641      	mov	r1, r8
1001b748:	4630      	mov	r0, r6
1001b74a:	462f      	mov	r7, r5
1001b74c:	f7f8 fa96 	bl	10013c7c <_malloc_r>
1001b750:	2800      	cmp	r0, #0
1001b752:	d1e1      	bne.n	1001b718 <__smakebuf_r+0x58>
1001b754:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001b758:	059a      	lsls	r2, r3, #22
1001b75a:	d4bf      	bmi.n	1001b6dc <__smakebuf_r+0x1c>
1001b75c:	f023 0303 	bic.w	r3, r3, #3
1001b760:	f104 0243 	add.w	r2, r4, #67	@ 0x43
1001b764:	f043 0302 	orr.w	r3, r3, #2
1001b768:	2101      	movs	r1, #1
1001b76a:	e9c4 2104 	strd	r2, r1, [r4, #16]
1001b76e:	81a3      	strh	r3, [r4, #12]
1001b770:	6022      	str	r2, [r4, #0]
1001b772:	e7b3      	b.n	1001b6dc <__smakebuf_r+0x1c>
1001b774:	f44f 6880 	mov.w	r8, #1024	@ 0x400
1001b778:	462f      	mov	r7, r5
1001b77a:	e7c8      	b.n	1001b70e <__smakebuf_r+0x4e>
1001b77c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1001b780:	4630      	mov	r0, r6
1001b782:	f003 fcbf 	bl	1001f104 <_isatty_r>
1001b786:	b910      	cbnz	r0, 1001b78e <__smakebuf_r+0xce>
1001b788:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001b78c:	e7ce      	b.n	1001b72c <__smakebuf_r+0x6c>
1001b78e:	89a3      	ldrh	r3, [r4, #12]
1001b790:	f023 0303 	bic.w	r3, r3, #3
1001b794:	f043 0301 	orr.w	r3, r3, #1
1001b798:	b21b      	sxth	r3, r3
1001b79a:	e7c7      	b.n	1001b72c <__smakebuf_r+0x6c>

1001b79c <__ssvfscanf_r>:
1001b79c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001b7a0:	f5ad 7d37 	sub.w	sp, sp, #732	@ 0x2dc
1001b7a4:	468a      	mov	sl, r1
1001b7a6:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
1001b7aa:	af02      	add	r7, sp, #8
1001b7ac:	048c      	lsls	r4, r1, #18
1001b7ae:	64f8      	str	r0, [r7, #76]	@ 0x4c
1001b7b0:	4615      	mov	r5, r2
1001b7b2:	637b      	str	r3, [r7, #52]	@ 0x34
1001b7b4:	d409      	bmi.n	1001b7ca <__ssvfscanf_r+0x2e>
1001b7b6:	f8da 3064 	ldr.w	r3, [sl, #100]	@ 0x64
1001b7ba:	f441 5100 	orr.w	r1, r1, #8192	@ 0x2000
1001b7be:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
1001b7c2:	f8aa 100c 	strh.w	r1, [sl, #12]
1001b7c6:	f8ca 3064 	str.w	r3, [sl, #100]	@ 0x64
1001b7ca:	2300      	movs	r3, #0
1001b7cc:	461c      	mov	r4, r3
1001b7ce:	2208      	movs	r2, #8
1001b7d0:	4619      	mov	r1, r3
1001b7d2:	f107 0058 	add.w	r0, r7, #88	@ 0x58
1001b7d6:	62bb      	str	r3, [r7, #40]	@ 0x28
1001b7d8:	46a1      	mov	r9, r4
1001b7da:	f7fc fbcd 	bl	10017f78 <memset>
1001b7de:	46a8      	mov	r8, r5
1001b7e0:	63fc      	str	r4, [r7, #60]	@ 0x3c
1001b7e2:	627c      	str	r4, [r7, #36]	@ 0x24
1001b7e4:	63bc      	str	r4, [r7, #56]	@ 0x38
1001b7e6:	643c      	str	r4, [r7, #64]	@ 0x40
1001b7e8:	4b83      	ldr	r3, [pc, #524]	@ (1001b9f8 <__ssvfscanf_r+0x25c>)
1001b7ea:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
1001b7ee:	f7fc fc49 	bl	10018084 <__locale_mb_cur_max>
1001b7f2:	f107 0258 	add.w	r2, r7, #88	@ 0x58
1001b7f6:	9200      	str	r2, [sp, #0]
1001b7f8:	4603      	mov	r3, r0
1001b7fa:	4642      	mov	r2, r8
1001b7fc:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001b7fe:	f107 0154 	add.w	r1, r7, #84	@ 0x54
1001b802:	47a0      	blx	r4
1001b804:	2800      	cmp	r0, #0
1001b806:	db4c      	blt.n	1001b8a2 <__ssvfscanf_r+0x106>
1001b808:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
1001b80a:	4480      	add	r8, r0
1001b80c:	4606      	mov	r6, r0
1001b80e:	2b00      	cmp	r3, #0
1001b810:	f000 85a8 	beq.w	1001c364 <__ssvfscanf_r+0xbc8>
1001b814:	2801      	cmp	r0, #1
1001b816:	d053      	beq.n	1001b8c0 <__ssvfscanf_r+0x124>
1001b818:	2b25      	cmp	r3, #37	@ 0x25
1001b81a:	d05a      	beq.n	1001b8d2 <__ssvfscanf_r+0x136>
1001b81c:	2800      	cmp	r0, #0
1001b81e:	d0e3      	beq.n	1001b7e8 <__ssvfscanf_r+0x4c>
1001b820:	f8da 3004 	ldr.w	r3, [sl, #4]
1001b824:	461a      	mov	r2, r3
1001b826:	eba8 0606 	sub.w	r6, r8, r6
1001b82a:	3801      	subs	r0, #1
1001b82c:	2a00      	cmp	r2, #0
1001b82e:	eb06 0400 	add.w	r4, r6, r0
1001b832:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
1001b836:	dd17      	ble.n	1001b868 <__ssvfscanf_r+0xcc>
1001b838:	f8da 3000 	ldr.w	r3, [sl]
1001b83c:	786a      	ldrb	r2, [r5, #1]
1001b83e:	7818      	ldrb	r0, [r3, #0]
1001b840:	4290      	cmp	r0, r2
1001b842:	f103 0301 	add.w	r3, r3, #1
1001b846:	f105 0101 	add.w	r1, r5, #1
1001b84a:	f040 858b 	bne.w	1001c364 <__ssvfscanf_r+0xbc8>
1001b84e:	f8da 2004 	ldr.w	r2, [sl, #4]
1001b852:	f8ca 3000 	str.w	r3, [sl]
1001b856:	3a01      	subs	r2, #1
1001b858:	428c      	cmp	r4, r1
1001b85a:	f8ca 2004 	str.w	r2, [sl, #4]
1001b85e:	f000 809b 	beq.w	1001b998 <__ssvfscanf_r+0x1fc>
1001b862:	2a00      	cmp	r2, #0
1001b864:	460d      	mov	r5, r1
1001b866:	dce7      	bgt.n	1001b838 <__ssvfscanf_r+0x9c>
1001b868:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001b86a:	4651      	mov	r1, sl
1001b86c:	f004 fd3e 	bl	100202ec <__ssrefill_r>
1001b870:	2800      	cmp	r0, #0
1001b872:	d0e1      	beq.n	1001b838 <__ssvfscanf_r+0x9c>
1001b874:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001b876:	2b00      	cmp	r3, #0
1001b878:	f001 81e3 	beq.w	1001cc42 <__ssvfscanf_r+0x14a6>
1001b87c:	f8ba 300c 	ldrh.w	r3, [sl, #12]
1001b880:	f013 0f40 	tst.w	r3, #64	@ 0x40
1001b884:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001b886:	f041 81dd 	bne.w	1001cc44 <__ssvfscanf_r+0x14a8>
1001b88a:	b123      	cbz	r3, 1001b896 <__ssvfscanf_r+0xfa>
1001b88c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001b88e:	6818      	ldr	r0, [r3, #0]
1001b890:	b108      	cbz	r0, 1001b896 <__ssvfscanf_r+0xfa>
1001b892:	f7f8 f9eb 	bl	10013c6c <free>
1001b896:	6c38      	ldr	r0, [r7, #64]	@ 0x40
1001b898:	f507 7735 	add.w	r7, r7, #724	@ 0x2d4
1001b89c:	46bd      	mov	sp, r7
1001b89e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001b8a2:	f64f 73fd 	movw	r3, #65533	@ 0xfffd
1001b8a6:	2208      	movs	r2, #8
1001b8a8:	2100      	movs	r1, #0
1001b8aa:	f107 0058 	add.w	r0, r7, #88	@ 0x58
1001b8ae:	657b      	str	r3, [r7, #84]	@ 0x54
1001b8b0:	f7fc fb62 	bl	10017f78 <memset>
1001b8b4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
1001b8b6:	f108 0801 	add.w	r8, r8, #1
1001b8ba:	2b00      	cmp	r3, #0
1001b8bc:	f000 8552 	beq.w	1001c364 <__ssvfscanf_r+0xbc8>
1001b8c0:	4a4e      	ldr	r2, [pc, #312]	@ (1001b9fc <__ssvfscanf_r+0x260>)
1001b8c2:	5cd2      	ldrb	r2, [r2, r3]
1001b8c4:	0710      	lsls	r0, r2, #28
1001b8c6:	f100 855b 	bmi.w	1001c380 <__ssvfscanf_r+0xbe4>
1001b8ca:	2601      	movs	r6, #1
1001b8cc:	2b25      	cmp	r3, #37	@ 0x25
1001b8ce:	4630      	mov	r0, r6
1001b8d0:	d1a6      	bne.n	1001b820 <__ssvfscanf_r+0x84>
1001b8d2:	2400      	movs	r4, #0
1001b8d4:	f898 2000 	ldrb.w	r2, [r8]
1001b8d8:	4625      	mov	r5, r4
1001b8da:	f1a2 0325 	sub.w	r3, r2, #37	@ 0x25
1001b8de:	f108 0101 	add.w	r1, r8, #1
1001b8e2:	2b55      	cmp	r3, #85	@ 0x55
1001b8e4:	f200 8649 	bhi.w	1001c57a <__ssvfscanf_r+0xdde>
1001b8e8:	e8df f013 	tbh	[pc, r3, lsl #1]
1001b8ec:	0647073d 	.word	0x0647073d
1001b8f0:	06470647 	.word	0x06470647
1001b8f4:	07340647 	.word	0x07340647
1001b8f8:	06470647 	.word	0x06470647
1001b8fc:	06470647 	.word	0x06470647
1001b900:	064d0647 	.word	0x064d0647
1001b904:	064d064d 	.word	0x064d064d
1001b908:	064d064d 	.word	0x064d064d
1001b90c:	064d064d 	.word	0x064d064d
1001b910:	064d064d 	.word	0x064d064d
1001b914:	0647064d 	.word	0x0647064d
1001b918:	06470647 	.word	0x06470647
1001b91c:	06470647 	.word	0x06470647
1001b920:	06470647 	.word	0x06470647
1001b924:	06470658 	.word	0x06470658
1001b928:	04f4006b 	.word	0x04f4006b
1001b92c:	06580658 	.word	0x06580658
1001b930:	06470658 	.word	0x06470658
1001b934:	06470647 	.word	0x06470647
1001b938:	00620647 	.word	0x00620647
1001b93c:	06470647 	.word	0x06470647
1001b940:	064704ff 	.word	0x064704ff
1001b944:	06470647 	.word	0x06470647
1001b948:	064704b5 	.word	0x064704b5
1001b94c:	06470647 	.word	0x06470647
1001b950:	06980647 	.word	0x06980647
1001b954:	06470647 	.word	0x06470647
1001b958:	064706d9 	.word	0x064706d9
1001b95c:	06470647 	.word	0x06470647
1001b960:	06470647 	.word	0x06470647
1001b964:	06470658 	.word	0x06470658
1001b968:	04f6006d 	.word	0x04f6006d
1001b96c:	06580658 	.word	0x06580658
1001b970:	06ed0658 	.word	0x06ed0658
1001b974:	006206e4 	.word	0x006206e4
1001b978:	071e0647 	.word	0x071e0647
1001b97c:	06fd070f 	.word	0x06fd070f
1001b980:	06fa0501 	.word	0x06fa0501
1001b984:	06470647 	.word	0x06470647
1001b988:	005b04b7 	.word	0x005b04b7
1001b98c:	0647072b 	.word	0x0647072b
1001b990:	06980647 	.word	0x06980647
1001b994:	005b0647 	.word	0x005b0647
1001b998:	3502      	adds	r5, #2
1001b99a:	444d      	add	r5, r9
1001b99c:	eba5 0906 	sub.w	r9, r5, r6
1001b9a0:	e722      	b.n	1001b7e8 <__ssvfscanf_r+0x4c>
1001b9a2:	0723      	lsls	r3, r4, #28
1001b9a4:	f040 84de 	bne.w	1001c364 <__ssvfscanf_r+0xbc8>
1001b9a8:	f898 2001 	ldrb.w	r2, [r8, #1]
1001b9ac:	4688      	mov	r8, r1
1001b9ae:	e794      	b.n	1001b8da <__ssvfscanf_r+0x13e>
1001b9b0:	0722      	lsls	r2, r4, #28
1001b9b2:	f040 84d7 	bne.w	1001c364 <__ssvfscanf_r+0xbc8>
1001b9b6:	f898 2001 	ldrb.w	r2, [r8, #1]
1001b9ba:	f044 0402 	orr.w	r4, r4, #2
1001b9be:	4688      	mov	r8, r1
1001b9c0:	e78b      	b.n	1001b8da <__ssvfscanf_r+0x13e>
1001b9c2:	f044 0401 	orr.w	r4, r4, #1
1001b9c6:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
1001b9ca:	4688      	mov	r8, r1
1001b9cc:	f04f 0b00 	mov.w	fp, #0
1001b9d0:	f8da 3004 	ldr.w	r3, [sl, #4]
1001b9d4:	2b00      	cmp	r3, #0
1001b9d6:	f340 8448 	ble.w	1001c26a <__ssvfscanf_r+0xace>
1001b9da:	0660      	lsls	r0, r4, #25
1001b9dc:	f140 844f 	bpl.w	1001c27e <__ssvfscanf_r+0xae2>
1001b9e0:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
1001b9e4:	2b03      	cmp	r3, #3
1001b9e6:	f200 8793 	bhi.w	1001c910 <__ssvfscanf_r+0x1174>
1001b9ea:	e8df f013 	tbh	[pc, r3, lsl #1]
1001b9ee:	02b1      	.short	0x02b1
1001b9f0:	014801f4 	.word	0x014801f4
1001b9f4:	0009      	.short	0x0009
1001b9f6:	bf00      	nop
1001b9f8:	2000042c 	.word	0x2000042c
1001b9fc:	10023b6d 	.word	0x10023b6d
1001ba00:	f444 63f0 	orr.w	r3, r4, #1920	@ 0x780
1001ba04:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001ba06:	64bb      	str	r3, [r7, #72]	@ 0x48
1001ba08:	f7fc fb42 	bl	10018090 <_localeconv_r>
1001ba0c:	6803      	ldr	r3, [r0, #0]
1001ba0e:	61fb      	str	r3, [r7, #28]
1001ba10:	1e6b      	subs	r3, r5, #1
1001ba12:	f5b3 7fae 	cmp.w	r3, #348	@ 0x15c
1001ba16:	f04f 0400 	mov.w	r4, #0
1001ba1a:	bf88      	it	hi
1001ba1c:	f46f 70ae 	mvnhi.w	r0, #348	@ 0x15c
1001ba20:	e9c7 4404 	strd	r4, r4, [r7, #16]
1001ba24:	bf88      	it	hi
1001ba26:	eb05 0c00 	addhi.w	ip, r5, r0
1001ba2a:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
1001ba2e:	bf94      	ite	ls
1001ba30:	f04f 0c00 	movls.w	ip, #0
1001ba34:	f240 155d 	movwhi	r5, #349	@ 0x15d
1001ba38:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001ba3a:	647c      	str	r4, [r7, #68]	@ 0x44
1001ba3c:	633c      	str	r4, [r7, #48]	@ 0x30
1001ba3e:	61bc      	str	r4, [r7, #24]
1001ba40:	469b      	mov	fp, r3
1001ba42:	f8c7 c00c 	str.w	ip, [r7, #12]
1001ba46:	f8c7 8020 	str.w	r8, [r7, #32]
1001ba4a:	f8da 1000 	ldr.w	r1, [sl]
1001ba4e:	780a      	ldrb	r2, [r1, #0]
1001ba50:	f1a2 032b 	sub.w	r3, r2, #43	@ 0x2b
1001ba54:	2b4e      	cmp	r3, #78	@ 0x4e
1001ba56:	d850      	bhi.n	1001bafa <__ssvfscanf_r+0x35e>
1001ba58:	e8df f013 	tbh	[pc, r3, lsl #1]
1001ba5c:	004f03b7 	.word	0x004f03b7
1001ba60:	004f03b7 	.word	0x004f03b7
1001ba64:	0099004f 	.word	0x0099004f
1001ba68:	009d009d 	.word	0x009d009d
1001ba6c:	009d009d 	.word	0x009d009d
1001ba70:	009d009d 	.word	0x009d009d
1001ba74:	009d009d 	.word	0x009d009d
1001ba78:	004f009d 	.word	0x004f009d
1001ba7c:	004f004f 	.word	0x004f004f
1001ba80:	004f004f 	.word	0x004f004f
1001ba84:	004f004f 	.word	0x004f004f
1001ba88:	033b03ac 	.word	0x033b03ac
1001ba8c:	033b033b 	.word	0x033b033b
1001ba90:	03d003d9 	.word	0x03d003d9
1001ba94:	004f004f 	.word	0x004f004f
1001ba98:	004f03bf 	.word	0x004f03bf
1001ba9c:	004f004f 	.word	0x004f004f
1001baa0:	0393004f 	.word	0x0393004f
1001baa4:	0372004f 	.word	0x0372004f
1001baa8:	004f004f 	.word	0x004f004f
1001baac:	036d004f 	.word	0x036d004f
1001bab0:	004f004f 	.word	0x004f004f
1001bab4:	0356004f 	.word	0x0356004f
1001bab8:	004f03a7 	.word	0x004f03a7
1001babc:	004f004f 	.word	0x004f004f
1001bac0:	004f004f 	.word	0x004f004f
1001bac4:	004f004f 	.word	0x004f004f
1001bac8:	033b03ac 	.word	0x033b03ac
1001bacc:	033b033b 	.word	0x033b033b
1001bad0:	03d003d9 	.word	0x03d003d9
1001bad4:	004f004f 	.word	0x004f004f
1001bad8:	004f03bf 	.word	0x004f03bf
1001badc:	004f004f 	.word	0x004f004f
1001bae0:	0393004f 	.word	0x0393004f
1001bae4:	0372004f 	.word	0x0372004f
1001bae8:	004f004f 	.word	0x004f004f
1001baec:	036d004f 	.word	0x036d004f
1001baf0:	004f004f 	.word	0x004f004f
1001baf4:	0356004f 	.word	0x0356004f
1001baf8:	03a7      	.short	0x03a7
1001bafa:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bafc:	059e      	lsls	r6, r3, #22
1001bafe:	d568      	bpl.n	1001bbd2 <__ssvfscanf_r+0x436>
1001bb00:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001bb04:	f898 3000 	ldrb.w	r3, [r8]
1001bb08:	4293      	cmp	r3, r2
1001bb0a:	d162      	bne.n	1001bbd2 <__ssvfscanf_r+0x436>
1001bb0c:	e9c7 5401 	strd	r5, r4, [r7, #4]
1001bb10:	2600      	movs	r6, #0
1001bb12:	4655      	mov	r5, sl
1001bb14:	e006      	b.n	1001bb24 <__ssvfscanf_r+0x388>
1001bb16:	6029      	str	r1, [r5, #0]
1001bb18:	f891 e000 	ldrb.w	lr, [r1]
1001bb1c:	f898 0000 	ldrb.w	r0, [r8]
1001bb20:	4586      	cmp	lr, r0
1001bb22:	d11b      	bne.n	1001bb5c <__ssvfscanf_r+0x3c0>
1001bb24:	f818 0f01 	ldrb.w	r0, [r8, #1]!
1001bb28:	46b2      	mov	sl, r6
1001bb2a:	464c      	mov	r4, r9
1001bb2c:	3101      	adds	r1, #1
1001bb2e:	3601      	adds	r6, #1
1001bb30:	f109 0901 	add.w	r9, r9, #1
1001bb34:	2800      	cmp	r0, #0
1001bb36:	f000 8693 	beq.w	1001c860 <__ssvfscanf_r+0x10c4>
1001bb3a:	6868      	ldr	r0, [r5, #4]
1001bb3c:	3801      	subs	r0, #1
1001bb3e:	2800      	cmp	r0, #0
1001bb40:	6068      	str	r0, [r5, #4]
1001bb42:	dce8      	bgt.n	1001bb16 <__ssvfscanf_r+0x37a>
1001bb44:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bb46:	4629      	mov	r1, r5
1001bb48:	f004 fbd0 	bl	100202ec <__ssrefill_r>
1001bb4c:	b930      	cbnz	r0, 1001bb5c <__ssvfscanf_r+0x3c0>
1001bb4e:	6829      	ldr	r1, [r5, #0]
1001bb50:	f898 0000 	ldrb.w	r0, [r8]
1001bb54:	f891 e000 	ldrb.w	lr, [r1]
1001bb58:	4586      	cmp	lr, r0
1001bb5a:	d0e3      	beq.n	1001bb24 <__ssvfscanf_r+0x388>
1001bb5c:	4652      	mov	r2, sl
1001bb5e:	46aa      	mov	sl, r5
1001bb60:	e9d7 5807 	ldrd	r5, r8, [r7, #28]
1001bb64:	4623      	mov	r3, r4
1001bb66:	442e      	add	r6, r5
1001bb68:	68bc      	ldr	r4, [r7, #8]
1001bb6a:	623c      	str	r4, [r7, #32]
1001bb6c:	4634      	mov	r4, r6
1001bb6e:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
1001bb70:	61fa      	str	r2, [r7, #28]
1001bb72:	4699      	mov	r9, r3
1001bb74:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
1001bb78:	4652      	mov	r2, sl
1001bb7a:	4630      	mov	r0, r6
1001bb7c:	f004 fb7a 	bl	10020274 <_sungetc_r>
1001bb80:	42ac      	cmp	r4, r5
1001bb82:	d1f7      	bne.n	1001bb74 <__ssvfscanf_r+0x3d8>
1001bb84:	69fa      	ldr	r2, [r7, #28]
1001bb86:	6a3c      	ldr	r4, [r7, #32]
1001bb88:	eba9 0902 	sub.w	r9, r9, r2
1001bb8c:	e023      	b.n	1001bbd6 <__ssvfscanf_r+0x43a>
1001bb8e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bb90:	05d9      	lsls	r1, r3, #23
1001bb92:	f100 854e 	bmi.w	1001c632 <__ssvfscanf_r+0xe96>
1001bb96:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001bb98:	191b      	adds	r3, r3, r4
1001bb9a:	d11a      	bne.n	1001bbd2 <__ssvfscanf_r+0x436>
1001bb9c:	461c      	mov	r4, r3
1001bb9e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bba0:	f423 73c0 	bic.w	r3, r3, #384	@ 0x180
1001bba4:	e9c7 4311 	strd	r4, r3, [r7, #68]	@ 0x44
1001bba8:	f80b 2b01 	strb.w	r2, [fp], #1
1001bbac:	3d01      	subs	r5, #1
1001bbae:	f8da 3004 	ldr.w	r3, [sl, #4]
1001bbb2:	3b01      	subs	r3, #1
1001bbb4:	2b00      	cmp	r3, #0
1001bbb6:	f109 0901 	add.w	r9, r9, #1
1001bbba:	f8ca 3004 	str.w	r3, [sl, #4]
1001bbbe:	f340 83d4 	ble.w	1001c36a <__ssvfscanf_r+0xbce>
1001bbc2:	f8da 3000 	ldr.w	r3, [sl]
1001bbc6:	3301      	adds	r3, #1
1001bbc8:	f8ca 3000 	str.w	r3, [sl]
1001bbcc:	2d00      	cmp	r5, #0
1001bbce:	f47f af3c 	bne.w	1001ba4a <__ssvfscanf_r+0x2ae>
1001bbd2:	f8d7 8020 	ldr.w	r8, [r7, #32]
1001bbd6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001bbd8:	2b00      	cmp	r3, #0
1001bbda:	f040 8337 	bne.w	1001c24c <__ssvfscanf_r+0xab0>
1001bbde:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001bbe0:	3b01      	subs	r3, #1
1001bbe2:	2b01      	cmp	r3, #1
1001bbe4:	f240 83b1 	bls.w	1001c34a <__ssvfscanf_r+0xbae>
1001bbe8:	1e63      	subs	r3, r4, #1
1001bbea:	2b06      	cmp	r3, #6
1001bbec:	f240 864f 	bls.w	1001c88e <__ssvfscanf_r+0x10f2>
1001bbf0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bbf2:	05d8      	lsls	r0, r3, #23
1001bbf4:	d51c      	bpl.n	1001bc30 <__ssvfscanf_r+0x494>
1001bbf6:	0559      	lsls	r1, r3, #21
1001bbf8:	f101 8127 	bmi.w	1001ce4a <__ssvfscanf_r+0x16ae>
1001bbfc:	f81b 1c01 	ldrb.w	r1, [fp, #-1]
1001bc00:	2965      	cmp	r1, #101	@ 0x65
1001bc02:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
1001bc06:	f109 34ff 	add.w	r4, r9, #4294967295	@ 0xffffffff
1001bc0a:	d00b      	beq.n	1001bc24 <__ssvfscanf_r+0x488>
1001bc0c:	2945      	cmp	r1, #69	@ 0x45
1001bc0e:	d009      	beq.n	1001bc24 <__ssvfscanf_r+0x488>
1001bc10:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bc12:	4652      	mov	r2, sl
1001bc14:	f004 fb2e 	bl	10020274 <_sungetc_r>
1001bc18:	f81b 1c02 	ldrb.w	r1, [fp, #-2]
1001bc1c:	f1a9 0402 	sub.w	r4, r9, #2
1001bc20:	f1ab 0302 	sub.w	r3, fp, #2
1001bc24:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bc26:	4652      	mov	r2, sl
1001bc28:	46a1      	mov	r9, r4
1001bc2a:	469b      	mov	fp, r3
1001bc2c:	f004 fb22 	bl	10020274 <_sungetc_r>
1001bc30:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bc32:	f013 0210 	ands.w	r2, r3, #16
1001bc36:	f47f add7 	bne.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001bc3a:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
1001bc3e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
1001bc42:	f88b 2000 	strb.w	r2, [fp]
1001bc46:	f000 850f 	beq.w	1001c668 <__ssvfscanf_r+0xecc>
1001bc4a:	697b      	ldr	r3, [r7, #20]
1001bc4c:	2b00      	cmp	r3, #0
1001bc4e:	f041 8023 	bne.w	1001cc98 <__ssvfscanf_r+0x14fc>
1001bc52:	2200      	movs	r2, #0
1001bc54:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
1001bc56:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bc58:	f003 f814 	bl	1001ec84 <_strtod_r>
1001bc5c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001bc5e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001bc60:	07d2      	lsls	r2, r2, #31
1001bc62:	4605      	mov	r5, r0
1001bc64:	460e      	mov	r6, r1
1001bc66:	f103 0404 	add.w	r4, r3, #4
1001bc6a:	f140 8629 	bpl.w	1001c8c0 <__ssvfscanf_r+0x1124>
1001bc6e:	681b      	ldr	r3, [r3, #0]
1001bc70:	e9c3 5600 	strd	r5, r6, [r3]
1001bc74:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001bc76:	637c      	str	r4, [r7, #52]	@ 0x34
1001bc78:	3301      	adds	r3, #1
1001bc7a:	643b      	str	r3, [r7, #64]	@ 0x40
1001bc7c:	e5b4      	b.n	1001b7e8 <__ssvfscanf_r+0x4c>
1001bc7e:	1e6b      	subs	r3, r5, #1
1001bc80:	f5b3 7fae 	cmp.w	r3, #348	@ 0x15c
1001bc84:	bf88      	it	hi
1001bc86:	f46f 72ae 	mvnhi.w	r2, #348	@ 0x15c
1001bc8a:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
1001bc8e:	bf8c      	ite	hi
1001bc90:	18a9      	addhi	r1, r5, r2
1001bc92:	2100      	movls	r1, #0
1001bc94:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001bc96:	461e      	mov	r6, r3
1001bc98:	6bba      	ldr	r2, [r7, #56]	@ 0x38
1001bc9a:	6479      	str	r1, [r7, #68]	@ 0x44
1001bc9c:	4653      	mov	r3, sl
1001bc9e:	f444 6458 	orr.w	r4, r4, #3456	@ 0xd80
1001bca2:	46ca      	mov	sl, r9
1001bca4:	bf88      	it	hi
1001bca6:	f240 155d 	movwhi	r5, #349	@ 0x15d
1001bcaa:	f04f 0b00 	mov.w	fp, #0
1001bcae:	4699      	mov	r9, r3
1001bcb0:	f8d9 0000 	ldr.w	r0, [r9]
1001bcb4:	f890 c000 	ldrb.w	ip, [r0]
1001bcb8:	f1ac 032b 	sub.w	r3, ip, #43	@ 0x2b
1001bcbc:	2b4d      	cmp	r3, #77	@ 0x4d
1001bcbe:	d862      	bhi.n	1001bd86 <__ssvfscanf_r+0x5ea>
1001bcc0:	e8df f013 	tbh	[pc, r3, lsl #1]
1001bcc4:	006102b5 	.word	0x006102b5
1001bcc8:	006102b5 	.word	0x006102b5
1001bccc:	031e0061 	.word	0x031e0061
1001bcd0:	02150215 	.word	0x02150215
1001bcd4:	02150215 	.word	0x02150215
1001bcd8:	02150215 	.word	0x02150215
1001bcdc:	02bb0215 	.word	0x02bb0215
1001bce0:	006102bb 	.word	0x006102bb
1001bce4:	00610061 	.word	0x00610061
1001bce8:	00610061 	.word	0x00610061
1001bcec:	00610061 	.word	0x00610061
1001bcf0:	004e004e 	.word	0x004e004e
1001bcf4:	004e004e 	.word	0x004e004e
1001bcf8:	004e004e 	.word	0x004e004e
1001bcfc:	00610061 	.word	0x00610061
1001bd00:	00610061 	.word	0x00610061
1001bd04:	00610061 	.word	0x00610061
1001bd08:	00610061 	.word	0x00610061
1001bd0c:	00610061 	.word	0x00610061
1001bd10:	00610061 	.word	0x00610061
1001bd14:	00610061 	.word	0x00610061
1001bd18:	00610061 	.word	0x00610061
1001bd1c:	02a90061 	.word	0x02a90061
1001bd20:	00610061 	.word	0x00610061
1001bd24:	00610061 	.word	0x00610061
1001bd28:	00610061 	.word	0x00610061
1001bd2c:	00610061 	.word	0x00610061
1001bd30:	004e004e 	.word	0x004e004e
1001bd34:	004e004e 	.word	0x004e004e
1001bd38:	004e004e 	.word	0x004e004e
1001bd3c:	00610061 	.word	0x00610061
1001bd40:	00610061 	.word	0x00610061
1001bd44:	00610061 	.word	0x00610061
1001bd48:	00610061 	.word	0x00610061
1001bd4c:	00610061 	.word	0x00610061
1001bd50:	00610061 	.word	0x00610061
1001bd54:	00610061 	.word	0x00610061
1001bd58:	00610061 	.word	0x00610061
1001bd5c:	02a90061 	.word	0x02a90061
1001bd60:	2a0a      	cmp	r2, #10
1001bd62:	dd10      	ble.n	1001bd86 <__ssvfscanf_r+0x5ea>
1001bd64:	f424 6438 	bic.w	r4, r4, #2944	@ 0xb80
1001bd68:	f806 cb01 	strb.w	ip, [r6], #1
1001bd6c:	f8d9 3004 	ldr.w	r3, [r9, #4]
1001bd70:	3b01      	subs	r3, #1
1001bd72:	2b00      	cmp	r3, #0
1001bd74:	f8c9 3004 	str.w	r3, [r9, #4]
1001bd78:	f340 82dd 	ble.w	1001c336 <__ssvfscanf_r+0xb9a>
1001bd7c:	3001      	adds	r0, #1
1001bd7e:	f8c9 0000 	str.w	r0, [r9]
1001bd82:	3d01      	subs	r5, #1
1001bd84:	d194      	bne.n	1001bcb0 <__ssvfscanf_r+0x514>
1001bd86:	464b      	mov	r3, r9
1001bd88:	05e0      	lsls	r0, r4, #23
1001bd8a:	46d1      	mov	r9, sl
1001bd8c:	63ba      	str	r2, [r7, #56]	@ 0x38
1001bd8e:	469a      	mov	sl, r3
1001bd90:	d507      	bpl.n	1001bda2 <__ssvfscanf_r+0x606>
1001bd92:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001bd94:	429e      	cmp	r6, r3
1001bd96:	f200 8479 	bhi.w	1001c68c <__ssvfscanf_r+0xef0>
1001bd9a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001bd9c:	429e      	cmp	r6, r3
1001bd9e:	f000 82e1 	beq.w	1001c364 <__ssvfscanf_r+0xbc8>
1001bda2:	f014 0210 	ands.w	r2, r4, #16
1001bda6:	d111      	bne.n	1001bdcc <__ssvfscanf_r+0x630>
1001bda8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
1001bdaa:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
1001bdac:	6abd      	ldr	r5, [r7, #40]	@ 0x28
1001bdae:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bdb0:	7032      	strb	r2, [r6, #0]
1001bdb2:	47a8      	blx	r5
1001bdb4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001bdb6:	06a1      	lsls	r1, r4, #26
1001bdb8:	f103 0504 	add.w	r5, r3, #4
1001bdbc:	f140 844c 	bpl.w	1001c658 <__ssvfscanf_r+0xebc>
1001bdc0:	681b      	ldr	r3, [r3, #0]
1001bdc2:	6018      	str	r0, [r3, #0]
1001bdc4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001bdc6:	637d      	str	r5, [r7, #52]	@ 0x34
1001bdc8:	3301      	adds	r3, #1
1001bdca:	643b      	str	r3, [r7, #64]	@ 0x40
1001bdcc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001bdce:	1af6      	subs	r6, r6, r3
1001bdd0:	445e      	add	r6, fp
1001bdd2:	44b1      	add	r9, r6
1001bdd4:	e508      	b.n	1001b7e8 <__ssvfscanf_r+0x4c>
1001bdd6:	2d00      	cmp	r5, #0
1001bdd8:	bf08      	it	eq
1001bdda:	f04f 35ff 	moveq.w	r5, #4294967295	@ 0xffffffff
1001bdde:	07e0      	lsls	r0, r4, #31
1001bde0:	f004 0310 	and.w	r3, r4, #16
1001bde4:	f140 82eb 	bpl.w	1001c3be <__ssvfscanf_r+0xc22>
1001bde8:	2b00      	cmp	r3, #0
1001bdea:	f040 84bf 	bne.w	1001c76c <__ssvfscanf_r+0xfd0>
1001bdee:	6b7e      	ldr	r6, [r7, #52]	@ 0x34
1001bdf0:	0621      	lsls	r1, r4, #24
1001bdf2:	f856 2b04 	ldr.w	r2, [r6], #4
1001bdf6:	64ba      	str	r2, [r7, #72]	@ 0x48
1001bdf8:	f140 875d 	bpl.w	1001ccb6 <__ssvfscanf_r+0x151a>
1001bdfc:	647b      	str	r3, [r7, #68]	@ 0x44
1001bdfe:	2a00      	cmp	r2, #0
1001be00:	f000 82b0 	beq.w	1001c364 <__ssvfscanf_r+0xbc8>
1001be04:	2080      	movs	r0, #128	@ 0x80
1001be06:	f7f7 ff29 	bl	10013c5c <malloc>
1001be0a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001be0c:	4602      	mov	r2, r0
1001be0e:	2800      	cmp	r0, #0
1001be10:	f000 8717 	beq.w	1001cc42 <__ssvfscanf_r+0x14a6>
1001be14:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001be16:	6008      	str	r0, [r1, #0]
1001be18:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
1001be1a:	88c4      	ldrh	r4, [r0, #6]
1001be1c:	8881      	ldrh	r1, [r0, #4]
1001be1e:	428c      	cmp	r4, r1
1001be20:	f080 8607 	bcs.w	1001ca32 <__ssvfscanf_r+0x1296>
1001be24:	6800      	ldr	r0, [r0, #0]
1001be26:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001be28:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
1001be2c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
1001be2e:	637e      	str	r6, [r7, #52]	@ 0x34
1001be30:	3401      	adds	r4, #1
1001be32:	80cc      	strh	r4, [r1, #6]
1001be34:	4696      	mov	lr, r2
1001be36:	f04f 0c20 	mov.w	ip, #32
1001be3a:	f8da 1000 	ldr.w	r1, [sl]
1001be3e:	4eaf      	ldr	r6, [pc, #700]	@ (1001c0fc <__ssvfscanf_r+0x960>)
1001be40:	7809      	ldrb	r1, [r1, #0]
1001be42:	f816 b001 	ldrb.w	fp, [r6, r1]
1001be46:	f01b 0b08 	ands.w	fp, fp, #8
1001be4a:	d170      	bne.n	1001bf2e <__ssvfscanf_r+0x792>
1001be4c:	f8c7 801c 	str.w	r8, [r7, #28]
1001be50:	623e      	str	r6, [r7, #32]
1001be52:	f8c7 e030 	str.w	lr, [r7, #48]	@ 0x30
1001be56:	462e      	mov	r6, r5
1001be58:	f8c7 c044 	str.w	ip, [r7, #68]	@ 0x44
1001be5c:	4698      	mov	r8, r3
1001be5e:	4615      	mov	r5, r2
1001be60:	f7fc f910 	bl	10018084 <__locale_mb_cur_max>
1001be64:	4558      	cmp	r0, fp
1001be66:	f43f ad05 	beq.w	1001b874 <__ssvfscanf_r+0xd8>
1001be6a:	e9da 3200 	ldrd	r3, r2, [sl]
1001be6e:	f507 71b8 	add.w	r1, r7, #368	@ 0x170
1001be72:	4608      	mov	r0, r1
1001be74:	62f9      	str	r1, [r7, #44]	@ 0x2c
1001be76:	f813 1b01 	ldrb.w	r1, [r3], #1
1001be7a:	f800 100b 	strb.w	r1, [r0, fp]
1001be7e:	3a01      	subs	r2, #1
1001be80:	e9ca 3200 	strd	r3, r2, [sl]
1001be84:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1001be86:	2b03      	cmp	r3, #3
1001be88:	f10b 0b01 	add.w	fp, fp, #1
1001be8c:	f107 0468 	add.w	r4, r7, #104	@ 0x68
1001be90:	d102      	bne.n	1001be98 <__ssvfscanf_r+0x6fc>
1001be92:	6823      	ldr	r3, [r4, #0]
1001be94:	2b04      	cmp	r3, #4
1001be96:	d004      	beq.n	1001bea2 <__ssvfscanf_r+0x706>
1001be98:	2208      	movs	r2, #8
1001be9a:	2100      	movs	r1, #0
1001be9c:	4620      	mov	r0, r4
1001be9e:	f7fc f86b 	bl	10017f78 <memset>
1001bea2:	9400      	str	r4, [sp, #0]
1001bea4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
1001bea6:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bea8:	465b      	mov	r3, fp
1001beaa:	4629      	mov	r1, r5
1001beac:	f003 fadc 	bl	1001f468 <_mbrtowc_r>
1001beb0:	1c42      	adds	r2, r0, #1
1001beb2:	6278      	str	r0, [r7, #36]	@ 0x24
1001beb4:	f43f acde 	beq.w	1001b874 <__ssvfscanf_r+0xd8>
1001beb8:	2800      	cmp	r0, #0
1001beba:	f000 860c 	beq.w	1001cad6 <__ssvfscanf_r+0x133a>
1001bebe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1001bec0:	3302      	adds	r3, #2
1001bec2:	d01e      	beq.n	1001bf02 <__ssvfscanf_r+0x766>
1001bec4:	6828      	ldr	r0, [r5, #0]
1001bec6:	f003 fb81 	bl	1001f5cc <iswspace>
1001beca:	2800      	cmp	r0, #0
1001becc:	f040 877a 	bne.w	1001cdc4 <__ssvfscanf_r+0x1628>
1001bed0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1001bed2:	2b03      	cmp	r3, #3
1001bed4:	44d9      	add	r9, fp
1001bed6:	d102      	bne.n	1001bede <__ssvfscanf_r+0x742>
1001bed8:	6823      	ldr	r3, [r4, #0]
1001beda:	2b04      	cmp	r3, #4
1001bedc:	d000      	beq.n	1001bee0 <__ssvfscanf_r+0x744>
1001bede:	3e01      	subs	r6, #1
1001bee0:	f1b8 0f00 	cmp.w	r8, #0
1001bee4:	f040 86e3 	bne.w	1001ccae <__ssvfscanf_r+0x1512>
1001bee8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001beea:	3504      	adds	r5, #4
1001beec:	2b00      	cmp	r3, #0
1001beee:	f000 86de 	beq.w	1001ccae <__ssvfscanf_r+0x1512>
1001bef2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001bef4:	1aec      	subs	r4, r5, r3
1001bef6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001bef8:	ebb3 0fa4 	cmp.w	r3, r4, asr #2
1001befc:	f240 8794 	bls.w	1001ce28 <__ssvfscanf_r+0x168c>
1001bf00:	46c3      	mov	fp, r8
1001bf02:	f8da 3004 	ldr.w	r3, [sl, #4]
1001bf06:	2b00      	cmp	r3, #0
1001bf08:	f340 8728 	ble.w	1001cd5c <__ssvfscanf_r+0x15c0>
1001bf0c:	f8da 3000 	ldr.w	r3, [sl]
1001bf10:	6a3a      	ldr	r2, [r7, #32]
1001bf12:	781b      	ldrb	r3, [r3, #0]
1001bf14:	5cd3      	ldrb	r3, [r2, r3]
1001bf16:	0718      	lsls	r0, r3, #28
1001bf18:	d401      	bmi.n	1001bf1e <__ssvfscanf_r+0x782>
1001bf1a:	2e00      	cmp	r6, #0
1001bf1c:	d1a0      	bne.n	1001be60 <__ssvfscanf_r+0x6c4>
1001bf1e:	4643      	mov	r3, r8
1001bf20:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
1001bf24:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
1001bf28:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001bf2c:	462a      	mov	r2, r5
1001bf2e:	2b00      	cmp	r3, #0
1001bf30:	f47f ac5a 	bne.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001bf34:	6013      	str	r3, [r2, #0]
1001bf36:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bf38:	b133      	cbz	r3, 1001bf48 <__ssvfscanf_r+0x7ac>
1001bf3a:	eba2 020e 	sub.w	r2, r2, lr
1001bf3e:	1093      	asrs	r3, r2, #2
1001bf40:	3301      	adds	r3, #1
1001bf42:	459c      	cmp	ip, r3
1001bf44:	f200 8611 	bhi.w	1001cb6a <__ssvfscanf_r+0x13ce>
1001bf48:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001bf4a:	3301      	adds	r3, #1
1001bf4c:	643b      	str	r3, [r7, #64]	@ 0x40
1001bf4e:	e44b      	b.n	1001b7e8 <__ssvfscanf_r+0x4c>
1001bf50:	2d00      	cmp	r5, #0
1001bf52:	bf08      	it	eq
1001bf54:	f04f 35ff 	moveq.w	r5, #4294967295	@ 0xffffffff
1001bf58:	07e6      	lsls	r6, r4, #31
1001bf5a:	f004 0210 	and.w	r2, r4, #16
1001bf5e:	f140 829d 	bpl.w	1001c49c <__ssvfscanf_r+0xd00>
1001bf62:	2a00      	cmp	r2, #0
1001bf64:	f040 843e 	bne.w	1001c7e4 <__ssvfscanf_r+0x1048>
1001bf68:	6b79      	ldr	r1, [r7, #52]	@ 0x34
1001bf6a:	0624      	lsls	r4, r4, #24
1001bf6c:	f851 3b04 	ldr.w	r3, [r1], #4
1001bf70:	637b      	str	r3, [r7, #52]	@ 0x34
1001bf72:	6239      	str	r1, [r7, #32]
1001bf74:	f140 86aa 	bpl.w	1001cccc <__ssvfscanf_r+0x1530>
1001bf78:	64ba      	str	r2, [r7, #72]	@ 0x48
1001bf7a:	2b00      	cmp	r3, #0
1001bf7c:	f000 81f2 	beq.w	1001c364 <__ssvfscanf_r+0xbc8>
1001bf80:	2080      	movs	r0, #128	@ 0x80
1001bf82:	f7f7 fe6b 	bl	10013c5c <malloc>
1001bf86:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001bf88:	4683      	mov	fp, r0
1001bf8a:	2800      	cmp	r0, #0
1001bf8c:	f000 8659 	beq.w	1001cc42 <__ssvfscanf_r+0x14a6>
1001bf90:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001bf92:	6018      	str	r0, [r3, #0]
1001bf94:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001bf96:	88dc      	ldrh	r4, [r3, #6]
1001bf98:	8899      	ldrh	r1, [r3, #4]
1001bf9a:	428c      	cmp	r4, r1
1001bf9c:	f080 8535 	bcs.w	1001ca0a <__ssvfscanf_r+0x126e>
1001bfa0:	6818      	ldr	r0, [r3, #0]
1001bfa2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001bfa4:	f840 3024 	str.w	r3, [r0, r4, lsl #2]
1001bfa8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001bfaa:	f8c7 b030 	str.w	fp, [r7, #48]	@ 0x30
1001bfae:	3401      	adds	r4, #1
1001bfb0:	80dc      	strh	r4, [r3, #6]
1001bfb2:	2320      	movs	r3, #32
1001bfb4:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001bfb6:	6a7c      	ldr	r4, [r7, #36]	@ 0x24
1001bfb8:	f8c7 801c 	str.w	r8, [r7, #28]
1001bfbc:	2600      	movs	r6, #0
1001bfbe:	647a      	str	r2, [r7, #68]	@ 0x44
1001bfc0:	46a8      	mov	r8, r5
1001bfc2:	f7fc f85f 	bl	10018084 <__locale_mb_cur_max>
1001bfc6:	42b0      	cmp	r0, r6
1001bfc8:	f43f ac54 	beq.w	1001b874 <__ssvfscanf_r+0xd8>
1001bfcc:	e9da 3200 	ldrd	r3, r2, [sl]
1001bfd0:	f507 70b8 	add.w	r0, r7, #368	@ 0x170
1001bfd4:	f813 1b01 	ldrb.w	r1, [r3], #1
1001bfd8:	5581      	strb	r1, [r0, r6]
1001bfda:	3a01      	subs	r2, #1
1001bfdc:	2c03      	cmp	r4, #3
1001bfde:	e9ca 3200 	strd	r3, r2, [sl]
1001bfe2:	f106 0601 	add.w	r6, r6, #1
1001bfe6:	f107 0560 	add.w	r5, r7, #96	@ 0x60
1001bfea:	d102      	bne.n	1001bff2 <__ssvfscanf_r+0x856>
1001bfec:	682b      	ldr	r3, [r5, #0]
1001bfee:	2b04      	cmp	r3, #4
1001bff0:	d004      	beq.n	1001bffc <__ssvfscanf_r+0x860>
1001bff2:	2208      	movs	r2, #8
1001bff4:	2100      	movs	r1, #0
1001bff6:	4628      	mov	r0, r5
1001bff8:	f7fb ffbe 	bl	10017f78 <memset>
1001bffc:	9500      	str	r5, [sp, #0]
1001bffe:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c000:	4633      	mov	r3, r6
1001c002:	f507 72b8 	add.w	r2, r7, #368	@ 0x170
1001c006:	4659      	mov	r1, fp
1001c008:	f003 fa2e 	bl	1001f468 <_mbrtowc_r>
1001c00c:	4604      	mov	r4, r0
1001c00e:	1c60      	adds	r0, r4, #1
1001c010:	f43f ac30 	beq.w	1001b874 <__ssvfscanf_r+0xd8>
1001c014:	2c00      	cmp	r4, #0
1001c016:	f040 83f2 	bne.w	1001c7fe <__ssvfscanf_r+0x1062>
1001c01a:	f8cb 4000 	str.w	r4, [fp]
1001c01e:	4623      	mov	r3, r4
1001c020:	2208      	movs	r2, #8
1001c022:	2100      	movs	r1, #0
1001c024:	f107 0068 	add.w	r0, r7, #104	@ 0x68
1001c028:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c02a:	f7fb ffa5 	bl	10017f78 <memset>
1001c02e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c030:	461a      	mov	r2, r3
1001c032:	4b33      	ldr	r3, [pc, #204]	@ (1001c100 <__ssvfscanf_r+0x964>)
1001c034:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
1001c038:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c03a:	e9d7 c012 	ldrd	ip, r0, [r7, #72]	@ 0x48
1001c03e:	f107 0368 	add.w	r3, r7, #104	@ 0x68
1001c042:	f107 0150 	add.w	r1, r7, #80	@ 0x50
1001c046:	47e0      	blx	ip
1001c048:	2801      	cmp	r0, #1
1001c04a:	bf0c      	ite	eq
1001c04c:	f897 3050 	ldrbeq.w	r3, [r7, #80]	@ 0x50
1001c050:	2300      	movne	r3, #0
1001c052:	f107 0270 	add.w	r2, r7, #112	@ 0x70
1001c056:	5cd3      	ldrb	r3, [r2, r3]
1001c058:	2b00      	cmp	r3, #0
1001c05a:	f000 863e 	beq.w	1001ccda <__ssvfscanf_r+0x153e>
1001c05e:	2c03      	cmp	r4, #3
1001c060:	44b1      	add	r9, r6
1001c062:	f000 83d5 	beq.w	1001c810 <__ssvfscanf_r+0x1074>
1001c066:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
1001c06a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c06c:	2b00      	cmp	r3, #0
1001c06e:	f040 83c4 	bne.w	1001c7fa <__ssvfscanf_r+0x105e>
1001c072:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c074:	f10b 0b04 	add.w	fp, fp, #4
1001c078:	2b00      	cmp	r3, #0
1001c07a:	f000 83be 	beq.w	1001c7fa <__ssvfscanf_r+0x105e>
1001c07e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c080:	ebab 0503 	sub.w	r5, fp, r3
1001c084:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001c086:	ebb3 0fa5 	cmp.w	r3, r5, asr #2
1001c08a:	f240 83d8 	bls.w	1001c83e <__ssvfscanf_r+0x10a2>
1001c08e:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
1001c090:	f8da 3004 	ldr.w	r3, [sl, #4]
1001c094:	2b00      	cmp	r3, #0
1001c096:	f340 82a3 	ble.w	1001c5e0 <__ssvfscanf_r+0xe44>
1001c09a:	f1b8 0f00 	cmp.w	r8, #0
1001c09e:	d190      	bne.n	1001bfc2 <__ssvfscanf_r+0x826>
1001c0a0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001c0a2:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001c0a6:	627c      	str	r4, [r7, #36]	@ 0x24
1001c0a8:	b97a      	cbnz	r2, 1001c0ca <__ssvfscanf_r+0x92e>
1001c0aa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c0ac:	f8cb 2000 	str.w	r2, [fp]
1001c0b0:	b143      	cbz	r3, 1001c0c4 <__ssvfscanf_r+0x928>
1001c0b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c0b4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
1001c0b6:	ebab 0303 	sub.w	r3, fp, r3
1001c0ba:	109a      	asrs	r2, r3, #2
1001c0bc:	3201      	adds	r2, #1
1001c0be:	4291      	cmp	r1, r2
1001c0c0:	f200 86a7 	bhi.w	1001ce12 <__ssvfscanf_r+0x1676>
1001c0c4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001c0c6:	3301      	adds	r3, #1
1001c0c8:	643b      	str	r3, [r7, #64]	@ 0x40
1001c0ca:	6a3b      	ldr	r3, [r7, #32]
1001c0cc:	637b      	str	r3, [r7, #52]	@ 0x34
1001c0ce:	f7ff bb8b 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001c0d2:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c0d4:	050e      	lsls	r6, r1, #20
1001c0d6:	f57f ad7c 	bpl.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c0da:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c0dc:	191b      	adds	r3, r3, r4
1001c0de:	f47f ad78 	bne.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c0e2:	461c      	mov	r4, r3
1001c0e4:	f421 73c0 	bic.w	r3, r1, #384	@ 0x180
1001c0e8:	e9c7 4311 	strd	r4, r3, [r7, #68]	@ 0x44
1001c0ec:	e55c      	b.n	1001bba8 <__ssvfscanf_r+0x40c>
1001c0ee:	4b05      	ldr	r3, [pc, #20]	@ (1001c104 <__ssvfscanf_r+0x968>)
1001c0f0:	f424 6438 	bic.w	r4, r4, #2944	@ 0xb80
1001c0f4:	f933 2012 	ldrsh.w	r2, [r3, r2, lsl #1]
1001c0f8:	e636      	b.n	1001bd68 <__ssvfscanf_r+0x5cc>
1001c0fa:	bf00      	nop
1001c0fc:	10023b6d 	.word	0x10023b6d
1001c100:	2000042c 	.word	0x2000042c
1001c104:	10023d20 	.word	0x10023d20
1001c108:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c10a:	f401 6318 	and.w	r3, r1, #2432	@ 0x980
1001c10e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
1001c112:	f47f ad5e 	bne.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c116:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c118:	2b01      	cmp	r3, #1
1001c11a:	f47f ad5a 	bne.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c11e:	f421 7380 	bic.w	r3, r1, #256	@ 0x100
1001c122:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
1001c126:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c128:	2330      	movs	r3, #48	@ 0x30
1001c12a:	f80b 3b01 	strb.w	r3, [fp], #1
1001c12e:	2300      	movs	r3, #0
1001c130:	3d01      	subs	r5, #1
1001c132:	633b      	str	r3, [r7, #48]	@ 0x30
1001c134:	e538      	b.n	1001bba8 <__ssvfscanf_r+0x40c>
1001c136:	2c06      	cmp	r4, #6
1001c138:	f47f ad4b 	bne.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c13c:	2407      	movs	r4, #7
1001c13e:	e533      	b.n	1001bba8 <__ssvfscanf_r+0x40c>
1001c140:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c142:	051e      	lsls	r6, r3, #20
1001c144:	f57f ad45 	bpl.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c148:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c14a:	f401 63a0 	and.w	r3, r1, #1280	@ 0x500
1001c14e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
1001c152:	d005      	beq.n	1001c160 <__ssvfscanf_r+0x9c4>
1001c154:	0549      	lsls	r1, r1, #21
1001c156:	f57f ad3c 	bpl.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c15a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c15c:	2b00      	cmp	r3, #0
1001c15e:	d048      	beq.n	1001c1f2 <__ssvfscanf_r+0xa56>
1001c160:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c162:	059b      	lsls	r3, r3, #22
1001c164:	d404      	bmi.n	1001c170 <__ssvfscanf_r+0x9d4>
1001c166:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c168:	69b9      	ldr	r1, [r7, #24]
1001c16a:	1a5b      	subs	r3, r3, r1
1001c16c:	e9c7 b304 	strd	fp, r3, [r7, #16]
1001c170:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c172:	f423 6378 	bic.w	r3, r3, #3968	@ 0xf80
1001c176:	f443 73c0 	orr.w	r3, r3, #384	@ 0x180
1001c17a:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c17c:	2300      	movs	r3, #0
1001c17e:	633b      	str	r3, [r7, #48]	@ 0x30
1001c180:	e512      	b.n	1001bba8 <__ssvfscanf_r+0x40c>
1001c182:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c184:	2b00      	cmp	r3, #0
1001c186:	f040 821d 	bne.w	1001c5c4 <__ssvfscanf_r+0xe28>
1001c18a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c18c:	b933      	cbnz	r3, 1001c19c <__ssvfscanf_r+0xa00>
1001c18e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c190:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
1001c194:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
1001c198:	f000 8606 	beq.w	1001cda8 <__ssvfscanf_r+0x160c>
1001c19c:	2c01      	cmp	r4, #1
1001c19e:	f000 820d 	beq.w	1001c5bc <__ssvfscanf_r+0xe20>
1001c1a2:	2c04      	cmp	r4, #4
1001c1a4:	f000 820a 	beq.w	1001c5bc <__ssvfscanf_r+0xe20>
1001c1a8:	e513      	b.n	1001bbd2 <__ssvfscanf_r+0x436>
1001c1aa:	2c07      	cmp	r4, #7
1001c1ac:	f47f ad11 	bne.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c1b0:	2408      	movs	r4, #8
1001c1b2:	e4f9      	b.n	1001bba8 <__ssvfscanf_r+0x40c>
1001c1b4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c1b6:	0519      	lsls	r1, r3, #20
1001c1b8:	f100 820c 	bmi.w	1001c5d4 <__ssvfscanf_r+0xe38>
1001c1bc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c1be:	2b01      	cmp	r3, #1
1001c1c0:	f47f ad07 	bne.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c1c4:	2302      	movs	r3, #2
1001c1c6:	647b      	str	r3, [r7, #68]	@ 0x44
1001c1c8:	e4ee      	b.n	1001bba8 <__ssvfscanf_r+0x40c>
1001c1ca:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c1cc:	0618      	lsls	r0, r3, #24
1001c1ce:	f57f ad00 	bpl.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c1d2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
1001c1d6:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c1d8:	e4e6      	b.n	1001bba8 <__ssvfscanf_r+0x40c>
1001c1da:	2c00      	cmp	r4, #0
1001c1dc:	f040 81e9 	bne.w	1001c5b2 <__ssvfscanf_r+0xe16>
1001c1e0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c1e2:	bb8b      	cbnz	r3, 1001c248 <__ssvfscanf_r+0xaac>
1001c1e4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c1e6:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
1001c1ea:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
1001c1ee:	f000 85cd 	beq.w	1001cd8c <__ssvfscanf_r+0x15f0>
1001c1f2:	2300      	movs	r3, #0
1001c1f4:	f8d7 8020 	ldr.w	r8, [r7, #32]
1001c1f8:	633b      	str	r3, [r7, #48]	@ 0x30
1001c1fa:	e4f0      	b.n	1001bbde <__ssvfscanf_r+0x442>
1001c1fc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c1fe:	051b      	lsls	r3, r3, #20
1001c200:	f100 81d1 	bmi.w	1001c5a6 <__ssvfscanf_r+0xe0a>
1001c204:	2c02      	cmp	r4, #2
1001c206:	f47f ace4 	bne.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c20a:	2403      	movs	r4, #3
1001c20c:	e4cc      	b.n	1001bba8 <__ssvfscanf_r+0x40c>
1001c20e:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c210:	0508      	lsls	r0, r1, #20
1001c212:	d599      	bpl.n	1001c148 <__ssvfscanf_r+0x9ac>
1001c214:	e761      	b.n	1001c0da <__ssvfscanf_r+0x93e>
1001c216:	f404 63c0 	and.w	r3, r4, #1536	@ 0x600
1001c21a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
1001c21e:	f47f adb2 	bne.w	1001bd86 <__ssvfscanf_r+0x5ea>
1001c222:	f424 7400 	bic.w	r4, r4, #512	@ 0x200
1001c226:	f444 64a0 	orr.w	r4, r4, #1280	@ 0x500
1001c22a:	2210      	movs	r2, #16
1001c22c:	e59c      	b.n	1001bd68 <__ssvfscanf_r+0x5cc>
1001c22e:	0623      	lsls	r3, r4, #24
1001c230:	f57f ada9 	bpl.w	1001bd86 <__ssvfscanf_r+0x5ea>
1001c234:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
1001c238:	e596      	b.n	1001bd68 <__ssvfscanf_r+0x5cc>
1001c23a:	4b94      	ldr	r3, [pc, #592]	@ (1001c48c <__ssvfscanf_r+0xcf0>)
1001c23c:	f933 2012 	ldrsh.w	r2, [r3, r2, lsl #1]
1001c240:	2a08      	cmp	r2, #8
1001c242:	f73f ad8f 	bgt.w	1001bd64 <__ssvfscanf_r+0x5c8>
1001c246:	e59e      	b.n	1001bd86 <__ssvfscanf_r+0x5ea>
1001c248:	f8d7 8020 	ldr.w	r8, [r7, #32]
1001c24c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c24e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
1001c252:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c254:	e4c3      	b.n	1001bbde <__ssvfscanf_r+0x442>
1001c256:	f044 0401 	orr.w	r4, r4, #1
1001c25a:	f8da 3004 	ldr.w	r3, [sl, #4]
1001c25e:	2b00      	cmp	r3, #0
1001c260:	4688      	mov	r8, r1
1001c262:	f04f 0b02 	mov.w	fp, #2
1001c266:	f73f abb8 	bgt.w	1001b9da <__ssvfscanf_r+0x23e>
1001c26a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c26c:	4651      	mov	r1, sl
1001c26e:	f004 f83d 	bl	100202ec <__ssrefill_r>
1001c272:	2800      	cmp	r0, #0
1001c274:	f47f aafe 	bne.w	1001b874 <__ssvfscanf_r+0xd8>
1001c278:	0660      	lsls	r0, r4, #25
1001c27a:	f53f abb1 	bmi.w	1001b9e0 <__ssvfscanf_r+0x244>
1001c27e:	f8da 2000 	ldr.w	r2, [sl]
1001c282:	4e83      	ldr	r6, [pc, #524]	@ (1001c490 <__ssvfscanf_r+0xcf4>)
1001c284:	7813      	ldrb	r3, [r2, #0]
1001c286:	5cf3      	ldrb	r3, [r6, r3]
1001c288:	0719      	lsls	r1, r3, #28
1001c28a:	f57f aba9 	bpl.w	1001b9e0 <__ssvfscanf_r+0x244>
1001c28e:	4633      	mov	r3, r6
1001c290:	4656      	mov	r6, sl
1001c292:	469a      	mov	sl, r3
1001c294:	e005      	b.n	1001c2a2 <__ssvfscanf_r+0xb06>
1001c296:	6032      	str	r2, [r6, #0]
1001c298:	7813      	ldrb	r3, [r2, #0]
1001c29a:	f81a 3003 	ldrb.w	r3, [sl, r3]
1001c29e:	071b      	lsls	r3, r3, #28
1001c2a0:	d515      	bpl.n	1001c2ce <__ssvfscanf_r+0xb32>
1001c2a2:	6873      	ldr	r3, [r6, #4]
1001c2a4:	3b01      	subs	r3, #1
1001c2a6:	2b00      	cmp	r3, #0
1001c2a8:	f109 0901 	add.w	r9, r9, #1
1001c2ac:	6073      	str	r3, [r6, #4]
1001c2ae:	f102 0201 	add.w	r2, r2, #1
1001c2b2:	dcf0      	bgt.n	1001c296 <__ssvfscanf_r+0xafa>
1001c2b4:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c2b6:	4631      	mov	r1, r6
1001c2b8:	f004 f818 	bl	100202ec <__ssrefill_r>
1001c2bc:	2800      	cmp	r0, #0
1001c2be:	f040 82e3 	bne.w	1001c888 <__ssvfscanf_r+0x10ec>
1001c2c2:	6832      	ldr	r2, [r6, #0]
1001c2c4:	7813      	ldrb	r3, [r2, #0]
1001c2c6:	f81a 3003 	ldrb.w	r3, [sl, r3]
1001c2ca:	071b      	lsls	r3, r3, #28
1001c2cc:	d4e9      	bmi.n	1001c2a2 <__ssvfscanf_r+0xb06>
1001c2ce:	46b2      	mov	sl, r6
1001c2d0:	f7ff bb86 	b.w	1001b9e0 <__ssvfscanf_r+0x244>
1001c2d4:	f044 0401 	orr.w	r4, r4, #1
1001c2d8:	4b6e      	ldr	r3, [pc, #440]	@ (1001c494 <__ssvfscanf_r+0xcf8>)
1001c2da:	62bb      	str	r3, [r7, #40]	@ 0x28
1001c2dc:	230a      	movs	r3, #10
1001c2de:	4688      	mov	r8, r1
1001c2e0:	63bb      	str	r3, [r7, #56]	@ 0x38
1001c2e2:	f04f 0b03 	mov.w	fp, #3
1001c2e6:	f7ff bb73 	b.w	1001b9d0 <__ssvfscanf_r+0x234>
1001c2ea:	f044 0401 	orr.w	r4, r4, #1
1001c2ee:	4b6a      	ldr	r3, [pc, #424]	@ (1001c498 <__ssvfscanf_r+0xcfc>)
1001c2f0:	62bb      	str	r3, [r7, #40]	@ 0x28
1001c2f2:	2308      	movs	r3, #8
1001c2f4:	4688      	mov	r8, r1
1001c2f6:	63bb      	str	r3, [r7, #56]	@ 0x38
1001c2f8:	f04f 0b03 	mov.w	fp, #3
1001c2fc:	f7ff bb68 	b.w	1001b9d0 <__ssvfscanf_r+0x234>
1001c300:	0523      	lsls	r3, r4, #20
1001c302:	f57f ad31 	bpl.w	1001bd68 <__ssvfscanf_r+0x5cc>
1001c306:	b912      	cbnz	r2, 1001c30e <__ssvfscanf_r+0xb72>
1001c308:	f444 7400 	orr.w	r4, r4, #512	@ 0x200
1001c30c:	2208      	movs	r2, #8
1001c30e:	0561      	lsls	r1, r4, #21
1001c310:	f100 819e 	bmi.w	1001c650 <__ssvfscanf_r+0xeb4>
1001c314:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c316:	f424 7460 	bic.w	r4, r4, #896	@ 0x380
1001c31a:	b113      	cbz	r3, 1001c322 <__ssvfscanf_r+0xb86>
1001c31c:	3b01      	subs	r3, #1
1001c31e:	647b      	str	r3, [r7, #68]	@ 0x44
1001c320:	3501      	adds	r5, #1
1001c322:	f8d9 3004 	ldr.w	r3, [r9, #4]
1001c326:	3b01      	subs	r3, #1
1001c328:	2b00      	cmp	r3, #0
1001c32a:	f10b 0b01 	add.w	fp, fp, #1
1001c32e:	f8c9 3004 	str.w	r3, [r9, #4]
1001c332:	f73f ad23 	bgt.w	1001bd7c <__ssvfscanf_r+0x5e0>
1001c336:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c338:	64ba      	str	r2, [r7, #72]	@ 0x48
1001c33a:	4649      	mov	r1, r9
1001c33c:	f003 ffd6 	bl	100202ec <__ssrefill_r>
1001c340:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001c342:	2800      	cmp	r0, #0
1001c344:	f43f ad1d 	beq.w	1001bd82 <__ssvfscanf_r+0x5e6>
1001c348:	e51d      	b.n	1001bd86 <__ssvfscanf_r+0x5ea>
1001c34a:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
1001c34c:	45ab      	cmp	fp, r5
1001c34e:	f240 8114 	bls.w	1001c57a <__ssvfscanf_r+0xdde>
1001c352:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001c354:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001c358:	4652      	mov	r2, sl
1001c35a:	4620      	mov	r0, r4
1001c35c:	f003 ff8a 	bl	10020274 <_sungetc_r>
1001c360:	45ab      	cmp	fp, r5
1001c362:	d1f7      	bne.n	1001c354 <__ssvfscanf_r+0xbb8>
1001c364:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c366:	f7ff ba90 	b.w	1001b88a <__ssvfscanf_r+0xee>
1001c36a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c36c:	4651      	mov	r1, sl
1001c36e:	f003 ffbd 	bl	100202ec <__ssrefill_r>
1001c372:	2800      	cmp	r0, #0
1001c374:	f47f ac2d 	bne.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c378:	2d00      	cmp	r5, #0
1001c37a:	f47f ab66 	bne.w	1001ba4a <__ssvfscanf_r+0x2ae>
1001c37e:	e428      	b.n	1001bbd2 <__ssvfscanf_r+0x436>
1001c380:	f8da 2004 	ldr.w	r2, [sl, #4]
1001c384:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001c386:	e010      	b.n	1001c3aa <__ssvfscanf_r+0xc0e>
1001c388:	f8da 3000 	ldr.w	r3, [sl]
1001c38c:	4940      	ldr	r1, [pc, #256]	@ (1001c490 <__ssvfscanf_r+0xcf4>)
1001c38e:	781a      	ldrb	r2, [r3, #0]
1001c390:	5c8a      	ldrb	r2, [r1, r2]
1001c392:	0711      	lsls	r1, r2, #28
1001c394:	f103 0301 	add.w	r3, r3, #1
1001c398:	f57f aa26 	bpl.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001c39c:	f8da 2004 	ldr.w	r2, [sl, #4]
1001c3a0:	3a01      	subs	r2, #1
1001c3a2:	e9ca 3200 	strd	r3, r2, [sl]
1001c3a6:	f109 0901 	add.w	r9, r9, #1
1001c3aa:	2a00      	cmp	r2, #0
1001c3ac:	dcec      	bgt.n	1001c388 <__ssvfscanf_r+0xbec>
1001c3ae:	4651      	mov	r1, sl
1001c3b0:	4620      	mov	r0, r4
1001c3b2:	f003 ff9b 	bl	100202ec <__ssrefill_r>
1001c3b6:	2800      	cmp	r0, #0
1001c3b8:	d0e6      	beq.n	1001c388 <__ssvfscanf_r+0xbec>
1001c3ba:	f7ff ba15 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001c3be:	2b00      	cmp	r3, #0
1001c3c0:	f040 8395 	bne.w	1001caee <__ssvfscanf_r+0x1352>
1001c3c4:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
1001c3c8:	f014 0280 	ands.w	r2, r4, #128	@ 0x80
1001c3cc:	f85b 6b04 	ldr.w	r6, [fp], #4
1001c3d0:	64be      	str	r6, [r7, #72]	@ 0x48
1001c3d2:	f000 8446 	beq.w	1001cc62 <__ssvfscanf_r+0x14c6>
1001c3d6:	2e00      	cmp	r6, #0
1001c3d8:	d0c4      	beq.n	1001c364 <__ssvfscanf_r+0xbc8>
1001c3da:	2020      	movs	r0, #32
1001c3dc:	f7f7 fc3e 	bl	10013c5c <malloc>
1001c3e0:	4604      	mov	r4, r0
1001c3e2:	2800      	cmp	r0, #0
1001c3e4:	f000 842d 	beq.w	1001cc42 <__ssvfscanf_r+0x14a6>
1001c3e8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c3ea:	6030      	str	r0, [r6, #0]
1001c3ec:	889a      	ldrh	r2, [r3, #4]
1001c3ee:	88de      	ldrh	r6, [r3, #6]
1001c3f0:	4296      	cmp	r6, r2
1001c3f2:	f080 8273 	bcs.w	1001c8dc <__ssvfscanf_r+0x1140>
1001c3f6:	6818      	ldr	r0, [r3, #0]
1001c3f8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c3fa:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
1001c3fe:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c400:	3601      	adds	r6, #1
1001c402:	80de      	strh	r6, [r3, #6]
1001c404:	2320      	movs	r3, #32
1001c406:	647b      	str	r3, [r7, #68]	@ 0x44
1001c408:	f8da 0000 	ldr.w	r0, [sl]
1001c40c:	4e20      	ldr	r6, [pc, #128]	@ (1001c490 <__ssvfscanf_r+0xcf4>)
1001c40e:	7802      	ldrb	r2, [r0, #0]
1001c410:	5cb2      	ldrb	r2, [r6, r2]
1001c412:	0713      	lsls	r3, r2, #28
1001c414:	f100 82e4 	bmi.w	1001c9e0 <__ssvfscanf_r+0x1244>
1001c418:	4643      	mov	r3, r8
1001c41a:	4622      	mov	r2, r4
1001c41c:	46b0      	mov	r8, r6
1001c41e:	4626      	mov	r6, r4
1001c420:	f8da 1004 	ldr.w	r1, [sl, #4]
1001c424:	3901      	subs	r1, #1
1001c426:	f8ca 1004 	str.w	r1, [sl, #4]
1001c42a:	1c41      	adds	r1, r0, #1
1001c42c:	f8ca 1000 	str.w	r1, [sl]
1001c430:	4634      	mov	r4, r6
1001c432:	7801      	ldrb	r1, [r0, #0]
1001c434:	f804 1b01 	strb.w	r1, [r4], #1
1001c438:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c43a:	b121      	cbz	r1, 1001c446 <__ssvfscanf_r+0xcaa>
1001c43c:	6c79      	ldr	r1, [r7, #68]	@ 0x44
1001c43e:	1aa6      	subs	r6, r4, r2
1001c440:	428e      	cmp	r6, r1
1001c442:	f080 8419 	bcs.w	1001cc78 <__ssvfscanf_r+0x14dc>
1001c446:	3d01      	subs	r5, #1
1001c448:	d00c      	beq.n	1001c464 <__ssvfscanf_r+0xcc8>
1001c44a:	f8da 1004 	ldr.w	r1, [sl, #4]
1001c44e:	2900      	cmp	r1, #0
1001c450:	4626      	mov	r6, r4
1001c452:	f340 8462 	ble.w	1001cd1a <__ssvfscanf_r+0x157e>
1001c456:	f8da 0000 	ldr.w	r0, [sl]
1001c45a:	7801      	ldrb	r1, [r0, #0]
1001c45c:	f818 1001 	ldrb.w	r1, [r8, r1]
1001c460:	0709      	lsls	r1, r1, #28
1001c462:	d5dd      	bpl.n	1001c420 <__ssvfscanf_r+0xc84>
1001c464:	1aa2      	subs	r2, r4, r2
1001c466:	4698      	mov	r8, r3
1001c468:	4491      	add	r9, r2
1001c46a:	1c51      	adds	r1, r2, #1
1001c46c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c46e:	2200      	movs	r2, #0
1001c470:	7022      	strb	r2, [r4, #0]
1001c472:	b11b      	cbz	r3, 1001c47c <__ssvfscanf_r+0xce0>
1001c474:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c476:	428b      	cmp	r3, r1
1001c478:	f200 8445 	bhi.w	1001cd06 <__ssvfscanf_r+0x156a>
1001c47c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001c47e:	f8c7 b034 	str.w	fp, [r7, #52]	@ 0x34
1001c482:	3301      	adds	r3, #1
1001c484:	643b      	str	r3, [r7, #64]	@ 0x40
1001c486:	f7ff b9af 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001c48a:	bf00      	nop
1001c48c:	10023d20 	.word	0x10023d20
1001c490:	10023b6d 	.word	0x10023b6d
1001c494:	1001edc9 	.word	0x1001edc9
1001c498:	1001ef01 	.word	0x1001ef01
1001c49c:	2a00      	cmp	r2, #0
1001c49e:	f040 816e 	bne.w	1001c77e <__ssvfscanf_r+0xfe2>
1001c4a2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c4a4:	f014 0480 	ands.w	r4, r4, #128	@ 0x80
1001c4a8:	f853 bb04 	ldr.w	fp, [r3], #4
1001c4ac:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c4ae:	f000 8409 	beq.w	1001ccc4 <__ssvfscanf_r+0x1528>
1001c4b2:	f1bb 0f00 	cmp.w	fp, #0
1001c4b6:	f43f af55 	beq.w	1001c364 <__ssvfscanf_r+0xbc8>
1001c4ba:	2020      	movs	r0, #32
1001c4bc:	f7f7 fbce 	bl	10013c5c <malloc>
1001c4c0:	4606      	mov	r6, r0
1001c4c2:	2800      	cmp	r0, #0
1001c4c4:	f000 83bd 	beq.w	1001cc42 <__ssvfscanf_r+0x14a6>
1001c4c8:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001c4ca:	f8cb 0000 	str.w	r0, [fp]
1001c4ce:	88d4      	ldrh	r4, [r2, #6]
1001c4d0:	8893      	ldrh	r3, [r2, #4]
1001c4d2:	429c      	cmp	r4, r3
1001c4d4:	f080 8286 	bcs.w	1001c9e4 <__ssvfscanf_r+0x1248>
1001c4d8:	6810      	ldr	r0, [r2, #0]
1001c4da:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c4dc:	f840 b024 	str.w	fp, [r0, r4, lsl #2]
1001c4e0:	3401      	adds	r4, #1
1001c4e2:	80dc      	strh	r4, [r3, #6]
1001c4e4:	2320      	movs	r3, #32
1001c4e6:	f8da 1000 	ldr.w	r1, [sl]
1001c4ea:	f107 0270 	add.w	r2, r7, #112	@ 0x70
1001c4ee:	7808      	ldrb	r0, [r1, #0]
1001c4f0:	5c10      	ldrb	r0, [r2, r0]
1001c4f2:	2800      	cmp	r0, #0
1001c4f4:	f43f af36 	beq.w	1001c364 <__ssvfscanf_r+0xbc8>
1001c4f8:	f8c7 9044 	str.w	r9, [r7, #68]	@ 0x44
1001c4fc:	f8c7 8034 	str.w	r8, [r7, #52]	@ 0x34
1001c500:	46d9      	mov	r9, fp
1001c502:	4634      	mov	r4, r6
1001c504:	4698      	mov	r8, r3
1001c506:	4693      	mov	fp, r2
1001c508:	f8da 0004 	ldr.w	r0, [sl, #4]
1001c50c:	1c4b      	adds	r3, r1, #1
1001c50e:	3801      	subs	r0, #1
1001c510:	e9ca 3000 	strd	r3, r0, [sl]
1001c514:	4630      	mov	r0, r6
1001c516:	7809      	ldrb	r1, [r1, #0]
1001c518:	f800 1b01 	strb.w	r1, [r0], #1
1001c51c:	f1b9 0f00 	cmp.w	r9, #0
1001c520:	d002      	beq.n	1001c528 <__ssvfscanf_r+0xd8c>
1001c522:	1b06      	subs	r6, r0, r4
1001c524:	4546      	cmp	r6, r8
1001c526:	d26b      	bcs.n	1001c600 <__ssvfscanf_r+0xe64>
1001c528:	4606      	mov	r6, r0
1001c52a:	3d01      	subs	r5, #1
1001c52c:	d00b      	beq.n	1001c546 <__ssvfscanf_r+0xdaa>
1001c52e:	f8da 1004 	ldr.w	r1, [sl, #4]
1001c532:	2900      	cmp	r1, #0
1001c534:	f340 8171 	ble.w	1001c81a <__ssvfscanf_r+0x107e>
1001c538:	f8da 1000 	ldr.w	r1, [sl]
1001c53c:	7808      	ldrb	r0, [r1, #0]
1001c53e:	f81b 0000 	ldrb.w	r0, [fp, r0]
1001c542:	2800      	cmp	r0, #0
1001c544:	d1e0      	bne.n	1001c508 <__ssvfscanf_r+0xd6c>
1001c546:	1b34      	subs	r4, r6, r4
1001c548:	46cb      	mov	fp, r9
1001c54a:	4643      	mov	r3, r8
1001c54c:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
1001c550:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
1001c554:	f43f af06 	beq.w	1001c364 <__ssvfscanf_r+0xbc8>
1001c558:	2200      	movs	r2, #0
1001c55a:	7032      	strb	r2, [r6, #0]
1001c55c:	f1bb 0f00 	cmp.w	fp, #0
1001c560:	d003      	beq.n	1001c56a <__ssvfscanf_r+0xdce>
1001c562:	1c61      	adds	r1, r4, #1
1001c564:	428b      	cmp	r3, r1
1001c566:	f200 83e5 	bhi.w	1001cd34 <__ssvfscanf_r+0x1598>
1001c56a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001c56c:	3301      	adds	r3, #1
1001c56e:	643b      	str	r3, [r7, #64]	@ 0x40
1001c570:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c572:	637b      	str	r3, [r7, #52]	@ 0x34
1001c574:	44a1      	add	r9, r4
1001c576:	f7ff b937 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001c57a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c57c:	2b00      	cmp	r3, #0
1001c57e:	f47f a986 	bne.w	1001b88e <__ssvfscanf_r+0xf2>
1001c582:	f7ff b988 	b.w	1001b896 <__ssvfscanf_r+0xfa>
1001c586:	f014 0f8f 	tst.w	r4, #143	@ 0x8f
1001c58a:	f47f aeeb 	bne.w	1001c364 <__ssvfscanf_r+0xbc8>
1001c58e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
1001c592:	eb02 0545 	add.w	r5, r2, r5, lsl #1
1001c596:	3d30      	subs	r5, #48	@ 0x30
1001c598:	f7ff ba06 	b.w	1001b9a8 <__ssvfscanf_r+0x20c>
1001c59c:	4688      	mov	r8, r1
1001c59e:	f04f 0b04 	mov.w	fp, #4
1001c5a2:	f7ff ba15 	b.w	1001b9d0 <__ssvfscanf_r+0x234>
1001c5a6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c5a8:	191b      	adds	r3, r3, r4
1001c5aa:	f47f ae2b 	bne.w	1001c204 <__ssvfscanf_r+0xa68>
1001c5ae:	f7ff baf5 	b.w	1001bb9c <__ssvfscanf_r+0x400>
1001c5b2:	2c03      	cmp	r4, #3
1001c5b4:	d002      	beq.n	1001c5bc <__ssvfscanf_r+0xe20>
1001c5b6:	2c05      	cmp	r4, #5
1001c5b8:	f47f ab0b 	bne.w	1001bbd2 <__ssvfscanf_r+0x436>
1001c5bc:	3401      	adds	r4, #1
1001c5be:	b2e4      	uxtb	r4, r4
1001c5c0:	f7ff baf2 	b.w	1001bba8 <__ssvfscanf_r+0x40c>
1001c5c4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c5c6:	2b02      	cmp	r3, #2
1001c5c8:	f47f ade8 	bne.w	1001c19c <__ssvfscanf_r+0xa00>
1001c5cc:	2303      	movs	r3, #3
1001c5ce:	647b      	str	r3, [r7, #68]	@ 0x44
1001c5d0:	f7ff baea 	b.w	1001bba8 <__ssvfscanf_r+0x40c>
1001c5d4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c5d6:	191b      	adds	r3, r3, r4
1001c5d8:	f47f adf0 	bne.w	1001c1bc <__ssvfscanf_r+0xa20>
1001c5dc:	f7ff bade 	b.w	1001bb9c <__ssvfscanf_r+0x400>
1001c5e0:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c5e2:	4651      	mov	r1, sl
1001c5e4:	f003 fe82 	bl	100202ec <__ssrefill_r>
1001c5e8:	2800      	cmp	r0, #0
1001c5ea:	f43f ad56 	beq.w	1001c09a <__ssvfscanf_r+0x8fe>
1001c5ee:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001c5f0:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001c5f4:	627c      	str	r4, [r7, #36]	@ 0x24
1001c5f6:	2e00      	cmp	r6, #0
1001c5f8:	f43f ad56 	beq.w	1001c0a8 <__ssvfscanf_r+0x90c>
1001c5fc:	f7ff b93a 	b.w	1001b874 <__ssvfscanf_r+0xd8>
1001c600:	ea4f 0848 	mov.w	r8, r8, lsl #1
1001c604:	4620      	mov	r0, r4
1001c606:	4641      	mov	r1, r8
1001c608:	f7fa fd2e 	bl	10017068 <realloc>
1001c60c:	4604      	mov	r4, r0
1001c60e:	2800      	cmp	r0, #0
1001c610:	f000 8317 	beq.w	1001cc42 <__ssvfscanf_r+0x14a6>
1001c614:	4406      	add	r6, r0
1001c616:	f8c9 0000 	str.w	r0, [r9]
1001c61a:	e786      	b.n	1001c52a <__ssvfscanf_r+0xd8e>
1001c61c:	f444 7400 	orr.w	r4, r4, #512	@ 0x200
1001c620:	4bb8      	ldr	r3, [pc, #736]	@ (1001c904 <__ssvfscanf_r+0x1168>)
1001c622:	62bb      	str	r3, [r7, #40]	@ 0x28
1001c624:	2310      	movs	r3, #16
1001c626:	4688      	mov	r8, r1
1001c628:	63bb      	str	r3, [r7, #56]	@ 0x38
1001c62a:	f04f 0b03 	mov.w	fp, #3
1001c62e:	f7ff b9cf 	b.w	1001b9d0 <__ssvfscanf_r+0x234>
1001c632:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
1001c636:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c638:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c63a:	3301      	adds	r3, #1
1001c63c:	633b      	str	r3, [r7, #48]	@ 0x30
1001c63e:	68fb      	ldr	r3, [r7, #12]
1001c640:	2b00      	cmp	r3, #0
1001c642:	f43f aab3 	beq.w	1001bbac <__ssvfscanf_r+0x410>
1001c646:	68fb      	ldr	r3, [r7, #12]
1001c648:	3b01      	subs	r3, #1
1001c64a:	60fb      	str	r3, [r7, #12]
1001c64c:	f7ff baaf 	b.w	1001bbae <__ssvfscanf_r+0x412>
1001c650:	f424 64b0 	bic.w	r4, r4, #1408	@ 0x580
1001c654:	f7ff bb88 	b.w	1001bd68 <__ssvfscanf_r+0x5cc>
1001c658:	0722      	lsls	r2, r4, #28
1001c65a:	f140 8213 	bpl.w	1001ca84 <__ssvfscanf_r+0x12e8>
1001c65e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c660:	681b      	ldr	r3, [r3, #0]
1001c662:	7018      	strb	r0, [r3, #0]
1001c664:	f7ff bbae 	b.w	1001bdc4 <__ssvfscanf_r+0x628>
1001c668:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1001c66a:	69bb      	ldr	r3, [r7, #24]
1001c66c:	429a      	cmp	r2, r3
1001c66e:	f43f aaf0 	beq.w	1001bc52 <__ssvfscanf_r+0x4b6>
1001c672:	1a9a      	subs	r2, r3, r2
1001c674:	f207 23c3 	addw	r3, r7, #707	@ 0x2c3
1001c678:	459b      	cmp	fp, r3
1001c67a:	bf28      	it	cs
1001c67c:	f207 2bc2 	addwcs	fp, r7, #706	@ 0x2c2
1001c680:	49a1      	ldr	r1, [pc, #644]	@ (1001c908 <__ssvfscanf_r+0x116c>)
1001c682:	4658      	mov	r0, fp
1001c684:	f002 fc3e 	bl	1001ef04 <sprintf>
1001c688:	f7ff bae3 	b.w	1001bc52 <__ssvfscanf_r+0x4b6>
1001c68c:	f816 1c01 	ldrb.w	r1, [r6, #-1]
1001c690:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c692:	4652      	mov	r2, sl
1001c694:	3e01      	subs	r6, #1
1001c696:	f003 fded 	bl	10020274 <_sungetc_r>
1001c69a:	f7ff bb7e 	b.w	1001bd9a <__ssvfscanf_r+0x5fe>
1001c69e:	f107 0070 	add.w	r0, r7, #112	@ 0x70
1001c6a2:	f001 fabf 	bl	1001dc24 <__sccl>
1001c6a6:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
1001c6aa:	4680      	mov	r8, r0
1001c6ac:	f04f 0b01 	mov.w	fp, #1
1001c6b0:	f7ff b98e 	b.w	1001b9d0 <__ssvfscanf_r+0x234>
1001c6b4:	4b95      	ldr	r3, [pc, #596]	@ (1001c90c <__ssvfscanf_r+0x1170>)
1001c6b6:	62bb      	str	r3, [r7, #40]	@ 0x28
1001c6b8:	2300      	movs	r3, #0
1001c6ba:	4688      	mov	r8, r1
1001c6bc:	63bb      	str	r3, [r7, #56]	@ 0x38
1001c6be:	f04f 0b03 	mov.w	fp, #3
1001c6c2:	f7ff b985 	b.w	1001b9d0 <__ssvfscanf_r+0x234>
1001c6c6:	0723      	lsls	r3, r4, #28
1001c6c8:	f47f ae4c 	bne.w	1001c364 <__ssvfscanf_r+0xbc8>
1001c6cc:	f898 2001 	ldrb.w	r2, [r8, #1]
1001c6d0:	2a68      	cmp	r2, #104	@ 0x68
1001c6d2:	f000 81cf 	beq.w	1001ca74 <__ssvfscanf_r+0x12d8>
1001c6d6:	f044 0404 	orr.w	r4, r4, #4
1001c6da:	4688      	mov	r8, r1
1001c6dc:	f7ff b8fd 	b.w	1001b8da <__ssvfscanf_r+0x13e>
1001c6e0:	f444 7408 	orr.w	r4, r4, #544	@ 0x220
1001c6e4:	e79c      	b.n	1001c620 <__ssvfscanf_r+0xe84>
1001c6e6:	06e5      	lsls	r5, r4, #27
1001c6e8:	f100 80f5 	bmi.w	1001c8d6 <__ssvfscanf_r+0x113a>
1001c6ec:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c6ee:	0720      	lsls	r0, r4, #28
1001c6f0:	f853 2b04 	ldr.w	r2, [r3], #4
1001c6f4:	f100 81f8 	bmi.w	1001cae8 <__ssvfscanf_r+0x134c>
1001c6f8:	0766      	lsls	r6, r4, #29
1001c6fa:	f140 8325 	bpl.w	1001cd48 <__ssvfscanf_r+0x15ac>
1001c6fe:	f8a2 9000 	strh.w	r9, [r2]
1001c702:	637b      	str	r3, [r7, #52]	@ 0x34
1001c704:	4688      	mov	r8, r1
1001c706:	f7ff b86f 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001c70a:	f014 038f 	ands.w	r3, r4, #143	@ 0x8f
1001c70e:	f47f ae29 	bne.w	1001c364 <__ssvfscanf_r+0xbc8>
1001c712:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001c714:	2a00      	cmp	r2, #0
1001c716:	f000 82a9 	beq.w	1001cc6c <__ssvfscanf_r+0x14d0>
1001c71a:	f898 2001 	ldrb.w	r2, [r8, #1]
1001c71e:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
1001c722:	4688      	mov	r8, r1
1001c724:	f7ff b8d9 	b.w	1001b8da <__ssvfscanf_r+0x13e>
1001c728:	0722      	lsls	r2, r4, #28
1001c72a:	f47f ae1b 	bne.w	1001c364 <__ssvfscanf_r+0xbc8>
1001c72e:	f898 2001 	ldrb.w	r2, [r8, #1]
1001c732:	2a6c      	cmp	r2, #108	@ 0x6c
1001c734:	f000 8196 	beq.w	1001ca64 <__ssvfscanf_r+0x12c8>
1001c738:	f044 0401 	orr.w	r4, r4, #1
1001c73c:	4688      	mov	r8, r1
1001c73e:	f7ff b8cc 	b.w	1001b8da <__ssvfscanf_r+0x13e>
1001c742:	4b70      	ldr	r3, [pc, #448]	@ (1001c904 <__ssvfscanf_r+0x1168>)
1001c744:	62bb      	str	r3, [r7, #40]	@ 0x28
1001c746:	230a      	movs	r3, #10
1001c748:	4688      	mov	r8, r1
1001c74a:	63bb      	str	r3, [r7, #56]	@ 0x38
1001c74c:	f04f 0b03 	mov.w	fp, #3
1001c750:	f7ff b93e 	b.w	1001b9d0 <__ssvfscanf_r+0x234>
1001c754:	4325      	orrs	r5, r4
1001c756:	f47f ae05 	bne.w	1001c364 <__ssvfscanf_r+0xbc8>
1001c75a:	f898 2001 	ldrb.w	r2, [r8, #1]
1001c75e:	2410      	movs	r4, #16
1001c760:	4688      	mov	r8, r1
1001c762:	f7ff b8ba 	b.w	1001b8da <__ssvfscanf_r+0x13e>
1001c766:	4688      	mov	r8, r1
1001c768:	f7ff b858 	b.w	1001b81c <__ssvfscanf_r+0x80>
1001c76c:	f04f 0c00 	mov.w	ip, #0
1001c770:	46e6      	mov	lr, ip
1001c772:	f8c7 c048 	str.w	ip, [r7, #72]	@ 0x48
1001c776:	f107 0254 	add.w	r2, r7, #84	@ 0x54
1001c77a:	f7ff bb5e 	b.w	1001be3a <__ssvfscanf_r+0x69e>
1001c77e:	f8da 3000 	ldr.w	r3, [sl]
1001c782:	f107 0270 	add.w	r2, r7, #112	@ 0x70
1001c786:	7819      	ldrb	r1, [r3, #0]
1001c788:	5c51      	ldrb	r1, [r2, r1]
1001c78a:	2900      	cmp	r1, #0
1001c78c:	f43f aef5 	beq.w	1001c57a <__ssvfscanf_r+0xdde>
1001c790:	3301      	adds	r3, #1
1001c792:	f8ca 3000 	str.w	r3, [sl]
1001c796:	f8da 3004 	ldr.w	r3, [sl, #4]
1001c79a:	2d01      	cmp	r5, #1
1001c79c:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
1001c7a0:	f8ca 3004 	str.w	r3, [sl, #4]
1001c7a4:	d01b      	beq.n	1001c7de <__ssvfscanf_r+0x1042>
1001c7a6:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001c7a8:	4616      	mov	r6, r2
1001c7aa:	e010      	b.n	1001c7ce <__ssvfscanf_r+0x1032>
1001c7ac:	f8da 3000 	ldr.w	r3, [sl]
1001c7b0:	781a      	ldrb	r2, [r3, #0]
1001c7b2:	5cb2      	ldrb	r2, [r6, r2]
1001c7b4:	3301      	adds	r3, #1
1001c7b6:	b192      	cbz	r2, 1001c7de <__ssvfscanf_r+0x1042>
1001c7b8:	f8ca 3000 	str.w	r3, [sl]
1001c7bc:	f8da 3004 	ldr.w	r3, [sl, #4]
1001c7c0:	f10b 0b01 	add.w	fp, fp, #1
1001c7c4:	3b01      	subs	r3, #1
1001c7c6:	455d      	cmp	r5, fp
1001c7c8:	f8ca 3004 	str.w	r3, [sl, #4]
1001c7cc:	d007      	beq.n	1001c7de <__ssvfscanf_r+0x1042>
1001c7ce:	2b00      	cmp	r3, #0
1001c7d0:	dcec      	bgt.n	1001c7ac <__ssvfscanf_r+0x1010>
1001c7d2:	4651      	mov	r1, sl
1001c7d4:	4620      	mov	r0, r4
1001c7d6:	f003 fd89 	bl	100202ec <__ssrefill_r>
1001c7da:	2800      	cmp	r0, #0
1001c7dc:	d0e6      	beq.n	1001c7ac <__ssvfscanf_r+0x1010>
1001c7de:	44d9      	add	r9, fp
1001c7e0:	f7ff b802 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001c7e4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c7e6:	623b      	str	r3, [r7, #32]
1001c7e8:	2300      	movs	r3, #0
1001c7ea:	e9c7 330b 	strd	r3, r3, [r7, #44]	@ 0x2c
1001c7ee:	637b      	str	r3, [r7, #52]	@ 0x34
1001c7f0:	f107 0354 	add.w	r3, r7, #84	@ 0x54
1001c7f4:	469b      	mov	fp, r3
1001c7f6:	f7ff bbde 	b.w	1001bfb6 <__ssvfscanf_r+0x81a>
1001c7fa:	2600      	movs	r6, #0
1001c7fc:	e448      	b.n	1001c090 <__ssvfscanf_r+0x8f4>
1001c7fe:	1ca1      	adds	r1, r4, #2
1001c800:	f43f ac46 	beq.w	1001c090 <__ssvfscanf_r+0x8f4>
1001c804:	f8db 3000 	ldr.w	r3, [fp]
1001c808:	1c5a      	adds	r2, r3, #1
1001c80a:	f47f ac09 	bne.w	1001c020 <__ssvfscanf_r+0x884>
1001c80e:	e420      	b.n	1001c052 <__ssvfscanf_r+0x8b6>
1001c810:	682b      	ldr	r3, [r5, #0]
1001c812:	2b04      	cmp	r3, #4
1001c814:	f47f ac27 	bne.w	1001c066 <__ssvfscanf_r+0x8ca>
1001c818:	e427      	b.n	1001c06a <__ssvfscanf_r+0x8ce>
1001c81a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c81c:	4651      	mov	r1, sl
1001c81e:	f003 fd65 	bl	100202ec <__ssrefill_r>
1001c822:	2800      	cmp	r0, #0
1001c824:	f43f ae88 	beq.w	1001c538 <__ssvfscanf_r+0xd9c>
1001c828:	42a6      	cmp	r6, r4
1001c82a:	46cb      	mov	fp, r9
1001c82c:	4643      	mov	r3, r8
1001c82e:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
1001c832:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
1001c836:	f43f a81d 	beq.w	1001b874 <__ssvfscanf_r+0xd8>
1001c83a:	1b34      	subs	r4, r6, r4
1001c83c:	e68c      	b.n	1001c558 <__ssvfscanf_r+0xdbc>
1001c83e:	6b38      	ldr	r0, [r7, #48]	@ 0x30
1001c840:	00d9      	lsls	r1, r3, #3
1001c842:	461e      	mov	r6, r3
1001c844:	f7fa fc10 	bl	10017068 <realloc>
1001c848:	6338      	str	r0, [r7, #48]	@ 0x30
1001c84a:	2800      	cmp	r0, #0
1001c84c:	f000 81f9 	beq.w	1001cc42 <__ssvfscanf_r+0x14a6>
1001c850:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
1001c852:	0073      	lsls	r3, r6, #1
1001c854:	eb00 0b05 	add.w	fp, r0, r5
1001c858:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
1001c85a:	6010      	str	r0, [r2, #0]
1001c85c:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001c85e:	e417      	b.n	1001c090 <__ssvfscanf_r+0x8f4>
1001c860:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c862:	f421 7120 	bic.w	r1, r1, #640	@ 0x280
1001c866:	4623      	mov	r3, r4
1001c868:	4658      	mov	r0, fp
1001c86a:	64b9      	str	r1, [r7, #72]	@ 0x48
1001c86c:	4632      	mov	r2, r6
1001c86e:	69f9      	ldr	r1, [r7, #28]
1001c870:	68bc      	ldr	r4, [r7, #8]
1001c872:	4699      	mov	r9, r3
1001c874:	46aa      	mov	sl, r5
1001c876:	687d      	ldr	r5, [r7, #4]
1001c878:	f002 fc0a 	bl	1001f090 <stpncpy>
1001c87c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c87e:	61bb      	str	r3, [r7, #24]
1001c880:	3d01      	subs	r5, #1
1001c882:	4683      	mov	fp, r0
1001c884:	f7ff b993 	b.w	1001bbae <__ssvfscanf_r+0x412>
1001c888:	46b2      	mov	sl, r6
1001c88a:	f7fe bff3 	b.w	1001b874 <__ssvfscanf_r+0xd8>
1001c88e:	2c02      	cmp	r4, #2
1001c890:	f240 82ea 	bls.w	1001ce68 <__ssvfscanf_r+0x16cc>
1001c894:	2c03      	cmp	r4, #3
1001c896:	f43f a9ab 	beq.w	1001bbf0 <__ssvfscanf_r+0x454>
1001c89a:	3c04      	subs	r4, #4
1001c89c:	b2e5      	uxtb	r5, r4
1001c89e:	43ec      	mvns	r4, r5
1001c8a0:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
1001c8a2:	445c      	add	r4, fp
1001c8a4:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001c8a8:	4652      	mov	r2, sl
1001c8aa:	4630      	mov	r0, r6
1001c8ac:	f003 fce2 	bl	10020274 <_sungetc_r>
1001c8b0:	455c      	cmp	r4, fp
1001c8b2:	d1f7      	bne.n	1001c8a4 <__ssvfscanf_r+0x1108>
1001c8b4:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001c8b8:	eba9 0905 	sub.w	r9, r9, r5
1001c8bc:	f7ff b998 	b.w	1001bbf0 <__ssvfscanf_r+0x454>
1001c8c0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c8c2:	f8d3 b000 	ldr.w	fp, [r3]
1001c8c6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c8c8:	079a      	lsls	r2, r3, #30
1001c8ca:	f140 80f5 	bpl.w	1001cab8 <__ssvfscanf_r+0x131c>
1001c8ce:	e9cb 5600 	strd	r5, r6, [fp]
1001c8d2:	f7ff b9cf 	b.w	1001bc74 <__ssvfscanf_r+0x4d8>
1001c8d6:	4688      	mov	r8, r1
1001c8d8:	f7fe bf86 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001c8dc:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
1001c8e0:	428a      	cmp	r2, r1
1001c8e2:	d864      	bhi.n	1001c9ae <__ssvfscanf_r+0x1212>
1001c8e4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c8e6:	3208      	adds	r2, #8
1001c8e8:	b292      	uxth	r2, r2
1001c8ea:	6818      	ldr	r0, [r3, #0]
1001c8ec:	647a      	str	r2, [r7, #68]	@ 0x44
1001c8ee:	0091      	lsls	r1, r2, #2
1001c8f0:	f7fa fbba 	bl	10017068 <realloc>
1001c8f4:	2800      	cmp	r0, #0
1001c8f6:	d05a      	beq.n	1001c9ae <__ssvfscanf_r+0x1212>
1001c8f8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c8fa:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001c8fc:	809a      	strh	r2, [r3, #4]
1001c8fe:	6018      	str	r0, [r3, #0]
1001c900:	e57a      	b.n	1001c3f8 <__ssvfscanf_r+0xc5c>
1001c902:	bf00      	nop
1001c904:	1001ef01 	.word	0x1001ef01
1001c908:	10023d18 	.word	0x10023d18
1001c90c:	1001edc9 	.word	0x1001edc9
1001c910:	f004 0310 	and.w	r3, r4, #16
1001c914:	2d01      	cmp	r5, #1
1001c916:	bf38      	it	cc
1001c918:	2501      	movcc	r5, #1
1001c91a:	461a      	mov	r2, r3
1001c91c:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c91e:	f014 0301 	ands.w	r3, r4, #1
1001c922:	f040 812d 	bne.w	1001cb80 <__ssvfscanf_r+0x13e4>
1001c926:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001c928:	2a00      	cmp	r2, #0
1001c92a:	f040 82b5 	bne.w	1001ce98 <__ssvfscanf_r+0x16fc>
1001c92e:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
1001c932:	0623      	lsls	r3, r4, #24
1001c934:	f85b 6b04 	ldr.w	r6, [fp], #4
1001c938:	f140 82c5 	bpl.w	1001cec6 <__ssvfscanf_r+0x172a>
1001c93c:	2e00      	cmp	r6, #0
1001c93e:	f43f ad11 	beq.w	1001c364 <__ssvfscanf_r+0xbc8>
1001c942:	4628      	mov	r0, r5
1001c944:	f7f7 f98a 	bl	10013c5c <malloc>
1001c948:	4604      	mov	r4, r0
1001c94a:	2800      	cmp	r0, #0
1001c94c:	f000 8179 	beq.w	1001cc42 <__ssvfscanf_r+0x14a6>
1001c950:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
1001c952:	6030      	str	r0, [r6, #0]
1001c954:	88cb      	ldrh	r3, [r1, #6]
1001c956:	888a      	ldrh	r2, [r1, #4]
1001c958:	4293      	cmp	r3, r2
1001c95a:	f0c0 8300 	bcc.w	1001cf5e <__ssvfscanf_r+0x17c2>
1001c95e:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
1001c962:	428a      	cmp	r2, r1
1001c964:	647b      	str	r3, [r7, #68]	@ 0x44
1001c966:	d822      	bhi.n	1001c9ae <__ssvfscanf_r+0x1212>
1001c968:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c96a:	3208      	adds	r2, #8
1001c96c:	b292      	uxth	r2, r2
1001c96e:	6818      	ldr	r0, [r3, #0]
1001c970:	64ba      	str	r2, [r7, #72]	@ 0x48
1001c972:	0091      	lsls	r1, r2, #2
1001c974:	f7fa fb78 	bl	10017068 <realloc>
1001c978:	b1c8      	cbz	r0, 1001c9ae <__ssvfscanf_r+0x1212>
1001c97a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c97c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001c97e:	809a      	strh	r2, [r3, #4]
1001c980:	6018      	str	r0, [r3, #0]
1001c982:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c984:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001c986:	f840 6023 	str.w	r6, [r0, r3, lsl #2]
1001c98a:	3301      	adds	r3, #1
1001c98c:	80d3      	strh	r3, [r2, #6]
1001c98e:	f8cd a000 	str.w	sl, [sp]
1001c992:	4621      	mov	r1, r4
1001c994:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c996:	462b      	mov	r3, r5
1001c998:	2201      	movs	r2, #1
1001c99a:	f003 fcc3 	bl	10020324 <_sfread_r>
1001c99e:	4604      	mov	r4, r0
1001c9a0:	2800      	cmp	r0, #0
1001c9a2:	f040 82de 	bne.w	1001cf62 <__ssvfscanf_r+0x17c6>
1001c9a6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001c9a8:	2b00      	cmp	r3, #0
1001c9aa:	f040 82e4 	bne.w	1001cf76 <__ssvfscanf_r+0x17da>
1001c9ae:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c9b0:	88de      	ldrh	r6, [r3, #6]
1001c9b2:	6818      	ldr	r0, [r3, #0]
1001c9b4:	b17e      	cbz	r6, 1001c9d6 <__ssvfscanf_r+0x123a>
1001c9b6:	2400      	movs	r4, #0
1001c9b8:	1f05      	subs	r5, r0, #4
1001c9ba:	46a0      	mov	r8, r4
1001c9bc:	4681      	mov	r9, r0
1001c9be:	f855 3f04 	ldr.w	r3, [r5, #4]!
1001c9c2:	6818      	ldr	r0, [r3, #0]
1001c9c4:	f7f7 f952 	bl	10013c6c <free>
1001c9c8:	3401      	adds	r4, #1
1001c9ca:	682b      	ldr	r3, [r5, #0]
1001c9cc:	42a6      	cmp	r6, r4
1001c9ce:	f8c3 8000 	str.w	r8, [r3]
1001c9d2:	d1f4      	bne.n	1001c9be <__ssvfscanf_r+0x1222>
1001c9d4:	4648      	mov	r0, r9
1001c9d6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001c9da:	643b      	str	r3, [r7, #64]	@ 0x40
1001c9dc:	f7fe bf58 	b.w	1001b890 <__ssvfscanf_r+0xf4>
1001c9e0:	2101      	movs	r1, #1
1001c9e2:	e543      	b.n	1001c46c <__ssvfscanf_r+0xcd0>
1001c9e4:	f64f 72f6 	movw	r2, #65526	@ 0xfff6
1001c9e8:	4293      	cmp	r3, r2
1001c9ea:	d8e0      	bhi.n	1001c9ae <__ssvfscanf_r+0x1212>
1001c9ec:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001c9ee:	3308      	adds	r3, #8
1001c9f0:	b29b      	uxth	r3, r3
1001c9f2:	6810      	ldr	r0, [r2, #0]
1001c9f4:	647b      	str	r3, [r7, #68]	@ 0x44
1001c9f6:	0099      	lsls	r1, r3, #2
1001c9f8:	f7fa fb36 	bl	10017068 <realloc>
1001c9fc:	2800      	cmp	r0, #0
1001c9fe:	d0d6      	beq.n	1001c9ae <__ssvfscanf_r+0x1212>
1001ca00:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001ca02:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001ca04:	8093      	strh	r3, [r2, #4]
1001ca06:	6010      	str	r0, [r2, #0]
1001ca08:	e567      	b.n	1001c4da <__ssvfscanf_r+0xd3e>
1001ca0a:	f64f 70f6 	movw	r0, #65526	@ 0xfff6
1001ca0e:	4281      	cmp	r1, r0
1001ca10:	64ba      	str	r2, [r7, #72]	@ 0x48
1001ca12:	d8cc      	bhi.n	1001c9ae <__ssvfscanf_r+0x1212>
1001ca14:	3108      	adds	r1, #8
1001ca16:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001ca18:	b28e      	uxth	r6, r1
1001ca1a:	6818      	ldr	r0, [r3, #0]
1001ca1c:	00b1      	lsls	r1, r6, #2
1001ca1e:	f7fa fb23 	bl	10017068 <realloc>
1001ca22:	2800      	cmp	r0, #0
1001ca24:	d0c3      	beq.n	1001c9ae <__ssvfscanf_r+0x1212>
1001ca26:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001ca28:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001ca2a:	809e      	strh	r6, [r3, #4]
1001ca2c:	6018      	str	r0, [r3, #0]
1001ca2e:	f7ff bab8 	b.w	1001bfa2 <__ssvfscanf_r+0x806>
1001ca32:	f64f 70f6 	movw	r0, #65526	@ 0xfff6
1001ca36:	4281      	cmp	r1, r0
1001ca38:	637b      	str	r3, [r7, #52]	@ 0x34
1001ca3a:	647a      	str	r2, [r7, #68]	@ 0x44
1001ca3c:	d8b7      	bhi.n	1001c9ae <__ssvfscanf_r+0x1212>
1001ca3e:	3108      	adds	r1, #8
1001ca40:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001ca42:	fa1f fb81 	uxth.w	fp, r1
1001ca46:	6818      	ldr	r0, [r3, #0]
1001ca48:	ea4f 018b 	mov.w	r1, fp, lsl #2
1001ca4c:	f7fa fb0c 	bl	10017068 <realloc>
1001ca50:	2800      	cmp	r0, #0
1001ca52:	d0ac      	beq.n	1001c9ae <__ssvfscanf_r+0x1212>
1001ca54:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001ca56:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001ca58:	f8a3 b004 	strh.w	fp, [r3, #4]
1001ca5c:	6018      	str	r0, [r3, #0]
1001ca5e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001ca60:	f7ff b9e1 	b.w	1001be26 <__ssvfscanf_r+0x68a>
1001ca64:	f898 2002 	ldrb.w	r2, [r8, #2]
1001ca68:	f044 0402 	orr.w	r4, r4, #2
1001ca6c:	f108 0802 	add.w	r8, r8, #2
1001ca70:	f7fe bf33 	b.w	1001b8da <__ssvfscanf_r+0x13e>
1001ca74:	f898 2002 	ldrb.w	r2, [r8, #2]
1001ca78:	f044 0408 	orr.w	r4, r4, #8
1001ca7c:	f108 0802 	add.w	r8, r8, #2
1001ca80:	f7fe bf2b 	b.w	1001b8da <__ssvfscanf_r+0x13e>
1001ca84:	0763      	lsls	r3, r4, #29
1001ca86:	d46b      	bmi.n	1001cb60 <__ssvfscanf_r+0x13c4>
1001ca88:	f014 0201 	ands.w	r2, r4, #1
1001ca8c:	f040 817b 	bne.w	1001cd86 <__ssvfscanf_r+0x15ea>
1001ca90:	07a4      	lsls	r4, r4, #30
1001ca92:	f140 8178 	bpl.w	1001cd86 <__ssvfscanf_r+0x15ea>
1001ca96:	4bc1      	ldr	r3, [pc, #772]	@ (1001cd9c <__ssvfscanf_r+0x1600>)
1001ca98:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
1001ca9a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001ca9c:	4299      	cmp	r1, r3
1001ca9e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
1001caa0:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
1001caa2:	f000 81f0 	beq.w	1001ce86 <__ssvfscanf_r+0x16ea>
1001caa6:	f002 fbfd 	bl	1001f2a4 <_strtoll_r>
1001caaa:	460b      	mov	r3, r1
1001caac:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
1001caae:	6811      	ldr	r1, [r2, #0]
1001cab0:	e9c1 0300 	strd	r0, r3, [r1]
1001cab4:	f7ff b986 	b.w	1001bdc4 <__ssvfscanf_r+0x628>
1001cab8:	4602      	mov	r2, r0
1001caba:	460b      	mov	r3, r1
1001cabc:	f004 f982 	bl	10020dc4 <__aeabi_dcmpun>
1001cac0:	2800      	cmp	r0, #0
1001cac2:	f040 80c7 	bne.w	1001cc54 <__ssvfscanf_r+0x14b8>
1001cac6:	4628      	mov	r0, r5
1001cac8:	4631      	mov	r1, r6
1001caca:	f004 f9d9 	bl	10020e80 <__aeabi_d2f>
1001cace:	f8cb 0000 	str.w	r0, [fp]
1001cad2:	f7ff b8cf 	b.w	1001bc74 <__ssvfscanf_r+0x4d8>
1001cad6:	6028      	str	r0, [r5, #0]
1001cad8:	f002 fd78 	bl	1001f5cc <iswspace>
1001cadc:	2800      	cmp	r0, #0
1001cade:	f040 8171 	bne.w	1001cdc4 <__ssvfscanf_r+0x1628>
1001cae2:	44d9      	add	r9, fp
1001cae4:	f7ff b9fb 	b.w	1001bede <__ssvfscanf_r+0x742>
1001cae8:	f882 9000 	strb.w	r9, [r2]
1001caec:	e609      	b.n	1001c702 <__ssvfscanf_r+0xf66>
1001caee:	f8da 3000 	ldr.w	r3, [sl]
1001caf2:	4eab      	ldr	r6, [pc, #684]	@ (1001cda0 <__ssvfscanf_r+0x1604>)
1001caf4:	781a      	ldrb	r2, [r3, #0]
1001caf6:	5cb2      	ldrb	r2, [r6, r2]
1001caf8:	0711      	lsls	r1, r2, #28
1001cafa:	f53e ae75 	bmi.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001cafe:	3301      	adds	r3, #1
1001cb00:	f8ca 3000 	str.w	r3, [sl]
1001cb04:	f8da 3004 	ldr.w	r3, [sl, #4]
1001cb08:	2d01      	cmp	r5, #1
1001cb0a:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
1001cb0e:	f8ca 3004 	str.w	r3, [sl, #4]
1001cb12:	bf08      	it	eq
1001cb14:	f109 0901 	addeq.w	r9, r9, #1
1001cb18:	f43e ae66 	beq.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001cb1c:	f8d7 b04c 	ldr.w	fp, [r7, #76]	@ 0x4c
1001cb20:	2401      	movs	r4, #1
1001cb22:	e012      	b.n	1001cb4a <__ssvfscanf_r+0x13ae>
1001cb24:	f8da 3000 	ldr.w	r3, [sl]
1001cb28:	781a      	ldrb	r2, [r3, #0]
1001cb2a:	5cb2      	ldrb	r2, [r6, r2]
1001cb2c:	0712      	lsls	r2, r2, #28
1001cb2e:	f103 0301 	add.w	r3, r3, #1
1001cb32:	d412      	bmi.n	1001cb5a <__ssvfscanf_r+0x13be>
1001cb34:	f8ca 3000 	str.w	r3, [sl]
1001cb38:	f8da 3004 	ldr.w	r3, [sl, #4]
1001cb3c:	3401      	adds	r4, #1
1001cb3e:	3b01      	subs	r3, #1
1001cb40:	42a5      	cmp	r5, r4
1001cb42:	f8ca 3004 	str.w	r3, [sl, #4]
1001cb46:	f000 813a 	beq.w	1001cdbe <__ssvfscanf_r+0x1622>
1001cb4a:	2b00      	cmp	r3, #0
1001cb4c:	dcea      	bgt.n	1001cb24 <__ssvfscanf_r+0x1388>
1001cb4e:	4651      	mov	r1, sl
1001cb50:	4658      	mov	r0, fp
1001cb52:	f003 fbcb 	bl	100202ec <__ssrefill_r>
1001cb56:	2800      	cmp	r0, #0
1001cb58:	d0e4      	beq.n	1001cb24 <__ssvfscanf_r+0x1388>
1001cb5a:	44a1      	add	r9, r4
1001cb5c:	f7fe be44 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001cb60:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001cb62:	681b      	ldr	r3, [r3, #0]
1001cb64:	8018      	strh	r0, [r3, #0]
1001cb66:	f7ff b92d 	b.w	1001bdc4 <__ssvfscanf_r+0x628>
1001cb6a:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
1001cb6c:	1d11      	adds	r1, r2, #4
1001cb6e:	6820      	ldr	r0, [r4, #0]
1001cb70:	f7fa fa7a 	bl	10017068 <realloc>
1001cb74:	2800      	cmp	r0, #0
1001cb76:	f43f a9e7 	beq.w	1001bf48 <__ssvfscanf_r+0x7ac>
1001cb7a:	6020      	str	r0, [r4, #0]
1001cb7c:	f7ff b9e4 	b.w	1001bf48 <__ssvfscanf_r+0x7ac>
1001cb80:	2a00      	cmp	r2, #0
1001cb82:	f040 8184 	bne.w	1001ce8e <__ssvfscanf_r+0x16f2>
1001cb86:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001cb88:	461a      	mov	r2, r3
1001cb8a:	0624      	lsls	r4, r4, #24
1001cb8c:	f852 3b04 	ldr.w	r3, [r2], #4
1001cb90:	637a      	str	r2, [r7, #52]	@ 0x34
1001cb92:	f100 81ac 	bmi.w	1001ceee <__ssvfscanf_r+0x1752>
1001cb96:	469b      	mov	fp, r3
1001cb98:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cb9a:	461a      	mov	r2, r3
1001cb9c:	469c      	mov	ip, r3
1001cb9e:	f8c7 8030 	str.w	r8, [r7, #48]	@ 0x30
1001cba2:	2600      	movs	r6, #0
1001cba4:	4664      	mov	r4, ip
1001cba6:	647b      	str	r3, [r7, #68]	@ 0x44
1001cba8:	4690      	mov	r8, r2
1001cbaa:	f7fb fa6b 	bl	10018084 <__locale_mb_cur_max>
1001cbae:	42b0      	cmp	r0, r6
1001cbb0:	f43e ae60 	beq.w	1001b874 <__ssvfscanf_r+0xd8>
1001cbb4:	e9da 3200 	ldrd	r3, r2, [sl]
1001cbb8:	f813 1b01 	ldrb.w	r1, [r3], #1
1001cbbc:	3a01      	subs	r2, #1
1001cbbe:	e9ca 3200 	strd	r3, r2, [sl]
1001cbc2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
1001cbc4:	f507 70b8 	add.w	r0, r7, #368	@ 0x170
1001cbc8:	2a03      	cmp	r2, #3
1001cbca:	5581      	strb	r1, [r0, r6]
1001cbcc:	f106 0301 	add.w	r3, r6, #1
1001cbd0:	f107 0668 	add.w	r6, r7, #104	@ 0x68
1001cbd4:	d102      	bne.n	1001cbdc <__ssvfscanf_r+0x1440>
1001cbd6:	6832      	ldr	r2, [r6, #0]
1001cbd8:	2a04      	cmp	r2, #4
1001cbda:	d006      	beq.n	1001cbea <__ssvfscanf_r+0x144e>
1001cbdc:	2208      	movs	r2, #8
1001cbde:	2100      	movs	r1, #0
1001cbe0:	4630      	mov	r0, r6
1001cbe2:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001cbe4:	f7fb f9c8 	bl	10017f78 <memset>
1001cbe8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001cbea:	9600      	str	r6, [sp, #0]
1001cbec:	f507 72b8 	add.w	r2, r7, #368	@ 0x170
1001cbf0:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cbf2:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001cbf4:	4659      	mov	r1, fp
1001cbf6:	f002 fc37 	bl	1001f468 <_mbrtowc_r>
1001cbfa:	4602      	mov	r2, r0
1001cbfc:	6278      	str	r0, [r7, #36]	@ 0x24
1001cbfe:	1c50      	adds	r0, r2, #1
1001cc00:	f43e ae38 	beq.w	1001b874 <__ssvfscanf_r+0xd8>
1001cc04:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001cc06:	2a00      	cmp	r2, #0
1001cc08:	f040 81bd 	bne.w	1001cf86 <__ssvfscanf_r+0x17ea>
1001cc0c:	4499      	add	r9, r3
1001cc0e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cc10:	3d01      	subs	r5, #1
1001cc12:	2b00      	cmp	r3, #0
1001cc14:	f040 81c5 	bne.w	1001cfa2 <__ssvfscanf_r+0x1806>
1001cc18:	f8cb 3000 	str.w	r3, [fp]
1001cc1c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cc1e:	2b00      	cmp	r3, #0
1001cc20:	f000 81f1 	beq.w	1001d006 <__ssvfscanf_r+0x186a>
1001cc24:	ebab 0604 	sub.w	r6, fp, r4
1001cc28:	ebb8 0fa6 	cmp.w	r8, r6, asr #2
1001cc2c:	f200 81eb 	bhi.w	1001d006 <__ssvfscanf_r+0x186a>
1001cc30:	4620      	mov	r0, r4
1001cc32:	ea4f 01c8 	mov.w	r1, r8, lsl #3
1001cc36:	f7fa fa17 	bl	10017068 <realloc>
1001cc3a:	4604      	mov	r4, r0
1001cc3c:	2800      	cmp	r0, #0
1001cc3e:	f040 81dc 	bne.w	1001cffa <__ssvfscanf_r+0x185e>
1001cc42:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001cc44:	2b00      	cmp	r3, #0
1001cc46:	f47f aeb2 	bne.w	1001c9ae <__ssvfscanf_r+0x1212>
1001cc4a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001cc4e:	643b      	str	r3, [r7, #64]	@ 0x40
1001cc50:	f7fe be21 	b.w	1001b896 <__ssvfscanf_r+0xfa>
1001cc54:	4853      	ldr	r0, [pc, #332]	@ (1001cda4 <__ssvfscanf_r+0x1608>)
1001cc56:	f002 fd17 	bl	1001f688 <nanf>
1001cc5a:	f8cb 0000 	str.w	r0, [fp]
1001cc5e:	f7ff b809 	b.w	1001bc74 <__ssvfscanf_r+0x4d8>
1001cc62:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
1001cc64:	e9c7 2211 	strd	r2, r2, [r7, #68]	@ 0x44
1001cc68:	f7ff bbce 	b.w	1001c408 <__ssvfscanf_r+0xc6c>
1001cc6c:	b082      	sub	sp, #8
1001cc6e:	e9cd 3302 	strd	r3, r3, [sp, #8]
1001cc72:	ab02      	add	r3, sp, #8
1001cc74:	63fb      	str	r3, [r7, #60]	@ 0x3c
1001cc76:	e550      	b.n	1001c71a <__ssvfscanf_r+0xf7e>
1001cc78:	637b      	str	r3, [r7, #52]	@ 0x34
1001cc7a:	004b      	lsls	r3, r1, #1
1001cc7c:	4610      	mov	r0, r2
1001cc7e:	4619      	mov	r1, r3
1001cc80:	647b      	str	r3, [r7, #68]	@ 0x44
1001cc82:	f7fa f9f1 	bl	10017068 <realloc>
1001cc86:	4602      	mov	r2, r0
1001cc88:	2800      	cmp	r0, #0
1001cc8a:	d0da      	beq.n	1001cc42 <__ssvfscanf_r+0x14a6>
1001cc8c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cc8e:	1984      	adds	r4, r0, r6
1001cc90:	6018      	str	r0, [r3, #0]
1001cc92:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001cc94:	f7ff bbd7 	b.w	1001c446 <__ssvfscanf_r+0xcaa>
1001cc98:	6938      	ldr	r0, [r7, #16]
1001cc9a:	4601      	mov	r1, r0
1001cc9c:	230a      	movs	r3, #10
1001cc9e:	3101      	adds	r1, #1
1001cca0:	4683      	mov	fp, r0
1001cca2:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cca4:	f002 f890 	bl	1001edc8 <_strtol_r>
1001cca8:	697b      	ldr	r3, [r7, #20]
1001ccaa:	1ac2      	subs	r2, r0, r3
1001ccac:	e4e2      	b.n	1001c674 <__ssvfscanf_r+0xed8>
1001ccae:	f04f 0b00 	mov.w	fp, #0
1001ccb2:	f7ff b926 	b.w	1001bf02 <__ssvfscanf_r+0x766>
1001ccb6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001ccb8:	637e      	str	r6, [r7, #52]	@ 0x34
1001ccba:	469c      	mov	ip, r3
1001ccbc:	469e      	mov	lr, r3
1001ccbe:	64bb      	str	r3, [r7, #72]	@ 0x48
1001ccc0:	f7ff b8bb 	b.w	1001be3a <__ssvfscanf_r+0x69e>
1001ccc4:	465e      	mov	r6, fp
1001ccc6:	4623      	mov	r3, r4
1001ccc8:	46a3      	mov	fp, r4
1001ccca:	e40c      	b.n	1001c4e6 <__ssvfscanf_r+0xd4a>
1001cccc:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
1001ccd0:	637a      	str	r2, [r7, #52]	@ 0x34
1001ccd2:	e9c7 220b 	strd	r2, r2, [r7, #44]	@ 0x2c
1001ccd6:	f7ff b96e 	b.w	1001bfb6 <__ssvfscanf_r+0x81a>
1001ccda:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001ccdc:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001cce0:	627c      	str	r4, [r7, #36]	@ 0x24
1001cce2:	2e00      	cmp	r6, #0
1001cce4:	f43f a9e0 	beq.w	1001c0a8 <__ssvfscanf_r+0x90c>
1001cce8:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001ccea:	4615      	mov	r5, r2
1001ccec:	3e01      	subs	r6, #1
1001ccee:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
1001ccf2:	4652      	mov	r2, sl
1001ccf4:	5d99      	ldrb	r1, [r3, r6]
1001ccf6:	4620      	mov	r0, r4
1001ccf8:	f003 fabc 	bl	10020274 <_sungetc_r>
1001ccfc:	2e00      	cmp	r6, #0
1001ccfe:	d1f5      	bne.n	1001ccec <__ssvfscanf_r+0x1550>
1001cd00:	462a      	mov	r2, r5
1001cd02:	f7ff b9d1 	b.w	1001c0a8 <__ssvfscanf_r+0x90c>
1001cd06:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
1001cd08:	6820      	ldr	r0, [r4, #0]
1001cd0a:	f7fa f9ad 	bl	10017068 <realloc>
1001cd0e:	2800      	cmp	r0, #0
1001cd10:	f43f abb4 	beq.w	1001c47c <__ssvfscanf_r+0xce0>
1001cd14:	6020      	str	r0, [r4, #0]
1001cd16:	f7ff bbb1 	b.w	1001c47c <__ssvfscanf_r+0xce0>
1001cd1a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cd1c:	4651      	mov	r1, sl
1001cd1e:	e9c7 320c 	strd	r3, r2, [r7, #48]	@ 0x30
1001cd22:	f003 fae3 	bl	100202ec <__ssrefill_r>
1001cd26:	e9d7 320c 	ldrd	r3, r2, [r7, #48]	@ 0x30
1001cd2a:	2800      	cmp	r0, #0
1001cd2c:	f43f ab93 	beq.w	1001c456 <__ssvfscanf_r+0xcba>
1001cd30:	f7ff bb98 	b.w	1001c464 <__ssvfscanf_r+0xcc8>
1001cd34:	f8db 0000 	ldr.w	r0, [fp]
1001cd38:	f7fa f996 	bl	10017068 <realloc>
1001cd3c:	2800      	cmp	r0, #0
1001cd3e:	f43f ac14 	beq.w	1001c56a <__ssvfscanf_r+0xdce>
1001cd42:	f8cb 0000 	str.w	r0, [fp]
1001cd46:	e410      	b.n	1001c56a <__ssvfscanf_r+0xdce>
1001cd48:	07e5      	lsls	r5, r4, #31
1001cd4a:	d435      	bmi.n	1001cdb8 <__ssvfscanf_r+0x161c>
1001cd4c:	07a4      	lsls	r4, r4, #30
1001cd4e:	d533      	bpl.n	1001cdb8 <__ssvfscanf_r+0x161c>
1001cd50:	ea4f 70e9 	mov.w	r0, r9, asr #31
1001cd54:	f8c2 9000 	str.w	r9, [r2]
1001cd58:	6050      	str	r0, [r2, #4]
1001cd5a:	e4d2      	b.n	1001c702 <__ssvfscanf_r+0xf66>
1001cd5c:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cd5e:	4651      	mov	r1, sl
1001cd60:	f003 fac4 	bl	100202ec <__ssrefill_r>
1001cd64:	2800      	cmp	r0, #0
1001cd66:	f43f a8d1 	beq.w	1001bf0c <__ssvfscanf_r+0x770>
1001cd6a:	4643      	mov	r3, r8
1001cd6c:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
1001cd70:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
1001cd74:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001cd78:	462a      	mov	r2, r5
1001cd7a:	f1bb 0f00 	cmp.w	fp, #0
1001cd7e:	f47e ad79 	bne.w	1001b874 <__ssvfscanf_r+0xd8>
1001cd82:	f7ff b8d4 	b.w	1001bf2e <__ssvfscanf_r+0x792>
1001cd86:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001cd88:	f7ff b81a 	b.w	1001bdc0 <__ssvfscanf_r+0x624>
1001cd8c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cd8e:	f423 63f0 	bic.w	r3, r3, #1920	@ 0x780
1001cd92:	64bb      	str	r3, [r7, #72]	@ 0x48
1001cd94:	2401      	movs	r4, #1
1001cd96:	f7fe bf07 	b.w	1001bba8 <__ssvfscanf_r+0x40c>
1001cd9a:	bf00      	nop
1001cd9c:	1001ef01 	.word	0x1001ef01
1001cda0:	10023b6d 	.word	0x10023b6d
1001cda4:	1002155c 	.word	0x1002155c
1001cda8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cdaa:	f423 63f0 	bic.w	r3, r3, #1920	@ 0x780
1001cdae:	64bb      	str	r3, [r7, #72]	@ 0x48
1001cdb0:	2301      	movs	r3, #1
1001cdb2:	647b      	str	r3, [r7, #68]	@ 0x44
1001cdb4:	f7fe bef8 	b.w	1001bba8 <__ssvfscanf_r+0x40c>
1001cdb8:	f8c2 9000 	str.w	r9, [r2]
1001cdbc:	e4a1      	b.n	1001c702 <__ssvfscanf_r+0xf66>
1001cdbe:	44a9      	add	r9, r5
1001cdc0:	f7fe bd12 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001cdc4:	4643      	mov	r3, r8
1001cdc6:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
1001cdca:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
1001cdce:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001cdd2:	462a      	mov	r2, r5
1001cdd4:	f1bb 0f00 	cmp.w	fp, #0
1001cdd8:	f43f a8a9 	beq.w	1001bf2e <__ssvfscanf_r+0x792>
1001cddc:	633d      	str	r5, [r7, #48]	@ 0x30
1001cdde:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001cde0:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
1001cde2:	f8c7 9044 	str.w	r9, [r7, #68]	@ 0x44
1001cde6:	465e      	mov	r6, fp
1001cde8:	46f1      	mov	r9, lr
1001cdea:	46c3      	mov	fp, r8
1001cdec:	623b      	str	r3, [r7, #32]
1001cdee:	46e0      	mov	r8, ip
1001cdf0:	3e01      	subs	r6, #1
1001cdf2:	4652      	mov	r2, sl
1001cdf4:	5da9      	ldrb	r1, [r5, r6]
1001cdf6:	4620      	mov	r0, r4
1001cdf8:	f003 fa3c 	bl	10020274 <_sungetc_r>
1001cdfc:	2e00      	cmp	r6, #0
1001cdfe:	d1f7      	bne.n	1001cdf0 <__ssvfscanf_r+0x1654>
1001ce00:	46ce      	mov	lr, r9
1001ce02:	46c4      	mov	ip, r8
1001ce04:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1001ce06:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
1001ce0a:	6a3b      	ldr	r3, [r7, #32]
1001ce0c:	46d8      	mov	r8, fp
1001ce0e:	f7ff b88e 	b.w	1001bf2e <__ssvfscanf_r+0x792>
1001ce12:	6b7c      	ldr	r4, [r7, #52]	@ 0x34
1001ce14:	1d19      	adds	r1, r3, #4
1001ce16:	6820      	ldr	r0, [r4, #0]
1001ce18:	f7fa f926 	bl	10017068 <realloc>
1001ce1c:	2800      	cmp	r0, #0
1001ce1e:	f43f a951 	beq.w	1001c0c4 <__ssvfscanf_r+0x928>
1001ce22:	6020      	str	r0, [r4, #0]
1001ce24:	f7ff b94e 	b.w	1001c0c4 <__ssvfscanf_r+0x928>
1001ce28:	6b38      	ldr	r0, [r7, #48]	@ 0x30
1001ce2a:	00d9      	lsls	r1, r3, #3
1001ce2c:	f7fa f91c 	bl	10017068 <realloc>
1001ce30:	6338      	str	r0, [r7, #48]	@ 0x30
1001ce32:	2800      	cmp	r0, #0
1001ce34:	f43f af05 	beq.w	1001cc42 <__ssvfscanf_r+0x14a6>
1001ce38:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001ce3a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001ce3c:	005b      	lsls	r3, r3, #1
1001ce3e:	1905      	adds	r5, r0, r4
1001ce40:	6010      	str	r0, [r2, #0]
1001ce42:	647b      	str	r3, [r7, #68]	@ 0x44
1001ce44:	46c3      	mov	fp, r8
1001ce46:	f7ff b85c 	b.w	1001bf02 <__ssvfscanf_r+0x766>
1001ce4a:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
1001ce4c:	45ab      	cmp	fp, r5
1001ce4e:	f67f ab94 	bls.w	1001c57a <__ssvfscanf_r+0xdde>
1001ce52:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001ce54:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001ce58:	4652      	mov	r2, sl
1001ce5a:	4620      	mov	r0, r4
1001ce5c:	f003 fa0a 	bl	10020274 <_sungetc_r>
1001ce60:	45ab      	cmp	fp, r5
1001ce62:	d1f7      	bne.n	1001ce54 <__ssvfscanf_r+0x16b8>
1001ce64:	f7ff ba7e 	b.w	1001c364 <__ssvfscanf_r+0xbc8>
1001ce68:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001ce6a:	459b      	cmp	fp, r3
1001ce6c:	f67f ab85 	bls.w	1001c57a <__ssvfscanf_r+0xdde>
1001ce70:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
1001ce72:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001ce76:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001ce78:	4652      	mov	r2, sl
1001ce7a:	f003 f9fb 	bl	10020274 <_sungetc_r>
1001ce7e:	45a3      	cmp	fp, r4
1001ce80:	d1f7      	bne.n	1001ce72 <__ssvfscanf_r+0x16d6>
1001ce82:	f7ff ba6f 	b.w	1001c364 <__ssvfscanf_r+0xbc8>
1001ce86:	f002 faed 	bl	1001f464 <_strtoull_r>
1001ce8a:	460b      	mov	r3, r1
1001ce8c:	e60e      	b.n	1001caac <__ssvfscanf_r+0x1310>
1001ce8e:	2200      	movs	r2, #0
1001ce90:	4694      	mov	ip, r2
1001ce92:	4613      	mov	r3, r2
1001ce94:	4693      	mov	fp, r2
1001ce96:	e682      	b.n	1001cb9e <__ssvfscanf_r+0x1402>
1001ce98:	461c      	mov	r4, r3
1001ce9a:	e9da 2300 	ldrd	r2, r3, [sl]
1001ce9e:	429d      	cmp	r5, r3
1001cea0:	eb02 0103 	add.w	r1, r2, r3
1001cea4:	dd51      	ble.n	1001cf4a <__ssvfscanf_r+0x17ae>
1001cea6:	f8ca 1000 	str.w	r1, [sl]
1001ceaa:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001ceac:	4651      	mov	r1, sl
1001ceae:	441c      	add	r4, r3
1001ceb0:	1aed      	subs	r5, r5, r3
1001ceb2:	f003 fa1b 	bl	100202ec <__ssrefill_r>
1001ceb6:	2800      	cmp	r0, #0
1001ceb8:	d0ef      	beq.n	1001ce9a <__ssvfscanf_r+0x16fe>
1001ceba:	2c00      	cmp	r4, #0
1001cebc:	f43e acda 	beq.w	1001b874 <__ssvfscanf_r+0xd8>
1001cec0:	44a1      	add	r9, r4
1001cec2:	f7fe bc91 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001cec6:	f8cd a000 	str.w	sl, [sp]
1001ceca:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cecc:	462b      	mov	r3, r5
1001cece:	4631      	mov	r1, r6
1001ced0:	2201      	movs	r2, #1
1001ced2:	f003 fa27 	bl	10020324 <_sfread_r>
1001ced6:	4604      	mov	r4, r0
1001ced8:	2800      	cmp	r0, #0
1001ceda:	f43e accb 	beq.w	1001b874 <__ssvfscanf_r+0xd8>
1001cede:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001cee0:	f8c7 b034 	str.w	fp, [r7, #52]	@ 0x34
1001cee4:	3301      	adds	r3, #1
1001cee6:	44a1      	add	r9, r4
1001cee8:	643b      	str	r3, [r7, #64]	@ 0x40
1001ceea:	f7fe bc7d 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001ceee:	647b      	str	r3, [r7, #68]	@ 0x44
1001cef0:	2b00      	cmp	r3, #0
1001cef2:	f43f aa37 	beq.w	1001c364 <__ssvfscanf_r+0xbc8>
1001cef6:	2080      	movs	r0, #128	@ 0x80
1001cef8:	f7f6 feb0 	bl	10013c5c <malloc>
1001cefc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cefe:	4683      	mov	fp, r0
1001cf00:	2800      	cmp	r0, #0
1001cf02:	f43f ae9e 	beq.w	1001cc42 <__ssvfscanf_r+0x14a6>
1001cf06:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
1001cf08:	6018      	str	r0, [r3, #0]
1001cf0a:	88ce      	ldrh	r6, [r1, #6]
1001cf0c:	888a      	ldrh	r2, [r1, #4]
1001cf0e:	4296      	cmp	r6, r2
1001cf10:	d337      	bcc.n	1001cf82 <__ssvfscanf_r+0x17e6>
1001cf12:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
1001cf16:	428a      	cmp	r2, r1
1001cf18:	647b      	str	r3, [r7, #68]	@ 0x44
1001cf1a:	f63f ad48 	bhi.w	1001c9ae <__ssvfscanf_r+0x1212>
1001cf1e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001cf20:	3208      	adds	r2, #8
1001cf22:	b294      	uxth	r4, r2
1001cf24:	6818      	ldr	r0, [r3, #0]
1001cf26:	00a1      	lsls	r1, r4, #2
1001cf28:	f7fa f89e 	bl	10017068 <realloc>
1001cf2c:	2800      	cmp	r0, #0
1001cf2e:	f43f ad3e 	beq.w	1001c9ae <__ssvfscanf_r+0x1212>
1001cf32:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001cf34:	809c      	strh	r4, [r3, #4]
1001cf36:	6018      	str	r0, [r3, #0]
1001cf38:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cf3a:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001cf3c:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
1001cf40:	3601      	adds	r6, #1
1001cf42:	80d6      	strh	r6, [r2, #6]
1001cf44:	46dc      	mov	ip, fp
1001cf46:	2220      	movs	r2, #32
1001cf48:	e629      	b.n	1001cb9e <__ssvfscanf_r+0x1402>
1001cf4a:	1b5b      	subs	r3, r3, r5
1001cf4c:	442a      	add	r2, r5
1001cf4e:	442c      	add	r4, r5
1001cf50:	f8ca 3004 	str.w	r3, [sl, #4]
1001cf54:	f8ca 2000 	str.w	r2, [sl]
1001cf58:	44a1      	add	r9, r4
1001cf5a:	f7fe bc45 	b.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001cf5e:	6808      	ldr	r0, [r1, #0]
1001cf60:	e510      	b.n	1001c984 <__ssvfscanf_r+0x11e8>
1001cf62:	4285      	cmp	r5, r0
1001cf64:	d9bb      	bls.n	1001cede <__ssvfscanf_r+0x1742>
1001cf66:	6830      	ldr	r0, [r6, #0]
1001cf68:	4621      	mov	r1, r4
1001cf6a:	f7fa f87d 	bl	10017068 <realloc>
1001cf6e:	2800      	cmp	r0, #0
1001cf70:	d0b5      	beq.n	1001cede <__ssvfscanf_r+0x1742>
1001cf72:	6030      	str	r0, [r6, #0]
1001cf74:	e7b3      	b.n	1001cede <__ssvfscanf_r+0x1742>
1001cf76:	f8ba 300c 	ldrh.w	r3, [sl, #12]
1001cf7a:	065b      	lsls	r3, r3, #25
1001cf7c:	f57e ac86 	bpl.w	1001b88c <__ssvfscanf_r+0xf0>
1001cf80:	e515      	b.n	1001c9ae <__ssvfscanf_r+0x1212>
1001cf82:	6808      	ldr	r0, [r1, #0]
1001cf84:	e7d9      	b.n	1001cf3a <__ssvfscanf_r+0x179e>
1001cf86:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
1001cf88:	1c91      	adds	r1, r2, #2
1001cf8a:	d034      	beq.n	1001cff6 <__ssvfscanf_r+0x185a>
1001cf8c:	2a03      	cmp	r2, #3
1001cf8e:	4499      	add	r9, r3
1001cf90:	d102      	bne.n	1001cf98 <__ssvfscanf_r+0x17fc>
1001cf92:	6833      	ldr	r3, [r6, #0]
1001cf94:	2b04      	cmp	r3, #4
1001cf96:	d000      	beq.n	1001cf9a <__ssvfscanf_r+0x17fe>
1001cf98:	3d01      	subs	r5, #1
1001cf9a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cf9c:	2b00      	cmp	r3, #0
1001cf9e:	f43f ae3d 	beq.w	1001cc1c <__ssvfscanf_r+0x1480>
1001cfa2:	2600      	movs	r6, #0
1001cfa4:	f8da 3004 	ldr.w	r3, [sl, #4]
1001cfa8:	2b00      	cmp	r3, #0
1001cfaa:	dd13      	ble.n	1001cfd4 <__ssvfscanf_r+0x1838>
1001cfac:	2d00      	cmp	r5, #0
1001cfae:	f47f adfc 	bne.w	1001cbaa <__ssvfscanf_r+0x140e>
1001cfb2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cfb4:	4642      	mov	r2, r8
1001cfb6:	46a4      	mov	ip, r4
1001cfb8:	f8d7 8030 	ldr.w	r8, [r7, #48]	@ 0x30
1001cfbc:	b123      	cbz	r3, 1001cfc8 <__ssvfscanf_r+0x182c>
1001cfbe:	ebab 010c 	sub.w	r1, fp, ip
1001cfc2:	ebb2 0fa1 	cmp.w	r2, r1, asr #2
1001cfc6:	d821      	bhi.n	1001d00c <__ssvfscanf_r+0x1870>
1001cfc8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cfca:	2b00      	cmp	r3, #0
1001cfcc:	f47e ac0c 	bne.w	1001b7e8 <__ssvfscanf_r+0x4c>
1001cfd0:	f7fe bfba 	b.w	1001bf48 <__ssvfscanf_r+0x7ac>
1001cfd4:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cfd6:	4651      	mov	r1, sl
1001cfd8:	f003 f988 	bl	100202ec <__ssrefill_r>
1001cfdc:	2800      	cmp	r0, #0
1001cfde:	d0e5      	beq.n	1001cfac <__ssvfscanf_r+0x1810>
1001cfe0:	4642      	mov	r2, r8
1001cfe2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cfe4:	f8d7 8030 	ldr.w	r8, [r7, #48]	@ 0x30
1001cfe8:	46a4      	mov	ip, r4
1001cfea:	2e00      	cmp	r6, #0
1001cfec:	f47e ac42 	bne.w	1001b874 <__ssvfscanf_r+0xd8>
1001cff0:	2b00      	cmp	r3, #0
1001cff2:	d1e4      	bne.n	1001cfbe <__ssvfscanf_r+0x1822>
1001cff4:	e7e8      	b.n	1001cfc8 <__ssvfscanf_r+0x182c>
1001cff6:	461e      	mov	r6, r3
1001cff8:	e7d4      	b.n	1001cfa4 <__ssvfscanf_r+0x1808>
1001cffa:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cffc:	eb00 0b06 	add.w	fp, r0, r6
1001d000:	6018      	str	r0, [r3, #0]
1001d002:	ea4f 0848 	mov.w	r8, r8, lsl #1
1001d006:	f10b 0b04 	add.w	fp, fp, #4
1001d00a:	e7ca      	b.n	1001cfa2 <__ssvfscanf_r+0x1806>
1001d00c:	6818      	ldr	r0, [r3, #0]
1001d00e:	647b      	str	r3, [r7, #68]	@ 0x44
1001d010:	f7fa f82a 	bl	10017068 <realloc>
1001d014:	2800      	cmp	r0, #0
1001d016:	d0d7      	beq.n	1001cfc8 <__ssvfscanf_r+0x182c>
1001d018:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001d01a:	6018      	str	r0, [r3, #0]
1001d01c:	e7d4      	b.n	1001cfc8 <__ssvfscanf_r+0x182c>
1001d01e:	bf00      	nop

1001d020 <_putc_r>:
1001d020:	b570      	push	{r4, r5, r6, lr}
1001d022:	460e      	mov	r6, r1
1001d024:	4614      	mov	r4, r2
1001d026:	4605      	mov	r5, r0
1001d028:	b110      	cbz	r0, 1001d030 <_putc_r+0x10>
1001d02a:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001d02c:	2b00      	cmp	r3, #0
1001d02e:	d02f      	beq.n	1001d090 <_putc_r+0x70>
1001d030:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001d032:	07d8      	lsls	r0, r3, #31
1001d034:	d402      	bmi.n	1001d03c <_putc_r+0x1c>
1001d036:	89a3      	ldrh	r3, [r4, #12]
1001d038:	0599      	lsls	r1, r3, #22
1001d03a:	d520      	bpl.n	1001d07e <_putc_r+0x5e>
1001d03c:	68a3      	ldr	r3, [r4, #8]
1001d03e:	3b01      	subs	r3, #1
1001d040:	2b00      	cmp	r3, #0
1001d042:	60a3      	str	r3, [r4, #8]
1001d044:	da19      	bge.n	1001d07a <_putc_r+0x5a>
1001d046:	69a2      	ldr	r2, [r4, #24]
1001d048:	4293      	cmp	r3, r2
1001d04a:	db0f      	blt.n	1001d06c <_putc_r+0x4c>
1001d04c:	b2f0      	uxtb	r0, r6
1001d04e:	280a      	cmp	r0, #10
1001d050:	d00c      	beq.n	1001d06c <_putc_r+0x4c>
1001d052:	6823      	ldr	r3, [r4, #0]
1001d054:	1c5a      	adds	r2, r3, #1
1001d056:	6022      	str	r2, [r4, #0]
1001d058:	4605      	mov	r5, r0
1001d05a:	701e      	strb	r6, [r3, #0]
1001d05c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001d05e:	07da      	lsls	r2, r3, #31
1001d060:	d402      	bmi.n	1001d068 <_putc_r+0x48>
1001d062:	89a3      	ldrh	r3, [r4, #12]
1001d064:	059b      	lsls	r3, r3, #22
1001d066:	d50e      	bpl.n	1001d086 <_putc_r+0x66>
1001d068:	4628      	mov	r0, r5
1001d06a:	bd70      	pop	{r4, r5, r6, pc}
1001d06c:	4628      	mov	r0, r5
1001d06e:	4622      	mov	r2, r4
1001d070:	4631      	mov	r1, r6
1001d072:	f001 ff75 	bl	1001ef60 <__swbuf_r>
1001d076:	4605      	mov	r5, r0
1001d078:	e7f0      	b.n	1001d05c <_putc_r+0x3c>
1001d07a:	b2f0      	uxtb	r0, r6
1001d07c:	e7e9      	b.n	1001d052 <_putc_r+0x32>
1001d07e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001d080:	f7fb fa3a 	bl	100184f8 <__retarget_lock_acquire_recursive>
1001d084:	e7da      	b.n	1001d03c <_putc_r+0x1c>
1001d086:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001d088:	f7fb fa38 	bl	100184fc <__retarget_lock_release_recursive>
1001d08c:	4628      	mov	r0, r5
1001d08e:	bd70      	pop	{r4, r5, r6, pc}
1001d090:	f7fa fc08 	bl	100178a4 <__sinit>
1001d094:	e7cc      	b.n	1001d030 <_putc_r+0x10>
1001d096:	bf00      	nop

1001d098 <_Balloc>:
1001d098:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001d09a:	b570      	push	{r4, r5, r6, lr}
1001d09c:	4605      	mov	r5, r0
1001d09e:	460c      	mov	r4, r1
1001d0a0:	b14b      	cbz	r3, 1001d0b6 <_Balloc+0x1e>
1001d0a2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1001d0a6:	b180      	cbz	r0, 1001d0ca <_Balloc+0x32>
1001d0a8:	6802      	ldr	r2, [r0, #0]
1001d0aa:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
1001d0ae:	2300      	movs	r3, #0
1001d0b0:	60c3      	str	r3, [r0, #12]
1001d0b2:	6103      	str	r3, [r0, #16]
1001d0b4:	bd70      	pop	{r4, r5, r6, pc}
1001d0b6:	2221      	movs	r2, #33	@ 0x21
1001d0b8:	2104      	movs	r1, #4
1001d0ba:	f002 fbcd 	bl	1001f858 <_calloc_r>
1001d0be:	4603      	mov	r3, r0
1001d0c0:	6468      	str	r0, [r5, #68]	@ 0x44
1001d0c2:	2800      	cmp	r0, #0
1001d0c4:	d1ed      	bne.n	1001d0a2 <_Balloc+0xa>
1001d0c6:	2000      	movs	r0, #0
1001d0c8:	bd70      	pop	{r4, r5, r6, pc}
1001d0ca:	2101      	movs	r1, #1
1001d0cc:	fa01 f604 	lsl.w	r6, r1, r4
1001d0d0:	1d72      	adds	r2, r6, #5
1001d0d2:	0092      	lsls	r2, r2, #2
1001d0d4:	4628      	mov	r0, r5
1001d0d6:	f002 fbbf 	bl	1001f858 <_calloc_r>
1001d0da:	2800      	cmp	r0, #0
1001d0dc:	d0f3      	beq.n	1001d0c6 <_Balloc+0x2e>
1001d0de:	e9c0 4601 	strd	r4, r6, [r0, #4]
1001d0e2:	e7e4      	b.n	1001d0ae <_Balloc+0x16>

1001d0e4 <_Bfree>:
1001d0e4:	b131      	cbz	r1, 1001d0f4 <_Bfree+0x10>
1001d0e6:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001d0e8:	684a      	ldr	r2, [r1, #4]
1001d0ea:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1001d0ee:	6008      	str	r0, [r1, #0]
1001d0f0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
1001d0f4:	4770      	bx	lr
1001d0f6:	bf00      	nop

1001d0f8 <__multadd>:
1001d0f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001d0fc:	690d      	ldr	r5, [r1, #16]
1001d0fe:	4607      	mov	r7, r0
1001d100:	460e      	mov	r6, r1
1001d102:	461c      	mov	r4, r3
1001d104:	f101 0e14 	add.w	lr, r1, #20
1001d108:	2000      	movs	r0, #0
1001d10a:	f8de 1000 	ldr.w	r1, [lr]
1001d10e:	b28b      	uxth	r3, r1
1001d110:	fb02 4303 	mla	r3, r2, r3, r4
1001d114:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001d118:	0c09      	lsrs	r1, r1, #16
1001d11a:	fb02 cc01 	mla	ip, r2, r1, ip
1001d11e:	3001      	adds	r0, #1
1001d120:	b29b      	uxth	r3, r3
1001d122:	eb03 430c 	add.w	r3, r3, ip, lsl #16
1001d126:	4285      	cmp	r5, r0
1001d128:	f84e 3b04 	str.w	r3, [lr], #4
1001d12c:	ea4f 441c 	mov.w	r4, ip, lsr #16
1001d130:	dceb      	bgt.n	1001d10a <__multadd+0x12>
1001d132:	b13c      	cbz	r4, 1001d144 <__multadd+0x4c>
1001d134:	68b3      	ldr	r3, [r6, #8]
1001d136:	42ab      	cmp	r3, r5
1001d138:	dd07      	ble.n	1001d14a <__multadd+0x52>
1001d13a:	eb06 0385 	add.w	r3, r6, r5, lsl #2
1001d13e:	3501      	adds	r5, #1
1001d140:	615c      	str	r4, [r3, #20]
1001d142:	6135      	str	r5, [r6, #16]
1001d144:	4630      	mov	r0, r6
1001d146:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d14a:	6871      	ldr	r1, [r6, #4]
1001d14c:	4638      	mov	r0, r7
1001d14e:	3101      	adds	r1, #1
1001d150:	f7ff ffa2 	bl	1001d098 <_Balloc>
1001d154:	4680      	mov	r8, r0
1001d156:	b1a8      	cbz	r0, 1001d184 <__multadd+0x8c>
1001d158:	6932      	ldr	r2, [r6, #16]
1001d15a:	3202      	adds	r2, #2
1001d15c:	f106 010c 	add.w	r1, r6, #12
1001d160:	0092      	lsls	r2, r2, #2
1001d162:	300c      	adds	r0, #12
1001d164:	f7fb fa1c 	bl	100185a0 <memcpy>
1001d168:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001d16a:	6872      	ldr	r2, [r6, #4]
1001d16c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001d170:	6031      	str	r1, [r6, #0]
1001d172:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
1001d176:	4646      	mov	r6, r8
1001d178:	eb06 0385 	add.w	r3, r6, r5, lsl #2
1001d17c:	3501      	adds	r5, #1
1001d17e:	615c      	str	r4, [r3, #20]
1001d180:	6135      	str	r5, [r6, #16]
1001d182:	e7df      	b.n	1001d144 <__multadd+0x4c>
1001d184:	4b02      	ldr	r3, [pc, #8]	@ (1001d190 <__multadd+0x98>)
1001d186:	4803      	ldr	r0, [pc, #12]	@ (1001d194 <__multadd+0x9c>)
1001d188:	4642      	mov	r2, r8
1001d18a:	21ba      	movs	r1, #186	@ 0xba
1001d18c:	f002 fa80 	bl	1001f690 <__assert_func>
1001d190:	10023c80 	.word	0x10023c80
1001d194:	10023d44 	.word	0x10023d44

1001d198 <__s2b>:
1001d198:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001d19c:	4617      	mov	r7, r2
1001d19e:	4a27      	ldr	r2, [pc, #156]	@ (1001d23c <__s2b+0xa4>)
1001d1a0:	461e      	mov	r6, r3
1001d1a2:	3308      	adds	r3, #8
1001d1a4:	460c      	mov	r4, r1
1001d1a6:	2e09      	cmp	r6, #9
1001d1a8:	fb82 1203 	smull	r1, r2, r2, r3
1001d1ac:	ea4f 73e3 	mov.w	r3, r3, asr #31
1001d1b0:	4605      	mov	r5, r0
1001d1b2:	ebc3 0362 	rsb	r3, r3, r2, asr #1
1001d1b6:	dd39      	ble.n	1001d22c <__s2b+0x94>
1001d1b8:	f04f 0c01 	mov.w	ip, #1
1001d1bc:	2100      	movs	r1, #0
1001d1be:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
1001d1c2:	4563      	cmp	r3, ip
1001d1c4:	f101 0101 	add.w	r1, r1, #1
1001d1c8:	dcf9      	bgt.n	1001d1be <__s2b+0x26>
1001d1ca:	4628      	mov	r0, r5
1001d1cc:	f7ff ff64 	bl	1001d098 <_Balloc>
1001d1d0:	4601      	mov	r1, r0
1001d1d2:	b368      	cbz	r0, 1001d230 <__s2b+0x98>
1001d1d4:	9b08      	ldr	r3, [sp, #32]
1001d1d6:	6143      	str	r3, [r0, #20]
1001d1d8:	2f09      	cmp	r7, #9
1001d1da:	f04f 0301 	mov.w	r3, #1
1001d1de:	6103      	str	r3, [r0, #16]
1001d1e0:	dc12      	bgt.n	1001d208 <__s2b+0x70>
1001d1e2:	340a      	adds	r4, #10
1001d1e4:	2709      	movs	r7, #9
1001d1e6:	42be      	cmp	r6, r7
1001d1e8:	dd0b      	ble.n	1001d202 <__s2b+0x6a>
1001d1ea:	1bf6      	subs	r6, r6, r7
1001d1ec:	4426      	add	r6, r4
1001d1ee:	f814 3b01 	ldrb.w	r3, [r4], #1
1001d1f2:	220a      	movs	r2, #10
1001d1f4:	3b30      	subs	r3, #48	@ 0x30
1001d1f6:	4628      	mov	r0, r5
1001d1f8:	f7ff ff7e 	bl	1001d0f8 <__multadd>
1001d1fc:	42a6      	cmp	r6, r4
1001d1fe:	4601      	mov	r1, r0
1001d200:	d1f5      	bne.n	1001d1ee <__s2b+0x56>
1001d202:	4608      	mov	r0, r1
1001d204:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001d208:	f104 0909 	add.w	r9, r4, #9
1001d20c:	46c8      	mov	r8, r9
1001d20e:	443c      	add	r4, r7
1001d210:	f818 3b01 	ldrb.w	r3, [r8], #1
1001d214:	220a      	movs	r2, #10
1001d216:	3b30      	subs	r3, #48	@ 0x30
1001d218:	4628      	mov	r0, r5
1001d21a:	f7ff ff6d 	bl	1001d0f8 <__multadd>
1001d21e:	45a0      	cmp	r8, r4
1001d220:	4601      	mov	r1, r0
1001d222:	d1f5      	bne.n	1001d210 <__s2b+0x78>
1001d224:	f1a7 0408 	sub.w	r4, r7, #8
1001d228:	444c      	add	r4, r9
1001d22a:	e7dc      	b.n	1001d1e6 <__s2b+0x4e>
1001d22c:	2100      	movs	r1, #0
1001d22e:	e7cc      	b.n	1001d1ca <__s2b+0x32>
1001d230:	460a      	mov	r2, r1
1001d232:	4b03      	ldr	r3, [pc, #12]	@ (1001d240 <__s2b+0xa8>)
1001d234:	4803      	ldr	r0, [pc, #12]	@ (1001d244 <__s2b+0xac>)
1001d236:	21d3      	movs	r1, #211	@ 0xd3
1001d238:	f002 fa2a 	bl	1001f690 <__assert_func>
1001d23c:	38e38e39 	.word	0x38e38e39
1001d240:	10023c80 	.word	0x10023c80
1001d244:	10023d44 	.word	0x10023d44

1001d248 <__hi0bits>:
1001d248:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
1001d24c:	4603      	mov	r3, r0
1001d24e:	bf36      	itet	cc
1001d250:	0403      	lslcc	r3, r0, #16
1001d252:	2000      	movcs	r0, #0
1001d254:	2010      	movcc	r0, #16
1001d256:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
1001d25a:	bf3c      	itt	cc
1001d25c:	021b      	lslcc	r3, r3, #8
1001d25e:	3008      	addcc	r0, #8
1001d260:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
1001d264:	bf3c      	itt	cc
1001d266:	011b      	lslcc	r3, r3, #4
1001d268:	3004      	addcc	r0, #4
1001d26a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
1001d26e:	d303      	bcc.n	1001d278 <__hi0bits+0x30>
1001d270:	2b00      	cmp	r3, #0
1001d272:	db06      	blt.n	1001d282 <__hi0bits+0x3a>
1001d274:	3001      	adds	r0, #1
1001d276:	4770      	bx	lr
1001d278:	009b      	lsls	r3, r3, #2
1001d27a:	d403      	bmi.n	1001d284 <__hi0bits+0x3c>
1001d27c:	005b      	lsls	r3, r3, #1
1001d27e:	d403      	bmi.n	1001d288 <__hi0bits+0x40>
1001d280:	2020      	movs	r0, #32
1001d282:	4770      	bx	lr
1001d284:	3002      	adds	r0, #2
1001d286:	4770      	bx	lr
1001d288:	3003      	adds	r0, #3
1001d28a:	4770      	bx	lr

1001d28c <__lo0bits>:
1001d28c:	6803      	ldr	r3, [r0, #0]
1001d28e:	f013 0207 	ands.w	r2, r3, #7
1001d292:	4601      	mov	r1, r0
1001d294:	d007      	beq.n	1001d2a6 <__lo0bits+0x1a>
1001d296:	07da      	lsls	r2, r3, #31
1001d298:	d41f      	bmi.n	1001d2da <__lo0bits+0x4e>
1001d29a:	0798      	lsls	r0, r3, #30
1001d29c:	d521      	bpl.n	1001d2e2 <__lo0bits+0x56>
1001d29e:	085b      	lsrs	r3, r3, #1
1001d2a0:	600b      	str	r3, [r1, #0]
1001d2a2:	2001      	movs	r0, #1
1001d2a4:	4770      	bx	lr
1001d2a6:	b298      	uxth	r0, r3
1001d2a8:	b1a0      	cbz	r0, 1001d2d4 <__lo0bits+0x48>
1001d2aa:	4610      	mov	r0, r2
1001d2ac:	b2da      	uxtb	r2, r3
1001d2ae:	b90a      	cbnz	r2, 1001d2b4 <__lo0bits+0x28>
1001d2b0:	3008      	adds	r0, #8
1001d2b2:	0a1b      	lsrs	r3, r3, #8
1001d2b4:	071a      	lsls	r2, r3, #28
1001d2b6:	bf04      	itt	eq
1001d2b8:	091b      	lsreq	r3, r3, #4
1001d2ba:	3004      	addeq	r0, #4
1001d2bc:	079a      	lsls	r2, r3, #30
1001d2be:	bf04      	itt	eq
1001d2c0:	089b      	lsreq	r3, r3, #2
1001d2c2:	3002      	addeq	r0, #2
1001d2c4:	07da      	lsls	r2, r3, #31
1001d2c6:	d403      	bmi.n	1001d2d0 <__lo0bits+0x44>
1001d2c8:	085b      	lsrs	r3, r3, #1
1001d2ca:	f100 0001 	add.w	r0, r0, #1
1001d2ce:	d006      	beq.n	1001d2de <__lo0bits+0x52>
1001d2d0:	600b      	str	r3, [r1, #0]
1001d2d2:	4770      	bx	lr
1001d2d4:	0c1b      	lsrs	r3, r3, #16
1001d2d6:	2010      	movs	r0, #16
1001d2d8:	e7e8      	b.n	1001d2ac <__lo0bits+0x20>
1001d2da:	2000      	movs	r0, #0
1001d2dc:	4770      	bx	lr
1001d2de:	2020      	movs	r0, #32
1001d2e0:	4770      	bx	lr
1001d2e2:	089b      	lsrs	r3, r3, #2
1001d2e4:	600b      	str	r3, [r1, #0]
1001d2e6:	2002      	movs	r0, #2
1001d2e8:	4770      	bx	lr
1001d2ea:	bf00      	nop

1001d2ec <__i2b>:
1001d2ec:	b538      	push	{r3, r4, r5, lr}
1001d2ee:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001d2f0:	4604      	mov	r4, r0
1001d2f2:	460d      	mov	r5, r1
1001d2f4:	b14b      	cbz	r3, 1001d30a <__i2b+0x1e>
1001d2f6:	6858      	ldr	r0, [r3, #4]
1001d2f8:	b1b0      	cbz	r0, 1001d328 <__i2b+0x3c>
1001d2fa:	6802      	ldr	r2, [r0, #0]
1001d2fc:	605a      	str	r2, [r3, #4]
1001d2fe:	2200      	movs	r2, #0
1001d300:	2301      	movs	r3, #1
1001d302:	6145      	str	r5, [r0, #20]
1001d304:	60c2      	str	r2, [r0, #12]
1001d306:	6103      	str	r3, [r0, #16]
1001d308:	bd38      	pop	{r3, r4, r5, pc}
1001d30a:	2221      	movs	r2, #33	@ 0x21
1001d30c:	2104      	movs	r1, #4
1001d30e:	f002 faa3 	bl	1001f858 <_calloc_r>
1001d312:	4603      	mov	r3, r0
1001d314:	6460      	str	r0, [r4, #68]	@ 0x44
1001d316:	2800      	cmp	r0, #0
1001d318:	d1ed      	bne.n	1001d2f6 <__i2b+0xa>
1001d31a:	4b09      	ldr	r3, [pc, #36]	@ (1001d340 <__i2b+0x54>)
1001d31c:	4809      	ldr	r0, [pc, #36]	@ (1001d344 <__i2b+0x58>)
1001d31e:	2200      	movs	r2, #0
1001d320:	f240 1145 	movw	r1, #325	@ 0x145
1001d324:	f002 f9b4 	bl	1001f690 <__assert_func>
1001d328:	221c      	movs	r2, #28
1001d32a:	2101      	movs	r1, #1
1001d32c:	4620      	mov	r0, r4
1001d32e:	f002 fa93 	bl	1001f858 <_calloc_r>
1001d332:	2800      	cmp	r0, #0
1001d334:	d0f1      	beq.n	1001d31a <__i2b+0x2e>
1001d336:	2201      	movs	r2, #1
1001d338:	2302      	movs	r3, #2
1001d33a:	6042      	str	r2, [r0, #4]
1001d33c:	6083      	str	r3, [r0, #8]
1001d33e:	e7de      	b.n	1001d2fe <__i2b+0x12>
1001d340:	10023c80 	.word	0x10023c80
1001d344:	10023d44 	.word	0x10023d44

1001d348 <__multiply>:
1001d348:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001d34c:	f8d1 8010 	ldr.w	r8, [r1, #16]
1001d350:	6915      	ldr	r5, [r2, #16]
1001d352:	45a8      	cmp	r8, r5
1001d354:	b085      	sub	sp, #20
1001d356:	460e      	mov	r6, r1
1001d358:	4692      	mov	sl, r2
1001d35a:	db05      	blt.n	1001d368 <__multiply+0x20>
1001d35c:	462a      	mov	r2, r5
1001d35e:	4653      	mov	r3, sl
1001d360:	4645      	mov	r5, r8
1001d362:	468a      	mov	sl, r1
1001d364:	4690      	mov	r8, r2
1001d366:	461e      	mov	r6, r3
1001d368:	f8da 3008 	ldr.w	r3, [sl, #8]
1001d36c:	f8da 1004 	ldr.w	r1, [sl, #4]
1001d370:	eb05 0408 	add.w	r4, r5, r8
1001d374:	42a3      	cmp	r3, r4
1001d376:	bfb8      	it	lt
1001d378:	3101      	addlt	r1, #1
1001d37a:	f7ff fe8d 	bl	1001d098 <_Balloc>
1001d37e:	4684      	mov	ip, r0
1001d380:	2800      	cmp	r0, #0
1001d382:	f000 808b 	beq.w	1001d49c <__multiply+0x154>
1001d386:	f100 0714 	add.w	r7, r0, #20
1001d38a:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
1001d38e:	4577      	cmp	r7, lr
1001d390:	d205      	bcs.n	1001d39e <__multiply+0x56>
1001d392:	463b      	mov	r3, r7
1001d394:	2200      	movs	r2, #0
1001d396:	f843 2b04 	str.w	r2, [r3], #4
1001d39a:	459e      	cmp	lr, r3
1001d39c:	d8fb      	bhi.n	1001d396 <__multiply+0x4e>
1001d39e:	3614      	adds	r6, #20
1001d3a0:	eb06 0888 	add.w	r8, r6, r8, lsl #2
1001d3a4:	f10a 0914 	add.w	r9, sl, #20
1001d3a8:	4546      	cmp	r6, r8
1001d3aa:	eb09 0585 	add.w	r5, r9, r5, lsl #2
1001d3ae:	d266      	bcs.n	1001d47e <__multiply+0x136>
1001d3b0:	eba5 030a 	sub.w	r3, r5, sl
1001d3b4:	3b15      	subs	r3, #21
1001d3b6:	f023 0303 	bic.w	r3, r3, #3
1001d3ba:	f10a 0a15 	add.w	sl, sl, #21
1001d3be:	3304      	adds	r3, #4
1001d3c0:	4555      	cmp	r5, sl
1001d3c2:	bf2c      	ite	cs
1001d3c4:	469b      	movcs	fp, r3
1001d3c6:	f04f 0b04 	movcc.w	fp, #4
1001d3ca:	f8cd e008 	str.w	lr, [sp, #8]
1001d3ce:	9403      	str	r4, [sp, #12]
1001d3d0:	46ae      	mov	lr, r5
1001d3d2:	46e2      	mov	sl, ip
1001d3d4:	e005      	b.n	1001d3e2 <__multiply+0x9a>
1001d3d6:	0c09      	lsrs	r1, r1, #16
1001d3d8:	d12a      	bne.n	1001d430 <__multiply+0xe8>
1001d3da:	45b0      	cmp	r8, r6
1001d3dc:	f107 0704 	add.w	r7, r7, #4
1001d3e0:	d94a      	bls.n	1001d478 <__multiply+0x130>
1001d3e2:	f856 1b04 	ldr.w	r1, [r6], #4
1001d3e6:	b28d      	uxth	r5, r1
1001d3e8:	2d00      	cmp	r5, #0
1001d3ea:	d0f4      	beq.n	1001d3d6 <__multiply+0x8e>
1001d3ec:	46cc      	mov	ip, r9
1001d3ee:	463c      	mov	r4, r7
1001d3f0:	2300      	movs	r3, #0
1001d3f2:	9601      	str	r6, [sp, #4]
1001d3f4:	f85c 0b04 	ldr.w	r0, [ip], #4
1001d3f8:	6821      	ldr	r1, [r4, #0]
1001d3fa:	b286      	uxth	r6, r0
1001d3fc:	b28a      	uxth	r2, r1
1001d3fe:	0c00      	lsrs	r0, r0, #16
1001d400:	fb05 2206 	mla	r2, r5, r6, r2
1001d404:	0c09      	lsrs	r1, r1, #16
1001d406:	441a      	add	r2, r3
1001d408:	fb05 1100 	mla	r1, r5, r0, r1
1001d40c:	eb01 4112 	add.w	r1, r1, r2, lsr #16
1001d410:	b292      	uxth	r2, r2
1001d412:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
1001d416:	45e6      	cmp	lr, ip
1001d418:	f844 2b04 	str.w	r2, [r4], #4
1001d41c:	ea4f 4311 	mov.w	r3, r1, lsr #16
1001d420:	d8e8      	bhi.n	1001d3f4 <__multiply+0xac>
1001d422:	9e01      	ldr	r6, [sp, #4]
1001d424:	f847 300b 	str.w	r3, [r7, fp]
1001d428:	f856 1c04 	ldr.w	r1, [r6, #-4]
1001d42c:	0c09      	lsrs	r1, r1, #16
1001d42e:	d0d4      	beq.n	1001d3da <__multiply+0x92>
1001d430:	683b      	ldr	r3, [r7, #0]
1001d432:	2200      	movs	r2, #0
1001d434:	4648      	mov	r0, r9
1001d436:	461d      	mov	r5, r3
1001d438:	463c      	mov	r4, r7
1001d43a:	4694      	mov	ip, r2
1001d43c:	8802      	ldrh	r2, [r0, #0]
1001d43e:	fb01 c202 	mla	r2, r1, r2, ip
1001d442:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1001d446:	b29b      	uxth	r3, r3
1001d448:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1001d44c:	f844 3b04 	str.w	r3, [r4], #4
1001d450:	f850 3b04 	ldr.w	r3, [r0], #4
1001d454:	6825      	ldr	r5, [r4, #0]
1001d456:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001d45a:	b2ab      	uxth	r3, r5
1001d45c:	fb01 330c 	mla	r3, r1, ip, r3
1001d460:	eb03 4312 	add.w	r3, r3, r2, lsr #16
1001d464:	4586      	cmp	lr, r0
1001d466:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001d46a:	d8e7      	bhi.n	1001d43c <__multiply+0xf4>
1001d46c:	45b0      	cmp	r8, r6
1001d46e:	f847 300b 	str.w	r3, [r7, fp]
1001d472:	f107 0704 	add.w	r7, r7, #4
1001d476:	d8b4      	bhi.n	1001d3e2 <__multiply+0x9a>
1001d478:	e9dd e402 	ldrd	lr, r4, [sp, #8]
1001d47c:	46d4      	mov	ip, sl
1001d47e:	2c00      	cmp	r4, #0
1001d480:	dc02      	bgt.n	1001d488 <__multiply+0x140>
1001d482:	e005      	b.n	1001d490 <__multiply+0x148>
1001d484:	3c01      	subs	r4, #1
1001d486:	d003      	beq.n	1001d490 <__multiply+0x148>
1001d488:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
1001d48c:	2b00      	cmp	r3, #0
1001d48e:	d0f9      	beq.n	1001d484 <__multiply+0x13c>
1001d490:	4660      	mov	r0, ip
1001d492:	f8cc 4010 	str.w	r4, [ip, #16]
1001d496:	b005      	add	sp, #20
1001d498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d49c:	4b03      	ldr	r3, [pc, #12]	@ (1001d4ac <__multiply+0x164>)
1001d49e:	4804      	ldr	r0, [pc, #16]	@ (1001d4b0 <__multiply+0x168>)
1001d4a0:	4662      	mov	r2, ip
1001d4a2:	f44f 71b1 	mov.w	r1, #354	@ 0x162
1001d4a6:	f002 f8f3 	bl	1001f690 <__assert_func>
1001d4aa:	bf00      	nop
1001d4ac:	10023c80 	.word	0x10023c80
1001d4b0:	10023d44 	.word	0x10023d44

1001d4b4 <__pow5mult>:
1001d4b4:	f012 0303 	ands.w	r3, r2, #3
1001d4b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001d4bc:	4614      	mov	r4, r2
1001d4be:	4607      	mov	r7, r0
1001d4c0:	d12c      	bne.n	1001d51c <__pow5mult+0x68>
1001d4c2:	460d      	mov	r5, r1
1001d4c4:	10a4      	asrs	r4, r4, #2
1001d4c6:	d01c      	beq.n	1001d502 <__pow5mult+0x4e>
1001d4c8:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
1001d4ca:	b386      	cbz	r6, 1001d52e <__pow5mult+0x7a>
1001d4cc:	07e3      	lsls	r3, r4, #31
1001d4ce:	f04f 0800 	mov.w	r8, #0
1001d4d2:	d406      	bmi.n	1001d4e2 <__pow5mult+0x2e>
1001d4d4:	1064      	asrs	r4, r4, #1
1001d4d6:	d014      	beq.n	1001d502 <__pow5mult+0x4e>
1001d4d8:	6830      	ldr	r0, [r6, #0]
1001d4da:	b1a8      	cbz	r0, 1001d508 <__pow5mult+0x54>
1001d4dc:	4606      	mov	r6, r0
1001d4de:	07e3      	lsls	r3, r4, #31
1001d4e0:	d5f8      	bpl.n	1001d4d4 <__pow5mult+0x20>
1001d4e2:	4632      	mov	r2, r6
1001d4e4:	4629      	mov	r1, r5
1001d4e6:	4638      	mov	r0, r7
1001d4e8:	f7ff ff2e 	bl	1001d348 <__multiply>
1001d4ec:	b135      	cbz	r5, 1001d4fc <__pow5mult+0x48>
1001d4ee:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001d4f0:	6869      	ldr	r1, [r5, #4]
1001d4f2:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001d4f6:	602a      	str	r2, [r5, #0]
1001d4f8:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
1001d4fc:	1064      	asrs	r4, r4, #1
1001d4fe:	4605      	mov	r5, r0
1001d500:	d1ea      	bne.n	1001d4d8 <__pow5mult+0x24>
1001d502:	4628      	mov	r0, r5
1001d504:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d508:	4632      	mov	r2, r6
1001d50a:	4631      	mov	r1, r6
1001d50c:	4638      	mov	r0, r7
1001d50e:	f7ff ff1b 	bl	1001d348 <__multiply>
1001d512:	6030      	str	r0, [r6, #0]
1001d514:	f8c0 8000 	str.w	r8, [r0]
1001d518:	4606      	mov	r6, r0
1001d51a:	e7e0      	b.n	1001d4de <__pow5mult+0x2a>
1001d51c:	3b01      	subs	r3, #1
1001d51e:	4a0f      	ldr	r2, [pc, #60]	@ (1001d55c <__pow5mult+0xa8>)
1001d520:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001d524:	2300      	movs	r3, #0
1001d526:	f7ff fde7 	bl	1001d0f8 <__multadd>
1001d52a:	4605      	mov	r5, r0
1001d52c:	e7ca      	b.n	1001d4c4 <__pow5mult+0x10>
1001d52e:	2101      	movs	r1, #1
1001d530:	4638      	mov	r0, r7
1001d532:	f7ff fdb1 	bl	1001d098 <_Balloc>
1001d536:	4606      	mov	r6, r0
1001d538:	b140      	cbz	r0, 1001d54c <__pow5mult+0x98>
1001d53a:	2301      	movs	r3, #1
1001d53c:	f240 2271 	movw	r2, #625	@ 0x271
1001d540:	e9c0 3204 	strd	r3, r2, [r0, #16]
1001d544:	2300      	movs	r3, #0
1001d546:	6438      	str	r0, [r7, #64]	@ 0x40
1001d548:	6003      	str	r3, [r0, #0]
1001d54a:	e7bf      	b.n	1001d4cc <__pow5mult+0x18>
1001d54c:	4b04      	ldr	r3, [pc, #16]	@ (1001d560 <__pow5mult+0xac>)
1001d54e:	4805      	ldr	r0, [pc, #20]	@ (1001d564 <__pow5mult+0xb0>)
1001d550:	4632      	mov	r2, r6
1001d552:	f240 1145 	movw	r1, #325	@ 0x145
1001d556:	f002 f89b 	bl	1001f690 <__assert_func>
1001d55a:	bf00      	nop
1001d55c:	10023da8 	.word	0x10023da8
1001d560:	10023c80 	.word	0x10023c80
1001d564:	10023d44 	.word	0x10023d44

1001d568 <__lshift>:
1001d568:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001d56c:	460c      	mov	r4, r1
1001d56e:	4690      	mov	r8, r2
1001d570:	6927      	ldr	r7, [r4, #16]
1001d572:	68a3      	ldr	r3, [r4, #8]
1001d574:	6849      	ldr	r1, [r1, #4]
1001d576:	eb07 1762 	add.w	r7, r7, r2, asr #5
1001d57a:	1c7d      	adds	r5, r7, #1
1001d57c:	429d      	cmp	r5, r3
1001d57e:	4606      	mov	r6, r0
1001d580:	ea4f 1962 	mov.w	r9, r2, asr #5
1001d584:	dd04      	ble.n	1001d590 <__lshift+0x28>
1001d586:	005b      	lsls	r3, r3, #1
1001d588:	429d      	cmp	r5, r3
1001d58a:	f101 0101 	add.w	r1, r1, #1
1001d58e:	dcfa      	bgt.n	1001d586 <__lshift+0x1e>
1001d590:	4630      	mov	r0, r6
1001d592:	f7ff fd81 	bl	1001d098 <_Balloc>
1001d596:	4684      	mov	ip, r0
1001d598:	2800      	cmp	r0, #0
1001d59a:	d051      	beq.n	1001d640 <__lshift+0xd8>
1001d59c:	f1b9 0f00 	cmp.w	r9, #0
1001d5a0:	f100 0014 	add.w	r0, r0, #20
1001d5a4:	dd0e      	ble.n	1001d5c4 <__lshift+0x5c>
1001d5a6:	f109 0205 	add.w	r2, r9, #5
1001d5aa:	ea4f 0e82 	mov.w	lr, r2, lsl #2
1001d5ae:	4603      	mov	r3, r0
1001d5b0:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
1001d5b4:	2100      	movs	r1, #0
1001d5b6:	f843 1b04 	str.w	r1, [r3], #4
1001d5ba:	4293      	cmp	r3, r2
1001d5bc:	d1fb      	bne.n	1001d5b6 <__lshift+0x4e>
1001d5be:	f1ae 0314 	sub.w	r3, lr, #20
1001d5c2:	4418      	add	r0, r3
1001d5c4:	6921      	ldr	r1, [r4, #16]
1001d5c6:	f104 0314 	add.w	r3, r4, #20
1001d5ca:	f018 081f 	ands.w	r8, r8, #31
1001d5ce:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001d5d2:	d02d      	beq.n	1001d630 <__lshift+0xc8>
1001d5d4:	f1c8 0920 	rsb	r9, r8, #32
1001d5d8:	4686      	mov	lr, r0
1001d5da:	f04f 0a00 	mov.w	sl, #0
1001d5de:	681a      	ldr	r2, [r3, #0]
1001d5e0:	fa02 f208 	lsl.w	r2, r2, r8
1001d5e4:	ea42 020a 	orr.w	r2, r2, sl
1001d5e8:	f84e 2b04 	str.w	r2, [lr], #4
1001d5ec:	f853 2b04 	ldr.w	r2, [r3], #4
1001d5f0:	4299      	cmp	r1, r3
1001d5f2:	fa22 fa09 	lsr.w	sl, r2, r9
1001d5f6:	d8f2      	bhi.n	1001d5de <__lshift+0x76>
1001d5f8:	1b0b      	subs	r3, r1, r4
1001d5fa:	3b15      	subs	r3, #21
1001d5fc:	f023 0303 	bic.w	r3, r3, #3
1001d600:	3304      	adds	r3, #4
1001d602:	f104 0215 	add.w	r2, r4, #21
1001d606:	4291      	cmp	r1, r2
1001d608:	bf38      	it	cc
1001d60a:	2304      	movcc	r3, #4
1001d60c:	f840 a003 	str.w	sl, [r0, r3]
1001d610:	f1ba 0f00 	cmp.w	sl, #0
1001d614:	d100      	bne.n	1001d618 <__lshift+0xb0>
1001d616:	463d      	mov	r5, r7
1001d618:	6c73      	ldr	r3, [r6, #68]	@ 0x44
1001d61a:	6862      	ldr	r2, [r4, #4]
1001d61c:	f8cc 5010 	str.w	r5, [ip, #16]
1001d620:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001d624:	6021      	str	r1, [r4, #0]
1001d626:	4660      	mov	r0, ip
1001d628:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
1001d62c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001d630:	3804      	subs	r0, #4
1001d632:	f853 2b04 	ldr.w	r2, [r3], #4
1001d636:	f840 2f04 	str.w	r2, [r0, #4]!
1001d63a:	4299      	cmp	r1, r3
1001d63c:	d8f9      	bhi.n	1001d632 <__lshift+0xca>
1001d63e:	e7ea      	b.n	1001d616 <__lshift+0xae>
1001d640:	4b03      	ldr	r3, [pc, #12]	@ (1001d650 <__lshift+0xe8>)
1001d642:	4804      	ldr	r0, [pc, #16]	@ (1001d654 <__lshift+0xec>)
1001d644:	4662      	mov	r2, ip
1001d646:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
1001d64a:	f002 f821 	bl	1001f690 <__assert_func>
1001d64e:	bf00      	nop
1001d650:	10023c80 	.word	0x10023c80
1001d654:	10023d44 	.word	0x10023d44

1001d658 <__mcmp>:
1001d658:	690b      	ldr	r3, [r1, #16]
1001d65a:	4684      	mov	ip, r0
1001d65c:	6900      	ldr	r0, [r0, #16]
1001d65e:	1ac0      	subs	r0, r0, r3
1001d660:	d115      	bne.n	1001d68e <__mcmp+0x36>
1001d662:	f10c 0c14 	add.w	ip, ip, #20
1001d666:	3114      	adds	r1, #20
1001d668:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
1001d66c:	b410      	push	{r4}
1001d66e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
1001d672:	e001      	b.n	1001d678 <__mcmp+0x20>
1001d674:	4594      	cmp	ip, r2
1001d676:	d208      	bcs.n	1001d68a <__mcmp+0x32>
1001d678:	f852 4d04 	ldr.w	r4, [r2, #-4]!
1001d67c:	f853 1d04 	ldr.w	r1, [r3, #-4]!
1001d680:	428c      	cmp	r4, r1
1001d682:	d0f7      	beq.n	1001d674 <__mcmp+0x1c>
1001d684:	d204      	bcs.n	1001d690 <__mcmp+0x38>
1001d686:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d68a:	bc10      	pop	{r4}
1001d68c:	4770      	bx	lr
1001d68e:	4770      	bx	lr
1001d690:	2001      	movs	r0, #1
1001d692:	bc10      	pop	{r4}
1001d694:	4770      	bx	lr
1001d696:	bf00      	nop

1001d698 <__mdiff>:
1001d698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001d69c:	6913      	ldr	r3, [r2, #16]
1001d69e:	690f      	ldr	r7, [r1, #16]
1001d6a0:	1aff      	subs	r7, r7, r3
1001d6a2:	2f00      	cmp	r7, #0
1001d6a4:	b083      	sub	sp, #12
1001d6a6:	460d      	mov	r5, r1
1001d6a8:	4690      	mov	r8, r2
1001d6aa:	d115      	bne.n	1001d6d8 <__mdiff+0x40>
1001d6ac:	f101 0614 	add.w	r6, r1, #20
1001d6b0:	3214      	adds	r2, #20
1001d6b2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
1001d6b6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
1001d6ba:	e001      	b.n	1001d6c0 <__mdiff+0x28>
1001d6bc:	429e      	cmp	r6, r3
1001d6be:	d276      	bcs.n	1001d7ae <__mdiff+0x116>
1001d6c0:	f853 4d04 	ldr.w	r4, [r3, #-4]!
1001d6c4:	f852 1d04 	ldr.w	r1, [r2, #-4]!
1001d6c8:	428c      	cmp	r4, r1
1001d6ca:	d0f7      	beq.n	1001d6bc <__mdiff+0x24>
1001d6cc:	d206      	bcs.n	1001d6dc <__mdiff+0x44>
1001d6ce:	462b      	mov	r3, r5
1001d6d0:	2701      	movs	r7, #1
1001d6d2:	4645      	mov	r5, r8
1001d6d4:	4698      	mov	r8, r3
1001d6d6:	e001      	b.n	1001d6dc <__mdiff+0x44>
1001d6d8:	dbf9      	blt.n	1001d6ce <__mdiff+0x36>
1001d6da:	2700      	movs	r7, #0
1001d6dc:	6869      	ldr	r1, [r5, #4]
1001d6de:	f7ff fcdb 	bl	1001d098 <_Balloc>
1001d6e2:	4681      	mov	r9, r0
1001d6e4:	2800      	cmp	r0, #0
1001d6e6:	d076      	beq.n	1001d7d6 <__mdiff+0x13e>
1001d6e8:	692e      	ldr	r6, [r5, #16]
1001d6ea:	60c7      	str	r7, [r0, #12]
1001d6ec:	f8d8 0010 	ldr.w	r0, [r8, #16]
1001d6f0:	f105 0b14 	add.w	fp, r5, #20
1001d6f4:	f108 0e14 	add.w	lr, r8, #20
1001d6f8:	f109 0a14 	add.w	sl, r9, #20
1001d6fc:	f105 0110 	add.w	r1, r5, #16
1001d700:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
1001d704:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
1001d708:	4657      	mov	r7, sl
1001d70a:	f04f 0c00 	mov.w	ip, #0
1001d70e:	f8cd b004 	str.w	fp, [sp, #4]
1001d712:	f85e 4b04 	ldr.w	r4, [lr], #4
1001d716:	f851 5f04 	ldr.w	r5, [r1, #4]!
1001d71a:	fa1f fb84 	uxth.w	fp, r4
1001d71e:	b2ab      	uxth	r3, r5
1001d720:	eba3 030b 	sub.w	r3, r3, fp
1001d724:	0c24      	lsrs	r4, r4, #16
1001d726:	4463      	add	r3, ip
1001d728:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
1001d72c:	eb04 4423 	add.w	r4, r4, r3, asr #16
1001d730:	b29b      	uxth	r3, r3
1001d732:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001d736:	4570      	cmp	r0, lr
1001d738:	f847 3b04 	str.w	r3, [r7], #4
1001d73c:	ea4f 4c24 	mov.w	ip, r4, asr #16
1001d740:	d8e7      	bhi.n	1001d712 <__mdiff+0x7a>
1001d742:	eba0 0108 	sub.w	r1, r0, r8
1001d746:	3915      	subs	r1, #21
1001d748:	0889      	lsrs	r1, r1, #2
1001d74a:	1c4c      	adds	r4, r1, #1
1001d74c:	f8dd b004 	ldr.w	fp, [sp, #4]
1001d750:	f108 0815 	add.w	r8, r8, #21
1001d754:	00a4      	lsls	r4, r4, #2
1001d756:	4540      	cmp	r0, r8
1001d758:	bf38      	it	cc
1001d75a:	2404      	movcc	r4, #4
1001d75c:	eb0b 0504 	add.w	r5, fp, r4
1001d760:	42aa      	cmp	r2, r5
1001d762:	4454      	add	r4, sl
1001d764:	d930      	bls.n	1001d7c8 <__mdiff+0x130>
1001d766:	4627      	mov	r7, r4
1001d768:	4628      	mov	r0, r5
1001d76a:	f850 3b04 	ldr.w	r3, [r0], #4
1001d76e:	fa1c fe83 	uxtah	lr, ip, r3
1001d772:	0c19      	lsrs	r1, r3, #16
1001d774:	4463      	add	r3, ip
1001d776:	eb01 412e 	add.w	r1, r1, lr, asr #16
1001d77a:	b29b      	uxth	r3, r3
1001d77c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001d780:	4282      	cmp	r2, r0
1001d782:	f847 3b04 	str.w	r3, [r7], #4
1001d786:	ea4f 4c21 	mov.w	ip, r1, asr #16
1001d78a:	d8ee      	bhi.n	1001d76a <__mdiff+0xd2>
1001d78c:	3a01      	subs	r2, #1
1001d78e:	1b52      	subs	r2, r2, r5
1001d790:	f022 0203 	bic.w	r2, r2, #3
1001d794:	4414      	add	r4, r2
1001d796:	b923      	cbnz	r3, 1001d7a2 <__mdiff+0x10a>
1001d798:	f854 3d04 	ldr.w	r3, [r4, #-4]!
1001d79c:	3e01      	subs	r6, #1
1001d79e:	2b00      	cmp	r3, #0
1001d7a0:	d0fa      	beq.n	1001d798 <__mdiff+0x100>
1001d7a2:	4648      	mov	r0, r9
1001d7a4:	f8c9 6010 	str.w	r6, [r9, #16]
1001d7a8:	b003      	add	sp, #12
1001d7aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d7ae:	2100      	movs	r1, #0
1001d7b0:	f7ff fc72 	bl	1001d098 <_Balloc>
1001d7b4:	4681      	mov	r9, r0
1001d7b6:	b1a8      	cbz	r0, 1001d7e4 <__mdiff+0x14c>
1001d7b8:	2201      	movs	r2, #1
1001d7ba:	2300      	movs	r3, #0
1001d7bc:	e9c0 2304 	strd	r2, r3, [r0, #16]
1001d7c0:	4648      	mov	r0, r9
1001d7c2:	b003      	add	sp, #12
1001d7c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d7c8:	0089      	lsls	r1, r1, #2
1001d7ca:	4540      	cmp	r0, r8
1001d7cc:	bf38      	it	cc
1001d7ce:	2100      	movcc	r1, #0
1001d7d0:	eb0a 0401 	add.w	r4, sl, r1
1001d7d4:	e7df      	b.n	1001d796 <__mdiff+0xfe>
1001d7d6:	4b07      	ldr	r3, [pc, #28]	@ (1001d7f4 <__mdiff+0x15c>)
1001d7d8:	4807      	ldr	r0, [pc, #28]	@ (1001d7f8 <__mdiff+0x160>)
1001d7da:	464a      	mov	r2, r9
1001d7dc:	f240 2145 	movw	r1, #581	@ 0x245
1001d7e0:	f001 ff56 	bl	1001f690 <__assert_func>
1001d7e4:	4b03      	ldr	r3, [pc, #12]	@ (1001d7f4 <__mdiff+0x15c>)
1001d7e6:	4804      	ldr	r0, [pc, #16]	@ (1001d7f8 <__mdiff+0x160>)
1001d7e8:	464a      	mov	r2, r9
1001d7ea:	f240 2137 	movw	r1, #567	@ 0x237
1001d7ee:	f001 ff4f 	bl	1001f690 <__assert_func>
1001d7f2:	bf00      	nop
1001d7f4:	10023c80 	.word	0x10023c80
1001d7f8:	10023d44 	.word	0x10023d44

1001d7fc <__ulp>:
1001d7fc:	4b11      	ldr	r3, [pc, #68]	@ (1001d844 <__ulp+0x48>)
1001d7fe:	400b      	ands	r3, r1
1001d800:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
1001d804:	2b00      	cmp	r3, #0
1001d806:	dd03      	ble.n	1001d810 <__ulp+0x14>
1001d808:	2200      	movs	r2, #0
1001d80a:	4619      	mov	r1, r3
1001d80c:	4610      	mov	r0, r2
1001d80e:	4770      	bx	lr
1001d810:	425b      	negs	r3, r3
1001d812:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
1001d816:	ea4f 5223 	mov.w	r2, r3, asr #20
1001d81a:	da06      	bge.n	1001d82a <__ulp+0x2e>
1001d81c:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
1001d820:	4113      	asrs	r3, r2
1001d822:	2200      	movs	r2, #0
1001d824:	4619      	mov	r1, r3
1001d826:	4610      	mov	r0, r2
1001d828:	4770      	bx	lr
1001d82a:	f1a2 0314 	sub.w	r3, r2, #20
1001d82e:	2b1e      	cmp	r3, #30
1001d830:	bfda      	itte	le
1001d832:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
1001d836:	40da      	lsrle	r2, r3
1001d838:	2201      	movgt	r2, #1
1001d83a:	2300      	movs	r3, #0
1001d83c:	4619      	mov	r1, r3
1001d83e:	4610      	mov	r0, r2
1001d840:	4770      	bx	lr
1001d842:	bf00      	nop
1001d844:	7ff00000 	.word	0x7ff00000

1001d848 <__b2d>:
1001d848:	6902      	ldr	r2, [r0, #16]
1001d84a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001d84e:	f100 0714 	add.w	r7, r0, #20
1001d852:	eb07 0282 	add.w	r2, r7, r2, lsl #2
1001d856:	f1a2 0804 	sub.w	r8, r2, #4
1001d85a:	f852 6c04 	ldr.w	r6, [r2, #-4]
1001d85e:	4630      	mov	r0, r6
1001d860:	f7ff fcf2 	bl	1001d248 <__hi0bits>
1001d864:	f1c0 0320 	rsb	r3, r0, #32
1001d868:	280a      	cmp	r0, #10
1001d86a:	600b      	str	r3, [r1, #0]
1001d86c:	dd33      	ble.n	1001d8d6 <__b2d+0x8e>
1001d86e:	4547      	cmp	r7, r8
1001d870:	f1a0 010b 	sub.w	r1, r0, #11
1001d874:	d219      	bcs.n	1001d8aa <__b2d+0x62>
1001d876:	f852 3c08 	ldr.w	r3, [r2, #-8]
1001d87a:	b321      	cbz	r1, 1001d8c6 <__b2d+0x7e>
1001d87c:	f1c1 0020 	rsb	r0, r1, #32
1001d880:	408e      	lsls	r6, r1
1001d882:	fa23 f400 	lsr.w	r4, r3, r0
1001d886:	4326      	orrs	r6, r4
1001d888:	408b      	lsls	r3, r1
1001d88a:	f1a2 0108 	sub.w	r1, r2, #8
1001d88e:	f046 557f 	orr.w	r5, r6, #1069547520	@ 0x3fc00000
1001d892:	428f      	cmp	r7, r1
1001d894:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001d898:	d219      	bcs.n	1001d8ce <__b2d+0x86>
1001d89a:	f852 2c0c 	ldr.w	r2, [r2, #-12]
1001d89e:	40c2      	lsrs	r2, r0
1001d8a0:	4313      	orrs	r3, r2
1001d8a2:	4618      	mov	r0, r3
1001d8a4:	4629      	mov	r1, r5
1001d8a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d8aa:	280b      	cmp	r0, #11
1001d8ac:	d00a      	beq.n	1001d8c4 <__b2d+0x7c>
1001d8ae:	fa06 f101 	lsl.w	r1, r6, r1
1001d8b2:	f041 557f 	orr.w	r5, r1, #1069547520	@ 0x3fc00000
1001d8b6:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001d8ba:	2300      	movs	r3, #0
1001d8bc:	4618      	mov	r0, r3
1001d8be:	4629      	mov	r1, r5
1001d8c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d8c4:	2300      	movs	r3, #0
1001d8c6:	f046 557f 	orr.w	r5, r6, #1069547520	@ 0x3fc00000
1001d8ca:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001d8ce:	4618      	mov	r0, r3
1001d8d0:	4629      	mov	r1, r5
1001d8d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d8d6:	4547      	cmp	r7, r8
1001d8d8:	bf38      	it	cc
1001d8da:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
1001d8de:	f1c0 030b 	rsb	r3, r0, #11
1001d8e2:	fa26 f103 	lsr.w	r1, r6, r3
1001d8e6:	bf38      	it	cc
1001d8e8:	40da      	lsrcc	r2, r3
1001d8ea:	f100 0315 	add.w	r3, r0, #21
1001d8ee:	f041 557f 	orr.w	r5, r1, #1069547520	@ 0x3fc00000
1001d8f2:	bf28      	it	cs
1001d8f4:	2200      	movcs	r2, #0
1001d8f6:	fa06 f303 	lsl.w	r3, r6, r3
1001d8fa:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001d8fe:	4313      	orrs	r3, r2
1001d900:	4618      	mov	r0, r3
1001d902:	4629      	mov	r1, r5
1001d904:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1001d908 <__d2b>:
1001d908:	b5f0      	push	{r4, r5, r6, r7, lr}
1001d90a:	2101      	movs	r1, #1
1001d90c:	b083      	sub	sp, #12
1001d90e:	4616      	mov	r6, r2
1001d910:	461f      	mov	r7, r3
1001d912:	f7ff fbc1 	bl	1001d098 <_Balloc>
1001d916:	4605      	mov	r5, r0
1001d918:	2800      	cmp	r0, #0
1001d91a:	d047      	beq.n	1001d9ac <__d2b+0xa4>
1001d91c:	f3c7 540a 	ubfx	r4, r7, #20, #11
1001d920:	f3c7 0313 	ubfx	r3, r7, #0, #20
1001d924:	b10c      	cbz	r4, 1001d92a <__d2b+0x22>
1001d926:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001d92a:	2e00      	cmp	r6, #0
1001d92c:	9301      	str	r3, [sp, #4]
1001d92e:	d114      	bne.n	1001d95a <__d2b+0x52>
1001d930:	a801      	add	r0, sp, #4
1001d932:	f7ff fcab 	bl	1001d28c <__lo0bits>
1001d936:	9b01      	ldr	r3, [sp, #4]
1001d938:	616b      	str	r3, [r5, #20]
1001d93a:	2201      	movs	r2, #1
1001d93c:	3020      	adds	r0, #32
1001d93e:	612a      	str	r2, [r5, #16]
1001d940:	b314      	cbz	r4, 1001d988 <__d2b+0x80>
1001d942:	9b08      	ldr	r3, [sp, #32]
1001d944:	f2a4 4433 	subw	r4, r4, #1075	@ 0x433
1001d948:	4404      	add	r4, r0
1001d94a:	601c      	str	r4, [r3, #0]
1001d94c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001d94e:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
1001d952:	6018      	str	r0, [r3, #0]
1001d954:	4628      	mov	r0, r5
1001d956:	b003      	add	sp, #12
1001d958:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001d95a:	4668      	mov	r0, sp
1001d95c:	9600      	str	r6, [sp, #0]
1001d95e:	f7ff fc95 	bl	1001d28c <__lo0bits>
1001d962:	9b01      	ldr	r3, [sp, #4]
1001d964:	b300      	cbz	r0, 1001d9a8 <__d2b+0xa0>
1001d966:	9900      	ldr	r1, [sp, #0]
1001d968:	f1c0 0220 	rsb	r2, r0, #32
1001d96c:	fa03 f202 	lsl.w	r2, r3, r2
1001d970:	40c3      	lsrs	r3, r0
1001d972:	9301      	str	r3, [sp, #4]
1001d974:	430a      	orrs	r2, r1
1001d976:	2b00      	cmp	r3, #0
1001d978:	e9c5 2305 	strd	r2, r3, [r5, #20]
1001d97c:	bf0c      	ite	eq
1001d97e:	2201      	moveq	r2, #1
1001d980:	2202      	movne	r2, #2
1001d982:	612a      	str	r2, [r5, #16]
1001d984:	2c00      	cmp	r4, #0
1001d986:	d1dc      	bne.n	1001d942 <__d2b+0x3a>
1001d988:	eb05 0182 	add.w	r1, r5, r2, lsl #2
1001d98c:	f2a0 4332 	subw	r3, r0, #1074	@ 0x432
1001d990:	6908      	ldr	r0, [r1, #16]
1001d992:	9908      	ldr	r1, [sp, #32]
1001d994:	600b      	str	r3, [r1, #0]
1001d996:	f7ff fc57 	bl	1001d248 <__hi0bits>
1001d99a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001d99c:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
1001d9a0:	6018      	str	r0, [r3, #0]
1001d9a2:	4628      	mov	r0, r5
1001d9a4:	b003      	add	sp, #12
1001d9a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001d9a8:	9a00      	ldr	r2, [sp, #0]
1001d9aa:	e7e4      	b.n	1001d976 <__d2b+0x6e>
1001d9ac:	4b03      	ldr	r3, [pc, #12]	@ (1001d9bc <__d2b+0xb4>)
1001d9ae:	4804      	ldr	r0, [pc, #16]	@ (1001d9c0 <__d2b+0xb8>)
1001d9b0:	462a      	mov	r2, r5
1001d9b2:	f240 310f 	movw	r1, #783	@ 0x30f
1001d9b6:	f001 fe6b 	bl	1001f690 <__assert_func>
1001d9ba:	bf00      	nop
1001d9bc:	10023c80 	.word	0x10023c80
1001d9c0:	10023d44 	.word	0x10023d44

1001d9c4 <__ratio>:
1001d9c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1001d9c8:	b083      	sub	sp, #12
1001d9ca:	460e      	mov	r6, r1
1001d9cc:	4669      	mov	r1, sp
1001d9ce:	4607      	mov	r7, r0
1001d9d0:	f7ff ff3a 	bl	1001d848 <__b2d>
1001d9d4:	4604      	mov	r4, r0
1001d9d6:	460d      	mov	r5, r1
1001d9d8:	4630      	mov	r0, r6
1001d9da:	a901      	add	r1, sp, #4
1001d9dc:	f7ff ff34 	bl	1001d848 <__b2d>
1001d9e0:	6933      	ldr	r3, [r6, #16]
1001d9e2:	693a      	ldr	r2, [r7, #16]
1001d9e4:	1ad2      	subs	r2, r2, r3
1001d9e6:	e9dd 3600 	ldrd	r3, r6, [sp]
1001d9ea:	1b9b      	subs	r3, r3, r6
1001d9ec:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1001d9f0:	2b00      	cmp	r3, #0
1001d9f2:	dd0b      	ble.n	1001da0c <__ratio+0x48>
1001d9f4:	eb05 5903 	add.w	r9, r5, r3, lsl #20
1001d9f8:	464d      	mov	r5, r9
1001d9fa:	4602      	mov	r2, r0
1001d9fc:	460b      	mov	r3, r1
1001d9fe:	4620      	mov	r0, r4
1001da00:	4629      	mov	r1, r5
1001da02:	f003 f86f 	bl	10020ae4 <__aeabi_ddiv>
1001da06:	b003      	add	sp, #12
1001da08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1001da0c:	ebc3 3303 	rsb	r3, r3, r3, lsl #12
1001da10:	eb01 5703 	add.w	r7, r1, r3, lsl #20
1001da14:	4639      	mov	r1, r7
1001da16:	e7f0      	b.n	1001d9fa <__ratio+0x36>

1001da18 <__copybits>:
1001da18:	3901      	subs	r1, #1
1001da1a:	1149      	asrs	r1, r1, #5
1001da1c:	f101 0c01 	add.w	ip, r1, #1
1001da20:	6911      	ldr	r1, [r2, #16]
1001da22:	f102 0314 	add.w	r3, r2, #20
1001da26:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001da2a:	428b      	cmp	r3, r1
1001da2c:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
1001da30:	d216      	bcs.n	1001da60 <__copybits+0x48>
1001da32:	b510      	push	{r4, lr}
1001da34:	f1a0 0e04 	sub.w	lr, r0, #4
1001da38:	f853 4b04 	ldr.w	r4, [r3], #4
1001da3c:	f84e 4f04 	str.w	r4, [lr, #4]!
1001da40:	4299      	cmp	r1, r3
1001da42:	d8f9      	bhi.n	1001da38 <__copybits+0x20>
1001da44:	1a8b      	subs	r3, r1, r2
1001da46:	3b15      	subs	r3, #21
1001da48:	f023 0303 	bic.w	r3, r3, #3
1001da4c:	3304      	adds	r3, #4
1001da4e:	4418      	add	r0, r3
1001da50:	4584      	cmp	ip, r0
1001da52:	d904      	bls.n	1001da5e <__copybits+0x46>
1001da54:	2300      	movs	r3, #0
1001da56:	f840 3b04 	str.w	r3, [r0], #4
1001da5a:	4584      	cmp	ip, r0
1001da5c:	d8fb      	bhi.n	1001da56 <__copybits+0x3e>
1001da5e:	bd10      	pop	{r4, pc}
1001da60:	4584      	cmp	ip, r0
1001da62:	d905      	bls.n	1001da70 <__copybits+0x58>
1001da64:	2300      	movs	r3, #0
1001da66:	f840 3b04 	str.w	r3, [r0], #4
1001da6a:	4584      	cmp	ip, r0
1001da6c:	d8fb      	bhi.n	1001da66 <__copybits+0x4e>
1001da6e:	4770      	bx	lr
1001da70:	4770      	bx	lr
1001da72:	bf00      	nop

1001da74 <__any_on>:
1001da74:	6903      	ldr	r3, [r0, #16]
1001da76:	114a      	asrs	r2, r1, #5
1001da78:	4293      	cmp	r3, r2
1001da7a:	f100 0014 	add.w	r0, r0, #20
1001da7e:	da09      	bge.n	1001da94 <__any_on+0x20>
1001da80:	eb00 0383 	add.w	r3, r0, r3, lsl #2
1001da84:	e002      	b.n	1001da8c <__any_on+0x18>
1001da86:	f853 2d04 	ldr.w	r2, [r3, #-4]!
1001da8a:	b9a2      	cbnz	r2, 1001dab6 <__any_on+0x42>
1001da8c:	4283      	cmp	r3, r0
1001da8e:	d8fa      	bhi.n	1001da86 <__any_on+0x12>
1001da90:	2000      	movs	r0, #0
1001da92:	4770      	bx	lr
1001da94:	eb00 0382 	add.w	r3, r0, r2, lsl #2
1001da98:	ddf8      	ble.n	1001da8c <__any_on+0x18>
1001da9a:	f011 011f 	ands.w	r1, r1, #31
1001da9e:	d0f5      	beq.n	1001da8c <__any_on+0x18>
1001daa0:	b410      	push	{r4}
1001daa2:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
1001daa6:	fa24 f201 	lsr.w	r2, r4, r1
1001daaa:	408a      	lsls	r2, r1
1001daac:	4294      	cmp	r4, r2
1001daae:	d008      	beq.n	1001dac2 <__any_on+0x4e>
1001dab0:	2001      	movs	r0, #1
1001dab2:	bc10      	pop	{r4}
1001dab4:	4770      	bx	lr
1001dab6:	2001      	movs	r0, #1
1001dab8:	4770      	bx	lr
1001daba:	f853 2d04 	ldr.w	r2, [r3, #-4]!
1001dabe:	2a00      	cmp	r2, #0
1001dac0:	d1f6      	bne.n	1001dab0 <__any_on+0x3c>
1001dac2:	4283      	cmp	r3, r0
1001dac4:	d8f9      	bhi.n	1001daba <__any_on+0x46>
1001dac6:	2000      	movs	r0, #0
1001dac8:	bc10      	pop	{r4}
1001daca:	4770      	bx	lr

1001dacc <lflush>:
1001dacc:	898b      	ldrh	r3, [r1, #12]
1001dace:	f003 0309 	and.w	r3, r3, #9
1001dad2:	2b09      	cmp	r3, #9
1001dad4:	d001      	beq.n	1001dada <lflush+0xe>
1001dad6:	2000      	movs	r0, #0
1001dad8:	4770      	bx	lr
1001dada:	4b02      	ldr	r3, [pc, #8]	@ (1001dae4 <lflush+0x18>)
1001dadc:	6818      	ldr	r0, [r3, #0]
1001dade:	f7f9 bd65 	b.w	100175ac <_fflush_r>
1001dae2:	bf00      	nop
1001dae4:	20000598 	.word	0x20000598

1001dae8 <__srefill_r>:
1001dae8:	b570      	push	{r4, r5, r6, lr}
1001daea:	460c      	mov	r4, r1
1001daec:	4605      	mov	r5, r0
1001daee:	b110      	cbz	r0, 1001daf6 <__srefill_r+0xe>
1001daf0:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001daf2:	2b00      	cmp	r3, #0
1001daf4:	d05f      	beq.n	1001dbb6 <__srefill_r+0xce>
1001daf6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001dafa:	049a      	lsls	r2, r3, #18
1001dafc:	d406      	bmi.n	1001db0c <__srefill_r+0x24>
1001dafe:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001db00:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001db04:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001db08:	81a3      	strh	r3, [r4, #12]
1001db0a:	6662      	str	r2, [r4, #100]	@ 0x64
1001db0c:	2200      	movs	r2, #0
1001db0e:	069e      	lsls	r6, r3, #26
1001db10:	6062      	str	r2, [r4, #4]
1001db12:	d45d      	bmi.n	1001dbd0 <__srefill_r+0xe8>
1001db14:	0758      	lsls	r0, r3, #29
1001db16:	d419      	bmi.n	1001db4c <__srefill_r+0x64>
1001db18:	06d9      	lsls	r1, r3, #27
1001db1a:	d55c      	bpl.n	1001dbd6 <__srefill_r+0xee>
1001db1c:	071a      	lsls	r2, r3, #28
1001db1e:	d439      	bmi.n	1001db94 <__srefill_r+0xac>
1001db20:	f043 0304 	orr.w	r3, r3, #4
1001db24:	81a3      	strh	r3, [r4, #12]
1001db26:	6923      	ldr	r3, [r4, #16]
1001db28:	2b00      	cmp	r3, #0
1001db2a:	d03f      	beq.n	1001dbac <__srefill_r+0xc4>
1001db2c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
1001db30:	07b3      	lsls	r3, r6, #30
1001db32:	d11e      	bne.n	1001db72 <__srefill_r+0x8a>
1001db34:	6922      	ldr	r2, [r4, #16]
1001db36:	6a26      	ldr	r6, [r4, #32]
1001db38:	6963      	ldr	r3, [r4, #20]
1001db3a:	69e1      	ldr	r1, [r4, #28]
1001db3c:	6022      	str	r2, [r4, #0]
1001db3e:	4628      	mov	r0, r5
1001db40:	47b0      	blx	r6
1001db42:	2800      	cmp	r0, #0
1001db44:	6060      	str	r0, [r4, #4]
1001db46:	dd39      	ble.n	1001dbbc <__srefill_r+0xd4>
1001db48:	2000      	movs	r0, #0
1001db4a:	bd70      	pop	{r4, r5, r6, pc}
1001db4c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1001db4e:	2900      	cmp	r1, #0
1001db50:	d0e9      	beq.n	1001db26 <__srefill_r+0x3e>
1001db52:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001db56:	4299      	cmp	r1, r3
1001db58:	d002      	beq.n	1001db60 <__srefill_r+0x78>
1001db5a:	4628      	mov	r0, r5
1001db5c:	f7fb fed0 	bl	10019900 <_free_r>
1001db60:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
1001db62:	6063      	str	r3, [r4, #4]
1001db64:	2200      	movs	r2, #0
1001db66:	6322      	str	r2, [r4, #48]	@ 0x30
1001db68:	2b00      	cmp	r3, #0
1001db6a:	d0dc      	beq.n	1001db26 <__srefill_r+0x3e>
1001db6c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
1001db6e:	6023      	str	r3, [r4, #0]
1001db70:	e7ea      	b.n	1001db48 <__srefill_r+0x60>
1001db72:	2301      	movs	r3, #1
1001db74:	81a3      	strh	r3, [r4, #12]
1001db76:	4a1b      	ldr	r2, [pc, #108]	@ (1001dbe4 <__srefill_r+0xfc>)
1001db78:	491b      	ldr	r1, [pc, #108]	@ (1001dbe8 <__srefill_r+0x100>)
1001db7a:	481c      	ldr	r0, [pc, #112]	@ (1001dbec <__srefill_r+0x104>)
1001db7c:	f7fa f838 	bl	10017bf0 <_fwalk_sglue>
1001db80:	f006 0309 	and.w	r3, r6, #9
1001db84:	2b09      	cmp	r3, #9
1001db86:	81a6      	strh	r6, [r4, #12]
1001db88:	d1d4      	bne.n	1001db34 <__srefill_r+0x4c>
1001db8a:	4621      	mov	r1, r4
1001db8c:	4628      	mov	r0, r5
1001db8e:	f7f9 fc79 	bl	10017484 <__sflush_r>
1001db92:	e7cf      	b.n	1001db34 <__srefill_r+0x4c>
1001db94:	4621      	mov	r1, r4
1001db96:	4628      	mov	r0, r5
1001db98:	f7f9 fd08 	bl	100175ac <_fflush_r>
1001db9c:	b9c0      	cbnz	r0, 1001dbd0 <__srefill_r+0xe8>
1001db9e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001dba2:	60a0      	str	r0, [r4, #8]
1001dba4:	f023 0308 	bic.w	r3, r3, #8
1001dba8:	61a0      	str	r0, [r4, #24]
1001dbaa:	e7b9      	b.n	1001db20 <__srefill_r+0x38>
1001dbac:	4621      	mov	r1, r4
1001dbae:	4628      	mov	r0, r5
1001dbb0:	f7fd fd86 	bl	1001b6c0 <__smakebuf_r>
1001dbb4:	e7ba      	b.n	1001db2c <__srefill_r+0x44>
1001dbb6:	f7f9 fe75 	bl	100178a4 <__sinit>
1001dbba:	e79c      	b.n	1001daf6 <__srefill_r+0xe>
1001dbbc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001dbc0:	bf17      	itett	ne
1001dbc2:	2200      	movne	r2, #0
1001dbc4:	f043 0320 	orreq.w	r3, r3, #32
1001dbc8:	f043 0340 	orrne.w	r3, r3, #64	@ 0x40
1001dbcc:	6062      	strne	r2, [r4, #4]
1001dbce:	81a3      	strh	r3, [r4, #12]
1001dbd0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001dbd4:	bd70      	pop	{r4, r5, r6, pc}
1001dbd6:	2209      	movs	r2, #9
1001dbd8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001dbdc:	602a      	str	r2, [r5, #0]
1001dbde:	81a3      	strh	r3, [r4, #12]
1001dbe0:	e7f6      	b.n	1001dbd0 <__srefill_r+0xe8>
1001dbe2:	bf00      	nop
1001dbe4:	20000420 	.word	0x20000420
1001dbe8:	1001dacd 	.word	0x1001dacd
1001dbec:	200005a0 	.word	0x200005a0

1001dbf0 <__srget_r>:
1001dbf0:	b538      	push	{r3, r4, r5, lr}
1001dbf2:	460c      	mov	r4, r1
1001dbf4:	4605      	mov	r5, r0
1001dbf6:	b108      	cbz	r0, 1001dbfc <__srget_r+0xc>
1001dbf8:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001dbfa:	b163      	cbz	r3, 1001dc16 <__srget_r+0x26>
1001dbfc:	4621      	mov	r1, r4
1001dbfe:	4628      	mov	r0, r5
1001dc00:	f7ff ff72 	bl	1001dae8 <__srefill_r>
1001dc04:	b950      	cbnz	r0, 1001dc1c <__srget_r+0x2c>
1001dc06:	e9d4 2300 	ldrd	r2, r3, [r4]
1001dc0a:	1c51      	adds	r1, r2, #1
1001dc0c:	3b01      	subs	r3, #1
1001dc0e:	e9c4 1300 	strd	r1, r3, [r4]
1001dc12:	7810      	ldrb	r0, [r2, #0]
1001dc14:	bd38      	pop	{r3, r4, r5, pc}
1001dc16:	f7f9 fe45 	bl	100178a4 <__sinit>
1001dc1a:	e7ef      	b.n	1001dbfc <__srget_r+0xc>
1001dc1c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001dc20:	bd38      	pop	{r3, r4, r5, pc}
1001dc22:	bf00      	nop

1001dc24 <__sccl>:
1001dc24:	b570      	push	{r4, r5, r6, lr}
1001dc26:	780c      	ldrb	r4, [r1, #0]
1001dc28:	2c5e      	cmp	r4, #94	@ 0x5e
1001dc2a:	4686      	mov	lr, r0
1001dc2c:	d026      	beq.n	1001dc7c <__sccl+0x58>
1001dc2e:	2300      	movs	r3, #0
1001dc30:	1c48      	adds	r0, r1, #1
1001dc32:	469c      	mov	ip, r3
1001dc34:	2200      	movs	r2, #0
1001dc36:	f363 0207 	bfi	r2, r3, #0, #8
1001dc3a:	f363 220f 	bfi	r2, r3, #8, #8
1001dc3e:	f363 4217 	bfi	r2, r3, #16, #8
1001dc42:	f363 621f 	bfi	r2, r3, #24, #8
1001dc46:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
1001dc4a:	4673      	mov	r3, lr
1001dc4c:	f843 2b04 	str.w	r2, [r3], #4
1001dc50:	428b      	cmp	r3, r1
1001dc52:	d1fb      	bne.n	1001dc4c <__sccl+0x28>
1001dc54:	b184      	cbz	r4, 1001dc78 <__sccl+0x54>
1001dc56:	f08c 0101 	eor.w	r1, ip, #1
1001dc5a:	f80e 1004 	strb.w	r1, [lr, r4]
1001dc5e:	1c45      	adds	r5, r0, #1
1001dc60:	f815 3c01 	ldrb.w	r3, [r5, #-1]
1001dc64:	2b2d      	cmp	r3, #45	@ 0x2d
1001dc66:	d00e      	beq.n	1001dc86 <__sccl+0x62>
1001dc68:	2b5d      	cmp	r3, #93	@ 0x5d
1001dc6a:	d003      	beq.n	1001dc74 <__sccl+0x50>
1001dc6c:	b11b      	cbz	r3, 1001dc76 <__sccl+0x52>
1001dc6e:	461c      	mov	r4, r3
1001dc70:	4628      	mov	r0, r5
1001dc72:	e7f2      	b.n	1001dc5a <__sccl+0x36>
1001dc74:	4628      	mov	r0, r5
1001dc76:	bd70      	pop	{r4, r5, r6, pc}
1001dc78:	3801      	subs	r0, #1
1001dc7a:	bd70      	pop	{r4, r5, r6, pc}
1001dc7c:	2301      	movs	r3, #1
1001dc7e:	784c      	ldrb	r4, [r1, #1]
1001dc80:	1c88      	adds	r0, r1, #2
1001dc82:	469c      	mov	ip, r3
1001dc84:	e7d6      	b.n	1001dc34 <__sccl+0x10>
1001dc86:	f890 c001 	ldrb.w	ip, [r0, #1]
1001dc8a:	f1bc 0f5d 	cmp.w	ip, #93	@ 0x5d
1001dc8e:	d0ee      	beq.n	1001dc6e <__sccl+0x4a>
1001dc90:	4564      	cmp	r4, ip
1001dc92:	dcec      	bgt.n	1001dc6e <__sccl+0x4a>
1001dc94:	1c66      	adds	r6, r4, #1
1001dc96:	3002      	adds	r0, #2
1001dc98:	eb0e 0206 	add.w	r2, lr, r6
1001dc9c:	f802 1b01 	strb.w	r1, [r2], #1
1001dca0:	eba2 030e 	sub.w	r3, r2, lr
1001dca4:	3b01      	subs	r3, #1
1001dca6:	459c      	cmp	ip, r3
1001dca8:	dcf8      	bgt.n	1001dc9c <__sccl+0x78>
1001dcaa:	ebac 0304 	sub.w	r3, ip, r4
1001dcae:	3b01      	subs	r3, #1
1001dcb0:	4564      	cmp	r4, ip
1001dcb2:	bfa8      	it	ge
1001dcb4:	2300      	movge	r3, #0
1001dcb6:	3502      	adds	r5, #2
1001dcb8:	18f4      	adds	r4, r6, r3
1001dcba:	e7d1      	b.n	1001dc60 <__sccl+0x3c>
1001dcbc:	0000      	movs	r0, r0
	...

1001dcc0 <_strtod_l>:
1001dcc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001dcc4:	b09f      	sub	sp, #124	@ 0x7c
1001dcc6:	460e      	mov	r6, r1
1001dcc8:	2100      	movs	r1, #0
1001dcca:	9207      	str	r2, [sp, #28]
1001dccc:	911a      	str	r1, [sp, #104]	@ 0x68
1001dcce:	2200      	movs	r2, #0
1001dcd0:	2100      	movs	r1, #0
1001dcd2:	e9cd 1204 	strd	r1, r2, [sp, #16]
1001dcd6:	4683      	mov	fp, r0
1001dcd8:	4631      	mov	r1, r6
1001dcda:	9119      	str	r1, [sp, #100]	@ 0x64
1001dcdc:	4688      	mov	r8, r1
1001dcde:	f811 2b01 	ldrb.w	r2, [r1], #1
1001dce2:	2a2d      	cmp	r2, #45	@ 0x2d
1001dce4:	d85e      	bhi.n	1001dda4 <_strtod_l+0xe4>
1001dce6:	a001      	add	r0, pc, #4	@ (adr r0, 1001dcec <_strtod_l+0x2c>)
1001dce8:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
1001dcec:	1001debd 	.word	0x1001debd
1001dcf0:	1001dda5 	.word	0x1001dda5
1001dcf4:	1001dda5 	.word	0x1001dda5
1001dcf8:	1001dda5 	.word	0x1001dda5
1001dcfc:	1001dda5 	.word	0x1001dda5
1001dd00:	1001dda5 	.word	0x1001dda5
1001dd04:	1001dda5 	.word	0x1001dda5
1001dd08:	1001dda5 	.word	0x1001dda5
1001dd0c:	1001dda5 	.word	0x1001dda5
1001dd10:	1001dcdb 	.word	0x1001dcdb
1001dd14:	1001dcdb 	.word	0x1001dcdb
1001dd18:	1001dcdb 	.word	0x1001dcdb
1001dd1c:	1001dcdb 	.word	0x1001dcdb
1001dd20:	1001dcdb 	.word	0x1001dcdb
1001dd24:	1001dda5 	.word	0x1001dda5
1001dd28:	1001dda5 	.word	0x1001dda5
1001dd2c:	1001dda5 	.word	0x1001dda5
1001dd30:	1001dda5 	.word	0x1001dda5
1001dd34:	1001dda5 	.word	0x1001dda5
1001dd38:	1001dda5 	.word	0x1001dda5
1001dd3c:	1001dda5 	.word	0x1001dda5
1001dd40:	1001dda5 	.word	0x1001dda5
1001dd44:	1001dda5 	.word	0x1001dda5
1001dd48:	1001dda5 	.word	0x1001dda5
1001dd4c:	1001dda5 	.word	0x1001dda5
1001dd50:	1001dda5 	.word	0x1001dda5
1001dd54:	1001dda5 	.word	0x1001dda5
1001dd58:	1001dda5 	.word	0x1001dda5
1001dd5c:	1001dda5 	.word	0x1001dda5
1001dd60:	1001dda5 	.word	0x1001dda5
1001dd64:	1001dda5 	.word	0x1001dda5
1001dd68:	1001dda5 	.word	0x1001dda5
1001dd6c:	1001dcdb 	.word	0x1001dcdb
1001dd70:	1001dda5 	.word	0x1001dda5
1001dd74:	1001dda5 	.word	0x1001dda5
1001dd78:	1001dda5 	.word	0x1001dda5
1001dd7c:	1001dda5 	.word	0x1001dda5
1001dd80:	1001dda5 	.word	0x1001dda5
1001dd84:	1001dda5 	.word	0x1001dda5
1001dd88:	1001dda5 	.word	0x1001dda5
1001dd8c:	1001dda5 	.word	0x1001dda5
1001dd90:	1001dda5 	.word	0x1001dda5
1001dd94:	1001dda5 	.word	0x1001dda5
1001dd98:	1001e4bb 	.word	0x1001e4bb
1001dd9c:	1001dda5 	.word	0x1001dda5
1001dda0:	1001e4d3 	.word	0x1001e4d3
1001dda4:	2100      	movs	r1, #0
1001dda6:	9108      	str	r1, [sp, #32]
1001dda8:	2a30      	cmp	r2, #48	@ 0x30
1001ddaa:	f000 8093 	beq.w	1001ded4 <_strtod_l+0x214>
1001ddae:	2300      	movs	r3, #0
1001ddb0:	9309      	str	r3, [sp, #36]	@ 0x24
1001ddb2:	2a2f      	cmp	r2, #47	@ 0x2f
1001ddb4:	4617      	mov	r7, r2
1001ddb6:	f240 84ee 	bls.w	1001e796 <_strtod_l+0xad6>
1001ddba:	f04f 0900 	mov.w	r9, #0
1001ddbe:	4640      	mov	r0, r8
1001ddc0:	464d      	mov	r5, r9
1001ddc2:	464c      	mov	r4, r9
1001ddc4:	e013      	b.n	1001ddee <_strtod_l+0x12e>
1001ddc6:	3001      	adds	r0, #1
1001ddc8:	2c08      	cmp	r4, #8
1001ddca:	9019      	str	r0, [sp, #100]	@ 0x64
1001ddcc:	bfc8      	it	gt
1001ddce:	eb09 0989 	addgt.w	r9, r9, r9, lsl #2
1001ddd2:	7807      	ldrb	r7, [r0, #0]
1001ddd4:	bfc6      	itte	gt
1001ddd6:	eb02 0249 	addgt.w	r2, r2, r9, lsl #1
1001ddda:	f1a2 0930 	subgt.w	r9, r2, #48	@ 0x30
1001ddde:	f1a3 0530 	suble.w	r5, r3, #48	@ 0x30
1001dde2:	2f2f      	cmp	r7, #47	@ 0x2f
1001dde4:	f104 0401 	add.w	r4, r4, #1
1001dde8:	463a      	mov	r2, r7
1001ddea:	f340 80b7 	ble.w	1001df5c <_strtod_l+0x29c>
1001ddee:	eb05 0385 	add.w	r3, r5, r5, lsl #2
1001ddf2:	2f39      	cmp	r7, #57	@ 0x39
1001ddf4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
1001ddf8:	dde5      	ble.n	1001ddc6 <_strtod_l+0x106>
1001ddfa:	4974      	ldr	r1, [pc, #464]	@ (1001dfcc <_strtod_l+0x30c>)
1001ddfc:	2201      	movs	r2, #1
1001ddfe:	f001 f905 	bl	1001f00c <strncmp>
1001de02:	2800      	cmp	r0, #0
1001de04:	d17b      	bne.n	1001defe <_strtod_l+0x23e>
1001de06:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001de08:	4613      	mov	r3, r2
1001de0a:	3201      	adds	r2, #1
1001de0c:	9219      	str	r2, [sp, #100]	@ 0x64
1001de0e:	785f      	ldrb	r7, [r3, #1]
1001de10:	2c00      	cmp	r4, #0
1001de12:	f040 8587 	bne.w	1001e924 <_strtod_l+0xc64>
1001de16:	2f30      	cmp	r7, #48	@ 0x30
1001de18:	f040 851f 	bne.w	1001e85a <_strtod_l+0xb9a>
1001de1c:	4613      	mov	r3, r2
1001de1e:	4618      	mov	r0, r3
1001de20:	3301      	adds	r3, #1
1001de22:	9319      	str	r3, [sp, #100]	@ 0x64
1001de24:	781f      	ldrb	r7, [r3, #0]
1001de26:	2f30      	cmp	r7, #48	@ 0x30
1001de28:	d0f9      	beq.n	1001de1e <_strtod_l+0x15e>
1001de2a:	f1c2 0201 	rsb	r2, r2, #1
1001de2e:	4410      	add	r0, r2
1001de30:	f1a7 0331 	sub.w	r3, r7, #49	@ 0x31
1001de34:	2b08      	cmp	r3, #8
1001de36:	d834      	bhi.n	1001dea2 <_strtod_l+0x1e2>
1001de38:	f8dd 8064 	ldr.w	r8, [sp, #100]	@ 0x64
1001de3c:	1c43      	adds	r3, r0, #1
1001de3e:	f1a7 0e30 	sub.w	lr, r7, #48	@ 0x30
1001de42:	930e      	str	r3, [sp, #56]	@ 0x38
1001de44:	2401      	movs	r4, #1
1001de46:	4647      	mov	r7, r8
1001de48:	f04f 0a00 	mov.w	sl, #0
1001de4c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
1001de50:	eb0e 0545 	add.w	r5, lr, r5, lsl #1
1001de54:	2000      	movs	r0, #0
1001de56:	1c7b      	adds	r3, r7, #1
1001de58:	9319      	str	r3, [sp, #100]	@ 0x64
1001de5a:	787f      	ldrb	r7, [r7, #1]
1001de5c:	f1a7 0230 	sub.w	r2, r7, #48	@ 0x30
1001de60:	2a09      	cmp	r2, #9
1001de62:	f200 8322 	bhi.w	1001e4aa <_strtod_l+0x7ea>
1001de66:	9f19      	ldr	r7, [sp, #100]	@ 0x64
1001de68:	3001      	adds	r0, #1
1001de6a:	4696      	mov	lr, r2
1001de6c:	2a00      	cmp	r2, #0
1001de6e:	d0f2      	beq.n	1001de56 <_strtod_l+0x196>
1001de70:	2801      	cmp	r0, #1
1001de72:	f000 86e5 	beq.w	1001ec40 <_strtod_l+0xf80>
1001de76:	eb00 0c04 	add.w	ip, r0, r4
1001de7a:	f10c 31ff 	add.w	r1, ip, #4294967295	@ 0xffffffff
1001de7e:	e003      	b.n	1001de88 <_strtod_l+0x1c8>
1001de80:	005d      	lsls	r5, r3, #1
1001de82:	428c      	cmp	r4, r1
1001de84:	f000 8477 	beq.w	1001e776 <_strtod_l+0xab6>
1001de88:	2c08      	cmp	r4, #8
1001de8a:	eb05 0385 	add.w	r3, r5, r5, lsl #2
1001de8e:	f104 0401 	add.w	r4, r4, #1
1001de92:	d9f5      	bls.n	1001de80 <_strtod_l+0x1c0>
1001de94:	2c10      	cmp	r4, #16
1001de96:	bfdc      	itt	le
1001de98:	eb09 0989 	addle.w	r9, r9, r9, lsl #2
1001de9c:	ea4f 0949 	movle.w	r9, r9, lsl #1
1001dea0:	e7ef      	b.n	1001de82 <_strtod_l+0x1c2>
1001dea2:	2f65      	cmp	r7, #101	@ 0x65
1001dea4:	f040 8318 	bne.w	1001e4d8 <_strtod_l+0x818>
1001dea8:	f04f 0a00 	mov.w	sl, #0
1001deac:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
1001deb0:	f04f 0c01 	mov.w	ip, #1
1001deb4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001deb6:	4303      	orrs	r3, r0
1001deb8:	f040 82fd 	bne.w	1001e4b6 <_strtod_l+0x7f6>
1001debc:	9b07      	ldr	r3, [sp, #28]
1001debe:	f04f 0800 	mov.w	r8, #0
1001dec2:	f04f 0900 	mov.w	r9, #0
1001dec6:	b103      	cbz	r3, 1001deca <_strtod_l+0x20a>
1001dec8:	601e      	str	r6, [r3, #0]
1001deca:	4640      	mov	r0, r8
1001decc:	4649      	mov	r1, r9
1001dece:	b01f      	add	sp, #124	@ 0x7c
1001ded0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001ded4:	f898 2001 	ldrb.w	r2, [r8, #1]
1001ded8:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001dedc:	2a58      	cmp	r2, #88	@ 0x58
1001dede:	bf18      	it	ne
1001dee0:	4643      	movne	r3, r8
1001dee2:	f000 83fc 	beq.w	1001e6de <_strtod_l+0xa1e>
1001dee6:	3301      	adds	r3, #1
1001dee8:	9319      	str	r3, [sp, #100]	@ 0x64
1001deea:	781a      	ldrb	r2, [r3, #0]
1001deec:	2a30      	cmp	r2, #48	@ 0x30
1001deee:	d0fa      	beq.n	1001dee6 <_strtod_l+0x226>
1001def0:	4698      	mov	r8, r3
1001def2:	2a00      	cmp	r2, #0
1001def4:	f000 82bb 	beq.w	1001e46e <_strtod_l+0x7ae>
1001def8:	2301      	movs	r3, #1
1001defa:	9309      	str	r3, [sp, #36]	@ 0x24
1001defc:	e759      	b.n	1001ddb2 <_strtod_l+0xf2>
1001defe:	2000      	movs	r0, #0
1001df00:	46a2      	mov	sl, r4
1001df02:	900e      	str	r0, [sp, #56]	@ 0x38
1001df04:	4684      	mov	ip, r0
1001df06:	2f65      	cmp	r7, #101	@ 0x65
1001df08:	d035      	beq.n	1001df76 <_strtod_l+0x2b6>
1001df0a:	2f45      	cmp	r7, #69	@ 0x45
1001df0c:	d033      	beq.n	1001df76 <_strtod_l+0x2b6>
1001df0e:	2300      	movs	r3, #0
1001df10:	930f      	str	r3, [sp, #60]	@ 0x3c
1001df12:	2c00      	cmp	r4, #0
1001df14:	f040 8081 	bne.w	1001e01a <_strtod_l+0x35a>
1001df18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001df1a:	4303      	orrs	r3, r0
1001df1c:	f040 82a7 	bne.w	1001e46e <_strtod_l+0x7ae>
1001df20:	f1bc 0f00 	cmp.w	ip, #0
1001df24:	d1ca      	bne.n	1001debc <_strtod_l+0x1fc>
1001df26:	2f69      	cmp	r7, #105	@ 0x69
1001df28:	f000 847e 	beq.w	1001e828 <_strtod_l+0xb68>
1001df2c:	f300 83a3 	bgt.w	1001e676 <_strtod_l+0x9b6>
1001df30:	2f49      	cmp	r7, #73	@ 0x49
1001df32:	f000 8479 	beq.w	1001e828 <_strtod_l+0xb68>
1001df36:	2f4e      	cmp	r7, #78	@ 0x4e
1001df38:	d1c0      	bne.n	1001debc <_strtod_l+0x1fc>
1001df3a:	4925      	ldr	r1, [pc, #148]	@ (1001dfd0 <_strtod_l+0x310>)
1001df3c:	a819      	add	r0, sp, #100	@ 0x64
1001df3e:	f002 f801 	bl	1001ff44 <__match>
1001df42:	2800      	cmp	r0, #0
1001df44:	d0ba      	beq.n	1001debc <_strtod_l+0x1fc>
1001df46:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001df48:	781b      	ldrb	r3, [r3, #0]
1001df4a:	2b28      	cmp	r3, #40	@ 0x28
1001df4c:	f000 85a2 	beq.w	1001ea94 <_strtod_l+0xdd4>
1001df50:	4820      	ldr	r0, [pc, #128]	@ (1001dfd4 <_strtod_l+0x314>)
1001df52:	f001 fb93 	bl	1001f67c <nan>
1001df56:	4680      	mov	r8, r0
1001df58:	4689      	mov	r9, r1
1001df5a:	e28c      	b.n	1001e476 <_strtod_l+0x7b6>
1001df5c:	491b      	ldr	r1, [pc, #108]	@ (1001dfcc <_strtod_l+0x30c>)
1001df5e:	2201      	movs	r2, #1
1001df60:	f001 f854 	bl	1001f00c <strncmp>
1001df64:	2800      	cmp	r0, #0
1001df66:	d1ca      	bne.n	1001defe <_strtod_l+0x23e>
1001df68:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001df6a:	900e      	str	r0, [sp, #56]	@ 0x38
1001df6c:	1c5a      	adds	r2, r3, #1
1001df6e:	9219      	str	r2, [sp, #100]	@ 0x64
1001df70:	785f      	ldrb	r7, [r3, #1]
1001df72:	46a2      	mov	sl, r4
1001df74:	e772      	b.n	1001de5c <_strtod_l+0x19c>
1001df76:	2c00      	cmp	r4, #0
1001df78:	d09c      	beq.n	1001deb4 <_strtod_l+0x1f4>
1001df7a:	9e19      	ldr	r6, [sp, #100]	@ 0x64
1001df7c:	1c73      	adds	r3, r6, #1
1001df7e:	9319      	str	r3, [sp, #100]	@ 0x64
1001df80:	7877      	ldrb	r7, [r6, #1]
1001df82:	2f2b      	cmp	r7, #43	@ 0x2b
1001df84:	f000 8294 	beq.w	1001e4b0 <_strtod_l+0x7f0>
1001df88:	2f2d      	cmp	r7, #45	@ 0x2d
1001df8a:	f000 8284 	beq.w	1001e496 <_strtod_l+0x7d6>
1001df8e:	2300      	movs	r3, #0
1001df90:	930a      	str	r3, [sp, #40]	@ 0x28
1001df92:	f1a7 0130 	sub.w	r1, r7, #48	@ 0x30
1001df96:	2909      	cmp	r1, #9
1001df98:	f200 8283 	bhi.w	1001e4a2 <_strtod_l+0x7e2>
1001df9c:	2f30      	cmp	r7, #48	@ 0x30
1001df9e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001dfa0:	d10a      	bne.n	1001dfb8 <_strtod_l+0x2f8>
1001dfa2:	3301      	adds	r3, #1
1001dfa4:	9319      	str	r3, [sp, #100]	@ 0x64
1001dfa6:	781f      	ldrb	r7, [r3, #0]
1001dfa8:	2f30      	cmp	r7, #48	@ 0x30
1001dfaa:	d0fa      	beq.n	1001dfa2 <_strtod_l+0x2e2>
1001dfac:	f1a7 0231 	sub.w	r2, r7, #49	@ 0x31
1001dfb0:	2a08      	cmp	r2, #8
1001dfb2:	d8ac      	bhi.n	1001df0e <_strtod_l+0x24e>
1001dfb4:	f1a7 0130 	sub.w	r1, r7, #48	@ 0x30
1001dfb8:	1c5a      	adds	r2, r3, #1
1001dfba:	9219      	str	r2, [sp, #100]	@ 0x64
1001dfbc:	785f      	ldrb	r7, [r3, #1]
1001dfbe:	2f2f      	cmp	r7, #47	@ 0x2f
1001dfc0:	f340 83fc 	ble.w	1001e7bc <_strtod_l+0xafc>
1001dfc4:	4696      	mov	lr, r2
1001dfc6:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
1001dfca:	e00e      	b.n	1001dfea <_strtod_l+0x32a>
1001dfcc:	10021748 	.word	0x10021748
1001dfd0:	10023eb4 	.word	0x10023eb4
1001dfd4:	1002155c 	.word	0x1002155c
1001dfd8:	3201      	adds	r2, #1
1001dfda:	9219      	str	r2, [sp, #100]	@ 0x64
1001dfdc:	f89e 7001 	ldrb.w	r7, [lr, #1]
1001dfe0:	2f2f      	cmp	r7, #47	@ 0x2f
1001dfe2:	f1a8 0130 	sub.w	r1, r8, #48	@ 0x30
1001dfe6:	dd06      	ble.n	1001dff6 <_strtod_l+0x336>
1001dfe8:	4696      	mov	lr, r2
1001dfea:	eb01 0881 	add.w	r8, r1, r1, lsl #2
1001dfee:	2f39      	cmp	r7, #57	@ 0x39
1001dff0:	eb07 0848 	add.w	r8, r7, r8, lsl #1
1001dff4:	ddf0      	ble.n	1001dfd8 <_strtod_l+0x318>
1001dff6:	1ad2      	subs	r2, r2, r3
1001dff8:	2a08      	cmp	r2, #8
1001dffa:	f8dd 802c 	ldr.w	r8, [sp, #44]	@ 0x2c
1001dffe:	f340 83dd 	ble.w	1001e7bc <_strtod_l+0xafc>
1001e002:	f644 631f 	movw	r3, #19999	@ 0x4e1f
1001e006:	930f      	str	r3, [sp, #60]	@ 0x3c
1001e008:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e00a:	2b00      	cmp	r3, #0
1001e00c:	d081      	beq.n	1001df12 <_strtod_l+0x252>
1001e00e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e010:	425b      	negs	r3, r3
1001e012:	930f      	str	r3, [sp, #60]	@ 0x3c
1001e014:	2c00      	cmp	r4, #0
1001e016:	f43f af7f 	beq.w	1001df18 <_strtod_l+0x258>
1001e01a:	4628      	mov	r0, r5
1001e01c:	f002 fbbe 	bl	1002079c <__aeabi_ui2d>
1001e020:	4602      	mov	r2, r0
1001e022:	460b      	mov	r3, r1
1001e024:	e9cd 2304 	strd	r2, r3, [sp, #16]
1001e028:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
1001e02c:	f1ba 0f00 	cmp.w	sl, #0
1001e030:	bf08      	it	eq
1001e032:	46a2      	moveq	sl, r4
1001e034:	2c10      	cmp	r4, #16
1001e036:	eba3 0302 	sub.w	r3, r3, r2
1001e03a:	4626      	mov	r6, r4
1001e03c:	bfa8      	it	ge
1001e03e:	2610      	movge	r6, #16
1001e040:	2c09      	cmp	r4, #9
1001e042:	930b      	str	r3, [sp, #44]	@ 0x2c
1001e044:	dd16      	ble.n	1001e074 <_strtod_l+0x3b4>
1001e046:	4b4f      	ldr	r3, [pc, #316]	@ (1001e184 <_strtod_l+0x4c4>)
1001e048:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
1001e04c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
1001e050:	f002 fc1e 	bl	10020890 <__aeabi_dmul>
1001e054:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e058:	4648      	mov	r0, r9
1001e05a:	f002 fb9f 	bl	1002079c <__aeabi_ui2d>
1001e05e:	4602      	mov	r2, r0
1001e060:	460b      	mov	r3, r1
1001e062:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e066:	f002 fa5d 	bl	10020524 <__adddf3>
1001e06a:	2c0f      	cmp	r4, #15
1001e06c:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e070:	f300 81a7 	bgt.w	1001e3c2 <_strtod_l+0x702>
1001e074:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001e076:	2b00      	cmp	r3, #0
1001e078:	f000 8301 	beq.w	1001e67e <_strtod_l+0x9be>
1001e07c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001e07e:	f340 8231 	ble.w	1001e4e4 <_strtod_l+0x824>
1001e082:	2b16      	cmp	r3, #22
1001e084:	f340 83a1 	ble.w	1001e7ca <_strtod_l+0xb0a>
1001e088:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001e08a:	f1c4 0325 	rsb	r3, r4, #37	@ 0x25
1001e08e:	4293      	cmp	r3, r2
1001e090:	f280 8432 	bge.w	1001e8f8 <_strtod_l+0xc38>
1001e094:	1ba6      	subs	r6, r4, r6
1001e096:	4416      	add	r6, r2
1001e098:	f016 000f 	ands.w	r0, r6, #15
1001e09c:	d00a      	beq.n	1001e0b4 <_strtod_l+0x3f4>
1001e09e:	4939      	ldr	r1, [pc, #228]	@ (1001e184 <_strtod_l+0x4c4>)
1001e0a0:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
1001e0a4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001e0a8:	e9d1 0100 	ldrd	r0, r1, [r1]
1001e0ac:	f002 fbf0 	bl	10020890 <__aeabi_dmul>
1001e0b0:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e0b4:	f036 030f 	bics.w	r3, r6, #15
1001e0b8:	d046      	beq.n	1001e148 <_strtod_l+0x488>
1001e0ba:	f5b3 7f9a 	cmp.w	r3, #308	@ 0x134
1001e0be:	f300 834e 	bgt.w	1001e75e <_strtod_l+0xa9e>
1001e0c2:	2b10      	cmp	r3, #16
1001e0c4:	4a30      	ldr	r2, [pc, #192]	@ (1001e188 <_strtod_l+0x4c8>)
1001e0c6:	ea4f 1623 	mov.w	r6, r3, asr #4
1001e0ca:	f340 8539 	ble.w	1001eb40 <_strtod_l+0xe80>
1001e0ce:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e0d2:	2300      	movs	r3, #0
1001e0d4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
1001e0d8:	4617      	mov	r7, r2
1001e0da:	4699      	mov	r9, r3
1001e0dc:	4690      	mov	r8, r2
1001e0de:	f016 0f01 	tst.w	r6, #1
1001e0e2:	f109 0901 	add.w	r9, r9, #1
1001e0e6:	ea4f 0666 	mov.w	r6, r6, asr #1
1001e0ea:	d004      	beq.n	1001e0f6 <_strtod_l+0x436>
1001e0ec:	e9d7 2300 	ldrd	r2, r3, [r7]
1001e0f0:	f002 fbce 	bl	10020890 <__aeabi_dmul>
1001e0f4:	2301      	movs	r3, #1
1001e0f6:	2e01      	cmp	r6, #1
1001e0f8:	f107 0708 	add.w	r7, r7, #8
1001e0fc:	d1ef      	bne.n	1001e0de <_strtod_l+0x41e>
1001e0fe:	4642      	mov	r2, r8
1001e100:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
1001e104:	b10b      	cbz	r3, 1001e10a <_strtod_l+0x44a>
1001e106:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e10a:	9b05      	ldr	r3, [sp, #20]
1001e10c:	f1a3 7354 	sub.w	r3, r3, #55574528	@ 0x3500000
1001e110:	eb02 01c9 	add.w	r1, r2, r9, lsl #3
1001e114:	9305      	str	r3, [sp, #20]
1001e116:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001e11a:	e9d1 0100 	ldrd	r0, r1, [r1]
1001e11e:	f002 fbb7 	bl	10020890 <__aeabi_dmul>
1001e122:	4b1a      	ldr	r3, [pc, #104]	@ (1001e18c <_strtod_l+0x4cc>)
1001e124:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e128:	400b      	ands	r3, r1
1001e12a:	460a      	mov	r2, r1
1001e12c:	4918      	ldr	r1, [pc, #96]	@ (1001e190 <_strtod_l+0x4d0>)
1001e12e:	428b      	cmp	r3, r1
1001e130:	f200 8315 	bhi.w	1001e75e <_strtod_l+0xa9e>
1001e134:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
1001e138:	428b      	cmp	r3, r1
1001e13a:	f240 8454 	bls.w	1001e9e6 <_strtod_l+0xd26>
1001e13e:	4b15      	ldr	r3, [pc, #84]	@ (1001e194 <_strtod_l+0x4d4>)
1001e140:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001e144:	e9cd 2304 	strd	r2, r3, [sp, #16]
1001e148:	2300      	movs	r3, #0
1001e14a:	930a      	str	r3, [sp, #40]	@ 0x28
1001e14c:	9500      	str	r5, [sp, #0]
1001e14e:	4623      	mov	r3, r4
1001e150:	4652      	mov	r2, sl
1001e152:	4641      	mov	r1, r8
1001e154:	4658      	mov	r0, fp
1001e156:	f7ff f81f 	bl	1001d198 <__s2b>
1001e15a:	9014      	str	r0, [sp, #80]	@ 0x50
1001e15c:	2800      	cmp	r0, #0
1001e15e:	f000 82fe 	beq.w	1001e75e <_strtod_l+0xa9e>
1001e162:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
1001e166:	1a9b      	subs	r3, r3, r2
1001e168:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001e16a:	2a00      	cmp	r2, #0
1001e16c:	bfa8      	it	ge
1001e16e:	2300      	movge	r3, #0
1001e170:	930e      	str	r3, [sp, #56]	@ 0x38
1001e172:	f04f 0a00 	mov.w	sl, #0
1001e176:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
1001e17a:	f8cd a024 	str.w	sl, [sp, #36]	@ 0x24
1001e17e:	9315      	str	r3, [sp, #84]	@ 0x54
1001e180:	e0df      	b.n	1001e342 <_strtod_l+0x682>
1001e182:	bf00      	nop
1001e184:	10023de0 	.word	0x10023de0
1001e188:	10023db8 	.word	0x10023db8
1001e18c:	7ff00000 	.word	0x7ff00000
1001e190:	7ca00000 	.word	0x7ca00000
1001e194:	7fefffff 	.word	0x7fefffff
1001e198:	1ad2      	subs	r2, r2, r3
1001e19a:	2a1f      	cmp	r2, #31
1001e19c:	eba4 0402 	sub.w	r4, r4, r2
1001e1a0:	f300 822e 	bgt.w	1001e600 <_strtod_l+0x940>
1001e1a4:	2301      	movs	r3, #1
1001e1a6:	4093      	lsls	r3, r2
1001e1a8:	4698      	mov	r8, r3
1001e1aa:	2500      	movs	r5, #0
1001e1ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e1ae:	4426      	add	r6, r4
1001e1b0:	443c      	add	r4, r7
1001e1b2:	42a7      	cmp	r7, r4
1001e1b4:	441e      	add	r6, r3
1001e1b6:	463b      	mov	r3, r7
1001e1b8:	bfa8      	it	ge
1001e1ba:	4623      	movge	r3, r4
1001e1bc:	42b3      	cmp	r3, r6
1001e1be:	bfa8      	it	ge
1001e1c0:	4633      	movge	r3, r6
1001e1c2:	2b00      	cmp	r3, #0
1001e1c4:	dd02      	ble.n	1001e1cc <_strtod_l+0x50c>
1001e1c6:	1ae4      	subs	r4, r4, r3
1001e1c8:	1af6      	subs	r6, r6, r3
1001e1ca:	1aff      	subs	r7, r7, r3
1001e1cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001e1ce:	2b00      	cmp	r3, #0
1001e1d0:	f300 81bc 	bgt.w	1001e54c <_strtod_l+0x88c>
1001e1d4:	2c00      	cmp	r4, #0
1001e1d6:	f300 81d2 	bgt.w	1001e57e <_strtod_l+0x8be>
1001e1da:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001e1dc:	2b00      	cmp	r3, #0
1001e1de:	f300 8205 	bgt.w	1001e5ec <_strtod_l+0x92c>
1001e1e2:	2e00      	cmp	r6, #0
1001e1e4:	f300 81f6 	bgt.w	1001e5d4 <_strtod_l+0x914>
1001e1e8:	2f00      	cmp	r7, #0
1001e1ea:	dd08      	ble.n	1001e1fe <_strtod_l+0x53e>
1001e1ec:	4651      	mov	r1, sl
1001e1ee:	463a      	mov	r2, r7
1001e1f0:	4658      	mov	r0, fp
1001e1f2:	f7ff f9b9 	bl	1001d568 <__lshift>
1001e1f6:	4682      	mov	sl, r0
1001e1f8:	2800      	cmp	r0, #0
1001e1fa:	f000 81f4 	beq.w	1001e5e6 <_strtod_l+0x926>
1001e1fe:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001e200:	464a      	mov	r2, r9
1001e202:	4658      	mov	r0, fp
1001e204:	f7ff fa48 	bl	1001d698 <__mdiff>
1001e208:	9009      	str	r0, [sp, #36]	@ 0x24
1001e20a:	2800      	cmp	r0, #0
1001e20c:	f000 81eb 	beq.w	1001e5e6 <_strtod_l+0x926>
1001e210:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001e212:	2300      	movs	r3, #0
1001e214:	68d1      	ldr	r1, [r2, #12]
1001e216:	910f      	str	r1, [sp, #60]	@ 0x3c
1001e218:	60d3      	str	r3, [r2, #12]
1001e21a:	4651      	mov	r1, sl
1001e21c:	f7ff fa1c 	bl	1001d658 <__mcmp>
1001e220:	2800      	cmp	r0, #0
1001e222:	f2c0 8402 	blt.w	1001ea2a <_strtod_l+0xd6a>
1001e226:	9f05      	ldr	r7, [sp, #20]
1001e228:	f000 8389 	beq.w	1001e93e <_strtod_l+0xc7e>
1001e22c:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001e22e:	4651      	mov	r1, sl
1001e230:	f7ff fbc8 	bl	1001d9c4 <__ratio>
1001e234:	2200      	movs	r2, #0
1001e236:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
1001e23a:	4604      	mov	r4, r0
1001e23c:	460d      	mov	r5, r1
1001e23e:	f002 fda3 	bl	10020d88 <__aeabi_dcmple>
1001e242:	2800      	cmp	r0, #0
1001e244:	f000 8172 	beq.w	1001e52c <_strtod_l+0x86c>
1001e248:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e24a:	2b00      	cmp	r3, #0
1001e24c:	f040 81e4 	bne.w	1001e618 <_strtod_l+0x958>
1001e250:	9b04      	ldr	r3, [sp, #16]
1001e252:	2b00      	cmp	r3, #0
1001e254:	f040 8273 	bne.w	1001e73e <_strtod_l+0xa7e>
1001e258:	f3c7 0313 	ubfx	r3, r7, #0, #20
1001e25c:	2b00      	cmp	r3, #0
1001e25e:	f040 8211 	bne.w	1001e684 <_strtod_l+0x9c4>
1001e262:	4bab      	ldr	r3, [pc, #684]	@ (1001e510 <_strtod_l+0x850>)
1001e264:	2200      	movs	r2, #0
1001e266:	4620      	mov	r0, r4
1001e268:	4629      	mov	r1, r5
1001e26a:	f002 fd83 	bl	10020d74 <__aeabi_dcmplt>
1001e26e:	2800      	cmp	r0, #0
1001e270:	f040 835c 	bne.w	1001e92c <_strtod_l+0xc6c>
1001e274:	4ba7      	ldr	r3, [pc, #668]	@ (1001e514 <_strtod_l+0x854>)
1001e276:	4620      	mov	r0, r4
1001e278:	4629      	mov	r1, r5
1001e27a:	2200      	movs	r2, #0
1001e27c:	f002 fb08 	bl	10020890 <__aeabi_dmul>
1001e280:	4603      	mov	r3, r0
1001e282:	460c      	mov	r4, r1
1001e284:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001e288:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
1001e28c:	900c      	str	r0, [sp, #48]	@ 0x30
1001e28e:	930d      	str	r3, [sp, #52]	@ 0x34
1001e290:	4ea1      	ldr	r6, [pc, #644]	@ (1001e518 <_strtod_l+0x858>)
1001e292:	4ba2      	ldr	r3, [pc, #648]	@ (1001e51c <_strtod_l+0x85c>)
1001e294:	403e      	ands	r6, r7
1001e296:	429e      	cmp	r6, r3
1001e298:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	@ 0x30
1001e29c:	f000 81c3 	beq.w	1001e626 <_strtod_l+0x966>
1001e2a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e2a2:	b323      	cbz	r3, 1001e2ee <_strtod_l+0x62e>
1001e2a4:	f1b6 6fd4 	cmp.w	r6, #111149056	@ 0x6a00000
1001e2a8:	d821      	bhi.n	1001e2ee <_strtod_l+0x62e>
1001e2aa:	e9dd 7812 	ldrd	r7, r8, [sp, #72]	@ 0x48
1001e2ae:	a396      	add	r3, pc, #600	@ (adr r3, 1001e508 <_strtod_l+0x848>)
1001e2b0:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e2b4:	4638      	mov	r0, r7
1001e2b6:	4641      	mov	r1, r8
1001e2b8:	f002 fd66 	bl	10020d88 <__aeabi_dcmple>
1001e2bc:	b1a0      	cbz	r0, 1001e2e8 <_strtod_l+0x628>
1001e2be:	4641      	mov	r1, r8
1001e2c0:	4638      	mov	r0, r7
1001e2c2:	f002 fdbd 	bl	10020e40 <__aeabi_d2uiz>
1001e2c6:	2801      	cmp	r0, #1
1001e2c8:	bf38      	it	cc
1001e2ca:	2001      	movcc	r0, #1
1001e2cc:	f002 fa66 	bl	1002079c <__aeabi_ui2d>
1001e2d0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e2d2:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001e2d6:	2b00      	cmp	r3, #0
1001e2d8:	f040 82ba 	bne.w	1001e850 <_strtod_l+0xb90>
1001e2dc:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
1001e2e0:	9016      	str	r0, [sp, #88]	@ 0x58
1001e2e2:	9317      	str	r3, [sp, #92]	@ 0x5c
1001e2e4:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	@ 0x58
1001e2e8:	f105 63d6 	add.w	r3, r5, #112197632	@ 0x6b00000
1001e2ec:	1b9d      	subs	r5, r3, r6
1001e2ee:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	@ 0x40
1001e2f2:	4638      	mov	r0, r7
1001e2f4:	4641      	mov	r1, r8
1001e2f6:	f7ff fa81 	bl	1001d7fc <__ulp>
1001e2fa:	4602      	mov	r2, r0
1001e2fc:	460b      	mov	r3, r1
1001e2fe:	4620      	mov	r0, r4
1001e300:	4629      	mov	r1, r5
1001e302:	f002 fac5 	bl	10020890 <__aeabi_dmul>
1001e306:	463a      	mov	r2, r7
1001e308:	4643      	mov	r3, r8
1001e30a:	f002 f90b 	bl	10020524 <__adddf3>
1001e30e:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e312:	460c      	mov	r4, r1
1001e314:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e316:	b923      	cbnz	r3, 1001e322 <_strtod_l+0x662>
1001e318:	4b7f      	ldr	r3, [pc, #508]	@ (1001e518 <_strtod_l+0x858>)
1001e31a:	4023      	ands	r3, r4
1001e31c:	429e      	cmp	r6, r3
1001e31e:	f000 81ba 	beq.w	1001e696 <_strtod_l+0x9d6>
1001e322:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001e324:	4658      	mov	r0, fp
1001e326:	f7fe fedd 	bl	1001d0e4 <_Bfree>
1001e32a:	4649      	mov	r1, r9
1001e32c:	4658      	mov	r0, fp
1001e32e:	f7fe fed9 	bl	1001d0e4 <_Bfree>
1001e332:	4651      	mov	r1, sl
1001e334:	4658      	mov	r0, fp
1001e336:	f7fe fed5 	bl	1001d0e4 <_Bfree>
1001e33a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001e33c:	4658      	mov	r0, fp
1001e33e:	f7fe fed1 	bl	1001d0e4 <_Bfree>
1001e342:	9c14      	ldr	r4, [sp, #80]	@ 0x50
1001e344:	4658      	mov	r0, fp
1001e346:	6861      	ldr	r1, [r4, #4]
1001e348:	f7fe fea6 	bl	1001d098 <_Balloc>
1001e34c:	4681      	mov	r9, r0
1001e34e:	2800      	cmp	r0, #0
1001e350:	f000 8149 	beq.w	1001e5e6 <_strtod_l+0x926>
1001e354:	6922      	ldr	r2, [r4, #16]
1001e356:	3202      	adds	r2, #2
1001e358:	f104 010c 	add.w	r1, r4, #12
1001e35c:	0092      	lsls	r2, r2, #2
1001e35e:	300c      	adds	r0, #12
1001e360:	f7fa f91e 	bl	100185a0 <memcpy>
1001e364:	ab1c      	add	r3, sp, #112	@ 0x70
1001e366:	9301      	str	r3, [sp, #4]
1001e368:	ab1b      	add	r3, sp, #108	@ 0x6c
1001e36a:	9300      	str	r3, [sp, #0]
1001e36c:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
1001e370:	4658      	mov	r0, fp
1001e372:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
1001e376:	461a      	mov	r2, r3
1001e378:	4623      	mov	r3, r4
1001e37a:	f7ff fac5 	bl	1001d908 <__d2b>
1001e37e:	901a      	str	r0, [sp, #104]	@ 0x68
1001e380:	2800      	cmp	r0, #0
1001e382:	f000 8105 	beq.w	1001e590 <_strtod_l+0x8d0>
1001e386:	2101      	movs	r1, #1
1001e388:	4658      	mov	r0, fp
1001e38a:	f7fe ffaf 	bl	1001d2ec <__i2b>
1001e38e:	4682      	mov	sl, r0
1001e390:	2800      	cmp	r0, #0
1001e392:	f000 8128 	beq.w	1001e5e6 <_strtod_l+0x926>
1001e396:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
1001e398:	2b00      	cmp	r3, #0
1001e39a:	f2c0 8117 	blt.w	1001e5cc <_strtod_l+0x90c>
1001e39e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001e3a0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
1001e3a2:	189f      	adds	r7, r3, r2
1001e3a4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001e3a6:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
1001e3a8:	1a9b      	subs	r3, r3, r2
1001e3aa:	4423      	add	r3, r4
1001e3ac:	4a5c      	ldr	r2, [pc, #368]	@ (1001e520 <_strtod_l+0x860>)
1001e3ae:	3b01      	subs	r3, #1
1001e3b0:	4293      	cmp	r3, r2
1001e3b2:	f1c4 0436 	rsb	r4, r4, #54	@ 0x36
1001e3b6:	f6ff aeef 	blt.w	1001e198 <_strtod_l+0x4d8>
1001e3ba:	2301      	movs	r3, #1
1001e3bc:	2500      	movs	r5, #0
1001e3be:	4698      	mov	r8, r3
1001e3c0:	e6f4      	b.n	1001e1ac <_strtod_l+0x4ec>
1001e3c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001e3c4:	1ba6      	subs	r6, r4, r6
1001e3c6:	441e      	add	r6, r3
1001e3c8:	2e00      	cmp	r6, #0
1001e3ca:	f73f ae65 	bgt.w	1001e098 <_strtod_l+0x3d8>
1001e3ce:	f43f aebb 	beq.w	1001e148 <_strtod_l+0x488>
1001e3d2:	4276      	negs	r6, r6
1001e3d4:	f016 020f 	ands.w	r2, r6, #15
1001e3d8:	d00a      	beq.n	1001e3f0 <_strtod_l+0x730>
1001e3da:	4b52      	ldr	r3, [pc, #328]	@ (1001e524 <_strtod_l+0x864>)
1001e3dc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1001e3e0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e3e4:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e3e8:	f002 fb7c 	bl	10020ae4 <__aeabi_ddiv>
1001e3ec:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e3f0:	1136      	asrs	r6, r6, #4
1001e3f2:	f43f aea9 	beq.w	1001e148 <_strtod_l+0x488>
1001e3f6:	2e1f      	cmp	r6, #31
1001e3f8:	dc36      	bgt.n	1001e468 <_strtod_l+0x7a8>
1001e3fa:	f016 0310 	ands.w	r3, r6, #16
1001e3fe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e402:	bf18      	it	ne
1001e404:	236a      	movne	r3, #106	@ 0x6a
1001e406:	4f48      	ldr	r7, [pc, #288]	@ (1001e528 <_strtod_l+0x868>)
1001e408:	930a      	str	r3, [sp, #40]	@ 0x28
1001e40a:	2300      	movs	r3, #0
1001e40c:	07f2      	lsls	r2, r6, #31
1001e40e:	d504      	bpl.n	1001e41a <_strtod_l+0x75a>
1001e410:	e9d7 2300 	ldrd	r2, r3, [r7]
1001e414:	f002 fa3c 	bl	10020890 <__aeabi_dmul>
1001e418:	2301      	movs	r3, #1
1001e41a:	1076      	asrs	r6, r6, #1
1001e41c:	f107 0708 	add.w	r7, r7, #8
1001e420:	d1f4      	bne.n	1001e40c <_strtod_l+0x74c>
1001e422:	b10b      	cbz	r3, 1001e428 <_strtod_l+0x768>
1001e424:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e428:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e42a:	b1a3      	cbz	r3, 1001e456 <_strtod_l+0x796>
1001e42c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e430:	f3c1 520a 	ubfx	r2, r1, #20, #11
1001e434:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
1001e438:	2b00      	cmp	r3, #0
1001e43a:	dd0a      	ble.n	1001e452 <_strtod_l+0x792>
1001e43c:	2b1f      	cmp	r3, #31
1001e43e:	f340 8398 	ble.w	1001eb72 <_strtod_l+0xeb2>
1001e442:	2000      	movs	r0, #0
1001e444:	2b34      	cmp	r3, #52	@ 0x34
1001e446:	9004      	str	r0, [sp, #16]
1001e448:	f340 83ca 	ble.w	1001ebe0 <_strtod_l+0xf20>
1001e44c:	f04f 735c 	mov.w	r3, #57671680	@ 0x3700000
1001e450:	9305      	str	r3, [sp, #20]
1001e452:	236a      	movs	r3, #106	@ 0x6a
1001e454:	930a      	str	r3, [sp, #40]	@ 0x28
1001e456:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e45a:	2200      	movs	r2, #0
1001e45c:	2300      	movs	r3, #0
1001e45e:	f002 fc7f 	bl	10020d60 <__aeabi_dcmpeq>
1001e462:	2800      	cmp	r0, #0
1001e464:	f43f ae72 	beq.w	1001e14c <_strtod_l+0x48c>
1001e468:	2322      	movs	r3, #34	@ 0x22
1001e46a:	f8cb 3000 	str.w	r3, [fp]
1001e46e:	f04f 0800 	mov.w	r8, #0
1001e472:	f04f 0900 	mov.w	r9, #0
1001e476:	9a07      	ldr	r2, [sp, #28]
1001e478:	b10a      	cbz	r2, 1001e47e <_strtod_l+0x7be>
1001e47a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001e47c:	6013      	str	r3, [r2, #0]
1001e47e:	9b08      	ldr	r3, [sp, #32]
1001e480:	2b00      	cmp	r3, #0
1001e482:	f43f ad22 	beq.w	1001deca <_strtod_l+0x20a>
1001e486:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
1001e48a:	4699      	mov	r9, r3
1001e48c:	4640      	mov	r0, r8
1001e48e:	4649      	mov	r1, r9
1001e490:	b01f      	add	sp, #124	@ 0x7c
1001e492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001e496:	2301      	movs	r3, #1
1001e498:	930a      	str	r3, [sp, #40]	@ 0x28
1001e49a:	1cb3      	adds	r3, r6, #2
1001e49c:	9319      	str	r3, [sp, #100]	@ 0x64
1001e49e:	78b7      	ldrb	r7, [r6, #2]
1001e4a0:	e577      	b.n	1001df92 <_strtod_l+0x2d2>
1001e4a2:	2300      	movs	r3, #0
1001e4a4:	9619      	str	r6, [sp, #100]	@ 0x64
1001e4a6:	930f      	str	r3, [sp, #60]	@ 0x3c
1001e4a8:	e533      	b.n	1001df12 <_strtod_l+0x252>
1001e4aa:	f04f 0c01 	mov.w	ip, #1
1001e4ae:	e52a      	b.n	1001df06 <_strtod_l+0x246>
1001e4b0:	2300      	movs	r3, #0
1001e4b2:	930a      	str	r3, [sp, #40]	@ 0x28
1001e4b4:	e7f1      	b.n	1001e49a <_strtod_l+0x7da>
1001e4b6:	2400      	movs	r4, #0
1001e4b8:	e55f      	b.n	1001df7a <_strtod_l+0x2ba>
1001e4ba:	2200      	movs	r2, #0
1001e4bc:	9208      	str	r2, [sp, #32]
1001e4be:	f108 0101 	add.w	r1, r8, #1
1001e4c2:	9119      	str	r1, [sp, #100]	@ 0x64
1001e4c4:	f898 2001 	ldrb.w	r2, [r8, #1]
1001e4c8:	2a00      	cmp	r2, #0
1001e4ca:	f43f acf7 	beq.w	1001debc <_strtod_l+0x1fc>
1001e4ce:	4688      	mov	r8, r1
1001e4d0:	e46a      	b.n	1001dda8 <_strtod_l+0xe8>
1001e4d2:	2201      	movs	r2, #1
1001e4d4:	9208      	str	r2, [sp, #32]
1001e4d6:	e7f2      	b.n	1001e4be <_strtod_l+0x7fe>
1001e4d8:	2f45      	cmp	r7, #69	@ 0x45
1001e4da:	f43f ace5 	beq.w	1001dea8 <_strtod_l+0x1e8>
1001e4de:	f04f 0c01 	mov.w	ip, #1
1001e4e2:	e519      	b.n	1001df18 <_strtod_l+0x258>
1001e4e4:	3316      	adds	r3, #22
1001e4e6:	f6ff af6c 	blt.w	1001e3c2 <_strtod_l+0x702>
1001e4ea:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
1001e4ee:	1a9a      	subs	r2, r3, r2
1001e4f0:	4b0c      	ldr	r3, [pc, #48]	@ (1001e524 <_strtod_l+0x864>)
1001e4f2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1001e4f6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e4fa:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e4fe:	f002 faf1 	bl	10020ae4 <__aeabi_ddiv>
1001e502:	4680      	mov	r8, r0
1001e504:	4689      	mov	r9, r1
1001e506:	e7b6      	b.n	1001e476 <_strtod_l+0x7b6>
1001e508:	ffc00000 	.word	0xffc00000
1001e50c:	41dfffff 	.word	0x41dfffff
1001e510:	3ff00000 	.word	0x3ff00000
1001e514:	3fe00000 	.word	0x3fe00000
1001e518:	7ff00000 	.word	0x7ff00000
1001e51c:	7fe00000 	.word	0x7fe00000
1001e520:	fffffc02 	.word	0xfffffc02
1001e524:	10023de0 	.word	0x10023de0
1001e528:	10023ee0 	.word	0x10023ee0
1001e52c:	4bb4      	ldr	r3, [pc, #720]	@ (1001e800 <_strtod_l+0xb40>)
1001e52e:	4620      	mov	r0, r4
1001e530:	4629      	mov	r1, r5
1001e532:	2200      	movs	r2, #0
1001e534:	f002 f9ac 	bl	10020890 <__aeabi_dmul>
1001e538:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e53a:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001e53e:	2b00      	cmp	r3, #0
1001e540:	d165      	bne.n	1001e60e <_strtod_l+0x94e>
1001e542:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
1001e546:	900c      	str	r0, [sp, #48]	@ 0x30
1001e548:	930d      	str	r3, [sp, #52]	@ 0x34
1001e54a:	e6a1      	b.n	1001e290 <_strtod_l+0x5d0>
1001e54c:	4651      	mov	r1, sl
1001e54e:	461a      	mov	r2, r3
1001e550:	4658      	mov	r0, fp
1001e552:	f7fe ffaf 	bl	1001d4b4 <__pow5mult>
1001e556:	4682      	mov	sl, r0
1001e558:	2800      	cmp	r0, #0
1001e55a:	d044      	beq.n	1001e5e6 <_strtod_l+0x926>
1001e55c:	4601      	mov	r1, r0
1001e55e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001e560:	4658      	mov	r0, fp
1001e562:	f7fe fef1 	bl	1001d348 <__multiply>
1001e566:	2800      	cmp	r0, #0
1001e568:	d03d      	beq.n	1001e5e6 <_strtod_l+0x926>
1001e56a:	900f      	str	r0, [sp, #60]	@ 0x3c
1001e56c:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001e56e:	4658      	mov	r0, fp
1001e570:	f7fe fdb8 	bl	1001d0e4 <_Bfree>
1001e574:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e576:	931a      	str	r3, [sp, #104]	@ 0x68
1001e578:	2c00      	cmp	r4, #0
1001e57a:	f77f ae2e 	ble.w	1001e1da <_strtod_l+0x51a>
1001e57e:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001e580:	4622      	mov	r2, r4
1001e582:	4658      	mov	r0, fp
1001e584:	f7fe fff0 	bl	1001d568 <__lshift>
1001e588:	901a      	str	r0, [sp, #104]	@ 0x68
1001e58a:	2800      	cmp	r0, #0
1001e58c:	f47f ae25 	bne.w	1001e1da <_strtod_l+0x51a>
1001e590:	464f      	mov	r7, r9
1001e592:	4605      	mov	r5, r0
1001e594:	2322      	movs	r3, #34	@ 0x22
1001e596:	f8df 926c 	ldr.w	r9, [pc, #620]	@ 1001e804 <_strtod_l+0xb44>
1001e59a:	f8cb 3000 	str.w	r3, [fp]
1001e59e:	f04f 0800 	mov.w	r8, #0
1001e5a2:	4629      	mov	r1, r5
1001e5a4:	4658      	mov	r0, fp
1001e5a6:	f7fe fd9d 	bl	1001d0e4 <_Bfree>
1001e5aa:	4639      	mov	r1, r7
1001e5ac:	4658      	mov	r0, fp
1001e5ae:	f7fe fd99 	bl	1001d0e4 <_Bfree>
1001e5b2:	4651      	mov	r1, sl
1001e5b4:	4658      	mov	r0, fp
1001e5b6:	f7fe fd95 	bl	1001d0e4 <_Bfree>
1001e5ba:	9914      	ldr	r1, [sp, #80]	@ 0x50
1001e5bc:	4658      	mov	r0, fp
1001e5be:	f7fe fd91 	bl	1001d0e4 <_Bfree>
1001e5c2:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001e5c4:	4658      	mov	r0, fp
1001e5c6:	f7fe fd8d 	bl	1001d0e4 <_Bfree>
1001e5ca:	e754      	b.n	1001e476 <_strtod_l+0x7b6>
1001e5cc:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001e5ce:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
1001e5d0:	1ad6      	subs	r6, r2, r3
1001e5d2:	e6e7      	b.n	1001e3a4 <_strtod_l+0x6e4>
1001e5d4:	4649      	mov	r1, r9
1001e5d6:	4632      	mov	r2, r6
1001e5d8:	4658      	mov	r0, fp
1001e5da:	f7fe ffc5 	bl	1001d568 <__lshift>
1001e5de:	4681      	mov	r9, r0
1001e5e0:	2800      	cmp	r0, #0
1001e5e2:	f47f ae01 	bne.w	1001e1e8 <_strtod_l+0x528>
1001e5e6:	464f      	mov	r7, r9
1001e5e8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001e5ea:	e7d3      	b.n	1001e594 <_strtod_l+0x8d4>
1001e5ec:	4649      	mov	r1, r9
1001e5ee:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001e5f0:	4658      	mov	r0, fp
1001e5f2:	f7fe ff5f 	bl	1001d4b4 <__pow5mult>
1001e5f6:	4681      	mov	r9, r0
1001e5f8:	2800      	cmp	r0, #0
1001e5fa:	f47f adf2 	bne.w	1001e1e2 <_strtod_l+0x522>
1001e5fe:	e7f2      	b.n	1001e5e6 <_strtod_l+0x926>
1001e600:	4a81      	ldr	r2, [pc, #516]	@ (1001e808 <_strtod_l+0xb48>)
1001e602:	1ad3      	subs	r3, r2, r3
1001e604:	2201      	movs	r2, #1
1001e606:	fa02 f503 	lsl.w	r5, r2, r3
1001e60a:	4690      	mov	r8, r2
1001e60c:	e5ce      	b.n	1001e1ac <_strtod_l+0x4ec>
1001e60e:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
1001e612:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001e616:	e63b      	b.n	1001e290 <_strtod_l+0x5d0>
1001e618:	4c7c      	ldr	r4, [pc, #496]	@ (1001e80c <_strtod_l+0xb4c>)
1001e61a:	2300      	movs	r3, #0
1001e61c:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001e620:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001e624:	e634      	b.n	1001e290 <_strtod_l+0x5d0>
1001e626:	f1a7 7354 	sub.w	r3, r7, #55574528	@ 0x3500000
1001e62a:	9305      	str	r3, [sp, #20]
1001e62c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
1001e630:	4620      	mov	r0, r4
1001e632:	4629      	mov	r1, r5
1001e634:	f7ff f8e2 	bl	1001d7fc <__ulp>
1001e638:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
1001e63c:	f002 f928 	bl	10020890 <__aeabi_dmul>
1001e640:	462b      	mov	r3, r5
1001e642:	4622      	mov	r2, r4
1001e644:	f001 ff6e 	bl	10020524 <__adddf3>
1001e648:	4f6e      	ldr	r7, [pc, #440]	@ (1001e804 <_strtod_l+0xb44>)
1001e64a:	4b71      	ldr	r3, [pc, #452]	@ (1001e810 <_strtod_l+0xb50>)
1001e64c:	400f      	ands	r7, r1
1001e64e:	429f      	cmp	r7, r3
1001e650:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e654:	f240 808b 	bls.w	1001e76e <_strtod_l+0xaae>
1001e658:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
1001e65c:	f103 7354 	add.w	r3, r3, #55574528	@ 0x3500000
1001e660:	4299      	cmp	r1, r3
1001e662:	d102      	bne.n	1001e66a <_strtod_l+0x9aa>
1001e664:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001e668:	d0bd      	beq.n	1001e5e6 <_strtod_l+0x926>
1001e66a:	4c6a      	ldr	r4, [pc, #424]	@ (1001e814 <_strtod_l+0xb54>)
1001e66c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001e670:	e9cd 3404 	strd	r3, r4, [sp, #16]
1001e674:	e655      	b.n	1001e322 <_strtod_l+0x662>
1001e676:	2f6e      	cmp	r7, #110	@ 0x6e
1001e678:	f43f ac5f 	beq.w	1001df3a <_strtod_l+0x27a>
1001e67c:	e41e      	b.n	1001debc <_strtod_l+0x1fc>
1001e67e:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001e682:	e6f8      	b.n	1001e476 <_strtod_l+0x7b6>
1001e684:	4c64      	ldr	r4, [pc, #400]	@ (1001e818 <_strtod_l+0xb58>)
1001e686:	2300      	movs	r3, #0
1001e688:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001e68c:	4c5f      	ldr	r4, [pc, #380]	@ (1001e80c <_strtod_l+0xb4c>)
1001e68e:	2300      	movs	r3, #0
1001e690:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001e694:	e5fc      	b.n	1001e290 <_strtod_l+0x5d0>
1001e696:	e9dd 5612 	ldrd	r5, r6, [sp, #72]	@ 0x48
1001e69a:	4628      	mov	r0, r5
1001e69c:	4631      	mov	r1, r6
1001e69e:	f002 fc57 	bl	10020f50 <__aeabi_d2lz>
1001e6a2:	f002 f8c7 	bl	10020834 <__aeabi_l2d>
1001e6a6:	460b      	mov	r3, r1
1001e6a8:	4602      	mov	r2, r0
1001e6aa:	4631      	mov	r1, r6
1001e6ac:	4628      	mov	r0, r5
1001e6ae:	f001 ff37 	bl	10020520 <__aeabi_dsub>
1001e6b2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001e6b4:	9b04      	ldr	r3, [sp, #16]
1001e6b6:	f3c4 0413 	ubfx	r4, r4, #0, #20
1001e6ba:	431d      	orrs	r5, r3
1001e6bc:	432c      	orrs	r4, r5
1001e6be:	4606      	mov	r6, r0
1001e6c0:	460f      	mov	r7, r1
1001e6c2:	d12a      	bne.n	1001e71a <_strtod_l+0xa5a>
1001e6c4:	a348      	add	r3, pc, #288	@ (adr r3, 1001e7e8 <_strtod_l+0xb28>)
1001e6c6:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e6ca:	f002 fb53 	bl	10020d74 <__aeabi_dcmplt>
1001e6ce:	2800      	cmp	r0, #0
1001e6d0:	f43f ae27 	beq.w	1001e322 <_strtod_l+0x662>
1001e6d4:	464f      	mov	r7, r9
1001e6d6:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001e6da:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001e6dc:	e761      	b.n	1001e5a2 <_strtod_l+0x8e2>
1001e6de:	9302      	str	r3, [sp, #8]
1001e6e0:	9b08      	ldr	r3, [sp, #32]
1001e6e2:	9301      	str	r3, [sp, #4]
1001e6e4:	ab1a      	add	r3, sp, #104	@ 0x68
1001e6e6:	9300      	str	r3, [sp, #0]
1001e6e8:	4a4c      	ldr	r2, [pc, #304]	@ (1001e81c <_strtod_l+0xb5c>)
1001e6ea:	ab1b      	add	r3, sp, #108	@ 0x6c
1001e6ec:	a919      	add	r1, sp, #100	@ 0x64
1001e6ee:	4658      	mov	r0, fp
1001e6f0:	f001 f96e 	bl	1001f9d0 <__gethex>
1001e6f4:	f010 050f 	ands.w	r5, r0, #15
1001e6f8:	4604      	mov	r4, r0
1001e6fa:	f43f aeb8 	beq.w	1001e46e <_strtod_l+0x7ae>
1001e6fe:	2d06      	cmp	r5, #6
1001e700:	f040 80ae 	bne.w	1001e860 <_strtod_l+0xba0>
1001e704:	9a07      	ldr	r2, [sp, #28]
1001e706:	b112      	cbz	r2, 1001e70e <_strtod_l+0xa4e>
1001e708:	f108 0301 	add.w	r3, r8, #1
1001e70c:	6013      	str	r3, [r2, #0]
1001e70e:	f04f 0800 	mov.w	r8, #0
1001e712:	f04f 0900 	mov.w	r9, #0
1001e716:	f7ff bbd8 	b.w	1001deca <_strtod_l+0x20a>
1001e71a:	a335      	add	r3, pc, #212	@ (adr r3, 1001e7f0 <_strtod_l+0xb30>)
1001e71c:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e720:	f002 fb28 	bl	10020d74 <__aeabi_dcmplt>
1001e724:	2800      	cmp	r0, #0
1001e726:	d1d5      	bne.n	1001e6d4 <_strtod_l+0xa14>
1001e728:	a333      	add	r3, pc, #204	@ (adr r3, 1001e7f8 <_strtod_l+0xb38>)
1001e72a:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e72e:	4630      	mov	r0, r6
1001e730:	4639      	mov	r1, r7
1001e732:	f002 fb3d 	bl	10020db0 <__aeabi_dcmpgt>
1001e736:	2800      	cmp	r0, #0
1001e738:	f43f adf3 	beq.w	1001e322 <_strtod_l+0x662>
1001e73c:	e7ca      	b.n	1001e6d4 <_strtod_l+0xa14>
1001e73e:	9b04      	ldr	r3, [sp, #16]
1001e740:	2b01      	cmp	r3, #1
1001e742:	d19f      	bne.n	1001e684 <_strtod_l+0x9c4>
1001e744:	2f00      	cmp	r7, #0
1001e746:	d19d      	bne.n	1001e684 <_strtod_l+0x9c4>
1001e748:	464f      	mov	r7, r9
1001e74a:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
1001e74c:	2322      	movs	r3, #34	@ 0x22
1001e74e:	4625      	mov	r5, r4
1001e750:	f8cb 3000 	str.w	r3, [fp]
1001e754:	f04f 0800 	mov.w	r8, #0
1001e758:	f04f 0900 	mov.w	r9, #0
1001e75c:	e721      	b.n	1001e5a2 <_strtod_l+0x8e2>
1001e75e:	2322      	movs	r3, #34	@ 0x22
1001e760:	f8cb 3000 	str.w	r3, [fp]
1001e764:	f8df 909c 	ldr.w	r9, [pc, #156]	@ 1001e804 <_strtod_l+0xb44>
1001e768:	f04f 0800 	mov.w	r8, #0
1001e76c:	e683      	b.n	1001e476 <_strtod_l+0x7b6>
1001e76e:	f101 7454 	add.w	r4, r1, #55574528	@ 0x3500000
1001e772:	9405      	str	r4, [sp, #20]
1001e774:	e5ce      	b.n	1001e314 <_strtod_l+0x654>
1001e776:	4664      	mov	r4, ip
1001e778:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001e77a:	2908      	cmp	r1, #8
1001e77c:	4403      	add	r3, r0
1001e77e:	930e      	str	r3, [sp, #56]	@ 0x38
1001e780:	f77f ab64 	ble.w	1001de4c <_strtod_l+0x18c>
1001e784:	2c10      	cmp	r4, #16
1001e786:	bfdc      	itt	le
1001e788:	eb09 0989 	addle.w	r9, r9, r9, lsl #2
1001e78c:	eb02 0949 	addle.w	r9, r2, r9, lsl #1
1001e790:	2000      	movs	r0, #0
1001e792:	f7ff bb60 	b.w	1001de56 <_strtod_l+0x196>
1001e796:	4922      	ldr	r1, [pc, #136]	@ (1001e820 <_strtod_l+0xb60>)
1001e798:	2201      	movs	r2, #1
1001e79a:	4640      	mov	r0, r8
1001e79c:	f000 fc36 	bl	1001f00c <strncmp>
1001e7a0:	2800      	cmp	r0, #0
1001e7a2:	f000 80a0 	beq.w	1001e8e6 <_strtod_l+0xc26>
1001e7a6:	f04f 0a00 	mov.w	sl, #0
1001e7aa:	46d1      	mov	r9, sl
1001e7ac:	4655      	mov	r5, sl
1001e7ae:	4650      	mov	r0, sl
1001e7b0:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
1001e7b4:	4654      	mov	r4, sl
1001e7b6:	46d4      	mov	ip, sl
1001e7b8:	f7ff bba7 	b.w	1001df0a <_strtod_l+0x24a>
1001e7bc:	f644 631f 	movw	r3, #19999	@ 0x4e1f
1001e7c0:	4299      	cmp	r1, r3
1001e7c2:	bfa8      	it	ge
1001e7c4:	4619      	movge	r1, r3
1001e7c6:	910f      	str	r1, [sp, #60]	@ 0x3c
1001e7c8:	e41e      	b.n	1001e008 <_strtod_l+0x348>
1001e7ca:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1001e7cc:	4915      	ldr	r1, [pc, #84]	@ (1001e824 <_strtod_l+0xb64>)
1001e7ce:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
1001e7d2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001e7d6:	e9d1 0100 	ldrd	r0, r1, [r1]
1001e7da:	f002 f859 	bl	10020890 <__aeabi_dmul>
1001e7de:	4680      	mov	r8, r0
1001e7e0:	4689      	mov	r9, r1
1001e7e2:	e648      	b.n	1001e476 <_strtod_l+0x7b6>
1001e7e4:	f3af 8000 	nop.w
1001e7e8:	94a03595 	.word	0x94a03595
1001e7ec:	3fcfffff 	.word	0x3fcfffff
1001e7f0:	94a03595 	.word	0x94a03595
1001e7f4:	3fdfffff 	.word	0x3fdfffff
1001e7f8:	35afe535 	.word	0x35afe535
1001e7fc:	3fe00000 	.word	0x3fe00000
1001e800:	3fe00000 	.word	0x3fe00000
1001e804:	7ff00000 	.word	0x7ff00000
1001e808:	fffffbe2 	.word	0xfffffbe2
1001e80c:	3ff00000 	.word	0x3ff00000
1001e810:	7c9fffff 	.word	0x7c9fffff
1001e814:	7fefffff 	.word	0x7fefffff
1001e818:	bff00000 	.word	0xbff00000
1001e81c:	10023ecc 	.word	0x10023ecc
1001e820:	10021748 	.word	0x10021748
1001e824:	10023de0 	.word	0x10023de0
1001e828:	49a4      	ldr	r1, [pc, #656]	@ (1001eabc <_strtod_l+0xdfc>)
1001e82a:	a819      	add	r0, sp, #100	@ 0x64
1001e82c:	f001 fb8a 	bl	1001ff44 <__match>
1001e830:	2800      	cmp	r0, #0
1001e832:	f43f ab43 	beq.w	1001debc <_strtod_l+0x1fc>
1001e836:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001e838:	49a1      	ldr	r1, [pc, #644]	@ (1001eac0 <_strtod_l+0xe00>)
1001e83a:	3b01      	subs	r3, #1
1001e83c:	a819      	add	r0, sp, #100	@ 0x64
1001e83e:	9319      	str	r3, [sp, #100]	@ 0x64
1001e840:	f001 fb80 	bl	1001ff44 <__match>
1001e844:	2800      	cmp	r0, #0
1001e846:	d18d      	bne.n	1001e764 <_strtod_l+0xaa4>
1001e848:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001e84a:	3301      	adds	r3, #1
1001e84c:	9319      	str	r3, [sp, #100]	@ 0x64
1001e84e:	e789      	b.n	1001e764 <_strtod_l+0xaa4>
1001e850:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
1001e854:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
1001e858:	e544      	b.n	1001e2e4 <_strtod_l+0x624>
1001e85a:	2000      	movs	r0, #0
1001e85c:	f7ff bae8 	b.w	1001de30 <_strtod_l+0x170>
1001e860:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001e862:	b13a      	cbz	r2, 1001e874 <_strtod_l+0xbb4>
1001e864:	2135      	movs	r1, #53	@ 0x35
1001e866:	a81c      	add	r0, sp, #112	@ 0x70
1001e868:	f7ff f8d6 	bl	1001da18 <__copybits>
1001e86c:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001e86e:	4658      	mov	r0, fp
1001e870:	f7fe fc38 	bl	1001d0e4 <_Bfree>
1001e874:	3d01      	subs	r5, #1
1001e876:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
1001e878:	2d04      	cmp	r5, #4
1001e87a:	f200 81fc 	bhi.w	1001ec76 <_strtod_l+0xfb6>
1001e87e:	e8df f005 	tbb	[pc, r5]
1001e882:	2c03      	.short	0x2c03
1001e884:	1e29      	.short	0x1e29
1001e886:	03          	.byte	0x03
1001e887:	00          	.byte	0x00
1001e888:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001e88a:	9204      	str	r2, [sp, #16]
1001e88c:	f203 4233 	addw	r2, r3, #1075	@ 0x433
1001e890:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001e892:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
1001e896:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
1001e89a:	9305      	str	r3, [sp, #20]
1001e89c:	05e1      	lsls	r1, r4, #23
1001e89e:	d502      	bpl.n	1001e8a6 <_strtod_l+0xbe6>
1001e8a0:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
1001e8a4:	9305      	str	r3, [sp, #20]
1001e8a6:	4a87      	ldr	r2, [pc, #540]	@ (1001eac4 <_strtod_l+0xe04>)
1001e8a8:	401a      	ands	r2, r3
1001e8aa:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001e8ae:	2a00      	cmp	r2, #0
1001e8b0:	f47f ade1 	bne.w	1001e476 <_strtod_l+0x7b6>
1001e8b4:	f7f9 fc6c 	bl	10018190 <__errno>
1001e8b8:	2322      	movs	r3, #34	@ 0x22
1001e8ba:	6003      	str	r3, [r0, #0]
1001e8bc:	e5db      	b.n	1001e476 <_strtod_l+0x7b6>
1001e8be:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001e8c2:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
1001e8c6:	e9cd 2304 	strd	r2, r3, [sp, #16]
1001e8ca:	05e3      	lsls	r3, r4, #23
1001e8cc:	f57f aed7 	bpl.w	1001e67e <_strtod_l+0x9be>
1001e8d0:	9b05      	ldr	r3, [sp, #20]
1001e8d2:	e7e5      	b.n	1001e8a0 <_strtod_l+0xbe0>
1001e8d4:	4b7b      	ldr	r3, [pc, #492]	@ (1001eac4 <_strtod_l+0xe04>)
1001e8d6:	9305      	str	r3, [sp, #20]
1001e8d8:	e7f7      	b.n	1001e8ca <_strtod_l+0xc0a>
1001e8da:	e9dd 121c 	ldrd	r1, r2, [sp, #112]	@ 0x70
1001e8de:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001e8e0:	e9cd 1204 	strd	r1, r2, [sp, #16]
1001e8e4:	e7da      	b.n	1001e89c <_strtod_l+0xbdc>
1001e8e6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001e8e8:	4613      	mov	r3, r2
1001e8ea:	3201      	adds	r2, #1
1001e8ec:	9219      	str	r2, [sp, #100]	@ 0x64
1001e8ee:	785f      	ldrb	r7, [r3, #1]
1001e8f0:	4605      	mov	r5, r0
1001e8f2:	4681      	mov	r9, r0
1001e8f4:	f7ff ba8f 	b.w	1001de16 <_strtod_l+0x156>
1001e8f8:	4d73      	ldr	r5, [pc, #460]	@ (1001eac8 <_strtod_l+0xe08>)
1001e8fa:	f1c4 040f 	rsb	r4, r4, #15
1001e8fe:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
1001e902:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001e906:	e9d1 0100 	ldrd	r0, r1, [r1]
1001e90a:	f001 ffc1 	bl	10020890 <__aeabi_dmul>
1001e90e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001e910:	1b1c      	subs	r4, r3, r4
1001e912:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
1001e916:	e9d5 2300 	ldrd	r2, r3, [r5]
1001e91a:	f001 ffb9 	bl	10020890 <__aeabi_dmul>
1001e91e:	4680      	mov	r8, r0
1001e920:	4689      	mov	r9, r1
1001e922:	e5a8      	b.n	1001e476 <_strtod_l+0x7b6>
1001e924:	46a2      	mov	sl, r4
1001e926:	900e      	str	r0, [sp, #56]	@ 0x38
1001e928:	f7ff ba98 	b.w	1001de5c <_strtod_l+0x19c>
1001e92c:	4c67      	ldr	r4, [pc, #412]	@ (1001eacc <_strtod_l+0xe0c>)
1001e92e:	2300      	movs	r3, #0
1001e930:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001e934:	4c66      	ldr	r4, [pc, #408]	@ (1001ead0 <_strtod_l+0xe10>)
1001e936:	2300      	movs	r3, #0
1001e938:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001e93c:	e4a8      	b.n	1001e290 <_strtod_l+0x5d0>
1001e93e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
1001e940:	4964      	ldr	r1, [pc, #400]	@ (1001ead4 <_strtod_l+0xe14>)
1001e942:	463b      	mov	r3, r7
1001e944:	46c4      	mov	ip, r8
1001e946:	464f      	mov	r7, r9
1001e948:	46ae      	mov	lr, r5
1001e94a:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001e94e:	f3c3 0213 	ubfx	r2, r3, #0, #20
1001e952:	2800      	cmp	r0, #0
1001e954:	d04c      	beq.n	1001e9f0 <_strtod_l+0xd30>
1001e956:	428a      	cmp	r2, r1
1001e958:	f000 80fc 	beq.w	1001eb54 <_strtod_l+0xe94>
1001e95c:	2d00      	cmp	r5, #0
1001e95e:	f000 80f3 	beq.w	1001eb48 <_strtod_l+0xe88>
1001e962:	421d      	tst	r5, r3
1001e964:	d03b      	beq.n	1001e9de <_strtod_l+0xd1e>
1001e966:	4640      	mov	r0, r8
1001e968:	4649      	mov	r1, r9
1001e96a:	9304      	str	r3, [sp, #16]
1001e96c:	f7fe ff46 	bl	1001d7fc <__ulp>
1001e970:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e972:	4604      	mov	r4, r0
1001e974:	460d      	mov	r5, r1
1001e976:	2b00      	cmp	r3, #0
1001e978:	f000 8128 	beq.w	1001ebcc <_strtod_l+0xf0c>
1001e97c:	9b04      	ldr	r3, [sp, #16]
1001e97e:	f3c3 530a 	ubfx	r3, r3, #20, #11
1001e982:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
1001e986:	2b00      	cmp	r3, #0
1001e988:	f340 8151 	ble.w	1001ec2e <_strtod_l+0xf6e>
1001e98c:	051c      	lsls	r4, r3, #20
1001e98e:	f104 537f 	add.w	r3, r4, #1069547520	@ 0x3fc00000
1001e992:	2200      	movs	r2, #0
1001e994:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
1001e998:	f001 ff7a 	bl	10020890 <__aeabi_dmul>
1001e99c:	4602      	mov	r2, r0
1001e99e:	460b      	mov	r3, r1
1001e9a0:	4640      	mov	r0, r8
1001e9a2:	4649      	mov	r1, r9
1001e9a4:	f001 fdbe 	bl	10020524 <__adddf3>
1001e9a8:	4680      	mov	r8, r0
1001e9aa:	4689      	mov	r9, r1
1001e9ac:	4b4a      	ldr	r3, [pc, #296]	@ (1001ead8 <_strtod_l+0xe18>)
1001e9ae:	4640      	mov	r0, r8
1001e9b0:	4649      	mov	r1, r9
1001e9b2:	2200      	movs	r2, #0
1001e9b4:	f001 ff6c 	bl	10020890 <__aeabi_dmul>
1001e9b8:	4b42      	ldr	r3, [pc, #264]	@ (1001eac4 <_strtod_l+0xe04>)
1001e9ba:	400b      	ands	r3, r1
1001e9bc:	4680      	mov	r8, r0
1001e9be:	4689      	mov	r9, r1
1001e9c0:	2b00      	cmp	r3, #0
1001e9c2:	f47f ae8a 	bne.w	1001e6da <_strtod_l+0xa1a>
1001e9c6:	2322      	movs	r3, #34	@ 0x22
1001e9c8:	f8cb 3000 	str.w	r3, [fp]
1001e9cc:	e685      	b.n	1001e6da <_strtod_l+0xa1a>
1001e9ce:	f1be 0f00 	cmp.w	lr, #0
1001e9d2:	f000 8089 	beq.w	1001eae8 <_strtod_l+0xe28>
1001e9d6:	ea1e 0f03 	tst.w	lr, r3
1001e9da:	f040 8089 	bne.w	1001eaf0 <_strtod_l+0xe30>
1001e9de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e9e0:	2b00      	cmp	r3, #0
1001e9e2:	d1e3      	bne.n	1001e9ac <_strtod_l+0xcec>
1001e9e4:	e679      	b.n	1001e6da <_strtod_l+0xa1a>
1001e9e6:	f102 7354 	add.w	r3, r2, #55574528	@ 0x3500000
1001e9ea:	9305      	str	r3, [sp, #20]
1001e9ec:	f7ff bbac 	b.w	1001e148 <_strtod_l+0x488>
1001e9f0:	2a00      	cmp	r2, #0
1001e9f2:	d175      	bne.n	1001eae0 <_strtod_l+0xe20>
1001e9f4:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
1001e9f8:	4622      	mov	r2, r4
1001e9fa:	2c00      	cmp	r4, #0
1001e9fc:	d1e7      	bne.n	1001e9ce <_strtod_l+0xd0e>
1001e9fe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001ea00:	2a00      	cmp	r2, #0
1001ea02:	f040 80be 	bne.w	1001eb82 <_strtod_l+0xec2>
1001ea06:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
1001ea0a:	0d24      	lsrs	r4, r4, #20
1001ea0c:	0524      	lsls	r4, r4, #20
1001ea0e:	f5a4 1480 	sub.w	r4, r4, #1048576	@ 0x100000
1001ea12:	ea6f 5314 	mvn.w	r3, r4, lsr #20
1001ea16:	ea6f 5303 	mvn.w	r3, r3, lsl #20
1001ea1a:	9305      	str	r3, [sp, #20]
1001ea1c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001ea20:	9304      	str	r3, [sp, #16]
1001ea22:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001ea26:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001ea28:	e5bb      	b.n	1001e5a2 <_strtod_l+0x8e2>
1001ea2a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001ea2e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001ea30:	4303      	orrs	r3, r0
1001ea32:	464f      	mov	r7, r9
1001ea34:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001ea38:	d1d1      	bne.n	1001e9de <_strtod_l+0xd1e>
1001ea3a:	f3c1 0313 	ubfx	r3, r1, #0, #20
1001ea3e:	2b00      	cmp	r3, #0
1001ea40:	d1cd      	bne.n	1001e9de <_strtod_l+0xd1e>
1001ea42:	f021 4400 	bic.w	r4, r1, #2147483648	@ 0x80000000
1001ea46:	0d24      	lsrs	r4, r4, #20
1001ea48:	0524      	lsls	r4, r4, #20
1001ea4a:	f1b4 6fd6 	cmp.w	r4, #112197632	@ 0x6b00000
1001ea4e:	4625      	mov	r5, r4
1001ea50:	d9c5      	bls.n	1001e9de <_strtod_l+0xd1e>
1001ea52:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001ea54:	6953      	ldr	r3, [r2, #20]
1001ea56:	b913      	cbnz	r3, 1001ea5e <_strtod_l+0xd9e>
1001ea58:	6913      	ldr	r3, [r2, #16]
1001ea5a:	2b01      	cmp	r3, #1
1001ea5c:	ddbf      	ble.n	1001e9de <_strtod_l+0xd1e>
1001ea5e:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ea60:	2201      	movs	r2, #1
1001ea62:	4658      	mov	r0, fp
1001ea64:	f7fe fd80 	bl	1001d568 <__lshift>
1001ea68:	4651      	mov	r1, sl
1001ea6a:	9009      	str	r0, [sp, #36]	@ 0x24
1001ea6c:	f7fe fdf4 	bl	1001d658 <__mcmp>
1001ea70:	2800      	cmp	r0, #0
1001ea72:	ddb4      	ble.n	1001e9de <_strtod_l+0xd1e>
1001ea74:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001ea76:	2b00      	cmp	r3, #0
1001ea78:	d0c9      	beq.n	1001ea0e <_strtod_l+0xd4e>
1001ea7a:	f5a5 1380 	sub.w	r3, r5, #1048576	@ 0x100000
1001ea7e:	ea6f 5313 	mvn.w	r3, r3, lsr #20
1001ea82:	ea6f 5303 	mvn.w	r3, r3, lsl #20
1001ea86:	9305      	str	r3, [sp, #20]
1001ea88:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001ea8c:	9304      	str	r3, [sp, #16]
1001ea8e:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001ea92:	e78b      	b.n	1001e9ac <_strtod_l+0xcec>
1001ea94:	4911      	ldr	r1, [pc, #68]	@ (1001eadc <_strtod_l+0xe1c>)
1001ea96:	a819      	add	r0, sp, #100	@ 0x64
1001ea98:	aa1c      	add	r2, sp, #112	@ 0x70
1001ea9a:	f001 fa6d 	bl	1001ff78 <__hexnan>
1001ea9e:	2805      	cmp	r0, #5
1001eaa0:	f47f aa56 	bne.w	1001df50 <_strtod_l+0x290>
1001eaa4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001eaa6:	f043 43ff 	orr.w	r3, r3, #2139095040	@ 0x7f800000
1001eaaa:	f443 03e0 	orr.w	r3, r3, #7340032	@ 0x700000
1001eaae:	9305      	str	r3, [sp, #20]
1001eab0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001eab2:	9304      	str	r3, [sp, #16]
1001eab4:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001eab8:	e4dd      	b.n	1001e476 <_strtod_l+0x7b6>
1001eaba:	bf00      	nop
1001eabc:	10023ea8 	.word	0x10023ea8
1001eac0:	10023eac 	.word	0x10023eac
1001eac4:	7ff00000 	.word	0x7ff00000
1001eac8:	10023de0 	.word	0x10023de0
1001eacc:	bfe00000 	.word	0xbfe00000
1001ead0:	3fe00000 	.word	0x3fe00000
1001ead4:	000fffff 	.word	0x000fffff
1001ead8:	39500000 	.word	0x39500000
1001eadc:	10023eb8 	.word	0x10023eb8
1001eae0:	2d00      	cmp	r5, #0
1001eae2:	f47f af78 	bne.w	1001e9d6 <_strtod_l+0xd16>
1001eae6:	9a04      	ldr	r2, [sp, #16]
1001eae8:	ea1c 0f02 	tst.w	ip, r2
1001eaec:	f43f af77 	beq.w	1001e9de <_strtod_l+0xd1e>
1001eaf0:	4640      	mov	r0, r8
1001eaf2:	4649      	mov	r1, r9
1001eaf4:	9304      	str	r3, [sp, #16]
1001eaf6:	f7fe fe81 	bl	1001d7fc <__ulp>
1001eafa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001eafc:	2b00      	cmp	r3, #0
1001eafe:	d053      	beq.n	1001eba8 <_strtod_l+0xee8>
1001eb00:	9b04      	ldr	r3, [sp, #16]
1001eb02:	f3c3 530a 	ubfx	r3, r3, #20, #11
1001eb06:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
1001eb0a:	2b00      	cmp	r3, #0
1001eb0c:	f340 809b 	ble.w	1001ec46 <_strtod_l+0xf86>
1001eb10:	051c      	lsls	r4, r3, #20
1001eb12:	f104 537f 	add.w	r3, r4, #1069547520	@ 0x3fc00000
1001eb16:	2200      	movs	r2, #0
1001eb18:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
1001eb1c:	f001 feb8 	bl	10020890 <__aeabi_dmul>
1001eb20:	4602      	mov	r2, r0
1001eb22:	460b      	mov	r3, r1
1001eb24:	4640      	mov	r0, r8
1001eb26:	4649      	mov	r1, r9
1001eb28:	f001 fcfa 	bl	10020520 <__aeabi_dsub>
1001eb2c:	2200      	movs	r2, #0
1001eb2e:	2300      	movs	r3, #0
1001eb30:	4680      	mov	r8, r0
1001eb32:	4689      	mov	r9, r1
1001eb34:	f002 f914 	bl	10020d60 <__aeabi_dcmpeq>
1001eb38:	2800      	cmp	r0, #0
1001eb3a:	f43f af37 	beq.w	1001e9ac <_strtod_l+0xcec>
1001eb3e:	e604      	b.n	1001e74a <_strtod_l+0xa8a>
1001eb40:	f04f 0900 	mov.w	r9, #0
1001eb44:	f7ff bae1 	b.w	1001e10a <_strtod_l+0x44a>
1001eb48:	9a04      	ldr	r2, [sp, #16]
1001eb4a:	ea1c 0f02 	tst.w	ip, r2
1001eb4e:	f43f af46 	beq.w	1001e9de <_strtod_l+0xd1e>
1001eb52:	e708      	b.n	1001e966 <_strtod_l+0xca6>
1001eb54:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001eb58:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001eb5a:	4604      	mov	r4, r0
1001eb5c:	2a00      	cmp	r2, #0
1001eb5e:	d147      	bne.n	1001ebf0 <_strtod_l+0xf30>
1001eb60:	4602      	mov	r2, r0
1001eb62:	3201      	adds	r2, #1
1001eb64:	d077      	beq.n	1001ec56 <_strtod_l+0xf96>
1001eb66:	2d00      	cmp	r5, #0
1001eb68:	d070      	beq.n	1001ec4c <_strtod_l+0xf8c>
1001eb6a:	421d      	tst	r5, r3
1001eb6c:	f43f adb5 	beq.w	1001e6da <_strtod_l+0xa1a>
1001eb70:	e6f9      	b.n	1001e966 <_strtod_l+0xca6>
1001eb72:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001eb76:	fa02 f303 	lsl.w	r3, r2, r3
1001eb7a:	9a04      	ldr	r2, [sp, #16]
1001eb7c:	401a      	ands	r2, r3
1001eb7e:	9204      	str	r2, [sp, #16]
1001eb80:	e467      	b.n	1001e452 <_strtod_l+0x792>
1001eb82:	4d3e      	ldr	r5, [pc, #248]	@ (1001ec7c <_strtod_l+0xfbc>)
1001eb84:	401d      	ands	r5, r3
1001eb86:	f1b5 6fd6 	cmp.w	r5, #112197632	@ 0x6b00000
1001eb8a:	f63f af76 	bhi.w	1001ea7a <_strtod_l+0xdba>
1001eb8e:	f1b5 7f5c 	cmp.w	r5, #57671680	@ 0x3700000
1001eb92:	f63f af0b 	bhi.w	1001e9ac <_strtod_l+0xcec>
1001eb96:	2322      	movs	r3, #34	@ 0x22
1001eb98:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001eb9a:	f8cb 3000 	str.w	r3, [fp]
1001eb9e:	f04f 0800 	mov.w	r8, #0
1001eba2:	f04f 0900 	mov.w	r9, #0
1001eba6:	e4fc      	b.n	1001e5a2 <_strtod_l+0x8e2>
1001eba8:	4602      	mov	r2, r0
1001ebaa:	460b      	mov	r3, r1
1001ebac:	4640      	mov	r0, r8
1001ebae:	4649      	mov	r1, r9
1001ebb0:	f001 fcb6 	bl	10020520 <__aeabi_dsub>
1001ebb4:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
1001ebb6:	2200      	movs	r2, #0
1001ebb8:	2300      	movs	r3, #0
1001ebba:	4680      	mov	r8, r0
1001ebbc:	4689      	mov	r9, r1
1001ebbe:	4625      	mov	r5, r4
1001ebc0:	f002 f8ce 	bl	10020d60 <__aeabi_dcmpeq>
1001ebc4:	2800      	cmp	r0, #0
1001ebc6:	f43f acec 	beq.w	1001e5a2 <_strtod_l+0x8e2>
1001ebca:	e5bf      	b.n	1001e74c <_strtod_l+0xa8c>
1001ebcc:	4640      	mov	r0, r8
1001ebce:	4649      	mov	r1, r9
1001ebd0:	462b      	mov	r3, r5
1001ebd2:	4622      	mov	r2, r4
1001ebd4:	f001 fca6 	bl	10020524 <__adddf3>
1001ebd8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001ebda:	4680      	mov	r8, r0
1001ebdc:	4689      	mov	r9, r1
1001ebde:	e4e0      	b.n	1001e5a2 <_strtod_l+0x8e2>
1001ebe0:	f1c2 024b 	rsb	r2, r2, #75	@ 0x4b
1001ebe4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001ebe8:	4093      	lsls	r3, r2
1001ebea:	400b      	ands	r3, r1
1001ebec:	9305      	str	r3, [sp, #20]
1001ebee:	e430      	b.n	1001e452 <_strtod_l+0x792>
1001ebf0:	4a22      	ldr	r2, [pc, #136]	@ (1001ec7c <_strtod_l+0xfbc>)
1001ebf2:	401a      	ands	r2, r3
1001ebf4:	f1b2 6fd4 	cmp.w	r2, #111149056	@ 0x6a00000
1001ebf8:	d909      	bls.n	1001ec0e <_strtod_l+0xf4e>
1001ebfa:	1c61      	adds	r1, r4, #1
1001ebfc:	d032      	beq.n	1001ec64 <_strtod_l+0xfa4>
1001ebfe:	f1be 0f00 	cmp.w	lr, #0
1001ec02:	d033      	beq.n	1001ec6c <_strtod_l+0xfac>
1001ec04:	ea1e 0f03 	tst.w	lr, r3
1001ec08:	f43f aed0 	beq.w	1001e9ac <_strtod_l+0xcec>
1001ec0c:	e6ab      	b.n	1001e966 <_strtod_l+0xca6>
1001ec0e:	0d10      	lsrs	r0, r2, #20
1001ec10:	f1c0 006b 	rsb	r0, r0, #107	@ 0x6b
1001ec14:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001ec18:	4081      	lsls	r1, r0
1001ec1a:	428c      	cmp	r4, r1
1001ec1c:	d1ef      	bne.n	1001ebfe <_strtod_l+0xf3e>
1001ec1e:	f502 1380 	add.w	r3, r2, #1048576	@ 0x100000
1001ec22:	9305      	str	r3, [sp, #20]
1001ec24:	2300      	movs	r3, #0
1001ec26:	9304      	str	r3, [sp, #16]
1001ec28:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001ec2c:	e6d7      	b.n	1001e9de <_strtod_l+0xd1e>
1001ec2e:	4640      	mov	r0, r8
1001ec30:	4649      	mov	r1, r9
1001ec32:	4622      	mov	r2, r4
1001ec34:	462b      	mov	r3, r5
1001ec36:	f001 fc75 	bl	10020524 <__adddf3>
1001ec3a:	4680      	mov	r8, r0
1001ec3c:	4689      	mov	r9, r1
1001ec3e:	e6b5      	b.n	1001e9ac <_strtod_l+0xcec>
1001ec40:	4621      	mov	r1, r4
1001ec42:	3401      	adds	r4, #1
1001ec44:	e598      	b.n	1001e778 <_strtod_l+0xab8>
1001ec46:	4602      	mov	r2, r0
1001ec48:	460b      	mov	r3, r1
1001ec4a:	e76b      	b.n	1001eb24 <_strtod_l+0xe64>
1001ec4c:	ea10 0f0c 	tst.w	r0, ip
1001ec50:	f43f ad43 	beq.w	1001e6da <_strtod_l+0xa1a>
1001ec54:	e687      	b.n	1001e966 <_strtod_l+0xca6>
1001ec56:	4a0a      	ldr	r2, [pc, #40]	@ (1001ec80 <_strtod_l+0xfc0>)
1001ec58:	4293      	cmp	r3, r2
1001ec5a:	f43f acc5 	beq.w	1001e5e8 <_strtod_l+0x928>
1001ec5e:	3201      	adds	r2, #1
1001ec60:	401a      	ands	r2, r3
1001ec62:	e7dc      	b.n	1001ec1e <_strtod_l+0xf5e>
1001ec64:	4906      	ldr	r1, [pc, #24]	@ (1001ec80 <_strtod_l+0xfc0>)
1001ec66:	428b      	cmp	r3, r1
1001ec68:	d1d9      	bne.n	1001ec1e <_strtod_l+0xf5e>
1001ec6a:	e4bd      	b.n	1001e5e8 <_strtod_l+0x928>
1001ec6c:	ea14 0f0c 	tst.w	r4, ip
1001ec70:	f43f ae9c 	beq.w	1001e9ac <_strtod_l+0xcec>
1001ec74:	e677      	b.n	1001e966 <_strtod_l+0xca6>
1001ec76:	2300      	movs	r3, #0
1001ec78:	e610      	b.n	1001e89c <_strtod_l+0xbdc>
1001ec7a:	bf00      	nop
1001ec7c:	7ff00000 	.word	0x7ff00000
1001ec80:	7fefffff 	.word	0x7fefffff

1001ec84 <_strtod_r>:
1001ec84:	4b01      	ldr	r3, [pc, #4]	@ (1001ec8c <_strtod_r+0x8>)
1001ec86:	f7ff b81b 	b.w	1001dcc0 <_strtod_l>
1001ec8a:	bf00      	nop
1001ec8c:	2000042c 	.word	0x2000042c

1001ec90 <_strtol_l.constprop.0>:
1001ec90:	2b24      	cmp	r3, #36	@ 0x24
1001ec92:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001ec96:	d843      	bhi.n	1001ed20 <_strtol_l.constprop.0+0x90>
1001ec98:	2b01      	cmp	r3, #1
1001ec9a:	d041      	beq.n	1001ed20 <_strtol_l.constprop.0+0x90>
1001ec9c:	4680      	mov	r8, r0
1001ec9e:	4849      	ldr	r0, [pc, #292]	@ (1001edc4 <_strtol_l.constprop.0+0x134>)
1001eca0:	461f      	mov	r7, r3
1001eca2:	468e      	mov	lr, r1
1001eca4:	4675      	mov	r5, lr
1001eca6:	f81e bb01 	ldrb.w	fp, [lr], #1
1001ecaa:	f810 400b 	ldrb.w	r4, [r0, fp]
1001ecae:	f014 0408 	ands.w	r4, r4, #8
1001ecb2:	d1f7      	bne.n	1001eca4 <_strtol_l.constprop.0+0x14>
1001ecb4:	f1bb 0f2d 	cmp.w	fp, #45	@ 0x2d
1001ecb8:	d06f      	beq.n	1001ed9a <_strtol_l.constprop.0+0x10a>
1001ecba:	f1bb 0f2b 	cmp.w	fp, #43	@ 0x2b
1001ecbe:	bf08      	it	eq
1001ecc0:	f89e b000 	ldrbeq.w	fp, [lr]
1001ecc4:	f06f 4900 	mvn.w	r9, #2147483648	@ 0x80000000
1001ecc8:	bf08      	it	eq
1001ecca:	f105 0e02 	addeq.w	lr, r5, #2
1001ecce:	bb73      	cbnz	r3, 1001ed2e <_strtol_l.constprop.0+0x9e>
1001ecd0:	f1bb 0f30 	cmp.w	fp, #48	@ 0x30
1001ecd4:	d04b      	beq.n	1001ed6e <_strtol_l.constprop.0+0xde>
1001ecd6:	270a      	movs	r7, #10
1001ecd8:	463b      	mov	r3, r7
1001ecda:	2500      	movs	r5, #0
1001ecdc:	fbb9 f6f7 	udiv	r6, r9, r7
1001ece0:	4628      	mov	r0, r5
1001ece2:	fb07 9a16 	mls	sl, r7, r6, r9
1001ece6:	e005      	b.n	1001ecf4 <_strtol_l.constprop.0+0x64>
1001ece8:	d03a      	beq.n	1001ed60 <_strtol_l.constprop.0+0xd0>
1001ecea:	fb07 c000 	mla	r0, r7, r0, ip
1001ecee:	2501      	movs	r5, #1
1001ecf0:	f81e bb01 	ldrb.w	fp, [lr], #1
1001ecf4:	f1ab 0c30 	sub.w	ip, fp, #48	@ 0x30
1001ecf8:	f1bc 0f09 	cmp.w	ip, #9
1001ecfc:	d906      	bls.n	1001ed0c <_strtol_l.constprop.0+0x7c>
1001ecfe:	f1ab 0c41 	sub.w	ip, fp, #65	@ 0x41
1001ed02:	f1bc 0f19 	cmp.w	ip, #25
1001ed06:	d819      	bhi.n	1001ed3c <_strtol_l.constprop.0+0xac>
1001ed08:	f1ab 0c37 	sub.w	ip, fp, #55	@ 0x37
1001ed0c:	4563      	cmp	r3, ip
1001ed0e:	dd1e      	ble.n	1001ed4e <_strtol_l.constprop.0+0xbe>
1001ed10:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
1001ed14:	d0ec      	beq.n	1001ecf0 <_strtol_l.constprop.0+0x60>
1001ed16:	4286      	cmp	r6, r0
1001ed18:	d2e6      	bcs.n	1001ece8 <_strtol_l.constprop.0+0x58>
1001ed1a:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001ed1e:	e7e7      	b.n	1001ecf0 <_strtol_l.constprop.0+0x60>
1001ed20:	f7f9 fa36 	bl	10018190 <__errno>
1001ed24:	2316      	movs	r3, #22
1001ed26:	6003      	str	r3, [r0, #0]
1001ed28:	2000      	movs	r0, #0
1001ed2a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001ed2e:	2b10      	cmp	r3, #16
1001ed30:	d1d3      	bne.n	1001ecda <_strtol_l.constprop.0+0x4a>
1001ed32:	f1bb 0f30 	cmp.w	fp, #48	@ 0x30
1001ed36:	d023      	beq.n	1001ed80 <_strtol_l.constprop.0+0xf0>
1001ed38:	461f      	mov	r7, r3
1001ed3a:	e7ce      	b.n	1001ecda <_strtol_l.constprop.0+0x4a>
1001ed3c:	f1ab 0c61 	sub.w	ip, fp, #97	@ 0x61
1001ed40:	f1bc 0f19 	cmp.w	ip, #25
1001ed44:	d803      	bhi.n	1001ed4e <_strtol_l.constprop.0+0xbe>
1001ed46:	f1ab 0c57 	sub.w	ip, fp, #87	@ 0x57
1001ed4a:	4563      	cmp	r3, ip
1001ed4c:	dce0      	bgt.n	1001ed10 <_strtol_l.constprop.0+0x80>
1001ed4e:	1c6b      	adds	r3, r5, #1
1001ed50:	d02b      	beq.n	1001edaa <_strtol_l.constprop.0+0x11a>
1001ed52:	b954      	cbnz	r4, 1001ed6a <_strtol_l.constprop.0+0xda>
1001ed54:	2a00      	cmp	r2, #0
1001ed56:	d0e8      	beq.n	1001ed2a <_strtol_l.constprop.0+0x9a>
1001ed58:	bb85      	cbnz	r5, 1001edbc <_strtol_l.constprop.0+0x12c>
1001ed5a:	6011      	str	r1, [r2, #0]
1001ed5c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001ed60:	45e2      	cmp	sl, ip
1001ed62:	dac2      	bge.n	1001ecea <_strtol_l.constprop.0+0x5a>
1001ed64:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001ed68:	e7c2      	b.n	1001ecf0 <_strtol_l.constprop.0+0x60>
1001ed6a:	4240      	negs	r0, r0
1001ed6c:	e7f2      	b.n	1001ed54 <_strtol_l.constprop.0+0xc4>
1001ed6e:	f89e 3000 	ldrb.w	r3, [lr]
1001ed72:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001ed76:	2b58      	cmp	r3, #88	@ 0x58
1001ed78:	d008      	beq.n	1001ed8c <_strtol_l.constprop.0+0xfc>
1001ed7a:	2708      	movs	r7, #8
1001ed7c:	463b      	mov	r3, r7
1001ed7e:	e7ac      	b.n	1001ecda <_strtol_l.constprop.0+0x4a>
1001ed80:	f89e 0000 	ldrb.w	r0, [lr]
1001ed84:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
1001ed88:	2858      	cmp	r0, #88	@ 0x58
1001ed8a:	d1d5      	bne.n	1001ed38 <_strtol_l.constprop.0+0xa8>
1001ed8c:	2710      	movs	r7, #16
1001ed8e:	f89e b001 	ldrb.w	fp, [lr, #1]
1001ed92:	463b      	mov	r3, r7
1001ed94:	f10e 0e02 	add.w	lr, lr, #2
1001ed98:	e79f      	b.n	1001ecda <_strtol_l.constprop.0+0x4a>
1001ed9a:	f89e b000 	ldrb.w	fp, [lr]
1001ed9e:	f04f 4900 	mov.w	r9, #2147483648	@ 0x80000000
1001eda2:	f105 0e02 	add.w	lr, r5, #2
1001eda6:	2401      	movs	r4, #1
1001eda8:	e791      	b.n	1001ecce <_strtol_l.constprop.0+0x3e>
1001edaa:	2322      	movs	r3, #34	@ 0x22
1001edac:	f8c8 3000 	str.w	r3, [r8]
1001edb0:	b132      	cbz	r2, 1001edc0 <_strtol_l.constprop.0+0x130>
1001edb2:	f10e 31ff 	add.w	r1, lr, #4294967295	@ 0xffffffff
1001edb6:	4648      	mov	r0, r9
1001edb8:	6011      	str	r1, [r2, #0]
1001edba:	e7cf      	b.n	1001ed5c <_strtol_l.constprop.0+0xcc>
1001edbc:	4681      	mov	r9, r0
1001edbe:	e7f8      	b.n	1001edb2 <_strtol_l.constprop.0+0x122>
1001edc0:	4648      	mov	r0, r9
1001edc2:	e7b2      	b.n	1001ed2a <_strtol_l.constprop.0+0x9a>
1001edc4:	10023b6d 	.word	0x10023b6d

1001edc8 <_strtol_r>:
1001edc8:	f7ff bf62 	b.w	1001ec90 <_strtol_l.constprop.0>

1001edcc <_strtoul_l.constprop.0>:
1001edcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001edd0:	4607      	mov	r7, r0
1001edd2:	4849      	ldr	r0, [pc, #292]	@ (1001eef8 <_strtoul_l.constprop.0+0x12c>)
1001edd4:	460e      	mov	r6, r1
1001edd6:	4635      	mov	r5, r6
1001edd8:	f816 eb01 	ldrb.w	lr, [r6], #1
1001eddc:	f810 c00e 	ldrb.w	ip, [r0, lr]
1001ede0:	f01c 0c08 	ands.w	ip, ip, #8
1001ede4:	d1f7      	bne.n	1001edd6 <_strtoul_l.constprop.0+0xa>
1001ede6:	f1be 0f2d 	cmp.w	lr, #45	@ 0x2d
1001edea:	d05a      	beq.n	1001eea2 <_strtoul_l.constprop.0+0xd6>
1001edec:	f1be 0f2b 	cmp.w	lr, #43	@ 0x2b
1001edf0:	bf03      	ittte	eq
1001edf2:	f896 e000 	ldrbeq.w	lr, [r6]
1001edf6:	4664      	moveq	r4, ip
1001edf8:	1cae      	addeq	r6, r5, #2
1001edfa:	4664      	movne	r4, ip
1001edfc:	b94b      	cbnz	r3, 1001ee12 <_strtoul_l.constprop.0+0x46>
1001edfe:	f1be 0f30 	cmp.w	lr, #48	@ 0x30
1001ee02:	d05c      	beq.n	1001eebe <_strtoul_l.constprop.0+0xf2>
1001ee04:	230a      	movs	r3, #10
1001ee06:	f8df 80f4 	ldr.w	r8, [pc, #244]	@ 1001eefc <_strtoul_l.constprop.0+0x130>
1001ee0a:	f04f 0a05 	mov.w	sl, #5
1001ee0e:	4699      	mov	r9, r3
1001ee10:	e00a      	b.n	1001ee28 <_strtoul_l.constprop.0+0x5c>
1001ee12:	2b10      	cmp	r3, #16
1001ee14:	d04a      	beq.n	1001eeac <_strtoul_l.constprop.0+0xe0>
1001ee16:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1001ee1a:	fbb8 f8f3 	udiv	r8, r8, r3
1001ee1e:	fb03 fa08 	mul.w	sl, r3, r8
1001ee22:	ea6f 0a0a 	mvn.w	sl, sl
1001ee26:	4699      	mov	r9, r3
1001ee28:	2500      	movs	r5, #0
1001ee2a:	4628      	mov	r0, r5
1001ee2c:	e005      	b.n	1001ee3a <_strtoul_l.constprop.0+0x6e>
1001ee2e:	d02c      	beq.n	1001ee8a <_strtoul_l.constprop.0+0xbe>
1001ee30:	fb09 c000 	mla	r0, r9, r0, ip
1001ee34:	2501      	movs	r5, #1
1001ee36:	f816 eb01 	ldrb.w	lr, [r6], #1
1001ee3a:	f1ae 0c30 	sub.w	ip, lr, #48	@ 0x30
1001ee3e:	f1bc 0f09 	cmp.w	ip, #9
1001ee42:	d906      	bls.n	1001ee52 <_strtoul_l.constprop.0+0x86>
1001ee44:	f1ae 0c41 	sub.w	ip, lr, #65	@ 0x41
1001ee48:	f1bc 0f19 	cmp.w	ip, #25
1001ee4c:	d80b      	bhi.n	1001ee66 <_strtoul_l.constprop.0+0x9a>
1001ee4e:	f1ae 0c37 	sub.w	ip, lr, #55	@ 0x37
1001ee52:	4563      	cmp	r3, ip
1001ee54:	dd10      	ble.n	1001ee78 <_strtoul_l.constprop.0+0xac>
1001ee56:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
1001ee5a:	d0ec      	beq.n	1001ee36 <_strtoul_l.constprop.0+0x6a>
1001ee5c:	4540      	cmp	r0, r8
1001ee5e:	d9e6      	bls.n	1001ee2e <_strtoul_l.constprop.0+0x62>
1001ee60:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001ee64:	e7e7      	b.n	1001ee36 <_strtoul_l.constprop.0+0x6a>
1001ee66:	f1ae 0c61 	sub.w	ip, lr, #97	@ 0x61
1001ee6a:	f1bc 0f19 	cmp.w	ip, #25
1001ee6e:	d803      	bhi.n	1001ee78 <_strtoul_l.constprop.0+0xac>
1001ee70:	f1ae 0c57 	sub.w	ip, lr, #87	@ 0x57
1001ee74:	4563      	cmp	r3, ip
1001ee76:	dcee      	bgt.n	1001ee56 <_strtoul_l.constprop.0+0x8a>
1001ee78:	1c6b      	adds	r3, r5, #1
1001ee7a:	d00b      	beq.n	1001ee94 <_strtoul_l.constprop.0+0xc8>
1001ee7c:	b104      	cbz	r4, 1001ee80 <_strtoul_l.constprop.0+0xb4>
1001ee7e:	4240      	negs	r0, r0
1001ee80:	b10a      	cbz	r2, 1001ee86 <_strtoul_l.constprop.0+0xba>
1001ee82:	b965      	cbnz	r5, 1001ee9e <_strtoul_l.constprop.0+0xd2>
1001ee84:	6011      	str	r1, [r2, #0]
1001ee86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001ee8a:	45d4      	cmp	ip, sl
1001ee8c:	ddd0      	ble.n	1001ee30 <_strtoul_l.constprop.0+0x64>
1001ee8e:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001ee92:	e7d0      	b.n	1001ee36 <_strtoul_l.constprop.0+0x6a>
1001ee94:	2322      	movs	r3, #34	@ 0x22
1001ee96:	603b      	str	r3, [r7, #0]
1001ee98:	4628      	mov	r0, r5
1001ee9a:	2a00      	cmp	r2, #0
1001ee9c:	d0f3      	beq.n	1001ee86 <_strtoul_l.constprop.0+0xba>
1001ee9e:	1e71      	subs	r1, r6, #1
1001eea0:	e7f0      	b.n	1001ee84 <_strtoul_l.constprop.0+0xb8>
1001eea2:	f896 e000 	ldrb.w	lr, [r6]
1001eea6:	2401      	movs	r4, #1
1001eea8:	1cae      	adds	r6, r5, #2
1001eeaa:	e7a7      	b.n	1001edfc <_strtoul_l.constprop.0+0x30>
1001eeac:	f1be 0f30 	cmp.w	lr, #48	@ 0x30
1001eeb0:	d011      	beq.n	1001eed6 <_strtoul_l.constprop.0+0x10a>
1001eeb2:	f04f 0a0f 	mov.w	sl, #15
1001eeb6:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001eeba:	4699      	mov	r9, r3
1001eebc:	e7b4      	b.n	1001ee28 <_strtoul_l.constprop.0+0x5c>
1001eebe:	7833      	ldrb	r3, [r6, #0]
1001eec0:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001eec4:	2b58      	cmp	r3, #88	@ 0x58
1001eec6:	d00b      	beq.n	1001eee0 <_strtoul_l.constprop.0+0x114>
1001eec8:	2308      	movs	r3, #8
1001eeca:	f04f 0a07 	mov.w	sl, #7
1001eece:	f06f 4860 	mvn.w	r8, #3758096384	@ 0xe0000000
1001eed2:	4699      	mov	r9, r3
1001eed4:	e7a8      	b.n	1001ee28 <_strtoul_l.constprop.0+0x5c>
1001eed6:	7830      	ldrb	r0, [r6, #0]
1001eed8:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
1001eedc:	2858      	cmp	r0, #88	@ 0x58
1001eede:	d1e8      	bne.n	1001eeb2 <_strtoul_l.constprop.0+0xe6>
1001eee0:	f04f 0910 	mov.w	r9, #16
1001eee4:	f896 e001 	ldrb.w	lr, [r6, #1]
1001eee8:	f04f 0a0f 	mov.w	sl, #15
1001eeec:	3602      	adds	r6, #2
1001eeee:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001eef2:	464b      	mov	r3, r9
1001eef4:	e798      	b.n	1001ee28 <_strtoul_l.constprop.0+0x5c>
1001eef6:	bf00      	nop
1001eef8:	10023b6d 	.word	0x10023b6d
1001eefc:	19999999 	.word	0x19999999

1001ef00 <_strtoul_r>:
1001ef00:	f7ff bf64 	b.w	1001edcc <_strtoul_l.constprop.0>

1001ef04 <sprintf>:
1001ef04:	b40e      	push	{r1, r2, r3}
1001ef06:	b510      	push	{r4, lr}
1001ef08:	b09d      	sub	sp, #116	@ 0x74
1001ef0a:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
1001ef0e:	ab1f      	add	r3, sp, #124	@ 0x7c
1001ef10:	9104      	str	r1, [sp, #16]
1001ef12:	9107      	str	r1, [sp, #28]
1001ef14:	4909      	ldr	r1, [pc, #36]	@ (1001ef3c <sprintf+0x38>)
1001ef16:	f853 2b04 	ldr.w	r2, [r3], #4
1001ef1a:	9002      	str	r0, [sp, #8]
1001ef1c:	9006      	str	r0, [sp, #24]
1001ef1e:	4c08      	ldr	r4, [pc, #32]	@ (1001ef40 <sprintf+0x3c>)
1001ef20:	6808      	ldr	r0, [r1, #0]
1001ef22:	9301      	str	r3, [sp, #4]
1001ef24:	a902      	add	r1, sp, #8
1001ef26:	9405      	str	r4, [sp, #20]
1001ef28:	f7fa fdfe 	bl	10019b28 <_svfprintf_r>
1001ef2c:	9b02      	ldr	r3, [sp, #8]
1001ef2e:	2200      	movs	r2, #0
1001ef30:	701a      	strb	r2, [r3, #0]
1001ef32:	b01d      	add	sp, #116	@ 0x74
1001ef34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001ef38:	b003      	add	sp, #12
1001ef3a:	4770      	bx	lr
1001ef3c:	20000598 	.word	0x20000598
1001ef40:	ffff0208 	.word	0xffff0208

1001ef44 <__ascii_wctomb>:
1001ef44:	b149      	cbz	r1, 1001ef5a <__ascii_wctomb+0x16>
1001ef46:	2aff      	cmp	r2, #255	@ 0xff
1001ef48:	d802      	bhi.n	1001ef50 <__ascii_wctomb+0xc>
1001ef4a:	700a      	strb	r2, [r1, #0]
1001ef4c:	2001      	movs	r0, #1
1001ef4e:	4770      	bx	lr
1001ef50:	238a      	movs	r3, #138	@ 0x8a
1001ef52:	6003      	str	r3, [r0, #0]
1001ef54:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001ef58:	4770      	bx	lr
1001ef5a:	4608      	mov	r0, r1
1001ef5c:	4770      	bx	lr
1001ef5e:	bf00      	nop

1001ef60 <__swbuf_r>:
1001ef60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001ef62:	460d      	mov	r5, r1
1001ef64:	4614      	mov	r4, r2
1001ef66:	4606      	mov	r6, r0
1001ef68:	b110      	cbz	r0, 1001ef70 <__swbuf_r+0x10>
1001ef6a:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001ef6c:	2b00      	cmp	r3, #0
1001ef6e:	d04a      	beq.n	1001f006 <__swbuf_r+0xa6>
1001ef70:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001ef74:	69a3      	ldr	r3, [r4, #24]
1001ef76:	60a3      	str	r3, [r4, #8]
1001ef78:	0710      	lsls	r0, r2, #28
1001ef7a:	d51b      	bpl.n	1001efb4 <__swbuf_r+0x54>
1001ef7c:	6923      	ldr	r3, [r4, #16]
1001ef7e:	b1cb      	cbz	r3, 1001efb4 <__swbuf_r+0x54>
1001ef80:	b2ed      	uxtb	r5, r5
1001ef82:	0491      	lsls	r1, r2, #18
1001ef84:	462f      	mov	r7, r5
1001ef86:	d521      	bpl.n	1001efcc <__swbuf_r+0x6c>
1001ef88:	6822      	ldr	r2, [r4, #0]
1001ef8a:	6961      	ldr	r1, [r4, #20]
1001ef8c:	1ad3      	subs	r3, r2, r3
1001ef8e:	4299      	cmp	r1, r3
1001ef90:	dd28      	ble.n	1001efe4 <__swbuf_r+0x84>
1001ef92:	3301      	adds	r3, #1
1001ef94:	68a1      	ldr	r1, [r4, #8]
1001ef96:	3901      	subs	r1, #1
1001ef98:	60a1      	str	r1, [r4, #8]
1001ef9a:	1c51      	adds	r1, r2, #1
1001ef9c:	6021      	str	r1, [r4, #0]
1001ef9e:	7015      	strb	r5, [r2, #0]
1001efa0:	6962      	ldr	r2, [r4, #20]
1001efa2:	429a      	cmp	r2, r3
1001efa4:	d026      	beq.n	1001eff4 <__swbuf_r+0x94>
1001efa6:	89a3      	ldrh	r3, [r4, #12]
1001efa8:	07db      	lsls	r3, r3, #31
1001efaa:	d501      	bpl.n	1001efb0 <__swbuf_r+0x50>
1001efac:	2d0a      	cmp	r5, #10
1001efae:	d021      	beq.n	1001eff4 <__swbuf_r+0x94>
1001efb0:	4638      	mov	r0, r7
1001efb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001efb4:	4621      	mov	r1, r4
1001efb6:	4630      	mov	r0, r6
1001efb8:	f7f8 fe3e 	bl	10017c38 <__swsetup_r>
1001efbc:	bb00      	cbnz	r0, 1001f000 <__swbuf_r+0xa0>
1001efbe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001efc2:	6923      	ldr	r3, [r4, #16]
1001efc4:	b2ed      	uxtb	r5, r5
1001efc6:	0491      	lsls	r1, r2, #18
1001efc8:	462f      	mov	r7, r5
1001efca:	d4dd      	bmi.n	1001ef88 <__swbuf_r+0x28>
1001efcc:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001efd0:	81a2      	strh	r2, [r4, #12]
1001efd2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001efd4:	6961      	ldr	r1, [r4, #20]
1001efd6:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001efda:	6662      	str	r2, [r4, #100]	@ 0x64
1001efdc:	6822      	ldr	r2, [r4, #0]
1001efde:	1ad3      	subs	r3, r2, r3
1001efe0:	4299      	cmp	r1, r3
1001efe2:	dcd6      	bgt.n	1001ef92 <__swbuf_r+0x32>
1001efe4:	4621      	mov	r1, r4
1001efe6:	4630      	mov	r0, r6
1001efe8:	f7f8 fae0 	bl	100175ac <_fflush_r>
1001efec:	b940      	cbnz	r0, 1001f000 <__swbuf_r+0xa0>
1001efee:	6822      	ldr	r2, [r4, #0]
1001eff0:	2301      	movs	r3, #1
1001eff2:	e7cf      	b.n	1001ef94 <__swbuf_r+0x34>
1001eff4:	4621      	mov	r1, r4
1001eff6:	4630      	mov	r0, r6
1001eff8:	f7f8 fad8 	bl	100175ac <_fflush_r>
1001effc:	2800      	cmp	r0, #0
1001effe:	d0d7      	beq.n	1001efb0 <__swbuf_r+0x50>
1001f000:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001f004:	e7d4      	b.n	1001efb0 <__swbuf_r+0x50>
1001f006:	f7f8 fc4d 	bl	100178a4 <__sinit>
1001f00a:	e7b1      	b.n	1001ef70 <__swbuf_r+0x10>

1001f00c <strncmp>:
1001f00c:	b3b2      	cbz	r2, 1001f07c <strncmp+0x70>
1001f00e:	ea40 0301 	orr.w	r3, r0, r1
1001f012:	079b      	lsls	r3, r3, #30
1001f014:	b530      	push	{r4, r5, lr}
1001f016:	4684      	mov	ip, r0
1001f018:	d118      	bne.n	1001f04c <strncmp+0x40>
1001f01a:	2a03      	cmp	r2, #3
1001f01c:	d916      	bls.n	1001f04c <strncmp+0x40>
1001f01e:	4604      	mov	r4, r0
1001f020:	460b      	mov	r3, r1
1001f022:	e006      	b.n	1001f032 <strncmp+0x26>
1001f024:	3a04      	subs	r2, #4
1001f026:	d02b      	beq.n	1001f080 <strncmp+0x74>
1001f028:	f01e 3f80 	tst.w	lr, #2155905152	@ 0x80808080
1001f02c:	d128      	bne.n	1001f080 <strncmp+0x74>
1001f02e:	2a03      	cmp	r2, #3
1001f030:	d92a      	bls.n	1001f088 <strncmp+0x7c>
1001f032:	6820      	ldr	r0, [r4, #0]
1001f034:	4619      	mov	r1, r3
1001f036:	f853 5b04 	ldr.w	r5, [r3], #4
1001f03a:	f1a0 3e01 	sub.w	lr, r0, #16843009	@ 0x1010101
1001f03e:	42a8      	cmp	r0, r5
1001f040:	46a4      	mov	ip, r4
1001f042:	ea2e 0e00 	bic.w	lr, lr, r0
1001f046:	f104 0404 	add.w	r4, r4, #4
1001f04a:	d0eb      	beq.n	1001f024 <strncmp+0x18>
1001f04c:	f89c 0000 	ldrb.w	r0, [ip]
1001f050:	780c      	ldrb	r4, [r1, #0]
1001f052:	4284      	cmp	r4, r0
1001f054:	d116      	bne.n	1001f084 <strncmp+0x78>
1001f056:	2a01      	cmp	r2, #1
1001f058:	d012      	beq.n	1001f080 <strncmp+0x74>
1001f05a:	46e6      	mov	lr, ip
1001f05c:	b168      	cbz	r0, 1001f07a <strncmp+0x6e>
1001f05e:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
1001f062:	f811 4f01 	ldrb.w	r4, [r1, #1]!
1001f066:	eba2 030e 	sub.w	r3, r2, lr
1001f06a:	42a0      	cmp	r0, r4
1001f06c:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
1001f070:	d108      	bne.n	1001f084 <strncmp+0x78>
1001f072:	eb1c 0303 	adds.w	r3, ip, r3
1001f076:	d1f1      	bne.n	1001f05c <strncmp+0x50>
1001f078:	4618      	mov	r0, r3
1001f07a:	bd30      	pop	{r4, r5, pc}
1001f07c:	4610      	mov	r0, r2
1001f07e:	4770      	bx	lr
1001f080:	2000      	movs	r0, #0
1001f082:	bd30      	pop	{r4, r5, pc}
1001f084:	1b00      	subs	r0, r0, r4
1001f086:	bd30      	pop	{r4, r5, pc}
1001f088:	46a4      	mov	ip, r4
1001f08a:	4619      	mov	r1, r3
1001f08c:	e7de      	b.n	1001f04c <strncmp+0x40>
1001f08e:	bf00      	nop

1001f090 <stpncpy>:
1001f090:	ea41 0300 	orr.w	r3, r1, r0
1001f094:	079b      	lsls	r3, r3, #30
1001f096:	b410      	push	{r4}
1001f098:	d101      	bne.n	1001f09e <stpncpy+0xe>
1001f09a:	2a03      	cmp	r2, #3
1001f09c:	d81a      	bhi.n	1001f0d4 <stpncpy+0x44>
1001f09e:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
1001f0a2:	e007      	b.n	1001f0b4 <stpncpy+0x24>
1001f0a4:	f81c 1f01 	ldrb.w	r1, [ip, #1]!
1001f0a8:	f803 1b01 	strb.w	r1, [r3], #1
1001f0ac:	1e54      	subs	r4, r2, #1
1001f0ae:	b131      	cbz	r1, 1001f0be <stpncpy+0x2e>
1001f0b0:	4622      	mov	r2, r4
1001f0b2:	4618      	mov	r0, r3
1001f0b4:	4603      	mov	r3, r0
1001f0b6:	2a00      	cmp	r2, #0
1001f0b8:	d1f4      	bne.n	1001f0a4 <stpncpy+0x14>
1001f0ba:	bc10      	pop	{r4}
1001f0bc:	4770      	bx	lr
1001f0be:	4402      	add	r2, r0
1001f0c0:	b1f4      	cbz	r4, 1001f100 <stpncpy+0x70>
1001f0c2:	f803 1b01 	strb.w	r1, [r3], #1
1001f0c6:	4293      	cmp	r3, r2
1001f0c8:	d1fb      	bne.n	1001f0c2 <stpncpy+0x32>
1001f0ca:	2800      	cmp	r0, #0
1001f0cc:	bf08      	it	eq
1001f0ce:	4610      	moveq	r0, r2
1001f0d0:	bc10      	pop	{r4}
1001f0d2:	4770      	bx	lr
1001f0d4:	468c      	mov	ip, r1
1001f0d6:	e004      	b.n	1001f0e2 <stpncpy+0x52>
1001f0d8:	3a04      	subs	r2, #4
1001f0da:	2a03      	cmp	r2, #3
1001f0dc:	f840 4b04 	str.w	r4, [r0], #4
1001f0e0:	d90c      	bls.n	1001f0fc <stpncpy+0x6c>
1001f0e2:	f8dc 4000 	ldr.w	r4, [ip]
1001f0e6:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
1001f0ea:	ea23 0304 	bic.w	r3, r3, r4
1001f0ee:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
1001f0f2:	4661      	mov	r1, ip
1001f0f4:	f10c 0c04 	add.w	ip, ip, #4
1001f0f8:	d0ee      	beq.n	1001f0d8 <stpncpy+0x48>
1001f0fa:	e7d0      	b.n	1001f09e <stpncpy+0xe>
1001f0fc:	4661      	mov	r1, ip
1001f0fe:	e7ce      	b.n	1001f09e <stpncpy+0xe>
1001f100:	461a      	mov	r2, r3
1001f102:	e7e2      	b.n	1001f0ca <stpncpy+0x3a>

1001f104 <_isatty_r>:
1001f104:	b538      	push	{r3, r4, r5, lr}
1001f106:	4d07      	ldr	r5, [pc, #28]	@ (1001f124 <_isatty_r+0x20>)
1001f108:	2200      	movs	r2, #0
1001f10a:	4604      	mov	r4, r0
1001f10c:	4608      	mov	r0, r1
1001f10e:	602a      	str	r2, [r5, #0]
1001f110:	f7f2 fd54 	bl	10011bbc <_isatty>
1001f114:	1c43      	adds	r3, r0, #1
1001f116:	d000      	beq.n	1001f11a <_isatty_r+0x16>
1001f118:	bd38      	pop	{r3, r4, r5, pc}
1001f11a:	682b      	ldr	r3, [r5, #0]
1001f11c:	2b00      	cmp	r3, #0
1001f11e:	d0fb      	beq.n	1001f118 <_isatty_r+0x14>
1001f120:	6023      	str	r3, [r4, #0]
1001f122:	bd38      	pop	{r3, r4, r5, pc}
1001f124:	200015c4 	.word	0x200015c4

1001f128 <_strtoll_l.constprop.0>:
1001f128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001f12c:	b085      	sub	sp, #20
1001f12e:	4692      	mov	sl, r2
1001f130:	4a5b      	ldr	r2, [pc, #364]	@ (1001f2a0 <_strtoll_l.constprop.0+0x178>)
1001f132:	9003      	str	r0, [sp, #12]
1001f134:	4689      	mov	r9, r1
1001f136:	461e      	mov	r6, r3
1001f138:	460d      	mov	r5, r1
1001f13a:	4629      	mov	r1, r5
1001f13c:	f815 4b01 	ldrb.w	r4, [r5], #1
1001f140:	5d13      	ldrb	r3, [r2, r4]
1001f142:	f013 0308 	ands.w	r3, r3, #8
1001f146:	d1f8      	bne.n	1001f13a <_strtoll_l.constprop.0+0x12>
1001f148:	2c2d      	cmp	r4, #45	@ 0x2d
1001f14a:	d07d      	beq.n	1001f248 <_strtoll_l.constprop.0+0x120>
1001f14c:	2c2b      	cmp	r4, #43	@ 0x2b
1001f14e:	d041      	beq.n	1001f1d4 <_strtoll_l.constprop.0+0xac>
1001f150:	9302      	str	r3, [sp, #8]
1001f152:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001f156:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
1001f15a:	e9cd 2300 	strd	r2, r3, [sp]
1001f15e:	2e00      	cmp	r6, #0
1001f160:	d143      	bne.n	1001f1ea <_strtoll_l.constprop.0+0xc2>
1001f162:	2c30      	cmp	r4, #48	@ 0x30
1001f164:	d079      	beq.n	1001f25a <_strtoll_l.constprop.0+0x132>
1001f166:	270a      	movs	r7, #10
1001f168:	46b0      	mov	r8, r6
1001f16a:	463e      	mov	r6, r7
1001f16c:	e9dd 0100 	ldrd	r0, r1, [sp]
1001f170:	463a      	mov	r2, r7
1001f172:	4643      	mov	r3, r8
1001f174:	f001 fed4 	bl	10020f20 <__aeabi_uldivmod>
1001f178:	2300      	movs	r3, #0
1001f17a:	468e      	mov	lr, r1
1001f17c:	4683      	mov	fp, r0
1001f17e:	4619      	mov	r1, r3
1001f180:	4618      	mov	r0, r3
1001f182:	46a4      	mov	ip, r4
1001f184:	e010      	b.n	1001f1a8 <_strtoll_l.constprop.0+0x80>
1001f186:	458e      	cmp	lr, r1
1001f188:	bf08      	it	eq
1001f18a:	4583      	cmpeq	fp, r0
1001f18c:	d04c      	beq.n	1001f228 <_strtoll_l.constprop.0+0x100>
1001f18e:	fb00 f308 	mul.w	r3, r0, r8
1001f192:	fb07 3301 	mla	r3, r7, r1, r3
1001f196:	fba0 0107 	umull	r0, r1, r0, r7
1001f19a:	440b      	add	r3, r1
1001f19c:	1820      	adds	r0, r4, r0
1001f19e:	eb43 71e4 	adc.w	r1, r3, r4, asr #31
1001f1a2:	2301      	movs	r3, #1
1001f1a4:	f815 cb01 	ldrb.w	ip, [r5], #1
1001f1a8:	f1ac 0430 	sub.w	r4, ip, #48	@ 0x30
1001f1ac:	2c09      	cmp	r4, #9
1001f1ae:	d905      	bls.n	1001f1bc <_strtoll_l.constprop.0+0x94>
1001f1b0:	f1ac 0441 	sub.w	r4, ip, #65	@ 0x41
1001f1b4:	2c19      	cmp	r4, #25
1001f1b6:	d81e      	bhi.n	1001f1f6 <_strtoll_l.constprop.0+0xce>
1001f1b8:	f1ac 0437 	sub.w	r4, ip, #55	@ 0x37
1001f1bc:	42a6      	cmp	r6, r4
1001f1be:	dd22      	ble.n	1001f206 <_strtoll_l.constprop.0+0xde>
1001f1c0:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
1001f1c4:	d0ee      	beq.n	1001f1a4 <_strtoll_l.constprop.0+0x7c>
1001f1c6:	4583      	cmp	fp, r0
1001f1c8:	eb7e 0301 	sbcs.w	r3, lr, r1
1001f1cc:	d2db      	bcs.n	1001f186 <_strtoll_l.constprop.0+0x5e>
1001f1ce:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001f1d2:	e7e7      	b.n	1001f1a4 <_strtoll_l.constprop.0+0x7c>
1001f1d4:	782c      	ldrb	r4, [r5, #0]
1001f1d6:	9302      	str	r3, [sp, #8]
1001f1d8:	1c8d      	adds	r5, r1, #2
1001f1da:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
1001f1de:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001f1e2:	e9cd 1300 	strd	r1, r3, [sp]
1001f1e6:	2e00      	cmp	r6, #0
1001f1e8:	d0bb      	beq.n	1001f162 <_strtoll_l.constprop.0+0x3a>
1001f1ea:	2e10      	cmp	r6, #16
1001f1ec:	d03e      	beq.n	1001f26c <_strtoll_l.constprop.0+0x144>
1001f1ee:	4637      	mov	r7, r6
1001f1f0:	ea4f 78e6 	mov.w	r8, r6, asr #31
1001f1f4:	e7ba      	b.n	1001f16c <_strtoll_l.constprop.0+0x44>
1001f1f6:	f1ac 0461 	sub.w	r4, ip, #97	@ 0x61
1001f1fa:	2c19      	cmp	r4, #25
1001f1fc:	d803      	bhi.n	1001f206 <_strtoll_l.constprop.0+0xde>
1001f1fe:	f1ac 0457 	sub.w	r4, ip, #87	@ 0x57
1001f202:	42a6      	cmp	r6, r4
1001f204:	dcdc      	bgt.n	1001f1c0 <_strtoll_l.constprop.0+0x98>
1001f206:	1c5a      	adds	r2, r3, #1
1001f208:	d013      	beq.n	1001f232 <_strtoll_l.constprop.0+0x10a>
1001f20a:	9a02      	ldr	r2, [sp, #8]
1001f20c:	b112      	cbz	r2, 1001f214 <_strtoll_l.constprop.0+0xec>
1001f20e:	4240      	negs	r0, r0
1001f210:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001f214:	f1ba 0f00 	cmp.w	sl, #0
1001f218:	d003      	beq.n	1001f222 <_strtoll_l.constprop.0+0xfa>
1001f21a:	2b00      	cmp	r3, #0
1001f21c:	d13d      	bne.n	1001f29a <_strtoll_l.constprop.0+0x172>
1001f21e:	f8ca 9000 	str.w	r9, [sl]
1001f222:	b005      	add	sp, #20
1001f224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f228:	42a2      	cmp	r2, r4
1001f22a:	dab0      	bge.n	1001f18e <_strtoll_l.constprop.0+0x66>
1001f22c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001f230:	e7b8      	b.n	1001f1a4 <_strtoll_l.constprop.0+0x7c>
1001f232:	9a03      	ldr	r2, [sp, #12]
1001f234:	2322      	movs	r3, #34	@ 0x22
1001f236:	6013      	str	r3, [r2, #0]
1001f238:	f1ba 0f00 	cmp.w	sl, #0
1001f23c:	d028      	beq.n	1001f290 <_strtoll_l.constprop.0+0x168>
1001f23e:	e9dd 0100 	ldrd	r0, r1, [sp]
1001f242:	f105 39ff 	add.w	r9, r5, #4294967295	@ 0xffffffff
1001f246:	e7ea      	b.n	1001f21e <_strtoll_l.constprop.0+0xf6>
1001f248:	9300      	str	r3, [sp, #0]
1001f24a:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
1001f24e:	2301      	movs	r3, #1
1001f250:	782c      	ldrb	r4, [r5, #0]
1001f252:	e9cd 0301 	strd	r0, r3, [sp, #4]
1001f256:	1c8d      	adds	r5, r1, #2
1001f258:	e781      	b.n	1001f15e <_strtoll_l.constprop.0+0x36>
1001f25a:	782b      	ldrb	r3, [r5, #0]
1001f25c:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001f260:	2b58      	cmp	r3, #88	@ 0x58
1001f262:	d00e      	beq.n	1001f282 <_strtoll_l.constprop.0+0x15a>
1001f264:	2708      	movs	r7, #8
1001f266:	46b0      	mov	r8, r6
1001f268:	463e      	mov	r6, r7
1001f26a:	e77f      	b.n	1001f16c <_strtoll_l.constprop.0+0x44>
1001f26c:	2c30      	cmp	r4, #48	@ 0x30
1001f26e:	d003      	beq.n	1001f278 <_strtoll_l.constprop.0+0x150>
1001f270:	4637      	mov	r7, r6
1001f272:	f04f 0800 	mov.w	r8, #0
1001f276:	e779      	b.n	1001f16c <_strtoll_l.constprop.0+0x44>
1001f278:	782b      	ldrb	r3, [r5, #0]
1001f27a:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001f27e:	2b58      	cmp	r3, #88	@ 0x58
1001f280:	d1f6      	bne.n	1001f270 <_strtoll_l.constprop.0+0x148>
1001f282:	2710      	movs	r7, #16
1001f284:	786c      	ldrb	r4, [r5, #1]
1001f286:	f04f 0800 	mov.w	r8, #0
1001f28a:	3502      	adds	r5, #2
1001f28c:	463e      	mov	r6, r7
1001f28e:	e76d      	b.n	1001f16c <_strtoll_l.constprop.0+0x44>
1001f290:	e9dd 0100 	ldrd	r0, r1, [sp]
1001f294:	b005      	add	sp, #20
1001f296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f29a:	e9cd 0100 	strd	r0, r1, [sp]
1001f29e:	e7ce      	b.n	1001f23e <_strtoll_l.constprop.0+0x116>
1001f2a0:	10023b6d 	.word	0x10023b6d

1001f2a4 <_strtoll_r>:
1001f2a4:	f7ff bf40 	b.w	1001f128 <_strtoll_l.constprop.0>

1001f2a8 <__libc_fini_array>:
1001f2a8:	b538      	push	{r3, r4, r5, lr}
1001f2aa:	4d07      	ldr	r5, [pc, #28]	@ (1001f2c8 <__libc_fini_array+0x20>)
1001f2ac:	4c07      	ldr	r4, [pc, #28]	@ (1001f2cc <__libc_fini_array+0x24>)
1001f2ae:	1b2c      	subs	r4, r5, r4
1001f2b0:	10a4      	asrs	r4, r4, #2
1001f2b2:	d005      	beq.n	1001f2c0 <__libc_fini_array+0x18>
1001f2b4:	3c01      	subs	r4, #1
1001f2b6:	f855 3d04 	ldr.w	r3, [r5, #-4]!
1001f2ba:	4798      	blx	r3
1001f2bc:	2c00      	cmp	r4, #0
1001f2be:	d1f9      	bne.n	1001f2b4 <__libc_fini_array+0xc>
1001f2c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001f2c4:	f00b bc5c 	b.w	1002ab80 <_fini>
1001f2c8:	20000bcc 	.word	0x20000bcc
1001f2cc:	20000bc8 	.word	0x20000bc8

1001f2d0 <_strtoull_l.constprop.0>:
1001f2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001f2d4:	b085      	sub	sp, #20
1001f2d6:	468b      	mov	fp, r1
1001f2d8:	9201      	str	r2, [sp, #4]
1001f2da:	4a60      	ldr	r2, [pc, #384]	@ (1001f45c <_strtoull_l.constprop.0+0x18c>)
1001f2dc:	9003      	str	r0, [sp, #12]
1001f2de:	461e      	mov	r6, r3
1001f2e0:	460d      	mov	r5, r1
1001f2e2:	4629      	mov	r1, r5
1001f2e4:	f815 4b01 	ldrb.w	r4, [r5], #1
1001f2e8:	5d13      	ldrb	r3, [r2, r4]
1001f2ea:	f013 0308 	ands.w	r3, r3, #8
1001f2ee:	d1f8      	bne.n	1001f2e2 <_strtoull_l.constprop.0+0x12>
1001f2f0:	2c2d      	cmp	r4, #45	@ 0x2d
1001f2f2:	d07e      	beq.n	1001f3f2 <_strtoull_l.constprop.0+0x122>
1001f2f4:	2c2b      	cmp	r4, #43	@ 0x2b
1001f2f6:	bf03      	ittte	eq
1001f2f8:	782c      	ldrbeq	r4, [r5, #0]
1001f2fa:	9302      	streq	r3, [sp, #8]
1001f2fc:	1c8d      	addeq	r5, r1, #2
1001f2fe:	9302      	strne	r3, [sp, #8]
1001f300:	b96e      	cbnz	r6, 1001f31e <_strtoull_l.constprop.0+0x4e>
1001f302:	2c30      	cmp	r4, #48	@ 0x30
1001f304:	f000 8086 	beq.w	1001f414 <_strtoull_l.constprop.0+0x144>
1001f308:	f04f 090a 	mov.w	r9, #10
1001f30c:	46b2      	mov	sl, r6
1001f30e:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 1001f460 <_strtoull_l.constprop.0+0x190>
1001f312:	f04f 0c05 	mov.w	ip, #5
1001f316:	f04f 3799 	mov.w	r7, #2576980377	@ 0x99999999
1001f31a:	464e      	mov	r6, r9
1001f31c:	e017      	b.n	1001f34e <_strtoull_l.constprop.0+0x7e>
1001f31e:	2e10      	cmp	r6, #16
1001f320:	d06c      	beq.n	1001f3fc <_strtoull_l.constprop.0+0x12c>
1001f322:	ea4f 7ae6 	mov.w	sl, r6, asr #31
1001f326:	4632      	mov	r2, r6
1001f328:	4653      	mov	r3, sl
1001f32a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f32e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001f332:	f001 fdf5 	bl	10020f20 <__aeabi_uldivmod>
1001f336:	4632      	mov	r2, r6
1001f338:	4607      	mov	r7, r0
1001f33a:	4688      	mov	r8, r1
1001f33c:	4653      	mov	r3, sl
1001f33e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f342:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001f346:	f001 fdeb 	bl	10020f20 <__aeabi_uldivmod>
1001f34a:	46b1      	mov	r9, r6
1001f34c:	4694      	mov	ip, r2
1001f34e:	2200      	movs	r2, #0
1001f350:	4610      	mov	r0, r2
1001f352:	4611      	mov	r1, r2
1001f354:	e010      	b.n	1001f378 <_strtoull_l.constprop.0+0xa8>
1001f356:	4541      	cmp	r1, r8
1001f358:	bf08      	it	eq
1001f35a:	42b8      	cmpeq	r0, r7
1001f35c:	d039      	beq.n	1001f3d2 <_strtoull_l.constprop.0+0x102>
1001f35e:	fb00 f20a 	mul.w	r2, r0, sl
1001f362:	fb09 2101 	mla	r1, r9, r1, r2
1001f366:	fba0 0209 	umull	r0, r2, r0, r9
1001f36a:	4411      	add	r1, r2
1001f36c:	1818      	adds	r0, r3, r0
1001f36e:	eb41 71e3 	adc.w	r1, r1, r3, asr #31
1001f372:	2201      	movs	r2, #1
1001f374:	f815 4b01 	ldrb.w	r4, [r5], #1
1001f378:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
1001f37c:	2b09      	cmp	r3, #9
1001f37e:	d905      	bls.n	1001f38c <_strtoull_l.constprop.0+0xbc>
1001f380:	f1a4 0341 	sub.w	r3, r4, #65	@ 0x41
1001f384:	2b19      	cmp	r3, #25
1001f386:	d80c      	bhi.n	1001f3a2 <_strtoull_l.constprop.0+0xd2>
1001f388:	f1a4 0337 	sub.w	r3, r4, #55	@ 0x37
1001f38c:	429e      	cmp	r6, r3
1001f38e:	dd10      	ble.n	1001f3b2 <_strtoull_l.constprop.0+0xe2>
1001f390:	1c54      	adds	r4, r2, #1
1001f392:	d0ef      	beq.n	1001f374 <_strtoull_l.constprop.0+0xa4>
1001f394:	4287      	cmp	r7, r0
1001f396:	eb78 0201 	sbcs.w	r2, r8, r1
1001f39a:	d2dc      	bcs.n	1001f356 <_strtoull_l.constprop.0+0x86>
1001f39c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001f3a0:	e7e8      	b.n	1001f374 <_strtoull_l.constprop.0+0xa4>
1001f3a2:	f1a4 0361 	sub.w	r3, r4, #97	@ 0x61
1001f3a6:	2b19      	cmp	r3, #25
1001f3a8:	d803      	bhi.n	1001f3b2 <_strtoull_l.constprop.0+0xe2>
1001f3aa:	f1a4 0357 	sub.w	r3, r4, #87	@ 0x57
1001f3ae:	429e      	cmp	r6, r3
1001f3b0:	dcee      	bgt.n	1001f390 <_strtoull_l.constprop.0+0xc0>
1001f3b2:	1c53      	adds	r3, r2, #1
1001f3b4:	d012      	beq.n	1001f3dc <_strtoull_l.constprop.0+0x10c>
1001f3b6:	9b02      	ldr	r3, [sp, #8]
1001f3b8:	b113      	cbz	r3, 1001f3c0 <_strtoull_l.constprop.0+0xf0>
1001f3ba:	4240      	negs	r0, r0
1001f3bc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001f3c0:	9b01      	ldr	r3, [sp, #4]
1001f3c2:	b11b      	cbz	r3, 1001f3cc <_strtoull_l.constprop.0+0xfc>
1001f3c4:	b992      	cbnz	r2, 1001f3ec <_strtoull_l.constprop.0+0x11c>
1001f3c6:	9b01      	ldr	r3, [sp, #4]
1001f3c8:	f8c3 b000 	str.w	fp, [r3]
1001f3cc:	b005      	add	sp, #20
1001f3ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f3d2:	4563      	cmp	r3, ip
1001f3d4:	ddc3      	ble.n	1001f35e <_strtoull_l.constprop.0+0x8e>
1001f3d6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001f3da:	e7cb      	b.n	1001f374 <_strtoull_l.constprop.0+0xa4>
1001f3dc:	9903      	ldr	r1, [sp, #12]
1001f3de:	2322      	movs	r3, #34	@ 0x22
1001f3e0:	600b      	str	r3, [r1, #0]
1001f3e2:	9b01      	ldr	r3, [sp, #4]
1001f3e4:	4610      	mov	r0, r2
1001f3e6:	4611      	mov	r1, r2
1001f3e8:	2b00      	cmp	r3, #0
1001f3ea:	d0ef      	beq.n	1001f3cc <_strtoull_l.constprop.0+0xfc>
1001f3ec:	f105 3bff 	add.w	fp, r5, #4294967295	@ 0xffffffff
1001f3f0:	e7e9      	b.n	1001f3c6 <_strtoull_l.constprop.0+0xf6>
1001f3f2:	2301      	movs	r3, #1
1001f3f4:	782c      	ldrb	r4, [r5, #0]
1001f3f6:	9302      	str	r3, [sp, #8]
1001f3f8:	1c8d      	adds	r5, r1, #2
1001f3fa:	e781      	b.n	1001f300 <_strtoull_l.constprop.0+0x30>
1001f3fc:	2c30      	cmp	r4, #48	@ 0x30
1001f3fe:	d019      	beq.n	1001f434 <_strtoull_l.constprop.0+0x164>
1001f400:	f04f 0c0f 	mov.w	ip, #15
1001f404:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001f408:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001f40c:	46b1      	mov	r9, r6
1001f40e:	f04f 0a00 	mov.w	sl, #0
1001f412:	e79c      	b.n	1001f34e <_strtoull_l.constprop.0+0x7e>
1001f414:	782b      	ldrb	r3, [r5, #0]
1001f416:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001f41a:	2b58      	cmp	r3, #88	@ 0x58
1001f41c:	d00f      	beq.n	1001f43e <_strtoull_l.constprop.0+0x16e>
1001f41e:	f04f 0908 	mov.w	r9, #8
1001f422:	46b2      	mov	sl, r6
1001f424:	f04f 0c07 	mov.w	ip, #7
1001f428:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001f42c:	f06f 4860 	mvn.w	r8, #3758096384	@ 0xe0000000
1001f430:	464e      	mov	r6, r9
1001f432:	e78c      	b.n	1001f34e <_strtoull_l.constprop.0+0x7e>
1001f434:	782b      	ldrb	r3, [r5, #0]
1001f436:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001f43a:	2b58      	cmp	r3, #88	@ 0x58
1001f43c:	d1e0      	bne.n	1001f400 <_strtoull_l.constprop.0+0x130>
1001f43e:	f04f 0910 	mov.w	r9, #16
1001f442:	786c      	ldrb	r4, [r5, #1]
1001f444:	f04f 0c0f 	mov.w	ip, #15
1001f448:	3502      	adds	r5, #2
1001f44a:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001f44e:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001f452:	f04f 0a00 	mov.w	sl, #0
1001f456:	464e      	mov	r6, r9
1001f458:	e779      	b.n	1001f34e <_strtoull_l.constprop.0+0x7e>
1001f45a:	bf00      	nop
1001f45c:	10023b6d 	.word	0x10023b6d
1001f460:	19999999 	.word	0x19999999

1001f464 <_strtoull_r>:
1001f464:	f7ff bf34 	b.w	1001f2d0 <_strtoull_l.constprop.0>

1001f468 <_mbrtowc_r>:
1001f468:	b570      	push	{r4, r5, r6, lr}
1001f46a:	b082      	sub	sp, #8
1001f46c:	4604      	mov	r4, r0
1001f46e:	9d06      	ldr	r5, [sp, #24]
1001f470:	b155      	cbz	r5, 1001f488 <_mbrtowc_r+0x20>
1001f472:	4810      	ldr	r0, [pc, #64]	@ (1001f4b4 <_mbrtowc_r+0x4c>)
1001f474:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
1001f478:	9500      	str	r5, [sp, #0]
1001f47a:	b16a      	cbz	r2, 1001f498 <_mbrtowc_r+0x30>
1001f47c:	4620      	mov	r0, r4
1001f47e:	47b0      	blx	r6
1001f480:	1c43      	adds	r3, r0, #1
1001f482:	d010      	beq.n	1001f4a6 <_mbrtowc_r+0x3e>
1001f484:	b002      	add	sp, #8
1001f486:	bd70      	pop	{r4, r5, r6, pc}
1001f488:	f100 05f4 	add.w	r5, r0, #244	@ 0xf4
1001f48c:	4809      	ldr	r0, [pc, #36]	@ (1001f4b4 <_mbrtowc_r+0x4c>)
1001f48e:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
1001f492:	9500      	str	r5, [sp, #0]
1001f494:	2a00      	cmp	r2, #0
1001f496:	d1f1      	bne.n	1001f47c <_mbrtowc_r+0x14>
1001f498:	2301      	movs	r3, #1
1001f49a:	4611      	mov	r1, r2
1001f49c:	4620      	mov	r0, r4
1001f49e:	4a06      	ldr	r2, [pc, #24]	@ (1001f4b8 <_mbrtowc_r+0x50>)
1001f4a0:	47b0      	blx	r6
1001f4a2:	1c43      	adds	r3, r0, #1
1001f4a4:	d1ee      	bne.n	1001f484 <_mbrtowc_r+0x1c>
1001f4a6:	2200      	movs	r2, #0
1001f4a8:	238a      	movs	r3, #138	@ 0x8a
1001f4aa:	602a      	str	r2, [r5, #0]
1001f4ac:	6023      	str	r3, [r4, #0]
1001f4ae:	b002      	add	sp, #8
1001f4b0:	bd70      	pop	{r4, r5, r6, pc}
1001f4b2:	bf00      	nop
1001f4b4:	2000042c 	.word	0x2000042c
1001f4b8:	1002155c 	.word	0x1002155c

1001f4bc <_wcsnrtombs_l>:
1001f4bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001f4c0:	b089      	sub	sp, #36	@ 0x24
1001f4c2:	e9dd 7a13 	ldrd	r7, sl, [sp, #76]	@ 0x4c
1001f4c6:	4686      	mov	lr, r0
1001f4c8:	461e      	mov	r6, r3
1001f4ca:	2f00      	cmp	r7, #0
1001f4cc:	d053      	beq.n	1001f576 <_wcsnrtombs_l+0xba>
1001f4ce:	6815      	ldr	r5, [r2, #0]
1001f4d0:	2900      	cmp	r1, #0
1001f4d2:	d055      	beq.n	1001f580 <_wcsnrtombs_l+0xc4>
1001f4d4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001f4d6:	2b00      	cmp	r3, #0
1001f4d8:	d062      	beq.n	1001f5a0 <_wcsnrtombs_l+0xe4>
1001f4da:	1e74      	subs	r4, r6, #1
1001f4dc:	b32e      	cbz	r6, 1001f52a <_wcsnrtombs_l+0x6e>
1001f4de:	e9cd e100 	strd	lr, r1, [sp]
1001f4e2:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001f4e6:	9102      	str	r1, [sp, #8]
1001f4e8:	3d04      	subs	r5, #4
1001f4ea:	2600      	movs	r6, #0
1001f4ec:	9203      	str	r2, [sp, #12]
1001f4ee:	e00a      	b.n	1001f506 <_wcsnrtombs_l+0x4a>
1001f4f0:	9b01      	ldr	r3, [sp, #4]
1001f4f2:	b9f3      	cbnz	r3, 1001f532 <_wcsnrtombs_l+0x76>
1001f4f4:	6828      	ldr	r0, [r5, #0]
1001f4f6:	2800      	cmp	r0, #0
1001f4f8:	d031      	beq.n	1001f55e <_wcsnrtombs_l+0xa2>
1001f4fa:	45dc      	cmp	ip, fp
1001f4fc:	d252      	bcs.n	1001f5a4 <_wcsnrtombs_l+0xe8>
1001f4fe:	3c01      	subs	r4, #1
1001f500:	1c63      	adds	r3, r4, #1
1001f502:	4666      	mov	r6, ip
1001f504:	d011      	beq.n	1001f52a <_wcsnrtombs_l+0x6e>
1001f506:	f855 2f04 	ldr.w	r2, [r5, #4]!
1001f50a:	9800      	ldr	r0, [sp, #0]
1001f50c:	f8da c0e0 	ldr.w	ip, [sl, #224]	@ 0xe0
1001f510:	463b      	mov	r3, r7
1001f512:	a905      	add	r1, sp, #20
1001f514:	e9d7 9800 	ldrd	r9, r8, [r7]
1001f518:	47e0      	blx	ip
1001f51a:	1c42      	adds	r2, r0, #1
1001f51c:	d034      	beq.n	1001f588 <_wcsnrtombs_l+0xcc>
1001f51e:	eb00 0c06 	add.w	ip, r0, r6
1001f522:	45dc      	cmp	ip, fp
1001f524:	d9e4      	bls.n	1001f4f0 <_wcsnrtombs_l+0x34>
1001f526:	e9c7 9800 	strd	r9, r8, [r7]
1001f52a:	4630      	mov	r0, r6
1001f52c:	b009      	add	sp, #36	@ 0x24
1001f52e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f532:	2800      	cmp	r0, #0
1001f534:	dd0c      	ble.n	1001f550 <_wcsnrtombs_l+0x94>
1001f536:	9b02      	ldr	r3, [sp, #8]
1001f538:	4418      	add	r0, r3
1001f53a:	1e5a      	subs	r2, r3, #1
1001f53c:	a905      	add	r1, sp, #20
1001f53e:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
1001f542:	f811 3b01 	ldrb.w	r3, [r1], #1
1001f546:	f802 3f01 	strb.w	r3, [r2, #1]!
1001f54a:	4596      	cmp	lr, r2
1001f54c:	d1f9      	bne.n	1001f542 <_wcsnrtombs_l+0x86>
1001f54e:	9002      	str	r0, [sp, #8]
1001f550:	9b03      	ldr	r3, [sp, #12]
1001f552:	6828      	ldr	r0, [r5, #0]
1001f554:	681a      	ldr	r2, [r3, #0]
1001f556:	3204      	adds	r2, #4
1001f558:	601a      	str	r2, [r3, #0]
1001f55a:	2800      	cmp	r0, #0
1001f55c:	d1cd      	bne.n	1001f4fa <_wcsnrtombs_l+0x3e>
1001f55e:	9901      	ldr	r1, [sp, #4]
1001f560:	9a03      	ldr	r2, [sp, #12]
1001f562:	b101      	cbz	r1, 1001f566 <_wcsnrtombs_l+0xaa>
1001f564:	6010      	str	r0, [r2, #0]
1001f566:	f10c 36ff 	add.w	r6, ip, #4294967295	@ 0xffffffff
1001f56a:	2200      	movs	r2, #0
1001f56c:	4630      	mov	r0, r6
1001f56e:	603a      	str	r2, [r7, #0]
1001f570:	b009      	add	sp, #36	@ 0x24
1001f572:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f576:	6815      	ldr	r5, [r2, #0]
1001f578:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
1001f57c:	2900      	cmp	r1, #0
1001f57e:	d1a9      	bne.n	1001f4d4 <_wcsnrtombs_l+0x18>
1001f580:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001f584:	9312      	str	r3, [sp, #72]	@ 0x48
1001f586:	e7a8      	b.n	1001f4da <_wcsnrtombs_l+0x1e>
1001f588:	f8dd e000 	ldr.w	lr, [sp]
1001f58c:	4606      	mov	r6, r0
1001f58e:	218a      	movs	r1, #138	@ 0x8a
1001f590:	2200      	movs	r2, #0
1001f592:	4630      	mov	r0, r6
1001f594:	f8ce 1000 	str.w	r1, [lr]
1001f598:	603a      	str	r2, [r7, #0]
1001f59a:	b009      	add	sp, #36	@ 0x24
1001f59c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f5a0:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001f5a2:	e7c2      	b.n	1001f52a <_wcsnrtombs_l+0x6e>
1001f5a4:	4666      	mov	r6, ip
1001f5a6:	e7c0      	b.n	1001f52a <_wcsnrtombs_l+0x6e>

1001f5a8 <_wcsnrtombs_r>:
1001f5a8:	b510      	push	{r4, lr}
1001f5aa:	b084      	sub	sp, #16
1001f5ac:	4c05      	ldr	r4, [pc, #20]	@ (1001f5c4 <_wcsnrtombs_r+0x1c>)
1001f5ae:	9806      	ldr	r0, [sp, #24]
1001f5b0:	9000      	str	r0, [sp, #0]
1001f5b2:	9807      	ldr	r0, [sp, #28]
1001f5b4:	9001      	str	r0, [sp, #4]
1001f5b6:	4804      	ldr	r0, [pc, #16]	@ (1001f5c8 <_wcsnrtombs_r+0x20>)
1001f5b8:	6800      	ldr	r0, [r0, #0]
1001f5ba:	9402      	str	r4, [sp, #8]
1001f5bc:	f7ff ff7e 	bl	1001f4bc <_wcsnrtombs_l>
1001f5c0:	b004      	add	sp, #16
1001f5c2:	bd10      	pop	{r4, pc}
1001f5c4:	2000042c 	.word	0x2000042c
1001f5c8:	20000598 	.word	0x20000598

1001f5cc <iswspace>:
1001f5cc:	2100      	movs	r1, #0
1001f5ce:	f000 b801 	b.w	1001f5d4 <iswspace_l>
1001f5d2:	bf00      	nop

1001f5d4 <iswspace_l>:
1001f5d4:	b510      	push	{r4, lr}
1001f5d6:	f000 f90d 	bl	1001f7f4 <_jp2uc_l>
1001f5da:	4604      	mov	r4, r0
1001f5dc:	f000 f972 	bl	1001f8c4 <category>
1001f5e0:	f1a0 031a 	sub.w	r3, r0, #26
1001f5e4:	b2db      	uxtb	r3, r3
1001f5e6:	2b02      	cmp	r3, #2
1001f5e8:	d906      	bls.n	1001f5f8 <iswspace_l+0x24>
1001f5ea:	f1a4 0009 	sub.w	r0, r4, #9
1001f5ee:	2804      	cmp	r0, #4
1001f5f0:	bf8c      	ite	hi
1001f5f2:	2000      	movhi	r0, #0
1001f5f4:	2001      	movls	r0, #1
1001f5f6:	bd10      	pop	{r4, pc}
1001f5f8:	2001      	movs	r0, #1
1001f5fa:	bd10      	pop	{r4, pc}

1001f5fc <__register_exitproc>:
1001f5fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001f600:	4d1b      	ldr	r5, [pc, #108]	@ (1001f670 <__register_exitproc+0x74>)
1001f602:	4606      	mov	r6, r0
1001f604:	6828      	ldr	r0, [r5, #0]
1001f606:	4698      	mov	r8, r3
1001f608:	460f      	mov	r7, r1
1001f60a:	4691      	mov	r9, r2
1001f60c:	f7f8 ff74 	bl	100184f8 <__retarget_lock_acquire_recursive>
1001f610:	4b18      	ldr	r3, [pc, #96]	@ (1001f674 <__register_exitproc+0x78>)
1001f612:	681c      	ldr	r4, [r3, #0]
1001f614:	b31c      	cbz	r4, 1001f65e <__register_exitproc+0x62>
1001f616:	6828      	ldr	r0, [r5, #0]
1001f618:	6865      	ldr	r5, [r4, #4]
1001f61a:	2d1f      	cmp	r5, #31
1001f61c:	dc22      	bgt.n	1001f664 <__register_exitproc+0x68>
1001f61e:	b94e      	cbnz	r6, 1001f634 <__register_exitproc+0x38>
1001f620:	1c6b      	adds	r3, r5, #1
1001f622:	3502      	adds	r5, #2
1001f624:	6063      	str	r3, [r4, #4]
1001f626:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
1001f62a:	f7f8 ff67 	bl	100184fc <__retarget_lock_release_recursive>
1001f62e:	2000      	movs	r0, #0
1001f630:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001f634:	eb04 0185 	add.w	r1, r4, r5, lsl #2
1001f638:	2301      	movs	r3, #1
1001f63a:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
1001f63e:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
1001f642:	40ab      	lsls	r3, r5
1001f644:	431a      	orrs	r2, r3
1001f646:	2e02      	cmp	r6, #2
1001f648:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
1001f64c:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
1001f650:	d1e6      	bne.n	1001f620 <__register_exitproc+0x24>
1001f652:	f8d4 218c 	ldr.w	r2, [r4, #396]	@ 0x18c
1001f656:	431a      	orrs	r2, r3
1001f658:	f8c4 218c 	str.w	r2, [r4, #396]	@ 0x18c
1001f65c:	e7e0      	b.n	1001f620 <__register_exitproc+0x24>
1001f65e:	4c06      	ldr	r4, [pc, #24]	@ (1001f678 <__register_exitproc+0x7c>)
1001f660:	601c      	str	r4, [r3, #0]
1001f662:	e7d8      	b.n	1001f616 <__register_exitproc+0x1a>
1001f664:	f7f8 ff4a 	bl	100184fc <__retarget_lock_release_recursive>
1001f668:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f66c:	e7e0      	b.n	1001f630 <__register_exitproc+0x34>
1001f66e:	bf00      	nop
1001f670:	200006c0 	.word	0x200006c0
1001f674:	200015d4 	.word	0x200015d4
1001f678:	200015d8 	.word	0x200015d8

1001f67c <nan>:
1001f67c:	4901      	ldr	r1, [pc, #4]	@ (1001f684 <nan+0x8>)
1001f67e:	2000      	movs	r0, #0
1001f680:	4770      	bx	lr
1001f682:	bf00      	nop
1001f684:	7ff80000 	.word	0x7ff80000

1001f688 <nanf>:
1001f688:	4800      	ldr	r0, [pc, #0]	@ (1001f68c <nanf+0x4>)
1001f68a:	4770      	bx	lr
1001f68c:	7fc00000 	.word	0x7fc00000

1001f690 <__assert_func>:
1001f690:	b500      	push	{lr}
1001f692:	4c0b      	ldr	r4, [pc, #44]	@ (1001f6c0 <__assert_func+0x30>)
1001f694:	6825      	ldr	r5, [r4, #0]
1001f696:	4614      	mov	r4, r2
1001f698:	68ee      	ldr	r6, [r5, #12]
1001f69a:	461a      	mov	r2, r3
1001f69c:	b085      	sub	sp, #20
1001f69e:	4603      	mov	r3, r0
1001f6a0:	460d      	mov	r5, r1
1001f6a2:	b14c      	cbz	r4, 1001f6b8 <__assert_func+0x28>
1001f6a4:	4907      	ldr	r1, [pc, #28]	@ (1001f6c4 <__assert_func+0x34>)
1001f6a6:	9500      	str	r5, [sp, #0]
1001f6a8:	e9cd 1401 	strd	r1, r4, [sp, #4]
1001f6ac:	4630      	mov	r0, r6
1001f6ae:	4906      	ldr	r1, [pc, #24]	@ (1001f6c8 <__assert_func+0x38>)
1001f6b0:	f000 fd48 	bl	10020144 <fiprintf>
1001f6b4:	f000 fed2 	bl	1002045c <abort>
1001f6b8:	4904      	ldr	r1, [pc, #16]	@ (1001f6cc <__assert_func+0x3c>)
1001f6ba:	460c      	mov	r4, r1
1001f6bc:	e7f3      	b.n	1001f6a6 <__assert_func+0x16>
1001f6be:	bf00      	nop
1001f6c0:	20000598 	.word	0x20000598
1001f6c4:	10023f08 	.word	0x10023f08
1001f6c8:	10023f18 	.word	0x10023f18
1001f6cc:	1002155c 	.word	0x1002155c

1001f6d0 <__jp2uc>:
1001f6d0:	2902      	cmp	r1, #2
1001f6d2:	f3c0 2207 	ubfx	r2, r0, #8, #8
1001f6d6:	b2c3      	uxtb	r3, r0
1001f6d8:	d025      	beq.n	1001f726 <__jp2uc+0x56>
1001f6da:	2903      	cmp	r1, #3
1001f6dc:	d11e      	bne.n	1001f71c <__jp2uc+0x4c>
1001f6de:	f102 0150 	add.w	r1, r2, #80	@ 0x50
1001f6e2:	b2c9      	uxtb	r1, r1
1001f6e4:	291f      	cmp	r1, #31
1001f6e6:	d90b      	bls.n	1001f700 <__jp2uc+0x30>
1001f6e8:	f102 0130 	add.w	r1, r2, #48	@ 0x30
1001f6ec:	b2c9      	uxtb	r1, r1
1001f6ee:	2924      	cmp	r1, #36	@ 0x24
1001f6f0:	d834      	bhi.n	1001f75c <__jp2uc+0x8c>
1001f6f2:	f24f 41a6 	movw	r1, #62630	@ 0xf4a6
1001f6f6:	4288      	cmp	r0, r1
1001f6f8:	d926      	bls.n	1001f748 <__jp2uc+0x78>
1001f6fa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f6fe:	4770      	bx	lr
1001f700:	f64c 71d3 	movw	r1, #53203	@ 0xcfd3
1001f704:	4288      	cmp	r0, r1
1001f706:	d8f8      	bhi.n	1001f6fa <__jp2uc+0x2a>
1001f708:	3ab0      	subs	r2, #176	@ 0xb0
1001f70a:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
1001f70e:	3ba1      	subs	r3, #161	@ 0xa1
1001f710:	4930      	ldr	r1, [pc, #192]	@ (1001f7d4 <__jp2uc+0x104>)
1001f712:	eb03 0342 	add.w	r3, r3, r2, lsl #1
1001f716:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
1001f71a:	4770      	bx	lr
1001f71c:	f082 0280 	eor.w	r2, r2, #128	@ 0x80
1001f720:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
1001f724:	e7db      	b.n	1001f6de <__jp2uc+0xe>
1001f726:	2b9e      	cmp	r3, #158	@ 0x9e
1001f728:	d90a      	bls.n	1001f740 <__jp2uc+0x70>
1001f72a:	3323      	adds	r3, #35	@ 0x23
1001f72c:	b2db      	uxtb	r3, r3
1001f72e:	2180      	movs	r1, #128	@ 0x80
1001f730:	2a9f      	cmp	r2, #159	@ 0x9f
1001f732:	bf94      	ite	ls
1001f734:	3a70      	subls	r2, #112	@ 0x70
1001f736:	3250      	addhi	r2, #80	@ 0x50
1001f738:	eb01 0142 	add.w	r1, r1, r2, lsl #1
1001f73c:	b2ca      	uxtb	r2, r1
1001f73e:	e7ce      	b.n	1001f6de <__jp2uc+0xe>
1001f740:	3b7e      	subs	r3, #126	@ 0x7e
1001f742:	b2db      	uxtb	r3, r3
1001f744:	217f      	movs	r1, #127	@ 0x7f
1001f746:	e7f3      	b.n	1001f730 <__jp2uc+0x60>
1001f748:	3ad0      	subs	r2, #208	@ 0xd0
1001f74a:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
1001f74e:	3ba1      	subs	r3, #161	@ 0xa1
1001f750:	4921      	ldr	r1, [pc, #132]	@ (1001f7d8 <__jp2uc+0x108>)
1001f752:	eb03 0342 	add.w	r3, r3, r2, lsl #1
1001f756:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
1001f75a:	4770      	bx	lr
1001f75c:	3aa1      	subs	r2, #161	@ 0xa1
1001f75e:	2a07      	cmp	r2, #7
1001f760:	d8cb      	bhi.n	1001f6fa <__jp2uc+0x2a>
1001f762:	e8df f002 	tbb	[pc, r2]
1001f766:	2831      	.short	0x2831
1001f768:	0f13181e 	.word	0x0f13181e
1001f76c:	040b      	.short	0x040b
1001f76e:	2bc0      	cmp	r3, #192	@ 0xc0
1001f770:	d8c3      	bhi.n	1001f6fa <__jp2uc+0x2a>
1001f772:	4a1a      	ldr	r2, [pc, #104]	@ (1001f7dc <__jp2uc+0x10c>)
1001f774:	3ba1      	subs	r3, #161	@ 0xa1
1001f776:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001f77a:	4770      	bx	lr
1001f77c:	2bf1      	cmp	r3, #241	@ 0xf1
1001f77e:	d8bc      	bhi.n	1001f6fa <__jp2uc+0x2a>
1001f780:	4a17      	ldr	r2, [pc, #92]	@ (1001f7e0 <__jp2uc+0x110>)
1001f782:	e019      	b.n	1001f7b8 <__jp2uc+0xe8>
1001f784:	2bd8      	cmp	r3, #216	@ 0xd8
1001f786:	d8b8      	bhi.n	1001f6fa <__jp2uc+0x2a>
1001f788:	4a16      	ldr	r2, [pc, #88]	@ (1001f7e4 <__jp2uc+0x114>)
1001f78a:	e015      	b.n	1001f7b8 <__jp2uc+0xe8>
1001f78c:	2bf6      	cmp	r3, #246	@ 0xf6
1001f78e:	d8b4      	bhi.n	1001f6fa <__jp2uc+0x2a>
1001f790:	f503 5040 	add.w	r0, r3, #12288	@ 0x3000
1001f794:	4770      	bx	lr
1001f796:	2bf3      	cmp	r3, #243	@ 0xf3
1001f798:	d8af      	bhi.n	1001f6fa <__jp2uc+0x2a>
1001f79a:	f503 503e 	add.w	r0, r3, #12160	@ 0x2f80
1001f79e:	3020      	adds	r0, #32
1001f7a0:	4770      	bx	lr
1001f7a2:	4a11      	ldr	r2, [pc, #68]	@ (1001f7e8 <__jp2uc+0x118>)
1001f7a4:	441a      	add	r2, r3
1001f7a6:	f812 2ca1 	ldrb.w	r2, [r2, #-161]
1001f7aa:	2a00      	cmp	r2, #0
1001f7ac:	d0a5      	beq.n	1001f6fa <__jp2uc+0x2a>
1001f7ae:	f503 407e 	add.w	r0, r3, #65024	@ 0xfe00
1001f7b2:	3060      	adds	r0, #96	@ 0x60
1001f7b4:	4770      	bx	lr
1001f7b6:	4a0d      	ldr	r2, [pc, #52]	@ (1001f7ec <__jp2uc+0x11c>)
1001f7b8:	3ba1      	subs	r3, #161	@ 0xa1
1001f7ba:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001f7be:	2800      	cmp	r0, #0
1001f7c0:	bf08      	it	eq
1001f7c2:	f04f 30ff 	moveq.w	r0, #4294967295	@ 0xffffffff
1001f7c6:	4770      	bx	lr
1001f7c8:	4a09      	ldr	r2, [pc, #36]	@ (1001f7f0 <__jp2uc+0x120>)
1001f7ca:	3ba1      	subs	r3, #161	@ 0xa1
1001f7cc:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001f7d0:	4770      	bx	lr
1001f7d2:	bf00      	nop
1001f7d4:	100259d8 	.word	0x100259d8
1001f7d8:	10023f5c 	.word	0x10023f5c
1001f7dc:	10027104 	.word	0x10027104
1001f7e0:	10027144 	.word	0x10027144
1001f7e4:	100271e8 	.word	0x100271e8
1001f7e8:	10027258 	.word	0x10027258
1001f7ec:	100272b4 	.word	0x100272b4
1001f7f0:	10027370 	.word	0x10027370

1001f7f4 <_jp2uc_l>:
1001f7f4:	b538      	push	{r3, r4, r5, lr}
1001f7f6:	4605      	mov	r5, r0
1001f7f8:	b1b9      	cbz	r1, 1001f82a <_jp2uc_l+0x36>
1001f7fa:	f501 7495 	add.w	r4, r1, #298	@ 0x12a
1001f7fe:	4912      	ldr	r1, [pc, #72]	@ (1001f848 <_jp2uc_l+0x54>)
1001f800:	4620      	mov	r0, r4
1001f802:	f7f8 fcdd 	bl	100181c0 <strcmp>
1001f806:	b928      	cbnz	r0, 1001f814 <_jp2uc_l+0x20>
1001f808:	4628      	mov	r0, r5
1001f80a:	2101      	movs	r1, #1
1001f80c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001f810:	f7ff bf5e 	b.w	1001f6d0 <__jp2uc>
1001f814:	490d      	ldr	r1, [pc, #52]	@ (1001f84c <_jp2uc_l+0x58>)
1001f816:	4620      	mov	r0, r4
1001f818:	f7f8 fcd2 	bl	100181c0 <strcmp>
1001f81c:	b938      	cbnz	r0, 1001f82e <_jp2uc_l+0x3a>
1001f81e:	4628      	mov	r0, r5
1001f820:	2102      	movs	r1, #2
1001f822:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001f826:	f7ff bf53 	b.w	1001f6d0 <__jp2uc>
1001f82a:	4c09      	ldr	r4, [pc, #36]	@ (1001f850 <_jp2uc_l+0x5c>)
1001f82c:	e7e7      	b.n	1001f7fe <_jp2uc_l+0xa>
1001f82e:	4909      	ldr	r1, [pc, #36]	@ (1001f854 <_jp2uc_l+0x60>)
1001f830:	4620      	mov	r0, r4
1001f832:	f7f8 fcc5 	bl	100181c0 <strcmp>
1001f836:	b928      	cbnz	r0, 1001f844 <_jp2uc_l+0x50>
1001f838:	4628      	mov	r0, r5
1001f83a:	2103      	movs	r1, #3
1001f83c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001f840:	f7ff bf46 	b.w	1001f6d0 <__jp2uc>
1001f844:	4628      	mov	r0, r5
1001f846:	bd38      	pop	{r3, r4, r5, pc}
1001f848:	10023f48 	.word	0x10023f48
1001f84c:	10023f4c 	.word	0x10023f4c
1001f850:	20000556 	.word	0x20000556
1001f854:	10023f54 	.word	0x10023f54

1001f858 <_calloc_r>:
1001f858:	b538      	push	{r3, r4, r5, lr}
1001f85a:	fba1 1402 	umull	r1, r4, r1, r2
1001f85e:	bb54      	cbnz	r4, 1001f8b6 <_calloc_r+0x5e>
1001f860:	f7f4 fa0c 	bl	10013c7c <_malloc_r>
1001f864:	4605      	mov	r5, r0
1001f866:	b350      	cbz	r0, 1001f8be <_calloc_r+0x66>
1001f868:	f850 2c04 	ldr.w	r2, [r0, #-4]
1001f86c:	f022 0203 	bic.w	r2, r2, #3
1001f870:	3a04      	subs	r2, #4
1001f872:	2a24      	cmp	r2, #36	@ 0x24
1001f874:	d810      	bhi.n	1001f898 <_calloc_r+0x40>
1001f876:	2a13      	cmp	r2, #19
1001f878:	d913      	bls.n	1001f8a2 <_calloc_r+0x4a>
1001f87a:	2a1b      	cmp	r2, #27
1001f87c:	6004      	str	r4, [r0, #0]
1001f87e:	6044      	str	r4, [r0, #4]
1001f880:	d916      	bls.n	1001f8b0 <_calloc_r+0x58>
1001f882:	2a24      	cmp	r2, #36	@ 0x24
1001f884:	6084      	str	r4, [r0, #8]
1001f886:	60c4      	str	r4, [r0, #12]
1001f888:	bf11      	iteee	ne
1001f88a:	f100 0210 	addne.w	r2, r0, #16
1001f88e:	f100 0218 	addeq.w	r2, r0, #24
1001f892:	6104      	streq	r4, [r0, #16]
1001f894:	6144      	streq	r4, [r0, #20]
1001f896:	e005      	b.n	1001f8a4 <_calloc_r+0x4c>
1001f898:	4621      	mov	r1, r4
1001f89a:	f7f8 fb6d 	bl	10017f78 <memset>
1001f89e:	4628      	mov	r0, r5
1001f8a0:	bd38      	pop	{r3, r4, r5, pc}
1001f8a2:	4602      	mov	r2, r0
1001f8a4:	2300      	movs	r3, #0
1001f8a6:	6013      	str	r3, [r2, #0]
1001f8a8:	6053      	str	r3, [r2, #4]
1001f8aa:	6093      	str	r3, [r2, #8]
1001f8ac:	4628      	mov	r0, r5
1001f8ae:	bd38      	pop	{r3, r4, r5, pc}
1001f8b0:	f100 0208 	add.w	r2, r0, #8
1001f8b4:	e7f6      	b.n	1001f8a4 <_calloc_r+0x4c>
1001f8b6:	f7f8 fc6b 	bl	10018190 <__errno>
1001f8ba:	230c      	movs	r3, #12
1001f8bc:	6003      	str	r3, [r0, #0]
1001f8be:	2500      	movs	r5, #0
1001f8c0:	4628      	mov	r0, r5
1001f8c2:	bd38      	pop	{r3, r4, r5, pc}

1001f8c4 <category>:
1001f8c4:	4b17      	ldr	r3, [pc, #92]	@ (1001f924 <category+0x60>)
1001f8c6:	4298      	cmp	r0, r3
1001f8c8:	d827      	bhi.n	1001f91a <category+0x56>
1001f8ca:	b570      	push	{r4, r5, r6, lr}
1001f8cc:	4d16      	ldr	r5, [pc, #88]	@ (1001f928 <category+0x64>)
1001f8ce:	f04f 0e00 	mov.w	lr, #0
1001f8d2:	f640 04f9 	movw	r4, #2297	@ 0x8f9
1001f8d6:	e003      	b.n	1001f8e0 <category+0x1c>
1001f8d8:	f102 0e01 	add.w	lr, r2, #1
1001f8dc:	4574      	cmp	r4, lr
1001f8de:	db1a      	blt.n	1001f916 <category+0x52>
1001f8e0:	eb0e 0204 	add.w	r2, lr, r4
1001f8e4:	f022 0301 	bic.w	r3, r2, #1
1001f8e8:	eb03 0362 	add.w	r3, r3, r2, asr #1
1001f8ec:	eb05 0c43 	add.w	ip, r5, r3, lsl #1
1001f8f0:	1052      	asrs	r2, r2, #1
1001f8f2:	f89c 1001 	ldrb.w	r1, [ip, #1]
1001f8f6:	f8bc 6002 	ldrh.w	r6, [ip, #2]
1001f8fa:	f8bc c004 	ldrh.w	ip, [ip, #4]
1001f8fe:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
1001f902:	448c      	add	ip, r1
1001f904:	4560      	cmp	r0, ip
1001f906:	ea4f 0343 	mov.w	r3, r3, lsl #1
1001f90a:	d8e5      	bhi.n	1001f8d8 <category+0x14>
1001f90c:	4288      	cmp	r0, r1
1001f90e:	d206      	bcs.n	1001f91e <category+0x5a>
1001f910:	1e54      	subs	r4, r2, #1
1001f912:	4574      	cmp	r4, lr
1001f914:	dae4      	bge.n	1001f8e0 <category+0x1c>
1001f916:	20ff      	movs	r0, #255	@ 0xff
1001f918:	bd70      	pop	{r4, r5, r6, pc}
1001f91a:	20ff      	movs	r0, #255	@ 0xff
1001f91c:	4770      	bx	lr
1001f91e:	5ce8      	ldrb	r0, [r5, r3]
1001f920:	bd70      	pop	{r4, r5, r6, pc}
1001f922:	bf00      	nop
1001f924:	000e01ef 	.word	0x000e01ef
1001f928:	1002742c 	.word	0x1002742c

1001f92c <rshift>:
1001f92c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001f930:	6904      	ldr	r4, [r0, #16]
1001f932:	ebb4 1f61 	cmp.w	r4, r1, asr #5
1001f936:	dc05      	bgt.n	1001f944 <rshift+0x18>
1001f938:	2300      	movs	r3, #0
1001f93a:	6103      	str	r3, [r0, #16]
1001f93c:	2300      	movs	r3, #0
1001f93e:	6143      	str	r3, [r0, #20]
1001f940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001f944:	f100 0514 	add.w	r5, r0, #20
1001f948:	114e      	asrs	r6, r1, #5
1001f94a:	f011 0c1f 	ands.w	ip, r1, #31
1001f94e:	eb05 0e84 	add.w	lr, r5, r4, lsl #2
1001f952:	eb05 0386 	add.w	r3, r5, r6, lsl #2
1001f956:	d021      	beq.n	1001f99c <rshift+0x70>
1001f958:	f855 1026 	ldr.w	r1, [r5, r6, lsl #2]
1001f95c:	3304      	adds	r3, #4
1001f95e:	459e      	cmp	lr, r3
1001f960:	fa21 f10c 	lsr.w	r1, r1, ip
1001f964:	f1cc 0820 	rsb	r8, ip, #32
1001f968:	d92d      	bls.n	1001f9c6 <rshift+0x9a>
1001f96a:	462f      	mov	r7, r5
1001f96c:	681a      	ldr	r2, [r3, #0]
1001f96e:	fa02 f208 	lsl.w	r2, r2, r8
1001f972:	430a      	orrs	r2, r1
1001f974:	f847 2b04 	str.w	r2, [r7], #4
1001f978:	f853 1b04 	ldr.w	r1, [r3], #4
1001f97c:	459e      	cmp	lr, r3
1001f97e:	fa21 f10c 	lsr.w	r1, r1, ip
1001f982:	d8f3      	bhi.n	1001f96c <rshift+0x40>
1001f984:	1ba3      	subs	r3, r4, r6
1001f986:	009b      	lsls	r3, r3, #2
1001f988:	3b05      	subs	r3, #5
1001f98a:	089b      	lsrs	r3, r3, #2
1001f98c:	3301      	adds	r3, #1
1001f98e:	eb05 0483 	add.w	r4, r5, r3, lsl #2
1001f992:	f845 1023 	str.w	r1, [r5, r3, lsl #2]
1001f996:	b179      	cbz	r1, 1001f9b8 <rshift+0x8c>
1001f998:	3404      	adds	r4, #4
1001f99a:	e00d      	b.n	1001f9b8 <rshift+0x8c>
1001f99c:	459e      	cmp	lr, r3
1001f99e:	bf88      	it	hi
1001f9a0:	f100 0210 	addhi.w	r2, r0, #16
1001f9a4:	d9c8      	bls.n	1001f938 <rshift+0xc>
1001f9a6:	f853 1b04 	ldr.w	r1, [r3], #4
1001f9aa:	f842 1f04 	str.w	r1, [r2, #4]!
1001f9ae:	459e      	cmp	lr, r3
1001f9b0:	d8f9      	bhi.n	1001f9a6 <rshift+0x7a>
1001f9b2:	1ba4      	subs	r4, r4, r6
1001f9b4:	eb05 0484 	add.w	r4, r5, r4, lsl #2
1001f9b8:	1b63      	subs	r3, r4, r5
1001f9ba:	109b      	asrs	r3, r3, #2
1001f9bc:	42ac      	cmp	r4, r5
1001f9be:	6103      	str	r3, [r0, #16]
1001f9c0:	d0bc      	beq.n	1001f93c <rshift+0x10>
1001f9c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001f9c6:	6141      	str	r1, [r0, #20]
1001f9c8:	2900      	cmp	r1, #0
1001f9ca:	d0b5      	beq.n	1001f938 <rshift+0xc>
1001f9cc:	462c      	mov	r4, r5
1001f9ce:	e7e3      	b.n	1001f998 <rshift+0x6c>

1001f9d0 <__gethex>:
1001f9d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001f9d4:	680f      	ldr	r7, [r1, #0]
1001f9d6:	b085      	sub	sp, #20
1001f9d8:	e9cd 2000 	strd	r2, r0, [sp]
1001f9dc:	78ba      	ldrb	r2, [r7, #2]
1001f9de:	9303      	str	r3, [sp, #12]
1001f9e0:	2a30      	cmp	r2, #48	@ 0x30
1001f9e2:	4689      	mov	r9, r1
1001f9e4:	f040 81ca 	bne.w	1001fd7c <__gethex+0x3ac>
1001f9e8:	1cfb      	adds	r3, r7, #3
1001f9ea:	781a      	ldrb	r2, [r3, #0]
1001f9ec:	2a30      	cmp	r2, #48	@ 0x30
1001f9ee:	461c      	mov	r4, r3
1001f9f0:	f103 0301 	add.w	r3, r3, #1
1001f9f4:	d0f9      	beq.n	1001f9ea <__gethex+0x1a>
1001f9f6:	1be7      	subs	r7, r4, r7
1001f9f8:	3f02      	subs	r7, #2
1001f9fa:	f8df 82d8 	ldr.w	r8, [pc, #728]	@ 1001fcd4 <__gethex+0x304>
1001f9fe:	f818 3002 	ldrb.w	r3, [r8, r2]
1001fa02:	2b00      	cmp	r3, #0
1001fa04:	f000 80df 	beq.w	1001fbc6 <__gethex+0x1f6>
1001fa08:	7823      	ldrb	r3, [r4, #0]
1001fa0a:	f818 3003 	ldrb.w	r3, [r8, r3]
1001fa0e:	f04f 0a00 	mov.w	sl, #0
1001fa12:	4655      	mov	r5, sl
1001fa14:	2b00      	cmp	r3, #0
1001fa16:	f000 8150 	beq.w	1001fcba <__gethex+0x2ea>
1001fa1a:	4626      	mov	r6, r4
1001fa1c:	f816 3f01 	ldrb.w	r3, [r6, #1]!
1001fa20:	f818 3003 	ldrb.w	r3, [r8, r3]
1001fa24:	2b00      	cmp	r3, #0
1001fa26:	d1f9      	bne.n	1001fa1c <__gethex+0x4c>
1001fa28:	49ab      	ldr	r1, [pc, #684]	@ (1001fcd8 <__gethex+0x308>)
1001fa2a:	2201      	movs	r2, #1
1001fa2c:	4630      	mov	r0, r6
1001fa2e:	f7ff faed 	bl	1001f00c <strncmp>
1001fa32:	4683      	mov	fp, r0
1001fa34:	2800      	cmp	r0, #0
1001fa36:	d04c      	beq.n	1001fad2 <__gethex+0x102>
1001fa38:	7832      	ldrb	r2, [r6, #0]
1001fa3a:	2d00      	cmp	r5, #0
1001fa3c:	f000 8180 	beq.w	1001fd40 <__gethex+0x370>
1001fa40:	1bab      	subs	r3, r5, r6
1001fa42:	ea4f 0b83 	mov.w	fp, r3, lsl #2
1001fa46:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001fa4a:	2a50      	cmp	r2, #80	@ 0x50
1001fa4c:	4635      	mov	r5, r6
1001fa4e:	d04c      	beq.n	1001faea <__gethex+0x11a>
1001fa50:	f8c9 6000 	str.w	r6, [r9]
1001fa54:	f1ba 0f00 	cmp.w	sl, #0
1001fa58:	d165      	bne.n	1001fb26 <__gethex+0x156>
1001fa5a:	1b2a      	subs	r2, r5, r4
1001fa5c:	3a01      	subs	r2, #1
1001fa5e:	2a07      	cmp	r2, #7
1001fa60:	4651      	mov	r1, sl
1001fa62:	dd04      	ble.n	1001fa6e <__gethex+0x9e>
1001fa64:	1052      	asrs	r2, r2, #1
1001fa66:	2a07      	cmp	r2, #7
1001fa68:	f101 0101 	add.w	r1, r1, #1
1001fa6c:	dcfa      	bgt.n	1001fa64 <__gethex+0x94>
1001fa6e:	9801      	ldr	r0, [sp, #4]
1001fa70:	f7fd fb12 	bl	1001d098 <_Balloc>
1001fa74:	4682      	mov	sl, r0
1001fa76:	2800      	cmp	r0, #0
1001fa78:	f000 8250 	beq.w	1001ff1c <__gethex+0x54c>
1001fa7c:	f100 0614 	add.w	r6, r0, #20
1001fa80:	42a5      	cmp	r5, r4
1001fa82:	9602      	str	r6, [sp, #8]
1001fa84:	d957      	bls.n	1001fb36 <__gethex+0x166>
1001fa86:	2700      	movs	r7, #0
1001fa88:	46b9      	mov	r9, r7
1001fa8a:	e00d      	b.n	1001faa8 <__gethex+0xd8>
1001fa8c:	2f20      	cmp	r7, #32
1001fa8e:	d01a      	beq.n	1001fac6 <__gethex+0xf6>
1001fa90:	463a      	mov	r2, r7
1001fa92:	3704      	adds	r7, #4
1001fa94:	782b      	ldrb	r3, [r5, #0]
1001fa96:	f818 3003 	ldrb.w	r3, [r8, r3]
1001fa9a:	f003 030f 	and.w	r3, r3, #15
1001fa9e:	4093      	lsls	r3, r2
1001faa0:	ea49 0903 	orr.w	r9, r9, r3
1001faa4:	42a5      	cmp	r5, r4
1001faa6:	d049      	beq.n	1001fb3c <__gethex+0x16c>
1001faa8:	f815 3d01 	ldrb.w	r3, [r5, #-1]!
1001faac:	2b2e      	cmp	r3, #46	@ 0x2e
1001faae:	d1ed      	bne.n	1001fa8c <__gethex+0xbc>
1001fab0:	42a5      	cmp	r5, r4
1001fab2:	d3eb      	bcc.n	1001fa8c <__gethex+0xbc>
1001fab4:	4988      	ldr	r1, [pc, #544]	@ (1001fcd8 <__gethex+0x308>)
1001fab6:	2201      	movs	r2, #1
1001fab8:	4628      	mov	r0, r5
1001faba:	f7ff faa7 	bl	1001f00c <strncmp>
1001fabe:	2800      	cmp	r0, #0
1001fac0:	d0f0      	beq.n	1001faa4 <__gethex+0xd4>
1001fac2:	2f20      	cmp	r7, #32
1001fac4:	d1e4      	bne.n	1001fa90 <__gethex+0xc0>
1001fac6:	2200      	movs	r2, #0
1001fac8:	f846 9b04 	str.w	r9, [r6], #4
1001facc:	2704      	movs	r7, #4
1001face:	4691      	mov	r9, r2
1001fad0:	e7e0      	b.n	1001fa94 <__gethex+0xc4>
1001fad2:	2d00      	cmp	r5, #0
1001fad4:	f000 8143 	beq.w	1001fd5e <__gethex+0x38e>
1001fad8:	7832      	ldrb	r2, [r6, #0]
1001fada:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001fade:	1bab      	subs	r3, r5, r6
1001fae0:	2a50      	cmp	r2, #80	@ 0x50
1001fae2:	ea4f 0b83 	mov.w	fp, r3, lsl #2
1001fae6:	4635      	mov	r5, r6
1001fae8:	d1b2      	bne.n	1001fa50 <__gethex+0x80>
1001faea:	786a      	ldrb	r2, [r5, #1]
1001faec:	2a2b      	cmp	r2, #43	@ 0x2b
1001faee:	f000 8125 	beq.w	1001fd3c <__gethex+0x36c>
1001faf2:	2a2d      	cmp	r2, #45	@ 0x2d
1001faf4:	f000 80a1 	beq.w	1001fc3a <__gethex+0x26a>
1001faf8:	1c6e      	adds	r6, r5, #1
1001fafa:	2000      	movs	r0, #0
1001fafc:	f818 1002 	ldrb.w	r1, [r8, r2]
1001fb00:	1e4a      	subs	r2, r1, #1
1001fb02:	2a18      	cmp	r2, #24
1001fb04:	f200 8097 	bhi.w	1001fc36 <__gethex+0x266>
1001fb08:	7872      	ldrb	r2, [r6, #1]
1001fb0a:	f818 2002 	ldrb.w	r2, [r8, r2]
1001fb0e:	3910      	subs	r1, #16
1001fb10:	3601      	adds	r6, #1
1001fb12:	2a00      	cmp	r2, #0
1001fb14:	d154      	bne.n	1001fbc0 <__gethex+0x1f0>
1001fb16:	b100      	cbz	r0, 1001fb1a <__gethex+0x14a>
1001fb18:	4249      	negs	r1, r1
1001fb1a:	448b      	add	fp, r1
1001fb1c:	f8c9 6000 	str.w	r6, [r9]
1001fb20:	f1ba 0f00 	cmp.w	sl, #0
1001fb24:	d099      	beq.n	1001fa5a <__gethex+0x8a>
1001fb26:	2f00      	cmp	r7, #0
1001fb28:	bf0c      	ite	eq
1001fb2a:	2506      	moveq	r5, #6
1001fb2c:	2500      	movne	r5, #0
1001fb2e:	4628      	mov	r0, r5
1001fb30:	b005      	add	sp, #20
1001fb32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001fb36:	9e02      	ldr	r6, [sp, #8]
1001fb38:	f04f 0900 	mov.w	r9, #0
1001fb3c:	f846 9b04 	str.w	r9, [r6], #4
1001fb40:	9b02      	ldr	r3, [sp, #8]
1001fb42:	1af6      	subs	r6, r6, r3
1001fb44:	10b6      	asrs	r6, r6, #2
1001fb46:	f8ca 6010 	str.w	r6, [sl, #16]
1001fb4a:	4648      	mov	r0, r9
1001fb4c:	f7fd fb7c 	bl	1001d248 <__hi0bits>
1001fb50:	9b00      	ldr	r3, [sp, #0]
1001fb52:	0176      	lsls	r6, r6, #5
1001fb54:	681c      	ldr	r4, [r3, #0]
1001fb56:	1a36      	subs	r6, r6, r0
1001fb58:	42a6      	cmp	r6, r4
1001fb5a:	dc72      	bgt.n	1001fc42 <__gethex+0x272>
1001fb5c:	f2c0 80f2 	blt.w	1001fd44 <__gethex+0x374>
1001fb60:	2700      	movs	r7, #0
1001fb62:	9b00      	ldr	r3, [sp, #0]
1001fb64:	689a      	ldr	r2, [r3, #8]
1001fb66:	455a      	cmp	r2, fp
1001fb68:	f2c0 8129 	blt.w	1001fdbe <__gethex+0x3ee>
1001fb6c:	9b00      	ldr	r3, [sp, #0]
1001fb6e:	685a      	ldr	r2, [r3, #4]
1001fb70:	455a      	cmp	r2, fp
1001fb72:	dd49      	ble.n	1001fc08 <__gethex+0x238>
1001fb74:	eba2 0b0b 	sub.w	fp, r2, fp
1001fb78:	455c      	cmp	r4, fp
1001fb7a:	dc7f      	bgt.n	1001fc7c <__gethex+0x2ac>
1001fb7c:	68db      	ldr	r3, [r3, #12]
1001fb7e:	2b02      	cmp	r3, #2
1001fb80:	f000 815b 	beq.w	1001fe3a <__gethex+0x46a>
1001fb84:	2b03      	cmp	r3, #3
1001fb86:	f000 8153 	beq.w	1001fe30 <__gethex+0x460>
1001fb8a:	2b01      	cmp	r3, #1
1001fb8c:	f000 8136 	beq.w	1001fdfc <__gethex+0x42c>
1001fb90:	9801      	ldr	r0, [sp, #4]
1001fb92:	4651      	mov	r1, sl
1001fb94:	f7fd faa6 	bl	1001d0e4 <_Bfree>
1001fb98:	2550      	movs	r5, #80	@ 0x50
1001fb9a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001fb9c:	2300      	movs	r3, #0
1001fb9e:	4628      	mov	r0, r5
1001fba0:	6013      	str	r3, [r2, #0]
1001fba2:	b005      	add	sp, #20
1001fba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001fba8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001fbac:	f816 3f01 	ldrb.w	r3, [r6, #1]!
1001fbb0:	eb02 0241 	add.w	r2, r2, r1, lsl #1
1001fbb4:	f1a2 0110 	sub.w	r1, r2, #16
1001fbb8:	f818 2003 	ldrb.w	r2, [r8, r3]
1001fbbc:	2a00      	cmp	r2, #0
1001fbbe:	d0aa      	beq.n	1001fb16 <__gethex+0x146>
1001fbc0:	2a19      	cmp	r2, #25
1001fbc2:	ddf1      	ble.n	1001fba8 <__gethex+0x1d8>
1001fbc4:	e7a7      	b.n	1001fb16 <__gethex+0x146>
1001fbc6:	4944      	ldr	r1, [pc, #272]	@ (1001fcd8 <__gethex+0x308>)
1001fbc8:	2201      	movs	r2, #1
1001fbca:	4620      	mov	r0, r4
1001fbcc:	f7ff fa1e 	bl	1001f00c <strncmp>
1001fbd0:	4682      	mov	sl, r0
1001fbd2:	2800      	cmp	r0, #0
1001fbd4:	d173      	bne.n	1001fcbe <__gethex+0x2ee>
1001fbd6:	7863      	ldrb	r3, [r4, #1]
1001fbd8:	f818 2003 	ldrb.w	r2, [r8, r3]
1001fbdc:	1c65      	adds	r5, r4, #1
1001fbde:	2a00      	cmp	r2, #0
1001fbe0:	d06f      	beq.n	1001fcc2 <__gethex+0x2f2>
1001fbe2:	2b30      	cmp	r3, #48	@ 0x30
1001fbe4:	462c      	mov	r4, r5
1001fbe6:	f040 8134 	bne.w	1001fe52 <__gethex+0x482>
1001fbea:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1001fbee:	2b30      	cmp	r3, #48	@ 0x30
1001fbf0:	d0fb      	beq.n	1001fbea <__gethex+0x21a>
1001fbf2:	f818 3003 	ldrb.w	r3, [r8, r3]
1001fbf6:	fab3 fa83 	clz	sl, r3
1001fbfa:	2701      	movs	r7, #1
1001fbfc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
1001fc00:	2b00      	cmp	r3, #0
1001fc02:	f47f af0a 	bne.w	1001fa1a <__gethex+0x4a>
1001fc06:	e058      	b.n	1001fcba <__gethex+0x2ea>
1001fc08:	2501      	movs	r5, #1
1001fc0a:	b157      	cbz	r7, 1001fc22 <__gethex+0x252>
1001fc0c:	9b00      	ldr	r3, [sp, #0]
1001fc0e:	68da      	ldr	r2, [r3, #12]
1001fc10:	2a02      	cmp	r2, #2
1001fc12:	d063      	beq.n	1001fcdc <__gethex+0x30c>
1001fc14:	2a03      	cmp	r2, #3
1001fc16:	d065      	beq.n	1001fce4 <__gethex+0x314>
1001fc18:	2a01      	cmp	r2, #1
1001fc1a:	f000 8086 	beq.w	1001fd2a <__gethex+0x35a>
1001fc1e:	f045 0510 	orr.w	r5, r5, #16
1001fc22:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001fc24:	f8c3 a000 	str.w	sl, [r3]
1001fc28:	9b03      	ldr	r3, [sp, #12]
1001fc2a:	4628      	mov	r0, r5
1001fc2c:	f8c3 b000 	str.w	fp, [r3]
1001fc30:	b005      	add	sp, #20
1001fc32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001fc36:	462e      	mov	r6, r5
1001fc38:	e70a      	b.n	1001fa50 <__gethex+0x80>
1001fc3a:	2001      	movs	r0, #1
1001fc3c:	78aa      	ldrb	r2, [r5, #2]
1001fc3e:	1cae      	adds	r6, r5, #2
1001fc40:	e75c      	b.n	1001fafc <__gethex+0x12c>
1001fc42:	1b36      	subs	r6, r6, r4
1001fc44:	4631      	mov	r1, r6
1001fc46:	4650      	mov	r0, sl
1001fc48:	f7fd ff14 	bl	1001da74 <__any_on>
1001fc4c:	4607      	mov	r7, r0
1001fc4e:	b178      	cbz	r0, 1001fc70 <__gethex+0x2a0>
1001fc50:	1e71      	subs	r1, r6, #1
1001fc52:	114a      	asrs	r2, r1, #5
1001fc54:	9b02      	ldr	r3, [sp, #8]
1001fc56:	2701      	movs	r7, #1
1001fc58:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1001fc5c:	f001 021f 	and.w	r2, r1, #31
1001fc60:	fa07 f202 	lsl.w	r2, r7, r2
1001fc64:	4202      	tst	r2, r0
1001fc66:	d003      	beq.n	1001fc70 <__gethex+0x2a0>
1001fc68:	42b9      	cmp	r1, r7
1001fc6a:	f300 80b9 	bgt.w	1001fde0 <__gethex+0x410>
1001fc6e:	2702      	movs	r7, #2
1001fc70:	4631      	mov	r1, r6
1001fc72:	4650      	mov	r0, sl
1001fc74:	44b3      	add	fp, r6
1001fc76:	f7ff fe59 	bl	1001f92c <rshift>
1001fc7a:	e772      	b.n	1001fb62 <__gethex+0x192>
1001fc7c:	f10b 36ff 	add.w	r6, fp, #4294967295	@ 0xffffffff
1001fc80:	2f00      	cmp	r7, #0
1001fc82:	f040 80a5 	bne.w	1001fdd0 <__gethex+0x400>
1001fc86:	2e00      	cmp	r6, #0
1001fc88:	f040 80a4 	bne.w	1001fdd4 <__gethex+0x404>
1001fc8c:	1173      	asrs	r3, r6, #5
1001fc8e:	9a02      	ldr	r2, [sp, #8]
1001fc90:	f006 061f 	and.w	r6, r6, #31
1001fc94:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001fc98:	2301      	movs	r3, #1
1001fc9a:	40b3      	lsls	r3, r6
1001fc9c:	4213      	tst	r3, r2
1001fc9e:	4659      	mov	r1, fp
1001fca0:	4650      	mov	r0, sl
1001fca2:	bf18      	it	ne
1001fca4:	f047 0702 	orrne.w	r7, r7, #2
1001fca8:	f7ff fe40 	bl	1001f92c <rshift>
1001fcac:	9b00      	ldr	r3, [sp, #0]
1001fcae:	eba4 040b 	sub.w	r4, r4, fp
1001fcb2:	2502      	movs	r5, #2
1001fcb4:	f8d3 b004 	ldr.w	fp, [r3, #4]
1001fcb8:	e7a7      	b.n	1001fc0a <__gethex+0x23a>
1001fcba:	4626      	mov	r6, r4
1001fcbc:	e6b4      	b.n	1001fa28 <__gethex+0x58>
1001fcbe:	7823      	ldrb	r3, [r4, #0]
1001fcc0:	4625      	mov	r5, r4
1001fcc2:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001fcc6:	2b50      	cmp	r3, #80	@ 0x50
1001fcc8:	f000 8093 	beq.w	1001fdf2 <__gethex+0x422>
1001fccc:	f8c9 5000 	str.w	r5, [r9]
1001fcd0:	e729      	b.n	1001fb26 <__gethex+0x156>
1001fcd2:	bf00      	nop
1001fcd4:	1002aa74 	.word	0x1002aa74
1001fcd8:	10021748 	.word	0x10021748
1001fcdc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001fcde:	f1c3 0301 	rsb	r3, r3, #1
1001fce2:	930f      	str	r3, [sp, #60]	@ 0x3c
1001fce4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001fce6:	2b00      	cmp	r3, #0
1001fce8:	d099      	beq.n	1001fc1e <__gethex+0x24e>
1001fcea:	f8dd 8008 	ldr.w	r8, [sp, #8]
1001fcee:	f8da 7010 	ldr.w	r7, [sl, #16]
1001fcf2:	4642      	mov	r2, r8
1001fcf4:	ea4f 0987 	mov.w	r9, r7, lsl #2
1001fcf8:	eb08 0687 	add.w	r6, r8, r7, lsl #2
1001fcfc:	2000      	movs	r0, #0
1001fcfe:	e003      	b.n	1001fd08 <__gethex+0x338>
1001fd00:	4296      	cmp	r6, r2
1001fd02:	f842 0c04 	str.w	r0, [r2, #-4]
1001fd06:	d93c      	bls.n	1001fd82 <__gethex+0x3b2>
1001fd08:	4694      	mov	ip, r2
1001fd0a:	f852 1b04 	ldr.w	r1, [r2], #4
1001fd0e:	1c4b      	adds	r3, r1, #1
1001fd10:	d0f6      	beq.n	1001fd00 <__gethex+0x330>
1001fd12:	3101      	adds	r1, #1
1001fd14:	2d02      	cmp	r5, #2
1001fd16:	f8cc 1000 	str.w	r1, [ip]
1001fd1a:	f000 8093 	beq.w	1001fe44 <__gethex+0x474>
1001fd1e:	f014 041f 	ands.w	r4, r4, #31
1001fd22:	f040 80b3 	bne.w	1001fe8c <__gethex+0x4bc>
1001fd26:	2521      	movs	r5, #33	@ 0x21
1001fd28:	e77b      	b.n	1001fc22 <__gethex+0x252>
1001fd2a:	07b9      	lsls	r1, r7, #30
1001fd2c:	f57f af77 	bpl.w	1001fc1e <__gethex+0x24e>
1001fd30:	9b02      	ldr	r3, [sp, #8]
1001fd32:	681a      	ldr	r2, [r3, #0]
1001fd34:	4317      	orrs	r7, r2
1001fd36:	07fa      	lsls	r2, r7, #31
1001fd38:	d4d7      	bmi.n	1001fcea <__gethex+0x31a>
1001fd3a:	e770      	b.n	1001fc1e <__gethex+0x24e>
1001fd3c:	2000      	movs	r0, #0
1001fd3e:	e77d      	b.n	1001fc3c <__gethex+0x26c>
1001fd40:	46ab      	mov	fp, r5
1001fd42:	e680      	b.n	1001fa46 <__gethex+0x76>
1001fd44:	1ba2      	subs	r2, r4, r6
1001fd46:	4651      	mov	r1, sl
1001fd48:	9801      	ldr	r0, [sp, #4]
1001fd4a:	ebab 0b02 	sub.w	fp, fp, r2
1001fd4e:	f7fd fc0b 	bl	1001d568 <__lshift>
1001fd52:	f100 0314 	add.w	r3, r0, #20
1001fd56:	4682      	mov	sl, r0
1001fd58:	9302      	str	r3, [sp, #8]
1001fd5a:	2700      	movs	r7, #0
1001fd5c:	e701      	b.n	1001fb62 <__gethex+0x192>
1001fd5e:	7872      	ldrb	r2, [r6, #1]
1001fd60:	f818 1002 	ldrb.w	r1, [r8, r2]
1001fd64:	1c75      	adds	r5, r6, #1
1001fd66:	462e      	mov	r6, r5
1001fd68:	2900      	cmp	r1, #0
1001fd6a:	f43f ae6c 	beq.w	1001fa46 <__gethex+0x76>
1001fd6e:	f816 2f01 	ldrb.w	r2, [r6, #1]!
1001fd72:	f818 3002 	ldrb.w	r3, [r8, r2]
1001fd76:	2b00      	cmp	r3, #0
1001fd78:	d1f9      	bne.n	1001fd6e <__gethex+0x39e>
1001fd7a:	e661      	b.n	1001fa40 <__gethex+0x70>
1001fd7c:	1cbc      	adds	r4, r7, #2
1001fd7e:	2700      	movs	r7, #0
1001fd80:	e63b      	b.n	1001f9fa <__gethex+0x2a>
1001fd82:	f8da 2008 	ldr.w	r2, [sl, #8]
1001fd86:	4297      	cmp	r7, r2
1001fd88:	da65      	bge.n	1001fe56 <__gethex+0x486>
1001fd8a:	463a      	mov	r2, r7
1001fd8c:	eb0a 0182 	add.w	r1, sl, r2, lsl #2
1001fd90:	2001      	movs	r0, #1
1001fd92:	3201      	adds	r2, #1
1001fd94:	2d02      	cmp	r5, #2
1001fd96:	f8ca 2010 	str.w	r2, [sl, #16]
1001fd9a:	6148      	str	r0, [r1, #20]
1001fd9c:	d052      	beq.n	1001fe44 <__gethex+0x474>
1001fd9e:	4297      	cmp	r7, r2
1001fda0:	dabd      	bge.n	1001fd1e <__gethex+0x34e>
1001fda2:	2a00      	cmp	r2, #0
1001fda4:	dc7f      	bgt.n	1001fea6 <__gethex+0x4d6>
1001fda6:	2200      	movs	r2, #0
1001fda8:	f8ca 2010 	str.w	r2, [sl, #16]
1001fdac:	2200      	movs	r2, #0
1001fdae:	f8ca 2014 	str.w	r2, [sl, #20]
1001fdb2:	9b00      	ldr	r3, [sp, #0]
1001fdb4:	689a      	ldr	r2, [r3, #8]
1001fdb6:	f10b 0b01 	add.w	fp, fp, #1
1001fdba:	455a      	cmp	r2, fp
1001fdbc:	dab3      	bge.n	1001fd26 <__gethex+0x356>
1001fdbe:	9801      	ldr	r0, [sp, #4]
1001fdc0:	4651      	mov	r1, sl
1001fdc2:	f7fd f98f 	bl	1001d0e4 <_Bfree>
1001fdc6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001fdc8:	2300      	movs	r3, #0
1001fdca:	6013      	str	r3, [r2, #0]
1001fdcc:	25a3      	movs	r5, #163	@ 0xa3
1001fdce:	e6ae      	b.n	1001fb2e <__gethex+0x15e>
1001fdd0:	2701      	movs	r7, #1
1001fdd2:	e75b      	b.n	1001fc8c <__gethex+0x2bc>
1001fdd4:	4631      	mov	r1, r6
1001fdd6:	4650      	mov	r0, sl
1001fdd8:	f7fd fe4c 	bl	1001da74 <__any_on>
1001fddc:	4607      	mov	r7, r0
1001fdde:	e755      	b.n	1001fc8c <__gethex+0x2bc>
1001fde0:	1eb1      	subs	r1, r6, #2
1001fde2:	4650      	mov	r0, sl
1001fde4:	f7fd fe46 	bl	1001da74 <__any_on>
1001fde8:	2800      	cmp	r0, #0
1001fdea:	f43f af40 	beq.w	1001fc6e <__gethex+0x29e>
1001fdee:	2703      	movs	r7, #3
1001fdf0:	e73e      	b.n	1001fc70 <__gethex+0x2a0>
1001fdf2:	f04f 0b00 	mov.w	fp, #0
1001fdf6:	f04f 0a01 	mov.w	sl, #1
1001fdfa:	e676      	b.n	1001faea <__gethex+0x11a>
1001fdfc:	455c      	cmp	r4, fp
1001fdfe:	f47f aec7 	bne.w	1001fb90 <__gethex+0x1c0>
1001fe02:	2c01      	cmp	r4, #1
1001fe04:	d008      	beq.n	1001fe18 <__gethex+0x448>
1001fe06:	1e61      	subs	r1, r4, #1
1001fe08:	4650      	mov	r0, sl
1001fe0a:	f7fd fe33 	bl	1001da74 <__any_on>
1001fe0e:	2800      	cmp	r0, #0
1001fe10:	f43f aebe 	beq.w	1001fb90 <__gethex+0x1c0>
1001fe14:	9b00      	ldr	r3, [sp, #0]
1001fe16:	685a      	ldr	r2, [r3, #4]
1001fe18:	9903      	ldr	r1, [sp, #12]
1001fe1a:	600a      	str	r2, [r1, #0]
1001fe1c:	9a02      	ldr	r2, [sp, #8]
1001fe1e:	2301      	movs	r3, #1
1001fe20:	f8ca 3010 	str.w	r3, [sl, #16]
1001fe24:	6013      	str	r3, [r2, #0]
1001fe26:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001fe28:	2562      	movs	r5, #98	@ 0x62
1001fe2a:	f8c3 a000 	str.w	sl, [r3]
1001fe2e:	e67e      	b.n	1001fb2e <__gethex+0x15e>
1001fe30:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001fe32:	2b00      	cmp	r3, #0
1001fe34:	f43f aeac 	beq.w	1001fb90 <__gethex+0x1c0>
1001fe38:	e7ee      	b.n	1001fe18 <__gethex+0x448>
1001fe3a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001fe3c:	2b00      	cmp	r3, #0
1001fe3e:	f47f aea7 	bne.w	1001fb90 <__gethex+0x1c0>
1001fe42:	e7e9      	b.n	1001fe18 <__gethex+0x448>
1001fe44:	9b00      	ldr	r3, [sp, #0]
1001fe46:	681a      	ldr	r2, [r3, #0]
1001fe48:	3a01      	subs	r2, #1
1001fe4a:	42a2      	cmp	r2, r4
1001fe4c:	d054      	beq.n	1001fef8 <__gethex+0x528>
1001fe4e:	2522      	movs	r5, #34	@ 0x22
1001fe50:	e6e7      	b.n	1001fc22 <__gethex+0x252>
1001fe52:	2701      	movs	r7, #1
1001fe54:	e5e1      	b.n	1001fa1a <__gethex+0x4a>
1001fe56:	f8da 1004 	ldr.w	r1, [sl, #4]
1001fe5a:	9801      	ldr	r0, [sp, #4]
1001fe5c:	3101      	adds	r1, #1
1001fe5e:	f7fd f91b 	bl	1001d098 <_Balloc>
1001fe62:	4606      	mov	r6, r0
1001fe64:	2800      	cmp	r0, #0
1001fe66:	d05f      	beq.n	1001ff28 <__gethex+0x558>
1001fe68:	f8da 2010 	ldr.w	r2, [sl, #16]
1001fe6c:	3202      	adds	r2, #2
1001fe6e:	0092      	lsls	r2, r2, #2
1001fe70:	f10a 010c 	add.w	r1, sl, #12
1001fe74:	300c      	adds	r0, #12
1001fe76:	f7f8 fb93 	bl	100185a0 <memcpy>
1001fe7a:	4651      	mov	r1, sl
1001fe7c:	9801      	ldr	r0, [sp, #4]
1001fe7e:	f7fd f931 	bl	1001d0e4 <_Bfree>
1001fe82:	f106 0814 	add.w	r8, r6, #20
1001fe86:	6932      	ldr	r2, [r6, #16]
1001fe88:	46b2      	mov	sl, r6
1001fe8a:	e77f      	b.n	1001fd8c <__gethex+0x3bc>
1001fe8c:	44c1      	add	r9, r8
1001fe8e:	f1c4 0420 	rsb	r4, r4, #32
1001fe92:	f859 0c04 	ldr.w	r0, [r9, #-4]
1001fe96:	f7fd f9d7 	bl	1001d248 <__hi0bits>
1001fe9a:	42a0      	cmp	r0, r4
1001fe9c:	f6bf af43 	bge.w	1001fd26 <__gethex+0x356>
1001fea0:	f8da 2010 	ldr.w	r2, [sl, #16]
1001fea4:	e77d      	b.n	1001fda2 <__gethex+0x3d2>
1001fea6:	f8da 0014 	ldr.w	r0, [sl, #20]
1001feaa:	eb08 0282 	add.w	r2, r8, r2, lsl #2
1001feae:	f10a 0418 	add.w	r4, sl, #24
1001feb2:	42a2      	cmp	r2, r4
1001feb4:	ea4f 0050 	mov.w	r0, r0, lsr #1
1001feb8:	d92a      	bls.n	1001ff10 <__gethex+0x540>
1001feba:	4645      	mov	r5, r8
1001febc:	6823      	ldr	r3, [r4, #0]
1001febe:	ea40 70c3 	orr.w	r0, r0, r3, lsl #31
1001fec2:	f845 0b04 	str.w	r0, [r5], #4
1001fec6:	f854 0b04 	ldr.w	r0, [r4], #4
1001feca:	42a2      	cmp	r2, r4
1001fecc:	ea4f 0050 	mov.w	r0, r0, lsr #1
1001fed0:	d8f4      	bhi.n	1001febc <__gethex+0x4ec>
1001fed2:	eba2 020a 	sub.w	r2, r2, sl
1001fed6:	3a19      	subs	r2, #25
1001fed8:	0892      	lsrs	r2, r2, #2
1001feda:	3201      	adds	r2, #1
1001fedc:	f848 0022 	str.w	r0, [r8, r2, lsl #2]
1001fee0:	eb08 0282 	add.w	r2, r8, r2, lsl #2
1001fee4:	b9c0      	cbnz	r0, 1001ff18 <__gethex+0x548>
1001fee6:	eba2 0108 	sub.w	r1, r2, r8
1001feea:	1089      	asrs	r1, r1, #2
1001feec:	4590      	cmp	r8, r2
1001feee:	f8ca 1010 	str.w	r1, [sl, #16]
1001fef2:	f47f af5e 	bne.w	1001fdb2 <__gethex+0x3e2>
1001fef6:	e759      	b.n	1001fdac <__gethex+0x3dc>
1001fef8:	1162      	asrs	r2, r4, #5
1001fefa:	f004 041f 	and.w	r4, r4, #31
1001fefe:	f858 1022 	ldr.w	r1, [r8, r2, lsl #2]
1001ff02:	2201      	movs	r2, #1
1001ff04:	40a2      	lsls	r2, r4
1001ff06:	420a      	tst	r2, r1
1001ff08:	bf14      	ite	ne
1001ff0a:	2521      	movne	r5, #33	@ 0x21
1001ff0c:	2522      	moveq	r5, #34	@ 0x22
1001ff0e:	e688      	b.n	1001fc22 <__gethex+0x252>
1001ff10:	f8c8 0000 	str.w	r0, [r8]
1001ff14:	4642      	mov	r2, r8
1001ff16:	b168      	cbz	r0, 1001ff34 <__gethex+0x564>
1001ff18:	3204      	adds	r2, #4
1001ff1a:	e7e4      	b.n	1001fee6 <__gethex+0x516>
1001ff1c:	4b07      	ldr	r3, [pc, #28]	@ (1001ff3c <__gethex+0x56c>)
1001ff1e:	4808      	ldr	r0, [pc, #32]	@ (1001ff40 <__gethex+0x570>)
1001ff20:	4652      	mov	r2, sl
1001ff22:	21e4      	movs	r1, #228	@ 0xe4
1001ff24:	f7ff fbb4 	bl	1001f690 <__assert_func>
1001ff28:	4b04      	ldr	r3, [pc, #16]	@ (1001ff3c <__gethex+0x56c>)
1001ff2a:	4805      	ldr	r0, [pc, #20]	@ (1001ff40 <__gethex+0x570>)
1001ff2c:	4632      	mov	r2, r6
1001ff2e:	2184      	movs	r1, #132	@ 0x84
1001ff30:	f7ff fbae 	bl	1001f690 <__assert_func>
1001ff34:	f8ca 0010 	str.w	r0, [sl, #16]
1001ff38:	e738      	b.n	1001fdac <__gethex+0x3dc>
1001ff3a:	bf00      	nop
1001ff3c:	10023c80 	.word	0x10023c80
1001ff40:	1002aa08 	.word	0x1002aa08

1001ff44 <__match>:
1001ff44:	b410      	push	{r4}
1001ff46:	6804      	ldr	r4, [r0, #0]
1001ff48:	3401      	adds	r4, #1
1001ff4a:	e009      	b.n	1001ff60 <__match+0x1c>
1001ff4c:	f814 3b01 	ldrb.w	r3, [r4], #1
1001ff50:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
1001ff54:	f1bc 0f19 	cmp.w	ip, #25
1001ff58:	bf98      	it	ls
1001ff5a:	3320      	addls	r3, #32
1001ff5c:	4293      	cmp	r3, r2
1001ff5e:	d107      	bne.n	1001ff70 <__match+0x2c>
1001ff60:	f811 2b01 	ldrb.w	r2, [r1], #1
1001ff64:	2a00      	cmp	r2, #0
1001ff66:	d1f1      	bne.n	1001ff4c <__match+0x8>
1001ff68:	6004      	str	r4, [r0, #0]
1001ff6a:	2001      	movs	r0, #1
1001ff6c:	bc10      	pop	{r4}
1001ff6e:	4770      	bx	lr
1001ff70:	2000      	movs	r0, #0
1001ff72:	bc10      	pop	{r4}
1001ff74:	4770      	bx	lr
1001ff76:	bf00      	nop

1001ff78 <__hexnan>:
1001ff78:	6809      	ldr	r1, [r1, #0]
1001ff7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001ff7e:	114b      	asrs	r3, r1, #5
1001ff80:	eb02 0383 	add.w	r3, r2, r3, lsl #2
1001ff84:	f011 0b1f 	ands.w	fp, r1, #31
1001ff88:	4607      	mov	r7, r0
1001ff8a:	bf0c      	ite	eq
1001ff8c:	4618      	moveq	r0, r3
1001ff8e:	1d18      	addne	r0, r3, #4
1001ff90:	683c      	ldr	r4, [r7, #0]
1001ff92:	bf0c      	ite	eq
1001ff94:	1f1d      	subeq	r5, r3, #4
1001ff96:	461d      	movne	r5, r3
1001ff98:	2300      	movs	r3, #0
1001ff9a:	f840 3c04 	str.w	r3, [r0, #-4]
1001ff9e:	7861      	ldrb	r1, [r4, #1]
1001ffa0:	b085      	sub	sp, #20
1001ffa2:	3401      	adds	r4, #1
1001ffa4:	2900      	cmp	r1, #0
1001ffa6:	f000 80a8 	beq.w	100200fa <__hexnan+0x182>
1001ffaa:	469e      	mov	lr, r3
1001ffac:	469a      	mov	sl, r3
1001ffae:	461e      	mov	r6, r3
1001ffb0:	460b      	mov	r3, r1
1001ffb2:	4601      	mov	r1, r0
1001ffb4:	4610      	mov	r0, r2
1001ffb6:	f8df 9188 	ldr.w	r9, [pc, #392]	@ 10020140 <__hexnan+0x1c8>
1001ffba:	9701      	str	r7, [sp, #4]
1001ffbc:	465a      	mov	r2, fp
1001ffbe:	46a8      	mov	r8, r5
1001ffc0:	46ac      	mov	ip, r5
1001ffc2:	4683      	mov	fp, r0
1001ffc4:	e010      	b.n	1001ffe8 <__hexnan+0x70>
1001ffc6:	2b20      	cmp	r3, #32
1001ffc8:	f200 808f 	bhi.w	100200ea <__hexnan+0x172>
1001ffcc:	4556      	cmp	r6, sl
1001ffce:	dd08      	ble.n	1001ffe2 <__hexnan+0x6a>
1001ffd0:	45c4      	cmp	ip, r8
1001ffd2:	d202      	bcs.n	1001ffda <__hexnan+0x62>
1001ffd4:	f1be 0f07 	cmp.w	lr, #7
1001ffd8:	dd5f      	ble.n	1002009a <__hexnan+0x122>
1001ffda:	45e3      	cmp	fp, ip
1001ffdc:	d354      	bcc.n	10020088 <__hexnan+0x110>
1001ffde:	f04f 0e08 	mov.w	lr, #8
1001ffe2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1001ffe6:	b1b3      	cbz	r3, 10020016 <__hexnan+0x9e>
1001ffe8:	f819 7003 	ldrb.w	r7, [r9, r3]
1001ffec:	2f00      	cmp	r7, #0
1001ffee:	d0ea      	beq.n	1001ffc6 <__hexnan+0x4e>
1001fff0:	f10e 0e01 	add.w	lr, lr, #1
1001fff4:	f1be 0f08 	cmp.w	lr, #8
1001fff8:	f106 0601 	add.w	r6, r6, #1
1001fffc:	dc3a      	bgt.n	10020074 <__hexnan+0xfc>
1001fffe:	f8dc 3000 	ldr.w	r3, [ip]
10020002:	011b      	lsls	r3, r3, #4
10020004:	f007 070f 	and.w	r7, r7, #15
10020008:	431f      	orrs	r7, r3
1002000a:	f8cc 7000 	str.w	r7, [ip]
1002000e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
10020012:	2b00      	cmp	r3, #0
10020014:	d1e8      	bne.n	1001ffe8 <__hexnan+0x70>
10020016:	465b      	mov	r3, fp
10020018:	4608      	mov	r0, r1
1002001a:	4693      	mov	fp, r2
1002001c:	461a      	mov	r2, r3
1002001e:	2e00      	cmp	r6, #0
10020020:	d06b      	beq.n	100200fa <__hexnan+0x182>
10020022:	45e0      	cmp	r8, ip
10020024:	d902      	bls.n	1002002c <__hexnan+0xb4>
10020026:	f1be 0f07 	cmp.w	lr, #7
1002002a:	dd73      	ble.n	10020114 <__hexnan+0x19c>
1002002c:	4562      	cmp	r2, ip
1002002e:	d24d      	bcs.n	100200cc <__hexnan+0x154>
10020030:	1f11      	subs	r1, r2, #4
10020032:	4663      	mov	r3, ip
10020034:	f853 4b04 	ldr.w	r4, [r3], #4
10020038:	f841 4f04 	str.w	r4, [r1, #4]!
1002003c:	42ab      	cmp	r3, r5
1002003e:	d9f9      	bls.n	10020034 <__hexnan+0xbc>
10020040:	eba5 030c 	sub.w	r3, r5, ip
10020044:	f023 0303 	bic.w	r3, r3, #3
10020048:	1c69      	adds	r1, r5, #1
1002004a:	3304      	adds	r3, #4
1002004c:	f10c 0c01 	add.w	ip, ip, #1
10020050:	4561      	cmp	r1, ip
10020052:	bf38      	it	cc
10020054:	2304      	movcc	r3, #4
10020056:	4413      	add	r3, r2
10020058:	2100      	movs	r1, #0
1002005a:	f843 1b04 	str.w	r1, [r3], #4
1002005e:	42ab      	cmp	r3, r5
10020060:	d9fb      	bls.n	1002005a <__hexnan+0xe2>
10020062:	f850 3c04 	ldr.w	r3, [r0, #-4]
10020066:	2b00      	cmp	r3, #0
10020068:	d14d      	bne.n	10020106 <__hexnan+0x18e>
1002006a:	42aa      	cmp	r2, r5
1002006c:	d049      	beq.n	10020102 <__hexnan+0x18a>
1002006e:	f855 3d04 	ldr.w	r3, [r5, #-4]!
10020072:	e7f8      	b.n	10020066 <__hexnan+0xee>
10020074:	45e3      	cmp	fp, ip
10020076:	d2b4      	bcs.n	1001ffe2 <__hexnan+0x6a>
10020078:	2300      	movs	r3, #0
1002007a:	f84c 3c04 	str.w	r3, [ip, #-4]
1002007e:	f04f 0e01 	mov.w	lr, #1
10020082:	f1ac 0c04 	sub.w	ip, ip, #4
10020086:	e7bd      	b.n	10020004 <__hexnan+0x8c>
10020088:	2300      	movs	r3, #0
1002008a:	f1ac 0804 	sub.w	r8, ip, #4
1002008e:	f84c 3c04 	str.w	r3, [ip, #-4]
10020092:	46b2      	mov	sl, r6
10020094:	46c4      	mov	ip, r8
10020096:	469e      	mov	lr, r3
10020098:	e7a3      	b.n	1001ffe2 <__hexnan+0x6a>
1002009a:	f1ce 0008 	rsb	r0, lr, #8
1002009e:	0080      	lsls	r0, r0, #2
100200a0:	e9cd 2c02 	strd	r2, ip, [sp, #8]
100200a4:	f8dc 3000 	ldr.w	r3, [ip]
100200a8:	4667      	mov	r7, ip
100200aa:	f1c0 0e20 	rsb	lr, r0, #32
100200ae:	4684      	mov	ip, r0
100200b0:	6878      	ldr	r0, [r7, #4]
100200b2:	fa00 f20e 	lsl.w	r2, r0, lr
100200b6:	431a      	orrs	r2, r3
100200b8:	fa20 f30c 	lsr.w	r3, r0, ip
100200bc:	603a      	str	r2, [r7, #0]
100200be:	f847 3f04 	str.w	r3, [r7, #4]!
100200c2:	4547      	cmp	r7, r8
100200c4:	d3f4      	bcc.n	100200b0 <__hexnan+0x138>
100200c6:	e9dd 2c02 	ldrd	r2, ip, [sp, #8]
100200ca:	e786      	b.n	1001ffda <__hexnan+0x62>
100200cc:	f850 3c04 	ldr.w	r3, [r0, #-4]
100200d0:	f1bb 0f00 	cmp.w	fp, #0
100200d4:	d0c7      	beq.n	10020066 <__hexnan+0xee>
100200d6:	f1cb 0b20 	rsb	fp, fp, #32
100200da:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
100200de:	fa21 f10b 	lsr.w	r1, r1, fp
100200e2:	400b      	ands	r3, r1
100200e4:	f840 3c04 	str.w	r3, [r0, #-4]
100200e8:	e7bd      	b.n	10020066 <__hexnan+0xee>
100200ea:	4608      	mov	r0, r1
100200ec:	4619      	mov	r1, r3
100200ee:	2929      	cmp	r1, #41	@ 0x29
100200f0:	465b      	mov	r3, fp
100200f2:	9f01      	ldr	r7, [sp, #4]
100200f4:	4693      	mov	fp, r2
100200f6:	461a      	mov	r2, r3
100200f8:	d009      	beq.n	1002010e <__hexnan+0x196>
100200fa:	2004      	movs	r0, #4
100200fc:	b005      	add	sp, #20
100200fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10020102:	2301      	movs	r3, #1
10020104:	602b      	str	r3, [r5, #0]
10020106:	2005      	movs	r0, #5
10020108:	b005      	add	sp, #20
1002010a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1002010e:	3401      	adds	r4, #1
10020110:	603c      	str	r4, [r7, #0]
10020112:	e784      	b.n	1002001e <__hexnan+0xa6>
10020114:	f1ce 0308 	rsb	r3, lr, #8
10020118:	f8dc 1000 	ldr.w	r1, [ip]
1002011c:	009b      	lsls	r3, r3, #2
1002011e:	f1c3 0e20 	rsb	lr, r3, #32
10020122:	4666      	mov	r6, ip
10020124:	460c      	mov	r4, r1
10020126:	6877      	ldr	r7, [r6, #4]
10020128:	fa07 f10e 	lsl.w	r1, r7, lr
1002012c:	4321      	orrs	r1, r4
1002012e:	fa27 f403 	lsr.w	r4, r7, r3
10020132:	6031      	str	r1, [r6, #0]
10020134:	f846 4f04 	str.w	r4, [r6, #4]!
10020138:	45b0      	cmp	r8, r6
1002013a:	d8f4      	bhi.n	10020126 <__hexnan+0x1ae>
1002013c:	e776      	b.n	1002002c <__hexnan+0xb4>
1002013e:	bf00      	nop
10020140:	1002aa74 	.word	0x1002aa74

10020144 <fiprintf>:
10020144:	b40e      	push	{r1, r2, r3}
10020146:	b510      	push	{r4, lr}
10020148:	b083      	sub	sp, #12
1002014a:	ab05      	add	r3, sp, #20
1002014c:	4c06      	ldr	r4, [pc, #24]	@ (10020168 <fiprintf+0x24>)
1002014e:	f853 2b04 	ldr.w	r2, [r3], #4
10020152:	9301      	str	r3, [sp, #4]
10020154:	4601      	mov	r1, r0
10020156:	6820      	ldr	r0, [r4, #0]
10020158:	f7f5 ff08 	bl	10015f6c <_vfiprintf_r>
1002015c:	b003      	add	sp, #12
1002015e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10020162:	b003      	add	sp, #12
10020164:	4770      	bx	lr
10020166:	bf00      	nop
10020168:	20000598 	.word	0x20000598

1002016c <__ssprint_r>:
1002016c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10020170:	6893      	ldr	r3, [r2, #8]
10020172:	6817      	ldr	r7, [r2, #0]
10020174:	b083      	sub	sp, #12
10020176:	4692      	mov	sl, r2
10020178:	2b00      	cmp	r3, #0
1002017a:	d074      	beq.n	10020266 <__ssprint_r+0xfa>
1002017c:	f04f 0b00 	mov.w	fp, #0
10020180:	688b      	ldr	r3, [r1, #8]
10020182:	680a      	ldr	r2, [r1, #0]
10020184:	4681      	mov	r9, r0
10020186:	460c      	mov	r4, r1
10020188:	465d      	mov	r5, fp
1002018a:	e045      	b.n	10020218 <__ssprint_r+0xac>
1002018c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10020190:	f413 6f90 	tst.w	r3, #1152	@ 0x480
10020194:	d02c      	beq.n	100201f0 <__ssprint_r+0x84>
10020196:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
1002019a:	1a16      	subs	r6, r2, r0
1002019c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
100201a0:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
100201a4:	1c71      	adds	r1, r6, #1
100201a6:	1052      	asrs	r2, r2, #1
100201a8:	4429      	add	r1, r5
100201aa:	4291      	cmp	r1, r2
100201ac:	bf92      	itee	ls
100201ae:	4690      	movls	r8, r2
100201b0:	4688      	movhi	r8, r1
100201b2:	460a      	movhi	r2, r1
100201b4:	055b      	lsls	r3, r3, #21
100201b6:	d539      	bpl.n	1002022c <__ssprint_r+0xc0>
100201b8:	4611      	mov	r1, r2
100201ba:	4648      	mov	r0, r9
100201bc:	f7f3 fd5e 	bl	10013c7c <_malloc_r>
100201c0:	9001      	str	r0, [sp, #4]
100201c2:	2800      	cmp	r0, #0
100201c4:	d03d      	beq.n	10020242 <__ssprint_r+0xd6>
100201c6:	4632      	mov	r2, r6
100201c8:	6921      	ldr	r1, [r4, #16]
100201ca:	f7f8 f9e9 	bl	100185a0 <memcpy>
100201ce:	89a2      	ldrh	r2, [r4, #12]
100201d0:	9b01      	ldr	r3, [sp, #4]
100201d2:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
100201d6:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
100201da:	81a2      	strh	r2, [r4, #12]
100201dc:	1998      	adds	r0, r3, r6
100201de:	eba8 0606 	sub.w	r6, r8, r6
100201e2:	60a6      	str	r6, [r4, #8]
100201e4:	f8c4 8014 	str.w	r8, [r4, #20]
100201e8:	6123      	str	r3, [r4, #16]
100201ea:	6020      	str	r0, [r4, #0]
100201ec:	46a8      	mov	r8, r5
100201ee:	462e      	mov	r6, r5
100201f0:	4632      	mov	r2, r6
100201f2:	4659      	mov	r1, fp
100201f4:	f7f7 fe40 	bl	10017e78 <memmove>
100201f8:	f8da 1008 	ldr.w	r1, [sl, #8]
100201fc:	68a3      	ldr	r3, [r4, #8]
100201fe:	6822      	ldr	r2, [r4, #0]
10020200:	eba3 0308 	sub.w	r3, r3, r8
10020204:	4432      	add	r2, r6
10020206:	1b49      	subs	r1, r1, r5
10020208:	60a3      	str	r3, [r4, #8]
1002020a:	6022      	str	r2, [r4, #0]
1002020c:	f8ca 1008 	str.w	r1, [sl, #8]
10020210:	b349      	cbz	r1, 10020266 <__ssprint_r+0xfa>
10020212:	e9d7 b500 	ldrd	fp, r5, [r7]
10020216:	3708      	adds	r7, #8
10020218:	4698      	mov	r8, r3
1002021a:	4610      	mov	r0, r2
1002021c:	2d00      	cmp	r5, #0
1002021e:	d0f8      	beq.n	10020212 <__ssprint_r+0xa6>
10020220:	429d      	cmp	r5, r3
10020222:	461e      	mov	r6, r3
10020224:	d2b2      	bcs.n	1002018c <__ssprint_r+0x20>
10020226:	46a8      	mov	r8, r5
10020228:	462e      	mov	r6, r5
1002022a:	e7e1      	b.n	100201f0 <__ssprint_r+0x84>
1002022c:	4601      	mov	r1, r0
1002022e:	4648      	mov	r0, r9
10020230:	f7f6 ff86 	bl	10017140 <_realloc_r>
10020234:	4603      	mov	r3, r0
10020236:	2800      	cmp	r0, #0
10020238:	d1d0      	bne.n	100201dc <__ssprint_r+0x70>
1002023a:	6921      	ldr	r1, [r4, #16]
1002023c:	4648      	mov	r0, r9
1002023e:	f7f9 fb5f 	bl	10019900 <_free_r>
10020242:	89a3      	ldrh	r3, [r4, #12]
10020244:	220c      	movs	r2, #12
10020246:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1002024a:	f8c9 2000 	str.w	r2, [r9]
1002024e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10020252:	81a3      	strh	r3, [r4, #12]
10020254:	2200      	movs	r2, #0
10020256:	2300      	movs	r3, #0
10020258:	f8ca 2008 	str.w	r2, [sl, #8]
1002025c:	f8ca 3004 	str.w	r3, [sl, #4]
10020260:	b003      	add	sp, #12
10020262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10020266:	2000      	movs	r0, #0
10020268:	2300      	movs	r3, #0
1002026a:	f8ca 3004 	str.w	r3, [sl, #4]
1002026e:	b003      	add	sp, #12
10020270:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

10020274 <_sungetc_r>:
10020274:	b538      	push	{r3, r4, r5, lr}
10020276:	1c4b      	adds	r3, r1, #1
10020278:	d01a      	beq.n	100202b0 <_sungetc_r+0x3c>
1002027a:	4614      	mov	r4, r2
1002027c:	8992      	ldrh	r2, [r2, #12]
1002027e:	6863      	ldr	r3, [r4, #4]
10020280:	f022 0220 	bic.w	r2, r2, #32
10020284:	81a2      	strh	r2, [r4, #12]
10020286:	6b22      	ldr	r2, [r4, #48]	@ 0x30
10020288:	b2cd      	uxtb	r5, r1
1002028a:	b1a2      	cbz	r2, 100202b6 <_sungetc_r+0x42>
1002028c:	6b62      	ldr	r2, [r4, #52]	@ 0x34
1002028e:	429a      	cmp	r2, r3
10020290:	dd09      	ble.n	100202a6 <_sungetc_r+0x32>
10020292:	6823      	ldr	r3, [r4, #0]
10020294:	1e5a      	subs	r2, r3, #1
10020296:	6022      	str	r2, [r4, #0]
10020298:	f803 5c01 	strb.w	r5, [r3, #-1]
1002029c:	6863      	ldr	r3, [r4, #4]
1002029e:	3301      	adds	r3, #1
100202a0:	6063      	str	r3, [r4, #4]
100202a2:	4628      	mov	r0, r5
100202a4:	bd38      	pop	{r3, r4, r5, pc}
100202a6:	4621      	mov	r1, r4
100202a8:	f000 f89e 	bl	100203e8 <__submore>
100202ac:	2800      	cmp	r0, #0
100202ae:	d0f0      	beq.n	10020292 <_sungetc_r+0x1e>
100202b0:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
100202b4:	e7f5      	b.n	100202a2 <_sungetc_r+0x2e>
100202b6:	6922      	ldr	r2, [r4, #16]
100202b8:	6821      	ldr	r1, [r4, #0]
100202ba:	b12a      	cbz	r2, 100202c8 <_sungetc_r+0x54>
100202bc:	428a      	cmp	r2, r1
100202be:	d203      	bcs.n	100202c8 <_sungetc_r+0x54>
100202c0:	f811 2c01 	ldrb.w	r2, [r1, #-1]
100202c4:	42aa      	cmp	r2, r5
100202c6:	d00c      	beq.n	100202e2 <_sungetc_r+0x6e>
100202c8:	4622      	mov	r2, r4
100202ca:	e9c4 130e 	strd	r1, r3, [r4, #56]	@ 0x38
100202ce:	f104 0040 	add.w	r0, r4, #64	@ 0x40
100202d2:	2303      	movs	r3, #3
100202d4:	6363      	str	r3, [r4, #52]	@ 0x34
100202d6:	6320      	str	r0, [r4, #48]	@ 0x30
100202d8:	f802 5f42 	strb.w	r5, [r2, #66]!
100202dc:	2301      	movs	r3, #1
100202de:	6022      	str	r2, [r4, #0]
100202e0:	e7de      	b.n	100202a0 <_sungetc_r+0x2c>
100202e2:	3901      	subs	r1, #1
100202e4:	6021      	str	r1, [r4, #0]
100202e6:	3301      	adds	r3, #1
100202e8:	e7da      	b.n	100202a0 <_sungetc_r+0x2c>
100202ea:	bf00      	nop

100202ec <__ssrefill_r>:
100202ec:	b510      	push	{r4, lr}
100202ee:	460c      	mov	r4, r1
100202f0:	6b09      	ldr	r1, [r1, #48]	@ 0x30
100202f2:	b169      	cbz	r1, 10020310 <__ssrefill_r+0x24>
100202f4:	f104 0340 	add.w	r3, r4, #64	@ 0x40
100202f8:	4299      	cmp	r1, r3
100202fa:	d001      	beq.n	10020300 <__ssrefill_r+0x14>
100202fc:	f7f9 fb00 	bl	10019900 <_free_r>
10020300:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
10020302:	6063      	str	r3, [r4, #4]
10020304:	2000      	movs	r0, #0
10020306:	6320      	str	r0, [r4, #48]	@ 0x30
10020308:	b113      	cbz	r3, 10020310 <__ssrefill_r+0x24>
1002030a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
1002030c:	6023      	str	r3, [r4, #0]
1002030e:	bd10      	pop	{r4, pc}
10020310:	89a2      	ldrh	r2, [r4, #12]
10020312:	6923      	ldr	r3, [r4, #16]
10020314:	2100      	movs	r1, #0
10020316:	f042 0220 	orr.w	r2, r2, #32
1002031a:	6061      	str	r1, [r4, #4]
1002031c:	81a2      	strh	r2, [r4, #12]
1002031e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10020322:	e7f3      	b.n	1002030c <__ssrefill_r+0x20>

10020324 <_sfread_r>:
10020324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10020328:	b085      	sub	sp, #20
1002032a:	469c      	mov	ip, r3
1002032c:	fb02 f303 	mul.w	r3, r2, r3
10020330:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
10020332:	9301      	str	r3, [sp, #4]
10020334:	2b00      	cmp	r3, #0
10020336:	d03c      	beq.n	100203b2 <_sfread_r+0x8e>
10020338:	460f      	mov	r7, r1
1002033a:	e9d4 1500 	ldrd	r1, r5, [r4]
1002033e:	9b01      	ldr	r3, [sp, #4]
10020340:	42ab      	cmp	r3, r5
10020342:	d94e      	bls.n	100203e2 <_sfread_r+0xbe>
10020344:	9e01      	ldr	r6, [sp, #4]
10020346:	e9cd c202 	strd	ip, r2, [sp, #8]
1002034a:	462b      	mov	r3, r5
1002034c:	4683      	mov	fp, r0
1002034e:	4635      	mov	r5, r6
10020350:	f04f 0800 	mov.w	r8, #0
10020354:	f104 0940 	add.w	r9, r4, #64	@ 0x40
10020358:	461e      	mov	r6, r3
1002035a:	4632      	mov	r2, r6
1002035c:	4638      	mov	r0, r7
1002035e:	f7f8 f91f 	bl	100185a0 <memcpy>
10020362:	6821      	ldr	r1, [r4, #0]
10020364:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10020366:	198a      	adds	r2, r1, r6
10020368:	46aa      	mov	sl, r5
1002036a:	e9c4 2800 	strd	r2, r8, [r4]
1002036e:	4619      	mov	r1, r3
10020370:	4658      	mov	r0, fp
10020372:	4437      	add	r7, r6
10020374:	1bad      	subs	r5, r5, r6
10020376:	b303      	cbz	r3, 100203ba <_sfread_r+0x96>
10020378:	454b      	cmp	r3, r9
1002037a:	d001      	beq.n	10020380 <_sfread_r+0x5c>
1002037c:	f7f9 fac0 	bl	10019900 <_free_r>
10020380:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
10020382:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
10020386:	6060      	str	r0, [r4, #4]
10020388:	b1b8      	cbz	r0, 100203ba <_sfread_r+0x96>
1002038a:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
1002038c:	6021      	str	r1, [r4, #0]
1002038e:	42a8      	cmp	r0, r5
10020390:	4606      	mov	r6, r0
10020392:	d3e2      	bcc.n	1002035a <_sfread_r+0x36>
10020394:	f8dd c008 	ldr.w	ip, [sp, #8]
10020398:	462e      	mov	r6, r5
1002039a:	4632      	mov	r2, r6
1002039c:	4638      	mov	r0, r7
1002039e:	f8cd c004 	str.w	ip, [sp, #4]
100203a2:	f7f8 f8fd 	bl	100185a0 <memcpy>
100203a6:	e9d4 3200 	ldrd	r3, r2, [r4]
100203aa:	1b92      	subs	r2, r2, r6
100203ac:	4433      	add	r3, r6
100203ae:	e9c4 3200 	strd	r3, r2, [r4]
100203b2:	9801      	ldr	r0, [sp, #4]
100203b4:	b005      	add	sp, #20
100203b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100203ba:	9b01      	ldr	r3, [sp, #4]
100203bc:	9a03      	ldr	r2, [sp, #12]
100203be:	4433      	add	r3, r6
100203c0:	eba3 050a 	sub.w	r5, r3, sl
100203c4:	fbb5 f3f2 	udiv	r3, r5, r2
100203c8:	9301      	str	r3, [sp, #4]
100203ca:	89a3      	ldrh	r3, [r4, #12]
100203cc:	6922      	ldr	r2, [r4, #16]
100203ce:	9801      	ldr	r0, [sp, #4]
100203d0:	f043 0320 	orr.w	r3, r3, #32
100203d4:	81a3      	strh	r3, [r4, #12]
100203d6:	2300      	movs	r3, #0
100203d8:	e9c4 2300 	strd	r2, r3, [r4]
100203dc:	b005      	add	sp, #20
100203de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100203e2:	461e      	mov	r6, r3
100203e4:	e7d9      	b.n	1002039a <_sfread_r+0x76>
100203e6:	bf00      	nop

100203e8 <__submore>:
100203e8:	f101 0340 	add.w	r3, r1, #64	@ 0x40
100203ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100203f0:	460c      	mov	r4, r1
100203f2:	6b09      	ldr	r1, [r1, #48]	@ 0x30
100203f4:	4299      	cmp	r1, r3
100203f6:	d014      	beq.n	10020422 <__submore+0x3a>
100203f8:	6b66      	ldr	r6, [r4, #52]	@ 0x34
100203fa:	0077      	lsls	r7, r6, #1
100203fc:	463a      	mov	r2, r7
100203fe:	f7f6 fe9f 	bl	10017140 <_realloc_r>
10020402:	4605      	mov	r5, r0
10020404:	b330      	cbz	r0, 10020454 <__submore+0x6c>
10020406:	eb00 0806 	add.w	r8, r0, r6
1002040a:	4601      	mov	r1, r0
1002040c:	4632      	mov	r2, r6
1002040e:	4640      	mov	r0, r8
10020410:	f7f8 f8c6 	bl	100185a0 <memcpy>
10020414:	e9c4 570c 	strd	r5, r7, [r4, #48]	@ 0x30
10020418:	f8c4 8000 	str.w	r8, [r4]
1002041c:	2000      	movs	r0, #0
1002041e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10020422:	f44f 6180 	mov.w	r1, #1024	@ 0x400
10020426:	f7f3 fc29 	bl	10013c7c <_malloc_r>
1002042a:	b198      	cbz	r0, 10020454 <__submore+0x6c>
1002042c:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
10020430:	f44f 6280 	mov.w	r2, #1024	@ 0x400
10020434:	e9c4 020c 	strd	r0, r2, [r4, #48]	@ 0x30
10020438:	f880 33ff 	strb.w	r3, [r0, #1023]	@ 0x3ff
1002043c:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
10020440:	f880 33fe 	strb.w	r3, [r0, #1022]	@ 0x3fe
10020444:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
10020448:	f880 23fd 	strb.w	r2, [r0, #1021]	@ 0x3fd
1002044c:	f200 33fd 	addw	r3, r0, #1021	@ 0x3fd
10020450:	6023      	str	r3, [r4, #0]
10020452:	e7e3      	b.n	1002041c <__submore+0x34>
10020454:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10020458:	e7e1      	b.n	1002041e <__submore+0x36>
1002045a:	bf00      	nop

1002045c <abort>:
1002045c:	b508      	push	{r3, lr}
1002045e:	2006      	movs	r0, #6
10020460:	f000 f804 	bl	1002046c <raise>
10020464:	2001      	movs	r0, #1
10020466:	f000 f855 	bl	10020514 <_exit>
1002046a:	bf00      	nop

1002046c <raise>:
1002046c:	b538      	push	{r3, r4, r5, lr}
1002046e:	4b14      	ldr	r3, [pc, #80]	@ (100204c0 <raise+0x54>)
10020470:	281f      	cmp	r0, #31
10020472:	681d      	ldr	r5, [r3, #0]
10020474:	d81e      	bhi.n	100204b4 <raise+0x48>
10020476:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
1002047a:	4604      	mov	r4, r0
1002047c:	b162      	cbz	r2, 10020498 <raise+0x2c>
1002047e:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
10020482:	b14b      	cbz	r3, 10020498 <raise+0x2c>
10020484:	2b01      	cmp	r3, #1
10020486:	d005      	beq.n	10020494 <raise+0x28>
10020488:	1c59      	adds	r1, r3, #1
1002048a:	d00f      	beq.n	100204ac <raise+0x40>
1002048c:	2100      	movs	r1, #0
1002048e:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
10020492:	4798      	blx	r3
10020494:	2000      	movs	r0, #0
10020496:	bd38      	pop	{r3, r4, r5, pc}
10020498:	4628      	mov	r0, r5
1002049a:	f000 f829 	bl	100204f0 <_getpid_r>
1002049e:	4622      	mov	r2, r4
100204a0:	4601      	mov	r1, r0
100204a2:	4628      	mov	r0, r5
100204a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100204a8:	f000 b80c 	b.w	100204c4 <_kill_r>
100204ac:	2316      	movs	r3, #22
100204ae:	602b      	str	r3, [r5, #0]
100204b0:	2001      	movs	r0, #1
100204b2:	bd38      	pop	{r3, r4, r5, pc}
100204b4:	2316      	movs	r3, #22
100204b6:	602b      	str	r3, [r5, #0]
100204b8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100204bc:	bd38      	pop	{r3, r4, r5, pc}
100204be:	bf00      	nop
100204c0:	20000598 	.word	0x20000598

100204c4 <_kill_r>:
100204c4:	b570      	push	{r4, r5, r6, lr}
100204c6:	460c      	mov	r4, r1
100204c8:	4d08      	ldr	r5, [pc, #32]	@ (100204ec <_kill_r+0x28>)
100204ca:	4603      	mov	r3, r0
100204cc:	2600      	movs	r6, #0
100204ce:	4620      	mov	r0, r4
100204d0:	4611      	mov	r1, r2
100204d2:	461c      	mov	r4, r3
100204d4:	602e      	str	r6, [r5, #0]
100204d6:	f000 f815 	bl	10020504 <_kill>
100204da:	1c43      	adds	r3, r0, #1
100204dc:	d000      	beq.n	100204e0 <_kill_r+0x1c>
100204de:	bd70      	pop	{r4, r5, r6, pc}
100204e0:	682b      	ldr	r3, [r5, #0]
100204e2:	2b00      	cmp	r3, #0
100204e4:	d0fb      	beq.n	100204de <_kill_r+0x1a>
100204e6:	6023      	str	r3, [r4, #0]
100204e8:	bd70      	pop	{r4, r5, r6, pc}
100204ea:	bf00      	nop
100204ec:	200015c4 	.word	0x200015c4

100204f0 <_getpid_r>:
100204f0:	f000 b800 	b.w	100204f4 <_getpid>

100204f4 <_getpid>:
100204f4:	4b02      	ldr	r3, [pc, #8]	@ (10020500 <_getpid+0xc>)
100204f6:	2258      	movs	r2, #88	@ 0x58
100204f8:	601a      	str	r2, [r3, #0]
100204fa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100204fe:	4770      	bx	lr
10020500:	200015c4 	.word	0x200015c4

10020504 <_kill>:
10020504:	4b02      	ldr	r3, [pc, #8]	@ (10020510 <_kill+0xc>)
10020506:	2258      	movs	r2, #88	@ 0x58
10020508:	601a      	str	r2, [r3, #0]
1002050a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1002050e:	4770      	bx	lr
10020510:	200015c4 	.word	0x200015c4

10020514 <_exit>:
10020514:	e7fe      	b.n	10020514 <_exit>
10020516:	bf00      	nop

10020518 <__aeabi_drsub>:
10020518:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
1002051c:	e002      	b.n	10020524 <__adddf3>
1002051e:	bf00      	nop

10020520 <__aeabi_dsub>:
10020520:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

10020524 <__adddf3>:
10020524:	b530      	push	{r4, r5, lr}
10020526:	ea4f 0441 	mov.w	r4, r1, lsl #1
1002052a:	ea4f 0543 	mov.w	r5, r3, lsl #1
1002052e:	ea94 0f05 	teq	r4, r5
10020532:	bf08      	it	eq
10020534:	ea90 0f02 	teqeq	r0, r2
10020538:	bf1f      	itttt	ne
1002053a:	ea54 0c00 	orrsne.w	ip, r4, r0
1002053e:	ea55 0c02 	orrsne.w	ip, r5, r2
10020542:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10020546:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1002054a:	f000 80e2 	beq.w	10020712 <__adddf3+0x1ee>
1002054e:	ea4f 5454 	mov.w	r4, r4, lsr #21
10020552:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10020556:	bfb8      	it	lt
10020558:	426d      	neglt	r5, r5
1002055a:	dd0c      	ble.n	10020576 <__adddf3+0x52>
1002055c:	442c      	add	r4, r5
1002055e:	ea80 0202 	eor.w	r2, r0, r2
10020562:	ea81 0303 	eor.w	r3, r1, r3
10020566:	ea82 0000 	eor.w	r0, r2, r0
1002056a:	ea83 0101 	eor.w	r1, r3, r1
1002056e:	ea80 0202 	eor.w	r2, r0, r2
10020572:	ea81 0303 	eor.w	r3, r1, r3
10020576:	2d36      	cmp	r5, #54	@ 0x36
10020578:	bf88      	it	hi
1002057a:	bd30      	pophi	{r4, r5, pc}
1002057c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
10020580:	ea4f 3101 	mov.w	r1, r1, lsl #12
10020584:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
10020588:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
1002058c:	d002      	beq.n	10020594 <__adddf3+0x70>
1002058e:	4240      	negs	r0, r0
10020590:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10020594:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
10020598:	ea4f 3303 	mov.w	r3, r3, lsl #12
1002059c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
100205a0:	d002      	beq.n	100205a8 <__adddf3+0x84>
100205a2:	4252      	negs	r2, r2
100205a4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
100205a8:	ea94 0f05 	teq	r4, r5
100205ac:	f000 80a7 	beq.w	100206fe <__adddf3+0x1da>
100205b0:	f1a4 0401 	sub.w	r4, r4, #1
100205b4:	f1d5 0e20 	rsbs	lr, r5, #32
100205b8:	db0d      	blt.n	100205d6 <__adddf3+0xb2>
100205ba:	fa02 fc0e 	lsl.w	ip, r2, lr
100205be:	fa22 f205 	lsr.w	r2, r2, r5
100205c2:	1880      	adds	r0, r0, r2
100205c4:	f141 0100 	adc.w	r1, r1, #0
100205c8:	fa03 f20e 	lsl.w	r2, r3, lr
100205cc:	1880      	adds	r0, r0, r2
100205ce:	fa43 f305 	asr.w	r3, r3, r5
100205d2:	4159      	adcs	r1, r3
100205d4:	e00e      	b.n	100205f4 <__adddf3+0xd0>
100205d6:	f1a5 0520 	sub.w	r5, r5, #32
100205da:	f10e 0e20 	add.w	lr, lr, #32
100205de:	2a01      	cmp	r2, #1
100205e0:	fa03 fc0e 	lsl.w	ip, r3, lr
100205e4:	bf28      	it	cs
100205e6:	f04c 0c02 	orrcs.w	ip, ip, #2
100205ea:	fa43 f305 	asr.w	r3, r3, r5
100205ee:	18c0      	adds	r0, r0, r3
100205f0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
100205f4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
100205f8:	d507      	bpl.n	1002060a <__adddf3+0xe6>
100205fa:	f04f 0e00 	mov.w	lr, #0
100205fe:	f1dc 0c00 	rsbs	ip, ip, #0
10020602:	eb7e 0000 	sbcs.w	r0, lr, r0
10020606:	eb6e 0101 	sbc.w	r1, lr, r1
1002060a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
1002060e:	d31b      	bcc.n	10020648 <__adddf3+0x124>
10020610:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
10020614:	d30c      	bcc.n	10020630 <__adddf3+0x10c>
10020616:	0849      	lsrs	r1, r1, #1
10020618:	ea5f 0030 	movs.w	r0, r0, rrx
1002061c:	ea4f 0c3c 	mov.w	ip, ip, rrx
10020620:	f104 0401 	add.w	r4, r4, #1
10020624:	ea4f 5244 	mov.w	r2, r4, lsl #21
10020628:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
1002062c:	f080 809a 	bcs.w	10020764 <__adddf3+0x240>
10020630:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
10020634:	bf08      	it	eq
10020636:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1002063a:	f150 0000 	adcs.w	r0, r0, #0
1002063e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10020642:	ea41 0105 	orr.w	r1, r1, r5
10020646:	bd30      	pop	{r4, r5, pc}
10020648:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1002064c:	4140      	adcs	r0, r0
1002064e:	eb41 0101 	adc.w	r1, r1, r1
10020652:	3c01      	subs	r4, #1
10020654:	bf28      	it	cs
10020656:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
1002065a:	d2e9      	bcs.n	10020630 <__adddf3+0x10c>
1002065c:	f091 0f00 	teq	r1, #0
10020660:	bf04      	itt	eq
10020662:	4601      	moveq	r1, r0
10020664:	2000      	moveq	r0, #0
10020666:	fab1 f381 	clz	r3, r1
1002066a:	bf08      	it	eq
1002066c:	3320      	addeq	r3, #32
1002066e:	f1a3 030b 	sub.w	r3, r3, #11
10020672:	f1b3 0220 	subs.w	r2, r3, #32
10020676:	da0c      	bge.n	10020692 <__adddf3+0x16e>
10020678:	320c      	adds	r2, #12
1002067a:	dd08      	ble.n	1002068e <__adddf3+0x16a>
1002067c:	f102 0c14 	add.w	ip, r2, #20
10020680:	f1c2 020c 	rsb	r2, r2, #12
10020684:	fa01 f00c 	lsl.w	r0, r1, ip
10020688:	fa21 f102 	lsr.w	r1, r1, r2
1002068c:	e00c      	b.n	100206a8 <__adddf3+0x184>
1002068e:	f102 0214 	add.w	r2, r2, #20
10020692:	bfd8      	it	le
10020694:	f1c2 0c20 	rsble	ip, r2, #32
10020698:	fa01 f102 	lsl.w	r1, r1, r2
1002069c:	fa20 fc0c 	lsr.w	ip, r0, ip
100206a0:	bfdc      	itt	le
100206a2:	ea41 010c 	orrle.w	r1, r1, ip
100206a6:	4090      	lslle	r0, r2
100206a8:	1ae4      	subs	r4, r4, r3
100206aa:	bfa2      	ittt	ge
100206ac:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
100206b0:	4329      	orrge	r1, r5
100206b2:	bd30      	popge	{r4, r5, pc}
100206b4:	ea6f 0404 	mvn.w	r4, r4
100206b8:	3c1f      	subs	r4, #31
100206ba:	da1c      	bge.n	100206f6 <__adddf3+0x1d2>
100206bc:	340c      	adds	r4, #12
100206be:	dc0e      	bgt.n	100206de <__adddf3+0x1ba>
100206c0:	f104 0414 	add.w	r4, r4, #20
100206c4:	f1c4 0220 	rsb	r2, r4, #32
100206c8:	fa20 f004 	lsr.w	r0, r0, r4
100206cc:	fa01 f302 	lsl.w	r3, r1, r2
100206d0:	ea40 0003 	orr.w	r0, r0, r3
100206d4:	fa21 f304 	lsr.w	r3, r1, r4
100206d8:	ea45 0103 	orr.w	r1, r5, r3
100206dc:	bd30      	pop	{r4, r5, pc}
100206de:	f1c4 040c 	rsb	r4, r4, #12
100206e2:	f1c4 0220 	rsb	r2, r4, #32
100206e6:	fa20 f002 	lsr.w	r0, r0, r2
100206ea:	fa01 f304 	lsl.w	r3, r1, r4
100206ee:	ea40 0003 	orr.w	r0, r0, r3
100206f2:	4629      	mov	r1, r5
100206f4:	bd30      	pop	{r4, r5, pc}
100206f6:	fa21 f004 	lsr.w	r0, r1, r4
100206fa:	4629      	mov	r1, r5
100206fc:	bd30      	pop	{r4, r5, pc}
100206fe:	f094 0f00 	teq	r4, #0
10020702:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
10020706:	bf06      	itte	eq
10020708:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
1002070c:	3401      	addeq	r4, #1
1002070e:	3d01      	subne	r5, #1
10020710:	e74e      	b.n	100205b0 <__adddf3+0x8c>
10020712:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10020716:	bf18      	it	ne
10020718:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1002071c:	d029      	beq.n	10020772 <__adddf3+0x24e>
1002071e:	ea94 0f05 	teq	r4, r5
10020722:	bf08      	it	eq
10020724:	ea90 0f02 	teqeq	r0, r2
10020728:	d005      	beq.n	10020736 <__adddf3+0x212>
1002072a:	ea54 0c00 	orrs.w	ip, r4, r0
1002072e:	bf04      	itt	eq
10020730:	4619      	moveq	r1, r3
10020732:	4610      	moveq	r0, r2
10020734:	bd30      	pop	{r4, r5, pc}
10020736:	ea91 0f03 	teq	r1, r3
1002073a:	bf1e      	ittt	ne
1002073c:	2100      	movne	r1, #0
1002073e:	2000      	movne	r0, #0
10020740:	bd30      	popne	{r4, r5, pc}
10020742:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10020746:	d105      	bne.n	10020754 <__adddf3+0x230>
10020748:	0040      	lsls	r0, r0, #1
1002074a:	4149      	adcs	r1, r1
1002074c:	bf28      	it	cs
1002074e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
10020752:	bd30      	pop	{r4, r5, pc}
10020754:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
10020758:	bf3c      	itt	cc
1002075a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
1002075e:	bd30      	popcc	{r4, r5, pc}
10020760:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10020764:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
10020768:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
1002076c:	f04f 0000 	mov.w	r0, #0
10020770:	bd30      	pop	{r4, r5, pc}
10020772:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10020776:	bf1a      	itte	ne
10020778:	4619      	movne	r1, r3
1002077a:	4610      	movne	r0, r2
1002077c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10020780:	bf1c      	itt	ne
10020782:	460b      	movne	r3, r1
10020784:	4602      	movne	r2, r0
10020786:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1002078a:	bf06      	itte	eq
1002078c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10020790:	ea91 0f03 	teqeq	r1, r3
10020794:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
10020798:	bd30      	pop	{r4, r5, pc}
1002079a:	bf00      	nop

1002079c <__aeabi_ui2d>:
1002079c:	f090 0f00 	teq	r0, #0
100207a0:	bf04      	itt	eq
100207a2:	2100      	moveq	r1, #0
100207a4:	4770      	bxeq	lr
100207a6:	b530      	push	{r4, r5, lr}
100207a8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
100207ac:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100207b0:	f04f 0500 	mov.w	r5, #0
100207b4:	f04f 0100 	mov.w	r1, #0
100207b8:	e750      	b.n	1002065c <__adddf3+0x138>
100207ba:	bf00      	nop

100207bc <__aeabi_i2d>:
100207bc:	f090 0f00 	teq	r0, #0
100207c0:	bf04      	itt	eq
100207c2:	2100      	moveq	r1, #0
100207c4:	4770      	bxeq	lr
100207c6:	b530      	push	{r4, r5, lr}
100207c8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
100207cc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100207d0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
100207d4:	bf48      	it	mi
100207d6:	4240      	negmi	r0, r0
100207d8:	f04f 0100 	mov.w	r1, #0
100207dc:	e73e      	b.n	1002065c <__adddf3+0x138>
100207de:	bf00      	nop

100207e0 <__aeabi_f2d>:
100207e0:	0042      	lsls	r2, r0, #1
100207e2:	ea4f 01e2 	mov.w	r1, r2, asr #3
100207e6:	ea4f 0131 	mov.w	r1, r1, rrx
100207ea:	ea4f 7002 	mov.w	r0, r2, lsl #28
100207ee:	bf1f      	itttt	ne
100207f0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
100207f4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
100207f8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
100207fc:	4770      	bxne	lr
100207fe:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
10020802:	bf08      	it	eq
10020804:	4770      	bxeq	lr
10020806:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
1002080a:	bf04      	itt	eq
1002080c:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
10020810:	4770      	bxeq	lr
10020812:	b530      	push	{r4, r5, lr}
10020814:	f44f 7460 	mov.w	r4, #896	@ 0x380
10020818:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1002081c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
10020820:	e71c      	b.n	1002065c <__adddf3+0x138>
10020822:	bf00      	nop

10020824 <__aeabi_ul2d>:
10020824:	ea50 0201 	orrs.w	r2, r0, r1
10020828:	bf08      	it	eq
1002082a:	4770      	bxeq	lr
1002082c:	b530      	push	{r4, r5, lr}
1002082e:	f04f 0500 	mov.w	r5, #0
10020832:	e00a      	b.n	1002084a <__aeabi_l2d+0x16>

10020834 <__aeabi_l2d>:
10020834:	ea50 0201 	orrs.w	r2, r0, r1
10020838:	bf08      	it	eq
1002083a:	4770      	bxeq	lr
1002083c:	b530      	push	{r4, r5, lr}
1002083e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
10020842:	d502      	bpl.n	1002084a <__aeabi_l2d+0x16>
10020844:	4240      	negs	r0, r0
10020846:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1002084a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1002084e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
10020852:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10020856:	f43f aed8 	beq.w	1002060a <__adddf3+0xe6>
1002085a:	f04f 0203 	mov.w	r2, #3
1002085e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10020862:	bf18      	it	ne
10020864:	3203      	addne	r2, #3
10020866:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1002086a:	bf18      	it	ne
1002086c:	3203      	addne	r2, #3
1002086e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
10020872:	f1c2 0320 	rsb	r3, r2, #32
10020876:	fa00 fc03 	lsl.w	ip, r0, r3
1002087a:	fa20 f002 	lsr.w	r0, r0, r2
1002087e:	fa01 fe03 	lsl.w	lr, r1, r3
10020882:	ea40 000e 	orr.w	r0, r0, lr
10020886:	fa21 f102 	lsr.w	r1, r1, r2
1002088a:	4414      	add	r4, r2
1002088c:	e6bd      	b.n	1002060a <__adddf3+0xe6>
1002088e:	bf00      	nop

10020890 <__aeabi_dmul>:
10020890:	b570      	push	{r4, r5, r6, lr}
10020892:	f04f 0cff 	mov.w	ip, #255	@ 0xff
10020896:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1002089a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1002089e:	bf1d      	ittte	ne
100208a0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100208a4:	ea94 0f0c 	teqne	r4, ip
100208a8:	ea95 0f0c 	teqne	r5, ip
100208ac:	f000 f8de 	bleq	10020a6c <__aeabi_dmul+0x1dc>
100208b0:	442c      	add	r4, r5
100208b2:	ea81 0603 	eor.w	r6, r1, r3
100208b6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
100208ba:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
100208be:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
100208c2:	bf18      	it	ne
100208c4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
100208c8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
100208cc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
100208d0:	d038      	beq.n	10020944 <__aeabi_dmul+0xb4>
100208d2:	fba0 ce02 	umull	ip, lr, r0, r2
100208d6:	f04f 0500 	mov.w	r5, #0
100208da:	fbe1 e502 	umlal	lr, r5, r1, r2
100208de:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
100208e2:	fbe0 e503 	umlal	lr, r5, r0, r3
100208e6:	f04f 0600 	mov.w	r6, #0
100208ea:	fbe1 5603 	umlal	r5, r6, r1, r3
100208ee:	f09c 0f00 	teq	ip, #0
100208f2:	bf18      	it	ne
100208f4:	f04e 0e01 	orrne.w	lr, lr, #1
100208f8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
100208fc:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
10020900:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
10020904:	d204      	bcs.n	10020910 <__aeabi_dmul+0x80>
10020906:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
1002090a:	416d      	adcs	r5, r5
1002090c:	eb46 0606 	adc.w	r6, r6, r6
10020910:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10020914:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10020918:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1002091c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10020920:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10020924:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10020928:	bf88      	it	hi
1002092a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1002092e:	d81e      	bhi.n	1002096e <__aeabi_dmul+0xde>
10020930:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
10020934:	bf08      	it	eq
10020936:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1002093a:	f150 0000 	adcs.w	r0, r0, #0
1002093e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10020942:	bd70      	pop	{r4, r5, r6, pc}
10020944:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
10020948:	ea46 0101 	orr.w	r1, r6, r1
1002094c:	ea40 0002 	orr.w	r0, r0, r2
10020950:	ea81 0103 	eor.w	r1, r1, r3
10020954:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10020958:	bfc2      	ittt	gt
1002095a:	ebd4 050c 	rsbsgt	r5, r4, ip
1002095e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10020962:	bd70      	popgt	{r4, r5, r6, pc}
10020964:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10020968:	f04f 0e00 	mov.w	lr, #0
1002096c:	3c01      	subs	r4, #1
1002096e:	f300 80ab 	bgt.w	10020ac8 <__aeabi_dmul+0x238>
10020972:	f114 0f36 	cmn.w	r4, #54	@ 0x36
10020976:	bfde      	ittt	le
10020978:	2000      	movle	r0, #0
1002097a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
1002097e:	bd70      	pople	{r4, r5, r6, pc}
10020980:	f1c4 0400 	rsb	r4, r4, #0
10020984:	3c20      	subs	r4, #32
10020986:	da35      	bge.n	100209f4 <__aeabi_dmul+0x164>
10020988:	340c      	adds	r4, #12
1002098a:	dc1b      	bgt.n	100209c4 <__aeabi_dmul+0x134>
1002098c:	f104 0414 	add.w	r4, r4, #20
10020990:	f1c4 0520 	rsb	r5, r4, #32
10020994:	fa00 f305 	lsl.w	r3, r0, r5
10020998:	fa20 f004 	lsr.w	r0, r0, r4
1002099c:	fa01 f205 	lsl.w	r2, r1, r5
100209a0:	ea40 0002 	orr.w	r0, r0, r2
100209a4:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
100209a8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
100209ac:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100209b0:	fa21 f604 	lsr.w	r6, r1, r4
100209b4:	eb42 0106 	adc.w	r1, r2, r6
100209b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100209bc:	bf08      	it	eq
100209be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100209c2:	bd70      	pop	{r4, r5, r6, pc}
100209c4:	f1c4 040c 	rsb	r4, r4, #12
100209c8:	f1c4 0520 	rsb	r5, r4, #32
100209cc:	fa00 f304 	lsl.w	r3, r0, r4
100209d0:	fa20 f005 	lsr.w	r0, r0, r5
100209d4:	fa01 f204 	lsl.w	r2, r1, r4
100209d8:	ea40 0002 	orr.w	r0, r0, r2
100209dc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
100209e0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100209e4:	f141 0100 	adc.w	r1, r1, #0
100209e8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100209ec:	bf08      	it	eq
100209ee:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100209f2:	bd70      	pop	{r4, r5, r6, pc}
100209f4:	f1c4 0520 	rsb	r5, r4, #32
100209f8:	fa00 f205 	lsl.w	r2, r0, r5
100209fc:	ea4e 0e02 	orr.w	lr, lr, r2
10020a00:	fa20 f304 	lsr.w	r3, r0, r4
10020a04:	fa01 f205 	lsl.w	r2, r1, r5
10020a08:	ea43 0302 	orr.w	r3, r3, r2
10020a0c:	fa21 f004 	lsr.w	r0, r1, r4
10020a10:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10020a14:	fa21 f204 	lsr.w	r2, r1, r4
10020a18:	ea20 0002 	bic.w	r0, r0, r2
10020a1c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
10020a20:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10020a24:	bf08      	it	eq
10020a26:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10020a2a:	bd70      	pop	{r4, r5, r6, pc}
10020a2c:	f094 0f00 	teq	r4, #0
10020a30:	d10f      	bne.n	10020a52 <__aeabi_dmul+0x1c2>
10020a32:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
10020a36:	0040      	lsls	r0, r0, #1
10020a38:	eb41 0101 	adc.w	r1, r1, r1
10020a3c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10020a40:	bf08      	it	eq
10020a42:	3c01      	subeq	r4, #1
10020a44:	d0f7      	beq.n	10020a36 <__aeabi_dmul+0x1a6>
10020a46:	ea41 0106 	orr.w	r1, r1, r6
10020a4a:	f095 0f00 	teq	r5, #0
10020a4e:	bf18      	it	ne
10020a50:	4770      	bxne	lr
10020a52:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
10020a56:	0052      	lsls	r2, r2, #1
10020a58:	eb43 0303 	adc.w	r3, r3, r3
10020a5c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
10020a60:	bf08      	it	eq
10020a62:	3d01      	subeq	r5, #1
10020a64:	d0f7      	beq.n	10020a56 <__aeabi_dmul+0x1c6>
10020a66:	ea43 0306 	orr.w	r3, r3, r6
10020a6a:	4770      	bx	lr
10020a6c:	ea94 0f0c 	teq	r4, ip
10020a70:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10020a74:	bf18      	it	ne
10020a76:	ea95 0f0c 	teqne	r5, ip
10020a7a:	d00c      	beq.n	10020a96 <__aeabi_dmul+0x206>
10020a7c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10020a80:	bf18      	it	ne
10020a82:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10020a86:	d1d1      	bne.n	10020a2c <__aeabi_dmul+0x19c>
10020a88:	ea81 0103 	eor.w	r1, r1, r3
10020a8c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10020a90:	f04f 0000 	mov.w	r0, #0
10020a94:	bd70      	pop	{r4, r5, r6, pc}
10020a96:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10020a9a:	bf06      	itte	eq
10020a9c:	4610      	moveq	r0, r2
10020a9e:	4619      	moveq	r1, r3
10020aa0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10020aa4:	d019      	beq.n	10020ada <__aeabi_dmul+0x24a>
10020aa6:	ea94 0f0c 	teq	r4, ip
10020aaa:	d102      	bne.n	10020ab2 <__aeabi_dmul+0x222>
10020aac:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10020ab0:	d113      	bne.n	10020ada <__aeabi_dmul+0x24a>
10020ab2:	ea95 0f0c 	teq	r5, ip
10020ab6:	d105      	bne.n	10020ac4 <__aeabi_dmul+0x234>
10020ab8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10020abc:	bf1c      	itt	ne
10020abe:	4610      	movne	r0, r2
10020ac0:	4619      	movne	r1, r3
10020ac2:	d10a      	bne.n	10020ada <__aeabi_dmul+0x24a>
10020ac4:	ea81 0103 	eor.w	r1, r1, r3
10020ac8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10020acc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
10020ad0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
10020ad4:	f04f 0000 	mov.w	r0, #0
10020ad8:	bd70      	pop	{r4, r5, r6, pc}
10020ada:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
10020ade:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
10020ae2:	bd70      	pop	{r4, r5, r6, pc}

10020ae4 <__aeabi_ddiv>:
10020ae4:	b570      	push	{r4, r5, r6, lr}
10020ae6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
10020aea:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
10020aee:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10020af2:	bf1d      	ittte	ne
10020af4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10020af8:	ea94 0f0c 	teqne	r4, ip
10020afc:	ea95 0f0c 	teqne	r5, ip
10020b00:	f000 f8a7 	bleq	10020c52 <__aeabi_ddiv+0x16e>
10020b04:	eba4 0405 	sub.w	r4, r4, r5
10020b08:	ea81 0e03 	eor.w	lr, r1, r3
10020b0c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10020b10:	ea4f 3101 	mov.w	r1, r1, lsl #12
10020b14:	f000 8088 	beq.w	10020c28 <__aeabi_ddiv+0x144>
10020b18:	ea4f 3303 	mov.w	r3, r3, lsl #12
10020b1c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
10020b20:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10020b24:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10020b28:	ea4f 2202 	mov.w	r2, r2, lsl #8
10020b2c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
10020b30:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10020b34:	ea4f 2600 	mov.w	r6, r0, lsl #8
10020b38:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
10020b3c:	429d      	cmp	r5, r3
10020b3e:	bf08      	it	eq
10020b40:	4296      	cmpeq	r6, r2
10020b42:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
10020b46:	f504 7440 	add.w	r4, r4, #768	@ 0x300
10020b4a:	d202      	bcs.n	10020b52 <__aeabi_ddiv+0x6e>
10020b4c:	085b      	lsrs	r3, r3, #1
10020b4e:	ea4f 0232 	mov.w	r2, r2, rrx
10020b52:	1ab6      	subs	r6, r6, r2
10020b54:	eb65 0503 	sbc.w	r5, r5, r3
10020b58:	085b      	lsrs	r3, r3, #1
10020b5a:	ea4f 0232 	mov.w	r2, r2, rrx
10020b5e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
10020b62:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
10020b66:	ebb6 0e02 	subs.w	lr, r6, r2
10020b6a:	eb75 0e03 	sbcs.w	lr, r5, r3
10020b6e:	bf22      	ittt	cs
10020b70:	1ab6      	subcs	r6, r6, r2
10020b72:	4675      	movcs	r5, lr
10020b74:	ea40 000c 	orrcs.w	r0, r0, ip
10020b78:	085b      	lsrs	r3, r3, #1
10020b7a:	ea4f 0232 	mov.w	r2, r2, rrx
10020b7e:	ebb6 0e02 	subs.w	lr, r6, r2
10020b82:	eb75 0e03 	sbcs.w	lr, r5, r3
10020b86:	bf22      	ittt	cs
10020b88:	1ab6      	subcs	r6, r6, r2
10020b8a:	4675      	movcs	r5, lr
10020b8c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10020b90:	085b      	lsrs	r3, r3, #1
10020b92:	ea4f 0232 	mov.w	r2, r2, rrx
10020b96:	ebb6 0e02 	subs.w	lr, r6, r2
10020b9a:	eb75 0e03 	sbcs.w	lr, r5, r3
10020b9e:	bf22      	ittt	cs
10020ba0:	1ab6      	subcs	r6, r6, r2
10020ba2:	4675      	movcs	r5, lr
10020ba4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
10020ba8:	085b      	lsrs	r3, r3, #1
10020baa:	ea4f 0232 	mov.w	r2, r2, rrx
10020bae:	ebb6 0e02 	subs.w	lr, r6, r2
10020bb2:	eb75 0e03 	sbcs.w	lr, r5, r3
10020bb6:	bf22      	ittt	cs
10020bb8:	1ab6      	subcs	r6, r6, r2
10020bba:	4675      	movcs	r5, lr
10020bbc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10020bc0:	ea55 0e06 	orrs.w	lr, r5, r6
10020bc4:	d018      	beq.n	10020bf8 <__aeabi_ddiv+0x114>
10020bc6:	ea4f 1505 	mov.w	r5, r5, lsl #4
10020bca:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
10020bce:	ea4f 1606 	mov.w	r6, r6, lsl #4
10020bd2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
10020bd6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
10020bda:	ea4f 02c2 	mov.w	r2, r2, lsl #3
10020bde:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
10020be2:	d1c0      	bne.n	10020b66 <__aeabi_ddiv+0x82>
10020be4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10020be8:	d10b      	bne.n	10020c02 <__aeabi_ddiv+0x11e>
10020bea:	ea41 0100 	orr.w	r1, r1, r0
10020bee:	f04f 0000 	mov.w	r0, #0
10020bf2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
10020bf6:	e7b6      	b.n	10020b66 <__aeabi_ddiv+0x82>
10020bf8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10020bfc:	bf04      	itt	eq
10020bfe:	4301      	orreq	r1, r0
10020c00:	2000      	moveq	r0, #0
10020c02:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10020c06:	bf88      	it	hi
10020c08:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
10020c0c:	f63f aeaf 	bhi.w	1002096e <__aeabi_dmul+0xde>
10020c10:	ebb5 0c03 	subs.w	ip, r5, r3
10020c14:	bf04      	itt	eq
10020c16:	ebb6 0c02 	subseq.w	ip, r6, r2
10020c1a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10020c1e:	f150 0000 	adcs.w	r0, r0, #0
10020c22:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10020c26:	bd70      	pop	{r4, r5, r6, pc}
10020c28:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
10020c2c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10020c30:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10020c34:	bfc2      	ittt	gt
10020c36:	ebd4 050c 	rsbsgt	r5, r4, ip
10020c3a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10020c3e:	bd70      	popgt	{r4, r5, r6, pc}
10020c40:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10020c44:	f04f 0e00 	mov.w	lr, #0
10020c48:	3c01      	subs	r4, #1
10020c4a:	e690      	b.n	1002096e <__aeabi_dmul+0xde>
10020c4c:	ea45 0e06 	orr.w	lr, r5, r6
10020c50:	e68d      	b.n	1002096e <__aeabi_dmul+0xde>
10020c52:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10020c56:	ea94 0f0c 	teq	r4, ip
10020c5a:	bf08      	it	eq
10020c5c:	ea95 0f0c 	teqeq	r5, ip
10020c60:	f43f af3b 	beq.w	10020ada <__aeabi_dmul+0x24a>
10020c64:	ea94 0f0c 	teq	r4, ip
10020c68:	d10a      	bne.n	10020c80 <__aeabi_ddiv+0x19c>
10020c6a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10020c6e:	f47f af34 	bne.w	10020ada <__aeabi_dmul+0x24a>
10020c72:	ea95 0f0c 	teq	r5, ip
10020c76:	f47f af25 	bne.w	10020ac4 <__aeabi_dmul+0x234>
10020c7a:	4610      	mov	r0, r2
10020c7c:	4619      	mov	r1, r3
10020c7e:	e72c      	b.n	10020ada <__aeabi_dmul+0x24a>
10020c80:	ea95 0f0c 	teq	r5, ip
10020c84:	d106      	bne.n	10020c94 <__aeabi_ddiv+0x1b0>
10020c86:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10020c8a:	f43f aefd 	beq.w	10020a88 <__aeabi_dmul+0x1f8>
10020c8e:	4610      	mov	r0, r2
10020c90:	4619      	mov	r1, r3
10020c92:	e722      	b.n	10020ada <__aeabi_dmul+0x24a>
10020c94:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10020c98:	bf18      	it	ne
10020c9a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10020c9e:	f47f aec5 	bne.w	10020a2c <__aeabi_dmul+0x19c>
10020ca2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10020ca6:	f47f af0d 	bne.w	10020ac4 <__aeabi_dmul+0x234>
10020caa:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10020cae:	f47f aeeb 	bne.w	10020a88 <__aeabi_dmul+0x1f8>
10020cb2:	e712      	b.n	10020ada <__aeabi_dmul+0x24a>

10020cb4 <__gedf2>:
10020cb4:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
10020cb8:	e006      	b.n	10020cc8 <__cmpdf2+0x4>
10020cba:	bf00      	nop

10020cbc <__ledf2>:
10020cbc:	f04f 0c01 	mov.w	ip, #1
10020cc0:	e002      	b.n	10020cc8 <__cmpdf2+0x4>
10020cc2:	bf00      	nop

10020cc4 <__cmpdf2>:
10020cc4:	f04f 0c01 	mov.w	ip, #1
10020cc8:	f84d cd04 	str.w	ip, [sp, #-4]!
10020ccc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10020cd0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020cd4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10020cd8:	bf18      	it	ne
10020cda:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
10020cde:	d01b      	beq.n	10020d18 <__cmpdf2+0x54>
10020ce0:	b001      	add	sp, #4
10020ce2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10020ce6:	bf0c      	ite	eq
10020ce8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
10020cec:	ea91 0f03 	teqne	r1, r3
10020cf0:	bf02      	ittt	eq
10020cf2:	ea90 0f02 	teqeq	r0, r2
10020cf6:	2000      	moveq	r0, #0
10020cf8:	4770      	bxeq	lr
10020cfa:	f110 0f00 	cmn.w	r0, #0
10020cfe:	ea91 0f03 	teq	r1, r3
10020d02:	bf58      	it	pl
10020d04:	4299      	cmppl	r1, r3
10020d06:	bf08      	it	eq
10020d08:	4290      	cmpeq	r0, r2
10020d0a:	bf2c      	ite	cs
10020d0c:	17d8      	asrcs	r0, r3, #31
10020d0e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10020d12:	f040 0001 	orr.w	r0, r0, #1
10020d16:	4770      	bx	lr
10020d18:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10020d1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020d20:	d102      	bne.n	10020d28 <__cmpdf2+0x64>
10020d22:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10020d26:	d107      	bne.n	10020d38 <__cmpdf2+0x74>
10020d28:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10020d2c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020d30:	d1d6      	bne.n	10020ce0 <__cmpdf2+0x1c>
10020d32:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10020d36:	d0d3      	beq.n	10020ce0 <__cmpdf2+0x1c>
10020d38:	f85d 0b04 	ldr.w	r0, [sp], #4
10020d3c:	4770      	bx	lr
10020d3e:	bf00      	nop

10020d40 <__aeabi_cdrcmple>:
10020d40:	4684      	mov	ip, r0
10020d42:	4610      	mov	r0, r2
10020d44:	4662      	mov	r2, ip
10020d46:	468c      	mov	ip, r1
10020d48:	4619      	mov	r1, r3
10020d4a:	4663      	mov	r3, ip
10020d4c:	e000      	b.n	10020d50 <__aeabi_cdcmpeq>
10020d4e:	bf00      	nop

10020d50 <__aeabi_cdcmpeq>:
10020d50:	b501      	push	{r0, lr}
10020d52:	f7ff ffb7 	bl	10020cc4 <__cmpdf2>
10020d56:	2800      	cmp	r0, #0
10020d58:	bf48      	it	mi
10020d5a:	f110 0f00 	cmnmi.w	r0, #0
10020d5e:	bd01      	pop	{r0, pc}

10020d60 <__aeabi_dcmpeq>:
10020d60:	f84d ed08 	str.w	lr, [sp, #-8]!
10020d64:	f7ff fff4 	bl	10020d50 <__aeabi_cdcmpeq>
10020d68:	bf0c      	ite	eq
10020d6a:	2001      	moveq	r0, #1
10020d6c:	2000      	movne	r0, #0
10020d6e:	f85d fb08 	ldr.w	pc, [sp], #8
10020d72:	bf00      	nop

10020d74 <__aeabi_dcmplt>:
10020d74:	f84d ed08 	str.w	lr, [sp, #-8]!
10020d78:	f7ff ffea 	bl	10020d50 <__aeabi_cdcmpeq>
10020d7c:	bf34      	ite	cc
10020d7e:	2001      	movcc	r0, #1
10020d80:	2000      	movcs	r0, #0
10020d82:	f85d fb08 	ldr.w	pc, [sp], #8
10020d86:	bf00      	nop

10020d88 <__aeabi_dcmple>:
10020d88:	f84d ed08 	str.w	lr, [sp, #-8]!
10020d8c:	f7ff ffe0 	bl	10020d50 <__aeabi_cdcmpeq>
10020d90:	bf94      	ite	ls
10020d92:	2001      	movls	r0, #1
10020d94:	2000      	movhi	r0, #0
10020d96:	f85d fb08 	ldr.w	pc, [sp], #8
10020d9a:	bf00      	nop

10020d9c <__aeabi_dcmpge>:
10020d9c:	f84d ed08 	str.w	lr, [sp, #-8]!
10020da0:	f7ff ffce 	bl	10020d40 <__aeabi_cdrcmple>
10020da4:	bf94      	ite	ls
10020da6:	2001      	movls	r0, #1
10020da8:	2000      	movhi	r0, #0
10020daa:	f85d fb08 	ldr.w	pc, [sp], #8
10020dae:	bf00      	nop

10020db0 <__aeabi_dcmpgt>:
10020db0:	f84d ed08 	str.w	lr, [sp, #-8]!
10020db4:	f7ff ffc4 	bl	10020d40 <__aeabi_cdrcmple>
10020db8:	bf34      	ite	cc
10020dba:	2001      	movcc	r0, #1
10020dbc:	2000      	movcs	r0, #0
10020dbe:	f85d fb08 	ldr.w	pc, [sp], #8
10020dc2:	bf00      	nop

10020dc4 <__aeabi_dcmpun>:
10020dc4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10020dc8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020dcc:	d102      	bne.n	10020dd4 <__aeabi_dcmpun+0x10>
10020dce:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10020dd2:	d10a      	bne.n	10020dea <__aeabi_dcmpun+0x26>
10020dd4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10020dd8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020ddc:	d102      	bne.n	10020de4 <__aeabi_dcmpun+0x20>
10020dde:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10020de2:	d102      	bne.n	10020dea <__aeabi_dcmpun+0x26>
10020de4:	f04f 0000 	mov.w	r0, #0
10020de8:	4770      	bx	lr
10020dea:	f04f 0001 	mov.w	r0, #1
10020dee:	4770      	bx	lr

10020df0 <__aeabi_d2iz>:
10020df0:	ea4f 0241 	mov.w	r2, r1, lsl #1
10020df4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
10020df8:	d215      	bcs.n	10020e26 <__aeabi_d2iz+0x36>
10020dfa:	d511      	bpl.n	10020e20 <__aeabi_d2iz+0x30>
10020dfc:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10020e00:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10020e04:	d912      	bls.n	10020e2c <__aeabi_d2iz+0x3c>
10020e06:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10020e0a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10020e0e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10020e12:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
10020e16:	fa23 f002 	lsr.w	r0, r3, r2
10020e1a:	bf18      	it	ne
10020e1c:	4240      	negne	r0, r0
10020e1e:	4770      	bx	lr
10020e20:	f04f 0000 	mov.w	r0, #0
10020e24:	4770      	bx	lr
10020e26:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10020e2a:	d105      	bne.n	10020e38 <__aeabi_d2iz+0x48>
10020e2c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
10020e30:	bf08      	it	eq
10020e32:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
10020e36:	4770      	bx	lr
10020e38:	f04f 0000 	mov.w	r0, #0
10020e3c:	4770      	bx	lr
10020e3e:	bf00      	nop

10020e40 <__aeabi_d2uiz>:
10020e40:	004a      	lsls	r2, r1, #1
10020e42:	d211      	bcs.n	10020e68 <__aeabi_d2uiz+0x28>
10020e44:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
10020e48:	d211      	bcs.n	10020e6e <__aeabi_d2uiz+0x2e>
10020e4a:	d50d      	bpl.n	10020e68 <__aeabi_d2uiz+0x28>
10020e4c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10020e50:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10020e54:	d40e      	bmi.n	10020e74 <__aeabi_d2uiz+0x34>
10020e56:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10020e5a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10020e5e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10020e62:	fa23 f002 	lsr.w	r0, r3, r2
10020e66:	4770      	bx	lr
10020e68:	f04f 0000 	mov.w	r0, #0
10020e6c:	4770      	bx	lr
10020e6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10020e72:	d102      	bne.n	10020e7a <__aeabi_d2uiz+0x3a>
10020e74:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10020e78:	4770      	bx	lr
10020e7a:	f04f 0000 	mov.w	r0, #0
10020e7e:	4770      	bx	lr

10020e80 <__aeabi_d2f>:
10020e80:	ea4f 0241 	mov.w	r2, r1, lsl #1
10020e84:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
10020e88:	bf24      	itt	cs
10020e8a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
10020e8e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
10020e92:	d90d      	bls.n	10020eb0 <__aeabi_d2f+0x30>
10020e94:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
10020e98:	ea4f 02c0 	mov.w	r2, r0, lsl #3
10020e9c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
10020ea0:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
10020ea4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
10020ea8:	bf08      	it	eq
10020eaa:	f020 0001 	biceq.w	r0, r0, #1
10020eae:	4770      	bx	lr
10020eb0:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
10020eb4:	d121      	bne.n	10020efa <__aeabi_d2f+0x7a>
10020eb6:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
10020eba:	bfbc      	itt	lt
10020ebc:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
10020ec0:	4770      	bxlt	lr
10020ec2:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10020ec6:	ea4f 5252 	mov.w	r2, r2, lsr #21
10020eca:	f1c2 0218 	rsb	r2, r2, #24
10020ece:	f1c2 0c20 	rsb	ip, r2, #32
10020ed2:	fa10 f30c 	lsls.w	r3, r0, ip
10020ed6:	fa20 f002 	lsr.w	r0, r0, r2
10020eda:	bf18      	it	ne
10020edc:	f040 0001 	orrne.w	r0, r0, #1
10020ee0:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10020ee4:	ea4f 23d3 	mov.w	r3, r3, lsr #11
10020ee8:	fa03 fc0c 	lsl.w	ip, r3, ip
10020eec:	ea40 000c 	orr.w	r0, r0, ip
10020ef0:	fa23 f302 	lsr.w	r3, r3, r2
10020ef4:	ea4f 0343 	mov.w	r3, r3, lsl #1
10020ef8:	e7cc      	b.n	10020e94 <__aeabi_d2f+0x14>
10020efa:	ea7f 5362 	mvns.w	r3, r2, asr #21
10020efe:	d107      	bne.n	10020f10 <__aeabi_d2f+0x90>
10020f00:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
10020f04:	bf1e      	ittt	ne
10020f06:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
10020f0a:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
10020f0e:	4770      	bxne	lr
10020f10:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
10020f14:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
10020f18:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
10020f1c:	4770      	bx	lr
10020f1e:	bf00      	nop

10020f20 <__aeabi_uldivmod>:
10020f20:	b953      	cbnz	r3, 10020f38 <__aeabi_uldivmod+0x18>
10020f22:	b94a      	cbnz	r2, 10020f38 <__aeabi_uldivmod+0x18>
10020f24:	2900      	cmp	r1, #0
10020f26:	bf08      	it	eq
10020f28:	2800      	cmpeq	r0, #0
10020f2a:	bf1c      	itt	ne
10020f2c:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
10020f30:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
10020f34:	f000 b9a0 	b.w	10021278 <__aeabi_idiv0>
10020f38:	f1ad 0c08 	sub.w	ip, sp, #8
10020f3c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10020f40:	f000 f83c 	bl	10020fbc <__udivmoddi4>
10020f44:	f8dd e004 	ldr.w	lr, [sp, #4]
10020f48:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10020f4c:	b004      	add	sp, #16
10020f4e:	4770      	bx	lr

10020f50 <__aeabi_d2lz>:
10020f50:	b538      	push	{r3, r4, r5, lr}
10020f52:	2200      	movs	r2, #0
10020f54:	2300      	movs	r3, #0
10020f56:	4604      	mov	r4, r0
10020f58:	460d      	mov	r5, r1
10020f5a:	f7ff ff0b 	bl	10020d74 <__aeabi_dcmplt>
10020f5e:	b928      	cbnz	r0, 10020f6c <__aeabi_d2lz+0x1c>
10020f60:	4620      	mov	r0, r4
10020f62:	4629      	mov	r1, r5
10020f64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10020f68:	f000 b80a 	b.w	10020f80 <__aeabi_d2ulz>
10020f6c:	4620      	mov	r0, r4
10020f6e:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
10020f72:	f000 f805 	bl	10020f80 <__aeabi_d2ulz>
10020f76:	4240      	negs	r0, r0
10020f78:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10020f7c:	bd38      	pop	{r3, r4, r5, pc}
10020f7e:	bf00      	nop

10020f80 <__aeabi_d2ulz>:
10020f80:	b5d0      	push	{r4, r6, r7, lr}
10020f82:	4b0c      	ldr	r3, [pc, #48]	@ (10020fb4 <__aeabi_d2ulz+0x34>)
10020f84:	2200      	movs	r2, #0
10020f86:	4606      	mov	r6, r0
10020f88:	460f      	mov	r7, r1
10020f8a:	f7ff fc81 	bl	10020890 <__aeabi_dmul>
10020f8e:	f7ff ff57 	bl	10020e40 <__aeabi_d2uiz>
10020f92:	4604      	mov	r4, r0
10020f94:	f7ff fc02 	bl	1002079c <__aeabi_ui2d>
10020f98:	4b07      	ldr	r3, [pc, #28]	@ (10020fb8 <__aeabi_d2ulz+0x38>)
10020f9a:	2200      	movs	r2, #0
10020f9c:	f7ff fc78 	bl	10020890 <__aeabi_dmul>
10020fa0:	4602      	mov	r2, r0
10020fa2:	460b      	mov	r3, r1
10020fa4:	4630      	mov	r0, r6
10020fa6:	4639      	mov	r1, r7
10020fa8:	f7ff faba 	bl	10020520 <__aeabi_dsub>
10020fac:	f7ff ff48 	bl	10020e40 <__aeabi_d2uiz>
10020fb0:	4621      	mov	r1, r4
10020fb2:	bdd0      	pop	{r4, r6, r7, pc}
10020fb4:	3df00000 	.word	0x3df00000
10020fb8:	41f00000 	.word	0x41f00000

10020fbc <__udivmoddi4>:
10020fbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10020fc0:	9d08      	ldr	r5, [sp, #32]
10020fc2:	460c      	mov	r4, r1
10020fc4:	2b00      	cmp	r3, #0
10020fc6:	d14e      	bne.n	10021066 <__udivmoddi4+0xaa>
10020fc8:	4694      	mov	ip, r2
10020fca:	458c      	cmp	ip, r1
10020fcc:	4686      	mov	lr, r0
10020fce:	fab2 f282 	clz	r2, r2
10020fd2:	d962      	bls.n	1002109a <__udivmoddi4+0xde>
10020fd4:	b14a      	cbz	r2, 10020fea <__udivmoddi4+0x2e>
10020fd6:	f1c2 0320 	rsb	r3, r2, #32
10020fda:	4091      	lsls	r1, r2
10020fdc:	fa20 f303 	lsr.w	r3, r0, r3
10020fe0:	fa0c fc02 	lsl.w	ip, ip, r2
10020fe4:	4319      	orrs	r1, r3
10020fe6:	fa00 fe02 	lsl.w	lr, r0, r2
10020fea:	ea4f 471c 	mov.w	r7, ip, lsr #16
10020fee:	fa1f f68c 	uxth.w	r6, ip
10020ff2:	fbb1 f4f7 	udiv	r4, r1, r7
10020ff6:	ea4f 431e 	mov.w	r3, lr, lsr #16
10020ffa:	fb07 1114 	mls	r1, r7, r4, r1
10020ffe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10021002:	fb04 f106 	mul.w	r1, r4, r6
10021006:	4299      	cmp	r1, r3
10021008:	d90a      	bls.n	10021020 <__udivmoddi4+0x64>
1002100a:	eb1c 0303 	adds.w	r3, ip, r3
1002100e:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
10021012:	f080 8112 	bcs.w	1002123a <__udivmoddi4+0x27e>
10021016:	4299      	cmp	r1, r3
10021018:	f240 810f 	bls.w	1002123a <__udivmoddi4+0x27e>
1002101c:	3c02      	subs	r4, #2
1002101e:	4463      	add	r3, ip
10021020:	1a59      	subs	r1, r3, r1
10021022:	fa1f f38e 	uxth.w	r3, lr
10021026:	fbb1 f0f7 	udiv	r0, r1, r7
1002102a:	fb07 1110 	mls	r1, r7, r0, r1
1002102e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10021032:	fb00 f606 	mul.w	r6, r0, r6
10021036:	429e      	cmp	r6, r3
10021038:	d90a      	bls.n	10021050 <__udivmoddi4+0x94>
1002103a:	eb1c 0303 	adds.w	r3, ip, r3
1002103e:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
10021042:	f080 80fc 	bcs.w	1002123e <__udivmoddi4+0x282>
10021046:	429e      	cmp	r6, r3
10021048:	f240 80f9 	bls.w	1002123e <__udivmoddi4+0x282>
1002104c:	4463      	add	r3, ip
1002104e:	3802      	subs	r0, #2
10021050:	1b9b      	subs	r3, r3, r6
10021052:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
10021056:	2100      	movs	r1, #0
10021058:	b11d      	cbz	r5, 10021062 <__udivmoddi4+0xa6>
1002105a:	40d3      	lsrs	r3, r2
1002105c:	2200      	movs	r2, #0
1002105e:	e9c5 3200 	strd	r3, r2, [r5]
10021062:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10021066:	428b      	cmp	r3, r1
10021068:	d905      	bls.n	10021076 <__udivmoddi4+0xba>
1002106a:	b10d      	cbz	r5, 10021070 <__udivmoddi4+0xb4>
1002106c:	e9c5 0100 	strd	r0, r1, [r5]
10021070:	2100      	movs	r1, #0
10021072:	4608      	mov	r0, r1
10021074:	e7f5      	b.n	10021062 <__udivmoddi4+0xa6>
10021076:	fab3 f183 	clz	r1, r3
1002107a:	2900      	cmp	r1, #0
1002107c:	d146      	bne.n	1002110c <__udivmoddi4+0x150>
1002107e:	42a3      	cmp	r3, r4
10021080:	d302      	bcc.n	10021088 <__udivmoddi4+0xcc>
10021082:	4290      	cmp	r0, r2
10021084:	f0c0 80f0 	bcc.w	10021268 <__udivmoddi4+0x2ac>
10021088:	1a86      	subs	r6, r0, r2
1002108a:	eb64 0303 	sbc.w	r3, r4, r3
1002108e:	2001      	movs	r0, #1
10021090:	2d00      	cmp	r5, #0
10021092:	d0e6      	beq.n	10021062 <__udivmoddi4+0xa6>
10021094:	e9c5 6300 	strd	r6, r3, [r5]
10021098:	e7e3      	b.n	10021062 <__udivmoddi4+0xa6>
1002109a:	2a00      	cmp	r2, #0
1002109c:	f040 8090 	bne.w	100211c0 <__udivmoddi4+0x204>
100210a0:	eba1 040c 	sub.w	r4, r1, ip
100210a4:	ea4f 481c 	mov.w	r8, ip, lsr #16
100210a8:	fa1f f78c 	uxth.w	r7, ip
100210ac:	2101      	movs	r1, #1
100210ae:	fbb4 f6f8 	udiv	r6, r4, r8
100210b2:	ea4f 431e 	mov.w	r3, lr, lsr #16
100210b6:	fb08 4416 	mls	r4, r8, r6, r4
100210ba:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
100210be:	fb07 f006 	mul.w	r0, r7, r6
100210c2:	4298      	cmp	r0, r3
100210c4:	d908      	bls.n	100210d8 <__udivmoddi4+0x11c>
100210c6:	eb1c 0303 	adds.w	r3, ip, r3
100210ca:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
100210ce:	d202      	bcs.n	100210d6 <__udivmoddi4+0x11a>
100210d0:	4298      	cmp	r0, r3
100210d2:	f200 80cd 	bhi.w	10021270 <__udivmoddi4+0x2b4>
100210d6:	4626      	mov	r6, r4
100210d8:	1a1c      	subs	r4, r3, r0
100210da:	fa1f f38e 	uxth.w	r3, lr
100210de:	fbb4 f0f8 	udiv	r0, r4, r8
100210e2:	fb08 4410 	mls	r4, r8, r0, r4
100210e6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
100210ea:	fb00 f707 	mul.w	r7, r0, r7
100210ee:	429f      	cmp	r7, r3
100210f0:	d908      	bls.n	10021104 <__udivmoddi4+0x148>
100210f2:	eb1c 0303 	adds.w	r3, ip, r3
100210f6:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
100210fa:	d202      	bcs.n	10021102 <__udivmoddi4+0x146>
100210fc:	429f      	cmp	r7, r3
100210fe:	f200 80b0 	bhi.w	10021262 <__udivmoddi4+0x2a6>
10021102:	4620      	mov	r0, r4
10021104:	1bdb      	subs	r3, r3, r7
10021106:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
1002110a:	e7a5      	b.n	10021058 <__udivmoddi4+0x9c>
1002110c:	f1c1 0620 	rsb	r6, r1, #32
10021110:	408b      	lsls	r3, r1
10021112:	fa22 f706 	lsr.w	r7, r2, r6
10021116:	431f      	orrs	r7, r3
10021118:	fa20 fc06 	lsr.w	ip, r0, r6
1002111c:	fa04 f301 	lsl.w	r3, r4, r1
10021120:	ea43 030c 	orr.w	r3, r3, ip
10021124:	40f4      	lsrs	r4, r6
10021126:	fa00 f801 	lsl.w	r8, r0, r1
1002112a:	0c38      	lsrs	r0, r7, #16
1002112c:	ea4f 4913 	mov.w	r9, r3, lsr #16
10021130:	fbb4 fef0 	udiv	lr, r4, r0
10021134:	fa1f fc87 	uxth.w	ip, r7
10021138:	fb00 441e 	mls	r4, r0, lr, r4
1002113c:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10021140:	fb0e f90c 	mul.w	r9, lr, ip
10021144:	45a1      	cmp	r9, r4
10021146:	fa02 f201 	lsl.w	r2, r2, r1
1002114a:	d90a      	bls.n	10021162 <__udivmoddi4+0x1a6>
1002114c:	193c      	adds	r4, r7, r4
1002114e:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
10021152:	f080 8084 	bcs.w	1002125e <__udivmoddi4+0x2a2>
10021156:	45a1      	cmp	r9, r4
10021158:	f240 8081 	bls.w	1002125e <__udivmoddi4+0x2a2>
1002115c:	f1ae 0e02 	sub.w	lr, lr, #2
10021160:	443c      	add	r4, r7
10021162:	eba4 0409 	sub.w	r4, r4, r9
10021166:	fa1f f983 	uxth.w	r9, r3
1002116a:	fbb4 f3f0 	udiv	r3, r4, r0
1002116e:	fb00 4413 	mls	r4, r0, r3, r4
10021172:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10021176:	fb03 fc0c 	mul.w	ip, r3, ip
1002117a:	45a4      	cmp	ip, r4
1002117c:	d907      	bls.n	1002118e <__udivmoddi4+0x1d2>
1002117e:	193c      	adds	r4, r7, r4
10021180:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
10021184:	d267      	bcs.n	10021256 <__udivmoddi4+0x29a>
10021186:	45a4      	cmp	ip, r4
10021188:	d965      	bls.n	10021256 <__udivmoddi4+0x29a>
1002118a:	3b02      	subs	r3, #2
1002118c:	443c      	add	r4, r7
1002118e:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
10021192:	fba0 9302 	umull	r9, r3, r0, r2
10021196:	eba4 040c 	sub.w	r4, r4, ip
1002119a:	429c      	cmp	r4, r3
1002119c:	46ce      	mov	lr, r9
1002119e:	469c      	mov	ip, r3
100211a0:	d351      	bcc.n	10021246 <__udivmoddi4+0x28a>
100211a2:	d04e      	beq.n	10021242 <__udivmoddi4+0x286>
100211a4:	b155      	cbz	r5, 100211bc <__udivmoddi4+0x200>
100211a6:	ebb8 030e 	subs.w	r3, r8, lr
100211aa:	eb64 040c 	sbc.w	r4, r4, ip
100211ae:	fa04 f606 	lsl.w	r6, r4, r6
100211b2:	40cb      	lsrs	r3, r1
100211b4:	431e      	orrs	r6, r3
100211b6:	40cc      	lsrs	r4, r1
100211b8:	e9c5 6400 	strd	r6, r4, [r5]
100211bc:	2100      	movs	r1, #0
100211be:	e750      	b.n	10021062 <__udivmoddi4+0xa6>
100211c0:	f1c2 0320 	rsb	r3, r2, #32
100211c4:	fa20 f103 	lsr.w	r1, r0, r3
100211c8:	fa0c fc02 	lsl.w	ip, ip, r2
100211cc:	fa24 f303 	lsr.w	r3, r4, r3
100211d0:	4094      	lsls	r4, r2
100211d2:	430c      	orrs	r4, r1
100211d4:	ea4f 481c 	mov.w	r8, ip, lsr #16
100211d8:	fa00 fe02 	lsl.w	lr, r0, r2
100211dc:	fa1f f78c 	uxth.w	r7, ip
100211e0:	fbb3 f0f8 	udiv	r0, r3, r8
100211e4:	fb08 3110 	mls	r1, r8, r0, r3
100211e8:	0c23      	lsrs	r3, r4, #16
100211ea:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
100211ee:	fb00 f107 	mul.w	r1, r0, r7
100211f2:	4299      	cmp	r1, r3
100211f4:	d908      	bls.n	10021208 <__udivmoddi4+0x24c>
100211f6:	eb1c 0303 	adds.w	r3, ip, r3
100211fa:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
100211fe:	d22c      	bcs.n	1002125a <__udivmoddi4+0x29e>
10021200:	4299      	cmp	r1, r3
10021202:	d92a      	bls.n	1002125a <__udivmoddi4+0x29e>
10021204:	3802      	subs	r0, #2
10021206:	4463      	add	r3, ip
10021208:	1a5b      	subs	r3, r3, r1
1002120a:	b2a4      	uxth	r4, r4
1002120c:	fbb3 f1f8 	udiv	r1, r3, r8
10021210:	fb08 3311 	mls	r3, r8, r1, r3
10021214:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
10021218:	fb01 f307 	mul.w	r3, r1, r7
1002121c:	42a3      	cmp	r3, r4
1002121e:	d908      	bls.n	10021232 <__udivmoddi4+0x276>
10021220:	eb1c 0404 	adds.w	r4, ip, r4
10021224:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
10021228:	d213      	bcs.n	10021252 <__udivmoddi4+0x296>
1002122a:	42a3      	cmp	r3, r4
1002122c:	d911      	bls.n	10021252 <__udivmoddi4+0x296>
1002122e:	3902      	subs	r1, #2
10021230:	4464      	add	r4, ip
10021232:	1ae4      	subs	r4, r4, r3
10021234:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
10021238:	e739      	b.n	100210ae <__udivmoddi4+0xf2>
1002123a:	4604      	mov	r4, r0
1002123c:	e6f0      	b.n	10021020 <__udivmoddi4+0x64>
1002123e:	4608      	mov	r0, r1
10021240:	e706      	b.n	10021050 <__udivmoddi4+0x94>
10021242:	45c8      	cmp	r8, r9
10021244:	d2ae      	bcs.n	100211a4 <__udivmoddi4+0x1e8>
10021246:	ebb9 0e02 	subs.w	lr, r9, r2
1002124a:	eb63 0c07 	sbc.w	ip, r3, r7
1002124e:	3801      	subs	r0, #1
10021250:	e7a8      	b.n	100211a4 <__udivmoddi4+0x1e8>
10021252:	4631      	mov	r1, r6
10021254:	e7ed      	b.n	10021232 <__udivmoddi4+0x276>
10021256:	4603      	mov	r3, r0
10021258:	e799      	b.n	1002118e <__udivmoddi4+0x1d2>
1002125a:	4630      	mov	r0, r6
1002125c:	e7d4      	b.n	10021208 <__udivmoddi4+0x24c>
1002125e:	46d6      	mov	lr, sl
10021260:	e77f      	b.n	10021162 <__udivmoddi4+0x1a6>
10021262:	4463      	add	r3, ip
10021264:	3802      	subs	r0, #2
10021266:	e74d      	b.n	10021104 <__udivmoddi4+0x148>
10021268:	4606      	mov	r6, r0
1002126a:	4623      	mov	r3, r4
1002126c:	4608      	mov	r0, r1
1002126e:	e70f      	b.n	10021090 <__udivmoddi4+0xd4>
10021270:	3e02      	subs	r6, #2
10021272:	4463      	add	r3, ip
10021274:	e730      	b.n	100210d8 <__udivmoddi4+0x11c>
10021276:	bf00      	nop

10021278 <__aeabi_idiv0>:
10021278:	4770      	bx	lr
1002127a:	bf00      	nop
1002127c:	65642525 	.word	0x65642525
10021280:	3a677562 	.word	0x3a677562
10021284:	00000020 	.word	0x00000020
10021288:	73726946 	.word	0x73726946
1002128c:	6f622074 	.word	0x6f622074
10021290:	202c746f 	.word	0x202c746f
10021294:	74746573 	.word	0x74746573
10021298:	20676e69 	.word	0x20676e69
1002129c:	73616c66 	.word	0x73616c66
100212a0:	00002168 	.word	0x00002168
100212a4:	00002525 	.word	0x00002525
100212a8:	6e692525 	.word	0x6e692525
100212ac:	203a6f66 	.word	0x203a6f66
100212b0:	00000000 	.word	0x00000000
100212b4:	78303e50 	.word	0x78303e50
100212b8:	78383025 	.word	0x78383025
100212bc:	0000000a 	.word	0x0000000a
100212c0:	78303e46 	.word	0x78303e46
100212c4:	78383025 	.word	0x78383025
100212c8:	0000000a 	.word	0x0000000a
100212cc:	75732525 	.word	0x75732525
100212d0:	73656363 	.word	0x73656363
100212d4:	00203a73 	.word	0x00203a73
100212d8:	7473694c 	.word	0x7473694c
100212dc:	00000000 	.word	0x00000000
100212e0:	72652525 	.word	0x72652525
100212e4:	3a726f72 	.word	0x3a726f72
100212e8:	00000020 	.word	0x00000020
100212ec:	6c756f43 	.word	0x6c756f43
100212f0:	6f6e2064 	.word	0x6f6e2064
100212f4:	61762074 	.word	0x61762074
100212f8:	6164696c 	.word	0x6164696c
100212fc:	63206574 	.word	0x63206574
10021300:	6f706d6f 	.word	0x6f706d6f
10021304:	746e656e 	.word	0x746e656e
10021308:	00000000 	.word	0x00000000
1002130c:	706d6f43 	.word	0x706d6f43
10021310:	6e656e6f 	.word	0x6e656e6f
10021314:	44492074 	.word	0x44492074
10021318:	7830203a 	.word	0x7830203a
1002131c:	78383025 	.word	0x78383025
10021320:	766e6920 	.word	0x766e6920
10021324:	64696c61 	.word	0x64696c61
10021328:	0000000a 	.word	0x0000000a
1002132c:	30257830 	.word	0x30257830
10021330:	253e7838 	.word	0x253e7838
10021334:	00000a73 	.word	0x00000a73
10021338:	6c756f43 	.word	0x6c756f43
1002133c:	6f6e2064 	.word	0x6f6e2064
10021340:	6f622074 	.word	0x6f622074
10021344:	6320746f 	.word	0x6320746f
10021348:	6f706d6f 	.word	0x6f706d6f
1002134c:	746e656e 	.word	0x746e656e
10021350:	00000000 	.word	0x00000000
10021354:	78303e43 	.word	0x78303e43
10021358:	78383025 	.word	0x78383025
1002135c:	0000000a 	.word	0x0000000a
10021360:	00007325 	.word	0x00007325
10021364:	6c756f43 	.word	0x6c756f43
10021368:	6f6e2064 	.word	0x6f6e2064
1002136c:	74612074 	.word	0x74612074
10021370:	74736574 	.word	0x74736574
10021374:	6d6f6320 	.word	0x6d6f6320
10021378:	656e6f70 	.word	0x656e6f70
1002137c:	0000746e 	.word	0x0000746e
10021380:	706d6f43 	.word	0x706d6f43
10021384:	6e656e6f 	.word	0x6e656e6f
10021388:	44492074 	.word	0x44492074
1002138c:	0000203a 	.word	0x0000203a
10021390:	00007825 	.word	0x00007825
10021394:	65747441 	.word	0x65747441
10021398:	00007473 	.word	0x00007473
1002139c:	70797243 	.word	0x70797243
100213a0:	45206f74 	.word	0x45206f74
100213a4:	706d6178 	.word	0x706d6178
100213a8:	0021656c 	.word	0x0021656c
100213ac:	72636e45 	.word	0x72636e45
100213b0:	65747079 	.word	0x65747079
100213b4:	61642064 	.word	0x61642064
100213b8:	203a6174 	.word	0x203a6174
100213bc:	00000000 	.word	0x00000000
100213c0:	68736148 	.word	0x68736148
100213c4:	73657220 	.word	0x73657220
100213c8:	3a746c75 	.word	0x3a746c75
100213cc:	00000020 	.word	0x00000020
100213d0:	72636544 	.word	0x72636544
100213d4:	65747079 	.word	0x65747079
100213d8:	656d2064 	.word	0x656d2064
100213dc:	67617373 	.word	0x67617373
100213e0:	25203a65 	.word	0x25203a65
100213e4:	000a0d73 	.word	0x000a0d73
100213e8:	206c6c41 	.word	0x206c6c41
100213ec:	706d6f43 	.word	0x706d6f43
100213f0:	6e656e6f 	.word	0x6e656e6f
100213f4:	76207374 	.word	0x76207374
100213f8:	64696c61 	.word	0x64696c61
100213fc:	64657461 	.word	0x64657461
10021400:	00000000 	.word	0x00000000
10021404:	6c696146 	.word	0x6c696146
10021408:	74206465 	.word	0x74206465
1002140c:	6f62206f 	.word	0x6f62206f
10021410:	6120746f 	.word	0x6120746f
10021414:	63206c6c 	.word	0x63206c6c
10021418:	6f706d6f 	.word	0x6f706d6f
1002141c:	746e656e 	.word	0x746e656e
10021420:	00000073 	.word	0x00000073
10021424:	746f6f62 	.word	0x746f6f62
10021428:	00706120 	.word	0x00706120
1002142c:	253e5041 	.word	0x253e5041
10021430:	00000a73 	.word	0x00000a73
10021434:	746f6f42 	.word	0x746f6f42
10021438:	00000000 	.word	0x00000000
1002143c:	65746e45 	.word	0x65746e45
10021440:	69702072 	.word	0x69702072
10021444:	00203a6e 	.word	0x00203a6e
10021448:	34333231 	.word	0x34333231
1002144c:	00003635 	.word	0x00003635
10021450:	206e6950 	.word	0x206e6950
10021454:	65636341 	.word	0x65636341
10021458:	64657470 	.word	0x64657470
1002145c:	00000021 	.word	0x00000021
10021460:	61766e49 	.word	0x61766e49
10021464:	2064696c 	.word	0x2064696c
10021468:	214e4950 	.word	0x214e4950
1002146c:	00000000 	.word	0x00000000
10021470:	65746e45 	.word	0x65746e45
10021474:	6f742072 	.word	0x6f742072
10021478:	3a6e656b 	.word	0x3a6e656b
1002147c:	00000020 	.word	0x00000020
10021480:	34333231 	.word	0x34333231
10021484:	38373635 	.word	0x38373635
10021488:	62613039 	.word	0x62613039
1002148c:	66656463 	.word	0x66656463
10021490:	00000000 	.word	0x00000000
10021494:	656b6f54 	.word	0x656b6f54
10021498:	6341206e 	.word	0x6341206e
1002149c:	74706563 	.word	0x74706563
100214a0:	00216465 	.word	0x00216465
100214a4:	61766e49 	.word	0x61766e49
100214a8:	2064696c 	.word	0x2064696c
100214ac:	656b6f54 	.word	0x656b6f54
100214b0:	0000216e 	.word	0x0000216e
100214b4:	706d6f43 	.word	0x706d6f43
100214b8:	6e656e6f 	.word	0x6e656e6f
100214bc:	63207374 	.word	0x63207374
100214c0:	646c756f 	.word	0x646c756f
100214c4:	746f6e20 	.word	0x746f6e20
100214c8:	20656220 	.word	0x20656220
100214cc:	696c6176 	.word	0x696c6176
100214d0:	65746164 	.word	0x65746164
100214d4:	00000064 	.word	0x00000064
100214d8:	706d6f43 	.word	0x706d6f43
100214dc:	6e656e6f 	.word	0x6e656e6f
100214e0:	44492074 	.word	0x44492074
100214e4:	3a6e4920 	.word	0x3a6e4920
100214e8:	00000020 	.word	0x00000020
100214ec:	706d6f43 	.word	0x706d6f43
100214f0:	6e656e6f 	.word	0x6e656e6f
100214f4:	44492074 	.word	0x44492074
100214f8:	74754f20 	.word	0x74754f20
100214fc:	0000203a 	.word	0x0000203a
10021500:	6c706552 	.word	0x6c706552
10021504:	64656361 	.word	0x64656361
10021508:	25783020 	.word	0x25783020
1002150c:	20783830 	.word	0x20783830
10021510:	68746977 	.word	0x68746977
10021514:	25783020 	.word	0x25783020
10021518:	0a783830 	.word	0x0a783830
1002151c:	00000000 	.word	0x00000000
10021520:	6c706552 	.word	0x6c706552
10021524:	00656361 	.word	0x00656361
10021528:	706d6f43 	.word	0x706d6f43
1002152c:	6e656e6f 	.word	0x6e656e6f
10021530:	78302074 	.word	0x78302074
10021534:	78383025 	.word	0x78383025
10021538:	20736920 	.word	0x20736920
1002153c:	20746f6e 	.word	0x20746f6e
10021540:	766f7270 	.word	0x766f7270
10021544:	6f697369 	.word	0x6f697369
10021548:	2064656e 	.word	0x2064656e
1002154c:	20726f66 	.word	0x20726f66
10021550:	20656874 	.word	0x20656874
10021554:	74737973 	.word	0x74737973
10021558:	0a0d6d65 	.word	0x0a0d6d65
1002155c:	00000000 	.word	0x00000000
10021560:	6c707041 	.word	0x6c707041
10021564:	74616369 	.word	0x74616369
10021568:	206e6f69 	.word	0x206e6f69
1002156c:	636f7250 	.word	0x636f7250
10021570:	6f737365 	.word	0x6f737365
10021574:	74532072 	.word	0x74532072
10021578:	65747261 	.word	0x65747261
1002157c:	00000064 	.word	0x00000064
10021580:	65746e45 	.word	0x65746e45
10021584:	6f432072 	.word	0x6f432072
10021588:	6e616d6d 	.word	0x6e616d6d
1002158c:	00203a64 	.word	0x00203a64
10021590:	7473696c 	.word	0x7473696c
10021594:	00000000 	.word	0x00000000
10021598:	746f6f62 	.word	0x746f6f62
1002159c:	00000000 	.word	0x00000000
100215a0:	6c706572 	.word	0x6c706572
100215a4:	00656361 	.word	0x00656361
100215a8:	65747461 	.word	0x65747461
100215ac:	00007473 	.word	0x00007473
100215b0:	65726e55 	.word	0x65726e55
100215b4:	6e676f63 	.word	0x6e676f63
100215b8:	64657a69 	.word	0x64657a69
100215bc:	6d6f6320 	.word	0x6d6f6320
100215c0:	646e616d 	.word	0x646e616d
100215c4:	73252720 	.word	0x73252720
100215c8:	00000a27 	.word	0x00000a27

100215cc <djFIehjkklIH>:
100215cc:	0138e798 02cdbb14 01f9f376 023bcfda     ..8.....v.....;.
100215dc:	01d90544 01cad2d2 00860e2c 00860e2c     D.......,...,...
100215ec:	01f9f376 038ec6f2 0138e798 023bcfda     v.........8...;.
100215fc:	0138e798 038ec6f2 0138e798 031dc9ea     ..8.......8.....
1002160c:	02cdbb14 0138e798 025cbe0c 023bcfda     ......8...\...;.
1002161c:	00199a72 0138e798 011c82b4 02cdbb14     r.....8.........
1002162c:	023bcfda 03225338 018d7fbc 011c82b4     ..;.8S".........
1002163c:	0035ff56 02b15630 03225338 008a977a     V.5.0V..8S".z...
1002164c:	018d7fbc 029067fe 01ae6dee 004431c8     .....g...m...1D.
1002165c:	00000000                                ....

10021660 <aseiFuengleR>:
10021660:	01ffe4b6 003098ac 02f56101 011a38bb     ......0..a...8..
10021670:	00485124 011644a7 003c74e8 003c74e8     $QH..D...t<..t<.
10021680:	02f56101 012614f7 01ffe4b6 011a38bb     .a....&......8..
10021690:	01ffe4b6 012614f7 01ffe4b6 012220e3     ......&...... ".
100216a0:	003098ac 01ffe4b6 002ca498 011a38bb     ..0.......,..8..
100216b0:	00e6d3b7 01ffe4b6 000127bc 003098ac     .........'....0.
100216c0:	011a38bb 01d073c6 00051bd0 000127bc     .8...s.......'..
100216d0:	02e590b1 01cc7fb2 01d073c6 00eac7cb     .........s......
100216e0:	00051bd0 02ba13d5 02b22bad 02179d2e     .........+......
100216f0:	00000000 63612525 0a25256b 00000000     ....%%ack%%.....
10021700:	78323025 00000000 203e2d20 65746e49     %02x.... -> Inte
10021710:	70757272 28202174 73616c46 63612068     rrupt! (Flash ac
10021720:	73736563 69616620 6572756c 00000a29     cess failure)...
10021730:	6c696146 74206465 6e69206f 61697469     Failed to initia
10021740:	657a696c 43324920 0000002e              lize I2C....

1002174c <Td4>:
1002174c:	d56a0952 38a53630 9ea340bf fbd7f381     R.j.06.8.@......
1002175c:	8239e37c 87ff2f9b 44438e34 cbe9dec4     |.9../..4.CD....
1002176c:	32947b54 3d23c2a6 0b954cee 4ec3fa42     T{.2..#=.L..B..N
1002177c:	66a12e08 b224d928 49a25b76 25d18b6d     ...f(.$.v[.Im..%
1002178c:	64f6f872 16986886 cc5ca4d4 92b6655d     r..d.h....\.]e..
1002179c:	5048706c dab9edfd 5746155e 849d8da7     lpHP....^.FW....
100217ac:	00abd890 0ad3bc8c 0558e4f7 0645b3b8     ..........X...E.
100217bc:	8f1e2cd0 020f3fca 03bdafc1 6b8a1301     .,...?.........k
100217cc:	4111913a eadc674f cecff297 73e6b4f0     :..AOg.........s
100217dc:	2274ac96 8535ade7 e837f9e2 6edf751c     ..t"..5...7..u.n
100217ec:	711af147 89c5291d 0e62b76f 1bbe18aa     G..q.)..o.b.....
100217fc:	4b3e56fc 2079d2c6 fec0db9a f45acd78     .V>K..y ....x.Z.
1002180c:	33a8dd1f 31c70788 591012b1 5fec8027     ...3...1...Y'.._
1002181c:	a97f5160 0d4ab519 9f7ae52d ef9cc993     `Q....J.-.z.....
1002182c:	4d3be0a0 b0f52aae 3cbbebc8 61995383     ..;M.*.....<.S.a
1002183c:	7e042b17 26d677ba 631469e1 7d0c2155     .+.~.w.&.i.cU!.}

1002184c <Td>:
1002184c:	51f4a750 7e416553 1a17a4c3 3a275e96     P..QSeA~.....^':
1002185c:	3bab6bcb 1f9d45f1 acfa58ab 4be30393     .k.;.E...X.....K
1002186c:	2030fa55 ad766df6 88cc7691 f5024c25     U.0 .mv..v..%L..
1002187c:	4fe5d7fc c52acbd7 26354480 b562a38f     ...O..*..D5&..b.
1002188c:	deb15a49 25ba1b67 45ea0e98 5dfec0e1     IZ..g..%...E...]
1002189c:	c32f7502 814cf012 8d4697a3 6bd3f9c6     .u/...L...F....k
100218ac:	038f5fe7 15929c95 bf6d7aeb 955259da     ._.......zm..YR.
100218bc:	d4be832d 587421d3 49e06929 8ec9c844     -....!tX)i.ID...
100218cc:	75c2896a f48e7978 99583e6b 27b971dd     j..uxy..k>X..q.'
100218dc:	bee14fb6 f088ad17 c920ac66 7dce3ab4     .O......f. ..:.}
100218ec:	63df4a18 e51a3182 97513360 62537f45     .J.c.1..`3Q.E.Sb
100218fc:	b16477e0 bb6bae84 fe81a01c f9082b94     .wd...k......+..
1002190c:	70486858 8f45fd19 94de6c87 527bf8b7     XhHp..E..l....{R
1002191c:	ab73d323 724b02e2 e31f8f57 6655ab2a     #.s...KrW...*.Uf
1002192c:	b2eb2807 2fb5c203 86c57b9a d33708a5     .(...../.{....7.
1002193c:	302887f2 23bfa5b2 02036aba ed16825c     ..(0...#.j..\...
1002194c:	8acf1c2b a779b492 f307f2f0 4e69e2a1     +.....y.......iN
1002195c:	65daf4cd 0605bed5 d134621f c4a6fe8a     ...e.....b4.....
1002196c:	342e539d a2f355a0 058ae132 a4f6eb75     .S.4.U..2...u...
1002197c:	0b83ec39 4060efaa 5e719f06 bd6e1051     9.....`@..q^Q.n.
1002198c:	3e218af9 96dd063d dd3e05ae 4de6bd46     ..!>=.....>.F..M
1002199c:	91548db5 71c45d05 0406d46f 605015ff     ..T..].qo.....P`
100219ac:	1998fb24 d6bde997 894043cc 67d99e77     $........C@.w..g
100219bc:	b0e842bd 07898b88 e7195b38 79c8eedb     .B......8[.....y
100219cc:	a17c0a47 7c420fe9 f8841ec9 00000000     G.|...B|........
100219dc:	09808683 322bed48 1e1170ac 6c5a724e     ....H.+2.p..NrZl
100219ec:	fd0efffb 0f853856 3daed51e 362d3927     ....V8.....='9-6
100219fc:	0a0fd964 685ca621 9b5b54d1 24362e3a     d...!.\h.T[.:.6$
10021a0c:	0c0a67b1 9357e70f b4ee96d2 1b9b919e     .g....W.........
10021a1c:	80c0c54f 61dc20a2 5a774b69 1c121a16     O.... .aiKwZ....
10021a2c:	e293ba0a c0a02ae5 3c22e043 121b171d     .....*..C."<....
10021a3c:	0e090d0b f28bc7ad 2db6a8b9 141ea9c8     ...........-....
10021a4c:	57f11985 af75074c ee99ddbb a37f60fd     ...WL.u......`..
10021a5c:	f701269f 5c72f5bc 44663bc5 5bfb7e34     .&....r\.;fD4~.[
10021a6c:	8b432976 cb23c6dc b6edfc68 b8e4f163     v)C...#.h...c...
10021a7c:	d731dcca 42638510 13972240 84c61120     ..1...cB@".. ...
10021a8c:	854a247d d2bb3df8 aef93211 c729a16d     }$J..=...2..m.).
10021a9c:	1d9e2f4b dcb230f3 0d8652ec 77c1e3d0     K/...0...R.....w
10021aac:	2bb3166c a970b999 119448fa 47e96422     l..+..p..H.."d.G
10021abc:	a8fc8cc4 a0f03f1a 567d2cd8 223390ef     .....?...,}V..3"
10021acc:	87494ec7 d938d1c1 8ccaa2fe 98d40b36     .NI...8.....6...
10021adc:	a6f581cf a57ade28 dab78e26 3fadbfa4     ....(.z.&......?
10021aec:	2c3a9de4 5078920d 6a5fcc9b 547e4662     ..:,..xP.._jbF~T
10021afc:	f68d13c2 90d8b8e8 2e39f75e 82c3aff5     ........^.9.....
10021b0c:	9f5d80be 69d0937c 6fd52da9 cf2512b3     ..].|..i.-.o..%.
10021b1c:	c8ac993b 10187da7 e89c636e db3bbb7b     ;....}..nc..{.;.
10021b2c:	cd267809 6e5918f4 ec9ab701 834f9aa8     .x&...Yn......O.
10021b3c:	e6956e65 aaffe67e 21bccf08 ef15e8e6     en..~......!....
10021b4c:	bae79bd9 4a6f36ce ea9f09d4 29b07cd6     .....6oJ.....|.)
10021b5c:	31a4b2af 2a3f2331 c6a59430 35a266c0     ...11#?*0....f.5
10021b6c:	744ebc37 fc82caa6 e090d0b0 33a7d815     7.Nt...........3
10021b7c:	f104984a 41ecdaf7 7fcd500e 1791f62f     J......A.P../...
10021b8c:	764dd68d 43efb04d ccaa4d54 e49604df     ..MvM..CTM......
10021b9c:	9ed1b5e3 4c6a881b c12c1fb8 4665517f     ......jL..,..QeF
10021bac:	9d5eea04 018c355d fa877473 fb0b412e     ..^.]5..st...A..
10021bbc:	b3671d5a 92dbd252 e9105633 6dd64713     Z.g.R...3V...G.m
10021bcc:	9ad7618c 37a10c7a 59f8148e eb133c89     .a..z..7...Y.<..
10021bdc:	cea927ee b761c935 e11ce5ed 7a47b13c     .'..5.a.....<.Gz
10021bec:	9cd2df59 55f2733f 1814ce79 73c737bf     Y...?s.Uy....7.s
10021bfc:	53f7cdea 5ffdaa5b df3d6f14 7844db86     ...S[.._.o=...Dx
10021c0c:	caaff381 b968c43e 3824342c c2a3405f     ....>.h.,4$8_@..
10021c1c:	161dc372 bce2250c 283c498b ff0d9541     r....%...I<(A...
10021c2c:	39a80171 080cb3de d8b4e49c 6456c190     q..9..........Vd
10021c3c:	7bcb8461 d532b670 486c5c74 d0b85742     a..{p.2.t\lHBW..
10021c4c:	5051f4a7 537e4165 c31a17a4 963a275e     ..QPeA~S....^':.
10021c5c:	cb3bab6b f11f9d45 abacfa58 934be303     k.;.E...X.....K.
10021c6c:	552030fa f6ad766d 9188cc76 25f5024c     .0 Umv..v...L..%
10021c7c:	fc4fe5d7 d7c52acb 80263544 8fb562a3     ..O..*..D5&..b..
10021c8c:	49deb15a 6725ba1b 9845ea0e e15dfec0     Z..I..%g..E...].
10021c9c:	02c32f75 12814cf0 a38d4697 c66bd3f9     u/...L...F....k.
10021cac:	e7038f5f 9515929c ebbf6d7a da955259     _.......zm..YR..
10021cbc:	2dd4be83 d3587421 2949e069 448ec9c8     ...-!tX.i.I)...D
10021ccc:	6a75c289 78f48e79 6b99583e dd27b971     ..ujy..x>X.kq.'.
10021cdc:	b6bee14f 17f088ad 66c920ac b47dce3a     O........ .f:.}.
10021cec:	1863df4a 82e51a31 60975133 4562537f     J.c.1...3Q.`.SbE
10021cfc:	e0b16477 84bb6bae 1cfe81a0 94f9082b     wd...k......+...
10021d0c:	58704868 198f45fd 8794de6c b7527bf8     hHpX.E..l....{R.
10021d1c:	23ab73d3 e2724b02 57e31f8f 2a6655ab     .s.#.Kr....W.Uf*
10021d2c:	07b2eb28 032fb5c2 9a86c57b a5d33708     (...../.{....7..
10021d3c:	f2302887 b223bfa5 ba02036a 5ced1682     .(0...#.j......\
10021d4c:	2b8acf1c 92a779b4 f0f307f2 a14e69e2     ...+.y.......iN.
10021d5c:	cd65daf4 d50605be 1fd13462 8ac4a6fe     ..e.....b4......
10021d6c:	9d342e53 a0a2f355 32058ae1 75a4f6eb     S.4.U......2...u
10021d7c:	390b83ec aa4060ef 065e719f 51bd6e10     ...9.`@..q^..n.Q
10021d8c:	f93e218a 3d96dd06 aedd3e05 464de6bd     .!>....=.>....MF
10021d9c:	b591548d 0571c45d 6f0406d4 ff605015     .T..].q....o.P`.
10021dac:	241998fb 97d6bde9 cc894043 7767d99e     ...$....C@....gw
10021dbc:	bdb0e842 8807898b 38e7195b db79c8ee     B.......[..8..y.
10021dcc:	47a17c0a e97c420f c9f8841e 00000000     .|.G.B|.........
10021ddc:	83098086 48322bed ac1e1170 4e6c5a72     .....+2Hp...rZlN
10021dec:	fbfd0eff 560f8538 1e3daed5 27362d39     ....8..V..=.9-6'
10021dfc:	640a0fd9 21685ca6 d19b5b54 3a24362e     ...d.\h!T[...6$:
10021e0c:	b10c0a67 0f9357e7 d2b4ee96 9e1b9b91     g....W..........
10021e1c:	4f80c0c5 a261dc20 695a774b 161c121a     ...O .a.KwZi....
10021e2c:	0ae293ba e5c0a02a 433c22e0 1d121b17     ....*...."<C....
10021e3c:	0b0e090d adf28bc7 b92db6a8 c8141ea9     ..........-.....
10021e4c:	8557f119 4caf7507 bbee99dd fda37f60     ..W..u.L....`...
10021e5c:	9ff70126 bc5c72f5 c544663b 345bfb7e     &....r\.;fD.~.[4
10021e6c:	768b4329 dccb23c6 68b6edfc 63b8e4f1     )C.v.#.....h...c
10021e7c:	cad731dc 10426385 40139722 2084c611     .1...cB."..@... 
10021e8c:	7d854a24 f8d2bb3d 11aef932 6dc729a1     $J.}=...2....).m
10021e9c:	4b1d9e2f f3dcb230 ec0d8652 d077c1e3     /..K0...R.....w.
10021eac:	6c2bb316 99a970b9 fa119448 2247e964     ..+l.p..H...d.G"
10021ebc:	c4a8fc8c 1aa0f03f d8567d2c ef223390     ....?...,}V..3".
10021ecc:	c787494e c1d938d1 fe8ccaa2 3698d40b     NI...8.........6
10021edc:	cfa6f581 28a57ade 26dab78e a43fadbf     .....z.(...&..?.
10021eec:	e42c3a9d 0d507892 9b6a5fcc 62547e46     .:,..xP.._j.F~Tb
10021efc:	c2f68d13 e890d8b8 5e2e39f7 f582c3af     .........9.^....
10021f0c:	be9f5d80 7c69d093 a96fd52d b3cf2512     .]....i|-.o..%..
10021f1c:	3bc8ac99 a710187d 6ee89c63 7bdb3bbb     ...;}...c..n.;.{
10021f2c:	09cd2678 f46e5918 01ec9ab7 a8834f9a     x&...Yn......O..
10021f3c:	65e6956e 7eaaffe6 0821bccf e6ef15e8     n..e...~..!.....
10021f4c:	d9bae79b ce4a6f36 d4ea9f09 d629b07c     ....6oJ.....|.).
10021f5c:	af31a4b2 312a3f23 30c6a594 c035a266     ..1.#?*1...0f.5.
10021f6c:	37744ebc a6fc82ca b0e090d0 1533a7d8     .Nt7..........3.
10021f7c:	4af10498 f741ecda 0e7fcd50 2f1791f6     ...J..A.P....../
10021f8c:	8d764dd6 4d43efb0 54ccaa4d dfe49604     .Mv...CMM..T....
10021f9c:	e39ed1b5 1b4c6a88 b8c12c1f 7f466551     .....jL..,..QeF.
10021fac:	049d5eea 5d018c35 73fa8774 2efb0b41     .^..5..]t..sA...
10021fbc:	5ab3671d 5292dbd2 33e91056 136dd647     .g.Z...RV..3G.m.
10021fcc:	8c9ad761 7a37a10c 8e59f814 89eb133c     a.....7z..Y.<...
10021fdc:	eecea927 35b761c9 ede11ce5 3c7a47b1     '....a.5.....Gz<
10021fec:	599cd2df 3f55f273 791814ce bf73c737     ...Ys.U?...y7.s.
10021ffc:	ea53f7cd 5b5ffdaa 14df3d6f 867844db     ..S..._[o=...Dx.
1002200c:	81caaff3 3eb968c4 2c382434 5fc2a340     .....h.>4$8,@.._
1002201c:	72161dc3 0cbce225 8b283c49 41ff0d95     ...r%...I<(....A
1002202c:	7139a801 de080cb3 9cd8b4e4 906456c1     ..9q.........Vd.
1002203c:	617bcb84 70d532b6 74486c5c 42d0b857     ..{a.2.p\lHtW..B
1002204c:	a75051f4 65537e41 a4c31a17 5e963a27     .QP.A~Se....':.^
1002205c:	6bcb3bab 45f11f9d 58abacfa 03934be3     .;.k...E...X.K..
1002206c:	fa552030 6df6ad76 769188cc 4c25f502     0 U.v..m...v..%L
1002207c:	d7fc4fe5 cbd7c52a 44802635 a38fb562     .O..*...5&.Db...
1002208c:	5a49deb1 1b6725ba 0e9845ea c0e15dfe     ..IZ.%g..E...]..
1002209c:	7502c32f f012814c 97a38d46 f9c66bd3     /..uL...F....k..
100220ac:	5fe7038f 9c951592 7aebbf6d 59da9552     ..._....m..zR..Y
100220bc:	832dd4be 21d35874 692949e0 c8448ec9     ..-.tX.!.I)i..D.
100220cc:	896a75c2 7978f48e 3e6b9958 71dd27b9     .uj...xyX.k>.'.q
100220dc:	4fb6bee1 ad17f088 ac66c920 3ab47dce     ...O.... .f..}.:
100220ec:	4a1863df 3182e51a 33609751 7f456253     .c.J...1Q.`3SbE.
100220fc:	77e0b164 ae84bb6b a01cfe81 2b94f908     d..wk..........+
1002210c:	68587048 fd198f45 6c8794de f8b7527b     HpXhE......l{R..
1002211c:	d323ab73 02e2724b 8f57e31f ab2a6655     s.#.Kr....W.Uf*.
1002212c:	2807b2eb c2032fb5 7b9a86c5 08a5d337     ...(./.....{7...
1002213c:	87f23028 a5b223bf 6aba0203 825ced16     (0...#.....j..\.
1002214c:	1c2b8acf b492a779 f2f0f307 e2a14e69     ..+.y.......iN..
1002215c:	f4cd65da bed50605 621fd134 fe8ac4a6     .e......4..b....
1002216c:	539d342e 55a0a2f3 e132058a eb75a4f6     .4.S...U..2...u.
1002217c:	ec390b83 efaa4060 9f065e71 1051bd6e     ..9.`@..q^..n.Q.
1002218c:	8af93e21 063d96dd 05aedd3e bd464de6     !>....=.>....MF.
1002219c:	8db59154 5d0571c4 d46f0406 15ff6050     T....q.]..o.P`..
100221ac:	fb241998 e997d6bd 43cc8940 9e7767d9     ..$.....@..C.gw.
100221bc:	42bdb0e8 8b880789 5b38e719 eedb79c8     ...B......8[.y..
100221cc:	0a47a17c 0fe97c42 1ec9f884 00000000     |.G.B|..........
100221dc:	86830980 ed48322b 70ac1e11 724e6c5a     ....+2H....pZlNr
100221ec:	fffbfd0e 38560f85 d51e3dae 3927362d     ......V8.=..-6'9
100221fc:	d9640a0f a621685c 54d19b5b 2e3a2436     ..d.\h!.[..T6$:.
1002220c:	67b10c0a e70f9357 96d2b4ee 919e1b9b     ...gW...........
1002221c:	c54f80c0 20a261dc 4b695a77 1a161c12     ..O..a. wZiK....
1002222c:	ba0ae293 2ae5c0a0 e0433c22 171d121b     .......*"<C.....
1002223c:	0d0b0e09 c7adf28b a8b92db6 a9c8141e     .........-......
1002224c:	198557f1 074caf75 ddbbee99 60fda37f     .W..u.L........`
1002225c:	269ff701 f5bc5c72 3bc54466 7e345bfb     ...&r\..fD.;.[4~
1002226c:	29768b43 c6dccb23 fc68b6ed f163b8e4     C.v)#.....h...c.
1002227c:	dccad731 85104263 22401397 112084c6     1...cB....@".. .
1002228c:	247d854a 3df8d2bb 3211aef9 a16dc729     J.}$...=...2).m.
1002229c:	2f4b1d9e 30f3dcb2 52ec0d86 e3d077c1     ..K/...0...R.w..
100222ac:	166c2bb3 b999a970 48fa1194 642247e9     .+l.p......H.G"d
100222bc:	8cc4a8fc 3f1aa0f0 2cd8567d 90ef2233     .......?}V.,3"..
100222cc:	4ec78749 d1c1d938 a2fe8cca 0b3698d4     I..N8.........6.
100222dc:	81cfa6f5 de28a57a 8e26dab7 bfa43fad     ....z.(...&..?..
100222ec:	9de42c3a 920d5078 cc9b6a5f 4662547e     :,..xP.._j..~TbF
100222fc:	13c2f68d b8e890d8 f75e2e39 aff582c3     ........9.^.....
1002230c:	80be9f5d 937c69d0 2da96fd5 12b3cf25     ]....i|..o.-%...
1002231c:	993bc8ac 7da71018 636ee89c bb7bdb3b     ..;....}..nc;.{.
1002232c:	7809cd26 18f46e59 b701ec9a 9aa8834f     &..xYn......O...
1002233c:	6e65e695 e67eaaff cf0821bc e8e6ef15     ..en..~..!......
1002234c:	9bd9bae7 36ce4a6f 09d4ea9f 7cd629b0     ....oJ.6.....).|
1002235c:	b2af31a4 23312a3f 9430c6a5 66c035a2     .1..?*1#..0..5.f
1002236c:	bc37744e caa6fc82 d0b0e090 d81533a7     Nt7..........3..
1002237c:	984af104 daf741ec 500e7fcd f62f1791     ..J..A.....P../.
1002238c:	d68d764d b04d43ef 4d54ccaa 04dfe496     Mv...CM...TM....
1002239c:	b5e39ed1 881b4c6a 1fb8c12c 517f4665     ....jL..,...eF.Q
100223ac:	ea049d5e 355d018c 7473fa87 412efb0b     ^.....]5..st...A
100223bc:	1d5ab367 d25292db 5633e910 47136dd6     g.Z...R...3V.m.G
100223cc:	618c9ad7 0c7a37a1 148e59f8 3c89eb13     ...a.7z..Y.....<
100223dc:	27eecea9 c935b761 e5ede11c b13c7a47     ...'a.5.....Gz<.
100223ec:	df599cd2 733f55f2 ce791814 37bf73c7     ..Y..U?s..y..s.7
100223fc:	cdea53f7 aa5b5ffd 6f14df3d db867844     .S..._[.=..oDx..
1002240c:	f381caaf c43eb968 342c3824 405fc2a3     ....h.>.$8,4.._@
1002241c:	c372161d 250cbce2 498b283c 9541ff0d     ..r....%<(.I..A.
1002242c:	017139a8 b3de080c e49cd8b4 c1906456     .9q.........Vd..
1002243c:	84617bcb b670d532 5c74486c 5742d0b8     .{a.2.p.lHt\..BW
1002244c:	f4a75051 4165537e 17a4c31a 275e963a     QP..~SeA....:.^'
1002245c:	ab6bcb3b 9d45f11f fa58abac e303934b     ;.k...E...X.K...
1002246c:	30fa5520 766df6ad cc769188 024c25f5      U.0..mv..v..%L.
1002247c:	e5d7fc4f 2acbd7c5 35448026 62a38fb5     O......*&.D5...b
1002248c:	b15a49de ba1b6725 ea0e9845 fec0e15d     .IZ.%g..E...]...
1002249c:	2f7502c3 4cf01281 4697a38d d3f9c66b     ..u/...L...Fk...
100224ac:	8f5fe703 929c9515 6d7aebbf 5259da95     .._.......zm..YR
100224bc:	be832dd4 7421d358 e0692949 c9c8448e     .-..X.!tI)i..D..
100224cc:	c2896a75 8e7978f4 583e6b99 b971dd27     uj...xy..k>X'.q.
100224dc:	e14fb6be 88ad17f0 20ac66c9 ce3ab47d     ..O......f. }.:.
100224ec:	df4a1863 1a3182e5 51336097 537f4562     c.J...1..`3QbE.S
100224fc:	6477e0b1 6bae84bb 81a01cfe 082b94f9     ..wd...k......+.
1002250c:	48685870 45fd198f de6c8794 7bf8b752     pXhH...E..l.R..{
1002251c:	73d323ab 4b02e272 1f8f57e3 55ab2a66     .#.sr..K.W..f*.U
1002252c:	eb2807b2 b5c2032f c57b9a86 3708a5d3     ..(./.....{....7
1002253c:	2887f230 bfa5b223 036aba02 16825ced     0..(#.....j..\..
1002254c:	cf1c2b8a 79b492a7 07f2f0f3 69e2a14e     .+.....y....N..i
1002255c:	daf4cd65 05bed506 34621fd1 a6fe8ac4     e.........b4....
1002256c:	2e539d34 f355a0a2 8ae13205 f6eb75a4     4.S...U..2...u..
1002257c:	83ec390b 60efaa40 719f065e 6e1051bd     .9..@..`^..q.Q.n
1002258c:	218af93e dd063d96 3e05aedd e6bd464d     >..!.=.....>MF..
1002259c:	548db591 c45d0571 06d46f04 5015ff60     ...Tq.]..o..`..P
100225ac:	98fb2419 bde997d6 4043cc89 d99e7767     .$........C@gw..
100225bc:	e842bdb0 898b8807 195b38e7 c8eedb79     ..B......8[.y...
100225cc:	7c0a47a1 420fe97c 841ec9f8 00000000     .G.||..B........
100225dc:	80868309 2bed4832 1170ac1e 5a724e6c     ....2H.+..p.lNrZ
100225ec:	0efffbfd 8538560f aed51e3d 2d392736     .....V8.=...6'9-
100225fc:	0fd9640a 5ca62168 5b54d19b 362e3a24     .d..h!.\..T[$:.6
1002260c:	0a67b10c 57e70f93 ee96d2b4 9b919e1b     ..g....W........
1002261c:	c0c54f80 dc20a261 774b695a 121a161c     .O..a. .ZiKw....
1002262c:	93ba0ae2 a02ae5c0 22e0433c 1b171d12     ......*.<C."....
1002263c:	090d0b0e 8bc7adf2 b6a8b92d 1ea9c814     ........-.......
1002264c:	f1198557 75074caf 99ddbbee 7f60fda3     W....L.u......`.
1002265c:	01269ff7 72f5bc5c 663bc544 fb7e345b     ..&.\..rD.;f[4~.
1002266c:	4329768b 23c6dccb edfc68b6 e4f163b8     .v)C...#.h...c..
1002267c:	31dccad7 63851042 97224013 c6112084     ...1B..c.@".. ..
1002268c:	4a247d85 bb3df8d2 f93211ae 29a16dc7     .}$J..=...2..m.)
1002269c:	9e2f4b1d b230f3dc 8652ec0d c1e3d077     .K/...0...R.w...
100226ac:	b3166c2b 70b999a9 9448fa11 e9642247     +l.....p..H.G"d.
100226bc:	fc8cc4a8 f03f1aa0 7d2cd856 3390ef22     ......?.V.,}"..3
100226cc:	494ec787 38d1c1d9 caa2fe8c d40b3698     ..NI...8.....6..
100226dc:	f581cfa6 7ade28a5 b78e26da adbfa43f     .....(.z.&..?...
100226ec:	3a9de42c 78920d50 5fcc9b6a 7e466254     ,..:P..xj.._TbF~
100226fc:	8d13c2f6 d8b8e890 39f75e2e c3aff582     .........^.9....
1002270c:	5d80be9f d0937c69 d52da96f 2512b3cf     ...]i|..o.-....%
1002271c:	ac993bc8 187da710 9c636ee8 3bbb7bdb     .;....}..nc..{.;
1002272c:	267809cd 5918f46e 9ab701ec 4f9aa883     ..x&n..Y.......O
1002273c:	956e65e6 ffe67eaa bccf0821 15e8e6ef     .en..~..!.......
1002274c:	e79bd9ba 6f36ce4a 9f09d4ea b07cd629     ....J.6o....).|.
1002275c:	a4b2af31 3f23312a a59430c6 a266c035     1...*1#?.0..5.f.
1002276c:	4ebc3774 82caa6fc 90d0b0e0 a7d81533     t7.N........3...
1002277c:	04984af1 ecdaf741 cd500e7f 91f62f17     .J..A.....P../..
1002278c:	4dd68d76 efb04d43 aa4d54cc 9604dfe4     v..MCM...TM.....
1002279c:	d1b5e39e 6a881b4c 2c1fb8c1 65517f46     ....L..j...,F.Qe
100227ac:	5eea049d 8c355d01 877473fa 0b412efb     ...^.]5..st...A.
100227bc:	671d5ab3 dbd25292 105633e9 d647136d     .Z.g.R...3V.m.G.
100227cc:	d7618c9a a10c7a37 f8148e59 133c89eb     ..a.7z..Y.....<.
100227dc:	a927eece 61c935b7 1ce5ede1 47b13c7a     ..'..5.a....z<.G
100227ec:	d2df599c f2733f55 14ce7918 c737bf73     .Y..U?s..y..s.7.
100227fc:	f7cdea53 fdaa5b5f 3d6f14df 44db8678     S..._[....o=x..D
1002280c:	aff381ca 68c43eb9 24342c38 a3405fc2     .....>.h8,4$._@.
1002281c:	1dc37216 e2250cbc 3c498b28 0d9541ff     .r....%.(.I<.A..
1002282c:	a8017139 0cb3de08 b4e49cd8 56c19064     9q..........d..V
1002283c:	cb84617b 32b670d5 6c5c7448 b85742d0     {a...p.2Ht\l.BW.

1002284c <Te>:
1002284c:	c66363a5 f87c7c84 ee777799 f67b7b8d     .cc..||..ww..{{.
1002285c:	fff2f20d d66b6bbd de6f6fb1 91c5c554     .....kk..oo.T...
1002286c:	60303050 02010103 ce6767a9 562b2b7d     P00`.....gg.}++V
1002287c:	e7fefe19 b5d7d762 4dababe6 ec76769a     ....b......M.vv.
1002288c:	8fcaca45 1f82829d 89c9c940 fa7d7d87     E.......@....}}.
1002289c:	effafa15 b25959eb 8e4747c9 fbf0f00b     .....YY..GG.....
100228ac:	41adadec b3d4d467 5fa2a2fd 45afafea     ...Ag......_...E
100228bc:	239c9cbf 53a4a4f7 e4727296 9bc0c05b     ...#...S.rr.[...
100228cc:	75b7b7c2 e1fdfd1c 3d9393ae 4c26266a     ...u.......=j&&L
100228dc:	6c36365a 7e3f3f41 f5f7f702 83cccc4f     Z66lA??~....O...
100228ec:	6834345c 51a5a5f4 d1e5e534 f9f1f108     \44h...Q4.......
100228fc:	e2717193 abd8d873 62313153 2a15153f     .qq.s...S11b?..*
1002290c:	0804040c 95c7c752 46232365 9dc3c35e     ....R...e##F^...
1002291c:	30181828 379696a1 0a05050f 2f9a9ab5     (..0...7......./
1002292c:	0e070709 24121236 1b80809b dfe2e23d     ....6..$....=...
1002293c:	cdebeb26 4e272769 7fb2b2cd ea75759f     &...i''N.....uu.
1002294c:	1209091b 1d83839e 582c2c74 341a1a2e     ........t,,X...4
1002295c:	361b1b2d dc6e6eb2 b45a5aee 5ba0a0fb     -..6.nn..ZZ....[
1002296c:	a45252f6 763b3b4d b7d6d661 7db3b3ce     .RR.M;;va......}
1002297c:	5229297b dde3e33e 5e2f2f71 13848497     {))R>...q//^....
1002298c:	a65353f5 b9d1d168 00000000 c1eded2c     .SS.h.......,...
1002299c:	40202060 e3fcfc1f 79b1b1c8 b65b5bed     `  @.......y.[[.
100229ac:	d46a6abe 8dcbcb46 67bebed9 7239394b     .jj.F......gK99r
100229bc:	944a4ade 984c4cd4 b05858e8 85cfcf4a     .JJ..LL..XX.J...
100229cc:	bbd0d06b c5efef2a 4faaaae5 edfbfb16     k...*......O....
100229dc:	864343c5 9a4d4dd7 66333355 11858594     .CC..MM.U33f....
100229ec:	8a4545cf e9f9f910 04020206 fe7f7f81     .EE.............
100229fc:	a05050f0 783c3c44 259f9fba 4ba8a8e3     .PP.D<<x...%...K
10022a0c:	a25151f3 5da3a3fe 804040c0 058f8f8a     .QQ....].@@.....
10022a1c:	3f9292ad 219d9dbc 70383848 f1f5f504     ...?...!H88p....
10022a2c:	63bcbcdf 77b6b6c1 afdada75 42212163     ...c...wu...c!!B
10022a3c:	20101030 e5ffff1a fdf3f30e bfd2d26d     0.. ........m...
10022a4c:	81cdcd4c 180c0c14 26131335 c3ecec2f     L.......5..&/...
10022a5c:	be5f5fe1 359797a2 884444cc 2e171739     .__....5.DD.9...
10022a6c:	93c4c457 55a7a7f2 fc7e7e82 7a3d3d47     W......U.~~.G==z
10022a7c:	c86464ac ba5d5de7 3219192b e6737395     .dd..]].+..2.ss.
10022a8c:	c06060a0 19818198 9e4f4fd1 a3dcdc7f     .``......OO.....
10022a9c:	44222266 542a2a7e 3b9090ab 0b888883     f""D~**T...;....
10022aac:	8c4646ca c7eeee29 6bb8b8d3 2814143c     .FF.)......k<..(
10022abc:	a7dede79 bc5e5ee2 160b0b1d addbdb76     y....^^.....v...
10022acc:	dbe0e03b 64323256 743a3a4e 140a0a1e     ;...V22dN::t....
10022adc:	924949db 0c06060a 4824246c b85c5ce4     .II.....l$$H.\\.
10022aec:	9fc2c25d bdd3d36e 43acacef c46262a6     ]...n......C.bb.
10022afc:	399191a8 319595a4 d3e4e437 f279798b     ...9...17....yy.
10022b0c:	d5e7e732 8bc8c843 6e373759 da6d6db7     2...C...Y77n.mm.
10022b1c:	018d8d8c b1d5d564 9c4e4ed2 49a9a9e0     ....d....NN....I
10022b2c:	d86c6cb4 ac5656fa f3f4f407 cfeaea25     .ll..VV.....%...
10022b3c:	ca6565af f47a7a8e 47aeaee9 10080818     .ee..zz....G....
10022b4c:	6fbabad5 f0787888 4a25256f 5c2e2e72     ...o.xx.o%%Jr..\
10022b5c:	381c1c24 57a6a6f1 73b4b4c7 97c6c651     $..8...W...sQ...
10022b6c:	cbe8e823 a1dddd7c e874749c 3e1f1f21     #...|....tt.!..>
10022b7c:	964b4bdd 61bdbddc 0d8b8b86 0f8a8a85     .KK....a........
10022b8c:	e0707090 7c3e3e42 71b5b5c4 cc6666aa     .pp.B>>|...q.ff.
10022b9c:	904848d8 06030305 f7f6f601 1c0e0e12     .HH.............
10022bac:	c26161a3 6a35355f ae5757f9 69b9b9d0     .aa._55j.WW....i
10022bbc:	17868691 99c1c158 3a1d1d27 279e9eb9     ....X...'..:...'
10022bcc:	d9e1e138 ebf8f813 2b9898b3 22111133     8..........+3.."
10022bdc:	d26969bb a9d9d970 078e8e89 339494a7     .ii.p..........3
10022bec:	2d9b9bb6 3c1e1e22 15878792 c9e9e920     ...-"..<.... ...
10022bfc:	87cece49 aa5555ff 50282878 a5dfdf7a     I....UU.x((Pz...
10022c0c:	038c8c8f 59a1a1f8 09898980 1a0d0d17     .......Y........
10022c1c:	65bfbfda d7e6e631 844242c6 d06868b8     ...e1....BB..hh.
10022c2c:	824141c3 299999b0 5a2d2d77 1e0f0f11     .AA....)w--Z....
10022c3c:	7bb0b0cb a85454fc 6dbbbbd6 2c16163a     ...{.TT....m:..,
10022c4c:	a5c66363 84f87c7c 99ee7777 8df67b7b     cc..||..ww..{{..
10022c5c:	0dfff2f2 bdd66b6b b1de6f6f 5491c5c5     ....kk..oo.....T
10022c6c:	50603030 03020101 a9ce6767 7d562b2b     00`P....gg..++V}
10022c7c:	19e7fefe 62b5d7d7 e64dabab 9aec7676     .......b..M.vv..
10022c8c:	458fcaca 9d1f8282 4089c9c9 87fa7d7d     ...E.......@}}..
10022c9c:	15effafa ebb25959 c98e4747 0bfbf0f0     ....YY..GG......
10022cac:	ec41adad 67b3d4d4 fd5fa2a2 ea45afaf     ..A....g.._...E.
10022cbc:	bf239c9c f753a4a4 96e47272 5b9bc0c0     ..#...S.rr.....[
10022ccc:	c275b7b7 1ce1fdfd ae3d9393 6a4c2626     ..u.......=.&&Lj
10022cdc:	5a6c3636 417e3f3f 02f5f7f7 4f83cccc     66lZ??~A.......O
10022cec:	5c683434 f451a5a5 34d1e5e5 08f9f1f1     44h\..Q....4....
10022cfc:	93e27171 73abd8d8 53623131 3f2a1515     qq.....s11bS..*?
10022d0c:	0c080404 5295c7c7 65462323 5e9dc3c3     .......R##Fe...^
10022d1c:	28301818 a1379696 0f0a0505 b52f9a9a     ..0(..7......./.
10022d2c:	090e0707 36241212 9b1b8080 3ddfe2e2     ......$6.......=
10022d3c:	26cdebeb 694e2727 cd7fb2b2 9fea7575     ...&''Ni....uu..
10022d4c:	1b120909 9e1d8383 74582c2c 2e341a1a     ........,,Xt..4.
10022d5c:	2d361b1b b2dc6e6e eeb45a5a fb5ba0a0     ..6-nn..ZZ....[.
10022d6c:	f6a45252 4d763b3b 61b7d6d6 ce7db3b3     RR..;;vM...a..}.
10022d7c:	7b522929 3edde3e3 715e2f2f 97138484     ))R{...>//^q....
10022d8c:	f5a65353 68b9d1d1 00000000 2cc1eded     SS.....h.......,
10022d9c:	60402020 1fe3fcfc c879b1b1 edb65b5b       @`......y.[[..
10022dac:	bed46a6a 468dcbcb d967bebe 4b723939     jj.....F..g.99rK
10022dbc:	de944a4a d4984c4c e8b05858 4a85cfcf     JJ..LL..XX.....J
10022dcc:	6bbbd0d0 2ac5efef e54faaaa 16edfbfb     ...k...*..O.....
10022ddc:	c5864343 d79a4d4d 55663333 94118585     CC..MM..33fU....
10022dec:	cf8a4545 10e9f9f9 06040202 81fe7f7f     EE..............
10022dfc:	f0a05050 44783c3c ba259f9f e34ba8a8     PP..<<xD..%...K.
10022e0c:	f3a25151 fe5da3a3 c0804040 8a058f8f     QQ....].@@......
10022e1c:	ad3f9292 bc219d9d 48703838 04f1f5f5     ..?...!.88pH....
10022e2c:	df63bcbc c177b6b6 75afdada 63422121     ..c...w....u!!Bc
10022e3c:	30201010 1ae5ffff 0efdf3f3 6dbfd2d2     .. 0...........m
10022e4c:	4c81cdcd 14180c0c 35261313 2fc3ecec     ...L......&5.../
10022e5c:	e1be5f5f a2359797 cc884444 392e1717     __....5.DD.....9
10022e6c:	5793c4c4 f255a7a7 82fc7e7e 477a3d3d     ...W..U.~~..==zG
10022e7c:	acc86464 e7ba5d5d 2b321919 95e67373     dd..]]....2+ss..
10022e8c:	a0c06060 98198181 d19e4f4f 7fa3dcdc     ``......OO......
10022e9c:	66442222 7e542a2a ab3b9090 830b8888     ""Df**T~..;.....
10022eac:	ca8c4646 29c7eeee d36bb8b8 3c281414     FF.....)..k...(<
10022ebc:	79a7dede e2bc5e5e 1d160b0b 76addbdb     ...y^^.........v
10022ecc:	3bdbe0e0 56643232 4e743a3a 1e140a0a     ...;22dV::tN....
10022edc:	db924949 0a0c0606 6c482424 e4b85c5c     II......$$Hl\\..
10022eec:	5d9fc2c2 6ebdd3d3 ef43acac a6c46262     ...]...n..C.bb..
10022efc:	a8399191 a4319595 37d3e4e4 8bf27979     ..9...1....7yy..
10022f0c:	32d5e7e7 438bc8c8 596e3737 b7da6d6d     ...2...C77nYmm..
10022f1c:	8c018d8d 64b1d5d5 d29c4e4e e049a9a9     .......dNN....I.
10022f2c:	b4d86c6c faac5656 07f3f4f4 25cfeaea     ll..VV.........%
10022f3c:	afca6565 8ef47a7a e947aeae 18100808     ee..zz....G.....
10022f4c:	d56fbaba 88f07878 6f4a2525 725c2e2e     ..o.xx..%%Jo..\r
10022f5c:	24381c1c f157a6a6 c773b4b4 5197c6c6     ..8$..W...s....Q
10022f6c:	23cbe8e8 7ca1dddd 9ce87474 213e1f1f     ...#...|tt....>!
10022f7c:	dd964b4b dc61bdbd 860d8b8b 850f8a8a     KK....a.........
10022f8c:	90e07070 427c3e3e c471b5b5 aacc6666     pp..>>|B..q.ff..
10022f9c:	d8904848 05060303 01f7f6f6 121c0e0e     HH..............
10022fac:	a3c26161 5f6a3535 f9ae5757 d069b9b9     aa..55j_WW....i.
10022fbc:	91178686 5899c1c1 273a1d1d b9279e9e     .......X..:'..'.
10022fcc:	38d9e1e1 13ebf8f8 b32b9898 33221111     ...8......+..."3
10022fdc:	bbd26969 70a9d9d9 89078e8e a7339494     ii.....p......3.
10022fec:	b62d9b9b 223c1e1e 92158787 20c9e9e9     ..-...<"....... 
10022ffc:	4987cece ffaa5555 78502828 7aa5dfdf     ...IUU..((Px...z
1002300c:	8f038c8c f859a1a1 80098989 171a0d0d     ......Y.........
1002301c:	da65bfbf 31d7e6e6 c6844242 b8d06868     ..e....1BB..hh..
1002302c:	c3824141 b0299999 775a2d2d 111e0f0f     AA....).--Zw....
1002303c:	cb7bb0b0 fca85454 d66dbbbb 3a2c1616     ..{.TT....m...,:
1002304c:	63a5c663 7c84f87c 7799ee77 7b8df67b     c..c|..|w..w{..{
1002305c:	f20dfff2 6bbdd66b 6fb1de6f c55491c5     ....k..ko..o..T.
1002306c:	30506030 01030201 67a9ce67 2b7d562b     0`P0....g..g+V}+
1002307c:	fe19e7fe d762b5d7 abe64dab 769aec76     ......b..M..v..v
1002308c:	ca458fca 829d1f82 c94089c9 7d87fa7d     ..E.......@.}..}
1002309c:	fa15effa 59ebb259 47c98e47 f00bfbf0     ....Y..YG..G....
100230ac:	adec41ad d467b3d4 a2fd5fa2 afea45af     .A....g.._...E..
100230bc:	9cbf239c a4f753a4 7296e472 c05b9bc0     .#...S..r..r..[.
100230cc:	b7c275b7 fd1ce1fd 93ae3d93 266a4c26     .u.......=..&Lj&
100230dc:	365a6c36 3f417e3f f702f5f7 cc4f83cc     6lZ6?~A?......O.
100230ec:	345c6834 a5f451a5 e534d1e5 f108f9f1     4h\4.Q....4.....
100230fc:	7193e271 d873abd8 31536231 153f2a15     q..q..s.1bS1.*?.
1002310c:	040c0804 c75295c7 23654623 c35e9dc3     ......R.#Fe#..^.
1002311c:	18283018 96a13796 050f0a05 9ab52f9a     .0(..7......./..
1002312c:	07090e07 12362412 809b1b80 e23ddfe2     .....$6.......=.
1002313c:	eb26cdeb 27694e27 b2cd7fb2 759fea75     ..&.'Ni'....u..u
1002314c:	091b1209 839e1d83 2c74582c 1a2e341a     ........,Xt,.4..
1002315c:	1b2d361b 6eb2dc6e 5aeeb45a a0fb5ba0     .6-.n..nZ..Z.[..
1002316c:	52f6a452 3b4d763b d661b7d6 b3ce7db3     R..R;vM;..a..}..
1002317c:	297b5229 e33edde3 2f715e2f 84971384     )R{)..>./^q/....
1002318c:	53f5a653 d168b9d1 00000000 ed2cc1ed     S..S..h.......,.
1002319c:	20604020 fc1fe3fc b1c879b1 5bedb65b      @` .....y..[..[
100231ac:	6abed46a cb468dcb bed967be 394b7239     j..j..F..g..9rK9
100231bc:	4ade944a 4cd4984c 58e8b058 cf4a85cf     J..JL..LX..X..J.
100231cc:	d06bbbd0 ef2ac5ef aae54faa fb16edfb     ..k...*..O......
100231dc:	43c58643 4dd79a4d 33556633 85941185     C..CM..M3fU3....
100231ec:	45cf8a45 f910e9f9 02060402 7f81fe7f     E..E............
100231fc:	50f0a050 3c44783c 9fba259f a8e34ba8     P..P<xD<.%...K..
1002320c:	51f3a251 a3fe5da3 40c08040 8f8a058f     Q..Q.]..@..@....
1002321c:	92ad3f92 9dbc219d 38487038 f504f1f5     .?...!..8pH8....
1002322c:	bcdf63bc b6c177b6 da75afda 21634221     .c...w....u.!Bc!
1002323c:	10302010 ff1ae5ff f30efdf3 d26dbfd2     . 0...........m.
1002324c:	cd4c81cd 0c14180c 13352613 ec2fc3ec     ..L......&5.../.
1002325c:	5fe1be5f 97a23597 44cc8844 17392e17     _.._.5..D..D..9.
1002326c:	c45793c4 a7f255a7 7e82fc7e 3d477a3d     ..W..U..~..~=zG=
1002327c:	64acc864 5de7ba5d 192b3219 7395e673     d..d]..].2+.s..s
1002328c:	60a0c060 81981981 4fd19e4f dc7fa3dc     `..`....O..O....
1002329c:	22664422 2a7e542a 90ab3b90 88830b88     "Df"*T~*.;......
100232ac:	46ca8c46 ee29c7ee b8d36bb8 143c2814     F..F..)..k...(<.
100232bc:	de79a7de 5ee2bc5e 0b1d160b db76addb     ..y.^..^......v.
100232cc:	e03bdbe0 32566432 3a4e743a 0a1e140a     ..;.2dV2:tN:....
100232dc:	49db9249 060a0c06 246c4824 5ce4b85c     I..I....$Hl$\..\
100232ec:	c25d9fc2 d36ebdd3 acef43ac 62a6c462     ..]...n..C..b..b
100232fc:	91a83991 95a43195 e437d3e4 798bf279     .9...1....7.y..y
1002330c:	e732d5e7 c8438bc8 37596e37 6db7da6d     ..2...C.7nY7m..m
1002331c:	8d8c018d d564b1d5 4ed29c4e a9e049a9     ......d.N..N.I..
1002332c:	6cb4d86c 56faac56 f407f3f4 ea25cfea     l..lV..V......%.
1002333c:	65afca65 7a8ef47a aee947ae 08181008     e..ez..z.G......
1002334c:	bad56fba 7888f078 256f4a25 2e725c2e     .o..x..x%Jo%.\r.
1002335c:	1c24381c a6f157a6 b4c773b4 c65197c6     .8$..W...s....Q.
1002336c:	e823cbe8 dd7ca1dd 749ce874 1f213e1f     ..#...|.t..t.>!.
1002337c:	4bdd964b bddc61bd 8b860d8b 8a850f8a     K..K.a..........
1002338c:	7090e070 3e427c3e b5c471b5 66aacc66     p..p>|B>.q..f..f
1002339c:	48d89048 03050603 f601f7f6 0e121c0e     H..H............
100233ac:	61a3c261 355f6a35 57f9ae57 b9d069b9     a..a5j_5W..W.i..
100233bc:	86911786 c15899c1 1d273a1d 9eb9279e     ......X..:'..'..
100233cc:	e138d9e1 f813ebf8 98b32b98 11332211     ..8......+..."3.
100233dc:	69bbd269 d970a9d9 8e89078e 94a73394     i..i..p......3..
100233ec:	9bb62d9b 1e223c1e 87921587 e920c9e9     .-...<"....... .
100233fc:	ce4987ce 55ffaa55 28785028 df7aa5df     ..I.U..U(Px(..z.
1002340c:	8c8f038c a1f859a1 89800989 0d171a0d     .....Y..........
1002341c:	bfda65bf e631d7e6 42c68442 68b8d068     .e....1.B..Bh..h
1002342c:	41c38241 99b02999 2d775a2d 0f111e0f     A..A.)..-Zw-....
1002343c:	b0cb7bb0 54fca854 bbd66dbb 163a2c16     .{..T..T.m...,:.
1002344c:	6363a5c6 7c7c84f8 777799ee 7b7b8df6     ..cc..||..ww..{{
1002345c:	f2f20dff 6b6bbdd6 6f6fb1de c5c55491     ......kk..oo.T..
1002346c:	30305060 01010302 6767a9ce 2b2b7d56     `P00......ggV}++
1002347c:	fefe19e7 d7d762b5 ababe64d 76769aec     .....b..M.....vv
1002348c:	caca458f 82829d1f c9c94089 7d7d87fa     .E.......@....}}
1002349c:	fafa15ef 5959ebb2 4747c98e f0f00bfb     ......YY..GG....
100234ac:	adadec41 d4d467b3 a2a2fd5f afafea45     A....g.._...E...
100234bc:	9c9cbf23 a4a4f753 727296e4 c0c05b9b     #...S.....rr.[..
100234cc:	b7b7c275 fdfd1ce1 9393ae3d 26266a4c     u.......=...Lj&&
100234dc:	36365a6c 3f3f417e f7f702f5 cccc4f83     lZ66~A??.....O..
100234ec:	34345c68 a5a5f451 e5e534d1 f1f108f9     h\44Q....4......
100234fc:	717193e2 d8d873ab 31315362 15153f2a     ..qq.s..bS11*?..
1002350c:	04040c08 c7c75295 23236546 c3c35e9d     .....R..Fe##.^..
1002351c:	18182830 9696a137 05050f0a 9a9ab52f     0(..7......./...
1002352c:	0707090e 12123624 80809b1b e2e23ddf     ....$6.......=..
1002353c:	ebeb26cd 2727694e b2b2cd7f 75759fea     .&..Ni''......uu
1002354c:	09091b12 83839e1d 2c2c7458 1a1a2e34     ........Xt,,4...
1002355c:	1b1b2d36 6e6eb2dc 5a5aeeb4 a0a0fb5b     6-....nn..ZZ[...
1002356c:	5252f6a4 3b3b4d76 d6d661b7 b3b3ce7d     ..RRvM;;.a..}...
1002357c:	29297b52 e3e33edd 2f2f715e 84849713     R{)).>..^q//....
1002358c:	5353f5a6 d1d168b9 00000000 eded2cc1     ..SS.h.......,..
1002359c:	20206040 fcfc1fe3 b1b1c879 5b5bedb6     @`  ....y.....[[
100235ac:	6a6abed4 cbcb468d bebed967 39394b72     ..jj.F..g...rK99
100235bc:	4a4ade94 4c4cd498 5858e8b0 cfcf4a85     ..JJ..LL..XX.J..
100235cc:	d0d06bbb efef2ac5 aaaae54f fbfb16ed     .k...*..O.......
100235dc:	4343c586 4d4dd79a 33335566 85859411     ..CC..MMfU33....
100235ec:	4545cf8a f9f910e9 02020604 7f7f81fe     ..EE............
100235fc:	5050f0a0 3c3c4478 9f9fba25 a8a8e34b     ..PPxD<<%...K...
1002360c:	5151f3a2 a3a3fe5d 4040c080 8f8f8a05     ..QQ].....@@....
1002361c:	9292ad3f 9d9dbc21 38384870 f5f504f1     ?...!...pH88....
1002362c:	bcbcdf63 b6b6c177 dada75af 21216342     c...w....u..Bc!!
1002363c:	10103020 ffff1ae5 f3f30efd d2d26dbf      0...........m..
1002364c:	cdcd4c81 0c0c1418 13133526 ecec2fc3     .L......&5.../..
1002365c:	5f5fe1be 9797a235 4444cc88 1717392e     ..__5.....DD.9..
1002366c:	c4c45793 a7a7f255 7e7e82fc 3d3d477a     .W..U.....~~zG==
1002367c:	6464acc8 5d5de7ba 19192b32 737395e6     ..dd..]]2+....ss
1002368c:	6060a0c0 81819819 4f4fd19e dcdc7fa3     ..``......OO....
1002369c:	22226644 2a2a7e54 9090ab3b 8888830b     Df""T~**;.......
100236ac:	4646ca8c eeee29c7 b8b8d36b 14143c28     ..FF.)..k...(<..
100236bc:	dede79a7 5e5ee2bc 0b0b1d16 dbdb76ad     .y....^^.....v..
100236cc:	e0e03bdb 32325664 3a3a4e74 0a0a1e14     .;..dV22tN::....
100236dc:	4949db92 06060a0c 24246c48 5c5ce4b8     ..II....Hl$$..\\
100236ec:	c2c25d9f d3d36ebd acacef43 6262a6c4     .]...n..C.....bb
100236fc:	9191a839 9595a431 e4e437d3 79798bf2     9...1....7....yy
1002370c:	e7e732d5 c8c8438b 3737596e 6d6db7da     .2...C..nY77..mm
1002371c:	8d8d8c01 d5d564b1 4e4ed29c a9a9e049     .....d....NNI...
1002372c:	6c6cb4d8 5656faac f4f407f3 eaea25cf     ..ll..VV.....%..
1002373c:	6565afca 7a7a8ef4 aeaee947 08081810     ..ee..zzG.......
1002374c:	babad56f 787888f0 25256f4a 2e2e725c     o.....xxJo%%\r..
1002375c:	1c1c2438 a6a6f157 b4b4c773 c6c65197     8$..W...s....Q..
1002376c:	e8e823cb dddd7ca1 74749ce8 1f1f213e     .#...|....tt>!..
1002377c:	4b4bdd96 bdbddc61 8b8b860d 8a8a850f     ..KKa...........
1002378c:	707090e0 3e3e427c b5b5c471 6666aacc     ..pp|B>>q.....ff
1002379c:	4848d890 03030506 f6f601f7 0e0e121c     ..HH............
100237ac:	6161a3c2 35355f6a 5757f9ae b9b9d069     ..aaj_55..WWi...
100237bc:	86869117 c1c15899 1d1d273a 9e9eb927     .....X..:'..'...
100237cc:	e1e138d9 f8f813eb 9898b32b 11113322     .8......+..."3..
100237dc:	6969bbd2 d9d970a9 8e8e8907 9494a733     ..ii.p......3...
100237ec:	9b9bb62d 1e1e223c 87879215 e9e920c9     -...<"....... ..
100237fc:	cece4987 5555ffaa 28287850 dfdf7aa5     .I....UUPx((.z..
1002380c:	8c8c8f03 a1a1f859 89898009 0d0d171a     ....Y...........
1002381c:	bfbfda65 e6e631d7 4242c684 6868b8d0     e....1....BB..hh
1002382c:	4141c382 9999b029 2d2d775a 0f0f111e     ..AA)...Zw--....
1002383c:	b0b0cb7b 5454fca8 bbbbd66d 16163a2c     {.....TTm...,:..

1002384c <rcon>:
1002384c:	01000000 02000000 04000000 08000000     ................
1002385c:	10000000 20000000 40000000 80000000     ....... ...@....
1002386c:	1b000000 36000000 5f43584d 45535341     .......6MXC_ASSE
1002387c:	25205452 25232073 28203a64 0a297325     RT %s #%d: (%s).
1002388c:	00000000 6573552f 732f7372 6c696f70     ..../Users/spoil
1002389c:	442f7265 6d75636f 73746e65 7469472f     er/Documents/Git
100238ac:	2f627548 2d544143 66746365 3230322d     Hub/CAT-ectf-202
100238bc:	736d2f34 4c2f6b64 61726269 73656972     4/msdk/Libraries
100238cc:	616f422f 2f736472 3758414d 30303038     /Boards/MAX78000
100238dc:	4854462f 65525f52 532f4176 6372756f     /FTHR_RevA/Sourc
100238ec:	6f622f65 2e647261 00000063 4c494146     e/board.c...FAIL
100238fc:	00000000                                ....

10023900 <num_leds>:
10023900:	00000003                                ....

10023904 <led_pin>:
10023904:	40080400 00000001 00010001 40080400     ...@...........@
10023914:	00000002 00010001 40080400 00000004     ...........@....
10023924:	00010001                                ....

10023928 <num_pbs>:
10023928:	00000002                                ....

1002392c <pb_pin>:
1002392c:	40008000 00000004 00010100 40009000     ...@...........@
1002393c:	00000080 00010100 6573552f 732f7372     ......../Users/s
1002394c:	6c696f70 442f7265 6d75636f 73746e65     poiler/Documents
1002395c:	7469472f 2f627548 2d544143 66746365     /GitHub/CAT-ectf
1002396c:	3230322d 736d2f34 4c2f6b64 61726269     -2024/msdk/Libra
1002397c:	73656972 73694d2f 69724463 73726576     ries/MiscDrivers
1002398c:	44454c2f 64656c2f 0000632e 20786469     /LED/led.c..idx 
1002399c:	756e203c 656c5f6d 00007364              < num_leds..

100239a8 <gpio_cfg_uart3>:
100239a8:	40080400 000000c0 00000003              ...@........

100239b4 <gpio_cfg_uart2>:
100239b4:	40009000 00000003 00000002              ...@........

100239c0 <gpio_cfg_uart1>:
100239c0:	40008000 00003000 00000002              ...@.0......

100239cc <gpio_cfg_uart0>:
100239cc:	40008000 00000003 00000002              ...@........

100239d8 <gpio_cfg_i2c2>:
100239d8:	40008000 c0000000 00000002              ...@........

100239e4 <gpio_cfg_i2c1>:
100239e4:	40008000 00030000 00000002              ...@........

100239f0 <gpio_cfg_i2c0>:
100239f0:	40008000 00000c00 00000002              ...@........

100239fc <gpio_cfg_extclk>:
100239fc:	40008000 00000008 00000002 6573552f     ...@......../Use
10023a0c:	732f7372 6c696f70 442f7265 6d75636f     rs/spoiler/Docum
10023a1c:	73746e65 7469472f 2f627548 2d544143     ents/GitHub/CAT-
10023a2c:	66746365 3230322d 736d2f34 4c2f6b64     ectf-2024/msdk/L
10023a3c:	61726269 73656972 534d432f 2e2f5349     ibraries/CMSIS/.
10023a4c:	65502f2e 68706972 76697244 2f737265     ./PeriphDrivers/
10023a5c:	72756f53 472f6563 2f4f4950 6f697067     Source/GPIO/gpio
10023a6c:	6d6f635f 2e6e6f6d 00000063 74726f70     _common.c...port
10023a7c:	4d203c20 435f4358 475f4746 5f4f4950      < MXC_CFG_GPIO_
10023a8c:	54534e49 45434e41 00000053              INSTANCES...

10023a98 <CSWTCH.16>:
10023a98:	40009000 40080400 40080600 00464e49     ...@...@...@INF.
10023aa8:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
10023ab8:	37363534 62613938 66656463 00000000     456789abcdef....
10023ac8:	33323130 37363534 42413938 46454443     0123456789ABCDEF
10023ad8:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

10023ae8 <zeroes.0>:
10023ae8:	30303030 30303030 30303030 30303030     0000000000000000

10023af8 <blanks.1>:
10023af8:	20202020 20202020 20202020 20202020                     

10023b08 <zeroes.0>:
10023b08:	30303030 30303030 30303030 30303030     0000000000000000

10023b18 <blanks.1>:
10023b18:	20202020 20202020 20202020 20202020                     
10023b28:	435f434c 414c4c4f 00004554 435f434c     LC_COLLATE..LC_C
10023b38:	45505954 00000000 4d5f434c 54454e4f     TYPE....LC_MONET
10023b48:	00595241 4e5f434c 52454d55 00004349     ARY.LC_NUMERIC..
10023b58:	545f434c 00454d49 4d5f434c 41535345     LC_TIME.LC_MESSA
10023b68:	00534547                                GES.

10023b6c <_ctype_>:
10023b6c:	20202000 20202020 28282020 20282828     .         ((((( 
10023b7c:	20202020 20202020 20202020 20202020                     
10023b8c:	10108820 10101010 10101010 10101010      ...............
10023b9c:	04040410 04040404 10040404 10101010     ................
10023bac:	41411010 41414141 01010101 01010101     ..AAAAAA........
10023bbc:	01010101 01010101 01010101 10101010     ................
10023bcc:	42421010 42424242 02020202 02020202     ..BBBBBB........
10023bdc:	02020202 02020202 02020202 10101010     ................
10023bec:	00000020 00000000 00000000 00000000      ...............
	...
10023c70:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
10023c80:	6c6c6142 7320636f 65636375 64656465     Balloc succeeded
10023c90:	00000000 6c6f562f 73656d75 7461642f     ..../Volumes/dat
10023ca0:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
10023cb0:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
10023cc0:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
10023cd0:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
10023ce0:	696c2f62 732f6362 696c6474 74642f62     b/libc/stdlib/dt
10023cf0:	632e616f 00000000                       oa.c....

10023cf8 <zeroes.0>:
10023cf8:	30303030 30303030 30303030 30303030     0000000000000000

10023d08 <blanks.1>:
10023d08:	20202020 20202020 20202020 20202020                     
10023d18:	646c2565 00000000                       e%ld....

10023d20 <basefix.0>:
10023d20:	0001000a 00030002 00050004 00070006     ................
10023d30:	00090008 000b000a 000d000c 000f000e     ................
10023d40:	00000010 6c6f562f 73656d75 7461642f     ..../Volumes/dat
10023d50:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
10023d60:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
10023d70:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
10023d80:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
10023d90:	696c2f62 732f6362 696c6474 706d2f62     b/libc/stdlib/mp
10023da0:	2e636572 00000063                       rec.c...

10023da8 <p05.0>:
10023da8:	00000005 00000019 0000007d 00000000     ........}.......

10023db8 <__mprec_bigtens>:
10023db8:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
10023dc8:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
10023dd8:	7f73bf3c 75154fdd                       <.s..O.u

10023de0 <__mprec_tens>:
10023de0:	00000000 3ff00000 00000000 40240000     .......?......$@
10023df0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
10023e00:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
10023e10:	00000000 412e8480 00000000 416312d0     .......A......cA
10023e20:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
10023e30:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
10023e40:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
10023e50:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
10023e60:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
10023e70:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
10023e80:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
10023e90:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
10023ea0:	79d99db4 44ea7843 0000666e 74696e69     ...yCx.Dnf..init
10023eb0:	00000079 00006e61                       y...an..

10023eb8 <fpinan.0>:
10023eb8:	00000034 fffffbce 000003cb 00000001     4...............
10023ec8:	00000000                                ....

10023ecc <fpi.1>:
10023ecc:	00000035 fffffbce 000003cb 00000001     5...............
10023edc:	00000000                                ....

10023ee0 <tinytens>:
10023ee0:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
10023ef0:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
10023f00:	64ac6f43 11680628 7566202c 6974636e     Co.d(.h., functi
10023f10:	203a6e6f 00000000 65737361 6f697472     on: ....assertio
10023f20:	2522206e 66202273 656c6961 66203a64     n "%s" failed: f
10023f30:	20656c69 22732522 696c202c 2520656e     ile "%s", line %
10023f40:	25732564 00000a73 0053494a 53494a53     d%s%s...JIS.SJIS
10023f50:	00000000 4a435545 00000050              ....EUCJP...

10023f5c <d02f4>:
10023f5c:	4e105f0c 4e2a4e15 4e364e31 4e3f4e3c     ._.N.N*N1N6N<N?N
10023f6c:	4e564e42 4e824e58 8c6b4e85 82124e8a     BNVNXN.N.Nk..N..
10023f7c:	4e8e5f0d 4e9f4e9e 4ea24ea0 4eb34eb0     ._.N.N.N.N.N.N.N
10023f8c:	4ece4eb6 4ec44ecd 4ec24ec6 4ede4ed7     .N.N.N.N.N.N.N.N
10023f9c:	4edf4eed 4f094ef7 4f304f5a 4f5d4f5b     .N.N.N.OZO0O[O]O
10023fac:	4f474f57 4f884f76 4f984f8f 4f694f7b     WOGOvO.O.O.O{OiO
10023fbc:	4f914f70 4f864f6f 51184f96 4fdf4fd4     pO.OoO.O.O.Q.O.O
10023fcc:	4fd84fce 4fd14fdb 4fd04fda 4fe54fe4     .O.O.O.O.O.O.O.O
10023fdc:	5028501a 502a5014 50055025 4ff64f1c     .P(P.P*P%P.P.O.O
10023fec:	50295021 4ffe502c 50114fef 50435006     !P)P,P.O.O.P.PCP
10023ffc:	67035047 50505055 505a5048 506c5056     GP.gUPPPHPZPVPlP
1002400c:	50805078 5085509a 50b250b4 50ca50c9     xP.P.P.P.P.P.P.P
1002401c:	50c250b3 50de50d6 50ed50e5 50ee50e3     .P.P.P.P.P.P.P.P
1002402c:	50f550f9 51015109 51165102 51145115     .P.P.Q.Q.Q.Q.Q.Q
1002403c:	5121511a 5137513a 513b513c 5140513f     .Q!Q:Q7Q<Q;Q?Q@Q
1002404c:	514c5152 51625154 51697af8 516e516a     RQLQTQbQ.ziQjQnQ
1002405c:	51825180 518c56d8 518f5189 51935191     .Q.Q.V.Q.Q.Q.Q.Q
1002406c:	51965195 51a651a4 51a951a2 51ab51aa     .Q.Q.Q.Q.Q.Q.Q.Q
1002407c:	51b151b3 51b051b2 51bd51b5 51c951c5     .Q.Q.Q.Q.Q.Q.Q.Q
1002408c:	51e051db 51e98655 51f051ed 51fe51f5     .Q.QU..Q.Q.Q.Q.Q
1002409c:	520b5204 520e5214 522a5227 5233522e     .R.R.R.R'R*R.R3R
100240ac:	524f5239 524b5244 525e524c 526a5254     9RORDRKRLR^RTRjR
100240bc:	52695274 527f5273 528d527d 52925294     tRiRsR.R}R.R.R.R
100240cc:	52885271 8fa85291 52ac8fa7 52bc52ad     qR.R.R.....R.R.R
100240dc:	52c152b5 52d752cd 52e352de 98ed52e6     .R.R.R.R.R.R.R..
100240ec:	52f352e0 52f852f5 530652f9 75385308     .R.R.R.R.R.S.S8u
100240fc:	5310530d 5315530f 5323531a 5331532f     .S.S.S.S.S#S/S1S
1002410c:	53385333 53465340 4e175345 534d5349     3S8S@SFSES.NISMS
1002411c:	535e51d6 536e5369 537b5918 53825377     .Q^SiSnS.Y{SwS.S
1002412c:	53a05396 53a553a6 53b053ae 53c353b6     .S.S.S.S.S.S.S.S
1002413c:	96d97c12 66fc53df 53ee71ee 53ed53e8     .|...S.f.q.S.S.S
1002414c:	540153fa 5440543d 542d542c 542e543c     .S.T=T@T,T-T<T.T
1002415c:	54295436 544e541d 5475548f 545f548e     6T)T.TNT.TuT.T_T
1002416c:	54775471 54925470 5480547b 54845476     qTwTpT.T{T.TvT.T
1002417c:	54865490 54a254c7 54a554b8 54c454ac     .T.T.T.T.T.T.T.T
1002418c:	54a854c8 54c254ab 54be54a4 54d854bc     .T.T.T.T.T.T.T.T
1002419c:	54e654e5 5514550f 54ee54fd 54fa54ed     .T.T.U.U.T.T.T.T
100241ac:	553954e2 55635540 552e554c 5545555c     .T9U@UcULU.U\UEU
100241bc:	55575556 55335538 5599555d 54af5580     VUWU8U3U]U.U.U.T
100241cc:	559f558a 557e557b 559e5598 557c55ae     .U.U{U~U.U.U.U|U
100241dc:	55a95583 55a85587 55c555da 55c455df     .U.U.U.U.U.U.U.U
100241ec:	55e455dc 561455d4 561655f7 55fd55fe     .U.U.U.V.U.V.U.U
100241fc:	55f9561b 5650564e 563471df 56325636     .V.UNVPV.q4V6V2V
1002420c:	566b5638 562f5664 566a566c 56805686     8VkVdV/VlVjV.V.V
1002421c:	56a0568a 568f5694 56ae56a5 56b456b6     .V.V.V.V.V.V.V.V
1002422c:	56bc56c2 56c356c1 56c856c0 56d156ce     .V.V.V.V.V.V.V.V
1002423c:	56d756d3 56f956ee 56ff5700 57095704     .V.V.V.V.W.V.W.W
1002424c:	570b5708 5713570d 57165718 571c55c7     .W.W.W.W.W.W.U.W
1002425c:	57375726 574e5738 5740573b 5769574f     &W7W8WNW;W@WOWiW
1002426c:	578857c0 577f5761 57935789 57b357a0     .W.WaW.W.W.W.W.W
1002427c:	57aa57a4 57c357b0 57d457c6 57d357d2     .W.W.W.W.W.W.W.W
1002428c:	57d6580a 580b57e3 581d5819 58215872     .X.W.W.X.X.XrX!X
1002429c:	584b5862 6bc05870 583d5852 58855879     bXKXpX.kRX=XyX.X
100242ac:	589f58b9 58ba58ab 58bb58de 58ae58b8     .X.X.X.X.X.X.X.X
100242bc:	58d358c5 58d758d1 58d858d9 58dc58e5     .X.X.X.X.X.X.X.X
100242cc:	58df58e4 58fa58ef 58fb58f9 58fd58fc     .X.X.X.X.X.X.X.X
100242dc:	590a5902 591b5910 592568a6 592d592c     .Y.Y.Y.Y.h%Y,Y-Y
100242ec:	59385932 7ad2593e 59505955 595a594e     2Y8Y>Y.zUYPYNYZY
100242fc:	59625958 59675960 5969596c 59815978     XYbY`YgYlYiYxY.Y
1002430c:	4f5e599d 59a34fab 59c659b2 59dc59e8     .Y^O.O.Y.Y.Y.Y.Y
1002431c:	59d9598d 5a2559da 5a115a1f 5a095a1c     .Y.Y.Y%Z.Z.Z.Z.Z
1002432c:	5a405a1a 5a495a6c 5a365a35 5a6a5a62     .Z@ZlZIZ5Z6ZbZjZ
1002433c:	5abc5a9a 5acb5abe 5abd5ac2 5ad75ae3     .Z.Z.Z.Z.Z.Z.Z.Z
1002434c:	5ae95ae6 5afa5ad6 5b0c5afb 5b165b0b     .Z.Z.Z.Z.Z.[.[.[
1002435c:	5ad05b32 5b365b2a 5b435b3e 5b405b45     2[.Z*[6[>[C[E[@[
1002436c:	5b555b51 5b5b5b5a 5b695b65 5b735b70     Q[U[Z[[[e[i[p[s[
1002437c:	5b785b75 5b7a6588 5b835b80 5bb85ba6     u[x[.ez[.[.[.[.[
1002438c:	5bc75bc3 5bd45bc9 5be45bd0 5be25be6     .[.[.[.[.[.[.[.[
1002439c:	5be55bde 5bf05beb 5bf35bf6 5c075c05     .[.[.[.[.[.[.\.\
100243ac:	5c0d5c08 5c205c13 5c285c22 5c395c38     .\.\.\ \"\(\8\9\
100243bc:	5c465c41 5c535c4e 5c4f5c50 5c6c5b71     A\F\N\S\P\O\q[l\
100243cc:	4e625c6e 5c795c76 5c915c8c 599b5c94     n\bNv\y\.\.\.\.Y
100243dc:	5cbb5cab 5cbc5cb6 5cc55cb7 5cc75cbe     .\.\.\.\.\.\.\.\
100243ec:	5ce95cd9 5cfa5cfd 5d8c5ced 5d0b5cea     .\.\.\.\.\.].\.]
100243fc:	5d175d15 5d1f5d5c 5d115d1b 5d225d14     .].]\].].].].]"]
1002440c:	5d195d1a 5d4c5d18 5d4e5d52 5d6c5d4b     .].].]L]R]N]K]l]
1002441c:	5d765d73 5d845d87 5da25d82 5dac5d9d     s]v].].].].].].]
1002442c:	5dbd5dae 5db75d90 5dc95dbc 5dd35dcd     .].].].].].].].]
1002443c:	5dd65dd2 5deb5ddb 5df55df2 5e1a5e0b     .].].].].].].^.^
1002444c:	5e115e19 5e365e1b 5e445e37 5e405e43     .^.^.^6^7^D^C^@^
1002445c:	5e575e4e 5e5f5e54 5e645e62 5e755e47     N^W^T^_^b^d^G^u^
1002446c:	5e7a5e76 5e7f9ebc 5ec15ea0 5ec85ec2     v^z^...^.^.^.^.^
1002447c:	5ecf5ed0 5ee35ed6 5eda5edd 5ee25edb     .^.^.^.^.^.^.^.^
1002448c:	5ee85ee1 5eec5ee9 5ef35ef1 5ef45ef0     .^.^.^.^.^.^.^.^
1002449c:	5efe5ef8 5f095f03 5f5c5f5d 5f115f0b     .^.^._._]_\_._._
100244ac:	5f295f16 5f385f2d 5f485f41 5f4e5f4c     ._)_-_8_A_H_L_N_
100244bc:	5f515f2f 5f575f56 5f615f59 5f735f6d     /_Q_V_W_Y_a_m_s_
100244cc:	5f835f77 5f7f5f82 5f885f8a 5f875f91     w_._._._._._._._
100244dc:	5f995f9e 5fa05f98 5fad5fa8 5fd65fbc     ._._._._._._._._
100244ec:	5fe45ffb 5ff15ff8 60b35fdd 60215fff     ._._._._._.`._!`
100244fc:	60196060 60296010 6031600e 6015601b     ``.`.`)`.`1`.`.`
1002450c:	6026602b 603a600f 6041605a 6077606a     +`&`.`:`Z`A`j`w`
1002451c:	604a605f 604d6046 60436063 60426064     _`J`F`M`c`C`d`B`
1002452c:	606b606c 60816059 60e7608d 609a6083     l`k`Y`.`.`.`.`.`
1002453c:	609b6084 60976096 60a76092 60e1608b     .`.`.`.`.`.`.`.`
1002454c:	60e060b8 60b460d3 60bd5ff0 60b560c6     .`.`.`.`._.`.`.`
1002455c:	614d60d8 61066115 60f760f6 60f46100     .`Ma.a.a.`.`.a.`
1002456c:	610360fa 60fb6121 610d60f1 6147610e     .`.a!a.`.`.a.aGa
1002457c:	6128613e 614a6127 613c613f 6134612c     >a(a'aJa?a<a,a4a
1002458c:	6142613d 61736144 61586177 615a6159     =aBaDasawaXaYaZa
1002459c:	6174616b 6165616f 615f6171 6153615d     kataoaeaqa_a]aSa
100245ac:	61996175 61876196 619461ac 618a619a     ua.a.a.a.a.a.a.a
100245bc:	61ab6191 61cc61ae 61c961ca 61c861f7     .a.a.a.a.a.a.a.a
100245cc:	61c661c3 61cb61ba 61cd7f79 61e361e6     .a.a.a.ay..a.a.a
100245dc:	61fa61f6 61ff61f4 61fc61fd 620061fe     .a.a.a.a.a.a.a.b
100245ec:	62096208 620c620d 621b6214 6221621e     .b.b.b.b.b.b.b!b
100245fc:	622e622a 62326230 62416233 625e624e     *b.b0b2b3bAbNb^b
1002460c:	625b6263 62686260 6282627c 627e6289     cb[b`bhb|b.b.b~b
1002461c:	62936292 62d46296 62946283 62d162d7     .b.b.b.b.b.b.b.b
1002462c:	62cf62bb 62c662ff 62c864d4 62cc62dc     .b.b.b.b.d.b.b.b
1002463c:	62c262ca 629b62c7 630c62c9 62f162ee     .b.b.b.b.b.c.b.b
1002464c:	63026327 62ef6308 635062f5 634d633e     'c.c.c.b.bPc>cMc
1002465c:	634f641c 638e6396 63ab6380 63a36376     .dOc.c.c.c.cvc.c
1002466c:	6389638f 63b5639f 6369636b 63e963be     .c.c.c.ckcic.c.c
1002467c:	63c663c0 63c963e3 63f663d2 641663c4     .c.c.c.c.c.c.c.d
1002468c:	64066434 64266413 651d6436 64286417     4d.d.d&d6d.e.d(d
1002469c:	6467640f 6476646f 652a644e 64936495     .dgdodvdNd*e.d.d
100246ac:	64a964a5 64bc6488 64d264da 64c764c5     .d.d.d.d.d.d.d.d
100246bc:	64d864bb 64f164c2 820964e7 64e164e0     .d.d.d.d.d...d.d
100246cc:	64e362ac 652c64ef 64f464f6 64fa64f2     .b.d.d,e.d.d.d.d
100246dc:	64fd6500 651c6518 65246505 652b6523     .e.d.e.e.e$e#e+e
100246ec:	65356534 65366537 754b6538 65566548     4e5e7e6e8eKuHeVe
100246fc:	654d6555 655e6558 6572655d 65826578     UeMeXe^e]erexe.e
1002470c:	8b8a6583 659f659b 65b765ab 65c665c3     .e...e.e.e.e.e.e
1002471c:	65c465c1 65d265cc 65d965db 65e165e0     .e.e.e.e.e.e.e.e
1002472c:	677265f1 6603660a 677365fb 66366635     .erg.f.f.esg5f6f
1002473c:	661c6634 6644664f 66416649 665d665e     4f.fOfDfIfAf^f]f
1002474c:	66676664 665f6668 66706662 66886683     dfgfhf_fbfpf.f.f
1002475c:	6689668e 66986684 66c1669d 66c966b9     .f.f.f.f.f.f.f.f
1002476c:	66bc66be 66b866c4 66da66d6 663f66e0     .f.f.f.f.f.f.f?f
1002477c:	66e966e6 66f566f0 670f66f7 671e6716     .f.f.f.f.f.g.g.g
1002478c:	67276726 672e9738 6736673f 67386741     &g'g8..g?g6gAg8g
1002479c:	67466737 6760675e 67636759 67896764     7gFg^g`gYgcgdg.g
100247ac:	67a96770 676a677c 678b678c 67a167a6     pg.g|gjg.g.g.g.g
100247bc:	67b76785 67b467ef 67b367ec 67b867e9     .g.g.g.g.g.g.g.g
100247cc:	67de67e4 67e267dd 67b967ee 67c667ce     .g.g.g.g.g.g.g.g
100247dc:	6a9c67e7 6846681e 68406829 6832684d     .g.j.hFh)h@hMh2h
100247ec:	68b3684e 6859682b 68776863 689f687f     Nh.h+hYhchwh.h.h
100247fc:	68ad688f 689d6894 6883689b 68b96aae     .h.h.h.h.h.h.j.h
1002480c:	68b56874 68ba68a0 688d690f 6901687e     th.h.h.h.i.h~h.i
1002481c:	690868ca 692268d8 68e16926 68cd690c     .h.i.h"i&i.h.i.h
1002482c:	68e768d4 693668d5 69046912 68e368d7     .h.h.h6i.i.i.h.h
1002483c:	68f96925 68ef68e0 692a6928 6923691a     %i.h.h.h(i*i.i#i
1002484c:	68c66921 69776979 6978695c 6954696b     !i.hyiwi\ixikiTi
1002485c:	696e697e 69746939 6959693d 69616930     ~ini9iti=iYi0iai
1002486c:	695d695e 696a6981 69ae69b2 69bf69d0     ^i]i.iji.i.i.i.i
1002487c:	69d369c1 69ce69be 69ca5be8 69bb69dd     .i.i.i.i.[.i.i.i
1002488c:	69a769c3 69916a2e 699c69a0 69b46995     .i.i.j.i.i.i.i.i
1002489c:	69e869de 6a1b6a02 6b0a69ff 69f269f9     .i.i.j.j.i.k.i.i
100248ac:	6a0569e7 6a1e69b1 6a1469ed 6a0a69eb     .i.j.i.j.i.j.i.j
100248bc:	6ac16a12 6a136a23 6a0c6a44 6a366a72     .j.j#j.jDj.jrj6j
100248cc:	6a476a78 6a596a62 6a486a66 6a226a38     xjGjbjYjfjHj8j"j
100248dc:	6a8d6a90 6a846aa0 6aa36aa2 86176a97     .j.j.j.j.j.j.j..
100248ec:	6ac36abb 6ab86ac2 6aac6ab3 6ad16ade     .j.j.j.j.j.j.j.j
100248fc:	6aaa6adf 6aea6ada 6b056afb 6afa8616     .j.j.j.j.j.k...j
1002490c:	6b166b12 6b1f9b31 6b376b38 6b3976dc     .k.k1..k8k7k.v9k
1002491c:	6b4798ee 6b496b43 6b596b50 6b5b6b54     ..GkCkIkPkYkTk[k
1002492c:	6b616b5f 6b796b78 6b806b7f 6b836b84     _kakxkyk.k.k.k.k
1002493c:	6b986b8d 6b9e6b95 6baa6ba4 6baf6bab     .k.k.k.k.k.k.k.k
1002494c:	6bb16bb2 6bb76bb3 6bc66bbc 6bd36bcb     .k.k.k.k.k.k.k.k
1002495c:	6bec6bdf 6bf36beb 9ebe6bef 6c136c08     .k.k.k.k.k...l.l
1002496c:	6c1b6c14 6c236c24 6c556c5e 6c6a6c62     .l.l$l#l^lUlbljl
1002497c:	6c8d6c82 6c816c9a 6c7e6c9b 6c736c68     .l.l.l.l.l~lhlsl
1002498c:	6c906c92 6cf16cc4 6cbd6cd3 6cc56cd7     .l.l.l.l.l.l.l.l
1002499c:	6cae6cdd 6cbe6cb1 6cdb6cba 6cd96cef     .l.l.l.l.l.l.l.l
100249ac:	6d1f6cea 6d36884d 6d3d6d2b 6d196d38     .l.mM.6m+m=m8m.m
100249bc:	6d336d35 6d0c6d12 6d936d63 6d5a6d64     5m3m.m.mcm.mdmZm
100249cc:	6d596d79 6d956d8e 6d856fe4 6e156df9     ymYm.m.m.o.m.m.n
100249dc:	6db56e0a 6de66dc7 6dc66db8 6dde6dec     .n.m.m.m.m.m.m.m
100249ec:	6de86dcc 6dc56dd2 6dd96dfa 6dd56de4     .m.m.m.m.m.m.m.m
100249fc:	6dee6dea 6e6e6e2d 6e196e2e 6e5f6e72     .m.m-nnn.n.nrn_n
10024a0c:	6e236e3e 6e2b6e6b 6e4d6e76 6e436e1f     >n#nkn+nvnMn.nCn
10024a1c:	6e4e6e3a 6eff6e24 6e386e1d 6eaa6e82     :nNn$n.n.n8n.n.n
10024a2c:	6ec96e98 6ed36eb7 6eaf6ebd 6eb26ec4     .n.n.n.n.n.n.n.n
10024a3c:	6ed56ed4 6ea56e8f 6e9f6ec2 6f116f41     .n.n.n.n.n.nAo.o
10024a4c:	6eec704c 6efe6ef8 6ef26f3f 6eef6f31     Lp.n.n.n?o.n1o.n
10024a5c:	6ecc6f32 6f136f3e 6f866ef7 6f786f7a     2o.n>o.o.n.ozoxo
10024a6c:	6f806f81 6f5b6f6f 6f6d6ff3 6f7c6f82     .o.ooo[o.omo.o|o
10024a7c:	6f8e6f58 6fc26f91 6fb36f66 6fa16fa3     Xo.o.o.ofo.o.o.o
10024a8c:	6fb96fa4 6faa6fc6 6fd56fdf 6fd46fec     .o.o.o.o.o.o.o.o
10024a9c:	6ff16fd8 6fdb6fee 700b7009 70116ffa     .o.o.o.o.p.p.o.p
10024aac:	700f7001 701b6ffe 6f74701a 7018701d     .p.p.o.p.pto.p.p
10024abc:	7030701f 7032703e 70637051 70927099     .p0p>p2pQpcp.p.p
10024acc:	70f170af 70b870ac 70ae70b3 70cb70df     .p.p.p.p.p.p.p.p
10024adc:	70d970dd 70fd7109 7119711c 71557165     .p.p.q.p.q.qeqUq
10024aec:	71667188 714c7162 716c7156 71fb718f     .qfqbqLqVqlq.q.q
10024afc:	71957184 71ac71a8 71b971d7 71d271be     .q.q.q.q.q.q.q.q
10024b0c:	71d471c9 71e071ce 71e771ec 71fc71f5     .q.q.q.q.q.q.q.q
10024b1c:	71ff71f9 7210720d 7228721b 722c722d     .q.q.r.r.r(r-r,r
10024b2c:	72327230 723c723b 7240723f 724b7246     0r2r;r<r?r@rFrKr
10024b3c:	72747258 7282727e 72877281 72967292     Xrtr~r.r.r.r.r.r
10024b4c:	72a772a2 72b272b9 72c672c3 72ce72c4     .r.r.r.r.r.r.r.r
10024b5c:	72e272d2 72e172e0 72f772f9 7317500f     .r.r.r.r.r.r.P.s
10024b6c:	731c730a 731d7316 732f7334 73257329     .s.s.s.s4s/s)s%s
10024b7c:	734e733e 9ed8734f 736a7357 73707368     >sNsOs..Wsjshsps
10024b8c:	73757378 737a737b 73b373c8 73bb73ce     xsus{szs.s.s.s.s
10024b9c:	73e573c0 73de73ee 740574a2 7425746f     .s.s.s.s.t.tot%t
10024bac:	743273f8 7455743a 745f743f 74417459     .s2t:tUt?t_tYtAt
10024bbc:	7469745c 74637470 7476746a 748b747e     \titptctjtvt~t.t
10024bcc:	74a7749e 74cf74ca 73f174d4 74e374e0     .t.t.t.t.t.s.t.t
10024bdc:	74e974e7 74f274ee 74f174f0 74f774f8     .t.t.t.t.t.t.t.t
10024bec:	75037504 750c7505 750d750e 75137515     .u.u.u.u.u.u.u.u
10024bfc:	7526751e 753c752c 754d7544 7549754a     .u&u,u<uDuMuJuIu
10024c0c:	7546755b 7569755a 75677564 756d756b     [uFuZuiudugukumu
10024c1c:	75767578 75877586 758a7574 75827589     xuvu.u.utu.u.u.u
10024c2c:	759a7594 75a5759d 75c275a3 75c375b3     .u.u.u.u.u.u.u.u
10024c3c:	75bd75b5 75bc75b8 75cd75b1 75d275ca     .u.u.u.u.u.u.u.u
10024c4c:	75e375d9 75fe75de 75fc75ff 75f07601     .u.u.u.u.u.u.v.u
10024c5c:	75f275fa 760b75f3 7609760d 7627761f     .u.u.u.v.v.v.v'v
10024c6c:	76217620 76247622 76307634 7647763b      v!v"v$v4v0v;vGv
10024c7c:	76467648 7658765c 76627661 76697668     HvFv\vXvavbvhviv
10024c8c:	7667766a 7670766c 76767672 767c7678     jvgvlvpvrvvvxv|v
10024c9c:	76837680 768b7688 7696768e 76997693     .v.v.v.v.v.v.v.v
10024cac:	76b0769a 76b876b4 76ba76b9 76cd76c2     .v.v.v.v.v.v.v.v
10024cbc:	76d276d6 76e176de 76e776e5 862f76ea     .v.v.v.v.v.v.v/.
10024ccc:	770876fb 77047707 77247729 7725771e     .v.w.w.w)w$w.w%w
10024cdc:	771b7726 77387737 775a7747 776b7768     &w.w7w8wGwZwhwkw
10024cec:	7765775b 777e777f 778e7779 7791778b     [wew.w~wyw.w.w.w
10024cfc:	779e77a0 77b677b0 77bf77b9 77bd77bc     .w.w.w.w.w.w.w.w
10024d0c:	77c777bb 77d777cd 77dc77da 77ee77e3     .w.w.w.w.w.w.w.w
10024d1c:	780c77fc 79267812 792a7820 788e7845     .w.x.x&y x*yEx.x
10024d2c:	78867874 789a787c 78a3788c 78aa78b5     tx.x|x.x.x.x.x.x
10024d3c:	78d178af 78cb78c6 78be78d4 78c578bc     .x.x.x.x.x.x.x.x
10024d4c:	78ec78ca 78da78e7 78f478fd 79127907     .x.x.x.x.x.x.y.y
10024d5c:	79197911 792b792c 79607940 795f7957     .y.y,y+y@y`yWy_y
10024d6c:	7955795a 797a7953 798a797f 79a7799d     ZyUySyzy.y.y.y.y
10024d7c:	79aa9f4b 79b379ae 79ba79b9 79d579c9     K..y.y.y.y.y.y.y
10024d8c:	79ec79e7 79e379e1 7a0d7a08 7a197a18     .y.y.y.y.z.z.z.z
10024d9c:	7a1f7a20 7a317980 7a3e7a3b 7a437a37      z.z.y1z;z>z7zCz
10024dac:	7a497a57 7a627a61 9f9d7a69 7a797a70     WzIzazbziz..pzyz
10024dbc:	7a887a7d 7a957a97 7a967a98 7ac87aa9     }z.z.z.z.z.z.z.z
10024dcc:	7ab67ab0 7ac47ac5 90837abf 7aca7ac7     .z.z.z.z.z...z.z
10024ddc:	7acf7acd 7ad37ad5 7ada7ad9 7ae17add     .z.z.z.z.z.z.z.z
10024dec:	7ae67ae2 7af07aed 7b0f7b02 7b067b0a     .z.z.z.z.{.{.{.{
10024dfc:	7b187b33 7b1e7b19 7b287b35 7b507b36     3{.{.{.{5{({6{P{
10024e0c:	7b047b7a 7b0b7b4d 7b457b4c 7b657b75     z{.{M{.{L{E{u{e{
10024e1c:	7b677b74 7b717b70 7b6e7b6c 7b987b9d     t{g{p{q{l{n{.{.{
10024e2c:	7b8d7b9f 7b9a7b9c 7b927b8b 7b5d7b8f     .{.{.{.{.{.{.{]{
10024e3c:	7bcb7b99 7bcc7bc1 7bb47bcf 7bdd7bc6     .{.{.{.{.{.{.{.{
10024e4c:	7c117be9 7be67c14 7c607be5 7c077c00     .{.|.|.{.{`|.|.|
10024e5c:	7bf37c13 7c177bf7 7bf67c0d 7c277c23     .|.{.{.|.|.{#|'|
10024e6c:	7c1f7c2a 7c2b7c37 7c4c7c3d 7c547c43     *|.|7|+|=|L|C|T|
10024e7c:	7c407c4f 7c587c50 7c647c5f 7c657c56     O|@|P|X|_|d|V|e|
10024e8c:	7c757c6c 7c907c83 7cad7ca4 7cab7ca2     l|u|.|.|.|.|.|.|
10024e9c:	7ca87ca1 7cb27cb3 7cae7cb1 7cbd7cb9     .|.|.|.|.|.|.|.|
10024eac:	7cc57cc0 7cd87cc2 7cdc7cd2 9b3b7ce2     .|.|.|.|.|.|.|;.
10024ebc:	7cf27cef 7cf67cf4 7d067cfa 7d1c7d02     .|.|.|.|.|.}.}.}
10024ecc:	7d0a7d15 7d4b7d45 7d327d2e 7d357d3f     .}.}E}K}.}2}?}5}
10024edc:	7d737d46 7d4e7d56 7d687d72 7d4f7d6e     F}s}V}N}r}h}n}O}
10024eec:	7d937d63 7d5b7d89 7d7d7d8f 7dba7d9b     c}.}.}[}.}}}.}.}
10024efc:	7da37dae 7dc77db5 7dab7dbd 7da27e3d     .}.}.}.}.}.}=~.}
10024f0c:	7ddc7daf 7d9f7db8 7dd87db0 7de47ddd     .}.}.}.}.}.}.}.}
10024f1c:	7dfb7dde 7de17df2 7e0a7e05 7e217e23     .}.}.}.}.~.~#~!~
10024f2c:	7e317e12 7e097e1f 7e227e0b 7e667e46     .~1~.~.~.~"~F~f~
10024f3c:	7e357e3b 7e437e39 7e327e37 7e677e3a     ;~5~9~C~7~2~:~g~
10024f4c:	7e567e5d 7e597e5e 7e797e5a 7e697e6a     ]~V~^~Y~Z~y~j~i~
10024f5c:	7e7b7e7c 7dd57e83 8fae7e7d 7e887e7f     |~{~.~.}}~...~.~
10024f6c:	7e8c7e89 7e907e92 7e947e93 7e8e7e96     .~.~.~.~.~.~.~.~
10024f7c:	7e9c7e9b 7f3a7f38 7f4c7f45 7f4e7f4d     .~.~8.:.E.L.M.N.
10024f8c:	7f517f50 7f547f55 7f5f7f58 7f687f60     P.Q.U.T.X._.`.h.
10024f9c:	7f677f69 7f827f78 7f837f86 7f877f88     i.g.x...........
10024fac:	7f947f8c 7f9d7f9e 7fa37f9a 7fb27faf     ................
10024fbc:	7fae7fb9 7fb87fb6 7fc58b71 7fca7fc6     ........q.......
10024fcc:	7fd47fd5 7fe67fe1 7ff37fe9 98dc7ff9     ................
10024fdc:	80048006 8012800b 80198018 8021801c     ..............!.
10024fec:	803f8028 804a803b 80528046 805a8058     (.?.;.J.F.R.X.Z.
10024ffc:	8062805f 80738068 80708072 80798076     _.b.h.s.r.p.v.y.
1002500c:	807f807d 80868084 809b8085 809a8093     }...............
1002501c:	519080ad 80db80ac 80d980e5 80c480dd     ...Q............
1002502c:	80d680da 80ef8109 811b80f1 81238129     ............).#.
1002503c:	814b812f 8146968b 8153813e 80fc8151     /.K...F.>.S.Q...
1002504c:	816e8171 81668165 81838174 818a8188     q.n.e.f.t.......
1002505c:	81828180 819581a0 81a381a4 8193815f     ............_...
1002506c:	81b081a9 81be81b5 81bd81b8 81c281c0     ................
1002507c:	81c981ba 81d181cd 81d881d9 81da81c8     ................
1002508c:	81e081df 81fa81e7 81fe81fb 82028201     ................
1002509c:	82078205 820d820a 82168210 822b8229     ............).+.
100250ac:	82338238 82598240 825d8258 825f825a     8.3.@.Y.X.].Z._.
100250bc:	82628264 826a8268 822e826b 82778271     d.b.h.j.k...q.w.
100250cc:	827e8278 8292828d 829f82ab 82ac82bb     x.~.............
100250dc:	82e382e1 82d282df 82f382f4 839382fa     ................
100250ec:	82fb8303 82de82f9 82dc8306 82d98309     ................
100250fc:	83348335 83328316 83408331 83508339     5.4...2.1.@.9.P.
1002510c:	832f8345 8317832b 83858318 83aa839a     E./.+...........
1002511c:	83a2839f 83238396 8387838e 837c838a     ......#.......|.
1002512c:	837383b5 83a08375 83a88389 841383f4     ..s.u...........
1002513c:	83ce83eb 840383fd 840b83d8 83f783c1     ................
1002514c:	83e08407 840d83f2 84208422 843883bd     ........". ...8.
1002515c:	83fb8506 842a846d 855a843c 84778484     ....m.*.<.Z...w.
1002516c:	84ad846b 8482846e 84468469 846f842c     k...n...i.F.,.o.
1002517c:	84358479 846284ca 84bf84b9 84d9849f     y.5...b.........
1002518c:	84bb84cd 84d084da 84c684c1 84a184d6     ................
1002519c:	84ff8521 851784f4 852c8518 8515851f     !.........,.....
100251ac:	84fc8514 85638540 85488558 86028541     ....@.c.X.H.A...
100251bc:	8555854b 85a48580 85918588 85a8858a     K.U.............
100251cc:	8594856d 85ea859b 859c8587 857e8577     m...........w.~.
100251dc:	85c98590 85cf85ba 85d085b9 85dd85d5     ................
100251ec:	85dc85e5 860a85f9 860b8613 85fa85fe     ................
100251fc:	86228606 8630861a 864d863f 86544e55     .."...0.?.M.UNT.
1002520c:	8667865f 86938671 86a986a3 868b86aa     _.g.q...........
1002521c:	86b6868c 86c486af 86b086c6 882386c9     ..............#.
1002522c:	86d486ab 86e986de 86df86ec 86ef86db     ................
1002523c:	87068712 87008708 86fb8703 87098711     ................
1002524c:	86f9870d 8734870a 8737873f 8725873b     ......4.?.7.;.%.
1002525c:	871a8729 875f8760 874c8778 8774874e     )...`._.x.L.N.t.
1002526c:	87688757 8759876e 87638753 8805876a     W.h.n.Y.S.c.j...
1002527c:	879f87a2 87af8782 87bd87cb 87d087c0     ................
1002528c:	87ab96d6 87b387c4 87c687c7 87ef87bb     ................
1002529c:	87e087f2 880d880f 87f687fe 880e87f7     ................
100252ac:	881187d2 88158816 88218822 88368831     ........".!.1.6.
100252bc:	88278839 8844883b 88528842 885e8859     9.'.;.D.B.R.Y.^.
100252cc:	886b8862 887e8881 8875889e 88b5887d     b.k...~...u.}...
100252dc:	88828872 88928897 889988ae 888d88a2     r...............
100252ec:	88b088a4 88b188bf 88c488c3 88d888d4     ................
100252fc:	88dd88d9 890288f9 88f488fc 88f288e8     ................
1002530c:	890c8904 8913890a 891e8943 892a8925     ........C...%.*.
1002531c:	8941892b 893b8944 89388936 891d894c     +.A.D.;.6.8.L...
1002532c:	895e8960 89648966 896a896d 8974896f     `.^.f.d.m.j.o.t.
1002533c:	897e8977 89888983 8993898a 89a18998     w.~.............
1002534c:	89a689a9 89af89ac 89ba89b2 89bf89bd     ................
1002535c:	89da89c0 89dd89dc 89f489e7 8a0389f8     ................
1002536c:	8a108a16 8a1b8a0c 8a258a1d 8a418a36     ..........%.6.A.
1002537c:	8a528a5b 8a488a46 8a6d8a7c 8a628a6c     [.R.F.H.|.m.l.b.
1002538c:	8a828a85 8aa88a84 8a918aa1 8aa68aa5     ................
1002539c:	8aa38a9a 8acd8ac4 8ada8ac2 8af38aeb     ................
100253ac:	8ae48ae7 8b148af1 8ae28ae0 8ade8af7     ................
100253bc:	8b0c8adb 8b1a8b07 8b168ae1 8b178b10     ................
100253cc:	8b338b20 8b2697ab 8b3e8b2b 8b418b28      .3...&.+.>.(.A.
100253dc:	8b4f8b4c 8b498b4e 8b5b8b56 8b6b8b5a     L.O.N.I.V.[.Z.k.
100253ec:	8b6c8b5f 8b748b6f 8b808b7d 8b8e8b8c     _.l.o.t.}.......
100253fc:	8b938b92 8b998b96 8c3a8b9a 8c3f8c41     ..........:.A.?.
1002540c:	8c4c8c48 8c508c4e 8c628c55 8c788c6c     H.L.N.P.U.b.l.x.
1002541c:	8c828c7a 8c858c89 8c8d8c8a 8c948c8e     z...............
1002542c:	8c988c7c 8cad621d 8cbd8caa 8cb38cb2     |....b..........
1002543c:	8cb68cae 8cc18cc8 8ce38ce4 8cfd8cda     ................
1002544c:	8cfb8cfa 8d058d04 8d078d0a 8d0d8d0f     ................
1002545c:	9f4e8d10 8ccd8d13 8d168d14 8d6d8d67     ..N.........g.m.
1002546c:	8d738d71 8d998d81 8dbe8dc2 8dcf8dba     q.s.............
1002547c:	8dd68dda 8ddb8dcc 8dea8dcb 8ddf8deb     ................
1002548c:	8dfc8de3 8e098e08 8e1d8dff 8e108e1e     ................
1002549c:	8e428e1f 8e308e35 8e4a8e34 8e498e47     ..B.5.0.4.J.G.I.
100254ac:	8e508e4c 8e598e48 8e608e64 8e638e2a     L.P.H.Y.d.`.*.c.
100254bc:	8e768e55 8e7c8e72 8e878e81 8e848e85     U.v.r.|.........
100254cc:	8e8a8e8b 8e918e93 8e998e94 8ea18eaa     ................
100254dc:	8eb08eac 8eb18ec6 8ec58ebe 8ecb8ec8     ................
100254ec:	8ee38edb 8efb8efc 8efe8eeb 8f058f0a     ................
100254fc:	8f128f15 8f138f19 8f1f8f1c 8f0c8f1b     ................
1002550c:	8f338f26 8f398f3b 8f428f45 8f4c8f3e     &.3.;.9.E.B.>.L.
1002551c:	8f468f49 8f578f4e 8f628f5c 8f648f63     I.F.N.W.\.b.c.d.
1002552c:	8f9f8f9c 8fad8fa3 8fb78faf 8fe58fda     ................
1002553c:	8fea8fe2 90878fef 90058ff4 8ffa8ff9     ................
1002554c:	90159011 900d9021 9016901e 9027900b     ....!.........'.
1002555c:	90359036 8ff89039 9050904f 90529051     6.5.9...O.P.Q.R.
1002556c:	9049900e 9056903e 905e9058 906f9068     ..I.>.V.X.^.h.o.
1002557c:	96a89076 90829072 9081907d 908a9080     v...r...}.......
1002558c:	908f9089 90af90a8 90b590b1 90e490e2     ................
1002559c:	90db6248 91129102 91329119 914a9130     Hb........2.0.J.
100255ac:	91589156 91659163 91739169 918b9172     V.X.c.e.i.s.r...
100255bc:	91829189 91ab91a2 91aa91af 91b491b5     ................
100255cc:	91c091ba 91c991c1 91d091cb 91df91d6     ................
100255dc:	91db91e1 91f591fc 921e91f6 921491ff     ................
100255ec:	9215922c 925e9211 92459257 92649249     ,.....^.W.E.I.d.
100255fc:	92959248 924b923f 929c9250 92939296     H...?.K.P.......
1002560c:	925a929b 92b992cf 92e992b7 92fa930f     ..Z.............
1002561c:	932e9344 93229319 9323931a 9335933a     D....."...#.:.5.
1002562c:	935c933b 937c9360 9356936e 93ac93b0     ;.\.`.|.n.V.....
1002563c:	939493ad 93d693b9 93e893d7 93d893e5     ................
1002564c:	93dd93c3 93c893d0 941a93e4 94139414     ................
1002565c:	94079403 94369410 9435942b 943a9421     ......6.+.5.!.:.
1002566c:	94529441 945b9444 94629460 946a945e     A.R.D.[.`.b.^.j.
1002567c:	94709229 94779475 945a947d 947e947c     ).p.u.w.}.Z.|.~.
1002568c:	947f9481 95879582 9594958a 95989596     ................
1002569c:	95a09599 95a795a8 95bc95ad 95b995bb     ................
100256ac:	95ca95be 95c36ff6 95cc95cd 95d495d5     .....o..........
100256bc:	95dc95d6 95e595e1 962195e2 962e9628     ..........!.(...
100256cc:	9642962f 964f964c 9677964b 965e965c     /.B.L.O.K.w.\.^.
100256dc:	965f965d 96729666 968d966c 96959698     ]._.f.r.l.......
100256ec:	96aa9697 96b196a7 96b096b2 96b696b4     ................
100256fc:	96b996b8 96cb96ce 96cd96c9 96dc894d     ............M...
1002570c:	96d5970d 970496f9 97089706 970e9713     ................
1002571c:	970f9711 97199716 972a9724 97399730     ........$.*.0.9.
1002572c:	973e973d 97469744 97429748 975c9749     =.>.D.F.H.B.I.\.
1002573c:	97649760 97689766 976b52d2 97799771     `.d.f.h..Rk.q.y.
1002574c:	977c9785 977a9781 978b9786 9790978f     ..|...z.........
1002575c:	97a8979c 97a397a6 97b497b3 97c697c3     ................
1002576c:	97cb97c8 97ed97dc 97f29f4f 97f67adf     ........O....z..
1002577c:	980f97f5 9838980c 98219824 983d9837     ......8.$.!.7.=.
1002578c:	984f9846 986b984b 9870986f 98749871     F.O.K.k.o.p.q.t.
1002579c:	98aa9873 98b198af 98c498b6 98c698c3     s...............
100257ac:	98eb98e9 99099903 99149912 99219918     ..............!.
100257bc:	991e991d 99209924 992e992c 993e993d     ....$. .,...=.>.
100257cc:	99499942 99509945 9951994b 994c9952     B.I.E.P.K.Q.R.L.
100257dc:	99979955 99a59998 99ae99ad 99df99bc     U...............
100257ec:	99dd99db 99d199d8 99ee99ed 99f299f1     ................
100257fc:	99f899fb 9a0f9a01 99e29a05 9a2b9a19     ..............+.
1002580c:	9a459a37 9a409a42 9a3e9a43 9a4d9a55     7.E.B.@.C.>.U.M.
1002581c:	9a579a5b 9a629a5f 9a649a65 9a6b9a69     [.W._.b.e.d.i.k.
1002582c:	9aad9a6a 9abc9ab0 9acf9ac0 9ad39ad1     j...............
1002583c:	9ade9ad4 9ae29adf 9ae69ae3 9aeb9aef     ................
1002584c:	9af49aee 9af79af1 9b069afb 9b1a9b18     ................
1002585c:	9b229b1f 9b259b23 9b289b27 9b2a9b29     ..".#.%.'.(.).*.
1002586c:	9b2f9b2e 9b449b32 9b4f9b43 9b4e9b4d     ../.2.D.C.O.M.N.
1002587c:	9b589b51 9b939b74 9b919b83 9b979b96     Q.X.t...........
1002588c:	9ba09b9f 9bb49ba8 9bca9bc0 9bc69bb9     ................
1002589c:	9bd19bcf 9be39bd2 9be49be2 9be19bd4     ................
100258ac:	9bf29c3a 9bf09bf1 9c149c15 9c139c09     :...............
100258bc:	9c069c0c 9c129c08 9c049c0a 9c1b9c2e     ................
100258cc:	9c249c25 9c309c21 9c329c47 9c3e9c46     %.$.!.0.G.2.F.>.
100258dc:	9c609c5a 9c769c67 9ce79c78 9cf09cec     Z.`.g.v.x.......
100258ec:	9d089d09 9d039ceb 9d2a9d06 9daf9d26     ..........*.&...
100258fc:	9d1f9d23 9d159d44 9d419d12 9d3e9d3f     #...D.....A.?.>.
1002590c:	9d489d46 9d5e9d5d 9d519d64 9d599d50     F.H.].^.d.Q.P.Y.
1002591c:	9d899d72 9dab9d87 9d7a9d6f 9da49d9a     r.......o.z.....
1002592c:	9db29da9 9dc19dc4 9db89dbb 9dc69dba     ................
1002593c:	9dc29dcf 9dd39dd9 9de69df8 9def9ded     ................
1002594c:	9e1a9dfd 9e1e9e1b 9e799e75 9e819e7d     ........u.y.}...
1002595c:	9e8b9e88 9e929e8c 9e919e95 9ea59e9d     ................
1002596c:	9eb89ea9 9ead9eaa 9ecc9761 9ecf9ece     ........a.......
1002597c:	9ed49ed0 9ede9edc 9ee09edd 9ee89ee5     ................
1002598c:	9ef49eef 9ef79ef6 9efb9ef9 9efd9efc     ................
1002599c:	9f089f07 9f1576b7 9f2c9f21 9f4a9f3e     .....v..!.,.>.J.
100259ac:	9f549f52 9f5f9f63 9f619f60 9f679f66     R.T.c._.`.a.f.g.
100259bc:	9f6a9f6c 9f729f77 9f959f76 9fa09f9c     l.j.w.r.v.......
100259cc:	69c7582f 74649059 719951dc              /X.iY.dt.Q.q

100259d8 <b02cf>:
100259d8:	55164e9c 963f5a03 611b54c0 59f66328     .N.U.Z?..T.a(c.Y
100259e8:	84759022 7a50831c 63e160aa 65ed6e25     ".u...Pz.`.c%n.e
100259f8:	82a68466 68939bf5 65a15727 5b9b6271     f......h'W.eqb.[
10025a08:	867b59d0 7d6298f4 9b8e7dbe 7c9f6216     .Y{...b}.}...b.|
10025a18:	5b8988b7 63095eb5 68486697 978d95c7     ...[.^.c.fHh....
10025a28:	4ee5674f 4f4d4f0a 50494f9d 593756f2     Og.N.OMO.OIP.V7Y
10025a38:	5a0159d4 60df5c09 6170610f 69056613     .Y.Z.\.`.apa.f.i
10025a48:	754f70ba 79fb7570 7def7dad 840e80c3     .pOupu.y.}.}....
10025a58:	8b028863 907a9055 4e95533b 57df4ea5     c...U.z.;S.N.N.W
10025a68:	90c180b2 4e0078ef 6ea258f1 7a329038     .....x.N.X.n8.2z
10025a78:	828b8328 51419c2f 54bd5370 56e054e1     (.../.AQpS.T.T.V
10025a88:	5f1559fb 6deb98f2 852d80e4 96709662     .Y._...m..-.b.p.
10025a98:	97fb96a0 53f3540b 70cf5b87 8fc27fbd     .....T.S.[.p....
10025aa8:	536f96e8 7aba9d5c 78934e11 6e2681fc     ..oS\..z.N.x..&n
10025ab8:	55045618 851a6b1d 59e59c3b 6d6653a9     .V.U.k..;..Y.Sfm
10025ac8:	958f74dc 4e915642 96f2904b 990c834f     .t..BV.NK...O...
10025ad8:	55b653e1 5f715b30 66f36620 6c386804     .S.U0[q_ f.f.h8l
10025ae8:	6d296cf3 76c8745b 98347a4e 885b82f1     .l)m[t.vNz4...[.
10025af8:	92ed8a60 75ab6db2 99c576ca 8b0160a6     `....m.u.v...`..
10025b08:	95b28d8a 53ad698e 57125186 59445830     .....i.S.Q.W0XDY
10025b18:	5ef65bb4 63a96028 6cbf63f4 708e6f14     .[.^(`.c.c.l.o.p
10025b28:	71597114 733f71d5 82767e01 859782d1     .qYq.q?s.~v.....
10025b38:	925b9060 58699d1b 6c5a65bc 51f97525     `.[...iX.eZl%u.Q
10025b48:	5965592e 5fdc5f80 65fa62bc 6b276a2a     .YeY._._.b.e*j'k
10025b58:	738b6bb4 89567fc1 9d0e9d2c 5ca19ec4     .k.s..V.,......\
10025b68:	837b6c96 5c4b5104 81c661b6 72616876     .l{..QK\.a..vhar
10025b78:	4ffa4e59 60695378 7a4f6e29 4e0b97f3     YN.OxSi`)nOz...N
10025b88:	4eee5316 4f3d4f55 4f734fa1 53ef52a0     .S.NUO=O.OsO.R.S
10025b98:	590f5609 5bb65ac1 79d15be1 679c6687     .V.Y.Z.[.[.y.f.g
10025ba8:	6b4c67b6 706b6cb3 798d73c2 7a3c79be     .gLk.lkp.s.y.y<z
10025bb8:	82b17b87 830482db 83ef8377 876683d3     .{......w.....f.
10025bc8:	56298ab2 8fe68ca8 971e904e 4fc4868a     ..)V....N......O
10025bd8:	62115ce8 753b7259 82bd81e5 8cc086fe     .\.bYr;u........
10025be8:	991396c5 4ecb99d5 89e34f1a 584a56de     .......N.O...VJX
10025bf8:	5efb58ca 602a5feb 60626094 621261d0     .X.^._*`.`b`.a.b
10025c08:	653962d0 66669b41 6d7768b0 754c7070     .b9eA.ff.hwmppLu
10025c18:	7d757686 87f982a5 968e958b 51f18c9d     .vu}...........Q
10025c28:	591652be 5bb354b3 61685d16 6daf6982     .R.Y.T.[.]ha.i.m
10025c38:	84cb788d 8a728857 9ab893a7 99a86d6c     .x..W.r.....lm..
10025c48:	57a386d9 86ce67ff 5283920e 54045687     ...W.g.....R.V.T
10025c58:	62e15ed3 683c64b9 6bbb6838 78ba7372     .^.b.d<h8h.krs.x
10025c68:	899a7a6b 8d6b89d2 90ed8f03 969495a3     kz....k.........
10025c78:	5b669769 697d5cb3 984e984d 7b20639b     i.f[.\}iM.N..c {
10025c88:	6a7f6a2b 9c0d68b6 52726f5f 6070559d     +j.j.h.._orR.Up`
10025c98:	6d3b62ec 6ed16e07 8910845b 4e148f44     .b;m.n.n[...D..N
10025ca8:	53f69c39 6a3a691b 682a9784 7ac3515c     9..S.i:j..*h\Q.z
10025cb8:	91dc84b2 565b938c 68229d28 84318305     ......[V(."h..1.
10025cc8:	52087ca5 74e682c5 4f834e7e 5bd251a0     .|.R...t~N.O.Q.[
10025cd8:	52d8520a 5dfb52e7 582a559a 5b8c59e6     .R.R.R.].U*X.Y.[
10025ce8:	5bdb5b98 5e795e72 611f60a3 61be6163     .[.[r^y^.`.aca.a
10025cf8:	656263db 685367d1 6b3e68fa 6c576b53     .cbe.gSh.h>kSkWl
10025d08:	6f976f22 74b06f45 76e37518 7aff770b     "o.oEo.t.u.v.w.z
10025d18:	7c217ba1 7f367de9 809d7ff0 839e8266     .{!|.}6.....f...
10025d28:	8acc89b3 90848cab 95939451 95a29591     ........Q.......
10025d38:	97d39665 82189928 542b4e38 5dcc5cb8     e...(...8N+T.\.]
10025d48:	764c73a9 5ca9773c 8d0b7feb 981196c1     .sLv<w.\........
10025d58:	98589854 4f0e4f01 559c5371 57fa5668     T.X..O.OqS.UhV.W
10025d68:	5b095947 5c905bc4 5e7e5e0c 63ee5fcc     GY.[.[.\.^~^._.c
10025d78:	65d7673a 671f65e2 68c468cb 5e306a5f     :g.e.e.g.h.h_j0^
10025d88:	6c176bc5 757f6c7d 5b637948 7d007a00     .k.l}l.uHyc[.z.}
10025d98:	898f5fbd 8cb48a18 8ecc8d77 98e28f1d     ._......w.......
10025da8:	9b3c9a0e 507d4e80 59935100 622f5b9c     ..<..N}P.Q.Y.[/b
10025db8:	64ec6280 72a06b3a 79477591 87fb7fa9     .b.d:k.r.uGy....
10025dc8:	8b708abc 83ca63ac 540997a0 55ab5403     ..p..c.....T.T.U
10025dd8:	6a586854 78278a70 9ecd6775 5ba25374     ThXjp.'xug..tS.[
10025de8:	8650811a 4e189006 4ec74e45 53ca4f11     ..P....NEN.N.O.S
10025df8:	5bae5438 60255f13 673d6551 6c726c42     8T.[._%`Qe=gBlrl
10025e08:	70786ce3 7a767403 7b087aae 7cfe7d1a     .lxp.tvz.z.{.}.|
10025e18:	65e77d66 53bb725b 5de85c45 62e062d2     f}.e[r.SE\.].b.b
10025e28:	6e206319 8a31865a 92f88ddd 79a66f01     .c nZ.1......o.y
10025e38:	4ea89b5a 4eac4eab 4fa04f9b 514750d1     Z..N.N.N.O.O.PGQ
10025e48:	51717af6 535451f6 537f5321 55ac53eb     .zqQ.QTS!S.S.S.U
10025e58:	5ce15883 5f4a5f37 6050602f 631f606d     .X.\7_J_/`P`m`.c
10025e68:	6a4b6559 72c26cc1 77ef72ed 810580f8     YeKj.l.r.r.w....
10025e78:	854e8208 93e190f7 995797ff 4ef09a5a     ..N.......W.Z..N
10025e88:	5c2d51dd 696d6681 66f25c40 73896975     .Q-\.fmi@\.fui.s
10025e98:	7c816850 52e450c5 5dfe5747 65a49326     Ph.|.P.RGW.]&..e
10025ea8:	6b3d6b23 79817434 7b4b79bd 82b97dca     #k=k4t.y.yK{.}..
10025eb8:	887f83cc 8b39895f 91d18fd1 9280541f     ...._.9......T..
10025ec8:	50364e5d 533a53e5 739672d7 82e677e9     ]N6P.S:S.r.s.w..
10025ed8:	99c68eaf 99d299c8 611a5177 55b0865e     ........wQ.a^..U
10025ee8:	50767a7a 90475bd3 4e329685 91e76adb     zzvP.[G...2N.j..
10025ef8:	5c485c51 7a9f6398 97746c93 7aaa8f61     Q\H\.c.z.lt.a..z
10025f08:	9688718a 68177c82 68517e70 52f2936c     .q...|.hp~Qhl..R
10025f18:	85ab541b 7fa48a13 90e18ecd 88885366     .T..........fS..
10025f28:	4fc27941 521150be 55535144 73ea572d     Ay.O.P.RDQSU-W.s
10025f38:	5951578b 5f845f62 61766075 61a96167     .WQYb_._u`vaga.a
10025f48:	643a63b2 666f656c 6e136842 7a3d7566     .c:dleofBh.nfu=z
10025f58:	7d4c7cfb 7e4b7d99 830e7f6b 86cd834a     .|L}.}K~k...J...
10025f68:	8a638a08 8efd8b66 9d8f981a 8fce82b8     ..c.f...........
10025f78:	52879be8 6483621f 96996fc0 50916841     ...R.b.d.o..Ah.P
10025f88:	6c7a6b20 7a746f54 88407d50 67088a23      kzlTotzP}@.#..g
10025f98:	50394ef6 50655026 5238517c 55a75263     .N9P&PeP|Q8RcR.U
10025fa8:	5805570f 5efa5acc 61f861b2 637262f3     .W.X.Z.^.a.a.brc
10025fb8:	6a29691c 72ac727d 7814732e 7d79786f     .i)j}r.r.s.xoxy}
10025fc8:	80a9770c 8b19898b 8ed28ce2 93759063     .w..........c.u.
10025fd8:	9855967a 9e789a13 539f5143 5e7b53b3     z.U...x.CQ.S.S{^
10025fe8:	6e1b5f26 73846e90 7d4373fe 8a008237     &_.n.n.s.sC}7...
10025ff8:	96508afa 500b4e4e 547c53e4 59d156fa     ..P.NN.P.S|T.V.Y
10026008:	5df15b64 5f275eab 65456238 6e5667af     d[.].^'_8bEe.gVn
10026018:	7cca72d0 80a188b4 83f080e1 8a87864e     .r.|........N...
10026028:	92378de8 986796c7 4e949f13 4f0d4e92     ..7...g....N.N.O
10026038:	54495348 5a2f543e 5fa15f8c 68a7609f     HSIT>T/Z._._.`.h
10026048:	745a6a8e 8a9e7881 8b778aa4 4e5e9190     .jZt.x....w...^N
10026058:	4ea49bc9 4faf4f7c 50165019 516c5149     ...N|O.O.P.PIQlQ
10026068:	52b9529f 539a52fe 541153e3 5589540e     .R.R.R.S.S.T.T.U
10026078:	57a25751 5b54597d 5b8f5b5d 5de75de5     QW.W}YT[][.[.].]
10026088:	5e785df7 5e9a5e83 5f185eb7 614c6052     .]x^.^.^.^._R`La
10026098:	62d86297 653b63a7 66436602 676d66f4     .b.b.c;e.fCf.fmg
100260a8:	68976821 6c5f69cb 6d696d2a 6e9d6e2f     !h.h.i_l*mim/n.n
100260b8:	76877532 7a3f786c 7d057ce0 7d5e7d18     2u.vlx?z.|.}.}^}
100260c8:	80157db1 80af8003 815480b1 822a818f     .}........T...*.
100260d8:	884c8352 8b1b8861 8cfc8ca2 917590ca     R.L.a.........u.
100260e8:	783f9271 95a492fc 9805964d 9ad89999     q.?x....M.......
100260f8:	525b9d3b 53f752ab 58d55408 6fe062f7     ;.[R.R.S.T.X.b.o
10026108:	8f5f8c6a 514b9eb9 544a523b 7a4056fd     j._...KQ;RJT.V@z
10026118:	9d609177 73449ed2 81706f09 5ffd7511     w.`...Ds.op..u._
10026128:	9aa860da 8fbc72db 98036b64 56f04eca     .`...r..dk...N.V
10026138:	58be5764 60685a5a 660f61c7 68396606     dW.XZZh`.a.f.f9h
10026148:	6df768b1 7d3a75d5 9b42826e 4f504e9b     .h.m.u:}n.B..NPO
10026158:	550653c9 5de65d6f 67fb5dee 74736c99     .S.Uo].].].g.lst
10026168:	8a507802 88df9396 5ea75750 50b5632b     .xP.....PW.^+c.P
10026178:	518d50ac 54c96700 59bb585e 5f695bb0     .P.Q.g.T^X.Y.[i_
10026188:	63a1624d 6b73683d 707d6e08 728091c7     Mb.c=hsk.n}p...r
10026198:	78267815 658e796d 83dc7d30 8f0988c1     .x&xmy.e0}......
100261a8:	5264969b 67505728 8ca17f6a 574251b4     ..dR(WPgj....QBW
100261b8:	583a962a 80b4698a 5d0e54b2 789557fc     *.:X.i...T.].W.x
100261c8:	4f5c9dfa 548b524a 6628643e 67f56714     ..\OJR.T>d(f.g.g
100261d8:	7b567a84 932f7d22 9bad685c 53197b39     .zV{"}/.\h..9{.S
100261e8:	5237518a 62f65bdf 64e664ae 6bba672d     .Q7R.[.b.d.d-g.k
100261f8:	96d185a9 9bd67690 9306634c 76bf9bab     .....v..Lc.....v
10026208:	4e096652 53c25098 60e85c71 65636492     Rf.N.P.Sq\.`.dce
10026218:	71e6685f 752373ca 7e827b97 8b838695     _h.q.s#u.{.~....
10026228:	91788cdb 65ac9910 6b8b66ab 4ed44ed5     ..x....e.f.k.N.N
10026238:	4f7f4f3a 53f8523a 55e353f2 58eb56db     :O.O:R.S.S.U.V.X
10026248:	59c959cb 5b5059ff 5e025c4d 5fd75e2b     .Y.Y.YP[M\.^+^._
10026258:	6307601d 5b5c652f 65bd65af 679d65e8     .`.c/e\[.e.e.e.g
10026268:	6b7b6b62 73456c0f 79c17949 7d197cf8     bk{k.lEsIy.y.|.}
10026278:	80a27d2b 81f38102 8a5e8996 8a668a69     +}........^.i.f.
10026288:	8aee8a8c 8cdc8cc7 98fc96cc 4e8b6b6f     ............ok.N
10026298:	4f8d4f3c 5b575150 61485bfa 66426301     <O.OPQW[.[Ha.cBf
100262a8:	6ecb6b21 723e6cbb 75d474bd 793a78c1     !k.n.l>r.t.u.x:y
100262b8:	8033800c 849481ea 6c508f9e 5f0f9e7f     ..3.......Pl..._
100262c8:	9d2b8b58 8ef87afa 96eb5b8d 53f14e03     X.+..z...[...N.S
100262d8:	593157f7 5ba45ac9 6e7f6089 75be6f06     .W1Y.Z.[.`.n.o.u
100262e8:	5b9f8cea 7be08500 67f45072 5c61829d     ...[...{rP.g..a\
100262f8:	7e1e854a 5199820e 63685c04 659c8d66     J..~...Q.\hcf..e
10026308:	793e716e 80057d17 8eca8b1d 86c7906e     nq>y.}......n...
10026318:	501f90aa 5c3a52fa 707c6753 914c7235     ...P.R:\Sg|p5rL.
10026328:	932b91c8 5bc282e5 60f95f31 53d64e3b     ..+....[1_.`;N.S
10026338:	624b5b88 6b8a6731 73e072e9 816b7a2e     .[Kb1g.k.r.s.zk.
10026348:	91528da3 51129996 546a53d7 63885bff     ..R....Q.SjT.[.c
10026358:	7dac6a39 56da9700 546853ce 5c315b97     9j.}...V.ShT.[1\
10026368:	4fee5dde 62fe6101 79c06d32 7d4279cb     .].O.a.b2m.y.yB}
10026378:	7fd27e4d 821f81ed 88468490 8b908972     M~........F.r...
10026388:	8f2f8e74 914b9031 96c6916c 4ec0919c     t./.1.K.l......N
10026398:	51454f4f 5f935341 67d4620e 6e0b6c41     OOEQAS._.b.gAl.n
100263a8:	7e267363 928391cd 591953d4 6dd15bbf     cs&~.....S.Y.[.m
100263b8:	7e2e795d 587e7c9b 51fa719f 8ff08853     ]y.~.|~X.q.QS...
100263c8:	5cfb4fca 77ac6625 821c7ae3 51c699ff     .O.\%f.w.z.....Q
100263d8:	65ec5faa 6b89696f 6e966df3 76fe6f64     ._.eoi.k.m.ndo.v
100263e8:	5de17d14 91879075 51e69806 6240521d     .}.]u......Q.R@b
100263f8:	66d96691 5eb66e1a 7f727dd2 85af66f8     .f.f.n.^.}r..f..
10026408:	8af885f7 53d952a9 5e8f5973 60555f90     .....R.SsY.^._U`
10026418:	966492e4 511f50b7 532052dd 53ec5347     ..d..P.Q.R SGS.S
10026428:	554654e8 56175531 59be5968 5bb55a3c     .TFU1U.VhY.Y<Z.[
10026438:	5c0f5c06 5c1a5c11 5e8a5e84 5f705ee0     .\.\.\.\.^.^.^p_
10026448:	6284627f 638c62db 66076377 662d660c     .b.b.b.cwc.f.f-f
10026458:	677e6676 6a1f68a2 6cbc6a35 6e096d88     vf~g.h.j5j.l.m.n
10026468:	713c6e58 71677126 770175c7 7901785d     Xn<q&qgq.u.w]x.y
10026478:	79f07965 7b117ae0 7d397ca7 83d68096     ey.y.z.{.|9}....
10026488:	8549848b 88f3885d 8a3c8a1f 8a738a54     ..I.].....<.T.s.
10026498:	8cde8c61 926691a4 9418937e 9798969c     a.....f.~.......
100264a8:	4e084e0a 4e574e1e 52705197 583457ce     .N.N.NWN.QpR.W4X
100264b8:	5b2258cc 60c55e38 676164fe 6d446756     .X"[8^.`.dagVgDm
100264c8:	757372b6 84b87a63 91b88b72 56319320     .rsucz..r... .1V
100264d8:	98fe57f4 690d62ed 71ed6b96 80777e54     .W...b.i.k.qT~w.
100264e8:	89e68272 875598df 5c3b8fb1 4fe14f38     r.....U...;\8O.O
100264f8:	55074fb5 5bdd5a20 5fc35be9 632f614e     .O.U Z.[.[._Na/c
10026508:	664b65b0 699b68ee 6df16d78 75b97533     .eKf.h.ixm.m3u.u
10026518:	795e771f 7d3379e6 82af81e3 89aa85aa     .w^y.y3}........
10026528:	8eab8a3a 90328f9b 970791dd 4ec14eba     :.....2......N.N
10026538:	58755203 5c0b58ec 5c3d751a 8a0a814e     .RuX.X.\.u=\N...
10026548:	96638fc5 7b25976d 98088acf 56f39162     ..c.m.%{....b..V
10026558:	901753a8 57825439 63a85e25 708a6c34     .S..9T.W%^.c4l.p
10026568:	7c8b7761 88707fe0 91549042 93189310     aw.|..p.B.T.....
10026578:	745e968f 5d079ac4 65705d69 8da867a2     ..^t...]i]pe.g..
10026588:	636e96db 69196749 981783c5 88fe96c0     ..ncIg.i........
10026598:	647a6f84 4e165bf8 755d702c 51c4662f     .ozd.[.N,p]u/f.Q
100265a8:	52e25236 5f8159d3 62106027 6574653f     6R.R.Y._'`.b?ete
100265b8:	6674661f 681668f2 6e056b63 751f7272     .ftf.h.hck.nrr.u
100265c8:	7cbe76db 58f08056 897f88fd 8a938aa0     .v.|V..X........
100265d8:	901d8acb 97529192 65899759 81067a0e     ......R.Y..e.z..
100265e8:	5e2d96bb 621a60dc 661465a5 77f36790     ..-^.`.b.e.f.g.w
100265f8:	7c4d7a4d 810a7e3e 8d648cac 8e5f8de1     MzM|>~....d..._.
10026608:	520778a9 63a562d9 62986442 7a838a2d     .x.R.b.cBd.b-..z
10026618:	8aac7bc0 7d7696ea 8749820c 51484ed9     .{....v}..I..NHQ
10026628:	53605343 5c025ba3 5ddd5c16 62476226     CS`S.[.\.\.]&bGb
10026638:	681364b0 6cc96834 6d176d45 6f5c67d3     .d.h4h.lEm.m.g\o
10026648:	717d714e 7a7f65cb 7dda7bad 7fa87e4a     Nq}q.e.z.{.}J~..
10026658:	821b817a 85a68239 8cce8a6e 90788df5     z...9...n.....x.
10026668:	92ad9077 95839291 524d9bae 6f385584     w.........MR.U8o
10026678:	51687136 7e557985 7cce81b3 5851564c     6qhQ.yU~...|LVQX
10026688:	63aa5ca8 66fd66fe 72d9695a 758e758f     .\.c.f.fZi.r.u.u
10026698:	7956790e 7c9779df 7d447d20 8a348607     .yVy.y.| }D}..4.
100266a8:	9061963b 50e79f20 53cc5275 500953e2     ;.a. ..PuR.S.S.P
100266b8:	58ee55aa 723d594f 5c645b8b 60e3531d     .U.XOY=r.[d\.S.`
100266c8:	635c60f3 633f6383 64cd63bb 66f965e9     .`\c.c?c.c.d.e.f
100266d8:	69cd5de3 6f1569fd 4e8971e5 76f875e9     .].i.i.o.q.N.u.v
100266e8:	7cdf7a93 7d9c7dcf 83498061 846c8358     .z.|.}.}a.I.X.l.
100266f8:	85fb84bc 8d7088c5 906d9001 971c9397     ......p...m.....
10026708:	50cf9a12 618e5897 853581d3 90208d08     ...P.X.a..5... .
10026718:	50744fc3 53735247 6349606f 6e2c675f     .OtPGRsSo`Ic_g,n
10026728:	901f8db3 5c5e4fd7 65cf8cca 53527d9a     .....O^\...e.}RS
10026738:	51768896 5b5863c3 5c0a5b6b 6751640d     ..vQ.cX[k[.\.dQg
10026748:	4ed6905c 592a591a 8a516c70 5815553e     \..N.Y*YplQ.>U.X
10026758:	60f059a5 67c16253 69558235 99c49640     .Y.`Sb.g5.Ui@...
10026768:	4f539a28 5bfe5806 5cb18010 5f855e2f     (.SO.X.[...\/^._
10026778:	614b6020 66ff6234 6ede6cf0 817f80ce      `Ka4b.f.l.n....
10026788:	888b82d4 90008cb8 968a902e 9bdb9edb     ................
10026798:	53f04ee3 7b2c5927 984c918d 6edd9df9     .N.S'Y,{..L....n
100267a8:	53537027 5b855544 629e6258 6ca262d3     'pSSDU.[Xb.b.b.l
100267b8:	74226fef 94388a17 8afe6fc1 51e78338     .o"t..8..o..8..Q
100267c8:	53ea86f8 4f4653e9 8fb09054 8131596a     ...S.SFOT...jY1.
100267d8:	7aea5dfd 68da8fbf 72f88c37 6a3d9c48     .].z...h7..rH.=j
100267e8:	4e398ab0 56065358 62c55766 65e663a2     ..9NXS.VfW.b.c.e
100267f8:	6de16b4e 70ad6e5b 7aef77ed 7dbb7baa     Nk.m[n.p.w.z.{.}
10026808:	80c6803d 8a9586cb 56e3935b 5f3e58c7     =.......[..V.X>_
10026818:	669665ad 6bb56a80 8ac77537 77e55024     .e.f.j.k7u..$P.w
10026828:	5f1b5730 667a6065 75f46c60 7f6e7a1a     0W._e`zf`l.u.zn.
10026838:	871881f4 99b39045 755c7bc9 7b517af9     ....E....{\u.zQ{
10026848:	901084c4 7a9279e9 5ae18336 4e2d7740     .....y.z6..Z@w-N
10026858:	5b994ef2 62bd5fe0 67f1663c 866b6ce8     .N.[._.b<f.g.lk.
10026868:	8a3b8877 92f3914e 6a1799d0 732a7026     w.;.N......j&p*s
10026878:	845782e7 4e018caf 51cb5146 5bf5558b     ..W....NFQ.Q.U.[
10026888:	5e335e16 5f145e81 5f6b5f35 61f25fb4     .^3^.^._5_k_._.a
10026898:	66a26311 6f6e671d 753a7252 8074773a     .c.f.gnoRr:u:wt.
100268a8:	81788139 8abf8776 8d858adc 929a8df3     9.x.v...........
100268b8:	98029577 52c59ce5 76f46357 6c886715     w......RWc.v.g.l
100268c8:	8cc373cd 967393ae 589c6d25 69cc690e     .s....s.%m.X.i.i
100268d8:	939a8ffd 901a75db 6802585a 69fb63b4     .....u..ZX.h.c.i
100268e8:	6f2c4f43 8fbb67d8 7db48526 693f9354     CO,o.g..&..}T.?i
100268f8:	576a6f70 5b2c58f7 722a7d2c 91e3540a     pojW.X,[,}*r.T..
10026908:	4ead9db4 505c4f4e 52435075 54488c9e     ...NNO\PuPCR..HT
10026918:	5b9a5824 5e955e1d 5ef75ead 608c5f1f     $X.[.^.^.^.^._.`
10026928:	633a62b5 68af63d0 78876c40 7a0b798e     .b:c.c.h@l.x.y.z
10026938:	82477de0 8ae68a02 90138e44 912d90b8     .}G.....D.....-.
10026948:	9f0e91d8 64586ce5 657564e2 76846ef4     .....lXd.due.n.v
10026958:	90697b1b 6eba93d1 5fb954f2 8f4d64a4     .{i....n.T._.dM.
10026968:	92448fed 586b5178 5c555929 6dfb5e97     ..D.xQkX)YU\.^.m
10026978:	751c7e8f 8ee28cbc 70b9985b 6bbf4f1d     .~.u....[..p.O.k
10026988:	75306fb1 514e96fb 58355410 59ac5857     .o0u..NQ.T5XWX.Y
10026998:	5f925c60 675c6597 767b6e21 8ced83df     `\._.e\g!n{v....
100269a8:	90fd9014 7825934d 52aa783a 571f5ea6     ....M.%x:x.R.^.W
100269b8:	60125974 515a5012 51cd51ac 55105200     tY.`.PZQ.Q.Q.R.U
100269c8:	58585854 5b955957 5d8b5cf6 629560bc     TXXXWY.[.\.].`.b
100269d8:	6771642d 68bc6843 76d768df 6e6f6dd8     -dqgCh.h.h.v.mon
100269e8:	706f6d9b 5f5371c8 797775d8 7b547b49     .mop.qS_.uwyI{T{
100269f8:	7cd67b52 52307d71 85698463 8a0e85e4     R{.|q}0Rc.i.....
10026a08:	8c468b04 90038e0f 9419900f 982d9676     ..F.........v.-.
10026a18:	95d89a30 52d550cd 5802540c 61a75c0e     0....P.R.T.X.\.a
10026a28:	6d1e649e 7ae577b3 840480f4 92859053     .d.m.w.z....S...
10026a38:	9d075ce0 5f97533f 6d9c5fb3 77637279     .\..?S._._.myrcw
10026a48:	7be479bf 72ec6bd2 68038aad 51f86a61     .y.{.k.r...haj.Q
10026a58:	69347a81 9cf65c4a 5bc582eb 701e9149     .z4iJ\.....[I..p
10026a68:	5c6f5678 656660c7 8c5a6c8c 98139041     xVo\.`fe.lZ.A...
10026a78:	66c75451 5948920d 518590a3 51ea4e4d     QT.f..HY...QMN.Q
10026a88:	8b0e8599 637a7058 6962934b 7e0499b4     ....XpzcK.bi...~
10026a98:	53577577 8edf6960 6c5d96e3 5c3c4e8c     wuWS`i....]l.N<\
10026aa8:	8fe95f10 8cd15302 86798089 65e55eff     ._...S....y..^.e
10026ab8:	51654e73 5c3f5982 4efb97ee 5fcd598a     sNeQ.Y?\...N.Y._
10026ac8:	6fe18a8d 796279b0 84715be7 71b1732b     ...o.yby.[q.+s.q
10026ad8:	5ff55e74 649a637b 7c9871c3 5efc4e43     t^._{c.d.q.|CN.^
10026ae8:	57dc4e4b 60a956a2 7d0d6fc3 813380fd     KN.W.V.`.o.}..3.
10026af8:	8fb281bf 86a48997 628a5df4 898764ad     .........].b.d..
10026b08:	6ce26777 74366d3e 5a467834 82ad7f75     wg.l>m6t4xFZu...
10026b18:	4ff399ac 62dd5ec3 65576392 76c3676f     ...O.^.b.cWeog.v
10026b28:	80cc724c 8f2980ba 500d914d 5a9257f9     Lr....).M..P.W.Z
10026b38:	69736885 72fd7164 58f28cb7 966a8ce0     .hsidq.r...X..j.
10026b48:	877f9019 77e779e4 4f2f8429 535a5265     .....y.w)./OeRZS
10026b58:	67cf62cd 767d6cca 7c957b94 85848236     .b.g.l}v.{.|6...
10026b68:	66dd8feb 72066f20 83ab7e1b 9ea699c1     ...f o.r.~......
10026b78:	7bb151fd 7bb87872 7b488087 5e616ae8     .Q.{rx.{..H{.ja^
10026b88:	7551808c 516b7560 6e8c9262 9197767a     ..Qu`ukQb..nzv..
10026b98:	4f109aea 629c7f70 95a57b4f 567a9ce9     ...Op..bO{....zV
10026ba8:	86e45859 4f3496bc 534a5224 53db53cd     YX....4O$RJS.S.S
10026bb8:	642c5e06 677f6591 6c4e6c3e 72af7248     .^,d.e.g>lNlHr.r
10026bc8:	755473ed 822c7e41 8ca985e9 91c67bc4     .sTuA~,......{..
10026bd8:	98127169 633d98ef 756a6669 78d076e4     iq....=cifju.v.x
10026be8:	86ee8543 5351532a 59835426 5f7c5e87     C...*SQS&T.Y.^|_
10026bf8:	624960b2 62ab6279 6bd46590 75b26ccc     .`Ibyb.b.e.k.l.u
10026c08:	789176ae 7dcb79d8 80a57f77 8ab988ab     .v.x.y.}w.......
10026c18:	907f8cbb 98db975e 7c386a0b 5c3e5099     ....^....j8|.P>\
10026c28:	67875fae 74356bd8 7f8e7709 67ca9f3b     ._.g.k5t.w..;..g
10026c38:	53397a17 9aed758b 819d5f66 809883f1     .z9S.u..f_......
10026c48:	5fc55f3c 7b467562 6867903c 5a9b59eb     <_._buF{<.gh.Y.Z
10026c58:	767e7d10 4ff58b2c 6a195f6a 6f026c37     .}~v,..Oj_.j7l.o
10026c68:	796874e2 8a558868 5edf8c79 75c563cf     .thyh.U.y..^.c.u
10026c78:	82d779d2 92f29328 86ed849c 54c19c2d     .y..(.......-..T
10026c88:	658c5f6c 70156d5c 8cd38ca7 654f983b     l_.e\m.p....;.Oe
10026c98:	4e0d74f6 57e04ed8 5a66592b 51a85bcc     .t.N.N.W+YfZ.[.Q
10026ca8:	5e9c5e03 62766016 65a76577 6d6e666e     .^.^.`vbwe.enfnm
10026cb8:	7b267236 819a8150 8b5c8299 8ce68ca0     6r&{P.....\.....
10026cc8:	961c8d74 4fae9644 6b6664ab 8461821e     t...D..O.dfk..a.
10026cd8:	90e8856a 69535c01 847a98a8 4f0f8557     j....\Si..z.W..O
10026ce8:	5fa9526f 670d5e45 8179798f 89868907     oR._E^.g.yy.....
10026cf8:	5f176df5 6cb86255 72694ecf 52069b92     .m._Ub.l.Nir...R
10026d08:	5674543b 61a458b3 711a626e 7c89596e     ;TtV.X.anb.qnY.|
10026d18:	7d1b7cde 658796f0 4e19805e 51754f75     .|.}...e^..NuOuQ
10026d28:	5e635840 5f0a5e73 4e2667c4 9589853d     @Xc^s^._.g&N=...
10026d38:	7c73965b 50fb9801 765658c1 522578a7     [.s|...P.XVv.x%R
10026d48:	851177a5 504f7b86 72475909 7de87bc7     .w...{OP.YGr.{.}
10026d58:	8fd48fba 4fbf904d 5a2952c9 97ad5f01     ....M..O.R)Z._..
10026d68:	82174fdd 570392ea 6b696355 88dc752b     .O.....WUcik+u..
10026d78:	7a428f14 589352df 620a6155 6bcd66ae     ..Bz.R.XUa.b.f.k
10026d88:	83e97c3f 4ff85023 54465305 59495831     ?|..#P.O.SFT1XIY
10026d98:	5cf05b9d 5d295cef 62b15e96 653e6367     .[.\.\)].^.bgc>e
10026da8:	670b65b9 6ce16cd5 783270f9 80de7e2b     .e.g.l.l.p2x+~..
10026db8:	840c82b3 870284ec 8a2a8912 90a68c4a     ..........*.J...
10026dc8:	98fd92d2 9d6c9cf3 4ea14e4f 5256508d     ......l.ON.N.PVR
10026dd8:	59a8574a 5fd85e3d 623f5fd9 671b66b4     JW.Y=^._._?b.f.g
10026de8:	68d267d0 7d215192 81a880aa 8c8c8b00     .g.h.Q!}........
10026df8:	927e8cbf 54209632 5317982c 535c50d5     ..~.2. T,..S.P\S
10026e08:	64b258a8 72676734 7a467766 52c391e6     .X.d4ggrfwFz...R
10026e18:	6b866ca1 5e4c5800 672c5954 51e17ffb     .l.k.XL^TY,g...Q
10026e28:	646976c6 9b5478e8 57cb9ebb 662759b9     .vid.xT....W.Y'f
10026e38:	6bce679a 69d954e9 819c5e55 9baa6795     .g.k.T.iU^...g..
10026e48:	9c5267fe 4ea6685d 53c84fe3 672b62b9     .gR.]h.N.O.S.b+g
10026e58:	8fc46cab 7e6d4fad 4e079ebf 6e806162     .l...Om~...Nba.n
10026e68:	85136f2b 672a5473 5df39b45 5cac7b95     +o..sT*gE..].{.\
10026e78:	871c5bc6 84d16e4a 81087a14 7c8d5999     .[..Jn...z...Y.|
10026e88:	77206c11 592252d9 725f7121 972777db     .l w.R"Y!q_r.w'.
10026e98:	690b9d61 5a185a7f 540d51a5 660e547d     a..i.Z.Z.Q.T}T.f
10026ea8:	8ff776df 9cf49298 725d59ea 514d6ec5     .v.......Y]r.nMQ
10026eb8:	7dbf68c9 97627dec 64789eba 83026a21     .h.}.}b...xd!j..
10026ec8:	5b5f5984 731b6bdb 7db276f2 84998017     .Y_[.k.s.v.}....
10026ed8:	67285132 76ee9ed9 52ff6762 5c249905     2Q(g...vbg.R..$\
10026ee8:	7c7e623b 554f8cb0 7d0b60b6 53019580     ;b~|..OU.`.}...S
10026ef8:	51b64e5f 723a591c 91ce8036 77e25f25     _N.Q.Y:r6...%_.w
10026f08:	5f795384 85ac7d04 8e8d8a33 67f39756     .Sy_.}..3...V..g
10026f18:	945385ae 61086109 76526cb9 8f388aed     ..S..a.a.lRv..8.
10026f28:	4f51552f 52c7512a 5ba553cb 60a05e7d     /UQO*Q.R.S.[}^.`
10026f38:	63d66182 67da6709 6d8c6e67 73377336     .a.c.g.ggn.m6s7s
10026f48:	79507531 8a9888d5 9091904a 96c490f5     1uPy....J.......
10026f58:	5915878d 4f594e88 8a894e0e 98108f3f     ...Y.NYO.N..?...
10026f68:	5e7c50ad 5bb95996 63da5eb8 64c163fa     .P|^.Y.[.^.c.c.d
10026f78:	694a66dc 6d0b69d8 71946eb6 7aaf7528     .fJi.i.m.n.q(u.z
10026f88:	80007f8a 84c98449 8b218981 90658e0a     ....I.....!...e.
10026f98:	990a967d 6291617e 6c836b32 7fcc6d74     }...~a.b2k.ltm..
10026fa8:	6dc07ffc 87ba7f85 676588f8 983c83b1     ...m......eg..<.
10026fb8:	6d1b96f7 843d7d61 4e71916a 5d505375     ...ma}=.j.qNuSP]
10026fc8:	6feb6b04 862d85cd 522989a7 5c65540f     .k.o..-...)R.Te\
10026fd8:	68a8674e 74837406 88cf75e2 91cc88e1     Ng.h.t.t.u......
10026fe8:	967896e2 73875f8b 844e7acb 756563a0     ..x.._.s.zN..ceu
10026ff8:	6d415289 74096e9c 786b7559 96867c92     .RAm.n.tYukx.|..
10027008:	9f8d7adc 616e4fb6 865c65c5 4eae4e86     .z...Ona.e\..N.N
10027018:	4e2150da 5bee51cc 68816599 731f6dbc     .P!N.Q.[.e.h.m.s
10027028:	77ad7642 7ce77a1c 8ad2826f 91cf907c     Bv.w.z.|o...|...
10027038:	98189675 7dd1529b 5398502b 6dcb6797     u....R.}+P.S.g.m
10027048:	743371d0 8f2a81e8 9c5796a3 74609e9f     .q3t..*...W...`t
10027058:	6d995841 985e7d2f 4f364ee4 51b74f8b     AX.m/}^..N6O.O.Q
10027068:	5dba52b1 73b2601c 82d3793c 96b79234     .R.].`.s<y..4...
10027078:	970a96f6 9f629e97 6b7466a6 52a35217     ......b..ftk.R.R
10027088:	88c270c8 604b5ec9 6f236190 7c3e7149     .p...^K`.a#oIq>|
10027098:	806f7df4 902384ee 5442932c 6ad39b6f     .}o...#.,.BTo..j
100270a8:	8cc27089 97328def 5a4152b4 5f045eca     .p....2..RAZ.^._
100270b8:	697c6717 6d6a6994 72626f0f 7bed72fc     .g|i.ijm.obr.r.{
100270c8:	807e8001 90ce874b 9e93516d 808b7984     ..~.K...mQ...y..
100270d8:	8ad69332 548c502d 6b6a8a71 81078cc4     2...-P.Tq.jk....
100270e8:	67a060d1 4e999df2 9c104e98 85c18a6b     .`.g...N.N..k...
100270f8:	69008568 78976e7e 00008155              h..i~n.xU...

10027104 <a8>:
10027104:	25022500 2510250c 25142518 252c251c     .%.%.%.%.%.%.%,%
10027114:	25342524 2501253c 250f2503 251b2513     $%4%<%.%.%.%.%.%
10027124:	25232517 252b2533 254b253b 252f2520     .%#%3%+%;%K% %/%
10027134:	25372528 251d253f 25252530 25422538     (%7%?%.%0%%%8%B%

10027144 <a7>:
10027144:	04110410 04130412 04150414 04160401     ................
10027154:	04180417 041a0419 041c041b 041e041d     ................
10027164:	0420041f 04220421 04240423 04260425     .. .!.".#.$.%.&.
10027174:	04280427 042a0429 042c042b 042e042d     '.(.).*.+.,.-...
10027184:	0000042f 00000000 00000000 00000000     /...............
	...
100271a4:	04310430 04330432 04350434 04360451     0.1.2.3.4.5.Q.6.
100271b4:	04380437 043a0439 043c043b 043e043d     7.8.9.:.;.<.=.>.
100271c4:	0440043f 04420441 04440443 04460445     ?.@.A.B.C.D.E.F.
100271d4:	04480447 044a0449 044c044b 044e044d     G.H.I.J.K.L.M.N.
100271e4:	0000044f                                O...

100271e8 <a6>:
100271e8:	03920391 03940393 03960395 03980397     ................
100271f8:	039a0399 039c039b 039e039d 03a0039f     ................
10027208:	03a303a1 03a503a4 03a703a6 03a903a8     ................
	...
10027228:	03b203b1 03b403b3 03b603b5 03b803b7     ................
10027238:	03ba03b9 03bc03bb 03be03bd 03c003bf     ................
10027248:	03c303c1 03c503c4 03c703c6 03c903c8     ................

10027258 <a3>:
	...
10027264:	01000000 01010101 01010101 00000001     ................
10027274:	00000000 01010101 01010101 01010101     ................
10027284:	01010101 01010101 01010101 00000101     ................
10027294:	00000000 01010100 01010101 01010101     ................
100272a4:	01010101 01010101 01010101 00010101     ................

100272b4 <a2>:
100272b4:	25a125c6 25b325a0 25bd25b2 203b25bc     .%.%.%.%.%.%.%; 
100272c4:	21923012 21912190 30132193 00000000     .0.!.!.!.!.0....
	...
100272e4:	22080000 2286220b 22822287 222a2283     ..."."."."."."*"
100272f4:	00002229 00000000 00000000 00000000     )"..............
10027304:	22270000 00ac2228 21d421d2 22032200     ..'"("...!.!."."
10027314:	00002229 00000000 00000000 00000000     )"..............
10027324:	00000000 22200000 231222a5 22072202     ...... ".".#."."
10027334:	22522261 226b226a 223d221a 2235221d     a"R"j"k"."="."5"
10027344:	222c222b 00000000 00000000 00000000     +","............
10027354:	212b0000 266f2030 266a266d 20212020     ..+!0 o&m&j&  ! 
10027364:	222c00b6 00000000 25ef0000              ..,".......%

10027370 <a1>:
10027370:	30013000 ff0c3002 30fbff0e ff1bff1a     .0.0.0.....0....
10027380:	ff01ff1f 309c309b ff4000b4 ff3e00a8     .....0.0..@...>.
10027390:	ff3f203e 30fe30fd 309e309d 4edd3003     > ?..0.0.0.0.0.N
100273a0:	30063005 30fc3007 20102014 ff3cff0f     .0.0.0.0. . ..<.
100273b0:	2016301c 2026ff5c 20182025 201c2019     .0. \.& % . . . 
100273c0:	ff08201d 3014ff09 ff3b3015 ff5bff3d     . .....0.0;.=.[.
100273d0:	3008ff5d 300a3009 300c300b 300e300d     ]..0.0.0.0.0.0.0
100273e0:	3010300f ff0b3011 00b12212 00f700d7     .0.0.0..."......
100273f0:	2260ff1d ff1eff1c 22672266 2234221e     ..`"....f"g"."4"
10027400:	26402642 203200b0 21032033 ff0400a5     B&@&..2 3 .!....
10027410:	00a300a2 ff03ff05 ff0aff06 00a7ff20     ............ ...
10027420:	26052606 25cf25cb 25c725ce              .&.&.%.%.%.%

1002742c <categories>:
1002742c:	00000000 201c001f 00000000 00002114     ....... .....!..
1002743c:	24160002 00000000 00002514 28150002     ...$.....%.....(
1002744c:	00000000 00002911 2a140000 00000000     .....).....*....
1002745c:	00002b18 2c140000 00000000 00002d10     .+.....,.....-..
1002746c:	2e140000 00010000 0000300c 3a140009     .........0.....:
1002747c:	00010000 00003c18 3f140002 00010000     .....<.....?....
1002748c:	00004103 5b150019 00000000 00005c14     .A.....[.....\..
1002749c:	5d110000 00000000 00005e17 5f0f0000     ...].....^....._
100274ac:	00000000 00006017 61030000 00190000     .....`.....a....
100274bc:	00007b15 7c180000 00000000 00007d11     .{.....|.....}..
100274cc:	7e180000 00000000 00007f00 a01c0020     ...~........ ...
100274dc:	00000000 0000a114 a2160000 00030000     ................
100274ec:	0000a619 a7140000 00000000 0000a817     ................
100274fc:	a9190000 00000000 0000aa06 ab130000     ................
1002750c:	00000000 0000ac18 ad010000 00000000     ................
1002751c:	0000ae19 af170000 00000000 0000b019     ................
1002752c:	b1180000 00000000 0000b20e b4170001     ................
1002753c:	00000000 0000b503 b6140000 00010000     ................
1002754c:	0000b817 b90e0000 00000000 0000ba06     ................
1002755c:	bb120000 00000000 0000bc0e bf140002     ................
1002756c:	00000000 0000c003 d7180016 00000000     ................
1002757c:	0000d803 df040006 00000000 0000e003     ................
1002758c:	f7180016 00000000 0000f803 3804003f     ............?..8
1002759c:	00000001 00013903 4904000f 00000001     .....9.....I....
100275ac:	00014a03 8d040042 00000001 00018e03     .J..B...........
100275bc:	9b04000c 00000001 00019c03 aa04000d     ................
100275cc:	00010001 0001ac03 ba04000d 00000001     ................
100275dc:	0001bb06 bc030000 00010001 0001be04     ................
100275ec:	bf030000 00000001 0001c006 c4030003     ................
100275fc:	00000001 0001c507 c6030000 00010001     ................
1002760c:	0001c807 c9030000 00010001 0001cb07     ................
1002761c:	cc030000 00230001 0001f004 f1030000     ......#.........
1002762c:	00000001 0001f207 f3030000 002d0001     ..............-.
1002763c:	00022104 22030000 00110002 00023404     .!.....".....4..
1002764c:	3a030005 001a0002 00025504 56030000     ...:.....U.....V
1002765c:	00010002 00025804 59030000 00000002     .....X.....Y....
1002766c:	00025a04 5b030000 00010002 00025d04     .Z.....[.....]..
1002767c:	60030002 00010002 00026204 63030000     ...`.....b.....c
1002768c:	00000002 00026404 65030000 00010002     .....d.....e....
1002769c:	00026704 68030000 00040002 00026d04     .g.....h.....m..
100276ac:	6f030001 00000002 00027004 71030000     ...o.....p.....q
100276bc:	00010002 00027304 75030001 00000002     .....s.....u....
100276cc:	00027604 7d030006 00000002 00027e04     .v.....}.....~..
100276dc:	80030001 00000002 00028104 82030000     ................
100276ec:	00010002 00028404 87030002 00050002     ................
100276fc:	00028d04 92030004 00000002 00029304     ................
1002770c:	94060000 00000002 00029504 9d030007     ................
1002771c:	00010002 00029f04 b0050010 00110002     ................
1002772c:	0002c217 c6050003 000b0002 0002d217     ................
1002773c:	e005000d 00040002 0002e517 ec050006     ................
1002774c:	00000002 0002ed17 ee050000 00000002     ................
1002775c:	0002ef17 000b0010 006f0003 00037003     ..........o..p..
1002776c:	74050003 00000003 00037517 76030000     ...t.....u.....v
1002777c:	00010003 00037a05 7b030000 00020003     .....z.....{....
1002778c:	00037e14 7f030000 00000003 00038417     .~..............
1002779c:	86030001 00000003 00038714 88030000     ................
100277ac:	00020003 00038c03 8e030000 00010003     ................
100277bc:	00039004 91030000 00100003 0003a303     ................
100277cc:	b004000c 00000003 0003b103 d2080020     ............ ...
100277dc:	00020003 0003d503 f6180020 00000003     ........ .......
100277ec:	0003f703 fc040004 00000003 0003fd03     ................
100277fc:	82190084 00000004 0004830b 880a0004     ................
1002780c:	00010004 00048a03 310300a5 00250005     ...........1..%.
1002781c:	00055905 5a140000 00050005 00056004     .Y.....Z.....`..
1002782c:	61030000 00250005 00058704 89140001     ...a..%.........
1002783c:	00000005 00058a10 8d190000 00010005     ................
1002784c:	00058f16 910b0000 002c0005 0005be10     ..........,.....
1002785c:	bf0b0000 00000005 0005c014 c10b0000     ................
1002786c:	00010005 0005c314 c40b0000 00010005     ................
1002787c:	0005c614 c70b0000 00000005 0005d006     ................
1002788c:	ef06001a 00030005 0005f314 00010001     ................
1002789c:	00050006 00060618 09140002 00010006     ................
100278ac:	00060b16 0c140000 00010006 00060e19     ................
100278bc:	100b0001 000a0006 00061b14 1c010000     ................
100278cc:	00000006 00061d14 20060002 001f0006     ........... ....
100278dc:	00064005 41060000 00090006 00064b0b     .@.....A.....K..
100278ec:	600c0014 00090006 00066a14 6e060003     ...`.....j.....n
100278fc:	00010006 0006700b 71060000 00620006     .....p.....q..b.
1002790c:	0006d414 d5060000 00000006 0006d60b     ................
1002791c:	dd010006 00000006 0006de19 df0b0000     ................
1002792c:	00050006 0006e505 e70b0001 00010006     ................
1002793c:	0006e919 ea0b0000 00030006 0006ee06     ................
1002794c:	f00c0001 00090006 0006fa06 fd190002     ................
1002795c:	00010006 0006ff06 00140000 000d0007     ................
1002796c:	00070f01 10060000 00000007 0007110b     ................
1002797c:	12060000 001d0007 0007300b 4d06001a     .........0.....M
1002798c:	00580007 0007a60b b106000a 00000007     ..X.............
1002799c:	0007c00c ca060009 00200007 0007eb0b     .......... .....
100279ac:	f4050008 00010007 0007f619 f7140000     ................
100279bc:	00020007 0007fa05 fd0b0000 00000007     ................
100279cc:	0007fe16 00060001 00150008 0008160b     ................
100279dc:	1a050003 00000008 00081b0b 24050008     ...............$
100279ec:	00000008 0008250b 28050002 00000008     .....%.....(....
100279fc:	0008290b 30140004 000e0008 00084006     .).....0.....@..
10027a0c:	590b0018 00020008 00085e14 60060000     ...Y.....^.....`
10027a1c:	000a0008 00087006 88170017 00000008     .....p..........
10027a2c:	00088906 90010005 00010008 0008980b     ................
10027a3c:	a0060007 00280008 0008c905 ca0b0000     ......(.........
10027a4c:	00170008 0008e201 e30b0000 001f0008     ................
10027a5c:	00090309 04060000 00350009 00093a0b     ..........5..:..
10027a6c:	3b090000 00000009 00093c0b 3d060000     ...;.....<.....=
10027a7c:	00000009 00093e09 410b0002 00070009     .....>.....A....
10027a8c:	00094909 4d0b0003 00000009 00094e09     .I.....M.....N..
10027a9c:	50060001 00000009 0009510b 58060006     ...P.....Q.....X
10027aac:	00090009 0009620b 64140001 00010009     .....b.....d....
10027abc:	0009660c 70140009 00000009 00097105     .f.....p.....q..
10027acc:	72060000 000e0009 0009810b 82090000     ...r............
10027adc:	00010009 00098506 8f060007 00010009     ................
10027aec:	00099306 aa060015 00060009 0009b206     ................
10027afc:	b6060000 00030009 0009bc0b bd060000     ................
10027b0c:	00000009 0009be09 c10b0002 00030009     ................
10027b1c:	0009c709 cb090001 00010009 0009cd0b     ................
10027b2c:	ce060000 00000009 0009d709 dc060000     ................
10027b3c:	00010009 0009df06 e20b0002 00010009     ................
10027b4c:	0009e60c f0060009 00010009 0009f216     ................
10027b5c:	f40e0001 00050009 0009fa19 fb160000     ................
10027b6c:	00000009 0009fc06 fd140000 00000009     ................
10027b7c:	0009fe0b 010b0000 0001000a 000a0309     ................
10027b8c:	05060000 0005000a 000a0f06 13060001     ................
10027b9c:	0015000a 000a2a06 32060006 0001000a     .....*.....2....
10027bac:	000a3506 38060001 0001000a 000a3c0b     .5.....8.....<..
10027bbc:	3e090000 0002000a 000a410b 470b0001     ...>.....A.....G
10027bcc:	0001000a 000a4b0b 510b0002 0000000a     .....K.....Q....
10027bdc:	000a5906 5e060003 0000000a 000a660c     .Y.....^.....f..
10027bec:	700b0009 0001000a 000a7206 750b0002     ...p.....r.....u
10027bfc:	0000000a 000a7614 810b0000 0001000a     .....v..........
10027c0c:	000a8309 85060000 0008000a 000a8f06     ................
10027c1c:	93060002 0015000a 000aaa06 b2060006     ................
10027c2c:	0001000a 000ab506 bc0b0004 0000000a     ................
10027c3c:	000abd06 be090000 0002000a 000ac10b     ................
10027c4c:	c70b0004 0001000a 000ac909 cb090000     ................
10027c5c:	0001000a 000acd0b d0060000 0000000a     ................
10027c6c:	000ae006 e20b0001 0001000a 000ae60c     ................
10027c7c:	f0140009 0000000a 000af116 f9060000     ................
10027c8c:	0000000a 000afa0b 010b0005 0000000b     ................
10027c9c:	000b0209 05060001 0007000b 000b0f06     ................
10027cac:	13060001 0015000b 000b2a06 32060006     .........*.....2
10027cbc:	0001000b 000b3506 3c0b0004 0000000b     .....5.....<....
10027ccc:	000b3d06 3e090000 0000000b 000b3f0b     .=.....>.....?..
10027cdc:	40090000 0000000b 000b410b 47090003     ...@.....A.....G
10027cec:	0001000b 000b4b09 4d0b0001 0000000b     .....K.....M....
10027cfc:	000b550b 57090001 0000000b 000b5c06     .U.....W.....\..
10027d0c:	5f060001 0002000b 000b620b 660c0001     ..._.....b.....f
10027d1c:	0009000b 000b7019 71060000 0000000b     .....p.....q....
10027d2c:	000b720e 820b0005 0000000b 000b8306     .r..............
10027d3c:	85060000 0005000b 000b8e06 92060002     ................
10027d4c:	0003000b 000b9906 9c060001 0000000b     ................
10027d5c:	000b9e06 a3060001 0001000b 000ba806     ................
10027d6c:	ae060002 000b000b 000bbe09 c00b0001     ................
10027d7c:	0000000b 000bc109 c6090001 0002000b     ................
10027d8c:	000bca09 cd0b0002 0000000b 000bd006     ................
10027d9c:	d7090000 0000000b 000be60c f00e0009     ................
10027dac:	0002000b 000bf319 f9160005 0000000b     ................
10027dbc:	000bfa19 000b0000 0000000c 000c0109     ................
10027dcc:	040b0002 0000000c 000c0506 0e060007     ................
10027ddc:	0002000c 000c1206 2a060016 000f000c     ...........*....
10027dec:	000c3c0b 3d060000 0000000c 000c3e0b     .<.....=.....>..
10027dfc:	41090002 0003000c 000c460b 4a0b0002     ...A.....F.....J
10027e0c:	0003000c 000c550b 58060001 0002000c     .....U.....X....
10027e1c:	000c5d06 60060000 0001000c 000c620b     .].....`.....b..
10027e2c:	660c0001 0009000c 000c7714 780e0000     ...f.....w.....x
10027e3c:	0006000c 000c7f19 80060000 0000000c     ................
10027e4c:	000c810b 82090000 0001000c 000c8414     ................
10027e5c:	85060000 0007000c 000c8e06 92060002     ................
10027e6c:	0016000c 000caa06 b5060009 0004000c     ................
10027e7c:	000cbc0b bd060000 0000000c 000cbe09     ................
10027e8c:	bf0b0000 0000000c 000cc009 c60b0004     ................
10027e9c:	0000000c 000cc709 ca090001 0001000c     ................
10027eac:	000ccc0b d5090001 0001000c 000cdd06     ................
10027ebc:	e0060001 0001000c 000ce20b e60c0001     ................
10027ecc:	0009000c 000cf106 f3090001 0000000c     ................
10027edc:	000d000b 02090001 0001000d 000d0406     ................
10027eec:	0e060008 0002000d 000d1206 3b0b0028     ............(..;
10027efc:	0001000d 000d3d06 3e090000 0002000d     .....=.....>....
10027f0c:	000d410b 46090003 0002000d 000d4a09     .A.....F.....J..
10027f1c:	4d0b0002 0000000d 000d4e06 4f190000     ...M.....N.....O
10027f2c:	0000000d 000d5406 57090002 0000000d     .....T.....W....
10027f3c:	000d580e 5f060006 0002000d 000d620b     .X....._.....b..
10027f4c:	660c0001 0009000d 000d700e 79190008     ...f.....p.....y
10027f5c:	0000000d 000d7a06 810b0005 0000000d     .....z..........
10027f6c:	000d8209 85060001 0011000d 000d9a06     ................
10027f7c:	b3060017 0008000d 000dbd06 c0060000     ................
10027f8c:	0006000d 000dca0b cf090000 0002000d     ................
10027f9c:	000dd20b d60b0002 0000000d 000dd809     ................
10027fac:	e60c0007 0009000d 000df209 f4140001     ................
10027fbc:	0000000d 000e0106 310b002f 0000000e     ......../..1....
10027fcc:	000e3206 340b0001 0006000e 000e3f16     .2.....4.....?..
10027fdc:	40060000 0005000e 000e4605 470b0000     ...@.....F.....G
10027fec:	0007000e 000e4f14 500c0000 0009000e     .....O.....P....
10027ffc:	000e5a14 81060001 0001000e 000e8406     .Z..............
1002800c:	86060000 0004000e 000e8c06 a5060017     ................
1002801c:	0000000e 000ea706 b10b0009 0000000e     ................
1002802c:	000eb206 b40b0001 0008000e 000ebd06     ................
1002803c:	c0060000 0004000e 000ec605 c80b0000     ................
1002804c:	0006000e 000ed00c dc060009 0003000e     ................
1002805c:	000f0006 01190000 0002000f 000f0414     ................
1002806c:	1319000e 0000000f 000f1414 15190000     ................
1002807c:	0002000f 000f180b 1a190001 0005000f     ................
1002808c:	000f200c 2a0e0009 0009000f 000f3419     . .....*.....4..
1002809c:	350b0000 0000000f 000f3619 370b0000     ...5.....6.....7
100280ac:	0000000f 000f3819 390b0000 0000000f     .....8.....9....
100280bc:	000f3a15 3b110000 0000000f 000f3c15     .:.....;.....<..
100280cc:	3d110000 0000000f 000f3e09 40060001     ...=.....>.....@
100280dc:	0007000f 000f4906 710b0023 000d000f     .....I..#..q....
100280ec:	000f7f09 800b0000 0004000f 000f8514     ................
100280fc:	860b0000 0001000f 000f8806 8d0b0004     ................
1002810c:	000a000f 000f990b be190023 0007000f     ........#.......
1002811c:	000fc60b c7190000 0005000f 000fce19     ................
1002812c:	d0140001 0004000f 000fd519 d9140003     ................
1002813c:	0001000f 00100006 2b09002a 00010010     ........*..+....
1002814c:	00102d0b 31090003 00000010 0010320b     .-.....1.....2..
1002815c:	38090005 00000010 0010390b 3b090001     ...8.....9.....;
1002816c:	00010010 00103d0b 3f060001 00000010     .....=.....?....
1002817c:	0010400c 4a140009 00050010 00105006     .@.....J.....P..
1002818c:	56090005 00010010 0010580b 5a060001     ...V.....X.....Z
1002819c:	00030010 00105e0b 61060002 00000010     .....^.....a....
100281ac:	00106209 65060002 00010010 00106709     .b.....e.....g..
100281bc:	6e060006 00020010 0010710b 75060003     ...n.....q.....u
100281cc:	000c0010 0010820b 83090000 00010010     ................
100281dc:	0010850b 87090001 00050010 00108d0b     ................
100281ec:	8e060000 00000010 00108f09 900c0000     ................
100281fc:	00090010 00109a09 9d0b0002 00000010     ................
1002820c:	00109e19 a0030001 00250010 0010c703     ..........%.....
1002821c:	cd030000 00000010 0010d003 fb14002a     ............*...
1002822c:	00000010 0010fc05 fd030000 00020010     ................
1002823c:	00110006 4a060148 00030012 00125006     ....H..J.....P..
1002824c:	58060006 00000012 00125a06 60060003     ...X.....Z.....`
1002825c:	00280012 00128a06 90060003 00200012     ..(........... .
1002826c:	0012b206 b8060003 00060012 0012c006     ................
1002827c:	c2060000 00030012 0012c806 d806000e     ................
1002828c:	00380012 00131206 18060003 00420013     ..8...........B.
1002829c:	00135d0b 60140002 00080013 0013690e     .].....`.....i..
100282ac:	80060013 000f0013 00139019 a0030009     ................
100282bc:	00550013 0013f803 00100005 00000014     ..U.............
100282cc:	00140106 6d19026b 00000016 00166e14     ....k..m.....n..
100282dc:	6f060000 00100016 0016801c 81060000     ...o............
100282ec:	00190016 00169b15 9c110000 00000016     ................
100282fc:	0016a006 eb14004a 00020016 0016ee0d     ....J...........
1002830c:	f1060002 00070016 00170006 120b0011     ................
1002831c:	00020017 00171509 1f060000 00120017     ................
1002832c:	0017320b 34090001 00000017 00173514     .2.....4.....5..
1002833c:	40060001 00110017 0017520b 60060001     ...@.....R.....`
1002834c:	000c0017 00176e06 720b0002 00010017     .....n.....r....
1002835c:	00178006 b40b0033 00010017 0017b609     ....3...........
1002836c:	b70b0000 00060017 0017be09 c60b0007     ................
1002837c:	00000017 0017c709 c90b0001 000a0017     ................
1002838c:	0017d414 d7050002 00000017 0017d814     ................
1002839c:	db160002 00000017 0017dc06 dd0b0000     ................
100283ac:	00000017 0017e00c f00e0009 00090017     ................
100283bc:	00180014 06100005 00000018 00180714     ................
100283cc:	0b0b0003 00020018 00180e01 0f0b0000     ................
100283dc:	00000018 0018100c 20060009 00220018     ........... ..".
100283ec:	00184305 44060000 00340018 00188006     .C.....D..4.....
100283fc:	850b0004 00010018 00188706 a90b0021     ............!...
1002840c:	00000018 0018aa06 b0060000 00450018     ..............E.
1002841c:	00190006 200b001e 00020019 00192309     ....... .....#..
1002842c:	270b0003 00010019 00192909 30090002     ...'.....).....0
1002843c:	00010019 0019320b 33090000 00050019     .....2.....3....
1002844c:	0019390b 40190002 00000019 00194414     .9.....@.....D..
1002845c:	460c0001 00090019 00195006 7006001d     ...F.....P.....p
1002846c:	00040019 00198006 b006002b 00190019     ........+.......
1002847c:	0019d00c da0e0009 00000019 0019de19     ................
1002848c:	00060021 0016001a 001a170b 19090001     !...............
1002849c:	0001001a 001a1b0b 1e140000 0001001a     ................
100284ac:	001a2006 55090034 0000001a 001a560b     . ..4..U.....V..
100284bc:	57090000 0000001a 001a580b 600b0006     ...W.....X.....`
100284cc:	0000001a 001a6109 620b0000 0000001a     .....a.....b....
100284dc:	001a6309 650b0001 0007001a 001a6d09     .c.....e.....m..
100284ec:	730b0005 0009001a 001a7f0b 800c0000     ...s............
100284fc:	0009001a 001a900c a0140009 0006001a     ................
1002850c:	001aa705 a8140000 0005001a 001ab00b     ................
1002851c:	be0a000d 0000001a 001abf0b 000b000f     ................
1002852c:	0003001b 001b0409 05060000 002e001b     ................
1002853c:	001b340b 35090000 0000001b 001b360b     .4.....5.....6..
1002854c:	3b090004 0000001b 001b3c0b 3d090000     ...;.....<.....=
1002855c:	0004001b 001b420b 43090000 0001001b     .....B.....C....
1002856c:	001b4506 500c0007 0009001b 001b5a14     .E.....P.....Z..
1002857c:	61190006 0009001b 001b6b0b 74190008     ...a.....k.....t
1002858c:	0008001b 001b7d14 800b0001 0001001b     .....}..........
1002859c:	001b8209 83060000 001d001b 001ba109     ................
100285ac:	a20b0000 0003001b 001ba609 a80b0001     ................
100285bc:	0001001b 001baa09 ab0b0000 0002001b     ................
100285cc:	001bae06 b00c0001 0009001b 001bba06     ................
100285dc:	e60b002b 0000001b 001be709 e80b0000     +...............
100285ec:	0001001b 001bea09 ed0b0002 0000001b     ................
100285fc:	001bee09 ef0b0000 0002001b 001bf209     ................
1002860c:	fc140001 0003001b 001c0006 24090023     ............#..$
1002861c:	0007001c 001c2c0b 34090007 0001001c     .....,.....4....
1002862c:	001c360b 3b140001 0004001c 001c400c     .6.....;.....@..
1002863c:	4d060009 0002001c 001c500c 5a060009     ...M.....P.....Z
1002864c:	001d001c 001c7805 7e140005 0001001c     .....x.....~....
1002865c:	001c8003 90030008 002a001c 001cbd03     ..........*.....
1002866c:	c0140002 0007001c 001cd00b d3140002     ................
1002867c:	0000001c 001cd40b e109000c 0000001c     ................
1002868c:	001ce20b e9060006 0003001c 001ced0b     ................
1002869c:	ee060000 0005001c 001cf40b f5060000     ................
100286ac:	0001001c 001cf709 f80b0000 0001001c     ................
100286bc:	001cfa06 00040000 002b001d 001d2c05     ..........+..,..
100286cc:	6b04003e 000c001d 001d7805 79030000     >..k.....x.....y
100286dc:	0000001d 001d7a04 7d030002 0000001d     .....z.....}....
100286ec:	001d7e04 8e03000f 0000001d 001d8f04     .~..............
100286fc:	9b05000b 0024001d 001dc00b 0003003f     ......$.....?...
1002870c:	0095001e 001e9604 9b030004 0000001e     ................
1002871c:	001e9c04 9e030001 0000001e 001e9f04     ................
1002872c:	a0030000 0075001e 001f1803 20030005     ......u........ 
1002873c:	0025001f 001f4803 50040005 0000001f     ..%..H.....P....
1002874c:	001f5103 52040000 0000001f 001f5303     .Q.....R.....S..
1002875c:	54040000 0000001f 001f5503 56040000     ...T.....U.....V
1002876c:	0000001f 001f5703 59030000 0000001f     .....W.....Y....
1002877c:	001f5b03 5d030000 0000001f 001f5f03     .[.....]....._..
1002878c:	8003001e 0007001f 001f8807 90030007     ................
1002879c:	0007001f 001f9807 a0030007 0007001f     ................
100287ac:	001fa807 b0030007 0001001f 001fb204     ................
100287bc:	b3030000 0000001f 001fb404 b6040000     ................
100287cc:	0001001f 001fb803 bc070003 0000001f     ................
100287dc:	001fbd17 be030000 0000001f 001fbf17     ................
100287ec:	c2040002 0000001f 001fc303 c4040000     ................
100287fc:	0000001f 001fc604 c8030001 0003001f     ................
1002880c:	001fcc07 cd170000 0002001f 001fd003     ................
1002881c:	d2040001 0001001f 001fd604 d8030001     ................
1002882c:	0003001f 001fdd17 e0030002 0001001f     ................
1002883c:	001fe204 e5030002 0000001f 001fe604     ................
1002884c:	e8030001 0004001f 001fed17 f2040002     ................
1002885c:	0000001f 001ff303 f4040000 0000001f     ................
1002886c:	001ff604 f8030001 0003001f 001ffc07     ................
1002887c:	fd170000 0001001f 0020001c 0b01000a     .......... .....
1002888c:	00040020 00201010 16140005 00010020      ..... ..... ...
1002889c:	00201813 19120000 00000020 00201a15     .. ..... ..... .
100288ac:	1b130000 00010020 00201d12 1e150000     .... ..... .....
100288bc:	00000020 00201f13 20140000 00070020      ..... ....  ...
100288cc:	0020281a 291b0000 00000020 00202a01     .( ....) ....* .
100288dc:	2f1c0004 00000020 00203014 39130008     .../ ....0 ....9
100288ec:	00000020 00203a12 3b140000 00030020      ....: ....; ...
100288fc:	00203f0f 41140001 00020020 00204418     .? ....A ....D .
1002890c:	45150000 00000020 00204611 47140000     ...E ....F ....G
1002891c:	000a0020 00205218 53140000 00000020      ....R ....S ...
1002892c:	0020540f 55140000 00090020 00205f1c     .T ....U ...._ .
1002893c:	60010000 00040020 00206601 700e0009     ...` ....f ....p
1002894c:	00000020 00207105 740e0000 00050020      ....q ....t ...
1002895c:	00207a18 7d150002 00000020 00207e11     .z ....} ....~ .
1002896c:	7f050000 00000020 0020800e 8a180009     .... ..... .....
1002897c:	00020020 00208d15 8e110000 00000020      ..... ..... ...
1002898c:	00209005 a016000c 00200020 0020d00b     .. ..... . ... .
1002899c:	dd0a000c 00030020 0020e10b e20a0000     .... ..... .....
100289ac:	00020020 0020e50b 0019000b 00010021      ..... .....!...
100289bc:	00210208 03190000 00030021 00210708     ..!.....!.....!.
100289cc:	08190000 00010021 00210a04 0b080000     ....!.....!.....
100289dc:	00020021 00210e04 10080001 00020021     !.....!.....!...
100289ec:	00211304 14190000 00000021 00211508     ..!.....!.....!.
100289fc:	16190000 00010021 00211818 19080000     ....!.....!.....
10028a0c:	00040021 00211e19 24080005 00000021     !.....!....$!...
10028a1c:	00212519 26030000 00000021 00212719     .%!....&!....'!.
10028a2c:	28080000 00000021 00212919 2a030000     ...(!....)!....*
10028a3c:	00010021 00212c08 2e190001 00000021     !....,!.....!...
10028a4c:	00212f04 30080000 00010021 00213203     ./!....0!....2!.
10028a5c:	33080000 00000021 00213404 35060000     ...3!....4!....5
10028a6c:	00030021 00213904 3a190000 00010021     !....9!....:!...
10028a7c:	00213c04 3e080001 00010021 00214018     .<!....>!....@!.
10028a8c:	45080004 00000021 00214604 4a190003     ...E!....F!....J
10028a9c:	00000021 00214b18 4c190000 00010021     !....K!....L!...
10028aac:	00214e03 4f190000 00000021 0021500e     .N!....O!....P!.
10028abc:	600d000f 00220021 00218303 850d0001     ...`!."...!.....
10028acc:	00030021 0021890e 8a190000 00010021     !.....!.....!...
10028adc:	00219018 95190004 00040021 00219a18     ..!.....!.....!.
10028aec:	9c190001 00030021 0021a018 a1190000     ....!.....!.....
10028afc:	00010021 0021a318 a4190000 00010021     !.....!.....!...
10028b0c:	0021a618 a7190000 00060021 0021ae18     ..!.....!.....!.
10028b1c:	af190000 001e0021 0021ce18 d0190001     ....!.....!.....
10028b2c:	00010021 0021d218 d3190000 00000021     !.....!.....!...
10028b3c:	0021d418 d5190000 001e0021 0021f418     ..!.....!.....!.
10028b4c:	0019010b 00070023 00230815 09110000     ....#.....#.....
10028b5c:	00000023 00230a15 0b110000 00000023     #.....#.....#...
10028b6c:	00230c19 20180013 00010023 00232219     ..#.... #...."#.
10028b7c:	29150006 00000023 00232a11 2b190000     ...)#....*#....+
10028b8c:	00500023 00237c18 7d190000 001d0023     #.P..|#....}#...
10028b9c:	00239b18 b4190018 00270023 0023dc18     ..#.....#.'...#.
10028bac:	e2190005 00440023 00244019 600e000a     ....#.D..@$....`
10028bbc:	003b0024 00249c19 ea0e004d 00150024     $.;...$.M...$...
10028bcc:	00250019 b71800b6 00000025 0025b819     ..%.....%.....%.
10028bdc:	c1180008 00000025 0025c219 f8180035     ....%.....%.5...
10028bec:	00070025 00260019 6f18006e 00000026     %.....&.n..o&...
10028bfc:	00267019 681500f7 00000027 00276911     .p&....h'....i'.
10028c0c:	6a150000 00000027 00276b11 6c150000     ...j'....k'....l
10028c1c:	00000027 00276d11 6e150000 00000027     '....m'....n'...
10028c2c:	00276f11 70150000 00000027 00277111     .o'....p'....q'.
10028c3c:	72150000 00000027 00277311 74150000     ...r'....s'....t
10028c4c:	00000027 00277511 760e0000 001d0027     '....u'....v'...
10028c5c:	00279419 c018002b 00040027 0027c515     ..'.+...'.....'.
10028c6c:	c6110000 00000027 0027c718 e615001e     ....'.....'.....
10028c7c:	00000027 0027e711 e8150000 00000027     '.....'.....'...
10028c8c:	0027e911 ea150000 00000027 0027eb11     ..'.....'.....'.
10028c9c:	ec150000 00000027 0027ed11 ee150000     ....'.....'.....
10028cac:	00000027 0027ef11 f0180000 000f0027     '.....'.....'...
10028cbc:	00280019 001800ff 00820029 00298315     ..(.....).....).
10028ccc:	84110000 00000029 00298515 86110000     ....).....).....
10028cdc:	00000029 00298715 88110000 00000029     ).....).....)...
10028cec:	00298915 8a110000 00000029 00298b15     ..).....).....).
10028cfc:	8c110000 00000029 00298d15 8e110000     ....).....).....
10028d0c:	00000029 00298f15 90110000 00000029     ).....).....)...
10028d1c:	00299115 92110000 00000029 00299315     ..).....).....).
10028d2c:	94110000 00000029 00299515 96110000     ....).....).....
10028d3c:	00000029 00299715 98110000 00000029     ).....).....)...
10028d4c:	00299918 d815003e 00000029 0029d911     ..).>...).....).
10028d5c:	da150000 00000029 0029db11 dc180000     ....).....).....
10028d6c:	001f0029 0029fc15 fd110000 00000029     ).....).....)...
10028d7c:	0029fe18 00190101 002f002b 002b3018     ..).....+./..0+.
10028d8c:	45190014 0001002b 002b4718 4d190005     ...E+....G+....M
10028d9c:	0026002b 002b7619 9719001f 0068002b     +.&..v+.....+.h.
10028dac:	002c0003 71040070 0000002c 002c7203     ..,.p..q,....r,.
10028dbc:	74040001 0000002c 002c7503 77040001     ...t,....u,....w
10028dcc:	0004002c 002c7c05 7e030001 0065002c     ,....|,....~,.e.
10028ddc:	002ce404 e5190000 0005002c 002ceb03     ..,.....,.....,.
10028dec:	ef0b0003 0002002c 002cf203 f9140001     ....,.....,.....
10028dfc:	0003002c 002cfd0e fe140000 0001002c     ,.....,.....,...
10028e0c:	002d0003 27030025 0000002d 002d2d03     ..-.%..'-....--.
10028e1c:	30060000 0037002d 002d6f05 70140000     ...0-.7..o-....p
10028e2c:	0000002d 002d7f0b 80060000 0016002d     -.....-.....-...
10028e3c:	002da006 a8060006 0006002d 002db006     ..-.....-.....-.
10028e4c:	b8060006 0006002d 002dc006 c8060006     ....-.....-.....
10028e5c:	0006002d 002dd006 d8060006 0006002d     -.....-.....-...
10028e6c:	002de00b 0014001f 0001002e 002e0213     ..-.............
10028e7c:	03120000 0000002e 002e0413 05120000     ................
10028e8c:	0000002e 002e0614 09130002 0000002e     ................
10028e9c:	002e0a12 0b140000 0000002e 002e0c13     ................
10028eac:	0d120000 0000002e 002e0e14 17100008     ................
10028ebc:	0000002e 002e1814 1a100001 0000002e     ................
10028ecc:	002e1b14 1c130000 0000002e 002e1d12     ................
10028edc:	1e140000 0001002e 002e2013 21120000     ......... .....!
10028eec:	0000002e 002e2215 23110000 0000002e     .....".....#....
10028efc:	002e2415 25110000 0000002e 002e2615     .$.....%.....&..
10028f0c:	27110000 0000002e 002e2815 29110000     ...'.....(.....)
10028f1c:	0000002e 002e2a14 2f050004 0000002e     .....*...../....
10028f2c:	002e3014 3a100009 0001002e 002e3c14     .0.....:.....<..
10028f3c:	40100003 0000002e 002e4114 42150000     ...@.....A.....B
10028f4c:	0000002e 002e4314 5019000c 0001002e     .....C.....P....
10028f5c:	002e5214 55150002 0000002e 002e5611     .R.....U.....V..
10028f6c:	57150000 0000002e 002e5811 59150000     ...W.....X.....Y
10028f7c:	0000002e 002e5a11 5b150000 0000002e     .....Z.....[....
10028f8c:	002e5c11 5d100000 0000002e 002e8019     .\.....]........
10028f9c:	9b190019 0058002e 002f0019 f01900d5     ......X.../.....
10028fac:	000b002f 0030001c 01140000 00020030     /.....0.....0...
10028fbc:	00300419 05050000 00000030 00300606     ..0.....0.....0.
10028fcc:	070d0000 00000030 00300815 09110000     ....0.....0.....
10028fdc:	00000030 00300a15 0b110000 00000030     0.....0.....0...
10028fec:	00300c15 0d110000 00000030 00300e15     ..0.....0.....0.
10028ffc:	0f110000 00000030 00301015 11110000     ....0.....0.....
1002900c:	00000030 00301219 14150001 00000030     0.....0.....0...
1002901c:	00301511 16150000 00000030 00301711     ..0.....0.....0.
1002902c:	18150000 00000030 00301911 1a150000     ....0.....0.....
1002903c:	00000030 00301b11 1c100000 00000030     0.....0.....0...
1002904c:	00301d15 1e110000 00010030 00302019     ..0.....0.... 0.
1002905c:	210d0000 00080030 00302a0b 2e090003     ...!0....*0.....
1002906c:	00010030 00303010 31050000 00040030     0....00....10...
1002907c:	00303619 380d0001 00020030 00303b05     .60....80....;0.
1002908c:	3c060000 00000030 00303d14 3e190000     ...<0....=0....>
1002909c:	00010030 00304106 990b0055 00010030     0....A0.U...0...
100290ac:	00309b17 9d050001 00010030 00309f06     ..0.....0.....0.
100290bc:	a0100000 00000030 0030a106 fb140059     ....0.....0.Y...
100290cc:	00000030 0030fc05 ff060002 00000030     0.....0.....0...
100290dc:	00310506 3106002a 005d0031 00319019     ..1.*..11.]...1.
100290ec:	920e0001 00030031 00319619 a0060009     ....1.....1.....
100290fc:	001f0031 0031c019 f0060023 000f0031     1.....1.#...1...
1002910c:	00320019 200e001e 00090032 00322a19     ..2.... 2....*2.
1002911c:	480e001d 00070032 00325019 510e0000     ...H2....P2....Q
1002912c:	000e0032 00326019 800e001f 00090032     2....`2.....2...
1002913c:	00328a19 b10e0026 000e0032 0032c019     ..2.&...2.....2.
1002914c:	0006013f 19bf0034 004dc019 0006003f     ?...4.....M.?...
1002915c:	5214004e 00a01505 16060000 047600a0     N..R..........v.
1002916c:	00a49019 d0060036 002700a4 00a4f805     ....6.....'.....
1002917c:	fe140005 000100a4 00a50006 0c05010b     ................
1002918c:	000000a6 00a60d14 10060002 000f00a6     ................
1002919c:	00a6200c 2a060009 000100a6 00a64003     . .....*.....@..
100291ac:	6e06002d 000000a6 00a66f0b 700a0000     -..n.....o.....p
100291bc:	000200a6 00a67314 740b0000 000900a6     .....s.....t....
100291cc:	00a67e14 7f050000 000000a6 00a68003     .~..............
100291dc:	9c05001b 000100a6 00a69e0b a0060001     ................
100291ec:	004500a6 00a6e60d f00b0009 000100a6     ..E.............
100291fc:	00a6f214 00170005 001600a7 00a71705     ................
1002920c:	20170008 000100a7 00a72203 3004000d     ... .....".....0
1002921c:	000100a7 00a73203 7005003d 000000a7     .....2..=..p....
1002922c:	00a77104 79030007 000e00a7 00a78805     .q.....y........
1002923c:	89170000 000100a7 00a78b03 8e040002     ................
1002924c:	000000a7 00a78f06 90030000 000400a7     ................
1002925c:	00a79504 96030000 001800a7 00a7af04     ................
1002926c:	b0030000 001a00a7 00a7d003 d3040001     ................
1002927c:	000000a7 00a7d504 d6030000 000300a7     ................
1002928c:	00a7f205 f5030002 000100a7 00a7f706     ................
1002929c:	f8050000 000100a7 00a7fa04 fb060000     ................
100292ac:	000600a7 00a8020b 03060000 000200a8     ................
100292bc:	00a8060b 07060000 000300a8 00a80b0b     ................
100292cc:	0c060000 001600a8 00a82309 250b0001     .........#.....%
100292dc:	000100a8 00a82709 28190000 000300a8     .....'.....(....
100292ec:	00a82c0b 300e0000 000500a8 00a83619     .,.....0.....6..
100292fc:	38160001 000000a8 00a83919 40060000     ...8.....9.....@
1002930c:	003300a8 00a87414 80090003 000100a8     ..3..t..........
1002931c:	00a88206 b4090031 000f00a8 00a8c40b     ....1...........
1002932c:	ce140001 000100a8 00a8d00c e00b0009     ................
1002933c:	001100a8 00a8f206 f8140005 000200a8     ................
1002934c:	00a8fb06 fc140000 000000a8 00a8fd06     ................
1002935c:	ff0b0001 000000a8 00a9000c 0a060009     ................
1002936c:	001b00a9 00a9260b 2e140007 000100a9     .....&..........
1002937c:	00a93006 470b0016 000a00a9 00a95209     .0.....G.....R..
1002938c:	5f140001 000000a9 00a96006 800b001c     ..._.....`......
1002939c:	000200a9 00a98309 84060000 002e00a9     ................
100293ac:	00a9b30b b4090000 000100a9 00a9b60b     ................
100293bc:	ba090003 000100a9 00a9bc0b be090001     ................
100293cc:	000200a9 00a9c114 cf05000c 000000a9     ................
100293dc:	00a9d00c de140009 000100a9 00a9e006     ................
100293ec:	e50b0004 000000a9 00a9e605 e7060000     ................
100293fc:	000800a9 00a9f00c fa060009 000400a9     ................
1002940c:	00aa0006 290b0028 000500aa 00aa2f09     ....(..)...../..
1002941c:	310b0001 000100aa 00aa3309 350b0001     ...1.....3.....5
1002942c:	000100aa 00aa4006 430b0002 000000aa     .....@.....C....
1002943c:	00aa4406 4c0b0007 000000aa 00aa4d09     .D.....L.....M..
1002944c:	500c0000 000900aa 00aa5c14 60060003     ...P.....\.....`
1002945c:	000f00aa 00aa7005 71060000 000500aa     .....p.....q....
1002946c:	00aa7719 7a060002 000000aa 00aa7b09     .w.....z.....{..
1002947c:	7c0b0000 000000aa 00aa7d09 7e060000     ...|.....}.....~
1002948c:	003100aa 00aab00b b1060000 000000aa     ..1.............
1002949c:	00aab20b b5060002 000100aa 00aab70b     ................
100294ac:	b9060001 000400aa 00aabe0b c0060001     ................
100294bc:	000000aa 00aac10b c2060000 000000aa     ................
100294cc:	00aadb06 dd050001 000000aa 00aade14     ................
100294dc:	e0060001 000a00aa 00aaeb09 ec0b0000     ................
100294ec:	000100aa 00aaee09 f0140001 000100aa     ................
100294fc:	00aaf206 f3050000 000100aa 00aaf509     ................
1002950c:	f60b0000 000000aa 00ab0106 09060005     ................
1002951c:	000500ab 00ab1106 20060005 000600ab     ........... ....
1002952c:	00ab2806 30040006 002200ab 00ab5303     .(.....0.."..S..
1002953c:	54040000 000600ab 00ab5b17 5c050000     ...T.....[.....\
1002954c:	000300ab 00ab6004 69050008 000000ab     .....`.....i....
1002955c:	00ab6a17 70030001 004f00ab 00abc006     .j.....p..O.....
1002956c:	e3090022 000100ab 00abe50b e6090000     "...............
1002957c:	000100ab 00abe80b e9090000 000100ab     ................
1002958c:	00abeb14 ec090000 000000ab 00abed0b     ................
1002959c:	f00c0000 000900ab 00ac0006 b0062ba3     .............+..
100295ac:	001600d7 00d7cb06 00020030 07ff00d8     ........0.......
100295bc:	00f90006 7006016d 006900fa 00fb0004     ....m..p..i.....
100295cc:	13040006 000400fb 00fb1d06 1e0b0000     ................
100295dc:	000000fb 00fb1f06 29180009 000000fb     ...........)....
100295ec:	00fb2a06 3806000c 000400fb 00fb3e06     .*.....8.....>..
100295fc:	40060000 000100fb 00fb4306 46060001     ...@.....C.....F
1002960c:	006b00fb 00fbb217 d3060010 016a00fb     ..k...........j.
1002961c:	00fd3e11 3f150000 000000fd 00fd4019     .>.....?.....@..
1002962c:	5006000f 003f00fd 00fd9206 cf190035     ...P..?.....5...
1002963c:	000000fd 00fdf006 fc16000b 000000fd     ................
1002964c:	00fdfd19 000b0002 000f00fe 00fe1014     ................
1002965c:	17150006 000000fe 00fe1811 19140000     ................
1002966c:	000000fe 00fe200b 3014000f 000000fe     ..... .....0....
1002967c:	00fe3110 330f0001 000100fe 00fe3515     .1.....3.....5..
1002968c:	36110000 000000fe 00fe3715 38110000     ...6.....7.....8
1002969c:	000000fe 00fe3915 3a110000 000000fe     .....9.....:....
100296ac:	00fe3b15 3c110000 000000fe 00fe3d15     .;.....<.....=..
100296bc:	3e110000 000000fe 00fe3f15 40110000     ...>.....?.....@
100296cc:	000000fe 00fe4115 42110000 000000fe     .....A.....B....
100296dc:	00fe4315 44110000 000000fe 00fe4514     .C.....D.....E..
100296ec:	47150001 000000fe 00fe4811 49140000     ...G.....H.....I
100296fc:	000300fe 00fe4d0f 50140002 000200fe     .....M.....P....
1002970c:	00fe5414 58100003 000000fe 00fe5915     .T.....X.....Y..
1002971c:	5a110000 000000fe 00fe5b15 5c110000     ...Z.....[.....\
1002972c:	000000fe 00fe5d15 5e110000 000000fe     .....].....^....
1002973c:	00fe5f14 62180002 000000fe 00fe6310     ._.....b.....c..
1002974c:	64180000 000200fe 00fe6814 69160000     ...d.....h.....i
1002975c:	000000fe 00fe6a14 70060001 000400fe     .....j.....p....
1002976c:	00fe7606 ff010086 000000fe 00ff0114     .v..............
1002977c:	04160002 000000ff 00ff0514 08150002     ................
1002978c:	000000ff 00ff0911 0a140000 000000ff     ................
1002979c:	00ff0b18 0c140000 000000ff 00ff0d10     ................
100297ac:	0e140000 000100ff 00ff100c 1a140009     ................
100297bc:	000100ff 00ff1c18 1f140002 000100ff     ................
100297cc:	00ff2103 3b150019 000000ff 00ff3c14     .!.....;.....<..
100297dc:	3d110000 000000ff 00ff3e17 3f0f0000     ...=.....>.....?
100297ec:	000000ff 00ff4017 41030000 001900ff     .....@.....A....
100297fc:	00ff5b15 5c180000 000000ff 00ff5d11     .[.....\.....]..
1002980c:	5e180000 000000ff 00ff5f15 60110000     ...^....._.....`
1002981c:	000000ff 00ff6114 62150000 000000ff     .....a.....b....
1002982c:	00ff6311 64140000 000100ff 00ff6606     .c.....d.....f..
1002983c:	70050009 000000ff 00ff7106 9e05002c     ...p.....q..,...
1002984c:	000100ff 00ffa006 c206001e 000500ff     ................
1002985c:	00ffca06 d2060005 000500ff 00ffda06     ................
1002986c:	e0160002 000100ff 00ffe218 e3170000     ................
1002987c:	000000ff 00ffe419 e5160000 000100ff     ................
1002988c:	00ffe819 e9180000 000300ff 00ffed19     ................
1002989c:	f9010001 000200ff 00fffc19 00060001     ................
100298ac:	000b0100 01000d06 28060019 00120100     ...........(....
100298bc:	01003c06 3f060001 000e0100 01005006     .<.....?.....P..
100298cc:	8006000d 007a0100 01010014 070e0002     ......z.........
100298dc:	002c0101 01013719 400d0008 00340101     ..,..7.....@..4.
100298ec:	0101750e 79190003 00100101 01018a0e     .u.....y........
100298fc:	8c190001 00020101 01019019 a019000c     ................
1002990c:	00000101 0101d019 fd0b002c 00000101     ........,.......
1002991c:	01028006 a006001c 00300102 0102e00b     ..........0.....
1002992c:	e10e0000 001a0102 01030006 200e001f     ............... 
1002993c:	00030103 01032d06 410d0013 00000103     .....-.....A....
1002994c:	01034206 4a0d0007 00000103 01035006     .B.....J.....P..
1002995c:	760b0025 00040103 01038006 9f14001d     %..v............
1002996c:	00000103 0103a006 c8060023 00070103     ........#.......
1002997c:	0103d014 d10d0000 00040103 01040003     ................
1002998c:	5006004f 004d0104 0104a00c b0030009     O..P..M.........
1002999c:	00230104 0104d803 00060023 00270105     ..#.....#.....'.
100299ac:	01053006 6f140033 00000105 01057003     .0..3..o.....p..
100299bc:	7c03000a 000e0105 01058c03 94030006     ...|............
100299cc:	00010105 01059703 a303000a 000e0105     ................
100299dc:	0105b303 bb030006 00010105 01060006     ................
100299ec:	40060136 00150107 01076006 80050007     6..@.....`......
100299fc:	00050107 01078705 b2050029 00080107     ........).......
10029a0c:	01080006 08060005 00000108 01080a06     ................
10029a1c:	3706002b 00010108 01083c06 3f060000     +..7.....<.....?
10029a2c:	00160108 01085714 580e0000 00070108     .....W.....X....
10029a3c:	01086006 77190016 00010108 0108790e     .`.....w.....y..
10029a4c:	80060006 001e0108 0108a70e e0060008     ................
10029a5c:	00120108 0108f406 fb0e0001 00040108     ................
10029a6c:	01090006 160e0015 00050109 01091f14     ................
10029a7c:	20060000 00190109 01093f14 80060000     ... .....?......
10029a8c:	00370109 0109bc0e be060001 00010109     ..7.............
10029a9c:	0109c00e d20e000f 002d0109 010a0006     ..........-.....
10029aac:	010b0000 0002010a 010a050b 0c0b0001     ................
10029abc:	0003010a 010a1006 15060003 0002010a     ................
10029acc:	010a1906 380b001c 0002010a 010a3f0b     .......8.....?..
10029adc:	400e0000 0008010a 010a5014 60060008     ...@.....P.....`
10029aec:	001c010a 010a7d0e 7f140001 0000010a     .....}..........
10029afc:	010a8006 9d0e001c 0002010a 010ac006     ................
10029b0c:	c8190007 0000010a 010ac906 e50b001b     ................
10029b1c:	0001010a 010aeb0e f0140004 0006010a     ................
10029b2c:	010b0006 39140035 0006010b 010b4006     ....5..9.....@..
10029b3c:	580e0015 0007010b 010b6006 780e0012     ...X.....`.....x
10029b4c:	0007010b 010b8006 99140011 0003010b     ................
10029b5c:	010ba90e 00060006 0048010c 010c8003     ..........H.....
10029b6c:	c0030032 0032010c 010cfa0e 00060005     2.....2.........
10029b7c:	0023010d 010d240b 300c0003 0009010d     ..#..$.....0....
10029b8c:	010e600e 8006001e 0029010e 010eab0b     .`........).....
10029b9c:	ad100001 0000010e 010eb006 fd0b0001     ................
10029bac:	0002010e 010f0006 1d0e001c 0009010f     ................
10029bbc:	010f2706 30060000 0015010f 010f460b     .'.....0.....F..
10029bcc:	510e000a 0003010f 010f5514 70060004     ...Q.....U.....p
10029bdc:	0011010f 010f820b 86140003 0003010f     ................
10029bec:	010fb006 c50e0014 0006010f 010fe006     ................
10029bfc:	00090016 00000110 0110010b 02090000     ................
10029c0c:	00000110 01100306 380b0034 000e0110     ........4..8....
10029c1c:	01104714 520e0006 00130110 0110660c     .G.....R.....f..
10029c2c:	700b0009 00000110 01107106 730b0001     ...p.....q.....s
10029c3c:	00010110 01107506 7f0b0000 00020110     .....u..........
10029c4c:	01108209 83060000 002c0110 0110b009     ..........,.....
10029c5c:	b30b0002 00030110 0110b709 b90b0001     ................
10029c6c:	00010110 0110bb14 bd010001 00000110     ................
10029c7c:	0110be14 c20b0003 00000110 0110cd01     ................
10029c8c:	d0060000 00180110 0110f00c 000b0009     ................
10029c9c:	00020111 01110306 270b0023 00040111     ........#..'....
10029cac:	01112c09 2d0b0000 00070111 0111360c     .,.....-.....6..
10029cbc:	40140009 00030111 01114406 45090000     ...@.....D.....E
10029ccc:	00010111 01114706 50060000 00220111     .....G.....P..".
10029cdc:	0111730b 74140000 00010111 01117606     .s.....t.....v..
10029cec:	800b0000 00010111 01118209 83060000     ................
10029cfc:	002f0111 0111b309 b60b0002 00080111     ../.............
10029d0c:	0111bf09 c1060001 00030111 0111c514     ................
10029d1c:	c90b0003 00030111 0111cd14 ce090000     ................
10029d2c:	00000111 0111cf0b d00c0000 00090111     ................
10029d3c:	0111da06 db140000 00000111 0111dc06     ................
10029d4c:	dd140000 00020111 0111e10e 00060013     ................
10029d5c:	00110112 01121306 2c090018 00020112     ...........,....
10029d6c:	01122f0b 32090002 00010112 0112340b     ./.....2.....4..
10029d7c:	35090000 00000112 0112360b 38140001     ...5.....6.....8
10029d8c:	00050112 01123e0b 3f060000 00010112     .....>.....?....
10029d9c:	0112410b 80060000 00060112 01128806     .A..............
10029dac:	8a060000 00030112 01128f06 9f06000e     ................
10029dbc:	00090112 0112a914 b0060000 002e0112     ................
10029dcc:	0112df0b e0090000 00020112 0112e30b     ................
10029ddc:	f00c0007 00090112 0113000b 02090001     ................
10029dec:	00010113 01130506 0f060007 00010113     ................
10029dfc:	01131306 2a060015 00060113 01133206     .......*.....2..
10029e0c:	35060001 00040113 01133b0b 3d060001     ...5.....;.....=
10029e1c:	00000113 01133e09 400b0001 00000113     .....>.....@....
10029e2c:	01134109 47090003 00010113 01134b09     .A.....G.....K..
10029e3c:	50060002 00000113 01135709 5d060000     ...P.....W.....]
10029e4c:	00040113 01136209 660b0001 00060113     .....b.....f....
10029e5c:	0113700b 00060004 00340114 01143509     .p........4..5..
10029e6c:	380b0002 00070114 01144009 420b0001     ...8.....@.....B
10029e7c:	00020114 01144509 460b0000 00000114     .....E.....F....
10029e8c:	01144706 4b140003 00040114 0114500c     .G.....K.....P..
10029e9c:	5a140009 00010114 01145d14 5e0b0000     ...Z.....].....^
10029eac:	00000114 01145f06 80060002 002f0114     ....._......../.
10029ebc:	0114b009 b30b0002 00050114 0114b909     ................
10029ecc:	ba0b0000 00000114 0114bb09 bf0b0003     ................
10029edc:	00010114 0114c109 c20b0000 00010114     ................
10029eec:	0114c406 c6140001 00000114 0114c706     ................
10029efc:	d00c0000 00090114 01158006 af09002e     ................
10029f0c:	00020115 0115b20b b8090003 00030115     ................
10029f1c:	0115bc0b be090001 00000115 0115bf0b     ................
10029f2c:	c1140001 00160115 0115d806 dc0b0003     ................
10029f3c:	00010115 01160006 3009002f 00020116     ......../..0....
10029f4c:	0116330b 3b090007 00010116 01163d0b     .3.....;.....=..
10029f5c:	3e090000 00000116 01163f0b 41140001     ...>.....?.....A
10029f6c:	00020116 01164406 500c0000 00090116     .....D.....P....
10029f7c:	01166014 8006000c 002a0116 0116ab0b     .`........*.....
10029f8c:	ac090000 00000116 0116ad0b ae090000     ................
10029f9c:	00010116 0116b00b b6090005 00000116     ................
10029fac:	0116b70b b8060000 00000116 0116b914     ................
10029fbc:	c00c0000 00090116 01170006 1d0b001a     ................
10029fcc:	00020117 01172009 220b0001 00030117     ..... ....."....
10029fdc:	01172609 270b0000 00040117 0117300c     .&.....'.....0..
10029fec:	3a0e0009 00010117 01173c14 3f190002     ...:.....<.....?
10029ffc:	00000117 01174006 00060006 002b0118     .....@........+.
1002a00c:	01182c09 2f0b0002 00080118 01183809     .,...../.....8..
1002a01c:	390b0000 00010118 01183b14 a0030000     ...9.....;......
1002a02c:	003f0118 0118e00c ea0e0009 00080118     ..?.............
1002a03c:	0118ff06 09060007 00000119 01190c06     ................
1002a04c:	15060007 00010119 01191806 30090017     ...............0
1002a05c:	00050119 01193709 3b0b0001 00010119     .....7.....;....
1002a06c:	01193d09 3e0b0000 00000119 01193f06     .=.....>.....?..
1002a07c:	40090000 00000119 01194106 42090000     ...@.....A.....B
1002a08c:	00000119 0119430b 44140000 00020119     .....C.....D....
1002a09c:	0119500c a0060009 00070119 0119aa06     .P..............
1002a0ac:	d1090026 00020119 0119d40b da0b0003     &...............
1002a0bc:	00010119 0119dc09 e00b0003 00000119     ................
1002a0cc:	0119e106 e2140000 00000119 0119e306     ................
1002a0dc:	e4090000 00000119 011a0006 010b0000     ................
1002a0ec:	0009011a 011a0b06 330b0027 0005011a     ........'..3....
1002a0fc:	011a3909 3a060000 0000011a 011a3b0b     .9.....:.....;..
1002a10c:	3f140003 0007011a 011a470b 50060000     ...?.....G.....P
1002a11c:	0000011a 011a510b 57090005 0001011a     .....Q.....W....
1002a12c:	011a590b 5c060002 002d011a 011a8a0b     .Y.....\..-.....
1002a13c:	9709000c 0000011a 011a980b 9a140001     ................
1002a14c:	0002011a 011a9d06 9e140000 0004011a     ................
1002a15c:	011ab006 00140048 0009011b 011c0006     ....H...........
1002a16c:	0a060008 0024011c 011c2f09 300b0000     ......$../.....0
1002a17c:	0006011c 011c380b 3e090005 0000011c     .....8.....>....
1002a18c:	011c3f0b 40060000 0000011c 011c4114     .?.....@.....A..
1002a19c:	500c0004 0009011c 011c5a0e 70140012     ...P.....Z.....p
1002a1ac:	0001011c 011c7206 920b001d 0015011c     .....r..........
1002a1bc:	011ca909 aa0b0000 0006011c 011cb109     ................
1002a1cc:	b20b0000 0001011c 011cb409 b50b0000     ................
1002a1dc:	0001011c 011d0006 08060006 0001011d     ................
1002a1ec:	011d0b06 310b0025 0005011d 011d3a0b     ....%..1.....:..
1002a1fc:	3c0b0000 0001011d 011d3f0b 46060006     ...<.....?.....F
1002a20c:	0000011d 011d470b 500c0000 0009011d     .....G.....P....
1002a21c:	011d6006 67060005 0001011d 011d6a06     .`.....g.....j..
1002a22c:	8a09001f 0004011d 011d900b 93090001     ................
1002a23c:	0001011d 011d950b 96090000 0000011d     ................
1002a24c:	011d970b 98060000 0000011d 011da00c     ................
1002a25c:	e0060009 0012011e 011ef30b f5090001     ................
1002a26c:	0001011e 011ef714 000b0001 0001011f     ................
1002a27c:	011f0206 03090000 0000011f 011f0406     ................
1002a28c:	1206000c 0021011f 011f3409 360b0001     ......!..4.....6
1002a29c:	0004011f 011f3e09 400b0001 0000011f     .....>.....@....
1002a2ac:	011f4109 420b0000 0000011f 011f4314     .A.....B.....C..
1002a2bc:	500c000c 0009011f 011fb006 c00e0000     ...P............
1002a2cc:	0014011f 011fd519 dd160007 0003011f     ................
1002a2dc:	011fe119 ff140010 0000011f 01200006     .............. .
1002a2ec:	000d0399 006e0124 01247014 80060004     ....$.n..p$.....
1002a2fc:	00c30124 012f9006 f1140060 0001012f     $...../.`.../...
1002a30c:	01300006 3001042f 000f0134 0134400b     ..0./..04....@4.
1002a31c:	41060000 00050134 0134470b 0006000e     ...A4....G4.....
1002a32c:	02460144 01680006 40060238 001e016a     D.F...h.8..@j...
1002a33c:	016a600c 6e140009 0001016a 016a7006     .`j....nj....pj.
1002a34c:	c00c004e 0009016a 016ad006 f00b001d     N...j.....j.....
1002a35c:	0004016a 016af514 00060000 002f016b     j.....j.....k./.
1002a36c:	016b300b 37140006 0004016b 016b3c19     .0k....7k....<k.
1002a37c:	40050003 0003016b 016b4414 45190000     ...@k....Dk....E
1002a38c:	0000016b 016b500c 5b0e0009 0006016b     k....Pk....[k...
1002a39c:	016b6306 7d060014 0012016b 016e4003     .ck....}k....@n.
1002a3ac:	800e003f 0016016e 016e9714 00060003     ?...n.....n.....
1002a3bc:	004a016f 016f4f0b 50060000 0000016f     o.J..Oo....Po...
1002a3cc:	016f5109 8f0b0036 0003016f 016f9305     .Qo.6...o.....o.
1002a3dc:	e005000c 0001016f 016fe214 e3050000     ....o.....o.....
1002a3ec:	0000016f 016fe40b f0090000 0001016f     o.....o.....o...
1002a3fc:	01700006 000617f7 04d50188 018d0006     ..p.............
1002a40c:	f0050008 000301af 01aff505 fd050006     ................
1002a41c:	000101af 01b00006 32060122 000001b1     ........"..2....
1002a42c:	01b15006 55060002 000001b1 01b16406     .P.....U.....d..
1002a43c:	70060003 018b01b1 01bc0006 7006006a     ...p........j..p
1002a44c:	000c01bc 01bc8006 90060008 000901bc     ................
1002a45c:	01bc9c19 9d0b0000 000101bc 01bc9f14     ................
1002a46c:	a0010000 000301bc 01cf000b 300b002d     ............-..0
1002a47c:	001601cf 01cf5019 00190073 00f501d0     .....P..s.......
1002a48c:	01d10019 29190026 003b01d1 01d16509     ....&..)..;..e..
1002a49c:	670b0001 000201d1 01d16a19 6d090002     ...g.....j.....m
1002a4ac:	000501d1 01d17301 7b0b0007 000701d1     .....s.....{....
1002a4bc:	01d18319 850b0001 000601d1 01d18c19     ................
1002a4cc:	aa0b001d 000301d1 01d1ae19 0019003c     ............<...
1002a4dc:	004101d2 01d2420b 45190002 000001d2     ..A..B.....E....
1002a4ec:	01d2c00e e00e0013 001301d2 01d30019     ................
1002a4fc:	600e0056 001801d3 01d40008 1a040019     V..`............
1002a50c:	001901d4 01d43408 4e040019 000601d4     .....4.....N....
1002a51c:	01d45604 68080011 001901d4 01d48204     .V.....h........
1002a52c:	9c080019 000001d4 01d49e08 a2080001     ................
1002a53c:	000001d4 01d4a508 a9080001 000301d4     ................
1002a54c:	01d4ae08 b6040007 000301d4 01d4bb04     ................
1002a55c:	bd040000 000601d4 01d4c504 d008000a     ................
1002a56c:	001901d4 01d4ea04 04080019 000101d5     ................
1002a57c:	01d50708 0d080003 000701d5 01d51608     ................
1002a58c:	1e040006 001901d5 01d53808 3b080001     .........8.....;
1002a59c:	000301d5 01d54008 46080004 000001d5     .....@.....F....
1002a5ac:	01d54a08 52040006 001901d5 01d56c08     .J.....R.....l..
1002a5bc:	86040019 001901d5 01d5a008 ba040019     ................
1002a5cc:	001901d5 01d5d408 ee040019 001901d5     ................
1002a5dc:	01d60808 22040019 001901d6 01d63c08     .......".....<..
1002a5ec:	56040019 001901d6 01d67008 8a040019     ...V.....p......
1002a5fc:	001b01d6 01d6a808 c1180018 000001d6     ................
1002a60c:	01d6c204 db180018 000001d6 01d6dc04     ................
1002a61c:	e2080005 001801d6 01d6fb18 fc040000     ................
1002a62c:	001801d6 01d71518 16040000 000501d7     ................
1002a63c:	01d71c08 35180018 000001d7 01d73604     .......5.....6..
1002a64c:	4f180018 000001d7 01d75004 56080005     ...O.....P.....V
1002a65c:	001801d7 01d76f18 70040000 001801d7     .....o.....p....
1002a66c:	01d78918 8a040000 000501d7 01d79008     ................
1002a67c:	a9180018 000001d7 01d7aa04 c3180018     ................
1002a68c:	000001d7 01d7c404 ca080005 000001d7     ................
1002a69c:	01d7cb04 ce0c0000 003101d7 01d80019     ..........1.....
1002a6ac:	000b01ff 003601da 01da3719 3b0b0003     ......6..7.....;
1002a6bc:	003101da 01da6d19 750b0007 000001da     ..1..m.....u....
1002a6cc:	01da7619 840b000d 000001da 01da8519     .v..............
1002a6dc:	87140001 000401da 01da9b0b a10b0004     ................
1002a6ec:	000e01da 01df0004 0a060009 000001df     ................
1002a6fc:	01df0b04 25040013 000501df 01e0000b     .......%........
1002a70c:	080b0006 001001e0 01e01b0b 230b0006     ...............#
1002a71c:	000101e0 01e0260b 30050004 003d01e0     .....&.....0..=.
1002a72c:	01e08f0b 00060000 002c01e1 01e1300b     ..........,..0..
1002a73c:	37050006 000601e1 01e1400c 4e060009     ...7.....@.....N
1002a74c:	000001e1 01e14f19 90060000 001d01e2     .....O..........
1002a75c:	01e2ae0b c0060000 002b01e2 01e2ec0b     ..........+.....
1002a76c:	f00c0003 000901e2 01e2ff16 d0060000     ................
1002a77c:	001a01e4 01e4eb05 ec0b0000 000301e4     ................
1002a78c:	01e4f00c e0060009 000601e7 01e7e806     ................
1002a79c:	ed060003 000101e7 01e7f006 0006000e     ................
1002a7ac:	00c401e8 01e8c70e d00b0008 000601e8     ................
1002a7bc:	01e90003 440b0043 000601e9 01e94b05     ....C..D.....K..
1002a7cc:	500c0000 000901e9 01e95e14 710e0001     ...P.....^.....q
1002a7dc:	003a01ec 01ecac19 ad0e0000 000201ec     ..:.............
1002a7ec:	01ecb016 b10e0000 000301ec 01ed010e     ................
1002a7fc:	2e19002c 000001ed 01ed2f0e 0006000e     ,......../......
1002a80c:	000301ee 01ee0506 2106001a 000101ee     ...........!....
1002a81c:	01ee2406 27060000 000001ee 01ee2906     .$.....'.....)..
1002a82c:	34060009 000301ee 01ee3906 3b060000     ...4.....9.....;
1002a83c:	000001ee 01ee4206 47060000 000001ee     .....B.....G....
1002a84c:	01ee4906 4b060000 000001ee 01ee4d06     .I.....K.....M..
1002a85c:	51060002 000101ee 01ee5406 57060000     ...Q.....T.....W
1002a86c:	000001ee 01ee5906 5b060000 000001ee     .....Y.....[....
1002a87c:	01ee5d06 5f060000 000001ee 01ee6106     .]....._.....a..
1002a88c:	64060001 000001ee 01ee6706 6c060003     ...d.....g.....l
1002a89c:	000601ee 01ee7406 79060003 000301ee     .....t.....y....
1002a8ac:	01ee7e06 80060000 000901ee 01ee8b06     .~..............
1002a8bc:	a1060010 000201ee 01eea506 ab060004     ................
1002a8cc:	001001ee 01eef018 00190001 002b01f0     ..............+.
1002a8dc:	01f03019 a0190063 000e01f0 01f0b119     .0..c...........
1002a8ec:	c119000e 000e01f0 01f0d119 000e0024     ............$...
1002a8fc:	000c01f1 01f10d19 e61900a0 001c01f1     ................
1002a90c:	01f21019 4019002b 000801f2 01f25019     ....+..@.....P..
1002a91c:	60190001 000501f2 01f30019 fb1700fa     ...`............
1002a92c:	000401f3 01f40019 dc1902d7 001001f6     ................
1002a93c:	01f6f019 0019000c 007601f7 01f77b19     ..........v..{..
1002a94c:	e019005e 000b01f7 01f7f019 00190000     ^...............
1002a95c:	000b01f8 01f81019 50190037 000901f8     ........7..P....
1002a96c:	01f86019 90190027 001d01f8 01f8b019     .`..'...........
1002a97c:	00190001 015301f9 01fa6019 7019000d     ......S..`.....p
1002a98c:	000c01fa 01fa8019 90190008 002d01fa     ..............-.
1002a99c:	01fabf19 ce190006 000d01fa 01fae019     ................
1002a9ac:	f0190008 000801fa 01fb0019 94190092     ................
1002a9bc:	003601fb 01fbf00c 00060009 a6df0200     ..6.............
1002a9cc:	02a70006 40061039 00dd02b7 02b82006     ....9..@..... ..
1002a9dc:	b0061681 1d3002ce 02f80006 0006021d     ......0.........
1002a9ec:	134a0300 03135006 0101105f 00000e00     ..J..P.._.......
1002a9fc:	0e002001 000b005f 00ef0e01 6c6f562f     . .._......./Vol
1002aa0c:	73656d75 7461642f 656a2f61 6e696b6e     umes/data/jenkin
1002aa1c:	6f772f73 70736b72 2f656361 2d554e47     s/workspace/GNU-
1002aa2c:	6c6f6f74 69616863 72612f6e 32312d6d     toolchain/arm-12
1002aa3c:	6372732f 77656e2f 2d62696c 77677963     /src/newlib-cygw
1002aa4c:	6e2f6e69 696c7765 696c2f62 732f6362     in/newlib/libc/s
1002aa5c:	696c6474 64672f62 2d616f74 68746567     tdlib/gdtoa-geth
1002aa6c:	632e7865 00000000                       ex.c....

1002aa74 <__hexdig>:
	...
1002aaa4:	13121110 17161514 00001918 00000000     ................
1002aab4:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...
1002aad4:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...

1002ab74 <_init>:
1002ab74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1002ab76:	bf00      	nop
1002ab78:	bcf8      	pop	{r3, r4, r5, r6, r7}
1002ab7a:	bc08      	pop	{r3}
1002ab7c:	469e      	mov	lr, r3
1002ab7e:	4770      	bx	lr

1002ab80 <_fini>:
1002ab80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1002ab82:	bf00      	nop
1002ab84:	bcf8      	pop	{r3, r4, r5, r6, r7}
1002ab86:	bc08      	pop	{r3}
1002ab88:	469e      	mov	lr, r3
1002ab8a:	4770      	bx	lr
1002ab8c:	0000      	movs	r0, r0
	...

1002ab90 <__MXC_FLC_RevA_Write32Using128_veneer>:
1002ab90:	f85f f000 	ldr.w	pc, [pc]	@ 1002ab94 <__MXC_FLC_RevA_Write32Using128_veneer+0x4>
1002ab94:	20000939 	.word	0x20000939

1002ab98 <__MXC_FLC_Com_Write_veneer>:
1002ab98:	f85f f000 	ldr.w	pc, [pc]	@ 1002ab9c <__MXC_FLC_Com_Write_veneer+0x4>
1002ab9c:	20000ac9 	.word	0x20000ac9

1002aba0 <__MXC_FLC_Com_Read_veneer>:
1002aba0:	f85f f000 	ldr.w	pc, [pc]	@ 1002aba4 <__MXC_FLC_Com_Read_veneer+0x4>
1002aba4:	20000ba1 	.word	0x20000ba1

1002aba8 <__MXC_FLC_PageErase_veneer>:
1002aba8:	f85f f000 	ldr.w	pc, [pc]	@ 1002abac <__MXC_FLC_PageErase_veneer+0x4>
1002abac:	200006c9 	.word	0x200006c9

1002abb0 <__EH_FRAME_BEGIN__>:
1002abb0:	00000010 00000000 00527a01 010e7c02     .........zR..|..
1002abc0:	000d0c1b 00000038 00000018 fffed934     ....8.......4...
1002abd0:	0000009e 100e5100 03850484 01870286     .....Q..........
1002abe0:	c5c6c75b 4c000ec4 0a0b420a 100e0b42     [......L.B..B...
1002abf0:	03850484 01870286 c5c6c751 00000ec4     ........Q.......
1002ac00:	00000010 00000000 00527a01 010e7c02     .........zR..|..
1002ac10:	000d0c1b 00000014 00000018 fffed984     ................
1002ac20:	00000134 0a710200 00000b43 00000010     4.....q.C.......
1002ac30:	00000000 00527a01 010e7c02 000d0c1b     .....zR..|......
1002ac40:	0000001c 00000018 fffedab8 000000d8     ................
1002ac50:	080e4100 02840185 4a0a4902 0b41c4c5     .A.......I.J..A.

1002ac60 <__FRAME_END__>:
1002ac60:	00000000                                ....

Disassembly of section .data:

20000000 <ConsoleUart>:
20000000:	40042000                                . .@

20000004 <overflows>:
20000004:	ffffffff                                ....

20000008 <flc_int>:
20000008:	40029000                                ...@

2000000c <interruptCheck>:
2000000c:	00001008                                ....

20000010 <__malloc_sbrk_base>:
20000010:	ffffffff                                ....

20000014 <__malloc_trim_threshold>:
20000014:	00020000                                ....

20000018 <__malloc_av_>:
	...
20000020:	20000018 20000018 20000020 20000020     ... ...  ..  .. 
20000030:	20000028 20000028 20000030 20000030     (.. (.. 0.. 0.. 
20000040:	20000038 20000038 20000040 20000040     8.. 8.. @.. @.. 
20000050:	20000048 20000048 20000050 20000050     H.. H.. P.. P.. 
20000060:	20000058 20000058 20000060 20000060     X.. X.. `.. `.. 
20000070:	20000068 20000068 20000070 20000070     h.. h.. p.. p.. 
20000080:	20000078 20000078 20000080 20000080     x.. x.. ... ... 
20000090:	20000088 20000088 20000090 20000090     ... ... ... ... 
200000a0:	20000098 20000098 200000a0 200000a0     ... ... ... ... 
200000b0:	200000a8 200000a8 200000b0 200000b0     ... ... ... ... 
200000c0:	200000b8 200000b8 200000c0 200000c0     ... ... ... ... 
200000d0:	200000c8 200000c8 200000d0 200000d0     ... ... ... ... 
200000e0:	200000d8 200000d8 200000e0 200000e0     ... ... ... ... 
200000f0:	200000e8 200000e8 200000f0 200000f0     ... ... ... ... 
20000100:	200000f8 200000f8 20000100 20000100     ... ... ... ... 
20000110:	20000108 20000108 20000110 20000110     ... ... ... ... 
20000120:	20000118 20000118 20000120 20000120     ... ...  ..  .. 
20000130:	20000128 20000128 20000130 20000130     (.. (.. 0.. 0.. 
20000140:	20000138 20000138 20000140 20000140     8.. 8.. @.. @.. 
20000150:	20000148 20000148 20000150 20000150     H.. H.. P.. P.. 
20000160:	20000158 20000158 20000160 20000160     X.. X.. `.. `.. 
20000170:	20000168 20000168 20000170 20000170     h.. h.. p.. p.. 
20000180:	20000178 20000178 20000180 20000180     x.. x.. ... ... 
20000190:	20000188 20000188 20000190 20000190     ... ... ... ... 
200001a0:	20000198 20000198 200001a0 200001a0     ... ... ... ... 
200001b0:	200001a8 200001a8 200001b0 200001b0     ... ... ... ... 
200001c0:	200001b8 200001b8 200001c0 200001c0     ... ... ... ... 
200001d0:	200001c8 200001c8 200001d0 200001d0     ... ... ... ... 
200001e0:	200001d8 200001d8 200001e0 200001e0     ... ... ... ... 
200001f0:	200001e8 200001e8 200001f0 200001f0     ... ... ... ... 
20000200:	200001f8 200001f8 20000200 20000200     ... ... ... ... 
20000210:	20000208 20000208 20000210 20000210     ... ... ... ... 
20000220:	20000218 20000218 20000220 20000220     ... ...  ..  .. 
20000230:	20000228 20000228 20000230 20000230     (.. (.. 0.. 0.. 
20000240:	20000238 20000238 20000240 20000240     8.. 8.. @.. @.. 
20000250:	20000248 20000248 20000250 20000250     H.. H.. P.. P.. 
20000260:	20000258 20000258 20000260 20000260     X.. X.. `.. `.. 
20000270:	20000268 20000268 20000270 20000270     h.. h.. p.. p.. 
20000280:	20000278 20000278 20000280 20000280     x.. x.. ... ... 
20000290:	20000288 20000288 20000290 20000290     ... ... ... ... 
200002a0:	20000298 20000298 200002a0 200002a0     ... ... ... ... 
200002b0:	200002a8 200002a8 200002b0 200002b0     ... ... ... ... 
200002c0:	200002b8 200002b8 200002c0 200002c0     ... ... ... ... 
200002d0:	200002c8 200002c8 200002d0 200002d0     ... ... ... ... 
200002e0:	200002d8 200002d8 200002e0 200002e0     ... ... ... ... 
200002f0:	200002e8 200002e8 200002f0 200002f0     ... ... ... ... 
20000300:	200002f8 200002f8 20000300 20000300     ... ... ... ... 
20000310:	20000308 20000308 20000310 20000310     ... ... ... ... 
20000320:	20000318 20000318 20000320 20000320     ... ...  ..  .. 
20000330:	20000328 20000328 20000330 20000330     (.. (.. 0.. 0.. 
20000340:	20000338 20000338 20000340 20000340     8.. 8.. @.. @.. 
20000350:	20000348 20000348 20000350 20000350     H.. H.. P.. P.. 
20000360:	20000358 20000358 20000360 20000360     X.. X.. `.. `.. 
20000370:	20000368 20000368 20000370 20000370     h.. h.. p.. p.. 
20000380:	20000378 20000378 20000380 20000380     x.. x.. ... ... 
20000390:	20000388 20000388 20000390 20000390     ... ... ... ... 
200003a0:	20000398 20000398 200003a0 200003a0     ... ... ... ... 
200003b0:	200003a8 200003a8 200003b0 200003b0     ... ... ... ... 
200003c0:	200003b8 200003b8 200003c0 200003c0     ... ... ... ... 
200003d0:	200003c8 200003c8 200003d0 200003d0     ... ... ... ... 
200003e0:	200003d8 200003d8 200003e0 200003e0     ... ... ... ... 
200003f0:	200003e8 200003e8 200003f0 200003f0     ... ... ... ... 
20000400:	200003f8 200003f8 20000400 20000400     ... ... ... ... 
20000410:	20000408 20000408 20000410 20000410     ... ... ... ... 

20000420 <__sglue>:
20000420:	00000000 00000003 20001488              ........... 

2000042c <__global_locale>:
2000042c:	00000043 00000000 00000000 00000000     C...............
	...
2000044c:	00000043 00000000 00000000 00000000     C...............
	...
2000046c:	00000043 00000000 00000000 00000000     C...............
	...
2000048c:	00000043 00000000 00000000 00000000     C...............
	...
200004ac:	00000043 00000000 00000000 00000000     C...............
	...
200004cc:	00000043 00000000 00000000 00000000     C...............
	...
200004ec:	00000043 00000000 00000000 00000000     C...............
	...
2000050c:	1001ef45 10019afd 00000000 10023b6c     E...........l;..
2000051c:	10021748 1002155c 1002155c 1002155c     H...\...\...\...
2000052c:	1002155c 1002155c 1002155c 1002155c     \...\...\...\...
2000053c:	1002155c 1002155c ffffffff ffffffff     \...\...........
2000054c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000574:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000598 <_impure_ptr>:
20000598:	200005a0 00000000                       ... ....

200005a0 <_impure_data>:
200005a0:	00000000 20001488 200014f0 20001558     ....... ... X.. 
	...
20000638:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20000648:	0005deec 0000000b 00000000 00000000     ................
	...

200006c0 <__atexit_recursive_mutex>:
200006c0:	200015cc                                ... 

200006c4 <MXC_FLC_Busy>:
    return MXC_FLC_RevA_Busy();
200006c4:	f000 b864 	b.w	20000790 <MXC_FLC_RevA_Busy>

200006c8 <MXC_FLC_PageErase>:
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
200006c8:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
200006cc:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
200006d0:	d320      	bcc.n	20000714 <MXC_FLC_PageErase+0x4c>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
200006d2:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
200006d6:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
200006da:	d21e      	bcs.n	2000071a <MXC_FLC_PageErase+0x52>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
200006dc:	f3c0 000d 	ubfx	r0, r0, #0, #14
200006e0:	f500 2100 	add.w	r1, r0, #524288	@ 0x80000
{
200006e4:	b500      	push	{lr}
    err = MXC_FLC_RevA_PageErase((mxc_flc_reva_regs_t *)flc, addr);
200006e6:	480e      	ldr	r0, [pc, #56]	@ (20000720 <MXC_FLC_PageErase+0x58>)
{
200006e8:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_PageErase((mxc_flc_reva_regs_t *)flc, addr);
200006ea:	f000 f897 	bl	2000081c <MXC_FLC_RevA_PageErase>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
200006ee:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
200006f2:	6813      	ldr	r3, [r2, #0]
200006f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
200006f8:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
200006fa:	6813      	ldr	r3, [r2, #0]
200006fc:	065b      	lsls	r3, r3, #25
200006fe:	d4fc      	bmi.n	200006fa <MXC_FLC_PageErase+0x32>
    line = *line_addr;
20000700:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
20000704:	4b07      	ldr	r3, [pc, #28]	@ (20000724 <MXC_FLC_PageErase+0x5c>)
    line = *line_addr;
20000706:	6812      	ldr	r2, [r2, #0]
20000708:	9201      	str	r2, [sp, #4]
    line = *line_addr;
2000070a:	681b      	ldr	r3, [r3, #0]
2000070c:	9301      	str	r3, [sp, #4]
}
2000070e:	b003      	add	sp, #12
20000710:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
20000714:	f3c0 0112 	ubfx	r1, r0, #0, #19
20000718:	e7e4      	b.n	200006e4 <MXC_FLC_PageErase+0x1c>
        return E_BAD_PARAM;
2000071a:	f06f 0002 	mvn.w	r0, #2
}
2000071e:	4770      	bx	lr
20000720:	40029000 	.word	0x40029000
20000724:	10002000 	.word	0x10002000

20000728 <MXC_FLC_Write128>:
    if (address & 0xF) {
20000728:	0702      	lsls	r2, r0, #28
2000072a:	d129      	bne.n	20000780 <MXC_FLC_Write128+0x58>
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
2000072c:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
20000730:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
20000734:	460a      	mov	r2, r1
20000736:	d320      	bcc.n	2000077a <MXC_FLC_Write128+0x52>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
20000738:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
2000073c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
20000740:	d21e      	bcs.n	20000780 <MXC_FLC_Write128+0x58>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
20000742:	f3c0 000d 	ubfx	r0, r0, #0, #14
20000746:	f500 2100 	add.w	r1, r0, #524288	@ 0x80000
{
2000074a:	b500      	push	{lr}
    err = MXC_FLC_RevA_Write128((mxc_flc_reva_regs_t *)flc, addr, data);
2000074c:	480e      	ldr	r0, [pc, #56]	@ (20000788 <MXC_FLC_Write128+0x60>)
{
2000074e:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_Write128((mxc_flc_reva_regs_t *)flc, addr, data);
20000750:	f000 f958 	bl	20000a04 <MXC_FLC_RevA_Write128>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
20000754:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
20000758:	6813      	ldr	r3, [r2, #0]
2000075a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
2000075e:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
20000760:	6813      	ldr	r3, [r2, #0]
20000762:	065b      	lsls	r3, r3, #25
20000764:	d4fc      	bmi.n	20000760 <MXC_FLC_Write128+0x38>
    line = *line_addr;
20000766:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
2000076a:	4b08      	ldr	r3, [pc, #32]	@ (2000078c <MXC_FLC_Write128+0x64>)
    line = *line_addr;
2000076c:	6812      	ldr	r2, [r2, #0]
2000076e:	9201      	str	r2, [sp, #4]
    line = *line_addr;
20000770:	681b      	ldr	r3, [r3, #0]
20000772:	9301      	str	r3, [sp, #4]
}
20000774:	b003      	add	sp, #12
20000776:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
2000077a:	f3c0 0112 	ubfx	r1, r0, #0, #19
2000077e:	e7e4      	b.n	2000074a <MXC_FLC_Write128+0x22>
        return E_BAD_PARAM;
20000780:	f06f 0002 	mvn.w	r0, #2
}
20000784:	4770      	bx	lr
20000786:	bf00      	nop
20000788:	40029000 	.word	0x40029000
2000078c:	10002000 	.word	0x10002000

20000790 <MXC_FLC_RevA_Busy>:
    return (flc->ctrl &
20000790:	4b02      	ldr	r3, [pc, #8]	@ (2000079c <MXC_FLC_RevA_Busy+0xc>)
20000792:	6898      	ldr	r0, [r3, #8]
}
20000794:	f000 0007 	and.w	r0, r0, #7
20000798:	4770      	bx	lr
2000079a:	bf00      	nop
2000079c:	40029000 	.word	0x40029000

200007a0 <MXC_FLC_RevA_MassErase>:
    return (flc->ctrl &
200007a0:	6882      	ldr	r2, [r0, #8]
{
200007a2:	4603      	mov	r3, r0
    if (MXC_busy_flc(flc)) {
200007a4:	0750      	lsls	r0, r2, #29
200007a6:	d12a      	bne.n	200007fe <MXC_FLC_RevA_MassErase+0x5e>
    flc->clkdiv = SystemCoreClock / 1000000;
200007a8:	4a1a      	ldr	r2, [pc, #104]	@ (20000814 <MXC_FLC_RevA_MassErase+0x74>)
200007aa:	491b      	ldr	r1, [pc, #108]	@ (20000818 <MXC_FLC_RevA_MassErase+0x78>)
200007ac:	6812      	ldr	r2, [r2, #0]
200007ae:	fba1 1202 	umull	r1, r2, r1, r2
200007b2:	0c92      	lsrs	r2, r2, #18
200007b4:	605a      	str	r2, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200007b6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
200007b8:	0791      	lsls	r1, r2, #30
200007ba:	d41b      	bmi.n	200007f4 <MXC_FLC_RevA_MassErase+0x54>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
200007bc:	689a      	ldr	r2, [r3, #8]
200007be:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200007c2:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
200007c6:	609a      	str	r2, [r3, #8]
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_ERASE_CODE) |
200007c8:	689a      	ldr	r2, [r3, #8]
200007ca:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
200007ce:	f442 422a 	orr.w	r2, r2, #43520	@ 0xaa00
200007d2:	609a      	str	r2, [r3, #8]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_ME;
200007d4:	689a      	ldr	r2, [r3, #8]
200007d6:	f042 0202 	orr.w	r2, r2, #2
200007da:	609a      	str	r2, [r3, #8]
    return (flc->ctrl &
200007dc:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
200007de:	0752      	lsls	r2, r2, #29
200007e0:	d1fc      	bne.n	200007dc <MXC_FLC_RevA_MassErase+0x3c>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
200007e2:	689a      	ldr	r2, [r3, #8]
200007e4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200007e8:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200007ea:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200007ec:	f010 0002 	ands.w	r0, r0, #2
200007f0:	d108      	bne.n	20000804 <MXC_FLC_RevA_MassErase+0x64>
}
200007f2:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
200007f4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
200007f6:	f022 0202 	bic.w	r2, r2, #2
200007fa:	625a      	str	r2, [r3, #36]	@ 0x24
200007fc:	e7de      	b.n	200007bc <MXC_FLC_RevA_MassErase+0x1c>
        return E_BUSY;
200007fe:	f06f 0005 	mvn.w	r0, #5
20000802:	e7f6      	b.n	200007f2 <MXC_FLC_RevA_MassErase+0x52>
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000804:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000806:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
2000080a:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000080e:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000810:	4770      	bx	lr
20000812:	bf00      	nop
20000814:	20001768 	.word	0x20001768
20000818:	431bde83 	.word	0x431bde83

2000081c <MXC_FLC_RevA_PageErase>:
    return (flc->ctrl &
2000081c:	6882      	ldr	r2, [r0, #8]
    if (MXC_busy_flc(flc)) {
2000081e:	0752      	lsls	r2, r2, #29
{
20000820:	4603      	mov	r3, r0
    if (MXC_busy_flc(flc)) {
20000822:	d12b      	bne.n	2000087c <MXC_FLC_RevA_PageErase+0x60>
    flc->clkdiv = SystemCoreClock / 1000000;
20000824:	4a1a      	ldr	r2, [pc, #104]	@ (20000890 <MXC_FLC_RevA_PageErase+0x74>)
20000826:	481b      	ldr	r0, [pc, #108]	@ (20000894 <MXC_FLC_RevA_PageErase+0x78>)
20000828:	6812      	ldr	r2, [r2, #0]
2000082a:	fba0 0202 	umull	r0, r2, r0, r2
2000082e:	0c92      	lsrs	r2, r2, #18
20000830:	605a      	str	r2, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000832:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000834:	0790      	lsls	r0, r2, #30
20000836:	d41c      	bmi.n	20000872 <MXC_FLC_RevA_PageErase+0x56>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000838:	689a      	ldr	r2, [r3, #8]
2000083a:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
2000083e:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
20000842:	609a      	str	r2, [r3, #8]
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_ERASE_CODE) |
20000844:	689a      	ldr	r2, [r3, #8]
20000846:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
2000084a:	f442 42aa 	orr.w	r2, r2, #21760	@ 0x5500
2000084e:	609a      	str	r2, [r3, #8]
    flc->addr = addr;
20000850:	6019      	str	r1, [r3, #0]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_PGE;
20000852:	689a      	ldr	r2, [r3, #8]
20000854:	f042 0204 	orr.w	r2, r2, #4
20000858:	609a      	str	r2, [r3, #8]
    return (flc->ctrl &
2000085a:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
2000085c:	0752      	lsls	r2, r2, #29
2000085e:	d1fc      	bne.n	2000085a <MXC_FLC_RevA_PageErase+0x3e>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
20000860:	689a      	ldr	r2, [r3, #8]
20000862:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
20000866:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000868:	6a58      	ldr	r0, [r3, #36]	@ 0x24
2000086a:	f010 0002 	ands.w	r0, r0, #2
2000086e:	d108      	bne.n	20000882 <MXC_FLC_RevA_PageErase+0x66>
}
20000870:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000872:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000874:	f022 0202 	bic.w	r2, r2, #2
20000878:	625a      	str	r2, [r3, #36]	@ 0x24
2000087a:	e7dd      	b.n	20000838 <MXC_FLC_RevA_PageErase+0x1c>
        return E_BUSY;
2000087c:	f06f 0005 	mvn.w	r0, #5
20000880:	e7f6      	b.n	20000870 <MXC_FLC_RevA_PageErase+0x54>
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000882:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000884:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
20000888:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000088c:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
2000088e:	4770      	bx	lr
20000890:	20001768 	.word	0x20001768
20000894:	431bde83 	.word	0x431bde83

20000898 <MXC_FLC_RevA_Write32>:
    if (logicAddr & 0x3) {
20000898:	078b      	lsls	r3, r1, #30
2000089a:	d139      	bne.n	20000910 <MXC_FLC_RevA_Write32+0x78>
    if ((*(uint32_t *)logicAddr & data) != data) {
2000089c:	4603      	mov	r3, r0
2000089e:	6808      	ldr	r0, [r1, #0]
200008a0:	ea32 0000 	bics.w	r0, r2, r0
200008a4:	d141      	bne.n	2000092a <MXC_FLC_RevA_Write32+0x92>
    return (flc->ctrl &
200008a6:	6898      	ldr	r0, [r3, #8]
    if (MXC_busy_flc(flc)) {
200008a8:	0740      	lsls	r0, r0, #29
    logicAddr = logicAddr & 0xfffffffc;
200008aa:	f021 0103 	bic.w	r1, r1, #3
    if (MXC_busy_flc(flc)) {
200008ae:	d132      	bne.n	20000916 <MXC_FLC_RevA_Write32+0x7e>
    flc->clkdiv = SystemCoreClock / 1000000;
200008b0:	481f      	ldr	r0, [pc, #124]	@ (20000930 <MXC_FLC_RevA_Write32+0x98>)
{
200008b2:	b410      	push	{r4}
    flc->clkdiv = SystemCoreClock / 1000000;
200008b4:	6800      	ldr	r0, [r0, #0]
200008b6:	4c1f      	ldr	r4, [pc, #124]	@ (20000934 <MXC_FLC_RevA_Write32+0x9c>)
200008b8:	fba4 4000 	umull	r4, r0, r4, r0
200008bc:	0c80      	lsrs	r0, r0, #18
200008be:	6058      	str	r0, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200008c0:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200008c2:	0780      	lsls	r0, r0, #30
200008c4:	d41f      	bmi.n	20000906 <MXC_FLC_RevA_Write32+0x6e>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
200008c6:	6898      	ldr	r0, [r3, #8]
200008c8:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
200008cc:	f040 5000 	orr.w	r0, r0, #536870912	@ 0x20000000
200008d0:	6098      	str	r0, [r3, #8]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WDTH;
200008d2:	6898      	ldr	r0, [r3, #8]
200008d4:	f040 0010 	orr.w	r0, r0, #16
200008d8:	6098      	str	r0, [r3, #8]
    flc->addr = logicAddr;
200008da:	6019      	str	r1, [r3, #0]
    flc->data[0] = data;
200008dc:	631a      	str	r2, [r3, #48]	@ 0x30
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WR;
200008de:	689a      	ldr	r2, [r3, #8]
200008e0:	f042 0201 	orr.w	r2, r2, #1
200008e4:	609a      	str	r2, [r3, #8]
    while ((flc->ctrl & MXC_F_FLC_REVA_CTRL_PEND) != 0) {}
200008e6:	689a      	ldr	r2, [r3, #8]
200008e8:	01d1      	lsls	r1, r2, #7
200008ea:	d4fc      	bmi.n	200008e6 <MXC_FLC_RevA_Write32+0x4e>
    return (flc->ctrl &
200008ec:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
200008ee:	0752      	lsls	r2, r2, #29
200008f0:	d1fc      	bne.n	200008ec <MXC_FLC_RevA_Write32+0x54>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
200008f2:	689a      	ldr	r2, [r3, #8]
200008f4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200008f8:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200008fa:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200008fc:	f010 0002 	ands.w	r0, r0, #2
20000900:	d10c      	bne.n	2000091c <MXC_FLC_RevA_Write32+0x84>
}
20000902:	bc10      	pop	{r4}
20000904:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000906:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000908:	f020 0002 	bic.w	r0, r0, #2
2000090c:	6258      	str	r0, [r3, #36]	@ 0x24
2000090e:	e7da      	b.n	200008c6 <MXC_FLC_RevA_Write32+0x2e>
        return E_BAD_PARAM;
20000910:	f06f 0002 	mvn.w	r0, #2
20000914:	4770      	bx	lr
        return E_BUSY;
20000916:	f06f 0005 	mvn.w	r0, #5
2000091a:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000091c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
2000091e:	f022 0202 	bic.w	r2, r2, #2
20000922:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000924:	f06f 0006 	mvn.w	r0, #6
20000928:	e7eb      	b.n	20000902 <MXC_FLC_RevA_Write32+0x6a>
2000092a:	f06f 0006 	mvn.w	r0, #6
}
2000092e:	4770      	bx	lr
20000930:	20001768 	.word	0x20001768
20000934:	431bde83 	.word	0x431bde83

20000938 <MXC_FLC_RevA_Write32Using128>:
{
20000938:	b570      	push	{r4, r5, r6, lr}
2000093a:	4684      	mov	ip, r0
2000093c:	b084      	sub	sp, #16
    uint32_t current_data[4] = { 0, 0, 0, 0 };
2000093e:	2000      	movs	r0, #0
    if (logicAddr & 0x3) {
20000940:	078e      	lsls	r6, r1, #30
    uint32_t current_data[4] = { 0, 0, 0, 0 };
20000942:	e9cd 0000 	strd	r0, r0, [sp]
20000946:	e9cd 0002 	strd	r0, r0, [sp, #8]
    if (logicAddr & 0x3) {
2000094a:	d150      	bne.n	200009ee <MXC_FLC_RevA_Write32Using128+0xb6>
    if ((*(uint32_t *)logicAddr & data) != data) {
2000094c:	6808      	ldr	r0, [r1, #0]
2000094e:	ea32 0000 	bics.w	r0, r2, r0
20000952:	d149      	bne.n	200009e8 <MXC_FLC_RevA_Write32Using128+0xb0>
    return (flc->ctrl &
20000954:	f8dc 4008 	ldr.w	r4, [ip, #8]
    if (MXC_busy_flc(flc)) {
20000958:	0765      	lsls	r5, r4, #29
    logicAddr = logicAddr & 0xfffffff0;
2000095a:	f021 000f 	bic.w	r0, r1, #15
    if (MXC_busy_flc(flc)) {
2000095e:	d149      	bne.n	200009f4 <MXC_FLC_RevA_Write32Using128+0xbc>
    flc->clkdiv = SystemCoreClock / 1000000;
20000960:	4c26      	ldr	r4, [pc, #152]	@ (200009fc <MXC_FLC_RevA_Write32Using128+0xc4>)
20000962:	4d27      	ldr	r5, [pc, #156]	@ (20000a00 <MXC_FLC_RevA_Write32Using128+0xc8>)
20000964:	6824      	ldr	r4, [r4, #0]
20000966:	fba5 5404 	umull	r5, r4, r5, r4
2000096a:	0ca4      	lsrs	r4, r4, #18
2000096c:	f8cc 4004 	str.w	r4, [ip, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000970:	f8dc 4024 	ldr.w	r4, [ip, #36]	@ 0x24
20000974:	07a4      	lsls	r4, r4, #30
20000976:	d425      	bmi.n	200009c4 <MXC_FLC_RevA_Write32Using128+0x8c>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000978:	f8dc 4008 	ldr.w	r4, [ip, #8]
2000097c:	f024 4470 	bic.w	r4, r4, #4026531840	@ 0xf0000000
20000980:	f044 5400 	orr.w	r4, r4, #536870912	@ 0x20000000
20000984:	f8cc 4008 	str.w	r4, [ip, #8]
    for (ptr = (uint32_t *)logicAddr; ptr < (uint32_t *)(logicAddr + 16); ptr++, i++) {
20000988:	f100 0410 	add.w	r4, r0, #16
2000098c:	42a0      	cmp	r0, r4
2000098e:	4686      	mov	lr, r0
20000990:	d20d      	bcs.n	200009ae <MXC_FLC_RevA_Write32Using128+0x76>
20000992:	1d05      	adds	r5, r0, #4
20000994:	42ac      	cmp	r4, r5
20000996:	bf34      	ite	cc
20000998:	2401      	movcc	r4, #1
2000099a:	2404      	movcs	r4, #4
2000099c:	eb00 0484 	add.w	r4, r0, r4, lsl #2
200009a0:	466d      	mov	r5, sp
        current_data[i] = *ptr;
200009a2:	f85e 6b04 	ldr.w	r6, [lr], #4
200009a6:	f845 6b04 	str.w	r6, [r5], #4
    for (ptr = (uint32_t *)logicAddr; ptr < (uint32_t *)(logicAddr + 16); ptr++, i++) {
200009aa:	45a6      	cmp	lr, r4
200009ac:	d1f9      	bne.n	200009a2 <MXC_FLC_RevA_Write32Using128+0x6a>
    if (byte < 4) {
200009ae:	f011 0f0c 	tst.w	r1, #12
    flc->addr = physicalAddr;
200009b2:	f8cc 3000 	str.w	r3, [ip]
    if (byte < 4) {
200009b6:	d10c      	bne.n	200009d2 <MXC_FLC_RevA_Write32Using128+0x9a>
        current_data[0] = data;
200009b8:	9200      	str	r2, [sp, #0]
    return MXC_FLC_Write128(logicAddr, current_data);
200009ba:	4669      	mov	r1, sp
200009bc:	f7ff feb4 	bl	20000728 <MXC_FLC_Write128>
}
200009c0:	b004      	add	sp, #16
200009c2:	bd70      	pop	{r4, r5, r6, pc}
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
200009c4:	f8dc 4024 	ldr.w	r4, [ip, #36]	@ 0x24
200009c8:	f024 0402 	bic.w	r4, r4, #2
200009cc:	f8cc 4024 	str.w	r4, [ip, #36]	@ 0x24
200009d0:	e7d2      	b.n	20000978 <MXC_FLC_RevA_Write32Using128+0x40>
    } else if (byte < 8) {
200009d2:	070b      	lsls	r3, r1, #28
200009d4:	d401      	bmi.n	200009da <MXC_FLC_RevA_Write32Using128+0xa2>
        current_data[1] = data;
200009d6:	9201      	str	r2, [sp, #4]
200009d8:	e7ef      	b.n	200009ba <MXC_FLC_RevA_Write32Using128+0x82>
    byte = (logicAddr & 0xf);
200009da:	f001 010f 	and.w	r1, r1, #15
    } else if (byte < 12) {
200009de:	290b      	cmp	r1, #11
        current_data[2] = data;
200009e0:	bf94      	ite	ls
200009e2:	9202      	strls	r2, [sp, #8]
        current_data[3] = data;
200009e4:	9203      	strhi	r2, [sp, #12]
200009e6:	e7e8      	b.n	200009ba <MXC_FLC_RevA_Write32Using128+0x82>
        return E_BAD_STATE;
200009e8:	f06f 0006 	mvn.w	r0, #6
200009ec:	e7e8      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
        return E_BAD_PARAM;
200009ee:	f06f 0002 	mvn.w	r0, #2
200009f2:	e7e5      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
        return E_BUSY;
200009f4:	f06f 0005 	mvn.w	r0, #5
200009f8:	e7e2      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
200009fa:	bf00      	nop
200009fc:	20001768 	.word	0x20001768
20000a00:	431bde83 	.word	0x431bde83

20000a04 <MXC_FLC_RevA_Write128>:
    if (addr & 0xF) {
20000a04:	070b      	lsls	r3, r1, #28
20000a06:	d13a      	bne.n	20000a7e <MXC_FLC_RevA_Write128+0x7a>
    return (flc->ctrl &
20000a08:	4603      	mov	r3, r0
20000a0a:	6880      	ldr	r0, [r0, #8]
    if (MXC_busy_flc(flc)) {
20000a0c:	0740      	lsls	r0, r0, #29
20000a0e:	d139      	bne.n	20000a84 <MXC_FLC_RevA_Write128+0x80>
    flc->clkdiv = SystemCoreClock / 1000000;
20000a10:	4821      	ldr	r0, [pc, #132]	@ (20000a98 <MXC_FLC_RevA_Write128+0x94>)
{
20000a12:	b410      	push	{r4}
    flc->clkdiv = SystemCoreClock / 1000000;
20000a14:	6800      	ldr	r0, [r0, #0]
20000a16:	4c21      	ldr	r4, [pc, #132]	@ (20000a9c <MXC_FLC_RevA_Write128+0x98>)
20000a18:	fba4 4000 	umull	r4, r0, r4, r0
20000a1c:	0c80      	lsrs	r0, r0, #18
20000a1e:	6058      	str	r0, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000a20:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a22:	0780      	lsls	r0, r0, #30
20000a24:	d426      	bmi.n	20000a74 <MXC_FLC_RevA_Write128+0x70>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000a26:	6898      	ldr	r0, [r3, #8]
20000a28:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
20000a2c:	f040 5000 	orr.w	r0, r0, #536870912	@ 0x20000000
20000a30:	6098      	str	r0, [r3, #8]
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_WDTH;
20000a32:	6898      	ldr	r0, [r3, #8]
20000a34:	f020 0010 	bic.w	r0, r0, #16
20000a38:	6098      	str	r0, [r3, #8]
    flc->addr = addr;
20000a3a:	6019      	str	r1, [r3, #0]
    flc->data[0] = data[0];
20000a3c:	6811      	ldr	r1, [r2, #0]
20000a3e:	6319      	str	r1, [r3, #48]	@ 0x30
    flc->data[1] = data[1];
20000a40:	6851      	ldr	r1, [r2, #4]
20000a42:	6359      	str	r1, [r3, #52]	@ 0x34
    flc->data[2] = data[2];
20000a44:	6891      	ldr	r1, [r2, #8]
20000a46:	6399      	str	r1, [r3, #56]	@ 0x38
    flc->data[3] = data[3];
20000a48:	68d2      	ldr	r2, [r2, #12]
20000a4a:	63da      	str	r2, [r3, #60]	@ 0x3c
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WR;
20000a4c:	689a      	ldr	r2, [r3, #8]
20000a4e:	f042 0201 	orr.w	r2, r2, #1
20000a52:	609a      	str	r2, [r3, #8]
    while ((flc->ctrl & MXC_F_FLC_REVA_CTRL_PEND) != 0) {}
20000a54:	689a      	ldr	r2, [r3, #8]
20000a56:	01d1      	lsls	r1, r2, #7
20000a58:	d4fc      	bmi.n	20000a54 <MXC_FLC_RevA_Write128+0x50>
    return (flc->ctrl &
20000a5a:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
20000a5c:	0752      	lsls	r2, r2, #29
20000a5e:	d1fc      	bne.n	20000a5a <MXC_FLC_RevA_Write128+0x56>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
20000a60:	689a      	ldr	r2, [r3, #8]
20000a62:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
20000a66:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000a68:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a6a:	f010 0002 	ands.w	r0, r0, #2
20000a6e:	d10c      	bne.n	20000a8a <MXC_FLC_RevA_Write128+0x86>
}
20000a70:	bc10      	pop	{r4}
20000a72:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a74:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a76:	f020 0002 	bic.w	r0, r0, #2
20000a7a:	6258      	str	r0, [r3, #36]	@ 0x24
20000a7c:	e7d3      	b.n	20000a26 <MXC_FLC_RevA_Write128+0x22>
        return E_BAD_PARAM;
20000a7e:	f06f 0002 	mvn.w	r0, #2
20000a82:	4770      	bx	lr
        return E_BUSY;
20000a84:	f06f 0005 	mvn.w	r0, #5
}
20000a88:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a8a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000a8c:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
20000a90:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a94:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000a96:	e7eb      	b.n	20000a70 <MXC_FLC_RevA_Write128+0x6c>
20000a98:	20001768 	.word	0x20001768
20000a9c:	431bde83 	.word	0x431bde83

20000aa0 <MXC_FLC_Com_VerifyData>:
// Length is number of 32-bit words
int MXC_FLC_Com_VerifyData(uint32_t address, uint32_t length, uint32_t *data)
{
    volatile uint32_t *ptr;

    for (ptr = (uint32_t *)address; ptr < (((uint32_t *)(address)) + length); ptr++, data++) {
20000aa0:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
20000aa4:	4560      	cmp	r0, ip
20000aa6:	d20d      	bcs.n	20000ac4 <MXC_FLC_Com_VerifyData+0x24>
20000aa8:	3a04      	subs	r2, #4
20000aaa:	e001      	b.n	20000ab0 <MXC_FLC_Com_VerifyData+0x10>
20000aac:	4560      	cmp	r0, ip
20000aae:	d209      	bcs.n	20000ac4 <MXC_FLC_Com_VerifyData+0x24>
        if (*ptr != *data) {
20000ab0:	6801      	ldr	r1, [r0, #0]
20000ab2:	f852 3f04 	ldr.w	r3, [r2, #4]!
20000ab6:	4299      	cmp	r1, r3
    for (ptr = (uint32_t *)address; ptr < (((uint32_t *)(address)) + length); ptr++, data++) {
20000ab8:	f100 0004 	add.w	r0, r0, #4
        if (*ptr != *data) {
20000abc:	d0f6      	beq.n	20000aac <MXC_FLC_Com_VerifyData+0xc>
            return E_BAD_STATE;
20000abe:	f06f 0006 	mvn.w	r0, #6
        }
    }

    return E_NO_ERROR;
}
20000ac2:	4770      	bx	lr
    return E_NO_ERROR;
20000ac4:	2000      	movs	r0, #0
20000ac6:	4770      	bx	lr

20000ac8 <MXC_FLC_Com_Write>:
#else
__attribute__((section(".flashprog")))
#endif
// make sure to disable ICC with ICC_Disable(); before Running this function
int MXC_FLC_Com_Write(uint32_t address, uint32_t length, uint32_t *buffer)
{
20000ac8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    uint32_t current_data_32;
    uint8_t *current_data = (uint8_t *)&current_data_32;
    uint8_t *buffer8 = (uint8_t *)buffer;

    // Align the address to a word boundary and read/write if we have to
    if (address & 0x3) {
20000acc:	f010 0703 	ands.w	r7, r0, #3
{
20000ad0:	b087      	sub	sp, #28
20000ad2:	4604      	mov	r4, r0
20000ad4:	460e      	mov	r6, r1
20000ad6:	4615      	mov	r5, r2
    if (address & 0x3) {
20000ad8:	d00b      	beq.n	20000af2 <MXC_FLC_Com_Write+0x2a>
20000ada:	e012      	b.n	20000b02 <MXC_FLC_Com_Write+0x3a>
        length -= bytes_written;
        buffer8 += bytes_written;
    }

    // Align the address to a 4-word (128bit) boundary
    while ((length >= 4) && ((address & 0xF) != 0)) {
20000adc:	0723      	lsls	r3, r4, #28
20000ade:	d028      	beq.n	20000b32 <MXC_FLC_Com_Write+0x6a>
        memcpy(current_data, buffer8, 4);
20000ae0:	6829      	ldr	r1, [r5, #0]
20000ae2:	9101      	str	r1, [sp, #4]
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000ae4:	4620      	mov	r0, r4
20000ae6:	f000 f867 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
            return err;
        }

        address += 4;
        length -= 4;
20000aea:	3e04      	subs	r6, #4
        address += 4;
20000aec:	3404      	adds	r4, #4
        buffer8 += 4;
20000aee:	3504      	adds	r5, #4
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000af0:	b920      	cbnz	r0, 20000afc <MXC_FLC_Com_Write+0x34>
    while ((length >= 4) && ((address & 0xF) != 0)) {
20000af2:	2e03      	cmp	r6, #3
20000af4:	d8f2      	bhi.n	20000adc <MXC_FLC_Com_Write+0x14>
        address += 4;
        length -= 4;
        buffer8 += 4;
    }

    if (length > 0) {
20000af6:	2e00      	cmp	r6, #0
20000af8:	d143      	bne.n	20000b82 <MXC_FLC_Com_Write+0xba>
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
            return err;
        }
    }

    return E_NO_ERROR;
20000afa:	4630      	mov	r0, r6
}
20000afc:	b007      	add	sp, #28
20000afe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        memcpy(current_data, (void *)(address & (~0x3)), 4);
20000b02:	f020 0903 	bic.w	r9, r0, #3
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b06:	ab01      	add	r3, sp, #4
        bytes_written = 4 - (address & 0x3);
20000b08:	f1c7 0804 	rsb	r8, r7, #4
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b0c:	19d8      	adds	r0, r3, r7
20000b0e:	4629      	mov	r1, r5
        memcpy(current_data, (void *)(address & (~0x3)), 4);
20000b10:	f8d9 3000 	ldr.w	r3, [r9]
20000b14:	9301      	str	r3, [sp, #4]
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b16:	4642      	mov	r2, r8
20000b18:	f000 f84a 	bl	20000bb0 <__memcpy_veneer>
        if ((err = MXC_FLC_Write32(address - (address % 4), current_data_32)) != E_NO_ERROR) {
20000b1c:	9901      	ldr	r1, [sp, #4]
20000b1e:	4648      	mov	r0, r9
20000b20:	f000 f84a 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
20000b24:	2800      	cmp	r0, #0
20000b26:	d1e9      	bne.n	20000afc <MXC_FLC_Com_Write+0x34>
        address += bytes_written;
20000b28:	3e04      	subs	r6, #4
20000b2a:	4444      	add	r4, r8
        length -= bytes_written;
20000b2c:	443e      	add	r6, r7
        buffer8 += bytes_written;
20000b2e:	4445      	add	r5, r8
20000b30:	e7df      	b.n	20000af2 <MXC_FLC_Com_Write+0x2a>
    if (length >= 16) {
20000b32:	2e0f      	cmp	r6, #15
20000b34:	d902      	bls.n	20000b3c <MXC_FLC_Com_Write+0x74>
20000b36:	e010      	b.n	20000b5a <MXC_FLC_Com_Write+0x92>
    while (length >= 4) {
20000b38:	2e03      	cmp	r6, #3
20000b3a:	d9dc      	bls.n	20000af6 <MXC_FLC_Com_Write+0x2e>
        memcpy(current_data, buffer8, 4);
20000b3c:	6829      	ldr	r1, [r5, #0]
20000b3e:	9101      	str	r1, [sp, #4]
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b40:	4620      	mov	r0, r4
20000b42:	f000 f839 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
        length -= 4;
20000b46:	3e04      	subs	r6, #4
        address += 4;
20000b48:	3404      	adds	r4, #4
        buffer8 += 4;
20000b4a:	3504      	adds	r5, #4
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b4c:	2800      	cmp	r0, #0
20000b4e:	d0f3      	beq.n	20000b38 <MXC_FLC_Com_Write+0x70>
}
20000b50:	b007      	add	sp, #28
20000b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        while (length >= 16) {
20000b56:	2e0f      	cmp	r6, #15
20000b58:	d9ee      	bls.n	20000b38 <MXC_FLC_Com_Write+0x70>
            memcpy(buff128, buffer8, 16);
20000b5a:	6828      	ldr	r0, [r5, #0]
20000b5c:	6869      	ldr	r1, [r5, #4]
20000b5e:	68aa      	ldr	r2, [r5, #8]
20000b60:	68eb      	ldr	r3, [r5, #12]
20000b62:	f10d 0c08 	add.w	ip, sp, #8
20000b66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
            if ((err = MXC_FLC_Write128(address, buff128)) != E_NO_ERROR) {
20000b6a:	4620      	mov	r0, r4
20000b6c:	a902      	add	r1, sp, #8
20000b6e:	f7ff fddb 	bl	20000728 <MXC_FLC_Write128>
            length -= 16;
20000b72:	3e10      	subs	r6, #16
            address += 16;
20000b74:	3410      	adds	r4, #16
            buffer8 += 16;
20000b76:	3510      	adds	r5, #16
            if ((err = MXC_FLC_Write128(address, buff128)) != E_NO_ERROR) {
20000b78:	2800      	cmp	r0, #0
20000b7a:	d0ec      	beq.n	20000b56 <MXC_FLC_Com_Write+0x8e>
}
20000b7c:	b007      	add	sp, #28
20000b7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        memcpy(current_data, (void *)(address), 4);
20000b82:	6823      	ldr	r3, [r4, #0]
20000b84:	9301      	str	r3, [sp, #4]
        memcpy(current_data, buffer8, length);
20000b86:	4629      	mov	r1, r5
20000b88:	4632      	mov	r2, r6
20000b8a:	a801      	add	r0, sp, #4
20000b8c:	f000 f810 	bl	20000bb0 <__memcpy_veneer>
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b90:	9901      	ldr	r1, [sp, #4]
20000b92:	4620      	mov	r0, r4
}
20000b94:	b007      	add	sp, #28
20000b96:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b9a:	f000 b80d 	b.w	20000bb8 <__MXC_FLC_Write32_veneer>
20000b9e:	bf00      	nop

20000ba0 <MXC_FLC_Com_Read>:
#pragma section = ".flashprog"
#else
__attribute__((section(".flashprog")))
#endif
void MXC_FLC_Com_Read(int address, void *buffer, int len)
{
20000ba0:	4603      	mov	r3, r0
    memcpy(buffer, (void *)address, len);
20000ba2:	4608      	mov	r0, r1
20000ba4:	4619      	mov	r1, r3
20000ba6:	f000 b803 	b.w	20000bb0 <__memcpy_veneer>
20000baa:	bf00      	nop
20000bac:	0000      	movs	r0, r0
	...

20000bb0 <__memcpy_veneer>:
20000bb0:	f85f f000 	ldr.w	pc, [pc]	@ 20000bb4 <__memcpy_veneer+0x4>
20000bb4:	100185a1 	.word	0x100185a1

20000bb8 <__MXC_FLC_Write32_veneer>:
20000bb8:	f85f f000 	ldr.w	pc, [pc]	@ 20000bbc <__MXC_FLC_Write32_veneer+0x4>
20000bbc:	10012385 	.word	0x10012385

20000bc0 <__init_array_start>:
20000bc0:	100188b1 	.word	0x100188b1

20000bc4 <__frame_dummy_init_array_entry>:
20000bc4:	1000e271                                q...

20000bc8 <__do_global_dtors_aux_fini_array_entry>:
20000bc8:	1000e249                                I...
