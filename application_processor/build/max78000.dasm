
/Users/spoiler/Documents/GitHub/CAT-ectf-2024/application_processor/build/max78000.elf:     file format elf32-littlearm


Disassembly of section .text:

1000e000 <__isr_vector>:
1000e000:	20020000 	.word	0x20020000
1000e004:	1000f011 	.word	0x1000f011
1000e008:	1000ee45 	.word	0x1000ee45
1000e00c:	1000f04f 	.word	0x1000f04f
1000e010:	1000f051 	.word	0x1000f051
1000e014:	1000f053 	.word	0x1000f053
1000e018:	1000f055 	.word	0x1000f055
	...
1000e02c:	1000f057 	.word	0x1000f057
1000e030:	1000f059 	.word	0x1000f059
1000e034:	00000000 	.word	0x00000000
1000e038:	1000f05b 	.word	0x1000f05b
1000e03c:	1000f05d 	.word	0x1000f05d
1000e040:	1000f061 	.word	0x1000f061
1000e044:	1000f063 	.word	0x1000f063
1000e048:	1000f065 	.word	0x1000f065
1000e04c:	1000f067 	.word	0x1000f067
1000e050:	1000f069 	.word	0x1000f069
1000e054:	1000f06b 	.word	0x1000f06b
1000e058:	1000f06d 	.word	0x1000f06d
1000e05c:	1000f06f 	.word	0x1000f06f
1000e060:	1000f071 	.word	0x1000f071
1000e064:	1000f073 	.word	0x1000f073
1000e068:	1000f075 	.word	0x1000f075
1000e06c:	1000f077 	.word	0x1000f077
1000e070:	1000f079 	.word	0x1000f079
1000e074:	1000f07b 	.word	0x1000f07b
1000e078:	1000f07d 	.word	0x1000f07d
1000e07c:	1000f07f 	.word	0x1000f07f
1000e080:	1000f081 	.word	0x1000f081
1000e084:	1000f083 	.word	0x1000f083
1000e088:	1000f085 	.word	0x1000f085
1000e08c:	1000f087 	.word	0x1000f087
1000e090:	1000f089 	.word	0x1000f089
1000e094:	1000f08b 	.word	0x1000f08b
1000e098:	1000f08d 	.word	0x1000f08d
1000e09c:	1000f08f 	.word	0x1000f08f
1000e0a0:	1000edc9 	.word	0x1000edc9
1000e0a4:	1000edd1 	.word	0x1000edd1
1000e0a8:	1000f095 	.word	0x1000f095
1000e0ac:	1000f097 	.word	0x1000f097
1000e0b0:	1000f099 	.word	0x1000f099
1000e0b4:	1000f09b 	.word	0x1000f09b
1000e0b8:	1000f09d 	.word	0x1000f09d
1000e0bc:	1000f09f 	.word	0x1000f09f
1000e0c0:	1000f0a1 	.word	0x1000f0a1
1000e0c4:	1000f0a3 	.word	0x1000f0a3
1000e0c8:	1000f0a5 	.word	0x1000f0a5
1000e0cc:	1000f0a7 	.word	0x1000f0a7
1000e0d0:	1000f0a9 	.word	0x1000f0a9
1000e0d4:	1000f0ab 	.word	0x1000f0ab
1000e0d8:	1000f0ad 	.word	0x1000f0ad
1000e0dc:	1000f0af 	.word	0x1000f0af
1000e0e0:	1000f0b1 	.word	0x1000f0b1
1000e0e4:	1000f0b3 	.word	0x1000f0b3
1000e0e8:	1000f0b5 	.word	0x1000f0b5
1000e0ec:	1000f0b7 	.word	0x1000f0b7
1000e0f0:	1000f0b9 	.word	0x1000f0b9
1000e0f4:	1000f0bb 	.word	0x1000f0bb
1000e0f8:	1000f0bd 	.word	0x1000f0bd
1000e0fc:	1000f0bf 	.word	0x1000f0bf
1000e100:	1000f0c1 	.word	0x1000f0c1
1000e104:	1000f0c3 	.word	0x1000f0c3
1000e108:	1000f0c5 	.word	0x1000f0c5
1000e10c:	1000f0c7 	.word	0x1000f0c7
1000e110:	1000f0c9 	.word	0x1000f0c9
1000e114:	1000f0cb 	.word	0x1000f0cb
1000e118:	1000f0cd 	.word	0x1000f0cd
1000e11c:	1000f0cf 	.word	0x1000f0cf
1000e120:	1000f0d1 	.word	0x1000f0d1
1000e124:	1000f0d3 	.word	0x1000f0d3
1000e128:	1000f0d5 	.word	0x1000f0d5
1000e12c:	1000f0d7 	.word	0x1000f0d7
1000e130:	1000f0d9 	.word	0x1000f0d9
1000e134:	1000f0db 	.word	0x1000f0db
1000e138:	1000f0dd 	.word	0x1000f0dd
1000e13c:	1000f0df 	.word	0x1000f0df
1000e140:	1000f0e1 	.word	0x1000f0e1
1000e144:	1000f0e3 	.word	0x1000f0e3
1000e148:	1000f0e5 	.word	0x1000f0e5
1000e14c:	1000f0e7 	.word	0x1000f0e7
1000e150:	1000f0e9 	.word	0x1000f0e9
1000e154:	1000f0eb 	.word	0x1000f0eb
1000e158:	1000f0ed 	.word	0x1000f0ed
1000e15c:	1000f0ef 	.word	0x1000f0ef
1000e160:	1000f0f1 	.word	0x1000f0f1
1000e164:	1000f0f3 	.word	0x1000f0f3
1000e168:	1000f0f5 	.word	0x1000f0f5
1000e16c:	1000f0f7 	.word	0x1000f0f7
1000e170:	1000f0f9 	.word	0x1000f0f9
1000e174:	1000f0fb 	.word	0x1000f0fb
1000e178:	1000f0fd 	.word	0x1000f0fd
1000e17c:	1000f0ff 	.word	0x1000f0ff
1000e180:	1000f101 	.word	0x1000f101
1000e184:	1000f103 	.word	0x1000f103
1000e188:	1000f105 	.word	0x1000f105
1000e18c:	1000f107 	.word	0x1000f107
1000e190:	1000f109 	.word	0x1000f109
1000e194:	1000f10b 	.word	0x1000f10b
1000e198:	1000f10d 	.word	0x1000f10d
1000e19c:	1000f10f 	.word	0x1000f10f
1000e1a0:	1000f111 	.word	0x1000f111
1000e1a4:	1000f113 	.word	0x1000f113
1000e1a8:	1000f115 	.word	0x1000f115
1000e1ac:	1000f117 	.word	0x1000f117
1000e1b0:	1000f119 	.word	0x1000f119
1000e1b4:	1000f11b 	.word	0x1000f11b
1000e1b8:	1000f11d 	.word	0x1000f11d
1000e1bc:	1000f11f 	.word	0x1000f11f
1000e1c0:	1000f121 	.word	0x1000f121
1000e1c4:	1000f123 	.word	0x1000f123
1000e1c8:	1000f125 	.word	0x1000f125
1000e1cc:	1000f127 	.word	0x1000f127
1000e1d0:	1000f129 	.word	0x1000f129
1000e1d4:	1000f12b 	.word	0x1000f12b
1000e1d8:	1000f12d 	.word	0x1000f12d
1000e1dc:	1000f12f 	.word	0x1000f12f
	...

1000e200 <firmware_startup>:
1000e200:	4800      	ldr	r0, [pc, #0]	@ (1000e204 <firmware_startup+0x4>)
1000e202:	4780      	blx	r0
1000e204:	1000f011 	.word	0x1000f011

1000e208 <deregister_tm_clones>:
1000e208:	4803      	ldr	r0, [pc, #12]	@ (1000e218 <deregister_tm_clones+0x10>)
1000e20a:	4b04      	ldr	r3, [pc, #16]	@ (1000e21c <deregister_tm_clones+0x14>)
1000e20c:	4283      	cmp	r3, r0
1000e20e:	d002      	beq.n	1000e216 <deregister_tm_clones+0xe>
1000e210:	4b03      	ldr	r3, [pc, #12]	@ (1000e220 <deregister_tm_clones+0x18>)
1000e212:	b103      	cbz	r3, 1000e216 <deregister_tm_clones+0xe>
1000e214:	4718      	bx	r3
1000e216:	4770      	bx	lr
1000e218:	20000bcc 	.word	0x20000bcc
1000e21c:	20000bcc 	.word	0x20000bcc
1000e220:	00000000 	.word	0x00000000

1000e224 <register_tm_clones>:
1000e224:	4805      	ldr	r0, [pc, #20]	@ (1000e23c <register_tm_clones+0x18>)
1000e226:	4b06      	ldr	r3, [pc, #24]	@ (1000e240 <register_tm_clones+0x1c>)
1000e228:	1a1b      	subs	r3, r3, r0
1000e22a:	0fd9      	lsrs	r1, r3, #31
1000e22c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
1000e230:	1049      	asrs	r1, r1, #1
1000e232:	d002      	beq.n	1000e23a <register_tm_clones+0x16>
1000e234:	4b03      	ldr	r3, [pc, #12]	@ (1000e244 <register_tm_clones+0x20>)
1000e236:	b103      	cbz	r3, 1000e23a <register_tm_clones+0x16>
1000e238:	4718      	bx	r3
1000e23a:	4770      	bx	lr
1000e23c:	20000bcc 	.word	0x20000bcc
1000e240:	20000bcc 	.word	0x20000bcc
1000e244:	00000000 	.word	0x00000000

1000e248 <__do_global_dtors_aux>:
1000e248:	b510      	push	{r4, lr}
1000e24a:	4c06      	ldr	r4, [pc, #24]	@ (1000e264 <__do_global_dtors_aux+0x1c>)
1000e24c:	7823      	ldrb	r3, [r4, #0]
1000e24e:	b943      	cbnz	r3, 1000e262 <__do_global_dtors_aux+0x1a>
1000e250:	f7ff ffda 	bl	1000e208 <deregister_tm_clones>
1000e254:	4b04      	ldr	r3, [pc, #16]	@ (1000e268 <__do_global_dtors_aux+0x20>)
1000e256:	b113      	cbz	r3, 1000e25e <__do_global_dtors_aux+0x16>
1000e258:	4804      	ldr	r0, [pc, #16]	@ (1000e26c <__do_global_dtors_aux+0x24>)
1000e25a:	f3af 8000 	nop.w
1000e25e:	2301      	movs	r3, #1
1000e260:	7023      	strb	r3, [r4, #0]
1000e262:	bd10      	pop	{r4, pc}
1000e264:	20000c00 	.word	0x20000c00
1000e268:	00000000 	.word	0x00000000
1000e26c:	10025b20 	.word	0x10025b20

1000e270 <frame_dummy>:
1000e270:	b508      	push	{r3, lr}
1000e272:	4b05      	ldr	r3, [pc, #20]	@ (1000e288 <frame_dummy+0x18>)
1000e274:	b11b      	cbz	r3, 1000e27e <frame_dummy+0xe>
1000e276:	4905      	ldr	r1, [pc, #20]	@ (1000e28c <frame_dummy+0x1c>)
1000e278:	4805      	ldr	r0, [pc, #20]	@ (1000e290 <frame_dummy+0x20>)
1000e27a:	f3af 8000 	nop.w
1000e27e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
1000e282:	f7ff bfcf 	b.w	1000e224 <register_tm_clones>
1000e286:	bf00      	nop
1000e288:	00000000 	.word	0x00000000
1000e28c:	20000c04 	.word	0x20000c04
1000e290:	10025b20 	.word	0x10025b20

1000e294 <scan_components>:
    return len;
}

/******************************** COMPONENT COMMS ********************************/

int scan_components() {
1000e294:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    // Print out provisioned component IDs
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e298:	f8df a0dc 	ldr.w	sl, [pc, #220]	@ 1000e378 <scan_components+0xe4>
1000e29c:	4e37      	ldr	r6, [pc, #220]	@ (1000e37c <scan_components+0xe8>)
1000e29e:	f8da 3004 	ldr.w	r3, [sl, #4]
int scan_components() {
1000e2a2:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e2a6:	b1db      	cbz	r3, 1000e2e0 <scan_components+0x4c>
        print_info("P>0x%08x\n", flash_status.component_ids[i]);
1000e2a8:	f8df 90d4 	ldr.w	r9, [pc, #212]	@ 1000e380 <scan_components+0xec>
1000e2ac:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 1000e384 <scan_components+0xf0>
1000e2b0:	4f35      	ldr	r7, [pc, #212]	@ (1000e388 <scan_components+0xf4>)
1000e2b2:	f10a 0504 	add.w	r5, sl, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e2b6:	2400      	movs	r4, #0
        print_info("P>0x%08x\n", flash_status.component_ids[i]);
1000e2b8:	4648      	mov	r0, r9
1000e2ba:	f003 f8e3 	bl	10011484 <printf>
1000e2be:	f855 1f04 	ldr.w	r1, [r5, #4]!
1000e2c2:	4640      	mov	r0, r8
1000e2c4:	f003 f8de 	bl	10011484 <printf>
1000e2c8:	4638      	mov	r0, r7
1000e2ca:	f003 f8db 	bl	10011484 <printf>
1000e2ce:	6833      	ldr	r3, [r6, #0]
1000e2d0:	6898      	ldr	r0, [r3, #8]
1000e2d2:	f006 fad7 	bl	10014884 <fflush>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e2d6:	f8da 3004 	ldr.w	r3, [sl, #4]
1000e2da:	3401      	adds	r4, #1
1000e2dc:	42a3      	cmp	r3, r4
1000e2de:	d8eb      	bhi.n	1000e2b8 <scan_components+0x24>
        int len = issue_cmd(addr, transmit_buffer, receive_buffer);

        // Success, device is present
        if (len > 0) {
            scan_message* scan = (scan_message*) receive_buffer;
            print_info("F>0x%08x\n", scan->component_id);
1000e2e0:	4d27      	ldr	r5, [pc, #156]	@ (1000e380 <scan_components+0xec>)
1000e2e2:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 1000e38c <scan_components+0xf8>
1000e2e6:	4f28      	ldr	r7, [pc, #160]	@ (1000e388 <scan_components+0xf4>)
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e2e8:	2408      	movs	r4, #8
1000e2ea:	e01f      	b.n	1000e32c <scan_components+0x98>
        command->opcode = COMPONENT_CMD_SCAN;
1000e2ec:	f88d e100 	strb.w	lr, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e2f0:	f000 fbbc 	bl	1000ea6c <send_packet>
1000e2f4:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e2f6:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e2f8:	4669      	mov	r1, sp
1000e2fa:	4620      	mov	r0, r4
    if (result == ERROR_RETURN) {
1000e2fc:	d012      	beq.n	1000e324 <scan_components+0x90>
    int len = poll_and_receive_packet(addr, receive);
1000e2fe:	f000 fbcf 	bl	1000eaa0 <poll_and_receive_packet>
1000e302:	4603      	mov	r3, r0
        if (len > 0) {
1000e304:	2b00      	cmp	r3, #0
            print_info("F>0x%08x\n", scan->component_id);
1000e306:	4628      	mov	r0, r5
        if (len > 0) {
1000e308:	dd0c      	ble.n	1000e324 <scan_components+0x90>
            print_info("F>0x%08x\n", scan->component_id);
1000e30a:	f003 f8bb 	bl	10011484 <printf>
1000e30e:	9900      	ldr	r1, [sp, #0]
1000e310:	4640      	mov	r0, r8
1000e312:	f003 f8b7 	bl	10011484 <printf>
1000e316:	4638      	mov	r0, r7
1000e318:	f003 f8b4 	bl	10011484 <printf>
1000e31c:	6833      	ldr	r3, [r6, #0]
1000e31e:	6898      	ldr	r0, [r3, #8]
1000e320:	f006 fab0 	bl	10014884 <fflush>
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e324:	3401      	adds	r4, #1
1000e326:	b2e4      	uxtb	r4, r4
1000e328:	2c78      	cmp	r4, #120	@ 0x78
1000e32a:	d013      	beq.n	1000e354 <scan_components+0xc0>
        command->opcode = COMPONENT_CMD_SCAN;
1000e32c:	f1a4 0318 	sub.w	r3, r4, #24
1000e330:	b2db      	uxtb	r3, r3
1000e332:	f8df c05c 	ldr.w	ip, [pc, #92]	@ 1000e390 <scan_components+0xfc>
1000e336:	f04f 0e01 	mov.w	lr, #1
1000e33a:	2b1e      	cmp	r3, #30
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e33c:	aa40      	add	r2, sp, #256	@ 0x100
1000e33e:	4671      	mov	r1, lr
1000e340:	4620      	mov	r0, r4
1000e342:	fa2c fc03 	lsr.w	ip, ip, r3
1000e346:	d8d1      	bhi.n	1000e2ec <scan_components+0x58>
1000e348:	f01c 0f01 	tst.w	ip, #1
1000e34c:	d0ce      	beq.n	1000e2ec <scan_components+0x58>
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e34e:	4474      	add	r4, lr
1000e350:	b2e4      	uxtb	r4, r4
1000e352:	e7eb      	b.n	1000e32c <scan_components+0x98>
        }
    }
    print_success("List\n");
1000e354:	480f      	ldr	r0, [pc, #60]	@ (1000e394 <scan_components+0x100>)
1000e356:	f003 f895 	bl	10011484 <printf>
1000e35a:	480f      	ldr	r0, [pc, #60]	@ (1000e398 <scan_components+0x104>)
1000e35c:	f005 ffbe 	bl	100142dc <puts>
1000e360:	4809      	ldr	r0, [pc, #36]	@ (1000e388 <scan_components+0xf4>)
1000e362:	f003 f88f 	bl	10011484 <printf>
1000e366:	6833      	ldr	r3, [r6, #0]
1000e368:	6898      	ldr	r0, [r3, #8]
1000e36a:	f006 fa8b 	bl	10014884 <fflush>
    return SUCCESS_RETURN;
}
1000e36e:	2000      	movs	r0, #0
1000e370:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e374:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1000e378:	20000c20 	.word	0x20000c20
1000e37c:	20000598 	.word	0x20000598
1000e380:	1001e4cc 	.word	0x1001e4cc
1000e384:	1001e4d8 	.word	0x1001e4d8
1000e388:	1001e4e4 	.word	0x1001e4e4
1000e38c:	1001e4e8 	.word	0x1001e4e8
1000e390:	40010001 	.word	0x40010001
1000e394:	1001e4f4 	.word	0x1001e4f4
1000e398:	1001e500 	.word	0x1001e500
1000e39c:	00000000 	.word	0x00000000

1000e3a0 <init>:
void init() {
1000e3a0:	b510      	push	{r4, lr}
  \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
1000e3a2:	b662      	cpsie	i
    flash_simple_read(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e3a4:	4c1a      	ldr	r4, [pc, #104]	@ (1000e410 <init+0x70>)
    flash_simple_init();
1000e3a6:	f000 fbed 	bl	1000eb84 <flash_simple_init>
    flash_simple_read(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e3aa:	2288      	movs	r2, #136	@ 0x88
1000e3ac:	4819      	ldr	r0, [pc, #100]	@ (1000e414 <init+0x74>)
1000e3ae:	4621      	mov	r1, r4
1000e3b0:	f000 fc02 	bl	1000ebb8 <flash_simple_read>
    if (flash_status.flash_magic != FLASH_MAGIC) {
1000e3b4:	4b18      	ldr	r3, [pc, #96]	@ (1000e418 <init+0x78>)
1000e3b6:	6822      	ldr	r2, [r4, #0]
1000e3b8:	429a      	cmp	r2, r3
1000e3ba:	d01c      	beq.n	1000e3f6 <init+0x56>
        print_debug("First boot, setting flash!\n");
1000e3bc:	4817      	ldr	r0, [pc, #92]	@ (1000e41c <init+0x7c>)
1000e3be:	f003 f861 	bl	10011484 <printf>
1000e3c2:	4817      	ldr	r0, [pc, #92]	@ (1000e420 <init+0x80>)
1000e3c4:	f005 ff8a 	bl	100142dc <puts>
1000e3c8:	4816      	ldr	r0, [pc, #88]	@ (1000e424 <init+0x84>)
1000e3ca:	f003 f85b 	bl	10011484 <printf>
1000e3ce:	4b16      	ldr	r3, [pc, #88]	@ (1000e428 <init+0x88>)
1000e3d0:	681b      	ldr	r3, [r3, #0]
1000e3d2:	6898      	ldr	r0, [r3, #8]
1000e3d4:	f006 fa56 	bl	10014884 <fflush>
        flash_status.flash_magic = FLASH_MAGIC;
1000e3d8:	a109      	add	r1, pc, #36	@ (adr r1, 1000e400 <init+0x60>)
1000e3da:	e9d1 0100 	ldrd	r0, r1, [r1]
1000e3de:	a30a      	add	r3, pc, #40	@ (adr r3, 1000e408 <init+0x68>)
1000e3e0:	e9d3 2300 	ldrd	r2, r3, [r3]
1000e3e4:	e9c4 0100 	strd	r0, r1, [r4]
1000e3e8:	e9c4 2302 	strd	r2, r3, [r4, #8]
        flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e3ec:	4809      	ldr	r0, [pc, #36]	@ (1000e414 <init+0x74>)
1000e3ee:	2288      	movs	r2, #136	@ 0x88
1000e3f0:	4621      	mov	r1, r4
1000e3f2:	f000 fbe3 	bl	1000ebbc <flash_simple_write>
}
1000e3f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    board_link_init();
1000e3fa:	f000 bb33 	b.w	1000ea64 <board_link_init>
1000e3fe:	bf00      	nop
1000e400:	deadbeef 	.word	0xdeadbeef
1000e404:	00000002 	.word	0x00000002
1000e408:	11111111 	.word	0x11111111
1000e40c:	11111112 	.word	0x11111112
1000e410:	20000c20 	.word	0x20000c20
1000e414:	1007c000 	.word	0x1007c000
1000e418:	deadbeef 	.word	0xdeadbeef
1000e41c:	1001e508 	.word	0x1001e508
1000e420:	1001e514 	.word	0x1001e514
1000e424:	1001e4e4 	.word	0x1001e4e4
1000e428:	20000598 	.word	0x20000598

1000e42c <validate_components>:

int validate_components() {
1000e42c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Send validate command to each component
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e430:	4f24      	ldr	r7, [pc, #144]	@ (1000e4c4 <validate_components+0x98>)
1000e432:	687b      	ldr	r3, [r7, #4]
int validate_components() {
1000e434:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e438:	2b00      	cmp	r3, #0
1000e43a:	d037      	beq.n	1000e4ac <validate_components+0x80>
1000e43c:	1d3d      	adds	r5, r7, #4
1000e43e:	2600      	movs	r6, #0
        // Set the I2C address of the component
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);

        // Create command message
        command_message* command = (command_message*) transmit_buffer;
        command->opcode = COMPONENT_CMD_VALIDATE;
1000e440:	f04f 0802 	mov.w	r8, #2
1000e444:	e003      	b.n	1000e44e <validate_components+0x22>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e446:	687b      	ldr	r3, [r7, #4]
1000e448:	3601      	adds	r6, #1
1000e44a:	42b3      	cmp	r3, r6
1000e44c:	d92e      	bls.n	1000e4ac <validate_components+0x80>
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e44e:	f855 0f04 	ldr.w	r0, [r5, #4]!
1000e452:	f000 fb09 	bl	1000ea68 <component_id_to_i2c_addr>
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e456:	2101      	movs	r1, #1
1000e458:	aa40      	add	r2, sp, #256	@ 0x100
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e45a:	4604      	mov	r4, r0
        command->opcode = COMPONENT_CMD_VALIDATE;
1000e45c:	f88d 8100 	strb.w	r8, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e460:	f000 fb04 	bl	1000ea6c <send_packet>
1000e464:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e466:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e468:	4669      	mov	r1, sp
1000e46a:	4620      	mov	r0, r4
    if (result == ERROR_RETURN) {
1000e46c:	d023      	beq.n	1000e4b6 <validate_components+0x8a>
    int len = poll_and_receive_packet(addr, receive);
1000e46e:	f000 fb17 	bl	1000eaa0 <poll_and_receive_packet>
    if (len == ERROR_RETURN) {
1000e472:	3001      	adds	r0, #1
1000e474:	d01f      	beq.n	1000e4b6 <validate_components+0x8a>
            return ERROR_RETURN;
        }

        validate_message* validate = (validate_message*) receive_buffer;
        // Check that the result is correct
        if (validate->component_id != flash_status.component_ids[i]) {
1000e476:	9a00      	ldr	r2, [sp, #0]
1000e478:	682b      	ldr	r3, [r5, #0]
1000e47a:	429a      	cmp	r2, r3
1000e47c:	d0e3      	beq.n	1000e446 <validate_components+0x1a>
            print_error("Component ID: 0x%08x invalid\n", flash_status.component_ids[i]);
1000e47e:	3602      	adds	r6, #2
1000e480:	4811      	ldr	r0, [pc, #68]	@ (1000e4c8 <validate_components+0x9c>)
1000e482:	f002 ffff 	bl	10011484 <printf>
1000e486:	4811      	ldr	r0, [pc, #68]	@ (1000e4cc <validate_components+0xa0>)
1000e488:	f857 1026 	ldr.w	r1, [r7, r6, lsl #2]
1000e48c:	f002 fffa 	bl	10011484 <printf>
1000e490:	480f      	ldr	r0, [pc, #60]	@ (1000e4d0 <validate_components+0xa4>)
1000e492:	f002 fff7 	bl	10011484 <printf>
1000e496:	4b0f      	ldr	r3, [pc, #60]	@ (1000e4d4 <validate_components+0xa8>)
1000e498:	681b      	ldr	r3, [r3, #0]
1000e49a:	6898      	ldr	r0, [r3, #8]
1000e49c:	f006 f9f2 	bl	10014884 <fflush>
            return ERROR_RETURN;
1000e4a0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
            return ERROR_RETURN;
        }
    }
    return SUCCESS_RETURN;
}
1000e4a4:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e4a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return SUCCESS_RETURN;
1000e4ac:	2000      	movs	r0, #0
}
1000e4ae:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e4b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            print_error("Could not validate component\n");
1000e4b6:	4804      	ldr	r0, [pc, #16]	@ (1000e4c8 <validate_components+0x9c>)
1000e4b8:	f002 ffe4 	bl	10011484 <printf>
1000e4bc:	4806      	ldr	r0, [pc, #24]	@ (1000e4d8 <validate_components+0xac>)
1000e4be:	f005 ff0d 	bl	100142dc <puts>
1000e4c2:	e7e5      	b.n	1000e490 <validate_components+0x64>
1000e4c4:	20000c20 	.word	0x20000c20
1000e4c8:	1001e530 	.word	0x1001e530
1000e4cc:	1001e55c 	.word	0x1001e55c
1000e4d0:	1001e4e4 	.word	0x1001e4e4
1000e4d4:	20000598 	.word	0x20000598
1000e4d8:	1001e53c 	.word	0x1001e53c

1000e4dc <boot_components>:

int boot_components() {
1000e4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Send boot command to each component
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4e0:	4f29      	ldr	r7, [pc, #164]	@ (1000e588 <boot_components+0xac>)
1000e4e2:	687b      	ldr	r3, [r7, #4]
int boot_components() {
1000e4e4:	f5ad 7d01 	sub.w	sp, sp, #516	@ 0x204
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4e8:	b3a3      	cbz	r3, 1000e554 <boot_components+0x78>
1000e4ea:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 1000e58c <boot_components+0xb0>
            print_error("Could not boot component\n");
            return ERROR_RETURN;
        }

        // Print boot message from component
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e4ee:	f8df 90a0 	ldr.w	r9, [pc, #160]	@ 1000e590 <boot_components+0xb4>
1000e4f2:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 1000e594 <boot_components+0xb8>
1000e4f6:	f8df a0a0 	ldr.w	sl, [pc, #160]	@ 1000e598 <boot_components+0xbc>
1000e4fa:	1d3e      	adds	r6, r7, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4fc:	2500      	movs	r5, #0
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e4fe:	f856 0f04 	ldr.w	r0, [r6, #4]!
1000e502:	f000 fab1 	bl	1000ea68 <component_id_to_i2c_addr>
        command->opcode = COMPONENT_CMD_BOOT;
1000e506:	2303      	movs	r3, #3
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e508:	2101      	movs	r1, #1
1000e50a:	aa40      	add	r2, sp, #256	@ 0x100
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e50c:	4604      	mov	r4, r0
        command->opcode = COMPONENT_CMD_BOOT;
1000e50e:	f88d 3100 	strb.w	r3, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e512:	f000 faab 	bl	1000ea6c <send_packet>
1000e516:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e518:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e51a:	4669      	mov	r1, sp
1000e51c:	4620      	mov	r0, r4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e51e:	f105 0501 	add.w	r5, r5, #1
    if (result == ERROR_RETURN) {
1000e522:	d01c      	beq.n	1000e55e <boot_components+0x82>
    int len = poll_and_receive_packet(addr, receive);
1000e524:	f000 fabc 	bl	1000eaa0 <poll_and_receive_packet>
1000e528:	4603      	mov	r3, r0
    if (len == ERROR_RETURN) {
1000e52a:	3301      	adds	r3, #1
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e52c:	4648      	mov	r0, r9
    if (len == ERROR_RETURN) {
1000e52e:	d016      	beq.n	1000e55e <boot_components+0x82>
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e530:	f002 ffa8 	bl	10011484 <printf>
1000e534:	6831      	ldr	r1, [r6, #0]
1000e536:	466a      	mov	r2, sp
1000e538:	4658      	mov	r0, fp
1000e53a:	f002 ffa3 	bl	10011484 <printf>
1000e53e:	4650      	mov	r0, sl
1000e540:	f002 ffa0 	bl	10011484 <printf>
1000e544:	f8d8 3000 	ldr.w	r3, [r8]
1000e548:	6898      	ldr	r0, [r3, #8]
1000e54a:	f006 f99b 	bl	10014884 <fflush>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e54e:	687b      	ldr	r3, [r7, #4]
1000e550:	42ab      	cmp	r3, r5
1000e552:	d8d4      	bhi.n	1000e4fe <boot_components+0x22>
    }
    return SUCCESS_RETURN;
1000e554:	2000      	movs	r0, #0
}
1000e556:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e55a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            print_error("Could not boot component\n");
1000e55e:	480f      	ldr	r0, [pc, #60]	@ (1000e59c <boot_components+0xc0>)
1000e560:	f002 ff90 	bl	10011484 <printf>
1000e564:	480e      	ldr	r0, [pc, #56]	@ (1000e5a0 <boot_components+0xc4>)
1000e566:	f005 feb9 	bl	100142dc <puts>
1000e56a:	480b      	ldr	r0, [pc, #44]	@ (1000e598 <boot_components+0xbc>)
1000e56c:	f002 ff8a 	bl	10011484 <printf>
1000e570:	f8d8 3000 	ldr.w	r3, [r8]
1000e574:	6898      	ldr	r0, [r3, #8]
1000e576:	f006 f985 	bl	10014884 <fflush>
            return ERROR_RETURN;
1000e57a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e57e:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1000e586:	bf00      	nop
1000e588:	20000c20 	.word	0x20000c20
1000e58c:	20000598 	.word	0x20000598
1000e590:	1001e4cc 	.word	0x1001e4cc
1000e594:	1001e57c 	.word	0x1001e57c
1000e598:	1001e4e4 	.word	0x1001e4e4
1000e59c:	1001e530 	.word	0x1001e530
1000e5a0:	1001e588 	.word	0x1001e588

1000e5a4 <attest_component>:

int attest_component(uint32_t component_id) {
1000e5a4:	b530      	push	{r4, r5, lr}
1000e5a6:	f5ad 7d01 	sub.w	sp, sp, #516	@ 0x204
1000e5aa:	4604      	mov	r4, r0
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Set the I2C address of the component
    i2c_addr_t addr = component_id_to_i2c_addr(component_id);
1000e5ac:	f000 fa5c 	bl	1000ea68 <component_id_to_i2c_addr>

    // Create command message
    command_message* command = (command_message*) transmit_buffer;
    command->opcode = COMPONENT_CMD_ATTEST;
1000e5b0:	2304      	movs	r3, #4
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e5b2:	aa40      	add	r2, sp, #256	@ 0x100
1000e5b4:	2101      	movs	r1, #1
    i2c_addr_t addr = component_id_to_i2c_addr(component_id);
1000e5b6:	4605      	mov	r5, r0
    command->opcode = COMPONENT_CMD_ATTEST;
1000e5b8:	f88d 3100 	strb.w	r3, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e5bc:	f000 fa56 	bl	1000ea6c <send_packet>
    if (result == ERROR_RETURN) {
1000e5c0:	3001      	adds	r0, #1
1000e5c2:	d026      	beq.n	1000e612 <attest_component+0x6e>
    int len = poll_and_receive_packet(addr, receive);
1000e5c4:	4669      	mov	r1, sp
1000e5c6:	4628      	mov	r0, r5
1000e5c8:	f000 fa6a 	bl	1000eaa0 <poll_and_receive_packet>
    if (len == ERROR_RETURN) {
1000e5cc:	3001      	adds	r0, #1
1000e5ce:	d020      	beq.n	1000e612 <attest_component+0x6e>
        print_error("Could not attest component\n");
        return ERROR_RETURN;
    }

    // Print out attestation data 
    print_info("C>0x%08x\n", component_id);
1000e5d0:	4818      	ldr	r0, [pc, #96]	@ (1000e634 <attest_component+0x90>)
1000e5d2:	f002 ff57 	bl	10011484 <printf>
1000e5d6:	4621      	mov	r1, r4
1000e5d8:	4817      	ldr	r0, [pc, #92]	@ (1000e638 <attest_component+0x94>)
1000e5da:	4c18      	ldr	r4, [pc, #96]	@ (1000e63c <attest_component+0x98>)
1000e5dc:	f002 ff52 	bl	10011484 <printf>
1000e5e0:	4817      	ldr	r0, [pc, #92]	@ (1000e640 <attest_component+0x9c>)
1000e5e2:	f002 ff4f 	bl	10011484 <printf>
1000e5e6:	6823      	ldr	r3, [r4, #0]
1000e5e8:	6898      	ldr	r0, [r3, #8]
1000e5ea:	f006 f94b 	bl	10014884 <fflush>

    print_info("%s", receive_buffer);
1000e5ee:	4811      	ldr	r0, [pc, #68]	@ (1000e634 <attest_component+0x90>)
1000e5f0:	f002 ff48 	bl	10011484 <printf>
1000e5f4:	4669      	mov	r1, sp
1000e5f6:	4813      	ldr	r0, [pc, #76]	@ (1000e644 <attest_component+0xa0>)
1000e5f8:	f002 ff44 	bl	10011484 <printf>
1000e5fc:	4810      	ldr	r0, [pc, #64]	@ (1000e640 <attest_component+0x9c>)
1000e5fe:	f002 ff41 	bl	10011484 <printf>
1000e602:	6823      	ldr	r3, [r4, #0]
1000e604:	6898      	ldr	r0, [r3, #8]
1000e606:	f006 f93d 	bl	10014884 <fflush>
    // hash(receive_buffer, 16, hash_out);

    // // Output hash result
    // print_info("%08x", hash_out);

    return SUCCESS_RETURN;
1000e60a:	2000      	movs	r0, #0
}
1000e60c:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e610:	bd30      	pop	{r4, r5, pc}
        print_error("Could not attest component\n");
1000e612:	480d      	ldr	r0, [pc, #52]	@ (1000e648 <attest_component+0xa4>)
1000e614:	f002 ff36 	bl	10011484 <printf>
1000e618:	480c      	ldr	r0, [pc, #48]	@ (1000e64c <attest_component+0xa8>)
1000e61a:	f005 fe5f 	bl	100142dc <puts>
1000e61e:	4808      	ldr	r0, [pc, #32]	@ (1000e640 <attest_component+0x9c>)
1000e620:	f002 ff30 	bl	10011484 <printf>
1000e624:	4b05      	ldr	r3, [pc, #20]	@ (1000e63c <attest_component+0x98>)
1000e626:	681b      	ldr	r3, [r3, #0]
1000e628:	6898      	ldr	r0, [r3, #8]
1000e62a:	f006 f92b 	bl	10014884 <fflush>
        return ERROR_RETURN;
1000e62e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e632:	e7eb      	b.n	1000e60c <attest_component+0x68>
1000e634:	1001e4cc 	.word	0x1001e4cc
1000e638:	1001e5a4 	.word	0x1001e5a4
1000e63c:	20000598 	.word	0x20000598
1000e640:	1001e4e4 	.word	0x1001e4e4
1000e644:	1001e5b0 	.word	0x1001e5b0
1000e648:	1001e530 	.word	0x1001e530
1000e64c:	1001e5b4 	.word	0x1001e5b4

1000e650 <boot>:
/********************************* AP LOGIC ***********************************/

// Boot sequence
// YOUR DESIGN MUST NOT CHANGE THIS FUNCTION
// Boot message is customized through the AP_BOOT_MSG macro
void boot() {
1000e650:	b508      	push	{r3, lr}
    #else
    // Everything after this point is modifiable in your design
    // LED loop to show that boot occurred
    while (1) {
        LED_On(LED1);
        MXC_Delay(500000);
1000e652:	4c13      	ldr	r4, [pc, #76]	@ (1000e6a0 <boot+0x50>)
        LED_On(LED1);
1000e654:	2000      	movs	r0, #0
1000e656:	f000 fc7f 	bl	1000ef58 <LED_On>
        MXC_Delay(500000);
1000e65a:	4620      	mov	r0, r4
1000e65c:	f000 fe9a 	bl	1000f394 <MXC_Delay>
        LED_On(LED2);
1000e660:	2001      	movs	r0, #1
1000e662:	f000 fc79 	bl	1000ef58 <LED_On>
        MXC_Delay(500000);
1000e666:	4620      	mov	r0, r4
1000e668:	f000 fe94 	bl	1000f394 <MXC_Delay>
        LED_On(LED3);
1000e66c:	2002      	movs	r0, #2
1000e66e:	f000 fc73 	bl	1000ef58 <LED_On>
        MXC_Delay(500000);
1000e672:	4620      	mov	r0, r4
1000e674:	f000 fe8e 	bl	1000f394 <MXC_Delay>
        LED_Off(LED1);
1000e678:	2000      	movs	r0, #0
1000e67a:	f000 fc8d 	bl	1000ef98 <LED_Off>
        MXC_Delay(500000);
1000e67e:	4620      	mov	r0, r4
1000e680:	f000 fe88 	bl	1000f394 <MXC_Delay>
        LED_Off(LED2);
1000e684:	2001      	movs	r0, #1
1000e686:	f000 fc87 	bl	1000ef98 <LED_Off>
        MXC_Delay(500000);
1000e68a:	4620      	mov	r0, r4
1000e68c:	f000 fe82 	bl	1000f394 <MXC_Delay>
        LED_Off(LED3);
1000e690:	2002      	movs	r0, #2
1000e692:	f000 fc81 	bl	1000ef98 <LED_Off>
        MXC_Delay(500000);
1000e696:	4620      	mov	r0, r4
1000e698:	f000 fe7c 	bl	1000f394 <MXC_Delay>
    while (1) {
1000e69c:	e7da      	b.n	1000e654 <boot+0x4>
1000e69e:	bf00      	nop
1000e6a0:	0007a120 	.word	0x0007a120

1000e6a4 <attempt_boot>:
    print_error("Invalid Token!\n");
    return ERROR_RETURN;
}

// Boot the components and board if the components validate
void attempt_boot() {
1000e6a4:	b510      	push	{r4, lr}
    if (validate_components()) {
1000e6a6:	f7ff fec1 	bl	1000e42c <validate_components>
1000e6aa:	b9f8      	cbnz	r0, 1000e6ec <attempt_boot+0x48>
        print_error("Components could not be validated\n");
        return;
    }
    print_debug("All Components validated\n");
1000e6ac:	4826      	ldr	r0, [pc, #152]	@ (1000e748 <attempt_boot+0xa4>)
1000e6ae:	4c27      	ldr	r4, [pc, #156]	@ (1000e74c <attempt_boot+0xa8>)
1000e6b0:	f002 fee8 	bl	10011484 <printf>
1000e6b4:	4826      	ldr	r0, [pc, #152]	@ (1000e750 <attempt_boot+0xac>)
1000e6b6:	f005 fe11 	bl	100142dc <puts>
1000e6ba:	4826      	ldr	r0, [pc, #152]	@ (1000e754 <attempt_boot+0xb0>)
1000e6bc:	f002 fee2 	bl	10011484 <printf>
1000e6c0:	6823      	ldr	r3, [r4, #0]
1000e6c2:	6898      	ldr	r0, [r3, #8]
1000e6c4:	f006 f8de 	bl	10014884 <fflush>
    if (boot_components()) {
1000e6c8:	f7ff ff08 	bl	1000e4dc <boot_components>
1000e6cc:	b1f0      	cbz	r0, 1000e70c <attempt_boot+0x68>
        print_error("Failed to boot all components\n");
1000e6ce:	4822      	ldr	r0, [pc, #136]	@ (1000e758 <attempt_boot+0xb4>)
1000e6d0:	f002 fed8 	bl	10011484 <printf>
1000e6d4:	4821      	ldr	r0, [pc, #132]	@ (1000e75c <attempt_boot+0xb8>)
1000e6d6:	f005 fe01 	bl	100142dc <puts>
1000e6da:	481e      	ldr	r0, [pc, #120]	@ (1000e754 <attempt_boot+0xb0>)
1000e6dc:	f002 fed2 	bl	10011484 <printf>
1000e6e0:	6823      	ldr	r3, [r4, #0]
    // This always needs to be printed when booting
    print_info("AP>%s\n", AP_BOOT_MSG);
    print_success("Boot\n");
    // Boot
    boot();
}
1000e6e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        print_error("Failed to boot all components\n");
1000e6e6:	6898      	ldr	r0, [r3, #8]
1000e6e8:	f006 b8cc 	b.w	10014884 <fflush>
        print_error("Components could not be validated\n");
1000e6ec:	481a      	ldr	r0, [pc, #104]	@ (1000e758 <attempt_boot+0xb4>)
1000e6ee:	f002 fec9 	bl	10011484 <printf>
1000e6f2:	481b      	ldr	r0, [pc, #108]	@ (1000e760 <attempt_boot+0xbc>)
1000e6f4:	f005 fdf2 	bl	100142dc <puts>
1000e6f8:	4816      	ldr	r0, [pc, #88]	@ (1000e754 <attempt_boot+0xb0>)
1000e6fa:	f002 fec3 	bl	10011484 <printf>
1000e6fe:	4b13      	ldr	r3, [pc, #76]	@ (1000e74c <attempt_boot+0xa8>)
1000e700:	681b      	ldr	r3, [r3, #0]
}
1000e702:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        print_error("Components could not be validated\n");
1000e706:	6898      	ldr	r0, [r3, #8]
1000e708:	f006 b8bc 	b.w	10014884 <fflush>
    print_info("AP>%s\n", AP_BOOT_MSG);
1000e70c:	4815      	ldr	r0, [pc, #84]	@ (1000e764 <attempt_boot+0xc0>)
1000e70e:	f002 feb9 	bl	10011484 <printf>
1000e712:	4915      	ldr	r1, [pc, #84]	@ (1000e768 <attempt_boot+0xc4>)
1000e714:	4815      	ldr	r0, [pc, #84]	@ (1000e76c <attempt_boot+0xc8>)
1000e716:	f002 feb5 	bl	10011484 <printf>
1000e71a:	480e      	ldr	r0, [pc, #56]	@ (1000e754 <attempt_boot+0xb0>)
1000e71c:	f002 feb2 	bl	10011484 <printf>
1000e720:	6823      	ldr	r3, [r4, #0]
1000e722:	6898      	ldr	r0, [r3, #8]
1000e724:	f006 f8ae 	bl	10014884 <fflush>
    print_success("Boot\n");
1000e728:	4811      	ldr	r0, [pc, #68]	@ (1000e770 <attempt_boot+0xcc>)
1000e72a:	f002 feab 	bl	10011484 <printf>
1000e72e:	4811      	ldr	r0, [pc, #68]	@ (1000e774 <attempt_boot+0xd0>)
1000e730:	f005 fdd4 	bl	100142dc <puts>
1000e734:	4807      	ldr	r0, [pc, #28]	@ (1000e754 <attempt_boot+0xb0>)
1000e736:	f002 fea5 	bl	10011484 <printf>
1000e73a:	6823      	ldr	r3, [r4, #0]
1000e73c:	6898      	ldr	r0, [r3, #8]
1000e73e:	f006 f8a1 	bl	10014884 <fflush>
    boot();
1000e742:	f7ff ff85 	bl	1000e650 <boot>
1000e746:	bf00      	nop
1000e748:	1001e508 	.word	0x1001e508
1000e74c:	20000598 	.word	0x20000598
1000e750:	1001e5f4 	.word	0x1001e5f4
1000e754:	1001e4e4 	.word	0x1001e4e4
1000e758:	1001e530 	.word	0x1001e530
1000e75c:	1001e610 	.word	0x1001e610
1000e760:	1001e5d0 	.word	0x1001e5d0
1000e764:	1001e4cc 	.word	0x1001e4cc
1000e768:	1001e630 	.word	0x1001e630
1000e76c:	1001e638 	.word	0x1001e638
1000e770:	1001e4f4 	.word	0x1001e4f4
1000e774:	1001e640 	.word	0x1001e640

1000e778 <validate_pin>:
int validate_pin() {
1000e778:	b510      	push	{r4, lr}
1000e77a:	b082      	sub	sp, #8
    recv_input("Enter pin: ", buf, 7);
1000e77c:	4816      	ldr	r0, [pc, #88]	@ (1000e7d8 <validate_pin+0x60>)
1000e77e:	4669      	mov	r1, sp
1000e780:	2207      	movs	r2, #7
1000e782:	f000 f9b5 	bl	1000eaf0 <recv_input>
    if (!strcmp(buf, AP_PIN)) {
1000e786:	4915      	ldr	r1, [pc, #84]	@ (1000e7dc <validate_pin+0x64>)
1000e788:	4668      	mov	r0, sp
1000e78a:	f006 fea9 	bl	100154e0 <strcmp>
1000e78e:	b988      	cbnz	r0, 1000e7b4 <validate_pin+0x3c>
        print_debug("Pin Accepted!\n");
1000e790:	4604      	mov	r4, r0
1000e792:	4813      	ldr	r0, [pc, #76]	@ (1000e7e0 <validate_pin+0x68>)
1000e794:	f002 fe76 	bl	10011484 <printf>
1000e798:	4812      	ldr	r0, [pc, #72]	@ (1000e7e4 <validate_pin+0x6c>)
1000e79a:	f005 fd9f 	bl	100142dc <puts>
1000e79e:	4812      	ldr	r0, [pc, #72]	@ (1000e7e8 <validate_pin+0x70>)
1000e7a0:	f002 fe70 	bl	10011484 <printf>
1000e7a4:	4b11      	ldr	r3, [pc, #68]	@ (1000e7ec <validate_pin+0x74>)
1000e7a6:	681b      	ldr	r3, [r3, #0]
1000e7a8:	6898      	ldr	r0, [r3, #8]
1000e7aa:	f006 f86b 	bl	10014884 <fflush>
}
1000e7ae:	4620      	mov	r0, r4
1000e7b0:	b002      	add	sp, #8
1000e7b2:	bd10      	pop	{r4, pc}
    print_error("Invalid PIN!\n");
1000e7b4:	480e      	ldr	r0, [pc, #56]	@ (1000e7f0 <validate_pin+0x78>)
1000e7b6:	f002 fe65 	bl	10011484 <printf>
1000e7ba:	480e      	ldr	r0, [pc, #56]	@ (1000e7f4 <validate_pin+0x7c>)
1000e7bc:	f005 fd8e 	bl	100142dc <puts>
1000e7c0:	4809      	ldr	r0, [pc, #36]	@ (1000e7e8 <validate_pin+0x70>)
1000e7c2:	f002 fe5f 	bl	10011484 <printf>
1000e7c6:	4b09      	ldr	r3, [pc, #36]	@ (1000e7ec <validate_pin+0x74>)
1000e7c8:	681b      	ldr	r3, [r3, #0]
1000e7ca:	6898      	ldr	r0, [r3, #8]
1000e7cc:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
1000e7d0:	f006 f858 	bl	10014884 <fflush>
    return ERROR_RETURN;
1000e7d4:	e7eb      	b.n	1000e7ae <validate_pin+0x36>
1000e7d6:	bf00      	nop
1000e7d8:	1001e648 	.word	0x1001e648
1000e7dc:	1001e654 	.word	0x1001e654
1000e7e0:	1001e508 	.word	0x1001e508
1000e7e4:	1001e65c 	.word	0x1001e65c
1000e7e8:	1001e4e4 	.word	0x1001e4e4
1000e7ec:	20000598 	.word	0x20000598
1000e7f0:	1001e530 	.word	0x1001e530
1000e7f4:	1001e66c 	.word	0x1001e66c

1000e7f8 <attempt_attest>:
    print_error("Component 0x%08x is not provisioned for the system\r\n",
            component_id_out);
}

// Attest a component if the PIN is correct
void attempt_attest() {
1000e7f8:	b500      	push	{lr}
1000e7fa:	b085      	sub	sp, #20
    char buf[11];

    if (validate_pin()) {
1000e7fc:	f7ff ffbc 	bl	1000e778 <validate_pin>
1000e800:	b110      	cbz	r0, 1000e808 <attempt_attest+0x10>
    recv_input("Component ID: ", buf,11);
    sscanf(buf, "%x", &component_id);
    if (attest_component(component_id) == SUCCESS_RETURN) {
        print_success("Attest\n");
    }
}
1000e802:	b005      	add	sp, #20
1000e804:	f85d fb04 	ldr.w	pc, [sp], #4
    recv_input("Component ID: ", buf,11);
1000e808:	480f      	ldr	r0, [pc, #60]	@ (1000e848 <attempt_attest+0x50>)
1000e80a:	220b      	movs	r2, #11
1000e80c:	a901      	add	r1, sp, #4
1000e80e:	f000 f96f 	bl	1000eaf0 <recv_input>
    sscanf(buf, "%x", &component_id);
1000e812:	490e      	ldr	r1, [pc, #56]	@ (1000e84c <attempt_attest+0x54>)
1000e814:	466a      	mov	r2, sp
1000e816:	a801      	add	r0, sp, #4
1000e818:	f006 f8ea 	bl	100149f0 <sscanf>
    if (attest_component(component_id) == SUCCESS_RETURN) {
1000e81c:	9800      	ldr	r0, [sp, #0]
1000e81e:	f7ff fec1 	bl	1000e5a4 <attest_component>
1000e822:	2800      	cmp	r0, #0
1000e824:	d1ed      	bne.n	1000e802 <attempt_attest+0xa>
        print_success("Attest\n");
1000e826:	480a      	ldr	r0, [pc, #40]	@ (1000e850 <attempt_attest+0x58>)
1000e828:	f002 fe2c 	bl	10011484 <printf>
1000e82c:	4809      	ldr	r0, [pc, #36]	@ (1000e854 <attempt_attest+0x5c>)
1000e82e:	f005 fd55 	bl	100142dc <puts>
1000e832:	4809      	ldr	r0, [pc, #36]	@ (1000e858 <attempt_attest+0x60>)
1000e834:	f002 fe26 	bl	10011484 <printf>
1000e838:	4b08      	ldr	r3, [pc, #32]	@ (1000e85c <attempt_attest+0x64>)
1000e83a:	681b      	ldr	r3, [r3, #0]
1000e83c:	6898      	ldr	r0, [r3, #8]
1000e83e:	f006 f821 	bl	10014884 <fflush>
}
1000e842:	b005      	add	sp, #20
1000e844:	f85d fb04 	ldr.w	pc, [sp], #4
1000e848:	1001e67c 	.word	0x1001e67c
1000e84c:	1001e68c 	.word	0x1001e68c
1000e850:	1001e4f4 	.word	0x1001e4f4
1000e854:	1001e690 	.word	0x1001e690
1000e858:	1001e4e4 	.word	0x1001e4e4
1000e85c:	20000598 	.word	0x20000598

1000e860 <validate_token>:
int validate_token() {
1000e860:	b510      	push	{r4, lr}
1000e862:	b086      	sub	sp, #24
    recv_input("Enter token: ", buf, 17);
1000e864:	4816      	ldr	r0, [pc, #88]	@ (1000e8c0 <validate_token+0x60>)
1000e866:	a901      	add	r1, sp, #4
1000e868:	2211      	movs	r2, #17
1000e86a:	f000 f941 	bl	1000eaf0 <recv_input>
    if (!strcmp(buf, AP_TOKEN)) {
1000e86e:	4915      	ldr	r1, [pc, #84]	@ (1000e8c4 <validate_token+0x64>)
1000e870:	a801      	add	r0, sp, #4
1000e872:	f006 fe35 	bl	100154e0 <strcmp>
1000e876:	b988      	cbnz	r0, 1000e89c <validate_token+0x3c>
        print_debug("Token Accepted!\n");
1000e878:	4604      	mov	r4, r0
1000e87a:	4813      	ldr	r0, [pc, #76]	@ (1000e8c8 <validate_token+0x68>)
1000e87c:	f002 fe02 	bl	10011484 <printf>
1000e880:	4812      	ldr	r0, [pc, #72]	@ (1000e8cc <validate_token+0x6c>)
1000e882:	f005 fd2b 	bl	100142dc <puts>
1000e886:	4812      	ldr	r0, [pc, #72]	@ (1000e8d0 <validate_token+0x70>)
1000e888:	f002 fdfc 	bl	10011484 <printf>
1000e88c:	4b11      	ldr	r3, [pc, #68]	@ (1000e8d4 <validate_token+0x74>)
1000e88e:	681b      	ldr	r3, [r3, #0]
1000e890:	6898      	ldr	r0, [r3, #8]
1000e892:	f005 fff7 	bl	10014884 <fflush>
}
1000e896:	4620      	mov	r0, r4
1000e898:	b006      	add	sp, #24
1000e89a:	bd10      	pop	{r4, pc}
    print_error("Invalid Token!\n");
1000e89c:	480e      	ldr	r0, [pc, #56]	@ (1000e8d8 <validate_token+0x78>)
1000e89e:	f002 fdf1 	bl	10011484 <printf>
1000e8a2:	480e      	ldr	r0, [pc, #56]	@ (1000e8dc <validate_token+0x7c>)
1000e8a4:	f005 fd1a 	bl	100142dc <puts>
1000e8a8:	4809      	ldr	r0, [pc, #36]	@ (1000e8d0 <validate_token+0x70>)
1000e8aa:	f002 fdeb 	bl	10011484 <printf>
1000e8ae:	4b09      	ldr	r3, [pc, #36]	@ (1000e8d4 <validate_token+0x74>)
1000e8b0:	681b      	ldr	r3, [r3, #0]
1000e8b2:	6898      	ldr	r0, [r3, #8]
1000e8b4:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
1000e8b8:	f005 ffe4 	bl	10014884 <fflush>
    return ERROR_RETURN;
1000e8bc:	e7eb      	b.n	1000e896 <validate_token+0x36>
1000e8be:	bf00      	nop
1000e8c0:	1001e698 	.word	0x1001e698
1000e8c4:	1001e6a8 	.word	0x1001e6a8
1000e8c8:	1001e508 	.word	0x1001e508
1000e8cc:	1001e6bc 	.word	0x1001e6bc
1000e8d0:	1001e4e4 	.word	0x1001e4e4
1000e8d4:	20000598 	.word	0x20000598
1000e8d8:	1001e530 	.word	0x1001e530
1000e8dc:	1001e6cc 	.word	0x1001e6cc

1000e8e0 <attempt_replace>:
void attempt_replace() {
1000e8e0:	b570      	push	{r4, r5, r6, lr}
1000e8e2:	b086      	sub	sp, #24
    if (validate_token()) {
1000e8e4:	f7ff ffbc 	bl	1000e860 <validate_token>
1000e8e8:	b108      	cbz	r0, 1000e8ee <attempt_replace+0xe>
}
1000e8ea:	b006      	add	sp, #24
1000e8ec:	bd70      	pop	{r4, r5, r6, pc}
    uint32_t component_id_in = 0;
1000e8ee:	4604      	mov	r4, r0
    recv_input("Component ID In: ", buf, 11);
1000e8f0:	220b      	movs	r2, #11
1000e8f2:	4830      	ldr	r0, [pc, #192]	@ (1000e9b4 <attempt_replace+0xd4>)
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e8f4:	4e30      	ldr	r6, [pc, #192]	@ (1000e9b8 <attempt_replace+0xd8>)
    recv_input("Component ID In: ", buf, 11);
1000e8f6:	a903      	add	r1, sp, #12
    uint32_t component_id_out = 0;
1000e8f8:	e9cd 4401 	strd	r4, r4, [sp, #4]
    recv_input("Component ID In: ", buf, 11);
1000e8fc:	f000 f8f8 	bl	1000eaf0 <recv_input>
    sscanf(buf, "%x", &component_id_in);
1000e900:	492e      	ldr	r1, [pc, #184]	@ (1000e9bc <attempt_replace+0xdc>)
1000e902:	aa01      	add	r2, sp, #4
1000e904:	a803      	add	r0, sp, #12
1000e906:	f006 f873 	bl	100149f0 <sscanf>
    recv_input("Component ID Out: ", buf, 11);
1000e90a:	482d      	ldr	r0, [pc, #180]	@ (1000e9c0 <attempt_replace+0xe0>)
1000e90c:	220b      	movs	r2, #11
1000e90e:	a903      	add	r1, sp, #12
1000e910:	f000 f8ee 	bl	1000eaf0 <recv_input>
    sscanf(buf, "%x", &component_id_out);
1000e914:	4929      	ldr	r1, [pc, #164]	@ (1000e9bc <attempt_replace+0xdc>)
1000e916:	aa02      	add	r2, sp, #8
1000e918:	a803      	add	r0, sp, #12
1000e91a:	f006 f869 	bl	100149f0 <sscanf>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e91e:	6871      	ldr	r1, [r6, #4]
1000e920:	2900      	cmp	r1, #0
1000e922:	d035      	beq.n	1000e990 <attempt_replace+0xb0>
        if (flash_status.component_ids[i] == component_id_out) {
1000e924:	9d02      	ldr	r5, [sp, #8]
1000e926:	1d33      	adds	r3, r6, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e928:	4620      	mov	r0, r4
1000e92a:	e002      	b.n	1000e932 <attempt_replace+0x52>
1000e92c:	3001      	adds	r0, #1
1000e92e:	4288      	cmp	r0, r1
1000e930:	d02e      	beq.n	1000e990 <attempt_replace+0xb0>
        if (flash_status.component_ids[i] == component_id_out) {
1000e932:	f853 2f04 	ldr.w	r2, [r3, #4]!
1000e936:	42aa      	cmp	r2, r5
1000e938:	d1f8      	bne.n	1000e92c <attempt_replace+0x4c>
            flash_status.component_ids[i] = component_id_in;
1000e93a:	1c83      	adds	r3, r0, #2
1000e93c:	9a01      	ldr	r2, [sp, #4]
            flash_simple_erase_page(FLASH_ADDR);
1000e93e:	4821      	ldr	r0, [pc, #132]	@ (1000e9c4 <attempt_replace+0xe4>)
            flash_status.component_ids[i] = component_id_in;
1000e940:	f846 2023 	str.w	r2, [r6, r3, lsl #2]
            flash_simple_erase_page(FLASH_ADDR);
1000e944:	f000 f936 	bl	1000ebb4 <flash_simple_erase_page>
            flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e948:	491b      	ldr	r1, [pc, #108]	@ (1000e9b8 <attempt_replace+0xd8>)
1000e94a:	481e      	ldr	r0, [pc, #120]	@ (1000e9c4 <attempt_replace+0xe4>)
            print_debug("Replaced 0x%08x with 0x%08x\n", component_id_out,
1000e94c:	4c1e      	ldr	r4, [pc, #120]	@ (1000e9c8 <attempt_replace+0xe8>)
            flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e94e:	2288      	movs	r2, #136	@ 0x88
1000e950:	f000 f934 	bl	1000ebbc <flash_simple_write>
            print_debug("Replaced 0x%08x with 0x%08x\n", component_id_out,
1000e954:	481d      	ldr	r0, [pc, #116]	@ (1000e9cc <attempt_replace+0xec>)
1000e956:	f002 fd95 	bl	10011484 <printf>
1000e95a:	e9dd 2101 	ldrd	r2, r1, [sp, #4]
1000e95e:	481c      	ldr	r0, [pc, #112]	@ (1000e9d0 <attempt_replace+0xf0>)
1000e960:	f002 fd90 	bl	10011484 <printf>
1000e964:	481b      	ldr	r0, [pc, #108]	@ (1000e9d4 <attempt_replace+0xf4>)
1000e966:	f002 fd8d 	bl	10011484 <printf>
1000e96a:	6823      	ldr	r3, [r4, #0]
1000e96c:	6898      	ldr	r0, [r3, #8]
1000e96e:	f005 ff89 	bl	10014884 <fflush>
            print_success("Replace\n");
1000e972:	4819      	ldr	r0, [pc, #100]	@ (1000e9d8 <attempt_replace+0xf8>)
1000e974:	f002 fd86 	bl	10011484 <printf>
1000e978:	4818      	ldr	r0, [pc, #96]	@ (1000e9dc <attempt_replace+0xfc>)
1000e97a:	f005 fcaf 	bl	100142dc <puts>
1000e97e:	4815      	ldr	r0, [pc, #84]	@ (1000e9d4 <attempt_replace+0xf4>)
1000e980:	f002 fd80 	bl	10011484 <printf>
1000e984:	6823      	ldr	r3, [r4, #0]
1000e986:	6898      	ldr	r0, [r3, #8]
1000e988:	f005 ff7c 	bl	10014884 <fflush>
}
1000e98c:	b006      	add	sp, #24
1000e98e:	bd70      	pop	{r4, r5, r6, pc}
    print_error("Component 0x%08x is not provisioned for the system\r\n",
1000e990:	4813      	ldr	r0, [pc, #76]	@ (1000e9e0 <attempt_replace+0x100>)
1000e992:	f002 fd77 	bl	10011484 <printf>
1000e996:	9902      	ldr	r1, [sp, #8]
1000e998:	4812      	ldr	r0, [pc, #72]	@ (1000e9e4 <attempt_replace+0x104>)
1000e99a:	f002 fd73 	bl	10011484 <printf>
1000e99e:	480d      	ldr	r0, [pc, #52]	@ (1000e9d4 <attempt_replace+0xf4>)
1000e9a0:	f002 fd70 	bl	10011484 <printf>
1000e9a4:	4b08      	ldr	r3, [pc, #32]	@ (1000e9c8 <attempt_replace+0xe8>)
1000e9a6:	681b      	ldr	r3, [r3, #0]
1000e9a8:	6898      	ldr	r0, [r3, #8]
1000e9aa:	f005 ff6b 	bl	10014884 <fflush>
}
1000e9ae:	b006      	add	sp, #24
1000e9b0:	bd70      	pop	{r4, r5, r6, pc}
1000e9b2:	bf00      	nop
1000e9b4:	1001e6dc 	.word	0x1001e6dc
1000e9b8:	20000c20 	.word	0x20000c20
1000e9bc:	1001e68c 	.word	0x1001e68c
1000e9c0:	1001e6f0 	.word	0x1001e6f0
1000e9c4:	1007c000 	.word	0x1007c000
1000e9c8:	20000598 	.word	0x20000598
1000e9cc:	1001e508 	.word	0x1001e508
1000e9d0:	1001e704 	.word	0x1001e704
1000e9d4:	1001e4e4 	.word	0x1001e4e4
1000e9d8:	1001e4f4 	.word	0x1001e4f4
1000e9dc:	1001e724 	.word	0x1001e724
1000e9e0:	1001e530 	.word	0x1001e530
1000e9e4:	1001e72c 	.word	0x1001e72c

1000e9e8 <main>:
    const char *name;
    void (*function)();
} Command;


int main() {
1000e9e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000e9ec:	b08a      	sub	sp, #40	@ 0x28
    // Initialize board
    init();
1000e9ee:	f7ff fcd7 	bl	1000e3a0 <init>
            {"boot", attempt_boot},
            {"replace", attempt_replace},
            {"attest", attempt_attest}
        };

        recv_input("Enter Command: ", buf, 8);
1000e9f2:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 1000ea58 <main+0x70>

        // Remove newline character from input
        buf[strcspn(buf, "\n")] = '\0';
1000e9f6:	4f19      	ldr	r7, [pc, #100]	@ (1000ea5c <main+0x74>)
1000e9f8:	ae02      	add	r6, sp, #8
        Command commands[] = 
1000e9fa:	4d19      	ldr	r5, [pc, #100]	@ (1000ea60 <main+0x78>)
1000e9fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1000e9fe:	4634      	mov	r4, r6
1000ea00:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1000ea02:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1000ea06:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
        recv_input("Enter Command: ", buf, 8);
1000ea0a:	2208      	movs	r2, #8
1000ea0c:	4669      	mov	r1, sp
1000ea0e:	4640      	mov	r0, r8
1000ea10:	f000 f86e 	bl	1000eaf0 <recv_input>
        buf[strcspn(buf, "\n")] = '\0';
1000ea14:	4639      	mov	r1, r7
1000ea16:	4668      	mov	r0, sp
1000ea18:	f006 fc6c 	bl	100152f4 <strcspn>
1000ea1c:	f100 0328 	add.w	r3, r0, #40	@ 0x28
1000ea20:	eb0d 0003 	add.w	r0, sp, r3
1000ea24:	2400      	movs	r4, #0
1000ea26:	f800 4c28 	strb.w	r4, [r0, #-40]

        // Execute requested command
        for (int i = 0; i < sizeof(commands) / sizeof(commands[0]); i++)
            {
                if (!strcmp(buf, commands[i].name)) 
1000ea2a:	f856 1034 	ldr.w	r1, [r6, r4, lsl #3]
1000ea2e:	4668      	mov	r0, sp
1000ea30:	f006 fd56 	bl	100154e0 <strcmp>
1000ea34:	b148      	cbz	r0, 1000ea4a <main+0x62>
        for (int i = 0; i < sizeof(commands) / sizeof(commands[0]); i++)
1000ea36:	3401      	adds	r4, #1
1000ea38:	2c04      	cmp	r4, #4
1000ea3a:	d0de      	beq.n	1000e9fa <main+0x12>
                if (!strcmp(buf, commands[i].name)) 
1000ea3c:	f856 1034 	ldr.w	r1, [r6, r4, lsl #3]
1000ea40:	4668      	mov	r0, sp
1000ea42:	f006 fd4d 	bl	100154e0 <strcmp>
1000ea46:	2800      	cmp	r0, #0
1000ea48:	d1f5      	bne.n	1000ea36 <main+0x4e>
                {
                    commands[i].function();
1000ea4a:	ab0a      	add	r3, sp, #40	@ 0x28
1000ea4c:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
1000ea50:	f854 3c1c 	ldr.w	r3, [r4, #-28]
1000ea54:	4798      	blx	r3
                    break;
1000ea56:	e7d0      	b.n	1000e9fa <main+0x12>
1000ea58:	1001e764 	.word	0x1001e764
1000ea5c:	1001e578 	.word	0x1001e578
1000ea60:	1001e78c 	.word	0x1001e78c

1000ea64 <board_link_init>:
 * @brief Initialize the board link connection
 * 
 * Initiailize the underlying i2c simple interface
*/
void board_link_init(void) {
    i2c_simple_controller_init();
1000ea64:	f000 b8b6 	b.w	1000ebd4 <i2c_simple_controller_init>

1000ea68 <component_id_to_i2c_addr>:
 * 
 * @return i2c_addr_t, i2c address
*/
i2c_addr_t component_id_to_i2c_addr(uint32_t component_id) {
    return (uint8_t) component_id & COMPONENT_ADDR_MASK;
}
1000ea68:	b2c0      	uxtb	r0, r0
1000ea6a:	4770      	bx	lr

1000ea6c <send_packet>:
 * 
 * @return status: SUCCESS_RETURN if success, ERROR_RETURN if error
 *
 * Function sends an arbitrary packet over i2c to a specified component
*/
int send_packet(i2c_addr_t address, uint8_t len, uint8_t* packet) {
1000ea6c:	b570      	push	{r4, r5, r6, lr}
1000ea6e:	4604      	mov	r4, r0
1000ea70:	460d      	mov	r5, r1
1000ea72:	4616      	mov	r6, r2

    int result;
    result = i2c_simple_write_receive_len(address, len);
1000ea74:	f000 f932 	bl	1000ecdc <i2c_simple_write_receive_len>
    if (result < SUCCESS_RETURN) {
1000ea78:	2800      	cmp	r0, #0
1000ea7a:	db0d      	blt.n	1000ea98 <send_packet+0x2c>
        return ERROR_RETURN;
    }
    result = i2c_simple_write_data_generic(address, RECEIVE, len, packet);
1000ea7c:	4633      	mov	r3, r6
1000ea7e:	462a      	mov	r2, r5
1000ea80:	2100      	movs	r1, #0
1000ea82:	4620      	mov	r0, r4
1000ea84:	f000 f978 	bl	1000ed78 <i2c_simple_write_data_generic>
    if (result < SUCCESS_RETURN) {
1000ea88:	2800      	cmp	r0, #0
1000ea8a:	db05      	blt.n	1000ea98 <send_packet+0x2c>
        return ERROR_RETURN;
    }
    result = i2c_simple_write_receive_done(address, true);
1000ea8c:	2101      	movs	r1, #1
1000ea8e:	4620      	mov	r0, r4
1000ea90:	f000 f908 	bl	1000eca4 <i2c_simple_write_receive_done>
    if (result < SUCCESS_RETURN) {
1000ea94:	17c0      	asrs	r0, r0, #31
        return ERROR_RETURN;
    }

    return SUCCESS_RETURN;
}
1000ea96:	bd70      	pop	{r4, r5, r6, pc}
        return ERROR_RETURN;
1000ea98:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000ea9c:	bd70      	pop	{r4, r5, r6, pc}
1000ea9e:	bf00      	nop

1000eaa0 <poll_and_receive_packet>:
 * @param address: i2c_addr_t, i2c address
 * @param packet: uint8_t*, pointer to a buffer where a packet will be received 
 * 
 * @return int: size of data received, ERROR_RETURN if error
*/
int poll_and_receive_packet(i2c_addr_t address, uint8_t* packet) {
1000eaa0:	b570      	push	{r4, r5, r6, lr}
1000eaa2:	4604      	mov	r4, r0
1000eaa4:	460e      	mov	r6, r1

    int result = SUCCESS_RETURN;
1000eaa6:	e002      	b.n	1000eaae <poll_and_receive_packet+0xe>
    while (true) {
        result = i2c_simple_read_transmit_done(address);
        if (result < SUCCESS_RETURN) {
            return ERROR_RETURN;
        }
        else if (result == SUCCESS_RETURN) {
1000eaa8:	d00c      	beq.n	1000eac4 <poll_and_receive_packet+0x24>
            break;
        }
        MXC_Delay(50);
1000eaaa:	f000 fc73 	bl	1000f394 <MXC_Delay>
        result = i2c_simple_read_transmit_done(address);
1000eaae:	4620      	mov	r0, r4
1000eab0:	f000 f8b4 	bl	1000ec1c <i2c_simple_read_transmit_done>
        if (result < SUCCESS_RETURN) {
1000eab4:	2800      	cmp	r0, #0
        MXC_Delay(50);
1000eab6:	f04f 0032 	mov.w	r0, #50	@ 0x32
        if (result < SUCCESS_RETURN) {
1000eaba:	daf5      	bge.n	1000eaa8 <poll_and_receive_packet+0x8>
            return ERROR_RETURN;
1000eabc:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
    if (result < SUCCESS_RETURN) {
        return ERROR_RETURN;
    }

    return len;
}
1000eac0:	4628      	mov	r0, r5
1000eac2:	bd70      	pop	{r4, r5, r6, pc}
    int len = i2c_simple_read_transmit_len(address);
1000eac4:	4620      	mov	r0, r4
1000eac6:	f000 f8cb 	bl	1000ec60 <i2c_simple_read_transmit_len>
    if (len < SUCCESS_RETURN) {
1000eaca:	1e05      	subs	r5, r0, #0
1000eacc:	dbf6      	blt.n	1000eabc <poll_and_receive_packet+0x1c>
    result = i2c_simple_read_data_generic(address, TRANSMIT, (uint8_t)len, packet);
1000eace:	4633      	mov	r3, r6
1000ead0:	b2ea      	uxtb	r2, r5
1000ead2:	2103      	movs	r1, #3
1000ead4:	4620      	mov	r0, r4
1000ead6:	f000 f937 	bl	1000ed48 <i2c_simple_read_data_generic>
    if (result < SUCCESS_RETURN) {
1000eada:	2800      	cmp	r0, #0
1000eadc:	dbee      	blt.n	1000eabc <poll_and_receive_packet+0x1c>
    result = i2c_simple_write_transmit_done(address, true);
1000eade:	2101      	movs	r1, #1
1000eae0:	4620      	mov	r0, r4
1000eae2:	f000 f915 	bl	1000ed10 <i2c_simple_write_transmit_done>
    if (result < SUCCESS_RETURN) {
1000eae6:	2800      	cmp	r0, #0
1000eae8:	dbe8      	blt.n	1000eabc <poll_and_receive_packet+0x1c>
}
1000eaea:	4628      	mov	r0, r5
1000eaec:	bd70      	pop	{r4, r5, r6, pc}
1000eaee:	bf00      	nop

1000eaf0 <recv_input>:

#include "host_messaging.h"

// Print a message through USB UART and then receive a line over USB UART
// size of buf has to be precised everywhere the recv_input fonction is called
void recv_input(const char *msg, char *buf, size_t n) {
1000eaf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000eaf2:	4607      	mov	r7, r0
    print_debug(msg);
1000eaf4:	4812      	ldr	r0, [pc, #72]	@ (1000eb40 <recv_input+0x50>)
1000eaf6:	4e13      	ldr	r6, [pc, #76]	@ (1000eb44 <recv_input+0x54>)
void recv_input(const char *msg, char *buf, size_t n) {
1000eaf8:	460c      	mov	r4, r1
1000eafa:	4615      	mov	r5, r2
    print_debug(msg);
1000eafc:	f002 fcc2 	bl	10011484 <printf>
1000eb00:	4638      	mov	r0, r7
1000eb02:	f002 fcbf 	bl	10011484 <printf>
1000eb06:	4810      	ldr	r0, [pc, #64]	@ (1000eb48 <recv_input+0x58>)
1000eb08:	f002 fcbc 	bl	10011484 <printf>
1000eb0c:	6833      	ldr	r3, [r6, #0]
1000eb0e:	6898      	ldr	r0, [r3, #8]
1000eb10:	f005 feb8 	bl	10014884 <fflush>
    fflush(0);
1000eb14:	2000      	movs	r0, #0
1000eb16:	f005 feb5 	bl	10014884 <fflush>
    print_ack();
1000eb1a:	480c      	ldr	r0, [pc, #48]	@ (1000eb4c <recv_input+0x5c>)
1000eb1c:	f002 fcb2 	bl	10011484 <printf>
1000eb20:	6833      	ldr	r3, [r6, #0]
1000eb22:	6898      	ldr	r0, [r3, #8]
1000eb24:	f005 feae 	bl	10014884 <fflush>
    fgets(buf, n , stdin);
1000eb28:	6833      	ldr	r3, [r6, #0]
1000eb2a:	4629      	mov	r1, r5
1000eb2c:	685a      	ldr	r2, [r3, #4]
1000eb2e:	4620      	mov	r0, r4
1000eb30:	f005 ff52 	bl	100149d8 <fgets>
    puts("");
}
1000eb34:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    puts("");
1000eb38:	4805      	ldr	r0, [pc, #20]	@ (1000eb50 <recv_input+0x60>)
1000eb3a:	f005 bbcf 	b.w	100142dc <puts>
1000eb3e:	bf00      	nop
1000eb40:	1001e508 	.word	0x1001e508
1000eb44:	20000598 	.word	0x20000598
1000eb48:	1001e4e4 	.word	0x1001e4e4
1000eb4c:	1001e7ac 	.word	0x1001e7ac
1000eb50:	1001e760 	.word	0x1001e760

1000eb54 <flash_simple_irq>:
 * 
 * This ISR allows for access to the flash through simple_flash to operate
 */
void flash_simple_irq(void) {
    uint32_t temp;
    temp = MXC_FLC0->intr;
1000eb54:	4a09      	ldr	r2, [pc, #36]	@ (1000eb7c <flash_simple_irq+0x28>)
1000eb56:	6a53      	ldr	r3, [r2, #36]	@ 0x24

    if (temp & MXC_F_FLC_INTR_DONE) {
1000eb58:	07d9      	lsls	r1, r3, #31
1000eb5a:	d503      	bpl.n	1000eb64 <flash_simple_irq+0x10>
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_DONE;
1000eb5c:	6a51      	ldr	r1, [r2, #36]	@ 0x24
1000eb5e:	f021 0101 	bic.w	r1, r1, #1
1000eb62:	6251      	str	r1, [r2, #36]	@ 0x24
    }

    if (temp & MXC_F_FLC_INTR_AF) {
1000eb64:	079b      	lsls	r3, r3, #30
1000eb66:	d400      	bmi.n	1000eb6a <flash_simple_irq+0x16>
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
        printf(" -> Interrupt! (Flash access failure)\n\n");
    }
}
1000eb68:	4770      	bx	lr
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
1000eb6a:	4a04      	ldr	r2, [pc, #16]	@ (1000eb7c <flash_simple_irq+0x28>)
        printf(" -> Interrupt! (Flash access failure)\n\n");
1000eb6c:	4804      	ldr	r0, [pc, #16]	@ (1000eb80 <flash_simple_irq+0x2c>)
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
1000eb6e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
1000eb70:	f023 0302 	bic.w	r3, r3, #2
1000eb74:	6253      	str	r3, [r2, #36]	@ 0x24
        printf(" -> Interrupt! (Flash access failure)\n\n");
1000eb76:	f005 bbb1 	b.w	100142dc <puts>
1000eb7a:	bf00      	nop
1000eb7c:	40029000 	.word	0x40029000
1000eb80:	1001e7b8 	.word	0x1001e7b8

1000eb84 <flash_simple_init>:
 * @brief Initialize the Simple Flash Interface
 * 
 * This function registers the interrupt for the flash system,
 * enables the interrupt, and disables ICC
*/
void flash_simple_init(void) {
1000eb84:	b508      	push	{r3, lr}
    // Setup Flash
    MXC_NVIC_SetVector(FLC0_IRQn, flash_simple_irq);
1000eb86:	4908      	ldr	r1, [pc, #32]	@ (1000eba8 <flash_simple_init+0x24>)
1000eb88:	2017      	movs	r0, #23
1000eb8a:	f000 fc3d 	bl	1000f408 <MXC_NVIC_SetVector>
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000eb8e:	4b07      	ldr	r3, [pc, #28]	@ (1000ebac <flash_simple_init+0x28>)
1000eb90:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
1000eb94:	601a      	str	r2, [r3, #0]
    NVIC_EnableIRQ(FLC0_IRQn);
    MXC_FLC_EnableInt(MXC_F_FLC_INTR_DONEIE | MXC_F_FLC_INTR_AFIE);
1000eb96:	f44f 7040 	mov.w	r0, #768	@ 0x300
1000eb9a:	f000 fd81 	bl	1000f6a0 <MXC_FLC_EnableInt>
    MXC_ICC_Disable(MXC_ICC0);
}
1000eb9e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    MXC_ICC_Disable(MXC_ICC0);
1000eba2:	4803      	ldr	r0, [pc, #12]	@ (1000ebb0 <flash_simple_init+0x2c>)
1000eba4:	f001 be22 	b.w	100107ec <MXC_ICC_Disable>
1000eba8:	1000eb55 	.word	0x1000eb55
1000ebac:	e000e100 	.word	0xe000e100
1000ebb0:	4002a000 	.word	0x4002a000

1000ebb4 <flash_simple_erase_page>:
 * Flash memory can only be erased in a large block size called a page.
 * Once erased, memory can only be written one way e.g. 1->0.
 * In order to be re-written the entire page must be erased.
*/
int flash_simple_erase_page(uint32_t address) {
    return MXC_FLC_PageErase(address);
1000ebb4:	f016 bfb0 	b.w	10025b18 <__MXC_FLC_PageErase_veneer>

1000ebb8 <flash_simple_read>:
 * 
 * This function reads data from the specified flash page into the buffer
 * with the specified amount of bytes
*/
void flash_simple_read(uint32_t address, uint32_t* buffer, uint32_t size) {
    MXC_FLC_Read(address, buffer, size);
1000ebb8:	f000 bd70 	b.w	1000f69c <MXC_FLC_Read>

1000ebbc <flash_simple_write>:
 * This function writes data to the specified flash page from the buffer passed
 * with the specified amount of bytes. Flash memory can only be written in one
 * way e.g. 1->0. To rewrite previously written memory see the 
 * flash_simple_erase_page documentation.
*/
int flash_simple_write(uint32_t address, uint32_t* buffer, uint32_t size) {
1000ebbc:	460b      	mov	r3, r1
    return MXC_FLC_Write(address, size, buffer);
1000ebbe:	4611      	mov	r1, r2
1000ebc0:	461a      	mov	r2, r3
1000ebc2:	f000 bd69 	b.w	1000f698 <MXC_FLC_Write>
1000ebc6:	bf00      	nop

1000ebc8 <I2C_Handler>:
 * @brief Built-In I2C Interrupt Handler
 *
 * Utilize the built-in I2C interrupt handler to allow for the use
 * of MXC_I2C_Master_Transaction() function calls
 */
static void I2C_Handler(void) { MXC_I2C_AsyncHandler(I2C_INTERFACE); }
1000ebc8:	4801      	ldr	r0, [pc, #4]	@ (1000ebd0 <I2C_Handler+0x8>)
1000ebca:	f000 bfcd 	b.w	1000fb68 <MXC_I2C_AsyncHandler>
1000ebce:	bf00      	nop
1000ebd0:	4001e000 	.word	0x4001e000

1000ebd4 <i2c_simple_controller_init>:
 * @brief Initialize the I2C Connection
 * 
 * Initialize the I2C by enabling the module, setting the correct
 * frequency, and enabling the interrupt to our I2C_Handler
*/
int i2c_simple_controller_init(void) {
1000ebd4:	b510      	push	{r4, lr}
    int error;

    // Initialize the I2C Interface
    error = MXC_I2C_Init(I2C_INTERFACE, true, 0);
1000ebd6:	480c      	ldr	r0, [pc, #48]	@ (1000ec08 <i2c_simple_controller_init+0x34>)
1000ebd8:	2200      	movs	r2, #0
1000ebda:	2101      	movs	r1, #1
1000ebdc:	f000 ff60 	bl	1000faa0 <MXC_I2C_Init>
    if (error != E_NO_ERROR) {
1000ebe0:	4604      	mov	r4, r0
1000ebe2:	b960      	cbnz	r0, 1000ebfe <i2c_simple_controller_init+0x2a>
        printf("Failed to initialize I2C.\n");
        return error;
    }
    // Set frequency to frequency macro
    MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_FREQ);
1000ebe4:	4909      	ldr	r1, [pc, #36]	@ (1000ec0c <i2c_simple_controller_init+0x38>)
1000ebe6:	4808      	ldr	r0, [pc, #32]	@ (1000ec08 <i2c_simple_controller_init+0x34>)
1000ebe8:	f000 ffa4 	bl	1000fb34 <MXC_I2C_SetFrequency>
    
    // Set up interrupt
    MXC_NVIC_SetVector(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)), I2C_Handler);
1000ebec:	4908      	ldr	r1, [pc, #32]	@ (1000ec10 <i2c_simple_controller_init+0x3c>)
1000ebee:	2024      	movs	r0, #36	@ 0x24
1000ebf0:	f000 fc0a 	bl	1000f408 <MXC_NVIC_SetVector>
1000ebf4:	4b07      	ldr	r3, [pc, #28]	@ (1000ec14 <i2c_simple_controller_init+0x40>)
1000ebf6:	2210      	movs	r2, #16
1000ebf8:	605a      	str	r2, [r3, #4]
    NVIC_EnableIRQ(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)));

    return E_NO_ERROR;
}
1000ebfa:	4620      	mov	r0, r4
1000ebfc:	bd10      	pop	{r4, pc}
        printf("Failed to initialize I2C.\n");
1000ebfe:	4806      	ldr	r0, [pc, #24]	@ (1000ec18 <i2c_simple_controller_init+0x44>)
1000ec00:	f005 fb6c 	bl	100142dc <puts>
}
1000ec04:	4620      	mov	r0, r4
1000ec06:	bd10      	pop	{r4, pc}
1000ec08:	4001e000 	.word	0x4001e000
1000ec0c:	000186a0 	.word	0x000186a0
1000ec10:	1000ebc9 	.word	0x1000ebc9
1000ec14:	e000e100 	.word	0xe000e100
1000ec18:	1001e7e0 	.word	0x1001e7e0

1000ec1c <i2c_simple_read_transmit_done>:
 * @return int: TRANSMIT_DONE value, negative if error
 *
 * Read the TRANSMIT_DONE for an I2C peripheral
 * and return the value 
*/
int i2c_simple_read_transmit_done(i2c_addr_t addr) {
1000ec1c:	b510      	push	{r4, lr}
*/
int i2c_simple_read_status_generic(i2c_addr_t addr, ECTF_I2C_REGS reg) {
    uint8_t value = 0;

    mxc_i2c_req_t request;
    request.i2c = I2C_INTERFACE;
1000ec1e:	490f      	ldr	r1, [pc, #60]	@ (1000ec5c <i2c_simple_read_transmit_done+0x40>)
int i2c_simple_read_transmit_done(i2c_addr_t addr) {
1000ec20:	b08a      	sub	sp, #40	@ 0x28
1000ec22:	2404      	movs	r4, #4
    request.addr = addr;
1000ec24:	e9cd 1002 	strd	r1, r0, [sp, #8]
    uint8_t value = 0;
1000ec28:	2300      	movs	r3, #0
    request.tx_len = 1;
1000ec2a:	2201      	movs	r2, #1
1000ec2c:	f88d 4006 	strb.w	r4, [sp, #6]
    request.tx_buf = (uint8_t*)&reg;
    request.rx_len = 1;
    request.rx_buf = (uint8_t*)&value;
1000ec30:	f10d 0107 	add.w	r1, sp, #7
    request.tx_buf = (uint8_t*)&reg;
1000ec34:	f10d 0406 	add.w	r4, sp, #6
    request.restart = 0;
    request.callback = NULL;

    int result = MXC_I2C_MasterTransaction(&request);
1000ec38:	a802      	add	r0, sp, #8
    request.tx_buf = (uint8_t*)&reg;
1000ec3a:	e9cd 4204 	strd	r4, r2, [sp, #16]
    request.rx_buf = (uint8_t*)&value;
1000ec3e:	e9cd 1206 	strd	r1, r2, [sp, #24]
    request.callback = NULL;
1000ec42:	e9cd 3308 	strd	r3, r3, [sp, #32]
    uint8_t value = 0;
1000ec46:	f88d 3007 	strb.w	r3, [sp, #7]
    int result = MXC_I2C_MasterTransaction(&request);
1000ec4a:	f000 ff87 	bl	1000fb5c <MXC_I2C_MasterTransaction>
    if (result < 0) {
1000ec4e:	2800      	cmp	r0, #0
        return result;
    }
    return value;
1000ec50:	bfa8      	it	ge
1000ec52:	f89d 0007 	ldrbge.w	r0, [sp, #7]
}
1000ec56:	b00a      	add	sp, #40	@ 0x28
1000ec58:	bd10      	pop	{r4, pc}
1000ec5a:	bf00      	nop
1000ec5c:	4001e000 	.word	0x4001e000

1000ec60 <i2c_simple_read_transmit_len>:
int i2c_simple_read_transmit_len(i2c_addr_t addr) {
1000ec60:	b510      	push	{r4, lr}
    request.i2c = I2C_INTERFACE;
1000ec62:	490f      	ldr	r1, [pc, #60]	@ (1000eca0 <i2c_simple_read_transmit_len+0x40>)
int i2c_simple_read_transmit_len(i2c_addr_t addr) {
1000ec64:	b08a      	sub	sp, #40	@ 0x28
1000ec66:	2405      	movs	r4, #5
    request.addr = addr;
1000ec68:	e9cd 1002 	strd	r1, r0, [sp, #8]
    uint8_t value = 0;
1000ec6c:	2300      	movs	r3, #0
    request.tx_len = 1;
1000ec6e:	2201      	movs	r2, #1
1000ec70:	f88d 4006 	strb.w	r4, [sp, #6]
    request.rx_buf = (uint8_t*)&value;
1000ec74:	f10d 0107 	add.w	r1, sp, #7
    request.tx_buf = (uint8_t*)&reg;
1000ec78:	f10d 0406 	add.w	r4, sp, #6
    int result = MXC_I2C_MasterTransaction(&request);
1000ec7c:	a802      	add	r0, sp, #8
    request.tx_buf = (uint8_t*)&reg;
1000ec7e:	e9cd 4204 	strd	r4, r2, [sp, #16]
    request.rx_buf = (uint8_t*)&value;
1000ec82:	e9cd 1206 	strd	r1, r2, [sp, #24]
    request.callback = NULL;
1000ec86:	e9cd 3308 	strd	r3, r3, [sp, #32]
    uint8_t value = 0;
1000ec8a:	f88d 3007 	strb.w	r3, [sp, #7]
    int result = MXC_I2C_MasterTransaction(&request);
1000ec8e:	f000 ff65 	bl	1000fb5c <MXC_I2C_MasterTransaction>
    if (result < 0) {
1000ec92:	2800      	cmp	r0, #0
    return value;
1000ec94:	bfa8      	it	ge
1000ec96:	f89d 0007 	ldrbge.w	r0, [sp, #7]
}
1000ec9a:	b00a      	add	sp, #40	@ 0x28
1000ec9c:	bd10      	pop	{r4, pc}
1000ec9e:	bf00      	nop
1000eca0:	4001e000 	.word	0x4001e000

1000eca4 <i2c_simple_write_receive_done>:
int i2c_simple_write_receive_done(i2c_addr_t addr, bool done) {
1000eca4:	b530      	push	{r4, r5, lr}
1000eca6:	b08b      	sub	sp, #44	@ 0x2c
1000eca8:	4605      	mov	r5, r0
    uint8_t packet[2];
    packet[0] = (uint8_t) reg;
    packet[1] = value;
    
    mxc_i2c_req_t request;
    request.i2c = I2C_INTERFACE;
1000ecaa:	4a0b      	ldr	r2, [pc, #44]	@ (1000ecd8 <i2c_simple_write_receive_done+0x34>)
1000ecac:	9202      	str	r2, [sp, #8]
    packet[0] = (uint8_t) reg;
1000ecae:	2001      	movs	r0, #1
    request.addr = addr;
    request.tx_len = 2;
    request.tx_buf = packet;
    request.rx_len = 0;
1000ecb0:	2300      	movs	r3, #0
    packet[0] = (uint8_t) reg;
1000ecb2:	f88d 0004 	strb.w	r0, [sp, #4]
    request.tx_buf = packet;
1000ecb6:	aa01      	add	r2, sp, #4
    request.tx_len = 2;
1000ecb8:	2402      	movs	r4, #2
    request.rx_buf = 0;
    request.restart = 0;
    request.callback = NULL;

    return MXC_I2C_MasterTransaction(&request);
1000ecba:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000ecbc:	e9cd 2404 	strd	r2, r4, [sp, #16]
    request.rx_buf = 0;
1000ecc0:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000ecc4:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[1] = value;
1000ecc8:	f88d 1005 	strb.w	r1, [sp, #5]
    request.addr = addr;
1000eccc:	9503      	str	r5, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000ecce:	f000 ff45 	bl	1000fb5c <MXC_I2C_MasterTransaction>
}
1000ecd2:	b00b      	add	sp, #44	@ 0x2c
1000ecd4:	bd30      	pop	{r4, r5, pc}
1000ecd6:	bf00      	nop
1000ecd8:	4001e000 	.word	0x4001e000

1000ecdc <i2c_simple_write_receive_len>:
int i2c_simple_write_receive_len(i2c_addr_t addr, uint8_t len) {
1000ecdc:	b510      	push	{r4, lr}
1000ecde:	b08a      	sub	sp, #40	@ 0x28
1000ece0:	4604      	mov	r4, r0
    request.i2c = I2C_INTERFACE;
1000ece2:	480a      	ldr	r0, [pc, #40]	@ (1000ed0c <i2c_simple_write_receive_len+0x30>)
    packet[1] = value;
1000ece4:	f88d 1005 	strb.w	r1, [sp, #5]
    request.rx_len = 0;
1000ece8:	2300      	movs	r3, #0
    packet[0] = (uint8_t) reg;
1000ecea:	2202      	movs	r2, #2
    request.i2c = I2C_INTERFACE;
1000ecec:	9002      	str	r0, [sp, #8]
    request.tx_buf = packet;
1000ecee:	a901      	add	r1, sp, #4
    return MXC_I2C_MasterTransaction(&request);
1000ecf0:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000ecf2:	e9cd 1204 	strd	r1, r2, [sp, #16]
    request.rx_buf = 0;
1000ecf6:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000ecfa:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[0] = (uint8_t) reg;
1000ecfe:	f88d 2004 	strb.w	r2, [sp, #4]
    request.addr = addr;
1000ed02:	9403      	str	r4, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000ed04:	f000 ff2a 	bl	1000fb5c <MXC_I2C_MasterTransaction>
}
1000ed08:	b00a      	add	sp, #40	@ 0x28
1000ed0a:	bd10      	pop	{r4, pc}
1000ed0c:	4001e000 	.word	0x4001e000

1000ed10 <i2c_simple_write_transmit_done>:
int i2c_simple_write_transmit_done(i2c_addr_t addr, bool done) {
1000ed10:	b530      	push	{r4, r5, lr}
1000ed12:	b08b      	sub	sp, #44	@ 0x2c
1000ed14:	4605      	mov	r5, r0
    request.i2c = I2C_INTERFACE;
1000ed16:	4a0b      	ldr	r2, [pc, #44]	@ (1000ed44 <i2c_simple_write_transmit_done+0x34>)
1000ed18:	9202      	str	r2, [sp, #8]
    packet[0] = (uint8_t) reg;
1000ed1a:	2004      	movs	r0, #4
    request.rx_len = 0;
1000ed1c:	2300      	movs	r3, #0
    request.tx_buf = packet;
1000ed1e:	eb0d 0200 	add.w	r2, sp, r0
    packet[0] = (uint8_t) reg;
1000ed22:	f88d 0004 	strb.w	r0, [sp, #4]
    request.tx_len = 2;
1000ed26:	2402      	movs	r4, #2
    return MXC_I2C_MasterTransaction(&request);
1000ed28:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000ed2a:	e9cd 2404 	strd	r2, r4, [sp, #16]
    request.rx_buf = 0;
1000ed2e:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000ed32:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[1] = value;
1000ed36:	f88d 1005 	strb.w	r1, [sp, #5]
    request.addr = addr;
1000ed3a:	9503      	str	r5, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000ed3c:	f000 ff0e 	bl	1000fb5c <MXC_I2C_MasterTransaction>
}
1000ed40:	b00b      	add	sp, #44	@ 0x2c
1000ed42:	bd30      	pop	{r4, r5, pc}
1000ed44:	4001e000 	.word	0x4001e000

1000ed48 <i2c_simple_read_data_generic>:
{
1000ed48:	b530      	push	{r4, r5, lr}
1000ed4a:	b08b      	sub	sp, #44	@ 0x2c
    request.i2c = I2C_INTERFACE;
1000ed4c:	4d09      	ldr	r5, [pc, #36]	@ (1000ed74 <i2c_simple_read_data_generic+0x2c>)
{
1000ed4e:	f88d 1007 	strb.w	r1, [sp, #7]
    request.addr = addr;
1000ed52:	9003      	str	r0, [sp, #12]
    request.tx_buf = (uint8_t*)&reg;
1000ed54:	f10d 0107 	add.w	r1, sp, #7
    request.tx_len = 1;
1000ed58:	2001      	movs	r0, #1
    request.tx_buf = (uint8_t*)&reg;
1000ed5a:	e9cd 1004 	strd	r1, r0, [sp, #16]
    request.restart = 0;
1000ed5e:	2400      	movs	r4, #0
    return MXC_I2C_MasterTransaction(&request);
1000ed60:	a802      	add	r0, sp, #8
    request.rx_buf = buf;
1000ed62:	e9cd 3206 	strd	r3, r2, [sp, #24]
    request.callback = NULL;
1000ed66:	e9cd 4408 	strd	r4, r4, [sp, #32]
    request.i2c = I2C_INTERFACE;
1000ed6a:	9502      	str	r5, [sp, #8]
    return MXC_I2C_MasterTransaction(&request);
1000ed6c:	f000 fef6 	bl	1000fb5c <MXC_I2C_MasterTransaction>
}
1000ed70:	b00b      	add	sp, #44	@ 0x2c
1000ed72:	bd30      	pop	{r4, r5, pc}
1000ed74:	4001e000 	.word	0x4001e000

1000ed78 <i2c_simple_write_data_generic>:
int i2c_simple_write_data_generic(i2c_addr_t addr, ECTF_I2C_REGS reg, uint8_t len, uint8_t* buf) {
1000ed78:	b570      	push	{r4, r5, r6, lr}
1000ed7a:	b0ca      	sub	sp, #296	@ 0x128
1000ed7c:	468c      	mov	ip, r1
1000ed7e:	4605      	mov	r5, r0
    memcpy(&packet[1], buf, len);
1000ed80:	4619      	mov	r1, r3
1000ed82:	f10d 0025 	add.w	r0, sp, #37	@ 0x25
int i2c_simple_write_data_generic(i2c_addr_t addr, ECTF_I2C_REGS reg, uint8_t len, uint8_t* buf) {
1000ed86:	4614      	mov	r4, r2
    packet[0] = reg;
1000ed88:	f88d c024 	strb.w	ip, [sp, #36]	@ 0x24
    memcpy(&packet[1], buf, len);
1000ed8c:	f006 fd98 	bl	100158c0 <memcpy>
    request.i2c = I2C_INTERFACE;
1000ed90:	4b08      	ldr	r3, [pc, #32]	@ (1000edb4 <i2c_simple_write_data_generic+0x3c>)
1000ed92:	9301      	str	r3, [sp, #4]
    packet[0] = reg;
1000ed94:	ae09      	add	r6, sp, #36	@ 0x24
    request.rx_len = 0;
1000ed96:	2300      	movs	r3, #0
    request.tx_len = len+1;
1000ed98:	3401      	adds	r4, #1
    return MXC_I2C_MasterTransaction(&request);
1000ed9a:	a801      	add	r0, sp, #4
    request.rx_buf = 0;
1000ed9c:	e9cd 3305 	strd	r3, r3, [sp, #20]
    request.callback = NULL;
1000eda0:	e9cd 3307 	strd	r3, r3, [sp, #28]
    request.addr = addr;
1000eda4:	9502      	str	r5, [sp, #8]
    request.tx_len = len+1;
1000eda6:	9404      	str	r4, [sp, #16]
    request.tx_buf = packet;
1000eda8:	9603      	str	r6, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000edaa:	f000 fed7 	bl	1000fb5c <MXC_I2C_MasterTransaction>
}
1000edae:	b04a      	add	sp, #296	@ 0x128
1000edb0:	bd70      	pop	{r4, r5, r6, pc}
1000edb2:	bf00      	nop
1000edb4:	4001e000 	.word	0x4001e000

1000edb8 <mxc_assert>:
};
const unsigned int num_leds = (sizeof(led_pin) / sizeof(mxc_gpio_cfg_t));

/******************************************************************************/
void mxc_assert(const char *expr, const char *file, int line)
{
1000edb8:	b508      	push	{r3, lr}
1000edba:	4603      	mov	r3, r0
    printf("MXC_ASSERT %s #%d: (%s)\n", file, line, expr);
1000edbc:	4801      	ldr	r0, [pc, #4]	@ (1000edc4 <mxc_assert+0xc>)
1000edbe:	f002 fb61 	bl	10011484 <printf>

    while (1) {}
1000edc2:	e7fe      	b.n	1000edc2 <mxc_assert+0xa>
1000edc4:	1001e7fc 	.word	0x1001e7fc

1000edc8 <GPIO0_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 0 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO0_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO0));
1000edc8:	2000      	movs	r0, #0
1000edca:	f000 bdcf 	b.w	1000f96c <MXC_GPIO_Handler>
1000edce:	bf00      	nop

1000edd0 <GPIO1_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 1 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO1_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO1));
1000edd0:	2001      	movs	r0, #1
1000edd2:	f000 bdcb 	b.w	1000f96c <MXC_GPIO_Handler>
1000edd6:	bf00      	nop

1000edd8 <Board_Init>:
}

/******************************************************************************/
int Board_Init(void)
{
1000edd8:	b510      	push	{r4, lr}
#ifndef __riscv
    int err;

    // Enable GPIO
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1000edda:	2000      	movs	r0, #0
1000eddc:	f000 fb5c 	bl	1000f498 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
1000ede0:	2001      	movs	r0, #1
1000ede2:	f000 fb59 	bl	1000f498 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1000ede6:	2040      	movs	r0, #64	@ 0x40
1000ede8:	f000 fb56 	bl	1000f498 <MXC_SYS_ClockEnable>
/******************************************************************************/
int Console_Init(void)
{
    int err;

    if ((err = MXC_UART_Init(ConsoleUart, CONSOLE_BAUD, MXC_UART_IBRO_CLK)) != E_NO_ERROR) {
1000edec:	4b10      	ldr	r3, [pc, #64]	@ (1000ee30 <Board_Init+0x58>)
1000edee:	2202      	movs	r2, #2
1000edf0:	6818      	ldr	r0, [r3, #0]
1000edf2:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
1000edf6:	f001 fd51 	bl	1001089c <MXC_UART_Init>
    if ((err = Console_Init()) < E_NO_ERROR) {
1000edfa:	1e04      	subs	r4, r0, #0
1000edfc:	db0c      	blt.n	1000ee18 <Board_Init+0x40>
    if ((err = PB_Init()) != E_NO_ERROR) {
1000edfe:	f000 f8eb 	bl	1000efd8 <PB_Init>
1000ee02:	b958      	cbnz	r0, 1000ee1c <Board_Init+0x44>
    if ((err = LED_Init()) != E_NO_ERROR) {
1000ee04:	f000 f888 	bl	1000ef18 <LED_Init>
1000ee08:	4604      	mov	r4, r0
1000ee0a:	b960      	cbnz	r0, 1000ee26 <Board_Init+0x4e>
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
1000ee0c:	4b09      	ldr	r3, [pc, #36]	@ (1000ee34 <Board_Init+0x5c>)
    MXC_Delay(200000);
1000ee0e:	480a      	ldr	r0, [pc, #40]	@ (1000ee38 <Board_Init+0x60>)
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
1000ee10:	2243      	movs	r2, #67	@ 0x43
1000ee12:	60da      	str	r2, [r3, #12]
    MXC_Delay(200000);
1000ee14:	f000 fabe 	bl	1000f394 <MXC_Delay>
}
1000ee18:	4620      	mov	r0, r4
1000ee1a:	bd10      	pop	{r4, pc}
        MXC_ASSERT_FAIL();
1000ee1c:	4907      	ldr	r1, [pc, #28]	@ (1000ee3c <Board_Init+0x64>)
1000ee1e:	4808      	ldr	r0, [pc, #32]	@ (1000ee40 <Board_Init+0x68>)
1000ee20:	226f      	movs	r2, #111	@ 0x6f
1000ee22:	f7ff ffc9 	bl	1000edb8 <mxc_assert>
        MXC_ASSERT_FAIL();
1000ee26:	4905      	ldr	r1, [pc, #20]	@ (1000ee3c <Board_Init+0x64>)
1000ee28:	4805      	ldr	r0, [pc, #20]	@ (1000ee40 <Board_Init+0x68>)
1000ee2a:	2274      	movs	r2, #116	@ 0x74
1000ee2c:	f7ff ffc4 	bl	1000edb8 <mxc_assert>
1000ee30:	20000000 	.word	0x20000000
1000ee34:	40004400 	.word	0x40004400
1000ee38:	00030d40 	.word	0x00030d40
1000ee3c:	1001e818 	.word	0x1001e818
1000ee40:	1001e880 	.word	0x1001e880

1000ee44 <NMI_Handler>:
}

/******************************************************************************/
void NMI_Handler(void)
{
    __NOP();
1000ee44:	bf00      	nop
}
1000ee46:	4770      	bx	lr

1000ee48 <_close>:
    return -1;
}
int _close(int file)
{
    return -1;
}
1000ee48:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000ee4c:	4770      	bx	lr
1000ee4e:	bf00      	nop

1000ee50 <_isatty>:
int _isatty(int file)
1000ee50:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000ee54:	4770      	bx	lr
1000ee56:	bf00      	nop

1000ee58 <_lseek>:
    return -1;
}
int _lseek(int file, off_t offset, int whence)
{
    return -1;
}
1000ee58:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000ee5c:	4770      	bx	lr
1000ee5e:	bf00      	nop

1000ee60 <_fstat>:
int _fstat(int file, struct stat *st)
{
    return -1;
}
1000ee60:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000ee64:	4770      	bx	lr
1000ee66:	bf00      	nop

1000ee68 <_read>:
   fgetc for stdio */
#if defined(__ICCARM__) || defined(__GNUC__)

#if defined(__GNUC__) // GNUC _read function prototype
int _read(int file, char *ptr, int len)
{
1000ee68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    size_t n;
#endif /*  */

    int num = 0; // count of number received.

    switch (file) {
1000ee6a:	b9e0      	cbnz	r0, 1000eea6 <_read+0x3e>
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
1000ee6c:	2a00      	cmp	r2, #0
1000ee6e:	dd19      	ble.n	1000eea4 <_read+0x3c>
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
1000ee70:	4d10      	ldr	r5, [pc, #64]	@ (1000eeb4 <_read+0x4c>)
1000ee72:	460e      	mov	r6, r1
1000ee74:	188f      	adds	r7, r1, r2
        for (n = 0; n < len; n++) {
1000ee76:	460c      	mov	r4, r1
1000ee78:	e002      	b.n	1000ee80 <_read+0x18>
1000ee7a:	42bb      	cmp	r3, r7
1000ee7c:	d00f      	beq.n	1000ee9e <_read+0x36>
                num++;
                ptr++;

                break;
            } else {
                ptr++;
1000ee7e:	461c      	mov	r4, r3
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
1000ee80:	4628      	mov	r0, r5
1000ee82:	f001 fe03 	bl	10010a8c <MXC_UART_ReadCharacter>
1000ee86:	b2c1      	uxtb	r1, r0
1000ee88:	7021      	strb	r1, [r4, #0]
            MXC_UART_WriteCharacter(MXC_UARTn, *ptr); // echo the byte.
1000ee8a:	4628      	mov	r0, r5
1000ee8c:	f001 fe00 	bl	10010a90 <MXC_UART_WriteCharacter>
            if (*ptr == '\r') { // check for end of line.
1000ee90:	7822      	ldrb	r2, [r4, #0]
1000ee92:	2a0d      	cmp	r2, #13
                ptr++;
1000ee94:	f104 0301 	add.w	r3, r4, #1
            if (*ptr == '\r') { // check for end of line.
1000ee98:	d1ef      	bne.n	1000ee7a <_read+0x12>
                *ptr = '\n';
1000ee9a:	230a      	movs	r3, #10
1000ee9c:	7023      	strb	r3, [r4, #0]
                num++;
1000ee9e:	f1c6 0601 	rsb	r6, r6, #1
1000eea2:	19a0      	adds	r0, r4, r6
        errno = EBADF;
        return -1;
    }

    return num;
}
1000eea4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        errno = EBADF;
1000eea6:	f006 fb01 	bl	100154ac <__errno>
1000eeaa:	2309      	movs	r3, #9
1000eeac:	6003      	str	r3, [r0, #0]
        return -1;
1000eeae:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000eeb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000eeb4:	40042000 	.word	0x40042000

1000eeb8 <_write>:

/* newlib/libc printf() will eventually call write() to get the data to the stdout */
#if defined(__GNUC__)
// GNUC _write function prototype
int _write(int file, char *ptr, int len)
{
1000eeb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
int __write(int file, const unsigned char *ptr, size_t len)
{
    size_t n;
#endif /* __GNUC__ */

    switch (file) {
1000eeba:	1e43      	subs	r3, r0, #1
1000eebc:	2b01      	cmp	r3, #1
1000eebe:	d821      	bhi.n	1000ef04 <_write+0x4c>
    case STDOUT_FILENO:
    case STDERR_FILENO:

        // This function should be as fast as possible
        // So we'll forgo the UART driver for now
        for (n = 0; n < len; n++) {
1000eec0:	2a00      	cmp	r2, #0
1000eec2:	4617      	mov	r7, r2
1000eec4:	dd12      	ble.n	1000eeec <_write+0x34>
1000eec6:	1e53      	subs	r3, r2, #1
            if (*ptr == '\n') {
                // Wait until there's room in the FIFO
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000eec8:	4e12      	ldr	r6, [pc, #72]	@ (1000ef14 <_write+0x5c>)
1000eeca:	1e4c      	subs	r4, r1, #1
1000eecc:	18cd      	adds	r5, r1, r3
            if (*ptr == '\n') {
1000eece:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1000eed2:	2b0a      	cmp	r3, #10
1000eed4:	d00c      	beq.n	1000eef0 <_write+0x38>

                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
            }

            // Wait until there's room in the FIFO
            while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000eed6:	480f      	ldr	r0, [pc, #60]	@ (1000ef14 <_write+0x5c>)
1000eed8:	f001 fdde 	bl	10010a98 <MXC_UART_GetTXFIFOAvailable>
1000eedc:	2800      	cmp	r0, #0
1000eede:	d0fa      	beq.n	1000eed6 <_write+0x1e>

            MXC_UART_WriteCharacter(MXC_UARTn, *ptr++);
1000eee0:	7821      	ldrb	r1, [r4, #0]
1000eee2:	4630      	mov	r0, r6
1000eee4:	f001 fdd4 	bl	10010a90 <MXC_UART_WriteCharacter>
        for (n = 0; n < len; n++) {
1000eee8:	42ac      	cmp	r4, r5
1000eeea:	d1f0      	bne.n	1000eece <_write+0x16>

        break;

    default:
        errno = EBADF;
        return -1;
1000eeec:	4638      	mov	r0, r7
    }

    return len;
}
1000eeee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000eef0:	4808      	ldr	r0, [pc, #32]	@ (1000ef14 <_write+0x5c>)
1000eef2:	f001 fdd1 	bl	10010a98 <MXC_UART_GetTXFIFOAvailable>
1000eef6:	2800      	cmp	r0, #0
1000eef8:	d0fa      	beq.n	1000eef0 <_write+0x38>
                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
1000eefa:	210d      	movs	r1, #13
1000eefc:	4630      	mov	r0, r6
1000eefe:	f001 fdc7 	bl	10010a90 <MXC_UART_WriteCharacter>
1000ef02:	e7e8      	b.n	1000eed6 <_write+0x1e>
        errno = EBADF;
1000ef04:	f006 fad2 	bl	100154ac <__errno>
1000ef08:	2309      	movs	r3, #9
1000ef0a:	6003      	str	r3, [r0, #0]
        return -1;
1000ef0c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000ef10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000ef12:	bf00      	nop
1000ef14:	40042000 	.word	0x40042000

1000ef18 <LED_Init>:
#include "led.h"
#include "mxc_device.h"

/******************************************************************************/
int LED_Init(void)
{
1000ef18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    /* setup GPIO for the LED */
    for (i = 0; i < num_leds; i++) {
1000ef1a:	4b0d      	ldr	r3, [pc, #52]	@ (1000ef50 <LED_Init+0x38>)
1000ef1c:	681f      	ldr	r7, [r3, #0]
1000ef1e:	b1a7      	cbz	r7, 1000ef4a <LED_Init+0x32>
1000ef20:	2500      	movs	r5, #0
1000ef22:	4c0c      	ldr	r4, [pc, #48]	@ (1000ef54 <LED_Init+0x3c>)
    int retval = E_NO_ERROR;
1000ef24:	462e      	mov	r6, r5
//******************************************************************************
void LED_Off(unsigned int idx)
{
    MXC_ASSERT(idx < num_leds);
#if (LED_ON == 0)
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000ef26:	e9d4 0100 	ldrd	r0, r1, [r4]
1000ef2a:	f000 fcf1 	bl	1000f910 <MXC_GPIO_OutSet>
        if (MXC_GPIO_Config(&led_pin[i]) != E_NO_ERROR) {
1000ef2e:	4620      	mov	r0, r4
1000ef30:	f000 fbe8 	bl	1000f704 <MXC_GPIO_Config>
    for (i = 0; i < num_leds; i++) {
1000ef34:	3501      	adds	r5, #1
            retval = E_UNKNOWN;
1000ef36:	2800      	cmp	r0, #0
1000ef38:	bf18      	it	ne
1000ef3a:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_leds; i++) {
1000ef3e:	42af      	cmp	r7, r5
1000ef40:	f104 040c 	add.w	r4, r4, #12
1000ef44:	d1ef      	bne.n	1000ef26 <LED_Init+0xe>
}
1000ef46:	4630      	mov	r0, r6
1000ef48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1000ef4a:	463e      	mov	r6, r7
}
1000ef4c:	4630      	mov	r0, r6
1000ef4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000ef50:	1001e888 	.word	0x1001e888
1000ef54:	1001e88c 	.word	0x1001e88c

1000ef58 <LED_On>:
    MXC_ASSERT(idx < num_leds);
1000ef58:	4b0b      	ldr	r3, [pc, #44]	@ (1000ef88 <LED_On+0x30>)
1000ef5a:	681b      	ldr	r3, [r3, #0]
1000ef5c:	4283      	cmp	r3, r0
{
1000ef5e:	b510      	push	{r4, lr}
1000ef60:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
1000ef62:	d90b      	bls.n	1000ef7c <LED_On+0x24>
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
1000ef64:	4b09      	ldr	r3, [pc, #36]	@ (1000ef8c <LED_On+0x34>)
1000ef66:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000ef6a:	eb03 0284 	add.w	r2, r3, r4, lsl #2
1000ef6e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1000ef72:	6851      	ldr	r1, [r2, #4]
}
1000ef74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
1000ef78:	f000 bce0 	b.w	1000f93c <MXC_GPIO_OutClr>
    MXC_ASSERT(idx < num_leds);
1000ef7c:	4904      	ldr	r1, [pc, #16]	@ (1000ef90 <LED_On+0x38>)
1000ef7e:	4805      	ldr	r0, [pc, #20]	@ (1000ef94 <LED_On+0x3c>)
1000ef80:	223b      	movs	r2, #59	@ 0x3b
1000ef82:	f7ff ff19 	bl	1000edb8 <mxc_assert>
1000ef86:	e7ed      	b.n	1000ef64 <LED_On+0xc>
1000ef88:	1001e888 	.word	0x1001e888
1000ef8c:	1001e88c 	.word	0x1001e88c
1000ef90:	1001e8cc 	.word	0x1001e8cc
1000ef94:	1001e920 	.word	0x1001e920

1000ef98 <LED_Off>:
    MXC_ASSERT(idx < num_leds);
1000ef98:	4b0b      	ldr	r3, [pc, #44]	@ (1000efc8 <LED_Off+0x30>)
1000ef9a:	681b      	ldr	r3, [r3, #0]
1000ef9c:	4283      	cmp	r3, r0
{
1000ef9e:	b510      	push	{r4, lr}
1000efa0:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
1000efa2:	d90b      	bls.n	1000efbc <LED_Off+0x24>
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000efa4:	4b09      	ldr	r3, [pc, #36]	@ (1000efcc <LED_Off+0x34>)
1000efa6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000efaa:	eb03 0284 	add.w	r2, r3, r4, lsl #2
1000efae:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1000efb2:	6851      	ldr	r1, [r2, #4]
#else
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
#endif
}
1000efb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000efb8:	f000 bcaa 	b.w	1000f910 <MXC_GPIO_OutSet>
    MXC_ASSERT(idx < num_leds);
1000efbc:	4904      	ldr	r1, [pc, #16]	@ (1000efd0 <LED_Off+0x38>)
1000efbe:	4805      	ldr	r0, [pc, #20]	@ (1000efd4 <LED_Off+0x3c>)
1000efc0:	2246      	movs	r2, #70	@ 0x46
1000efc2:	f7ff fef9 	bl	1000edb8 <mxc_assert>
1000efc6:	e7ed      	b.n	1000efa4 <LED_Off+0xc>
1000efc8:	1001e888 	.word	0x1001e888
1000efcc:	1001e88c 	.word	0x1001e88c
1000efd0:	1001e8cc 	.word	0x1001e8cc
1000efd4:	1001e920 	.word	0x1001e920

1000efd8 <PB_Init>:
#include "mxc_assert.h"
#include "pb.h"

/******************************************************************************/
int PB_Init(void)
{
1000efd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    // Enable pushbutton inputs
    for (i = 0; i < num_pbs; i++) {
1000efda:	4b0b      	ldr	r3, [pc, #44]	@ (1000f008 <PB_Init+0x30>)
1000efdc:	681f      	ldr	r7, [r3, #0]
1000efde:	b187      	cbz	r7, 1000f002 <PB_Init+0x2a>
1000efe0:	2400      	movs	r4, #0
1000efe2:	4d0a      	ldr	r5, [pc, #40]	@ (1000f00c <PB_Init+0x34>)
    int retval = E_NO_ERROR;
1000efe4:	4626      	mov	r6, r4
        if (MXC_GPIO_Config(&pb_pin[i]) != E_NO_ERROR) {
1000efe6:	4628      	mov	r0, r5
1000efe8:	f000 fb8c 	bl	1000f704 <MXC_GPIO_Config>
    for (i = 0; i < num_pbs; i++) {
1000efec:	3401      	adds	r4, #1
            retval = E_UNKNOWN;
1000efee:	2800      	cmp	r0, #0
1000eff0:	bf18      	it	ne
1000eff2:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_pbs; i++) {
1000eff6:	42bc      	cmp	r4, r7
1000eff8:	f105 050c 	add.w	r5, r5, #12
1000effc:	d1f3      	bne.n	1000efe6 <PB_Init+0xe>
        }
    }

    return retval;
}
1000effe:	4630      	mov	r0, r6
1000f000:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1000f002:	463e      	mov	r6, r7
}
1000f004:	4630      	mov	r0, r6
1000f006:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000f008:	1001e8b0 	.word	0x1001e8b0
1000f00c:	1001e8b4 	.word	0x1001e8b4

1000f010 <Reset_Handler>:
1000f010:	4847      	ldr	r0, [pc, #284]	@ (1000f130 <LPCMP_IRQHandler+0x2>)
1000f012:	4685      	mov	sp, r0
1000f014:	4847      	ldr	r0, [pc, #284]	@ (1000f134 <LPCMP_IRQHandler+0x6>)
1000f016:	4780      	blx	r0
1000f018:	b980      	cbnz	r0, 1000f03c <.SKIPRAMINIT>
1000f01a:	4947      	ldr	r1, [pc, #284]	@ (1000f138 <LPCMP_IRQHandler+0xa>)
1000f01c:	4a47      	ldr	r2, [pc, #284]	@ (1000f13c <LPCMP_IRQHandler+0xe>)
1000f01e:	4b48      	ldr	r3, [pc, #288]	@ (1000f140 <LPCMP_IRQHandler+0x12>)
1000f020:	1a9b      	subs	r3, r3, r2
1000f022:	dd03      	ble.n	1000f02c <Reset_Handler+0x1c>
1000f024:	3b04      	subs	r3, #4
1000f026:	58c8      	ldr	r0, [r1, r3]
1000f028:	50d0      	str	r0, [r2, r3]
1000f02a:	dcfb      	bgt.n	1000f024 <Reset_Handler+0x14>
1000f02c:	4945      	ldr	r1, [pc, #276]	@ (1000f144 <LPCMP_IRQHandler+0x16>)
1000f02e:	4a46      	ldr	r2, [pc, #280]	@ (1000f148 <LPCMP_IRQHandler+0x1a>)
1000f030:	2000      	movs	r0, #0
1000f032:	4291      	cmp	r1, r2
1000f034:	bfbc      	itt	lt
1000f036:	f841 0b04 	strlt.w	r0, [r1], #4
1000f03a:	e7fa      	blt.n	1000f032 <Reset_Handler+0x22>

1000f03c <.SKIPRAMINIT>:
1000f03c:	4843      	ldr	r0, [pc, #268]	@ (1000f14c <LPCMP_IRQHandler+0x1e>)
1000f03e:	4780      	blx	r0
1000f040:	4843      	ldr	r0, [pc, #268]	@ (1000f150 <LPCMP_IRQHandler+0x22>)
1000f042:	4780      	blx	r0
1000f044:	4843      	ldr	r0, [pc, #268]	@ (1000f154 <LPCMP_IRQHandler+0x26>)
1000f046:	4780      	blx	r0

1000f048 <.SPIN>:
1000f048:	f7ff fffe 	bl	1000f048 <.SPIN>
1000f04c:	e7fe      	b.n	1000f04c <.SPIN+0x4>

1000f04e <HardFault_Handler>:
1000f04e:	e7fe      	b.n	1000f04e <HardFault_Handler>

1000f050 <MemManage_Handler>:
1000f050:	e7fe      	b.n	1000f050 <MemManage_Handler>

1000f052 <BusFault_Handler>:
1000f052:	e7fe      	b.n	1000f052 <BusFault_Handler>

1000f054 <UsageFault_Handler>:
1000f054:	e7fe      	b.n	1000f054 <UsageFault_Handler>

1000f056 <SVC_Handler>:
1000f056:	e7fe      	b.n	1000f056 <SVC_Handler>

1000f058 <DebugMon_Handler>:
1000f058:	e7fe      	b.n	1000f058 <DebugMon_Handler>

1000f05a <PendSV_Handler>:
1000f05a:	e7fe      	b.n	1000f05a <PendSV_Handler>

1000f05c <SysTick_Handler>:
1000f05c:	e7fe      	b.n	1000f05c <SysTick_Handler>

1000f05e <Default_Handler>:
1000f05e:	e7fe      	b.n	1000f05e <Default_Handler>

1000f060 <PF_IRQHandler>:
1000f060:	e7fe      	b.n	1000f060 <PF_IRQHandler>

1000f062 <WDT0_IRQHandler>:
1000f062:	e7fe      	b.n	1000f062 <WDT0_IRQHandler>

1000f064 <RSV02_IRQHandler>:
1000f064:	e7fe      	b.n	1000f064 <RSV02_IRQHandler>

1000f066 <RTC_IRQHandler>:
1000f066:	e7fe      	b.n	1000f066 <RTC_IRQHandler>

1000f068 <TRNG_IRQHandler>:
1000f068:	e7fe      	b.n	1000f068 <TRNG_IRQHandler>

1000f06a <TMR0_IRQHandler>:
1000f06a:	e7fe      	b.n	1000f06a <TMR0_IRQHandler>

1000f06c <TMR1_IRQHandler>:
1000f06c:	e7fe      	b.n	1000f06c <TMR1_IRQHandler>

1000f06e <TMR2_IRQHandler>:
1000f06e:	e7fe      	b.n	1000f06e <TMR2_IRQHandler>

1000f070 <TMR3_IRQHandler>:
1000f070:	e7fe      	b.n	1000f070 <TMR3_IRQHandler>

1000f072 <TMR4_IRQHandler>:
1000f072:	e7fe      	b.n	1000f072 <TMR4_IRQHandler>

1000f074 <TMR5_IRQHandler>:
1000f074:	e7fe      	b.n	1000f074 <TMR5_IRQHandler>

1000f076 <RSV11_IRQHandler>:
1000f076:	e7fe      	b.n	1000f076 <RSV11_IRQHandler>

1000f078 <RSV12_IRQHandler>:
1000f078:	e7fe      	b.n	1000f078 <RSV12_IRQHandler>

1000f07a <I2C0_IRQHandler>:
1000f07a:	e7fe      	b.n	1000f07a <I2C0_IRQHandler>

1000f07c <UART0_IRQHandler>:
1000f07c:	e7fe      	b.n	1000f07c <UART0_IRQHandler>

1000f07e <UART1_IRQHandler>:
1000f07e:	e7fe      	b.n	1000f07e <UART1_IRQHandler>

1000f080 <SPI1_IRQHandler>:
1000f080:	e7fe      	b.n	1000f080 <SPI1_IRQHandler>

1000f082 <RSV17_IRQHandler>:
1000f082:	e7fe      	b.n	1000f082 <RSV17_IRQHandler>

1000f084 <RSV18_IRQHandler>:
1000f084:	e7fe      	b.n	1000f084 <RSV18_IRQHandler>

1000f086 <RSV19_IRQHandler>:
1000f086:	e7fe      	b.n	1000f086 <RSV19_IRQHandler>

1000f088 <ADC_IRQHandler>:
1000f088:	e7fe      	b.n	1000f088 <ADC_IRQHandler>

1000f08a <RSV21_IRQHandler>:
1000f08a:	e7fe      	b.n	1000f08a <RSV21_IRQHandler>

1000f08c <RSV22_IRQHandler>:
1000f08c:	e7fe      	b.n	1000f08c <RSV22_IRQHandler>

1000f08e <FLC0_IRQHandler>:
1000f08e:	e7fe      	b.n	1000f08e <FLC0_IRQHandler>
1000f090:	e7fe      	b.n	1000f090 <FLC0_IRQHandler+0x2>
1000f092:	e7fe      	b.n	1000f092 <FLC0_IRQHandler+0x4>

1000f094 <GPIO2_IRQHandler>:
1000f094:	e7fe      	b.n	1000f094 <GPIO2_IRQHandler>

1000f096 <RSV27_IRQHandler>:
1000f096:	e7fe      	b.n	1000f096 <RSV27_IRQHandler>

1000f098 <DMA0_IRQHandler>:
1000f098:	e7fe      	b.n	1000f098 <DMA0_IRQHandler>

1000f09a <DMA1_IRQHandler>:
1000f09a:	e7fe      	b.n	1000f09a <DMA1_IRQHandler>

1000f09c <DMA2_IRQHandler>:
1000f09c:	e7fe      	b.n	1000f09c <DMA2_IRQHandler>

1000f09e <DMA3_IRQHandler>:
1000f09e:	e7fe      	b.n	1000f09e <DMA3_IRQHandler>

1000f0a0 <RSV32_IRQHandler>:
1000f0a0:	e7fe      	b.n	1000f0a0 <RSV32_IRQHandler>

1000f0a2 <RSV33_IRQHandler>:
1000f0a2:	e7fe      	b.n	1000f0a2 <RSV33_IRQHandler>

1000f0a4 <UART2_IRQHandler>:
1000f0a4:	e7fe      	b.n	1000f0a4 <UART2_IRQHandler>

1000f0a6 <RSV35_IRQHandler>:
1000f0a6:	e7fe      	b.n	1000f0a6 <RSV35_IRQHandler>

1000f0a8 <I2C1_IRQHandler>:
1000f0a8:	e7fe      	b.n	1000f0a8 <I2C1_IRQHandler>

1000f0aa <RSV37_IRQHandler>:
1000f0aa:	e7fe      	b.n	1000f0aa <RSV37_IRQHandler>

1000f0ac <RSV38_IRQHandler>:
1000f0ac:	e7fe      	b.n	1000f0ac <RSV38_IRQHandler>

1000f0ae <RSV39_IRQHandler>:
1000f0ae:	e7fe      	b.n	1000f0ae <RSV39_IRQHandler>

1000f0b0 <RSV40_IRQHandler>:
1000f0b0:	e7fe      	b.n	1000f0b0 <RSV40_IRQHandler>

1000f0b2 <RSV41_IRQHandler>:
1000f0b2:	e7fe      	b.n	1000f0b2 <RSV41_IRQHandler>

1000f0b4 <RSV42_IRQHandler>:
1000f0b4:	e7fe      	b.n	1000f0b4 <RSV42_IRQHandler>

1000f0b6 <RSV43_IRQHandler>:
1000f0b6:	e7fe      	b.n	1000f0b6 <RSV43_IRQHandler>

1000f0b8 <RSV44_IRQHandler>:
1000f0b8:	e7fe      	b.n	1000f0b8 <RSV44_IRQHandler>

1000f0ba <RSV45_IRQHandler>:
1000f0ba:	e7fe      	b.n	1000f0ba <RSV45_IRQHandler>

1000f0bc <RSV46_IRQHandler>:
1000f0bc:	e7fe      	b.n	1000f0bc <RSV46_IRQHandler>

1000f0be <RSV47_IRQHandler>:
1000f0be:	e7fe      	b.n	1000f0be <RSV47_IRQHandler>

1000f0c0 <RSV48_IRQHandler>:
1000f0c0:	e7fe      	b.n	1000f0c0 <RSV48_IRQHandler>

1000f0c2 <RSV49_IRQHandler>:
1000f0c2:	e7fe      	b.n	1000f0c2 <RSV49_IRQHandler>

1000f0c4 <RSV50_IRQHandler>:
1000f0c4:	e7fe      	b.n	1000f0c4 <RSV50_IRQHandler>

1000f0c6 <RSV51_IRQHandler>:
1000f0c6:	e7fe      	b.n	1000f0c6 <RSV51_IRQHandler>

1000f0c8 <RSV52_IRQHandler>:
1000f0c8:	e7fe      	b.n	1000f0c8 <RSV52_IRQHandler>

1000f0ca <WUT_IRQHandler>:
1000f0ca:	e7fe      	b.n	1000f0ca <WUT_IRQHandler>

1000f0cc <GPIOWAKE_IRQHandler>:
1000f0cc:	e7fe      	b.n	1000f0cc <GPIOWAKE_IRQHandler>

1000f0ce <RSV55_IRQHandler>:
1000f0ce:	e7fe      	b.n	1000f0ce <RSV55_IRQHandler>

1000f0d0 <SPI0_IRQHandler>:
1000f0d0:	e7fe      	b.n	1000f0d0 <SPI0_IRQHandler>

1000f0d2 <WDT1_IRQHandler>:
1000f0d2:	e7fe      	b.n	1000f0d2 <WDT1_IRQHandler>

1000f0d4 <RSV58_IRQHandler>:
1000f0d4:	e7fe      	b.n	1000f0d4 <RSV58_IRQHandler>

1000f0d6 <PT_IRQHandler>:
1000f0d6:	e7fe      	b.n	1000f0d6 <PT_IRQHandler>

1000f0d8 <RSV60_IRQHandler>:
1000f0d8:	e7fe      	b.n	1000f0d8 <RSV60_IRQHandler>

1000f0da <RSV61_IRQHandler>:
1000f0da:	e7fe      	b.n	1000f0da <RSV61_IRQHandler>

1000f0dc <I2C2_IRQHandler>:
1000f0dc:	e7fe      	b.n	1000f0dc <I2C2_IRQHandler>

1000f0de <RISCV_IRQHandler>:
1000f0de:	e7fe      	b.n	1000f0de <RISCV_IRQHandler>

1000f0e0 <RSV64_IRQHandler>:
1000f0e0:	e7fe      	b.n	1000f0e0 <RSV64_IRQHandler>

1000f0e2 <RSV65_IRQHandler>:
1000f0e2:	e7fe      	b.n	1000f0e2 <RSV65_IRQHandler>

1000f0e4 <RSV66_IRQHandler>:
1000f0e4:	e7fe      	b.n	1000f0e4 <RSV66_IRQHandler>

1000f0e6 <OWM_IRQHandler>:
1000f0e6:	e7fe      	b.n	1000f0e6 <OWM_IRQHandler>

1000f0e8 <RSV68_IRQHandler>:
1000f0e8:	e7fe      	b.n	1000f0e8 <RSV68_IRQHandler>

1000f0ea <RSV69_IRQHandler>:
1000f0ea:	e7fe      	b.n	1000f0ea <RSV69_IRQHandler>

1000f0ec <RSV70_IRQHandler>:
1000f0ec:	e7fe      	b.n	1000f0ec <RSV70_IRQHandler>

1000f0ee <RSV71_IRQHandler>:
1000f0ee:	e7fe      	b.n	1000f0ee <RSV71_IRQHandler>

1000f0f0 <RSV72_IRQHandler>:
1000f0f0:	e7fe      	b.n	1000f0f0 <RSV72_IRQHandler>

1000f0f2 <RSV73_IRQHandler>:
1000f0f2:	e7fe      	b.n	1000f0f2 <RSV73_IRQHandler>

1000f0f4 <RSV74_IRQHandler>:
1000f0f4:	e7fe      	b.n	1000f0f4 <RSV74_IRQHandler>

1000f0f6 <RSV75_IRQHandler>:
1000f0f6:	e7fe      	b.n	1000f0f6 <RSV75_IRQHandler>

1000f0f8 <RSV76_IRQHandler>:
1000f0f8:	e7fe      	b.n	1000f0f8 <RSV76_IRQHandler>

1000f0fa <RSV77_IRQHandler>:
1000f0fa:	e7fe      	b.n	1000f0fa <RSV77_IRQHandler>

1000f0fc <RSV78_IRQHandler>:
1000f0fc:	e7fe      	b.n	1000f0fc <RSV78_IRQHandler>

1000f0fe <RSV79_IRQHandler>:
1000f0fe:	e7fe      	b.n	1000f0fe <RSV79_IRQHandler>

1000f100 <RSV80_IRQHandler>:
1000f100:	e7fe      	b.n	1000f100 <RSV80_IRQHandler>

1000f102 <RSV81_IRQHandler>:
1000f102:	e7fe      	b.n	1000f102 <RSV81_IRQHandler>

1000f104 <ECC_IRQHandler>:
1000f104:	e7fe      	b.n	1000f104 <ECC_IRQHandler>

1000f106 <DVS_IRQHandler>:
1000f106:	e7fe      	b.n	1000f106 <DVS_IRQHandler>

1000f108 <SIMO_IRQHandler>:
1000f108:	e7fe      	b.n	1000f108 <SIMO_IRQHandler>

1000f10a <RSV85_IRQHandler>:
1000f10a:	e7fe      	b.n	1000f10a <RSV85_IRQHandler>

1000f10c <RSV86_IRQHandler>:
1000f10c:	e7fe      	b.n	1000f10c <RSV86_IRQHandler>

1000f10e <RSV87_IRQHandler>:
1000f10e:	e7fe      	b.n	1000f10e <RSV87_IRQHandler>

1000f110 <UART3_IRQHandler>:
1000f110:	e7fe      	b.n	1000f110 <UART3_IRQHandler>

1000f112 <RSV89_IRQHandler>:
1000f112:	e7fe      	b.n	1000f112 <RSV89_IRQHandler>

1000f114 <RSV90_IRQHandler>:
1000f114:	e7fe      	b.n	1000f114 <RSV90_IRQHandler>

1000f116 <PCIF_IRQHandler>:
1000f116:	e7fe      	b.n	1000f116 <PCIF_IRQHandler>

1000f118 <RSV92_IRQHandler>:
1000f118:	e7fe      	b.n	1000f118 <RSV92_IRQHandler>

1000f11a <RSV93_IRQHandler>:
1000f11a:	e7fe      	b.n	1000f11a <RSV93_IRQHandler>

1000f11c <RSV94_IRQHandler>:
1000f11c:	e7fe      	b.n	1000f11c <RSV94_IRQHandler>

1000f11e <RSV95_IRQHandler>:
1000f11e:	e7fe      	b.n	1000f11e <RSV95_IRQHandler>

1000f120 <RSV96_IRQHandler>:
1000f120:	e7fe      	b.n	1000f120 <RSV96_IRQHandler>

1000f122 <AES_IRQHandler>:
1000f122:	e7fe      	b.n	1000f122 <AES_IRQHandler>

1000f124 <RSV98_IRQHandler>:
1000f124:	e7fe      	b.n	1000f124 <RSV98_IRQHandler>

1000f126 <I2S_IRQHandler>:
1000f126:	e7fe      	b.n	1000f126 <I2S_IRQHandler>

1000f128 <CNN_FIFO_IRQHandler>:
1000f128:	e7fe      	b.n	1000f128 <CNN_FIFO_IRQHandler>

1000f12a <CNN_IRQHandler>:
1000f12a:	e7fe      	b.n	1000f12a <CNN_IRQHandler>

1000f12c <RSV102_IRQHandler>:
1000f12c:	e7fe      	b.n	1000f12c <RSV102_IRQHandler>

1000f12e <LPCMP_IRQHandler>:
1000f12e:	e7fe      	b.n	1000f12e <LPCMP_IRQHandler>
1000f130:	20020000 	.word	0x20020000
1000f134:	1000f1fd 	.word	0x1000f1fd
1000f138:	10025be8 	.word	0x10025be8
1000f13c:	20000000 	.word	0x20000000
1000f140:	20000bcc 	.word	0x20000bcc
1000f144:	20000c00 	.word	0x20000c00
1000f148:	20001768 	.word	0x20001768
1000f14c:	1000f201 	.word	0x1000f201
1000f150:	100157c1 	.word	0x100157c1
1000f154:	1000e9e9 	.word	0x1000e9e9

1000f158 <_sbrk>:
extern unsigned int __HeapLimit;
caddr_t _sbrk(int incr)
{
    char *prev_heap_end;

    if (heap_end == 0) {
1000f158:	4a0b      	ldr	r2, [pc, #44]	@ (1000f188 <_sbrk+0x30>)
{
1000f15a:	b508      	push	{r3, lr}
1000f15c:	4603      	mov	r3, r0
    if (heap_end == 0) {
1000f15e:	6810      	ldr	r0, [r2, #0]
1000f160:	b128      	cbz	r0, 1000f16e <_sbrk+0x16>
        heap_end = (caddr_t)&__HeapBase;
    }
    prev_heap_end = heap_end;

    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000f162:	490a      	ldr	r1, [pc, #40]	@ (1000f18c <_sbrk+0x34>)
1000f164:	4403      	add	r3, r0
1000f166:	428b      	cmp	r3, r1
1000f168:	d807      	bhi.n	1000f17a <_sbrk+0x22>
        errno = ENOMEM;
        return (caddr_t)-1;
    }

    heap_end += incr;
1000f16a:	6013      	str	r3, [r2, #0]

    return (caddr_t)prev_heap_end;
}
1000f16c:	bd08      	pop	{r3, pc}
        heap_end = (caddr_t)&__HeapBase;
1000f16e:	4808      	ldr	r0, [pc, #32]	@ (1000f190 <_sbrk+0x38>)
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000f170:	4906      	ldr	r1, [pc, #24]	@ (1000f18c <_sbrk+0x34>)
        heap_end = (caddr_t)&__HeapBase;
1000f172:	6010      	str	r0, [r2, #0]
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000f174:	4403      	add	r3, r0
1000f176:	428b      	cmp	r3, r1
1000f178:	d9f7      	bls.n	1000f16a <_sbrk+0x12>
        errno = ENOMEM;
1000f17a:	f006 f997 	bl	100154ac <__errno>
1000f17e:	230c      	movs	r3, #12
1000f180:	6003      	str	r3, [r0, #0]
        return (caddr_t)-1;
1000f182:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f186:	bd08      	pop	{r3, pc}
1000f188:	20000ca8 	.word	0x20000ca8
1000f18c:	2001f000 	.word	0x2001f000
1000f190:	20001770 	.word	0x20001770

1000f194 <SystemCoreClockUpdate>:
__weak void SystemCoreClockUpdate(void)
{
    uint32_t base_freq, div, clk_src;

    // Get the clock source and frequency
    clk_src = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL);
1000f194:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
1000f198:	689a      	ldr	r2, [r3, #8]
1000f19a:	f402 6260 	and.w	r2, r2, #3584	@ 0xe00
    switch (clk_src) {
1000f19e:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
1000f1a2:	d020      	beq.n	1000f1e6 <SystemCoreClockUpdate+0x52>
1000f1a4:	d911      	bls.n	1000f1ca <SystemCoreClockUpdate+0x36>
1000f1a6:	f5b2 6f40 	cmp.w	r2, #3072	@ 0xc00
1000f1aa:	d017      	beq.n	1000f1dc <SystemCoreClockUpdate+0x48>
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_INRO:
        base_freq = INRO_FREQ;
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_IPO:
        base_freq = IPO_FREQ;
1000f1ac:	4b0f      	ldr	r3, [pc, #60]	@ (1000f1ec <SystemCoreClockUpdate+0x58>)
1000f1ae:	4910      	ldr	r1, [pc, #64]	@ (1000f1f0 <SystemCoreClockUpdate+0x5c>)
1000f1b0:	f5b2 6f60 	cmp.w	r2, #3584	@ 0xe00
1000f1b4:	bf18      	it	ne
1000f1b6:	460b      	movne	r3, r1
        // This code should never execute, however, initialize to safe value.
        base_freq = HIRC_FREQ;
        break;
    }

    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1000f1b8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000

    SystemCoreClock = base_freq >> div;
1000f1bc:	490d      	ldr	r1, [pc, #52]	@ (1000f1f4 <SystemCoreClockUpdate+0x60>)
    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1000f1be:	6892      	ldr	r2, [r2, #8]
1000f1c0:	f3c2 1282 	ubfx	r2, r2, #6, #3
    SystemCoreClock = base_freq >> div;
1000f1c4:	40d3      	lsrs	r3, r2
1000f1c6:	600b      	str	r3, [r1, #0]
}
1000f1c8:	4770      	bx	lr
    switch (clk_src) {
1000f1ca:	b152      	cbz	r2, 1000f1e2 <SystemCoreClockUpdate+0x4e>
        base_freq = IPO_FREQ;
1000f1cc:	4908      	ldr	r1, [pc, #32]	@ (1000f1f0 <SystemCoreClockUpdate+0x5c>)
1000f1ce:	f247 5330 	movw	r3, #30000	@ 0x7530
1000f1d2:	f5b2 6fc0 	cmp.w	r2, #1536	@ 0x600
1000f1d6:	bf18      	it	ne
1000f1d8:	460b      	movne	r3, r1
1000f1da:	e7ed      	b.n	1000f1b8 <SystemCoreClockUpdate+0x24>
        base_freq = ERTCO_FREQ;
1000f1dc:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
1000f1e0:	e7ea      	b.n	1000f1b8 <SystemCoreClockUpdate+0x24>
        base_freq = ISO_FREQ;
1000f1e2:	4b05      	ldr	r3, [pc, #20]	@ (1000f1f8 <SystemCoreClockUpdate+0x64>)
1000f1e4:	e7e8      	b.n	1000f1b8 <SystemCoreClockUpdate+0x24>
        base_freq = IBRO_FREQ;
1000f1e6:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
1000f1ea:	e7e5      	b.n	1000f1b8 <SystemCoreClockUpdate+0x24>
1000f1ec:	047868c0 	.word	0x047868c0
1000f1f0:	05f5e100 	.word	0x05f5e100
1000f1f4:	20001768 	.word	0x20001768
1000f1f8:	03938700 	.word	0x03938700

1000f1fc <PreInit>:
 */
__weak int PreInit(void)
{
    /* Do nothing */
    return 0;
}
1000f1fc:	2000      	movs	r0, #0
1000f1fe:	4770      	bx	lr

1000f200 <SystemInit>:
 * You may over-ride this function in your program by defining a custom 
 *  SystemInit(), but care should be taken to reproduce the initialization
 *  steps or a non-functional system may result.
 */
__weak void SystemInit(void)
{
1000f200:	b510      	push	{r4, lr}
    /* Configure the interrupt controller to use the application vector table in */
    /* the application space */
#if defined(__CC_ARM) || defined(__GNUC__)
    /* IAR sets the VTOR pointer incorrectly and causes stack corruption */
    SCB->VTOR = (uint32_t)__isr_vector;
1000f202:	4c0a      	ldr	r4, [pc, #40]	@ (1000f22c <SystemInit+0x2c>)
1000f204:	4b0a      	ldr	r3, [pc, #40]	@ (1000f230 <SystemInit+0x30>)
1000f206:	60a3      	str	r3, [r4, #8]
#endif /* __CC_ARM || __GNUC__ */

    /* Enable instruction cache */
    MXC_ICC_Enable(MXC_ICC0);
1000f208:	480a      	ldr	r0, [pc, #40]	@ (1000f234 <SystemInit+0x34>)
1000f20a:	f001 faed 	bl	100107e8 <MXC_ICC_Enable>

    /* Enable FPU on Cortex-M4, which occupies coprocessor slots 10 & 11 */
    /* Grant full access, per "Table B3-24 CPACR bit assignments". */
    /* DDI0403D "ARMv7-M Architecture Reference Manual" */
    SCB->CPACR |= SCB_CPACR_CP10_Msk | SCB_CPACR_CP11_Msk;
1000f20e:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
1000f212:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
1000f216:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
1000f21a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
1000f21e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();

    SystemCoreClockUpdate();
1000f222:	f7ff ffb7 	bl	1000f194 <SystemCoreClockUpdate>

    Board_Init();
1000f226:	f7ff fdd7 	bl	1000edd8 <Board_Init>
}
1000f22a:	bd10      	pop	{r4, pc}
1000f22c:	e000ed00 	.word	0xe000ed00
1000f230:	1000e000 	.word	0x1000e000
1000f234:	4002a000 	.word	0x4002a000

1000f238 <MXC_DelayInit>:
    }
}

/* ************************************************************************** */
static void MXC_DelayInit(uint32_t us)
{
1000f238:	b538      	push	{r3, r4, r5, lr}
    uint32_t starttick, reload, ticks, lastticks;

    // Record the current tick value and clear the overflow flag
    starttick = SysTick->VAL;
1000f23a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000

    // Save the state of control register (and clear the overflow flag)
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1000f23e:	4918      	ldr	r1, [pc, #96]	@ (1000f2a0 <MXC_DelayInit+0x68>)
    starttick = SysTick->VAL;
1000f240:	699c      	ldr	r4, [r3, #24]
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1000f242:	691a      	ldr	r2, [r3, #16]
1000f244:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
1000f248:	600a      	str	r2, [r1, #0]

    // If the SysTick is not running, configure and start it
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk)) {
1000f24a:	691a      	ldr	r2, [r3, #16]
1000f24c:	07d2      	lsls	r2, r2, #31
1000f24e:	d41f      	bmi.n	1000f290 <MXC_DelayInit+0x58>
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
1000f250:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1000f254:	2205      	movs	r2, #5
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
1000f256:	615c      	str	r4, [r3, #20]
        starttick = SysTick_VAL_CURRENT_Msk;
        reload = SysTick_LOAD_RELOAD_Msk + 1;
1000f258:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
1000f25c:	619c      	str	r4, [r3, #24]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1000f25e:	611a      	str	r2, [r3, #16]
    } else {
        reload = SysTick->LOAD + 1; // get the current reload value
    }

    // Calculate the total number of ticks to delay
    ticks = (uint32_t)(((uint64_t)us * (uint64_t)SystemCoreClock) / 1000000);
1000f260:	4b10      	ldr	r3, [pc, #64]	@ (1000f2a4 <MXC_DelayInit+0x6c>)
1000f262:	4a11      	ldr	r2, [pc, #68]	@ (1000f2a8 <MXC_DelayInit+0x70>)
1000f264:	6819      	ldr	r1, [r3, #0]
1000f266:	2300      	movs	r3, #0
1000f268:	fba0 0101 	umull	r0, r1, r0, r1
1000f26c:	f00e ff80 	bl	1001e170 <__aeabi_uldivmod>

    // How many overflows of the SysTick will occur
    overflows = ticks / reload;
1000f270:	4b0e      	ldr	r3, [pc, #56]	@ (1000f2ac <MXC_DelayInit+0x74>)
1000f272:	fbb0 f2f5 	udiv	r2, r0, r5

    // How many remaining ticks after the last overflow
    lastticks = ticks % reload;
1000f276:	fb05 0012 	mls	r0, r5, r2, r0

    // Check if there will be another overflow due to the current value of the SysTick
    if (lastticks >= starttick) {
1000f27a:	4284      	cmp	r4, r0
    overflows = ticks / reload;
1000f27c:	601a      	str	r2, [r3, #0]
    if (lastticks >= starttick) {
1000f27e:	d80a      	bhi.n	1000f296 <MXC_DelayInit+0x5e>
        overflows++;
1000f280:	681a      	ldr	r2, [r3, #0]
1000f282:	3201      	adds	r2, #1
1000f284:	601a      	str	r2, [r3, #0]
        endtick = reload - (lastticks - starttick);
1000f286:	4425      	add	r5, r4
1000f288:	4b09      	ldr	r3, [pc, #36]	@ (1000f2b0 <MXC_DelayInit+0x78>)
1000f28a:	1a28      	subs	r0, r5, r0
1000f28c:	6018      	str	r0, [r3, #0]
    } else {
        endtick = starttick - lastticks;
    }
}
1000f28e:	bd38      	pop	{r3, r4, r5, pc}
        reload = SysTick->LOAD + 1; // get the current reload value
1000f290:	695d      	ldr	r5, [r3, #20]
1000f292:	3501      	adds	r5, #1
1000f294:	e7e4      	b.n	1000f260 <MXC_DelayInit+0x28>
        endtick = starttick - lastticks;
1000f296:	4b06      	ldr	r3, [pc, #24]	@ (1000f2b0 <MXC_DelayInit+0x78>)
1000f298:	1a20      	subs	r0, r4, r0
1000f29a:	6018      	str	r0, [r3, #0]
}
1000f29c:	bd38      	pop	{r3, r4, r5, pc}
1000f29e:	bf00      	nop
1000f2a0:	20000cb0 	.word	0x20000cb0
1000f2a4:	20001768 	.word	0x20001768
1000f2a8:	000f4240 	.word	0x000f4240
1000f2ac:	20000004 	.word	0x20000004
1000f2b0:	20000cb4 	.word	0x20000cb4

1000f2b4 <MXC_DelayAsync>:

/* ************************************************************************** */
int MXC_DelayAsync(uint32_t us, mxc_delay_complete_t callback)
{
1000f2b4:	b510      	push	{r4, lr}
    cbFunc = callback;

    // Check if timeout currently ongoing
    if (overflows > 0) {
1000f2b6:	4c0c      	ldr	r4, [pc, #48]	@ (1000f2e8 <MXC_DelayAsync+0x34>)
    cbFunc = callback;
1000f2b8:	4b0c      	ldr	r3, [pc, #48]	@ (1000f2ec <MXC_DelayAsync+0x38>)
    if (overflows > 0) {
1000f2ba:	6822      	ldr	r2, [r4, #0]
    cbFunc = callback;
1000f2bc:	6019      	str	r1, [r3, #0]
    if (overflows > 0) {
1000f2be:	2a00      	cmp	r2, #0
1000f2c0:	dc0e      	bgt.n	1000f2e0 <MXC_DelayAsync+0x2c>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1000f2c2:	b908      	cbnz	r0, 1000f2c8 <MXC_DelayAsync+0x14>
        return E_NO_ERROR;
1000f2c4:	2000      	movs	r0, #0
    if (overflows > 0) {
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
    }

    return E_NO_ERROR;
}
1000f2c6:	bd10      	pop	{r4, pc}
    MXC_DelayInit(us);
1000f2c8:	f7ff ffb6 	bl	1000f238 <MXC_DelayInit>
    if (overflows > 0) {
1000f2cc:	6823      	ldr	r3, [r4, #0]
1000f2ce:	2b00      	cmp	r3, #0
1000f2d0:	ddf8      	ble.n	1000f2c4 <MXC_DelayAsync+0x10>
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
1000f2d2:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1000f2d6:	6913      	ldr	r3, [r2, #16]
1000f2d8:	f043 0302 	orr.w	r3, r3, #2
1000f2dc:	6113      	str	r3, [r2, #16]
1000f2de:	e7f1      	b.n	1000f2c4 <MXC_DelayAsync+0x10>
        return E_BUSY;
1000f2e0:	f06f 0005 	mvn.w	r0, #5
}
1000f2e4:	bd10      	pop	{r4, pc}
1000f2e6:	bf00      	nop
1000f2e8:	20000004 	.word	0x20000004
1000f2ec:	20000cac 	.word	0x20000cac

1000f2f0 <MXC_DelayCheck>:

/* ************************************************************************** */
int MXC_DelayCheck(void)
{
1000f2f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Check if timeout currently ongoing
    if (overflows < 0) {
1000f2f2:	4c17      	ldr	r4, [pc, #92]	@ (1000f350 <MXC_DelayCheck+0x60>)
1000f2f4:	6823      	ldr	r3, [r4, #0]
1000f2f6:	2b00      	cmp	r3, #0
1000f2f8:	db1e      	blt.n	1000f338 <MXC_DelayCheck+0x48>

        return E_NO_ERROR;
    }

    // Check the global values
    if ((overflows == 0) && (SysTick->VAL <= endtick)) {
1000f2fa:	6826      	ldr	r6, [r4, #0]
1000f2fc:	bb2e      	cbnz	r6, 1000f34a <MXC_DelayCheck+0x5a>
1000f2fe:	4b15      	ldr	r3, [pc, #84]	@ (1000f354 <MXC_DelayCheck+0x64>)
1000f300:	f04f 25e0 	mov.w	r5, #3758153728	@ 0xe000e000
1000f304:	681b      	ldr	r3, [r3, #0]
1000f306:	69aa      	ldr	r2, [r5, #24]
1000f308:	429a      	cmp	r2, r3
1000f30a:	d81e      	bhi.n	1000f34a <MXC_DelayCheck+0x5a>
}

/* ************************************************************************** */
void MXC_DelayAbort(void)
{
    if (cbFunc != NULL) {
1000f30c:	4f12      	ldr	r7, [pc, #72]	@ (1000f358 <MXC_DelayCheck+0x68>)
1000f30e:	683b      	ldr	r3, [r7, #0]
1000f310:	b15b      	cbz	r3, 1000f32a <MXC_DelayCheck+0x3a>
        cbFunc(E_ABORT);
1000f312:	f06f 000f 	mvn.w	r0, #15
1000f316:	4798      	blx	r3
        cbFunc = NULL;
    }

    SysTick->CTRL = ctrl_save;
1000f318:	4b10      	ldr	r3, [pc, #64]	@ (1000f35c <MXC_DelayCheck+0x6c>)
        cbFunc = NULL;
1000f31a:	603e      	str	r6, [r7, #0]
    SysTick->CTRL = ctrl_save;
1000f31c:	681a      	ldr	r2, [r3, #0]
1000f31e:	612a      	str	r2, [r5, #16]
    overflows = -1;
1000f320:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1000f324:	6023      	str	r3, [r4, #0]
        return E_NO_ERROR;
1000f326:	2000      	movs	r0, #0
}
1000f328:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SysTick->CTRL = ctrl_save;
1000f32a:	4a0c      	ldr	r2, [pc, #48]	@ (1000f35c <MXC_DelayCheck+0x6c>)
    overflows = -1;
1000f32c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
1000f330:	6812      	ldr	r2, [r2, #0]
1000f332:	612a      	str	r2, [r5, #16]
    overflows = -1;
1000f334:	6023      	str	r3, [r4, #0]
        if (cbFunc != NULL) {
1000f336:	e7f6      	b.n	1000f326 <MXC_DelayCheck+0x36>
        if (cbFunc != NULL) {
1000f338:	4c07      	ldr	r4, [pc, #28]	@ (1000f358 <MXC_DelayCheck+0x68>)
1000f33a:	6823      	ldr	r3, [r4, #0]
1000f33c:	2b00      	cmp	r3, #0
1000f33e:	d0f2      	beq.n	1000f326 <MXC_DelayCheck+0x36>
            cbFunc(E_NO_ERROR);
1000f340:	2000      	movs	r0, #0
1000f342:	4798      	blx	r3
            cbFunc = NULL;
1000f344:	2300      	movs	r3, #0
1000f346:	6023      	str	r3, [r4, #0]
1000f348:	e7ed      	b.n	1000f326 <MXC_DelayCheck+0x36>
    return E_BUSY;
1000f34a:	f06f 0005 	mvn.w	r0, #5
}
1000f34e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000f350:	20000004 	.word	0x20000004
1000f354:	20000cb4 	.word	0x20000cb4
1000f358:	20000cac 	.word	0x20000cac
1000f35c:	20000cb0 	.word	0x20000cb0

1000f360 <MXC_DelayAbort>:
{
1000f360:	b510      	push	{r4, lr}
    if (cbFunc != NULL) {
1000f362:	4c09      	ldr	r4, [pc, #36]	@ (1000f388 <MXC_DelayAbort+0x28>)
1000f364:	6823      	ldr	r3, [r4, #0]
1000f366:	b123      	cbz	r3, 1000f372 <MXC_DelayAbort+0x12>
        cbFunc(E_ABORT);
1000f368:	f06f 000f 	mvn.w	r0, #15
1000f36c:	4798      	blx	r3
        cbFunc = NULL;
1000f36e:	2300      	movs	r3, #0
1000f370:	6023      	str	r3, [r4, #0]
    SysTick->CTRL = ctrl_save;
1000f372:	4a06      	ldr	r2, [pc, #24]	@ (1000f38c <MXC_DelayAbort+0x2c>)
    overflows = -1;
1000f374:	4b06      	ldr	r3, [pc, #24]	@ (1000f390 <MXC_DelayAbort+0x30>)
    SysTick->CTRL = ctrl_save;
1000f376:	6810      	ldr	r0, [r2, #0]
1000f378:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
    overflows = -1;
1000f37c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
1000f380:	6108      	str	r0, [r1, #16]
    overflows = -1;
1000f382:	601a      	str	r2, [r3, #0]
}
1000f384:	bd10      	pop	{r4, pc}
1000f386:	bf00      	nop
1000f388:	20000cac 	.word	0x20000cac
1000f38c:	20000cb0 	.word	0x20000cb0
1000f390:	20000004 	.word	0x20000004

1000f394 <MXC_Delay>:

/* ************************************************************************** */
int MXC_Delay(uint32_t us)
{
1000f394:	b538      	push	{r3, r4, r5, lr}
    // Check if timeout currently ongoing
    if (overflows > 0) {
1000f396:	4c18      	ldr	r4, [pc, #96]	@ (1000f3f8 <MXC_Delay+0x64>)
1000f398:	6822      	ldr	r2, [r4, #0]
1000f39a:	2a00      	cmp	r2, #0
1000f39c:	dc29      	bgt.n	1000f3f2 <MXC_Delay+0x5e>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1000f39e:	b908      	cbnz	r0, 1000f3a4 <MXC_Delay+0x10>
        return E_NO_ERROR;
1000f3a0:	2000      	movs	r0, #0
    // Wait for the counter value
    while (SysTick->VAL > endtick) {}

    MXC_DelayAbort();
    return E_NO_ERROR;
}
1000f3a2:	bd38      	pop	{r3, r4, r5, pc}
    MXC_DelayInit(us);
1000f3a4:	f7ff ff48 	bl	1000f238 <MXC_DelayInit>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1000f3a8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    while (overflows > 0) {
1000f3ac:	e002      	b.n	1000f3b4 <MXC_Delay+0x20>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1000f3ae:	6913      	ldr	r3, [r2, #16]
1000f3b0:	03db      	lsls	r3, r3, #15
1000f3b2:	d41a      	bmi.n	1000f3ea <MXC_Delay+0x56>
    while (overflows > 0) {
1000f3b4:	6823      	ldr	r3, [r4, #0]
1000f3b6:	2b00      	cmp	r3, #0
1000f3b8:	dcf9      	bgt.n	1000f3ae <MXC_Delay+0x1a>
    while (SysTick->VAL > endtick) {}
1000f3ba:	4b10      	ldr	r3, [pc, #64]	@ (1000f3fc <MXC_Delay+0x68>)
1000f3bc:	681a      	ldr	r2, [r3, #0]
1000f3be:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
1000f3c2:	698b      	ldr	r3, [r1, #24]
1000f3c4:	4293      	cmp	r3, r2
1000f3c6:	d8fc      	bhi.n	1000f3c2 <MXC_Delay+0x2e>
    if (cbFunc != NULL) {
1000f3c8:	4d0d      	ldr	r5, [pc, #52]	@ (1000f400 <MXC_Delay+0x6c>)
1000f3ca:	682b      	ldr	r3, [r5, #0]
1000f3cc:	b123      	cbz	r3, 1000f3d8 <MXC_Delay+0x44>
        cbFunc(E_ABORT);
1000f3ce:	f06f 000f 	mvn.w	r0, #15
1000f3d2:	4798      	blx	r3
        cbFunc = NULL;
1000f3d4:	2300      	movs	r3, #0
1000f3d6:	602b      	str	r3, [r5, #0]
    SysTick->CTRL = ctrl_save;
1000f3d8:	4b0a      	ldr	r3, [pc, #40]	@ (1000f404 <MXC_Delay+0x70>)
1000f3da:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1000f3de:	6819      	ldr	r1, [r3, #0]
1000f3e0:	6111      	str	r1, [r2, #16]
    overflows = -1;
1000f3e2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1000f3e6:	6023      	str	r3, [r4, #0]
}
1000f3e8:	e7da      	b.n	1000f3a0 <MXC_Delay+0xc>
            overflows--;
1000f3ea:	6823      	ldr	r3, [r4, #0]
1000f3ec:	3b01      	subs	r3, #1
1000f3ee:	6023      	str	r3, [r4, #0]
1000f3f0:	e7e0      	b.n	1000f3b4 <MXC_Delay+0x20>
        return E_BUSY;
1000f3f2:	f06f 0005 	mvn.w	r0, #5
}
1000f3f6:	bd38      	pop	{r3, r4, r5, pc}
1000f3f8:	20000004 	.word	0x20000004
1000f3fc:	20000cb4 	.word	0x20000cb4
1000f400:	20000cac 	.word	0x20000cac
1000f404:	20000cb0 	.word	0x20000cb0

1000f408 <MXC_NVIC_SetVector>:
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
    SCB->VTOR = (uint32_t)&ramVectorTable;
}

void MXC_NVIC_SetVector(IRQn_Type irqn, void (*irq_handler)(void))
{
1000f408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int index = irqn + 16; /* offset for externals */

    /* If not copied, do copy */
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1000f40a:	4e0f      	ldr	r6, [pc, #60]	@ (1000f448 <MXC_NVIC_SetVector+0x40>)
1000f40c:	4b0f      	ldr	r3, [pc, #60]	@ (1000f44c <MXC_NVIC_SetVector+0x44>)
1000f40e:	68b2      	ldr	r2, [r6, #8]
1000f410:	429a      	cmp	r2, r3
{
1000f412:	4604      	mov	r4, r0
1000f414:	460d      	mov	r5, r1
    int index = irqn + 16; /* offset for externals */
1000f416:	f100 0710 	add.w	r7, r0, #16
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1000f41a:	d007      	beq.n	1000f42c <MXC_NVIC_SetVector+0x24>
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
1000f41c:	4618      	mov	r0, r3
1000f41e:	490c      	ldr	r1, [pc, #48]	@ (1000f450 <MXC_NVIC_SetVector+0x48>)
1000f420:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
1000f424:	f006 fa4c 	bl	100158c0 <memcpy>
1000f428:	4603      	mov	r3, r0
    SCB->VTOR = (uint32_t)&ramVectorTable;
1000f42a:	60b0      	str	r0, [r6, #8]
  if ((int32_t)(IRQn) >= 0)
1000f42c:	2c00      	cmp	r4, #0
        NVIC_SetRAM();
    }

    ramVectorTable[index] = irq_handler;
1000f42e:	f843 5027 	str.w	r5, [r3, r7, lsl #2]
1000f432:	db07      	blt.n	1000f444 <MXC_NVIC_SetVector+0x3c>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000f434:	4a07      	ldr	r2, [pc, #28]	@ (1000f454 <MXC_NVIC_SetVector+0x4c>)
1000f436:	0961      	lsrs	r1, r4, #5
1000f438:	2301      	movs	r3, #1
1000f43a:	f004 041f 	and.w	r4, r4, #31
1000f43e:	40a3      	lsls	r3, r4
1000f440:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
    NVIC_EnableIRQ(irqn);
}
1000f444:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000f446:	bf00      	nop
1000f448:	e000ed00 	.word	0xe000ed00
1000f44c:	20000e00 	.word	0x20000e00
1000f450:	1000e000 	.word	0x1000e000
1000f454:	e000e100 	.word	0xe000e100

1000f458 <MXC_SYS_ClockDisable>:

/* ************************************************************************** */
void MXC_SYS_ClockDisable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
1000f458:	283f      	cmp	r0, #63	@ 0x3f
1000f45a:	d908      	bls.n	1000f46e <MXC_SYS_ClockDisable+0x16>
        clock -= 64;
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1000f45c:	4a0d      	ldr	r2, [pc, #52]	@ (1000f494 <MXC_SYS_ClockDisable+0x3c>)
        clock -= 64;
1000f45e:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1000f460:	68d1      	ldr	r1, [r2, #12]
1000f462:	b2c0      	uxtb	r0, r0
1000f464:	2301      	movs	r3, #1
1000f466:	4083      	lsls	r3, r0
1000f468:	430b      	orrs	r3, r1
1000f46a:	60d3      	str	r3, [r2, #12]
1000f46c:	4770      	bx	lr
    } else if (clock > 31) {
1000f46e:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 |= (0x1 << clock);
1000f470:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    } else if (clock > 31) {
1000f474:	d907      	bls.n	1000f486 <MXC_SYS_ClockDisable+0x2e>
        clock -= 32;
1000f476:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 |= (0x1 << clock);
1000f478:	6c91      	ldr	r1, [r2, #72]	@ 0x48
1000f47a:	b2c0      	uxtb	r0, r0
1000f47c:	2301      	movs	r3, #1
1000f47e:	4083      	lsls	r3, r0
1000f480:	430b      	orrs	r3, r1
1000f482:	6493      	str	r3, [r2, #72]	@ 0x48
1000f484:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 |= (0x1 << clock);
1000f486:	6a51      	ldr	r1, [r2, #36]	@ 0x24
1000f488:	2301      	movs	r3, #1
1000f48a:	4083      	lsls	r3, r0
1000f48c:	430b      	orrs	r3, r1
1000f48e:	6253      	str	r3, [r2, #36]	@ 0x24
    }
}
1000f490:	4770      	bx	lr
1000f492:	bf00      	nop
1000f494:	40080000 	.word	0x40080000

1000f498 <MXC_SYS_ClockEnable>:

/* ************************************************************************** */
void MXC_SYS_ClockEnable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
1000f498:	283f      	cmp	r0, #63	@ 0x3f
1000f49a:	d909      	bls.n	1000f4b0 <MXC_SYS_ClockEnable+0x18>
        clock -= 64;
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1000f49c:	490e      	ldr	r1, [pc, #56]	@ (1000f4d8 <MXC_SYS_ClockEnable+0x40>)
        clock -= 64;
1000f49e:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1000f4a0:	68cb      	ldr	r3, [r1, #12]
1000f4a2:	b2c0      	uxtb	r0, r0
1000f4a4:	2201      	movs	r2, #1
1000f4a6:	4082      	lsls	r2, r0
1000f4a8:	ea23 0302 	bic.w	r3, r3, r2
1000f4ac:	60cb      	str	r3, [r1, #12]
1000f4ae:	4770      	bx	lr
    } else if (clock > 31) {
1000f4b0:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1000f4b2:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
    } else if (clock > 31) {
1000f4b6:	d908      	bls.n	1000f4ca <MXC_SYS_ClockEnable+0x32>
        clock -= 32;
1000f4b8:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1000f4ba:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
1000f4bc:	b2c0      	uxtb	r0, r0
1000f4be:	2201      	movs	r2, #1
1000f4c0:	4082      	lsls	r2, r0
1000f4c2:	ea23 0302 	bic.w	r3, r3, r2
1000f4c6:	648b      	str	r3, [r1, #72]	@ 0x48
1000f4c8:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 &= ~(0x1 << clock);
1000f4ca:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1000f4cc:	2201      	movs	r2, #1
1000f4ce:	4082      	lsls	r2, r0
1000f4d0:	ea23 0302 	bic.w	r3, r3, r2
1000f4d4:	624b      	str	r3, [r1, #36]	@ 0x24
    }
}
1000f4d6:	4770      	bx	lr
1000f4d8:	40080000 	.word	0x40080000

1000f4dc <MXC_SYS_ClockSourceEnable>:
    }
}

/******************************************************************************/
int MXC_SYS_ClockSourceEnable(mxc_sys_system_clock_t clock)
{
1000f4dc:	b510      	push	{r4, lr}
    switch (clock) {
1000f4de:	2807      	cmp	r0, #7
1000f4e0:	d80a      	bhi.n	1000f4f8 <MXC_SYS_ClockSourceEnable+0x1c>
1000f4e2:	e8df f000 	tbb	[pc, r0]
1000f4e6:	090c      	.short	0x090c
1000f4e8:	47332309 	.word	0x47332309
1000f4ec:	045b      	.short	0x045b

    default:
        return E_BAD_PARAM;
        break;
    }
}
1000f4ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return MXC_GPIO_Config(&gpio_cfg_extclk);
1000f4f2:	4836      	ldr	r0, [pc, #216]	@ (1000f5cc <MXC_SYS_ClockSourceEnable+0xf0>)
1000f4f4:	f000 b906 	b.w	1000f704 <MXC_GPIO_Config>
    switch (clock) {
1000f4f8:	f06f 0002 	mvn.w	r0, #2
}
1000f4fc:	bd10      	pop	{r4, pc}
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1000f4fe:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    // We do not have access to a system tick in the RV core.
    while (!(MXC_GCR->clkctrl & ready)) {}
    return E_NO_ERROR;
#else
    // Start timeout, wait for ready
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000f502:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1000f504:	68a3      	ldr	r3, [r4, #8]
1000f506:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
1000f50a:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000f50c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000f510:	f7ff fed0 	bl	1000f2b4 <MXC_DelayAsync>
1000f514:	e003      	b.n	1000f51e <MXC_SYS_ClockSourceEnable+0x42>
    do {
        if (MXC_GCR->clkctrl & ready) {
            MXC_DelayAbort();
            return E_NO_ERROR;
        }
    } while (MXC_DelayCheck() == E_BUSY);
1000f516:	f7ff feeb 	bl	1000f2f0 <MXC_DelayCheck>
1000f51a:	3006      	adds	r0, #6
1000f51c:	d152      	bne.n	1000f5c4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000f51e:	68a3      	ldr	r3, [r4, #8]
1000f520:	0159      	lsls	r1, r3, #5
1000f522:	d5f8      	bpl.n	1000f516 <MXC_SYS_ClockSourceEnable+0x3a>
            MXC_DelayAbort();
1000f524:	f7ff ff1c 	bl	1000f360 <MXC_DelayAbort>
            return E_NO_ERROR;
1000f528:	2000      	movs	r0, #0
}
1000f52a:	bd10      	pop	{r4, pc}
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000f52c:	2100      	movs	r1, #0
1000f52e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000f532:	f7ff febf 	bl	1000f2b4 <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
1000f536:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1000f53a:	e003      	b.n	1000f544 <MXC_SYS_ClockSourceEnable+0x68>
    } while (MXC_DelayCheck() == E_BUSY);
1000f53c:	f7ff fed8 	bl	1000f2f0 <MXC_DelayCheck>
1000f540:	3006      	adds	r0, #6
1000f542:	d13f      	bne.n	1000f5c4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000f544:	68a3      	ldr	r3, [r4, #8]
1000f546:	009a      	lsls	r2, r3, #2
1000f548:	d4ec      	bmi.n	1000f524 <MXC_SYS_ClockSourceEnable+0x48>
1000f54a:	e7f7      	b.n	1000f53c <MXC_SYS_ClockSourceEnable+0x60>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1000f54c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000f550:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1000f552:	68a3      	ldr	r3, [r4, #8]
1000f554:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
1000f558:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000f55a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000f55e:	f7ff fea9 	bl	1000f2b4 <MXC_DelayAsync>
1000f562:	e003      	b.n	1000f56c <MXC_SYS_ClockSourceEnable+0x90>
    } while (MXC_DelayCheck() == E_BUSY);
1000f564:	f7ff fec4 	bl	1000f2f0 <MXC_DelayCheck>
1000f568:	3006      	adds	r0, #6
1000f56a:	d12b      	bne.n	1000f5c4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000f56c:	68a3      	ldr	r3, [r4, #8]
1000f56e:	011b      	lsls	r3, r3, #4
1000f570:	d5f8      	bpl.n	1000f564 <MXC_SYS_ClockSourceEnable+0x88>
1000f572:	e7d7      	b.n	1000f524 <MXC_SYS_ClockSourceEnable+0x48>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1000f574:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000f578:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1000f57a:	68a3      	ldr	r3, [r4, #8]
1000f57c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1000f580:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000f582:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000f586:	f7ff fe95 	bl	1000f2b4 <MXC_DelayAsync>
1000f58a:	e003      	b.n	1000f594 <MXC_SYS_ClockSourceEnable+0xb8>
    } while (MXC_DelayCheck() == E_BUSY);
1000f58c:	f7ff feb0 	bl	1000f2f0 <MXC_DelayCheck>
1000f590:	3006      	adds	r0, #6
1000f592:	d117      	bne.n	1000f5c4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000f594:	68a3      	ldr	r3, [r4, #8]
1000f596:	00d8      	lsls	r0, r3, #3
1000f598:	d4c4      	bmi.n	1000f524 <MXC_SYS_ClockSourceEnable+0x48>
1000f59a:	e7f7      	b.n	1000f58c <MXC_SYS_ClockSourceEnable+0xb0>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1000f59c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000f5a0:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1000f5a2:	68a3      	ldr	r3, [r4, #8]
1000f5a4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
1000f5a8:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000f5aa:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000f5ae:	f7ff fe81 	bl	1000f2b4 <MXC_DelayAsync>
1000f5b2:	e003      	b.n	1000f5bc <MXC_SYS_ClockSourceEnable+0xe0>
    } while (MXC_DelayCheck() == E_BUSY);
1000f5b4:	f7ff fe9c 	bl	1000f2f0 <MXC_DelayCheck>
1000f5b8:	3006      	adds	r0, #6
1000f5ba:	d103      	bne.n	1000f5c4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000f5bc:	68a3      	ldr	r3, [r4, #8]
1000f5be:	019b      	lsls	r3, r3, #6
1000f5c0:	d4b0      	bmi.n	1000f524 <MXC_SYS_ClockSourceEnable+0x48>
1000f5c2:	e7f7      	b.n	1000f5b4 <MXC_SYS_ClockSourceEnable+0xd8>

    return E_TIME_OUT;
1000f5c4:	f06f 0009 	mvn.w	r0, #9
}
1000f5c8:	bd10      	pop	{r4, pc}
1000f5ca:	bf00      	nop
1000f5cc:	1001e984 	.word	0x1001e984

1000f5d0 <MXC_SYS_Reset_Periph>:

/* ************************************************************************** */
void MXC_SYS_Reset_Periph(mxc_sys_reset_t reset)
{
    /* The mxc_sys_reset_t enum uses enum values that are the offset by 32 and 64 for the rst register. */
    if (reset > 63) {
1000f5d0:	283f      	cmp	r0, #63	@ 0x3f
1000f5d2:	d909      	bls.n	1000f5e8 <MXC_SYS_Reset_Periph+0x18>
        reset -= 64;
1000f5d4:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->rst = (0x1 << reset);
1000f5d6:	490f      	ldr	r1, [pc, #60]	@ (1000f614 <MXC_SYS_Reset_Periph+0x44>)
1000f5d8:	b2c0      	uxtb	r0, r0
1000f5da:	2201      	movs	r2, #1
1000f5dc:	4082      	lsls	r2, r0
1000f5de:	608a      	str	r2, [r1, #8]
        while (MXC_LPGCR->rst & (0x1 << reset)) {}
1000f5e0:	688b      	ldr	r3, [r1, #8]
1000f5e2:	421a      	tst	r2, r3
1000f5e4:	d1fc      	bne.n	1000f5e0 <MXC_SYS_Reset_Periph+0x10>
1000f5e6:	4770      	bx	lr
    } else if (reset > 31) {
1000f5e8:	281f      	cmp	r0, #31
1000f5ea:	d90a      	bls.n	1000f602 <MXC_SYS_Reset_Periph+0x32>
        reset -= 32;
1000f5ec:	3820      	subs	r0, #32
        MXC_GCR->rst1 = (0x1 << reset);
1000f5ee:	b2c0      	uxtb	r0, r0
1000f5f0:	2201      	movs	r2, #1
1000f5f2:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
1000f5f6:	4082      	lsls	r2, r0
1000f5f8:	644a      	str	r2, [r1, #68]	@ 0x44
        while (MXC_GCR->rst1 & (0x1 << reset)) {}
1000f5fa:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
1000f5fc:	421a      	tst	r2, r3
1000f5fe:	d1fc      	bne.n	1000f5fa <MXC_SYS_Reset_Periph+0x2a>
1000f600:	4770      	bx	lr
    } else {
        MXC_GCR->rst0 = (0x1 << reset);
1000f602:	2201      	movs	r2, #1
1000f604:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
1000f608:	4082      	lsls	r2, r0
1000f60a:	604a      	str	r2, [r1, #4]
        while (MXC_GCR->rst0 & (0x1 << reset)) {}
1000f60c:	684b      	ldr	r3, [r1, #4]
1000f60e:	421a      	tst	r2, r3
1000f610:	d1fc      	bne.n	1000f60c <MXC_SYS_Reset_Periph+0x3c>
    }
}
1000f612:	4770      	bx	lr
1000f614:	40080000 	.word	0x40080000

1000f618 <MXC_FLC_Write32>:
    uint32_t addr, aligned;
    int err;
    mxc_flc_regs_t *flc = NULL;

    // Address checked if it is byte addressable
    if (address & 0x3) {
1000f618:	0782      	lsls	r2, r0, #30
1000f61a:	d133      	bne.n	1000f684 <MXC_FLC_Write32+0x6c>
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
1000f61c:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
1000f620:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
1000f624:	4684      	mov	ip, r0
1000f626:	460a      	mov	r2, r1
1000f628:	d329      	bcc.n	1000f67e <MXC_FLC_Write32+0x66>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
1000f62a:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
1000f62e:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
1000f632:	d227      	bcs.n	1000f684 <MXC_FLC_Write32+0x6c>
        return E_BAD_PARAM;
    }

    // Align address to 128-bit word
    aligned = address & 0xfffffff0;
1000f634:	f020 030f 	bic.w	r3, r0, #15
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
1000f638:	f1a3 5384 	sub.w	r3, r3, #276824064	@ 0x10800000
1000f63c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
1000f640:	d220      	bcs.n	1000f684 <MXC_FLC_Write32+0x6c>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
1000f642:	f643 73f0 	movw	r3, #16368	@ 0x3ff0
1000f646:	4003      	ands	r3, r0
1000f648:	f503 2300 	add.w	r3, r3, #524288	@ 0x80000
{
1000f64c:	b500      	push	{lr}

    if ((err = MXC_FLC_ME17_GetPhysicalAddress(aligned, &addr)) < E_NO_ERROR) {
        return err;
    }

    err = MXC_FLC_RevA_Write32Using128((mxc_flc_reva_regs_t *)flc, address, data, addr);
1000f64e:	480f      	ldr	r0, [pc, #60]	@ (1000f68c <MXC_FLC_Write32+0x74>)
{
1000f650:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_Write32Using128((mxc_flc_reva_regs_t *)flc, address, data, addr);
1000f652:	4661      	mov	r1, ip
1000f654:	f016 fa5c 	bl	10025b10 <__MXC_FLC_RevA_Write32Using128_veneer>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
1000f658:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
1000f65c:	6813      	ldr	r3, [r2, #0]
1000f65e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000f662:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
1000f664:	6813      	ldr	r3, [r2, #0]
1000f666:	065b      	lsls	r3, r3, #25
1000f668:	d4fc      	bmi.n	1000f664 <MXC_FLC_Write32+0x4c>
    line = *line_addr;
1000f66a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
1000f66e:	4b08      	ldr	r3, [pc, #32]	@ (1000f690 <MXC_FLC_Write32+0x78>)
    line = *line_addr;
1000f670:	6812      	ldr	r2, [r2, #0]
1000f672:	9201      	str	r2, [sp, #4]
    line = *line_addr;
1000f674:	681b      	ldr	r3, [r3, #0]
1000f676:	9301      	str	r3, [sp, #4]

    // Flush the cache
    MXC_FLC_ME17_Flash_Operation();

    return err;
}
1000f678:	b003      	add	sp, #12
1000f67a:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
1000f67e:	4b05      	ldr	r3, [pc, #20]	@ (1000f694 <MXC_FLC_Write32+0x7c>)
1000f680:	4003      	ands	r3, r0
1000f682:	e7e3      	b.n	1000f64c <MXC_FLC_Write32+0x34>
        return E_BAD_PARAM;
1000f684:	f06f 0002 	mvn.w	r0, #2
}
1000f688:	4770      	bx	lr
1000f68a:	bf00      	nop
1000f68c:	40029000 	.word	0x40029000
1000f690:	10002000 	.word	0x10002000
1000f694:	0007fff0 	.word	0x0007fff0

1000f698 <MXC_FLC_Write>:
}

//******************************************************************************
int MXC_FLC_Write(uint32_t address, uint32_t length, uint32_t *buffer)
{
    return MXC_FLC_Com_Write(address, length, buffer);
1000f698:	f016 ba36 	b.w	10025b08 <__MXC_FLC_Com_Write_veneer>

1000f69c <MXC_FLC_Read>:
}

//******************************************************************************
void MXC_FLC_Read(int address, void *buffer, int len)
{
    MXC_FLC_Com_Read(address, buffer, len);
1000f69c:	f016 ba30 	b.w	10025b00 <__MXC_FLC_Com_Read_veneer>

1000f6a0 <MXC_FLC_EnableInt>:
}

//******************************************************************************
int MXC_FLC_EnableInt(uint32_t flags)
{
    return MXC_FLC_RevA_EnableInt(flags);
1000f6a0:	f000 b800 	b.w	1000f6a4 <MXC_FLC_RevA_EnableInt>

1000f6a4 <MXC_FLC_RevA_EnableInt>:
//******************************************************************************
int MXC_FLC_RevA_EnableInt(uint32_t mask)
{
    mask &= (MXC_F_FLC_REVA_INTR_DONEIE | MXC_F_FLC_REVA_INTR_AFIE);

    if (!mask) {
1000f6a4:	f410 7340 	ands.w	r3, r0, #768	@ 0x300
1000f6a8:	d006      	beq.n	1000f6b8 <MXC_FLC_RevA_EnableInt+0x14>
        /* No bits set? Wasn't something we can enable. */
        return E_BAD_PARAM;
    }

    /* Apply enables and write back, preserving the flags */
    flc_int->intr |= mask;
1000f6aa:	4a05      	ldr	r2, [pc, #20]	@ (1000f6c0 <MXC_FLC_RevA_EnableInt+0x1c>)
1000f6ac:	6811      	ldr	r1, [r2, #0]
1000f6ae:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
1000f6b0:	4313      	orrs	r3, r2

    return E_NO_ERROR;
1000f6b2:	2000      	movs	r0, #0
    flc_int->intr |= mask;
1000f6b4:	624b      	str	r3, [r1, #36]	@ 0x24
    return E_NO_ERROR;
1000f6b6:	4770      	bx	lr
        return E_BAD_PARAM;
1000f6b8:	f06f 0002 	mvn.w	r0, #2
}
1000f6bc:	4770      	bx	lr
1000f6be:	bf00      	nop
1000f6c0:	20000008 	.word	0x20000008

1000f6c4 <MXC_GPIO_Init>:
/* **** Globals **** */

/* **** Functions **** */
int MXC_GPIO_Init(uint32_t portmask)
{
    if (portmask & 0x1) {
1000f6c4:	07c1      	lsls	r1, r0, #31
{
1000f6c6:	b510      	push	{r4, lr}
1000f6c8:	4604      	mov	r4, r0
    if (portmask & 0x1) {
1000f6ca:	d408      	bmi.n	1000f6de <MXC_GPIO_Init+0x1a>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
    }

    if (portmask & 0x2) {
1000f6cc:	07a2      	lsls	r2, r4, #30
1000f6ce:	d40b      	bmi.n	1000f6e8 <MXC_GPIO_Init+0x24>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
    }

    if (portmask & 0x4) {
1000f6d0:	0763      	lsls	r3, r4, #29
1000f6d2:	d40e      	bmi.n	1000f6f2 <MXC_GPIO_Init+0x2e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
    }

    return MXC_GPIO_Common_Init(portmask);
1000f6d4:	4620      	mov	r0, r4
}
1000f6d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1000f6da:	f001 bbbd 	b.w	10010e58 <MXC_GPIO_Common_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1000f6de:	2000      	movs	r0, #0
1000f6e0:	f7ff feda 	bl	1000f498 <MXC_SYS_ClockEnable>
    if (portmask & 0x2) {
1000f6e4:	07a2      	lsls	r2, r4, #30
1000f6e6:	d5f3      	bpl.n	1000f6d0 <MXC_GPIO_Init+0xc>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
1000f6e8:	2001      	movs	r0, #1
1000f6ea:	f7ff fed5 	bl	1000f498 <MXC_SYS_ClockEnable>
    if (portmask & 0x4) {
1000f6ee:	0763      	lsls	r3, r4, #29
1000f6f0:	d5f0      	bpl.n	1000f6d4 <MXC_GPIO_Init+0x10>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1000f6f2:	2040      	movs	r0, #64	@ 0x40
1000f6f4:	f7ff fed0 	bl	1000f498 <MXC_SYS_ClockEnable>
    return MXC_GPIO_Common_Init(portmask);
1000f6f8:	4620      	mov	r0, r4
}
1000f6fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1000f6fe:	f001 bbab 	b.w	10010e58 <MXC_GPIO_Common_Init>
1000f702:	bf00      	nop

1000f704 <MXC_GPIO_Config>:

    return E_NO_ERROR;
}

int MXC_GPIO_Config(const mxc_gpio_cfg_t *cfg)
{
1000f704:	b570      	push	{r4, r5, r6, lr}
    int port, error;
    mxc_gpio_regs_t *gpio = cfg->port;

    port = MXC_GPIO_GET_IDX(cfg->port);
1000f706:	4b7f      	ldr	r3, [pc, #508]	@ (1000f904 <MXC_GPIO_Config+0x200>)
    mxc_gpio_regs_t *gpio = cfg->port;
1000f708:	6805      	ldr	r5, [r0, #0]
    port = MXC_GPIO_GET_IDX(cfg->port);
1000f70a:	429d      	cmp	r5, r3
{
1000f70c:	4604      	mov	r4, r0
    port = MXC_GPIO_GET_IDX(cfg->port);
1000f70e:	d037      	beq.n	1000f780 <MXC_GPIO_Config+0x7c>
1000f710:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f714:	429d      	cmp	r5, r3
1000f716:	d020      	beq.n	1000f75a <MXC_GPIO_Config+0x56>
1000f718:	f503 23ee 	add.w	r3, r3, #487424	@ 0x77000
1000f71c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
1000f720:	429d      	cmp	r5, r3
1000f722:	d07f      	beq.n	1000f824 <MXC_GPIO_Config+0x120>
1000f724:	4878      	ldr	r0, [pc, #480]	@ (1000f908 <MXC_GPIO_Config+0x204>)
1000f726:	1a28      	subs	r0, r5, r0
1000f728:	fab0 f080 	clz	r0, r0
1000f72c:	0940      	lsrs	r0, r0, #5
1000f72e:	00c0      	lsls	r0, r0, #3

    MXC_GPIO_Init(1 << port);
1000f730:	f7ff ffc8 	bl	1000f6c4 <MXC_GPIO_Init>

    if (cfg->port == MXC_GPIO3) {
1000f734:	4b74      	ldr	r3, [pc, #464]	@ (1000f908 <MXC_GPIO_Config+0x204>)
1000f736:	6822      	ldr	r2, [r4, #0]
1000f738:	429a      	cmp	r2, r3
1000f73a:	d015      	beq.n	1000f768 <MXC_GPIO_Config+0x64>
        default:
            return E_NOT_SUPPORTED;
        }
    } else {
        // Configure alternate function
        error = MXC_GPIO_RevA_SetAF((mxc_gpio_reva_regs_t *)gpio, cfg->func, cfg->mask);
1000f73c:	6862      	ldr	r2, [r4, #4]
1000f73e:	7a21      	ldrb	r1, [r4, #8]
1000f740:	4628      	mov	r0, r5
1000f742:	f000 f94b 	bl	1000f9dc <MXC_GPIO_RevA_SetAF>
        if (error != E_NO_ERROR) {
1000f746:	b9d0      	cbnz	r0, 1000f77e <MXC_GPIO_Config+0x7a>
            return error;
        }

        // Configure the pad
        switch (cfg->pad) {
1000f748:	7a63      	ldrb	r3, [r4, #9]
1000f74a:	2b04      	cmp	r3, #4
1000f74c:	f200 80d7 	bhi.w	1000f8fe <MXC_GPIO_Config+0x1fa>
1000f750:	e8df f003 	tbb	[pc, r3]
1000f754:	2f3e4c5a 	.word	0x2f3e4c5a
1000f758:	18          	.byte	0x18
1000f759:	00          	.byte	0x00
1000f75a:	2002      	movs	r0, #2
    MXC_GPIO_Init(1 << port);
1000f75c:	f7ff ffb2 	bl	1000f6c4 <MXC_GPIO_Init>
    if (cfg->port == MXC_GPIO3) {
1000f760:	4b69      	ldr	r3, [pc, #420]	@ (1000f908 <MXC_GPIO_Config+0x204>)
1000f762:	6822      	ldr	r2, [r4, #0]
1000f764:	429a      	cmp	r2, r3
1000f766:	d1e9      	bne.n	1000f73c <MXC_GPIO_Config+0x38>
        switch (cfg->func) {
1000f768:	7a23      	ldrb	r3, [r4, #8]
1000f76a:	2b01      	cmp	r3, #1
1000f76c:	f000 80bb 	beq.w	1000f8e6 <MXC_GPIO_Config+0x1e2>
1000f770:	2b02      	cmp	r3, #2
1000f772:	f000 80a5 	beq.w	1000f8c0 <MXC_GPIO_Config+0x1bc>
1000f776:	2b00      	cmp	r3, #0
1000f778:	d056      	beq.n	1000f828 <MXC_GPIO_Config+0x124>
            return E_NOT_SUPPORTED;
1000f77a:	f06f 0010 	mvn.w	r0, #16
        }
    }

    // Configure the vssel
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
}
1000f77e:	bd70      	pop	{r4, r5, r6, pc}
1000f780:	2001      	movs	r0, #1
1000f782:	e7d5      	b.n	1000f730 <MXC_GPIO_Config+0x2c>
            gpio->padctrl0 &= ~cfg->mask;
1000f784:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f786:	6862      	ldr	r2, [r4, #4]
1000f788:	ea23 0302 	bic.w	r3, r3, r2
1000f78c:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1000f78e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f790:	4313      	orrs	r3, r2
1000f792:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
1000f794:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f798:	ea23 0302 	bic.w	r3, r3, r2
1000f79c:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
}

/* ************************************************************************** */
int MXC_GPIO_SetVSSEL(mxc_gpio_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    if (port == MXC_GPIO3) {
1000f7a0:	4b59      	ldr	r3, [pc, #356]	@ (1000f908 <MXC_GPIO_Config+0x204>)
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
1000f7a2:	7aa1      	ldrb	r1, [r4, #10]
    if (port == MXC_GPIO3) {
1000f7a4:	429d      	cmp	r5, r3
1000f7a6:	d039      	beq.n	1000f81c <MXC_GPIO_Config+0x118>
        }

        return E_NO_ERROR;
    }

    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1000f7a8:	4628      	mov	r0, r5
}
1000f7aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1000f7ae:	f000 b8ff 	b.w	1000f9b0 <MXC_GPIO_RevA_SetVSSEL>
            gpio->padctrl0 |= cfg->mask;
1000f7b2:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f7b4:	6862      	ldr	r2, [r4, #4]
1000f7b6:	4313      	orrs	r3, r2
1000f7b8:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000f7ba:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f7bc:	ea23 0302 	bic.w	r3, r3, r2
1000f7c0:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
1000f7c2:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f7c6:	ea23 0302 	bic.w	r3, r3, r2
1000f7ca:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000f7ce:	e7e7      	b.n	1000f7a0 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1000f7d0:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f7d2:	6862      	ldr	r2, [r4, #4]
1000f7d4:	ea23 0302 	bic.w	r3, r3, r2
1000f7d8:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1000f7da:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f7dc:	4313      	orrs	r3, r2
1000f7de:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1000f7e0:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f7e4:	4313      	orrs	r3, r2
1000f7e6:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000f7ea:	e7d9      	b.n	1000f7a0 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 |= cfg->mask;
1000f7ec:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f7ee:	6862      	ldr	r2, [r4, #4]
1000f7f0:	4313      	orrs	r3, r2
1000f7f2:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000f7f4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f7f6:	ea23 0302 	bic.w	r3, r3, r2
1000f7fa:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1000f7fc:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f800:	4313      	orrs	r3, r2
1000f802:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000f806:	e7cb      	b.n	1000f7a0 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1000f808:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f80a:	6862      	ldr	r2, [r4, #4]
1000f80c:	ea23 0302 	bic.w	r3, r3, r2
1000f810:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000f812:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f814:	ea23 0302 	bic.w	r3, r3, r2
1000f818:	666b      	str	r3, [r5, #100]	@ 0x64
            break;
1000f81a:	e7c1      	b.n	1000f7a0 <MXC_GPIO_Config+0x9c>
        if (vssel == MXC_GPIO_VSSEL_VDDIO) {
1000f81c:	2900      	cmp	r1, #0
1000f81e:	d0ac      	beq.n	1000f77a <MXC_GPIO_Config+0x76>
        return E_NO_ERROR;
1000f820:	2000      	movs	r0, #0
}
1000f822:	bd70      	pop	{r4, r5, r6, pc}
1000f824:	2004      	movs	r0, #4
1000f826:	e783      	b.n	1000f730 <MXC_GPIO_Config+0x2c>
            MXC_MCR->gpio3_ctrl &= ~(P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask));
1000f828:	6863      	ldr	r3, [r4, #4]
1000f82a:	4938      	ldr	r1, [pc, #224]	@ (1000f90c <MXC_GPIO_Config+0x208>)
1000f82c:	0058      	lsls	r0, r3, #1
1000f82e:	011a      	lsls	r2, r3, #4
1000f830:	6a0e      	ldr	r6, [r1, #32]
1000f832:	f000 0002 	and.w	r0, r0, #2
1000f836:	f002 0220 	and.w	r2, r2, #32
1000f83a:	4302      	orrs	r2, r0
1000f83c:	ea26 0202 	bic.w	r2, r6, r2
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000f840:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen &= ~(SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask));
1000f842:	688a      	ldr	r2, [r1, #8]
1000f844:	f3c3 0340 	ubfx	r3, r3, #1, #1
1000f848:	4303      	orrs	r3, r0
1000f84a:	ea22 0303 	bic.w	r3, r2, r3
1000f84e:	608b      	str	r3, [r1, #8]
        switch (cfg->pad) {
1000f850:	7a63      	ldrb	r3, [r4, #9]
1000f852:	2b04      	cmp	r3, #4
1000f854:	d891      	bhi.n	1000f77a <MXC_GPIO_Config+0x76>
1000f856:	e8df f003 	tbb	[pc, r3]
1000f85a:	1b26      	.short	0x1b26
1000f85c:	1b03      	.short	0x1b03
1000f85e:	03          	.byte	0x03
1000f85f:	00          	.byte	0x00
            MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask));
1000f860:	6862      	ldr	r2, [r4, #4]
1000f862:	492a      	ldr	r1, [pc, #168]	@ (1000f90c <MXC_GPIO_Config+0x208>)
1000f864:	00d3      	lsls	r3, r2, #3
1000f866:	6a08      	ldr	r0, [r1, #32]
1000f868:	f003 0310 	and.w	r3, r3, #16
1000f86c:	f002 0601 	and.w	r6, r2, #1
1000f870:	4333      	orrs	r3, r6
1000f872:	ea20 0303 	bic.w	r3, r0, r3
1000f876:	620b      	str	r3, [r1, #32]
            MXC_MCR->gpio3_ctrl &= ~(P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask));
1000f878:	0156      	lsls	r6, r2, #5
1000f87a:	0093      	lsls	r3, r2, #2
1000f87c:	6a08      	ldr	r0, [r1, #32]
1000f87e:	f003 0304 	and.w	r3, r3, #4
1000f882:	f006 0640 	and.w	r6, r6, #64	@ 0x40
1000f886:	4333      	orrs	r3, r6
1000f888:	ea20 0303 	bic.w	r3, r0, r3
1000f88c:	620b      	str	r3, [r1, #32]
            break;
1000f88e:	e787      	b.n	1000f7a0 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask);
1000f890:	491e      	ldr	r1, [pc, #120]	@ (1000f90c <MXC_GPIO_Config+0x208>)
1000f892:	6862      	ldr	r2, [r4, #4]
1000f894:	6a0e      	ldr	r6, [r1, #32]
1000f896:	00d3      	lsls	r3, r2, #3
1000f898:	f002 0001 	and.w	r0, r2, #1
1000f89c:	f003 0310 	and.w	r3, r3, #16
1000f8a0:	4330      	orrs	r0, r6
1000f8a2:	4303      	orrs	r3, r0
1000f8a4:	e7e7      	b.n	1000f876 <MXC_GPIO_Config+0x172>
            MXC_MCR->gpio3_ctrl |= P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask);
1000f8a6:	6862      	ldr	r2, [r4, #4]
1000f8a8:	4818      	ldr	r0, [pc, #96]	@ (1000f90c <MXC_GPIO_Config+0x208>)
1000f8aa:	0093      	lsls	r3, r2, #2
1000f8ac:	0151      	lsls	r1, r2, #5
1000f8ae:	6a06      	ldr	r6, [r0, #32]
1000f8b0:	f003 0304 	and.w	r3, r3, #4
1000f8b4:	f001 0140 	and.w	r1, r1, #64	@ 0x40
1000f8b8:	430b      	orrs	r3, r1
1000f8ba:	4333      	orrs	r3, r6
1000f8bc:	6203      	str	r3, [r0, #32]
            break;
1000f8be:	e76f      	b.n	1000f7a0 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000f8c0:	6863      	ldr	r3, [r4, #4]
1000f8c2:	4912      	ldr	r1, [pc, #72]	@ (1000f90c <MXC_GPIO_Config+0x208>)
1000f8c4:	0058      	lsls	r0, r3, #1
1000f8c6:	011a      	lsls	r2, r3, #4
1000f8c8:	6a0e      	ldr	r6, [r1, #32]
1000f8ca:	f000 0002 	and.w	r0, r0, #2
1000f8ce:	f002 0220 	and.w	r2, r2, #32
1000f8d2:	4302      	orrs	r2, r0
1000f8d4:	4332      	orrs	r2, r6
1000f8d6:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen |= SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask);
1000f8d8:	688a      	ldr	r2, [r1, #8]
1000f8da:	f3c3 0340 	ubfx	r3, r3, #1, #1
1000f8de:	4303      	orrs	r3, r0
1000f8e0:	4313      	orrs	r3, r2
1000f8e2:	608b      	str	r3, [r1, #8]
            break;
1000f8e4:	e7b4      	b.n	1000f850 <MXC_GPIO_Config+0x14c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000f8e6:	6863      	ldr	r3, [r4, #4]
1000f8e8:	4908      	ldr	r1, [pc, #32]	@ (1000f90c <MXC_GPIO_Config+0x208>)
1000f8ea:	0058      	lsls	r0, r3, #1
1000f8ec:	011a      	lsls	r2, r3, #4
1000f8ee:	6a0e      	ldr	r6, [r1, #32]
1000f8f0:	f000 0002 	and.w	r0, r0, #2
1000f8f4:	f002 0220 	and.w	r2, r2, #32
1000f8f8:	4302      	orrs	r2, r0
1000f8fa:	4332      	orrs	r2, r6
1000f8fc:	e7a0      	b.n	1000f840 <MXC_GPIO_Config+0x13c>
        switch (cfg->pad) {
1000f8fe:	f06f 0002 	mvn.w	r0, #2
}
1000f902:	bd70      	pop	{r4, r5, r6, pc}
1000f904:	40008000 	.word	0x40008000
1000f908:	40080600 	.word	0x40080600
1000f90c:	40006c00 	.word	0x40006c00

1000f910 <MXC_GPIO_OutSet>:
    if (port == MXC_GPIO3) {
1000f910:	4a08      	ldr	r2, [pc, #32]	@ (1000f934 <MXC_GPIO_OutSet+0x24>)
1000f912:	4290      	cmp	r0, r2
1000f914:	d001      	beq.n	1000f91a <MXC_GPIO_OutSet+0xa>
    MXC_GPIO_RevA_OutSet((mxc_gpio_reva_regs_t *)port, mask);
1000f916:	f000 b843 	b.w	1000f9a0 <MXC_GPIO_RevA_OutSet>
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000f91a:	4807      	ldr	r0, [pc, #28]	@ (1000f938 <MXC_GPIO_OutSet+0x28>)
{
1000f91c:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000f91e:	6a04      	ldr	r4, [r0, #32]
1000f920:	00ca      	lsls	r2, r1, #3
1000f922:	f001 0101 	and.w	r1, r1, #1
1000f926:	4321      	orrs	r1, r4
1000f928:	f002 0310 	and.w	r3, r2, #16
1000f92c:	430b      	orrs	r3, r1
}
1000f92e:	bc10      	pop	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000f930:	6203      	str	r3, [r0, #32]
}
1000f932:	4770      	bx	lr
1000f934:	40080600 	.word	0x40080600
1000f938:	40006c00 	.word	0x40006c00

1000f93c <MXC_GPIO_OutClr>:
    if (port == MXC_GPIO3) {
1000f93c:	4a09      	ldr	r2, [pc, #36]	@ (1000f964 <MXC_GPIO_OutClr+0x28>)
1000f93e:	4290      	cmp	r0, r2
1000f940:	d001      	beq.n	1000f946 <MXC_GPIO_OutClr+0xa>
    MXC_GPIO_RevA_OutClr((mxc_gpio_reva_regs_t *)port, mask);
1000f942:	f000 b82f 	b.w	1000f9a4 <MXC_GPIO_RevA_OutClr>
{
1000f946:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(mask) | P31_DATA_OUT(mask));
1000f948:	4c07      	ldr	r4, [pc, #28]	@ (1000f968 <MXC_GPIO_OutClr+0x2c>)
1000f94a:	00ca      	lsls	r2, r1, #3
1000f94c:	6a20      	ldr	r0, [r4, #32]
1000f94e:	f002 0210 	and.w	r2, r2, #16
1000f952:	f001 0101 	and.w	r1, r1, #1
1000f956:	ea42 0301 	orr.w	r3, r2, r1
1000f95a:	ea20 0303 	bic.w	r3, r0, r3
1000f95e:	6223      	str	r3, [r4, #32]
}
1000f960:	bc10      	pop	{r4}
1000f962:	4770      	bx	lr
1000f964:	40080600 	.word	0x40080600
1000f968:	40006c00 	.word	0x40006c00

1000f96c <MXC_GPIO_Handler>:
    MXC_GPIO_Common_Handler(port);
1000f96c:	f001 ba86 	b.w	10010e7c <MXC_GPIO_Common_Handler>

1000f970 <MXC_GPIO_ClearFlags>:
    if (port == MXC_GPIO3) {
1000f970:	4a03      	ldr	r2, [pc, #12]	@ (1000f980 <MXC_GPIO_ClearFlags+0x10>)
1000f972:	4290      	cmp	r0, r2
1000f974:	d001      	beq.n	1000f97a <MXC_GPIO_ClearFlags+0xa>
    MXC_GPIO_RevA_ClearFlags((mxc_gpio_reva_regs_t *)port, flags);
1000f976:	f000 b817 	b.w	1000f9a8 <MXC_GPIO_RevA_ClearFlags>
        MXC_PWRSEQ->lpwkst3 = flags;
1000f97a:	4a02      	ldr	r2, [pc, #8]	@ (1000f984 <MXC_GPIO_ClearFlags+0x14>)
1000f97c:	61d1      	str	r1, [r2, #28]
}
1000f97e:	4770      	bx	lr
1000f980:	40080600 	.word	0x40080600
1000f984:	40006800 	.word	0x40006800

1000f988 <MXC_GPIO_GetFlags>:
    if (port == MXC_GPIO3) {
1000f988:	4b03      	ldr	r3, [pc, #12]	@ (1000f998 <MXC_GPIO_GetFlags+0x10>)
1000f98a:	4298      	cmp	r0, r3
1000f98c:	d001      	beq.n	1000f992 <MXC_GPIO_GetFlags+0xa>
    return MXC_GPIO_RevA_GetFlags((mxc_gpio_reva_regs_t *)port);
1000f98e:	f000 b80d 	b.w	1000f9ac <MXC_GPIO_RevA_GetFlags>
        return MXC_PWRSEQ->lpwkst3;
1000f992:	4b02      	ldr	r3, [pc, #8]	@ (1000f99c <MXC_GPIO_GetFlags+0x14>)
1000f994:	69d8      	ldr	r0, [r3, #28]
}
1000f996:	4770      	bx	lr
1000f998:	40080600 	.word	0x40080600
1000f99c:	40006800 	.word	0x40006800

1000f9a0 <MXC_GPIO_RevA_OutSet>:
    return (port->in & mask);
}

void MXC_GPIO_RevA_OutSet(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_set = mask;
1000f9a0:	61c1      	str	r1, [r0, #28]
}
1000f9a2:	4770      	bx	lr

1000f9a4 <MXC_GPIO_RevA_OutClr>:

void MXC_GPIO_RevA_OutClr(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_clr = mask;
1000f9a4:	6201      	str	r1, [r0, #32]
}
1000f9a6:	4770      	bx	lr

1000f9a8 <MXC_GPIO_RevA_ClearFlags>:
    port->inten_clr = mask;
}

void MXC_GPIO_RevA_ClearFlags(mxc_gpio_reva_regs_t *port, uint32_t flags)
{
    port->intfl_clr = flags;
1000f9a8:	6481      	str	r1, [r0, #72]	@ 0x48
}
1000f9aa:	4770      	bx	lr

1000f9ac <MXC_GPIO_RevA_GetFlags>:

uint32_t MXC_GPIO_RevA_GetFlags(mxc_gpio_reva_regs_t *port)
{
    return port->intfl;
1000f9ac:	6c00      	ldr	r0, [r0, #64]	@ 0x40
}
1000f9ae:	4770      	bx	lr

1000f9b0 <MXC_GPIO_RevA_SetVSSEL>:

int MXC_GPIO_RevA_SetVSSEL(mxc_gpio_reva_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    // Configure the vssel
    switch (vssel) {
1000f9b0:	b159      	cbz	r1, 1000f9ca <MXC_GPIO_RevA_SetVSSEL+0x1a>
1000f9b2:	2901      	cmp	r1, #1
1000f9b4:	d106      	bne.n	1000f9c4 <MXC_GPIO_RevA_SetVSSEL+0x14>
    case MXC_GPIO_VSSEL_VDDIO:
        port->vssel &= ~mask;
        break;

    case MXC_GPIO_VSSEL_VDDIOH:
        port->vssel |= mask;
1000f9b6:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1000f9ba:	4313      	orrs	r3, r2
1000f9bc:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000f9c0:	2000      	movs	r0, #0
}
1000f9c2:	4770      	bx	lr
    switch (vssel) {
1000f9c4:	f06f 0002 	mvn.w	r0, #2
1000f9c8:	4770      	bx	lr
        port->vssel &= ~mask;
1000f9ca:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1000f9ce:	ea23 0302 	bic.w	r3, r3, r2
1000f9d2:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    return E_NO_ERROR;
1000f9d6:	2000      	movs	r0, #0
}
1000f9d8:	4770      	bx	lr
1000f9da:	bf00      	nop

1000f9dc <MXC_GPIO_RevA_SetAF>:

int MXC_GPIO_RevA_SetAF(mxc_gpio_reva_regs_t *port, mxc_gpio_func_t func, uint32_t mask)
{
    //This is required for new devices going forward.
    port->inen |= mask;
1000f9dc:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1000f9de:	4313      	orrs	r3, r2
1000f9e0:	6303      	str	r3, [r0, #48]	@ 0x30

    //Switch to I/O mode first
    port->en0_set = mask;
1000f9e2:	6042      	str	r2, [r0, #4]

    switch (func) {
1000f9e4:	2905      	cmp	r1, #5
1000f9e6:	d82c      	bhi.n	1000fa42 <MXC_GPIO_RevA_SetAF+0x66>
1000f9e8:	e8df f001 	tbb	[pc, r1]
1000f9ec:	1f19120a 	.word	0x1f19120a
1000f9f0:	0325      	.short	0x0325
        port->en1_clr = mask;
        port->en0_clr = mask;
        break;

    case MXC_GPIO_FUNC_ALT4:
        port->en3_clr = mask;
1000f9f2:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1000f9f6:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_set = mask;
1000f9f8:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1000f9fa:	6082      	str	r2, [r0, #8]
#endif
    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000f9fc:	2000      	movs	r0, #0
1000f9fe:	4770      	bx	lr
        port->outen_clr = mask;
1000fa00:	6142      	str	r2, [r0, #20]
        port->en0_set = mask;
1000fa02:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
1000fa04:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
1000fa06:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
1000fa08:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    return E_NO_ERROR;
1000fa0c:	2000      	movs	r0, #0
1000fa0e:	4770      	bx	lr
        port->outen_set = mask;
1000fa10:	6102      	str	r2, [r0, #16]
        port->en0_set = mask;
1000fa12:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
1000fa14:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
1000fa16:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
1000fa18:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        break;
1000fa1c:	e7ee      	b.n	1000f9fc <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000fa1e:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1000fa22:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_clr = mask;
1000fa24:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1000fa26:	6082      	str	r2, [r0, #8]
        break;
1000fa28:	e7e8      	b.n	1000f9fc <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000fa2a:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1000fa2e:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_set = mask;
1000fa30:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1000fa32:	6082      	str	r2, [r0, #8]
        break;
1000fa34:	e7e2      	b.n	1000f9fc <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000fa36:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1000fa3a:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_clr = mask;
1000fa3c:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1000fa3e:	6082      	str	r2, [r0, #8]
        break;
1000fa40:	e7dc      	b.n	1000f9fc <MXC_GPIO_RevA_SetAF+0x20>
    switch (func) {
1000fa42:	f06f 0002 	mvn.w	r0, #2
}
1000fa46:	4770      	bx	lr

1000fa48 <MXC_I2C_SetSlaveAddr>:
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
}

int MXC_I2C_SetSlaveAddr(mxc_i2c_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    return MXC_I2C_RevA_SetSlaveAddr((mxc_i2c_reva_regs_t *)i2c, slaveAddr, idx);
1000fa48:	f000 b8fa 	b.w	1000fc40 <MXC_I2C_RevA_SetSlaveAddr>

1000fa4c <MXC_I2C_Shutdown>:
}

int MXC_I2C_Shutdown(mxc_i2c_regs_t *i2c)
{
1000fa4c:	b508      	push	{r3, lr}
    // Configure GPIO for I2C
    if (i2c == MXC_I2C0) {
1000fa4e:	4b11      	ldr	r3, [pc, #68]	@ (1000fa94 <MXC_I2C_Shutdown+0x48>)
1000fa50:	4298      	cmp	r0, r3
1000fa52:	d00d      	beq.n	1000fa70 <MXC_I2C_Shutdown+0x24>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
    } else if (i2c == MXC_I2C1) {
1000fa54:	4b10      	ldr	r3, [pc, #64]	@ (1000fa98 <MXC_I2C_Shutdown+0x4c>)
1000fa56:	4298      	cmp	r0, r3
1000fa58:	d011      	beq.n	1000fa7e <MXC_I2C_Shutdown+0x32>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
    } else if (i2c == MXC_I2C2) {
1000fa5a:	4b10      	ldr	r3, [pc, #64]	@ (1000fa9c <MXC_I2C_Shutdown+0x50>)
1000fa5c:	4298      	cmp	r0, r3
1000fa5e:	d115      	bne.n	1000fa8c <MXC_I2C_Shutdown+0x40>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C2);
1000fa60:	2038      	movs	r0, #56	@ 0x38
1000fa62:	f7ff fcf9 	bl	1000f458 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C2);
1000fa66:	2034      	movs	r0, #52	@ 0x34
1000fa68:	f7ff fdb2 	bl	1000f5d0 <MXC_SYS_Reset_Periph>
    } else {
        return E_NO_DEVICE;
    }

    return E_NO_ERROR;
1000fa6c:	2000      	movs	r0, #0
}
1000fa6e:	bd08      	pop	{r3, pc}
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
1000fa70:	200d      	movs	r0, #13
1000fa72:	f7ff fcf1 	bl	1000f458 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
1000fa76:	2010      	movs	r0, #16
1000fa78:	f7ff fdaa 	bl	1000f5d0 <MXC_SYS_Reset_Periph>
1000fa7c:	e7f6      	b.n	1000fa6c <MXC_I2C_Shutdown+0x20>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
1000fa7e:	201c      	movs	r0, #28
1000fa80:	f7ff fcea 	bl	1000f458 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
1000fa84:	2020      	movs	r0, #32
1000fa86:	f7ff fda3 	bl	1000f5d0 <MXC_SYS_Reset_Periph>
1000fa8a:	e7ef      	b.n	1000fa6c <MXC_I2C_Shutdown+0x20>
        return E_NO_DEVICE;
1000fa8c:	f06f 0001 	mvn.w	r0, #1
}
1000fa90:	bd08      	pop	{r3, pc}
1000fa92:	bf00      	nop
1000fa94:	4001d000 	.word	0x4001d000
1000fa98:	4001e000 	.word	0x4001e000
1000fa9c:	4001f000 	.word	0x4001f000

1000faa0 <MXC_I2C_Init>:
    if (i2c == NULL) {
1000faa0:	b3c0      	cbz	r0, 1000fb14 <MXC_I2C_Init+0x74>
{
1000faa2:	b570      	push	{r4, r5, r6, lr}
1000faa4:	4604      	mov	r4, r0
    MXC_I2C_Shutdown(i2c); // Clear everything out
1000faa6:	460d      	mov	r5, r1
1000faa8:	4616      	mov	r6, r2
1000faaa:	f7ff ffcf 	bl	1000fa4c <MXC_I2C_Shutdown>
    if (i2c == MXC_I2C0) {
1000faae:	4b1b      	ldr	r3, [pc, #108]	@ (1000fb1c <MXC_I2C_Init+0x7c>)
1000fab0:	429c      	cmp	r4, r3
1000fab2:	d012      	beq.n	1000fada <MXC_I2C_Init+0x3a>
    } else if (i2c == MXC_I2C1) {
1000fab4:	4b1a      	ldr	r3, [pc, #104]	@ (1000fb20 <MXC_I2C_Init+0x80>)
1000fab6:	429c      	cmp	r4, r3
1000fab8:	d01c      	beq.n	1000faf4 <MXC_I2C_Init+0x54>
    } else if (i2c == MXC_I2C2) {
1000faba:	4b1a      	ldr	r3, [pc, #104]	@ (1000fb24 <MXC_I2C_Init+0x84>)
1000fabc:	429c      	cmp	r4, r3
1000fabe:	d126      	bne.n	1000fb0e <MXC_I2C_Init+0x6e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C2);
1000fac0:	2038      	movs	r0, #56	@ 0x38
1000fac2:	f7ff fce9 	bl	1000f498 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c2);
1000fac6:	4818      	ldr	r0, [pc, #96]	@ (1000fb28 <MXC_I2C_Init+0x88>)
1000fac8:	f7ff fe1c 	bl	1000f704 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000facc:	4632      	mov	r2, r6
1000face:	4629      	mov	r1, r5
1000fad0:	4620      	mov	r0, r4
}
1000fad2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000fad6:	f000 b84d 	b.w	1000fb74 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C0);
1000fada:	200d      	movs	r0, #13
1000fadc:	f7ff fcdc 	bl	1000f498 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c0);
1000fae0:	4812      	ldr	r0, [pc, #72]	@ (1000fb2c <MXC_I2C_Init+0x8c>)
1000fae2:	f7ff fe0f 	bl	1000f704 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000fae6:	4632      	mov	r2, r6
1000fae8:	4629      	mov	r1, r5
1000faea:	4620      	mov	r0, r4
}
1000faec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000faf0:	f000 b840 	b.w	1000fb74 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C1);
1000faf4:	201c      	movs	r0, #28
1000faf6:	f7ff fccf 	bl	1000f498 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c1);
1000fafa:	480d      	ldr	r0, [pc, #52]	@ (1000fb30 <MXC_I2C_Init+0x90>)
1000fafc:	f7ff fe02 	bl	1000f704 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000fb00:	4632      	mov	r2, r6
1000fb02:	4629      	mov	r1, r5
1000fb04:	4620      	mov	r0, r4
}
1000fb06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000fb0a:	f000 b833 	b.w	1000fb74 <MXC_I2C_RevA_Init>
        return E_NO_DEVICE;
1000fb0e:	f06f 0001 	mvn.w	r0, #1
}
1000fb12:	bd70      	pop	{r4, r5, r6, pc}
        return E_NULL_PTR;
1000fb14:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000fb18:	4770      	bx	lr
1000fb1a:	bf00      	nop
1000fb1c:	4001d000 	.word	0x4001d000
1000fb20:	4001e000 	.word	0x4001e000
1000fb24:	4001f000 	.word	0x4001f000
1000fb28:	1001e960 	.word	0x1001e960
1000fb2c:	1001e978 	.word	0x1001e978
1000fb30:	1001e96c 	.word	0x1001e96c

1000fb34 <MXC_I2C_SetFrequency>:
    return E_NO_ERROR;
}

int MXC_I2C_SetFrequency(mxc_i2c_regs_t *i2c, unsigned int hz)
{
    return MXC_I2C_RevA_SetFrequency((mxc_i2c_reva_regs_t *)i2c, hz);
1000fb34:	f000 b89e 	b.w	1000fc74 <MXC_I2C_RevA_SetFrequency>

1000fb38 <MXC_I2C_GetFrequency>:
}

int MXC_I2C_GetFrequency(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetFrequency((mxc_i2c_reva_regs_t *)i2c);
1000fb38:	f000 b8ec 	b.w	1000fd14 <MXC_I2C_RevA_GetFrequency>

1000fb3c <MXC_I2C_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_Start(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Start((mxc_i2c_reva_regs_t *)i2c);
1000fb3c:	f000 b8fa 	b.w	1000fd34 <MXC_I2C_RevA_Start>

1000fb40 <MXC_I2C_Stop>:
}

int MXC_I2C_Stop(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Stop((mxc_i2c_reva_regs_t *)i2c);
1000fb40:	f000 b90c 	b.w	1000fd5c <MXC_I2C_RevA_Stop>

1000fb44 <MXC_I2C_ReadRXFIFO>:
    return MXC_I2C_RevA_Read((mxc_i2c_reva_regs_t *)i2c, bytes, len, ack);
}

int MXC_I2C_ReadRXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_ReadRXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
1000fb44:	f000 b918 	b.w	1000fd78 <MXC_I2C_RevA_ReadRXFIFO>

1000fb48 <MXC_I2C_WriteTXFIFO>:
    return MXC_I2C_RevA_GetRXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_WriteTXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_WriteTXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
1000fb48:	f000 b934 	b.w	1000fdb4 <MXC_I2C_RevA_WriteTXFIFO>

1000fb4c <MXC_I2C_ClearRXFIFO>:
    return MXC_I2C_RevA_GetTXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_ClearRXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearRXFIFO((mxc_i2c_reva_regs_t *)i2c);
1000fb4c:	f000 b94a 	b.w	1000fde4 <MXC_I2C_RevA_ClearRXFIFO>

1000fb50 <MXC_I2C_ClearTXFIFO>:
}

void MXC_I2C_ClearTXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearTXFIFO((mxc_i2c_reva_regs_t *)i2c);
1000fb50:	f000 b950 	b.w	1000fdf4 <MXC_I2C_RevA_ClearTXFIFO>

1000fb54 <MXC_I2C_ClearFlags>:
    return MXC_I2C_RevA_GetFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
}

void MXC_I2C_ClearFlags(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_ClearFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
1000fb54:	f000 b956 	b.w	1000fe04 <MXC_I2C_RevA_ClearFlags>

1000fb58 <MXC_I2C_Recover>:
    return MXC_I2C_RevA_GetTimeout((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_Recover(mxc_i2c_regs_t *i2c, unsigned int retries)
{
    return MXC_I2C_RevA_Recover((mxc_i2c_reva_regs_t *)i2c, retries);
1000fb58:	f000 b958 	b.w	1000fe0c <MXC_I2C_RevA_Recover>

1000fb5c <MXC_I2C_MasterTransaction>:
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_MasterTransaction(mxc_i2c_req_t *req)
{
    return MXC_I2C_RevA_MasterTransaction((mxc_i2c_reva_req_t *)req);
1000fb5c:	f000 b9c2 	b.w	1000fee4 <MXC_I2C_RevA_MasterTransaction>

1000fb60 <MXC_I2C_SetRXThreshold>:
        (mxc_i2c_reva_regs_t *)i2c, (mxc_i2c_reva_slave_handler_t)callback, interruptCheck);
}

int MXC_I2C_SetRXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetRXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
1000fb60:	f000 ba90 	b.w	10010084 <MXC_I2C_RevA_SetRXThreshold>

1000fb64 <MXC_I2C_SetTXThreshold>:
    return MXC_I2C_RevA_GetRXThreshold((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_SetTXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetTXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
1000fb64:	f000 ba9e 	b.w	100100a4 <MXC_I2C_RevA_SetTXThreshold>

1000fb68 <MXC_I2C_AsyncHandler>:
    MXC_I2C_RevA_AbortAsync((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_AsyncHandler(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_AsyncHandler((mxc_i2c_reva_regs_t *)i2c, interruptCheck);
1000fb68:	4b01      	ldr	r3, [pc, #4]	@ (1000fb70 <MXC_I2C_AsyncHandler+0x8>)
1000fb6a:	6819      	ldr	r1, [r3, #0]
1000fb6c:	f000 be08 	b.w	10010780 <MXC_I2C_RevA_AsyncHandler>
1000fb70:	2000000c 	.word	0x2000000c

1000fb74 <MXC_I2C_RevA_Init>:

/* ************************************************************************* */
/* Control/Configuration functions                                           */
/* ************************************************************************* */
int MXC_I2C_RevA_Init(mxc_i2c_reva_regs_t *i2c, int masterMode, unsigned int slaveAddr)
{
1000fb74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int err;

    if (i2c == NULL) {
1000fb76:	2800      	cmp	r0, #0
1000fb78:	d057      	beq.n	1000fc2a <MXC_I2C_RevA_Init+0xb6>
        return E_NULL_PTR;
    }

    if ((err = MXC_I2C_Recover((mxc_i2c_regs_t *)i2c, 16)) != E_NO_ERROR) {
1000fb7a:	460f      	mov	r7, r1
1000fb7c:	2110      	movs	r1, #16
1000fb7e:	4615      	mov	r5, r2
1000fb80:	4604      	mov	r4, r0
1000fb82:	f7ff ffe9 	bl	1000fb58 <MXC_I2C_Recover>
1000fb86:	4606      	mov	r6, r0
1000fb88:	b108      	cbz	r0, 1000fb8e <MXC_I2C_RevA_Init+0x1a>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
    }

    return E_NO_ERROR;
}
1000fb8a:	4630      	mov	r0, r6
1000fb8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000fb8e:	6823      	ldr	r3, [r4, #0]
1000fb90:	f043 0301 	orr.w	r3, r3, #1
1000fb94:	6023      	str	r3, [r4, #0]
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
1000fb96:	4620      	mov	r0, r4
1000fb98:	f7ff ffd8 	bl	1000fb4c <MXC_I2C_ClearRXFIFO>
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
1000fb9c:	4620      	mov	r0, r4
1000fb9e:	f7ff ffd7 	bl	1000fb50 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_SetTXThreshold((mxc_i2c_regs_t *)i2c, 2); // set TX threshold to 2 bytes
1000fba2:	2102      	movs	r1, #2
1000fba4:	4620      	mov	r0, r4
1000fba6:	f7ff ffdd 	bl	1000fb64 <MXC_I2C_SetTXThreshold>
    MXC_I2C_SetRXThreshold((mxc_i2c_regs_t *)i2c, 6); // set RX threshold to 6 bytes
1000fbaa:	2106      	movs	r1, #6
1000fbac:	4620      	mov	r0, r4
1000fbae:	f7ff ffd7 	bl	1000fb60 <MXC_I2C_SetRXThreshold>
    if (!masterMode) {
1000fbb2:	b1df      	cbz	r7, 1000fbec <MXC_I2C_RevA_Init+0x78>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000fbb4:	6823      	ldr	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000fbb6:	4a1e      	ldr	r2, [pc, #120]	@ (1000fc30 <MXC_I2C_RevA_Init+0xbc>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000fbb8:	f043 0302 	orr.w	r3, r3, #2
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000fbbc:	4294      	cmp	r4, r2
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000fbbe:	6023      	str	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000fbc0:	d02f      	beq.n	1000fc22 <MXC_I2C_RevA_Init+0xae>
1000fbc2:	4b1c      	ldr	r3, [pc, #112]	@ (1000fc34 <MXC_I2C_RevA_Init+0xc0>)
1000fbc4:	429c      	cmp	r4, r3
1000fbc6:	d00f      	beq.n	1000fbe8 <MXC_I2C_RevA_Init+0x74>
1000fbc8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fbcc:	429c      	cmp	r4, r3
1000fbce:	bf14      	ite	ne
1000fbd0:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
1000fbd4:	2402      	moveq	r4, #2
1000fbd6:	4b18      	ldr	r3, [pc, #96]	@ (1000fc38 <MXC_I2C_RevA_Init+0xc4>)
1000fbd8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000fbdc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
1000fbe0:	2201      	movs	r2, #1
1000fbe2:	605a      	str	r2, [r3, #4]
}
1000fbe4:	4630      	mov	r0, r6
1000fbe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000fbe8:	2401      	movs	r4, #1
1000fbea:	e7f4      	b.n	1000fbd6 <MXC_I2C_RevA_Init+0x62>
        MXC_I2C_SetSlaveAddr((mxc_i2c_regs_t *)i2c, slaveAddr, 0);
1000fbec:	463a      	mov	r2, r7
1000fbee:	4629      	mov	r1, r5
1000fbf0:	4620      	mov	r0, r4
1000fbf2:	f7ff ff29 	bl	1000fa48 <MXC_I2C_SetSlaveAddr>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
1000fbf6:	4b0e      	ldr	r3, [pc, #56]	@ (1000fc30 <MXC_I2C_RevA_Init+0xbc>)
1000fbf8:	429c      	cmp	r4, r3
1000fbfa:	d009      	beq.n	1000fc10 <MXC_I2C_RevA_Init+0x9c>
1000fbfc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fc00:	429c      	cmp	r4, r3
1000fc02:	d010      	beq.n	1000fc26 <MXC_I2C_RevA_Init+0xb2>
1000fc04:	4f0d      	ldr	r7, [pc, #52]	@ (1000fc3c <MXC_I2C_RevA_Init+0xc8>)
1000fc06:	42bc      	cmp	r4, r7
1000fc08:	bf14      	ite	ne
1000fc0a:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
1000fc0e:	2702      	moveq	r7, #2
1000fc10:	4b09      	ldr	r3, [pc, #36]	@ (1000fc38 <MXC_I2C_RevA_Init+0xc4>)
1000fc12:	eb07 0147 	add.w	r1, r7, r7, lsl #1
1000fc16:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
1000fc1a:	2200      	movs	r2, #0
1000fc1c:	605a      	str	r2, [r3, #4]
}
1000fc1e:	4630      	mov	r0, r6
1000fc20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000fc22:	4634      	mov	r4, r6
1000fc24:	e7d7      	b.n	1000fbd6 <MXC_I2C_RevA_Init+0x62>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
1000fc26:	2701      	movs	r7, #1
1000fc28:	e7f2      	b.n	1000fc10 <MXC_I2C_RevA_Init+0x9c>
        return E_NULL_PTR;
1000fc2a:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
1000fc2e:	e7ac      	b.n	1000fb8a <MXC_I2C_RevA_Init+0x16>
1000fc30:	4001d000 	.word	0x4001d000
1000fc34:	4001e000 	.word	0x4001e000
1000fc38:	20001008 	.word	0x20001008
1000fc3c:	4001f000 	.word	0x4001f000

1000fc40 <MXC_I2C_RevA_SetSlaveAddr>:

int MXC_I2C_RevA_SetSlaveAddr(mxc_i2c_reva_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    if (i2c == NULL) {
1000fc40:	4603      	mov	r3, r0
1000fc42:	b1a0      	cbz	r0, 1000fc6e <MXC_I2C_RevA_SetSlaveAddr+0x2e>
        return E_NULL_PTR;
    }

    if (idx != 0) {
1000fc44:	b96a      	cbnz	r2, 1000fc62 <MXC_I2C_RevA_SetSlaveAddr+0x22>
        // Multiple slaves are not supported yet
        return E_NOT_SUPPORTED;
    }

    if (slaveAddr > MXC_F_I2C_REVA_SLAVE_ADDR) {
1000fc46:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
1000fc4a:	d20d      	bcs.n	1000fc68 <MXC_I2C_RevA_SetSlaveAddr+0x28>
        return E_BAD_PARAM;
    }

    i2c->slave = 0;

    if (slaveAddr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
1000fc4c:	297f      	cmp	r1, #127	@ 0x7f
    i2c->slave = 0;
1000fc4e:	64c2      	str	r2, [r0, #76]	@ 0x4c
        // Set for 10bit addressing mode
        i2c->slave = MXC_F_I2C_REVA_SLAVE_EXT_ADDR_EN;
1000fc50:	bf84      	itt	hi
1000fc52:	f44f 4200 	movhi.w	r2, #32768	@ 0x8000
1000fc56:	64c2      	strhi	r2, [r0, #76]	@ 0x4c
    }

    i2c->slave |= slaveAddr;
1000fc58:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
1000fc5a:	430a      	orrs	r2, r1

    return E_NO_ERROR;
1000fc5c:	2000      	movs	r0, #0
    i2c->slave |= slaveAddr;
1000fc5e:	64da      	str	r2, [r3, #76]	@ 0x4c
    return E_NO_ERROR;
1000fc60:	4770      	bx	lr
        return E_NOT_SUPPORTED;
1000fc62:	f06f 0010 	mvn.w	r0, #16
1000fc66:	4770      	bx	lr
        return E_BAD_PARAM;
1000fc68:	f06f 0002 	mvn.w	r0, #2
}
1000fc6c:	4770      	bx	lr
        return E_NULL_PTR;
1000fc6e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000fc72:	4770      	bx	lr

1000fc74 <MXC_I2C_RevA_SetFrequency>:

int MXC_I2C_RevA_SetFrequency(mxc_i2c_reva_regs_t *i2c, unsigned int hz)
{
    unsigned int ticksTotal, hiClks, lowClks;

    if (i2c == NULL) {
1000fc74:	2800      	cmp	r0, #0
1000fc76:	d03f      	beq.n	1000fcf8 <MXC_I2C_RevA_SetFrequency+0x84>
{
1000fc78:	b410      	push	{r4}
        return E_NULL_PTR;
    }

    if (hz > MXC_I2C_REVA_FASTPLUS_SPEED && hz <= MXC_I2C_REVA_HIGH_SPEED) {
1000fc7a:	4a21      	ldr	r2, [pc, #132]	@ (1000fd00 <MXC_I2C_RevA_SetFrequency+0x8c>)
1000fc7c:	f5a1 2374 	sub.w	r3, r1, #999424	@ 0xf4000
1000fc80:	f46f 7410 	mvn.w	r4, #576	@ 0x240
1000fc84:	4423      	add	r3, r4
1000fc86:	4293      	cmp	r3, r2
1000fc88:	d313      	bcc.n	1000fcb2 <MXC_I2C_RevA_SetFrequency+0x3e>

        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;

        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz

    } else if (hz > MXC_I2C_REVA_HIGH_SPEED) {
1000fc8a:	4b1e      	ldr	r3, [pc, #120]	@ (1000fd04 <MXC_I2C_RevA_SetFrequency+0x90>)
1000fc8c:	4299      	cmp	r1, r3
1000fc8e:	d82f      	bhi.n	1000fcf0 <MXC_I2C_RevA_SetFrequency+0x7c>
        ticksTotal = PeripheralClock / hz;
1000fc90:	4b1d      	ldr	r3, [pc, #116]	@ (1000fd08 <MXC_I2C_RevA_SetFrequency+0x94>)
        return E_BAD_PARAM;
    }

    // Calculate the period of SCL, 50% duty cycle
    ticksTotal = PeripheralClock / hz;
1000fc92:	681b      	ldr	r3, [r3, #0]
1000fc94:	085b      	lsrs	r3, r3, #1
1000fc96:	fbb3 f3f1 	udiv	r3, r3, r1
    hiClks = (ticksTotal >> 1) - 1;
1000fc9a:	085b      	lsrs	r3, r3, #1
    if (ticksTotal % 1) {
        hiClks++;
    }

    // Check for maximum/minimum supported speeds
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
1000fc9c:	1e9a      	subs	r2, r3, #2
1000fc9e:	f5b2 7fff 	cmp.w	r2, #510	@ 0x1fe
    hiClks = (ticksTotal >> 1) - 1;
1000fca2:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
1000fca6:	d823      	bhi.n	1000fcf0 <MXC_I2C_RevA_SetFrequency+0x7c>
        return E_BAD_PARAM;
    }

    i2c->clklo = lowClks & MXC_F_I2C_REVA_CLKLO_LO;
1000fca8:	6343      	str	r3, [r0, #52]	@ 0x34
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;

    // Return the actual speed set, since it won't be exactly what's requested
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
}
1000fcaa:	bc10      	pop	{r4}
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;
1000fcac:	6383      	str	r3, [r0, #56]	@ 0x38
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
1000fcae:	f7ff bf43 	b.w	1000fb38 <MXC_I2C_GetFrequency>
        ticksTotal = PeripheralClock / hz;
1000fcb2:	4b15      	ldr	r3, [pc, #84]	@ (1000fd08 <MXC_I2C_RevA_SetFrequency+0x94>)
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000fcb4:	4c15      	ldr	r4, [pc, #84]	@ (1000fd0c <MXC_I2C_RevA_SetFrequency+0x98>)
        ticksTotal = PeripheralClock / hz;
1000fcb6:	681b      	ldr	r3, [r3, #0]
1000fcb8:	085b      	lsrs	r3, r3, #1
1000fcba:	fbb3 f1f1 	udiv	r1, r3, r1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000fcbe:	004a      	lsls	r2, r1, #1
        hsHiClks = ticksTotal / 3 - 1;
1000fcc0:	fba4 c101 	umull	ip, r1, r4, r1
1000fcc4:	0849      	lsrs	r1, r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000fcc6:	fba4 4202 	umull	r4, r2, r4, r2
        hsHiClks = ticksTotal / 3 - 1;
1000fcca:	3901      	subs	r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000fccc:	0852      	lsrs	r2, r2, #1
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
1000fcce:	290f      	cmp	r1, #15
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000fcd0:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
1000fcd4:	dc0c      	bgt.n	1000fcf0 <MXC_I2C_RevA_SetFrequency+0x7c>
1000fcd6:	2a0f      	cmp	r2, #15
1000fcd8:	dc0a      	bgt.n	1000fcf0 <MXC_I2C_RevA_SetFrequency+0x7c>
        hsHiClks = (hsHiClks << MXC_F_I2C_REVA_HSCLK_HI_POS) & MXC_F_I2C_REVA_HSCLK_HI;
1000fcda:	0209      	lsls	r1, r1, #8
1000fcdc:	b289      	uxth	r1, r1
        i2c->hsclk = (hsLowClks | hsHiClks);
1000fcde:	b2d2      	uxtb	r2, r2
1000fce0:	430a      	orrs	r2, r1
1000fce2:	63c2      	str	r2, [r0, #60]	@ 0x3c
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
1000fce4:	6802      	ldr	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
1000fce6:	490a      	ldr	r1, [pc, #40]	@ (1000fd10 <MXC_I2C_RevA_SetFrequency+0x9c>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
1000fce8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
1000fcec:	6002      	str	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
1000fcee:	e7d2      	b.n	1000fc96 <MXC_I2C_RevA_SetFrequency+0x22>
            return E_BAD_PARAM;
1000fcf0:	f06f 0002 	mvn.w	r0, #2
}
1000fcf4:	bc10      	pop	{r4}
1000fcf6:	4770      	bx	lr
        return E_NULL_PTR;
1000fcf8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000fcfc:	4770      	bx	lr
1000fcfe:	bf00      	nop
1000fd00:	00249f00 	.word	0x00249f00
1000fd04:	0033e140 	.word	0x0033e140
1000fd08:	20001768 	.word	0x20001768
1000fd0c:	aaaaaaab 	.word	0xaaaaaaab
1000fd10:	00061a80 	.word	0x00061a80

1000fd14 <MXC_I2C_RevA_GetFrequency>:
    unsigned int sclCycles = 0;

    // Calculate the speed based on what we've written into registers
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);

    return PeripheralClock / sclCycles;
1000fd14:	4906      	ldr	r1, [pc, #24]	@ (1000fd30 <MXC_I2C_RevA_GetFrequency+0x1c>)
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1000fd16:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1000fd18:	6b82      	ldr	r2, [r0, #56]	@ 0x38
    return PeripheralClock / sclCycles;
1000fd1a:	6808      	ldr	r0, [r1, #0]
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1000fd1c:	f3c2 0208 	ubfx	r2, r2, #0, #9
1000fd20:	f3c3 0308 	ubfx	r3, r3, #0, #9
1000fd24:	4413      	add	r3, r2
    return PeripheralClock / sclCycles;
1000fd26:	0840      	lsrs	r0, r0, #1
}
1000fd28:	fbb0 f0f3 	udiv	r0, r0, r3
1000fd2c:	4770      	bx	lr
1000fd2e:	bf00      	nop
1000fd30:	20001768 	.word	0x20001768

1000fd34 <MXC_I2C_RevA_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_RevA_Start(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
1000fd34:	b170      	cbz	r0, 1000fd54 <MXC_I2C_RevA_Start+0x20>
        return E_NULL_PTR;
    }

    // If we have an incomplete transfer, we need to do a restart
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
1000fd36:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1000fd38:	f013 0f01 	tst.w	r3, #1
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
1000fd3c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
1000fd3e:	d104      	bne.n	1000fd4a <MXC_I2C_RevA_Start+0x16>
    } else {
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START; // No check for start generation
1000fd40:	f043 0301 	orr.w	r3, r3, #1
1000fd44:	6303      	str	r3, [r0, #48]	@ 0x30
    }

    return E_NO_ERROR;
1000fd46:	2000      	movs	r0, #0
1000fd48:	4770      	bx	lr
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
1000fd4a:	f043 0302 	orr.w	r3, r3, #2
1000fd4e:	6303      	str	r3, [r0, #48]	@ 0x30
    return E_NO_ERROR;
1000fd50:	2000      	movs	r0, #0
1000fd52:	4770      	bx	lr
        return E_NULL_PTR;
1000fd54:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000fd58:	4770      	bx	lr
1000fd5a:	bf00      	nop

1000fd5c <MXC_I2C_RevA_Stop>:

int MXC_I2C_RevA_Stop(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
1000fd5c:	b148      	cbz	r0, 1000fd72 <MXC_I2C_RevA_Stop+0x16>
        return E_NULL_PTR;
    }

    i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
1000fd5e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1000fd60:	f043 0304 	orr.w	r3, r3, #4
1000fd64:	6303      	str	r3, [r0, #48]	@ 0x30

    while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_STOP) {}
1000fd66:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1000fd68:	f013 0304 	ands.w	r3, r3, #4
1000fd6c:	d1fb      	bne.n	1000fd66 <MXC_I2C_RevA_Stop+0xa>

    return E_NO_ERROR;
1000fd6e:	4618      	mov	r0, r3
1000fd70:	4770      	bx	lr
        return E_NULL_PTR;
1000fd72:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000fd76:	4770      	bx	lr

1000fd78 <MXC_I2C_RevA_ReadRXFIFO>:
int MXC_I2C_RevA_ReadRXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                            unsigned int len)
{
    unsigned read = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
1000fd78:	b1c8      	cbz	r0, 1000fdae <MXC_I2C_RevA_ReadRXFIFO+0x36>
1000fd7a:	b1c1      	cbz	r1, 1000fdae <MXC_I2C_RevA_ReadRXFIFO+0x36>
        return E_NULL_PTR;
    }

    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000fd7c:	b1aa      	cbz	r2, 1000fdaa <MXC_I2C_RevA_ReadRXFIFO+0x32>
{
1000fd7e:	b500      	push	{lr}
    unsigned read = 0;
1000fd80:	2300      	movs	r3, #0
        bytes[read++] = i2c->fifo;
1000fd82:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
1000fd86:	e007      	b.n	1000fd98 <MXC_I2C_RevA_ReadRXFIFO+0x20>
1000fd88:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000fd8a:	3301      	adds	r3, #1
1000fd8c:	fa5f fc81 	uxtb.w	ip, r1
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000fd90:	429a      	cmp	r2, r3
        bytes[read++] = i2c->fifo;
1000fd92:	f80e c003 	strb.w	ip, [lr, r3]
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000fd96:	d005      	beq.n	1000fda4 <MXC_I2C_RevA_ReadRXFIFO+0x2c>
1000fd98:	6841      	ldr	r1, [r0, #4]
1000fd9a:	0789      	lsls	r1, r1, #30
1000fd9c:	d5f4      	bpl.n	1000fd88 <MXC_I2C_RevA_ReadRXFIFO+0x10>
    }

    return read;
1000fd9e:	4618      	mov	r0, r3
}
1000fda0:	f85d fb04 	ldr.w	pc, [sp], #4
    return read;
1000fda4:	4610      	mov	r0, r2
}
1000fda6:	f85d fb04 	ldr.w	pc, [sp], #4
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000fdaa:	4610      	mov	r0, r2
1000fdac:	4770      	bx	lr
        return E_NULL_PTR;
1000fdae:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000fdb2:	4770      	bx	lr

1000fdb4 <MXC_I2C_RevA_WriteTXFIFO>:
int MXC_I2C_RevA_WriteTXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                             unsigned int len)
{
    unsigned written = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
1000fdb4:	b198      	cbz	r0, 1000fdde <MXC_I2C_RevA_WriteTXFIFO+0x2a>
1000fdb6:	b191      	cbz	r1, 1000fdde <MXC_I2C_RevA_WriteTXFIFO+0x2a>
        return E_NULL_PTR;
    }

    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000fdb8:	b17a      	cbz	r2, 1000fdda <MXC_I2C_RevA_WriteTXFIFO+0x26>
    unsigned written = 0;
1000fdba:	2300      	movs	r3, #0
        i2c->fifo = bytes[written++];
1000fdbc:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
1000fdc0:	e006      	b.n	1000fdd0 <MXC_I2C_RevA_WriteTXFIFO+0x1c>
1000fdc2:	3301      	adds	r3, #1
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000fdc4:	429a      	cmp	r2, r3
        i2c->fifo = bytes[written++];
1000fdc6:	f81c 1003 	ldrb.w	r1, [ip, r3]
1000fdca:	b2c9      	uxtb	r1, r1
1000fdcc:	62c1      	str	r1, [r0, #44]	@ 0x2c
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000fdce:	d004      	beq.n	1000fdda <MXC_I2C_RevA_WriteTXFIFO+0x26>
1000fdd0:	6841      	ldr	r1, [r0, #4]
1000fdd2:	06c9      	lsls	r1, r1, #27
1000fdd4:	d5f5      	bpl.n	1000fdc2 <MXC_I2C_RevA_WriteTXFIFO+0xe>
    }

    return written;
1000fdd6:	4618      	mov	r0, r3
1000fdd8:	4770      	bx	lr
1000fdda:	4610      	mov	r0, r2
1000fddc:	4770      	bx	lr
        return E_NULL_PTR;
1000fdde:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000fde2:	4770      	bx	lr

1000fde4 <MXC_I2C_RevA_ClearRXFIFO>:
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
}

void MXC_I2C_RevA_ClearRXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
1000fde4:	69c3      	ldr	r3, [r0, #28]
1000fde6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000fdea:	61c3      	str	r3, [r0, #28]

    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
1000fdec:	69c3      	ldr	r3, [r0, #28]
1000fdee:	061b      	lsls	r3, r3, #24
1000fdf0:	d4fc      	bmi.n	1000fdec <MXC_I2C_RevA_ClearRXFIFO+0x8>
}
1000fdf2:	4770      	bx	lr

1000fdf4 <MXC_I2C_RevA_ClearTXFIFO>:

void MXC_I2C_RevA_ClearTXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
1000fdf4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
1000fdf6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000fdfa:	6243      	str	r3, [r0, #36]	@ 0x24

    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
1000fdfc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
1000fdfe:	061b      	lsls	r3, r3, #24
1000fe00:	d4fc      	bmi.n	1000fdfc <MXC_I2C_RevA_ClearTXFIFO+0x8>
}
1000fe02:	4770      	bx	lr

1000fe04 <MXC_I2C_RevA_ClearFlags>:
    return E_NO_ERROR;
}

void MXC_I2C_RevA_ClearFlags(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->intfl0 = flags0;
1000fe04:	6081      	str	r1, [r0, #8]
    i2c->intfl1 = flags1;
1000fe06:	6102      	str	r2, [r0, #16]
}
1000fe08:	4770      	bx	lr
1000fe0a:	bf00      	nop

1000fe0c <MXC_I2C_RevA_Recover>:
int MXC_I2C_RevA_Recover(mxc_i2c_reva_regs_t *i2c, unsigned int retries)
{
    int err;
    unsigned int i;

    if (i2c == NULL) {
1000fe0c:	2800      	cmp	r0, #0
1000fe0e:	d065      	beq.n	1000fedc <MXC_I2C_RevA_Recover+0xd0>
        return E_NULL_PTR;
    }

    err = E_COMM_ERR;

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000fe10:	6803      	ldr	r3, [r0, #0]
1000fe12:	f043 0301 	orr.w	r3, r3, #1
{
1000fe16:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000fe1a:	6003      	str	r3, [r0, #0]
    int swBit = i2c->ctrl & MXC_F_I2C_REVA_CTRL_BB_MODE;
1000fe1c:	6807      	ldr	r7, [r0, #0]

    if (i2c == NULL) {
        return E_NULL_PTR;
    }

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_BB_MODE;
1000fe1e:	6803      	ldr	r3, [r0, #0]
1000fe20:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
1000fe24:	460e      	mov	r6, r1
1000fe26:	4604      	mov	r4, r0
1000fe28:	f407 6780 	and.w	r7, r7, #1024	@ 0x400
1000fe2c:	6003      	str	r3, [r0, #0]

    // Follow the procedure detailed in the header file
    // Delay 10uS between each step to give the line/slaves time to react
    for (i = 0; i < retries; i++) {
1000fe2e:	2900      	cmp	r1, #0
1000fe30:	d043      	beq.n	1000feba <MXC_I2C_RevA_Recover+0xae>
1000fe32:	2500      	movs	r5, #0
1000fe34:	e02b      	b.n	1000fe8e <MXC_I2C_RevA_Recover+0x82>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000fe36:	f7ff faad 	bl	1000f394 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000fe3a:	6823      	ldr	r3, [r4, #0]
1000fe3c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
1000fe40:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000fe42:	200a      	movs	r0, #10
1000fe44:	f7ff faa6 	bl	1000f394 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
1000fe48:	6823      	ldr	r3, [r4, #0]
1000fe4a:	f413 7800 	ands.w	r8, r3, #512	@ 0x200
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000fe4e:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
1000fe52:	d12b      	bne.n	1000feac <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
1000fe54:	f7ff fa9e 	bl	1000f394 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000fe58:	6823      	ldr	r3, [r4, #0]
1000fe5a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000fe5e:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000fe60:	200a      	movs	r0, #10
1000fe62:	f7ff fa97 	bl	1000f394 <MXC_Delay>

        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
1000fe66:	6823      	ldr	r3, [r4, #0]
1000fe68:	059a      	lsls	r2, r3, #22
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000fe6a:	f04f 000a 	mov.w	r0, #10
        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
1000fe6e:	d51d      	bpl.n	1000feac <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
1000fe70:	f7ff fa90 	bl	1000f394 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT;
1000fe74:	6823      	ldr	r3, [r4, #0]
1000fe76:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000fe7a:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000fe7c:	200a      	movs	r0, #10
1000fe7e:	f7ff fa89 	bl	1000f394 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000fe82:	6823      	ldr	r3, [r4, #0]
1000fe84:	05db      	lsls	r3, r3, #23
1000fe86:	d425      	bmi.n	1000fed4 <MXC_I2C_RevA_Recover+0xc8>
    for (i = 0; i < retries; i++) {
1000fe88:	3501      	adds	r5, #1
1000fe8a:	42ae      	cmp	r6, r5
1000fe8c:	d015      	beq.n	1000feba <MXC_I2C_RevA_Recover+0xae>
        MXC_Delay(10);
1000fe8e:	200a      	movs	r0, #10
1000fe90:	f7ff fa80 	bl	1000f394 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SCL_OUT;
1000fe94:	6823      	ldr	r3, [r4, #0]
1000fe96:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1000fe9a:	6023      	str	r3, [r4, #0]
        MXC_Delay(10);
1000fe9c:	200a      	movs	r0, #10
1000fe9e:	f7ff fa79 	bl	1000f394 <MXC_Delay>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000fea2:	6823      	ldr	r3, [r4, #0]
1000fea4:	05d9      	lsls	r1, r3, #23
        MXC_Delay(10);
1000fea6:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000feaa:	d5c4      	bpl.n	1000fe36 <MXC_I2C_RevA_Recover+0x2a>
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000feac:	6823      	ldr	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
1000feae:	3501      	adds	r5, #1
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000feb0:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
    for (i = 0; i < retries; i++) {
1000feb4:	42ae      	cmp	r6, r5
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000feb6:	6023      	str	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
1000feb8:	d1e9      	bne.n	1000fe8e <MXC_I2C_RevA_Recover+0x82>
    err = E_COMM_ERR;
1000feba:	f06f 0008 	mvn.w	r0, #8
            err = E_NO_ERROR; // We have control
            break;
        }
    }

    if (swBit == 0) {
1000febe:	b91f      	cbnz	r7, 1000fec8 <MXC_I2C_RevA_Recover+0xbc>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_BB_MODE;
1000fec0:	6823      	ldr	r3, [r4, #0]
1000fec2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1000fec6:	6023      	str	r3, [r4, #0]
    }

    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_EN;
1000fec8:	6823      	ldr	r3, [r4, #0]
1000feca:	f023 0301 	bic.w	r3, r3, #1
1000fece:	6023      	str	r3, [r4, #0]

    return err;
}
1000fed0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            err = E_NO_ERROR; // We have control
1000fed4:	4640      	mov	r0, r8
    if (swBit == 0) {
1000fed6:	2f00      	cmp	r7, #0
1000fed8:	d1f6      	bne.n	1000fec8 <MXC_I2C_RevA_Recover+0xbc>
1000feda:	e7f1      	b.n	1000fec0 <MXC_I2C_RevA_Recover+0xb4>
        return E_NULL_PTR;
1000fedc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000fee0:	4770      	bx	lr
1000fee2:	bf00      	nop

1000fee4 <MXC_I2C_RevA_MasterTransaction>:
/* ************************************************************************* */
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_RevA_MasterTransaction(mxc_i2c_reva_req_t *req)
{
1000fee4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    mxc_i2c_reva_regs_t *i2c = req->i2c; // Save off pointer for faster access
1000fee8:	e9d0 4300 	ldrd	r4, r3, [r0]
    unsigned int written = 0;
    unsigned int read = 0;

    if (req->addr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
1000feec:	2b7f      	cmp	r3, #127	@ 0x7f
1000feee:	f200 80c3 	bhi.w	10010078 <MXC_I2C_RevA_MasterTransaction+0x194>
        return E_NOT_SUPPORTED;
    }

    if (MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c) < 0) {
1000fef2:	4b63      	ldr	r3, [pc, #396]	@ (10010080 <MXC_I2C_RevA_MasterTransaction+0x19c>)
1000fef4:	429c      	cmp	r4, r3
1000fef6:	4605      	mov	r5, r0
1000fef8:	d008      	beq.n	1000ff0c <MXC_I2C_RevA_MasterTransaction+0x28>
1000fefa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fefe:	429c      	cmp	r4, r3
1000ff00:	d004      	beq.n	1000ff0c <MXC_I2C_RevA_MasterTransaction+0x28>
1000ff02:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000ff06:	429c      	cmp	r4, r3
1000ff08:	f040 80b0 	bne.w	1001006c <MXC_I2C_RevA_MasterTransaction+0x188>
        return E_BAD_PARAM;
    }

    if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE)) {
1000ff0c:	6823      	ldr	r3, [r4, #0]
1000ff0e:	079e      	lsls	r6, r3, #30
1000ff10:	f140 80af 	bpl.w	10010072 <MXC_I2C_RevA_MasterTransaction+0x18e>
    //  send addr w/ read bit
    //  read rx_len bytes acking all
    // stop or restart
    // return good or error

    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
1000ff14:	2207      	movs	r2, #7
1000ff16:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
1000ff1a:	4620      	mov	r0, r4
1000ff1c:	f7ff fe1a 	bl	1000fb54 <MXC_I2C_ClearFlags>
                       MXC_I2C_REVA_INTFL1_MASK); // Clear all I2C Interrupts
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
1000ff20:	4620      	mov	r0, r4
1000ff22:	f7ff fe15 	bl	1000fb50 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
1000ff26:	4620      	mov	r0, r4
1000ff28:	f7ff fe10 	bl	1000fb4c <MXC_I2C_ClearRXFIFO>
    i2c->inten0 = 0;
    i2c->inten1 = 0;

    if ((req->rx_len == 0) || (req->tx_len != 0)) {
1000ff2c:	696a      	ldr	r2, [r5, #20]
    i2c->inten0 = 0;
1000ff2e:	2300      	movs	r3, #0
1000ff30:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
1000ff32:	6163      	str	r3, [r4, #20]
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
1000ff34:	bb42      	cbnz	r2, 1000ff88 <MXC_I2C_RevA_MasterTransaction+0xa4>
1000ff36:	68ea      	ldr	r2, [r5, #12]
        // Load the slave address with write bit set
        i2c->fifo = (req->addr << 1) & ~0x1;
1000ff38:	686b      	ldr	r3, [r5, #4]
1000ff3a:	005b      	lsls	r3, r3, #1
1000ff3c:	62e3      	str	r3, [r4, #44]	@ 0x2c
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START;
1000ff3e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1000ff40:	f043 0301 	orr.w	r3, r3, #1
1000ff44:	2600      	movs	r6, #0
1000ff46:	6323      	str	r3, [r4, #48]	@ 0x30

    while (req->tx_len > written) {
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
                                           req->tx_len - written);
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
1000ff48:	2720      	movs	r7, #32
1000ff4a:	e004      	b.n	1000ff56 <MXC_I2C_RevA_MasterTransaction+0x72>
        }

        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000ff4c:	68a3      	ldr	r3, [r4, #8]
1000ff4e:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
1000ff52:	d111      	bne.n	1000ff78 <MXC_I2C_RevA_MasterTransaction+0x94>
    while (req->tx_len > written) {
1000ff54:	68ea      	ldr	r2, [r5, #12]
1000ff56:	4296      	cmp	r6, r2
1000ff58:	d219      	bcs.n	1000ff8e <MXC_I2C_RevA_MasterTransaction+0xaa>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
1000ff5a:	68a3      	ldr	r3, [r4, #8]
1000ff5c:	0698      	lsls	r0, r3, #26
1000ff5e:	d5f5      	bpl.n	1000ff4c <MXC_I2C_RevA_MasterTransaction+0x68>
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
1000ff60:	68a9      	ldr	r1, [r5, #8]
1000ff62:	1b92      	subs	r2, r2, r6
1000ff64:	4431      	add	r1, r6
1000ff66:	4620      	mov	r0, r4
1000ff68:	f7ff fdee 	bl	1000fb48 <MXC_I2C_WriteTXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
1000ff6c:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000ff6e:	68a3      	ldr	r3, [r4, #8]
1000ff70:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
1000ff74:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000ff76:	d0ed      	beq.n	1000ff54 <MXC_I2C_RevA_MasterTransaction+0x70>
            req->tx_len = written;
1000ff78:	60ee      	str	r6, [r5, #12]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
1000ff7a:	4620      	mov	r0, r4
1000ff7c:	f7ff fde0 	bl	1000fb40 <MXC_I2C_Stop>
            return E_COMM_ERR;
1000ff80:	f06f 0008 	mvn.w	r0, #8
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
        return E_COMM_ERR;
    }

    return E_NO_ERROR;
}
1000ff84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
1000ff88:	68ea      	ldr	r2, [r5, #12]
1000ff8a:	2a00      	cmp	r2, #0
1000ff8c:	d1d4      	bne.n	1000ff38 <MXC_I2C_RevA_MasterTransaction+0x54>
    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c,
1000ff8e:	2200      	movs	r2, #0
1000ff90:	2111      	movs	r1, #17
1000ff92:	4620      	mov	r0, r4
1000ff94:	f7ff fdde 	bl	1000fb54 <MXC_I2C_ClearFlags>
    if (req->rx_len != 0) {
1000ff98:	696b      	ldr	r3, [r5, #20]
1000ff9a:	2b00      	cmp	r3, #0
1000ff9c:	d04a      	beq.n	10010034 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (req->rx_len > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
1000ff9e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->rxctrl1 = 0;
1000ffa2:	bf88      	it	hi
1000ffa4:	2300      	movhi	r3, #0
            i2c->rxctrl1 = req->rx_len; // 0 for 256, otherwise number of bytes to read
1000ffa6:	6223      	str	r3, [r4, #32]
        MXC_I2C_Start((mxc_i2c_regs_t *)i2c); // Start or Restart as needed
1000ffa8:	4620      	mov	r0, r4
1000ffaa:	f7ff fdc7 	bl	1000fb3c <MXC_I2C_Start>
        while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_RESTART) {}
1000ffae:	6b26      	ldr	r6, [r4, #48]	@ 0x30
1000ffb0:	f016 0602 	ands.w	r6, r6, #2
1000ffb4:	d1fb      	bne.n	1000ffae <MXC_I2C_RevA_MasterTransaction+0xca>
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
1000ffb6:	686b      	ldr	r3, [r5, #4]
    while (req->rx_len > read) {
1000ffb8:	696a      	ldr	r2, [r5, #20]
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
1000ffba:	005b      	lsls	r3, r3, #1
1000ffbc:	f043 0301 	orr.w	r3, r3, #1
1000ffc0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
1000ffc2:	2a00      	cmp	r2, #0
1000ffc4:	d036      	beq.n	10010034 <MXC_I2C_RevA_MasterTransaction+0x150>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
1000ffc6:	2710      	movs	r7, #16
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
1000ffc8:	f04f 0801 	mov.w	r8, #1
1000ffcc:	e01d      	b.n	1001000a <MXC_I2C_RevA_MasterTransaction+0x126>
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000ffce:	68a3      	ldr	r3, [r4, #8]
1000ffd0:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
1000ffd4:	d129      	bne.n	1001002a <MXC_I2C_RevA_MasterTransaction+0x146>
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
1000ffd6:	68a1      	ldr	r1, [r4, #8]
1000ffd8:	696a      	ldr	r2, [r5, #20]
1000ffda:	07c9      	lsls	r1, r1, #31
1000ffdc:	d513      	bpl.n	10010006 <MXC_I2C_RevA_MasterTransaction+0x122>
1000ffde:	4296      	cmp	r6, r2
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
1000ffe0:	eba2 0106 	sub.w	r1, r2, r6
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
1000ffe4:	d90f      	bls.n	10010006 <MXC_I2C_RevA_MasterTransaction+0x122>
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
1000ffe6:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
                i2c->rxctrl1 = 0;
1000ffea:	bf8c      	ite	hi
1000ffec:	6223      	strhi	r3, [r4, #32]
                i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
1000ffee:	6221      	strls	r1, [r4, #32]
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
1000fff0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1000fff2:	f043 0302 	orr.w	r3, r3, #2
1000fff6:	6323      	str	r3, [r4, #48]	@ 0x30
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
1000fff8:	686b      	ldr	r3, [r5, #4]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
1000fffa:	f8c4 8008 	str.w	r8, [r4, #8]
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
1000fffe:	005b      	lsls	r3, r3, #1
10010000:	f043 0301 	orr.w	r3, r3, #1
10010004:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
10010006:	4296      	cmp	r6, r2
10010008:	d214      	bcs.n	10010034 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
1001000a:	68a3      	ldr	r3, [r4, #8]
1001000c:	f013 0f11 	tst.w	r3, #17
10010010:	d0dd      	beq.n	1000ffce <MXC_I2C_RevA_MasterTransaction+0xea>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
10010012:	6929      	ldr	r1, [r5, #16]
10010014:	1b92      	subs	r2, r2, r6
10010016:	4431      	add	r1, r6
10010018:	4620      	mov	r0, r4
1001001a:	f7ff fd93 	bl	1000fb44 <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
1001001e:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10010020:	68a3      	ldr	r3, [r4, #8]
10010022:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
            read +=
10010026:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10010028:	d0d5      	beq.n	1000ffd6 <MXC_I2C_RevA_MasterTransaction+0xf2>
            req->rx_len = read;
1001002a:	616e      	str	r6, [r5, #20]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
1001002c:	4620      	mov	r0, r4
1001002e:	f7ff fd87 	bl	1000fb40 <MXC_I2C_Stop>
            return E_COMM_ERR;
10010032:	e7a5      	b.n	1000ff80 <MXC_I2C_RevA_MasterTransaction+0x9c>
    if (req->restart) {
10010034:	69ab      	ldr	r3, [r5, #24]
10010036:	b173      	cbz	r3, 10010056 <MXC_I2C_RevA_MasterTransaction+0x172>
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10010038:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1001003a:	f043 0302 	orr.w	r3, r3, #2
1001003e:	6323      	str	r3, [r4, #48]	@ 0x30
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
10010040:	68a3      	ldr	r3, [r4, #8]
10010042:	07db      	lsls	r3, r3, #31
10010044:	d5fc      	bpl.n	10010040 <MXC_I2C_RevA_MasterTransaction+0x15c>
    i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE | MXC_F_I2C_REVA_INTFL0_STOP;
10010046:	2341      	movs	r3, #65	@ 0x41
10010048:	60a3      	str	r3, [r4, #8]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1001004a:	68a0      	ldr	r0, [r4, #8]
1001004c:	f410 40fe 	ands.w	r0, r0, #32512	@ 0x7f00
10010050:	d196      	bne.n	1000ff80 <MXC_I2C_RevA_MasterTransaction+0x9c>
}
10010052:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
10010056:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10010058:	f043 0304 	orr.w	r3, r3, #4
1001005c:	6323      	str	r3, [r4, #48]	@ 0x30
        while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_STOP)) {}
1001005e:	68a3      	ldr	r3, [r4, #8]
10010060:	065a      	lsls	r2, r3, #25
10010062:	d5fc      	bpl.n	1001005e <MXC_I2C_RevA_MasterTransaction+0x17a>
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
10010064:	68a3      	ldr	r3, [r4, #8]
10010066:	07db      	lsls	r3, r3, #31
10010068:	d5ea      	bpl.n	10010040 <MXC_I2C_RevA_MasterTransaction+0x15c>
1001006a:	e7ec      	b.n	10010046 <MXC_I2C_RevA_MasterTransaction+0x162>
        return E_BAD_PARAM;
1001006c:	f06f 0002 	mvn.w	r0, #2
10010070:	e7ef      	b.n	10010052 <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_BAD_STATE;
10010072:	f06f 0006 	mvn.w	r0, #6
10010076:	e7ec      	b.n	10010052 <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_NOT_SUPPORTED;
10010078:	f06f 0010 	mvn.w	r0, #16
1001007c:	e7e9      	b.n	10010052 <MXC_I2C_RevA_MasterTransaction+0x16e>
1001007e:	bf00      	nop
10010080:	4001d000 	.word	0x4001d000

10010084 <MXC_I2C_RevA_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_SetRXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int rxFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH) >>
10010084:	6982      	ldr	r2, [r0, #24]
10010086:	b2d2      	uxtb	r2, r2
                             MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH_POS;

    if (numBytes > rxFIFOlen) {
10010088:	428a      	cmp	r2, r1
{
1001008a:	4603      	mov	r3, r0
    if (numBytes > rxFIFOlen) {
1001008c:	d307      	bcc.n	1001009e <MXC_I2C_RevA_SetRXThreshold+0x1a>
        return E_BAD_PARAM;
    }

    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
1001008e:	69c2      	ldr	r2, [r0, #28]
10010090:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10010094:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10010098:	2000      	movs	r0, #0
    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
1001009a:	61d9      	str	r1, [r3, #28]
    return E_NO_ERROR;
1001009c:	4770      	bx	lr
        return E_BAD_PARAM;
1001009e:	f06f 0002 	mvn.w	r0, #2
}
100100a2:	4770      	bx	lr

100100a4 <MXC_I2C_RevA_SetTXThreshold>:
    return (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_THD_LVL) >> MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS;
}

int MXC_I2C_RevA_SetTXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
100100a4:	6982      	ldr	r2, [r0, #24]
100100a6:	f3c2 2207 	ubfx	r2, r2, #8, #8
                             MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;

    if (numBytes > txFIFOlen) {
100100aa:	428a      	cmp	r2, r1
{
100100ac:	4603      	mov	r3, r0
    if (numBytes > txFIFOlen) {
100100ae:	d307      	bcc.n	100100c0 <MXC_I2C_RevA_SetTXThreshold+0x1c>
        return E_BAD_PARAM;
    }

    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
100100b0:	6a42      	ldr	r2, [r0, #36]	@ 0x24
100100b2:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
100100b6:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_TXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
100100ba:	2000      	movs	r0, #0
    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
100100bc:	6259      	str	r1, [r3, #36]	@ 0x24
    return E_NO_ERROR;
100100be:	4770      	bx	lr
        return E_BAD_PARAM;
100100c0:	f06f 0002 	mvn.w	r0, #2
}
100100c4:	4770      	bx	lr
100100c6:	bf00      	nop

100100c8 <MXC_I2C_RevA_MasterAsyncHandler>:
    MXC_I2C_RevA_AsyncCallback(i2c, E_ABORT);
    MXC_I2C_RevA_AsyncStop(i2c);
}

void MXC_I2C_RevA_MasterAsyncHandler(int i2cNum)
{
100100c8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    unsigned int written = AsyncWritten[i2cNum];
100100cc:	f8df a298 	ldr.w	sl, [pc, #664]	@ 10010368 <MXC_I2C_RevA_MasterAsyncHandler+0x2a0>
    unsigned int read = AsyncRead[i2cNum];
100100d0:	f8df 9298 	ldr.w	r9, [pc, #664]	@ 1001036c <MXC_I2C_RevA_MasterAsyncHandler+0x2a4>
    unsigned int written = AsyncWritten[i2cNum];
100100d4:	f85a 6020 	ldr.w	r6, [sl, r0, lsl #2]
    unsigned int read = AsyncRead[i2cNum];
100100d8:	f859 8020 	ldr.w	r8, [r9, r0, lsl #2]
{
100100dc:	4605      	mov	r5, r0
    mxc_i2c_reva_regs_t *i2c = (mxc_i2c_reva_regs_t *)MXC_I2C_GET_BASE(i2cNum);
100100de:	b320      	cbz	r0, 1001012a <MXC_I2C_RevA_MasterAsyncHandler+0x62>
100100e0:	2801      	cmp	r0, #1
100100e2:	f000 809c 	beq.w	1001021e <MXC_I2C_RevA_MasterAsyncHandler+0x156>
100100e6:	4ca2      	ldr	r4, [pc, #648]	@ (10010370 <MXC_I2C_RevA_MasterAsyncHandler+0x2a8>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
100100e8:	f8df b288 	ldr.w	fp, [pc, #648]	@ 10010374 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    mxc_i2c_reva_regs_t *i2c = (mxc_i2c_reva_regs_t *)MXC_I2C_GET_BASE(i2cNum);
100100ec:	2802      	cmp	r0, #2
100100ee:	bf0c      	ite	eq
100100f0:	4623      	moveq	r3, r4
100100f2:	2300      	movne	r3, #0
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
100100f4:	f85b 7020 	ldr.w	r7, [fp, r0, lsl #2]

    /* Check for errors */
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
100100f8:	689b      	ldr	r3, [r3, #8]
100100fa:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
100100fe:	f040 80b2 	bne.w	10010266 <MXC_I2C_RevA_MasterAsyncHandler+0x19e>

        return;
    }

    /* Write data to the TX FIFO */
    if (req->tx_len > written) {
10010102:	68fa      	ldr	r2, [r7, #12]
10010104:	42b2      	cmp	r2, r6
10010106:	4611      	mov	r1, r2
10010108:	d82f      	bhi.n	1001016a <MXC_I2C_RevA_MasterAsyncHandler+0xa2>
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
        }
    }

    /* Read data in the RX FIFO */
    if (req->rx_len > read) {
1001010a:	697b      	ldr	r3, [r7, #20]
1001010c:	4543      	cmp	r3, r8
1001010e:	d946      	bls.n	1001019e <MXC_I2C_RevA_MasterAsyncHandler+0xd6>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10010110:	68a1      	ldr	r1, [r4, #8]
10010112:	f011 0f11 	tst.w	r1, #17
10010116:	d137      	bne.n	10010188 <MXC_I2C_RevA_MasterAsyncHandler+0xc0>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
        }
    }

    /* Done writing, still reading */
    if ((req->tx_len == written) && (req->rx_len - read) &&
10010118:	42b2      	cmp	r2, r6
1001011a:	f000 80eb 	beq.w	100102f4 <MXC_I2C_RevA_MasterAsyncHandler+0x22c>

        /* Clear the async state */
        MXC_I2C_RevA_AsyncStop(i2c);

    } else {
        AsyncWritten[i2cNum] = written;
1001011e:	f84a 6025 	str.w	r6, [sl, r5, lsl #2]
        AsyncRead[i2cNum] = read;
10010122:	f849 8025 	str.w	r8, [r9, r5, lsl #2]
    }
}
10010126:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1001012a:	4c93      	ldr	r4, [pc, #588]	@ (10010378 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
1001012c:	f8df b244 	ldr.w	fp, [pc, #580]	@ 10010374 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10010130:	68a3      	ldr	r3, [r4, #8]
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10010132:	f8db 7000 	ldr.w	r7, [fp]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10010136:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
1001013a:	d0e2      	beq.n	10010102 <MXC_I2C_RevA_MasterAsyncHandler+0x3a>
        i2c->intfl0 = i2c->intfl0;
1001013c:	68a3      	ldr	r3, [r4, #8]
1001013e:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10010140:	6923      	ldr	r3, [r4, #16]
10010142:	6123      	str	r3, [r4, #16]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10010144:	4620      	mov	r0, r4
        i2c->inten0 = 0;
10010146:	60e5      	str	r5, [r4, #12]
        i2c->inten1 = 0;
10010148:	6165      	str	r5, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
1001014a:	f7ff fcf9 	bl	1000fb40 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
1001014e:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
10010152:	69c3      	ldr	r3, [r0, #28]
10010154:	b113      	cbz	r3, 1001015c <MXC_I2C_RevA_MasterAsyncHandler+0x94>
        req->callback(req, retVal);
10010156:	f06f 0108 	mvn.w	r1, #8
1001015a:	4798      	blx	r3
    i2c->inten0 = 0;
1001015c:	60e5      	str	r5, [r4, #12]
    i2c->inten1 = 0;
1001015e:	6165      	str	r5, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10010160:	68a3      	ldr	r3, [r4, #8]
10010162:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10010164:	6923      	ldr	r3, [r4, #16]
10010166:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10010168:	e096      	b.n	10010298 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
1001016a:	68a3      	ldr	r3, [r4, #8]
1001016c:	0699      	lsls	r1, r3, #26
1001016e:	f100 8098 	bmi.w	100102a2 <MXC_I2C_RevA_MasterAsyncHandler+0x1da>
            i2c->inten0 |= MXC_F_I2C_REVA_INTEN0_TX_THD;
10010172:	68e3      	ldr	r3, [r4, #12]
10010174:	f043 0320 	orr.w	r3, r3, #32
10010178:	60e3      	str	r3, [r4, #12]
        if ((req->tx_len == written) && (req->rx_len)) {
1001017a:	697b      	ldr	r3, [r7, #20]
    if (req->rx_len > read) {
1001017c:	4598      	cmp	r8, r3
1001017e:	d2ce      	bcs.n	1001011e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10010180:	68a1      	ldr	r1, [r4, #8]
10010182:	f011 0f11 	tst.w	r1, #17
10010186:	d0c7      	beq.n	10010118 <MXC_I2C_RevA_MasterAsyncHandler+0x50>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
10010188:	6939      	ldr	r1, [r7, #16]
1001018a:	eba3 0208 	sub.w	r2, r3, r8
1001018e:	4441      	add	r1, r8
10010190:	4620      	mov	r0, r4
10010192:	f7ff fcd7 	bl	1000fb44 <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10010196:	2310      	movs	r3, #16
    if ((req->tx_len == written) && (req->rx_len - read) &&
10010198:	68f9      	ldr	r1, [r7, #12]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
1001019a:	60a3      	str	r3, [r4, #8]
            read +=
1001019c:	4480      	add	r8, r0
    if ((req->tx_len == written) && (req->rx_len - read) &&
1001019e:	42b1      	cmp	r1, r6
100101a0:	d1bd      	bne.n	1001011e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
100101a2:	697b      	ldr	r3, [r7, #20]
100101a4:	4543      	cmp	r3, r8
100101a6:	f040 80a5 	bne.w	100102f4 <MXC_I2C_RevA_MasterAsyncHandler+0x22c>
        i2c->inten0 = 0;
100101aa:	2300      	movs	r3, #0
100101ac:	60e3      	str	r3, [r4, #12]
        i2c->inten1 = 0;
100101ae:	6163      	str	r3, [r4, #20]
        i2c->intfl0 = i2c->intfl0;
100101b0:	68a3      	ldr	r3, [r4, #8]
100101b2:	60a3      	str	r3, [r4, #8]
        if (req->restart) {
100101b4:	69bb      	ldr	r3, [r7, #24]
        i2c->intfl1 = i2c->intfl1;
100101b6:	6922      	ldr	r2, [r4, #16]
100101b8:	6122      	str	r2, [r4, #16]
        if (req->restart) {
100101ba:	2b00      	cmp	r3, #0
100101bc:	f040 80b3 	bne.w	10010326 <MXC_I2C_RevA_MasterAsyncHandler+0x25e>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
100101c0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
100101c2:	f043 0304 	orr.w	r3, r3, #4
100101c6:	6323      	str	r3, [r4, #48]	@ 0x30
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
100101c8:	68a3      	ldr	r3, [r4, #8]
100101ca:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
100101ce:	4b6a      	ldr	r3, [pc, #424]	@ (10010378 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
100101d0:	f000 80bc 	beq.w	1001034c <MXC_I2C_RevA_MasterAsyncHandler+0x284>
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
100101d4:	429c      	cmp	r4, r3
100101d6:	f000 80da 	beq.w	1001038e <MXC_I2C_RevA_MasterAsyncHandler+0x2c6>
100101da:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100101de:	429c      	cmp	r4, r3
100101e0:	f000 8105 	beq.w	100103ee <MXC_I2C_RevA_MasterAsyncHandler+0x326>
    mxc_i2c_reva_req_t *req =
100101e4:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
100101e8:	69c3      	ldr	r3, [r0, #28]
100101ea:	2b00      	cmp	r3, #0
100101ec:	f000 80e3 	beq.w	100103b6 <MXC_I2C_RevA_MasterAsyncHandler+0x2ee>
        req->callback(req, retVal);
100101f0:	f06f 0108 	mvn.w	r1, #8
100101f4:	4798      	blx	r3
    i2c->inten0 = 0;
100101f6:	2300      	movs	r3, #0
100101f8:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
100101fa:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
100101fc:	68a3      	ldr	r3, [r4, #8]
100101fe:	60a3      	str	r3, [r4, #8]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10010200:	4b5d      	ldr	r3, [pc, #372]	@ (10010378 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
    i2c->intfl1 = i2c->intfl1;
10010202:	6922      	ldr	r2, [r4, #16]
10010204:	6122      	str	r2, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10010206:	429c      	cmp	r4, r3
10010208:	f000 80cd 	beq.w	100103a6 <MXC_I2C_RevA_MasterAsyncHandler+0x2de>
1001020c:	4b5b      	ldr	r3, [pc, #364]	@ (1001037c <MXC_I2C_RevA_MasterAsyncHandler+0x2b4>)
1001020e:	429c      	cmp	r4, r3
10010210:	f000 80e4 	beq.w	100103dc <MXC_I2C_RevA_MasterAsyncHandler+0x314>
10010214:	2202      	movs	r2, #2
10010216:	2300      	movs	r3, #0
10010218:	f84b 3022 	str.w	r3, [fp, r2, lsl #2]
}
1001021c:	e783      	b.n	10010126 <MXC_I2C_RevA_MasterAsyncHandler+0x5e>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1001021e:	4c57      	ldr	r4, [pc, #348]	@ (1001037c <MXC_I2C_RevA_MasterAsyncHandler+0x2b4>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10010220:	f8df b150 	ldr.w	fp, [pc, #336]	@ 10010374 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10010224:	68a3      	ldr	r3, [r4, #8]
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10010226:	f8db 7004 	ldr.w	r7, [fp, #4]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1001022a:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
1001022e:	f43f af68 	beq.w	10010102 <MXC_I2C_RevA_MasterAsyncHandler+0x3a>
        i2c->intfl0 = i2c->intfl0;
10010232:	68a3      	ldr	r3, [r4, #8]
10010234:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10010236:	6923      	ldr	r3, [r4, #16]
10010238:	6123      	str	r3, [r4, #16]
        i2c->inten0 = 0;
1001023a:	2600      	movs	r6, #0
1001023c:	60e6      	str	r6, [r4, #12]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
1001023e:	4620      	mov	r0, r4
        i2c->inten1 = 0;
10010240:	6166      	str	r6, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10010242:	f7ff fc7d 	bl	1000fb40 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10010246:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
1001024a:	69c3      	ldr	r3, [r0, #28]
1001024c:	2b00      	cmp	r3, #0
1001024e:	f000 80c7 	beq.w	100103e0 <MXC_I2C_RevA_MasterAsyncHandler+0x318>
        req->callback(req, retVal);
10010252:	f06f 0108 	mvn.w	r1, #8
10010256:	4798      	blx	r3
    i2c->inten0 = 0;
10010258:	60e6      	str	r6, [r4, #12]
    i2c->inten1 = 0;
1001025a:	6166      	str	r6, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
1001025c:	68a3      	ldr	r3, [r4, #8]
1001025e:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10010260:	6923      	ldr	r3, [r4, #16]
10010262:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10010264:	e018      	b.n	10010298 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
        i2c->intfl0 = i2c->intfl0;
10010266:	68a3      	ldr	r3, [r4, #8]
10010268:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
1001026a:	6923      	ldr	r3, [r4, #16]
1001026c:	6123      	str	r3, [r4, #16]
        i2c->inten0 = 0;
1001026e:	2500      	movs	r5, #0
10010270:	60e5      	str	r5, [r4, #12]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10010272:	4620      	mov	r0, r4
        i2c->inten1 = 0;
10010274:	6165      	str	r5, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10010276:	f7ff fc63 	bl	1000fb40 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
1001027a:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
1001027e:	69c3      	ldr	r3, [r0, #28]
10010280:	2b00      	cmp	r3, #0
10010282:	d07d      	beq.n	10010380 <MXC_I2C_RevA_MasterAsyncHandler+0x2b8>
        req->callback(req, retVal);
10010284:	f06f 0108 	mvn.w	r1, #8
10010288:	4798      	blx	r3
    i2c->inten0 = 0;
1001028a:	60e5      	str	r5, [r4, #12]
    i2c->inten1 = 0;
1001028c:	6165      	str	r5, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
1001028e:	68a3      	ldr	r3, [r4, #8]
10010290:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10010292:	6923      	ldr	r3, [r4, #16]
10010294:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10010296:	2502      	movs	r5, #2
10010298:	2300      	movs	r3, #0
1001029a:	f84b 3025 	str.w	r3, [fp, r5, lsl #2]
}
1001029e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
100102a2:	68b9      	ldr	r1, [r7, #8]
100102a4:	1b92      	subs	r2, r2, r6
100102a6:	4431      	add	r1, r6
100102a8:	4620      	mov	r0, r4
100102aa:	f7ff fc4d 	bl	1000fb48 <MXC_I2C_WriteTXFIFO>
        if (written < req->tx_len) {
100102ae:	68fa      	ldr	r2, [r7, #12]
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
100102b0:	4406      	add	r6, r0
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
100102b2:	2320      	movs	r3, #32
        if (written < req->tx_len) {
100102b4:	42b2      	cmp	r2, r6
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
100102b6:	60a3      	str	r3, [r4, #8]
        if (written < req->tx_len) {
100102b8:	f63f af5b 	bhi.w	10010172 <MXC_I2C_RevA_MasterAsyncHandler+0xaa>
            i2c->inten0 &= ~(MXC_F_I2C_REVA_INTEN0_TX_THD);
100102bc:	68e3      	ldr	r3, [r4, #12]
100102be:	f023 0320 	bic.w	r3, r3, #32
100102c2:	60e3      	str	r3, [r4, #12]
        if ((req->tx_len == written) && (req->rx_len)) {
100102c4:	697b      	ldr	r3, [r7, #20]
100102c6:	f47f af59 	bne.w	1001017c <MXC_I2C_RevA_MasterAsyncHandler+0xb4>
100102ca:	2b00      	cmp	r3, #0
100102cc:	f43f af6a 	beq.w	100101a4 <MXC_I2C_RevA_MasterAsyncHandler+0xdc>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
100102d0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
100102d2:	f042 0202 	orr.w	r2, r2, #2
100102d6:	6322      	str	r2, [r4, #48]	@ 0x30
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
100102d8:	2201      	movs	r2, #1
100102da:	60a2      	str	r2, [r4, #8]
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
100102dc:	68e2      	ldr	r2, [r4, #12]
    if (req->rx_len > read) {
100102de:	4598      	cmp	r8, r3
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
100102e0:	f042 0201 	orr.w	r2, r2, #1
100102e4:	60e2      	str	r2, [r4, #12]
    if (req->rx_len > read) {
100102e6:	f4bf af5d 	bcs.w	100101a4 <MXC_I2C_RevA_MasterAsyncHandler+0xdc>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
100102ea:	68a2      	ldr	r2, [r4, #8]
100102ec:	f012 0f11 	tst.w	r2, #17
100102f0:	f47f af4a 	bne.w	10010188 <MXC_I2C_RevA_MasterAsyncHandler+0xc0>
        (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {
100102f4:	68a2      	ldr	r2, [r4, #8]
    if ((req->tx_len == written) && (req->rx_len - read) &&
100102f6:	07d2      	lsls	r2, r2, #31
100102f8:	f57f af11 	bpl.w	1001011e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
100102fc:	2201      	movs	r2, #1
100102fe:	60a2      	str	r2, [r4, #8]
        if (read == 0) {
10010300:	f1b8 0f00 	cmp.w	r8, #0
10010304:	d114      	bne.n	10010330 <MXC_I2C_RevA_MasterAsyncHandler+0x268>
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10010306:	687a      	ldr	r2, [r7, #4]
10010308:	0052      	lsls	r2, r2, #1
        if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
1001030a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
1001030e:	f042 0201 	orr.w	r2, r2, #1
10010312:	62e2      	str	r2, [r4, #44]	@ 0x2c
            i2c->rxctrl1 = 0;
10010314:	bf8c      	ite	hi
10010316:	f8c4 8020 	strhi.w	r8, [r4, #32]
            i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
1001031a:	6223      	strls	r3, [r4, #32]
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_RX_THD | MXC_F_I2C_REVA_INTEN0_DONE);
1001031c:	68e3      	ldr	r3, [r4, #12]
1001031e:	f043 0311 	orr.w	r3, r3, #17
10010322:	60e3      	str	r3, [r4, #12]
10010324:	e6fb      	b.n	1001011e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10010326:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10010328:	f043 0302 	orr.w	r3, r3, #2
1001032c:	6323      	str	r3, [r4, #48]	@ 0x30
1001032e:	e74b      	b.n	100101c8 <MXC_I2C_RevA_MasterAsyncHandler+0x100>
        if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10010330:	eba3 0208 	sub.w	r2, r3, r8
10010334:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
            i2c->rxctrl1 = 0;
10010338:	bf88      	it	hi
1001033a:	2200      	movhi	r2, #0
        if (read < req->rx_len) {
1001033c:	4598      	cmp	r8, r3
            i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
1001033e:	6222      	str	r2, [r4, #32]
        if (read < req->rx_len) {
10010340:	d3ec      	bcc.n	1001031c <MXC_I2C_RevA_MasterAsyncHandler+0x254>
            i2c->inten0 &= ~(MXC_F_I2C_REVA_INTEN0_RX_THD | MXC_F_I2C_REVA_INTEN0_DONE);
10010342:	68e3      	ldr	r3, [r4, #12]
10010344:	f023 0311 	bic.w	r3, r3, #17
10010348:	60e3      	str	r3, [r4, #12]
1001034a:	e6e8      	b.n	1001011e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
1001034c:	429c      	cmp	r4, r3
1001034e:	d02c      	beq.n	100103aa <MXC_I2C_RevA_MasterAsyncHandler+0x2e2>
10010350:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010354:	429c      	cmp	r4, r3
10010356:	d036      	beq.n	100103c6 <MXC_I2C_RevA_MasterAsyncHandler+0x2fe>
    mxc_i2c_reva_req_t *req =
10010358:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
1001035c:	69c3      	ldr	r3, [r0, #28]
1001035e:	b353      	cbz	r3, 100103b6 <MXC_I2C_RevA_MasterAsyncHandler+0x2ee>
        req->callback(req, retVal);
10010360:	2100      	movs	r1, #0
10010362:	4798      	blx	r3
10010364:	e747      	b.n	100101f6 <MXC_I2C_RevA_MasterAsyncHandler+0x12e>
10010366:	bf00      	nop
10010368:	20000fec 	.word	0x20000fec
1001036c:	20000fe0 	.word	0x20000fe0
10010370:	4001f000 	.word	0x4001f000
10010374:	20000ff8 	.word	0x20000ff8
10010378:	4001d000 	.word	0x4001d000
1001037c:	4001e000 	.word	0x4001e000
    i2c->inten0 = 0;
10010380:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10010382:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10010384:	68a3      	ldr	r3, [r4, #8]
10010386:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10010388:	6923      	ldr	r3, [r4, #16]
1001038a:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001038c:	e783      	b.n	10010296 <MXC_I2C_RevA_MasterAsyncHandler+0x1ce>
    mxc_i2c_reva_req_t *req =
1001038e:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
10010392:	69c3      	ldr	r3, [r0, #28]
10010394:	2b00      	cmp	r3, #0
10010396:	f47f af2b 	bne.w	100101f0 <MXC_I2C_RevA_MasterAsyncHandler+0x128>
    i2c->inten0 = 0;
1001039a:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
1001039c:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
1001039e:	68a3      	ldr	r3, [r4, #8]
100103a0:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
100103a2:	6923      	ldr	r3, [r4, #16]
100103a4:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100103a6:	2200      	movs	r2, #0
100103a8:	e735      	b.n	10010216 <MXC_I2C_RevA_MasterAsyncHandler+0x14e>
    mxc_i2c_reva_req_t *req =
100103aa:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
100103ae:	69c3      	ldr	r3, [r0, #28]
100103b0:	2b00      	cmp	r3, #0
100103b2:	d1d5      	bne.n	10010360 <MXC_I2C_RevA_MasterAsyncHandler+0x298>
100103b4:	e7f1      	b.n	1001039a <MXC_I2C_RevA_MasterAsyncHandler+0x2d2>
    i2c->inten0 = 0;
100103b6:	4a11      	ldr	r2, [pc, #68]	@ (100103fc <MXC_I2C_RevA_MasterAsyncHandler+0x334>)
100103b8:	60d3      	str	r3, [r2, #12]
    i2c->inten1 = 0;
100103ba:	6153      	str	r3, [r2, #20]
    i2c->intfl0 = i2c->intfl0;
100103bc:	6893      	ldr	r3, [r2, #8]
100103be:	6093      	str	r3, [r2, #8]
    i2c->intfl1 = i2c->intfl1;
100103c0:	6913      	ldr	r3, [r2, #16]
100103c2:	6113      	str	r3, [r2, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100103c4:	e726      	b.n	10010214 <MXC_I2C_RevA_MasterAsyncHandler+0x14c>
    mxc_i2c_reva_req_t *req =
100103c6:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
100103ca:	69c3      	ldr	r3, [r0, #28]
100103cc:	2b00      	cmp	r3, #0
100103ce:	d1c7      	bne.n	10010360 <MXC_I2C_RevA_MasterAsyncHandler+0x298>
    i2c->inten0 = 0;
100103d0:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
100103d2:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
100103d4:	68a3      	ldr	r3, [r4, #8]
100103d6:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
100103d8:	6923      	ldr	r3, [r4, #16]
100103da:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100103dc:	2201      	movs	r2, #1
100103de:	e71a      	b.n	10010216 <MXC_I2C_RevA_MasterAsyncHandler+0x14e>
    i2c->inten0 = 0;
100103e0:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
100103e2:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
100103e4:	68a3      	ldr	r3, [r4, #8]
100103e6:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
100103e8:	6923      	ldr	r3, [r4, #16]
100103ea:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100103ec:	e754      	b.n	10010298 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
    mxc_i2c_reva_req_t *req =
100103ee:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
100103f2:	69c3      	ldr	r3, [r0, #28]
100103f4:	2b00      	cmp	r3, #0
100103f6:	f47f aefb 	bne.w	100101f0 <MXC_I2C_RevA_MasterAsyncHandler+0x128>
100103fa:	e7e9      	b.n	100103d0 <MXC_I2C_RevA_MasterAsyncHandler+0x308>
100103fc:	4001f000 	.word	0x4001f000

10010400 <MXC_I2C_RevA_SlaveAsyncHandler>:

void MXC_I2C_RevA_SlaveAsyncHandler(mxc_i2c_reva_regs_t *i2c, mxc_i2c_reva_slave_handler_t callback,
                                    uint32_t *int_en, int *retVal)
{
10010400:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10010404:	4615      	mov	r5, r2
10010406:	460e      	mov	r6, r1
    // I2C_EVT_RX_THRESH
    // I2C_EVT_TX_THRESH
    // I2C_EVT_TRANS_COMP
    // I2C_EVT_UNDERFLOW
    // I2C_EVT_OVERFLOW
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
10010408:	6812      	ldr	r2, [r2, #0]
1001040a:	49b2      	ldr	r1, [pc, #712]	@ (100106d4 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d4>)
    uint32_t tFlags = i2c->intfl0;
1001040c:	f8d0 9008 	ldr.w	r9, [r0, #8]
    *retVal = E_NO_ERROR;
10010410:	2700      	movs	r7, #0
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
10010412:	4011      	ands	r1, r2
    *retVal = E_NO_ERROR;
10010414:	601f      	str	r7, [r3, #0]
{
10010416:	4604      	mov	r4, r0
    uint32_t readFlag = i2c->ctrl & MXC_F_I2C_REVA_CTRL_READ;
10010418:	6807      	ldr	r7, [r0, #0]
{
1001041a:	4698      	mov	r8, r3
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
1001041c:	2900      	cmp	r1, #0
1001041e:	d15a      	bne.n	100104d6 <MXC_I2C_RevA_SlaveAsyncHandler+0xd6>
                       MXC_F_I2C_REVA_INTFL0_ADDR_MATCH))) {
        // The STOPERR/STARTERR interrupt that's enabled here could fire before we are addressed
        // (fires anytime a stop/start is detected out of sequence).
        if (tFlags & MXC_I2C_REVA_ERROR) {
10010420:	f419 4ffe 	tst.w	r9, #32512	@ 0x7f00
10010424:	f040 80cf 	bne.w	100105c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x1c6>
            int_en[0] = 0;
            int_en[1] = 0;
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
        }

        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10010428:	06d3      	lsls	r3, r2, #27
1001042a:	f140 81a4 	bpl.w	10010776 <MXC_I2C_RevA_SlaveAsyncHandler+0x376>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_RX_THD) {
1001042e:	f019 0f10 	tst.w	r9, #16
10010432:	f000 8148 	beq.w	100106c6 <MXC_I2C_RevA_SlaveAsyncHandler+0x2c6>
                if (callback != NULL) {
10010436:	2e00      	cmp	r6, #0
10010438:	f000 815c 	beq.w	100106f4 <MXC_I2C_RevA_SlaveAsyncHandler+0x2f4>
                    callback(i2c, MXC_I2C_REVA_EVT_RX_THRESH, NULL);
1001043c:	2200      	movs	r2, #0
1001043e:	2102      	movs	r1, #2
10010440:	4620      	mov	r0, r4
10010442:	47b0      	blx	r6
                }

                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10010444:	2310      	movs	r3, #16
10010446:	60a3      	str	r3, [r4, #8]
            }

            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10010448:	6923      	ldr	r3, [r4, #16]
1001044a:	07da      	lsls	r2, r3, #31
1001044c:	d505      	bpl.n	1001045a <MXC_I2C_RevA_SlaveAsyncHandler+0x5a>
                if (callback != NULL) {
                    callback(i2c, MXC_I2C_REVA_EVT_OVERFLOW, NULL);
1001044e:	2200      	movs	r2, #0
10010450:	2106      	movs	r1, #6
10010452:	4620      	mov	r0, r4
10010454:	47b0      	blx	r6
                }

                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_RX_OV;
10010456:	2301      	movs	r3, #1
10010458:	6123      	str	r3, [r4, #16]
1001045a:	682a      	ldr	r2, [r5, #0]
            }
        }

        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
1001045c:	f248 0320 	movw	r3, #32800	@ 0x8020
10010460:	4213      	tst	r3, r2
10010462:	f000 80df 	beq.w	10010624 <MXC_I2C_RevA_SlaveAsyncHandler+0x224>
            int_en[1] & MXC_F_I2C_REVA_INTFL1_TX_UN) {
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_THD) {
10010466:	f019 0f20 	tst.w	r9, #32
                }

                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
            }

            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
1001046a:	f409 4a00 	and.w	sl, r9, #32768	@ 0x8000
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_THD) {
1001046e:	f000 80fc 	beq.w	1001066a <MXC_I2C_RevA_SlaveAsyncHandler+0x26a>
                if (callback != NULL) {
10010472:	2e00      	cmp	r6, #0
10010474:	f000 8145 	beq.w	10010702 <MXC_I2C_RevA_SlaveAsyncHandler+0x302>
                    callback(i2c, MXC_I2C_REVA_EVT_TX_THRESH, NULL);
10010478:	2103      	movs	r1, #3
1001047a:	2200      	movs	r2, #0
1001047c:	4620      	mov	r0, r4
1001047e:	47b0      	blx	r6
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10010480:	2320      	movs	r3, #32
10010482:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10010484:	6923      	ldr	r3, [r4, #16]
10010486:	0799      	lsls	r1, r3, #30
10010488:	f100 80f5 	bmi.w	10010676 <MXC_I2C_RevA_SlaveAsyncHandler+0x276>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
1001048c:	f1ba 0f00 	cmp.w	sl, #0
10010490:	f040 80fa 	bne.w	10010688 <MXC_I2C_RevA_SlaveAsyncHandler+0x288>
                int_en[1] = 0;
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
            }
        }

        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10010494:	f019 0f40 	tst.w	r9, #64	@ 0x40
10010498:	f000 8168 	beq.w	1001076c <MXC_I2C_RevA_SlaveAsyncHandler+0x36c>
            *retVal = E_NO_ERROR;
1001049c:	f8c8 a000 	str.w	sl, [r8]

            if (callback != NULL) {
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100104a0:	4642      	mov	r2, r8
100104a2:	2104      	movs	r1, #4
100104a4:	4620      	mov	r0, r4
100104a6:	47b0      	blx	r6
            }

            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
            int_en[0] = 0;
            int_en[1] = 0;
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100104a8:	4a8b      	ldr	r2, [pc, #556]	@ (100106d8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
            int_en[0] = 0;
100104aa:	2300      	movs	r3, #0
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
100104ac:	2140      	movs	r1, #64	@ 0x40
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100104ae:	4294      	cmp	r4, r2
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
100104b0:	60a1      	str	r1, [r4, #8]
            int_en[0] = 0;
100104b2:	602b      	str	r3, [r5, #0]
100104b4:	606b      	str	r3, [r5, #4]
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100104b6:	d00a      	beq.n	100104ce <MXC_I2C_RevA_SlaveAsyncHandler+0xce>
100104b8:	4b88      	ldr	r3, [pc, #544]	@ (100106dc <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
100104ba:	429c      	cmp	r4, r3
100104bc:	f000 8131 	beq.w	10010722 <MXC_I2C_RevA_SlaveAsyncHandler+0x322>
100104c0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100104c4:	429c      	cmp	r4, r3
100104c6:	bf0c      	ite	eq
100104c8:	2302      	moveq	r3, #2
100104ca:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
100104ce:	4a84      	ldr	r2, [pc, #528]	@ (100106e0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
100104d0:	2100      	movs	r1, #0
100104d2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        }
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
100104d6:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
100104da:	d011      	beq.n	10010500 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
        if (callback != NULL) {
100104dc:	b11e      	cbz	r6, 100104e6 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
            callback(i2c, MXC_I2C_REVA_EVT_MASTER_WR, NULL);
100104de:	2200      	movs	r2, #0
100104e0:	4611      	mov	r1, r2
100104e2:	4620      	mov	r0, r4
100104e4:	47b0      	blx	r6
        }

        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
100104e6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
100104ea:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100104ec:	2308      	movs	r3, #8
100104ee:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
100104f0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
100104f4:	60a3      	str	r3, [r4, #8]

        int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE | MXC_I2C_REVA_ERROR;
100104f6:	f647 7311 	movw	r3, #32529	@ 0x7f11
100104fa:	602b      	str	r3, [r5, #0]
100104fc:	2301      	movs	r3, #1
100104fe:	606b      	str	r3, [r5, #4]
        int_en[1] = MXC_F_I2C_REVA_INTFL1_RX_OV;
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH) {
10010500:	f419 0f00 	tst.w	r9, #8388608	@ 0x800000
10010504:	d00e      	beq.n	10010524 <MXC_I2C_RevA_SlaveAsyncHandler+0x124>
        if (callback != NULL) {
10010506:	b11e      	cbz	r6, 10010510 <MXC_I2C_RevA_SlaveAsyncHandler+0x110>
            callback(i2c, MXC_I2C_REVA_EVT_MASTER_RD, NULL);
10010508:	2200      	movs	r2, #0
1001050a:	2101      	movs	r1, #1
1001050c:	4620      	mov	r0, r4
1001050e:	47b0      	blx	r6
        }

        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH;
10010510:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
10010514:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10010516:	2308      	movs	r3, #8
10010518:	60a3      	str	r3, [r4, #8]
        int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
1001051a:	f64f 7320 	movw	r3, #65312	@ 0xff20
1001051e:	602b      	str	r3, [r5, #0]
10010520:	2302      	movs	r3, #2
10010522:	606b      	str	r3, [r5, #4]
                    MXC_I2C_REVA_ERROR;
        int_en[1] = MXC_F_I2C_REVA_INTFL1_TX_UN;
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_ADDR_MATCH) {
10010524:	f019 0f08 	tst.w	r9, #8
10010528:	d017      	beq.n	1001055a <MXC_I2C_RevA_SlaveAsyncHandler+0x15a>
        if (readFlag & MXC_F_I2C_REVA_CTRL_READ) {
1001052a:	f417 6200 	ands.w	r2, r7, #2048	@ 0x800
1001052e:	f000 808c 	beq.w	1001064a <MXC_I2C_RevA_SlaveAsyncHandler+0x24a>
            if (callback != NULL) {
10010532:	b11e      	cbz	r6, 1001053c <MXC_I2C_RevA_SlaveAsyncHandler+0x13c>
                callback(i2c, MXC_I2C_REVA_EVT_MASTER_RD, NULL);
10010534:	2200      	movs	r2, #0
10010536:	2101      	movs	r1, #1
10010538:	4620      	mov	r0, r4
1001053a:	47b0      	blx	r6
            }

            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
1001053c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10010540:	2308      	movs	r3, #8
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
10010542:	60a2      	str	r2, [r4, #8]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10010544:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10010548:	60a3      	str	r3, [r4, #8]

            int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
1001054a:	f64f 7220 	movw	r2, #65312	@ 0xff20
1001054e:	2302      	movs	r3, #2
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10010550:	60a1      	str	r1, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
10010552:	602a      	str	r2, [r5, #0]
10010554:	606b      	str	r3, [r5, #4]
        MXC_I2C_RevA_ClearRXFIFO(i2c);
        int_en[0] = 0;
        int_en[1] = 0;
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
    }
}
10010556:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    } else if (tFlags & MXC_I2C_REVA_ERROR) {
1001055a:	f419 4ffe 	tst.w	r9, #32512	@ 0x7f00
1001055e:	d0fa      	beq.n	10010556 <MXC_I2C_RevA_SlaveAsyncHandler+0x156>
        *retVal = E_COMM_ERR;
10010560:	f06f 0308 	mvn.w	r3, #8
10010564:	f8c8 3000 	str.w	r3, [r8]
        if (callback != NULL) {
10010568:	b11e      	cbz	r6, 10010572 <MXC_I2C_RevA_SlaveAsyncHandler+0x172>
            callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
1001056a:	4642      	mov	r2, r8
1001056c:	2104      	movs	r1, #4
1001056e:	4620      	mov	r0, r4
10010570:	47b0      	blx	r6
    i2c->intfl1 = flags1;
10010572:	2307      	movs	r3, #7
    i2c->intfl0 = flags0;
10010574:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
10010578:	60a2      	str	r2, [r4, #8]
    i2c->intfl1 = flags1;
1001057a:	6123      	str	r3, [r4, #16]
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
1001057c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
1001057e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10010582:	6263      	str	r3, [r4, #36]	@ 0x24
    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
10010584:	6a63      	ldr	r3, [r4, #36]	@ 0x24
10010586:	061b      	lsls	r3, r3, #24
10010588:	d4fc      	bmi.n	10010584 <MXC_I2C_RevA_SlaveAsyncHandler+0x184>
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
1001058a:	69e3      	ldr	r3, [r4, #28]
1001058c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10010590:	61e3      	str	r3, [r4, #28]
    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
10010592:	69e3      	ldr	r3, [r4, #28]
10010594:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
10010598:	d1fb      	bne.n	10010592 <MXC_I2C_RevA_SlaveAsyncHandler+0x192>
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001059a:	4a4f      	ldr	r2, [pc, #316]	@ (100106d8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
        int_en[0] = 0;
1001059c:	602b      	str	r3, [r5, #0]
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001059e:	4294      	cmp	r4, r2
        int_en[0] = 0;
100105a0:	606b      	str	r3, [r5, #4]
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100105a2:	d00a      	beq.n	100105ba <MXC_I2C_RevA_SlaveAsyncHandler+0x1ba>
100105a4:	4b4d      	ldr	r3, [pc, #308]	@ (100106dc <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
100105a6:	429c      	cmp	r4, r3
100105a8:	f000 80bf 	beq.w	1001072a <MXC_I2C_RevA_SlaveAsyncHandler+0x32a>
100105ac:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100105b0:	429c      	cmp	r4, r3
100105b2:	bf14      	ite	ne
100105b4:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
100105b8:	2302      	moveq	r3, #2
100105ba:	4a49      	ldr	r2, [pc, #292]	@ (100106e0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
100105bc:	2100      	movs	r1, #0
100105be:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
100105c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            *retVal = E_COMM_ERR;
100105c6:	f06f 0308 	mvn.w	r3, #8
100105ca:	f8c8 3000 	str.w	r3, [r8]
            if (callback != NULL) {
100105ce:	b116      	cbz	r6, 100105d6 <MXC_I2C_RevA_SlaveAsyncHandler+0x1d6>
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100105d0:	4642      	mov	r2, r8
100105d2:	2104      	movs	r1, #4
100105d4:	47b0      	blx	r6
            MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
100105d6:	2207      	movs	r2, #7
100105d8:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
100105dc:	4620      	mov	r0, r4
100105de:	f7ff fab9 	bl	1000fb54 <MXC_I2C_ClearFlags>
            MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
100105e2:	4620      	mov	r0, r4
100105e4:	f7ff fab4 	bl	1000fb50 <MXC_I2C_ClearTXFIFO>
            MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
100105e8:	4620      	mov	r0, r4
100105ea:	f7ff faaf 	bl	1000fb4c <MXC_I2C_ClearRXFIFO>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100105ee:	4a3a      	ldr	r2, [pc, #232]	@ (100106d8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
            int_en[0] = 0;
100105f0:	2300      	movs	r3, #0
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100105f2:	4294      	cmp	r4, r2
            int_en[0] = 0;
100105f4:	602b      	str	r3, [r5, #0]
100105f6:	606b      	str	r3, [r5, #4]
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100105f8:	d00a      	beq.n	10010610 <MXC_I2C_RevA_SlaveAsyncHandler+0x210>
100105fa:	4b38      	ldr	r3, [pc, #224]	@ (100106dc <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
100105fc:	429c      	cmp	r4, r3
100105fe:	f000 8092 	beq.w	10010726 <MXC_I2C_RevA_SlaveAsyncHandler+0x326>
10010602:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010606:	429c      	cmp	r4, r3
10010608:	bf0c      	ite	eq
1001060a:	2302      	moveq	r3, #2
1001060c:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
10010610:	4a33      	ldr	r2, [pc, #204]	@ (100106e0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
10010612:	2100      	movs	r1, #0
10010614:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10010618:	682a      	ldr	r2, [r5, #0]
        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
1001061a:	f248 0320 	movw	r3, #32800	@ 0x8020
1001061e:	4213      	tst	r3, r2
10010620:	f47f af21 	bne.w	10010466 <MXC_I2C_RevA_SlaveAsyncHandler+0x66>
            int_en[1] & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10010624:	686b      	ldr	r3, [r5, #4]
        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
10010626:	0798      	lsls	r0, r3, #30
10010628:	f53f af1d 	bmi.w	10010466 <MXC_I2C_RevA_SlaveAsyncHandler+0x66>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
1001062c:	f019 0f40 	tst.w	r9, #64	@ 0x40
10010630:	f43f af51 	beq.w	100104d6 <MXC_I2C_RevA_SlaveAsyncHandler+0xd6>
            *retVal = E_NO_ERROR;
10010634:	2300      	movs	r3, #0
10010636:	f8c8 3000 	str.w	r3, [r8]
            if (callback != NULL) {
1001063a:	2e00      	cmp	r6, #0
1001063c:	f43f af34 	beq.w	100104a8 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
10010640:	4642      	mov	r2, r8
10010642:	2104      	movs	r1, #4
10010644:	4620      	mov	r0, r4
10010646:	47b0      	blx	r6
10010648:	e72e      	b.n	100104a8 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
            if (callback != NULL) {
1001064a:	b116      	cbz	r6, 10010652 <MXC_I2C_RevA_SlaveAsyncHandler+0x252>
                callback(i2c, MXC_I2C_REVA_EVT_MASTER_WR, NULL);
1001064c:	4611      	mov	r1, r2
1001064e:	4620      	mov	r0, r4
10010650:	47b0      	blx	r6
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10010652:	2308      	movs	r3, #8
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH;
10010654:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
10010658:	60a1      	str	r1, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE |
1001065a:	f647 7211 	movw	r2, #32529	@ 0x7f11
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
1001065e:	60a3      	str	r3, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE |
10010660:	2301      	movs	r3, #1
10010662:	602a      	str	r2, [r5, #0]
10010664:	606b      	str	r3, [r5, #4]
}
10010666:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
1001066a:	6923      	ldr	r3, [r4, #16]
1001066c:	f013 0302 	ands.w	r3, r3, #2
10010670:	d038      	beq.n	100106e4 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e4>
                if (callback != NULL) {
10010672:	2e00      	cmp	r6, #0
10010674:	d05b      	beq.n	1001072e <MXC_I2C_RevA_SlaveAsyncHandler+0x32e>
                    callback(i2c, MXC_I2C_REVA_EVT_UNDERFLOW, NULL);
10010676:	2200      	movs	r2, #0
10010678:	2105      	movs	r1, #5
1001067a:	4620      	mov	r0, r4
1001067c:	47b0      	blx	r6
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
1001067e:	2302      	movs	r3, #2
10010680:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10010682:	f1ba 0f00 	cmp.w	sl, #0
10010686:	d0d1      	beq.n	1001062c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
                *retVal = E_NO_ERROR;
10010688:	2300      	movs	r3, #0
1001068a:	f8c8 3000 	str.w	r3, [r8]
                    callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
1001068e:	4642      	mov	r2, r8
10010690:	2104      	movs	r1, #4
10010692:	4620      	mov	r0, r4
10010694:	47b0      	blx	r6
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10010696:	4a10      	ldr	r2, [pc, #64]	@ (100106d8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
                int_en[0] = 0;
10010698:	2300      	movs	r3, #0
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
1001069a:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001069e:	4294      	cmp	r4, r2
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
100106a0:	60a1      	str	r1, [r4, #8]
                int_en[0] = 0;
100106a2:	602b      	str	r3, [r5, #0]
100106a4:	606b      	str	r3, [r5, #4]
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100106a6:	d009      	beq.n	100106bc <MXC_I2C_RevA_SlaveAsyncHandler+0x2bc>
100106a8:	4b0c      	ldr	r3, [pc, #48]	@ (100106dc <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
100106aa:	429c      	cmp	r4, r3
100106ac:	d059      	beq.n	10010762 <MXC_I2C_RevA_SlaveAsyncHandler+0x362>
100106ae:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100106b2:	429c      	cmp	r4, r3
100106b4:	bf0c      	ite	eq
100106b6:	2302      	moveq	r3, #2
100106b8:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
100106bc:	4a08      	ldr	r2, [pc, #32]	@ (100106e0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
100106be:	2100      	movs	r1, #0
100106c0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
100106c4:	e7b2      	b.n	1001062c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
100106c6:	6923      	ldr	r3, [r4, #16]
100106c8:	07db      	lsls	r3, r3, #31
100106ca:	d5a6      	bpl.n	1001061a <MXC_I2C_RevA_SlaveAsyncHandler+0x21a>
                if (callback != NULL) {
100106cc:	2e00      	cmp	r6, #0
100106ce:	f47f aebe 	bne.w	1001044e <MXC_I2C_RevA_SlaveAsyncHandler+0x4e>
100106d2:	e6c0      	b.n	10010456 <MXC_I2C_RevA_SlaveAsyncHandler+0x56>
100106d4:	00c00008 	.word	0x00c00008
100106d8:	4001d000 	.word	0x4001d000
100106dc:	4001e000 	.word	0x4001e000
100106e0:	20000ff8 	.word	0x20000ff8
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100106e4:	f1ba 0f00 	cmp.w	sl, #0
100106e8:	d0a0      	beq.n	1001062c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
                *retVal = E_NO_ERROR;
100106ea:	f8c8 3000 	str.w	r3, [r8]
                if (callback != NULL) {
100106ee:	2e00      	cmp	r6, #0
100106f0:	d0d1      	beq.n	10010696 <MXC_I2C_RevA_SlaveAsyncHandler+0x296>
100106f2:	e7cc      	b.n	1001068e <MXC_I2C_RevA_SlaveAsyncHandler+0x28e>
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
100106f4:	2310      	movs	r3, #16
100106f6:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
100106f8:	6923      	ldr	r3, [r4, #16]
100106fa:	07d9      	lsls	r1, r3, #31
100106fc:	f53f aeab 	bmi.w	10010456 <MXC_I2C_RevA_SlaveAsyncHandler+0x56>
10010700:	e6ab      	b.n	1001045a <MXC_I2C_RevA_SlaveAsyncHandler+0x5a>
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10010702:	2320      	movs	r3, #32
10010704:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10010706:	6923      	ldr	r3, [r4, #16]
10010708:	079a      	lsls	r2, r3, #30
1001070a:	d421      	bmi.n	10010750 <MXC_I2C_RevA_SlaveAsyncHandler+0x350>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
1001070c:	f1ba 0f00 	cmp.w	sl, #0
10010710:	d123      	bne.n	1001075a <MXC_I2C_RevA_SlaveAsyncHandler+0x35a>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10010712:	f019 0f40 	tst.w	r9, #64	@ 0x40
10010716:	d126      	bne.n	10010766 <MXC_I2C_RevA_SlaveAsyncHandler+0x366>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
10010718:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
1001071c:	f47f aee3 	bne.w	100104e6 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
10010720:	e6ee      	b.n	10010500 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10010722:	2301      	movs	r3, #1
10010724:	e6d3      	b.n	100104ce <MXC_I2C_RevA_SlaveAsyncHandler+0xce>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10010726:	2301      	movs	r3, #1
10010728:	e772      	b.n	10010610 <MXC_I2C_RevA_SlaveAsyncHandler+0x210>
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001072a:	2301      	movs	r3, #1
1001072c:	e745      	b.n	100105ba <MXC_I2C_RevA_SlaveAsyncHandler+0x1ba>
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
1001072e:	2302      	movs	r3, #2
10010730:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10010732:	f1ba 0f00 	cmp.w	sl, #0
10010736:	d110      	bne.n	1001075a <MXC_I2C_RevA_SlaveAsyncHandler+0x35a>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10010738:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001073c:	d113      	bne.n	10010766 <MXC_I2C_RevA_SlaveAsyncHandler+0x366>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
1001073e:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
10010742:	f47f aed0 	bne.w	100104e6 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH) {
10010746:	f419 0f00 	tst.w	r9, #8388608	@ 0x800000
1001074a:	f47f aee1 	bne.w	10010510 <MXC_I2C_RevA_SlaveAsyncHandler+0x110>
1001074e:	e6e9      	b.n	10010524 <MXC_I2C_RevA_SlaveAsyncHandler+0x124>
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
10010750:	2302      	movs	r3, #2
10010752:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10010754:	f1ba 0f00 	cmp.w	sl, #0
10010758:	d0db      	beq.n	10010712 <MXC_I2C_RevA_SlaveAsyncHandler+0x312>
                *retVal = E_NO_ERROR;
1001075a:	2300      	movs	r3, #0
1001075c:	f8c8 3000 	str.w	r3, [r8]
                if (callback != NULL) {
10010760:	e799      	b.n	10010696 <MXC_I2C_RevA_SlaveAsyncHandler+0x296>
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10010762:	2301      	movs	r3, #1
10010764:	e7aa      	b.n	100106bc <MXC_I2C_RevA_SlaveAsyncHandler+0x2bc>
            *retVal = E_NO_ERROR;
10010766:	f8c8 6000 	str.w	r6, [r8]
            if (callback != NULL) {
1001076a:	e69d      	b.n	100104a8 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
1001076c:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
10010770:	f47f aeb5 	bne.w	100104de <MXC_I2C_RevA_SlaveAsyncHandler+0xde>
10010774:	e6c4      	b.n	10010500 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10010776:	686b      	ldr	r3, [r5, #4]
10010778:	07d8      	lsls	r0, r3, #31
1001077a:	f53f ae58 	bmi.w	1001042e <MXC_I2C_RevA_SlaveAsyncHandler+0x2e>
1001077e:	e74c      	b.n	1001061a <MXC_I2C_RevA_SlaveAsyncHandler+0x21a>

10010780 <MXC_I2C_RevA_AsyncHandler>:

void MXC_I2C_RevA_AsyncHandler(mxc_i2c_reva_regs_t *i2c, uint32_t interruptCheck)
{
10010780:	b530      	push	{r4, r5, lr}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
10010782:	4b17      	ldr	r3, [pc, #92]	@ (100107e0 <MXC_I2C_RevA_AsyncHandler+0x60>)
10010784:	4298      	cmp	r0, r3
{
10010786:	b085      	sub	sp, #20
10010788:	4604      	mov	r4, r0
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
1001078a:	d024      	beq.n	100107d6 <MXC_I2C_RevA_AsyncHandler+0x56>
1001078c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010790:	4298      	cmp	r0, r3
10010792:	d005      	beq.n	100107a0 <MXC_I2C_RevA_AsyncHandler+0x20>
10010794:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010798:	4298      	cmp	r0, r3
1001079a:	d01e      	beq.n	100107da <MXC_I2C_RevA_AsyncHandler+0x5a>
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);

        i2c->inten0 = int_en[0];
        i2c->inten1 = int_en[1];
    }
}
1001079c:	b005      	add	sp, #20
1001079e:	bd30      	pop	{r4, r5, pc}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
100107a0:	2001      	movs	r0, #1
    if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE) {
100107a2:	6823      	ldr	r3, [r4, #0]
100107a4:	079b      	lsls	r3, r3, #30
100107a6:	d504      	bpl.n	100107b2 <MXC_I2C_RevA_AsyncHandler+0x32>
}
100107a8:	b005      	add	sp, #20
100107aa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        MXC_I2C_RevA_MasterAsyncHandler(i2cNum);
100107ae:	f7ff bc8b 	b.w	100100c8 <MXC_I2C_RevA_MasterAsyncHandler>
        int_en[0] = i2c->inten0;
100107b2:	68e5      	ldr	r5, [r4, #12]
        mxc_i2c_reva_slave_handler_t callback = (mxc_i2c_reva_slave_handler_t)AsyncRequests[i2cNum];
100107b4:	4b0b      	ldr	r3, [pc, #44]	@ (100107e4 <MXC_I2C_RevA_AsyncHandler+0x64>)
        int_en[1] = i2c->inten1;
100107b6:	6962      	ldr	r2, [r4, #20]
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);
100107b8:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
        int_en[1] = i2c->inten1;
100107bc:	e9cd 5202 	strd	r5, r2, [sp, #8]
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);
100107c0:	ab01      	add	r3, sp, #4
100107c2:	aa02      	add	r2, sp, #8
100107c4:	4620      	mov	r0, r4
100107c6:	f7ff fe1b 	bl	10010400 <MXC_I2C_RevA_SlaveAsyncHandler>
        i2c->inten1 = int_en[1];
100107ca:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        i2c->inten0 = int_en[0];
100107ce:	60e2      	str	r2, [r4, #12]
        i2c->inten1 = int_en[1];
100107d0:	6163      	str	r3, [r4, #20]
}
100107d2:	b005      	add	sp, #20
100107d4:	bd30      	pop	{r4, r5, pc}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
100107d6:	2000      	movs	r0, #0
100107d8:	e7e3      	b.n	100107a2 <MXC_I2C_RevA_AsyncHandler+0x22>
100107da:	2002      	movs	r0, #2
100107dc:	e7e1      	b.n	100107a2 <MXC_I2C_RevA_AsyncHandler+0x22>
100107de:	bf00      	nop
100107e0:	4001d000 	.word	0x4001d000
100107e4:	20000ff8 	.word	0x20000ff8

100107e8 <MXC_ICC_Enable>:
    return MXC_ICC_RevA_ID((mxc_icc_reva_regs_t *)icc, cid);
}

void MXC_ICC_Enable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Enable((mxc_icc_reva_regs_t *)icc);
100107e8:	f000 b802 	b.w	100107f0 <MXC_ICC_RevA_Enable>

100107ec <MXC_ICC_Disable>:
}

void MXC_ICC_Disable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Disable((mxc_icc_reva_regs_t *)icc);
100107ec:	f000 b818 	b.w	10010820 <MXC_ICC_RevA_Disable>

100107f0 <MXC_ICC_RevA_Enable>:
}

void MXC_ICC_RevA_Enable(mxc_icc_reva_regs_t *icc)
{
    // Invalidate cache and wait until ready
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
100107f0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
100107f4:	2201      	movs	r2, #1
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
100107f6:	f023 0301 	bic.w	r3, r3, #1
100107fa:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
100107fe:	f8c0 2700 	str.w	r2, [r0, #1792]	@ 0x700
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10010802:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100

    while (!(MXC_ICC_Ready(icc))) {}
10010806:	03da      	lsls	r2, r3, #15
10010808:	d5fb      	bpl.n	10010802 <MXC_ICC_RevA_Enable+0x12>

    // Enable Cache
    icc->ctrl |= MXC_F_ICC_REVA_CTRL_EN;
1001080a:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
1001080e:	f043 0301 	orr.w	r3, r3, #1
10010812:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10010816:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    while (!(MXC_ICC_Ready(icc))) {}
1001081a:	03db      	lsls	r3, r3, #15
1001081c:	d5fb      	bpl.n	10010816 <MXC_ICC_RevA_Enable+0x26>
}
1001081e:	4770      	bx	lr

10010820 <MXC_ICC_RevA_Disable>:

void MXC_ICC_RevA_Disable(mxc_icc_reva_regs_t *icc)
{
    // Disable Cache
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10010820:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
10010824:	f023 0301 	bic.w	r3, r3, #1
10010828:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
}
1001082c:	4770      	bx	lr
1001082e:	bf00      	nop

10010830 <MXC_UART_Shutdown>:

    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
}

int MXC_UART_Shutdown(mxc_uart_regs_t *uart)
{
10010830:	b508      	push	{r3, lr}
    switch (MXC_UART_GET_IDX(uart)) {
10010832:	4b16      	ldr	r3, [pc, #88]	@ (1001088c <MXC_UART_Shutdown+0x5c>)
10010834:	4298      	cmp	r0, r3
10010836:	d010      	beq.n	1001085a <MXC_UART_Shutdown+0x2a>
10010838:	4b15      	ldr	r3, [pc, #84]	@ (10010890 <MXC_UART_Shutdown+0x60>)
1001083a:	4298      	cmp	r0, r3
1001083c:	d014      	beq.n	10010868 <MXC_UART_Shutdown+0x38>
1001083e:	4b15      	ldr	r3, [pc, #84]	@ (10010894 <MXC_UART_Shutdown+0x64>)
10010840:	4298      	cmp	r0, r3
10010842:	d018      	beq.n	10010876 <MXC_UART_Shutdown+0x46>
10010844:	4b14      	ldr	r3, [pc, #80]	@ (10010898 <MXC_UART_Shutdown+0x68>)
10010846:	4298      	cmp	r0, r3
10010848:	d11c      	bne.n	10010884 <MXC_UART_Shutdown+0x54>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
        break;

    case 3:
        MXC_SYS_Reset_Periph(MXC_SYS_RESET_UART3);
1001084a:	2044      	movs	r0, #68	@ 0x44
1001084c:	f7fe fec0 	bl	1000f5d0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART3);
10010850:	2044      	movs	r0, #68	@ 0x44
10010852:	f7fe fe01 	bl	1000f458 <MXC_SYS_ClockDisable>

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10010856:	2000      	movs	r0, #0
}
10010858:	bd08      	pop	{r3, pc}
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART0);
1001085a:	200b      	movs	r0, #11
1001085c:	f7fe feb8 	bl	1000f5d0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART0);
10010860:	2009      	movs	r0, #9
10010862:	f7fe fdf9 	bl	1000f458 <MXC_SYS_ClockDisable>
        break;
10010866:	e7f6      	b.n	10010856 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART1);
10010868:	200c      	movs	r0, #12
1001086a:	f7fe feb1 	bl	1000f5d0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART1);
1001086e:	200a      	movs	r0, #10
10010870:	f7fe fdf2 	bl	1000f458 <MXC_SYS_ClockDisable>
        break;
10010874:	e7ef      	b.n	10010856 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
10010876:	201c      	movs	r0, #28
10010878:	f7fe feaa 	bl	1000f5d0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
1001087c:	2021      	movs	r0, #33	@ 0x21
1001087e:	f7fe fdeb 	bl	1000f458 <MXC_SYS_ClockDisable>
        break;
10010882:	e7e8      	b.n	10010856 <MXC_UART_Shutdown+0x26>
        return E_BAD_PARAM;
10010884:	f06f 0002 	mvn.w	r0, #2
}
10010888:	bd08      	pop	{r3, pc}
1001088a:	bf00      	nop
1001088c:	40042000 	.word	0x40042000
10010890:	40043000 	.word	0x40043000
10010894:	40044000 	.word	0x40044000
10010898:	40081400 	.word	0x40081400

1001089c <MXC_UART_Init>:
{
1001089c:	b570      	push	{r4, r5, r6, lr}
1001089e:	4604      	mov	r4, r0
100108a0:	460e      	mov	r6, r1
100108a2:	4615      	mov	r5, r2
    retval = MXC_UART_Shutdown(uart);
100108a4:	f7ff ffc4 	bl	10010830 <MXC_UART_Shutdown>
    if (retval) {
100108a8:	bba8      	cbnz	r0, 10010916 <MXC_UART_Init+0x7a>
    switch (clock) {
100108aa:	2d02      	cmp	r5, #2
100108ac:	d02d      	beq.n	1001090a <MXC_UART_Init+0x6e>
100108ae:	2d04      	cmp	r5, #4
100108b0:	d018      	beq.n	100108e4 <MXC_UART_Init+0x48>
    switch (MXC_UART_GET_IDX(uart)) {
100108b2:	4b20      	ldr	r3, [pc, #128]	@ (10010934 <MXC_UART_Init+0x98>)
100108b4:	429c      	cmp	r4, r3
100108b6:	d01b      	beq.n	100108f0 <MXC_UART_Init+0x54>
100108b8:	4b1f      	ldr	r3, [pc, #124]	@ (10010938 <MXC_UART_Init+0x9c>)
100108ba:	429c      	cmp	r4, r3
100108bc:	d02c      	beq.n	10010918 <MXC_UART_Init+0x7c>
100108be:	4b1f      	ldr	r3, [pc, #124]	@ (1001093c <MXC_UART_Init+0xa0>)
100108c0:	429c      	cmp	r4, r3
100108c2:	d030      	beq.n	10010926 <MXC_UART_Init+0x8a>
100108c4:	4b1e      	ldr	r3, [pc, #120]	@ (10010940 <MXC_UART_Init+0xa4>)
100108c6:	429c      	cmp	r4, r3
100108c8:	d123      	bne.n	10010912 <MXC_UART_Init+0x76>
        MXC_GPIO_Config(&gpio_cfg_uart3);
100108ca:	481e      	ldr	r0, [pc, #120]	@ (10010944 <MXC_UART_Init+0xa8>)
100108cc:	f7fe ff1a 	bl	1000f704 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART3);
100108d0:	2044      	movs	r0, #68	@ 0x44
100108d2:	f7fe fde1 	bl	1000f498 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
100108d6:	462a      	mov	r2, r5
100108d8:	4631      	mov	r1, r6
100108da:	4620      	mov	r0, r4
}
100108dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
100108e0:	f000 b8f8 	b.w	10010ad4 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_ERTCO);
100108e4:	2006      	movs	r0, #6
100108e6:	f7fe fdf9 	bl	1000f4dc <MXC_SYS_ClockSourceEnable>
    switch (MXC_UART_GET_IDX(uart)) {
100108ea:	4b12      	ldr	r3, [pc, #72]	@ (10010934 <MXC_UART_Init+0x98>)
100108ec:	429c      	cmp	r4, r3
100108ee:	d1e3      	bne.n	100108b8 <MXC_UART_Init+0x1c>
        MXC_GPIO_Config(&gpio_cfg_uart0);
100108f0:	4815      	ldr	r0, [pc, #84]	@ (10010948 <MXC_UART_Init+0xac>)
100108f2:	f7fe ff07 	bl	1000f704 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART0);
100108f6:	2009      	movs	r0, #9
100108f8:	f7fe fdce 	bl	1000f498 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
100108fc:	462a      	mov	r2, r5
100108fe:	4631      	mov	r1, r6
10010900:	4620      	mov	r0, r4
}
10010902:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10010906:	f000 b8e5 	b.w	10010ad4 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_IBRO);
1001090a:	2005      	movs	r0, #5
1001090c:	f7fe fde6 	bl	1000f4dc <MXC_SYS_ClockSourceEnable>
        break;
10010910:	e7cf      	b.n	100108b2 <MXC_UART_Init+0x16>
        return E_BAD_PARAM;
10010912:	f06f 0002 	mvn.w	r0, #2
}
10010916:	bd70      	pop	{r4, r5, r6, pc}
        MXC_GPIO_Config(&gpio_cfg_uart1);
10010918:	480c      	ldr	r0, [pc, #48]	@ (1001094c <MXC_UART_Init+0xb0>)
1001091a:	f7fe fef3 	bl	1000f704 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART1);
1001091e:	200a      	movs	r0, #10
10010920:	f7fe fdba 	bl	1000f498 <MXC_SYS_ClockEnable>
        break;
10010924:	e7d7      	b.n	100108d6 <MXC_UART_Init+0x3a>
        MXC_GPIO_Config(&gpio_cfg_uart2);
10010926:	480a      	ldr	r0, [pc, #40]	@ (10010950 <MXC_UART_Init+0xb4>)
10010928:	f7fe feec 	bl	1000f704 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART2);
1001092c:	2021      	movs	r0, #33	@ 0x21
1001092e:	f7fe fdb3 	bl	1000f498 <MXC_SYS_ClockEnable>
        break;
10010932:	e7d0      	b.n	100108d6 <MXC_UART_Init+0x3a>
10010934:	40042000 	.word	0x40042000
10010938:	40043000 	.word	0x40043000
1001093c:	40044000 	.word	0x40044000
10010940:	40081400 	.word	0x40081400
10010944:	1001e930 	.word	0x1001e930
10010948:	1001e954 	.word	0x1001e954
1001094c:	1001e948 	.word	0x1001e948
10010950:	1001e93c 	.word	0x1001e93c

10010954 <MXC_UART_SetFrequency>:
}

int MXC_UART_SetFrequency(mxc_uart_regs_t *uart, unsigned int baud, mxc_uart_clock_t clock)
{
    int frequency, clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX(uart) < 0) {
10010954:	4b31      	ldr	r3, [pc, #196]	@ (10010a1c <MXC_UART_SetFrequency+0xc8>)
10010956:	4298      	cmp	r0, r3
{
10010958:	b510      	push	{r4, lr}
1001095a:	4604      	mov	r4, r0
    if (MXC_UART_GET_IDX(uart) < 0) {
1001095c:	d015      	beq.n	1001098a <MXC_UART_SetFrequency+0x36>
1001095e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010962:	4298      	cmp	r0, r3
10010964:	d011      	beq.n	1001098a <MXC_UART_SetFrequency+0x36>
10010966:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001096a:	4298      	cmp	r0, r3
1001096c:	d00d      	beq.n	1001098a <MXC_UART_SetFrequency+0x36>
1001096e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010972:	4298      	cmp	r0, r3
10010974:	d106      	bne.n	10010984 <MXC_UART_SetFrequency+0x30>
    }

    // check if the uart is LPUART
    if (uart == MXC_UART3) {
        // OSR default value
        uart->osr = 5;
10010976:	2305      	movs	r3, #5

        switch (clock) {
10010978:	2a02      	cmp	r2, #2
        uart->osr = 5;
1001097a:	6143      	str	r3, [r0, #20]
        switch (clock) {
1001097c:	d014      	beq.n	100109a8 <MXC_UART_SetFrequency+0x54>
1001097e:	2a04      	cmp	r2, #4
10010980:	d032      	beq.n	100109e8 <MXC_UART_SetFrequency+0x94>
10010982:	b18a      	cbz	r2, 100109a8 <MXC_UART_SetFrequency+0x54>
        return E_BAD_PARAM;
10010984:	f06f 0002 	mvn.w	r0, #2
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
    }

    return frequency;
}
10010988:	bd10      	pop	{r4, pc}
        if (clock == MXC_UART_ERTCO_CLK) {
1001098a:	2a04      	cmp	r2, #4
1001098c:	d0fa      	beq.n	10010984 <MXC_UART_SetFrequency+0x30>
        frequency = MXC_UART_RevB_SetFrequency((mxc_uart_revb_regs_t *)uart, baud, clock);
1001098e:	4620      	mov	r0, r4
10010990:	f000 f8d8 	bl	10010b44 <MXC_UART_RevB_SetFrequency>
    if (frequency > 0) {
10010994:	2800      	cmp	r0, #0
10010996:	ddf7      	ble.n	10010988 <MXC_UART_SetFrequency+0x34>
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
10010998:	6823      	ldr	r3, [r4, #0]
1001099a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
1001099e:	6023      	str	r3, [r4, #0]
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
100109a0:	6823      	ldr	r3, [r4, #0]
100109a2:	031b      	lsls	r3, r3, #12
100109a4:	d5fc      	bpl.n	100109a0 <MXC_UART_SetFrequency+0x4c>
}
100109a6:	bd10      	pop	{r4, pc}
            clkDiv = ((IBRO_FREQ) / baud);
100109a8:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
100109ac:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((IBRO_FREQ) % baud);
100109b0:	fb01 f203 	mul.w	r2, r1, r3
100109b4:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        if (!clkDiv || mod > (baud / 2)) {
100109b8:	b113      	cbz	r3, 100109c0 <MXC_UART_SetFrequency+0x6c>
100109ba:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
100109be:	d900      	bls.n	100109c2 <MXC_UART_SetFrequency+0x6e>
            clkDiv++;
100109c0:	3301      	adds	r3, #1
        uart->clkdiv = clkDiv;
100109c2:	4a17      	ldr	r2, [pc, #92]	@ (10010a20 <MXC_UART_SetFrequency+0xcc>)
100109c4:	6113      	str	r3, [r2, #16]
        return E_BAD_PARAM;
    }

    // check if UARt is LP UART
    if (uart == MXC_UART3) {
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
100109c6:	6810      	ldr	r0, [r2, #0]
100109c8:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
100109cc:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
100109d0:	d005      	beq.n	100109de <MXC_UART_SetFrequency+0x8a>
            periphClock = ERTCO_FREQ * 2;
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
100109d2:	6813      	ldr	r3, [r2, #0]
100109d4:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
100109d8:	d1d4      	bne.n	10010984 <MXC_UART_SetFrequency+0x30>
100109da:	f44f 00e1 	mov.w	r0, #7372800	@ 0x708000
                   MXC_S_UART_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
            periphClock = IBRO_FREQ;
        } else {
            return E_BAD_PARAM;
        }
        return (periphClock / uart->clkdiv);
100109de:	4b10      	ldr	r3, [pc, #64]	@ (10010a20 <MXC_UART_SetFrequency+0xcc>)
100109e0:	691b      	ldr	r3, [r3, #16]
100109e2:	fbb0 f0f3 	udiv	r0, r0, r3
100109e6:	e7d5      	b.n	10010994 <MXC_UART_SetFrequency+0x40>
            uart->ctrl |= MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK;
100109e8:	6803      	ldr	r3, [r0, #0]
100109ea:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
100109ee:	6003      	str	r3, [r0, #0]
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
100109f0:	6803      	ldr	r3, [r0, #0]
            if (baud > 2400) {
100109f2:	f5b1 6f16 	cmp.w	r1, #2400	@ 0x960
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
100109f6:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
100109fa:	6003      	str	r3, [r0, #0]
            if (baud > 2400) {
100109fc:	d90a      	bls.n	10010a14 <MXC_UART_SetFrequency+0xc0>
                uart->osr = 0;
100109fe:	2300      	movs	r3, #0
10010a00:	6143      	str	r3, [r0, #20]
            clkDiv = ((ERTCO_FREQ * 2) / baud);
10010a02:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
10010a06:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((ERTCO_FREQ * 2) % baud);
10010a0a:	fb01 f203 	mul.w	r2, r1, r3
10010a0e:	f5c2 3280 	rsb	r2, r2, #65536	@ 0x10000
10010a12:	e7d1      	b.n	100109b8 <MXC_UART_SetFrequency+0x64>
                uart->osr = 1;
10010a14:	2301      	movs	r3, #1
10010a16:	6143      	str	r3, [r0, #20]
10010a18:	e7f3      	b.n	10010a02 <MXC_UART_SetFrequency+0xae>
10010a1a:	bf00      	nop
10010a1c:	40042000 	.word	0x40042000
10010a20:	40081400 	.word	0x40081400

10010a24 <MXC_UART_GetFrequency>:
    if (MXC_UART_GET_IDX(uart) < 0) {
10010a24:	4b12      	ldr	r3, [pc, #72]	@ (10010a70 <MXC_UART_GetFrequency+0x4c>)
10010a26:	4298      	cmp	r0, r3
10010a28:	d01c      	beq.n	10010a64 <MXC_UART_GetFrequency+0x40>
10010a2a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010a2e:	4298      	cmp	r0, r3
10010a30:	d018      	beq.n	10010a64 <MXC_UART_GetFrequency+0x40>
10010a32:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010a36:	4298      	cmp	r0, r3
10010a38:	d014      	beq.n	10010a64 <MXC_UART_GetFrequency+0x40>
10010a3a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010a3e:	4298      	cmp	r0, r3
10010a40:	d112      	bne.n	10010a68 <MXC_UART_GetFrequency+0x44>
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
10010a42:	6803      	ldr	r3, [r0, #0]
10010a44:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10010a48:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
10010a4c:	d005      	beq.n	10010a5a <MXC_UART_GetFrequency+0x36>
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
10010a4e:	6803      	ldr	r3, [r0, #0]
10010a50:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10010a54:	d108      	bne.n	10010a68 <MXC_UART_GetFrequency+0x44>
10010a56:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        return (periphClock / uart->clkdiv);
10010a5a:	4a06      	ldr	r2, [pc, #24]	@ (10010a74 <MXC_UART_GetFrequency+0x50>)
10010a5c:	6910      	ldr	r0, [r2, #16]
10010a5e:	fbb3 f0f0 	udiv	r0, r3, r0
10010a62:	4770      	bx	lr
    } else {
        return MXC_UART_RevB_GetFrequency((mxc_uart_revb_regs_t *)uart);
10010a64:	f000 b8ba 	b.w	10010bdc <MXC_UART_RevB_GetFrequency>
        return E_BAD_PARAM;
10010a68:	f06f 0002 	mvn.w	r0, #2
    }
}
10010a6c:	4770      	bx	lr
10010a6e:	bf00      	nop
10010a70:	40042000 	.word	0x40042000
10010a74:	40081400 	.word	0x40081400

10010a78 <MXC_UART_SetDataSize>:

int MXC_UART_SetDataSize(mxc_uart_regs_t *uart, int dataSize)
{
    return MXC_UART_RevB_SetDataSize((mxc_uart_revb_regs_t *)uart, dataSize);
10010a78:	f000 b8f0 	b.w	10010c5c <MXC_UART_RevB_SetDataSize>

10010a7c <MXC_UART_SetStopBits>:
}

int MXC_UART_SetStopBits(mxc_uart_regs_t *uart, mxc_uart_stop_t stopBits)
{
    return MXC_UART_RevB_SetStopBits((mxc_uart_revb_regs_t *)uart, stopBits);
10010a7c:	f000 b90e 	b.w	10010c9c <MXC_UART_RevB_SetStopBits>

10010a80 <MXC_UART_SetParity>:
}

int MXC_UART_SetParity(mxc_uart_regs_t *uart, mxc_uart_parity_t parity)
{
    return MXC_UART_RevB_SetParity((mxc_uart_revb_regs_t *)uart, parity);
10010a80:	f000 b930 	b.w	10010ce4 <MXC_UART_RevB_SetParity>

10010a84 <MXC_UART_ReadCharacterRaw>:
    return MXC_UART_RevB_AbortTransmission((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_ReadCharacterRaw(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_ReadCharacterRaw((mxc_uart_revb_regs_t *)uart);
10010a84:	f000 b984 	b.w	10010d90 <MXC_UART_RevB_ReadCharacterRaw>

10010a88 <MXC_UART_WriteCharacterRaw>:
}

int MXC_UART_WriteCharacterRaw(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_RevB_WriteCharacterRaw((mxc_uart_revb_regs_t *)uart, character);
10010a88:	f000 b99e 	b.w	10010dc8 <MXC_UART_RevB_WriteCharacterRaw>

10010a8c <MXC_UART_ReadCharacter>:
}

int MXC_UART_ReadCharacter(mxc_uart_regs_t *uart)
{
    return MXC_UART_Common_ReadCharacter(uart);
10010a8c:	f000 b808 	b.w	10010aa0 <MXC_UART_Common_ReadCharacter>

10010a90 <MXC_UART_WriteCharacter>:
}

int MXC_UART_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_Common_WriteCharacter(uart, character);
10010a90:	f000 b812 	b.w	10010ab8 <MXC_UART_Common_WriteCharacter>

10010a94 <MXC_UART_GetRXFIFOAvailable>:
    return MXC_UART_RevB_ReadRXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetRXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetRXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10010a94:	f000 b9b6 	b.w	10010e04 <MXC_UART_RevB_GetRXFIFOAvailable>

10010a98 <MXC_UART_GetTXFIFOAvailable>:
    return MXC_UART_RevB_WriteTXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetTXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetTXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10010a98:	f000 b9b8 	b.w	10010e0c <MXC_UART_RevB_GetTXFIFOAvailable>

10010a9c <MXC_UART_SetRXThreshold>:
    return MXC_UART_RevB_ClearTXFIFO((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_SetRXThreshold(mxc_uart_regs_t *uart, unsigned int numBytes)
{
    return MXC_UART_RevB_SetRXThreshold((mxc_uart_revb_regs_t *)uart, numBytes);
10010a9c:	f000 b9bc 	b.w	10010e18 <MXC_UART_RevB_SetRXThreshold>

10010aa0 <MXC_UART_Common_ReadCharacter>:

#include "uart_common.h"
#include "uart.h"

int MXC_UART_Common_ReadCharacter(mxc_uart_regs_t *uart)
{
10010aa0:	b510      	push	{r4, lr}
10010aa2:	4604      	mov	r4, r0
    // Wait until FIFO has a character ready.
    while (MXC_UART_GetRXFIFOAvailable(uart) < 1) {}
10010aa4:	4620      	mov	r0, r4
10010aa6:	f7ff fff5 	bl	10010a94 <MXC_UART_GetRXFIFOAvailable>
10010aaa:	2800      	cmp	r0, #0
10010aac:	d0fa      	beq.n	10010aa4 <MXC_UART_Common_ReadCharacter+0x4>

    // Read the character using the non-blocking function.
    return MXC_UART_ReadCharacterRaw(uart);
10010aae:	4620      	mov	r0, r4
}
10010ab0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_UART_ReadCharacterRaw(uart);
10010ab4:	f7ff bfe6 	b.w	10010a84 <MXC_UART_ReadCharacterRaw>

10010ab8 <MXC_UART_Common_WriteCharacter>:

int MXC_UART_Common_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
10010ab8:	b538      	push	{r3, r4, r5, lr}
10010aba:	4604      	mov	r4, r0
10010abc:	460d      	mov	r5, r1
    // Wait until FIFO has space for the character.
    while (MXC_UART_GetTXFIFOAvailable(uart) < 1) {}
10010abe:	4620      	mov	r0, r4
10010ac0:	f7ff ffea 	bl	10010a98 <MXC_UART_GetTXFIFOAvailable>
10010ac4:	2800      	cmp	r0, #0
10010ac6:	d0fa      	beq.n	10010abe <MXC_UART_Common_WriteCharacter+0x6>

    // Write the character using the non-blocking function.
    return MXC_UART_WriteCharacterRaw(uart, character);
10010ac8:	4629      	mov	r1, r5
10010aca:	4620      	mov	r0, r4
}
10010acc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    return MXC_UART_WriteCharacterRaw(uart, character);
10010ad0:	f7ff bfda 	b.w	10010a88 <MXC_UART_WriteCharacterRaw>

10010ad4 <MXC_UART_RevB_Init>:
/* ************************************************************************* */
int MXC_UART_RevB_Init(mxc_uart_revb_regs_t *uart, unsigned int baud, mxc_uart_revb_clock_t clock)
{
    int err;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010ad4:	4b1a      	ldr	r3, [pc, #104]	@ (10010b40 <MXC_UART_RevB_Init+0x6c>)
10010ad6:	4298      	cmp	r0, r3
{
10010ad8:	b570      	push	{r4, r5, r6, lr}
10010ada:	4604      	mov	r4, r0
10010adc:	460d      	mov	r5, r1
10010ade:	4616      	mov	r6, r2
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010ae0:	d00b      	beq.n	10010afa <MXC_UART_RevB_Init+0x26>
10010ae2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010ae6:	4298      	cmp	r0, r3
10010ae8:	d007      	beq.n	10010afa <MXC_UART_RevB_Init+0x26>
10010aea:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010aee:	4298      	cmp	r0, r3
10010af0:	d003      	beq.n	10010afa <MXC_UART_RevB_Init+0x26>
10010af2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010af6:	4298      	cmp	r0, r3
10010af8:	d11f      	bne.n	10010b3a <MXC_UART_RevB_Init+0x66>
        return E_BAD_PARAM;
    }

    // Initialize UART
    if ((err = MXC_UART_SetRXThreshold((mxc_uart_regs_t *)uart, 1)) !=
10010afa:	2101      	movs	r1, #1
10010afc:	4620      	mov	r0, r4
10010afe:	f7ff ffcd 	bl	10010a9c <MXC_UART_SetRXThreshold>
10010b02:	b100      	cbz	r0, 10010b06 <MXC_UART_RevB_Init+0x32>
        E_NO_ERROR) {
        return err;
    }

    return E_NO_ERROR;
}
10010b04:	bd70      	pop	{r4, r5, r6, pc}
    if ((err = MXC_UART_SetDataSize((mxc_uart_regs_t *)uart, 8)) !=
10010b06:	2108      	movs	r1, #8
10010b08:	4620      	mov	r0, r4
10010b0a:	f7ff ffb5 	bl	10010a78 <MXC_UART_SetDataSize>
10010b0e:	2800      	cmp	r0, #0
10010b10:	d1f8      	bne.n	10010b04 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetParity((mxc_uart_regs_t *)uart, MXC_UART_PARITY_DISABLE)) !=
10010b12:	4601      	mov	r1, r0
10010b14:	4620      	mov	r0, r4
10010b16:	f7ff ffb3 	bl	10010a80 <MXC_UART_SetParity>
10010b1a:	2800      	cmp	r0, #0
10010b1c:	d1f2      	bne.n	10010b04 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetStopBits((mxc_uart_regs_t *)uart, MXC_UART_STOP_1)) != E_NO_ERROR) {
10010b1e:	4601      	mov	r1, r0
10010b20:	4620      	mov	r0, r4
10010b22:	f7ff ffab 	bl	10010a7c <MXC_UART_SetStopBits>
10010b26:	2800      	cmp	r0, #0
10010b28:	d1ec      	bne.n	10010b04 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetFrequency((mxc_uart_regs_t *)uart, baud, (mxc_uart_clock_t)clock)) <
10010b2a:	4632      	mov	r2, r6
10010b2c:	4629      	mov	r1, r5
10010b2e:	4620      	mov	r0, r4
10010b30:	f7ff ff10 	bl	10010954 <MXC_UART_SetFrequency>
10010b34:	ea00 70e0 	and.w	r0, r0, r0, asr #31
}
10010b38:	bd70      	pop	{r4, r5, r6, pc}
        return E_BAD_PARAM;
10010b3a:	f06f 0002 	mvn.w	r0, #2
}
10010b3e:	bd70      	pop	{r4, r5, r6, pc}
10010b40:	40042000 	.word	0x40042000

10010b44 <MXC_UART_RevB_SetFrequency>:

int MXC_UART_RevB_SetFrequency(mxc_uart_revb_regs_t *uart, unsigned int baud,
                               mxc_uart_revb_clock_t clock)
{
    unsigned clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010b44:	4b22      	ldr	r3, [pc, #136]	@ (10010bd0 <MXC_UART_RevB_SetFrequency+0x8c>)
10010b46:	4298      	cmp	r0, r3
10010b48:	d00b      	beq.n	10010b62 <MXC_UART_RevB_SetFrequency+0x1e>
10010b4a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010b4e:	4298      	cmp	r0, r3
10010b50:	d007      	beq.n	10010b62 <MXC_UART_RevB_SetFrequency+0x1e>
10010b52:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010b56:	4298      	cmp	r0, r3
10010b58:	d003      	beq.n	10010b62 <MXC_UART_RevB_SetFrequency+0x1e>
10010b5a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010b5e:	4298      	cmp	r0, r3
10010b60:	d132      	bne.n	10010bc8 <MXC_UART_RevB_SetFrequency+0x84>
        return E_BAD_PARAM;
    }

    // OSR default value
    uart->osr = 5;
10010b62:	2305      	movs	r3, #5

    switch (clock) {
10010b64:	2a01      	cmp	r2, #1
{
10010b66:	b410      	push	{r4}
    uart->osr = 5;
10010b68:	6143      	str	r3, [r0, #20]
    switch (clock) {
10010b6a:	d023      	beq.n	10010bb4 <MXC_UART_RevB_SetFrequency+0x70>
10010b6c:	2a02      	cmp	r2, #2
10010b6e:	d014      	beq.n	10010b9a <MXC_UART_RevB_SetFrequency+0x56>
10010b70:	b11a      	cbz	r2, 10010b7a <MXC_UART_RevB_SetFrequency+0x36>
    if (!clkDiv || mod > (baud / 2)) {
        clkDiv++;
    }
    uart->clkdiv = clkDiv;
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
}
10010b72:	f06f 0002 	mvn.w	r0, #2
10010b76:	bc10      	pop	{r4}
10010b78:	4770      	bx	lr
        clkDiv = (PeripheralClock / baud);
10010b7a:	4b16      	ldr	r3, [pc, #88]	@ (10010bd4 <MXC_UART_RevB_SetFrequency+0x90>)
10010b7c:	681a      	ldr	r2, [r3, #0]
10010b7e:	0852      	lsrs	r2, r2, #1
10010b80:	fbb2 f3f1 	udiv	r3, r2, r1
        mod = (PeripheralClock % baud);
10010b84:	fb01 2213 	mls	r2, r1, r3, r2
    if (!clkDiv || mod > (baud / 2)) {
10010b88:	b113      	cbz	r3, 10010b90 <MXC_UART_RevB_SetFrequency+0x4c>
10010b8a:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
10010b8e:	d900      	bls.n	10010b92 <MXC_UART_RevB_SetFrequency+0x4e>
        clkDiv++;
10010b90:	3301      	adds	r3, #1
}
10010b92:	bc10      	pop	{r4}
    uart->clkdiv = clkDiv;
10010b94:	6103      	str	r3, [r0, #16]
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
10010b96:	f7ff bf45 	b.w	10010a24 <MXC_UART_GetFrequency>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10010b9a:	6804      	ldr	r4, [r0, #0]
        clkDiv = (IBRO_FREQ / baud);
10010b9c:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10010ba0:	f444 3400 	orr.w	r4, r4, #131072	@ 0x20000
        clkDiv = (IBRO_FREQ / baud);
10010ba4:	fbb3 f3f1 	udiv	r3, r3, r1
        mod = (IBRO_FREQ % baud);
10010ba8:	fb01 f203 	mul.w	r2, r1, r3
10010bac:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10010bb0:	6004      	str	r4, [r0, #0]
        break;
10010bb2:	e7e9      	b.n	10010b88 <MXC_UART_RevB_SetFrequency+0x44>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10010bb4:	6804      	ldr	r4, [r0, #0]
        clkDiv = UART_EXTCLK_FREQ / baud;
10010bb6:	4a08      	ldr	r2, [pc, #32]	@ (10010bd8 <MXC_UART_RevB_SetFrequency+0x94>)
10010bb8:	fbb2 f3f1 	udiv	r3, r2, r1
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10010bbc:	f444 3480 	orr.w	r4, r4, #65536	@ 0x10000
10010bc0:	6004      	str	r4, [r0, #0]
        mod = UART_EXTCLK_FREQ % baud;
10010bc2:	fb01 2213 	mls	r2, r1, r3, r2
        break;
10010bc6:	e7df      	b.n	10010b88 <MXC_UART_RevB_SetFrequency+0x44>
}
10010bc8:	f06f 0002 	mvn.w	r0, #2
10010bcc:	4770      	bx	lr
10010bce:	bf00      	nop
10010bd0:	40042000 	.word	0x40042000
10010bd4:	20001768 	.word	0x20001768
10010bd8:	047868c0 	.word	0x047868c0

10010bdc <MXC_UART_RevB_GetFrequency>:

int MXC_UART_RevB_GetFrequency(mxc_uart_revb_regs_t *uart)
{
    int periphClock = 0;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010bdc:	4b1c      	ldr	r3, [pc, #112]	@ (10010c50 <MXC_UART_RevB_GetFrequency+0x74>)
10010bde:	4298      	cmp	r0, r3
10010be0:	d00b      	beq.n	10010bfa <MXC_UART_RevB_GetFrequency+0x1e>
10010be2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010be6:	4298      	cmp	r0, r3
10010be8:	d007      	beq.n	10010bfa <MXC_UART_RevB_GetFrequency+0x1e>
10010bea:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010bee:	4298      	cmp	r0, r3
10010bf0:	d003      	beq.n	10010bfa <MXC_UART_RevB_GetFrequency+0x1e>
10010bf2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010bf6:	4298      	cmp	r0, r3
10010bf8:	d122      	bne.n	10010c40 <MXC_UART_RevB_GetFrequency+0x64>
        return E_BAD_PARAM;
    }

    if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10010bfa:	6803      	ldr	r3, [r0, #0]
10010bfc:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10010c00:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
10010c04:	d017      	beq.n	10010c36 <MXC_UART_RevB_GetFrequency+0x5a>
        MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
        periphClock = UART_EXTCLK_FREQ;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10010c06:	6803      	ldr	r3, [r0, #0]
10010c08:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10010c0c:	d00c      	beq.n	10010c28 <MXC_UART_RevB_GetFrequency+0x4c>
               MXC_S_UART_REVB_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
        periphClock = PeripheralClock;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2) {
10010c0e:	6803      	ldr	r3, [r0, #0]
10010c10:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10010c14:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
10010c18:	bf08      	it	eq
10010c1a:	f44f 03e1 	moveq.w	r3, #7372800	@ 0x708000
10010c1e:	d112      	bne.n	10010c46 <MXC_UART_RevB_GetFrequency+0x6a>
#endif
    } else {
        return E_BAD_PARAM;
    }

    return (periphClock / uart->clkdiv);
10010c20:	6900      	ldr	r0, [r0, #16]
10010c22:	fbb3 f0f0 	udiv	r0, r3, r0
10010c26:	4770      	bx	lr
        periphClock = PeripheralClock;
10010c28:	4b0a      	ldr	r3, [pc, #40]	@ (10010c54 <MXC_UART_RevB_GetFrequency+0x78>)
    return (periphClock / uart->clkdiv);
10010c2a:	6900      	ldr	r0, [r0, #16]
        periphClock = PeripheralClock;
10010c2c:	681b      	ldr	r3, [r3, #0]
10010c2e:	085b      	lsrs	r3, r3, #1
    return (periphClock / uart->clkdiv);
10010c30:	fbb3 f0f0 	udiv	r0, r3, r0
10010c34:	4770      	bx	lr
10010c36:	4b08      	ldr	r3, [pc, #32]	@ (10010c58 <MXC_UART_RevB_GetFrequency+0x7c>)
10010c38:	6900      	ldr	r0, [r0, #16]
10010c3a:	fbb3 f0f0 	udiv	r0, r3, r0
10010c3e:	4770      	bx	lr
        return E_BAD_PARAM;
10010c40:	f06f 0002 	mvn.w	r0, #2
}
10010c44:	4770      	bx	lr
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK3) {
10010c46:	6803      	ldr	r3, [r0, #0]
        return E_BAD_PARAM;
10010c48:	f06f 0002 	mvn.w	r0, #2
        return E_BAD_PARAM;
10010c4c:	4770      	bx	lr
10010c4e:	bf00      	nop
10010c50:	40042000 	.word	0x40042000
10010c54:	20001768 	.word	0x20001768
10010c58:	047868c0 	.word	0x047868c0

10010c5c <MXC_UART_RevB_SetDataSize>:

int MXC_UART_RevB_SetDataSize(mxc_uart_revb_regs_t *uart, int dataSize)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010c5c:	4a0e      	ldr	r2, [pc, #56]	@ (10010c98 <MXC_UART_RevB_SetDataSize+0x3c>)
10010c5e:	4290      	cmp	r0, r2
{
10010c60:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010c62:	d00b      	beq.n	10010c7c <MXC_UART_RevB_SetDataSize+0x20>
10010c64:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10010c68:	4290      	cmp	r0, r2
10010c6a:	d007      	beq.n	10010c7c <MXC_UART_RevB_SetDataSize+0x20>
10010c6c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10010c70:	4290      	cmp	r0, r2
10010c72:	d003      	beq.n	10010c7c <MXC_UART_RevB_SetDataSize+0x20>
10010c74:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10010c78:	4290      	cmp	r0, r2
10010c7a:	d10a      	bne.n	10010c92 <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    if (dataSize < 5 || dataSize > 8) {
10010c7c:	3905      	subs	r1, #5
10010c7e:	2903      	cmp	r1, #3
10010c80:	d807      	bhi.n	10010c92 <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    dataSize = (dataSize - 5) << MXC_F_UART_REVB_CTRL_CHAR_SIZE_POS;

    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
10010c82:	681a      	ldr	r2, [r3, #0]
10010c84:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
10010c88:	ea42 2281 	orr.w	r2, r2, r1, lsl #10

    return E_NO_ERROR;
10010c8c:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
10010c8e:	601a      	str	r2, [r3, #0]
    return E_NO_ERROR;
10010c90:	4770      	bx	lr
        return E_BAD_PARAM;
10010c92:	f06f 0002 	mvn.w	r0, #2
}
10010c96:	4770      	bx	lr
10010c98:	40042000 	.word	0x40042000

10010c9c <MXC_UART_RevB_SetStopBits>:

int MXC_UART_RevB_SetStopBits(mxc_uart_revb_regs_t *uart, mxc_uart_stop_t stopBits)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010c9c:	4b10      	ldr	r3, [pc, #64]	@ (10010ce0 <MXC_UART_RevB_SetStopBits+0x44>)
10010c9e:	4298      	cmp	r0, r3
10010ca0:	d00b      	beq.n	10010cba <MXC_UART_RevB_SetStopBits+0x1e>
10010ca2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010ca6:	4298      	cmp	r0, r3
10010ca8:	d007      	beq.n	10010cba <MXC_UART_RevB_SetStopBits+0x1e>
10010caa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010cae:	4298      	cmp	r0, r3
10010cb0:	d003      	beq.n	10010cba <MXC_UART_RevB_SetStopBits+0x1e>
10010cb2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010cb6:	4298      	cmp	r0, r3
10010cb8:	d108      	bne.n	10010ccc <MXC_UART_RevB_SetStopBits+0x30>
        return E_BAD_PARAM;
    }

    switch (stopBits) {
10010cba:	b151      	cbz	r1, 10010cd2 <MXC_UART_RevB_SetStopBits+0x36>
10010cbc:	2901      	cmp	r1, #1
10010cbe:	d105      	bne.n	10010ccc <MXC_UART_RevB_SetStopBits+0x30>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
                     0 << MXC_F_UART_REVB_CTRL_STOPBITS_POS);
        break;

    case MXC_UART_STOP_2:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
10010cc0:	6803      	ldr	r3, [r0, #0]
10010cc2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
10010cc6:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10010cc8:	2000      	movs	r0, #0
10010cca:	4770      	bx	lr
10010ccc:	f06f 0002 	mvn.w	r0, #2
}
10010cd0:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
10010cd2:	6803      	ldr	r3, [r0, #0]
10010cd4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10010cd8:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
10010cda:	2000      	movs	r0, #0
10010cdc:	4770      	bx	lr
10010cde:	bf00      	nop
10010ce0:	40042000 	.word	0x40042000

10010ce4 <MXC_UART_RevB_SetParity>:

int MXC_UART_RevB_SetParity(mxc_uart_revb_regs_t *uart, mxc_uart_parity_t parity)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010ce4:	4b29      	ldr	r3, [pc, #164]	@ (10010d8c <MXC_UART_RevB_SetParity+0xa8>)
10010ce6:	4298      	cmp	r0, r3
10010ce8:	d00b      	beq.n	10010d02 <MXC_UART_RevB_SetParity+0x1e>
10010cea:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010cee:	4298      	cmp	r0, r3
10010cf0:	d007      	beq.n	10010d02 <MXC_UART_RevB_SetParity+0x1e>
10010cf2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010cf6:	4298      	cmp	r0, r3
10010cf8:	d003      	beq.n	10010d02 <MXC_UART_RevB_SetParity+0x1e>
10010cfa:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010cfe:	4298      	cmp	r0, r3
10010d00:	d141      	bne.n	10010d86 <MXC_UART_RevB_SetParity+0xa2>
        return E_BAD_PARAM;
    }

    switch (parity) {
10010d02:	2904      	cmp	r1, #4
10010d04:	d83f      	bhi.n	10010d86 <MXC_UART_RevB_SetParity+0xa2>
10010d06:	e8df f001 	tbb	[pc, r1]
10010d0a:	1711      	.short	0x1711
10010d0c:	3124      	.short	0x3124
10010d0e:	03          	.byte	0x03
10010d0f:	00          	.byte	0x00
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
        break;

    case MXC_UART_PARITY_ODD_1:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10010d10:	6803      	ldr	r3, [r0, #0]
10010d12:	f043 0310 	orr.w	r3, r3, #16
10010d16:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10010d18:	6803      	ldr	r3, [r0, #0]
10010d1a:	f043 0320 	orr.w	r3, r3, #32
10010d1e:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10010d20:	6803      	ldr	r3, [r0, #0]
10010d22:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10010d26:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10010d28:	2000      	movs	r0, #0
10010d2a:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 0 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10010d2c:	6803      	ldr	r3, [r0, #0]
10010d2e:	f023 0310 	bic.w	r3, r3, #16
10010d32:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
10010d34:	2000      	movs	r0, #0
10010d36:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10010d38:	6803      	ldr	r3, [r0, #0]
10010d3a:	f043 0310 	orr.w	r3, r3, #16
10010d3e:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10010d40:	6803      	ldr	r3, [r0, #0]
10010d42:	f023 0320 	bic.w	r3, r3, #32
10010d46:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10010d48:	6803      	ldr	r3, [r0, #0]
10010d4a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10010d4e:	6003      	str	r3, [r0, #0]
        break;
10010d50:	e7ea      	b.n	10010d28 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10010d52:	6803      	ldr	r3, [r0, #0]
10010d54:	f043 0310 	orr.w	r3, r3, #16
10010d58:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10010d5a:	6803      	ldr	r3, [r0, #0]
10010d5c:	f023 0320 	bic.w	r3, r3, #32
10010d60:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10010d62:	6803      	ldr	r3, [r0, #0]
10010d64:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10010d68:	6003      	str	r3, [r0, #0]
        break;
10010d6a:	e7dd      	b.n	10010d28 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10010d6c:	6803      	ldr	r3, [r0, #0]
10010d6e:	f043 0310 	orr.w	r3, r3, #16
10010d72:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10010d74:	6803      	ldr	r3, [r0, #0]
10010d76:	f043 0320 	orr.w	r3, r3, #32
10010d7a:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10010d7c:	6803      	ldr	r3, [r0, #0]
10010d7e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10010d82:	6003      	str	r3, [r0, #0]
        break;
10010d84:	e7d0      	b.n	10010d28 <MXC_UART_RevB_SetParity+0x44>
    switch (parity) {
10010d86:	f06f 0002 	mvn.w	r0, #2
}
10010d8a:	4770      	bx	lr
10010d8c:	40042000 	.word	0x40042000

10010d90 <MXC_UART_RevB_ReadCharacterRaw>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_ReadCharacterRaw(mxc_uart_revb_regs_t *uart)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010d90:	4b0c      	ldr	r3, [pc, #48]	@ (10010dc4 <MXC_UART_RevB_ReadCharacterRaw+0x34>)
10010d92:	4298      	cmp	r0, r3
10010d94:	d00b      	beq.n	10010dae <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10010d96:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010d9a:	4298      	cmp	r0, r3
10010d9c:	d007      	beq.n	10010dae <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10010d9e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010da2:	4298      	cmp	r0, r3
10010da4:	d003      	beq.n	10010dae <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10010da6:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010daa:	4298      	cmp	r0, r3
10010dac:	d104      	bne.n	10010db8 <MXC_UART_RevB_ReadCharacterRaw+0x28>
        return E_BAD_PARAM;
    }

    if (uart->status & MXC_F_UART_REVB_STATUS_RX_EM) {
10010dae:	6843      	ldr	r3, [r0, #4]
10010db0:	06db      	lsls	r3, r3, #27
10010db2:	d404      	bmi.n	10010dbe <MXC_UART_RevB_ReadCharacterRaw+0x2e>
        return E_UNDERFLOW;
    }

    return uart->fifo;
10010db4:	6a00      	ldr	r0, [r0, #32]
10010db6:	4770      	bx	lr
        return E_BAD_PARAM;
10010db8:	f06f 0002 	mvn.w	r0, #2
10010dbc:	4770      	bx	lr
        return E_UNDERFLOW;
10010dbe:	f06f 000c 	mvn.w	r0, #12
}
10010dc2:	4770      	bx	lr
10010dc4:	40042000 	.word	0x40042000

10010dc8 <MXC_UART_RevB_WriteCharacterRaw>:

int MXC_UART_RevB_WriteCharacterRaw(mxc_uart_revb_regs_t *uart, uint8_t character)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010dc8:	4a0d      	ldr	r2, [pc, #52]	@ (10010e00 <MXC_UART_RevB_WriteCharacterRaw+0x38>)
10010dca:	4290      	cmp	r0, r2
{
10010dcc:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010dce:	d00b      	beq.n	10010de8 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10010dd0:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10010dd4:	4290      	cmp	r0, r2
10010dd6:	d007      	beq.n	10010de8 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10010dd8:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10010ddc:	4290      	cmp	r0, r2
10010dde:	d003      	beq.n	10010de8 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10010de0:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10010de4:	4290      	cmp	r0, r2
10010de6:	d105      	bne.n	10010df4 <MXC_UART_RevB_WriteCharacterRaw+0x2c>
        return E_BAD_PARAM;
    }

    // Require the TX FIFO to be empty, so that we write out the expected character
    // Return error if the FIFO is full
    if (uart->status & MXC_F_UART_REVB_STATUS_TX_FULL) {
10010de8:	6858      	ldr	r0, [r3, #4]
10010dea:	f010 0080 	ands.w	r0, r0, #128	@ 0x80
10010dee:	d104      	bne.n	10010dfa <MXC_UART_RevB_WriteCharacterRaw+0x32>
        return E_OVERFLOW;
    }

    uart->fifo = character;
10010df0:	6219      	str	r1, [r3, #32]

    return E_NO_ERROR;
10010df2:	4770      	bx	lr
        return E_BAD_PARAM;
10010df4:	f06f 0002 	mvn.w	r0, #2
10010df8:	4770      	bx	lr
        return E_OVERFLOW;
10010dfa:	f06f 000b 	mvn.w	r0, #11
}
10010dfe:	4770      	bx	lr
10010e00:	40042000 	.word	0x40042000

10010e04 <MXC_UART_RevB_GetRXFIFOAvailable>:
    return read;
}

unsigned int MXC_UART_RevB_GetRXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    return (uart->status & MXC_F_UART_REVB_STATUS_RX_LVL) >> MXC_F_UART_REVB_STATUS_RX_LVL_POS;
10010e04:	6840      	ldr	r0, [r0, #4]
}
10010e06:	f3c0 2003 	ubfx	r0, r0, #8, #4
10010e0a:	4770      	bx	lr

10010e0c <MXC_UART_RevB_GetTXFIFOAvailable>:
    return written;
}

unsigned int MXC_UART_RevB_GetTXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    int txCnt = (uart->status & MXC_F_UART_REVB_STATUS_TX_LVL) >> MXC_F_UART_REVB_STATUS_TX_LVL_POS;
10010e0c:	6840      	ldr	r0, [r0, #4]
10010e0e:	f3c0 3003 	ubfx	r0, r0, #12, #4
    return MXC_UART_FIFO_DEPTH - txCnt;
}
10010e12:	f1c0 0008 	rsb	r0, r0, #8
10010e16:	4770      	bx	lr

10010e18 <MXC_UART_RevB_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_SetRXThreshold(mxc_uart_revb_regs_t *uart, unsigned int numBytes)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010e18:	4a0e      	ldr	r2, [pc, #56]	@ (10010e54 <MXC_UART_RevB_SetRXThreshold+0x3c>)
10010e1a:	4290      	cmp	r0, r2
{
10010e1c:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010e1e:	d00b      	beq.n	10010e38 <MXC_UART_RevB_SetRXThreshold+0x20>
10010e20:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10010e24:	4290      	cmp	r0, r2
10010e26:	d007      	beq.n	10010e38 <MXC_UART_RevB_SetRXThreshold+0x20>
10010e28:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10010e2c:	4290      	cmp	r0, r2
10010e2e:	d003      	beq.n	10010e38 <MXC_UART_RevB_SetRXThreshold+0x20>
10010e30:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10010e34:	4290      	cmp	r0, r2
10010e36:	d109      	bne.n	10010e4c <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    if (numBytes < 1 || numBytes > MXC_UART_FIFO_DEPTH) {
10010e38:	1e4a      	subs	r2, r1, #1
10010e3a:	2a07      	cmp	r2, #7
10010e3c:	d806      	bhi.n	10010e4c <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    numBytes <<= MXC_F_UART_REVB_CTRL_RX_THD_VAL_POS;
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
10010e3e:	681a      	ldr	r2, [r3, #0]
10010e40:	f022 020f 	bic.w	r2, r2, #15
10010e44:	4311      	orrs	r1, r2

    return E_NO_ERROR;
10010e46:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
10010e48:	6019      	str	r1, [r3, #0]
    return E_NO_ERROR;
10010e4a:	4770      	bx	lr
        return E_BAD_PARAM;
10010e4c:	f06f 0002 	mvn.w	r0, #2
}
10010e50:	4770      	bx	lr
10010e52:	bf00      	nop
10010e54:	40042000 	.word	0x40042000

10010e58 <MXC_GPIO_Common_Init>:
static void *cbparam[MXC_CFG_GPIO_INSTANCES][MXC_CFG_GPIO_PINS_PORT];
static uint8_t initialized = 0;

/* **** Functions **** */
int MXC_GPIO_Common_Init(uint32_t portmask)
{
10010e58:	b510      	push	{r4, lr}
    if (!initialized) {
10010e5a:	4c06      	ldr	r4, [pc, #24]	@ (10010e74 <MXC_GPIO_Common_Init+0x1c>)
10010e5c:	7821      	ldrb	r1, [r4, #0]
10010e5e:	b931      	cbnz	r1, 10010e6e <MXC_GPIO_Common_Init+0x16>
        int i, j;

        for (i = 0; i < MXC_CFG_GPIO_INSTANCES; i++) {
            // Initialize call back arrays
            for (j = 0; j < MXC_CFG_GPIO_PINS_PORT; j++) {
                callback[i][j] = NULL;
10010e60:	4805      	ldr	r0, [pc, #20]	@ (10010e78 <MXC_GPIO_Common_Init+0x20>)
10010e62:	f44f 7200 	mov.w	r2, #512	@ 0x200
10010e66:	f004 f9f3 	bl	10015250 <memset>
            }
        }

        initialized = 1;
10010e6a:	2301      	movs	r3, #1
10010e6c:	7023      	strb	r3, [r4, #0]
    }

    return E_NO_ERROR;
}
10010e6e:	2000      	movs	r0, #0
10010e70:	bd10      	pop	{r4, pc}
10010e72:	bf00      	nop
10010e74:	20001050 	.word	0x20001050
10010e78:	20001254 	.word	0x20001254

10010e7c <MXC_GPIO_Common_Handler>:
void MXC_GPIO_Common_Handler(unsigned int port)
{
    uint32_t stat;
    unsigned int pin;

    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10010e7c:	2803      	cmp	r0, #3
{
10010e7e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10010e80:	4607      	mov	r7, r0
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10010e82:	d81d      	bhi.n	10010ec0 <MXC_GPIO_Common_Handler+0x44>

    mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(port);
10010e84:	bb18      	cbnz	r0, 10010ece <MXC_GPIO_Common_Handler+0x52>
10010e86:	4d14      	ldr	r5, [pc, #80]	@ (10010ed8 <MXC_GPIO_Common_Handler+0x5c>)

    stat = MXC_GPIO_GetFlags(gpio);
10010e88:	4628      	mov	r0, r5
10010e8a:	f7fe fd7d 	bl	1000f988 <MXC_GPIO_GetFlags>
10010e8e:	4604      	mov	r4, r0
    MXC_GPIO_ClearFlags(gpio, stat);
10010e90:	4601      	mov	r1, r0
10010e92:	4628      	mov	r0, r5
10010e94:	f7fe fd6c 	bl	1000f970 <MXC_GPIO_ClearFlags>

    pin = 0;

    while (stat) {
10010e98:	b18c      	cbz	r4, 10010ebe <MXC_GPIO_Common_Handler+0x42>
10010e9a:	4e10      	ldr	r6, [pc, #64]	@ (10010edc <MXC_GPIO_Common_Handler+0x60>)
10010e9c:	4d10      	ldr	r5, [pc, #64]	@ (10010ee0 <MXC_GPIO_Common_Handler+0x64>)
10010e9e:	eb06 16c7 	add.w	r6, r6, r7, lsl #7
10010ea2:	eb05 15c7 	add.w	r5, r5, r7, lsl #7
        if (stat & 1) {
10010ea6:	07e3      	lsls	r3, r4, #31
10010ea8:	d503      	bpl.n	10010eb2 <MXC_GPIO_Common_Handler+0x36>
            if (callback[port][pin]) {
10010eaa:	682b      	ldr	r3, [r5, #0]
10010eac:	b10b      	cbz	r3, 10010eb2 <MXC_GPIO_Common_Handler+0x36>
                callback[port][pin](cbparam[port][pin]);
10010eae:	6830      	ldr	r0, [r6, #0]
10010eb0:	4798      	blx	r3
    while (stat) {
10010eb2:	0864      	lsrs	r4, r4, #1
10010eb4:	f106 0604 	add.w	r6, r6, #4
10010eb8:	f105 0504 	add.w	r5, r5, #4
10010ebc:	d1f3      	bne.n	10010ea6 <MXC_GPIO_Common_Handler+0x2a>
        }

        pin++;
        stat >>= 1;
    }
}
10010ebe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10010ec0:	4908      	ldr	r1, [pc, #32]	@ (10010ee4 <MXC_GPIO_Common_Handler+0x68>)
10010ec2:	4809      	ldr	r0, [pc, #36]	@ (10010ee8 <MXC_GPIO_Common_Handler+0x6c>)
10010ec4:	225a      	movs	r2, #90	@ 0x5a
10010ec6:	f7fd ff77 	bl	1000edb8 <mxc_assert>
10010eca:	2500      	movs	r5, #0
10010ecc:	e7dc      	b.n	10010e88 <MXC_GPIO_Common_Handler+0xc>
10010ece:	4b07      	ldr	r3, [pc, #28]	@ (10010eec <MXC_GPIO_Common_Handler+0x70>)
10010ed0:	1e42      	subs	r2, r0, #1
10010ed2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
10010ed6:	e7d7      	b.n	10010e88 <MXC_GPIO_Common_Handler+0xc>
10010ed8:	40008000 	.word	0x40008000
10010edc:	20001054 	.word	0x20001054
10010ee0:	20001254 	.word	0x20001254
10010ee4:	1001e990 	.word	0x1001e990
10010ee8:	1001ea00 	.word	0x1001ea00
10010eec:	1001ea20 	.word	0x1001ea20

10010ef0 <malloc>:
10010ef0:	4b02      	ldr	r3, [pc, #8]	@ (10010efc <malloc+0xc>)
10010ef2:	4601      	mov	r1, r0
10010ef4:	6818      	ldr	r0, [r3, #0]
10010ef6:	f000 b80b 	b.w	10010f10 <_malloc_r>
10010efa:	bf00      	nop
10010efc:	20000598 	.word	0x20000598

10010f00 <free>:
10010f00:	4b02      	ldr	r3, [pc, #8]	@ (10010f0c <free+0xc>)
10010f02:	4601      	mov	r1, r0
10010f04:	6818      	ldr	r0, [r3, #0]
10010f06:	f005 be7b 	b.w	10016c00 <_free_r>
10010f0a:	bf00      	nop
10010f0c:	20000598 	.word	0x20000598

10010f10 <_malloc_r>:
10010f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10010f14:	f101 050b 	add.w	r5, r1, #11
10010f18:	2d16      	cmp	r5, #22
10010f1a:	b085      	sub	sp, #20
10010f1c:	4606      	mov	r6, r0
10010f1e:	d824      	bhi.n	10010f6a <_malloc_r+0x5a>
10010f20:	2910      	cmp	r1, #16
10010f22:	f200 80b1 	bhi.w	10011088 <_malloc_r+0x178>
10010f26:	f003 f981 	bl	1001422c <__malloc_lock>
10010f2a:	2510      	movs	r5, #16
10010f2c:	2318      	movs	r3, #24
10010f2e:	f04f 0c02 	mov.w	ip, #2
10010f32:	4fba      	ldr	r7, [pc, #744]	@ (1001121c <_malloc_r+0x30c>)
10010f34:	443b      	add	r3, r7
10010f36:	f1a3 0208 	sub.w	r2, r3, #8
10010f3a:	685c      	ldr	r4, [r3, #4]
10010f3c:	4294      	cmp	r4, r2
10010f3e:	f000 8122 	beq.w	10011186 <_malloc_r+0x276>
10010f42:	6863      	ldr	r3, [r4, #4]
10010f44:	68e2      	ldr	r2, [r4, #12]
10010f46:	68a1      	ldr	r1, [r4, #8]
10010f48:	f023 0303 	bic.w	r3, r3, #3
10010f4c:	60ca      	str	r2, [r1, #12]
10010f4e:	4423      	add	r3, r4
10010f50:	4630      	mov	r0, r6
10010f52:	6091      	str	r1, [r2, #8]
10010f54:	685a      	ldr	r2, [r3, #4]
10010f56:	f042 0201 	orr.w	r2, r2, #1
10010f5a:	605a      	str	r2, [r3, #4]
10010f5c:	3408      	adds	r4, #8
10010f5e:	f003 f96b 	bl	10014238 <__malloc_unlock>
10010f62:	4620      	mov	r0, r4
10010f64:	b005      	add	sp, #20
10010f66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10010f6a:	f035 0507 	bics.w	r5, r5, #7
10010f6e:	f100 808b 	bmi.w	10011088 <_malloc_r+0x178>
10010f72:	42a9      	cmp	r1, r5
10010f74:	f200 8088 	bhi.w	10011088 <_malloc_r+0x178>
10010f78:	f003 f958 	bl	1001422c <__malloc_lock>
10010f7c:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
10010f80:	f0c0 8173 	bcc.w	1001126a <_malloc_r+0x35a>
10010f84:	0a6b      	lsrs	r3, r5, #9
10010f86:	f000 8083 	beq.w	10011090 <_malloc_r+0x180>
10010f8a:	2b04      	cmp	r3, #4
10010f8c:	f200 8122 	bhi.w	100111d4 <_malloc_r+0x2c4>
10010f90:	09ab      	lsrs	r3, r5, #6
10010f92:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
10010f96:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
10010f9a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10010f9e:	4f9f      	ldr	r7, [pc, #636]	@ (1001121c <_malloc_r+0x30c>)
10010fa0:	443b      	add	r3, r7
10010fa2:	f1a3 0008 	sub.w	r0, r3, #8
10010fa6:	685c      	ldr	r4, [r3, #4]
10010fa8:	42a0      	cmp	r0, r4
10010faa:	d107      	bne.n	10010fbc <_malloc_r+0xac>
10010fac:	e00d      	b.n	10010fca <_malloc_r+0xba>
10010fae:	2a00      	cmp	r2, #0
10010fb0:	68e1      	ldr	r1, [r4, #12]
10010fb2:	f280 80e2 	bge.w	1001117a <_malloc_r+0x26a>
10010fb6:	4288      	cmp	r0, r1
10010fb8:	d007      	beq.n	10010fca <_malloc_r+0xba>
10010fba:	460c      	mov	r4, r1
10010fbc:	6863      	ldr	r3, [r4, #4]
10010fbe:	f023 0303 	bic.w	r3, r3, #3
10010fc2:	1b5a      	subs	r2, r3, r5
10010fc4:	2a0f      	cmp	r2, #15
10010fc6:	ddf2      	ble.n	10010fae <_malloc_r+0x9e>
10010fc8:	46f4      	mov	ip, lr
10010fca:	f8df 8254 	ldr.w	r8, [pc, #596]	@ 10011220 <_malloc_r+0x310>
10010fce:	693c      	ldr	r4, [r7, #16]
10010fd0:	4544      	cmp	r4, r8
10010fd2:	f000 80bf 	beq.w	10011154 <_malloc_r+0x244>
10010fd6:	6863      	ldr	r3, [r4, #4]
10010fd8:	f023 0903 	bic.w	r9, r3, #3
10010fdc:	eba9 0305 	sub.w	r3, r9, r5
10010fe0:	2b0f      	cmp	r3, #15
10010fe2:	f300 8147 	bgt.w	10011274 <_malloc_r+0x364>
10010fe6:	2b00      	cmp	r3, #0
10010fe8:	e9c7 8804 	strd	r8, r8, [r7, #16]
10010fec:	f280 8131 	bge.w	10011252 <_malloc_r+0x342>
10010ff0:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
10010ff4:	f8d7 e004 	ldr.w	lr, [r7, #4]
10010ff8:	f080 80cc 	bcs.w	10011194 <_malloc_r+0x284>
10010ffc:	ea4f 01d9 	mov.w	r1, r9, lsr #3
10011000:	3101      	adds	r1, #1
10011002:	ea4f 1959 	mov.w	r9, r9, lsr #5
10011006:	2301      	movs	r3, #1
10011008:	fa03 f309 	lsl.w	r3, r3, r9
1001100c:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
10011010:	60a2      	str	r2, [r4, #8]
10011012:	ea4e 0e03 	orr.w	lr, lr, r3
10011016:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
1001101a:	3b08      	subs	r3, #8
1001101c:	60e3      	str	r3, [r4, #12]
1001101e:	f8c7 e004 	str.w	lr, [r7, #4]
10011022:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
10011026:	60d4      	str	r4, [r2, #12]
10011028:	ea4f 03ac 	mov.w	r3, ip, asr #2
1001102c:	2001      	movs	r0, #1
1001102e:	4098      	lsls	r0, r3
10011030:	4570      	cmp	r0, lr
10011032:	d834      	bhi.n	1001109e <_malloc_r+0x18e>
10011034:	ea10 0f0e 	tst.w	r0, lr
10011038:	d107      	bne.n	1001104a <_malloc_r+0x13a>
1001103a:	f02c 0c03 	bic.w	ip, ip, #3
1001103e:	0040      	lsls	r0, r0, #1
10011040:	ea10 0f0e 	tst.w	r0, lr
10011044:	f10c 0c04 	add.w	ip, ip, #4
10011048:	d0f9      	beq.n	1001103e <_malloc_r+0x12e>
1001104a:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
1001104e:	4652      	mov	r2, sl
10011050:	46e1      	mov	r9, ip
10011052:	68d1      	ldr	r1, [r2, #12]
10011054:	e00e      	b.n	10011074 <_malloc_r+0x164>
10011056:	684b      	ldr	r3, [r1, #4]
10011058:	f023 0303 	bic.w	r3, r3, #3
1001105c:	eba3 0e05 	sub.w	lr, r3, r5
10011060:	f1be 0f0f 	cmp.w	lr, #15
10011064:	460c      	mov	r4, r1
10011066:	68c9      	ldr	r1, [r1, #12]
10011068:	f300 80c1 	bgt.w	100111ee <_malloc_r+0x2de>
1001106c:	f1be 0f00 	cmp.w	lr, #0
10011070:	f280 80e2 	bge.w	10011238 <_malloc_r+0x328>
10011074:	428a      	cmp	r2, r1
10011076:	d1ee      	bne.n	10011056 <_malloc_r+0x146>
10011078:	f109 0901 	add.w	r9, r9, #1
1001107c:	f019 0f03 	tst.w	r9, #3
10011080:	f102 0208 	add.w	r2, r2, #8
10011084:	d1e5      	bne.n	10011052 <_malloc_r+0x142>
10011086:	e121      	b.n	100112cc <_malloc_r+0x3bc>
10011088:	230c      	movs	r3, #12
1001108a:	6033      	str	r3, [r6, #0]
1001108c:	2400      	movs	r4, #0
1001108e:	e768      	b.n	10010f62 <_malloc_r+0x52>
10011090:	f44f 7300 	mov.w	r3, #512	@ 0x200
10011094:	f04f 0c40 	mov.w	ip, #64	@ 0x40
10011098:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
1001109c:	e77f      	b.n	10010f9e <_malloc_r+0x8e>
1001109e:	68bc      	ldr	r4, [r7, #8]
100110a0:	6863      	ldr	r3, [r4, #4]
100110a2:	f023 0903 	bic.w	r9, r3, #3
100110a6:	45a9      	cmp	r9, r5
100110a8:	d303      	bcc.n	100110b2 <_malloc_r+0x1a2>
100110aa:	eba9 0305 	sub.w	r3, r9, r5
100110ae:	2b0f      	cmp	r3, #15
100110b0:	dc53      	bgt.n	1001115a <_malloc_r+0x24a>
100110b2:	4b5c      	ldr	r3, [pc, #368]	@ (10011224 <_malloc_r+0x314>)
100110b4:	f8df b170 	ldr.w	fp, [pc, #368]	@ 10011228 <_malloc_r+0x318>
100110b8:	681b      	ldr	r3, [r3, #0]
100110ba:	2008      	movs	r0, #8
100110bc:	f103 0810 	add.w	r8, r3, #16
100110c0:	f004 f9fa 	bl	100154b8 <sysconf>
100110c4:	f8db 3000 	ldr.w	r3, [fp]
100110c8:	9001      	str	r0, [sp, #4]
100110ca:	3301      	adds	r3, #1
100110cc:	44a8      	add	r8, r5
100110ce:	eb04 0209 	add.w	r2, r4, r9
100110d2:	d005      	beq.n	100110e0 <_malloc_r+0x1d0>
100110d4:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
100110d8:	4480      	add	r8, r0
100110da:	4243      	negs	r3, r0
100110dc:	ea03 0808 	and.w	r8, r3, r8
100110e0:	4641      	mov	r1, r8
100110e2:	4630      	mov	r0, r6
100110e4:	9202      	str	r2, [sp, #8]
100110e6:	f004 f9b9 	bl	1001545c <_sbrk_r>
100110ea:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
100110ee:	9a02      	ldr	r2, [sp, #8]
100110f0:	4682      	mov	sl, r0
100110f2:	f000 80dc 	beq.w	100112ae <_malloc_r+0x39e>
100110f6:	4282      	cmp	r2, r0
100110f8:	f200 80d7 	bhi.w	100112aa <_malloc_r+0x39a>
100110fc:	4b4b      	ldr	r3, [pc, #300]	@ (1001122c <_malloc_r+0x31c>)
100110fe:	9901      	ldr	r1, [sp, #4]
10011100:	6818      	ldr	r0, [r3, #0]
10011102:	4440      	add	r0, r8
10011104:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
10011108:	6018      	str	r0, [r3, #0]
1001110a:	4684      	mov	ip, r0
1001110c:	f040 80fc 	bne.w	10011308 <_malloc_r+0x3f8>
10011110:	ea1a 0f01 	tst.w	sl, r1
10011114:	f040 80f8 	bne.w	10011308 <_malloc_r+0x3f8>
10011118:	f8d7 a008 	ldr.w	sl, [r7, #8]
1001111c:	44c8      	add	r8, r9
1001111e:	f048 0201 	orr.w	r2, r8, #1
10011122:	f8ca 2004 	str.w	r2, [sl, #4]
10011126:	4b42      	ldr	r3, [pc, #264]	@ (10011230 <_malloc_r+0x320>)
10011128:	6819      	ldr	r1, [r3, #0]
1001112a:	4281      	cmp	r1, r0
1001112c:	bf38      	it	cc
1001112e:	6018      	strcc	r0, [r3, #0]
10011130:	4b40      	ldr	r3, [pc, #256]	@ (10011234 <_malloc_r+0x324>)
10011132:	6819      	ldr	r1, [r3, #0]
10011134:	4281      	cmp	r1, r0
10011136:	bf38      	it	cc
10011138:	6018      	strcc	r0, [r3, #0]
1001113a:	4654      	mov	r4, sl
1001113c:	f022 0803 	bic.w	r8, r2, #3
10011140:	45a8      	cmp	r8, r5
10011142:	eba8 0305 	sub.w	r3, r8, r5
10011146:	d301      	bcc.n	1001114c <_malloc_r+0x23c>
10011148:	2b0f      	cmp	r3, #15
1001114a:	dc06      	bgt.n	1001115a <_malloc_r+0x24a>
1001114c:	4630      	mov	r0, r6
1001114e:	f003 f873 	bl	10014238 <__malloc_unlock>
10011152:	e79b      	b.n	1001108c <_malloc_r+0x17c>
10011154:	f8d7 e004 	ldr.w	lr, [r7, #4]
10011158:	e766      	b.n	10011028 <_malloc_r+0x118>
1001115a:	1962      	adds	r2, r4, r5
1001115c:	f043 0301 	orr.w	r3, r3, #1
10011160:	f045 0501 	orr.w	r5, r5, #1
10011164:	6065      	str	r5, [r4, #4]
10011166:	4630      	mov	r0, r6
10011168:	60ba      	str	r2, [r7, #8]
1001116a:	6053      	str	r3, [r2, #4]
1001116c:	f003 f864 	bl	10014238 <__malloc_unlock>
10011170:	3408      	adds	r4, #8
10011172:	4620      	mov	r0, r4
10011174:	b005      	add	sp, #20
10011176:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001117a:	68a2      	ldr	r2, [r4, #8]
1001117c:	4423      	add	r3, r4
1001117e:	60d1      	str	r1, [r2, #12]
10011180:	4630      	mov	r0, r6
10011182:	608a      	str	r2, [r1, #8]
10011184:	e6e6      	b.n	10010f54 <_malloc_r+0x44>
10011186:	68dc      	ldr	r4, [r3, #12]
10011188:	42a3      	cmp	r3, r4
1001118a:	f47f aeda 	bne.w	10010f42 <_malloc_r+0x32>
1001118e:	f10c 0c02 	add.w	ip, ip, #2
10011192:	e71a      	b.n	10010fca <_malloc_r+0xba>
10011194:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
10011198:	ea4f 2259 	mov.w	r2, r9, lsr #9
1001119c:	d37e      	bcc.n	1001129c <_malloc_r+0x38c>
1001119e:	2a14      	cmp	r2, #20
100111a0:	f200 8115 	bhi.w	100113ce <_malloc_r+0x4be>
100111a4:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
100111a8:	00db      	lsls	r3, r3, #3
100111aa:	325b      	adds	r2, #91	@ 0x5b
100111ac:	18f9      	adds	r1, r7, r3
100111ae:	58fb      	ldr	r3, [r7, r3]
100111b0:	3908      	subs	r1, #8
100111b2:	4299      	cmp	r1, r3
100111b4:	d103      	bne.n	100111be <_malloc_r+0x2ae>
100111b6:	e0f0      	b.n	1001139a <_malloc_r+0x48a>
100111b8:	689b      	ldr	r3, [r3, #8]
100111ba:	4299      	cmp	r1, r3
100111bc:	d004      	beq.n	100111c8 <_malloc_r+0x2b8>
100111be:	685a      	ldr	r2, [r3, #4]
100111c0:	f022 0203 	bic.w	r2, r2, #3
100111c4:	454a      	cmp	r2, r9
100111c6:	d8f7      	bhi.n	100111b8 <_malloc_r+0x2a8>
100111c8:	68d9      	ldr	r1, [r3, #12]
100111ca:	e9c4 3102 	strd	r3, r1, [r4, #8]
100111ce:	608c      	str	r4, [r1, #8]
100111d0:	60dc      	str	r4, [r3, #12]
100111d2:	e729      	b.n	10011028 <_malloc_r+0x118>
100111d4:	2b14      	cmp	r3, #20
100111d6:	d96d      	bls.n	100112b4 <_malloc_r+0x3a4>
100111d8:	2b54      	cmp	r3, #84	@ 0x54
100111da:	f200 8101 	bhi.w	100113e0 <_malloc_r+0x4d0>
100111de:	0b2b      	lsrs	r3, r5, #12
100111e0:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
100111e4:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
100111e8:	ea4f 03cc 	mov.w	r3, ip, lsl #3
100111ec:	e6d7      	b.n	10010f9e <_malloc_r+0x8e>
100111ee:	4630      	mov	r0, r6
100111f0:	68a6      	ldr	r6, [r4, #8]
100111f2:	1962      	adds	r2, r4, r5
100111f4:	f045 0501 	orr.w	r5, r5, #1
100111f8:	6065      	str	r5, [r4, #4]
100111fa:	60f1      	str	r1, [r6, #12]
100111fc:	608e      	str	r6, [r1, #8]
100111fe:	f04e 0101 	orr.w	r1, lr, #1
10011202:	e9c7 2204 	strd	r2, r2, [r7, #16]
10011206:	f8c2 8008 	str.w	r8, [r2, #8]
1001120a:	f8c2 800c 	str.w	r8, [r2, #12]
1001120e:	6051      	str	r1, [r2, #4]
10011210:	f844 e003 	str.w	lr, [r4, r3]
10011214:	f003 f810 	bl	10014238 <__malloc_unlock>
10011218:	3408      	adds	r4, #8
1001121a:	e6a2      	b.n	10010f62 <_malloc_r+0x52>
1001121c:	20000018 	.word	0x20000018
10011220:	20000020 	.word	0x20000020
10011224:	20001484 	.word	0x20001484
10011228:	20000010 	.word	0x20000010
1001122c:	20001454 	.word	0x20001454
10011230:	20001480 	.word	0x20001480
10011234:	2000147c 	.word	0x2000147c
10011238:	4423      	add	r3, r4
1001123a:	4630      	mov	r0, r6
1001123c:	685a      	ldr	r2, [r3, #4]
1001123e:	f042 0201 	orr.w	r2, r2, #1
10011242:	605a      	str	r2, [r3, #4]
10011244:	f854 3f08 	ldr.w	r3, [r4, #8]!
10011248:	60d9      	str	r1, [r3, #12]
1001124a:	608b      	str	r3, [r1, #8]
1001124c:	f002 fff4 	bl	10014238 <__malloc_unlock>
10011250:	e687      	b.n	10010f62 <_malloc_r+0x52>
10011252:	44a1      	add	r9, r4
10011254:	4630      	mov	r0, r6
10011256:	f8d9 3004 	ldr.w	r3, [r9, #4]
1001125a:	f043 0301 	orr.w	r3, r3, #1
1001125e:	f8c9 3004 	str.w	r3, [r9, #4]
10011262:	3408      	adds	r4, #8
10011264:	f002 ffe8 	bl	10014238 <__malloc_unlock>
10011268:	e67b      	b.n	10010f62 <_malloc_r+0x52>
1001126a:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
1001126e:	f105 0308 	add.w	r3, r5, #8
10011272:	e65e      	b.n	10010f32 <_malloc_r+0x22>
10011274:	1962      	adds	r2, r4, r5
10011276:	f043 0101 	orr.w	r1, r3, #1
1001127a:	f045 0501 	orr.w	r5, r5, #1
1001127e:	6065      	str	r5, [r4, #4]
10011280:	4630      	mov	r0, r6
10011282:	e9c7 2204 	strd	r2, r2, [r7, #16]
10011286:	f8c2 8008 	str.w	r8, [r2, #8]
1001128a:	f8c2 800c 	str.w	r8, [r2, #12]
1001128e:	6051      	str	r1, [r2, #4]
10011290:	f844 3009 	str.w	r3, [r4, r9]
10011294:	f002 ffd0 	bl	10014238 <__malloc_unlock>
10011298:	3408      	adds	r4, #8
1001129a:	e662      	b.n	10010f62 <_malloc_r+0x52>
1001129c:	ea4f 1299 	mov.w	r2, r9, lsr #6
100112a0:	f102 0339 	add.w	r3, r2, #57	@ 0x39
100112a4:	00db      	lsls	r3, r3, #3
100112a6:	3238      	adds	r2, #56	@ 0x38
100112a8:	e780      	b.n	100111ac <_malloc_r+0x29c>
100112aa:	42bc      	cmp	r4, r7
100112ac:	d024      	beq.n	100112f8 <_malloc_r+0x3e8>
100112ae:	68bc      	ldr	r4, [r7, #8]
100112b0:	6862      	ldr	r2, [r4, #4]
100112b2:	e743      	b.n	1001113c <_malloc_r+0x22c>
100112b4:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
100112b8:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
100112bc:	ea4f 03cc 	mov.w	r3, ip, lsl #3
100112c0:	e66d      	b.n	10010f9e <_malloc_r+0x8e>
100112c2:	f85a 3908 	ldr.w	r3, [sl], #-8
100112c6:	4553      	cmp	r3, sl
100112c8:	f040 80d8 	bne.w	1001147c <_malloc_r+0x56c>
100112cc:	f01c 0f03 	tst.w	ip, #3
100112d0:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
100112d4:	d1f5      	bne.n	100112c2 <_malloc_r+0x3b2>
100112d6:	687b      	ldr	r3, [r7, #4]
100112d8:	ea23 0300 	bic.w	r3, r3, r0
100112dc:	607b      	str	r3, [r7, #4]
100112de:	0040      	lsls	r0, r0, #1
100112e0:	4298      	cmp	r0, r3
100112e2:	f63f aedc 	bhi.w	1001109e <_malloc_r+0x18e>
100112e6:	b918      	cbnz	r0, 100112f0 <_malloc_r+0x3e0>
100112e8:	e6d9      	b.n	1001109e <_malloc_r+0x18e>
100112ea:	0040      	lsls	r0, r0, #1
100112ec:	f109 0904 	add.w	r9, r9, #4
100112f0:	4218      	tst	r0, r3
100112f2:	d0fa      	beq.n	100112ea <_malloc_r+0x3da>
100112f4:	46cc      	mov	ip, r9
100112f6:	e6a8      	b.n	1001104a <_malloc_r+0x13a>
100112f8:	4b61      	ldr	r3, [pc, #388]	@ (10011480 <_malloc_r+0x570>)
100112fa:	9901      	ldr	r1, [sp, #4]
100112fc:	6818      	ldr	r0, [r3, #0]
100112fe:	eb08 0c00 	add.w	ip, r8, r0
10011302:	3901      	subs	r1, #1
10011304:	f8c3 c000 	str.w	ip, [r3]
10011308:	f8db 0000 	ldr.w	r0, [fp]
1001130c:	3001      	adds	r0, #1
1001130e:	bf1b      	ittet	ne
10011310:	ebaa 0202 	subne.w	r2, sl, r2
10011314:	4462      	addne	r2, ip
10011316:	f8cb a000 	streq.w	sl, [fp]
1001131a:	601a      	strne	r2, [r3, #0]
1001131c:	f01a 0207 	ands.w	r2, sl, #7
10011320:	e9cd 2302 	strd	r2, r3, [sp, #8]
10011324:	d042      	beq.n	100113ac <_malloc_r+0x49c>
10011326:	f1c2 0208 	rsb	r2, r2, #8
1001132a:	9b01      	ldr	r3, [sp, #4]
1001132c:	4492      	add	sl, r2
1001132e:	44d0      	add	r8, sl
10011330:	4413      	add	r3, r2
10011332:	ea08 0001 	and.w	r0, r8, r1
10011336:	1a1a      	subs	r2, r3, r0
10011338:	ea02 0b01 	and.w	fp, r2, r1
1001133c:	4659      	mov	r1, fp
1001133e:	4630      	mov	r0, r6
10011340:	f004 f88c 	bl	1001545c <_sbrk_r>
10011344:	1c42      	adds	r2, r0, #1
10011346:	9b03      	ldr	r3, [sp, #12]
10011348:	d07a      	beq.n	10011440 <_malloc_r+0x530>
1001134a:	eba0 000a 	sub.w	r0, r0, sl
1001134e:	eb00 080b 	add.w	r8, r0, fp
10011352:	6818      	ldr	r0, [r3, #0]
10011354:	f8c7 a008 	str.w	sl, [r7, #8]
10011358:	f048 0201 	orr.w	r2, r8, #1
1001135c:	4458      	add	r0, fp
1001135e:	42bc      	cmp	r4, r7
10011360:	f8ca 2004 	str.w	r2, [sl, #4]
10011364:	6018      	str	r0, [r3, #0]
10011366:	f43f aede 	beq.w	10011126 <_malloc_r+0x216>
1001136a:	f1b9 0f0f 	cmp.w	r9, #15
1001136e:	d942      	bls.n	100113f6 <_malloc_r+0x4e6>
10011370:	6861      	ldr	r1, [r4, #4]
10011372:	f1a9 020c 	sub.w	r2, r9, #12
10011376:	f022 0207 	bic.w	r2, r2, #7
1001137a:	f001 0101 	and.w	r1, r1, #1
1001137e:	4311      	orrs	r1, r2
10011380:	6061      	str	r1, [r4, #4]
10011382:	18a1      	adds	r1, r4, r2
10011384:	f04f 0c05 	mov.w	ip, #5
10011388:	2a0f      	cmp	r2, #15
1001138a:	f8c1 c004 	str.w	ip, [r1, #4]
1001138e:	f8c1 c008 	str.w	ip, [r1, #8]
10011392:	d84a      	bhi.n	1001142a <_malloc_r+0x51a>
10011394:	f8da 2004 	ldr.w	r2, [sl, #4]
10011398:	e6c5      	b.n	10011126 <_malloc_r+0x216>
1001139a:	1092      	asrs	r2, r2, #2
1001139c:	2001      	movs	r0, #1
1001139e:	fa00 f202 	lsl.w	r2, r0, r2
100113a2:	ea4e 0e02 	orr.w	lr, lr, r2
100113a6:	f8c7 e004 	str.w	lr, [r7, #4]
100113aa:	e70e      	b.n	100111ca <_malloc_r+0x2ba>
100113ac:	9b01      	ldr	r3, [sp, #4]
100113ae:	eb0a 0208 	add.w	r2, sl, r8
100113b2:	400a      	ands	r2, r1
100113b4:	1a9a      	subs	r2, r3, r2
100113b6:	ea02 0b01 	and.w	fp, r2, r1
100113ba:	4659      	mov	r1, fp
100113bc:	4630      	mov	r0, r6
100113be:	f004 f84d 	bl	1001545c <_sbrk_r>
100113c2:	1c43      	adds	r3, r0, #1
100113c4:	9b03      	ldr	r3, [sp, #12]
100113c6:	d1c0      	bne.n	1001134a <_malloc_r+0x43a>
100113c8:	f8dd b008 	ldr.w	fp, [sp, #8]
100113cc:	e7c1      	b.n	10011352 <_malloc_r+0x442>
100113ce:	2a54      	cmp	r2, #84	@ 0x54
100113d0:	d815      	bhi.n	100113fe <_malloc_r+0x4ee>
100113d2:	ea4f 3219 	mov.w	r2, r9, lsr #12
100113d6:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
100113da:	00db      	lsls	r3, r3, #3
100113dc:	326e      	adds	r2, #110	@ 0x6e
100113de:	e6e5      	b.n	100111ac <_malloc_r+0x29c>
100113e0:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
100113e4:	d815      	bhi.n	10011412 <_malloc_r+0x502>
100113e6:	0beb      	lsrs	r3, r5, #15
100113e8:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
100113ec:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
100113f0:	ea4f 03cc 	mov.w	r3, ip, lsl #3
100113f4:	e5d3      	b.n	10010f9e <_malloc_r+0x8e>
100113f6:	2301      	movs	r3, #1
100113f8:	f8ca 3004 	str.w	r3, [sl, #4]
100113fc:	e6a6      	b.n	1001114c <_malloc_r+0x23c>
100113fe:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
10011402:	d825      	bhi.n	10011450 <_malloc_r+0x540>
10011404:	ea4f 32d9 	mov.w	r2, r9, lsr #15
10011408:	f102 0378 	add.w	r3, r2, #120	@ 0x78
1001140c:	00db      	lsls	r3, r3, #3
1001140e:	3277      	adds	r2, #119	@ 0x77
10011410:	e6cc      	b.n	100111ac <_malloc_r+0x29c>
10011412:	f240 5254 	movw	r2, #1364	@ 0x554
10011416:	4293      	cmp	r3, r2
10011418:	d825      	bhi.n	10011466 <_malloc_r+0x556>
1001141a:	0cab      	lsrs	r3, r5, #18
1001141c:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
10011420:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
10011424:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10011428:	e5b9      	b.n	10010f9e <_malloc_r+0x8e>
1001142a:	4630      	mov	r0, r6
1001142c:	f104 0108 	add.w	r1, r4, #8
10011430:	9301      	str	r3, [sp, #4]
10011432:	f005 fbe5 	bl	10016c00 <_free_r>
10011436:	9b01      	ldr	r3, [sp, #4]
10011438:	f8d7 a008 	ldr.w	sl, [r7, #8]
1001143c:	6818      	ldr	r0, [r3, #0]
1001143e:	e7a9      	b.n	10011394 <_malloc_r+0x484>
10011440:	9a02      	ldr	r2, [sp, #8]
10011442:	3a08      	subs	r2, #8
10011444:	4490      	add	r8, r2
10011446:	eba8 080a 	sub.w	r8, r8, sl
1001144a:	f04f 0b00 	mov.w	fp, #0
1001144e:	e780      	b.n	10011352 <_malloc_r+0x442>
10011450:	f240 5354 	movw	r3, #1364	@ 0x554
10011454:	429a      	cmp	r2, r3
10011456:	d80d      	bhi.n	10011474 <_malloc_r+0x564>
10011458:	ea4f 4299 	mov.w	r2, r9, lsr #18
1001145c:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
10011460:	00db      	lsls	r3, r3, #3
10011462:	327c      	adds	r2, #124	@ 0x7c
10011464:	e6a2      	b.n	100111ac <_malloc_r+0x29c>
10011466:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
1001146a:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
1001146e:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
10011472:	e594      	b.n	10010f9e <_malloc_r+0x8e>
10011474:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10011478:	227e      	movs	r2, #126	@ 0x7e
1001147a:	e697      	b.n	100111ac <_malloc_r+0x29c>
1001147c:	687b      	ldr	r3, [r7, #4]
1001147e:	e72e      	b.n	100112de <_malloc_r+0x3ce>
10011480:	20001454 	.word	0x20001454

10011484 <printf>:
10011484:	b40f      	push	{r0, r1, r2, r3}
10011486:	b500      	push	{lr}
10011488:	4907      	ldr	r1, [pc, #28]	@ (100114a8 <printf+0x24>)
1001148a:	b083      	sub	sp, #12
1001148c:	ab04      	add	r3, sp, #16
1001148e:	6808      	ldr	r0, [r1, #0]
10011490:	f853 2b04 	ldr.w	r2, [r3], #4
10011494:	6881      	ldr	r1, [r0, #8]
10011496:	9301      	str	r3, [sp, #4]
10011498:	f000 f808 	bl	100114ac <_vfprintf_r>
1001149c:	b003      	add	sp, #12
1001149e:	f85d eb04 	ldr.w	lr, [sp], #4
100114a2:	b004      	add	sp, #16
100114a4:	4770      	bx	lr
100114a6:	bf00      	nop
100114a8:	20000598 	.word	0x20000598

100114ac <_vfprintf_r>:
100114ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100114b0:	b0df      	sub	sp, #380	@ 0x17c
100114b2:	461c      	mov	r4, r3
100114b4:	9107      	str	r1, [sp, #28]
100114b6:	4691      	mov	r9, r2
100114b8:	4683      	mov	fp, r0
100114ba:	f003 ff77 	bl	100153ac <_localeconv_r>
100114be:	6803      	ldr	r3, [r0, #0]
100114c0:	9319      	str	r3, [sp, #100]	@ 0x64
100114c2:	4618      	mov	r0, r3
100114c4:	f004 fa9c 	bl	10015a00 <strlen>
100114c8:	2208      	movs	r2, #8
100114ca:	9018      	str	r0, [sp, #96]	@ 0x60
100114cc:	2100      	movs	r1, #0
100114ce:	a82e      	add	r0, sp, #184	@ 0xb8
100114d0:	940d      	str	r4, [sp, #52]	@ 0x34
100114d2:	f003 febd 	bl	10015250 <memset>
100114d6:	f1bb 0f00 	cmp.w	fp, #0
100114da:	d004      	beq.n	100114e6 <_vfprintf_r+0x3a>
100114dc:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
100114e0:	2b00      	cmp	r3, #0
100114e2:	f001 807f 	beq.w	100125e4 <_vfprintf_r+0x1138>
100114e6:	9b07      	ldr	r3, [sp, #28]
100114e8:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
100114ea:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100114ee:	07d5      	lsls	r5, r2, #31
100114f0:	d402      	bmi.n	100114f8 <_vfprintf_r+0x4c>
100114f2:	0598      	lsls	r0, r3, #22
100114f4:	f140 869f 	bpl.w	10012236 <_vfprintf_r+0xd8a>
100114f8:	0499      	lsls	r1, r3, #18
100114fa:	d407      	bmi.n	1001150c <_vfprintf_r+0x60>
100114fc:	9907      	ldr	r1, [sp, #28]
100114fe:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
10011500:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10011504:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10011508:	818b      	strh	r3, [r1, #12]
1001150a:	664a      	str	r2, [r1, #100]	@ 0x64
1001150c:	071a      	lsls	r2, r3, #28
1001150e:	f140 80cc 	bpl.w	100116aa <_vfprintf_r+0x1fe>
10011512:	9a07      	ldr	r2, [sp, #28]
10011514:	6912      	ldr	r2, [r2, #16]
10011516:	2a00      	cmp	r2, #0
10011518:	f000 80c7 	beq.w	100116aa <_vfprintf_r+0x1fe>
1001151c:	f003 021a 	and.w	r2, r3, #26
10011520:	2a0a      	cmp	r2, #10
10011522:	f000 80d1 	beq.w	100116c8 <_vfprintf_r+0x21c>
10011526:	2300      	movs	r3, #0
10011528:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
1001152c:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10011530:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
10011534:	9313      	str	r3, [sp, #76]	@ 0x4c
10011536:	931a      	str	r3, [sp, #104]	@ 0x68
10011538:	930a      	str	r3, [sp, #40]	@ 0x28
1001153a:	2400      	movs	r4, #0
1001153c:	2300      	movs	r3, #0
1001153e:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
10011542:	aa35      	add	r2, sp, #212	@ 0xd4
10011544:	9232      	str	r2, [sp, #200]	@ 0xc8
10011546:	4690      	mov	r8, r2
10011548:	f8cd b020 	str.w	fp, [sp, #32]
1001154c:	464d      	mov	r5, r9
1001154e:	9f08      	ldr	r7, [sp, #32]
10011550:	462e      	mov	r6, r5
10011552:	4b8d      	ldr	r3, [pc, #564]	@ (10011788 <_vfprintf_r+0x2dc>)
10011554:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10011558:	f003 ff22 	bl	100153a0 <__locale_mb_cur_max>
1001155c:	4603      	mov	r3, r0
1001155e:	a82e      	add	r0, sp, #184	@ 0xb8
10011560:	9000      	str	r0, [sp, #0]
10011562:	4632      	mov	r2, r6
10011564:	a92a      	add	r1, sp, #168	@ 0xa8
10011566:	4638      	mov	r0, r7
10011568:	47a0      	blx	r4
1001156a:	2800      	cmp	r0, #0
1001156c:	f000 80cb 	beq.w	10011706 <_vfprintf_r+0x25a>
10011570:	f2c0 80c1 	blt.w	100116f6 <_vfprintf_r+0x24a>
10011574:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10011576:	2a25      	cmp	r2, #37	@ 0x25
10011578:	4603      	mov	r3, r0
1001157a:	d001      	beq.n	10011580 <_vfprintf_r+0xd4>
1001157c:	441e      	add	r6, r3
1001157e:	e7e8      	b.n	10011552 <_vfprintf_r+0xa6>
10011580:	1b77      	subs	r7, r6, r5
10011582:	4604      	mov	r4, r0
10011584:	f040 80c2 	bne.w	1001170c <_vfprintf_r+0x260>
10011588:	2300      	movs	r3, #0
1001158a:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001158e:	4699      	mov	r9, r3
10011590:	930b      	str	r3, [sp, #44]	@ 0x2c
10011592:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10011596:	7873      	ldrb	r3, [r6, #1]
10011598:	9209      	str	r2, [sp, #36]	@ 0x24
1001159a:	1c74      	adds	r4, r6, #1
1001159c:	3401      	adds	r4, #1
1001159e:	f1a3 0220 	sub.w	r2, r3, #32
100115a2:	2a5a      	cmp	r2, #90	@ 0x5a
100115a4:	f200 80f2 	bhi.w	1001178c <_vfprintf_r+0x2e0>
100115a8:	e8df f012 	tbh	[pc, r2, lsl #1]
100115ac:	00f002c7 	.word	0x00f002c7
100115b0:	02c300f0 	.word	0x02c300f0
100115b4:	00f000f0 	.word	0x00f000f0
100115b8:	006a00f0 	.word	0x006a00f0
100115bc:	00f000f0 	.word	0x00f000f0
100115c0:	02a0027d 	.word	0x02a0027d
100115c4:	028800f0 	.word	0x028800f0
100115c8:	00f002a9 	.word	0x00f002a9
100115cc:	005b02a5 	.word	0x005b02a5
100115d0:	005b005b 	.word	0x005b005b
100115d4:	005b005b 	.word	0x005b005b
100115d8:	005b005b 	.word	0x005b005b
100115dc:	005b005b 	.word	0x005b005b
100115e0:	00f000f0 	.word	0x00f000f0
100115e4:	00f000f0 	.word	0x00f000f0
100115e8:	00f000f0 	.word	0x00f000f0
100115ec:	017100f0 	.word	0x017100f0
100115f0:	020800f0 	.word	0x020800f0
100115f4:	01710322 	.word	0x01710322
100115f8:	01710171 	.word	0x01710171
100115fc:	00f000f0 	.word	0x00f000f0
10011600:	00f000f0 	.word	0x00f000f0
10011604:	00f0031e 	.word	0x00f0031e
10011608:	02da00f0 	.word	0x02da00f0
1001160c:	00f000f0 	.word	0x00f000f0
10011610:	022600f0 	.word	0x022600f0
10011614:	030b00f0 	.word	0x030b00f0
10011618:	00f000f0 	.word	0x00f000f0
1001161c:	00f00717 	.word	0x00f00717
10011620:	00f000f0 	.word	0x00f000f0
10011624:	00f000f0 	.word	0x00f000f0
10011628:	00f000f0 	.word	0x00f000f0
1001162c:	017100f0 	.word	0x017100f0
10011630:	020800f0 	.word	0x020800f0
10011634:	01710258 	.word	0x01710258
10011638:	01710171 	.word	0x01710171
1001163c:	02580296 	.word	0x02580296
10011640:	00f00204 	.word	0x00f00204
10011644:	00f0028c 	.word	0x00f0028c
10011648:	073f034d 	.word	0x073f034d
1001164c:	0204033b 	.word	0x0204033b
10011650:	022600f0 	.word	0x022600f0
10011654:	073a007d 	.word	0x073a007d
10011658:	00f000f0 	.word	0x00f000f0
1001165c:	00f00743 	.word	0x00f00743
10011660:	007d      	.short	0x007d
10011662:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10011666:	2100      	movs	r1, #0
10011668:	f814 3b01 	ldrb.w	r3, [r4], #1
1001166c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10011670:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10011674:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10011678:	2a09      	cmp	r2, #9
1001167a:	d9f5      	bls.n	10011668 <_vfprintf_r+0x1bc>
1001167c:	910b      	str	r1, [sp, #44]	@ 0x2c
1001167e:	e78e      	b.n	1001159e <_vfprintf_r+0xf2>
10011680:	9f08      	ldr	r7, [sp, #32]
10011682:	4638      	mov	r0, r7
10011684:	f003 fe92 	bl	100153ac <_localeconv_r>
10011688:	6843      	ldr	r3, [r0, #4]
1001168a:	931d      	str	r3, [sp, #116]	@ 0x74
1001168c:	4618      	mov	r0, r3
1001168e:	f004 f9b7 	bl	10015a00 <strlen>
10011692:	901e      	str	r0, [sp, #120]	@ 0x78
10011694:	4606      	mov	r6, r0
10011696:	4638      	mov	r0, r7
10011698:	f003 fe88 	bl	100153ac <_localeconv_r>
1001169c:	6883      	ldr	r3, [r0, #8]
1001169e:	931b      	str	r3, [sp, #108]	@ 0x6c
100116a0:	2e00      	cmp	r6, #0
100116a2:	f040 8621 	bne.w	100122e8 <_vfprintf_r+0xe3c>
100116a6:	7823      	ldrb	r3, [r4, #0]
100116a8:	e778      	b.n	1001159c <_vfprintf_r+0xf0>
100116aa:	9d07      	ldr	r5, [sp, #28]
100116ac:	4658      	mov	r0, fp
100116ae:	4629      	mov	r1, r5
100116b0:	f003 fc80 	bl	10014fb4 <__swsetup_r>
100116b4:	2800      	cmp	r0, #0
100116b6:	f041 83a6 	bne.w	10012e06 <_vfprintf_r+0x195a>
100116ba:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
100116be:	f003 021a 	and.w	r2, r3, #26
100116c2:	2a0a      	cmp	r2, #10
100116c4:	f47f af2f 	bne.w	10011526 <_vfprintf_r+0x7a>
100116c8:	9907      	ldr	r1, [sp, #28]
100116ca:	f9b1 200e 	ldrsh.w	r2, [r1, #14]
100116ce:	2a00      	cmp	r2, #0
100116d0:	f6ff af29 	blt.w	10011526 <_vfprintf_r+0x7a>
100116d4:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
100116d6:	07d5      	lsls	r5, r2, #31
100116d8:	d402      	bmi.n	100116e0 <_vfprintf_r+0x234>
100116da:	0598      	lsls	r0, r3, #22
100116dc:	f141 81bf 	bpl.w	10012a5e <_vfprintf_r+0x15b2>
100116e0:	9907      	ldr	r1, [sp, #28]
100116e2:	4623      	mov	r3, r4
100116e4:	464a      	mov	r2, r9
100116e6:	4658      	mov	r0, fp
100116e8:	f001 fd04 	bl	100130f4 <__sbprintf>
100116ec:	900a      	str	r0, [sp, #40]	@ 0x28
100116ee:	980a      	ldr	r0, [sp, #40]	@ 0x28
100116f0:	b05f      	add	sp, #380	@ 0x17c
100116f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100116f6:	2208      	movs	r2, #8
100116f8:	2100      	movs	r1, #0
100116fa:	a82e      	add	r0, sp, #184	@ 0xb8
100116fc:	f003 fda8 	bl	10015250 <memset>
10011700:	2301      	movs	r3, #1
10011702:	441e      	add	r6, r3
10011704:	e725      	b.n	10011552 <_vfprintf_r+0xa6>
10011706:	1b77      	subs	r7, r6, r5
10011708:	4604      	mov	r4, r0
1001170a:	d011      	beq.n	10011730 <_vfprintf_r+0x284>
1001170c:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
1001170e:	443b      	add	r3, r7
10011710:	9334      	str	r3, [sp, #208]	@ 0xd0
10011712:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011714:	3301      	adds	r3, #1
10011716:	2b07      	cmp	r3, #7
10011718:	e9c8 5700 	strd	r5, r7, [r8]
1001171c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001171e:	dc13      	bgt.n	10011748 <_vfprintf_r+0x29c>
10011720:	f108 0808 	add.w	r8, r8, #8
10011724:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10011726:	443b      	add	r3, r7
10011728:	930a      	str	r3, [sp, #40]	@ 0x28
1001172a:	2c00      	cmp	r4, #0
1001172c:	f47f af2c 	bne.w	10011588 <_vfprintf_r+0xdc>
10011730:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10011732:	f8dd b020 	ldr.w	fp, [sp, #32]
10011736:	2b00      	cmp	r3, #0
10011738:	f041 80d6 	bne.w	100128e8 <_vfprintf_r+0x143c>
1001173c:	9b07      	ldr	r3, [sp, #28]
1001173e:	2200      	movs	r2, #0
10011740:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10011744:	9233      	str	r2, [sp, #204]	@ 0xcc
10011746:	e012      	b.n	1001176e <_vfprintf_r+0x2c2>
10011748:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001174c:	aa32      	add	r2, sp, #200	@ 0xc8
1001174e:	f001 fd4d 	bl	100131ec <__sprint_r>
10011752:	b948      	cbnz	r0, 10011768 <_vfprintf_r+0x2bc>
10011754:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011758:	e7e4      	b.n	10011724 <_vfprintf_r+0x278>
1001175a:	46bb      	mov	fp, r7
1001175c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001175e:	b11b      	cbz	r3, 10011768 <_vfprintf_r+0x2bc>
10011760:	990c      	ldr	r1, [sp, #48]	@ 0x30
10011762:	4658      	mov	r0, fp
10011764:	f005 fa4c 	bl	10016c00 <_free_r>
10011768:	9b07      	ldr	r3, [sp, #28]
1001176a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001176e:	9a07      	ldr	r2, [sp, #28]
10011770:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10011772:	07d4      	lsls	r4, r2, #31
10011774:	f140 8114 	bpl.w	100119a0 <_vfprintf_r+0x4f4>
10011778:	0659      	lsls	r1, r3, #25
1001177a:	f101 8350 	bmi.w	10012e1e <_vfprintf_r+0x1972>
1001177e:	980a      	ldr	r0, [sp, #40]	@ 0x28
10011780:	b05f      	add	sp, #380	@ 0x17c
10011782:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10011786:	bf00      	nop
10011788:	2000042c 	.word	0x2000042c
1001178c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011790:	2b00      	cmp	r3, #0
10011792:	d0cd      	beq.n	10011730 <_vfprintf_r+0x284>
10011794:	2200      	movs	r2, #0
10011796:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001179a:	2301      	movs	r3, #1
1001179c:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100117a0:	9306      	str	r3, [sp, #24]
100117a2:	920c      	str	r2, [sp, #48]	@ 0x30
100117a4:	469b      	mov	fp, r3
100117a6:	9209      	str	r2, [sp, #36]	@ 0x24
100117a8:	9214      	str	r2, [sp, #80]	@ 0x50
100117aa:	9210      	str	r2, [sp, #64]	@ 0x40
100117ac:	9212      	str	r2, [sp, #72]	@ 0x48
100117ae:	ad45      	add	r5, sp, #276	@ 0x114
100117b0:	f019 0302 	ands.w	r3, r9, #2
100117b4:	d002      	beq.n	100117bc <_vfprintf_r+0x310>
100117b6:	9906      	ldr	r1, [sp, #24]
100117b8:	3102      	adds	r1, #2
100117ba:	9106      	str	r1, [sp, #24]
100117bc:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
100117c0:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100117c2:	d105      	bne.n	100117d0 <_vfprintf_r+0x324>
100117c4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
100117c6:	9806      	ldr	r0, [sp, #24]
100117c8:	1a0e      	subs	r6, r1, r0
100117ca:	2e00      	cmp	r6, #0
100117cc:	f300 80a7 	bgt.w	1001191e <_vfprintf_r+0x472>
100117d0:	b182      	cbz	r2, 100117f4 <_vfprintf_r+0x348>
100117d2:	2201      	movs	r2, #1
100117d4:	f8c8 2004 	str.w	r2, [r8, #4]
100117d8:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100117da:	3201      	adds	r2, #1
100117dc:	3401      	adds	r4, #1
100117de:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
100117e2:	2a07      	cmp	r2, #7
100117e4:	9434      	str	r4, [sp, #208]	@ 0xd0
100117e6:	9233      	str	r2, [sp, #204]	@ 0xcc
100117e8:	f8c8 1000 	str.w	r1, [r8]
100117ec:	f300 83e1 	bgt.w	10011fb2 <_vfprintf_r+0xb06>
100117f0:	f108 0808 	add.w	r8, r8, #8
100117f4:	b183      	cbz	r3, 10011818 <_vfprintf_r+0x36c>
100117f6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100117f8:	aa28      	add	r2, sp, #160	@ 0xa0
100117fa:	3301      	adds	r3, #1
100117fc:	3402      	adds	r4, #2
100117fe:	f8c8 2000 	str.w	r2, [r8]
10011802:	2b07      	cmp	r3, #7
10011804:	f04f 0202 	mov.w	r2, #2
10011808:	9434      	str	r4, [sp, #208]	@ 0xd0
1001180a:	9333      	str	r3, [sp, #204]	@ 0xcc
1001180c:	f8c8 2004 	str.w	r2, [r8, #4]
10011810:	f300 83dd 	bgt.w	10011fce <_vfprintf_r+0xb22>
10011814:	f108 0808 	add.w	r8, r8, #8
10011818:	2f80      	cmp	r7, #128	@ 0x80
1001181a:	f000 82be 	beq.w	10011d9a <_vfprintf_r+0x8ee>
1001181e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011820:	eba3 060b 	sub.w	r6, r3, fp
10011824:	2e00      	cmp	r6, #0
10011826:	f300 82fd 	bgt.w	10011e24 <_vfprintf_r+0x978>
1001182a:	f419 7f80 	tst.w	r9, #256	@ 0x100
1001182e:	f040 8219 	bne.w	10011c64 <_vfprintf_r+0x7b8>
10011832:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011834:	f8c8 5000 	str.w	r5, [r8]
10011838:	3301      	adds	r3, #1
1001183a:	445c      	add	r4, fp
1001183c:	2b07      	cmp	r3, #7
1001183e:	f8c8 b004 	str.w	fp, [r8, #4]
10011842:	9434      	str	r4, [sp, #208]	@ 0xd0
10011844:	9333      	str	r3, [sp, #204]	@ 0xcc
10011846:	f300 834d 	bgt.w	10011ee4 <_vfprintf_r+0xa38>
1001184a:	f108 0808 	add.w	r8, r8, #8
1001184e:	f019 0f04 	tst.w	r9, #4
10011852:	d005      	beq.n	10011860 <_vfprintf_r+0x3b4>
10011854:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10011856:	9a06      	ldr	r2, [sp, #24]
10011858:	1a9d      	subs	r5, r3, r2
1001185a:	2d00      	cmp	r5, #0
1001185c:	f300 83c3 	bgt.w	10011fe6 <_vfprintf_r+0xb3a>
10011860:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10011864:	9906      	ldr	r1, [sp, #24]
10011866:	428a      	cmp	r2, r1
10011868:	bfac      	ite	ge
1001186a:	189b      	addge	r3, r3, r2
1001186c:	185b      	addlt	r3, r3, r1
1001186e:	930a      	str	r3, [sp, #40]	@ 0x28
10011870:	2c00      	cmp	r4, #0
10011872:	f040 830f 	bne.w	10011e94 <_vfprintf_r+0x9e8>
10011876:	2300      	movs	r3, #0
10011878:	9333      	str	r3, [sp, #204]	@ 0xcc
1001187a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001187c:	b11b      	cbz	r3, 10011886 <_vfprintf_r+0x3da>
1001187e:	990c      	ldr	r1, [sp, #48]	@ 0x30
10011880:	9808      	ldr	r0, [sp, #32]
10011882:	f005 f9bd 	bl	10016c00 <_free_r>
10011886:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001188a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001188c:	e65f      	b.n	1001154e <_vfprintf_r+0xa2>
1001188e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011892:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011894:	3307      	adds	r3, #7
10011896:	f023 0307 	bic.w	r3, r3, #7
1001189a:	e8f3 6702 	ldrd	r6, r7, [r3], #8
1001189e:	930d      	str	r3, [sp, #52]	@ 0x34
100118a0:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
100118a4:	9323      	str	r3, [sp, #140]	@ 0x8c
100118a6:	9622      	str	r6, [sp, #136]	@ 0x88
100118a8:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
100118ac:	4ba8      	ldr	r3, [pc, #672]	@ (10011b50 <_vfprintf_r+0x6a4>)
100118ae:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100118b2:	4650      	mov	r0, sl
100118b4:	4659      	mov	r1, fp
100118b6:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
100118ba:	f00c fbab 	bl	1001e014 <__aeabi_dcmpun>
100118be:	2800      	cmp	r0, #0
100118c0:	f040 8530 	bne.w	10012324 <_vfprintf_r+0xe78>
100118c4:	4ba2      	ldr	r3, [pc, #648]	@ (10011b50 <_vfprintf_r+0x6a4>)
100118c6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100118ca:	4650      	mov	r0, sl
100118cc:	4659      	mov	r1, fp
100118ce:	f00c fb83 	bl	1001dfd8 <__aeabi_dcmple>
100118d2:	2800      	cmp	r0, #0
100118d4:	f040 8526 	bne.w	10012324 <_vfprintf_r+0xe78>
100118d8:	2200      	movs	r2, #0
100118da:	2300      	movs	r3, #0
100118dc:	4630      	mov	r0, r6
100118de:	4639      	mov	r1, r7
100118e0:	f00c fb70 	bl	1001dfc4 <__aeabi_dcmplt>
100118e4:	2800      	cmp	r0, #0
100118e6:	f041 810f 	bne.w	10012b08 <_vfprintf_r+0x165c>
100118ea:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100118ee:	4d99      	ldr	r5, [pc, #612]	@ (10011b54 <_vfprintf_r+0x6a8>)
100118f0:	4b99      	ldr	r3, [pc, #612]	@ (10011b58 <_vfprintf_r+0x6ac>)
100118f2:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
100118f6:	990e      	ldr	r1, [sp, #56]	@ 0x38
100118f8:	2947      	cmp	r1, #71	@ 0x47
100118fa:	bfc8      	it	gt
100118fc:	461d      	movgt	r5, r3
100118fe:	2300      	movs	r3, #0
10011900:	2103      	movs	r1, #3
10011902:	930c      	str	r3, [sp, #48]	@ 0x30
10011904:	9106      	str	r1, [sp, #24]
10011906:	468b      	mov	fp, r1
10011908:	9309      	str	r3, [sp, #36]	@ 0x24
1001190a:	9314      	str	r3, [sp, #80]	@ 0x50
1001190c:	9310      	str	r3, [sp, #64]	@ 0x40
1001190e:	9312      	str	r3, [sp, #72]	@ 0x48
10011910:	2a00      	cmp	r2, #0
10011912:	f43f af4d 	beq.w	100117b0 <_vfprintf_r+0x304>
10011916:	9b06      	ldr	r3, [sp, #24]
10011918:	3301      	adds	r3, #1
1001191a:	9306      	str	r3, [sp, #24]
1001191c:	e748      	b.n	100117b0 <_vfprintf_r+0x304>
1001191e:	2e10      	cmp	r6, #16
10011920:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10011922:	f341 823d 	ble.w	10012da0 <_vfprintf_r+0x18f4>
10011926:	488d      	ldr	r0, [pc, #564]	@ (10011b5c <_vfprintf_r+0x6b0>)
10011928:	9521      	str	r5, [sp, #132]	@ 0x84
1001192a:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
1001192e:	4621      	mov	r1, r4
10011930:	9d07      	ldr	r5, [sp, #28]
10011932:	9c08      	ldr	r4, [sp, #32]
10011934:	9015      	str	r0, [sp, #84]	@ 0x54
10011936:	f04f 0a10 	mov.w	sl, #16
1001193a:	4607      	mov	r7, r0
1001193c:	e004      	b.n	10011948 <_vfprintf_r+0x49c>
1001193e:	3e10      	subs	r6, #16
10011940:	2e10      	cmp	r6, #16
10011942:	f108 0808 	add.w	r8, r8, #8
10011946:	dd16      	ble.n	10011976 <_vfprintf_r+0x4ca>
10011948:	3201      	adds	r2, #1
1001194a:	3110      	adds	r1, #16
1001194c:	2a07      	cmp	r2, #7
1001194e:	e9c8 7a00 	strd	r7, sl, [r8]
10011952:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10011956:	ddf2      	ble.n	1001193e <_vfprintf_r+0x492>
10011958:	aa32      	add	r2, sp, #200	@ 0xc8
1001195a:	4629      	mov	r1, r5
1001195c:	4620      	mov	r0, r4
1001195e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011962:	f001 fc43 	bl	100131ec <__sprint_r>
10011966:	2800      	cmp	r0, #0
10011968:	f040 8636 	bne.w	100125d8 <_vfprintf_r+0x112c>
1001196c:	3e10      	subs	r6, #16
1001196e:	2e10      	cmp	r6, #16
10011970:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10011974:	dce8      	bgt.n	10011948 <_vfprintf_r+0x49c>
10011976:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
1001197a:	9d21      	ldr	r5, [sp, #132]	@ 0x84
1001197c:	460c      	mov	r4, r1
1001197e:	3201      	adds	r2, #1
10011980:	9915      	ldr	r1, [sp, #84]	@ 0x54
10011982:	f8c8 1000 	str.w	r1, [r8]
10011986:	4434      	add	r4, r6
10011988:	2a07      	cmp	r2, #7
1001198a:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
1001198e:	f8c8 6004 	str.w	r6, [r8, #4]
10011992:	f300 8610 	bgt.w	100125b6 <_vfprintf_r+0x110a>
10011996:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001199a:	f108 0808 	add.w	r8, r8, #8
1001199e:	e717      	b.n	100117d0 <_vfprintf_r+0x324>
100119a0:	0598      	lsls	r0, r3, #22
100119a2:	f53f aee9 	bmi.w	10011778 <_vfprintf_r+0x2cc>
100119a6:	9c07      	ldr	r4, [sp, #28]
100119a8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100119aa:	f003 ff37 	bl	1001581c <__retarget_lock_release_recursive>
100119ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100119b2:	e6e1      	b.n	10011778 <_vfprintf_r+0x2cc>
100119b4:	7823      	ldrb	r3, [r4, #0]
100119b6:	f049 0920 	orr.w	r9, r9, #32
100119ba:	e5ef      	b.n	1001159c <_vfprintf_r+0xf0>
100119bc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100119be:	2b43      	cmp	r3, #67	@ 0x43
100119c0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100119c4:	f102 0404 	add.w	r4, r2, #4
100119c8:	f000 8562 	beq.w	10012490 <_vfprintf_r+0xfe4>
100119cc:	f019 0f10 	tst.w	r9, #16
100119d0:	f040 855e 	bne.w	10012490 <_vfprintf_r+0xfe4>
100119d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100119d6:	681b      	ldr	r3, [r3, #0]
100119d8:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
100119dc:	2301      	movs	r3, #1
100119de:	9306      	str	r3, [sp, #24]
100119e0:	469b      	mov	fp, r3
100119e2:	ad45      	add	r5, sp, #276	@ 0x114
100119e4:	2200      	movs	r2, #0
100119e6:	940d      	str	r4, [sp, #52]	@ 0x34
100119e8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100119ec:	920c      	str	r2, [sp, #48]	@ 0x30
100119ee:	9209      	str	r2, [sp, #36]	@ 0x24
100119f0:	9214      	str	r2, [sp, #80]	@ 0x50
100119f2:	9210      	str	r2, [sp, #64]	@ 0x40
100119f4:	9212      	str	r2, [sp, #72]	@ 0x48
100119f6:	e6db      	b.n	100117b0 <_vfprintf_r+0x304>
100119f8:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
100119fa:	f856 5b04 	ldr.w	r5, [r6], #4
100119fe:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011a02:	2300      	movs	r3, #0
10011a04:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10011a08:	2d00      	cmp	r5, #0
10011a0a:	f000 8530 	beq.w	1001246e <_vfprintf_r+0xfc2>
10011a0e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011a10:	2b53      	cmp	r3, #83	@ 0x53
10011a12:	f000 8601 	beq.w	10012618 <_vfprintf_r+0x116c>
10011a16:	f019 0310 	ands.w	r3, r9, #16
10011a1a:	9312      	str	r3, [sp, #72]	@ 0x48
10011a1c:	f040 85fc 	bne.w	10012618 <_vfprintf_r+0x116c>
10011a20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011a22:	1c5a      	adds	r2, r3, #1
10011a24:	f000 876a 	beq.w	100128fc <_vfprintf_r+0x1450>
10011a28:	9912      	ldr	r1, [sp, #72]	@ 0x48
10011a2a:	461a      	mov	r2, r3
10011a2c:	4628      	mov	r0, r5
10011a2e:	f003 fef7 	bl	10015820 <memchr>
10011a32:	900c      	str	r0, [sp, #48]	@ 0x30
10011a34:	2800      	cmp	r0, #0
10011a36:	f001 82c5 	beq.w	10012fc4 <_vfprintf_r+0x1b18>
10011a3a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10011a3c:	960d      	str	r6, [sp, #52]	@ 0x34
10011a3e:	eba3 0b05 	sub.w	fp, r3, r5
10011a42:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10011a44:	9309      	str	r3, [sp, #36]	@ 0x24
10011a46:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10011a4a:	9314      	str	r3, [sp, #80]	@ 0x50
10011a4c:	9310      	str	r3, [sp, #64]	@ 0x40
10011a4e:	930c      	str	r3, [sp, #48]	@ 0x30
10011a50:	2373      	movs	r3, #115	@ 0x73
10011a52:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011a56:	9106      	str	r1, [sp, #24]
10011a58:	930e      	str	r3, [sp, #56]	@ 0x38
10011a5a:	e759      	b.n	10011910 <_vfprintf_r+0x464>
10011a5c:	f019 0f20 	tst.w	r9, #32
10011a60:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011a64:	f000 80cc 	beq.w	10011c00 <_vfprintf_r+0x754>
10011a68:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011a6a:	3307      	adds	r3, #7
10011a6c:	f023 0307 	bic.w	r3, r3, #7
10011a70:	461a      	mov	r2, r3
10011a72:	6859      	ldr	r1, [r3, #4]
10011a74:	f852 3b08 	ldr.w	r3, [r2], #8
10011a78:	920d      	str	r2, [sp, #52]	@ 0x34
10011a7a:	460a      	mov	r2, r1
10011a7c:	2900      	cmp	r1, #0
10011a7e:	f2c0 8425 	blt.w	100122cc <_vfprintf_r+0xe20>
10011a82:	9909      	ldr	r1, [sp, #36]	@ 0x24
10011a84:	3101      	adds	r1, #1
10011a86:	f000 8285 	beq.w	10011f94 <_vfprintf_r+0xae8>
10011a8a:	ea53 0102 	orrs.w	r1, r3, r2
10011a8e:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10011a92:	f040 8280 	bne.w	10011f96 <_vfprintf_r+0xaea>
10011a96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10011a98:	2a00      	cmp	r2, #0
10011a9a:	f040 8281 	bne.w	10011fa0 <_vfprintf_r+0xaf4>
10011a9e:	46a1      	mov	r9, r4
10011aa0:	4693      	mov	fp, r2
10011aa2:	ad5e      	add	r5, sp, #376	@ 0x178
10011aa4:	e150      	b.n	10011d48 <_vfprintf_r+0x89c>
10011aa6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011aa8:	f853 2b04 	ldr.w	r2, [r3], #4
10011aac:	920b      	str	r2, [sp, #44]	@ 0x2c
10011aae:	2a00      	cmp	r2, #0
10011ab0:	f280 83ce 	bge.w	10012250 <_vfprintf_r+0xda4>
10011ab4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10011ab6:	930d      	str	r3, [sp, #52]	@ 0x34
10011ab8:	4252      	negs	r2, r2
10011aba:	920b      	str	r2, [sp, #44]	@ 0x2c
10011abc:	7823      	ldrb	r3, [r4, #0]
10011abe:	f049 0904 	orr.w	r9, r9, #4
10011ac2:	e56b      	b.n	1001159c <_vfprintf_r+0xf0>
10011ac4:	7823      	ldrb	r3, [r4, #0]
10011ac6:	2b6c      	cmp	r3, #108	@ 0x6c
10011ac8:	bf03      	ittte	eq
10011aca:	7863      	ldrbeq	r3, [r4, #1]
10011acc:	f049 0920 	orreq.w	r9, r9, #32
10011ad0:	3401      	addeq	r4, #1
10011ad2:	f049 0910 	orrne.w	r9, r9, #16
10011ad6:	e561      	b.n	1001159c <_vfprintf_r+0xf0>
10011ad8:	7823      	ldrb	r3, [r4, #0]
10011ada:	2b68      	cmp	r3, #104	@ 0x68
10011adc:	bf03      	ittte	eq
10011ade:	7863      	ldrbeq	r3, [r4, #1]
10011ae0:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10011ae4:	3401      	addeq	r4, #1
10011ae6:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
10011aea:	e557      	b.n	1001159c <_vfprintf_r+0xf0>
10011aec:	232b      	movs	r3, #43	@ 0x2b
10011aee:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10011af2:	7823      	ldrb	r3, [r4, #0]
10011af4:	e552      	b.n	1001159c <_vfprintf_r+0xf0>
10011af6:	7823      	ldrb	r3, [r4, #0]
10011af8:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
10011afc:	e54e      	b.n	1001159c <_vfprintf_r+0xf0>
10011afe:	4621      	mov	r1, r4
10011b00:	f811 3b01 	ldrb.w	r3, [r1], #1
10011b04:	2b2a      	cmp	r3, #42	@ 0x2a
10011b06:	f001 82db 	beq.w	100130c0 <_vfprintf_r+0x1c14>
10011b0a:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10011b0e:	2a09      	cmp	r2, #9
10011b10:	460c      	mov	r4, r1
10011b12:	bf98      	it	ls
10011b14:	2100      	movls	r1, #0
10011b16:	f201 8172 	bhi.w	10012dfe <_vfprintf_r+0x1952>
10011b1a:	f814 3b01 	ldrb.w	r3, [r4], #1
10011b1e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10011b22:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10011b26:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10011b2a:	2a09      	cmp	r2, #9
10011b2c:	d9f5      	bls.n	10011b1a <_vfprintf_r+0x66e>
10011b2e:	9109      	str	r1, [sp, #36]	@ 0x24
10011b30:	e535      	b.n	1001159e <_vfprintf_r+0xf2>
10011b32:	7823      	ldrb	r3, [r4, #0]
10011b34:	f049 0901 	orr.w	r9, r9, #1
10011b38:	e530      	b.n	1001159c <_vfprintf_r+0xf0>
10011b3a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011b3e:	7823      	ldrb	r3, [r4, #0]
10011b40:	2a00      	cmp	r2, #0
10011b42:	f47f ad2b 	bne.w	1001159c <_vfprintf_r+0xf0>
10011b46:	2220      	movs	r2, #32
10011b48:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10011b4c:	e526      	b.n	1001159c <_vfprintf_r+0xf0>
10011b4e:	bf00      	nop
10011b50:	7fefffff 	.word	0x7fefffff
10011b54:	1001ea2c 	.word	0x1001ea2c
10011b58:	1001ea30 	.word	0x1001ea30
10011b5c:	1001ea6c 	.word	0x1001ea6c
10011b60:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011b64:	f049 0910 	orr.w	r9, r9, #16
10011b68:	f019 0220 	ands.w	r2, r9, #32
10011b6c:	f000 8354 	beq.w	10012218 <_vfprintf_r+0xd6c>
10011b70:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011b72:	3307      	adds	r3, #7
10011b74:	f023 0307 	bic.w	r3, r3, #7
10011b78:	4619      	mov	r1, r3
10011b7a:	685a      	ldr	r2, [r3, #4]
10011b7c:	f851 3b08 	ldr.w	r3, [r1], #8
10011b80:	910d      	str	r1, [sp, #52]	@ 0x34
10011b82:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10011b86:	2100      	movs	r1, #0
10011b88:	2000      	movs	r0, #0
10011b8a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10011b8c:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
10011b90:	1c6f      	adds	r7, r5, #1
10011b92:	f000 80c2 	beq.w	10011d1a <_vfprintf_r+0x86e>
10011b96:	ea53 0002 	orrs.w	r0, r3, r2
10011b9a:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
10011b9e:	f040 80bb 	bne.w	10011d18 <_vfprintf_r+0x86c>
10011ba2:	2d00      	cmp	r5, #0
10011ba4:	f040 8523 	bne.w	100125ee <_vfprintf_r+0x1142>
10011ba8:	2900      	cmp	r1, #0
10011baa:	f040 8496 	bne.w	100124da <_vfprintf_r+0x102e>
10011bae:	f014 0b01 	ands.w	fp, r4, #1
10011bb2:	f000 8351 	beq.w	10012258 <_vfprintf_r+0xdac>
10011bb6:	2330      	movs	r3, #48	@ 0x30
10011bb8:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10011bbc:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10011bc0:	e0c2      	b.n	10011d48 <_vfprintf_r+0x89c>
10011bc2:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011bc6:	f049 0410 	orr.w	r4, r9, #16
10011bca:	f014 0220 	ands.w	r2, r4, #32
10011bce:	f000 8315 	beq.w	100121fc <_vfprintf_r+0xd50>
10011bd2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011bd4:	3307      	adds	r3, #7
10011bd6:	f023 0307 	bic.w	r3, r3, #7
10011bda:	4619      	mov	r1, r3
10011bdc:	685a      	ldr	r2, [r3, #4]
10011bde:	f851 3b08 	ldr.w	r3, [r1], #8
10011be2:	910d      	str	r1, [sp, #52]	@ 0x34
10011be4:	2101      	movs	r1, #1
10011be6:	e7cf      	b.n	10011b88 <_vfprintf_r+0x6dc>
10011be8:	7823      	ldrb	r3, [r4, #0]
10011bea:	f049 0908 	orr.w	r9, r9, #8
10011bee:	e4d5      	b.n	1001159c <_vfprintf_r+0xf0>
10011bf0:	f049 0910 	orr.w	r9, r9, #16
10011bf4:	f019 0f20 	tst.w	r9, #32
10011bf8:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011bfc:	f47f af34 	bne.w	10011a68 <_vfprintf_r+0x5bc>
10011c00:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10011c02:	f019 0f10 	tst.w	r9, #16
10011c06:	f852 3b04 	ldr.w	r3, [r2], #4
10011c0a:	920d      	str	r2, [sp, #52]	@ 0x34
10011c0c:	f040 8359 	bne.w	100122c2 <_vfprintf_r+0xe16>
10011c10:	f019 0f40 	tst.w	r9, #64	@ 0x40
10011c14:	f000 8351 	beq.w	100122ba <_vfprintf_r+0xe0e>
10011c18:	f343 32c0 	sbfx	r2, r3, #15, #1
10011c1c:	4611      	mov	r1, r2
10011c1e:	b21b      	sxth	r3, r3
10011c20:	e72c      	b.n	10011a7c <_vfprintf_r+0x5d0>
10011c22:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10011c24:	940f      	str	r4, [sp, #60]	@ 0x3c
10011c26:	f852 3b04 	ldr.w	r3, [r2], #4
10011c2a:	920d      	str	r2, [sp, #52]	@ 0x34
10011c2c:	f647 0230 	movw	r2, #30768	@ 0x7830
10011c30:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10011c34:	2078      	movs	r0, #120	@ 0x78
10011c36:	4ab1      	ldr	r2, [pc, #708]	@ (10011efc <_vfprintf_r+0xa50>)
10011c38:	921a      	str	r2, [sp, #104]	@ 0x68
10011c3a:	f049 0402 	orr.w	r4, r9, #2
10011c3e:	2200      	movs	r2, #0
10011c40:	2102      	movs	r1, #2
10011c42:	900e      	str	r0, [sp, #56]	@ 0x38
10011c44:	e7a0      	b.n	10011b88 <_vfprintf_r+0x6dc>
10011c46:	f019 0f20 	tst.w	r9, #32
10011c4a:	940f      	str	r4, [sp, #60]	@ 0x3c
10011c4c:	f000 8359 	beq.w	10012302 <_vfprintf_r+0xe56>
10011c50:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011c52:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10011c54:	681b      	ldr	r3, [r3, #0]
10011c56:	601a      	str	r2, [r3, #0]
10011c58:	17d2      	asrs	r2, r2, #31
10011c5a:	605a      	str	r2, [r3, #4]
10011c5c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011c5e:	3304      	adds	r3, #4
10011c60:	930d      	str	r3, [sp, #52]	@ 0x34
10011c62:	e612      	b.n	1001188a <_vfprintf_r+0x3de>
10011c64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011c66:	2b65      	cmp	r3, #101	@ 0x65
10011c68:	f340 814e 	ble.w	10011f08 <_vfprintf_r+0xa5c>
10011c6c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10011c70:	2200      	movs	r2, #0
10011c72:	2300      	movs	r3, #0
10011c74:	f00c f99c 	bl	1001dfb0 <__aeabi_dcmpeq>
10011c78:	2800      	cmp	r0, #0
10011c7a:	f000 81ee 	beq.w	1001205a <_vfprintf_r+0xbae>
10011c7e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011c80:	4a9f      	ldr	r2, [pc, #636]	@ (10011f00 <_vfprintf_r+0xa54>)
10011c82:	f8c8 2000 	str.w	r2, [r8]
10011c86:	3301      	adds	r3, #1
10011c88:	3401      	adds	r4, #1
10011c8a:	2201      	movs	r2, #1
10011c8c:	2b07      	cmp	r3, #7
10011c8e:	9434      	str	r4, [sp, #208]	@ 0xd0
10011c90:	9333      	str	r3, [sp, #204]	@ 0xcc
10011c92:	f8c8 2004 	str.w	r2, [r8, #4]
10011c96:	f300 84af 	bgt.w	100125f8 <_vfprintf_r+0x114c>
10011c9a:	f108 0808 	add.w	r8, r8, #8
10011c9e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10011ca0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10011ca2:	4293      	cmp	r3, r2
10011ca4:	f280 82cf 	bge.w	10012246 <_vfprintf_r+0xd9a>
10011ca8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10011caa:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10011cac:	441c      	add	r4, r3
10011cae:	e9c8 2300 	strd	r2, r3, [r8]
10011cb2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011cb4:	9434      	str	r4, [sp, #208]	@ 0xd0
10011cb6:	3301      	adds	r3, #1
10011cb8:	2b07      	cmp	r3, #7
10011cba:	9333      	str	r3, [sp, #204]	@ 0xcc
10011cbc:	f300 83cb 	bgt.w	10012456 <_vfprintf_r+0xfaa>
10011cc0:	f108 0808 	add.w	r8, r8, #8
10011cc4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011cc6:	1e5d      	subs	r5, r3, #1
10011cc8:	2d00      	cmp	r5, #0
10011cca:	f77f adc0 	ble.w	1001184e <_vfprintf_r+0x3a2>
10011cce:	2d10      	cmp	r5, #16
10011cd0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011cd2:	f340 84fa 	ble.w	100126ca <_vfprintf_r+0x121e>
10011cd6:	4f8b      	ldr	r7, [pc, #556]	@ (10011f04 <_vfprintf_r+0xa58>)
10011cd8:	9715      	str	r7, [sp, #84]	@ 0x54
10011cda:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
10011cde:	2610      	movs	r6, #16
10011ce0:	e005      	b.n	10011cee <_vfprintf_r+0x842>
10011ce2:	f108 0808 	add.w	r8, r8, #8
10011ce6:	3d10      	subs	r5, #16
10011ce8:	2d10      	cmp	r5, #16
10011cea:	f340 84f0 	ble.w	100126ce <_vfprintf_r+0x1222>
10011cee:	3301      	adds	r3, #1
10011cf0:	3410      	adds	r4, #16
10011cf2:	2b07      	cmp	r3, #7
10011cf4:	e9c8 7600 	strd	r7, r6, [r8]
10011cf8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011cfc:	ddf1      	ble.n	10011ce2 <_vfprintf_r+0x836>
10011cfe:	aa32      	add	r2, sp, #200	@ 0xc8
10011d00:	4651      	mov	r1, sl
10011d02:	4658      	mov	r0, fp
10011d04:	f001 fa72 	bl	100131ec <__sprint_r>
10011d08:	2800      	cmp	r0, #0
10011d0a:	f47f ad27 	bne.w	1001175c <_vfprintf_r+0x2b0>
10011d0e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10011d12:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011d16:	e7e6      	b.n	10011ce6 <_vfprintf_r+0x83a>
10011d18:	464c      	mov	r4, r9
10011d1a:	2901      	cmp	r1, #1
10011d1c:	f000 813b 	beq.w	10011f96 <_vfprintf_r+0xaea>
10011d20:	2902      	cmp	r1, #2
10011d22:	ad5e      	add	r5, sp, #376	@ 0x178
10011d24:	d11e      	bne.n	10011d64 <_vfprintf_r+0x8b8>
10011d26:	981a      	ldr	r0, [sp, #104]	@ 0x68
10011d28:	f003 010f 	and.w	r1, r3, #15
10011d2c:	091b      	lsrs	r3, r3, #4
10011d2e:	5c41      	ldrb	r1, [r0, r1]
10011d30:	f805 1d01 	strb.w	r1, [r5, #-1]!
10011d34:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10011d38:	0912      	lsrs	r2, r2, #4
10011d3a:	ea53 0102 	orrs.w	r1, r3, r2
10011d3e:	d1f3      	bne.n	10011d28 <_vfprintf_r+0x87c>
10011d40:	ab5e      	add	r3, sp, #376	@ 0x178
10011d42:	46a1      	mov	r9, r4
10011d44:	eba3 0b05 	sub.w	fp, r3, r5
10011d48:	9909      	ldr	r1, [sp, #36]	@ 0x24
10011d4a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011d4e:	4559      	cmp	r1, fp
10011d50:	f04f 0300 	mov.w	r3, #0
10011d54:	bfb8      	it	lt
10011d56:	4659      	movlt	r1, fp
10011d58:	930c      	str	r3, [sp, #48]	@ 0x30
10011d5a:	9106      	str	r1, [sp, #24]
10011d5c:	9314      	str	r3, [sp, #80]	@ 0x50
10011d5e:	9310      	str	r3, [sp, #64]	@ 0x40
10011d60:	9312      	str	r3, [sp, #72]	@ 0x48
10011d62:	e5d5      	b.n	10011910 <_vfprintf_r+0x464>
10011d64:	f003 0107 	and.w	r1, r3, #7
10011d68:	08db      	lsrs	r3, r3, #3
10011d6a:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
10011d6e:	08d2      	lsrs	r2, r2, #3
10011d70:	3130      	adds	r1, #48	@ 0x30
10011d72:	ea53 0602 	orrs.w	r6, r3, r2
10011d76:	4628      	mov	r0, r5
10011d78:	f805 1d01 	strb.w	r1, [r5, #-1]!
10011d7c:	d1f2      	bne.n	10011d64 <_vfprintf_r+0x8b8>
10011d7e:	07e6      	lsls	r6, r4, #31
10011d80:	d5de      	bpl.n	10011d40 <_vfprintf_r+0x894>
10011d82:	2930      	cmp	r1, #48	@ 0x30
10011d84:	d0dc      	beq.n	10011d40 <_vfprintf_r+0x894>
10011d86:	2330      	movs	r3, #48	@ 0x30
10011d88:	3802      	subs	r0, #2
10011d8a:	f805 3c01 	strb.w	r3, [r5, #-1]
10011d8e:	ab5e      	add	r3, sp, #376	@ 0x178
10011d90:	46a1      	mov	r9, r4
10011d92:	eba3 0b00 	sub.w	fp, r3, r0
10011d96:	4605      	mov	r5, r0
10011d98:	e7d6      	b.n	10011d48 <_vfprintf_r+0x89c>
10011d9a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10011d9c:	9a06      	ldr	r2, [sp, #24]
10011d9e:	1a9e      	subs	r6, r3, r2
10011da0:	2e00      	cmp	r6, #0
10011da2:	f77f ad3c 	ble.w	1001181e <_vfprintf_r+0x372>
10011da6:	2e10      	cmp	r6, #16
10011da8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011daa:	f341 80ad 	ble.w	10012f08 <_vfprintf_r+0x1a5c>
10011dae:	4855      	ldr	r0, [pc, #340]	@ (10011f04 <_vfprintf_r+0xa58>)
10011db0:	f8dd a020 	ldr.w	sl, [sp, #32]
10011db4:	9015      	str	r0, [sp, #84]	@ 0x54
10011db6:	4621      	mov	r1, r4
10011db8:	2710      	movs	r7, #16
10011dba:	461a      	mov	r2, r3
10011dbc:	4604      	mov	r4, r0
10011dbe:	e004      	b.n	10011dca <_vfprintf_r+0x91e>
10011dc0:	3e10      	subs	r6, #16
10011dc2:	2e10      	cmp	r6, #16
10011dc4:	f108 0808 	add.w	r8, r8, #8
10011dc8:	dd16      	ble.n	10011df8 <_vfprintf_r+0x94c>
10011dca:	3201      	adds	r2, #1
10011dcc:	3110      	adds	r1, #16
10011dce:	2a07      	cmp	r2, #7
10011dd0:	e9c8 4700 	strd	r4, r7, [r8]
10011dd4:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10011dd8:	ddf2      	ble.n	10011dc0 <_vfprintf_r+0x914>
10011dda:	9907      	ldr	r1, [sp, #28]
10011ddc:	aa32      	add	r2, sp, #200	@ 0xc8
10011dde:	4650      	mov	r0, sl
10011de0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011de4:	f001 fa02 	bl	100131ec <__sprint_r>
10011de8:	2800      	cmp	r0, #0
10011dea:	f040 83f8 	bne.w	100125de <_vfprintf_r+0x1132>
10011dee:	3e10      	subs	r6, #16
10011df0:	2e10      	cmp	r6, #16
10011df2:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10011df6:	dce8      	bgt.n	10011dca <_vfprintf_r+0x91e>
10011df8:	460c      	mov	r4, r1
10011dfa:	4613      	mov	r3, r2
10011dfc:	3301      	adds	r3, #1
10011dfe:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10011e00:	f8c8 2000 	str.w	r2, [r8]
10011e04:	4434      	add	r4, r6
10011e06:	2b07      	cmp	r3, #7
10011e08:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011e0c:	f8c8 6004 	str.w	r6, [r8, #4]
10011e10:	f300 8314 	bgt.w	1001243c <_vfprintf_r+0xf90>
10011e14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011e16:	eba3 060b 	sub.w	r6, r3, fp
10011e1a:	2e00      	cmp	r6, #0
10011e1c:	f108 0808 	add.w	r8, r8, #8
10011e20:	f77f ad03 	ble.w	1001182a <_vfprintf_r+0x37e>
10011e24:	4a37      	ldr	r2, [pc, #220]	@ (10011f04 <_vfprintf_r+0xa58>)
10011e26:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011e28:	9215      	str	r2, [sp, #84]	@ 0x54
10011e2a:	2e10      	cmp	r6, #16
10011e2c:	dd23      	ble.n	10011e76 <_vfprintf_r+0x9ca>
10011e2e:	4622      	mov	r2, r4
10011e30:	f04f 0a10 	mov.w	sl, #16
10011e34:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
10011e38:	e004      	b.n	10011e44 <_vfprintf_r+0x998>
10011e3a:	3e10      	subs	r6, #16
10011e3c:	2e10      	cmp	r6, #16
10011e3e:	f108 0808 	add.w	r8, r8, #8
10011e42:	dd17      	ble.n	10011e74 <_vfprintf_r+0x9c8>
10011e44:	3301      	adds	r3, #1
10011e46:	492f      	ldr	r1, [pc, #188]	@ (10011f04 <_vfprintf_r+0xa58>)
10011e48:	3210      	adds	r2, #16
10011e4a:	2b07      	cmp	r3, #7
10011e4c:	e9c8 1a00 	strd	r1, sl, [r8]
10011e50:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
10011e54:	ddf1      	ble.n	10011e3a <_vfprintf_r+0x98e>
10011e56:	aa32      	add	r2, sp, #200	@ 0xc8
10011e58:	4621      	mov	r1, r4
10011e5a:	4638      	mov	r0, r7
10011e5c:	f001 f9c6 	bl	100131ec <__sprint_r>
10011e60:	2800      	cmp	r0, #0
10011e62:	f47f ac7a 	bne.w	1001175a <_vfprintf_r+0x2ae>
10011e66:	3e10      	subs	r6, #16
10011e68:	2e10      	cmp	r6, #16
10011e6a:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
10011e6e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011e72:	dce7      	bgt.n	10011e44 <_vfprintf_r+0x998>
10011e74:	4614      	mov	r4, r2
10011e76:	3301      	adds	r3, #1
10011e78:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10011e7a:	f8c8 2000 	str.w	r2, [r8]
10011e7e:	4434      	add	r4, r6
10011e80:	2b07      	cmp	r3, #7
10011e82:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011e86:	f8c8 6004 	str.w	r6, [r8, #4]
10011e8a:	f300 81aa 	bgt.w	100121e2 <_vfprintf_r+0xd36>
10011e8e:	f108 0808 	add.w	r8, r8, #8
10011e92:	e4ca      	b.n	1001182a <_vfprintf_r+0x37e>
10011e94:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011e98:	aa32      	add	r2, sp, #200	@ 0xc8
10011e9a:	f001 f9a7 	bl	100131ec <__sprint_r>
10011e9e:	2800      	cmp	r0, #0
10011ea0:	f43f ace9 	beq.w	10011876 <_vfprintf_r+0x3ca>
10011ea4:	f8dd b020 	ldr.w	fp, [sp, #32]
10011ea8:	e458      	b.n	1001175c <_vfprintf_r+0x2b0>
10011eaa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10011eac:	9919      	ldr	r1, [sp, #100]	@ 0x64
10011eae:	441c      	add	r4, r3
10011eb0:	e9c8 1300 	strd	r1, r3, [r8]
10011eb4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011eb6:	9434      	str	r4, [sp, #208]	@ 0xd0
10011eb8:	3301      	adds	r3, #1
10011eba:	2b07      	cmp	r3, #7
10011ebc:	9333      	str	r3, [sp, #204]	@ 0xcc
10011ebe:	f300 85bf 	bgt.w	10012a40 <_vfprintf_r+0x1594>
10011ec2:	f108 0808 	add.w	r8, r8, #8
10011ec6:	2a00      	cmp	r2, #0
10011ec8:	f2c0 87ae 	blt.w	10012e28 <_vfprintf_r+0x197c>
10011ecc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10011ece:	f8c8 5000 	str.w	r5, [r8]
10011ed2:	3301      	adds	r3, #1
10011ed4:	4414      	add	r4, r2
10011ed6:	2b07      	cmp	r3, #7
10011ed8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011edc:	f8c8 2004 	str.w	r2, [r8, #4]
10011ee0:	f77f acb3 	ble.w	1001184a <_vfprintf_r+0x39e>
10011ee4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011ee8:	aa32      	add	r2, sp, #200	@ 0xc8
10011eea:	f001 f97f 	bl	100131ec <__sprint_r>
10011eee:	2800      	cmp	r0, #0
10011ef0:	d1d8      	bne.n	10011ea4 <_vfprintf_r+0x9f8>
10011ef2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011ef4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011ef8:	e4a9      	b.n	1001184e <_vfprintf_r+0x3a2>
10011efa:	bf00      	nop
10011efc:	1001e6a8 	.word	0x1001e6a8
10011f00:	1001ea58 	.word	0x1001ea58
10011f04:	1001ea5c 	.word	0x1001ea5c
10011f08:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011f0a:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10011f0c:	2b01      	cmp	r3, #1
10011f0e:	f104 0401 	add.w	r4, r4, #1
10011f12:	f106 0601 	add.w	r6, r6, #1
10011f16:	f108 0708 	add.w	r7, r8, #8
10011f1a:	f340 811d 	ble.w	10012158 <_vfprintf_r+0xcac>
10011f1e:	2301      	movs	r3, #1
10011f20:	2e07      	cmp	r6, #7
10011f22:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10011f26:	f8c8 5000 	str.w	r5, [r8]
10011f2a:	f8c8 3004 	str.w	r3, [r8, #4]
10011f2e:	f300 82e4 	bgt.w	100124fa <_vfprintf_r+0x104e>
10011f32:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10011f34:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10011f36:	3601      	adds	r6, #1
10011f38:	441c      	add	r4, r3
10011f3a:	2e07      	cmp	r6, #7
10011f3c:	e9c7 2300 	strd	r2, r3, [r7]
10011f40:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10011f44:	f300 82cd 	bgt.w	100124e2 <_vfprintf_r+0x1036>
10011f48:	3708      	adds	r7, #8
10011f4a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011f4c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10011f50:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
10011f54:	2200      	movs	r2, #0
10011f56:	2300      	movs	r3, #0
10011f58:	f00c f82a 	bl	1001dfb0 <__aeabi_dcmpeq>
10011f5c:	2800      	cmp	r0, #0
10011f5e:	f040 8115 	bne.w	1001218c <_vfprintf_r+0xce0>
10011f62:	3601      	adds	r6, #1
10011f64:	3501      	adds	r5, #1
10011f66:	4444      	add	r4, r8
10011f68:	2e07      	cmp	r6, #7
10011f6a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10011f6e:	603d      	str	r5, [r7, #0]
10011f70:	f8c7 8004 	str.w	r8, [r7, #4]
10011f74:	f300 80fe 	bgt.w	10012174 <_vfprintf_r+0xcc8>
10011f78:	3708      	adds	r7, #8
10011f7a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10011f7c:	607b      	str	r3, [r7, #4]
10011f7e:	3601      	adds	r6, #1
10011f80:	441c      	add	r4, r3
10011f82:	2e07      	cmp	r6, #7
10011f84:	ab2c      	add	r3, sp, #176	@ 0xb0
10011f86:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10011f8a:	603b      	str	r3, [r7, #0]
10011f8c:	dcaa      	bgt.n	10011ee4 <_vfprintf_r+0xa38>
10011f8e:	f107 0808 	add.w	r8, r7, #8
10011f92:	e45c      	b.n	1001184e <_vfprintf_r+0x3a2>
10011f94:	464c      	mov	r4, r9
10011f96:	2b0a      	cmp	r3, #10
10011f98:	f172 0100 	sbcs.w	r1, r2, #0
10011f9c:	f080 82b9 	bcs.w	10012512 <_vfprintf_r+0x1066>
10011fa0:	3330      	adds	r3, #48	@ 0x30
10011fa2:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10011fa6:	46a1      	mov	r9, r4
10011fa8:	f04f 0b01 	mov.w	fp, #1
10011fac:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10011fb0:	e6ca      	b.n	10011d48 <_vfprintf_r+0x89c>
10011fb2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011fb6:	aa32      	add	r2, sp, #200	@ 0xc8
10011fb8:	9315      	str	r3, [sp, #84]	@ 0x54
10011fba:	f001 f917 	bl	100131ec <__sprint_r>
10011fbe:	2800      	cmp	r0, #0
10011fc0:	f47f af70 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10011fc4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011fc6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10011fc8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011fcc:	e412      	b.n	100117f4 <_vfprintf_r+0x348>
10011fce:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011fd2:	aa32      	add	r2, sp, #200	@ 0xc8
10011fd4:	f001 f90a 	bl	100131ec <__sprint_r>
10011fd8:	2800      	cmp	r0, #0
10011fda:	f47f af63 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10011fde:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011fe0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011fe4:	e418      	b.n	10011818 <_vfprintf_r+0x36c>
10011fe6:	2d10      	cmp	r5, #16
10011fe8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011fea:	f340 8752 	ble.w	10012e92 <_vfprintf_r+0x19e6>
10011fee:	4fbb      	ldr	r7, [pc, #748]	@ (100122dc <_vfprintf_r+0xe30>)
10011ff0:	9715      	str	r7, [sp, #84]	@ 0x54
10011ff2:	e9dd a907 	ldrd	sl, r9, [sp, #28]
10011ff6:	2610      	movs	r6, #16
10011ff8:	e004      	b.n	10012004 <_vfprintf_r+0xb58>
10011ffa:	3d10      	subs	r5, #16
10011ffc:	2d10      	cmp	r5, #16
10011ffe:	f108 0808 	add.w	r8, r8, #8
10012002:	dd16      	ble.n	10012032 <_vfprintf_r+0xb86>
10012004:	3301      	adds	r3, #1
10012006:	3410      	adds	r4, #16
10012008:	2b07      	cmp	r3, #7
1001200a:	e9c8 7600 	strd	r7, r6, [r8]
1001200e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012012:	ddf2      	ble.n	10011ffa <_vfprintf_r+0xb4e>
10012014:	aa32      	add	r2, sp, #200	@ 0xc8
10012016:	4651      	mov	r1, sl
10012018:	4648      	mov	r0, r9
1001201a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001201e:	f001 f8e5 	bl	100131ec <__sprint_r>
10012022:	2800      	cmp	r0, #0
10012024:	f040 82f5 	bne.w	10012612 <_vfprintf_r+0x1166>
10012028:	3d10      	subs	r5, #16
1001202a:	2d10      	cmp	r5, #16
1001202c:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10012030:	dce8      	bgt.n	10012004 <_vfprintf_r+0xb58>
10012032:	3301      	adds	r3, #1
10012034:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10012036:	442c      	add	r4, r5
10012038:	2b07      	cmp	r3, #7
1001203a:	e9c8 2500 	strd	r2, r5, [r8]
1001203e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012042:	f77f ac0d 	ble.w	10011860 <_vfprintf_r+0x3b4>
10012046:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001204a:	aa32      	add	r2, sp, #200	@ 0xc8
1001204c:	f001 f8ce 	bl	100131ec <__sprint_r>
10012050:	2800      	cmp	r0, #0
10012052:	f47f af27 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012056:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012058:	e402      	b.n	10011860 <_vfprintf_r+0x3b4>
1001205a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001205c:	2a00      	cmp	r2, #0
1001205e:	f340 80fd 	ble.w	1001225c <_vfprintf_r+0xdb0>
10012062:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10012066:	429f      	cmp	r7, r3
10012068:	bfa8      	it	ge
1001206a:	461f      	movge	r7, r3
1001206c:	2f00      	cmp	r7, #0
1001206e:	eb05 0b03 	add.w	fp, r5, r3
10012072:	dd0b      	ble.n	1001208c <_vfprintf_r+0xbe0>
10012074:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012076:	3301      	adds	r3, #1
10012078:	443c      	add	r4, r7
1001207a:	2b07      	cmp	r3, #7
1001207c:	e9c8 5700 	strd	r5, r7, [r8]
10012080:	9434      	str	r4, [sp, #208]	@ 0xd0
10012082:	9333      	str	r3, [sp, #204]	@ 0xcc
10012084:	f300 866f 	bgt.w	10012d66 <_vfprintf_r+0x18ba>
10012088:	f108 0808 	add.w	r8, r8, #8
1001208c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001208e:	2f00      	cmp	r7, #0
10012090:	bfa8      	it	ge
10012092:	1bf6      	subge	r6, r6, r7
10012094:	2e00      	cmp	r6, #0
10012096:	f300 8347 	bgt.w	10012728 <_vfprintf_r+0x127c>
1001209a:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
1001209e:	f419 6f80 	tst.w	r9, #1024	@ 0x400
100120a2:	44aa      	add	sl, r5
100120a4:	f040 857a 	bne.w	10012b9c <_vfprintf_r+0x16f0>
100120a8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100120aa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100120ac:	429d      	cmp	r5, r3
100120ae:	db03      	blt.n	100120b8 <_vfprintf_r+0xc0c>
100120b0:	f019 0f01 	tst.w	r9, #1
100120b4:	f000 8404 	beq.w	100128c0 <_vfprintf_r+0x1414>
100120b8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100120ba:	9a19      	ldr	r2, [sp, #100]	@ 0x64
100120bc:	441c      	add	r4, r3
100120be:	e9c8 2300 	strd	r2, r3, [r8]
100120c2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100120c4:	9434      	str	r4, [sp, #208]	@ 0xd0
100120c6:	3301      	adds	r3, #1
100120c8:	2b07      	cmp	r3, #7
100120ca:	9333      	str	r3, [sp, #204]	@ 0xcc
100120cc:	f300 865a 	bgt.w	10012d84 <_vfprintf_r+0x18d8>
100120d0:	f108 0808 	add.w	r8, r8, #8
100120d4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100120d6:	ebab 060a 	sub.w	r6, fp, sl
100120da:	1b5d      	subs	r5, r3, r5
100120dc:	42ae      	cmp	r6, r5
100120de:	bfa8      	it	ge
100120e0:	462e      	movge	r6, r5
100120e2:	2e00      	cmp	r6, #0
100120e4:	dd0d      	ble.n	10012102 <_vfprintf_r+0xc56>
100120e6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100120e8:	f8c8 a000 	str.w	sl, [r8]
100120ec:	3301      	adds	r3, #1
100120ee:	4434      	add	r4, r6
100120f0:	2b07      	cmp	r3, #7
100120f2:	f8c8 6004 	str.w	r6, [r8, #4]
100120f6:	9434      	str	r4, [sp, #208]	@ 0xd0
100120f8:	9333      	str	r3, [sp, #204]	@ 0xcc
100120fa:	f300 8655 	bgt.w	10012da8 <_vfprintf_r+0x18fc>
100120fe:	f108 0808 	add.w	r8, r8, #8
10012102:	2e00      	cmp	r6, #0
10012104:	bfa8      	it	ge
10012106:	1bad      	subge	r5, r5, r6
10012108:	2d00      	cmp	r5, #0
1001210a:	f77f aba0 	ble.w	1001184e <_vfprintf_r+0x3a2>
1001210e:	2d10      	cmp	r5, #16
10012110:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012112:	f340 82da 	ble.w	100126ca <_vfprintf_r+0x121e>
10012116:	4f72      	ldr	r7, [pc, #456]	@ (100122e0 <_vfprintf_r+0xe34>)
10012118:	9715      	str	r7, [sp, #84]	@ 0x54
1001211a:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
1001211e:	2610      	movs	r6, #16
10012120:	e005      	b.n	1001212e <_vfprintf_r+0xc82>
10012122:	f108 0808 	add.w	r8, r8, #8
10012126:	3d10      	subs	r5, #16
10012128:	2d10      	cmp	r5, #16
1001212a:	f340 82d0 	ble.w	100126ce <_vfprintf_r+0x1222>
1001212e:	3301      	adds	r3, #1
10012130:	3410      	adds	r4, #16
10012132:	2b07      	cmp	r3, #7
10012134:	e9c8 7600 	strd	r7, r6, [r8]
10012138:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001213c:	ddf1      	ble.n	10012122 <_vfprintf_r+0xc76>
1001213e:	aa32      	add	r2, sp, #200	@ 0xc8
10012140:	4651      	mov	r1, sl
10012142:	4658      	mov	r0, fp
10012144:	f001 f852 	bl	100131ec <__sprint_r>
10012148:	2800      	cmp	r0, #0
1001214a:	f47f ab07 	bne.w	1001175c <_vfprintf_r+0x2b0>
1001214e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10012152:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012156:	e7e6      	b.n	10012126 <_vfprintf_r+0xc7a>
10012158:	f019 0f01 	tst.w	r9, #1
1001215c:	f47f aedf 	bne.w	10011f1e <_vfprintf_r+0xa72>
10012160:	2301      	movs	r3, #1
10012162:	2e07      	cmp	r6, #7
10012164:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10012168:	f8c8 5000 	str.w	r5, [r8]
1001216c:	f8c8 3004 	str.w	r3, [r8, #4]
10012170:	f77f af03 	ble.w	10011f7a <_vfprintf_r+0xace>
10012174:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012178:	aa32      	add	r2, sp, #200	@ 0xc8
1001217a:	f001 f837 	bl	100131ec <__sprint_r>
1001217e:	2800      	cmp	r0, #0
10012180:	f47f ae90 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012184:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10012188:	af35      	add	r7, sp, #212	@ 0xd4
1001218a:	e6f6      	b.n	10011f7a <_vfprintf_r+0xace>
1001218c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001218e:	2b01      	cmp	r3, #1
10012190:	f77f aef3 	ble.w	10011f7a <_vfprintf_r+0xace>
10012194:	2b11      	cmp	r3, #17
10012196:	4b52      	ldr	r3, [pc, #328]	@ (100122e0 <_vfprintf_r+0xe34>)
10012198:	9315      	str	r3, [sp, #84]	@ 0x54
1001219a:	f340 82b9 	ble.w	10012710 <_vfprintf_r+0x1264>
1001219e:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
100121a2:	e9dd ba07 	ldrd	fp, sl, [sp, #28]
100121a6:	2510      	movs	r5, #16
100121a8:	4699      	mov	r9, r3
100121aa:	e006      	b.n	100121ba <_vfprintf_r+0xd0e>
100121ac:	3708      	adds	r7, #8
100121ae:	f1a8 0810 	sub.w	r8, r8, #16
100121b2:	f1b8 0f10 	cmp.w	r8, #16
100121b6:	f340 82a9 	ble.w	1001270c <_vfprintf_r+0x1260>
100121ba:	3601      	adds	r6, #1
100121bc:	3410      	adds	r4, #16
100121be:	2e07      	cmp	r6, #7
100121c0:	e9c7 9500 	strd	r9, r5, [r7]
100121c4:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100121c8:	ddf0      	ble.n	100121ac <_vfprintf_r+0xd00>
100121ca:	aa32      	add	r2, sp, #200	@ 0xc8
100121cc:	4659      	mov	r1, fp
100121ce:	4650      	mov	r0, sl
100121d0:	f001 f80c 	bl	100131ec <__sprint_r>
100121d4:	2800      	cmp	r0, #0
100121d6:	f040 8202 	bne.w	100125de <_vfprintf_r+0x1132>
100121da:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100121de:	af35      	add	r7, sp, #212	@ 0xd4
100121e0:	e7e5      	b.n	100121ae <_vfprintf_r+0xd02>
100121e2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100121e6:	aa32      	add	r2, sp, #200	@ 0xc8
100121e8:	f001 f800 	bl	100131ec <__sprint_r>
100121ec:	2800      	cmp	r0, #0
100121ee:	f47f ae59 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
100121f2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100121f4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100121f8:	f7ff bb17 	b.w	1001182a <_vfprintf_r+0x37e>
100121fc:	990d      	ldr	r1, [sp, #52]	@ 0x34
100121fe:	f851 3b04 	ldr.w	r3, [r1], #4
10012202:	910d      	str	r1, [sp, #52]	@ 0x34
10012204:	f014 0110 	ands.w	r1, r4, #16
10012208:	d155      	bne.n	100122b6 <_vfprintf_r+0xe0a>
1001220a:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
1001220e:	d04d      	beq.n	100122ac <_vfprintf_r+0xe00>
10012210:	460a      	mov	r2, r1
10012212:	b29b      	uxth	r3, r3
10012214:	2101      	movs	r1, #1
10012216:	e4b7      	b.n	10011b88 <_vfprintf_r+0x6dc>
10012218:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001221a:	f851 3b04 	ldr.w	r3, [r1], #4
1001221e:	910d      	str	r1, [sp, #52]	@ 0x34
10012220:	f019 0110 	ands.w	r1, r9, #16
10012224:	f47f acad 	bne.w	10011b82 <_vfprintf_r+0x6d6>
10012228:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001222c:	f000 82a9 	beq.w	10012782 <_vfprintf_r+0x12d6>
10012230:	b29b      	uxth	r3, r3
10012232:	460a      	mov	r2, r1
10012234:	e4a5      	b.n	10011b82 <_vfprintf_r+0x6d6>
10012236:	9d07      	ldr	r5, [sp, #28]
10012238:	6da8      	ldr	r0, [r5, #88]	@ 0x58
1001223a:	f003 faed 	bl	10015818 <__retarget_lock_acquire_recursive>
1001223e:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
10012242:	f7ff b959 	b.w	100114f8 <_vfprintf_r+0x4c>
10012246:	f019 0f01 	tst.w	r9, #1
1001224a:	f43f ab00 	beq.w	1001184e <_vfprintf_r+0x3a2>
1001224e:	e52b      	b.n	10011ca8 <_vfprintf_r+0x7fc>
10012250:	930d      	str	r3, [sp, #52]	@ 0x34
10012252:	7823      	ldrb	r3, [r4, #0]
10012254:	f7ff b9a2 	b.w	1001159c <_vfprintf_r+0xf0>
10012258:	ad5e      	add	r5, sp, #376	@ 0x178
1001225a:	e575      	b.n	10011d48 <_vfprintf_r+0x89c>
1001225c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001225e:	4921      	ldr	r1, [pc, #132]	@ (100122e4 <_vfprintf_r+0xe38>)
10012260:	f8c8 1000 	str.w	r1, [r8]
10012264:	3301      	adds	r3, #1
10012266:	3401      	adds	r4, #1
10012268:	2101      	movs	r1, #1
1001226a:	2b07      	cmp	r3, #7
1001226c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001226e:	9333      	str	r3, [sp, #204]	@ 0xcc
10012270:	f8c8 1004 	str.w	r1, [r8, #4]
10012274:	f300 8551 	bgt.w	10012d1a <_vfprintf_r+0x186e>
10012278:	f108 0808 	add.w	r8, r8, #8
1001227c:	2a00      	cmp	r2, #0
1001227e:	f47f ae14 	bne.w	10011eaa <_vfprintf_r+0x9fe>
10012282:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10012284:	f009 0301 	and.w	r3, r9, #1
10012288:	4313      	orrs	r3, r2
1001228a:	f43f aae0 	beq.w	1001184e <_vfprintf_r+0x3a2>
1001228e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012290:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10012292:	441c      	add	r4, r3
10012294:	e9c8 2300 	strd	r2, r3, [r8]
10012298:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001229a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001229c:	3301      	adds	r3, #1
1001229e:	2b07      	cmp	r3, #7
100122a0:	9333      	str	r3, [sp, #204]	@ 0xcc
100122a2:	f300 83cd 	bgt.w	10012a40 <_vfprintf_r+0x1594>
100122a6:	f108 0808 	add.w	r8, r8, #8
100122aa:	e60f      	b.n	10011ecc <_vfprintf_r+0xa20>
100122ac:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
100122b0:	bf1c      	itt	ne
100122b2:	b2db      	uxtbne	r3, r3
100122b4:	4602      	movne	r2, r0
100122b6:	2101      	movs	r1, #1
100122b8:	e466      	b.n	10011b88 <_vfprintf_r+0x6dc>
100122ba:	f419 7f00 	tst.w	r9, #512	@ 0x200
100122be:	f040 8307 	bne.w	100128d0 <_vfprintf_r+0x1424>
100122c2:	17da      	asrs	r2, r3, #31
100122c4:	4611      	mov	r1, r2
100122c6:	2900      	cmp	r1, #0
100122c8:	f6bf abdb 	bge.w	10011a82 <_vfprintf_r+0x5d6>
100122cc:	425b      	negs	r3, r3
100122ce:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
100122d2:	464c      	mov	r4, r9
100122d4:	202d      	movs	r0, #45	@ 0x2d
100122d6:	2101      	movs	r1, #1
100122d8:	e457      	b.n	10011b8a <_vfprintf_r+0x6de>
100122da:	bf00      	nop
100122dc:	1001ea6c 	.word	0x1001ea6c
100122e0:	1001ea5c 	.word	0x1001ea5c
100122e4:	1001ea58 	.word	0x1001ea58
100122e8:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
100122ea:	7823      	ldrb	r3, [r4, #0]
100122ec:	2a00      	cmp	r2, #0
100122ee:	f43f a955 	beq.w	1001159c <_vfprintf_r+0xf0>
100122f2:	7812      	ldrb	r2, [r2, #0]
100122f4:	2a00      	cmp	r2, #0
100122f6:	f43f a951 	beq.w	1001159c <_vfprintf_r+0xf0>
100122fa:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
100122fe:	f7ff b94d 	b.w	1001159c <_vfprintf_r+0xf0>
10012302:	f019 0f10 	tst.w	r9, #16
10012306:	f040 81fb 	bne.w	10012700 <_vfprintf_r+0x1254>
1001230a:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001230e:	f040 82e5 	bne.w	100128dc <_vfprintf_r+0x1430>
10012312:	f419 7f00 	tst.w	r9, #512	@ 0x200
10012316:	f000 81f3 	beq.w	10012700 <_vfprintf_r+0x1254>
1001231a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001231c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001231e:	681b      	ldr	r3, [r3, #0]
10012320:	701a      	strb	r2, [r3, #0]
10012322:	e49b      	b.n	10011c5c <_vfprintf_r+0x7b0>
10012324:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10012328:	4602      	mov	r2, r0
1001232a:	460b      	mov	r3, r1
1001232c:	f00b fe72 	bl	1001e014 <__aeabi_dcmpun>
10012330:	2800      	cmp	r0, #0
10012332:	f040 8638 	bne.w	10012fa6 <_vfprintf_r+0x1afa>
10012336:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012338:	2b61      	cmp	r3, #97	@ 0x61
1001233a:	f000 8521 	beq.w	10012d80 <_vfprintf_r+0x18d4>
1001233e:	2b41      	cmp	r3, #65	@ 0x41
10012340:	f000 82e3 	beq.w	1001290a <_vfprintf_r+0x145e>
10012344:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012346:	3301      	adds	r3, #1
10012348:	f000 8617 	beq.w	10012f7a <_vfprintf_r+0x1ace>
1001234c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001234e:	f023 0320 	bic.w	r3, r3, #32
10012352:	2b47      	cmp	r3, #71	@ 0x47
10012354:	d104      	bne.n	10012360 <_vfprintf_r+0xeb4>
10012356:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012358:	2b00      	cmp	r3, #0
1001235a:	bf08      	it	eq
1001235c:	2301      	moveq	r3, #1
1001235e:	9309      	str	r3, [sp, #36]	@ 0x24
10012360:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
10012364:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
10012368:	2a00      	cmp	r2, #0
1001236a:	9015      	str	r0, [sp, #84]	@ 0x54
1001236c:	f8cd 9018 	str.w	r9, [sp, #24]
10012370:	f04f 0300 	mov.w	r3, #0
10012374:	f2c0 84df 	blt.w	10012d36 <_vfprintf_r+0x188a>
10012378:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
1001237c:	931f      	str	r3, [sp, #124]	@ 0x7c
1001237e:	930c      	str	r3, [sp, #48]	@ 0x30
10012380:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012382:	3b41      	subs	r3, #65	@ 0x41
10012384:	2b25      	cmp	r3, #37	@ 0x25
10012386:	f200 8203 	bhi.w	10012790 <_vfprintf_r+0x12e4>
1001238a:	e8df f013 	tbh	[pc, r3, lsl #1]
1001238e:	0374      	.short	0x0374
10012390:	02010201 	.word	0x02010201
10012394:	036d0201 	.word	0x036d0201
10012398:	02010371 	.word	0x02010371
1001239c:	02010201 	.word	0x02010201
100123a0:	02010201 	.word	0x02010201
100123a4:	02010201 	.word	0x02010201
100123a8:	02010201 	.word	0x02010201
100123ac:	02010201 	.word	0x02010201
100123b0:	02010201 	.word	0x02010201
100123b4:	02010201 	.word	0x02010201
100123b8:	02010201 	.word	0x02010201
100123bc:	02010201 	.word	0x02010201
100123c0:	02010201 	.word	0x02010201
100123c4:	02010201 	.word	0x02010201
100123c8:	02010201 	.word	0x02010201
100123cc:	02010201 	.word	0x02010201
100123d0:	02010201 	.word	0x02010201
100123d4:	036d0201 	.word	0x036d0201
100123d8:	0371      	.short	0x0371
100123da:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100123de:	4bc3      	ldr	r3, [pc, #780]	@ (100126ec <_vfprintf_r+0x1240>)
100123e0:	931a      	str	r3, [sp, #104]	@ 0x68
100123e2:	f019 0220 	ands.w	r2, r9, #32
100123e6:	d06a      	beq.n	100124be <_vfprintf_r+0x1012>
100123e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100123ea:	3307      	adds	r3, #7
100123ec:	f023 0307 	bic.w	r3, r3, #7
100123f0:	4619      	mov	r1, r3
100123f2:	685a      	ldr	r2, [r3, #4]
100123f4:	f851 3b08 	ldr.w	r3, [r1], #8
100123f8:	910d      	str	r1, [sp, #52]	@ 0x34
100123fa:	f019 0f01 	tst.w	r9, #1
100123fe:	d00a      	beq.n	10012416 <_vfprintf_r+0xf6a>
10012400:	ea53 0102 	orrs.w	r1, r3, r2
10012404:	d007      	beq.n	10012416 <_vfprintf_r+0xf6a>
10012406:	990e      	ldr	r1, [sp, #56]	@ 0x38
10012408:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
1001240c:	2130      	movs	r1, #48	@ 0x30
1001240e:	f049 0902 	orr.w	r9, r9, #2
10012412:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10012416:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001241a:	2102      	movs	r1, #2
1001241c:	f7ff bbb4 	b.w	10011b88 <_vfprintf_r+0x6dc>
10012420:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012424:	464c      	mov	r4, r9
10012426:	f7ff bbd0 	b.w	10011bca <_vfprintf_r+0x71e>
1001242a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001242e:	f7ff bb9b 	b.w	10011b68 <_vfprintf_r+0x6bc>
10012432:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012436:	4bae      	ldr	r3, [pc, #696]	@ (100126f0 <_vfprintf_r+0x1244>)
10012438:	931a      	str	r3, [sp, #104]	@ 0x68
1001243a:	e7d2      	b.n	100123e2 <_vfprintf_r+0xf36>
1001243c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012440:	aa32      	add	r2, sp, #200	@ 0xc8
10012442:	f000 fed3 	bl	100131ec <__sprint_r>
10012446:	2800      	cmp	r0, #0
10012448:	f47f ad2c 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
1001244c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001244e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012452:	f7ff b9e4 	b.w	1001181e <_vfprintf_r+0x372>
10012456:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001245a:	aa32      	add	r2, sp, #200	@ 0xc8
1001245c:	f000 fec6 	bl	100131ec <__sprint_r>
10012460:	2800      	cmp	r0, #0
10012462:	f47f ad1f 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012466:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012468:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001246c:	e42a      	b.n	10011cc4 <_vfprintf_r+0x818>
1001246e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012470:	950c      	str	r5, [sp, #48]	@ 0x30
10012472:	2b06      	cmp	r3, #6
10012474:	4629      	mov	r1, r5
10012476:	bf28      	it	cs
10012478:	2306      	movcs	r3, #6
1001247a:	9509      	str	r5, [sp, #36]	@ 0x24
1001247c:	462a      	mov	r2, r5
1001247e:	9306      	str	r3, [sp, #24]
10012480:	4d9c      	ldr	r5, [pc, #624]	@ (100126f4 <_vfprintf_r+0x1248>)
10012482:	960d      	str	r6, [sp, #52]	@ 0x34
10012484:	469b      	mov	fp, r3
10012486:	9114      	str	r1, [sp, #80]	@ 0x50
10012488:	9110      	str	r1, [sp, #64]	@ 0x40
1001248a:	9112      	str	r1, [sp, #72]	@ 0x48
1001248c:	f7ff ba40 	b.w	10011910 <_vfprintf_r+0x464>
10012490:	2208      	movs	r2, #8
10012492:	2100      	movs	r1, #0
10012494:	a830      	add	r0, sp, #192	@ 0xc0
10012496:	f002 fedb 	bl	10015250 <memset>
1001249a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001249c:	9808      	ldr	r0, [sp, #32]
1001249e:	681a      	ldr	r2, [r3, #0]
100124a0:	ad45      	add	r5, sp, #276	@ 0x114
100124a2:	ab30      	add	r3, sp, #192	@ 0xc0
100124a4:	4629      	mov	r1, r5
100124a6:	f003 fb17 	bl	10015ad8 <_wcrtomb_r>
100124aa:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
100124ae:	4683      	mov	fp, r0
100124b0:	f000 8544 	beq.w	10012f3c <_vfprintf_r+0x1a90>
100124b4:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
100124b8:	9306      	str	r3, [sp, #24]
100124ba:	f7ff ba93 	b.w	100119e4 <_vfprintf_r+0x538>
100124be:	990d      	ldr	r1, [sp, #52]	@ 0x34
100124c0:	f851 3b04 	ldr.w	r3, [r1], #4
100124c4:	910d      	str	r1, [sp, #52]	@ 0x34
100124c6:	f019 0110 	ands.w	r1, r9, #16
100124ca:	d196      	bne.n	100123fa <_vfprintf_r+0xf4e>
100124cc:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
100124d0:	f000 8151 	beq.w	10012776 <_vfprintf_r+0x12ca>
100124d4:	b29b      	uxth	r3, r3
100124d6:	460a      	mov	r2, r1
100124d8:	e78f      	b.n	100123fa <_vfprintf_r+0xf4e>
100124da:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
100124de:	ad5e      	add	r5, sp, #376	@ 0x178
100124e0:	e432      	b.n	10011d48 <_vfprintf_r+0x89c>
100124e2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100124e6:	aa32      	add	r2, sp, #200	@ 0xc8
100124e8:	f000 fe80 	bl	100131ec <__sprint_r>
100124ec:	2800      	cmp	r0, #0
100124ee:	f47f acd9 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
100124f2:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100124f6:	af35      	add	r7, sp, #212	@ 0xd4
100124f8:	e527      	b.n	10011f4a <_vfprintf_r+0xa9e>
100124fa:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100124fe:	aa32      	add	r2, sp, #200	@ 0xc8
10012500:	f000 fe74 	bl	100131ec <__sprint_r>
10012504:	2800      	cmp	r0, #0
10012506:	f47f accd 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
1001250a:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001250e:	af35      	add	r7, sp, #212	@ 0xd4
10012510:	e50f      	b.n	10011f32 <_vfprintf_r+0xa86>
10012512:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10012516:	2100      	movs	r1, #0
10012518:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
1001251c:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 100126f8 <_vfprintf_r+0x124c>
10012520:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10012524:	9406      	str	r4, [sp, #24]
10012526:	ad5e      	add	r5, sp, #376	@ 0x178
10012528:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
1001252c:	2705      	movs	r7, #5
1001252e:	468c      	mov	ip, r1
10012530:	465e      	mov	r6, fp
10012532:	e005      	b.n	10012540 <_vfprintf_r+0x1094>
10012534:	2b0a      	cmp	r3, #10
10012536:	f172 0200 	sbcs.w	r2, r2, #0
1001253a:	d333      	bcc.n	100125a4 <_vfprintf_r+0x10f8>
1001253c:	465b      	mov	r3, fp
1001253e:	4622      	mov	r2, r4
10012540:	1899      	adds	r1, r3, r2
10012542:	f141 0100 	adc.w	r1, r1, #0
10012546:	fba9 0401 	umull	r0, r4, r9, r1
1001254a:	f024 0003 	bic.w	r0, r4, #3
1001254e:	eb00 0094 	add.w	r0, r0, r4, lsr #2
10012552:	1a09      	subs	r1, r1, r0
10012554:	1a58      	subs	r0, r3, r1
10012556:	f162 0e00 	sbc.w	lr, r2, #0
1001255a:	fb0a f400 	mul.w	r4, sl, r0
1001255e:	fba0 b009 	umull	fp, r0, r0, r9
10012562:	fb09 440e 	mla	r4, r9, lr, r4
10012566:	f00b 0e01 	and.w	lr, fp, #1
1001256a:	4404      	add	r4, r0
1001256c:	fbae 0e07 	umull	r0, lr, lr, r7
10012570:	1840      	adds	r0, r0, r1
10012572:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
10012576:	3030      	adds	r0, #48	@ 0x30
10012578:	f805 0c01 	strb.w	r0, [r5, #-1]
1001257c:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
10012580:	f10c 0c01 	add.w	ip, ip, #1
10012584:	3d01      	subs	r5, #1
10012586:	0864      	lsrs	r4, r4, #1
10012588:	2e00      	cmp	r6, #0
1001258a:	d0d3      	beq.n	10012534 <_vfprintf_r+0x1088>
1001258c:	f898 1000 	ldrb.w	r1, [r8]
10012590:	458c      	cmp	ip, r1
10012592:	d1cf      	bne.n	10012534 <_vfprintf_r+0x1088>
10012594:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10012598:	d0cc      	beq.n	10012534 <_vfprintf_r+0x1088>
1001259a:	2b0a      	cmp	r3, #10
1001259c:	f172 0200 	sbcs.w	r2, r2, #0
100125a0:	f080 82c5 	bcs.w	10012b2e <_vfprintf_r+0x1682>
100125a4:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
100125a8:	9c06      	ldr	r4, [sp, #24]
100125aa:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
100125ae:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
100125b2:	f7ff bbc5 	b.w	10011d40 <_vfprintf_r+0x894>
100125b6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100125ba:	aa32      	add	r2, sp, #200	@ 0xc8
100125bc:	9315      	str	r3, [sp, #84]	@ 0x54
100125be:	f000 fe15 	bl	100131ec <__sprint_r>
100125c2:	2800      	cmp	r0, #0
100125c4:	f47f ac6e 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
100125c8:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100125cc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100125ce:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100125d0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100125d4:	f7ff b8fc 	b.w	100117d0 <_vfprintf_r+0x324>
100125d8:	46a3      	mov	fp, r4
100125da:	f7ff b8bf 	b.w	1001175c <_vfprintf_r+0x2b0>
100125de:	46d3      	mov	fp, sl
100125e0:	f7ff b8bc 	b.w	1001175c <_vfprintf_r+0x2b0>
100125e4:	4658      	mov	r0, fp
100125e6:	f002 fb1b 	bl	10014c20 <__sinit>
100125ea:	f7fe bf7c 	b.w	100114e6 <_vfprintf_r+0x3a>
100125ee:	2901      	cmp	r1, #1
100125f0:	464c      	mov	r4, r9
100125f2:	f47f ab95 	bne.w	10011d20 <_vfprintf_r+0x874>
100125f6:	e4d3      	b.n	10011fa0 <_vfprintf_r+0xaf4>
100125f8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100125fc:	aa32      	add	r2, sp, #200	@ 0xc8
100125fe:	f000 fdf5 	bl	100131ec <__sprint_r>
10012602:	2800      	cmp	r0, #0
10012604:	f47f ac4e 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012608:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001260a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001260e:	f7ff bb46 	b.w	10011c9e <_vfprintf_r+0x7f2>
10012612:	46cb      	mov	fp, r9
10012614:	f7ff b8a2 	b.w	1001175c <_vfprintf_r+0x2b0>
10012618:	af30      	add	r7, sp, #192	@ 0xc0
1001261a:	2208      	movs	r2, #8
1001261c:	2100      	movs	r1, #0
1001261e:	4638      	mov	r0, r7
10012620:	952b      	str	r5, [sp, #172]	@ 0xac
10012622:	f002 fe15 	bl	10015250 <memset>
10012626:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001262a:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
1001262e:	f000 8270 	beq.w	10012b12 <_vfprintf_r+0x1666>
10012632:	2400      	movs	r4, #0
10012634:	f8cd 9018 	str.w	r9, [sp, #24]
10012638:	46a3      	mov	fp, r4
1001263a:	f8dd 9020 	ldr.w	r9, [sp, #32]
1001263e:	e00c      	b.n	1001265a <_vfprintf_r+0x11ae>
10012640:	a945      	add	r1, sp, #276	@ 0x114
10012642:	4648      	mov	r0, r9
10012644:	f003 fa48 	bl	10015ad8 <_wcrtomb_r>
10012648:	1c41      	adds	r1, r0, #1
1001264a:	4458      	add	r0, fp
1001264c:	f000 8476 	beq.w	10012f3c <_vfprintf_r+0x1a90>
10012650:	4550      	cmp	r0, sl
10012652:	dc08      	bgt.n	10012666 <_vfprintf_r+0x11ba>
10012654:	f000 84c3 	beq.w	10012fde <_vfprintf_r+0x1b32>
10012658:	4683      	mov	fp, r0
1001265a:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
1001265c:	5912      	ldr	r2, [r2, r4]
1001265e:	463b      	mov	r3, r7
10012660:	3404      	adds	r4, #4
10012662:	2a00      	cmp	r2, #0
10012664:	d1ec      	bne.n	10012640 <_vfprintf_r+0x1194>
10012666:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001266a:	f1bb 0f00 	cmp.w	fp, #0
1001266e:	f000 8343 	beq.w	10012cf8 <_vfprintf_r+0x184c>
10012672:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
10012676:	f340 83fa 	ble.w	10012e6e <_vfprintf_r+0x19c2>
1001267a:	9808      	ldr	r0, [sp, #32]
1001267c:	f10b 0101 	add.w	r1, fp, #1
10012680:	f7fe fc46 	bl	10010f10 <_malloc_r>
10012684:	4605      	mov	r5, r0
10012686:	2800      	cmp	r0, #0
10012688:	f000 8458 	beq.w	10012f3c <_vfprintf_r+0x1a90>
1001268c:	900c      	str	r0, [sp, #48]	@ 0x30
1001268e:	2208      	movs	r2, #8
10012690:	2100      	movs	r1, #0
10012692:	4638      	mov	r0, r7
10012694:	f002 fddc 	bl	10015250 <memset>
10012698:	9808      	ldr	r0, [sp, #32]
1001269a:	9700      	str	r7, [sp, #0]
1001269c:	465b      	mov	r3, fp
1001269e:	aa2b      	add	r2, sp, #172	@ 0xac
100126a0:	4629      	mov	r1, r5
100126a2:	f003 fa3f 	bl	10015b24 <_wcsrtombs_r>
100126a6:	4583      	cmp	fp, r0
100126a8:	f040 8519 	bne.w	100130de <_vfprintf_r+0x1c32>
100126ac:	2300      	movs	r3, #0
100126ae:	f805 300b 	strb.w	r3, [r5, fp]
100126b2:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
100126b6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100126ba:	960d      	str	r6, [sp, #52]	@ 0x34
100126bc:	9309      	str	r3, [sp, #36]	@ 0x24
100126be:	9106      	str	r1, [sp, #24]
100126c0:	9314      	str	r3, [sp, #80]	@ 0x50
100126c2:	9310      	str	r3, [sp, #64]	@ 0x40
100126c4:	9312      	str	r3, [sp, #72]	@ 0x48
100126c6:	f7ff b923 	b.w	10011910 <_vfprintf_r+0x464>
100126ca:	4a0c      	ldr	r2, [pc, #48]	@ (100126fc <_vfprintf_r+0x1250>)
100126cc:	9215      	str	r2, [sp, #84]	@ 0x54
100126ce:	3301      	adds	r3, #1
100126d0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100126d2:	f8c8 2000 	str.w	r2, [r8]
100126d6:	442c      	add	r4, r5
100126d8:	2b07      	cmp	r3, #7
100126da:	f8c8 5004 	str.w	r5, [r8, #4]
100126de:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100126e2:	f77f a8b2 	ble.w	1001184a <_vfprintf_r+0x39e>
100126e6:	f7ff bbfd 	b.w	10011ee4 <_vfprintf_r+0xa38>
100126ea:	bf00      	nop
100126ec:	1001ea3c 	.word	0x1001ea3c
100126f0:	1001e6a8 	.word	0x1001e6a8
100126f4:	1001ea50 	.word	0x1001ea50
100126f8:	cccccccd 	.word	0xcccccccd
100126fc:	1001ea5c 	.word	0x1001ea5c
10012700:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012702:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10012704:	681b      	ldr	r3, [r3, #0]
10012706:	601a      	str	r2, [r3, #0]
10012708:	f7ff baa8 	b.w	10011c5c <_vfprintf_r+0x7b0>
1001270c:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
10012710:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10012712:	603b      	str	r3, [r7, #0]
10012714:	3601      	adds	r6, #1
10012716:	4444      	add	r4, r8
10012718:	2e07      	cmp	r6, #7
1001271a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001271e:	f8c7 8004 	str.w	r8, [r7, #4]
10012722:	f77f ac29 	ble.w	10011f78 <_vfprintf_r+0xacc>
10012726:	e525      	b.n	10012174 <_vfprintf_r+0xcc8>
10012728:	2e10      	cmp	r6, #16
1001272a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001272c:	f340 84ad 	ble.w	1001308a <_vfprintf_r+0x1bde>
10012730:	4898      	ldr	r0, [pc, #608]	@ (10012994 <_vfprintf_r+0x14e8>)
10012732:	9015      	str	r0, [sp, #84]	@ 0x54
10012734:	4642      	mov	r2, r8
10012736:	4621      	mov	r1, r4
10012738:	46a8      	mov	r8, r5
1001273a:	e9dd 4a07 	ldrd	r4, sl, [sp, #28]
1001273e:	2710      	movs	r7, #16
10012740:	4605      	mov	r5, r0
10012742:	e004      	b.n	1001274e <_vfprintf_r+0x12a2>
10012744:	3208      	adds	r2, #8
10012746:	3e10      	subs	r6, #16
10012748:	2e10      	cmp	r6, #16
1001274a:	f340 81ca 	ble.w	10012ae2 <_vfprintf_r+0x1636>
1001274e:	3301      	adds	r3, #1
10012750:	3110      	adds	r1, #16
10012752:	2b07      	cmp	r3, #7
10012754:	e9c2 5700 	strd	r5, r7, [r2]
10012758:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
1001275c:	ddf2      	ble.n	10012744 <_vfprintf_r+0x1298>
1001275e:	aa32      	add	r2, sp, #200	@ 0xc8
10012760:	4621      	mov	r1, r4
10012762:	4650      	mov	r0, sl
10012764:	f000 fd42 	bl	100131ec <__sprint_r>
10012768:	2800      	cmp	r0, #0
1001276a:	f47f af38 	bne.w	100125de <_vfprintf_r+0x1132>
1001276e:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
10012772:	aa35      	add	r2, sp, #212	@ 0xd4
10012774:	e7e7      	b.n	10012746 <_vfprintf_r+0x129a>
10012776:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001277a:	bf1c      	itt	ne
1001277c:	b2db      	uxtbne	r3, r3
1001277e:	4602      	movne	r2, r0
10012780:	e63b      	b.n	100123fa <_vfprintf_r+0xf4e>
10012782:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10012786:	bf1c      	itt	ne
10012788:	b2db      	uxtbne	r3, r3
1001278a:	4602      	movne	r2, r0
1001278c:	f7ff b9f9 	b.w	10011b82 <_vfprintf_r+0x6d6>
10012790:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10012792:	2302      	movs	r3, #2
10012794:	e9cd 3600 	strd	r3, r6, [sp]
10012798:	ab30      	add	r3, sp, #192	@ 0xc0
1001279a:	9304      	str	r3, [sp, #16]
1001279c:	ab2b      	add	r3, sp, #172	@ 0xac
1001279e:	9303      	str	r3, [sp, #12]
100127a0:	ab29      	add	r3, sp, #164	@ 0xa4
100127a2:	9302      	str	r3, [sp, #8]
100127a4:	9808      	ldr	r0, [sp, #32]
100127a6:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
100127aa:	f003 faa9 	bl	10015d00 <_dtoa_r>
100127ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100127b0:	2b67      	cmp	r3, #103	@ 0x67
100127b2:	4605      	mov	r5, r0
100127b4:	f000 8177 	beq.w	10012aa6 <_vfprintf_r+0x15fa>
100127b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100127ba:	2b47      	cmp	r3, #71	@ 0x47
100127bc:	f000 8173 	beq.w	10012aa6 <_vfprintf_r+0x15fa>
100127c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100127c2:	f023 0720 	bic.w	r7, r3, #32
100127c6:	2f46      	cmp	r7, #70	@ 0x46
100127c8:	eb00 0406 	add.w	r4, r0, r6
100127cc:	d105      	bne.n	100127da <_vfprintf_r+0x132e>
100127ce:	7803      	ldrb	r3, [r0, #0]
100127d0:	2b30      	cmp	r3, #48	@ 0x30
100127d2:	f000 83db 	beq.w	10012f8c <_vfprintf_r+0x1ae0>
100127d6:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
100127d8:	4434      	add	r4, r6
100127da:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100127de:	2200      	movs	r2, #0
100127e0:	2300      	movs	r3, #0
100127e2:	f00b fbe5 	bl	1001dfb0 <__aeabi_dcmpeq>
100127e6:	2800      	cmp	r0, #0
100127e8:	f000 81cc 	beq.w	10012b84 <_vfprintf_r+0x16d8>
100127ec:	4623      	mov	r3, r4
100127ee:	1b5b      	subs	r3, r3, r5
100127f0:	9313      	str	r3, [sp, #76]	@ 0x4c
100127f2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100127f4:	9212      	str	r2, [sp, #72]	@ 0x48
100127f6:	2f47      	cmp	r7, #71	@ 0x47
100127f8:	f000 815d 	beq.w	10012ab6 <_vfprintf_r+0x160a>
100127fc:	2f46      	cmp	r7, #70	@ 0x46
100127fe:	f000 82e3 	beq.w	10012dc8 <_vfprintf_r+0x191c>
10012802:	990e      	ldr	r1, [sp, #56]	@ 0x38
10012804:	1e53      	subs	r3, r2, #1
10012806:	2961      	cmp	r1, #97	@ 0x61
10012808:	9329      	str	r3, [sp, #164]	@ 0xa4
1001280a:	f000 8441 	beq.w	10013090 <_vfprintf_r+0x1be4>
1001280e:	2941      	cmp	r1, #65	@ 0x41
10012810:	f040 815c 	bne.w	10012acc <_vfprintf_r+0x1620>
10012814:	2150      	movs	r1, #80	@ 0x50
10012816:	2001      	movs	r0, #1
10012818:	2b00      	cmp	r3, #0
1001281a:	bfb6      	itet	lt
1001281c:	f1c2 0301 	rsblt	r3, r2, #1
10012820:	222b      	movge	r2, #43	@ 0x2b
10012822:	222d      	movlt	r2, #45	@ 0x2d
10012824:	2b09      	cmp	r3, #9
10012826:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
1001282a:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001282e:	f340 8377 	ble.w	10012f20 <_vfprintf_r+0x1a74>
10012832:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
10012836:	4e58      	ldr	r6, [pc, #352]	@ (10012998 <_vfprintf_r+0x14ec>)
10012838:	4622      	mov	r2, r4
1001283a:	4610      	mov	r0, r2
1001283c:	fba6 1203 	umull	r1, r2, r6, r3
10012840:	08d2      	lsrs	r2, r2, #3
10012842:	eb02 0182 	add.w	r1, r2, r2, lsl #2
10012846:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
1001284a:	3130      	adds	r1, #48	@ 0x30
1001284c:	f800 1c01 	strb.w	r1, [r0, #-1]
10012850:	4619      	mov	r1, r3
10012852:	2963      	cmp	r1, #99	@ 0x63
10012854:	4613      	mov	r3, r2
10012856:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
1001285a:	dcee      	bgt.n	1001283a <_vfprintf_r+0x138e>
1001285c:	3330      	adds	r3, #48	@ 0x30
1001285e:	f802 3c01 	strb.w	r3, [r2, #-1]
10012862:	1e83      	subs	r3, r0, #2
10012864:	42a3      	cmp	r3, r4
10012866:	f080 840c 	bcs.w	10013082 <_vfprintf_r+0x1bd6>
1001286a:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
1001286e:	f813 1b01 	ldrb.w	r1, [r3], #1
10012872:	f802 1f01 	strb.w	r1, [r2, #1]!
10012876:	42a3      	cmp	r3, r4
10012878:	d1f9      	bne.n	1001286e <_vfprintf_r+0x13c2>
1001287a:	ab5e      	add	r3, sp, #376	@ 0x178
1001287c:	1a18      	subs	r0, r3, r0
1001287e:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
10012882:	931c      	str	r3, [sp, #112]	@ 0x70
10012884:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012886:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10012888:	2b01      	cmp	r3, #1
1001288a:	eb03 0b02 	add.w	fp, r3, r2
1001288e:	f340 8378 	ble.w	10012f82 <_vfprintf_r+0x1ad6>
10012892:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012894:	449b      	add	fp, r3
10012896:	9b06      	ldr	r3, [sp, #24]
10012898:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1001289c:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
100128a0:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
100128a4:	2300      	movs	r3, #0
100128a6:	9314      	str	r3, [sp, #80]	@ 0x50
100128a8:	9206      	str	r2, [sp, #24]
100128aa:	9310      	str	r3, [sp, #64]	@ 0x40
100128ac:	9312      	str	r3, [sp, #72]	@ 0x48
100128ae:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
100128b0:	2b00      	cmp	r3, #0
100128b2:	f040 810f 	bne.w	10012ad4 <_vfprintf_r+0x1628>
100128b6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100128ba:	9309      	str	r3, [sp, #36]	@ 0x24
100128bc:	f7ff b828 	b.w	10011910 <_vfprintf_r+0x464>
100128c0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100128c2:	ebab 060a 	sub.w	r6, fp, sl
100128c6:	1b5d      	subs	r5, r3, r5
100128c8:	42ae      	cmp	r6, r5
100128ca:	bfa8      	it	ge
100128cc:	462e      	movge	r6, r5
100128ce:	e418      	b.n	10012102 <_vfprintf_r+0xc56>
100128d0:	f343 12c0 	sbfx	r2, r3, #7, #1
100128d4:	4611      	mov	r1, r2
100128d6:	b25b      	sxtb	r3, r3
100128d8:	f7ff b8d0 	b.w	10011a7c <_vfprintf_r+0x5d0>
100128dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100128de:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100128e0:	681b      	ldr	r3, [r3, #0]
100128e2:	801a      	strh	r2, [r3, #0]
100128e4:	f7ff b9ba 	b.w	10011c5c <_vfprintf_r+0x7b0>
100128e8:	9907      	ldr	r1, [sp, #28]
100128ea:	aa32      	add	r2, sp, #200	@ 0xc8
100128ec:	4658      	mov	r0, fp
100128ee:	f000 fc7d 	bl	100131ec <__sprint_r>
100128f2:	2800      	cmp	r0, #0
100128f4:	f43e af22 	beq.w	1001173c <_vfprintf_r+0x290>
100128f8:	f7fe bf36 	b.w	10011768 <_vfprintf_r+0x2bc>
100128fc:	4628      	mov	r0, r5
100128fe:	960d      	str	r6, [sp, #52]	@ 0x34
10012900:	f003 f87e 	bl	10015a00 <strlen>
10012904:	4683      	mov	fp, r0
10012906:	f7ff b89c 	b.w	10011a42 <_vfprintf_r+0x596>
1001290a:	2358      	movs	r3, #88	@ 0x58
1001290c:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
10012910:	2330      	movs	r3, #48	@ 0x30
10012912:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
10012916:	f049 0302 	orr.w	r3, r9, #2
1001291a:	9306      	str	r3, [sp, #24]
1001291c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001291e:	2b63      	cmp	r3, #99	@ 0x63
10012920:	f300 82f6 	bgt.w	10012f10 <_vfprintf_r+0x1a64>
10012924:	2300      	movs	r3, #0
10012926:	930c      	str	r3, [sp, #48]	@ 0x30
10012928:	ad45      	add	r5, sp, #276	@ 0x114
1001292a:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
1001292e:	9315      	str	r3, [sp, #84]	@ 0x54
10012930:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10012932:	2b00      	cmp	r3, #0
10012934:	f2c0 8200 	blt.w	10012d38 <_vfprintf_r+0x188c>
10012938:	2300      	movs	r3, #0
1001293a:	931f      	str	r3, [sp, #124]	@ 0x7c
1001293c:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
10012940:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
10012944:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012946:	2b61      	cmp	r3, #97	@ 0x61
10012948:	f47f ad1a 	bne.w	10012380 <_vfprintf_r+0xed4>
1001294c:	aa29      	add	r2, sp, #164	@ 0xa4
1001294e:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10012952:	f003 f8f5 	bl	10015b40 <frexp>
10012956:	2200      	movs	r2, #0
10012958:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001295c:	f00b f8c0 	bl	1001dae0 <__aeabi_dmul>
10012960:	4602      	mov	r2, r0
10012962:	460b      	mov	r3, r1
10012964:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10012968:	2200      	movs	r2, #0
1001296a:	2300      	movs	r3, #0
1001296c:	f00b fb20 	bl	1001dfb0 <__aeabi_dcmpeq>
10012970:	2800      	cmp	r0, #0
10012972:	f040 82f8 	bne.w	10012f66 <_vfprintf_r+0x1aba>
10012976:	4b09      	ldr	r3, [pc, #36]	@ (1001299c <_vfprintf_r+0x14f0>)
10012978:	9312      	str	r3, [sp, #72]	@ 0x48
1001297a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001297c:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
10012980:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
10012984:	462e      	mov	r6, r5
10012986:	9514      	str	r5, [sp, #80]	@ 0x50
10012988:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001298c:	464d      	mov	r5, r9
1001298e:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10012992:	e00b      	b.n	100129ac <_vfprintf_r+0x1500>
10012994:	1001ea5c 	.word	0x1001ea5c
10012998:	cccccccd 	.word	0xcccccccd
1001299c:	1001e6a8 	.word	0x1001e6a8
100129a0:	2200      	movs	r2, #0
100129a2:	2300      	movs	r3, #0
100129a4:	f00b fb04 	bl	1001dfb0 <__aeabi_dcmpeq>
100129a8:	b9f0      	cbnz	r0, 100129e8 <_vfprintf_r+0x153c>
100129aa:	463d      	mov	r5, r7
100129ac:	4ba9      	ldr	r3, [pc, #676]	@ (10012c54 <_vfprintf_r+0x17a8>)
100129ae:	2200      	movs	r2, #0
100129b0:	4640      	mov	r0, r8
100129b2:	4649      	mov	r1, r9
100129b4:	f00b f894 	bl	1001dae0 <__aeabi_dmul>
100129b8:	4689      	mov	r9, r1
100129ba:	4680      	mov	r8, r0
100129bc:	f00b fb40 	bl	1001e040 <__aeabi_d2iz>
100129c0:	4604      	mov	r4, r0
100129c2:	f00b f823 	bl	1001da0c <__aeabi_i2d>
100129c6:	4602      	mov	r2, r0
100129c8:	460b      	mov	r3, r1
100129ca:	4640      	mov	r0, r8
100129cc:	4649      	mov	r1, r9
100129ce:	f00a fecf 	bl	1001d770 <__aeabi_dsub>
100129d2:	f81b 3004 	ldrb.w	r3, [fp, r4]
100129d6:	1c6a      	adds	r2, r5, #1
100129d8:	46b2      	mov	sl, r6
100129da:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
100129de:	f806 3b01 	strb.w	r3, [r6], #1
100129e2:	4680      	mov	r8, r0
100129e4:	4689      	mov	r9, r1
100129e6:	d1db      	bne.n	100129a0 <_vfprintf_r+0x14f4>
100129e8:	46cb      	mov	fp, r9
100129ea:	4657      	mov	r7, sl
100129ec:	46c2      	mov	sl, r8
100129ee:	4b9a      	ldr	r3, [pc, #616]	@ (10012c58 <_vfprintf_r+0x17ac>)
100129f0:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
100129f4:	2200      	movs	r2, #0
100129f6:	4650      	mov	r0, sl
100129f8:	4659      	mov	r1, fp
100129fa:	46a9      	mov	r9, r5
100129fc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
100129fe:	f00b faff 	bl	1001e000 <__aeabi_dcmpgt>
10012a02:	2800      	cmp	r0, #0
10012a04:	f040 8264 	bne.w	10012ed0 <_vfprintf_r+0x1a24>
10012a08:	4b93      	ldr	r3, [pc, #588]	@ (10012c58 <_vfprintf_r+0x17ac>)
10012a0a:	4650      	mov	r0, sl
10012a0c:	4659      	mov	r1, fp
10012a0e:	2200      	movs	r2, #0
10012a10:	f00b face 	bl	1001dfb0 <__aeabi_dcmpeq>
10012a14:	b110      	cbz	r0, 10012a1c <_vfprintf_r+0x1570>
10012a16:	07e3      	lsls	r3, r4, #31
10012a18:	f100 825a 	bmi.w	10012ed0 <_vfprintf_r+0x1a24>
10012a1c:	f1b9 0f00 	cmp.w	r9, #0
10012a20:	f2c0 8270 	blt.w	10012f04 <_vfprintf_r+0x1a58>
10012a24:	f109 0301 	add.w	r3, r9, #1
10012a28:	4433      	add	r3, r6
10012a2a:	2230      	movs	r2, #48	@ 0x30
10012a2c:	f806 2b01 	strb.w	r2, [r6], #1
10012a30:	42b3      	cmp	r3, r6
10012a32:	d1fb      	bne.n	10012a2c <_vfprintf_r+0x1580>
10012a34:	1b5b      	subs	r3, r3, r5
10012a36:	9313      	str	r3, [sp, #76]	@ 0x4c
10012a38:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012a3a:	f023 0720 	bic.w	r7, r3, #32
10012a3e:	e6d8      	b.n	100127f2 <_vfprintf_r+0x1346>
10012a40:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012a44:	aa32      	add	r2, sp, #200	@ 0xc8
10012a46:	f000 fbd1 	bl	100131ec <__sprint_r>
10012a4a:	2800      	cmp	r0, #0
10012a4c:	f47f aa2a 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012a50:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10012a54:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10012a56:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012a5a:	f7ff ba34 	b.w	10011ec6 <_vfprintf_r+0xa1a>
10012a5e:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10012a60:	f002 fedc 	bl	1001581c <__retarget_lock_release_recursive>
10012a64:	f7fe be3c 	b.w	100116e0 <_vfprintf_r+0x234>
10012a68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012a6a:	1c5e      	adds	r6, r3, #1
10012a6c:	2302      	movs	r3, #2
10012a6e:	e691      	b.n	10012794 <_vfprintf_r+0x12e8>
10012a70:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10012a72:	2303      	movs	r3, #3
10012a74:	e68e      	b.n	10012794 <_vfprintf_r+0x12e8>
10012a76:	aa29      	add	r2, sp, #164	@ 0xa4
10012a78:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10012a7c:	f003 f860 	bl	10015b40 <frexp>
10012a80:	2200      	movs	r2, #0
10012a82:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10012a86:	f00b f82b 	bl	1001dae0 <__aeabi_dmul>
10012a8a:	4602      	mov	r2, r0
10012a8c:	460b      	mov	r3, r1
10012a8e:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10012a92:	2200      	movs	r2, #0
10012a94:	2300      	movs	r3, #0
10012a96:	f00b fa8b 	bl	1001dfb0 <__aeabi_dcmpeq>
10012a9a:	2800      	cmp	r0, #0
10012a9c:	f040 8263 	bne.w	10012f66 <_vfprintf_r+0x1aba>
10012aa0:	4b6e      	ldr	r3, [pc, #440]	@ (10012c5c <_vfprintf_r+0x17b0>)
10012aa2:	9312      	str	r3, [sp, #72]	@ 0x48
10012aa4:	e769      	b.n	1001297a <_vfprintf_r+0x14ce>
10012aa6:	9b06      	ldr	r3, [sp, #24]
10012aa8:	07df      	lsls	r7, r3, #31
10012aaa:	f100 81e4 	bmi.w	10012e76 <_vfprintf_r+0x19ca>
10012aae:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012ab0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10012ab2:	1b5b      	subs	r3, r3, r5
10012ab4:	9313      	str	r3, [sp, #76]	@ 0x4c
10012ab6:	1cd3      	adds	r3, r2, #3
10012ab8:	9212      	str	r2, [sp, #72]	@ 0x48
10012aba:	db02      	blt.n	10012ac2 <_vfprintf_r+0x1616>
10012abc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012abe:	4293      	cmp	r3, r2
10012ac0:	da44      	bge.n	10012b4c <_vfprintf_r+0x16a0>
10012ac2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012ac4:	3b02      	subs	r3, #2
10012ac6:	930e      	str	r3, [sp, #56]	@ 0x38
10012ac8:	1e53      	subs	r3, r2, #1
10012aca:	9329      	str	r3, [sp, #164]	@ 0xa4
10012acc:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
10012ad0:	2000      	movs	r0, #0
10012ad2:	e6a1      	b.n	10012818 <_vfprintf_r+0x136c>
10012ad4:	222d      	movs	r2, #45	@ 0x2d
10012ad6:	2300      	movs	r3, #0
10012ad8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10012adc:	9309      	str	r3, [sp, #36]	@ 0x24
10012ade:	f7fe bf1a 	b.w	10011916 <_vfprintf_r+0x46a>
10012ae2:	4645      	mov	r5, r8
10012ae4:	460c      	mov	r4, r1
10012ae6:	4690      	mov	r8, r2
10012ae8:	3301      	adds	r3, #1
10012aea:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10012aec:	f8c8 2000 	str.w	r2, [r8]
10012af0:	4434      	add	r4, r6
10012af2:	2b07      	cmp	r3, #7
10012af4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012af8:	f8c8 6004 	str.w	r6, [r8, #4]
10012afc:	f300 8226 	bgt.w	10012f4c <_vfprintf_r+0x1aa0>
10012b00:	f108 0808 	add.w	r8, r8, #8
10012b04:	f7ff bac9 	b.w	1001209a <_vfprintf_r+0xbee>
10012b08:	222d      	movs	r2, #45	@ 0x2d
10012b0a:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10012b0e:	f7fe beee 	b.w	100118ee <_vfprintf_r+0x442>
10012b12:	2300      	movs	r3, #0
10012b14:	9808      	ldr	r0, [sp, #32]
10012b16:	9700      	str	r7, [sp, #0]
10012b18:	aa2b      	add	r2, sp, #172	@ 0xac
10012b1a:	4619      	mov	r1, r3
10012b1c:	f003 f802 	bl	10015b24 <_wcsrtombs_r>
10012b20:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10012b24:	4683      	mov	fp, r0
10012b26:	f000 8209 	beq.w	10012f3c <_vfprintf_r+0x1a90>
10012b2a:	952b      	str	r5, [sp, #172]	@ 0xac
10012b2c:	e59d      	b.n	1001266a <_vfprintf_r+0x11be>
10012b2e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10012b30:	991d      	ldr	r1, [sp, #116]	@ 0x74
10012b32:	1aed      	subs	r5, r5, r3
10012b34:	461a      	mov	r2, r3
10012b36:	4628      	mov	r0, r5
10012b38:	f002 fbfe 	bl	10015338 <strncpy>
10012b3c:	f898 3001 	ldrb.w	r3, [r8, #1]
10012b40:	b10b      	cbz	r3, 10012b46 <_vfprintf_r+0x169a>
10012b42:	f108 0801 	add.w	r8, r8, #1
10012b46:	f04f 0c00 	mov.w	ip, #0
10012b4a:	e4f7      	b.n	1001253c <_vfprintf_r+0x1090>
10012b4c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012b4e:	4293      	cmp	r3, r2
10012b50:	f300 8194 	bgt.w	10012e7c <_vfprintf_r+0x19d0>
10012b54:	9b06      	ldr	r3, [sp, #24]
10012b56:	07dc      	lsls	r4, r3, #31
10012b58:	f140 824a 	bpl.w	10012ff0 <_vfprintf_r+0x1b44>
10012b5c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012b5e:	eb02 0b03 	add.w	fp, r2, r3
10012b62:	9b06      	ldr	r3, [sp, #24]
10012b64:	0558      	lsls	r0, r3, #21
10012b66:	d502      	bpl.n	10012b6e <_vfprintf_r+0x16c2>
10012b68:	2a00      	cmp	r2, #0
10012b6a:	f300 824a 	bgt.w	10013002 <_vfprintf_r+0x1b56>
10012b6e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10012b72:	9306      	str	r3, [sp, #24]
10012b74:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10012b78:	2367      	movs	r3, #103	@ 0x67
10012b7a:	930e      	str	r3, [sp, #56]	@ 0x38
10012b7c:	2300      	movs	r3, #0
10012b7e:	9314      	str	r3, [sp, #80]	@ 0x50
10012b80:	9310      	str	r3, [sp, #64]	@ 0x40
10012b82:	e694      	b.n	100128ae <_vfprintf_r+0x1402>
10012b84:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012b86:	42a3      	cmp	r3, r4
10012b88:	f4bf ae31 	bcs.w	100127ee <_vfprintf_r+0x1342>
10012b8c:	2130      	movs	r1, #48	@ 0x30
10012b8e:	1c5a      	adds	r2, r3, #1
10012b90:	9230      	str	r2, [sp, #192]	@ 0xc0
10012b92:	7019      	strb	r1, [r3, #0]
10012b94:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012b96:	429c      	cmp	r4, r3
10012b98:	d8f9      	bhi.n	10012b8e <_vfprintf_r+0x16e2>
10012b9a:	e628      	b.n	100127ee <_vfprintf_r+0x1342>
10012b9c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10012b9e:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10012ba2:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
10012ba6:	4642      	mov	r2, r8
10012ba8:	4621      	mov	r1, r4
10012baa:	4f2d      	ldr	r7, [pc, #180]	@ (10012c60 <_vfprintf_r+0x17b4>)
10012bac:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
10012bb0:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
10012bb4:	f8dd b020 	ldr.w	fp, [sp, #32]
10012bb8:	4654      	mov	r4, sl
10012bba:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
10012bbe:	b37b      	cbz	r3, 10012c20 <_vfprintf_r+0x1774>
10012bc0:	f1b9 0f00 	cmp.w	r9, #0
10012bc4:	f000 8085 	beq.w	10012cd2 <_vfprintf_r+0x1826>
10012bc8:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10012bcc:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10012bce:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10012bd0:	3001      	adds	r0, #1
10012bd2:	4441      	add	r1, r8
10012bd4:	2807      	cmp	r0, #7
10012bd6:	e9c2 3800 	strd	r3, r8, [r2]
10012bda:	9134      	str	r1, [sp, #208]	@ 0xd0
10012bdc:	9033      	str	r0, [sp, #204]	@ 0xcc
10012bde:	dc6d      	bgt.n	10012cbc <_vfprintf_r+0x1810>
10012be0:	3208      	adds	r2, #8
10012be2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012be4:	f89a 0000 	ldrb.w	r0, [sl]
10012be8:	1b1e      	subs	r6, r3, r4
10012bea:	4286      	cmp	r6, r0
10012bec:	bfa8      	it	ge
10012bee:	4606      	movge	r6, r0
10012bf0:	2e00      	cmp	r6, #0
10012bf2:	dd0b      	ble.n	10012c0c <_vfprintf_r+0x1760>
10012bf4:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10012bf6:	3001      	adds	r0, #1
10012bf8:	4431      	add	r1, r6
10012bfa:	2807      	cmp	r0, #7
10012bfc:	e9c2 4600 	strd	r4, r6, [r2]
10012c00:	9134      	str	r1, [sp, #208]	@ 0xd0
10012c02:	9033      	str	r0, [sp, #204]	@ 0xcc
10012c04:	dc6b      	bgt.n	10012cde <_vfprintf_r+0x1832>
10012c06:	f89a 0000 	ldrb.w	r0, [sl]
10012c0a:	3208      	adds	r2, #8
10012c0c:	2e00      	cmp	r6, #0
10012c0e:	bfac      	ite	ge
10012c10:	1b85      	subge	r5, r0, r6
10012c12:	4605      	movlt	r5, r0
10012c14:	2d00      	cmp	r5, #0
10012c16:	dc14      	bgt.n	10012c42 <_vfprintf_r+0x1796>
10012c18:	4404      	add	r4, r0
10012c1a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10012c1c:	2b00      	cmp	r3, #0
10012c1e:	d1cf      	bne.n	10012bc0 <_vfprintf_r+0x1714>
10012c20:	f1b9 0f00 	cmp.w	r9, #0
10012c24:	d1d0      	bne.n	10012bc8 <_vfprintf_r+0x171c>
10012c26:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10012c2a:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
10012c2e:	46a2      	mov	sl, r4
10012c30:	45da      	cmp	sl, fp
10012c32:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
10012c36:	4690      	mov	r8, r2
10012c38:	460c      	mov	r4, r1
10012c3a:	bf28      	it	cs
10012c3c:	46da      	movcs	sl, fp
10012c3e:	f7ff ba33 	b.w	100120a8 <_vfprintf_r+0xbfc>
10012c42:	2d10      	cmp	r5, #16
10012c44:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10012c46:	f340 821a 	ble.w	1001307e <_vfprintf_r+0x1bd2>
10012c4a:	4623      	mov	r3, r4
10012c4c:	463e      	mov	r6, r7
10012c4e:	462c      	mov	r4, r5
10012c50:	461d      	mov	r5, r3
10012c52:	e00c      	b.n	10012c6e <_vfprintf_r+0x17c2>
10012c54:	40300000 	.word	0x40300000
10012c58:	3fe00000 	.word	0x3fe00000
10012c5c:	1001ea3c 	.word	0x1001ea3c
10012c60:	1001ea5c 	.word	0x1001ea5c
10012c64:	3c10      	subs	r4, #16
10012c66:	2c10      	cmp	r4, #16
10012c68:	f102 0208 	add.w	r2, r2, #8
10012c6c:	dd16      	ble.n	10012c9c <_vfprintf_r+0x17f0>
10012c6e:	3001      	adds	r0, #1
10012c70:	3110      	adds	r1, #16
10012c72:	2310      	movs	r3, #16
10012c74:	2807      	cmp	r0, #7
10012c76:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10012c7a:	6017      	str	r7, [r2, #0]
10012c7c:	6053      	str	r3, [r2, #4]
10012c7e:	ddf1      	ble.n	10012c64 <_vfprintf_r+0x17b8>
10012c80:	9907      	ldr	r1, [sp, #28]
10012c82:	aa32      	add	r2, sp, #200	@ 0xc8
10012c84:	4658      	mov	r0, fp
10012c86:	f000 fab1 	bl	100131ec <__sprint_r>
10012c8a:	2800      	cmp	r0, #0
10012c8c:	f47e ad66 	bne.w	1001175c <_vfprintf_r+0x2b0>
10012c90:	3c10      	subs	r4, #16
10012c92:	2c10      	cmp	r4, #16
10012c94:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
10012c98:	aa35      	add	r2, sp, #212	@ 0xd4
10012c9a:	dce8      	bgt.n	10012c6e <_vfprintf_r+0x17c2>
10012c9c:	462b      	mov	r3, r5
10012c9e:	4625      	mov	r5, r4
10012ca0:	461c      	mov	r4, r3
10012ca2:	3001      	adds	r0, #1
10012ca4:	4429      	add	r1, r5
10012ca6:	2807      	cmp	r0, #7
10012ca8:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10012cac:	6016      	str	r6, [r2, #0]
10012cae:	6055      	str	r5, [r2, #4]
10012cb0:	dc4b      	bgt.n	10012d4a <_vfprintf_r+0x189e>
10012cb2:	f89a 0000 	ldrb.w	r0, [sl]
10012cb6:	3208      	adds	r2, #8
10012cb8:	4404      	add	r4, r0
10012cba:	e7ae      	b.n	10012c1a <_vfprintf_r+0x176e>
10012cbc:	9907      	ldr	r1, [sp, #28]
10012cbe:	aa32      	add	r2, sp, #200	@ 0xc8
10012cc0:	4658      	mov	r0, fp
10012cc2:	f000 fa93 	bl	100131ec <__sprint_r>
10012cc6:	2800      	cmp	r0, #0
10012cc8:	f47e ad48 	bne.w	1001175c <_vfprintf_r+0x2b0>
10012ccc:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10012cce:	aa35      	add	r2, sp, #212	@ 0xd4
10012cd0:	e787      	b.n	10012be2 <_vfprintf_r+0x1736>
10012cd2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10012cd4:	3b01      	subs	r3, #1
10012cd6:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
10012cda:	9310      	str	r3, [sp, #64]	@ 0x40
10012cdc:	e776      	b.n	10012bcc <_vfprintf_r+0x1720>
10012cde:	9907      	ldr	r1, [sp, #28]
10012ce0:	aa32      	add	r2, sp, #200	@ 0xc8
10012ce2:	4658      	mov	r0, fp
10012ce4:	f000 fa82 	bl	100131ec <__sprint_r>
10012ce8:	2800      	cmp	r0, #0
10012cea:	f47e ad37 	bne.w	1001175c <_vfprintf_r+0x2b0>
10012cee:	f89a 0000 	ldrb.w	r0, [sl]
10012cf2:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10012cf4:	aa35      	add	r2, sp, #212	@ 0xd4
10012cf6:	e789      	b.n	10012c0c <_vfprintf_r+0x1760>
10012cf8:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012cfc:	960d      	str	r6, [sp, #52]	@ 0x34
10012cfe:	f8cd b018 	str.w	fp, [sp, #24]
10012d02:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10012d06:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10012d0a:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
10012d0e:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
10012d12:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10012d16:	f7fe bdfb 	b.w	10011910 <_vfprintf_r+0x464>
10012d1a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012d1e:	aa32      	add	r2, sp, #200	@ 0xc8
10012d20:	f000 fa64 	bl	100131ec <__sprint_r>
10012d24:	2800      	cmp	r0, #0
10012d26:	f47f a8bd 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012d2a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10012d2c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012d2e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012d32:	f7ff baa3 	b.w	1001227c <_vfprintf_r+0xdd0>
10012d36:	930c      	str	r3, [sp, #48]	@ 0x30
10012d38:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
10012d3c:	9324      	str	r3, [sp, #144]	@ 0x90
10012d3e:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
10012d42:	9325      	str	r3, [sp, #148]	@ 0x94
10012d44:	232d      	movs	r3, #45	@ 0x2d
10012d46:	931f      	str	r3, [sp, #124]	@ 0x7c
10012d48:	e5fc      	b.n	10012944 <_vfprintf_r+0x1498>
10012d4a:	9907      	ldr	r1, [sp, #28]
10012d4c:	aa32      	add	r2, sp, #200	@ 0xc8
10012d4e:	4658      	mov	r0, fp
10012d50:	f000 fa4c 	bl	100131ec <__sprint_r>
10012d54:	2800      	cmp	r0, #0
10012d56:	f47e ad01 	bne.w	1001175c <_vfprintf_r+0x2b0>
10012d5a:	f89a 0000 	ldrb.w	r0, [sl]
10012d5e:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10012d60:	aa35      	add	r2, sp, #212	@ 0xd4
10012d62:	4404      	add	r4, r0
10012d64:	e759      	b.n	10012c1a <_vfprintf_r+0x176e>
10012d66:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012d6a:	aa32      	add	r2, sp, #200	@ 0xc8
10012d6c:	f000 fa3e 	bl	100131ec <__sprint_r>
10012d70:	2800      	cmp	r0, #0
10012d72:	f47f a897 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012d76:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012d78:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012d7c:	f7ff b986 	b.w	1001208c <_vfprintf_r+0xbe0>
10012d80:	2378      	movs	r3, #120	@ 0x78
10012d82:	e5c3      	b.n	1001290c <_vfprintf_r+0x1460>
10012d84:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012d88:	aa32      	add	r2, sp, #200	@ 0xc8
10012d8a:	f000 fa2f 	bl	100131ec <__sprint_r>
10012d8e:	2800      	cmp	r0, #0
10012d90:	f47f a888 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012d94:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10012d96:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012d98:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012d9c:	f7ff b99a 	b.w	100120d4 <_vfprintf_r+0xc28>
10012da0:	49ab      	ldr	r1, [pc, #684]	@ (10013050 <_vfprintf_r+0x1ba4>)
10012da2:	9115      	str	r1, [sp, #84]	@ 0x54
10012da4:	f7fe bdeb 	b.w	1001197e <_vfprintf_r+0x4d2>
10012da8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012dac:	aa32      	add	r2, sp, #200	@ 0xc8
10012dae:	f000 fa1d 	bl	100131ec <__sprint_r>
10012db2:	2800      	cmp	r0, #0
10012db4:	f47f a876 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012db8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10012dba:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012dbc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012dbe:	1b5d      	subs	r5, r3, r5
10012dc0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012dc4:	f7ff b99d 	b.w	10012102 <_vfprintf_r+0xc56>
10012dc8:	9b06      	ldr	r3, [sp, #24]
10012dca:	9912      	ldr	r1, [sp, #72]	@ 0x48
10012dcc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10012dce:	f003 0301 	and.w	r3, r3, #1
10012dd2:	2900      	cmp	r1, #0
10012dd4:	ea43 0302 	orr.w	r3, r3, r2
10012dd8:	f340 815d 	ble.w	10013096 <_vfprintf_r+0x1bea>
10012ddc:	2b00      	cmp	r3, #0
10012dde:	f040 8109 	bne.w	10012ff4 <_vfprintf_r+0x1b48>
10012de2:	2366      	movs	r3, #102	@ 0x66
10012de4:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10012de8:	930e      	str	r3, [sp, #56]	@ 0x38
10012dea:	9b06      	ldr	r3, [sp, #24]
10012dec:	055a      	lsls	r2, r3, #21
10012dee:	f100 810a 	bmi.w	10013006 <_vfprintf_r+0x1b5a>
10012df2:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10012df6:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10012dfa:	9306      	str	r3, [sp, #24]
10012dfc:	e6be      	b.n	10012b7c <_vfprintf_r+0x16d0>
10012dfe:	2200      	movs	r2, #0
10012e00:	9209      	str	r2, [sp, #36]	@ 0x24
10012e02:	f7fe bbcc 	b.w	1001159e <_vfprintf_r+0xf2>
10012e06:	9b07      	ldr	r3, [sp, #28]
10012e08:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10012e0a:	07df      	lsls	r7, r3, #31
10012e0c:	d407      	bmi.n	10012e1e <_vfprintf_r+0x1972>
10012e0e:	9b07      	ldr	r3, [sp, #28]
10012e10:	899b      	ldrh	r3, [r3, #12]
10012e12:	059e      	lsls	r6, r3, #22
10012e14:	d403      	bmi.n	10012e1e <_vfprintf_r+0x1972>
10012e16:	9b07      	ldr	r3, [sp, #28]
10012e18:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10012e1a:	f002 fcff 	bl	1001581c <__retarget_lock_release_recursive>
10012e1e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10012e22:	930a      	str	r3, [sp, #40]	@ 0x28
10012e24:	f7fe bcab 	b.w	1001177e <_vfprintf_r+0x2d2>
10012e28:	4256      	negs	r6, r2
10012e2a:	3210      	adds	r2, #16
10012e2c:	4a89      	ldr	r2, [pc, #548]	@ (10013054 <_vfprintf_r+0x1ba8>)
10012e2e:	9215      	str	r2, [sp, #84]	@ 0x54
10012e30:	da34      	bge.n	10012e9c <_vfprintf_r+0x19f0>
10012e32:	46aa      	mov	sl, r5
10012e34:	2710      	movs	r7, #16
10012e36:	4615      	mov	r5, r2
10012e38:	e004      	b.n	10012e44 <_vfprintf_r+0x1998>
10012e3a:	f108 0808 	add.w	r8, r8, #8
10012e3e:	3e10      	subs	r6, #16
10012e40:	2e10      	cmp	r6, #16
10012e42:	dd2a      	ble.n	10012e9a <_vfprintf_r+0x19ee>
10012e44:	3301      	adds	r3, #1
10012e46:	3410      	adds	r4, #16
10012e48:	2b07      	cmp	r3, #7
10012e4a:	e9c8 5700 	strd	r5, r7, [r8]
10012e4e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012e52:	ddf2      	ble.n	10012e3a <_vfprintf_r+0x198e>
10012e54:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012e58:	aa32      	add	r2, sp, #200	@ 0xc8
10012e5a:	f000 f9c7 	bl	100131ec <__sprint_r>
10012e5e:	2800      	cmp	r0, #0
10012e60:	f47f a820 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012e64:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10012e68:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012e6c:	e7e7      	b.n	10012e3e <_vfprintf_r+0x1992>
10012e6e:	2300      	movs	r3, #0
10012e70:	930c      	str	r3, [sp, #48]	@ 0x30
10012e72:	ad45      	add	r5, sp, #276	@ 0x114
10012e74:	e40b      	b.n	1001268e <_vfprintf_r+0x11e2>
10012e76:	19ac      	adds	r4, r5, r6
10012e78:	2747      	movs	r7, #71	@ 0x47
10012e7a:	e4ae      	b.n	100127da <_vfprintf_r+0x132e>
10012e7c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012e7e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10012e80:	eb03 0b02 	add.w	fp, r3, r2
10012e84:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10012e86:	2b00      	cmp	r3, #0
10012e88:	f340 80ee 	ble.w	10013068 <_vfprintf_r+0x1bbc>
10012e8c:	2367      	movs	r3, #103	@ 0x67
10012e8e:	930e      	str	r3, [sp, #56]	@ 0x38
10012e90:	e7ab      	b.n	10012dea <_vfprintf_r+0x193e>
10012e92:	4a6f      	ldr	r2, [pc, #444]	@ (10013050 <_vfprintf_r+0x1ba4>)
10012e94:	9215      	str	r2, [sp, #84]	@ 0x54
10012e96:	f7ff b8cc 	b.w	10012032 <_vfprintf_r+0xb86>
10012e9a:	4655      	mov	r5, sl
10012e9c:	3301      	adds	r3, #1
10012e9e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10012ea0:	f8c8 2000 	str.w	r2, [r8]
10012ea4:	4434      	add	r4, r6
10012ea6:	2b07      	cmp	r3, #7
10012ea8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012eac:	f8c8 6004 	str.w	r6, [r8, #4]
10012eb0:	f77f a9f9 	ble.w	100122a6 <_vfprintf_r+0xdfa>
10012eb4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012eb8:	aa32      	add	r2, sp, #200	@ 0xc8
10012eba:	f000 f997 	bl	100131ec <__sprint_r>
10012ebe:	2800      	cmp	r0, #0
10012ec0:	f47e aff0 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012ec4:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10012ec8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012ecc:	f7fe bffe 	b.w	10011ecc <_vfprintf_r+0xa20>
10012ed0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10012ed2:	9730      	str	r7, [sp, #192]	@ 0xc0
10012ed4:	7bd9      	ldrb	r1, [r3, #15]
10012ed6:	f816 2c01 	ldrb.w	r2, [r6, #-1]
10012eda:	428a      	cmp	r2, r1
10012edc:	4633      	mov	r3, r6
10012ede:	d109      	bne.n	10012ef4 <_vfprintf_r+0x1a48>
10012ee0:	2030      	movs	r0, #48	@ 0x30
10012ee2:	f803 0c01 	strb.w	r0, [r3, #-1]
10012ee6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012ee8:	1e5a      	subs	r2, r3, #1
10012eea:	9230      	str	r2, [sp, #192]	@ 0xc0
10012eec:	f813 2c01 	ldrb.w	r2, [r3, #-1]
10012ef0:	4291      	cmp	r1, r2
10012ef2:	d0f6      	beq.n	10012ee2 <_vfprintf_r+0x1a36>
10012ef4:	2a39      	cmp	r2, #57	@ 0x39
10012ef6:	bf0b      	itete	eq
10012ef8:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
10012efa:	3201      	addne	r2, #1
10012efc:	7a92      	ldrbeq	r2, [r2, #10]
10012efe:	b2d2      	uxtbne	r2, r2
10012f00:	f803 2c01 	strb.w	r2, [r3, #-1]
10012f04:	4633      	mov	r3, r6
10012f06:	e595      	b.n	10012a34 <_vfprintf_r+0x1588>
10012f08:	4a52      	ldr	r2, [pc, #328]	@ (10013054 <_vfprintf_r+0x1ba8>)
10012f0a:	9215      	str	r2, [sp, #84]	@ 0x54
10012f0c:	f7fe bf76 	b.w	10011dfc <_vfprintf_r+0x950>
10012f10:	9808      	ldr	r0, [sp, #32]
10012f12:	1c59      	adds	r1, r3, #1
10012f14:	f7fd fffc 	bl	10010f10 <_malloc_r>
10012f18:	4605      	mov	r5, r0
10012f1a:	b178      	cbz	r0, 10012f3c <_vfprintf_r+0x1a90>
10012f1c:	900c      	str	r0, [sp, #48]	@ 0x30
10012f1e:	e504      	b.n	1001292a <_vfprintf_r+0x147e>
10012f20:	2800      	cmp	r0, #0
10012f22:	d162      	bne.n	10012fea <_vfprintf_r+0x1b3e>
10012f24:	2230      	movs	r2, #48	@ 0x30
10012f26:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
10012f2a:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
10012f2e:	3330      	adds	r3, #48	@ 0x30
10012f30:	f802 3b01 	strb.w	r3, [r2], #1
10012f34:	ab2c      	add	r3, sp, #176	@ 0xb0
10012f36:	1ad3      	subs	r3, r2, r3
10012f38:	931c      	str	r3, [sp, #112]	@ 0x70
10012f3a:	e4a3      	b.n	10012884 <_vfprintf_r+0x13d8>
10012f3c:	9a07      	ldr	r2, [sp, #28]
10012f3e:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
10012f42:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012f46:	8193      	strh	r3, [r2, #12]
10012f48:	f7fe bc11 	b.w	1001176e <_vfprintf_r+0x2c2>
10012f4c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012f50:	aa32      	add	r2, sp, #200	@ 0xc8
10012f52:	f000 f94b 	bl	100131ec <__sprint_r>
10012f56:	2800      	cmp	r0, #0
10012f58:	f47e afa4 	bne.w	10011ea4 <_vfprintf_r+0x9f8>
10012f5c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012f5e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012f62:	f7ff b89a 	b.w	1001209a <_vfprintf_r+0xbee>
10012f66:	4b3c      	ldr	r3, [pc, #240]	@ (10013058 <_vfprintf_r+0x1bac>)
10012f68:	4a3c      	ldr	r2, [pc, #240]	@ (1001305c <_vfprintf_r+0x1bb0>)
10012f6a:	990e      	ldr	r1, [sp, #56]	@ 0x38
10012f6c:	2961      	cmp	r1, #97	@ 0x61
10012f6e:	bf18      	it	ne
10012f70:	461a      	movne	r2, r3
10012f72:	2301      	movs	r3, #1
10012f74:	9212      	str	r2, [sp, #72]	@ 0x48
10012f76:	9329      	str	r3, [sp, #164]	@ 0xa4
10012f78:	e4ff      	b.n	1001297a <_vfprintf_r+0x14ce>
10012f7a:	2306      	movs	r3, #6
10012f7c:	9309      	str	r3, [sp, #36]	@ 0x24
10012f7e:	f7ff b9ef 	b.w	10012360 <_vfprintf_r+0xeb4>
10012f82:	9b06      	ldr	r3, [sp, #24]
10012f84:	07de      	lsls	r6, r3, #31
10012f86:	f57f ac86 	bpl.w	10012896 <_vfprintf_r+0x13ea>
10012f8a:	e482      	b.n	10012892 <_vfprintf_r+0x13e6>
10012f8c:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10012f90:	2200      	movs	r2, #0
10012f92:	2300      	movs	r3, #0
10012f94:	f00b f80c 	bl	1001dfb0 <__aeabi_dcmpeq>
10012f98:	2800      	cmp	r0, #0
10012f9a:	f47f ac1c 	bne.w	100127d6 <_vfprintf_r+0x132a>
10012f9e:	f1c6 0601 	rsb	r6, r6, #1
10012fa2:	9629      	str	r6, [sp, #164]	@ 0xa4
10012fa4:	e418      	b.n	100127d8 <_vfprintf_r+0x132c>
10012fa6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10012fa8:	4d2d      	ldr	r5, [pc, #180]	@ (10013060 <_vfprintf_r+0x1bb4>)
10012faa:	2b00      	cmp	r3, #0
10012fac:	bfb4      	ite	lt
10012fae:	222d      	movlt	r2, #45	@ 0x2d
10012fb0:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
10012fb4:	4b2b      	ldr	r3, [pc, #172]	@ (10013064 <_vfprintf_r+0x1bb8>)
10012fb6:	bfb8      	it	lt
10012fb8:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
10012fbc:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10012fc0:	f7fe bc99 	b.w	100118f6 <_vfprintf_r+0x44a>
10012fc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012fc6:	9306      	str	r3, [sp, #24]
10012fc8:	469b      	mov	fp, r3
10012fca:	2373      	movs	r3, #115	@ 0x73
10012fcc:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012fd0:	960d      	str	r6, [sp, #52]	@ 0x34
10012fd2:	9009      	str	r0, [sp, #36]	@ 0x24
10012fd4:	9014      	str	r0, [sp, #80]	@ 0x50
10012fd6:	9010      	str	r0, [sp, #64]	@ 0x40
10012fd8:	930e      	str	r3, [sp, #56]	@ 0x38
10012fda:	f7fe bc99 	b.w	10011910 <_vfprintf_r+0x464>
10012fde:	f8dd 9018 	ldr.w	r9, [sp, #24]
10012fe2:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10012fe6:	f7ff bb40 	b.w	1001266a <_vfprintf_r+0x11be>
10012fea:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10012fee:	e79e      	b.n	10012f2e <_vfprintf_r+0x1a82>
10012ff0:	4693      	mov	fp, r2
10012ff2:	e5b6      	b.n	10012b62 <_vfprintf_r+0x16b6>
10012ff4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012ff6:	18cf      	adds	r7, r1, r3
10012ff8:	443a      	add	r2, r7
10012ffa:	2366      	movs	r3, #102	@ 0x66
10012ffc:	4693      	mov	fp, r2
10012ffe:	930e      	str	r3, [sp, #56]	@ 0x38
10013000:	e6f3      	b.n	10012dea <_vfprintf_r+0x193e>
10013002:	2367      	movs	r3, #103	@ 0x67
10013004:	930e      	str	r3, [sp, #56]	@ 0x38
10013006:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10013008:	780b      	ldrb	r3, [r1, #0]
1001300a:	2bff      	cmp	r3, #255	@ 0xff
1001300c:	d063      	beq.n	100130d6 <_vfprintf_r+0x1c2a>
1001300e:	2400      	movs	r4, #0
10013010:	9a12      	ldr	r2, [sp, #72]	@ 0x48
10013012:	4620      	mov	r0, r4
10013014:	e003      	b.n	1001301e <_vfprintf_r+0x1b72>
10013016:	3001      	adds	r0, #1
10013018:	3101      	adds	r1, #1
1001301a:	2bff      	cmp	r3, #255	@ 0xff
1001301c:	d008      	beq.n	10013030 <_vfprintf_r+0x1b84>
1001301e:	4293      	cmp	r3, r2
10013020:	da06      	bge.n	10013030 <_vfprintf_r+0x1b84>
10013022:	1ad2      	subs	r2, r2, r3
10013024:	784b      	ldrb	r3, [r1, #1]
10013026:	2b00      	cmp	r3, #0
10013028:	d1f5      	bne.n	10013016 <_vfprintf_r+0x1b6a>
1001302a:	780b      	ldrb	r3, [r1, #0]
1001302c:	3401      	adds	r4, #1
1001302e:	e7f4      	b.n	1001301a <_vfprintf_r+0x1b6e>
10013030:	911b      	str	r1, [sp, #108]	@ 0x6c
10013032:	9212      	str	r2, [sp, #72]	@ 0x48
10013034:	9010      	str	r0, [sp, #64]	@ 0x40
10013036:	9414      	str	r4, [sp, #80]	@ 0x50
10013038:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
1001303c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1001303e:	4413      	add	r3, r2
10013040:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
10013042:	fb02 bb03 	mla	fp, r2, r3, fp
10013046:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001304a:	9306      	str	r3, [sp, #24]
1001304c:	e42f      	b.n	100128ae <_vfprintf_r+0x1402>
1001304e:	bf00      	nop
10013050:	1001ea6c 	.word	0x1001ea6c
10013054:	1001ea5c 	.word	0x1001ea5c
10013058:	1001ea3c 	.word	0x1001ea3c
1001305c:	1001e6a8 	.word	0x1001e6a8
10013060:	1001ea34 	.word	0x1001ea34
10013064:	1001ea38 	.word	0x1001ea38
10013068:	f1c3 0301 	rsb	r3, r3, #1
1001306c:	449b      	add	fp, r3
1001306e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10013072:	9306      	str	r3, [sp, #24]
10013074:	2367      	movs	r3, #103	@ 0x67
10013076:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001307a:	930e      	str	r3, [sp, #56]	@ 0x38
1001307c:	e57e      	b.n	10012b7c <_vfprintf_r+0x16d0>
1001307e:	4e1c      	ldr	r6, [pc, #112]	@ (100130f0 <_vfprintf_r+0x1c44>)
10013080:	e60f      	b.n	10012ca2 <_vfprintf_r+0x17f6>
10013082:	2302      	movs	r3, #2
10013084:	931c      	str	r3, [sp, #112]	@ 0x70
10013086:	f7ff bbfd 	b.w	10012884 <_vfprintf_r+0x13d8>
1001308a:	4a19      	ldr	r2, [pc, #100]	@ (100130f0 <_vfprintf_r+0x1c44>)
1001308c:	9215      	str	r2, [sp, #84]	@ 0x54
1001308e:	e52b      	b.n	10012ae8 <_vfprintf_r+0x163c>
10013090:	2170      	movs	r1, #112	@ 0x70
10013092:	f7ff bbc0 	b.w	10012816 <_vfprintf_r+0x136a>
10013096:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001309a:	b933      	cbnz	r3, 100130aa <_vfprintf_r+0x1bfe>
1001309c:	f04f 0b01 	mov.w	fp, #1
100130a0:	2366      	movs	r3, #102	@ 0x66
100130a2:	f8cd b018 	str.w	fp, [sp, #24]
100130a6:	930e      	str	r3, [sp, #56]	@ 0x38
100130a8:	e568      	b.n	10012b7c <_vfprintf_r+0x16d0>
100130aa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100130ac:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
100130b0:	1c5f      	adds	r7, r3, #1
100130b2:	44bb      	add	fp, r7
100130b4:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100130b8:	9306      	str	r3, [sp, #24]
100130ba:	2366      	movs	r3, #102	@ 0x66
100130bc:	930e      	str	r3, [sp, #56]	@ 0x38
100130be:	e55d      	b.n	10012b7c <_vfprintf_r+0x16d0>
100130c0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100130c2:	7863      	ldrb	r3, [r4, #1]
100130c4:	460c      	mov	r4, r1
100130c6:	f852 1b04 	ldr.w	r1, [r2], #4
100130ca:	920d      	str	r2, [sp, #52]	@ 0x34
100130cc:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
100130d0:	9109      	str	r1, [sp, #36]	@ 0x24
100130d2:	f7fe ba63 	b.w	1001159c <_vfprintf_r+0xf0>
100130d6:	2300      	movs	r3, #0
100130d8:	9314      	str	r3, [sp, #80]	@ 0x50
100130da:	9310      	str	r3, [sp, #64]	@ 0x40
100130dc:	e7ac      	b.n	10013038 <_vfprintf_r+0x1b8c>
100130de:	e9dd 2b07 	ldrd	r2, fp, [sp, #28]
100130e2:	8993      	ldrh	r3, [r2, #12]
100130e4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100130e8:	8193      	strh	r3, [r2, #12]
100130ea:	f7fe bb37 	b.w	1001175c <_vfprintf_r+0x2b0>
100130ee:	bf00      	nop
100130f0:	1001ea5c 	.word	0x1001ea5c

100130f4 <__sbprintf>:
100130f4:	b5f0      	push	{r4, r5, r6, r7, lr}
100130f6:	461f      	mov	r7, r3
100130f8:	898b      	ldrh	r3, [r1, #12]
100130fa:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
100130fe:	f023 0302 	bic.w	r3, r3, #2
10013102:	f8ad 300c 	strh.w	r3, [sp, #12]
10013106:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10013108:	9319      	str	r3, [sp, #100]	@ 0x64
1001310a:	89cb      	ldrh	r3, [r1, #14]
1001310c:	f8ad 300e 	strh.w	r3, [sp, #14]
10013110:	69cb      	ldr	r3, [r1, #28]
10013112:	9307      	str	r3, [sp, #28]
10013114:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10013116:	9309      	str	r3, [sp, #36]	@ 0x24
10013118:	ab1a      	add	r3, sp, #104	@ 0x68
1001311a:	9300      	str	r3, [sp, #0]
1001311c:	9304      	str	r3, [sp, #16]
1001311e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10013122:	4615      	mov	r5, r2
10013124:	4606      	mov	r6, r0
10013126:	9302      	str	r3, [sp, #8]
10013128:	9305      	str	r3, [sp, #20]
1001312a:	a816      	add	r0, sp, #88	@ 0x58
1001312c:	2300      	movs	r3, #0
1001312e:	460c      	mov	r4, r1
10013130:	9306      	str	r3, [sp, #24]
10013132:	f002 fb6d 	bl	10015810 <__retarget_lock_init_recursive>
10013136:	462a      	mov	r2, r5
10013138:	463b      	mov	r3, r7
1001313a:	4669      	mov	r1, sp
1001313c:	4630      	mov	r0, r6
1001313e:	f7fe f9b5 	bl	100114ac <_vfprintf_r>
10013142:	1e05      	subs	r5, r0, #0
10013144:	db07      	blt.n	10013156 <__sbprintf+0x62>
10013146:	4669      	mov	r1, sp
10013148:	4630      	mov	r0, r6
1001314a:	f001 fb71 	bl	10014830 <_fflush_r>
1001314e:	2800      	cmp	r0, #0
10013150:	bf18      	it	ne
10013152:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10013156:	f8bd 300c 	ldrh.w	r3, [sp, #12]
1001315a:	065b      	lsls	r3, r3, #25
1001315c:	d503      	bpl.n	10013166 <__sbprintf+0x72>
1001315e:	89a3      	ldrh	r3, [r4, #12]
10013160:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013164:	81a3      	strh	r3, [r4, #12]
10013166:	9816      	ldr	r0, [sp, #88]	@ 0x58
10013168:	f002 fb54 	bl	10015814 <__retarget_lock_close_recursive>
1001316c:	4628      	mov	r0, r5
1001316e:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10013172:	bdf0      	pop	{r4, r5, r6, r7, pc}

10013174 <__sprint_r.part.0>:
10013174:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10013178:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001317a:	049c      	lsls	r4, r3, #18
1001317c:	4690      	mov	r8, r2
1001317e:	d52e      	bpl.n	100131de <__sprint_r.part.0+0x6a>
10013180:	6893      	ldr	r3, [r2, #8]
10013182:	6812      	ldr	r2, [r2, #0]
10013184:	b34b      	cbz	r3, 100131da <__sprint_r.part.0+0x66>
10013186:	460d      	mov	r5, r1
10013188:	4606      	mov	r6, r0
1001318a:	f102 0908 	add.w	r9, r2, #8
1001318e:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
10013192:	ea5f 079a 	movs.w	r7, sl, lsr #2
10013196:	d016      	beq.n	100131c6 <__sprint_r.part.0+0x52>
10013198:	f1a2 0b04 	sub.w	fp, r2, #4
1001319c:	2400      	movs	r4, #0
1001319e:	e001      	b.n	100131a4 <__sprint_r.part.0+0x30>
100131a0:	42a7      	cmp	r7, r4
100131a2:	d00e      	beq.n	100131c2 <__sprint_r.part.0+0x4e>
100131a4:	f85b 1f04 	ldr.w	r1, [fp, #4]!
100131a8:	462a      	mov	r2, r5
100131aa:	4630      	mov	r0, r6
100131ac:	f001 ffa0 	bl	100150f0 <_fputwc_r>
100131b0:	1c43      	adds	r3, r0, #1
100131b2:	f104 0401 	add.w	r4, r4, #1
100131b6:	d1f3      	bne.n	100131a0 <__sprint_r.part.0+0x2c>
100131b8:	2300      	movs	r3, #0
100131ba:	e9c8 3301 	strd	r3, r3, [r8, #4]
100131be:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
100131c2:	f8d8 3008 	ldr.w	r3, [r8, #8]
100131c6:	f02a 0a03 	bic.w	sl, sl, #3
100131ca:	eba3 030a 	sub.w	r3, r3, sl
100131ce:	f8c8 3008 	str.w	r3, [r8, #8]
100131d2:	f109 0908 	add.w	r9, r9, #8
100131d6:	2b00      	cmp	r3, #0
100131d8:	d1d9      	bne.n	1001318e <__sprint_r.part.0+0x1a>
100131da:	2000      	movs	r0, #0
100131dc:	e7ec      	b.n	100131b8 <__sprint_r.part.0+0x44>
100131de:	f001 fd49 	bl	10014c74 <__sfvwrite_r>
100131e2:	2300      	movs	r3, #0
100131e4:	e9c8 3301 	strd	r3, r3, [r8, #4]
100131e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

100131ec <__sprint_r>:
100131ec:	b410      	push	{r4}
100131ee:	6894      	ldr	r4, [r2, #8]
100131f0:	b114      	cbz	r4, 100131f8 <__sprint_r+0xc>
100131f2:	bc10      	pop	{r4}
100131f4:	f7ff bfbe 	b.w	10013174 <__sprint_r.part.0>
100131f8:	4620      	mov	r0, r4
100131fa:	6054      	str	r4, [r2, #4]
100131fc:	bc10      	pop	{r4}
100131fe:	4770      	bx	lr

10013200 <_vfiprintf_r>:
10013200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10013204:	b0c7      	sub	sp, #284	@ 0x11c
10013206:	af16      	add	r7, sp, #88	@ 0x58
10013208:	4683      	mov	fp, r0
1001320a:	9103      	str	r1, [sp, #12]
1001320c:	9206      	str	r2, [sp, #24]
1001320e:	2100      	movs	r1, #0
10013210:	2208      	movs	r2, #8
10013212:	4638      	mov	r0, r7
10013214:	461c      	mov	r4, r3
10013216:	930a      	str	r3, [sp, #40]	@ 0x28
10013218:	f002 f81a 	bl	10015250 <memset>
1001321c:	f1bb 0f00 	cmp.w	fp, #0
10013220:	d004      	beq.n	1001322c <_vfiprintf_r+0x2c>
10013222:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
10013226:	2b00      	cmp	r3, #0
10013228:	f000 86bb 	beq.w	10013fa2 <_vfiprintf_r+0xda2>
1001322c:	9a03      	ldr	r2, [sp, #12]
1001322e:	6e53      	ldr	r3, [r2, #100]	@ 0x64
10013230:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
10013234:	07db      	lsls	r3, r3, #31
10013236:	d402      	bmi.n	1001323e <_vfiprintf_r+0x3e>
10013238:	0596      	lsls	r6, r2, #22
1001323a:	f140 859f 	bpl.w	10013d7c <_vfiprintf_r+0xb7c>
1001323e:	0495      	lsls	r5, r2, #18
10013240:	d407      	bmi.n	10013252 <_vfiprintf_r+0x52>
10013242:	9903      	ldr	r1, [sp, #12]
10013244:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10013246:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001324a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
1001324e:	818a      	strh	r2, [r1, #12]
10013250:	664b      	str	r3, [r1, #100]	@ 0x64
10013252:	0710      	lsls	r0, r2, #28
10013254:	f140 80c9 	bpl.w	100133ea <_vfiprintf_r+0x1ea>
10013258:	9b03      	ldr	r3, [sp, #12]
1001325a:	691b      	ldr	r3, [r3, #16]
1001325c:	2b00      	cmp	r3, #0
1001325e:	f000 80c4 	beq.w	100133ea <_vfiprintf_r+0x1ea>
10013262:	f002 031a 	and.w	r3, r2, #26
10013266:	2b0a      	cmp	r3, #10
10013268:	f000 80ce 	beq.w	10013408 <_vfiprintf_r+0x208>
1001326c:	2300      	movs	r3, #0
1001326e:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10013272:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
10013276:	aa1d      	add	r2, sp, #116	@ 0x74
10013278:	f8df a260 	ldr.w	sl, [pc, #608]	@ 100134dc <_vfiprintf_r+0x2dc>
1001327c:	930d      	str	r3, [sp, #52]	@ 0x34
1001327e:	921a      	str	r2, [sp, #104]	@ 0x68
10013280:	4691      	mov	r9, r2
10013282:	9310      	str	r3, [sp, #64]	@ 0x40
10013284:	9307      	str	r3, [sp, #28]
10013286:	9d06      	ldr	r5, [sp, #24]
10013288:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
1001328c:	f002 f888 	bl	100153a0 <__locale_mb_cur_max>
10013290:	462a      	mov	r2, r5
10013292:	4603      	mov	r3, r0
10013294:	a914      	add	r1, sp, #80	@ 0x50
10013296:	9700      	str	r7, [sp, #0]
10013298:	4658      	mov	r0, fp
1001329a:	47a0      	blx	r4
1001329c:	2800      	cmp	r0, #0
1001329e:	f000 80d2 	beq.w	10013446 <_vfiprintf_r+0x246>
100132a2:	f2c0 80c8 	blt.w	10013436 <_vfiprintf_r+0x236>
100132a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
100132a8:	2a25      	cmp	r2, #37	@ 0x25
100132aa:	4603      	mov	r3, r0
100132ac:	d001      	beq.n	100132b2 <_vfiprintf_r+0xb2>
100132ae:	441d      	add	r5, r3
100132b0:	e7ea      	b.n	10013288 <_vfiprintf_r+0x88>
100132b2:	9b06      	ldr	r3, [sp, #24]
100132b4:	1aee      	subs	r6, r5, r3
100132b6:	4604      	mov	r4, r0
100132b8:	f040 80c9 	bne.w	1001344e <_vfiprintf_r+0x24e>
100132bc:	2300      	movs	r3, #0
100132be:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
100132c2:	786a      	ldrb	r2, [r5, #1]
100132c4:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100132c8:	9308      	str	r3, [sp, #32]
100132ca:	1c6c      	adds	r4, r5, #1
100132cc:	9105      	str	r1, [sp, #20]
100132ce:	9302      	str	r3, [sp, #8]
100132d0:	3401      	adds	r4, #1
100132d2:	f1a2 0320 	sub.w	r3, r2, #32
100132d6:	2b5a      	cmp	r3, #90	@ 0x5a
100132d8:	f200 8102 	bhi.w	100134e0 <_vfiprintf_r+0x2e0>
100132dc:	e8df f013 	tbh	[pc, r3, lsl #1]
100132e0:	01000303 	.word	0x01000303
100132e4:	02fd0100 	.word	0x02fd0100
100132e8:	01000100 	.word	0x01000100
100132ec:	006b0100 	.word	0x006b0100
100132f0:	01000100 	.word	0x01000100
100132f4:	032d0218 	.word	0x032d0218
100132f8:	02230100 	.word	0x02230100
100132fc:	01000313 	.word	0x01000313
10013300:	005b030d 	.word	0x005b030d
10013304:	005b005b 	.word	0x005b005b
10013308:	005b005b 	.word	0x005b005b
1001330c:	005b005b 	.word	0x005b005b
10013310:	005b005b 	.word	0x005b005b
10013314:	01000100 	.word	0x01000100
10013318:	01000100 	.word	0x01000100
1001331c:	01000100 	.word	0x01000100
10013320:	01000100 	.word	0x01000100
10013324:	01ce0100 	.word	0x01ce0100
10013328:	0100025d 	.word	0x0100025d
1001332c:	01000100 	.word	0x01000100
10013330:	01000100 	.word	0x01000100
10013334:	01000100 	.word	0x01000100
10013338:	01000100 	.word	0x01000100
1001333c:	02290100 	.word	0x02290100
10013340:	01000100 	.word	0x01000100
10013344:	01a60100 	.word	0x01a60100
10013348:	02760100 	.word	0x02760100
1001334c:	01000100 	.word	0x01000100
10013350:	0100058e 	.word	0x0100058e
10013354:	01000100 	.word	0x01000100
10013358:	01000100 	.word	0x01000100
1001335c:	01000100 	.word	0x01000100
10013360:	01000100 	.word	0x01000100
10013364:	01ce0100 	.word	0x01ce0100
10013368:	010001f3 	.word	0x010001f3
1001336c:	01000100 	.word	0x01000100
10013370:	01f302c4 	.word	0x01f302c4
10013374:	0100007f 	.word	0x0100007f
10013378:	01000332 	.word	0x01000332
1001337c:	058b02ee 	.word	0x058b02ee
10013380:	007f02cd 	.word	0x007f02cd
10013384:	01a60100 	.word	0x01a60100
10013388:	0588007d 	.word	0x0588007d
1001338c:	01000100 	.word	0x01000100
10013390:	010005b1 	.word	0x010005b1
10013394:	007d      	.short	0x007d
10013396:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
1001339a:	2200      	movs	r2, #0
1001339c:	4611      	mov	r1, r2
1001339e:	f814 2b01 	ldrb.w	r2, [r4], #1
100133a2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100133a6:	eb03 0141 	add.w	r1, r3, r1, lsl #1
100133aa:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
100133ae:	2b09      	cmp	r3, #9
100133b0:	d9f5      	bls.n	1001339e <_vfiprintf_r+0x19e>
100133b2:	9108      	str	r1, [sp, #32]
100133b4:	e78d      	b.n	100132d2 <_vfiprintf_r+0xd2>
100133b6:	4658      	mov	r0, fp
100133b8:	f001 fff8 	bl	100153ac <_localeconv_r>
100133bc:	6843      	ldr	r3, [r0, #4]
100133be:	9310      	str	r3, [sp, #64]	@ 0x40
100133c0:	4618      	mov	r0, r3
100133c2:	f002 fb1d 	bl	10015a00 <strlen>
100133c6:	900f      	str	r0, [sp, #60]	@ 0x3c
100133c8:	4605      	mov	r5, r0
100133ca:	4658      	mov	r0, fp
100133cc:	f001 ffee 	bl	100153ac <_localeconv_r>
100133d0:	6883      	ldr	r3, [r0, #8]
100133d2:	930e      	str	r3, [sp, #56]	@ 0x38
100133d4:	2d00      	cmp	r5, #0
100133d6:	f040 84e5 	bne.w	10013da4 <_vfiprintf_r+0xba4>
100133da:	7822      	ldrb	r2, [r4, #0]
100133dc:	e778      	b.n	100132d0 <_vfiprintf_r+0xd0>
100133de:	9b02      	ldr	r3, [sp, #8]
100133e0:	7822      	ldrb	r2, [r4, #0]
100133e2:	f043 0320 	orr.w	r3, r3, #32
100133e6:	9302      	str	r3, [sp, #8]
100133e8:	e772      	b.n	100132d0 <_vfiprintf_r+0xd0>
100133ea:	9d03      	ldr	r5, [sp, #12]
100133ec:	4658      	mov	r0, fp
100133ee:	4629      	mov	r1, r5
100133f0:	f001 fde0 	bl	10014fb4 <__swsetup_r>
100133f4:	2800      	cmp	r0, #0
100133f6:	f040 86a6 	bne.w	10014146 <_vfiprintf_r+0xf46>
100133fa:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
100133fe:	f002 031a 	and.w	r3, r2, #26
10013402:	2b0a      	cmp	r3, #10
10013404:	f47f af32 	bne.w	1001326c <_vfiprintf_r+0x6c>
10013408:	9903      	ldr	r1, [sp, #12]
1001340a:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
1001340e:	2b00      	cmp	r3, #0
10013410:	f6ff af2c 	blt.w	1001326c <_vfiprintf_r+0x6c>
10013414:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10013416:	07db      	lsls	r3, r3, #31
10013418:	d402      	bmi.n	10013420 <_vfiprintf_r+0x220>
1001341a:	0597      	lsls	r7, r2, #22
1001341c:	f140 865e 	bpl.w	100140dc <_vfiprintf_r+0xedc>
10013420:	9a06      	ldr	r2, [sp, #24]
10013422:	9903      	ldr	r1, [sp, #12]
10013424:	4623      	mov	r3, r4
10013426:	4658      	mov	r0, fp
10013428:	f000 fec0 	bl	100141ac <__sbprintf>
1001342c:	9007      	str	r0, [sp, #28]
1001342e:	9807      	ldr	r0, [sp, #28]
10013430:	b047      	add	sp, #284	@ 0x11c
10013432:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013436:	2208      	movs	r2, #8
10013438:	2100      	movs	r1, #0
1001343a:	4638      	mov	r0, r7
1001343c:	f001 ff08 	bl	10015250 <memset>
10013440:	2301      	movs	r3, #1
10013442:	441d      	add	r5, r3
10013444:	e720      	b.n	10013288 <_vfiprintf_r+0x88>
10013446:	9b06      	ldr	r3, [sp, #24]
10013448:	1aee      	subs	r6, r5, r3
1001344a:	4604      	mov	r4, r0
1001344c:	d012      	beq.n	10013474 <_vfiprintf_r+0x274>
1001344e:	9b06      	ldr	r3, [sp, #24]
10013450:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10013452:	e9c9 3600 	strd	r3, r6, [r9]
10013456:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10013458:	3301      	adds	r3, #1
1001345a:	4432      	add	r2, r6
1001345c:	2b07      	cmp	r3, #7
1001345e:	921c      	str	r2, [sp, #112]	@ 0x70
10013460:	931b      	str	r3, [sp, #108]	@ 0x6c
10013462:	dc11      	bgt.n	10013488 <_vfiprintf_r+0x288>
10013464:	f109 0908 	add.w	r9, r9, #8
10013468:	9b07      	ldr	r3, [sp, #28]
1001346a:	4433      	add	r3, r6
1001346c:	9307      	str	r3, [sp, #28]
1001346e:	2c00      	cmp	r4, #0
10013470:	f47f af24 	bne.w	100132bc <_vfiprintf_r+0xbc>
10013474:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10013476:	2b00      	cmp	r3, #0
10013478:	f040 8650 	bne.w	1001411c <_vfiprintf_r+0xf1c>
1001347c:	9b03      	ldr	r3, [sp, #12]
1001347e:	2200      	movs	r2, #0
10013480:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10013484:	921b      	str	r2, [sp, #108]	@ 0x6c
10013486:	e01c      	b.n	100134c2 <_vfiprintf_r+0x2c2>
10013488:	2a00      	cmp	r2, #0
1001348a:	f000 842f 	beq.w	10013cec <_vfiprintf_r+0xaec>
1001348e:	9903      	ldr	r1, [sp, #12]
10013490:	aa1a      	add	r2, sp, #104	@ 0x68
10013492:	4658      	mov	r0, fp
10013494:	f7ff fe6e 	bl	10013174 <__sprint_r.part.0>
10013498:	b980      	cbnz	r0, 100134bc <_vfiprintf_r+0x2bc>
1001349a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001349e:	e7e3      	b.n	10013468 <_vfiprintf_r+0x268>
100134a0:	9903      	ldr	r1, [sp, #12]
100134a2:	aa1a      	add	r2, sp, #104	@ 0x68
100134a4:	4658      	mov	r0, fp
100134a6:	f7ff fe65 	bl	10013174 <__sprint_r.part.0>
100134aa:	2800      	cmp	r0, #0
100134ac:	f000 80a9 	beq.w	10013602 <_vfiprintf_r+0x402>
100134b0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100134b2:	b11b      	cbz	r3, 100134bc <_vfiprintf_r+0x2bc>
100134b4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
100134b6:	4658      	mov	r0, fp
100134b8:	f003 fba2 	bl	10016c00 <_free_r>
100134bc:	9b03      	ldr	r3, [sp, #12]
100134be:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100134c2:	9a03      	ldr	r2, [sp, #12]
100134c4:	6e52      	ldr	r2, [r2, #100]	@ 0x64
100134c6:	07d1      	lsls	r1, r2, #31
100134c8:	f140 80a6 	bpl.w	10013618 <_vfiprintf_r+0x418>
100134cc:	065b      	lsls	r3, r3, #25
100134ce:	f100 8646 	bmi.w	1001415e <_vfiprintf_r+0xf5e>
100134d2:	9807      	ldr	r0, [sp, #28]
100134d4:	b047      	add	sp, #284	@ 0x11c
100134d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100134da:	bf00      	nop
100134dc:	2000042c 	.word	0x2000042c
100134e0:	9406      	str	r4, [sp, #24]
100134e2:	2a00      	cmp	r2, #0
100134e4:	d0c6      	beq.n	10013474 <_vfiprintf_r+0x274>
100134e6:	2300      	movs	r3, #0
100134e8:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100134ec:	2301      	movs	r3, #1
100134ee:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
100134f2:	9304      	str	r3, [sp, #16]
100134f4:	9309      	str	r3, [sp, #36]	@ 0x24
100134f6:	ac2d      	add	r4, sp, #180	@ 0xb4
100134f8:	2300      	movs	r3, #0
100134fa:	930b      	str	r3, [sp, #44]	@ 0x2c
100134fc:	9305      	str	r3, [sp, #20]
100134fe:	9b02      	ldr	r3, [sp, #8]
10013500:	f013 0302 	ands.w	r3, r3, #2
10013504:	d002      	beq.n	1001350c <_vfiprintf_r+0x30c>
10013506:	9a04      	ldr	r2, [sp, #16]
10013508:	3202      	adds	r2, #2
1001350a:	9204      	str	r2, [sp, #16]
1001350c:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10013510:	9d02      	ldr	r5, [sp, #8]
10013512:	1c50      	adds	r0, r2, #1
10013514:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
10013518:	4601      	mov	r1, r0
1001351a:	950c      	str	r5, [sp, #48]	@ 0x30
1001351c:	d105      	bne.n	1001352a <_vfiprintf_r+0x32a>
1001351e:	9d08      	ldr	r5, [sp, #32]
10013520:	9e04      	ldr	r6, [sp, #16]
10013522:	1bad      	subs	r5, r5, r6
10013524:	2d00      	cmp	r5, #0
10013526:	f300 8331 	bgt.w	10013b8c <_vfiprintf_r+0x98c>
1001352a:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
1001352e:	b188      	cbz	r0, 10013554 <_vfiprintf_r+0x354>
10013530:	2201      	movs	r2, #1
10013532:	f10c 0c01 	add.w	ip, ip, #1
10013536:	f8c9 2004 	str.w	r2, [r9, #4]
1001353a:	2907      	cmp	r1, #7
1001353c:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
10013540:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10013544:	f8c9 2000 	str.w	r2, [r9]
10013548:	f300 82e1 	bgt.w	10013b0e <_vfiprintf_r+0x90e>
1001354c:	460a      	mov	r2, r1
1001354e:	f109 0908 	add.w	r9, r9, #8
10013552:	3101      	adds	r1, #1
10013554:	b1eb      	cbz	r3, 10013592 <_vfiprintf_r+0x392>
10013556:	ab13      	add	r3, sp, #76	@ 0x4c
10013558:	f10c 0c02 	add.w	ip, ip, #2
1001355c:	f8c9 3000 	str.w	r3, [r9]
10013560:	2907      	cmp	r1, #7
10013562:	f04f 0302 	mov.w	r3, #2
10013566:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001356a:	f8c9 3004 	str.w	r3, [r9, #4]
1001356e:	f340 82ec 	ble.w	10013b4a <_vfiprintf_r+0x94a>
10013572:	f1bc 0f00 	cmp.w	ip, #0
10013576:	f000 83da 	beq.w	10013d2e <_vfiprintf_r+0xb2e>
1001357a:	9903      	ldr	r1, [sp, #12]
1001357c:	aa1a      	add	r2, sp, #104	@ 0x68
1001357e:	4658      	mov	r0, fp
10013580:	f7ff fdf8 	bl	10013174 <__sprint_r.part.0>
10013584:	2800      	cmp	r0, #0
10013586:	d193      	bne.n	100134b0 <_vfiprintf_r+0x2b0>
10013588:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001358c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013590:	1c51      	adds	r1, r2, #1
10013592:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10013594:	2b80      	cmp	r3, #128	@ 0x80
10013596:	f000 8213 	beq.w	100139c0 <_vfiprintf_r+0x7c0>
1001359a:	9b05      	ldr	r3, [sp, #20]
1001359c:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001359e:	1a1d      	subs	r5, r3, r0
100135a0:	2d00      	cmp	r5, #0
100135a2:	f300 8268 	bgt.w	10013a76 <_vfiprintf_r+0x876>
100135a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100135a8:	f8c9 4000 	str.w	r4, [r9]
100135ac:	eb02 030c 	add.w	r3, r2, ip
100135b0:	2907      	cmp	r1, #7
100135b2:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
100135b6:	f8c9 2004 	str.w	r2, [r9, #4]
100135ba:	f340 81fe 	ble.w	100139ba <_vfiprintf_r+0x7ba>
100135be:	2b00      	cmp	r3, #0
100135c0:	f000 832b 	beq.w	10013c1a <_vfiprintf_r+0xa1a>
100135c4:	9903      	ldr	r1, [sp, #12]
100135c6:	aa1a      	add	r2, sp, #104	@ 0x68
100135c8:	4658      	mov	r0, fp
100135ca:	f7ff fdd3 	bl	10013174 <__sprint_r.part.0>
100135ce:	2800      	cmp	r0, #0
100135d0:	f47f af6e 	bne.w	100134b0 <_vfiprintf_r+0x2b0>
100135d4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100135d6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100135da:	9a02      	ldr	r2, [sp, #8]
100135dc:	0750      	lsls	r0, r2, #29
100135de:	d505      	bpl.n	100135ec <_vfiprintf_r+0x3ec>
100135e0:	9a08      	ldr	r2, [sp, #32]
100135e2:	9904      	ldr	r1, [sp, #16]
100135e4:	1a54      	subs	r4, r2, r1
100135e6:	2c00      	cmp	r4, #0
100135e8:	f300 8322 	bgt.w	10013c30 <_vfiprintf_r+0xa30>
100135ec:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
100135f0:	9804      	ldr	r0, [sp, #16]
100135f2:	4281      	cmp	r1, r0
100135f4:	bfac      	ite	ge
100135f6:	1852      	addge	r2, r2, r1
100135f8:	1812      	addlt	r2, r2, r0
100135fa:	9207      	str	r2, [sp, #28]
100135fc:	2b00      	cmp	r3, #0
100135fe:	f47f af4f 	bne.w	100134a0 <_vfiprintf_r+0x2a0>
10013602:	2300      	movs	r3, #0
10013604:	931b      	str	r3, [sp, #108]	@ 0x6c
10013606:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10013608:	b11b      	cbz	r3, 10013612 <_vfiprintf_r+0x412>
1001360a:	4619      	mov	r1, r3
1001360c:	4658      	mov	r0, fp
1001360e:	f003 faf7 	bl	10016c00 <_free_r>
10013612:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013616:	e636      	b.n	10013286 <_vfiprintf_r+0x86>
10013618:	059a      	lsls	r2, r3, #22
1001361a:	f53f af57 	bmi.w	100134cc <_vfiprintf_r+0x2cc>
1001361e:	9c03      	ldr	r4, [sp, #12]
10013620:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013622:	f002 f8fb 	bl	1001581c <__retarget_lock_release_recursive>
10013626:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001362a:	e74f      	b.n	100134cc <_vfiprintf_r+0x2cc>
1001362c:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001362e:	9406      	str	r4, [sp, #24]
10013630:	f856 4b04 	ldr.w	r4, [r6], #4
10013634:	2300      	movs	r3, #0
10013636:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001363a:	2c00      	cmp	r4, #0
1001363c:	f000 84c9 	beq.w	10013fd2 <_vfiprintf_r+0xdd2>
10013640:	2a53      	cmp	r2, #83	@ 0x53
10013642:	f000 8421 	beq.w	10013e88 <_vfiprintf_r+0xc88>
10013646:	9b02      	ldr	r3, [sp, #8]
10013648:	f013 0510 	ands.w	r5, r3, #16
1001364c:	f040 841c 	bne.w	10013e88 <_vfiprintf_r+0xc88>
10013650:	9b05      	ldr	r3, [sp, #20]
10013652:	1c5a      	adds	r2, r3, #1
10013654:	f000 854e 	beq.w	100140f4 <_vfiprintf_r+0xef4>
10013658:	461a      	mov	r2, r3
1001365a:	4629      	mov	r1, r5
1001365c:	4620      	mov	r0, r4
1001365e:	f002 f8df 	bl	10015820 <memchr>
10013662:	900b      	str	r0, [sp, #44]	@ 0x2c
10013664:	2800      	cmp	r0, #0
10013666:	f000 853e 	beq.w	100140e6 <_vfiprintf_r+0xee6>
1001366a:	1b03      	subs	r3, r0, r4
1001366c:	9309      	str	r3, [sp, #36]	@ 0x24
1001366e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10013672:	9505      	str	r5, [sp, #20]
10013674:	960a      	str	r6, [sp, #40]	@ 0x28
10013676:	9304      	str	r3, [sp, #16]
10013678:	950b      	str	r5, [sp, #44]	@ 0x2c
1001367a:	e18d      	b.n	10013998 <_vfiprintf_r+0x798>
1001367c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001367e:	9406      	str	r4, [sp, #24]
10013680:	2a43      	cmp	r2, #67	@ 0x43
10013682:	f103 0504 	add.w	r5, r3, #4
10013686:	d003      	beq.n	10013690 <_vfiprintf_r+0x490>
10013688:	9b02      	ldr	r3, [sp, #8]
1001368a:	06de      	lsls	r6, r3, #27
1001368c:	f140 83e4 	bpl.w	10013e58 <_vfiprintf_r+0xc58>
10013690:	2208      	movs	r2, #8
10013692:	2100      	movs	r1, #0
10013694:	a818      	add	r0, sp, #96	@ 0x60
10013696:	f001 fddb 	bl	10015250 <memset>
1001369a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001369c:	ac2d      	add	r4, sp, #180	@ 0xb4
1001369e:	681a      	ldr	r2, [r3, #0]
100136a0:	4621      	mov	r1, r4
100136a2:	ab18      	add	r3, sp, #96	@ 0x60
100136a4:	4658      	mov	r0, fp
100136a6:	f002 fa17 	bl	10015ad8 <_wcrtomb_r>
100136aa:	4603      	mov	r3, r0
100136ac:	3301      	adds	r3, #1
100136ae:	9009      	str	r0, [sp, #36]	@ 0x24
100136b0:	f000 8541 	beq.w	10014136 <_vfiprintf_r+0xf36>
100136b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100136b6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
100136ba:	9304      	str	r3, [sp, #16]
100136bc:	2300      	movs	r3, #0
100136be:	950a      	str	r5, [sp, #40]	@ 0x28
100136c0:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100136c4:	e718      	b.n	100134f8 <_vfiprintf_r+0x2f8>
100136c6:	9b02      	ldr	r3, [sp, #8]
100136c8:	9406      	str	r4, [sp, #24]
100136ca:	069c      	lsls	r4, r3, #26
100136cc:	d56d      	bpl.n	100137aa <_vfiprintf_r+0x5aa>
100136ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100136d0:	3307      	adds	r3, #7
100136d2:	f023 0307 	bic.w	r3, r3, #7
100136d6:	4619      	mov	r1, r3
100136d8:	685a      	ldr	r2, [r3, #4]
100136da:	f851 3b08 	ldr.w	r3, [r1], #8
100136de:	910a      	str	r1, [sp, #40]	@ 0x28
100136e0:	4611      	mov	r1, r2
100136e2:	2a00      	cmp	r2, #0
100136e4:	f2c0 8137 	blt.w	10013956 <_vfiprintf_r+0x756>
100136e8:	9a05      	ldr	r2, [sp, #20]
100136ea:	3201      	adds	r2, #1
100136ec:	f000 8140 	beq.w	10013970 <_vfiprintf_r+0x770>
100136f0:	9a02      	ldr	r2, [sp, #8]
100136f2:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
100136f6:	9202      	str	r2, [sp, #8]
100136f8:	ea53 0201 	orrs.w	r2, r3, r1
100136fc:	f040 8138 	bne.w	10013970 <_vfiprintf_r+0x770>
10013700:	9b05      	ldr	r3, [sp, #20]
10013702:	2b00      	cmp	r3, #0
10013704:	f040 8508 	bne.w	10014118 <_vfiprintf_r+0xf18>
10013708:	9304      	str	r3, [sp, #16]
1001370a:	9309      	str	r3, [sp, #36]	@ 0x24
1001370c:	ac46      	add	r4, sp, #280	@ 0x118
1001370e:	e141      	b.n	10013994 <_vfiprintf_r+0x794>
10013710:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013712:	f853 2b04 	ldr.w	r2, [r3], #4
10013716:	9208      	str	r2, [sp, #32]
10013718:	2a00      	cmp	r2, #0
1001371a:	f280 8327 	bge.w	10013d6c <_vfiprintf_r+0xb6c>
1001371e:	9a08      	ldr	r2, [sp, #32]
10013720:	930a      	str	r3, [sp, #40]	@ 0x28
10013722:	4252      	negs	r2, r2
10013724:	9208      	str	r2, [sp, #32]
10013726:	9b02      	ldr	r3, [sp, #8]
10013728:	7822      	ldrb	r2, [r4, #0]
1001372a:	f043 0304 	orr.w	r3, r3, #4
1001372e:	9302      	str	r3, [sp, #8]
10013730:	e5ce      	b.n	100132d0 <_vfiprintf_r+0xd0>
10013732:	9b02      	ldr	r3, [sp, #8]
10013734:	9406      	str	r4, [sp, #24]
10013736:	f043 0210 	orr.w	r2, r3, #16
1001373a:	f012 0120 	ands.w	r1, r2, #32
1001373e:	f000 82e7 	beq.w	10013d10 <_vfiprintf_r+0xb10>
10013742:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013744:	3307      	adds	r3, #7
10013746:	f023 0307 	bic.w	r3, r3, #7
1001374a:	4618      	mov	r0, r3
1001374c:	6859      	ldr	r1, [r3, #4]
1001374e:	f850 3b08 	ldr.w	r3, [r0], #8
10013752:	900a      	str	r0, [sp, #40]	@ 0x28
10013754:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
10013758:	9402      	str	r4, [sp, #8]
1001375a:	9c05      	ldr	r4, [sp, #20]
1001375c:	2000      	movs	r0, #0
1001375e:	3401      	adds	r4, #1
10013760:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
10013764:	d05d      	beq.n	10013822 <_vfiprintf_r+0x622>
10013766:	ea53 0401 	orrs.w	r4, r3, r1
1001376a:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
1001376e:	f040 8414 	bne.w	10013f9a <_vfiprintf_r+0xd9a>
10013772:	9c02      	ldr	r4, [sp, #8]
10013774:	9202      	str	r2, [sp, #8]
10013776:	9b05      	ldr	r3, [sp, #20]
10013778:	2b00      	cmp	r3, #0
1001377a:	d14a      	bne.n	10013812 <_vfiprintf_r+0x612>
1001377c:	2800      	cmp	r0, #0
1001377e:	f040 82f0 	bne.w	10013d62 <_vfiprintf_r+0xb62>
10013782:	f014 0201 	ands.w	r2, r4, #1
10013786:	9209      	str	r2, [sp, #36]	@ 0x24
10013788:	f000 82f4 	beq.w	10013d74 <_vfiprintf_r+0xb74>
1001378c:	2330      	movs	r3, #48	@ 0x30
1001378e:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10013792:	9204      	str	r2, [sp, #16]
10013794:	f20d 1417 	addw	r4, sp, #279	@ 0x117
10013798:	e0fc      	b.n	10013994 <_vfiprintf_r+0x794>
1001379a:	9b02      	ldr	r3, [sp, #8]
1001379c:	9406      	str	r4, [sp, #24]
1001379e:	f043 0310 	orr.w	r3, r3, #16
100137a2:	9302      	str	r3, [sp, #8]
100137a4:	9b02      	ldr	r3, [sp, #8]
100137a6:	069c      	lsls	r4, r3, #26
100137a8:	d491      	bmi.n	100136ce <_vfiprintf_r+0x4ce>
100137aa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100137ac:	f852 3b04 	ldr.w	r3, [r2], #4
100137b0:	920a      	str	r2, [sp, #40]	@ 0x28
100137b2:	9a02      	ldr	r2, [sp, #8]
100137b4:	06d0      	lsls	r0, r2, #27
100137b6:	f100 82f2 	bmi.w	10013d9e <_vfiprintf_r+0xb9e>
100137ba:	9a02      	ldr	r2, [sp, #8]
100137bc:	0651      	lsls	r1, r2, #25
100137be:	f140 82ea 	bpl.w	10013d96 <_vfiprintf_r+0xb96>
100137c2:	f343 31c0 	sbfx	r1, r3, #15, #1
100137c6:	460a      	mov	r2, r1
100137c8:	b21b      	sxth	r3, r3
100137ca:	e78a      	b.n	100136e2 <_vfiprintf_r+0x4e2>
100137cc:	9b02      	ldr	r3, [sp, #8]
100137ce:	9406      	str	r4, [sp, #24]
100137d0:	f043 0410 	orr.w	r4, r3, #16
100137d4:	f014 0120 	ands.w	r1, r4, #32
100137d8:	f000 828b 	beq.w	10013cf2 <_vfiprintf_r+0xaf2>
100137dc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100137de:	3307      	adds	r3, #7
100137e0:	f023 0307 	bic.w	r3, r3, #7
100137e4:	461a      	mov	r2, r3
100137e6:	6859      	ldr	r1, [r3, #4]
100137e8:	f852 3b08 	ldr.w	r3, [r2], #8
100137ec:	920a      	str	r2, [sp, #40]	@ 0x28
100137ee:	2200      	movs	r2, #0
100137f0:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
100137f4:	9a05      	ldr	r2, [sp, #20]
100137f6:	3201      	adds	r2, #1
100137f8:	f000 83d1 	beq.w	10013f9e <_vfiprintf_r+0xd9e>
100137fc:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
10013800:	9202      	str	r2, [sp, #8]
10013802:	ea53 0201 	orrs.w	r2, r3, r1
10013806:	f040 80b3 	bne.w	10013970 <_vfiprintf_r+0x770>
1001380a:	9b05      	ldr	r3, [sp, #20]
1001380c:	2001      	movs	r0, #1
1001380e:	2b00      	cmp	r3, #0
10013810:	d0b4      	beq.n	1001377c <_vfiprintf_r+0x57c>
10013812:	2801      	cmp	r0, #1
10013814:	f000 8480 	beq.w	10014118 <_vfiprintf_r+0xf18>
10013818:	2300      	movs	r3, #0
1001381a:	2802      	cmp	r0, #2
1001381c:	4619      	mov	r1, r3
1001381e:	f000 8199 	beq.w	10013b54 <_vfiprintf_r+0x954>
10013822:	ac46      	add	r4, sp, #280	@ 0x118
10013824:	f003 0207 	and.w	r2, r3, #7
10013828:	08db      	lsrs	r3, r3, #3
1001382a:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
1001382e:	08c9      	lsrs	r1, r1, #3
10013830:	3230      	adds	r2, #48	@ 0x30
10013832:	ea53 0501 	orrs.w	r5, r3, r1
10013836:	4620      	mov	r0, r4
10013838:	f804 2d01 	strb.w	r2, [r4, #-1]!
1001383c:	d1f2      	bne.n	10013824 <_vfiprintf_r+0x624>
1001383e:	9b02      	ldr	r3, [sp, #8]
10013840:	07dd      	lsls	r5, r3, #31
10013842:	f140 8195 	bpl.w	10013b70 <_vfiprintf_r+0x970>
10013846:	2a30      	cmp	r2, #48	@ 0x30
10013848:	f000 8192 	beq.w	10013b70 <_vfiprintf_r+0x970>
1001384c:	2330      	movs	r3, #48	@ 0x30
1001384e:	9a05      	ldr	r2, [sp, #20]
10013850:	f804 3c01 	strb.w	r3, [r4, #-1]
10013854:	3802      	subs	r0, #2
10013856:	ab46      	add	r3, sp, #280	@ 0x118
10013858:	1a1b      	subs	r3, r3, r0
1001385a:	429a      	cmp	r2, r3
1001385c:	bfb8      	it	lt
1001385e:	461a      	movlt	r2, r3
10013860:	9309      	str	r3, [sp, #36]	@ 0x24
10013862:	4604      	mov	r4, r0
10013864:	9204      	str	r2, [sp, #16]
10013866:	e095      	b.n	10013994 <_vfiprintf_r+0x794>
10013868:	7822      	ldrb	r2, [r4, #0]
1001386a:	9b02      	ldr	r3, [sp, #8]
1001386c:	2a68      	cmp	r2, #104	@ 0x68
1001386e:	f000 839d 	beq.w	10013fac <_vfiprintf_r+0xdac>
10013872:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013876:	9302      	str	r3, [sp, #8]
10013878:	e52a      	b.n	100132d0 <_vfiprintf_r+0xd0>
1001387a:	9b02      	ldr	r3, [sp, #8]
1001387c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001387e:	9406      	str	r4, [sp, #24]
10013880:	f043 0302 	orr.w	r3, r3, #2
10013884:	9302      	str	r3, [sp, #8]
10013886:	f852 3b04 	ldr.w	r3, [r2], #4
1001388a:	920a      	str	r2, [sp, #40]	@ 0x28
1001388c:	f647 0230 	movw	r2, #30768	@ 0x7830
10013890:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
10013894:	4abb      	ldr	r2, [pc, #748]	@ (10013b84 <_vfiprintf_r+0x984>)
10013896:	920d      	str	r2, [sp, #52]	@ 0x34
10013898:	2100      	movs	r1, #0
1001389a:	2200      	movs	r2, #0
1001389c:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
100138a0:	9a05      	ldr	r2, [sp, #20]
100138a2:	3201      	adds	r2, #1
100138a4:	f000 8156 	beq.w	10013b54 <_vfiprintf_r+0x954>
100138a8:	9c02      	ldr	r4, [sp, #8]
100138aa:	ea53 0001 	orrs.w	r0, r3, r1
100138ae:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
100138b2:	9202      	str	r2, [sp, #8]
100138b4:	f040 814e 	bne.w	10013b54 <_vfiprintf_r+0x954>
100138b8:	2002      	movs	r0, #2
100138ba:	e75c      	b.n	10013776 <_vfiprintf_r+0x576>
100138bc:	9b02      	ldr	r3, [sp, #8]
100138be:	9406      	str	r4, [sp, #24]
100138c0:	069e      	lsls	r6, r3, #26
100138c2:	f140 827e 	bpl.w	10013dc2 <_vfiprintf_r+0xbc2>
100138c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100138c8:	9a07      	ldr	r2, [sp, #28]
100138ca:	681b      	ldr	r3, [r3, #0]
100138cc:	601a      	str	r2, [r3, #0]
100138ce:	17d2      	asrs	r2, r2, #31
100138d0:	605a      	str	r2, [r3, #4]
100138d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100138d4:	3304      	adds	r3, #4
100138d6:	930a      	str	r3, [sp, #40]	@ 0x28
100138d8:	e4d5      	b.n	10013286 <_vfiprintf_r+0x86>
100138da:	9b02      	ldr	r3, [sp, #8]
100138dc:	7822      	ldrb	r2, [r4, #0]
100138de:	f043 0301 	orr.w	r3, r3, #1
100138e2:	9302      	str	r3, [sp, #8]
100138e4:	e4f4      	b.n	100132d0 <_vfiprintf_r+0xd0>
100138e6:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
100138ea:	7822      	ldrb	r2, [r4, #0]
100138ec:	2b00      	cmp	r3, #0
100138ee:	f47f acef 	bne.w	100132d0 <_vfiprintf_r+0xd0>
100138f2:	2320      	movs	r3, #32
100138f4:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100138f8:	e4ea      	b.n	100132d0 <_vfiprintf_r+0xd0>
100138fa:	9b02      	ldr	r3, [sp, #8]
100138fc:	7822      	ldrb	r2, [r4, #0]
100138fe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10013902:	9302      	str	r3, [sp, #8]
10013904:	e4e4      	b.n	100132d0 <_vfiprintf_r+0xd0>
10013906:	4621      	mov	r1, r4
10013908:	f811 2b01 	ldrb.w	r2, [r1], #1
1001390c:	2a2a      	cmp	r2, #42	@ 0x2a
1001390e:	f000 8433 	beq.w	10014178 <_vfiprintf_r+0xf78>
10013912:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10013916:	2b09      	cmp	r3, #9
10013918:	460c      	mov	r4, r1
1001391a:	f200 83f6 	bhi.w	1001410a <_vfiprintf_r+0xf0a>
1001391e:	2200      	movs	r2, #0
10013920:	4611      	mov	r1, r2
10013922:	f814 2b01 	ldrb.w	r2, [r4], #1
10013926:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001392a:	eb03 0141 	add.w	r1, r3, r1, lsl #1
1001392e:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10013932:	2b09      	cmp	r3, #9
10013934:	d9f5      	bls.n	10013922 <_vfiprintf_r+0x722>
10013936:	9105      	str	r1, [sp, #20]
10013938:	e4cb      	b.n	100132d2 <_vfiprintf_r+0xd2>
1001393a:	232b      	movs	r3, #43	@ 0x2b
1001393c:	7822      	ldrb	r2, [r4, #0]
1001393e:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10013942:	e4c5      	b.n	100132d0 <_vfiprintf_r+0xd0>
10013944:	7822      	ldrb	r2, [r4, #0]
10013946:	9b02      	ldr	r3, [sp, #8]
10013948:	2a6c      	cmp	r2, #108	@ 0x6c
1001394a:	f000 8336 	beq.w	10013fba <_vfiprintf_r+0xdba>
1001394e:	f043 0310 	orr.w	r3, r3, #16
10013952:	9302      	str	r3, [sp, #8]
10013954:	e4bc      	b.n	100132d0 <_vfiprintf_r+0xd0>
10013956:	222d      	movs	r2, #45	@ 0x2d
10013958:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001395c:	9a05      	ldr	r2, [sp, #20]
1001395e:	425b      	negs	r3, r3
10013960:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10013964:	3201      	adds	r2, #1
10013966:	d003      	beq.n	10013970 <_vfiprintf_r+0x770>
10013968:	9a02      	ldr	r2, [sp, #8]
1001396a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
1001396e:	9202      	str	r2, [sp, #8]
10013970:	2b0a      	cmp	r3, #10
10013972:	f171 0200 	sbcs.w	r2, r1, #0
10013976:	f080 82bd 	bcs.w	10013ef4 <_vfiprintf_r+0xcf4>
1001397a:	3330      	adds	r3, #48	@ 0x30
1001397c:	b2db      	uxtb	r3, r3
1001397e:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10013982:	9b05      	ldr	r3, [sp, #20]
10013984:	2b01      	cmp	r3, #1
10013986:	bfb8      	it	lt
10013988:	2301      	movlt	r3, #1
1001398a:	9304      	str	r3, [sp, #16]
1001398c:	2301      	movs	r3, #1
1001398e:	9309      	str	r3, [sp, #36]	@ 0x24
10013990:	f20d 1417 	addw	r4, sp, #279	@ 0x117
10013994:	2300      	movs	r3, #0
10013996:	930b      	str	r3, [sp, #44]	@ 0x2c
10013998:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
1001399c:	2b00      	cmp	r3, #0
1001399e:	f43f adae 	beq.w	100134fe <_vfiprintf_r+0x2fe>
100139a2:	9b04      	ldr	r3, [sp, #16]
100139a4:	3301      	adds	r3, #1
100139a6:	9304      	str	r3, [sp, #16]
100139a8:	e5a9      	b.n	100134fe <_vfiprintf_r+0x2fe>
100139aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100139ac:	941d      	str	r4, [sp, #116]	@ 0x74
100139ae:	2201      	movs	r2, #1
100139b0:	931e      	str	r3, [sp, #120]	@ 0x78
100139b2:	931c      	str	r3, [sp, #112]	@ 0x70
100139b4:	921b      	str	r2, [sp, #108]	@ 0x6c
100139b6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100139ba:	f109 0908 	add.w	r9, r9, #8
100139be:	e60c      	b.n	100135da <_vfiprintf_r+0x3da>
100139c0:	9b08      	ldr	r3, [sp, #32]
100139c2:	9804      	ldr	r0, [sp, #16]
100139c4:	1a1d      	subs	r5, r3, r0
100139c6:	2d00      	cmp	r5, #0
100139c8:	f77f ade7 	ble.w	1001359a <_vfiprintf_r+0x39a>
100139cc:	2d10      	cmp	r5, #16
100139ce:	f340 83cb 	ble.w	10014168 <_vfiprintf_r+0xf68>
100139d2:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 10013b88 <_vfiprintf_r+0x988>
100139d6:	4643      	mov	r3, r8
100139d8:	2610      	movs	r6, #16
100139da:	46a0      	mov	r8, r4
100139dc:	4661      	mov	r1, ip
100139de:	461c      	mov	r4, r3
100139e0:	e007      	b.n	100139f2 <_vfiprintf_r+0x7f2>
100139e2:	f102 0c02 	add.w	ip, r2, #2
100139e6:	f109 0908 	add.w	r9, r9, #8
100139ea:	4602      	mov	r2, r0
100139ec:	3d10      	subs	r5, #16
100139ee:	2d10      	cmp	r5, #16
100139f0:	dd1a      	ble.n	10013a28 <_vfiprintf_r+0x828>
100139f2:	1c50      	adds	r0, r2, #1
100139f4:	3110      	adds	r1, #16
100139f6:	2807      	cmp	r0, #7
100139f8:	e9c9 4600 	strd	r4, r6, [r9]
100139fc:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
10013a00:	ddef      	ble.n	100139e2 <_vfiprintf_r+0x7e2>
10013a02:	aa1a      	add	r2, sp, #104	@ 0x68
10013a04:	2900      	cmp	r1, #0
10013a06:	d07c      	beq.n	10013b02 <_vfiprintf_r+0x902>
10013a08:	9903      	ldr	r1, [sp, #12]
10013a0a:	4658      	mov	r0, fp
10013a0c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013a10:	f7ff fbb0 	bl	10013174 <__sprint_r.part.0>
10013a14:	2800      	cmp	r0, #0
10013a16:	f47f ad4b 	bne.w	100134b0 <_vfiprintf_r+0x2b0>
10013a1a:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
10013a1e:	3d10      	subs	r5, #16
10013a20:	2d10      	cmp	r5, #16
10013a22:	f102 0c01 	add.w	ip, r2, #1
10013a26:	dce4      	bgt.n	100139f2 <_vfiprintf_r+0x7f2>
10013a28:	4623      	mov	r3, r4
10013a2a:	4660      	mov	r0, ip
10013a2c:	4644      	mov	r4, r8
10013a2e:	468c      	mov	ip, r1
10013a30:	4698      	mov	r8, r3
10013a32:	44ac      	add	ip, r5
10013a34:	2807      	cmp	r0, #7
10013a36:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
10013a3a:	f8c9 8000 	str.w	r8, [r9]
10013a3e:	f8c9 5004 	str.w	r5, [r9, #4]
10013a42:	f340 81a3 	ble.w	10013d8c <_vfiprintf_r+0xb8c>
10013a46:	f1bc 0f00 	cmp.w	ip, #0
10013a4a:	f000 8327 	beq.w	1001409c <_vfiprintf_r+0xe9c>
10013a4e:	9903      	ldr	r1, [sp, #12]
10013a50:	aa1a      	add	r2, sp, #104	@ 0x68
10013a52:	4658      	mov	r0, fp
10013a54:	f7ff fb8e 	bl	10013174 <__sprint_r.part.0>
10013a58:	2800      	cmp	r0, #0
10013a5a:	f47f ad29 	bne.w	100134b0 <_vfiprintf_r+0x2b0>
10013a5e:	9b05      	ldr	r3, [sp, #20]
10013a60:	9809      	ldr	r0, [sp, #36]	@ 0x24
10013a62:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10013a66:	1a1d      	subs	r5, r3, r0
10013a68:	2d00      	cmp	r5, #0
10013a6a:	f102 0101 	add.w	r1, r2, #1
10013a6e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013a72:	f77f ad98 	ble.w	100135a6 <_vfiprintf_r+0x3a6>
10013a76:	2d10      	cmp	r5, #16
10013a78:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 10013b88 <_vfiprintf_r+0x988>
10013a7c:	dd2d      	ble.n	10013ada <_vfiprintf_r+0x8da>
10013a7e:	462b      	mov	r3, r5
10013a80:	2610      	movs	r6, #16
10013a82:	4625      	mov	r5, r4
10013a84:	4660      	mov	r0, ip
10013a86:	461c      	mov	r4, r3
10013a88:	e007      	b.n	10013a9a <_vfiprintf_r+0x89a>
10013a8a:	f102 0c02 	add.w	ip, r2, #2
10013a8e:	f109 0908 	add.w	r9, r9, #8
10013a92:	460a      	mov	r2, r1
10013a94:	3c10      	subs	r4, #16
10013a96:	2c10      	cmp	r4, #16
10013a98:	dd1a      	ble.n	10013ad0 <_vfiprintf_r+0x8d0>
10013a9a:	1c51      	adds	r1, r2, #1
10013a9c:	4b3a      	ldr	r3, [pc, #232]	@ (10013b88 <_vfiprintf_r+0x988>)
10013a9e:	3010      	adds	r0, #16
10013aa0:	2907      	cmp	r1, #7
10013aa2:	e9c9 3600 	strd	r3, r6, [r9]
10013aa6:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
10013aaa:	ddee      	ble.n	10013a8a <_vfiprintf_r+0x88a>
10013aac:	aa1a      	add	r2, sp, #104	@ 0x68
10013aae:	b310      	cbz	r0, 10013af6 <_vfiprintf_r+0x8f6>
10013ab0:	9903      	ldr	r1, [sp, #12]
10013ab2:	4658      	mov	r0, fp
10013ab4:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013ab8:	f7ff fb5c 	bl	10013174 <__sprint_r.part.0>
10013abc:	2800      	cmp	r0, #0
10013abe:	f47f acf7 	bne.w	100134b0 <_vfiprintf_r+0x2b0>
10013ac2:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
10013ac6:	3c10      	subs	r4, #16
10013ac8:	2c10      	cmp	r4, #16
10013aca:	f102 0c01 	add.w	ip, r2, #1
10013ace:	dce4      	bgt.n	10013a9a <_vfiprintf_r+0x89a>
10013ad0:	4623      	mov	r3, r4
10013ad2:	4661      	mov	r1, ip
10013ad4:	462c      	mov	r4, r5
10013ad6:	4684      	mov	ip, r0
10013ad8:	461d      	mov	r5, r3
10013ada:	44ac      	add	ip, r5
10013adc:	2907      	cmp	r1, #7
10013ade:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10013ae2:	f8c9 8000 	str.w	r8, [r9]
10013ae6:	f8c9 5004 	str.w	r5, [r9, #4]
10013aea:	f300 80ec 	bgt.w	10013cc6 <_vfiprintf_r+0xac6>
10013aee:	f109 0908 	add.w	r9, r9, #8
10013af2:	3101      	adds	r1, #1
10013af4:	e557      	b.n	100135a6 <_vfiprintf_r+0x3a6>
10013af6:	f04f 0c01 	mov.w	ip, #1
10013afa:	4602      	mov	r2, r0
10013afc:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013b00:	e7c8      	b.n	10013a94 <_vfiprintf_r+0x894>
10013b02:	f04f 0c01 	mov.w	ip, #1
10013b06:	460a      	mov	r2, r1
10013b08:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013b0c:	e76e      	b.n	100139ec <_vfiprintf_r+0x7ec>
10013b0e:	f1bc 0f00 	cmp.w	ip, #0
10013b12:	d00f      	beq.n	10013b34 <_vfiprintf_r+0x934>
10013b14:	9903      	ldr	r1, [sp, #12]
10013b16:	9311      	str	r3, [sp, #68]	@ 0x44
10013b18:	aa1a      	add	r2, sp, #104	@ 0x68
10013b1a:	4658      	mov	r0, fp
10013b1c:	f7ff fb2a 	bl	10013174 <__sprint_r.part.0>
10013b20:	2800      	cmp	r0, #0
10013b22:	f47f acc5 	bne.w	100134b0 <_vfiprintf_r+0x2b0>
10013b26:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10013b2a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10013b2c:	1c51      	adds	r1, r2, #1
10013b2e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013b32:	e50f      	b.n	10013554 <_vfiprintf_r+0x354>
10013b34:	2b00      	cmp	r3, #0
10013b36:	f000 8155 	beq.w	10013de4 <_vfiprintf_r+0xbe4>
10013b3a:	2302      	movs	r3, #2
10013b3c:	931e      	str	r3, [sp, #120]	@ 0x78
10013b3e:	469c      	mov	ip, r3
10013b40:	ab13      	add	r3, sp, #76	@ 0x4c
10013b42:	931d      	str	r3, [sp, #116]	@ 0x74
10013b44:	2101      	movs	r1, #1
10013b46:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013b4a:	460a      	mov	r2, r1
10013b4c:	f109 0908 	add.w	r9, r9, #8
10013b50:	3101      	adds	r1, #1
10013b52:	e51e      	b.n	10013592 <_vfiprintf_r+0x392>
10013b54:	980d      	ldr	r0, [sp, #52]	@ 0x34
10013b56:	ac46      	add	r4, sp, #280	@ 0x118
10013b58:	f003 020f 	and.w	r2, r3, #15
10013b5c:	091b      	lsrs	r3, r3, #4
10013b5e:	5c82      	ldrb	r2, [r0, r2]
10013b60:	f804 2d01 	strb.w	r2, [r4, #-1]!
10013b64:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
10013b68:	0909      	lsrs	r1, r1, #4
10013b6a:	ea53 0201 	orrs.w	r2, r3, r1
10013b6e:	d1f3      	bne.n	10013b58 <_vfiprintf_r+0x958>
10013b70:	9a05      	ldr	r2, [sp, #20]
10013b72:	ab46      	add	r3, sp, #280	@ 0x118
10013b74:	1b1b      	subs	r3, r3, r4
10013b76:	429a      	cmp	r2, r3
10013b78:	bfb8      	it	lt
10013b7a:	461a      	movlt	r2, r3
10013b7c:	9309      	str	r3, [sp, #36]	@ 0x24
10013b7e:	9204      	str	r2, [sp, #16]
10013b80:	e708      	b.n	10013994 <_vfiprintf_r+0x794>
10013b82:	bf00      	nop
10013b84:	1001e6a8 	.word	0x1001e6a8
10013b88:	1001ea7c 	.word	0x1001ea7c
10013b8c:	2d10      	cmp	r5, #16
10013b8e:	f340 82c0 	ble.w	10014112 <_vfiprintf_r+0xf12>
10013b92:	4eae      	ldr	r6, [pc, #696]	@ (10013e4c <_vfiprintf_r+0xc4c>)
10013b94:	9311      	str	r3, [sp, #68]	@ 0x44
10013b96:	4649      	mov	r1, r9
10013b98:	f04f 0810 	mov.w	r8, #16
10013b9c:	46a1      	mov	r9, r4
10013b9e:	4634      	mov	r4, r6
10013ba0:	4666      	mov	r6, ip
10013ba2:	e007      	b.n	10013bb4 <_vfiprintf_r+0x9b4>
10013ba4:	f102 0e02 	add.w	lr, r2, #2
10013ba8:	3108      	adds	r1, #8
10013baa:	4602      	mov	r2, r0
10013bac:	3d10      	subs	r5, #16
10013bae:	2d10      	cmp	r5, #16
10013bb0:	dd18      	ble.n	10013be4 <_vfiprintf_r+0x9e4>
10013bb2:	1c50      	adds	r0, r2, #1
10013bb4:	3610      	adds	r6, #16
10013bb6:	2807      	cmp	r0, #7
10013bb8:	e9c1 4800 	strd	r4, r8, [r1]
10013bbc:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
10013bc0:	ddf0      	ble.n	10013ba4 <_vfiprintf_r+0x9a4>
10013bc2:	9903      	ldr	r1, [sp, #12]
10013bc4:	aa1a      	add	r2, sp, #104	@ 0x68
10013bc6:	4658      	mov	r0, fp
10013bc8:	b316      	cbz	r6, 10013c10 <_vfiprintf_r+0xa10>
10013bca:	f7ff fad3 	bl	10013174 <__sprint_r.part.0>
10013bce:	2800      	cmp	r0, #0
10013bd0:	f47f ac6e 	bne.w	100134b0 <_vfiprintf_r+0x2b0>
10013bd4:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
10013bd8:	3d10      	subs	r5, #16
10013bda:	2d10      	cmp	r5, #16
10013bdc:	f102 0e01 	add.w	lr, r2, #1
10013be0:	a91d      	add	r1, sp, #116	@ 0x74
10013be2:	dce6      	bgt.n	10013bb2 <_vfiprintf_r+0x9b2>
10013be4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10013be6:	46b4      	mov	ip, r6
10013be8:	4626      	mov	r6, r4
10013bea:	464c      	mov	r4, r9
10013bec:	4689      	mov	r9, r1
10013bee:	44ac      	add	ip, r5
10013bf0:	f1be 0f07 	cmp.w	lr, #7
10013bf4:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
10013bf8:	f8c9 6000 	str.w	r6, [r9]
10013bfc:	f8c9 5004 	str.w	r5, [r9, #4]
10013c00:	f300 809a 	bgt.w	10013d38 <_vfiprintf_r+0xb38>
10013c04:	f109 0908 	add.w	r9, r9, #8
10013c08:	f10e 0101 	add.w	r1, lr, #1
10013c0c:	4672      	mov	r2, lr
10013c0e:	e48c      	b.n	1001352a <_vfiprintf_r+0x32a>
10013c10:	4632      	mov	r2, r6
10013c12:	f04f 0e01 	mov.w	lr, #1
10013c16:	a91d      	add	r1, sp, #116	@ 0x74
10013c18:	e7c8      	b.n	10013bac <_vfiprintf_r+0x9ac>
10013c1a:	9a02      	ldr	r2, [sp, #8]
10013c1c:	931b      	str	r3, [sp, #108]	@ 0x6c
10013c1e:	0754      	lsls	r4, r2, #29
10013c20:	d548      	bpl.n	10013cb4 <_vfiprintf_r+0xab4>
10013c22:	9a08      	ldr	r2, [sp, #32]
10013c24:	9904      	ldr	r1, [sp, #16]
10013c26:	1a54      	subs	r4, r2, r1
10013c28:	2c00      	cmp	r4, #0
10013c2a:	dd43      	ble.n	10013cb4 <_vfiprintf_r+0xab4>
10013c2c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013c30:	2c10      	cmp	r4, #16
10013c32:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10013c34:	f340 827c 	ble.w	10014130 <_vfiprintf_r+0xf30>
10013c38:	4e84      	ldr	r6, [pc, #528]	@ (10013e4c <_vfiprintf_r+0xc4c>)
10013c3a:	f8dd 800c 	ldr.w	r8, [sp, #12]
10013c3e:	2510      	movs	r5, #16
10013c40:	e006      	b.n	10013c50 <_vfiprintf_r+0xa50>
10013c42:	1c88      	adds	r0, r1, #2
10013c44:	f109 0908 	add.w	r9, r9, #8
10013c48:	4611      	mov	r1, r2
10013c4a:	3c10      	subs	r4, #16
10013c4c:	2c10      	cmp	r4, #16
10013c4e:	dd19      	ble.n	10013c84 <_vfiprintf_r+0xa84>
10013c50:	1c4a      	adds	r2, r1, #1
10013c52:	3310      	adds	r3, #16
10013c54:	2a07      	cmp	r2, #7
10013c56:	e9c9 6500 	strd	r6, r5, [r9]
10013c5a:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
10013c5e:	ddf0      	ble.n	10013c42 <_vfiprintf_r+0xa42>
10013c60:	aa1a      	add	r2, sp, #104	@ 0x68
10013c62:	b313      	cbz	r3, 10013caa <_vfiprintf_r+0xaaa>
10013c64:	4641      	mov	r1, r8
10013c66:	4658      	mov	r0, fp
10013c68:	f7ff fa84 	bl	10013174 <__sprint_r.part.0>
10013c6c:	2800      	cmp	r0, #0
10013c6e:	f47f ac1f 	bne.w	100134b0 <_vfiprintf_r+0x2b0>
10013c72:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
10013c76:	3c10      	subs	r4, #16
10013c78:	2c10      	cmp	r4, #16
10013c7a:	f101 0001 	add.w	r0, r1, #1
10013c7e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013c82:	dce5      	bgt.n	10013c50 <_vfiprintf_r+0xa50>
10013c84:	4423      	add	r3, r4
10013c86:	2807      	cmp	r0, #7
10013c88:	e9c9 6400 	strd	r6, r4, [r9]
10013c8c:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
10013c90:	f77f acac 	ble.w	100135ec <_vfiprintf_r+0x3ec>
10013c94:	b173      	cbz	r3, 10013cb4 <_vfiprintf_r+0xab4>
10013c96:	9903      	ldr	r1, [sp, #12]
10013c98:	aa1a      	add	r2, sp, #104	@ 0x68
10013c9a:	4658      	mov	r0, fp
10013c9c:	f7ff fa6a 	bl	10013174 <__sprint_r.part.0>
10013ca0:	2800      	cmp	r0, #0
10013ca2:	f47f ac05 	bne.w	100134b0 <_vfiprintf_r+0x2b0>
10013ca6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10013ca8:	e4a0      	b.n	100135ec <_vfiprintf_r+0x3ec>
10013caa:	2001      	movs	r0, #1
10013cac:	4619      	mov	r1, r3
10013cae:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013cb2:	e7ca      	b.n	10013c4a <_vfiprintf_r+0xa4a>
10013cb4:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
10013cb8:	9904      	ldr	r1, [sp, #16]
10013cba:	428a      	cmp	r2, r1
10013cbc:	bfac      	ite	ge
10013cbe:	189b      	addge	r3, r3, r2
10013cc0:	185b      	addlt	r3, r3, r1
10013cc2:	9307      	str	r3, [sp, #28]
10013cc4:	e49d      	b.n	10013602 <_vfiprintf_r+0x402>
10013cc6:	f1bc 0f00 	cmp.w	ip, #0
10013cca:	f43f ae6e 	beq.w	100139aa <_vfiprintf_r+0x7aa>
10013cce:	9903      	ldr	r1, [sp, #12]
10013cd0:	aa1a      	add	r2, sp, #104	@ 0x68
10013cd2:	4658      	mov	r0, fp
10013cd4:	f7ff fa4e 	bl	10013174 <__sprint_r.part.0>
10013cd8:	2800      	cmp	r0, #0
10013cda:	f47f abe9 	bne.w	100134b0 <_vfiprintf_r+0x2b0>
10013cde:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10013ce0:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
10013ce4:	3101      	adds	r1, #1
10013ce6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013cea:	e45c      	b.n	100135a6 <_vfiprintf_r+0x3a6>
10013cec:	921b      	str	r2, [sp, #108]	@ 0x6c
10013cee:	f7ff bbd4 	b.w	1001349a <_vfiprintf_r+0x29a>
10013cf2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10013cf4:	f852 3b04 	ldr.w	r3, [r2], #4
10013cf8:	920a      	str	r2, [sp, #40]	@ 0x28
10013cfa:	f014 0210 	ands.w	r2, r4, #16
10013cfe:	f47f ad76 	bne.w	100137ee <_vfiprintf_r+0x5ee>
10013d02:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10013d06:	f000 816e 	beq.w	10013fe6 <_vfiprintf_r+0xde6>
10013d0a:	b29b      	uxth	r3, r3
10013d0c:	4611      	mov	r1, r2
10013d0e:	e56e      	b.n	100137ee <_vfiprintf_r+0x5ee>
10013d10:	980a      	ldr	r0, [sp, #40]	@ 0x28
10013d12:	f850 3b04 	ldr.w	r3, [r0], #4
10013d16:	900a      	str	r0, [sp, #40]	@ 0x28
10013d18:	f012 0010 	ands.w	r0, r2, #16
10013d1c:	f47f ad1a 	bne.w	10013754 <_vfiprintf_r+0x554>
10013d20:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
10013d24:	f000 8167 	beq.w	10013ff6 <_vfiprintf_r+0xdf6>
10013d28:	b29b      	uxth	r3, r3
10013d2a:	4601      	mov	r1, r0
10013d2c:	e512      	b.n	10013754 <_vfiprintf_r+0x554>
10013d2e:	2101      	movs	r1, #1
10013d30:	4662      	mov	r2, ip
10013d32:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013d36:	e42c      	b.n	10013592 <_vfiprintf_r+0x392>
10013d38:	f1bc 0f00 	cmp.w	ip, #0
10013d3c:	f000 8095 	beq.w	10013e6a <_vfiprintf_r+0xc6a>
10013d40:	9903      	ldr	r1, [sp, #12]
10013d42:	9311      	str	r3, [sp, #68]	@ 0x44
10013d44:	aa1a      	add	r2, sp, #104	@ 0x68
10013d46:	4658      	mov	r0, fp
10013d48:	f7ff fa14 	bl	10013174 <__sprint_r.part.0>
10013d4c:	2800      	cmp	r0, #0
10013d4e:	f47f abaf 	bne.w	100134b0 <_vfiprintf_r+0x2b0>
10013d52:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10013d56:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10013d58:	1c51      	adds	r1, r2, #1
10013d5a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013d5e:	f7ff bbe4 	b.w	1001352a <_vfiprintf_r+0x32a>
10013d62:	9b05      	ldr	r3, [sp, #20]
10013d64:	9304      	str	r3, [sp, #16]
10013d66:	9309      	str	r3, [sp, #36]	@ 0x24
10013d68:	ac46      	add	r4, sp, #280	@ 0x118
10013d6a:	e613      	b.n	10013994 <_vfiprintf_r+0x794>
10013d6c:	7822      	ldrb	r2, [r4, #0]
10013d6e:	930a      	str	r3, [sp, #40]	@ 0x28
10013d70:	f7ff baae 	b.w	100132d0 <_vfiprintf_r+0xd0>
10013d74:	9b05      	ldr	r3, [sp, #20]
10013d76:	9304      	str	r3, [sp, #16]
10013d78:	ac46      	add	r4, sp, #280	@ 0x118
10013d7a:	e60b      	b.n	10013994 <_vfiprintf_r+0x794>
10013d7c:	9d03      	ldr	r5, [sp, #12]
10013d7e:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10013d80:	f001 fd4a 	bl	10015818 <__retarget_lock_acquire_recursive>
10013d84:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
10013d88:	f7ff ba59 	b.w	1001323e <_vfiprintf_r+0x3e>
10013d8c:	f109 0908 	add.w	r9, r9, #8
10013d90:	1c41      	adds	r1, r0, #1
10013d92:	4602      	mov	r2, r0
10013d94:	e401      	b.n	1001359a <_vfiprintf_r+0x39a>
10013d96:	9a02      	ldr	r2, [sp, #8]
10013d98:	0592      	lsls	r2, r2, #22
10013d9a:	f100 8185 	bmi.w	100140a8 <_vfiprintf_r+0xea8>
10013d9e:	17d9      	asrs	r1, r3, #31
10013da0:	460a      	mov	r2, r1
10013da2:	e49e      	b.n	100136e2 <_vfiprintf_r+0x4e2>
10013da4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10013da6:	7822      	ldrb	r2, [r4, #0]
10013da8:	2b00      	cmp	r3, #0
10013daa:	f43f aa91 	beq.w	100132d0 <_vfiprintf_r+0xd0>
10013dae:	781b      	ldrb	r3, [r3, #0]
10013db0:	2b00      	cmp	r3, #0
10013db2:	f43f aa8d 	beq.w	100132d0 <_vfiprintf_r+0xd0>
10013db6:	9b02      	ldr	r3, [sp, #8]
10013db8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
10013dbc:	9302      	str	r3, [sp, #8]
10013dbe:	f7ff ba87 	b.w	100132d0 <_vfiprintf_r+0xd0>
10013dc2:	9b02      	ldr	r3, [sp, #8]
10013dc4:	06dd      	lsls	r5, r3, #27
10013dc6:	f100 80ff 	bmi.w	10013fc8 <_vfiprintf_r+0xdc8>
10013dca:	9b02      	ldr	r3, [sp, #8]
10013dcc:	065c      	lsls	r4, r3, #25
10013dce:	f100 8177 	bmi.w	100140c0 <_vfiprintf_r+0xec0>
10013dd2:	9b02      	ldr	r3, [sp, #8]
10013dd4:	0598      	lsls	r0, r3, #22
10013dd6:	f140 80f7 	bpl.w	10013fc8 <_vfiprintf_r+0xdc8>
10013dda:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013ddc:	9a07      	ldr	r2, [sp, #28]
10013dde:	681b      	ldr	r3, [r3, #0]
10013de0:	701a      	strb	r2, [r3, #0]
10013de2:	e576      	b.n	100138d2 <_vfiprintf_r+0x6d2>
10013de4:	4662      	mov	r2, ip
10013de6:	2101      	movs	r1, #1
10013de8:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013dec:	f7ff bbd1 	b.w	10013592 <_vfiprintf_r+0x392>
10013df0:	9406      	str	r4, [sp, #24]
10013df2:	9c02      	ldr	r4, [sp, #8]
10013df4:	e4ee      	b.n	100137d4 <_vfiprintf_r+0x5d4>
10013df6:	9a02      	ldr	r2, [sp, #8]
10013df8:	9406      	str	r4, [sp, #24]
10013dfa:	e49e      	b.n	1001373a <_vfiprintf_r+0x53a>
10013dfc:	4b14      	ldr	r3, [pc, #80]	@ (10013e50 <_vfiprintf_r+0xc50>)
10013dfe:	9406      	str	r4, [sp, #24]
10013e00:	930d      	str	r3, [sp, #52]	@ 0x34
10013e02:	9b02      	ldr	r3, [sp, #8]
10013e04:	f013 0120 	ands.w	r1, r3, #32
10013e08:	d064      	beq.n	10013ed4 <_vfiprintf_r+0xcd4>
10013e0a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013e0c:	3307      	adds	r3, #7
10013e0e:	f023 0307 	bic.w	r3, r3, #7
10013e12:	4618      	mov	r0, r3
10013e14:	6859      	ldr	r1, [r3, #4]
10013e16:	f850 3b08 	ldr.w	r3, [r0], #8
10013e1a:	900a      	str	r0, [sp, #40]	@ 0x28
10013e1c:	9c02      	ldr	r4, [sp, #8]
10013e1e:	07e6      	lsls	r6, r4, #31
10013e20:	d50a      	bpl.n	10013e38 <_vfiprintf_r+0xc38>
10013e22:	ea53 0001 	orrs.w	r0, r3, r1
10013e26:	d007      	beq.n	10013e38 <_vfiprintf_r+0xc38>
10013e28:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
10013e2c:	f044 0202 	orr.w	r2, r4, #2
10013e30:	9202      	str	r2, [sp, #8]
10013e32:	2230      	movs	r2, #48	@ 0x30
10013e34:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
10013e38:	9a02      	ldr	r2, [sp, #8]
10013e3a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
10013e3e:	9202      	str	r2, [sp, #8]
10013e40:	e52b      	b.n	1001389a <_vfiprintf_r+0x69a>
10013e42:	4b04      	ldr	r3, [pc, #16]	@ (10013e54 <_vfiprintf_r+0xc54>)
10013e44:	9406      	str	r4, [sp, #24]
10013e46:	930d      	str	r3, [sp, #52]	@ 0x34
10013e48:	e7db      	b.n	10013e02 <_vfiprintf_r+0xc02>
10013e4a:	bf00      	nop
10013e4c:	1001ea8c 	.word	0x1001ea8c
10013e50:	1001ea3c 	.word	0x1001ea3c
10013e54:	1001e6a8 	.word	0x1001e6a8
10013e58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013e5a:	681b      	ldr	r3, [r3, #0]
10013e5c:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
10013e60:	2301      	movs	r3, #1
10013e62:	9304      	str	r3, [sp, #16]
10013e64:	9309      	str	r3, [sp, #36]	@ 0x24
10013e66:	ac2d      	add	r4, sp, #180	@ 0xb4
10013e68:	e428      	b.n	100136bc <_vfiprintf_r+0x4bc>
10013e6a:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
10013e6e:	2a00      	cmp	r2, #0
10013e70:	f000 8120 	beq.w	100140b4 <_vfiprintf_r+0xeb4>
10013e74:	2101      	movs	r1, #1
10013e76:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
10013e7a:	911e      	str	r1, [sp, #120]	@ 0x78
10013e7c:	921d      	str	r2, [sp, #116]	@ 0x74
10013e7e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013e82:	468c      	mov	ip, r1
10013e84:	f7ff bb62 	b.w	1001354c <_vfiprintf_r+0x34c>
10013e88:	2208      	movs	r2, #8
10013e8a:	2100      	movs	r1, #0
10013e8c:	a818      	add	r0, sp, #96	@ 0x60
10013e8e:	9415      	str	r4, [sp, #84]	@ 0x54
10013e90:	f001 f9de 	bl	10015250 <memset>
10013e94:	f8dd 8014 	ldr.w	r8, [sp, #20]
10013e98:	f1b8 3fff 	cmp.w	r8, #4294967295	@ 0xffffffff
10013e9c:	f000 80b9 	beq.w	10014012 <_vfiprintf_r+0xe12>
10013ea0:	2500      	movs	r5, #0
10013ea2:	9404      	str	r4, [sp, #16]
10013ea4:	462c      	mov	r4, r5
10013ea6:	e00c      	b.n	10013ec2 <_vfiprintf_r+0xcc2>
10013ea8:	a92d      	add	r1, sp, #180	@ 0xb4
10013eaa:	4658      	mov	r0, fp
10013eac:	f001 fe14 	bl	10015ad8 <_wcrtomb_r>
10013eb0:	1c41      	adds	r1, r0, #1
10013eb2:	4420      	add	r0, r4
10013eb4:	f000 813f 	beq.w	10014136 <_vfiprintf_r+0xf36>
10013eb8:	4540      	cmp	r0, r8
10013eba:	dc08      	bgt.n	10013ece <_vfiprintf_r+0xcce>
10013ebc:	f000 8158 	beq.w	10014170 <_vfiprintf_r+0xf70>
10013ec0:	4604      	mov	r4, r0
10013ec2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10013ec4:	5952      	ldr	r2, [r2, r5]
10013ec6:	ab18      	add	r3, sp, #96	@ 0x60
10013ec8:	3504      	adds	r5, #4
10013eca:	2a00      	cmp	r2, #0
10013ecc:	d1ec      	bne.n	10013ea8 <_vfiprintf_r+0xca8>
10013ece:	9409      	str	r4, [sp, #36]	@ 0x24
10013ed0:	9c04      	ldr	r4, [sp, #16]
10013ed2:	e0ac      	b.n	1001402e <_vfiprintf_r+0xe2e>
10013ed4:	980a      	ldr	r0, [sp, #40]	@ 0x28
10013ed6:	f850 3b04 	ldr.w	r3, [r0], #4
10013eda:	900a      	str	r0, [sp, #40]	@ 0x28
10013edc:	9802      	ldr	r0, [sp, #8]
10013ede:	f010 0010 	ands.w	r0, r0, #16
10013ee2:	d19b      	bne.n	10013e1c <_vfiprintf_r+0xc1c>
10013ee4:	9902      	ldr	r1, [sp, #8]
10013ee6:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
10013eea:	f000 808b 	beq.w	10014004 <_vfiprintf_r+0xe04>
10013eee:	b29b      	uxth	r3, r3
10013ef0:	4601      	mov	r1, r0
10013ef2:	e793      	b.n	10013e1c <_vfiprintf_r+0xc1c>
10013ef4:	9a02      	ldr	r2, [sp, #8]
10013ef6:	f8cd 9010 	str.w	r9, [sp, #16]
10013efa:	ac46      	add	r4, sp, #280	@ 0x118
10013efc:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
10013f00:	46a1      	mov	r9, r4
10013f02:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10013f06:	4ea5      	ldr	r6, [pc, #660]	@ (1001419c <_vfiprintf_r+0xf9c>)
10013f08:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
10013f0c:	f04f 0c00 	mov.w	ip, #0
10013f10:	4614      	mov	r4, r2
10013f12:	e005      	b.n	10013f20 <_vfiprintf_r+0xd20>
10013f14:	2b0a      	cmp	r3, #10
10013f16:	f171 0100 	sbcs.w	r1, r1, #0
10013f1a:	d336      	bcc.n	10013f8a <_vfiprintf_r+0xd8a>
10013f1c:	4643      	mov	r3, r8
10013f1e:	4629      	mov	r1, r5
10013f20:	185a      	adds	r2, r3, r1
10013f22:	f142 0200 	adc.w	r2, r2, #0
10013f26:	fba6 0502 	umull	r0, r5, r6, r2
10013f2a:	f025 0003 	bic.w	r0, r5, #3
10013f2e:	eb00 0095 	add.w	r0, r0, r5, lsr #2
10013f32:	1a12      	subs	r2, r2, r0
10013f34:	1a98      	subs	r0, r3, r2
10013f36:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
10013f3a:	f161 0e00 	sbc.w	lr, r1, #0
10013f3e:	fb05 f500 	mul.w	r5, r5, r0
10013f42:	fb06 550e 	mla	r5, r6, lr, r5
10013f46:	fba0 8006 	umull	r8, r0, r0, r6
10013f4a:	4405      	add	r5, r0
10013f4c:	f008 0e01 	and.w	lr, r8, #1
10013f50:	2005      	movs	r0, #5
10013f52:	fbae 0e00 	umull	r0, lr, lr, r0
10013f56:	1880      	adds	r0, r0, r2
10013f58:	ea4f 0858 	mov.w	r8, r8, lsr #1
10013f5c:	3030      	adds	r0, #48	@ 0x30
10013f5e:	f809 0c01 	strb.w	r0, [r9, #-1]
10013f62:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
10013f66:	f10c 0c01 	add.w	ip, ip, #1
10013f6a:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10013f6e:	086d      	lsrs	r5, r5, #1
10013f70:	2c00      	cmp	r4, #0
10013f72:	d0cf      	beq.n	10013f14 <_vfiprintf_r+0xd14>
10013f74:	f89b 2000 	ldrb.w	r2, [fp]
10013f78:	4562      	cmp	r2, ip
10013f7a:	d1cb      	bne.n	10013f14 <_vfiprintf_r+0xd14>
10013f7c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10013f80:	d0c8      	beq.n	10013f14 <_vfiprintf_r+0xd14>
10013f82:	2b0a      	cmp	r3, #10
10013f84:	f171 0100 	sbcs.w	r1, r1, #0
10013f88:	d272      	bcs.n	10014070 <_vfiprintf_r+0xe70>
10013f8a:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10013f8e:	464c      	mov	r4, r9
10013f90:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10013f94:	f8dd 9010 	ldr.w	r9, [sp, #16]
10013f98:	e5ea      	b.n	10013b70 <_vfiprintf_r+0x970>
10013f9a:	9202      	str	r2, [sp, #8]
10013f9c:	e441      	b.n	10013822 <_vfiprintf_r+0x622>
10013f9e:	9402      	str	r4, [sp, #8]
10013fa0:	e4e6      	b.n	10013970 <_vfiprintf_r+0x770>
10013fa2:	4658      	mov	r0, fp
10013fa4:	f000 fe3c 	bl	10014c20 <__sinit>
10013fa8:	f7ff b940 	b.w	1001322c <_vfiprintf_r+0x2c>
10013fac:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
10013fb0:	7862      	ldrb	r2, [r4, #1]
10013fb2:	9302      	str	r3, [sp, #8]
10013fb4:	3401      	adds	r4, #1
10013fb6:	f7ff b98b 	b.w	100132d0 <_vfiprintf_r+0xd0>
10013fba:	f043 0320 	orr.w	r3, r3, #32
10013fbe:	7862      	ldrb	r2, [r4, #1]
10013fc0:	9302      	str	r3, [sp, #8]
10013fc2:	3401      	adds	r4, #1
10013fc4:	f7ff b984 	b.w	100132d0 <_vfiprintf_r+0xd0>
10013fc8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013fca:	9a07      	ldr	r2, [sp, #28]
10013fcc:	681b      	ldr	r3, [r3, #0]
10013fce:	601a      	str	r2, [r3, #0]
10013fd0:	e47f      	b.n	100138d2 <_vfiprintf_r+0x6d2>
10013fd2:	9b05      	ldr	r3, [sp, #20]
10013fd4:	4c72      	ldr	r4, [pc, #456]	@ (100141a0 <_vfiprintf_r+0xfa0>)
10013fd6:	2b06      	cmp	r3, #6
10013fd8:	bf28      	it	cs
10013fda:	2306      	movcs	r3, #6
10013fdc:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
10013fe0:	9304      	str	r3, [sp, #16]
10013fe2:	f7ff ba89 	b.w	100134f8 <_vfiprintf_r+0x2f8>
10013fe6:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
10013fea:	f43f ac00 	beq.w	100137ee <_vfiprintf_r+0x5ee>
10013fee:	b2db      	uxtb	r3, r3
10013ff0:	4601      	mov	r1, r0
10013ff2:	f7ff bbfc 	b.w	100137ee <_vfiprintf_r+0x5ee>
10013ff6:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
10013ffa:	bf1c      	itt	ne
10013ffc:	b2db      	uxtbne	r3, r3
10013ffe:	4621      	movne	r1, r4
10014000:	f7ff bba8 	b.w	10013754 <_vfiprintf_r+0x554>
10014004:	9902      	ldr	r1, [sp, #8]
10014006:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
1001400a:	bf1c      	itt	ne
1001400c:	b2db      	uxtbne	r3, r3
1001400e:	4621      	movne	r1, r4
10014010:	e704      	b.n	10013e1c <_vfiprintf_r+0xc1c>
10014012:	ab18      	add	r3, sp, #96	@ 0x60
10014014:	9300      	str	r3, [sp, #0]
10014016:	2300      	movs	r3, #0
10014018:	4619      	mov	r1, r3
1001401a:	aa15      	add	r2, sp, #84	@ 0x54
1001401c:	4658      	mov	r0, fp
1001401e:	f001 fd81 	bl	10015b24 <_wcsrtombs_r>
10014022:	4603      	mov	r3, r0
10014024:	3301      	adds	r3, #1
10014026:	9009      	str	r0, [sp, #36]	@ 0x24
10014028:	f000 8085 	beq.w	10014136 <_vfiprintf_r+0xf36>
1001402c:	9415      	str	r4, [sp, #84]	@ 0x54
1001402e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014030:	b373      	cbz	r3, 10014090 <_vfiprintf_r+0xe90>
10014032:	2b63      	cmp	r3, #99	@ 0x63
10014034:	dc49      	bgt.n	100140ca <_vfiprintf_r+0xeca>
10014036:	2300      	movs	r3, #0
10014038:	930b      	str	r3, [sp, #44]	@ 0x2c
1001403a:	ac2d      	add	r4, sp, #180	@ 0xb4
1001403c:	2208      	movs	r2, #8
1001403e:	2100      	movs	r1, #0
10014040:	a818      	add	r0, sp, #96	@ 0x60
10014042:	f001 f905 	bl	10015250 <memset>
10014046:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10014048:	ab18      	add	r3, sp, #96	@ 0x60
1001404a:	9300      	str	r3, [sp, #0]
1001404c:	aa15      	add	r2, sp, #84	@ 0x54
1001404e:	462b      	mov	r3, r5
10014050:	4621      	mov	r1, r4
10014052:	4658      	mov	r0, fp
10014054:	f001 fd66 	bl	10015b24 <_wcsrtombs_r>
10014058:	4285      	cmp	r5, r0
1001405a:	f040 8098 	bne.w	1001418e <_vfiprintf_r+0xf8e>
1001405e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10014060:	960a      	str	r6, [sp, #40]	@ 0x28
10014062:	2300      	movs	r3, #0
10014064:	54a3      	strb	r3, [r4, r2]
10014066:	9305      	str	r3, [sp, #20]
10014068:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
1001406c:	9304      	str	r3, [sp, #16]
1001406e:	e493      	b.n	10013998 <_vfiprintf_r+0x798>
10014070:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10014072:	9910      	ldr	r1, [sp, #64]	@ 0x40
10014074:	eba9 0903 	sub.w	r9, r9, r3
10014078:	461a      	mov	r2, r3
1001407a:	4648      	mov	r0, r9
1001407c:	f001 f95c 	bl	10015338 <strncpy>
10014080:	f89b 3001 	ldrb.w	r3, [fp, #1]
10014084:	b10b      	cbz	r3, 1001408a <_vfiprintf_r+0xe8a>
10014086:	f10b 0b01 	add.w	fp, fp, #1
1001408a:	f04f 0c00 	mov.w	ip, #0
1001408e:	e745      	b.n	10013f1c <_vfiprintf_r+0xd1c>
10014090:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014092:	960a      	str	r6, [sp, #40]	@ 0x28
10014094:	e9cd 3304 	strd	r3, r3, [sp, #16]
10014098:	930b      	str	r3, [sp, #44]	@ 0x2c
1001409a:	e47d      	b.n	10013998 <_vfiprintf_r+0x798>
1001409c:	2101      	movs	r1, #1
1001409e:	4662      	mov	r2, ip
100140a0:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100140a4:	f7ff ba79 	b.w	1001359a <_vfiprintf_r+0x39a>
100140a8:	f343 11c0 	sbfx	r1, r3, #7, #1
100140ac:	460a      	mov	r2, r1
100140ae:	b25b      	sxtb	r3, r3
100140b0:	f7ff bb17 	b.w	100136e2 <_vfiprintf_r+0x4e2>
100140b4:	4662      	mov	r2, ip
100140b6:	2101      	movs	r1, #1
100140b8:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100140bc:	f7ff ba4a 	b.w	10013554 <_vfiprintf_r+0x354>
100140c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100140c2:	9a07      	ldr	r2, [sp, #28]
100140c4:	681b      	ldr	r3, [r3, #0]
100140c6:	801a      	strh	r2, [r3, #0]
100140c8:	e403      	b.n	100138d2 <_vfiprintf_r+0x6d2>
100140ca:	1c59      	adds	r1, r3, #1
100140cc:	4658      	mov	r0, fp
100140ce:	f7fc ff1f 	bl	10010f10 <_malloc_r>
100140d2:	4604      	mov	r4, r0
100140d4:	2800      	cmp	r0, #0
100140d6:	d02e      	beq.n	10014136 <_vfiprintf_r+0xf36>
100140d8:	900b      	str	r0, [sp, #44]	@ 0x2c
100140da:	e7af      	b.n	1001403c <_vfiprintf_r+0xe3c>
100140dc:	6d88      	ldr	r0, [r1, #88]	@ 0x58
100140de:	f001 fb9d 	bl	1001581c <__retarget_lock_release_recursive>
100140e2:	f7ff b99d 	b.w	10013420 <_vfiprintf_r+0x220>
100140e6:	9b05      	ldr	r3, [sp, #20]
100140e8:	9304      	str	r3, [sp, #16]
100140ea:	9309      	str	r3, [sp, #36]	@ 0x24
100140ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100140ee:	960a      	str	r6, [sp, #40]	@ 0x28
100140f0:	9305      	str	r3, [sp, #20]
100140f2:	e451      	b.n	10013998 <_vfiprintf_r+0x798>
100140f4:	4620      	mov	r0, r4
100140f6:	9505      	str	r5, [sp, #20]
100140f8:	960a      	str	r6, [sp, #40]	@ 0x28
100140fa:	f001 fc81 	bl	10015a00 <strlen>
100140fe:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10014102:	9009      	str	r0, [sp, #36]	@ 0x24
10014104:	9304      	str	r3, [sp, #16]
10014106:	950b      	str	r5, [sp, #44]	@ 0x2c
10014108:	e446      	b.n	10013998 <_vfiprintf_r+0x798>
1001410a:	2300      	movs	r3, #0
1001410c:	9305      	str	r3, [sp, #20]
1001410e:	f7ff b8e0 	b.w	100132d2 <_vfiprintf_r+0xd2>
10014112:	4e24      	ldr	r6, [pc, #144]	@ (100141a4 <_vfiprintf_r+0xfa4>)
10014114:	4686      	mov	lr, r0
10014116:	e56a      	b.n	10013bee <_vfiprintf_r+0x9ee>
10014118:	2330      	movs	r3, #48	@ 0x30
1001411a:	e430      	b.n	1001397e <_vfiprintf_r+0x77e>
1001411c:	9903      	ldr	r1, [sp, #12]
1001411e:	aa1a      	add	r2, sp, #104	@ 0x68
10014120:	4658      	mov	r0, fp
10014122:	f7ff f827 	bl	10013174 <__sprint_r.part.0>
10014126:	2800      	cmp	r0, #0
10014128:	f43f a9a8 	beq.w	1001347c <_vfiprintf_r+0x27c>
1001412c:	f7ff b9c6 	b.w	100134bc <_vfiprintf_r+0x2bc>
10014130:	4e1c      	ldr	r6, [pc, #112]	@ (100141a4 <_vfiprintf_r+0xfa4>)
10014132:	1c48      	adds	r0, r1, #1
10014134:	e5a6      	b.n	10013c84 <_vfiprintf_r+0xa84>
10014136:	9a03      	ldr	r2, [sp, #12]
10014138:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
1001413c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10014140:	8193      	strh	r3, [r2, #12]
10014142:	f7ff b9be 	b.w	100134c2 <_vfiprintf_r+0x2c2>
10014146:	9b03      	ldr	r3, [sp, #12]
10014148:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
1001414a:	07d9      	lsls	r1, r3, #31
1001414c:	d407      	bmi.n	1001415e <_vfiprintf_r+0xf5e>
1001414e:	9b03      	ldr	r3, [sp, #12]
10014150:	899b      	ldrh	r3, [r3, #12]
10014152:	059a      	lsls	r2, r3, #22
10014154:	d403      	bmi.n	1001415e <_vfiprintf_r+0xf5e>
10014156:	9b03      	ldr	r3, [sp, #12]
10014158:	6d98      	ldr	r0, [r3, #88]	@ 0x58
1001415a:	f001 fb5f 	bl	1001581c <__retarget_lock_release_recursive>
1001415e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10014162:	9307      	str	r3, [sp, #28]
10014164:	f7ff b9b5 	b.w	100134d2 <_vfiprintf_r+0x2d2>
10014168:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 100141a8 <_vfiprintf_r+0xfa8>
1001416c:	4608      	mov	r0, r1
1001416e:	e460      	b.n	10013a32 <_vfiprintf_r+0x832>
10014170:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
10014174:	9309      	str	r3, [sp, #36]	@ 0x24
10014176:	e75a      	b.n	1001402e <_vfiprintf_r+0xe2e>
10014178:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001417a:	7862      	ldrb	r2, [r4, #1]
1001417c:	460c      	mov	r4, r1
1001417e:	f853 1b04 	ldr.w	r1, [r3], #4
10014182:	930a      	str	r3, [sp, #40]	@ 0x28
10014184:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10014188:	9105      	str	r1, [sp, #20]
1001418a:	f7ff b8a1 	b.w	100132d0 <_vfiprintf_r+0xd0>
1001418e:	9a03      	ldr	r2, [sp, #12]
10014190:	8993      	ldrh	r3, [r2, #12]
10014192:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10014196:	8193      	strh	r3, [r2, #12]
10014198:	f7ff b98a 	b.w	100134b0 <_vfiprintf_r+0x2b0>
1001419c:	cccccccd 	.word	0xcccccccd
100141a0:	1001ea50 	.word	0x1001ea50
100141a4:	1001ea8c 	.word	0x1001ea8c
100141a8:	1001ea7c 	.word	0x1001ea7c

100141ac <__sbprintf>:
100141ac:	b5f0      	push	{r4, r5, r6, r7, lr}
100141ae:	461f      	mov	r7, r3
100141b0:	898b      	ldrh	r3, [r1, #12]
100141b2:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
100141b6:	f023 0302 	bic.w	r3, r3, #2
100141ba:	f8ad 300c 	strh.w	r3, [sp, #12]
100141be:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
100141c0:	9319      	str	r3, [sp, #100]	@ 0x64
100141c2:	89cb      	ldrh	r3, [r1, #14]
100141c4:	f8ad 300e 	strh.w	r3, [sp, #14]
100141c8:	69cb      	ldr	r3, [r1, #28]
100141ca:	9307      	str	r3, [sp, #28]
100141cc:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
100141ce:	9309      	str	r3, [sp, #36]	@ 0x24
100141d0:	ab1a      	add	r3, sp, #104	@ 0x68
100141d2:	9300      	str	r3, [sp, #0]
100141d4:	9304      	str	r3, [sp, #16]
100141d6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
100141da:	4615      	mov	r5, r2
100141dc:	4606      	mov	r6, r0
100141de:	9302      	str	r3, [sp, #8]
100141e0:	9305      	str	r3, [sp, #20]
100141e2:	a816      	add	r0, sp, #88	@ 0x58
100141e4:	2300      	movs	r3, #0
100141e6:	460c      	mov	r4, r1
100141e8:	9306      	str	r3, [sp, #24]
100141ea:	f001 fb11 	bl	10015810 <__retarget_lock_init_recursive>
100141ee:	462a      	mov	r2, r5
100141f0:	463b      	mov	r3, r7
100141f2:	4669      	mov	r1, sp
100141f4:	4630      	mov	r0, r6
100141f6:	f7ff f803 	bl	10013200 <_vfiprintf_r>
100141fa:	1e05      	subs	r5, r0, #0
100141fc:	db07      	blt.n	1001420e <__sbprintf+0x62>
100141fe:	4669      	mov	r1, sp
10014200:	4630      	mov	r0, r6
10014202:	f000 fb15 	bl	10014830 <_fflush_r>
10014206:	2800      	cmp	r0, #0
10014208:	bf18      	it	ne
1001420a:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
1001420e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10014212:	065b      	lsls	r3, r3, #25
10014214:	d503      	bpl.n	1001421e <__sbprintf+0x72>
10014216:	89a3      	ldrh	r3, [r4, #12]
10014218:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001421c:	81a3      	strh	r3, [r4, #12]
1001421e:	9816      	ldr	r0, [sp, #88]	@ 0x58
10014220:	f001 faf8 	bl	10015814 <__retarget_lock_close_recursive>
10014224:	4628      	mov	r0, r5
10014226:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
1001422a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1001422c <__malloc_lock>:
1001422c:	4801      	ldr	r0, [pc, #4]	@ (10014234 <__malloc_lock+0x8>)
1001422e:	f001 baf3 	b.w	10015818 <__retarget_lock_acquire_recursive>
10014232:	bf00      	nop
10014234:	200015c8 	.word	0x200015c8

10014238 <__malloc_unlock>:
10014238:	4801      	ldr	r0, [pc, #4]	@ (10014240 <__malloc_unlock+0x8>)
1001423a:	f001 baef 	b.w	1001581c <__retarget_lock_release_recursive>
1001423e:	bf00      	nop
10014240:	200015c8 	.word	0x200015c8

10014244 <_puts_r>:
10014244:	b570      	push	{r4, r5, r6, lr}
10014246:	4605      	mov	r5, r0
10014248:	b088      	sub	sp, #32
1001424a:	4608      	mov	r0, r1
1001424c:	460c      	mov	r4, r1
1001424e:	f001 fbd7 	bl	10015a00 <strlen>
10014252:	4e21      	ldr	r6, [pc, #132]	@ (100142d8 <_puts_r+0x94>)
10014254:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
10014256:	9005      	str	r0, [sp, #20]
10014258:	2101      	movs	r1, #1
1001425a:	1843      	adds	r3, r0, r1
1001425c:	e9cd 6106 	strd	r6, r1, [sp, #24]
10014260:	a804      	add	r0, sp, #16
10014262:	2102      	movs	r1, #2
10014264:	9404      	str	r4, [sp, #16]
10014266:	9303      	str	r3, [sp, #12]
10014268:	68ac      	ldr	r4, [r5, #8]
1001426a:	9001      	str	r0, [sp, #4]
1001426c:	9102      	str	r1, [sp, #8]
1001426e:	2a00      	cmp	r2, #0
10014270:	d02e      	beq.n	100142d0 <_puts_r+0x8c>
10014272:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10014274:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014278:	07d6      	lsls	r6, r2, #31
1001427a:	d401      	bmi.n	10014280 <_puts_r+0x3c>
1001427c:	0598      	lsls	r0, r3, #22
1001427e:	d521      	bpl.n	100142c4 <_puts_r+0x80>
10014280:	0499      	lsls	r1, r3, #18
10014282:	d406      	bmi.n	10014292 <_puts_r+0x4e>
10014284:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10014286:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001428a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001428e:	81a3      	strh	r3, [r4, #12]
10014290:	6662      	str	r2, [r4, #100]	@ 0x64
10014292:	4628      	mov	r0, r5
10014294:	aa01      	add	r2, sp, #4
10014296:	4621      	mov	r1, r4
10014298:	f000 fcec 	bl	10014c74 <__sfvwrite_r>
1001429c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001429e:	2800      	cmp	r0, #0
100142a0:	bf0c      	ite	eq
100142a2:	250a      	moveq	r5, #10
100142a4:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
100142a8:	07da      	lsls	r2, r3, #31
100142aa:	d402      	bmi.n	100142b2 <_puts_r+0x6e>
100142ac:	89a3      	ldrh	r3, [r4, #12]
100142ae:	059b      	lsls	r3, r3, #22
100142b0:	d502      	bpl.n	100142b8 <_puts_r+0x74>
100142b2:	4628      	mov	r0, r5
100142b4:	b008      	add	sp, #32
100142b6:	bd70      	pop	{r4, r5, r6, pc}
100142b8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100142ba:	f001 faaf 	bl	1001581c <__retarget_lock_release_recursive>
100142be:	4628      	mov	r0, r5
100142c0:	b008      	add	sp, #32
100142c2:	bd70      	pop	{r4, r5, r6, pc}
100142c4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100142c6:	f001 faa7 	bl	10015818 <__retarget_lock_acquire_recursive>
100142ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100142ce:	e7d7      	b.n	10014280 <_puts_r+0x3c>
100142d0:	4628      	mov	r0, r5
100142d2:	f000 fca5 	bl	10014c20 <__sinit>
100142d6:	e7cc      	b.n	10014272 <_puts_r+0x2e>
100142d8:	1001e578 	.word	0x1001e578

100142dc <puts>:
100142dc:	4b02      	ldr	r3, [pc, #8]	@ (100142e8 <puts+0xc>)
100142de:	4601      	mov	r1, r0
100142e0:	6818      	ldr	r0, [r3, #0]
100142e2:	f7ff bfaf 	b.w	10014244 <_puts_r>
100142e6:	bf00      	nop
100142e8:	20000598 	.word	0x20000598

100142ec <realloc>:
100142ec:	b410      	push	{r4}
100142ee:	4c04      	ldr	r4, [pc, #16]	@ (10014300 <realloc+0x14>)
100142f0:	4603      	mov	r3, r0
100142f2:	460a      	mov	r2, r1
100142f4:	6820      	ldr	r0, [r4, #0]
100142f6:	bc10      	pop	{r4}
100142f8:	4619      	mov	r1, r3
100142fa:	f000 b863 	b.w	100143c4 <_realloc_r>
100142fe:	bf00      	nop
10014300:	20000598 	.word	0x20000598

10014304 <_fclose_r>:
10014304:	b570      	push	{r4, r5, r6, lr}
10014306:	2900      	cmp	r1, #0
10014308:	d03f      	beq.n	1001438a <_fclose_r+0x86>
1001430a:	4605      	mov	r5, r0
1001430c:	460c      	mov	r4, r1
1001430e:	b110      	cbz	r0, 10014316 <_fclose_r+0x12>
10014310:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10014312:	2b00      	cmp	r3, #0
10014314:	d03c      	beq.n	10014390 <_fclose_r+0x8c>
10014316:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014318:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001431c:	07de      	lsls	r6, r3, #31
1001431e:	d432      	bmi.n	10014386 <_fclose_r+0x82>
10014320:	0590      	lsls	r0, r2, #22
10014322:	d538      	bpl.n	10014396 <_fclose_r+0x92>
10014324:	4621      	mov	r1, r4
10014326:	4628      	mov	r0, r5
10014328:	f000 f9ee 	bl	10014708 <__sflush_r>
1001432c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
1001432e:	4606      	mov	r6, r0
10014330:	b133      	cbz	r3, 10014340 <_fclose_r+0x3c>
10014332:	69e1      	ldr	r1, [r4, #28]
10014334:	4628      	mov	r0, r5
10014336:	4798      	blx	r3
10014338:	2800      	cmp	r0, #0
1001433a:	bfb8      	it	lt
1001433c:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
10014340:	89a3      	ldrh	r3, [r4, #12]
10014342:	061a      	lsls	r2, r3, #24
10014344:	d439      	bmi.n	100143ba <_fclose_r+0xb6>
10014346:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10014348:	b141      	cbz	r1, 1001435c <_fclose_r+0x58>
1001434a:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001434e:	4299      	cmp	r1, r3
10014350:	d002      	beq.n	10014358 <_fclose_r+0x54>
10014352:	4628      	mov	r0, r5
10014354:	f002 fc54 	bl	10016c00 <_free_r>
10014358:	2300      	movs	r3, #0
1001435a:	6323      	str	r3, [r4, #48]	@ 0x30
1001435c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
1001435e:	b121      	cbz	r1, 1001436a <_fclose_r+0x66>
10014360:	4628      	mov	r0, r5
10014362:	f002 fc4d 	bl	10016c00 <_free_r>
10014366:	2300      	movs	r3, #0
10014368:	6463      	str	r3, [r4, #68]	@ 0x44
1001436a:	f000 fc77 	bl	10014c5c <__sfp_lock_acquire>
1001436e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014370:	2200      	movs	r2, #0
10014372:	07db      	lsls	r3, r3, #31
10014374:	81a2      	strh	r2, [r4, #12]
10014376:	d51c      	bpl.n	100143b2 <_fclose_r+0xae>
10014378:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001437a:	f001 fa4b 	bl	10015814 <__retarget_lock_close_recursive>
1001437e:	f000 fc73 	bl	10014c68 <__sfp_lock_release>
10014382:	4630      	mov	r0, r6
10014384:	bd70      	pop	{r4, r5, r6, pc}
10014386:	2a00      	cmp	r2, #0
10014388:	d1cc      	bne.n	10014324 <_fclose_r+0x20>
1001438a:	2600      	movs	r6, #0
1001438c:	4630      	mov	r0, r6
1001438e:	bd70      	pop	{r4, r5, r6, pc}
10014390:	f000 fc46 	bl	10014c20 <__sinit>
10014394:	e7bf      	b.n	10014316 <_fclose_r+0x12>
10014396:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014398:	f001 fa3e 	bl	10015818 <__retarget_lock_acquire_recursive>
1001439c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100143a0:	2b00      	cmp	r3, #0
100143a2:	d1bf      	bne.n	10014324 <_fclose_r+0x20>
100143a4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100143a6:	07d9      	lsls	r1, r3, #31
100143a8:	d4ef      	bmi.n	1001438a <_fclose_r+0x86>
100143aa:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100143ac:	f001 fa36 	bl	1001581c <__retarget_lock_release_recursive>
100143b0:	e7eb      	b.n	1001438a <_fclose_r+0x86>
100143b2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100143b4:	f001 fa32 	bl	1001581c <__retarget_lock_release_recursive>
100143b8:	e7de      	b.n	10014378 <_fclose_r+0x74>
100143ba:	6921      	ldr	r1, [r4, #16]
100143bc:	4628      	mov	r0, r5
100143be:	f002 fc1f 	bl	10016c00 <_free_r>
100143c2:	e7c0      	b.n	10014346 <_fclose_r+0x42>

100143c4 <_realloc_r>:
100143c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
100143c8:	4616      	mov	r6, r2
100143ca:	2900      	cmp	r1, #0
100143cc:	f000 8096 	beq.w	100144fc <_realloc_r+0x138>
100143d0:	460c      	mov	r4, r1
100143d2:	4680      	mov	r8, r0
100143d4:	f106 050b 	add.w	r5, r6, #11
100143d8:	f7ff ff28 	bl	1001422c <__malloc_lock>
100143dc:	f854 1c04 	ldr.w	r1, [r4, #-4]
100143e0:	2d16      	cmp	r5, #22
100143e2:	f1a4 0908 	sub.w	r9, r4, #8
100143e6:	f021 0703 	bic.w	r7, r1, #3
100143ea:	d858      	bhi.n	1001449e <_realloc_r+0xda>
100143ec:	2510      	movs	r5, #16
100143ee:	42ae      	cmp	r6, r5
100143f0:	d858      	bhi.n	100144a4 <_realloc_r+0xe0>
100143f2:	42af      	cmp	r7, r5
100143f4:	da60      	bge.n	100144b8 <_realloc_r+0xf4>
100143f6:	4bbe      	ldr	r3, [pc, #760]	@ (100146f0 <_realloc_r+0x32c>)
100143f8:	689a      	ldr	r2, [r3, #8]
100143fa:	eb09 0c07 	add.w	ip, r9, r7
100143fe:	4562      	cmp	r2, ip
10014400:	f8dc 0004 	ldr.w	r0, [ip, #4]
10014404:	f000 8090 	beq.w	10014528 <_realloc_r+0x164>
10014408:	f020 0301 	bic.w	r3, r0, #1
1001440c:	4463      	add	r3, ip
1001440e:	685b      	ldr	r3, [r3, #4]
10014410:	07da      	lsls	r2, r3, #31
10014412:	d468      	bmi.n	100144e6 <_realloc_r+0x122>
10014414:	f020 0003 	bic.w	r0, r0, #3
10014418:	183b      	adds	r3, r7, r0
1001441a:	429d      	cmp	r5, r3
1001441c:	dd47      	ble.n	100144ae <_realloc_r+0xea>
1001441e:	07cb      	lsls	r3, r1, #31
10014420:	d412      	bmi.n	10014448 <_realloc_r+0x84>
10014422:	f854 3c08 	ldr.w	r3, [r4, #-8]
10014426:	eba9 0b03 	sub.w	fp, r9, r3
1001442a:	f8db 3004 	ldr.w	r3, [fp, #4]
1001442e:	f023 0203 	bic.w	r2, r3, #3
10014432:	4410      	add	r0, r2
10014434:	eb00 0a07 	add.w	sl, r0, r7
10014438:	4555      	cmp	r5, sl
1001443a:	f340 80f6 	ble.w	1001462a <_realloc_r+0x266>
1001443e:	eb07 0a02 	add.w	sl, r7, r2
10014442:	4555      	cmp	r5, sl
10014444:	f340 80cc 	ble.w	100145e0 <_realloc_r+0x21c>
10014448:	4631      	mov	r1, r6
1001444a:	4640      	mov	r0, r8
1001444c:	f7fc fd60 	bl	10010f10 <_malloc_r>
10014450:	4606      	mov	r6, r0
10014452:	2800      	cmp	r0, #0
10014454:	f000 8120 	beq.w	10014698 <_realloc_r+0x2d4>
10014458:	f854 3c04 	ldr.w	r3, [r4, #-4]
1001445c:	f023 0301 	bic.w	r3, r3, #1
10014460:	444b      	add	r3, r9
10014462:	f1a0 0208 	sub.w	r2, r0, #8
10014466:	4293      	cmp	r3, r2
10014468:	f000 80b4 	beq.w	100145d4 <_realloc_r+0x210>
1001446c:	1f3a      	subs	r2, r7, #4
1001446e:	2a24      	cmp	r2, #36	@ 0x24
10014470:	f200 80d7 	bhi.w	10014622 <_realloc_r+0x25e>
10014474:	2a13      	cmp	r2, #19
10014476:	f200 80a2 	bhi.w	100145be <_realloc_r+0x1fa>
1001447a:	4603      	mov	r3, r0
1001447c:	4622      	mov	r2, r4
1001447e:	6811      	ldr	r1, [r2, #0]
10014480:	6019      	str	r1, [r3, #0]
10014482:	6851      	ldr	r1, [r2, #4]
10014484:	6059      	str	r1, [r3, #4]
10014486:	6892      	ldr	r2, [r2, #8]
10014488:	609a      	str	r2, [r3, #8]
1001448a:	4621      	mov	r1, r4
1001448c:	4640      	mov	r0, r8
1001448e:	f002 fbb7 	bl	10016c00 <_free_r>
10014492:	4640      	mov	r0, r8
10014494:	f7ff fed0 	bl	10014238 <__malloc_unlock>
10014498:	4630      	mov	r0, r6
1001449a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001449e:	f035 0507 	bics.w	r5, r5, #7
100144a2:	d5a4      	bpl.n	100143ee <_realloc_r+0x2a>
100144a4:	230c      	movs	r3, #12
100144a6:	f8c8 3000 	str.w	r3, [r8]
100144aa:	2600      	movs	r6, #0
100144ac:	e018      	b.n	100144e0 <_realloc_r+0x11c>
100144ae:	461f      	mov	r7, r3
100144b0:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
100144b4:	60d3      	str	r3, [r2, #12]
100144b6:	609a      	str	r2, [r3, #8]
100144b8:	f8d9 3004 	ldr.w	r3, [r9, #4]
100144bc:	1b7a      	subs	r2, r7, r5
100144be:	2a0f      	cmp	r2, #15
100144c0:	f003 0301 	and.w	r3, r3, #1
100144c4:	eb09 0007 	add.w	r0, r9, r7
100144c8:	d81d      	bhi.n	10014506 <_realloc_r+0x142>
100144ca:	433b      	orrs	r3, r7
100144cc:	f8c9 3004 	str.w	r3, [r9, #4]
100144d0:	6843      	ldr	r3, [r0, #4]
100144d2:	f043 0301 	orr.w	r3, r3, #1
100144d6:	6043      	str	r3, [r0, #4]
100144d8:	4640      	mov	r0, r8
100144da:	f7ff fead 	bl	10014238 <__malloc_unlock>
100144de:	4626      	mov	r6, r4
100144e0:	4630      	mov	r0, r6
100144e2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
100144e6:	07c9      	lsls	r1, r1, #31
100144e8:	d4ae      	bmi.n	10014448 <_realloc_r+0x84>
100144ea:	f854 3c08 	ldr.w	r3, [r4, #-8]
100144ee:	eba9 0b03 	sub.w	fp, r9, r3
100144f2:	f8db 3004 	ldr.w	r3, [fp, #4]
100144f6:	f023 0203 	bic.w	r2, r3, #3
100144fa:	e7a0      	b.n	1001443e <_realloc_r+0x7a>
100144fc:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10014500:	4611      	mov	r1, r2
10014502:	f7fc bd05 	b.w	10010f10 <_malloc_r>
10014506:	eb09 0105 	add.w	r1, r9, r5
1001450a:	432b      	orrs	r3, r5
1001450c:	f042 0201 	orr.w	r2, r2, #1
10014510:	f8c9 3004 	str.w	r3, [r9, #4]
10014514:	604a      	str	r2, [r1, #4]
10014516:	6843      	ldr	r3, [r0, #4]
10014518:	f043 0301 	orr.w	r3, r3, #1
1001451c:	6043      	str	r3, [r0, #4]
1001451e:	3108      	adds	r1, #8
10014520:	4640      	mov	r0, r8
10014522:	f002 fb6d 	bl	10016c00 <_free_r>
10014526:	e7d7      	b.n	100144d8 <_realloc_r+0x114>
10014528:	f020 0003 	bic.w	r0, r0, #3
1001452c:	19c2      	adds	r2, r0, r7
1001452e:	f105 0c10 	add.w	ip, r5, #16
10014532:	4562      	cmp	r2, ip
10014534:	f280 8091 	bge.w	1001465a <_realloc_r+0x296>
10014538:	07ca      	lsls	r2, r1, #31
1001453a:	d485      	bmi.n	10014448 <_realloc_r+0x84>
1001453c:	f854 2c08 	ldr.w	r2, [r4, #-8]
10014540:	eba9 0b02 	sub.w	fp, r9, r2
10014544:	f8db 2004 	ldr.w	r2, [fp, #4]
10014548:	f022 0203 	bic.w	r2, r2, #3
1001454c:	4410      	add	r0, r2
1001454e:	eb00 0a07 	add.w	sl, r0, r7
10014552:	45d4      	cmp	ip, sl
10014554:	f73f af73 	bgt.w	1001443e <_realloc_r+0x7a>
10014558:	465e      	mov	r6, fp
1001455a:	f8db 100c 	ldr.w	r1, [fp, #12]
1001455e:	f856 0f08 	ldr.w	r0, [r6, #8]!
10014562:	1f3a      	subs	r2, r7, #4
10014564:	2a24      	cmp	r2, #36	@ 0x24
10014566:	60c1      	str	r1, [r0, #12]
10014568:	6088      	str	r0, [r1, #8]
1001456a:	f200 80ae 	bhi.w	100146ca <_realloc_r+0x306>
1001456e:	2a13      	cmp	r2, #19
10014570:	f240 80a9 	bls.w	100146c6 <_realloc_r+0x302>
10014574:	6821      	ldr	r1, [r4, #0]
10014576:	f8cb 1008 	str.w	r1, [fp, #8]
1001457a:	6861      	ldr	r1, [r4, #4]
1001457c:	f8cb 100c 	str.w	r1, [fp, #12]
10014580:	2a1b      	cmp	r2, #27
10014582:	f200 80a8 	bhi.w	100146d6 <_realloc_r+0x312>
10014586:	3408      	adds	r4, #8
10014588:	f10b 0210 	add.w	r2, fp, #16
1001458c:	6821      	ldr	r1, [r4, #0]
1001458e:	6011      	str	r1, [r2, #0]
10014590:	6861      	ldr	r1, [r4, #4]
10014592:	6051      	str	r1, [r2, #4]
10014594:	68a1      	ldr	r1, [r4, #8]
10014596:	6091      	str	r1, [r2, #8]
10014598:	eb0b 0105 	add.w	r1, fp, r5
1001459c:	ebaa 0205 	sub.w	r2, sl, r5
100145a0:	f042 0201 	orr.w	r2, r2, #1
100145a4:	6099      	str	r1, [r3, #8]
100145a6:	604a      	str	r2, [r1, #4]
100145a8:	f8db 3004 	ldr.w	r3, [fp, #4]
100145ac:	f003 0301 	and.w	r3, r3, #1
100145b0:	432b      	orrs	r3, r5
100145b2:	4640      	mov	r0, r8
100145b4:	f8cb 3004 	str.w	r3, [fp, #4]
100145b8:	f7ff fe3e 	bl	10014238 <__malloc_unlock>
100145bc:	e790      	b.n	100144e0 <_realloc_r+0x11c>
100145be:	6823      	ldr	r3, [r4, #0]
100145c0:	6003      	str	r3, [r0, #0]
100145c2:	6863      	ldr	r3, [r4, #4]
100145c4:	6043      	str	r3, [r0, #4]
100145c6:	2a1b      	cmp	r2, #27
100145c8:	d83c      	bhi.n	10014644 <_realloc_r+0x280>
100145ca:	f104 0208 	add.w	r2, r4, #8
100145ce:	f100 0308 	add.w	r3, r0, #8
100145d2:	e754      	b.n	1001447e <_realloc_r+0xba>
100145d4:	f850 3c04 	ldr.w	r3, [r0, #-4]
100145d8:	f023 0303 	bic.w	r3, r3, #3
100145dc:	441f      	add	r7, r3
100145de:	e76b      	b.n	100144b8 <_realloc_r+0xf4>
100145e0:	1f3a      	subs	r2, r7, #4
100145e2:	465e      	mov	r6, fp
100145e4:	f8db 300c 	ldr.w	r3, [fp, #12]
100145e8:	f856 1f08 	ldr.w	r1, [r6, #8]!
100145ec:	2a24      	cmp	r2, #36	@ 0x24
100145ee:	60cb      	str	r3, [r1, #12]
100145f0:	6099      	str	r1, [r3, #8]
100145f2:	d822      	bhi.n	1001463a <_realloc_r+0x276>
100145f4:	2a13      	cmp	r2, #19
100145f6:	d91e      	bls.n	10014636 <_realloc_r+0x272>
100145f8:	6823      	ldr	r3, [r4, #0]
100145fa:	f8cb 3008 	str.w	r3, [fp, #8]
100145fe:	6863      	ldr	r3, [r4, #4]
10014600:	f8cb 300c 	str.w	r3, [fp, #12]
10014604:	2a1b      	cmp	r2, #27
10014606:	d83b      	bhi.n	10014680 <_realloc_r+0x2bc>
10014608:	3408      	adds	r4, #8
1001460a:	f10b 0310 	add.w	r3, fp, #16
1001460e:	6822      	ldr	r2, [r4, #0]
10014610:	601a      	str	r2, [r3, #0]
10014612:	6862      	ldr	r2, [r4, #4]
10014614:	605a      	str	r2, [r3, #4]
10014616:	68a2      	ldr	r2, [r4, #8]
10014618:	609a      	str	r2, [r3, #8]
1001461a:	4634      	mov	r4, r6
1001461c:	4657      	mov	r7, sl
1001461e:	46d9      	mov	r9, fp
10014620:	e74a      	b.n	100144b8 <_realloc_r+0xf4>
10014622:	4621      	mov	r1, r4
10014624:	f000 fd94 	bl	10015150 <memmove>
10014628:	e72f      	b.n	1001448a <_realloc_r+0xc6>
1001462a:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
1001462e:	1f3a      	subs	r2, r7, #4
10014630:	60cb      	str	r3, [r1, #12]
10014632:	6099      	str	r1, [r3, #8]
10014634:	e7d5      	b.n	100145e2 <_realloc_r+0x21e>
10014636:	4633      	mov	r3, r6
10014638:	e7e9      	b.n	1001460e <_realloc_r+0x24a>
1001463a:	4621      	mov	r1, r4
1001463c:	4630      	mov	r0, r6
1001463e:	f000 fd87 	bl	10015150 <memmove>
10014642:	e7ea      	b.n	1001461a <_realloc_r+0x256>
10014644:	68a3      	ldr	r3, [r4, #8]
10014646:	6083      	str	r3, [r0, #8]
10014648:	68e3      	ldr	r3, [r4, #12]
1001464a:	60c3      	str	r3, [r0, #12]
1001464c:	2a24      	cmp	r2, #36	@ 0x24
1001464e:	d027      	beq.n	100146a0 <_realloc_r+0x2dc>
10014650:	f104 0210 	add.w	r2, r4, #16
10014654:	f100 0310 	add.w	r3, r0, #16
10014658:	e711      	b.n	1001447e <_realloc_r+0xba>
1001465a:	eb09 0105 	add.w	r1, r9, r5
1001465e:	6099      	str	r1, [r3, #8]
10014660:	1b53      	subs	r3, r2, r5
10014662:	f043 0301 	orr.w	r3, r3, #1
10014666:	604b      	str	r3, [r1, #4]
10014668:	f854 3c04 	ldr.w	r3, [r4, #-4]
1001466c:	f003 0301 	and.w	r3, r3, #1
10014670:	432b      	orrs	r3, r5
10014672:	4640      	mov	r0, r8
10014674:	f844 3c04 	str.w	r3, [r4, #-4]
10014678:	f7ff fdde 	bl	10014238 <__malloc_unlock>
1001467c:	4626      	mov	r6, r4
1001467e:	e72f      	b.n	100144e0 <_realloc_r+0x11c>
10014680:	68a3      	ldr	r3, [r4, #8]
10014682:	f8cb 3010 	str.w	r3, [fp, #16]
10014686:	68e3      	ldr	r3, [r4, #12]
10014688:	f8cb 3014 	str.w	r3, [fp, #20]
1001468c:	2a24      	cmp	r2, #36	@ 0x24
1001468e:	d010      	beq.n	100146b2 <_realloc_r+0x2ee>
10014690:	3410      	adds	r4, #16
10014692:	f10b 0318 	add.w	r3, fp, #24
10014696:	e7ba      	b.n	1001460e <_realloc_r+0x24a>
10014698:	4640      	mov	r0, r8
1001469a:	f7ff fdcd 	bl	10014238 <__malloc_unlock>
1001469e:	e704      	b.n	100144aa <_realloc_r+0xe6>
100146a0:	6923      	ldr	r3, [r4, #16]
100146a2:	6103      	str	r3, [r0, #16]
100146a4:	6961      	ldr	r1, [r4, #20]
100146a6:	6141      	str	r1, [r0, #20]
100146a8:	f104 0218 	add.w	r2, r4, #24
100146ac:	f100 0318 	add.w	r3, r0, #24
100146b0:	e6e5      	b.n	1001447e <_realloc_r+0xba>
100146b2:	6923      	ldr	r3, [r4, #16]
100146b4:	f8cb 3018 	str.w	r3, [fp, #24]
100146b8:	6963      	ldr	r3, [r4, #20]
100146ba:	f8cb 301c 	str.w	r3, [fp, #28]
100146be:	3418      	adds	r4, #24
100146c0:	f10b 0320 	add.w	r3, fp, #32
100146c4:	e7a3      	b.n	1001460e <_realloc_r+0x24a>
100146c6:	4632      	mov	r2, r6
100146c8:	e760      	b.n	1001458c <_realloc_r+0x1c8>
100146ca:	4621      	mov	r1, r4
100146cc:	4630      	mov	r0, r6
100146ce:	f000 fd3f 	bl	10015150 <memmove>
100146d2:	4b07      	ldr	r3, [pc, #28]	@ (100146f0 <_realloc_r+0x32c>)
100146d4:	e760      	b.n	10014598 <_realloc_r+0x1d4>
100146d6:	68a1      	ldr	r1, [r4, #8]
100146d8:	f8cb 1010 	str.w	r1, [fp, #16]
100146dc:	68e1      	ldr	r1, [r4, #12]
100146de:	f8cb 1014 	str.w	r1, [fp, #20]
100146e2:	2a24      	cmp	r2, #36	@ 0x24
100146e4:	d006      	beq.n	100146f4 <_realloc_r+0x330>
100146e6:	3410      	adds	r4, #16
100146e8:	f10b 0218 	add.w	r2, fp, #24
100146ec:	e74e      	b.n	1001458c <_realloc_r+0x1c8>
100146ee:	bf00      	nop
100146f0:	20000018 	.word	0x20000018
100146f4:	6922      	ldr	r2, [r4, #16]
100146f6:	f8cb 2018 	str.w	r2, [fp, #24]
100146fa:	6962      	ldr	r2, [r4, #20]
100146fc:	f8cb 201c 	str.w	r2, [fp, #28]
10014700:	3418      	adds	r4, #24
10014702:	f10b 0220 	add.w	r2, fp, #32
10014706:	e741      	b.n	1001458c <_realloc_r+0x1c8>

10014708 <__sflush_r>:
10014708:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
1001470c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001470e:	4607      	mov	r7, r0
10014710:	0710      	lsls	r0, r2, #28
10014712:	460c      	mov	r4, r1
10014714:	d446      	bmi.n	100147a4 <__sflush_r+0x9c>
10014716:	6849      	ldr	r1, [r1, #4]
10014718:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
1001471c:	2900      	cmp	r1, #0
1001471e:	81a3      	strh	r3, [r4, #12]
10014720:	dd5c      	ble.n	100147dc <__sflush_r+0xd4>
10014722:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10014724:	2d00      	cmp	r5, #0
10014726:	d03b      	beq.n	100147a0 <__sflush_r+0x98>
10014728:	2100      	movs	r1, #0
1001472a:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
1001472e:	683e      	ldr	r6, [r7, #0]
10014730:	6039      	str	r1, [r7, #0]
10014732:	69e1      	ldr	r1, [r4, #28]
10014734:	d15e      	bne.n	100147f4 <__sflush_r+0xec>
10014736:	2301      	movs	r3, #1
10014738:	4638      	mov	r0, r7
1001473a:	47a8      	blx	r5
1001473c:	1c41      	adds	r1, r0, #1
1001473e:	4602      	mov	r2, r0
10014740:	d068      	beq.n	10014814 <__sflush_r+0x10c>
10014742:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014746:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10014748:	69e1      	ldr	r1, [r4, #28]
1001474a:	075b      	lsls	r3, r3, #29
1001474c:	d505      	bpl.n	1001475a <__sflush_r+0x52>
1001474e:	6863      	ldr	r3, [r4, #4]
10014750:	1ad2      	subs	r2, r2, r3
10014752:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10014754:	b10b      	cbz	r3, 1001475a <__sflush_r+0x52>
10014756:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
10014758:	1ad2      	subs	r2, r2, r3
1001475a:	2300      	movs	r3, #0
1001475c:	4638      	mov	r0, r7
1001475e:	47a8      	blx	r5
10014760:	1c45      	adds	r5, r0, #1
10014762:	d149      	bne.n	100147f8 <__sflush_r+0xf0>
10014764:	6839      	ldr	r1, [r7, #0]
10014766:	291d      	cmp	r1, #29
10014768:	d83c      	bhi.n	100147e4 <__sflush_r+0xdc>
1001476a:	4a30      	ldr	r2, [pc, #192]	@ (1001482c <__sflush_r+0x124>)
1001476c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014770:	410a      	asrs	r2, r1
10014772:	f012 0201 	ands.w	r2, r2, #1
10014776:	d137      	bne.n	100147e8 <__sflush_r+0xe0>
10014778:	6062      	str	r2, [r4, #4]
1001477a:	6922      	ldr	r2, [r4, #16]
1001477c:	6022      	str	r2, [r4, #0]
1001477e:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10014782:	81a2      	strh	r2, [r4, #12]
10014784:	04da      	lsls	r2, r3, #19
10014786:	d44e      	bmi.n	10014826 <__sflush_r+0x11e>
10014788:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1001478a:	603e      	str	r6, [r7, #0]
1001478c:	b141      	cbz	r1, 100147a0 <__sflush_r+0x98>
1001478e:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10014792:	4299      	cmp	r1, r3
10014794:	d002      	beq.n	1001479c <__sflush_r+0x94>
10014796:	4638      	mov	r0, r7
10014798:	f002 fa32 	bl	10016c00 <_free_r>
1001479c:	2300      	movs	r3, #0
1001479e:	6323      	str	r3, [r4, #48]	@ 0x30
100147a0:	2000      	movs	r0, #0
100147a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100147a4:	690e      	ldr	r6, [r1, #16]
100147a6:	2e00      	cmp	r6, #0
100147a8:	d0fa      	beq.n	100147a0 <__sflush_r+0x98>
100147aa:	680d      	ldr	r5, [r1, #0]
100147ac:	600e      	str	r6, [r1, #0]
100147ae:	0791      	lsls	r1, r2, #30
100147b0:	bf0c      	ite	eq
100147b2:	6963      	ldreq	r3, [r4, #20]
100147b4:	2300      	movne	r3, #0
100147b6:	1bad      	subs	r5, r5, r6
100147b8:	60a3      	str	r3, [r4, #8]
100147ba:	e00c      	b.n	100147d6 <__sflush_r+0xce>
100147bc:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
100147c0:	69e1      	ldr	r1, [r4, #28]
100147c2:	462b      	mov	r3, r5
100147c4:	4632      	mov	r2, r6
100147c6:	4638      	mov	r0, r7
100147c8:	47e0      	blx	ip
100147ca:	f1b0 0c00 	subs.w	ip, r0, #0
100147ce:	eba5 050c 	sub.w	r5, r5, ip
100147d2:	4466      	add	r6, ip
100147d4:	dd06      	ble.n	100147e4 <__sflush_r+0xdc>
100147d6:	2d00      	cmp	r5, #0
100147d8:	dcf0      	bgt.n	100147bc <__sflush_r+0xb4>
100147da:	e7e1      	b.n	100147a0 <__sflush_r+0x98>
100147dc:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
100147de:	2900      	cmp	r1, #0
100147e0:	dc9f      	bgt.n	10014722 <__sflush_r+0x1a>
100147e2:	e7dd      	b.n	100147a0 <__sflush_r+0x98>
100147e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100147e8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100147ec:	81a3      	strh	r3, [r4, #12]
100147ee:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100147f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100147f4:	6d22      	ldr	r2, [r4, #80]	@ 0x50
100147f6:	e7a8      	b.n	1001474a <__sflush_r+0x42>
100147f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100147fc:	6922      	ldr	r2, [r4, #16]
100147fe:	6022      	str	r2, [r4, #0]
10014800:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10014804:	81a2      	strh	r2, [r4, #12]
10014806:	04db      	lsls	r3, r3, #19
10014808:	f04f 0200 	mov.w	r2, #0
1001480c:	6062      	str	r2, [r4, #4]
1001480e:	d5bb      	bpl.n	10014788 <__sflush_r+0x80>
10014810:	6520      	str	r0, [r4, #80]	@ 0x50
10014812:	e7b9      	b.n	10014788 <__sflush_r+0x80>
10014814:	683b      	ldr	r3, [r7, #0]
10014816:	2b00      	cmp	r3, #0
10014818:	d093      	beq.n	10014742 <__sflush_r+0x3a>
1001481a:	2b1d      	cmp	r3, #29
1001481c:	d001      	beq.n	10014822 <__sflush_r+0x11a>
1001481e:	2b16      	cmp	r3, #22
10014820:	d1e0      	bne.n	100147e4 <__sflush_r+0xdc>
10014822:	603e      	str	r6, [r7, #0]
10014824:	e7bc      	b.n	100147a0 <__sflush_r+0x98>
10014826:	2900      	cmp	r1, #0
10014828:	d1ae      	bne.n	10014788 <__sflush_r+0x80>
1001482a:	e7f1      	b.n	10014810 <__sflush_r+0x108>
1001482c:	dfbffffe 	.word	0xdfbffffe

10014830 <_fflush_r>:
10014830:	b538      	push	{r3, r4, r5, lr}
10014832:	460c      	mov	r4, r1
10014834:	4605      	mov	r5, r0
10014836:	b108      	cbz	r0, 1001483c <_fflush_r+0xc>
10014838:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001483a:	b303      	cbz	r3, 1001487e <_fflush_r+0x4e>
1001483c:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
10014840:	b188      	cbz	r0, 10014866 <_fflush_r+0x36>
10014842:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014844:	07db      	lsls	r3, r3, #31
10014846:	d401      	bmi.n	1001484c <_fflush_r+0x1c>
10014848:	0581      	lsls	r1, r0, #22
1001484a:	d50f      	bpl.n	1001486c <_fflush_r+0x3c>
1001484c:	4628      	mov	r0, r5
1001484e:	4621      	mov	r1, r4
10014850:	f7ff ff5a 	bl	10014708 <__sflush_r>
10014854:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014856:	07da      	lsls	r2, r3, #31
10014858:	4605      	mov	r5, r0
1001485a:	d402      	bmi.n	10014862 <_fflush_r+0x32>
1001485c:	89a3      	ldrh	r3, [r4, #12]
1001485e:	059b      	lsls	r3, r3, #22
10014860:	d508      	bpl.n	10014874 <_fflush_r+0x44>
10014862:	4628      	mov	r0, r5
10014864:	bd38      	pop	{r3, r4, r5, pc}
10014866:	4605      	mov	r5, r0
10014868:	4628      	mov	r0, r5
1001486a:	bd38      	pop	{r3, r4, r5, pc}
1001486c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001486e:	f000 ffd3 	bl	10015818 <__retarget_lock_acquire_recursive>
10014872:	e7eb      	b.n	1001484c <_fflush_r+0x1c>
10014874:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014876:	f000 ffd1 	bl	1001581c <__retarget_lock_release_recursive>
1001487a:	4628      	mov	r0, r5
1001487c:	bd38      	pop	{r3, r4, r5, pc}
1001487e:	f000 f9cf 	bl	10014c20 <__sinit>
10014882:	e7db      	b.n	1001483c <_fflush_r+0xc>

10014884 <fflush>:
10014884:	b350      	cbz	r0, 100148dc <fflush+0x58>
10014886:	b538      	push	{r3, r4, r5, lr}
10014888:	4b17      	ldr	r3, [pc, #92]	@ (100148e8 <fflush+0x64>)
1001488a:	681d      	ldr	r5, [r3, #0]
1001488c:	4604      	mov	r4, r0
1001488e:	b10d      	cbz	r5, 10014894 <fflush+0x10>
10014890:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
10014892:	b1bb      	cbz	r3, 100148c4 <fflush+0x40>
10014894:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
10014898:	b188      	cbz	r0, 100148be <fflush+0x3a>
1001489a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001489c:	07db      	lsls	r3, r3, #31
1001489e:	d401      	bmi.n	100148a4 <fflush+0x20>
100148a0:	0581      	lsls	r1, r0, #22
100148a2:	d513      	bpl.n	100148cc <fflush+0x48>
100148a4:	4628      	mov	r0, r5
100148a6:	4621      	mov	r1, r4
100148a8:	f7ff ff2e 	bl	10014708 <__sflush_r>
100148ac:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100148ae:	07da      	lsls	r2, r3, #31
100148b0:	4605      	mov	r5, r0
100148b2:	d402      	bmi.n	100148ba <fflush+0x36>
100148b4:	89a3      	ldrh	r3, [r4, #12]
100148b6:	059b      	lsls	r3, r3, #22
100148b8:	d50c      	bpl.n	100148d4 <fflush+0x50>
100148ba:	4628      	mov	r0, r5
100148bc:	bd38      	pop	{r3, r4, r5, pc}
100148be:	4605      	mov	r5, r0
100148c0:	4628      	mov	r0, r5
100148c2:	bd38      	pop	{r3, r4, r5, pc}
100148c4:	4628      	mov	r0, r5
100148c6:	f000 f9ab 	bl	10014c20 <__sinit>
100148ca:	e7e3      	b.n	10014894 <fflush+0x10>
100148cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100148ce:	f000 ffa3 	bl	10015818 <__retarget_lock_acquire_recursive>
100148d2:	e7e7      	b.n	100148a4 <fflush+0x20>
100148d4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100148d6:	f000 ffa1 	bl	1001581c <__retarget_lock_release_recursive>
100148da:	e7ee      	b.n	100148ba <fflush+0x36>
100148dc:	4a03      	ldr	r2, [pc, #12]	@ (100148ec <fflush+0x68>)
100148de:	4904      	ldr	r1, [pc, #16]	@ (100148f0 <fflush+0x6c>)
100148e0:	4804      	ldr	r0, [pc, #16]	@ (100148f4 <fflush+0x70>)
100148e2:	f000 bb43 	b.w	10014f6c <_fwalk_sglue>
100148e6:	bf00      	nop
100148e8:	20000598 	.word	0x20000598
100148ec:	20000420 	.word	0x20000420
100148f0:	10014831 	.word	0x10014831
100148f4:	200005a0 	.word	0x200005a0

100148f8 <_fgets_r>:
100148f8:	2a01      	cmp	r2, #1
100148fa:	dd6b      	ble.n	100149d4 <_fgets_r+0xdc>
100148fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10014900:	4616      	mov	r6, r2
10014902:	4680      	mov	r8, r0
10014904:	4689      	mov	r9, r1
10014906:	461c      	mov	r4, r3
10014908:	b110      	cbz	r0, 10014910 <_fgets_r+0x18>
1001490a:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001490c:	2b00      	cmp	r3, #0
1001490e:	d057      	beq.n	100149c0 <_fgets_r+0xc8>
10014910:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014912:	07db      	lsls	r3, r3, #31
10014914:	d53a      	bpl.n	1001498c <_fgets_r+0x94>
10014916:	3e01      	subs	r6, #1
10014918:	464f      	mov	r7, r9
1001491a:	e00b      	b.n	10014934 <_fgets_r+0x3c>
1001491c:	e9d4 3c00 	ldrd	r3, ip, [r4]
10014920:	ebac 0c05 	sub.w	ip, ip, r5
10014924:	442b      	add	r3, r5
10014926:	e9c4 3c00 	strd	r3, ip, [r4]
1001492a:	f000 ffc9 	bl	100158c0 <memcpy>
1001492e:	1b76      	subs	r6, r6, r5
10014930:	442f      	add	r7, r5
10014932:	d032      	beq.n	1001499a <_fgets_r+0xa2>
10014934:	6863      	ldr	r3, [r4, #4]
10014936:	4621      	mov	r1, r4
10014938:	4640      	mov	r0, r8
1001493a:	b923      	cbnz	r3, 10014946 <_fgets_r+0x4e>
1001493c:	f006 fa18 	bl	1001ad70 <__srefill_r>
10014940:	2800      	cmp	r0, #0
10014942:	d136      	bne.n	100149b2 <_fgets_r+0xba>
10014944:	6863      	ldr	r3, [r4, #4]
10014946:	f8d4 a000 	ldr.w	sl, [r4]
1001494a:	42b3      	cmp	r3, r6
1001494c:	bf28      	it	cs
1001494e:	4633      	movcs	r3, r6
10014950:	461a      	mov	r2, r3
10014952:	210a      	movs	r1, #10
10014954:	4650      	mov	r0, sl
10014956:	461d      	mov	r5, r3
10014958:	f000 ff62 	bl	10015820 <memchr>
1001495c:	4603      	mov	r3, r0
1001495e:	462a      	mov	r2, r5
10014960:	4638      	mov	r0, r7
10014962:	4651      	mov	r1, sl
10014964:	2b00      	cmp	r3, #0
10014966:	d0d9      	beq.n	1001491c <_fgets_r+0x24>
10014968:	3301      	adds	r3, #1
1001496a:	eba3 050a 	sub.w	r5, r3, sl
1001496e:	6023      	str	r3, [r4, #0]
10014970:	6863      	ldr	r3, [r4, #4]
10014972:	1b5b      	subs	r3, r3, r5
10014974:	6063      	str	r3, [r4, #4]
10014976:	462a      	mov	r2, r5
10014978:	f000 ffa2 	bl	100158c0 <memcpy>
1001497c:	2300      	movs	r3, #0
1001497e:	557b      	strb	r3, [r7, r5]
10014980:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014982:	07d9      	lsls	r1, r3, #31
10014984:	d50e      	bpl.n	100149a4 <_fgets_r+0xac>
10014986:	4648      	mov	r0, r9
10014988:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001498c:	89a3      	ldrh	r3, [r4, #12]
1001498e:	059f      	lsls	r7, r3, #22
10014990:	d4c1      	bmi.n	10014916 <_fgets_r+0x1e>
10014992:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014994:	f000 ff40 	bl	10015818 <__retarget_lock_acquire_recursive>
10014998:	e7bd      	b.n	10014916 <_fgets_r+0x1e>
1001499a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001499c:	2200      	movs	r2, #0
1001499e:	703a      	strb	r2, [r7, #0]
100149a0:	07da      	lsls	r2, r3, #31
100149a2:	d4f0      	bmi.n	10014986 <_fgets_r+0x8e>
100149a4:	89a3      	ldrh	r3, [r4, #12]
100149a6:	059b      	lsls	r3, r3, #22
100149a8:	d4ed      	bmi.n	10014986 <_fgets_r+0x8e>
100149aa:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100149ac:	f000 ff36 	bl	1001581c <__retarget_lock_release_recursive>
100149b0:	e7e9      	b.n	10014986 <_fgets_r+0x8e>
100149b2:	454f      	cmp	r7, r9
100149b4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100149b6:	d1f1      	bne.n	1001499c <_fgets_r+0xa4>
100149b8:	07dd      	lsls	r5, r3, #31
100149ba:	d504      	bpl.n	100149c6 <_fgets_r+0xce>
100149bc:	2000      	movs	r0, #0
100149be:	e7e3      	b.n	10014988 <_fgets_r+0x90>
100149c0:	f000 f92e 	bl	10014c20 <__sinit>
100149c4:	e7a4      	b.n	10014910 <_fgets_r+0x18>
100149c6:	89a3      	ldrh	r3, [r4, #12]
100149c8:	0598      	lsls	r0, r3, #22
100149ca:	d4f7      	bmi.n	100149bc <_fgets_r+0xc4>
100149cc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100149ce:	f000 ff25 	bl	1001581c <__retarget_lock_release_recursive>
100149d2:	e7f3      	b.n	100149bc <_fgets_r+0xc4>
100149d4:	2000      	movs	r0, #0
100149d6:	4770      	bx	lr

100149d8 <fgets>:
100149d8:	b410      	push	{r4}
100149da:	4c04      	ldr	r4, [pc, #16]	@ (100149ec <fgets+0x14>)
100149dc:	4684      	mov	ip, r0
100149de:	4613      	mov	r3, r2
100149e0:	6820      	ldr	r0, [r4, #0]
100149e2:	bc10      	pop	{r4}
100149e4:	460a      	mov	r2, r1
100149e6:	4661      	mov	r1, ip
100149e8:	f7ff bf86 	b.w	100148f8 <_fgets_r>
100149ec:	20000598 	.word	0x20000598

100149f0 <sscanf>:
100149f0:	b40e      	push	{r1, r2, r3}
100149f2:	b530      	push	{r4, r5, lr}
100149f4:	b09c      	sub	sp, #112	@ 0x70
100149f6:	ac1f      	add	r4, sp, #124	@ 0x7c
100149f8:	f44f 7201 	mov.w	r2, #516	@ 0x204
100149fc:	f854 5b04 	ldr.w	r5, [r4], #4
10014a00:	f8ad 2014 	strh.w	r2, [sp, #20]
10014a04:	9002      	str	r0, [sp, #8]
10014a06:	9006      	str	r0, [sp, #24]
10014a08:	f000 fffa 	bl	10015a00 <strlen>
10014a0c:	9003      	str	r0, [sp, #12]
10014a0e:	9007      	str	r0, [sp, #28]
10014a10:	480a      	ldr	r0, [pc, #40]	@ (10014a3c <sscanf+0x4c>)
10014a12:	490b      	ldr	r1, [pc, #44]	@ (10014a40 <sscanf+0x50>)
10014a14:	910a      	str	r1, [sp, #40]	@ 0x28
10014a16:	2300      	movs	r3, #0
10014a18:	f64f 7cff 	movw	ip, #65535	@ 0xffff
10014a1c:	930e      	str	r3, [sp, #56]	@ 0x38
10014a1e:	9313      	str	r3, [sp, #76]	@ 0x4c
10014a20:	462a      	mov	r2, r5
10014a22:	4623      	mov	r3, r4
10014a24:	a902      	add	r1, sp, #8
10014a26:	6800      	ldr	r0, [r0, #0]
10014a28:	f8ad c016 	strh.w	ip, [sp, #22]
10014a2c:	9401      	str	r4, [sp, #4]
10014a2e:	f004 f835 	bl	10018a9c <__ssvfscanf_r>
10014a32:	b01c      	add	sp, #112	@ 0x70
10014a34:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
10014a38:	b003      	add	sp, #12
10014a3a:	4770      	bx	lr
10014a3c:	20000598 	.word	0x20000598
10014a40:	10014a69 	.word	0x10014a69

10014a44 <__sread>:
10014a44:	b510      	push	{r4, lr}
10014a46:	460c      	mov	r4, r1
10014a48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10014a4c:	f000 fcf0 	bl	10015430 <_read_r>
10014a50:	2800      	cmp	r0, #0
10014a52:	db03      	blt.n	10014a5c <__sread+0x18>
10014a54:	6d23      	ldr	r3, [r4, #80]	@ 0x50
10014a56:	4403      	add	r3, r0
10014a58:	6523      	str	r3, [r4, #80]	@ 0x50
10014a5a:	bd10      	pop	{r4, pc}
10014a5c:	89a3      	ldrh	r3, [r4, #12]
10014a5e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10014a62:	81a3      	strh	r3, [r4, #12]
10014a64:	bd10      	pop	{r4, pc}
10014a66:	bf00      	nop

10014a68 <__seofread>:
10014a68:	2000      	movs	r0, #0
10014a6a:	4770      	bx	lr

10014a6c <__swrite>:
10014a6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10014a70:	460c      	mov	r4, r1
10014a72:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10014a76:	461f      	mov	r7, r3
10014a78:	05cb      	lsls	r3, r1, #23
10014a7a:	4605      	mov	r5, r0
10014a7c:	4616      	mov	r6, r2
10014a7e:	d40b      	bmi.n	10014a98 <__swrite+0x2c>
10014a80:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
10014a84:	81a1      	strh	r1, [r4, #12]
10014a86:	463b      	mov	r3, r7
10014a88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10014a8c:	4632      	mov	r2, r6
10014a8e:	4628      	mov	r0, r5
10014a90:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10014a94:	f000 bcf4 	b.w	10015480 <_write_r>
10014a98:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10014a9c:	2302      	movs	r3, #2
10014a9e:	2200      	movs	r2, #0
10014aa0:	f000 fcb0 	bl	10015404 <_lseek_r>
10014aa4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
10014aa8:	e7ea      	b.n	10014a80 <__swrite+0x14>
10014aaa:	bf00      	nop

10014aac <__sseek>:
10014aac:	b510      	push	{r4, lr}
10014aae:	460c      	mov	r4, r1
10014ab0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10014ab4:	f000 fca6 	bl	10015404 <_lseek_r>
10014ab8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014abc:	1c42      	adds	r2, r0, #1
10014abe:	bf0e      	itee	eq
10014ac0:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
10014ac4:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
10014ac8:	6520      	strne	r0, [r4, #80]	@ 0x50
10014aca:	81a3      	strh	r3, [r4, #12]
10014acc:	bd10      	pop	{r4, pc}
10014ace:	bf00      	nop

10014ad0 <__sclose>:
10014ad0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10014ad4:	f000 bc6e 	b.w	100153b4 <_close_r>

10014ad8 <stdio_exit_handler>:
10014ad8:	4a02      	ldr	r2, [pc, #8]	@ (10014ae4 <stdio_exit_handler+0xc>)
10014ada:	4903      	ldr	r1, [pc, #12]	@ (10014ae8 <stdio_exit_handler+0x10>)
10014adc:	4803      	ldr	r0, [pc, #12]	@ (10014aec <stdio_exit_handler+0x14>)
10014ade:	f000 ba45 	b.w	10014f6c <_fwalk_sglue>
10014ae2:	bf00      	nop
10014ae4:	20000420 	.word	0x20000420
10014ae8:	10014305 	.word	0x10014305
10014aec:	200005a0 	.word	0x200005a0

10014af0 <cleanup_stdio>:
10014af0:	4b0c      	ldr	r3, [pc, #48]	@ (10014b24 <cleanup_stdio+0x34>)
10014af2:	6841      	ldr	r1, [r0, #4]
10014af4:	4299      	cmp	r1, r3
10014af6:	b510      	push	{r4, lr}
10014af8:	4604      	mov	r4, r0
10014afa:	d001      	beq.n	10014b00 <cleanup_stdio+0x10>
10014afc:	f7ff fc02 	bl	10014304 <_fclose_r>
10014b00:	68a1      	ldr	r1, [r4, #8]
10014b02:	4b09      	ldr	r3, [pc, #36]	@ (10014b28 <cleanup_stdio+0x38>)
10014b04:	4299      	cmp	r1, r3
10014b06:	d002      	beq.n	10014b0e <cleanup_stdio+0x1e>
10014b08:	4620      	mov	r0, r4
10014b0a:	f7ff fbfb 	bl	10014304 <_fclose_r>
10014b0e:	68e1      	ldr	r1, [r4, #12]
10014b10:	4b06      	ldr	r3, [pc, #24]	@ (10014b2c <cleanup_stdio+0x3c>)
10014b12:	4299      	cmp	r1, r3
10014b14:	d004      	beq.n	10014b20 <cleanup_stdio+0x30>
10014b16:	4620      	mov	r0, r4
10014b18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10014b1c:	f7ff bbf2 	b.w	10014304 <_fclose_r>
10014b20:	bd10      	pop	{r4, pc}
10014b22:	bf00      	nop
10014b24:	20001488 	.word	0x20001488
10014b28:	200014f0 	.word	0x200014f0
10014b2c:	20001558 	.word	0x20001558

10014b30 <global_stdio_init.part.0>:
10014b30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10014b34:	4c31      	ldr	r4, [pc, #196]	@ (10014bfc <global_stdio_init.part.0+0xcc>)
10014b36:	4b32      	ldr	r3, [pc, #200]	@ (10014c00 <global_stdio_init.part.0+0xd0>)
10014b38:	4832      	ldr	r0, [pc, #200]	@ (10014c04 <global_stdio_init.part.0+0xd4>)
10014b3a:	f8df 90cc 	ldr.w	r9, [pc, #204]	@ 10014c08 <global_stdio_init.part.0+0xd8>
10014b3e:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 10014c0c <global_stdio_init.part.0+0xdc>
10014b42:	4f33      	ldr	r7, [pc, #204]	@ (10014c10 <global_stdio_init.part.0+0xe0>)
10014b44:	6018      	str	r0, [r3, #0]
10014b46:	2500      	movs	r5, #0
10014b48:	4629      	mov	r1, r5
10014b4a:	2304      	movs	r3, #4
10014b4c:	2208      	movs	r2, #8
10014b4e:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
10014b52:	4e30      	ldr	r6, [pc, #192]	@ (10014c14 <global_stdio_init.part.0+0xe4>)
10014b54:	60e3      	str	r3, [r4, #12]
10014b56:	e9c4 5500 	strd	r5, r5, [r4]
10014b5a:	e9c4 5504 	strd	r5, r5, [r4, #16]
10014b5e:	60a5      	str	r5, [r4, #8]
10014b60:	6665      	str	r5, [r4, #100]	@ 0x64
10014b62:	61a5      	str	r5, [r4, #24]
10014b64:	f000 fb74 	bl	10015250 <memset>
10014b68:	f104 0058 	add.w	r0, r4, #88	@ 0x58
10014b6c:	e9c4 4907 	strd	r4, r9, [r4, #28]
10014b70:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
10014b74:	62e6      	str	r6, [r4, #44]	@ 0x2c
10014b76:	f000 fe4b 	bl	10015810 <__retarget_lock_init_recursive>
10014b7a:	4629      	mov	r1, r5
10014b7c:	4b26      	ldr	r3, [pc, #152]	@ (10014c18 <global_stdio_init.part.0+0xe8>)
10014b7e:	6763      	str	r3, [r4, #116]	@ 0x74
10014b80:	2208      	movs	r2, #8
10014b82:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
10014b86:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
10014b8a:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
10014b8e:	6725      	str	r5, [r4, #112]	@ 0x70
10014b90:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
10014b94:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
10014b98:	f000 fb5a 	bl	10015250 <memset>
10014b9c:	f104 0368 	add.w	r3, r4, #104	@ 0x68
10014ba0:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
10014ba4:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
10014ba8:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
10014bac:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
10014bb0:	f000 fe2e 	bl	10015810 <__retarget_lock_init_recursive>
10014bb4:	4b19      	ldr	r3, [pc, #100]	@ (10014c1c <global_stdio_init.part.0+0xec>)
10014bb6:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
10014bba:	4629      	mov	r1, r5
10014bbc:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
10014bc0:	2208      	movs	r2, #8
10014bc2:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
10014bc6:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
10014bca:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
10014bce:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
10014bd2:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
10014bd6:	f000 fb3b 	bl	10015250 <memset>
10014bda:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
10014bde:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
10014be2:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
10014be6:	f504 7094 	add.w	r0, r4, #296	@ 0x128
10014bea:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
10014bee:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
10014bf2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10014bf6:	f000 be0b 	b.w	10015810 <__retarget_lock_init_recursive>
10014bfa:	bf00      	nop
10014bfc:	20001488 	.word	0x20001488
10014c00:	200015c0 	.word	0x200015c0
10014c04:	10014ad9 	.word	0x10014ad9
10014c08:	10014a45 	.word	0x10014a45
10014c0c:	10014a6d 	.word	0x10014a6d
10014c10:	10014aad 	.word	0x10014aad
10014c14:	10014ad1 	.word	0x10014ad1
10014c18:	00010009 	.word	0x00010009
10014c1c:	00020012 	.word	0x00020012

10014c20 <__sinit>:
10014c20:	b510      	push	{r4, lr}
10014c22:	4604      	mov	r4, r0
10014c24:	480a      	ldr	r0, [pc, #40]	@ (10014c50 <__sinit+0x30>)
10014c26:	f000 fdf7 	bl	10015818 <__retarget_lock_acquire_recursive>
10014c2a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
10014c2c:	b923      	cbnz	r3, 10014c38 <__sinit+0x18>
10014c2e:	4b09      	ldr	r3, [pc, #36]	@ (10014c54 <__sinit+0x34>)
10014c30:	4a09      	ldr	r2, [pc, #36]	@ (10014c58 <__sinit+0x38>)
10014c32:	681b      	ldr	r3, [r3, #0]
10014c34:	6362      	str	r2, [r4, #52]	@ 0x34
10014c36:	b123      	cbz	r3, 10014c42 <__sinit+0x22>
10014c38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10014c3c:	4804      	ldr	r0, [pc, #16]	@ (10014c50 <__sinit+0x30>)
10014c3e:	f000 bded 	b.w	1001581c <__retarget_lock_release_recursive>
10014c42:	f7ff ff75 	bl	10014b30 <global_stdio_init.part.0>
10014c46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10014c4a:	4801      	ldr	r0, [pc, #4]	@ (10014c50 <__sinit+0x30>)
10014c4c:	f000 bde6 	b.w	1001581c <__retarget_lock_release_recursive>
10014c50:	200015d0 	.word	0x200015d0
10014c54:	200015c0 	.word	0x200015c0
10014c58:	10014af1 	.word	0x10014af1

10014c5c <__sfp_lock_acquire>:
10014c5c:	4801      	ldr	r0, [pc, #4]	@ (10014c64 <__sfp_lock_acquire+0x8>)
10014c5e:	f000 bddb 	b.w	10015818 <__retarget_lock_acquire_recursive>
10014c62:	bf00      	nop
10014c64:	200015d0 	.word	0x200015d0

10014c68 <__sfp_lock_release>:
10014c68:	4801      	ldr	r0, [pc, #4]	@ (10014c70 <__sfp_lock_release+0x8>)
10014c6a:	f000 bdd7 	b.w	1001581c <__retarget_lock_release_recursive>
10014c6e:	bf00      	nop
10014c70:	200015d0 	.word	0x200015d0

10014c74 <__sfvwrite_r>:
10014c74:	6893      	ldr	r3, [r2, #8]
10014c76:	2b00      	cmp	r3, #0
10014c78:	f000 80f6 	beq.w	10014e68 <__sfvwrite_r+0x1f4>
10014c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10014c80:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
10014c84:	f01c 0f08 	tst.w	ip, #8
10014c88:	b083      	sub	sp, #12
10014c8a:	4690      	mov	r8, r2
10014c8c:	4681      	mov	r9, r0
10014c8e:	460c      	mov	r4, r1
10014c90:	d031      	beq.n	10014cf6 <__sfvwrite_r+0x82>
10014c92:	690b      	ldr	r3, [r1, #16]
10014c94:	b37b      	cbz	r3, 10014cf6 <__sfvwrite_r+0x82>
10014c96:	f01c 0702 	ands.w	r7, ip, #2
10014c9a:	f8d8 6000 	ldr.w	r6, [r8]
10014c9e:	d038      	beq.n	10014d12 <__sfvwrite_r+0x9e>
10014ca0:	2700      	movs	r7, #0
10014ca2:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10014ca6:	69e1      	ldr	r1, [r4, #28]
10014ca8:	f8df a2bc 	ldr.w	sl, [pc, #700]	@ 10014f68 <__sfvwrite_r+0x2f4>
10014cac:	463d      	mov	r5, r7
10014cae:	4555      	cmp	r5, sl
10014cb0:	462b      	mov	r3, r5
10014cb2:	463a      	mov	r2, r7
10014cb4:	bf28      	it	cs
10014cb6:	4653      	movcs	r3, sl
10014cb8:	4648      	mov	r0, r9
10014cba:	b1c5      	cbz	r5, 10014cee <__sfvwrite_r+0x7a>
10014cbc:	47d8      	blx	fp
10014cbe:	2800      	cmp	r0, #0
10014cc0:	f340 80c8 	ble.w	10014e54 <__sfvwrite_r+0x1e0>
10014cc4:	f8d8 3008 	ldr.w	r3, [r8, #8]
10014cc8:	1a1b      	subs	r3, r3, r0
10014cca:	4407      	add	r7, r0
10014ccc:	1a2d      	subs	r5, r5, r0
10014cce:	f8c8 3008 	str.w	r3, [r8, #8]
10014cd2:	2b00      	cmp	r3, #0
10014cd4:	f000 80b4 	beq.w	10014e40 <__sfvwrite_r+0x1cc>
10014cd8:	4555      	cmp	r5, sl
10014cda:	462b      	mov	r3, r5
10014cdc:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10014ce0:	69e1      	ldr	r1, [r4, #28]
10014ce2:	bf28      	it	cs
10014ce4:	4653      	movcs	r3, sl
10014ce6:	463a      	mov	r2, r7
10014ce8:	4648      	mov	r0, r9
10014cea:	2d00      	cmp	r5, #0
10014cec:	d1e6      	bne.n	10014cbc <__sfvwrite_r+0x48>
10014cee:	e9d6 7500 	ldrd	r7, r5, [r6]
10014cf2:	3608      	adds	r6, #8
10014cf4:	e7db      	b.n	10014cae <__sfvwrite_r+0x3a>
10014cf6:	4621      	mov	r1, r4
10014cf8:	4648      	mov	r0, r9
10014cfa:	f000 f95b 	bl	10014fb4 <__swsetup_r>
10014cfe:	2800      	cmp	r0, #0
10014d00:	f040 80ad 	bne.w	10014e5e <__sfvwrite_r+0x1ea>
10014d04:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10014d08:	f8d8 6000 	ldr.w	r6, [r8]
10014d0c:	f01c 0702 	ands.w	r7, ip, #2
10014d10:	d1c6      	bne.n	10014ca0 <__sfvwrite_r+0x2c>
10014d12:	f01c 0a01 	ands.w	sl, ip, #1
10014d16:	d163      	bne.n	10014de0 <__sfvwrite_r+0x16c>
10014d18:	6823      	ldr	r3, [r4, #0]
10014d1a:	68a1      	ldr	r1, [r4, #8]
10014d1c:	4657      	mov	r7, sl
10014d1e:	4618      	mov	r0, r3
10014d20:	468b      	mov	fp, r1
10014d22:	2f00      	cmp	r7, #0
10014d24:	d058      	beq.n	10014dd8 <__sfvwrite_r+0x164>
10014d26:	f41c 7f00 	tst.w	ip, #512	@ 0x200
10014d2a:	f000 80b1 	beq.w	10014e90 <__sfvwrite_r+0x21c>
10014d2e:	42b9      	cmp	r1, r7
10014d30:	460a      	mov	r2, r1
10014d32:	f200 80dd 	bhi.w	10014ef0 <__sfvwrite_r+0x27c>
10014d36:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
10014d3a:	d02f      	beq.n	10014d9c <__sfvwrite_r+0x128>
10014d3c:	6921      	ldr	r1, [r4, #16]
10014d3e:	6962      	ldr	r2, [r4, #20]
10014d40:	1a5d      	subs	r5, r3, r1
10014d42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
10014d46:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
10014d4a:	1c6b      	adds	r3, r5, #1
10014d4c:	1052      	asrs	r2, r2, #1
10014d4e:	443b      	add	r3, r7
10014d50:	4293      	cmp	r3, r2
10014d52:	bf92      	itee	ls
10014d54:	4693      	movls	fp, r2
10014d56:	469b      	movhi	fp, r3
10014d58:	461a      	movhi	r2, r3
10014d5a:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
10014d5e:	f000 80e6 	beq.w	10014f2e <__sfvwrite_r+0x2ba>
10014d62:	4611      	mov	r1, r2
10014d64:	4648      	mov	r0, r9
10014d66:	f7fc f8d3 	bl	10010f10 <_malloc_r>
10014d6a:	2800      	cmp	r0, #0
10014d6c:	f000 80f5 	beq.w	10014f5a <__sfvwrite_r+0x2e6>
10014d70:	462a      	mov	r2, r5
10014d72:	6921      	ldr	r1, [r4, #16]
10014d74:	9001      	str	r0, [sp, #4]
10014d76:	f000 fda3 	bl	100158c0 <memcpy>
10014d7a:	89a2      	ldrh	r2, [r4, #12]
10014d7c:	9b01      	ldr	r3, [sp, #4]
10014d7e:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10014d82:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
10014d86:	81a2      	strh	r2, [r4, #12]
10014d88:	1958      	adds	r0, r3, r5
10014d8a:	ebab 0505 	sub.w	r5, fp, r5
10014d8e:	f8c4 b014 	str.w	fp, [r4, #20]
10014d92:	6123      	str	r3, [r4, #16]
10014d94:	60a5      	str	r5, [r4, #8]
10014d96:	6020      	str	r0, [r4, #0]
10014d98:	46bb      	mov	fp, r7
10014d9a:	463a      	mov	r2, r7
10014d9c:	4651      	mov	r1, sl
10014d9e:	9201      	str	r2, [sp, #4]
10014da0:	f000 f9d6 	bl	10015150 <memmove>
10014da4:	68a1      	ldr	r1, [r4, #8]
10014da6:	6823      	ldr	r3, [r4, #0]
10014da8:	9a01      	ldr	r2, [sp, #4]
10014daa:	eba1 010b 	sub.w	r1, r1, fp
10014dae:	441a      	add	r2, r3
10014db0:	463d      	mov	r5, r7
10014db2:	60a1      	str	r1, [r4, #8]
10014db4:	6022      	str	r2, [r4, #0]
10014db6:	2700      	movs	r7, #0
10014db8:	f8d8 3008 	ldr.w	r3, [r8, #8]
10014dbc:	1b5b      	subs	r3, r3, r5
10014dbe:	44aa      	add	sl, r5
10014dc0:	f8c8 3008 	str.w	r3, [r8, #8]
10014dc4:	2b00      	cmp	r3, #0
10014dc6:	d03b      	beq.n	10014e40 <__sfvwrite_r+0x1cc>
10014dc8:	6823      	ldr	r3, [r4, #0]
10014dca:	68a1      	ldr	r1, [r4, #8]
10014dcc:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10014dd0:	4618      	mov	r0, r3
10014dd2:	468b      	mov	fp, r1
10014dd4:	2f00      	cmp	r7, #0
10014dd6:	d1a6      	bne.n	10014d26 <__sfvwrite_r+0xb2>
10014dd8:	e9d6 a700 	ldrd	sl, r7, [r6]
10014ddc:	3608      	adds	r6, #8
10014dde:	e79e      	b.n	10014d1e <__sfvwrite_r+0xaa>
10014de0:	4638      	mov	r0, r7
10014de2:	46bb      	mov	fp, r7
10014de4:	463d      	mov	r5, r7
10014de6:	2d00      	cmp	r5, #0
10014de8:	d040      	beq.n	10014e6c <__sfvwrite_r+0x1f8>
10014dea:	2800      	cmp	r0, #0
10014dec:	d045      	beq.n	10014e7a <__sfvwrite_r+0x206>
10014dee:	463a      	mov	r2, r7
10014df0:	e9d4 c304 	ldrd	ip, r3, [r4, #16]
10014df4:	6820      	ldr	r0, [r4, #0]
10014df6:	68a1      	ldr	r1, [r4, #8]
10014df8:	42aa      	cmp	r2, r5
10014dfa:	bf28      	it	cs
10014dfc:	462a      	movcs	r2, r5
10014dfe:	4560      	cmp	r0, ip
10014e00:	d904      	bls.n	10014e0c <__sfvwrite_r+0x198>
10014e02:	eb01 0a03 	add.w	sl, r1, r3
10014e06:	4552      	cmp	r2, sl
10014e08:	f300 8082 	bgt.w	10014f10 <__sfvwrite_r+0x29c>
10014e0c:	4293      	cmp	r3, r2
10014e0e:	dc72      	bgt.n	10014ef6 <__sfvwrite_r+0x282>
10014e10:	69e1      	ldr	r1, [r4, #28]
10014e12:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
10014e16:	465a      	mov	r2, fp
10014e18:	4648      	mov	r0, r9
10014e1a:	47e0      	blx	ip
10014e1c:	f1b0 0a00 	subs.w	sl, r0, #0
10014e20:	dd18      	ble.n	10014e54 <__sfvwrite_r+0x1e0>
10014e22:	ebb7 070a 	subs.w	r7, r7, sl
10014e26:	d00f      	beq.n	10014e48 <__sfvwrite_r+0x1d4>
10014e28:	2001      	movs	r0, #1
10014e2a:	f8d8 3008 	ldr.w	r3, [r8, #8]
10014e2e:	eba3 030a 	sub.w	r3, r3, sl
10014e32:	44d3      	add	fp, sl
10014e34:	eba5 050a 	sub.w	r5, r5, sl
10014e38:	f8c8 3008 	str.w	r3, [r8, #8]
10014e3c:	2b00      	cmp	r3, #0
10014e3e:	d1d2      	bne.n	10014de6 <__sfvwrite_r+0x172>
10014e40:	2000      	movs	r0, #0
10014e42:	b003      	add	sp, #12
10014e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014e48:	4621      	mov	r1, r4
10014e4a:	4648      	mov	r0, r9
10014e4c:	f7ff fcf0 	bl	10014830 <_fflush_r>
10014e50:	2800      	cmp	r0, #0
10014e52:	d0ea      	beq.n	10014e2a <__sfvwrite_r+0x1b6>
10014e54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014e58:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10014e5c:	81a3      	strh	r3, [r4, #12]
10014e5e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10014e62:	b003      	add	sp, #12
10014e64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014e68:	2000      	movs	r0, #0
10014e6a:	4770      	bx	lr
10014e6c:	6875      	ldr	r5, [r6, #4]
10014e6e:	4633      	mov	r3, r6
10014e70:	3608      	adds	r6, #8
10014e72:	2d00      	cmp	r5, #0
10014e74:	d0fa      	beq.n	10014e6c <__sfvwrite_r+0x1f8>
10014e76:	f8d3 b000 	ldr.w	fp, [r3]
10014e7a:	462a      	mov	r2, r5
10014e7c:	210a      	movs	r1, #10
10014e7e:	4658      	mov	r0, fp
10014e80:	f000 fcce 	bl	10015820 <memchr>
10014e84:	2800      	cmp	r0, #0
10014e86:	d065      	beq.n	10014f54 <__sfvwrite_r+0x2e0>
10014e88:	3001      	adds	r0, #1
10014e8a:	eba0 070b 	sub.w	r7, r0, fp
10014e8e:	e7ae      	b.n	10014dee <__sfvwrite_r+0x17a>
10014e90:	6922      	ldr	r2, [r4, #16]
10014e92:	429a      	cmp	r2, r3
10014e94:	d314      	bcc.n	10014ec0 <__sfvwrite_r+0x24c>
10014e96:	6962      	ldr	r2, [r4, #20]
10014e98:	42ba      	cmp	r2, r7
10014e9a:	d811      	bhi.n	10014ec0 <__sfvwrite_r+0x24c>
10014e9c:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10014ea0:	42bb      	cmp	r3, r7
10014ea2:	bf28      	it	cs
10014ea4:	463b      	movcs	r3, r7
10014ea6:	6a65      	ldr	r5, [r4, #36]	@ 0x24
10014ea8:	fb93 f3f2 	sdiv	r3, r3, r2
10014eac:	69e1      	ldr	r1, [r4, #28]
10014eae:	fb02 f303 	mul.w	r3, r2, r3
10014eb2:	4648      	mov	r0, r9
10014eb4:	4652      	mov	r2, sl
10014eb6:	47a8      	blx	r5
10014eb8:	1e05      	subs	r5, r0, #0
10014eba:	ddcb      	ble.n	10014e54 <__sfvwrite_r+0x1e0>
10014ebc:	1b7f      	subs	r7, r7, r5
10014ebe:	e77b      	b.n	10014db8 <__sfvwrite_r+0x144>
10014ec0:	42b9      	cmp	r1, r7
10014ec2:	bf28      	it	cs
10014ec4:	4639      	movcs	r1, r7
10014ec6:	460d      	mov	r5, r1
10014ec8:	4618      	mov	r0, r3
10014eca:	460a      	mov	r2, r1
10014ecc:	4651      	mov	r1, sl
10014ece:	f000 f93f 	bl	10015150 <memmove>
10014ed2:	68a1      	ldr	r1, [r4, #8]
10014ed4:	6823      	ldr	r3, [r4, #0]
10014ed6:	1b49      	subs	r1, r1, r5
10014ed8:	442b      	add	r3, r5
10014eda:	60a1      	str	r1, [r4, #8]
10014edc:	6023      	str	r3, [r4, #0]
10014ede:	2900      	cmp	r1, #0
10014ee0:	d1ec      	bne.n	10014ebc <__sfvwrite_r+0x248>
10014ee2:	4621      	mov	r1, r4
10014ee4:	4648      	mov	r0, r9
10014ee6:	f7ff fca3 	bl	10014830 <_fflush_r>
10014eea:	2800      	cmp	r0, #0
10014eec:	d0e6      	beq.n	10014ebc <__sfvwrite_r+0x248>
10014eee:	e7b1      	b.n	10014e54 <__sfvwrite_r+0x1e0>
10014ef0:	46bb      	mov	fp, r7
10014ef2:	463a      	mov	r2, r7
10014ef4:	e752      	b.n	10014d9c <__sfvwrite_r+0x128>
10014ef6:	4659      	mov	r1, fp
10014ef8:	9201      	str	r2, [sp, #4]
10014efa:	f000 f929 	bl	10015150 <memmove>
10014efe:	9a01      	ldr	r2, [sp, #4]
10014f00:	68a3      	ldr	r3, [r4, #8]
10014f02:	1a9b      	subs	r3, r3, r2
10014f04:	60a3      	str	r3, [r4, #8]
10014f06:	6823      	ldr	r3, [r4, #0]
10014f08:	4413      	add	r3, r2
10014f0a:	6023      	str	r3, [r4, #0]
10014f0c:	4692      	mov	sl, r2
10014f0e:	e788      	b.n	10014e22 <__sfvwrite_r+0x1ae>
10014f10:	4659      	mov	r1, fp
10014f12:	4652      	mov	r2, sl
10014f14:	f000 f91c 	bl	10015150 <memmove>
10014f18:	6823      	ldr	r3, [r4, #0]
10014f1a:	4453      	add	r3, sl
10014f1c:	6023      	str	r3, [r4, #0]
10014f1e:	4621      	mov	r1, r4
10014f20:	4648      	mov	r0, r9
10014f22:	f7ff fc85 	bl	10014830 <_fflush_r>
10014f26:	2800      	cmp	r0, #0
10014f28:	f43f af7b 	beq.w	10014e22 <__sfvwrite_r+0x1ae>
10014f2c:	e792      	b.n	10014e54 <__sfvwrite_r+0x1e0>
10014f2e:	4648      	mov	r0, r9
10014f30:	f7ff fa48 	bl	100143c4 <_realloc_r>
10014f34:	4603      	mov	r3, r0
10014f36:	2800      	cmp	r0, #0
10014f38:	f47f af26 	bne.w	10014d88 <__sfvwrite_r+0x114>
10014f3c:	6921      	ldr	r1, [r4, #16]
10014f3e:	4648      	mov	r0, r9
10014f40:	f001 fe5e 	bl	10016c00 <_free_r>
10014f44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014f48:	220c      	movs	r2, #12
10014f4a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10014f4e:	f8c9 2000 	str.w	r2, [r9]
10014f52:	e781      	b.n	10014e58 <__sfvwrite_r+0x1e4>
10014f54:	1c6a      	adds	r2, r5, #1
10014f56:	4617      	mov	r7, r2
10014f58:	e74a      	b.n	10014df0 <__sfvwrite_r+0x17c>
10014f5a:	220c      	movs	r2, #12
10014f5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014f60:	f8c9 2000 	str.w	r2, [r9]
10014f64:	e778      	b.n	10014e58 <__sfvwrite_r+0x1e4>
10014f66:	bf00      	nop
10014f68:	7ffffc00 	.word	0x7ffffc00

10014f6c <_fwalk_sglue>:
10014f6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10014f70:	4680      	mov	r8, r0
10014f72:	460f      	mov	r7, r1
10014f74:	4616      	mov	r6, r2
10014f76:	f04f 0900 	mov.w	r9, #0
10014f7a:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
10014f7e:	3d01      	subs	r5, #1
10014f80:	d411      	bmi.n	10014fa6 <_fwalk_sglue+0x3a>
10014f82:	89a3      	ldrh	r3, [r4, #12]
10014f84:	2b01      	cmp	r3, #1
10014f86:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
10014f8a:	d908      	bls.n	10014f9e <_fwalk_sglue+0x32>
10014f8c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
10014f90:	3301      	adds	r3, #1
10014f92:	4621      	mov	r1, r4
10014f94:	d003      	beq.n	10014f9e <_fwalk_sglue+0x32>
10014f96:	4640      	mov	r0, r8
10014f98:	47b8      	blx	r7
10014f9a:	ea49 0900 	orr.w	r9, r9, r0
10014f9e:	1c6b      	adds	r3, r5, #1
10014fa0:	f104 0468 	add.w	r4, r4, #104	@ 0x68
10014fa4:	d1ed      	bne.n	10014f82 <_fwalk_sglue+0x16>
10014fa6:	6836      	ldr	r6, [r6, #0]
10014fa8:	2e00      	cmp	r6, #0
10014faa:	d1e6      	bne.n	10014f7a <_fwalk_sglue+0xe>
10014fac:	4648      	mov	r0, r9
10014fae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10014fb2:	bf00      	nop

10014fb4 <__swsetup_r>:
10014fb4:	b538      	push	{r3, r4, r5, lr}
10014fb6:	4b2e      	ldr	r3, [pc, #184]	@ (10015070 <__swsetup_r+0xbc>)
10014fb8:	681b      	ldr	r3, [r3, #0]
10014fba:	4605      	mov	r5, r0
10014fbc:	460c      	mov	r4, r1
10014fbe:	b113      	cbz	r3, 10014fc6 <__swsetup_r+0x12>
10014fc0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
10014fc2:	2a00      	cmp	r2, #0
10014fc4:	d04b      	beq.n	1001505e <__swsetup_r+0xaa>
10014fc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014fca:	0718      	lsls	r0, r3, #28
10014fcc:	d51c      	bpl.n	10015008 <__swsetup_r+0x54>
10014fce:	6922      	ldr	r2, [r4, #16]
10014fd0:	b322      	cbz	r2, 1001501c <__swsetup_r+0x68>
10014fd2:	f013 0101 	ands.w	r1, r3, #1
10014fd6:	d007      	beq.n	10014fe8 <__swsetup_r+0x34>
10014fd8:	6961      	ldr	r1, [r4, #20]
10014fda:	2000      	movs	r0, #0
10014fdc:	4249      	negs	r1, r1
10014fde:	60a0      	str	r0, [r4, #8]
10014fe0:	61a1      	str	r1, [r4, #24]
10014fe2:	b13a      	cbz	r2, 10014ff4 <__swsetup_r+0x40>
10014fe4:	2000      	movs	r0, #0
10014fe6:	bd38      	pop	{r3, r4, r5, pc}
10014fe8:	0798      	lsls	r0, r3, #30
10014fea:	bf58      	it	pl
10014fec:	6961      	ldrpl	r1, [r4, #20]
10014fee:	60a1      	str	r1, [r4, #8]
10014ff0:	2a00      	cmp	r2, #0
10014ff2:	d1f7      	bne.n	10014fe4 <__swsetup_r+0x30>
10014ff4:	0619      	lsls	r1, r3, #24
10014ff6:	bf58      	it	pl
10014ff8:	4610      	movpl	r0, r2
10014ffa:	d5f4      	bpl.n	10014fe6 <__swsetup_r+0x32>
10014ffc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015000:	81a3      	strh	r3, [r4, #12]
10015002:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10015006:	bd38      	pop	{r3, r4, r5, pc}
10015008:	06d9      	lsls	r1, r3, #27
1001500a:	d52c      	bpl.n	10015066 <__swsetup_r+0xb2>
1001500c:	075a      	lsls	r2, r3, #29
1001500e:	d412      	bmi.n	10015036 <__swsetup_r+0x82>
10015010:	6922      	ldr	r2, [r4, #16]
10015012:	f043 0308 	orr.w	r3, r3, #8
10015016:	81a3      	strh	r3, [r4, #12]
10015018:	2a00      	cmp	r2, #0
1001501a:	d1da      	bne.n	10014fd2 <__swsetup_r+0x1e>
1001501c:	f403 7120 	and.w	r1, r3, #640	@ 0x280
10015020:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10015024:	d0d5      	beq.n	10014fd2 <__swsetup_r+0x1e>
10015026:	4621      	mov	r1, r4
10015028:	4628      	mov	r0, r5
1001502a:	f003 fcc9 	bl	100189c0 <__smakebuf_r>
1001502e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015032:	6922      	ldr	r2, [r4, #16]
10015034:	e7cd      	b.n	10014fd2 <__swsetup_r+0x1e>
10015036:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10015038:	b151      	cbz	r1, 10015050 <__swsetup_r+0x9c>
1001503a:	f104 0240 	add.w	r2, r4, #64	@ 0x40
1001503e:	4291      	cmp	r1, r2
10015040:	d004      	beq.n	1001504c <__swsetup_r+0x98>
10015042:	4628      	mov	r0, r5
10015044:	f001 fddc 	bl	10016c00 <_free_r>
10015048:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001504c:	2200      	movs	r2, #0
1001504e:	6322      	str	r2, [r4, #48]	@ 0x30
10015050:	6922      	ldr	r2, [r4, #16]
10015052:	2100      	movs	r1, #0
10015054:	e9c4 2100 	strd	r2, r1, [r4]
10015058:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
1001505c:	e7d9      	b.n	10015012 <__swsetup_r+0x5e>
1001505e:	4618      	mov	r0, r3
10015060:	f7ff fdde 	bl	10014c20 <__sinit>
10015064:	e7af      	b.n	10014fc6 <__swsetup_r+0x12>
10015066:	2209      	movs	r2, #9
10015068:	602a      	str	r2, [r5, #0]
1001506a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001506e:	e7c7      	b.n	10015000 <__swsetup_r+0x4c>
10015070:	20000598 	.word	0x20000598

10015074 <__fputwc>:
10015074:	b570      	push	{r4, r5, r6, lr}
10015076:	b082      	sub	sp, #8
10015078:	4606      	mov	r6, r0
1001507a:	460d      	mov	r5, r1
1001507c:	4614      	mov	r4, r2
1001507e:	f000 f98f 	bl	100153a0 <__locale_mb_cur_max>
10015082:	2801      	cmp	r0, #1
10015084:	d102      	bne.n	1001508c <__fputwc+0x18>
10015086:	1e6b      	subs	r3, r5, #1
10015088:	2bfe      	cmp	r3, #254	@ 0xfe
1001508a:	d926      	bls.n	100150da <__fputwc+0x66>
1001508c:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
10015090:	462a      	mov	r2, r5
10015092:	a901      	add	r1, sp, #4
10015094:	4630      	mov	r0, r6
10015096:	f000 fd1f 	bl	10015ad8 <_wcrtomb_r>
1001509a:	1c43      	adds	r3, r0, #1
1001509c:	d020      	beq.n	100150e0 <__fputwc+0x6c>
1001509e:	b178      	cbz	r0, 100150c0 <__fputwc+0x4c>
100150a0:	68a3      	ldr	r3, [r4, #8]
100150a2:	f89d 1004 	ldrb.w	r1, [sp, #4]
100150a6:	3b01      	subs	r3, #1
100150a8:	2b00      	cmp	r3, #0
100150aa:	60a3      	str	r3, [r4, #8]
100150ac:	da04      	bge.n	100150b8 <__fputwc+0x44>
100150ae:	69a2      	ldr	r2, [r4, #24]
100150b0:	4293      	cmp	r3, r2
100150b2:	db08      	blt.n	100150c6 <__fputwc+0x52>
100150b4:	290a      	cmp	r1, #10
100150b6:	d006      	beq.n	100150c6 <__fputwc+0x52>
100150b8:	6823      	ldr	r3, [r4, #0]
100150ba:	1c5a      	adds	r2, r3, #1
100150bc:	6022      	str	r2, [r4, #0]
100150be:	7019      	strb	r1, [r3, #0]
100150c0:	4628      	mov	r0, r5
100150c2:	b002      	add	sp, #8
100150c4:	bd70      	pop	{r4, r5, r6, pc}
100150c6:	4622      	mov	r2, r4
100150c8:	4630      	mov	r0, r6
100150ca:	f007 f871 	bl	1001c1b0 <__swbuf_r>
100150ce:	3001      	adds	r0, #1
100150d0:	d1f6      	bne.n	100150c0 <__fputwc+0x4c>
100150d2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100150d6:	b002      	add	sp, #8
100150d8:	bd70      	pop	{r4, r5, r6, pc}
100150da:	f88d 5004 	strb.w	r5, [sp, #4]
100150de:	e7df      	b.n	100150a0 <__fputwc+0x2c>
100150e0:	89a3      	ldrh	r3, [r4, #12]
100150e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100150e6:	81a3      	strh	r3, [r4, #12]
100150e8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100150ec:	e7f3      	b.n	100150d6 <__fputwc+0x62>
100150ee:	bf00      	nop

100150f0 <_fputwc_r>:
100150f0:	b530      	push	{r4, r5, lr}
100150f2:	4614      	mov	r4, r2
100150f4:	6e52      	ldr	r2, [r2, #100]	@ 0x64
100150f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100150fa:	4605      	mov	r5, r0
100150fc:	07d0      	lsls	r0, r2, #31
100150fe:	b083      	sub	sp, #12
10015100:	d401      	bmi.n	10015106 <_fputwc_r+0x16>
10015102:	059a      	lsls	r2, r3, #22
10015104:	d51c      	bpl.n	10015140 <_fputwc_r+0x50>
10015106:	0498      	lsls	r0, r3, #18
10015108:	d406      	bmi.n	10015118 <_fputwc_r+0x28>
1001510a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001510c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10015110:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10015114:	81a3      	strh	r3, [r4, #12]
10015116:	6662      	str	r2, [r4, #100]	@ 0x64
10015118:	4622      	mov	r2, r4
1001511a:	4628      	mov	r0, r5
1001511c:	f7ff ffaa 	bl	10015074 <__fputwc>
10015120:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015122:	07da      	lsls	r2, r3, #31
10015124:	4605      	mov	r5, r0
10015126:	d402      	bmi.n	1001512e <_fputwc_r+0x3e>
10015128:	89a3      	ldrh	r3, [r4, #12]
1001512a:	059b      	lsls	r3, r3, #22
1001512c:	d502      	bpl.n	10015134 <_fputwc_r+0x44>
1001512e:	4628      	mov	r0, r5
10015130:	b003      	add	sp, #12
10015132:	bd30      	pop	{r4, r5, pc}
10015134:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015136:	f000 fb71 	bl	1001581c <__retarget_lock_release_recursive>
1001513a:	4628      	mov	r0, r5
1001513c:	b003      	add	sp, #12
1001513e:	bd30      	pop	{r4, r5, pc}
10015140:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015142:	9101      	str	r1, [sp, #4]
10015144:	f000 fb68 	bl	10015818 <__retarget_lock_acquire_recursive>
10015148:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001514c:	9901      	ldr	r1, [sp, #4]
1001514e:	e7da      	b.n	10015106 <_fputwc_r+0x16>

10015150 <memmove>:
10015150:	4288      	cmp	r0, r1
10015152:	d90e      	bls.n	10015172 <memmove+0x22>
10015154:	188b      	adds	r3, r1, r2
10015156:	4283      	cmp	r3, r0
10015158:	d90b      	bls.n	10015172 <memmove+0x22>
1001515a:	eb00 0c02 	add.w	ip, r0, r2
1001515e:	2a00      	cmp	r2, #0
10015160:	d06e      	beq.n	10015240 <memmove+0xf0>
10015162:	4662      	mov	r2, ip
10015164:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
10015168:	f802 cd01 	strb.w	ip, [r2, #-1]!
1001516c:	4299      	cmp	r1, r3
1001516e:	d1f9      	bne.n	10015164 <memmove+0x14>
10015170:	4770      	bx	lr
10015172:	2a0f      	cmp	r2, #15
10015174:	d80f      	bhi.n	10015196 <memmove+0x46>
10015176:	4603      	mov	r3, r0
10015178:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
1001517c:	2a00      	cmp	r2, #0
1001517e:	d05f      	beq.n	10015240 <memmove+0xf0>
10015180:	f10c 0c01 	add.w	ip, ip, #1
10015184:	3b01      	subs	r3, #1
10015186:	448c      	add	ip, r1
10015188:	f811 2b01 	ldrb.w	r2, [r1], #1
1001518c:	f803 2f01 	strb.w	r2, [r3, #1]!
10015190:	4561      	cmp	r1, ip
10015192:	d1f9      	bne.n	10015188 <memmove+0x38>
10015194:	4770      	bx	lr
10015196:	ea40 0301 	orr.w	r3, r0, r1
1001519a:	079b      	lsls	r3, r3, #30
1001519c:	d151      	bne.n	10015242 <memmove+0xf2>
1001519e:	f1a2 0310 	sub.w	r3, r2, #16
100151a2:	b570      	push	{r4, r5, r6, lr}
100151a4:	f101 0c20 	add.w	ip, r1, #32
100151a8:	f023 050f 	bic.w	r5, r3, #15
100151ac:	f101 0e10 	add.w	lr, r1, #16
100151b0:	f100 0410 	add.w	r4, r0, #16
100151b4:	44ac      	add	ip, r5
100151b6:	091b      	lsrs	r3, r3, #4
100151b8:	f85e 5c10 	ldr.w	r5, [lr, #-16]
100151bc:	f844 5c10 	str.w	r5, [r4, #-16]
100151c0:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
100151c4:	f844 5c0c 	str.w	r5, [r4, #-12]
100151c8:	f85e 5c08 	ldr.w	r5, [lr, #-8]
100151cc:	f844 5c08 	str.w	r5, [r4, #-8]
100151d0:	f85e 5c04 	ldr.w	r5, [lr, #-4]
100151d4:	f844 5c04 	str.w	r5, [r4, #-4]
100151d8:	f10e 0e10 	add.w	lr, lr, #16
100151dc:	45e6      	cmp	lr, ip
100151de:	f104 0410 	add.w	r4, r4, #16
100151e2:	d1e9      	bne.n	100151b8 <memmove+0x68>
100151e4:	3301      	adds	r3, #1
100151e6:	f012 0f0c 	tst.w	r2, #12
100151ea:	eb01 1103 	add.w	r1, r1, r3, lsl #4
100151ee:	f002 040f 	and.w	r4, r2, #15
100151f2:	eb00 1303 	add.w	r3, r0, r3, lsl #4
100151f6:	d028      	beq.n	1001524a <memmove+0xfa>
100151f8:	3c04      	subs	r4, #4
100151fa:	f024 0603 	bic.w	r6, r4, #3
100151fe:	ea4f 0c94 	mov.w	ip, r4, lsr #2
10015202:	441e      	add	r6, r3
10015204:	1f1c      	subs	r4, r3, #4
10015206:	468e      	mov	lr, r1
10015208:	f85e 5b04 	ldr.w	r5, [lr], #4
1001520c:	f844 5f04 	str.w	r5, [r4, #4]!
10015210:	42b4      	cmp	r4, r6
10015212:	d1f9      	bne.n	10015208 <memmove+0xb8>
10015214:	f10c 0401 	add.w	r4, ip, #1
10015218:	f002 0203 	and.w	r2, r2, #3
1001521c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
10015220:	eb01 0184 	add.w	r1, r1, r4, lsl #2
10015224:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10015228:	b14a      	cbz	r2, 1001523e <memmove+0xee>
1001522a:	f10c 0c01 	add.w	ip, ip, #1
1001522e:	3b01      	subs	r3, #1
10015230:	448c      	add	ip, r1
10015232:	f811 2b01 	ldrb.w	r2, [r1], #1
10015236:	f803 2f01 	strb.w	r2, [r3, #1]!
1001523a:	4561      	cmp	r1, ip
1001523c:	d1f9      	bne.n	10015232 <memmove+0xe2>
1001523e:	bd70      	pop	{r4, r5, r6, pc}
10015240:	4770      	bx	lr
10015242:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10015246:	4603      	mov	r3, r0
10015248:	e79a      	b.n	10015180 <memmove+0x30>
1001524a:	4622      	mov	r2, r4
1001524c:	e7ea      	b.n	10015224 <memmove+0xd4>
1001524e:	bf00      	nop

10015250 <memset>:
10015250:	0783      	lsls	r3, r0, #30
10015252:	b530      	push	{r4, r5, lr}
10015254:	d047      	beq.n	100152e6 <memset+0x96>
10015256:	1e54      	subs	r4, r2, #1
10015258:	2a00      	cmp	r2, #0
1001525a:	d03e      	beq.n	100152da <memset+0x8a>
1001525c:	b2ca      	uxtb	r2, r1
1001525e:	4603      	mov	r3, r0
10015260:	e001      	b.n	10015266 <memset+0x16>
10015262:	3c01      	subs	r4, #1
10015264:	d339      	bcc.n	100152da <memset+0x8a>
10015266:	f803 2b01 	strb.w	r2, [r3], #1
1001526a:	079d      	lsls	r5, r3, #30
1001526c:	d1f9      	bne.n	10015262 <memset+0x12>
1001526e:	2c03      	cmp	r4, #3
10015270:	d92c      	bls.n	100152cc <memset+0x7c>
10015272:	b2cd      	uxtb	r5, r1
10015274:	eb05 2505 	add.w	r5, r5, r5, lsl #8
10015278:	2c0f      	cmp	r4, #15
1001527a:	eb05 4505 	add.w	r5, r5, r5, lsl #16
1001527e:	d935      	bls.n	100152ec <memset+0x9c>
10015280:	f1a4 0210 	sub.w	r2, r4, #16
10015284:	f022 0c0f 	bic.w	ip, r2, #15
10015288:	f103 0e10 	add.w	lr, r3, #16
1001528c:	44e6      	add	lr, ip
1001528e:	ea4f 1c12 	mov.w	ip, r2, lsr #4
10015292:	461a      	mov	r2, r3
10015294:	6015      	str	r5, [r2, #0]
10015296:	6055      	str	r5, [r2, #4]
10015298:	6095      	str	r5, [r2, #8]
1001529a:	60d5      	str	r5, [r2, #12]
1001529c:	3210      	adds	r2, #16
1001529e:	4572      	cmp	r2, lr
100152a0:	d1f8      	bne.n	10015294 <memset+0x44>
100152a2:	f10c 0201 	add.w	r2, ip, #1
100152a6:	f014 0f0c 	tst.w	r4, #12
100152aa:	eb03 1202 	add.w	r2, r3, r2, lsl #4
100152ae:	f004 0c0f 	and.w	ip, r4, #15
100152b2:	d013      	beq.n	100152dc <memset+0x8c>
100152b4:	f1ac 0304 	sub.w	r3, ip, #4
100152b8:	f023 0303 	bic.w	r3, r3, #3
100152bc:	3304      	adds	r3, #4
100152be:	4413      	add	r3, r2
100152c0:	f842 5b04 	str.w	r5, [r2], #4
100152c4:	429a      	cmp	r2, r3
100152c6:	d1fb      	bne.n	100152c0 <memset+0x70>
100152c8:	f00c 0403 	and.w	r4, ip, #3
100152cc:	b12c      	cbz	r4, 100152da <memset+0x8a>
100152ce:	b2c9      	uxtb	r1, r1
100152d0:	441c      	add	r4, r3
100152d2:	f803 1b01 	strb.w	r1, [r3], #1
100152d6:	429c      	cmp	r4, r3
100152d8:	d1fb      	bne.n	100152d2 <memset+0x82>
100152da:	bd30      	pop	{r4, r5, pc}
100152dc:	4664      	mov	r4, ip
100152de:	4613      	mov	r3, r2
100152e0:	2c00      	cmp	r4, #0
100152e2:	d1f4      	bne.n	100152ce <memset+0x7e>
100152e4:	e7f9      	b.n	100152da <memset+0x8a>
100152e6:	4603      	mov	r3, r0
100152e8:	4614      	mov	r4, r2
100152ea:	e7c0      	b.n	1001526e <memset+0x1e>
100152ec:	461a      	mov	r2, r3
100152ee:	46a4      	mov	ip, r4
100152f0:	e7e0      	b.n	100152b4 <memset+0x64>
100152f2:	bf00      	nop

100152f4 <strcspn>:
100152f4:	b510      	push	{r4, lr}
100152f6:	4686      	mov	lr, r0
100152f8:	7800      	ldrb	r0, [r0, #0]
100152fa:	b160      	cbz	r0, 10015316 <strcspn+0x22>
100152fc:	780c      	ldrb	r4, [r1, #0]
100152fe:	46f4      	mov	ip, lr
10015300:	b18c      	cbz	r4, 10015326 <strcspn+0x32>
10015302:	460a      	mov	r2, r1
10015304:	4623      	mov	r3, r4
10015306:	e002      	b.n	1001530e <strcspn+0x1a>
10015308:	f812 3f01 	ldrb.w	r3, [r2, #1]!
1001530c:	b123      	cbz	r3, 10015318 <strcspn+0x24>
1001530e:	4283      	cmp	r3, r0
10015310:	d1fa      	bne.n	10015308 <strcspn+0x14>
10015312:	ebac 000e 	sub.w	r0, ip, lr
10015316:	bd10      	pop	{r4, pc}
10015318:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
1001531c:	2800      	cmp	r0, #0
1001531e:	d1f0      	bne.n	10015302 <strcspn+0xe>
10015320:	ebac 000e 	sub.w	r0, ip, lr
10015324:	e7f7      	b.n	10015316 <strcspn+0x22>
10015326:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
1001532a:	2800      	cmp	r0, #0
1001532c:	d0f1      	beq.n	10015312 <strcspn+0x1e>
1001532e:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
10015332:	2800      	cmp	r0, #0
10015334:	d1f7      	bne.n	10015326 <strcspn+0x32>
10015336:	e7ec      	b.n	10015312 <strcspn+0x1e>

10015338 <strncpy>:
10015338:	ea40 0301 	orr.w	r3, r0, r1
1001533c:	079b      	lsls	r3, r3, #30
1001533e:	b510      	push	{r4, lr}
10015340:	d101      	bne.n	10015346 <strncpy+0xe>
10015342:	2a03      	cmp	r2, #3
10015344:	d817      	bhi.n	10015376 <strncpy+0x3e>
10015346:	4684      	mov	ip, r0
10015348:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
1001534c:	e007      	b.n	1001535e <strncpy+0x26>
1001534e:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
10015352:	f803 1b01 	strb.w	r1, [r3], #1
10015356:	1e54      	subs	r4, r2, #1
10015358:	b129      	cbz	r1, 10015366 <strncpy+0x2e>
1001535a:	469c      	mov	ip, r3
1001535c:	4622      	mov	r2, r4
1001535e:	4663      	mov	r3, ip
10015360:	2a00      	cmp	r2, #0
10015362:	d1f4      	bne.n	1001534e <strncpy+0x16>
10015364:	bd10      	pop	{r4, pc}
10015366:	4494      	add	ip, r2
10015368:	2c00      	cmp	r4, #0
1001536a:	d0fb      	beq.n	10015364 <strncpy+0x2c>
1001536c:	f803 1b01 	strb.w	r1, [r3], #1
10015370:	4563      	cmp	r3, ip
10015372:	d1fb      	bne.n	1001536c <strncpy+0x34>
10015374:	bd10      	pop	{r4, pc}
10015376:	468e      	mov	lr, r1
10015378:	4684      	mov	ip, r0
1001537a:	f8de 4000 	ldr.w	r4, [lr]
1001537e:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
10015382:	ea23 0304 	bic.w	r3, r3, r4
10015386:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
1001538a:	4671      	mov	r1, lr
1001538c:	f10e 0e04 	add.w	lr, lr, #4
10015390:	d1da      	bne.n	10015348 <strncpy+0x10>
10015392:	3a04      	subs	r2, #4
10015394:	2a03      	cmp	r2, #3
10015396:	f84c 4b04 	str.w	r4, [ip], #4
1001539a:	d8ee      	bhi.n	1001537a <strncpy+0x42>
1001539c:	4671      	mov	r1, lr
1001539e:	e7d3      	b.n	10015348 <strncpy+0x10>

100153a0 <__locale_mb_cur_max>:
100153a0:	4b01      	ldr	r3, [pc, #4]	@ (100153a8 <__locale_mb_cur_max+0x8>)
100153a2:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
100153a6:	4770      	bx	lr
100153a8:	2000042c 	.word	0x2000042c

100153ac <_localeconv_r>:
100153ac:	4800      	ldr	r0, [pc, #0]	@ (100153b0 <_localeconv_r+0x4>)
100153ae:	4770      	bx	lr
100153b0:	2000051c 	.word	0x2000051c

100153b4 <_close_r>:
100153b4:	b538      	push	{r3, r4, r5, lr}
100153b6:	4d07      	ldr	r5, [pc, #28]	@ (100153d4 <_close_r+0x20>)
100153b8:	2200      	movs	r2, #0
100153ba:	4604      	mov	r4, r0
100153bc:	4608      	mov	r0, r1
100153be:	602a      	str	r2, [r5, #0]
100153c0:	f7f9 fd42 	bl	1000ee48 <_close>
100153c4:	1c43      	adds	r3, r0, #1
100153c6:	d000      	beq.n	100153ca <_close_r+0x16>
100153c8:	bd38      	pop	{r3, r4, r5, pc}
100153ca:	682b      	ldr	r3, [r5, #0]
100153cc:	2b00      	cmp	r3, #0
100153ce:	d0fb      	beq.n	100153c8 <_close_r+0x14>
100153d0:	6023      	str	r3, [r4, #0]
100153d2:	bd38      	pop	{r3, r4, r5, pc}
100153d4:	200015c4 	.word	0x200015c4

100153d8 <_fstat_r>:
100153d8:	b570      	push	{r4, r5, r6, lr}
100153da:	460c      	mov	r4, r1
100153dc:	4d08      	ldr	r5, [pc, #32]	@ (10015400 <_fstat_r+0x28>)
100153de:	4603      	mov	r3, r0
100153e0:	2600      	movs	r6, #0
100153e2:	4620      	mov	r0, r4
100153e4:	4611      	mov	r1, r2
100153e6:	461c      	mov	r4, r3
100153e8:	602e      	str	r6, [r5, #0]
100153ea:	f7f9 fd39 	bl	1000ee60 <_fstat>
100153ee:	1c43      	adds	r3, r0, #1
100153f0:	d000      	beq.n	100153f4 <_fstat_r+0x1c>
100153f2:	bd70      	pop	{r4, r5, r6, pc}
100153f4:	682b      	ldr	r3, [r5, #0]
100153f6:	2b00      	cmp	r3, #0
100153f8:	d0fb      	beq.n	100153f2 <_fstat_r+0x1a>
100153fa:	6023      	str	r3, [r4, #0]
100153fc:	bd70      	pop	{r4, r5, r6, pc}
100153fe:	bf00      	nop
10015400:	200015c4 	.word	0x200015c4

10015404 <_lseek_r>:
10015404:	b538      	push	{r3, r4, r5, lr}
10015406:	460c      	mov	r4, r1
10015408:	4d08      	ldr	r5, [pc, #32]	@ (1001542c <_lseek_r+0x28>)
1001540a:	4684      	mov	ip, r0
1001540c:	4611      	mov	r1, r2
1001540e:	4620      	mov	r0, r4
10015410:	461a      	mov	r2, r3
10015412:	2300      	movs	r3, #0
10015414:	602b      	str	r3, [r5, #0]
10015416:	4664      	mov	r4, ip
10015418:	f7f9 fd1e 	bl	1000ee58 <_lseek>
1001541c:	1c43      	adds	r3, r0, #1
1001541e:	d000      	beq.n	10015422 <_lseek_r+0x1e>
10015420:	bd38      	pop	{r3, r4, r5, pc}
10015422:	682b      	ldr	r3, [r5, #0]
10015424:	2b00      	cmp	r3, #0
10015426:	d0fb      	beq.n	10015420 <_lseek_r+0x1c>
10015428:	6023      	str	r3, [r4, #0]
1001542a:	bd38      	pop	{r3, r4, r5, pc}
1001542c:	200015c4 	.word	0x200015c4

10015430 <_read_r>:
10015430:	b538      	push	{r3, r4, r5, lr}
10015432:	460c      	mov	r4, r1
10015434:	4d08      	ldr	r5, [pc, #32]	@ (10015458 <_read_r+0x28>)
10015436:	4684      	mov	ip, r0
10015438:	4611      	mov	r1, r2
1001543a:	4620      	mov	r0, r4
1001543c:	461a      	mov	r2, r3
1001543e:	2300      	movs	r3, #0
10015440:	602b      	str	r3, [r5, #0]
10015442:	4664      	mov	r4, ip
10015444:	f7f9 fd10 	bl	1000ee68 <_read>
10015448:	1c43      	adds	r3, r0, #1
1001544a:	d000      	beq.n	1001544e <_read_r+0x1e>
1001544c:	bd38      	pop	{r3, r4, r5, pc}
1001544e:	682b      	ldr	r3, [r5, #0]
10015450:	2b00      	cmp	r3, #0
10015452:	d0fb      	beq.n	1001544c <_read_r+0x1c>
10015454:	6023      	str	r3, [r4, #0]
10015456:	bd38      	pop	{r3, r4, r5, pc}
10015458:	200015c4 	.word	0x200015c4

1001545c <_sbrk_r>:
1001545c:	b538      	push	{r3, r4, r5, lr}
1001545e:	4d07      	ldr	r5, [pc, #28]	@ (1001547c <_sbrk_r+0x20>)
10015460:	2200      	movs	r2, #0
10015462:	4604      	mov	r4, r0
10015464:	4608      	mov	r0, r1
10015466:	602a      	str	r2, [r5, #0]
10015468:	f7f9 fe76 	bl	1000f158 <_sbrk>
1001546c:	1c43      	adds	r3, r0, #1
1001546e:	d000      	beq.n	10015472 <_sbrk_r+0x16>
10015470:	bd38      	pop	{r3, r4, r5, pc}
10015472:	682b      	ldr	r3, [r5, #0]
10015474:	2b00      	cmp	r3, #0
10015476:	d0fb      	beq.n	10015470 <_sbrk_r+0x14>
10015478:	6023      	str	r3, [r4, #0]
1001547a:	bd38      	pop	{r3, r4, r5, pc}
1001547c:	200015c4 	.word	0x200015c4

10015480 <_write_r>:
10015480:	b538      	push	{r3, r4, r5, lr}
10015482:	460c      	mov	r4, r1
10015484:	4d08      	ldr	r5, [pc, #32]	@ (100154a8 <_write_r+0x28>)
10015486:	4684      	mov	ip, r0
10015488:	4611      	mov	r1, r2
1001548a:	4620      	mov	r0, r4
1001548c:	461a      	mov	r2, r3
1001548e:	2300      	movs	r3, #0
10015490:	602b      	str	r3, [r5, #0]
10015492:	4664      	mov	r4, ip
10015494:	f7f9 fd10 	bl	1000eeb8 <_write>
10015498:	1c43      	adds	r3, r0, #1
1001549a:	d000      	beq.n	1001549e <_write_r+0x1e>
1001549c:	bd38      	pop	{r3, r4, r5, pc}
1001549e:	682b      	ldr	r3, [r5, #0]
100154a0:	2b00      	cmp	r3, #0
100154a2:	d0fb      	beq.n	1001549c <_write_r+0x1c>
100154a4:	6023      	str	r3, [r4, #0]
100154a6:	bd38      	pop	{r3, r4, r5, pc}
100154a8:	200015c4 	.word	0x200015c4

100154ac <__errno>:
100154ac:	4b01      	ldr	r3, [pc, #4]	@ (100154b4 <__errno+0x8>)
100154ae:	6818      	ldr	r0, [r3, #0]
100154b0:	4770      	bx	lr
100154b2:	bf00      	nop
100154b4:	20000598 	.word	0x20000598

100154b8 <sysconf>:
100154b8:	2808      	cmp	r0, #8
100154ba:	d102      	bne.n	100154c2 <sysconf+0xa>
100154bc:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
100154c0:	4770      	bx	lr
100154c2:	b508      	push	{r3, lr}
100154c4:	f7ff fff2 	bl	100154ac <__errno>
100154c8:	2316      	movs	r3, #22
100154ca:	6003      	str	r3, [r0, #0]
100154cc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100154d0:	bd08      	pop	{r3, pc}
100154d2:	bf00      	nop
	...

100154e0 <strcmp>:
100154e0:	7802      	ldrb	r2, [r0, #0]
100154e2:	780b      	ldrb	r3, [r1, #0]
100154e4:	2a01      	cmp	r2, #1
100154e6:	bf28      	it	cs
100154e8:	429a      	cmpcs	r2, r3
100154ea:	f040 80d8 	bne.w	1001569e <strcmp+0x1be>
100154ee:	e96d 4504 	strd	r4, r5, [sp, #-16]!
100154f2:	ea40 0401 	orr.w	r4, r0, r1
100154f6:	e9cd 6702 	strd	r6, r7, [sp, #8]
100154fa:	f06f 0c00 	mvn.w	ip, #0
100154fe:	ea4f 7244 	mov.w	r2, r4, lsl #29
10015502:	b31a      	cbz	r2, 1001554c <strcmp+0x6c>
10015504:	ea80 0401 	eor.w	r4, r0, r1
10015508:	f014 0f07 	tst.w	r4, #7
1001550c:	d16b      	bne.n	100155e6 <strcmp+0x106>
1001550e:	f000 0407 	and.w	r4, r0, #7
10015512:	f020 0007 	bic.w	r0, r0, #7
10015516:	f004 0503 	and.w	r5, r4, #3
1001551a:	f021 0107 	bic.w	r1, r1, #7
1001551e:	ea4f 05c5 	mov.w	r5, r5, lsl #3
10015522:	e8f0 2304 	ldrd	r2, r3, [r0], #16
10015526:	f014 0f04 	tst.w	r4, #4
1001552a:	e8f1 6704 	ldrd	r6, r7, [r1], #16
1001552e:	fa0c f405 	lsl.w	r4, ip, r5
10015532:	ea62 0204 	orn	r2, r2, r4
10015536:	ea66 0604 	orn	r6, r6, r4
1001553a:	d00b      	beq.n	10015554 <strcmp+0x74>
1001553c:	ea63 0304 	orn	r3, r3, r4
10015540:	4662      	mov	r2, ip
10015542:	ea67 0704 	orn	r7, r7, r4
10015546:	4666      	mov	r6, ip
10015548:	e004      	b.n	10015554 <strcmp+0x74>
1001554a:	bf00      	nop
1001554c:	e8f0 2304 	ldrd	r2, r3, [r0], #16
10015550:	e8f1 6704 	ldrd	r6, r7, [r1], #16
10015554:	fa82 f54c 	uadd8	r5, r2, ip
10015558:	ea82 0406 	eor.w	r4, r2, r6
1001555c:	faa4 f48c 	sel	r4, r4, ip
10015560:	bb6c      	cbnz	r4, 100155be <strcmp+0xde>
10015562:	fa83 f54c 	uadd8	r5, r3, ip
10015566:	ea83 0507 	eor.w	r5, r3, r7
1001556a:	faa5 f58c 	sel	r5, r5, ip
1001556e:	b995      	cbnz	r5, 10015596 <strcmp+0xb6>
10015570:	e950 2302 	ldrd	r2, r3, [r0, #-8]
10015574:	e951 6702 	ldrd	r6, r7, [r1, #-8]
10015578:	fa82 f54c 	uadd8	r5, r2, ip
1001557c:	ea82 0406 	eor.w	r4, r2, r6
10015580:	faa4 f48c 	sel	r4, r4, ip
10015584:	fa83 f54c 	uadd8	r5, r3, ip
10015588:	ea83 0507 	eor.w	r5, r3, r7
1001558c:	faa5 f58c 	sel	r5, r5, ip
10015590:	4325      	orrs	r5, r4
10015592:	d0db      	beq.n	1001554c <strcmp+0x6c>
10015594:	b99c      	cbnz	r4, 100155be <strcmp+0xde>
10015596:	ba2d      	rev	r5, r5
10015598:	fab5 f485 	clz	r4, r5
1001559c:	f024 0407 	bic.w	r4, r4, #7
100155a0:	fa27 f104 	lsr.w	r1, r7, r4
100155a4:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
100155a8:	fa23 f304 	lsr.w	r3, r3, r4
100155ac:	f003 00ff 	and.w	r0, r3, #255	@ 0xff
100155b0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
100155b4:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100155b8:	eba0 0001 	sub.w	r0, r0, r1
100155bc:	4770      	bx	lr
100155be:	ba24      	rev	r4, r4
100155c0:	fab4 f484 	clz	r4, r4
100155c4:	f024 0407 	bic.w	r4, r4, #7
100155c8:	fa26 f104 	lsr.w	r1, r6, r4
100155cc:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
100155d0:	fa22 f204 	lsr.w	r2, r2, r4
100155d4:	f002 00ff 	and.w	r0, r2, #255	@ 0xff
100155d8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
100155dc:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100155e0:	eba0 0001 	sub.w	r0, r0, r1
100155e4:	4770      	bx	lr
100155e6:	f014 0f03 	tst.w	r4, #3
100155ea:	d13c      	bne.n	10015666 <strcmp+0x186>
100155ec:	f010 0403 	ands.w	r4, r0, #3
100155f0:	d128      	bne.n	10015644 <strcmp+0x164>
100155f2:	f850 2b08 	ldr.w	r2, [r0], #8
100155f6:	f851 3b08 	ldr.w	r3, [r1], #8
100155fa:	fa82 f54c 	uadd8	r5, r2, ip
100155fe:	ea82 0503 	eor.w	r5, r2, r3
10015602:	faa5 f58c 	sel	r5, r5, ip
10015606:	b95d      	cbnz	r5, 10015620 <strcmp+0x140>
10015608:	f850 2c04 	ldr.w	r2, [r0, #-4]
1001560c:	f851 3c04 	ldr.w	r3, [r1, #-4]
10015610:	fa82 f54c 	uadd8	r5, r2, ip
10015614:	ea82 0503 	eor.w	r5, r2, r3
10015618:	faa5 f58c 	sel	r5, r5, ip
1001561c:	2d00      	cmp	r5, #0
1001561e:	d0e8      	beq.n	100155f2 <strcmp+0x112>
10015620:	ba2d      	rev	r5, r5
10015622:	fab5 f485 	clz	r4, r5
10015626:	f024 0407 	bic.w	r4, r4, #7
1001562a:	fa23 f104 	lsr.w	r1, r3, r4
1001562e:	fa22 f204 	lsr.w	r2, r2, r4
10015632:	f002 00ff 	and.w	r0, r2, #255	@ 0xff
10015636:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001563a:	e8fd 4504 	ldrd	r4, r5, [sp], #16
1001563e:	eba0 0001 	sub.w	r0, r0, r1
10015642:	4770      	bx	lr
10015644:	ea4f 04c4 	mov.w	r4, r4, lsl #3
10015648:	f020 0003 	bic.w	r0, r0, #3
1001564c:	f850 2b08 	ldr.w	r2, [r0], #8
10015650:	f021 0103 	bic.w	r1, r1, #3
10015654:	f851 3b08 	ldr.w	r3, [r1], #8
10015658:	fa0c f404 	lsl.w	r4, ip, r4
1001565c:	ea62 0204 	orn	r2, r2, r4
10015660:	ea63 0304 	orn	r3, r3, r4
10015664:	e7c9      	b.n	100155fa <strcmp+0x11a>
10015666:	f010 0403 	ands.w	r4, r0, #3
1001566a:	d01d      	beq.n	100156a8 <strcmp+0x1c8>
1001566c:	eba1 0104 	sub.w	r1, r1, r4
10015670:	f020 0003 	bic.w	r0, r0, #3
10015674:	07e4      	lsls	r4, r4, #31
10015676:	f850 2b04 	ldr.w	r2, [r0], #4
1001567a:	d006      	beq.n	1001568a <strcmp+0x1aa>
1001567c:	d212      	bcs.n	100156a4 <strcmp+0x1c4>
1001567e:	788b      	ldrb	r3, [r1, #2]
10015680:	fa5f f4a2 	uxtb.w	r4, r2, ror #16
10015684:	1ae4      	subs	r4, r4, r3
10015686:	d106      	bne.n	10015696 <strcmp+0x1b6>
10015688:	b12b      	cbz	r3, 10015696 <strcmp+0x1b6>
1001568a:	78cb      	ldrb	r3, [r1, #3]
1001568c:	fa5f f4b2 	uxtb.w	r4, r2, ror #24
10015690:	1ae4      	subs	r4, r4, r3
10015692:	d100      	bne.n	10015696 <strcmp+0x1b6>
10015694:	b933      	cbnz	r3, 100156a4 <strcmp+0x1c4>
10015696:	4620      	mov	r0, r4
10015698:	f85d 4b10 	ldr.w	r4, [sp], #16
1001569c:	4770      	bx	lr
1001569e:	eba2 0003 	sub.w	r0, r2, r3
100156a2:	4770      	bx	lr
100156a4:	f101 0104 	add.w	r1, r1, #4
100156a8:	f850 2b04 	ldr.w	r2, [r0], #4
100156ac:	07cc      	lsls	r4, r1, #31
100156ae:	f021 0103 	bic.w	r1, r1, #3
100156b2:	f851 3b04 	ldr.w	r3, [r1], #4
100156b6:	d848      	bhi.n	1001574a <strcmp+0x26a>
100156b8:	d224      	bcs.n	10015704 <strcmp+0x224>
100156ba:	f022 447f 	bic.w	r4, r2, #4278190080	@ 0xff000000
100156be:	fa82 f54c 	uadd8	r5, r2, ip
100156c2:	ea94 2513 	eors.w	r5, r4, r3, lsr #8
100156c6:	faa5 f58c 	sel	r5, r5, ip
100156ca:	d10a      	bne.n	100156e2 <strcmp+0x202>
100156cc:	b965      	cbnz	r5, 100156e8 <strcmp+0x208>
100156ce:	f851 3b04 	ldr.w	r3, [r1], #4
100156d2:	ea84 0402 	eor.w	r4, r4, r2
100156d6:	ebb4 6f03 	cmp.w	r4, r3, lsl #24
100156da:	d10e      	bne.n	100156fa <strcmp+0x21a>
100156dc:	f850 2b04 	ldr.w	r2, [r0], #4
100156e0:	e7eb      	b.n	100156ba <strcmp+0x1da>
100156e2:	ea4f 2313 	mov.w	r3, r3, lsr #8
100156e6:	e055      	b.n	10015794 <strcmp+0x2b4>
100156e8:	f035 457f 	bics.w	r5, r5, #4278190080	@ 0xff000000
100156ec:	d14d      	bne.n	1001578a <strcmp+0x2aa>
100156ee:	7808      	ldrb	r0, [r1, #0]
100156f0:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100156f4:	f1c0 0000 	rsb	r0, r0, #0
100156f8:	4770      	bx	lr
100156fa:	ea4f 6212 	mov.w	r2, r2, lsr #24
100156fe:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
10015702:	e047      	b.n	10015794 <strcmp+0x2b4>
10015704:	ea02 441c 	and.w	r4, r2, ip, lsr #16
10015708:	fa82 f54c 	uadd8	r5, r2, ip
1001570c:	ea94 4513 	eors.w	r5, r4, r3, lsr #16
10015710:	faa5 f58c 	sel	r5, r5, ip
10015714:	d10a      	bne.n	1001572c <strcmp+0x24c>
10015716:	b965      	cbnz	r5, 10015732 <strcmp+0x252>
10015718:	f851 3b04 	ldr.w	r3, [r1], #4
1001571c:	ea84 0402 	eor.w	r4, r4, r2
10015720:	ebb4 4f03 	cmp.w	r4, r3, lsl #16
10015724:	d10c      	bne.n	10015740 <strcmp+0x260>
10015726:	f850 2b04 	ldr.w	r2, [r0], #4
1001572a:	e7eb      	b.n	10015704 <strcmp+0x224>
1001572c:	ea4f 4313 	mov.w	r3, r3, lsr #16
10015730:	e030      	b.n	10015794 <strcmp+0x2b4>
10015732:	ea15 451c 	ands.w	r5, r5, ip, lsr #16
10015736:	d128      	bne.n	1001578a <strcmp+0x2aa>
10015738:	880b      	ldrh	r3, [r1, #0]
1001573a:	ea4f 4212 	mov.w	r2, r2, lsr #16
1001573e:	e029      	b.n	10015794 <strcmp+0x2b4>
10015740:	ea4f 4212 	mov.w	r2, r2, lsr #16
10015744:	ea03 431c 	and.w	r3, r3, ip, lsr #16
10015748:	e024      	b.n	10015794 <strcmp+0x2b4>
1001574a:	f002 04ff 	and.w	r4, r2, #255	@ 0xff
1001574e:	fa82 f54c 	uadd8	r5, r2, ip
10015752:	ea94 6513 	eors.w	r5, r4, r3, lsr #24
10015756:	faa5 f58c 	sel	r5, r5, ip
1001575a:	d10a      	bne.n	10015772 <strcmp+0x292>
1001575c:	b965      	cbnz	r5, 10015778 <strcmp+0x298>
1001575e:	f851 3b04 	ldr.w	r3, [r1], #4
10015762:	ea84 0402 	eor.w	r4, r4, r2
10015766:	ebb4 2f03 	cmp.w	r4, r3, lsl #8
1001576a:	d109      	bne.n	10015780 <strcmp+0x2a0>
1001576c:	f850 2b04 	ldr.w	r2, [r0], #4
10015770:	e7eb      	b.n	1001574a <strcmp+0x26a>
10015772:	ea4f 6313 	mov.w	r3, r3, lsr #24
10015776:	e00d      	b.n	10015794 <strcmp+0x2b4>
10015778:	f015 0fff 	tst.w	r5, #255	@ 0xff
1001577c:	d105      	bne.n	1001578a <strcmp+0x2aa>
1001577e:	680b      	ldr	r3, [r1, #0]
10015780:	ea4f 2212 	mov.w	r2, r2, lsr #8
10015784:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
10015788:	e004      	b.n	10015794 <strcmp+0x2b4>
1001578a:	f04f 0000 	mov.w	r0, #0
1001578e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10015792:	4770      	bx	lr
10015794:	ba12      	rev	r2, r2
10015796:	ba1b      	rev	r3, r3
10015798:	fa82 f44c 	uadd8	r4, r2, ip
1001579c:	ea82 0403 	eor.w	r4, r2, r3
100157a0:	faa4 f58c 	sel	r5, r4, ip
100157a4:	fab5 f485 	clz	r4, r5
100157a8:	fa02 f204 	lsl.w	r2, r2, r4
100157ac:	fa03 f304 	lsl.w	r3, r3, r4
100157b0:	ea4f 6012 	mov.w	r0, r2, lsr #24
100157b4:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100157b8:	eba0 6013 	sub.w	r0, r0, r3, lsr #24
100157bc:	4770      	bx	lr
100157be:	bf00      	nop

100157c0 <__libc_init_array>:
100157c0:	b570      	push	{r4, r5, r6, lr}
100157c2:	4b0f      	ldr	r3, [pc, #60]	@ (10015800 <__libc_init_array+0x40>)
100157c4:	4d0f      	ldr	r5, [pc, #60]	@ (10015804 <__libc_init_array+0x44>)
100157c6:	42ab      	cmp	r3, r5
100157c8:	eba3 0605 	sub.w	r6, r3, r5
100157cc:	d007      	beq.n	100157de <__libc_init_array+0x1e>
100157ce:	10b6      	asrs	r6, r6, #2
100157d0:	2400      	movs	r4, #0
100157d2:	f855 3b04 	ldr.w	r3, [r5], #4
100157d6:	3401      	adds	r4, #1
100157d8:	4798      	blx	r3
100157da:	42a6      	cmp	r6, r4
100157dc:	d8f9      	bhi.n	100157d2 <__libc_init_array+0x12>
100157de:	f010 f981 	bl	10025ae4 <_init>
100157e2:	4d09      	ldr	r5, [pc, #36]	@ (10015808 <__libc_init_array+0x48>)
100157e4:	4b09      	ldr	r3, [pc, #36]	@ (1001580c <__libc_init_array+0x4c>)
100157e6:	1b5e      	subs	r6, r3, r5
100157e8:	42ab      	cmp	r3, r5
100157ea:	ea4f 06a6 	mov.w	r6, r6, asr #2
100157ee:	d006      	beq.n	100157fe <__libc_init_array+0x3e>
100157f0:	2400      	movs	r4, #0
100157f2:	f855 3b04 	ldr.w	r3, [r5], #4
100157f6:	3401      	adds	r4, #1
100157f8:	4798      	blx	r3
100157fa:	42a6      	cmp	r6, r4
100157fc:	d8f9      	bhi.n	100157f2 <__libc_init_array+0x32>
100157fe:	bd70      	pop	{r4, r5, r6, pc}
10015800:	20000bc0 	.word	0x20000bc0
10015804:	20000bc0 	.word	0x20000bc0
10015808:	20000bc0 	.word	0x20000bc0
1001580c:	20000bc8 	.word	0x20000bc8

10015810 <__retarget_lock_init_recursive>:
10015810:	4770      	bx	lr
10015812:	bf00      	nop

10015814 <__retarget_lock_close_recursive>:
10015814:	4770      	bx	lr
10015816:	bf00      	nop

10015818 <__retarget_lock_acquire_recursive>:
10015818:	4770      	bx	lr
1001581a:	bf00      	nop

1001581c <__retarget_lock_release_recursive>:
1001581c:	4770      	bx	lr
1001581e:	bf00      	nop

10015820 <memchr>:
10015820:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10015824:	2a10      	cmp	r2, #16
10015826:	db2b      	blt.n	10015880 <memchr+0x60>
10015828:	f010 0f07 	tst.w	r0, #7
1001582c:	d008      	beq.n	10015840 <memchr+0x20>
1001582e:	f810 3b01 	ldrb.w	r3, [r0], #1
10015832:	3a01      	subs	r2, #1
10015834:	428b      	cmp	r3, r1
10015836:	d02d      	beq.n	10015894 <memchr+0x74>
10015838:	f010 0f07 	tst.w	r0, #7
1001583c:	b342      	cbz	r2, 10015890 <memchr+0x70>
1001583e:	d1f6      	bne.n	1001582e <memchr+0xe>
10015840:	b4f0      	push	{r4, r5, r6, r7}
10015842:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
10015846:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1001584a:	f022 0407 	bic.w	r4, r2, #7
1001584e:	f07f 0700 	mvns.w	r7, #0
10015852:	2300      	movs	r3, #0
10015854:	e8f0 5602 	ldrd	r5, r6, [r0], #8
10015858:	3c08      	subs	r4, #8
1001585a:	ea85 0501 	eor.w	r5, r5, r1
1001585e:	ea86 0601 	eor.w	r6, r6, r1
10015862:	fa85 f547 	uadd8	r5, r5, r7
10015866:	faa3 f587 	sel	r5, r3, r7
1001586a:	fa86 f647 	uadd8	r6, r6, r7
1001586e:	faa5 f687 	sel	r6, r5, r7
10015872:	b98e      	cbnz	r6, 10015898 <memchr+0x78>
10015874:	d1ee      	bne.n	10015854 <memchr+0x34>
10015876:	bcf0      	pop	{r4, r5, r6, r7}
10015878:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001587c:	f002 0207 	and.w	r2, r2, #7
10015880:	b132      	cbz	r2, 10015890 <memchr+0x70>
10015882:	f810 3b01 	ldrb.w	r3, [r0], #1
10015886:	3a01      	subs	r2, #1
10015888:	ea83 0301 	eor.w	r3, r3, r1
1001588c:	b113      	cbz	r3, 10015894 <memchr+0x74>
1001588e:	d1f8      	bne.n	10015882 <memchr+0x62>
10015890:	2000      	movs	r0, #0
10015892:	4770      	bx	lr
10015894:	3801      	subs	r0, #1
10015896:	4770      	bx	lr
10015898:	2d00      	cmp	r5, #0
1001589a:	bf06      	itte	eq
1001589c:	4635      	moveq	r5, r6
1001589e:	3803      	subeq	r0, #3
100158a0:	3807      	subne	r0, #7
100158a2:	f015 0f01 	tst.w	r5, #1
100158a6:	d107      	bne.n	100158b8 <memchr+0x98>
100158a8:	3001      	adds	r0, #1
100158aa:	f415 7f80 	tst.w	r5, #256	@ 0x100
100158ae:	bf02      	ittt	eq
100158b0:	3001      	addeq	r0, #1
100158b2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
100158b6:	3001      	addeq	r0, #1
100158b8:	bcf0      	pop	{r4, r5, r6, r7}
100158ba:	3801      	subs	r0, #1
100158bc:	4770      	bx	lr
100158be:	bf00      	nop

100158c0 <memcpy>:
100158c0:	4684      	mov	ip, r0
100158c2:	ea41 0300 	orr.w	r3, r1, r0
100158c6:	f013 0303 	ands.w	r3, r3, #3
100158ca:	d16d      	bne.n	100159a8 <memcpy+0xe8>
100158cc:	3a40      	subs	r2, #64	@ 0x40
100158ce:	d341      	bcc.n	10015954 <memcpy+0x94>
100158d0:	f851 3b04 	ldr.w	r3, [r1], #4
100158d4:	f840 3b04 	str.w	r3, [r0], #4
100158d8:	f851 3b04 	ldr.w	r3, [r1], #4
100158dc:	f840 3b04 	str.w	r3, [r0], #4
100158e0:	f851 3b04 	ldr.w	r3, [r1], #4
100158e4:	f840 3b04 	str.w	r3, [r0], #4
100158e8:	f851 3b04 	ldr.w	r3, [r1], #4
100158ec:	f840 3b04 	str.w	r3, [r0], #4
100158f0:	f851 3b04 	ldr.w	r3, [r1], #4
100158f4:	f840 3b04 	str.w	r3, [r0], #4
100158f8:	f851 3b04 	ldr.w	r3, [r1], #4
100158fc:	f840 3b04 	str.w	r3, [r0], #4
10015900:	f851 3b04 	ldr.w	r3, [r1], #4
10015904:	f840 3b04 	str.w	r3, [r0], #4
10015908:	f851 3b04 	ldr.w	r3, [r1], #4
1001590c:	f840 3b04 	str.w	r3, [r0], #4
10015910:	f851 3b04 	ldr.w	r3, [r1], #4
10015914:	f840 3b04 	str.w	r3, [r0], #4
10015918:	f851 3b04 	ldr.w	r3, [r1], #4
1001591c:	f840 3b04 	str.w	r3, [r0], #4
10015920:	f851 3b04 	ldr.w	r3, [r1], #4
10015924:	f840 3b04 	str.w	r3, [r0], #4
10015928:	f851 3b04 	ldr.w	r3, [r1], #4
1001592c:	f840 3b04 	str.w	r3, [r0], #4
10015930:	f851 3b04 	ldr.w	r3, [r1], #4
10015934:	f840 3b04 	str.w	r3, [r0], #4
10015938:	f851 3b04 	ldr.w	r3, [r1], #4
1001593c:	f840 3b04 	str.w	r3, [r0], #4
10015940:	f851 3b04 	ldr.w	r3, [r1], #4
10015944:	f840 3b04 	str.w	r3, [r0], #4
10015948:	f851 3b04 	ldr.w	r3, [r1], #4
1001594c:	f840 3b04 	str.w	r3, [r0], #4
10015950:	3a40      	subs	r2, #64	@ 0x40
10015952:	d2bd      	bcs.n	100158d0 <memcpy+0x10>
10015954:	3230      	adds	r2, #48	@ 0x30
10015956:	d311      	bcc.n	1001597c <memcpy+0xbc>
10015958:	f851 3b04 	ldr.w	r3, [r1], #4
1001595c:	f840 3b04 	str.w	r3, [r0], #4
10015960:	f851 3b04 	ldr.w	r3, [r1], #4
10015964:	f840 3b04 	str.w	r3, [r0], #4
10015968:	f851 3b04 	ldr.w	r3, [r1], #4
1001596c:	f840 3b04 	str.w	r3, [r0], #4
10015970:	f851 3b04 	ldr.w	r3, [r1], #4
10015974:	f840 3b04 	str.w	r3, [r0], #4
10015978:	3a10      	subs	r2, #16
1001597a:	d2ed      	bcs.n	10015958 <memcpy+0x98>
1001597c:	320c      	adds	r2, #12
1001597e:	d305      	bcc.n	1001598c <memcpy+0xcc>
10015980:	f851 3b04 	ldr.w	r3, [r1], #4
10015984:	f840 3b04 	str.w	r3, [r0], #4
10015988:	3a04      	subs	r2, #4
1001598a:	d2f9      	bcs.n	10015980 <memcpy+0xc0>
1001598c:	3204      	adds	r2, #4
1001598e:	d008      	beq.n	100159a2 <memcpy+0xe2>
10015990:	07d2      	lsls	r2, r2, #31
10015992:	bf1c      	itt	ne
10015994:	f811 3b01 	ldrbne.w	r3, [r1], #1
10015998:	f800 3b01 	strbne.w	r3, [r0], #1
1001599c:	d301      	bcc.n	100159a2 <memcpy+0xe2>
1001599e:	880b      	ldrh	r3, [r1, #0]
100159a0:	8003      	strh	r3, [r0, #0]
100159a2:	4660      	mov	r0, ip
100159a4:	4770      	bx	lr
100159a6:	bf00      	nop
100159a8:	2a08      	cmp	r2, #8
100159aa:	d313      	bcc.n	100159d4 <memcpy+0x114>
100159ac:	078b      	lsls	r3, r1, #30
100159ae:	d08d      	beq.n	100158cc <memcpy+0xc>
100159b0:	f010 0303 	ands.w	r3, r0, #3
100159b4:	d08a      	beq.n	100158cc <memcpy+0xc>
100159b6:	f1c3 0304 	rsb	r3, r3, #4
100159ba:	1ad2      	subs	r2, r2, r3
100159bc:	07db      	lsls	r3, r3, #31
100159be:	bf1c      	itt	ne
100159c0:	f811 3b01 	ldrbne.w	r3, [r1], #1
100159c4:	f800 3b01 	strbne.w	r3, [r0], #1
100159c8:	d380      	bcc.n	100158cc <memcpy+0xc>
100159ca:	f831 3b02 	ldrh.w	r3, [r1], #2
100159ce:	f820 3b02 	strh.w	r3, [r0], #2
100159d2:	e77b      	b.n	100158cc <memcpy+0xc>
100159d4:	3a04      	subs	r2, #4
100159d6:	d3d9      	bcc.n	1001598c <memcpy+0xcc>
100159d8:	3a01      	subs	r2, #1
100159da:	f811 3b01 	ldrb.w	r3, [r1], #1
100159de:	f800 3b01 	strb.w	r3, [r0], #1
100159e2:	d2f9      	bcs.n	100159d8 <memcpy+0x118>
100159e4:	780b      	ldrb	r3, [r1, #0]
100159e6:	7003      	strb	r3, [r0, #0]
100159e8:	784b      	ldrb	r3, [r1, #1]
100159ea:	7043      	strb	r3, [r0, #1]
100159ec:	788b      	ldrb	r3, [r1, #2]
100159ee:	7083      	strb	r3, [r0, #2]
100159f0:	4660      	mov	r0, ip
100159f2:	4770      	bx	lr
	...

10015a00 <strlen>:
10015a00:	b430      	push	{r4, r5}
10015a02:	f890 f000 	pld	[r0]
10015a06:	f020 0107 	bic.w	r1, r0, #7
10015a0a:	f06f 0c00 	mvn.w	ip, #0
10015a0e:	f010 0407 	ands.w	r4, r0, #7
10015a12:	f891 f020 	pld	[r1, #32]
10015a16:	f040 8048 	bne.w	10015aaa <strlen+0xaa>
10015a1a:	f04f 0400 	mov.w	r4, #0
10015a1e:	f06f 0007 	mvn.w	r0, #7
10015a22:	e9d1 2300 	ldrd	r2, r3, [r1]
10015a26:	f891 f040 	pld	[r1, #64]	@ 0x40
10015a2a:	f100 0008 	add.w	r0, r0, #8
10015a2e:	fa82 f24c 	uadd8	r2, r2, ip
10015a32:	faa4 f28c 	sel	r2, r4, ip
10015a36:	fa83 f34c 	uadd8	r3, r3, ip
10015a3a:	faa2 f38c 	sel	r3, r2, ip
10015a3e:	bb4b      	cbnz	r3, 10015a94 <strlen+0x94>
10015a40:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
10015a44:	fa82 f24c 	uadd8	r2, r2, ip
10015a48:	f100 0008 	add.w	r0, r0, #8
10015a4c:	faa4 f28c 	sel	r2, r4, ip
10015a50:	fa83 f34c 	uadd8	r3, r3, ip
10015a54:	faa2 f38c 	sel	r3, r2, ip
10015a58:	b9e3      	cbnz	r3, 10015a94 <strlen+0x94>
10015a5a:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
10015a5e:	fa82 f24c 	uadd8	r2, r2, ip
10015a62:	f100 0008 	add.w	r0, r0, #8
10015a66:	faa4 f28c 	sel	r2, r4, ip
10015a6a:	fa83 f34c 	uadd8	r3, r3, ip
10015a6e:	faa2 f38c 	sel	r3, r2, ip
10015a72:	b97b      	cbnz	r3, 10015a94 <strlen+0x94>
10015a74:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
10015a78:	f101 0120 	add.w	r1, r1, #32
10015a7c:	fa82 f24c 	uadd8	r2, r2, ip
10015a80:	f100 0008 	add.w	r0, r0, #8
10015a84:	faa4 f28c 	sel	r2, r4, ip
10015a88:	fa83 f34c 	uadd8	r3, r3, ip
10015a8c:	faa2 f38c 	sel	r3, r2, ip
10015a90:	2b00      	cmp	r3, #0
10015a92:	d0c6      	beq.n	10015a22 <strlen+0x22>
10015a94:	2a00      	cmp	r2, #0
10015a96:	bf04      	itt	eq
10015a98:	3004      	addeq	r0, #4
10015a9a:	461a      	moveq	r2, r3
10015a9c:	ba12      	rev	r2, r2
10015a9e:	fab2 f282 	clz	r2, r2
10015aa2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
10015aa6:	bc30      	pop	{r4, r5}
10015aa8:	4770      	bx	lr
10015aaa:	e9d1 2300 	ldrd	r2, r3, [r1]
10015aae:	f004 0503 	and.w	r5, r4, #3
10015ab2:	f1c4 0000 	rsb	r0, r4, #0
10015ab6:	ea4f 05c5 	mov.w	r5, r5, lsl #3
10015aba:	f014 0f04 	tst.w	r4, #4
10015abe:	f891 f040 	pld	[r1, #64]	@ 0x40
10015ac2:	fa0c f505 	lsl.w	r5, ip, r5
10015ac6:	ea62 0205 	orn	r2, r2, r5
10015aca:	bf1c      	itt	ne
10015acc:	ea63 0305 	ornne	r3, r3, r5
10015ad0:	4662      	movne	r2, ip
10015ad2:	f04f 0400 	mov.w	r4, #0
10015ad6:	e7aa      	b.n	10015a2e <strlen+0x2e>

10015ad8 <_wcrtomb_r>:
10015ad8:	b570      	push	{r4, r5, r6, lr}
10015ada:	4605      	mov	r5, r0
10015adc:	b084      	sub	sp, #16
10015ade:	b15b      	cbz	r3, 10015af8 <_wcrtomb_r+0x20>
10015ae0:	461c      	mov	r4, r3
10015ae2:	4b0f      	ldr	r3, [pc, #60]	@ (10015b20 <_wcrtomb_r+0x48>)
10015ae4:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10015ae8:	4623      	mov	r3, r4
10015aea:	b169      	cbz	r1, 10015b08 <_wcrtomb_r+0x30>
10015aec:	4628      	mov	r0, r5
10015aee:	47b0      	blx	r6
10015af0:	1c43      	adds	r3, r0, #1
10015af2:	d00f      	beq.n	10015b14 <_wcrtomb_r+0x3c>
10015af4:	b004      	add	sp, #16
10015af6:	bd70      	pop	{r4, r5, r6, pc}
10015af8:	4b09      	ldr	r3, [pc, #36]	@ (10015b20 <_wcrtomb_r+0x48>)
10015afa:	f500 7482 	add.w	r4, r0, #260	@ 0x104
10015afe:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10015b02:	4623      	mov	r3, r4
10015b04:	2900      	cmp	r1, #0
10015b06:	d1f1      	bne.n	10015aec <_wcrtomb_r+0x14>
10015b08:	460a      	mov	r2, r1
10015b0a:	4628      	mov	r0, r5
10015b0c:	a901      	add	r1, sp, #4
10015b0e:	47b0      	blx	r6
10015b10:	1c43      	adds	r3, r0, #1
10015b12:	d1ef      	bne.n	10015af4 <_wcrtomb_r+0x1c>
10015b14:	2200      	movs	r2, #0
10015b16:	238a      	movs	r3, #138	@ 0x8a
10015b18:	6022      	str	r2, [r4, #0]
10015b1a:	602b      	str	r3, [r5, #0]
10015b1c:	b004      	add	sp, #16
10015b1e:	bd70      	pop	{r4, r5, r6, pc}
10015b20:	2000042c 	.word	0x2000042c

10015b24 <_wcsrtombs_r>:
10015b24:	b500      	push	{lr}
10015b26:	b083      	sub	sp, #12
10015b28:	f8dd c010 	ldr.w	ip, [sp, #16]
10015b2c:	e9cd 3c00 	strd	r3, ip, [sp]
10015b30:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10015b34:	f006 fe60 	bl	1001c7f8 <_wcsnrtombs_r>
10015b38:	b003      	add	sp, #12
10015b3a:	f85d fb04 	ldr.w	pc, [sp], #4
10015b3e:	bf00      	nop

10015b40 <frexp>:
10015b40:	f8df c060 	ldr.w	ip, [pc, #96]	@ 10015ba4 <frexp+0x64>
10015b44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10015b46:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
10015b4a:	2700      	movs	r7, #0
10015b4c:	4563      	cmp	r3, ip
10015b4e:	4604      	mov	r4, r0
10015b50:	460d      	mov	r5, r1
10015b52:	4616      	mov	r6, r2
10015b54:	6017      	str	r7, [r2, #0]
10015b56:	d822      	bhi.n	10015b9e <frexp+0x5e>
10015b58:	4684      	mov	ip, r0
10015b5a:	ea53 0c0c 	orrs.w	ip, r3, ip
10015b5e:	d01e      	beq.n	10015b9e <frexp+0x5e>
10015b60:	f8df c044 	ldr.w	ip, [pc, #68]	@ 10015ba8 <frexp+0x68>
10015b64:	ea01 0c0c 	and.w	ip, r1, ip
10015b68:	460a      	mov	r2, r1
10015b6a:	f1bc 0f00 	cmp.w	ip, #0
10015b6e:	d109      	bne.n	10015b84 <frexp+0x44>
10015b70:	4b0e      	ldr	r3, [pc, #56]	@ (10015bac <frexp+0x6c>)
10015b72:	2200      	movs	r2, #0
10015b74:	f007 ffb4 	bl	1001dae0 <__aeabi_dmul>
10015b78:	f06f 0735 	mvn.w	r7, #53	@ 0x35
10015b7c:	4604      	mov	r4, r0
10015b7e:	460a      	mov	r2, r1
10015b80:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
10015b84:	f022 42ff 	bic.w	r2, r2, #2139095040	@ 0x7f800000
10015b88:	151b      	asrs	r3, r3, #20
10015b8a:	f422 02e0 	bic.w	r2, r2, #7340032	@ 0x700000
10015b8e:	f2a3 33fe 	subw	r3, r3, #1022	@ 0x3fe
10015b92:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
10015b96:	443b      	add	r3, r7
10015b98:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
10015b9c:	6033      	str	r3, [r6, #0]
10015b9e:	4620      	mov	r0, r4
10015ba0:	4629      	mov	r1, r5
10015ba2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10015ba4:	7fefffff 	.word	0x7fefffff
10015ba8:	7ff00000 	.word	0x7ff00000
10015bac:	43500000 	.word	0x43500000

10015bb0 <register_fini>:
10015bb0:	4b02      	ldr	r3, [pc, #8]	@ (10015bbc <register_fini+0xc>)
10015bb2:	b113      	cbz	r3, 10015bba <register_fini+0xa>
10015bb4:	4802      	ldr	r0, [pc, #8]	@ (10015bc0 <register_fini+0x10>)
10015bb6:	f000 b805 	b.w	10015bc4 <atexit>
10015bba:	4770      	bx	lr
10015bbc:	00000000 	.word	0x00000000
10015bc0:	1001c4f9 	.word	0x1001c4f9

10015bc4 <atexit>:
10015bc4:	2300      	movs	r3, #0
10015bc6:	4601      	mov	r1, r0
10015bc8:	461a      	mov	r2, r3
10015bca:	4618      	mov	r0, r3
10015bcc:	f006 be3e 	b.w	1001c84c <__register_exitproc>

10015bd0 <quorem>:
10015bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015bd4:	6903      	ldr	r3, [r0, #16]
10015bd6:	690c      	ldr	r4, [r1, #16]
10015bd8:	42a3      	cmp	r3, r4
10015bda:	b083      	sub	sp, #12
10015bdc:	f2c0 808a 	blt.w	10015cf4 <quorem+0x124>
10015be0:	3c01      	subs	r4, #1
10015be2:	f101 0514 	add.w	r5, r1, #20
10015be6:	f100 0814 	add.w	r8, r0, #20
10015bea:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
10015bee:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
10015bf2:	3301      	adds	r3, #1
10015bf4:	429a      	cmp	r2, r3
10015bf6:	468e      	mov	lr, r1
10015bf8:	4681      	mov	r9, r0
10015bfa:	ea4f 0184 	mov.w	r1, r4, lsl #2
10015bfe:	eb05 0784 	add.w	r7, r5, r4, lsl #2
10015c02:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
10015c06:	fbb2 f6f3 	udiv	r6, r2, r3
10015c0a:	d33a      	bcc.n	10015c82 <quorem+0xb2>
10015c0c:	e9cd 1500 	strd	r1, r5, [sp]
10015c10:	2200      	movs	r2, #0
10015c12:	46ac      	mov	ip, r5
10015c14:	4640      	mov	r0, r8
10015c16:	4613      	mov	r3, r2
10015c18:	f85c 1b04 	ldr.w	r1, [ip], #4
10015c1c:	6805      	ldr	r5, [r0, #0]
10015c1e:	fa1f fb81 	uxth.w	fp, r1
10015c22:	fb06 220b 	mla	r2, r6, fp, r2
10015c26:	0c09      	lsrs	r1, r1, #16
10015c28:	ea4f 4b12 	mov.w	fp, r2, lsr #16
10015c2c:	fb06 bb01 	mla	fp, r6, r1, fp
10015c30:	b292      	uxth	r2, r2
10015c32:	b2a9      	uxth	r1, r5
10015c34:	1a89      	subs	r1, r1, r2
10015c36:	4419      	add	r1, r3
10015c38:	fa1f f38b 	uxth.w	r3, fp
10015c3c:	ebc3 4321 	rsb	r3, r3, r1, asr #16
10015c40:	eb03 4315 	add.w	r3, r3, r5, lsr #16
10015c44:	b289      	uxth	r1, r1
10015c46:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
10015c4a:	4567      	cmp	r7, ip
10015c4c:	f840 1b04 	str.w	r1, [r0], #4
10015c50:	ea4f 421b 	mov.w	r2, fp, lsr #16
10015c54:	ea4f 4323 	mov.w	r3, r3, asr #16
10015c58:	d2de      	bcs.n	10015c18 <quorem+0x48>
10015c5a:	e9dd 1500 	ldrd	r1, r5, [sp]
10015c5e:	f858 3001 	ldr.w	r3, [r8, r1]
10015c62:	b973      	cbnz	r3, 10015c82 <quorem+0xb2>
10015c64:	f1aa 0a04 	sub.w	sl, sl, #4
10015c68:	45d0      	cmp	r8, sl
10015c6a:	d304      	bcc.n	10015c76 <quorem+0xa6>
10015c6c:	e007      	b.n	10015c7e <quorem+0xae>
10015c6e:	45d0      	cmp	r8, sl
10015c70:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
10015c74:	d203      	bcs.n	10015c7e <quorem+0xae>
10015c76:	f85a 3904 	ldr.w	r3, [sl], #-4
10015c7a:	2b00      	cmp	r3, #0
10015c7c:	d0f7      	beq.n	10015c6e <quorem+0x9e>
10015c7e:	f8c9 4010 	str.w	r4, [r9, #16]
10015c82:	4671      	mov	r1, lr
10015c84:	4648      	mov	r0, r9
10015c86:	f004 fe2b 	bl	1001a8e0 <__mcmp>
10015c8a:	2800      	cmp	r0, #0
10015c8c:	db2e      	blt.n	10015cec <quorem+0x11c>
10015c8e:	4641      	mov	r1, r8
10015c90:	2200      	movs	r2, #0
10015c92:	f855 0b04 	ldr.w	r0, [r5], #4
10015c96:	f8d1 c000 	ldr.w	ip, [r1]
10015c9a:	fa1f fe80 	uxth.w	lr, r0
10015c9e:	fa1f f38c 	uxth.w	r3, ip
10015ca2:	eba3 030e 	sub.w	r3, r3, lr
10015ca6:	4413      	add	r3, r2
10015ca8:	0c02      	lsrs	r2, r0, #16
10015caa:	ebc2 4223 	rsb	r2, r2, r3, asr #16
10015cae:	eb02 421c 	add.w	r2, r2, ip, lsr #16
10015cb2:	b29b      	uxth	r3, r3
10015cb4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
10015cb8:	42af      	cmp	r7, r5
10015cba:	f841 3b04 	str.w	r3, [r1], #4
10015cbe:	ea4f 4222 	mov.w	r2, r2, asr #16
10015cc2:	d2e6      	bcs.n	10015c92 <quorem+0xc2>
10015cc4:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
10015cc8:	eb08 0384 	add.w	r3, r8, r4, lsl #2
10015ccc:	b96a      	cbnz	r2, 10015cea <quorem+0x11a>
10015cce:	3b04      	subs	r3, #4
10015cd0:	4598      	cmp	r8, r3
10015cd2:	d304      	bcc.n	10015cde <quorem+0x10e>
10015cd4:	e007      	b.n	10015ce6 <quorem+0x116>
10015cd6:	4598      	cmp	r8, r3
10015cd8:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
10015cdc:	d203      	bcs.n	10015ce6 <quorem+0x116>
10015cde:	f853 2904 	ldr.w	r2, [r3], #-4
10015ce2:	2a00      	cmp	r2, #0
10015ce4:	d0f7      	beq.n	10015cd6 <quorem+0x106>
10015ce6:	f8c9 4010 	str.w	r4, [r9, #16]
10015cea:	3601      	adds	r6, #1
10015cec:	4630      	mov	r0, r6
10015cee:	b003      	add	sp, #12
10015cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015cf4:	2000      	movs	r0, #0
10015cf6:	b003      	add	sp, #12
10015cf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015cfc:	0000      	movs	r0, r0
	...

10015d00 <_dtoa_r>:
10015d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015d04:	6b81      	ldr	r1, [r0, #56]	@ 0x38
10015d06:	b09f      	sub	sp, #124	@ 0x7c
10015d08:	4616      	mov	r6, r2
10015d0a:	461f      	mov	r7, r3
10015d0c:	e9cd 6704 	strd	r6, r7, [sp, #16]
10015d10:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
10015d12:	9003      	str	r0, [sp, #12]
10015d14:	b149      	cbz	r1, 10015d2a <_dtoa_r+0x2a>
10015d16:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
10015d18:	604a      	str	r2, [r1, #4]
10015d1a:	2301      	movs	r3, #1
10015d1c:	4093      	lsls	r3, r2
10015d1e:	4604      	mov	r4, r0
10015d20:	608b      	str	r3, [r1, #8]
10015d22:	f004 fb23 	bl	1001a36c <_Bfree>
10015d26:	2300      	movs	r3, #0
10015d28:	63a3      	str	r3, [r4, #56]	@ 0x38
10015d2a:	f1b7 0900 	subs.w	r9, r7, #0
10015d2e:	bfb4      	ite	lt
10015d30:	2301      	movlt	r3, #1
10015d32:	2300      	movge	r3, #0
10015d34:	602b      	str	r3, [r5, #0]
10015d36:	4b76      	ldr	r3, [pc, #472]	@ (10015f10 <_dtoa_r+0x210>)
10015d38:	bfbc      	itt	lt
10015d3a:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
10015d3e:	f8cd 9014 	strlt.w	r9, [sp, #20]
10015d42:	ea33 0309 	bics.w	r3, r3, r9
10015d46:	f000 80aa 	beq.w	10015e9e <_dtoa_r+0x19e>
10015d4a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
10015d4e:	2200      	movs	r2, #0
10015d50:	4618      	mov	r0, r3
10015d52:	4621      	mov	r1, r4
10015d54:	2300      	movs	r3, #0
10015d56:	e9cd 0108 	strd	r0, r1, [sp, #32]
10015d5a:	f008 f929 	bl	1001dfb0 <__aeabi_dcmpeq>
10015d5e:	4680      	mov	r8, r0
10015d60:	b168      	cbz	r0, 10015d7e <_dtoa_r+0x7e>
10015d62:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10015d64:	2301      	movs	r3, #1
10015d66:	6013      	str	r3, [r2, #0]
10015d68:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10015d6a:	b113      	cbz	r3, 10015d72 <_dtoa_r+0x72>
10015d6c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
10015d6e:	4b69      	ldr	r3, [pc, #420]	@ (10015f14 <_dtoa_r+0x214>)
10015d70:	6013      	str	r3, [r2, #0]
10015d72:	4b69      	ldr	r3, [pc, #420]	@ (10015f18 <_dtoa_r+0x218>)
10015d74:	930a      	str	r3, [sp, #40]	@ 0x28
10015d76:	980a      	ldr	r0, [sp, #40]	@ 0x28
10015d78:	b01f      	add	sp, #124	@ 0x7c
10015d7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015d7e:	ab1c      	add	r3, sp, #112	@ 0x70
10015d80:	9301      	str	r3, [sp, #4]
10015d82:	ab1d      	add	r3, sp, #116	@ 0x74
10015d84:	9300      	str	r3, [sp, #0]
10015d86:	9803      	ldr	r0, [sp, #12]
10015d88:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10015d8c:	f004 ff00 	bl	1001ab90 <__d2b>
10015d90:	ea5f 5519 	movs.w	r5, r9, lsr #20
10015d94:	4682      	mov	sl, r0
10015d96:	f040 8098 	bne.w	10015eca <_dtoa_r+0x1ca>
10015d9a:	e9dd 851c 	ldrd	r8, r5, [sp, #112]	@ 0x70
10015d9e:	4445      	add	r5, r8
10015da0:	f205 4332 	addw	r3, r5, #1074	@ 0x432
10015da4:	2b20      	cmp	r3, #32
10015da6:	f340 8383 	ble.w	100164b0 <_dtoa_r+0x7b0>
10015daa:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
10015dae:	fa09 f903 	lsl.w	r9, r9, r3
10015db2:	f205 4312 	addw	r3, r5, #1042	@ 0x412
10015db6:	fa26 f303 	lsr.w	r3, r6, r3
10015dba:	ea49 0003 	orr.w	r0, r9, r3
10015dbe:	f007 fe15 	bl	1001d9ec <__aeabi_ui2d>
10015dc2:	2301      	movs	r3, #1
10015dc4:	3d01      	subs	r5, #1
10015dc6:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
10015dca:	9311      	str	r3, [sp, #68]	@ 0x44
10015dcc:	4b53      	ldr	r3, [pc, #332]	@ (10015f1c <_dtoa_r+0x21c>)
10015dce:	2200      	movs	r2, #0
10015dd0:	f007 fcce 	bl	1001d770 <__aeabi_dsub>
10015dd4:	a348      	add	r3, pc, #288	@ (adr r3, 10015ef8 <_dtoa_r+0x1f8>)
10015dd6:	e9d3 2300 	ldrd	r2, r3, [r3]
10015dda:	f007 fe81 	bl	1001dae0 <__aeabi_dmul>
10015dde:	a348      	add	r3, pc, #288	@ (adr r3, 10015f00 <_dtoa_r+0x200>)
10015de0:	e9d3 2300 	ldrd	r2, r3, [r3]
10015de4:	f007 fcc6 	bl	1001d774 <__adddf3>
10015de8:	4606      	mov	r6, r0
10015dea:	4628      	mov	r0, r5
10015dec:	460f      	mov	r7, r1
10015dee:	f007 fe0d 	bl	1001da0c <__aeabi_i2d>
10015df2:	a345      	add	r3, pc, #276	@ (adr r3, 10015f08 <_dtoa_r+0x208>)
10015df4:	e9d3 2300 	ldrd	r2, r3, [r3]
10015df8:	f007 fe72 	bl	1001dae0 <__aeabi_dmul>
10015dfc:	4602      	mov	r2, r0
10015dfe:	460b      	mov	r3, r1
10015e00:	4630      	mov	r0, r6
10015e02:	4639      	mov	r1, r7
10015e04:	f007 fcb6 	bl	1001d774 <__adddf3>
10015e08:	4606      	mov	r6, r0
10015e0a:	460f      	mov	r7, r1
10015e0c:	f008 f918 	bl	1001e040 <__aeabi_d2iz>
10015e10:	2200      	movs	r2, #0
10015e12:	4683      	mov	fp, r0
10015e14:	2300      	movs	r3, #0
10015e16:	4630      	mov	r0, r6
10015e18:	4639      	mov	r1, r7
10015e1a:	f008 f8d3 	bl	1001dfc4 <__aeabi_dcmplt>
10015e1e:	2800      	cmp	r0, #0
10015e20:	f040 831a 	bne.w	10016458 <_dtoa_r+0x758>
10015e24:	eba8 0805 	sub.w	r8, r8, r5
10015e28:	f1bb 0f16 	cmp.w	fp, #22
10015e2c:	f108 34ff 	add.w	r4, r8, #4294967295	@ 0xffffffff
10015e30:	f200 818b 	bhi.w	1001614a <_dtoa_r+0x44a>
10015e34:	4d3a      	ldr	r5, [pc, #232]	@ (10015f20 <_dtoa_r+0x220>)
10015e36:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
10015e3a:	e9d5 2300 	ldrd	r2, r3, [r5]
10015e3e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10015e42:	f008 f8bf 	bl	1001dfc4 <__aeabi_dcmplt>
10015e46:	2800      	cmp	r0, #0
10015e48:	d070      	beq.n	10015f2c <_dtoa_r+0x22c>
10015e4a:	2300      	movs	r3, #0
10015e4c:	2c00      	cmp	r4, #0
10015e4e:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10015e52:	9310      	str	r3, [sp, #64]	@ 0x40
10015e54:	f2c0 817e 	blt.w	10016154 <_dtoa_r+0x454>
10015e58:	2300      	movs	r3, #0
10015e5a:	930b      	str	r3, [sp, #44]	@ 0x2c
10015e5c:	f1bb 0f00 	cmp.w	fp, #0
10015e60:	da6a      	bge.n	10015f38 <_dtoa_r+0x238>
10015e62:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10015e64:	eba3 030b 	sub.w	r3, r3, fp
10015e68:	930b      	str	r3, [sp, #44]	@ 0x2c
10015e6a:	f1cb 0300 	rsb	r3, fp, #0
10015e6e:	e9cd b30e 	strd	fp, r3, [sp, #56]	@ 0x38
10015e72:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10015e74:	2b09      	cmp	r3, #9
10015e76:	f04f 0b00 	mov.w	fp, #0
10015e7a:	d865      	bhi.n	10015f48 <_dtoa_r+0x248>
10015e7c:	2b05      	cmp	r3, #5
10015e7e:	f340 831c 	ble.w	100164ba <_dtoa_r+0x7ba>
10015e82:	3b04      	subs	r3, #4
10015e84:	9328      	str	r3, [sp, #160]	@ 0xa0
10015e86:	2500      	movs	r5, #0
10015e88:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10015e8a:	3b02      	subs	r3, #2
10015e8c:	2b03      	cmp	r3, #3
10015e8e:	f200 8623 	bhi.w	10016ad8 <_dtoa_r+0xdd8>
10015e92:	e8df f013 	tbh	[pc, r3, lsl #1]
10015e96:	0460      	.short	0x0460
10015e98:	0454045d 	.word	0x0454045d
10015e9c:	0438      	.short	0x0438
10015e9e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10015ea0:	f3c9 0913 	ubfx	r9, r9, #0, #20
10015ea4:	f242 730f 	movw	r3, #9999	@ 0x270f
10015ea8:	ea59 0906 	orrs.w	r9, r9, r6
10015eac:	6013      	str	r3, [r2, #0]
10015eae:	d11c      	bne.n	10015eea <_dtoa_r+0x1ea>
10015eb0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10015eb2:	2b00      	cmp	r3, #0
10015eb4:	f000 862b 	beq.w	10016b0e <_dtoa_r+0xe0e>
10015eb8:	4b1a      	ldr	r3, [pc, #104]	@ (10015f24 <_dtoa_r+0x224>)
10015eba:	930a      	str	r3, [sp, #40]	@ 0x28
10015ebc:	3308      	adds	r3, #8
10015ebe:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
10015ec0:	980a      	ldr	r0, [sp, #40]	@ 0x28
10015ec2:	6013      	str	r3, [r2, #0]
10015ec4:	b01f      	add	sp, #124	@ 0x7c
10015ec6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015eca:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
10015ece:	f3c2 0313 	ubfx	r3, r2, #0, #20
10015ed2:	4608      	mov	r0, r1
10015ed4:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
10015ed8:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
10015edc:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
10015ee0:	f8dd 8070 	ldr.w	r8, [sp, #112]	@ 0x70
10015ee4:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
10015ee8:	e770      	b.n	10015dcc <_dtoa_r+0xcc>
10015eea:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10015eec:	2b00      	cmp	r3, #0
10015eee:	f040 83e7 	bne.w	100166c0 <_dtoa_r+0x9c0>
10015ef2:	4b0d      	ldr	r3, [pc, #52]	@ (10015f28 <_dtoa_r+0x228>)
10015ef4:	930a      	str	r3, [sp, #40]	@ 0x28
10015ef6:	e73e      	b.n	10015d76 <_dtoa_r+0x76>
10015ef8:	636f4361 	.word	0x636f4361
10015efc:	3fd287a7 	.word	0x3fd287a7
10015f00:	8b60c8b3 	.word	0x8b60c8b3
10015f04:	3fc68a28 	.word	0x3fc68a28
10015f08:	509f79fb 	.word	0x509f79fb
10015f0c:	3fd34413 	.word	0x3fd34413
10015f10:	7ff00000 	.word	0x7ff00000
10015f14:	1001ea59 	.word	0x1001ea59
10015f18:	1001ea58 	.word	0x1001ea58
10015f1c:	3ff80000 	.word	0x3ff80000
10015f20:	1001ed50 	.word	0x1001ed50
10015f24:	1001ebe4 	.word	0x1001ebe4
10015f28:	1001ebf0 	.word	0x1001ebf0
10015f2c:	f1b8 0f00 	cmp.w	r8, #0
10015f30:	f340 8460 	ble.w	100167f4 <_dtoa_r+0xaf4>
10015f34:	9010      	str	r0, [sp, #64]	@ 0x40
10015f36:	900b      	str	r0, [sp, #44]	@ 0x2c
10015f38:	2300      	movs	r3, #0
10015f3a:	930f      	str	r3, [sp, #60]	@ 0x3c
10015f3c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10015f3e:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10015f42:	2b09      	cmp	r3, #9
10015f44:	445c      	add	r4, fp
10015f46:	d999      	bls.n	10015e7c <_dtoa_r+0x17c>
10015f48:	2300      	movs	r3, #0
10015f4a:	e9cd 3328 	strd	r3, r3, [sp, #160]	@ 0xa0
10015f4e:	2501      	movs	r5, #1
10015f50:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10015f54:	950c      	str	r5, [sp, #48]	@ 0x30
10015f56:	9306      	str	r3, [sp, #24]
10015f58:	9b03      	ldr	r3, [sp, #12]
10015f5a:	2100      	movs	r1, #0
10015f5c:	63d9      	str	r1, [r3, #60]	@ 0x3c
10015f5e:	9b06      	ldr	r3, [sp, #24]
10015f60:	9318      	str	r3, [sp, #96]	@ 0x60
10015f62:	9803      	ldr	r0, [sp, #12]
10015f64:	f004 f9dc 	bl	1001a320 <_Balloc>
10015f68:	900a      	str	r0, [sp, #40]	@ 0x28
10015f6a:	2800      	cmp	r0, #0
10015f6c:	f000 85bd 	beq.w	10016aea <_dtoa_r+0xdea>
10015f70:	9b03      	ldr	r3, [sp, #12]
10015f72:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10015f74:	639a      	str	r2, [r3, #56]	@ 0x38
10015f76:	9b06      	ldr	r3, [sp, #24]
10015f78:	2b0e      	cmp	r3, #14
10015f7a:	f200 8115 	bhi.w	100161a8 <_dtoa_r+0x4a8>
10015f7e:	2d00      	cmp	r5, #0
10015f80:	f000 8112 	beq.w	100161a8 <_dtoa_r+0x4a8>
10015f84:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10015f86:	2a00      	cmp	r2, #0
10015f88:	f340 843b 	ble.w	10016802 <_dtoa_r+0xb02>
10015f8c:	4db2      	ldr	r5, [pc, #712]	@ (10016258 <_dtoa_r+0x558>)
10015f8e:	f002 030f 	and.w	r3, r2, #15
10015f92:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10015f96:	e9d3 8900 	ldrd	r8, r9, [r3]
10015f9a:	4613      	mov	r3, r2
10015f9c:	1115      	asrs	r5, r2, #4
10015f9e:	05da      	lsls	r2, r3, #23
10015fa0:	f140 83fa 	bpl.w	10016798 <_dtoa_r+0xa98>
10015fa4:	4bad      	ldr	r3, [pc, #692]	@ (1001625c <_dtoa_r+0x55c>)
10015fa6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10015faa:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
10015fae:	f007 fec1 	bl	1001dd34 <__aeabi_ddiv>
10015fb2:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
10015fb6:	f005 050f 	and.w	r5, r5, #15
10015fba:	2703      	movs	r7, #3
10015fbc:	b17d      	cbz	r5, 10015fde <_dtoa_r+0x2de>
10015fbe:	4ea7      	ldr	r6, [pc, #668]	@ (1001625c <_dtoa_r+0x55c>)
10015fc0:	07eb      	lsls	r3, r5, #31
10015fc2:	d508      	bpl.n	10015fd6 <_dtoa_r+0x2d6>
10015fc4:	4640      	mov	r0, r8
10015fc6:	4649      	mov	r1, r9
10015fc8:	e9d6 2300 	ldrd	r2, r3, [r6]
10015fcc:	f007 fd88 	bl	1001dae0 <__aeabi_dmul>
10015fd0:	3701      	adds	r7, #1
10015fd2:	4680      	mov	r8, r0
10015fd4:	4689      	mov	r9, r1
10015fd6:	106d      	asrs	r5, r5, #1
10015fd8:	f106 0608 	add.w	r6, r6, #8
10015fdc:	d1f0      	bne.n	10015fc0 <_dtoa_r+0x2c0>
10015fde:	4642      	mov	r2, r8
10015fe0:	464b      	mov	r3, r9
10015fe2:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
10015fe6:	f007 fea5 	bl	1001dd34 <__aeabi_ddiv>
10015fea:	4680      	mov	r8, r0
10015fec:	4689      	mov	r9, r1
10015fee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10015ff0:	b143      	cbz	r3, 10016004 <_dtoa_r+0x304>
10015ff2:	4b9b      	ldr	r3, [pc, #620]	@ (10016260 <_dtoa_r+0x560>)
10015ff4:	2200      	movs	r2, #0
10015ff6:	4640      	mov	r0, r8
10015ff8:	4649      	mov	r1, r9
10015ffa:	f007 ffe3 	bl	1001dfc4 <__aeabi_dcmplt>
10015ffe:	2800      	cmp	r0, #0
10016000:	f040 84f1 	bne.w	100169e6 <_dtoa_r+0xce6>
10016004:	4638      	mov	r0, r7
10016006:	f007 fd01 	bl	1001da0c <__aeabi_i2d>
1001600a:	4642      	mov	r2, r8
1001600c:	464b      	mov	r3, r9
1001600e:	f007 fd67 	bl	1001dae0 <__aeabi_dmul>
10016012:	4b94      	ldr	r3, [pc, #592]	@ (10016264 <_dtoa_r+0x564>)
10016014:	2200      	movs	r2, #0
10016016:	f007 fbad 	bl	1001d774 <__adddf3>
1001601a:	9b06      	ldr	r3, [sp, #24]
1001601c:	4606      	mov	r6, r0
1001601e:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10016022:	2b00      	cmp	r3, #0
10016024:	f000 80a9 	beq.w	1001617a <_dtoa_r+0x47a>
10016028:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001602a:	9319      	str	r3, [sp, #100]	@ 0x64
1001602c:	9b06      	ldr	r3, [sp, #24]
1001602e:	9312      	str	r3, [sp, #72]	@ 0x48
10016030:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016032:	4d89      	ldr	r5, [pc, #548]	@ (10016258 <_dtoa_r+0x558>)
10016034:	4649      	mov	r1, r9
10016036:	4640      	mov	r0, r8
10016038:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
1001603c:	1c5e      	adds	r6, r3, #1
1001603e:	f007 ffff 	bl	1001e040 <__aeabi_d2iz>
10016042:	9912      	ldr	r1, [sp, #72]	@ 0x48
10016044:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
10016048:	e953 1202 	ldrd	r1, r2, [r3, #-8]
1001604c:	4607      	mov	r7, r0
1001604e:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
10016052:	f007 fcdb 	bl	1001da0c <__aeabi_i2d>
10016056:	4602      	mov	r2, r0
10016058:	460b      	mov	r3, r1
1001605a:	4640      	mov	r0, r8
1001605c:	4649      	mov	r1, r9
1001605e:	f007 fb87 	bl	1001d770 <__aeabi_dsub>
10016062:	4689      	mov	r9, r1
10016064:	990c      	ldr	r1, [sp, #48]	@ 0x30
10016066:	3730      	adds	r7, #48	@ 0x30
10016068:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	@ 0x58
1001606c:	4680      	mov	r8, r0
1001606e:	b2ff      	uxtb	r7, r7
10016070:	2900      	cmp	r1, #0
10016072:	f000 8453 	beq.w	1001691c <_dtoa_r+0xc1c>
10016076:	497c      	ldr	r1, [pc, #496]	@ (10016268 <_dtoa_r+0x568>)
10016078:	2000      	movs	r0, #0
1001607a:	f007 fe5b 	bl	1001dd34 <__aeabi_ddiv>
1001607e:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
10016082:	f007 fb75 	bl	1001d770 <__aeabi_dsub>
10016086:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
10016088:	4602      	mov	r2, r0
1001608a:	460b      	mov	r3, r1
1001608c:	e9cd 2314 	strd	r2, r3, [sp, #80]	@ 0x50
10016090:	702f      	strb	r7, [r5, #0]
10016092:	4642      	mov	r2, r8
10016094:	464b      	mov	r3, r9
10016096:	f007 ffb3 	bl	1001e000 <__aeabi_dcmpgt>
1001609a:	2800      	cmp	r0, #0
1001609c:	f040 8497 	bne.w	100169ce <_dtoa_r+0xcce>
100160a0:	e9cd b41a 	strd	fp, r4, [sp, #104]	@ 0x68
100160a4:	f8cd a058 	str.w	sl, [sp, #88]	@ 0x58
100160a8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
100160aa:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	@ 0x50
100160ae:	2700      	movs	r7, #0
100160b0:	e02a      	b.n	10016108 <_dtoa_r+0x408>
100160b2:	3701      	adds	r7, #1
100160b4:	42af      	cmp	r7, r5
100160b6:	f280 84de 	bge.w	10016a76 <_dtoa_r+0xd76>
100160ba:	4b6c      	ldr	r3, [pc, #432]	@ (1001626c <_dtoa_r+0x56c>)
100160bc:	4650      	mov	r0, sl
100160be:	4659      	mov	r1, fp
100160c0:	2200      	movs	r2, #0
100160c2:	f007 fd0d 	bl	1001dae0 <__aeabi_dmul>
100160c6:	4b69      	ldr	r3, [pc, #420]	@ (1001626c <_dtoa_r+0x56c>)
100160c8:	2200      	movs	r2, #0
100160ca:	4682      	mov	sl, r0
100160cc:	468b      	mov	fp, r1
100160ce:	4640      	mov	r0, r8
100160d0:	4649      	mov	r1, r9
100160d2:	f007 fd05 	bl	1001dae0 <__aeabi_dmul>
100160d6:	4689      	mov	r9, r1
100160d8:	4680      	mov	r8, r0
100160da:	f007 ffb1 	bl	1001e040 <__aeabi_d2iz>
100160de:	4604      	mov	r4, r0
100160e0:	f007 fc94 	bl	1001da0c <__aeabi_i2d>
100160e4:	4602      	mov	r2, r0
100160e6:	460b      	mov	r3, r1
100160e8:	4640      	mov	r0, r8
100160ea:	4649      	mov	r1, r9
100160ec:	f007 fb40 	bl	1001d770 <__aeabi_dsub>
100160f0:	3430      	adds	r4, #48	@ 0x30
100160f2:	f806 4b01 	strb.w	r4, [r6], #1
100160f6:	4652      	mov	r2, sl
100160f8:	465b      	mov	r3, fp
100160fa:	4680      	mov	r8, r0
100160fc:	4689      	mov	r9, r1
100160fe:	f007 ff61 	bl	1001dfc4 <__aeabi_dcmplt>
10016102:	2800      	cmp	r0, #0
10016104:	f040 84b4 	bne.w	10016a70 <_dtoa_r+0xd70>
10016108:	4642      	mov	r2, r8
1001610a:	464b      	mov	r3, r9
1001610c:	4954      	ldr	r1, [pc, #336]	@ (10016260 <_dtoa_r+0x560>)
1001610e:	2000      	movs	r0, #0
10016110:	f007 fb2e 	bl	1001d770 <__aeabi_dsub>
10016114:	4652      	mov	r2, sl
10016116:	465b      	mov	r3, fp
10016118:	f007 ff54 	bl	1001dfc4 <__aeabi_dcmplt>
1001611c:	2800      	cmp	r0, #0
1001611e:	d0c8      	beq.n	100160b2 <_dtoa_r+0x3b2>
10016120:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10016122:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
10016126:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016128:	4637      	mov	r7, r6
1001612a:	f103 0801 	add.w	r8, r3, #1
1001612e:	e002      	b.n	10016136 <_dtoa_r+0x436>
10016130:	4297      	cmp	r7, r2
10016132:	f000 847c 	beq.w	10016a2e <_dtoa_r+0xd2e>
10016136:	463e      	mov	r6, r7
10016138:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
1001613c:	2b39      	cmp	r3, #57	@ 0x39
1001613e:	d0f7      	beq.n	10016130 <_dtoa_r+0x430>
10016140:	3301      	adds	r3, #1
10016142:	b2db      	uxtb	r3, r3
10016144:	703b      	strb	r3, [r7, #0]
10016146:	4645      	mov	r5, r8
10016148:	e175      	b.n	10016436 <_dtoa_r+0x736>
1001614a:	2301      	movs	r3, #1
1001614c:	2c00      	cmp	r4, #0
1001614e:	9310      	str	r3, [sp, #64]	@ 0x40
10016150:	f6bf ae82 	bge.w	10015e58 <_dtoa_r+0x158>
10016154:	f1c8 0301 	rsb	r3, r8, #1
10016158:	930b      	str	r3, [sp, #44]	@ 0x2c
1001615a:	2400      	movs	r4, #0
1001615c:	e67e      	b.n	10015e5c <_dtoa_r+0x15c>
1001615e:	4638      	mov	r0, r7
10016160:	f007 fc54 	bl	1001da0c <__aeabi_i2d>
10016164:	4642      	mov	r2, r8
10016166:	464b      	mov	r3, r9
10016168:	f007 fcba 	bl	1001dae0 <__aeabi_dmul>
1001616c:	4b3d      	ldr	r3, [pc, #244]	@ (10016264 <_dtoa_r+0x564>)
1001616e:	2200      	movs	r2, #0
10016170:	f007 fb00 	bl	1001d774 <__adddf3>
10016174:	4606      	mov	r6, r0
10016176:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001617a:	4b3d      	ldr	r3, [pc, #244]	@ (10016270 <_dtoa_r+0x570>)
1001617c:	4640      	mov	r0, r8
1001617e:	4649      	mov	r1, r9
10016180:	2200      	movs	r2, #0
10016182:	f007 faf5 	bl	1001d770 <__aeabi_dsub>
10016186:	4632      	mov	r2, r6
10016188:	463b      	mov	r3, r7
1001618a:	4680      	mov	r8, r0
1001618c:	4689      	mov	r9, r1
1001618e:	f007 ff37 	bl	1001e000 <__aeabi_dcmpgt>
10016192:	2800      	cmp	r0, #0
10016194:	f040 845a 	bne.w	10016a4c <_dtoa_r+0xd4c>
10016198:	4640      	mov	r0, r8
1001619a:	4649      	mov	r1, r9
1001619c:	4632      	mov	r2, r6
1001619e:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
100161a2:	f007 ff0f 	bl	1001dfc4 <__aeabi_dcmplt>
100161a6:	bb28      	cbnz	r0, 100161f4 <_dtoa_r+0x4f4>
100161a8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
100161aa:	2b00      	cmp	r3, #0
100161ac:	f2c0 8092 	blt.w	100162d4 <_dtoa_r+0x5d4>
100161b0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
100161b2:	2a0e      	cmp	r2, #14
100161b4:	f300 808e 	bgt.w	100162d4 <_dtoa_r+0x5d4>
100161b8:	4d27      	ldr	r5, [pc, #156]	@ (10016258 <_dtoa_r+0x558>)
100161ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100161bc:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
100161c0:	e9d5 3400 	ldrd	r3, r4, [r5]
100161c4:	e9cd 3404 	strd	r3, r4, [sp, #16]
100161c8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
100161ca:	2b00      	cmp	r3, #0
100161cc:	da19      	bge.n	10016202 <_dtoa_r+0x502>
100161ce:	9b06      	ldr	r3, [sp, #24]
100161d0:	2b00      	cmp	r3, #0
100161d2:	dc16      	bgt.n	10016202 <_dtoa_r+0x502>
100161d4:	d10e      	bne.n	100161f4 <_dtoa_r+0x4f4>
100161d6:	4b26      	ldr	r3, [pc, #152]	@ (10016270 <_dtoa_r+0x570>)
100161d8:	2200      	movs	r2, #0
100161da:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
100161de:	f007 fc7f 	bl	1001dae0 <__aeabi_dmul>
100161e2:	4602      	mov	r2, r0
100161e4:	460b      	mov	r3, r1
100161e6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100161ea:	f007 fef5 	bl	1001dfd8 <__aeabi_dcmple>
100161ee:	2800      	cmp	r0, #0
100161f0:	f000 842c 	beq.w	10016a4c <_dtoa_r+0xd4c>
100161f4:	f04f 0900 	mov.w	r9, #0
100161f8:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
100161fa:	464f      	mov	r7, r9
100161fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
100161fe:	43dd      	mvns	r5, r3
10016200:	e225      	b.n	1001664e <_dtoa_r+0x94e>
10016202:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
10016206:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
1001620a:	4622      	mov	r2, r4
1001620c:	462b      	mov	r3, r5
1001620e:	4640      	mov	r0, r8
10016210:	4649      	mov	r1, r9
10016212:	f007 fd8f 	bl	1001dd34 <__aeabi_ddiv>
10016216:	f007 ff13 	bl	1001e040 <__aeabi_d2iz>
1001621a:	4606      	mov	r6, r0
1001621c:	f007 fbf6 	bl	1001da0c <__aeabi_i2d>
10016220:	4622      	mov	r2, r4
10016222:	462b      	mov	r3, r5
10016224:	f007 fc5c 	bl	1001dae0 <__aeabi_dmul>
10016228:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
1001622a:	460b      	mov	r3, r1
1001622c:	4602      	mov	r2, r0
1001622e:	4649      	mov	r1, r9
10016230:	4640      	mov	r0, r8
10016232:	f007 fa9d 	bl	1001d770 <__aeabi_dsub>
10016236:	f106 0330 	add.w	r3, r6, #48	@ 0x30
1001623a:	f807 3b01 	strb.w	r3, [r7], #1
1001623e:	9b06      	ldr	r3, [sp, #24]
10016240:	2b01      	cmp	r3, #1
10016242:	f000 8312 	beq.w	1001686a <_dtoa_r+0xb6a>
10016246:	2501      	movs	r5, #1
10016248:	f8cd a018 	str.w	sl, [sp, #24]
1001624c:	4699      	mov	r9, r3
1001624e:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
10016252:	46a8      	mov	r8, r5
10016254:	e02c      	b.n	100162b0 <_dtoa_r+0x5b0>
10016256:	bf00      	nop
10016258:	1001ed50 	.word	0x1001ed50
1001625c:	1001ed28 	.word	0x1001ed28
10016260:	3ff00000 	.word	0x3ff00000
10016264:	401c0000 	.word	0x401c0000
10016268:	3fe00000 	.word	0x3fe00000
1001626c:	40240000 	.word	0x40240000
10016270:	40140000 	.word	0x40140000
10016274:	4652      	mov	r2, sl
10016276:	465b      	mov	r3, fp
10016278:	4620      	mov	r0, r4
1001627a:	4629      	mov	r1, r5
1001627c:	f007 fd5a 	bl	1001dd34 <__aeabi_ddiv>
10016280:	f007 fede 	bl	1001e040 <__aeabi_d2iz>
10016284:	4606      	mov	r6, r0
10016286:	f007 fbc1 	bl	1001da0c <__aeabi_i2d>
1001628a:	4652      	mov	r2, sl
1001628c:	465b      	mov	r3, fp
1001628e:	f007 fc27 	bl	1001dae0 <__aeabi_dmul>
10016292:	f108 0801 	add.w	r8, r8, #1
10016296:	460b      	mov	r3, r1
10016298:	4602      	mov	r2, r0
1001629a:	4629      	mov	r1, r5
1001629c:	4620      	mov	r0, r4
1001629e:	f007 fa67 	bl	1001d770 <__aeabi_dsub>
100162a2:	f106 0330 	add.w	r3, r6, #48	@ 0x30
100162a6:	45c8      	cmp	r8, r9
100162a8:	f807 3b01 	strb.w	r3, [r7], #1
100162ac:	f000 82db 	beq.w	10016866 <_dtoa_r+0xb66>
100162b0:	4bb9      	ldr	r3, [pc, #740]	@ (10016598 <_dtoa_r+0x898>)
100162b2:	2200      	movs	r2, #0
100162b4:	f007 fc14 	bl	1001dae0 <__aeabi_dmul>
100162b8:	2200      	movs	r2, #0
100162ba:	2300      	movs	r3, #0
100162bc:	4604      	mov	r4, r0
100162be:	460d      	mov	r5, r1
100162c0:	f007 fe76 	bl	1001dfb0 <__aeabi_dcmpeq>
100162c4:	2800      	cmp	r0, #0
100162c6:	d0d5      	beq.n	10016274 <_dtoa_r+0x574>
100162c8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100162ca:	f8dd a018 	ldr.w	sl, [sp, #24]
100162ce:	3501      	adds	r5, #1
100162d0:	463e      	mov	r6, r7
100162d2:	e0b0      	b.n	10016436 <_dtoa_r+0x736>
100162d4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
100162d6:	2a00      	cmp	r2, #0
100162d8:	f040 80d2 	bne.w	10016480 <_dtoa_r+0x780>
100162dc:	2300      	movs	r3, #0
100162de:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100162e0:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
100162e2:	930c      	str	r3, [sp, #48]	@ 0x30
100162e4:	461f      	mov	r7, r3
100162e6:	b156      	cbz	r6, 100162fe <_dtoa_r+0x5fe>
100162e8:	2c00      	cmp	r4, #0
100162ea:	dd08      	ble.n	100162fe <_dtoa_r+0x5fe>
100162ec:	42a6      	cmp	r6, r4
100162ee:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100162f0:	4633      	mov	r3, r6
100162f2:	bfa8      	it	ge
100162f4:	4623      	movge	r3, r4
100162f6:	1ad2      	subs	r2, r2, r3
100162f8:	920b      	str	r2, [sp, #44]	@ 0x2c
100162fa:	1af6      	subs	r6, r6, r3
100162fc:	1ae4      	subs	r4, r4, r3
100162fe:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10016300:	b153      	cbz	r3, 10016318 <_dtoa_r+0x618>
10016302:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10016304:	b113      	cbz	r3, 1001630c <_dtoa_r+0x60c>
10016306:	2d00      	cmp	r5, #0
10016308:	f040 82e8 	bne.w	100168dc <_dtoa_r+0xbdc>
1001630c:	4651      	mov	r1, sl
1001630e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10016310:	9803      	ldr	r0, [sp, #12]
10016312:	f004 fa13 	bl	1001a73c <__pow5mult>
10016316:	4682      	mov	sl, r0
10016318:	9803      	ldr	r0, [sp, #12]
1001631a:	2101      	movs	r1, #1
1001631c:	f004 f92a 	bl	1001a574 <__i2b>
10016320:	4681      	mov	r9, r0
10016322:	f1bb 0f00 	cmp.w	fp, #0
10016326:	f040 81b6 	bne.w	10016696 <_dtoa_r+0x996>
1001632a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001632c:	2b01      	cmp	r3, #1
1001632e:	f340 81cc 	ble.w	100166ca <_dtoa_r+0x9ca>
10016332:	2001      	movs	r0, #1
10016334:	4420      	add	r0, r4
10016336:	f010 001f 	ands.w	r0, r0, #31
1001633a:	f000 809a 	beq.w	10016472 <_dtoa_r+0x772>
1001633e:	f1c0 0320 	rsb	r3, r0, #32
10016342:	2b04      	cmp	r3, #4
10016344:	f340 81da 	ble.w	100166fc <_dtoa_r+0x9fc>
10016348:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001634a:	f1c0 001c 	rsb	r0, r0, #28
1001634e:	4403      	add	r3, r0
10016350:	930b      	str	r3, [sp, #44]	@ 0x2c
10016352:	4406      	add	r6, r0
10016354:	4404      	add	r4, r0
10016356:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016358:	2b00      	cmp	r3, #0
1001635a:	dd05      	ble.n	10016368 <_dtoa_r+0x668>
1001635c:	4651      	mov	r1, sl
1001635e:	9803      	ldr	r0, [sp, #12]
10016360:	461a      	mov	r2, r3
10016362:	f004 fa45 	bl	1001a7f0 <__lshift>
10016366:	4682      	mov	sl, r0
10016368:	2c00      	cmp	r4, #0
1001636a:	dd05      	ble.n	10016378 <_dtoa_r+0x678>
1001636c:	4649      	mov	r1, r9
1001636e:	9803      	ldr	r0, [sp, #12]
10016370:	4622      	mov	r2, r4
10016372:	f004 fa3d 	bl	1001a7f0 <__lshift>
10016376:	4681      	mov	r9, r0
10016378:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001637a:	2b00      	cmp	r3, #0
1001637c:	f040 8170 	bne.w	10016660 <_dtoa_r+0x960>
10016380:	9b06      	ldr	r3, [sp, #24]
10016382:	2b00      	cmp	r3, #0
10016384:	f340 8148 	ble.w	10016618 <_dtoa_r+0x918>
10016388:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001638a:	2b00      	cmp	r3, #0
1001638c:	f040 80a4 	bne.w	100164d8 <_dtoa_r+0x7d8>
10016390:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10016392:	3501      	adds	r5, #1
10016394:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
10016398:	9c06      	ldr	r4, [sp, #24]
1001639a:	f8dd b00c 	ldr.w	fp, [sp, #12]
1001639e:	2601      	movs	r6, #1
100163a0:	e007      	b.n	100163b2 <_dtoa_r+0x6b2>
100163a2:	4651      	mov	r1, sl
100163a4:	2300      	movs	r3, #0
100163a6:	220a      	movs	r2, #10
100163a8:	4658      	mov	r0, fp
100163aa:	f003 ffe9 	bl	1001a380 <__multadd>
100163ae:	3601      	adds	r6, #1
100163b0:	4682      	mov	sl, r0
100163b2:	4649      	mov	r1, r9
100163b4:	4650      	mov	r0, sl
100163b6:	f7ff fc0b 	bl	10015bd0 <quorem>
100163ba:	42a6      	cmp	r6, r4
100163bc:	f100 0330 	add.w	r3, r0, #48	@ 0x30
100163c0:	f808 3b01 	strb.w	r3, [r8], #1
100163c4:	dbed      	blt.n	100163a2 <_dtoa_r+0x6a2>
100163c6:	9a06      	ldr	r2, [sp, #24]
100163c8:	2a00      	cmp	r2, #0
100163ca:	bfc8      	it	gt
100163cc:	4616      	movgt	r6, r2
100163ce:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100163d0:	bfd8      	it	le
100163d2:	2601      	movle	r6, #1
100163d4:	eb02 0b06 	add.w	fp, r2, r6
100163d8:	2400      	movs	r4, #0
100163da:	4651      	mov	r1, sl
100163dc:	2201      	movs	r2, #1
100163de:	9803      	ldr	r0, [sp, #12]
100163e0:	9304      	str	r3, [sp, #16]
100163e2:	f004 fa05 	bl	1001a7f0 <__lshift>
100163e6:	4649      	mov	r1, r9
100163e8:	4682      	mov	sl, r0
100163ea:	f004 fa79 	bl	1001a8e0 <__mcmp>
100163ee:	2800      	cmp	r0, #0
100163f0:	f340 81e3 	ble.w	100167ba <_dtoa_r+0xaba>
100163f4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100163f6:	e002      	b.n	100163fe <_dtoa_r+0x6fe>
100163f8:	455a      	cmp	r2, fp
100163fa:	f000 81e9 	beq.w	100167d0 <_dtoa_r+0xad0>
100163fe:	465e      	mov	r6, fp
10016400:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10016404:	f816 3c01 	ldrb.w	r3, [r6, #-1]
10016408:	2b39      	cmp	r3, #57	@ 0x39
1001640a:	d0f5      	beq.n	100163f8 <_dtoa_r+0x6f8>
1001640c:	3301      	adds	r3, #1
1001640e:	f88b 3000 	strb.w	r3, [fp]
10016412:	f8dd 800c 	ldr.w	r8, [sp, #12]
10016416:	4649      	mov	r1, r9
10016418:	4640      	mov	r0, r8
1001641a:	f003 ffa7 	bl	1001a36c <_Bfree>
1001641e:	b157      	cbz	r7, 10016436 <_dtoa_r+0x736>
10016420:	b12c      	cbz	r4, 1001642e <_dtoa_r+0x72e>
10016422:	42bc      	cmp	r4, r7
10016424:	d003      	beq.n	1001642e <_dtoa_r+0x72e>
10016426:	4621      	mov	r1, r4
10016428:	4640      	mov	r0, r8
1001642a:	f003 ff9f 	bl	1001a36c <_Bfree>
1001642e:	9803      	ldr	r0, [sp, #12]
10016430:	4639      	mov	r1, r7
10016432:	f003 ff9b 	bl	1001a36c <_Bfree>
10016436:	9803      	ldr	r0, [sp, #12]
10016438:	4651      	mov	r1, sl
1001643a:	f003 ff97 	bl	1001a36c <_Bfree>
1001643e:	2300      	movs	r3, #0
10016440:	7033      	strb	r3, [r6, #0]
10016442:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10016444:	601d      	str	r5, [r3, #0]
10016446:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10016448:	2b00      	cmp	r3, #0
1001644a:	f43f ac94 	beq.w	10015d76 <_dtoa_r+0x76>
1001644e:	980a      	ldr	r0, [sp, #40]	@ 0x28
10016450:	601e      	str	r6, [r3, #0]
10016452:	b01f      	add	sp, #124	@ 0x7c
10016454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016458:	4658      	mov	r0, fp
1001645a:	f007 fad7 	bl	1001da0c <__aeabi_i2d>
1001645e:	4632      	mov	r2, r6
10016460:	463b      	mov	r3, r7
10016462:	f007 fda5 	bl	1001dfb0 <__aeabi_dcmpeq>
10016466:	2800      	cmp	r0, #0
10016468:	f47f acdc 	bne.w	10015e24 <_dtoa_r+0x124>
1001646c:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10016470:	e4d8      	b.n	10015e24 <_dtoa_r+0x124>
10016472:	231c      	movs	r3, #28
10016474:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10016476:	441a      	add	r2, r3
10016478:	920b      	str	r2, [sp, #44]	@ 0x2c
1001647a:	441e      	add	r6, r3
1001647c:	441c      	add	r4, r3
1001647e:	e76a      	b.n	10016356 <_dtoa_r+0x656>
10016480:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10016482:	2a01      	cmp	r2, #1
10016484:	f340 81a9 	ble.w	100167da <_dtoa_r+0xada>
10016488:	9a06      	ldr	r2, [sp, #24]
1001648a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001648c:	1e55      	subs	r5, r2, #1
1001648e:	42ab      	cmp	r3, r5
10016490:	f2c0 816b 	blt.w	1001676a <_dtoa_r+0xa6a>
10016494:	2a00      	cmp	r2, #0
10016496:	eba3 0505 	sub.w	r5, r3, r5
1001649a:	f280 82dd 	bge.w	10016a58 <_dtoa_r+0xd58>
1001649e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100164a0:	9a06      	ldr	r2, [sp, #24]
100164a2:	1a9e      	subs	r6, r3, r2
100164a4:	9803      	ldr	r0, [sp, #12]
100164a6:	2101      	movs	r1, #1
100164a8:	f004 f864 	bl	1001a574 <__i2b>
100164ac:	4607      	mov	r7, r0
100164ae:	e71a      	b.n	100162e6 <_dtoa_r+0x5e6>
100164b0:	f1c3 0320 	rsb	r3, r3, #32
100164b4:	fa06 f003 	lsl.w	r0, r6, r3
100164b8:	e481      	b.n	10015dbe <_dtoa_r+0xbe>
100164ba:	2501      	movs	r5, #1
100164bc:	e4e4      	b.n	10015e88 <_dtoa_r+0x188>
100164be:	4639      	mov	r1, r7
100164c0:	2300      	movs	r3, #0
100164c2:	9803      	ldr	r0, [sp, #12]
100164c4:	220a      	movs	r2, #10
100164c6:	f003 ff5b 	bl	1001a380 <__multadd>
100164ca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100164cc:	2b00      	cmp	r3, #0
100164ce:	4607      	mov	r7, r0
100164d0:	f340 82ef 	ble.w	10016ab2 <_dtoa_r+0xdb2>
100164d4:	950e      	str	r5, [sp, #56]	@ 0x38
100164d6:	9306      	str	r3, [sp, #24]
100164d8:	2e00      	cmp	r6, #0
100164da:	f300 813f 	bgt.w	1001675c <_dtoa_r+0xa5c>
100164de:	f1bb 0f00 	cmp.w	fp, #0
100164e2:	f040 81df 	bne.w	100168a4 <_dtoa_r+0xba4>
100164e6:	46b8      	mov	r8, r7
100164e8:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
100164ea:	9c06      	ldr	r4, [sp, #24]
100164ec:	1e73      	subs	r3, r6, #1
100164ee:	441c      	add	r4, r3
100164f0:	9b04      	ldr	r3, [sp, #16]
100164f2:	940c      	str	r4, [sp, #48]	@ 0x30
100164f4:	f003 0301 	and.w	r3, r3, #1
100164f8:	9c03      	ldr	r4, [sp, #12]
100164fa:	930f      	str	r3, [sp, #60]	@ 0x3c
100164fc:	4649      	mov	r1, r9
100164fe:	4650      	mov	r0, sl
10016500:	f7ff fb66 	bl	10015bd0 <quorem>
10016504:	4639      	mov	r1, r7
10016506:	4683      	mov	fp, r0
10016508:	4650      	mov	r0, sl
1001650a:	f004 f9e9 	bl	1001a8e0 <__mcmp>
1001650e:	4642      	mov	r2, r8
10016510:	4649      	mov	r1, r9
10016512:	4605      	mov	r5, r0
10016514:	4620      	mov	r0, r4
10016516:	f004 fa03 	bl	1001a920 <__mdiff>
1001651a:	68c2      	ldr	r2, [r0, #12]
1001651c:	4601      	mov	r1, r0
1001651e:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
10016522:	2a00      	cmp	r2, #0
10016524:	d13a      	bne.n	1001659c <_dtoa_r+0x89c>
10016526:	9008      	str	r0, [sp, #32]
10016528:	4650      	mov	r0, sl
1001652a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001652c:	f004 f9d8 	bl	1001a8e0 <__mcmp>
10016530:	9908      	ldr	r1, [sp, #32]
10016532:	9006      	str	r0, [sp, #24]
10016534:	4620      	mov	r0, r4
10016536:	f003 ff19 	bl	1001a36c <_Bfree>
1001653a:	9a06      	ldr	r2, [sp, #24]
1001653c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001653e:	2a00      	cmp	r2, #0
10016540:	d15a      	bne.n	100165f8 <_dtoa_r+0x8f8>
10016542:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10016544:	b91a      	cbnz	r2, 1001654e <_dtoa_r+0x84e>
10016546:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10016548:	2a00      	cmp	r2, #0
1001654a:	f000 829a 	beq.w	10016a82 <_dtoa_r+0xd82>
1001654e:	2d00      	cmp	r5, #0
10016550:	db45      	blt.n	100165de <_dtoa_r+0x8de>
10016552:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10016554:	46b3      	mov	fp, r6
10016556:	42b2      	cmp	r2, r6
10016558:	f80b 3b01 	strb.w	r3, [fp], #1
1001655c:	f000 81b9 	beq.w	100168d2 <_dtoa_r+0xbd2>
10016560:	4651      	mov	r1, sl
10016562:	2300      	movs	r3, #0
10016564:	220a      	movs	r2, #10
10016566:	4620      	mov	r0, r4
10016568:	f003 ff0a 	bl	1001a380 <__multadd>
1001656c:	4547      	cmp	r7, r8
1001656e:	4682      	mov	sl, r0
10016570:	4639      	mov	r1, r7
10016572:	f04f 0300 	mov.w	r3, #0
10016576:	f04f 020a 	mov.w	r2, #10
1001657a:	4620      	mov	r0, r4
1001657c:	d036      	beq.n	100165ec <_dtoa_r+0x8ec>
1001657e:	f003 feff 	bl	1001a380 <__multadd>
10016582:	4641      	mov	r1, r8
10016584:	4607      	mov	r7, r0
10016586:	2300      	movs	r3, #0
10016588:	220a      	movs	r2, #10
1001658a:	4620      	mov	r0, r4
1001658c:	f003 fef8 	bl	1001a380 <__multadd>
10016590:	465e      	mov	r6, fp
10016592:	4680      	mov	r8, r0
10016594:	e7b2      	b.n	100164fc <_dtoa_r+0x7fc>
10016596:	bf00      	nop
10016598:	40240000 	.word	0x40240000
1001659c:	9803      	ldr	r0, [sp, #12]
1001659e:	9306      	str	r3, [sp, #24]
100165a0:	f003 fee4 	bl	1001a36c <_Bfree>
100165a4:	2d00      	cmp	r5, #0
100165a6:	9b06      	ldr	r3, [sp, #24]
100165a8:	db06      	blt.n	100165b8 <_dtoa_r+0x8b8>
100165aa:	9a04      	ldr	r2, [sp, #16]
100165ac:	9928      	ldr	r1, [sp, #160]	@ 0xa0
100165ae:	f002 0201 	and.w	r2, r2, #1
100165b2:	430d      	orrs	r5, r1
100165b4:	432a      	orrs	r2, r5
100165b6:	d12a      	bne.n	1001660e <_dtoa_r+0x90e>
100165b8:	4651      	mov	r1, sl
100165ba:	2201      	movs	r2, #1
100165bc:	9803      	ldr	r0, [sp, #12]
100165be:	9304      	str	r3, [sp, #16]
100165c0:	f004 f916 	bl	1001a7f0 <__lshift>
100165c4:	4649      	mov	r1, r9
100165c6:	4682      	mov	sl, r0
100165c8:	f004 f98a 	bl	1001a8e0 <__mcmp>
100165cc:	2800      	cmp	r0, #0
100165ce:	9b04      	ldr	r3, [sp, #16]
100165d0:	f340 80e8 	ble.w	100167a4 <_dtoa_r+0xaa4>
100165d4:	2b39      	cmp	r3, #57	@ 0x39
100165d6:	f000 822f 	beq.w	10016a38 <_dtoa_r+0xd38>
100165da:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
100165de:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100165e0:	f806 3b01 	strb.w	r3, [r6], #1
100165e4:	463c      	mov	r4, r7
100165e6:	3501      	adds	r5, #1
100165e8:	4647      	mov	r7, r8
100165ea:	e712      	b.n	10016412 <_dtoa_r+0x712>
100165ec:	f003 fec8 	bl	1001a380 <__multadd>
100165f0:	465e      	mov	r6, fp
100165f2:	4607      	mov	r7, r0
100165f4:	4680      	mov	r8, r0
100165f6:	e781      	b.n	100164fc <_dtoa_r+0x7fc>
100165f8:	2d00      	cmp	r5, #0
100165fa:	f2c0 827d 	blt.w	10016af8 <_dtoa_r+0xdf8>
100165fe:	9928      	ldr	r1, [sp, #160]	@ 0xa0
10016600:	430d      	orrs	r5, r1
10016602:	990f      	ldr	r1, [sp, #60]	@ 0x3c
10016604:	430d      	orrs	r5, r1
10016606:	f000 8277 	beq.w	10016af8 <_dtoa_r+0xdf8>
1001660a:	2a00      	cmp	r2, #0
1001660c:	dda1      	ble.n	10016552 <_dtoa_r+0x852>
1001660e:	2b39      	cmp	r3, #57	@ 0x39
10016610:	f000 8212 	beq.w	10016a38 <_dtoa_r+0xd38>
10016614:	3301      	adds	r3, #1
10016616:	e7e2      	b.n	100165de <_dtoa_r+0x8de>
10016618:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001661a:	2b02      	cmp	r3, #2
1001661c:	f77f aeb4 	ble.w	10016388 <_dtoa_r+0x688>
10016620:	9b06      	ldr	r3, [sp, #24]
10016622:	2b00      	cmp	r3, #0
10016624:	f040 811d 	bne.w	10016862 <_dtoa_r+0xb62>
10016628:	4649      	mov	r1, r9
1001662a:	2205      	movs	r2, #5
1001662c:	9803      	ldr	r0, [sp, #12]
1001662e:	f003 fea7 	bl	1001a380 <__multadd>
10016632:	4601      	mov	r1, r0
10016634:	4681      	mov	r9, r0
10016636:	4650      	mov	r0, sl
10016638:	f004 f952 	bl	1001a8e0 <__mcmp>
1001663c:	2800      	cmp	r0, #0
1001663e:	f340 8110 	ble.w	10016862 <_dtoa_r+0xb62>
10016642:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10016644:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10016646:	2331      	movs	r3, #49	@ 0x31
10016648:	f806 3b01 	strb.w	r3, [r6], #1
1001664c:	3501      	adds	r5, #1
1001664e:	9803      	ldr	r0, [sp, #12]
10016650:	4649      	mov	r1, r9
10016652:	3501      	adds	r5, #1
10016654:	f003 fe8a 	bl	1001a36c <_Bfree>
10016658:	2f00      	cmp	r7, #0
1001665a:	f47f aee8 	bne.w	1001642e <_dtoa_r+0x72e>
1001665e:	e6ea      	b.n	10016436 <_dtoa_r+0x736>
10016660:	4649      	mov	r1, r9
10016662:	4650      	mov	r0, sl
10016664:	f004 f93c 	bl	1001a8e0 <__mcmp>
10016668:	2800      	cmp	r0, #0
1001666a:	f6bf ae89 	bge.w	10016380 <_dtoa_r+0x680>
1001666e:	4651      	mov	r1, sl
10016670:	2300      	movs	r3, #0
10016672:	9803      	ldr	r0, [sp, #12]
10016674:	220a      	movs	r2, #10
10016676:	f003 fe83 	bl	1001a380 <__multadd>
1001667a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001667c:	1e5d      	subs	r5, r3, #1
1001667e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10016680:	4682      	mov	sl, r0
10016682:	2b00      	cmp	r3, #0
10016684:	f47f af1b 	bne.w	100164be <_dtoa_r+0x7be>
10016688:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001668a:	2b00      	cmp	r3, #0
1001668c:	f340 81ff 	ble.w	10016a8e <_dtoa_r+0xd8e>
10016690:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10016692:	9306      	str	r3, [sp, #24]
10016694:	e67e      	b.n	10016394 <_dtoa_r+0x694>
10016696:	4601      	mov	r1, r0
10016698:	465a      	mov	r2, fp
1001669a:	9803      	ldr	r0, [sp, #12]
1001669c:	f004 f84e 	bl	1001a73c <__pow5mult>
100166a0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
100166a2:	2b01      	cmp	r3, #1
100166a4:	4681      	mov	r9, r0
100166a6:	dd6c      	ble.n	10016782 <_dtoa_r+0xa82>
100166a8:	f04f 0b00 	mov.w	fp, #0
100166ac:	f8d9 3010 	ldr.w	r3, [r9, #16]
100166b0:	eb09 0383 	add.w	r3, r9, r3, lsl #2
100166b4:	6918      	ldr	r0, [r3, #16]
100166b6:	f003 ff0b 	bl	1001a4d0 <__hi0bits>
100166ba:	f1c0 0020 	rsb	r0, r0, #32
100166be:	e639      	b.n	10016334 <_dtoa_r+0x634>
100166c0:	4b92      	ldr	r3, [pc, #584]	@ (1001690c <_dtoa_r+0xc0c>)
100166c2:	930a      	str	r3, [sp, #40]	@ 0x28
100166c4:	3303      	adds	r3, #3
100166c6:	f7ff bbfa 	b.w	10015ebe <_dtoa_r+0x1be>
100166ca:	9b04      	ldr	r3, [sp, #16]
100166cc:	2b00      	cmp	r3, #0
100166ce:	f47f ae30 	bne.w	10016332 <_dtoa_r+0x632>
100166d2:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
100166d6:	f3c2 0313 	ubfx	r3, r2, #0, #20
100166da:	2b00      	cmp	r3, #0
100166dc:	f47f ae29 	bne.w	10016332 <_dtoa_r+0x632>
100166e0:	4b8b      	ldr	r3, [pc, #556]	@ (10016910 <_dtoa_r+0xc10>)
100166e2:	4013      	ands	r3, r2
100166e4:	b123      	cbz	r3, 100166f0 <_dtoa_r+0x9f0>
100166e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100166e8:	3301      	adds	r3, #1
100166ea:	930b      	str	r3, [sp, #44]	@ 0x2c
100166ec:	3401      	adds	r4, #1
100166ee:	2301      	movs	r3, #1
100166f0:	f1bb 0f00 	cmp.w	fp, #0
100166f4:	f040 81ae 	bne.w	10016a54 <_dtoa_r+0xd54>
100166f8:	469b      	mov	fp, r3
100166fa:	e61a      	b.n	10016332 <_dtoa_r+0x632>
100166fc:	f43f ae2b 	beq.w	10016356 <_dtoa_r+0x656>
10016700:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
10016704:	e6b6      	b.n	10016474 <_dtoa_r+0x774>
10016706:	2301      	movs	r3, #1
10016708:	930c      	str	r3, [sp, #48]	@ 0x30
1001670a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001670c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001670e:	4413      	add	r3, r2
10016710:	9318      	str	r3, [sp, #96]	@ 0x60
10016712:	3301      	adds	r3, #1
10016714:	2b01      	cmp	r3, #1
10016716:	461e      	mov	r6, r3
10016718:	9306      	str	r3, [sp, #24]
1001671a:	bfb8      	it	lt
1001671c:	2601      	movlt	r6, #1
1001671e:	2e17      	cmp	r6, #23
10016720:	f340 81d5 	ble.w	10016ace <_dtoa_r+0xdce>
10016724:	2201      	movs	r2, #1
10016726:	2304      	movs	r3, #4
10016728:	005b      	lsls	r3, r3, #1
1001672a:	f103 0014 	add.w	r0, r3, #20
1001672e:	42b0      	cmp	r0, r6
10016730:	4611      	mov	r1, r2
10016732:	f102 0201 	add.w	r2, r2, #1
10016736:	d9f7      	bls.n	10016728 <_dtoa_r+0xa28>
10016738:	9b03      	ldr	r3, [sp, #12]
1001673a:	63d9      	str	r1, [r3, #60]	@ 0x3c
1001673c:	e411      	b.n	10015f62 <_dtoa_r+0x262>
1001673e:	2301      	movs	r3, #1
10016740:	930c      	str	r3, [sp, #48]	@ 0x30
10016742:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10016744:	2b00      	cmp	r3, #0
10016746:	dd33      	ble.n	100167b0 <_dtoa_r+0xab0>
10016748:	9318      	str	r3, [sp, #96]	@ 0x60
1001674a:	9306      	str	r3, [sp, #24]
1001674c:	461e      	mov	r6, r3
1001674e:	e7e6      	b.n	1001671e <_dtoa_r+0xa1e>
10016750:	2300      	movs	r3, #0
10016752:	930c      	str	r3, [sp, #48]	@ 0x30
10016754:	e7d9      	b.n	1001670a <_dtoa_r+0xa0a>
10016756:	2300      	movs	r3, #0
10016758:	930c      	str	r3, [sp, #48]	@ 0x30
1001675a:	e7f2      	b.n	10016742 <_dtoa_r+0xa42>
1001675c:	4639      	mov	r1, r7
1001675e:	9803      	ldr	r0, [sp, #12]
10016760:	4632      	mov	r2, r6
10016762:	f004 f845 	bl	1001a7f0 <__lshift>
10016766:	4607      	mov	r7, r0
10016768:	e6b9      	b.n	100164de <_dtoa_r+0x7de>
1001676a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001676c:	9a06      	ldr	r2, [sp, #24]
1001676e:	950f      	str	r5, [sp, #60]	@ 0x3c
10016770:	1aeb      	subs	r3, r5, r3
10016772:	449b      	add	fp, r3
10016774:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016776:	461e      	mov	r6, r3
10016778:	4413      	add	r3, r2
1001677a:	4414      	add	r4, r2
1001677c:	930b      	str	r3, [sp, #44]	@ 0x2c
1001677e:	2500      	movs	r5, #0
10016780:	e690      	b.n	100164a4 <_dtoa_r+0x7a4>
10016782:	9b04      	ldr	r3, [sp, #16]
10016784:	2b00      	cmp	r3, #0
10016786:	d18f      	bne.n	100166a8 <_dtoa_r+0x9a8>
10016788:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001678c:	f3c1 0313 	ubfx	r3, r1, #0, #20
10016790:	460a      	mov	r2, r1
10016792:	2b00      	cmp	r3, #0
10016794:	d188      	bne.n	100166a8 <_dtoa_r+0x9a8>
10016796:	e7a3      	b.n	100166e0 <_dtoa_r+0x9e0>
10016798:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
1001679c:	2702      	movs	r7, #2
1001679e:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
100167a2:	e40b      	b.n	10015fbc <_dtoa_r+0x2bc>
100167a4:	f47f af1b 	bne.w	100165de <_dtoa_r+0x8de>
100167a8:	07da      	lsls	r2, r3, #31
100167aa:	f57f af18 	bpl.w	100165de <_dtoa_r+0x8de>
100167ae:	e711      	b.n	100165d4 <_dtoa_r+0x8d4>
100167b0:	2301      	movs	r3, #1
100167b2:	9329      	str	r3, [sp, #164]	@ 0xa4
100167b4:	9306      	str	r3, [sp, #24]
100167b6:	f7ff bbcf 	b.w	10015f58 <_dtoa_r+0x258>
100167ba:	d103      	bne.n	100167c4 <_dtoa_r+0xac4>
100167bc:	9b04      	ldr	r3, [sp, #16]
100167be:	07db      	lsls	r3, r3, #31
100167c0:	f53f ae18 	bmi.w	100163f4 <_dtoa_r+0x6f4>
100167c4:	465e      	mov	r6, fp
100167c6:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
100167ca:	2b30      	cmp	r3, #48	@ 0x30
100167cc:	d0fa      	beq.n	100167c4 <_dtoa_r+0xac4>
100167ce:	e620      	b.n	10016412 <_dtoa_r+0x712>
100167d0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100167d2:	2331      	movs	r3, #49	@ 0x31
100167d4:	3501      	adds	r5, #1
100167d6:	7013      	strb	r3, [r2, #0]
100167d8:	e61b      	b.n	10016412 <_dtoa_r+0x712>
100167da:	9a11      	ldr	r2, [sp, #68]	@ 0x44
100167dc:	2a00      	cmp	r2, #0
100167de:	f000 80f9 	beq.w	100169d4 <_dtoa_r+0xcd4>
100167e2:	f203 4333 	addw	r3, r3, #1075	@ 0x433
100167e6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100167e8:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100167ea:	4616      	mov	r6, r2
100167ec:	441a      	add	r2, r3
100167ee:	441c      	add	r4, r3
100167f0:	920b      	str	r2, [sp, #44]	@ 0x2c
100167f2:	e657      	b.n	100164a4 <_dtoa_r+0x7a4>
100167f4:	f1c8 0301 	rsb	r3, r8, #1
100167f8:	4604      	mov	r4, r0
100167fa:	930b      	str	r3, [sp, #44]	@ 0x2c
100167fc:	9010      	str	r0, [sp, #64]	@ 0x40
100167fe:	f7ff bb9b 	b.w	10015f38 <_dtoa_r+0x238>
10016802:	f000 80eb 	beq.w	100169dc <_dtoa_r+0xcdc>
10016806:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10016808:	4d42      	ldr	r5, [pc, #264]	@ (10016914 <_dtoa_r+0xc14>)
1001680a:	425e      	negs	r6, r3
1001680c:	f006 030f 	and.w	r3, r6, #15
10016810:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10016814:	e9d3 2300 	ldrd	r2, r3, [r3]
10016818:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001681c:	f007 f960 	bl	1001dae0 <__aeabi_dmul>
10016820:	1135      	asrs	r5, r6, #4
10016822:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
10016826:	f000 814d 	beq.w	10016ac4 <_dtoa_r+0xdc4>
1001682a:	4e3b      	ldr	r6, [pc, #236]	@ (10016918 <_dtoa_r+0xc18>)
1001682c:	2300      	movs	r3, #0
1001682e:	2702      	movs	r7, #2
10016830:	4680      	mov	r8, r0
10016832:	4689      	mov	r9, r1
10016834:	07e8      	lsls	r0, r5, #31
10016836:	d509      	bpl.n	1001684c <_dtoa_r+0xb4c>
10016838:	e9d6 2300 	ldrd	r2, r3, [r6]
1001683c:	4640      	mov	r0, r8
1001683e:	4649      	mov	r1, r9
10016840:	f007 f94e 	bl	1001dae0 <__aeabi_dmul>
10016844:	3701      	adds	r7, #1
10016846:	4680      	mov	r8, r0
10016848:	4689      	mov	r9, r1
1001684a:	2301      	movs	r3, #1
1001684c:	106d      	asrs	r5, r5, #1
1001684e:	f106 0608 	add.w	r6, r6, #8
10016852:	d1ef      	bne.n	10016834 <_dtoa_r+0xb34>
10016854:	2b00      	cmp	r3, #0
10016856:	f47f abca 	bne.w	10015fee <_dtoa_r+0x2ee>
1001685a:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
1001685e:	f7ff bbc6 	b.w	10015fee <_dtoa_r+0x2ee>
10016862:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10016864:	e4ca      	b.n	100161fc <_dtoa_r+0x4fc>
10016866:	f8dd a018 	ldr.w	sl, [sp, #24]
1001686a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001686c:	4602      	mov	r2, r0
1001686e:	460b      	mov	r3, r1
10016870:	f006 ff80 	bl	1001d774 <__adddf3>
10016874:	4602      	mov	r2, r0
10016876:	460b      	mov	r3, r1
10016878:	e9cd 2306 	strd	r2, r3, [sp, #24]
1001687c:	3501      	adds	r5, #1
1001687e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10016882:	46a8      	mov	r8, r5
10016884:	f007 fbbc 	bl	1001e000 <__aeabi_dcmpgt>
10016888:	b940      	cbnz	r0, 1001689c <_dtoa_r+0xb9c>
1001688a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001688e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10016892:	f007 fb8d 	bl	1001dfb0 <__aeabi_dcmpeq>
10016896:	b118      	cbz	r0, 100168a0 <_dtoa_r+0xba0>
10016898:	07f1      	lsls	r1, r6, #31
1001689a:	d501      	bpl.n	100168a0 <_dtoa_r+0xba0>
1001689c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001689e:	e44a      	b.n	10016136 <_dtoa_r+0x436>
100168a0:	463e      	mov	r6, r7
100168a2:	e5c8      	b.n	10016436 <_dtoa_r+0x736>
100168a4:	6879      	ldr	r1, [r7, #4]
100168a6:	9803      	ldr	r0, [sp, #12]
100168a8:	f003 fd3a 	bl	1001a320 <_Balloc>
100168ac:	4605      	mov	r5, r0
100168ae:	2800      	cmp	r0, #0
100168b0:	f000 8126 	beq.w	10016b00 <_dtoa_r+0xe00>
100168b4:	693b      	ldr	r3, [r7, #16]
100168b6:	3302      	adds	r3, #2
100168b8:	009a      	lsls	r2, r3, #2
100168ba:	f107 010c 	add.w	r1, r7, #12
100168be:	300c      	adds	r0, #12
100168c0:	f7fe fffe 	bl	100158c0 <memcpy>
100168c4:	9803      	ldr	r0, [sp, #12]
100168c6:	4629      	mov	r1, r5
100168c8:	2201      	movs	r2, #1
100168ca:	f003 ff91 	bl	1001a7f0 <__lshift>
100168ce:	4680      	mov	r8, r0
100168d0:	e60a      	b.n	100164e8 <_dtoa_r+0x7e8>
100168d2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100168d4:	463c      	mov	r4, r7
100168d6:	3501      	adds	r5, #1
100168d8:	4647      	mov	r7, r8
100168da:	e57e      	b.n	100163da <_dtoa_r+0x6da>
100168dc:	f8dd 800c 	ldr.w	r8, [sp, #12]
100168e0:	4639      	mov	r1, r7
100168e2:	462a      	mov	r2, r5
100168e4:	4640      	mov	r0, r8
100168e6:	f003 ff29 	bl	1001a73c <__pow5mult>
100168ea:	4652      	mov	r2, sl
100168ec:	4601      	mov	r1, r0
100168ee:	4607      	mov	r7, r0
100168f0:	4640      	mov	r0, r8
100168f2:	f003 fe6d 	bl	1001a5d0 <__multiply>
100168f6:	4651      	mov	r1, sl
100168f8:	4682      	mov	sl, r0
100168fa:	4640      	mov	r0, r8
100168fc:	f003 fd36 	bl	1001a36c <_Bfree>
10016900:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10016902:	1b5b      	subs	r3, r3, r5
10016904:	930f      	str	r3, [sp, #60]	@ 0x3c
10016906:	f43f ad07 	beq.w	10016318 <_dtoa_r+0x618>
1001690a:	e4ff      	b.n	1001630c <_dtoa_r+0x60c>
1001690c:	1001ebf0 	.word	0x1001ebf0
10016910:	7ff00000 	.word	0x7ff00000
10016914:	1001ed50 	.word	0x1001ed50
10016918:	1001ed28 	.word	0x1001ed28
1001691c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
10016920:	f007 f8de 	bl	1001dae0 <__aeabi_dmul>
10016924:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016926:	701f      	strb	r7, [r3, #0]
10016928:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001692a:	2b01      	cmp	r3, #1
1001692c:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
10016930:	f000 80c6 	beq.w	10016ac0 <_dtoa_r+0xdc0>
10016934:	9f12      	ldr	r7, [sp, #72]	@ 0x48
10016936:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016938:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
1001693c:	441f      	add	r7, r3
1001693e:	4b7c      	ldr	r3, [pc, #496]	@ (10016b30 <_dtoa_r+0xe30>)
10016940:	2200      	movs	r2, #0
10016942:	4640      	mov	r0, r8
10016944:	4649      	mov	r1, r9
10016946:	f007 f8cb 	bl	1001dae0 <__aeabi_dmul>
1001694a:	4689      	mov	r9, r1
1001694c:	4680      	mov	r8, r0
1001694e:	f007 fb77 	bl	1001e040 <__aeabi_d2iz>
10016952:	4683      	mov	fp, r0
10016954:	f007 f85a 	bl	1001da0c <__aeabi_i2d>
10016958:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
1001695c:	4602      	mov	r2, r0
1001695e:	460b      	mov	r3, r1
10016960:	4640      	mov	r0, r8
10016962:	4649      	mov	r1, r9
10016964:	f006 ff04 	bl	1001d770 <__aeabi_dsub>
10016968:	f806 bb01 	strb.w	fp, [r6], #1
1001696c:	42b7      	cmp	r7, r6
1001696e:	4680      	mov	r8, r0
10016970:	4689      	mov	r9, r1
10016972:	d1e4      	bne.n	1001693e <_dtoa_r+0xc3e>
10016974:	f8dd b044 	ldr.w	fp, [sp, #68]	@ 0x44
10016978:	4b6e      	ldr	r3, [pc, #440]	@ (10016b34 <_dtoa_r+0xe34>)
1001697a:	2200      	movs	r2, #0
1001697c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
10016980:	f006 fef8 	bl	1001d774 <__adddf3>
10016984:	4602      	mov	r2, r0
10016986:	460b      	mov	r3, r1
10016988:	4640      	mov	r0, r8
1001698a:	4649      	mov	r1, r9
1001698c:	f007 fb38 	bl	1001e000 <__aeabi_dcmpgt>
10016990:	2800      	cmp	r0, #0
10016992:	d167      	bne.n	10016a64 <_dtoa_r+0xd64>
10016994:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
10016998:	4966      	ldr	r1, [pc, #408]	@ (10016b34 <_dtoa_r+0xe34>)
1001699a:	2000      	movs	r0, #0
1001699c:	f006 fee8 	bl	1001d770 <__aeabi_dsub>
100169a0:	4602      	mov	r2, r0
100169a2:	460b      	mov	r3, r1
100169a4:	4640      	mov	r0, r8
100169a6:	4649      	mov	r1, r9
100169a8:	f007 fb0c 	bl	1001dfc4 <__aeabi_dcmplt>
100169ac:	b948      	cbnz	r0, 100169c2 <_dtoa_r+0xcc2>
100169ae:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
100169b0:	2b00      	cmp	r3, #0
100169b2:	f6ff ac93 	blt.w	100162dc <_dtoa_r+0x5dc>
100169b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100169b8:	2b0e      	cmp	r3, #14
100169ba:	f73f ac8f 	bgt.w	100162dc <_dtoa_r+0x5dc>
100169be:	f7ff bbfc 	b.w	100161ba <_dtoa_r+0x4ba>
100169c2:	463e      	mov	r6, r7
100169c4:	3f01      	subs	r7, #1
100169c6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
100169ca:	2b30      	cmp	r3, #48	@ 0x30
100169cc:	d0f9      	beq.n	100169c2 <_dtoa_r+0xcc2>
100169ce:	9d19      	ldr	r5, [sp, #100]	@ 0x64
100169d0:	3501      	adds	r5, #1
100169d2:	e530      	b.n	10016436 <_dtoa_r+0x736>
100169d4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100169d6:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
100169da:	e704      	b.n	100167e6 <_dtoa_r+0xae6>
100169dc:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
100169e0:	2702      	movs	r7, #2
100169e2:	f7ff bb04 	b.w	10015fee <_dtoa_r+0x2ee>
100169e6:	9b06      	ldr	r3, [sp, #24]
100169e8:	2b00      	cmp	r3, #0
100169ea:	f43f abb8 	beq.w	1001615e <_dtoa_r+0x45e>
100169ee:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100169f0:	2b00      	cmp	r3, #0
100169f2:	f77f abd9 	ble.w	100161a8 <_dtoa_r+0x4a8>
100169f6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
100169f8:	9312      	str	r3, [sp, #72]	@ 0x48
100169fa:	3a01      	subs	r2, #1
100169fc:	4b4c      	ldr	r3, [pc, #304]	@ (10016b30 <_dtoa_r+0xe30>)
100169fe:	9219      	str	r2, [sp, #100]	@ 0x64
10016a00:	4640      	mov	r0, r8
10016a02:	2200      	movs	r2, #0
10016a04:	4649      	mov	r1, r9
10016a06:	f007 f86b 	bl	1001dae0 <__aeabi_dmul>
10016a0a:	4680      	mov	r8, r0
10016a0c:	4689      	mov	r9, r1
10016a0e:	1c78      	adds	r0, r7, #1
10016a10:	f006 fffc 	bl	1001da0c <__aeabi_i2d>
10016a14:	4642      	mov	r2, r8
10016a16:	464b      	mov	r3, r9
10016a18:	f007 f862 	bl	1001dae0 <__aeabi_dmul>
10016a1c:	4b46      	ldr	r3, [pc, #280]	@ (10016b38 <_dtoa_r+0xe38>)
10016a1e:	2200      	movs	r2, #0
10016a20:	f006 fea8 	bl	1001d774 <__adddf3>
10016a24:	4606      	mov	r6, r0
10016a26:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10016a2a:	f7ff bb01 	b.w	10016030 <_dtoa_r+0x330>
10016a2e:	f108 0801 	add.w	r8, r8, #1
10016a32:	2331      	movs	r3, #49	@ 0x31
10016a34:	f7ff bb86 	b.w	10016144 <_dtoa_r+0x444>
10016a38:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10016a3a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016a3c:	46b3      	mov	fp, r6
10016a3e:	2339      	movs	r3, #57	@ 0x39
10016a40:	463c      	mov	r4, r7
10016a42:	f80b 3b01 	strb.w	r3, [fp], #1
10016a46:	3501      	adds	r5, #1
10016a48:	4647      	mov	r7, r8
10016a4a:	e4d8      	b.n	100163fe <_dtoa_r+0x6fe>
10016a4c:	f04f 0900 	mov.w	r9, #0
10016a50:	464f      	mov	r7, r9
10016a52:	e5f6      	b.n	10016642 <_dtoa_r+0x942>
10016a54:	469b      	mov	fp, r3
10016a56:	e629      	b.n	100166ac <_dtoa_r+0x9ac>
10016a58:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016a5a:	461e      	mov	r6, r3
10016a5c:	4413      	add	r3, r2
10016a5e:	4414      	add	r4, r2
10016a60:	930b      	str	r3, [sp, #44]	@ 0x2c
10016a62:	e51f      	b.n	100164a4 <_dtoa_r+0x7a4>
10016a64:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10016a66:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016a68:	f103 0801 	add.w	r8, r3, #1
10016a6c:	f7ff bb63 	b.w	10016136 <_dtoa_r+0x436>
10016a70:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
10016a74:	e7ab      	b.n	100169ce <_dtoa_r+0xcce>
10016a76:	e9dd b41a 	ldrd	fp, r4, [sp, #104]	@ 0x68
10016a7a:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
10016a7e:	f7ff bb93 	b.w	100161a8 <_dtoa_r+0x4a8>
10016a82:	2b39      	cmp	r3, #57	@ 0x39
10016a84:	d0d8      	beq.n	10016a38 <_dtoa_r+0xd38>
10016a86:	2d00      	cmp	r5, #0
10016a88:	f73f ada7 	bgt.w	100165da <_dtoa_r+0x8da>
10016a8c:	e5a7      	b.n	100165de <_dtoa_r+0x8de>
10016a8e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10016a90:	2b02      	cmp	r3, #2
10016a92:	dc0a      	bgt.n	10016aaa <_dtoa_r+0xdaa>
10016a94:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10016a96:	9306      	str	r3, [sp, #24]
10016a98:	4649      	mov	r1, r9
10016a9a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10016a9c:	f7ff f898 	bl	10015bd0 <quorem>
10016aa0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016aa2:	f100 0330 	add.w	r3, r0, #48	@ 0x30
10016aa6:	7013      	strb	r3, [r2, #0]
10016aa8:	e48d      	b.n	100163c6 <_dtoa_r+0x6c6>
10016aaa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10016aac:	9306      	str	r3, [sp, #24]
10016aae:	950e      	str	r5, [sp, #56]	@ 0x38
10016ab0:	e5b6      	b.n	10016620 <_dtoa_r+0x920>
10016ab2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10016ab4:	2b02      	cmp	r3, #2
10016ab6:	dcf8      	bgt.n	10016aaa <_dtoa_r+0xdaa>
10016ab8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10016aba:	950e      	str	r5, [sp, #56]	@ 0x38
10016abc:	9306      	str	r3, [sp, #24]
10016abe:	e50b      	b.n	100164d8 <_dtoa_r+0x7d8>
10016ac0:	4637      	mov	r7, r6
10016ac2:	e759      	b.n	10016978 <_dtoa_r+0xc78>
10016ac4:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
10016ac8:	2702      	movs	r7, #2
10016aca:	f7ff ba90 	b.w	10015fee <_dtoa_r+0x2ee>
10016ace:	9b03      	ldr	r3, [sp, #12]
10016ad0:	2100      	movs	r1, #0
10016ad2:	63d9      	str	r1, [r3, #60]	@ 0x3c
10016ad4:	f7ff ba45 	b.w	10015f62 <_dtoa_r+0x262>
10016ad8:	9b03      	ldr	r3, [sp, #12]
10016ada:	2500      	movs	r5, #0
10016adc:	63dd      	str	r5, [r3, #60]	@ 0x3c
10016ade:	4629      	mov	r1, r5
10016ae0:	4618      	mov	r0, r3
10016ae2:	f003 fc1d 	bl	1001a320 <_Balloc>
10016ae6:	900a      	str	r0, [sp, #40]	@ 0x28
10016ae8:	b9a8      	cbnz	r0, 10016b16 <_dtoa_r+0xe16>
10016aea:	4b14      	ldr	r3, [pc, #80]	@ (10016b3c <_dtoa_r+0xe3c>)
10016aec:	4814      	ldr	r0, [pc, #80]	@ (10016b40 <_dtoa_r+0xe40>)
10016aee:	2200      	movs	r2, #0
10016af0:	f240 11af 	movw	r1, #431	@ 0x1af
10016af4:	f005 fef4 	bl	1001c8e0 <__assert_func>
10016af8:	2a00      	cmp	r2, #0
10016afa:	f77f ad70 	ble.w	100165de <_dtoa_r+0x8de>
10016afe:	e55b      	b.n	100165b8 <_dtoa_r+0x8b8>
10016b00:	4b0e      	ldr	r3, [pc, #56]	@ (10016b3c <_dtoa_r+0xe3c>)
10016b02:	480f      	ldr	r0, [pc, #60]	@ (10016b40 <_dtoa_r+0xe40>)
10016b04:	462a      	mov	r2, r5
10016b06:	f240 21ef 	movw	r1, #751	@ 0x2ef
10016b0a:	f005 fee9 	bl	1001c8e0 <__assert_func>
10016b0e:	4b0d      	ldr	r3, [pc, #52]	@ (10016b44 <_dtoa_r+0xe44>)
10016b10:	930a      	str	r3, [sp, #40]	@ 0x28
10016b12:	f7ff b930 	b.w	10015d76 <_dtoa_r+0x76>
10016b16:	9b03      	ldr	r3, [sp, #12]
10016b18:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016b1a:	639a      	str	r2, [r3, #56]	@ 0x38
10016b1c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10016b20:	2201      	movs	r2, #1
10016b22:	9529      	str	r5, [sp, #164]	@ 0xa4
10016b24:	9318      	str	r3, [sp, #96]	@ 0x60
10016b26:	920c      	str	r2, [sp, #48]	@ 0x30
10016b28:	9306      	str	r3, [sp, #24]
10016b2a:	f7ff bb3d 	b.w	100161a8 <_dtoa_r+0x4a8>
10016b2e:	bf00      	nop
10016b30:	40240000 	.word	0x40240000
10016b34:	3fe00000 	.word	0x3fe00000
10016b38:	401c0000 	.word	0x401c0000
10016b3c:	1001ebf4 	.word	0x1001ebf4
10016b40:	1001ec08 	.word	0x1001ec08
10016b44:	1001ebe4 	.word	0x1001ebe4

10016b48 <_malloc_trim_r>:
10016b48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10016b4c:	4606      	mov	r6, r0
10016b4e:	2008      	movs	r0, #8
10016b50:	4689      	mov	r9, r1
10016b52:	f7fe fcb1 	bl	100154b8 <sysconf>
10016b56:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 10016bf4 <_malloc_trim_r+0xac>
10016b5a:	4605      	mov	r5, r0
10016b5c:	4630      	mov	r0, r6
10016b5e:	f7fd fb65 	bl	1001422c <__malloc_lock>
10016b62:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016b66:	685f      	ldr	r7, [r3, #4]
10016b68:	f027 0703 	bic.w	r7, r7, #3
10016b6c:	f1a7 0411 	sub.w	r4, r7, #17
10016b70:	eba4 0409 	sub.w	r4, r4, r9
10016b74:	442c      	add	r4, r5
10016b76:	fbb4 f4f5 	udiv	r4, r4, r5
10016b7a:	3c01      	subs	r4, #1
10016b7c:	fb05 f404 	mul.w	r4, r5, r4
10016b80:	42a5      	cmp	r5, r4
10016b82:	dc08      	bgt.n	10016b96 <_malloc_trim_r+0x4e>
10016b84:	2100      	movs	r1, #0
10016b86:	4630      	mov	r0, r6
10016b88:	f7fe fc68 	bl	1001545c <_sbrk_r>
10016b8c:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016b90:	443b      	add	r3, r7
10016b92:	4298      	cmp	r0, r3
10016b94:	d005      	beq.n	10016ba2 <_malloc_trim_r+0x5a>
10016b96:	4630      	mov	r0, r6
10016b98:	f7fd fb4e 	bl	10014238 <__malloc_unlock>
10016b9c:	2000      	movs	r0, #0
10016b9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10016ba2:	4261      	negs	r1, r4
10016ba4:	4630      	mov	r0, r6
10016ba6:	f7fe fc59 	bl	1001545c <_sbrk_r>
10016baa:	3001      	adds	r0, #1
10016bac:	d00f      	beq.n	10016bce <_malloc_trim_r+0x86>
10016bae:	4a12      	ldr	r2, [pc, #72]	@ (10016bf8 <_malloc_trim_r+0xb0>)
10016bb0:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016bb4:	1b3f      	subs	r7, r7, r4
10016bb6:	f047 0701 	orr.w	r7, r7, #1
10016bba:	605f      	str	r7, [r3, #4]
10016bbc:	6813      	ldr	r3, [r2, #0]
10016bbe:	4630      	mov	r0, r6
10016bc0:	1b1b      	subs	r3, r3, r4
10016bc2:	6013      	str	r3, [r2, #0]
10016bc4:	f7fd fb38 	bl	10014238 <__malloc_unlock>
10016bc8:	2001      	movs	r0, #1
10016bca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10016bce:	2100      	movs	r1, #0
10016bd0:	4630      	mov	r0, r6
10016bd2:	f7fe fc43 	bl	1001545c <_sbrk_r>
10016bd6:	f8d8 2008 	ldr.w	r2, [r8, #8]
10016bda:	1a83      	subs	r3, r0, r2
10016bdc:	2b0f      	cmp	r3, #15
10016bde:	ddda      	ble.n	10016b96 <_malloc_trim_r+0x4e>
10016be0:	f043 0301 	orr.w	r3, r3, #1
10016be4:	6053      	str	r3, [r2, #4]
10016be6:	4b05      	ldr	r3, [pc, #20]	@ (10016bfc <_malloc_trim_r+0xb4>)
10016be8:	4903      	ldr	r1, [pc, #12]	@ (10016bf8 <_malloc_trim_r+0xb0>)
10016bea:	681b      	ldr	r3, [r3, #0]
10016bec:	1ac0      	subs	r0, r0, r3
10016bee:	6008      	str	r0, [r1, #0]
10016bf0:	e7d1      	b.n	10016b96 <_malloc_trim_r+0x4e>
10016bf2:	bf00      	nop
10016bf4:	20000018 	.word	0x20000018
10016bf8:	20001454 	.word	0x20001454
10016bfc:	20000010 	.word	0x20000010

10016c00 <_free_r>:
10016c00:	2900      	cmp	r1, #0
10016c02:	d07c      	beq.n	10016cfe <_free_r+0xfe>
10016c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10016c06:	460c      	mov	r4, r1
10016c08:	4606      	mov	r6, r0
10016c0a:	f7fd fb0f 	bl	1001422c <__malloc_lock>
10016c0e:	f854 3c04 	ldr.w	r3, [r4, #-4]
10016c12:	4f77      	ldr	r7, [pc, #476]	@ (10016df0 <_free_r+0x1f0>)
10016c14:	f1a4 0508 	sub.w	r5, r4, #8
10016c18:	f023 0101 	bic.w	r1, r3, #1
10016c1c:	1868      	adds	r0, r5, r1
10016c1e:	f8d7 c008 	ldr.w	ip, [r7, #8]
10016c22:	6842      	ldr	r2, [r0, #4]
10016c24:	4584      	cmp	ip, r0
10016c26:	f022 0203 	bic.w	r2, r2, #3
10016c2a:	f000 8083 	beq.w	10016d34 <_free_r+0x134>
10016c2e:	07db      	lsls	r3, r3, #31
10016c30:	6042      	str	r2, [r0, #4]
10016c32:	eb00 0c02 	add.w	ip, r0, r2
10016c36:	d433      	bmi.n	10016ca0 <_free_r+0xa0>
10016c38:	f854 4c08 	ldr.w	r4, [r4, #-8]
10016c3c:	f8dc 3004 	ldr.w	r3, [ip, #4]
10016c40:	1b2d      	subs	r5, r5, r4
10016c42:	4421      	add	r1, r4
10016c44:	68ac      	ldr	r4, [r5, #8]
10016c46:	f107 0c08 	add.w	ip, r7, #8
10016c4a:	4564      	cmp	r4, ip
10016c4c:	f003 0301 	and.w	r3, r3, #1
10016c50:	d064      	beq.n	10016d1c <_free_r+0x11c>
10016c52:	f8d5 e00c 	ldr.w	lr, [r5, #12]
10016c56:	f8c4 e00c 	str.w	lr, [r4, #12]
10016c5a:	f8ce 4008 	str.w	r4, [lr, #8]
10016c5e:	2b00      	cmp	r3, #0
10016c60:	f000 8081 	beq.w	10016d66 <_free_r+0x166>
10016c64:	f041 0301 	orr.w	r3, r1, #1
10016c68:	606b      	str	r3, [r5, #4]
10016c6a:	6001      	str	r1, [r0, #0]
10016c6c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10016c70:	d222      	bcs.n	10016cb8 <_free_r+0xb8>
10016c72:	6878      	ldr	r0, [r7, #4]
10016c74:	08cb      	lsrs	r3, r1, #3
10016c76:	2201      	movs	r2, #1
10016c78:	0949      	lsrs	r1, r1, #5
10016c7a:	3301      	adds	r3, #1
10016c7c:	408a      	lsls	r2, r1
10016c7e:	4302      	orrs	r2, r0
10016c80:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
10016c84:	607a      	str	r2, [r7, #4]
10016c86:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
10016c8a:	3a08      	subs	r2, #8
10016c8c:	e9c5 1202 	strd	r1, r2, [r5, #8]
10016c90:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
10016c94:	60cd      	str	r5, [r1, #12]
10016c96:	4630      	mov	r0, r6
10016c98:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
10016c9c:	f7fd bacc 	b.w	10014238 <__malloc_unlock>
10016ca0:	f8dc 3004 	ldr.w	r3, [ip, #4]
10016ca4:	07db      	lsls	r3, r3, #31
10016ca6:	d52b      	bpl.n	10016d00 <_free_r+0x100>
10016ca8:	f041 0301 	orr.w	r3, r1, #1
10016cac:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10016cb0:	f844 3c04 	str.w	r3, [r4, #-4]
10016cb4:	6001      	str	r1, [r0, #0]
10016cb6:	d3dc      	bcc.n	10016c72 <_free_r+0x72>
10016cb8:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
10016cbc:	ea4f 2351 	mov.w	r3, r1, lsr #9
10016cc0:	d253      	bcs.n	10016d6a <_free_r+0x16a>
10016cc2:	098b      	lsrs	r3, r1, #6
10016cc4:	f103 0039 	add.w	r0, r3, #57	@ 0x39
10016cc8:	f103 0238 	add.w	r2, r3, #56	@ 0x38
10016ccc:	00c3      	lsls	r3, r0, #3
10016cce:	18f8      	adds	r0, r7, r3
10016cd0:	58fb      	ldr	r3, [r7, r3]
10016cd2:	3808      	subs	r0, #8
10016cd4:	4298      	cmp	r0, r3
10016cd6:	d103      	bne.n	10016ce0 <_free_r+0xe0>
10016cd8:	e063      	b.n	10016da2 <_free_r+0x1a2>
10016cda:	689b      	ldr	r3, [r3, #8]
10016cdc:	4298      	cmp	r0, r3
10016cde:	d004      	beq.n	10016cea <_free_r+0xea>
10016ce0:	685a      	ldr	r2, [r3, #4]
10016ce2:	f022 0203 	bic.w	r2, r2, #3
10016ce6:	428a      	cmp	r2, r1
10016ce8:	d8f7      	bhi.n	10016cda <_free_r+0xda>
10016cea:	68d8      	ldr	r0, [r3, #12]
10016cec:	e9c5 3002 	strd	r3, r0, [r5, #8]
10016cf0:	6085      	str	r5, [r0, #8]
10016cf2:	60dd      	str	r5, [r3, #12]
10016cf4:	4630      	mov	r0, r6
10016cf6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
10016cfa:	f7fd ba9d 	b.w	10014238 <__malloc_unlock>
10016cfe:	4770      	bx	lr
10016d00:	4411      	add	r1, r2
10016d02:	f107 0c08 	add.w	ip, r7, #8
10016d06:	6883      	ldr	r3, [r0, #8]
10016d08:	4563      	cmp	r3, ip
10016d0a:	d03f      	beq.n	10016d8c <_free_r+0x18c>
10016d0c:	68c2      	ldr	r2, [r0, #12]
10016d0e:	60da      	str	r2, [r3, #12]
10016d10:	6093      	str	r3, [r2, #8]
10016d12:	f041 0301 	orr.w	r3, r1, #1
10016d16:	606b      	str	r3, [r5, #4]
10016d18:	5069      	str	r1, [r5, r1]
10016d1a:	e7a7      	b.n	10016c6c <_free_r+0x6c>
10016d1c:	2b00      	cmp	r3, #0
10016d1e:	d161      	bne.n	10016de4 <_free_r+0x1e4>
10016d20:	440a      	add	r2, r1
10016d22:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
10016d26:	60cb      	str	r3, [r1, #12]
10016d28:	6099      	str	r1, [r3, #8]
10016d2a:	f042 0301 	orr.w	r3, r2, #1
10016d2e:	606b      	str	r3, [r5, #4]
10016d30:	50aa      	str	r2, [r5, r2]
10016d32:	e7b0      	b.n	10016c96 <_free_r+0x96>
10016d34:	440a      	add	r2, r1
10016d36:	07d9      	lsls	r1, r3, #31
10016d38:	d407      	bmi.n	10016d4a <_free_r+0x14a>
10016d3a:	f854 3c08 	ldr.w	r3, [r4, #-8]
10016d3e:	1aed      	subs	r5, r5, r3
10016d40:	441a      	add	r2, r3
10016d42:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
10016d46:	60cb      	str	r3, [r1, #12]
10016d48:	6099      	str	r1, [r3, #8]
10016d4a:	f042 0301 	orr.w	r3, r2, #1
10016d4e:	606b      	str	r3, [r5, #4]
10016d50:	4b28      	ldr	r3, [pc, #160]	@ (10016df4 <_free_r+0x1f4>)
10016d52:	60bd      	str	r5, [r7, #8]
10016d54:	681b      	ldr	r3, [r3, #0]
10016d56:	4293      	cmp	r3, r2
10016d58:	d89d      	bhi.n	10016c96 <_free_r+0x96>
10016d5a:	4b27      	ldr	r3, [pc, #156]	@ (10016df8 <_free_r+0x1f8>)
10016d5c:	4630      	mov	r0, r6
10016d5e:	6819      	ldr	r1, [r3, #0]
10016d60:	f7ff fef2 	bl	10016b48 <_malloc_trim_r>
10016d64:	e797      	b.n	10016c96 <_free_r+0x96>
10016d66:	4411      	add	r1, r2
10016d68:	e7cd      	b.n	10016d06 <_free_r+0x106>
10016d6a:	2b14      	cmp	r3, #20
10016d6c:	d908      	bls.n	10016d80 <_free_r+0x180>
10016d6e:	2b54      	cmp	r3, #84	@ 0x54
10016d70:	d81f      	bhi.n	10016db2 <_free_r+0x1b2>
10016d72:	0b0b      	lsrs	r3, r1, #12
10016d74:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
10016d78:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
10016d7c:	00c3      	lsls	r3, r0, #3
10016d7e:	e7a6      	b.n	10016cce <_free_r+0xce>
10016d80:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
10016d84:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
10016d88:	00c3      	lsls	r3, r0, #3
10016d8a:	e7a0      	b.n	10016cce <_free_r+0xce>
10016d8c:	f041 0301 	orr.w	r3, r1, #1
10016d90:	613d      	str	r5, [r7, #16]
10016d92:	617d      	str	r5, [r7, #20]
10016d94:	f8c5 c008 	str.w	ip, [r5, #8]
10016d98:	f8c5 c00c 	str.w	ip, [r5, #12]
10016d9c:	606b      	str	r3, [r5, #4]
10016d9e:	5069      	str	r1, [r5, r1]
10016da0:	e779      	b.n	10016c96 <_free_r+0x96>
10016da2:	6879      	ldr	r1, [r7, #4]
10016da4:	1092      	asrs	r2, r2, #2
10016da6:	2401      	movs	r4, #1
10016da8:	fa04 f202 	lsl.w	r2, r4, r2
10016dac:	430a      	orrs	r2, r1
10016dae:	607a      	str	r2, [r7, #4]
10016db0:	e79c      	b.n	10016cec <_free_r+0xec>
10016db2:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10016db6:	d806      	bhi.n	10016dc6 <_free_r+0x1c6>
10016db8:	0bcb      	lsrs	r3, r1, #15
10016dba:	f103 0078 	add.w	r0, r3, #120	@ 0x78
10016dbe:	f103 0277 	add.w	r2, r3, #119	@ 0x77
10016dc2:	00c3      	lsls	r3, r0, #3
10016dc4:	e783      	b.n	10016cce <_free_r+0xce>
10016dc6:	f240 5254 	movw	r2, #1364	@ 0x554
10016dca:	4293      	cmp	r3, r2
10016dcc:	d806      	bhi.n	10016ddc <_free_r+0x1dc>
10016dce:	0c8b      	lsrs	r3, r1, #18
10016dd0:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
10016dd4:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
10016dd8:	00c3      	lsls	r3, r0, #3
10016dda:	e778      	b.n	10016cce <_free_r+0xce>
10016ddc:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10016de0:	227e      	movs	r2, #126	@ 0x7e
10016de2:	e774      	b.n	10016cce <_free_r+0xce>
10016de4:	f041 0301 	orr.w	r3, r1, #1
10016de8:	606b      	str	r3, [r5, #4]
10016dea:	6001      	str	r1, [r0, #0]
10016dec:	e753      	b.n	10016c96 <_free_r+0x96>
10016dee:	bf00      	nop
10016df0:	20000018 	.word	0x20000018
10016df4:	20000014 	.word	0x20000014
10016df8:	20001484 	.word	0x20001484

10016dfc <__ascii_mbtowc>:
10016dfc:	b082      	sub	sp, #8
10016dfe:	b149      	cbz	r1, 10016e14 <__ascii_mbtowc+0x18>
10016e00:	b15a      	cbz	r2, 10016e1a <__ascii_mbtowc+0x1e>
10016e02:	b16b      	cbz	r3, 10016e20 <__ascii_mbtowc+0x24>
10016e04:	7813      	ldrb	r3, [r2, #0]
10016e06:	600b      	str	r3, [r1, #0]
10016e08:	7812      	ldrb	r2, [r2, #0]
10016e0a:	1e10      	subs	r0, r2, #0
10016e0c:	bf18      	it	ne
10016e0e:	2001      	movne	r0, #1
10016e10:	b002      	add	sp, #8
10016e12:	4770      	bx	lr
10016e14:	a901      	add	r1, sp, #4
10016e16:	2a00      	cmp	r2, #0
10016e18:	d1f3      	bne.n	10016e02 <__ascii_mbtowc+0x6>
10016e1a:	4610      	mov	r0, r2
10016e1c:	b002      	add	sp, #8
10016e1e:	4770      	bx	lr
10016e20:	f06f 0001 	mvn.w	r0, #1
10016e24:	e7f4      	b.n	10016e10 <__ascii_mbtowc+0x14>
10016e26:	bf00      	nop

10016e28 <_svfprintf_r>:
10016e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016e2c:	b0df      	sub	sp, #380	@ 0x17c
10016e2e:	460c      	mov	r4, r1
10016e30:	9109      	str	r1, [sp, #36]	@ 0x24
10016e32:	4691      	mov	r9, r2
10016e34:	930d      	str	r3, [sp, #52]	@ 0x34
10016e36:	4683      	mov	fp, r0
10016e38:	f7fe fab8 	bl	100153ac <_localeconv_r>
10016e3c:	6803      	ldr	r3, [r0, #0]
10016e3e:	931a      	str	r3, [sp, #104]	@ 0x68
10016e40:	4618      	mov	r0, r3
10016e42:	f7fe fddd 	bl	10015a00 <strlen>
10016e46:	2100      	movs	r1, #0
10016e48:	9018      	str	r0, [sp, #96]	@ 0x60
10016e4a:	2208      	movs	r2, #8
10016e4c:	a82e      	add	r0, sp, #184	@ 0xb8
10016e4e:	f7fe f9ff 	bl	10015250 <memset>
10016e52:	89a3      	ldrh	r3, [r4, #12]
10016e54:	0619      	lsls	r1, r3, #24
10016e56:	d503      	bpl.n	10016e60 <_svfprintf_r+0x38>
10016e58:	6923      	ldr	r3, [r4, #16]
10016e5a:	2b00      	cmp	r3, #0
10016e5c:	f000 8788 	beq.w	10017d70 <_svfprintf_r+0xf48>
10016e60:	2300      	movs	r3, #0
10016e62:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10016e66:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10016e6a:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
10016e6e:	9313      	str	r3, [sp, #76]	@ 0x4c
10016e70:	9319      	str	r3, [sp, #100]	@ 0x64
10016e72:	930a      	str	r3, [sp, #40]	@ 0x28
10016e74:	2400      	movs	r4, #0
10016e76:	2300      	movs	r3, #0
10016e78:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
10016e7c:	aa35      	add	r2, sp, #212	@ 0xd4
10016e7e:	9232      	str	r2, [sp, #200]	@ 0xc8
10016e80:	4690      	mov	r8, r2
10016e82:	f8cd b01c 	str.w	fp, [sp, #28]
10016e86:	464d      	mov	r5, r9
10016e88:	9f07      	ldr	r7, [sp, #28]
10016e8a:	462e      	mov	r6, r5
10016e8c:	4b73      	ldr	r3, [pc, #460]	@ (1001705c <_svfprintf_r+0x234>)
10016e8e:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10016e92:	f7fe fa85 	bl	100153a0 <__locale_mb_cur_max>
10016e96:	4603      	mov	r3, r0
10016e98:	a82e      	add	r0, sp, #184	@ 0xb8
10016e9a:	9000      	str	r0, [sp, #0]
10016e9c:	4632      	mov	r2, r6
10016e9e:	a92a      	add	r1, sp, #168	@ 0xa8
10016ea0:	4638      	mov	r0, r7
10016ea2:	47a0      	blx	r4
10016ea4:	2800      	cmp	r0, #0
10016ea6:	f000 80a9 	beq.w	10016ffc <_svfprintf_r+0x1d4>
10016eaa:	f2c0 809f 	blt.w	10016fec <_svfprintf_r+0x1c4>
10016eae:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10016eb0:	2a25      	cmp	r2, #37	@ 0x25
10016eb2:	4603      	mov	r3, r0
10016eb4:	d001      	beq.n	10016eba <_svfprintf_r+0x92>
10016eb6:	441e      	add	r6, r3
10016eb8:	e7e8      	b.n	10016e8c <_svfprintf_r+0x64>
10016eba:	1b77      	subs	r7, r6, r5
10016ebc:	4604      	mov	r4, r0
10016ebe:	f040 80a0 	bne.w	10017002 <_svfprintf_r+0x1da>
10016ec2:	2300      	movs	r3, #0
10016ec4:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10016ec8:	4699      	mov	r9, r3
10016eca:	930b      	str	r3, [sp, #44]	@ 0x2c
10016ecc:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10016ed0:	7873      	ldrb	r3, [r6, #1]
10016ed2:	9208      	str	r2, [sp, #32]
10016ed4:	1c74      	adds	r4, r6, #1
10016ed6:	3401      	adds	r4, #1
10016ed8:	f1a3 0220 	sub.w	r2, r3, #32
10016edc:	2a5a      	cmp	r2, #90	@ 0x5a
10016ede:	f200 80bf 	bhi.w	10017060 <_svfprintf_r+0x238>
10016ee2:	e8df f012 	tbh	[pc, r2, lsl #1]
10016ee6:	02e6      	.short	0x02e6
10016ee8:	00bd00bd 	.word	0x00bd00bd
10016eec:	00bd02e2 	.word	0x00bd02e2
10016ef0:	00bd00bd 	.word	0x00bd00bd
10016ef4:	00bd006a 	.word	0x00bd006a
10016ef8:	024800bd 	.word	0x024800bd
10016efc:	00bd0257 	.word	0x00bd0257
10016f00:	02f40253 	.word	0x02f40253
10016f04:	02f000bd 	.word	0x02f000bd
10016f08:	005b005b 	.word	0x005b005b
10016f0c:	005b005b 	.word	0x005b005b
10016f10:	005b005b 	.word	0x005b005b
10016f14:	005b005b 	.word	0x005b005b
10016f18:	00bd005b 	.word	0x00bd005b
10016f1c:	00bd00bd 	.word	0x00bd00bd
10016f20:	00bd00bd 	.word	0x00bd00bd
10016f24:	00bd00bd 	.word	0x00bd00bd
10016f28:	00bd013e 	.word	0x00bd013e
10016f2c:	030e01c7 	.word	0x030e01c7
10016f30:	013e013e 	.word	0x013e013e
10016f34:	00bd013e 	.word	0x00bd013e
10016f38:	00bd00bd 	.word	0x00bd00bd
10016f3c:	02de00bd 	.word	0x02de00bd
10016f40:	00bd00bd 	.word	0x00bd00bd
10016f44:	00bd025c 	.word	0x00bd025c
10016f48:	00bd00bd 	.word	0x00bd00bd
10016f4c:	00bd01f1 	.word	0x00bd01f1
10016f50:	00bd02cb 	.word	0x00bd02cb
10016f54:	070600bd 	.word	0x070600bd
10016f58:	00bd00bd 	.word	0x00bd00bd
10016f5c:	00bd00bd 	.word	0x00bd00bd
10016f60:	00bd00bd 	.word	0x00bd00bd
10016f64:	00bd00bd 	.word	0x00bd00bd
10016f68:	00bd013e 	.word	0x00bd013e
10016f6c:	022301c7 	.word	0x022301c7
10016f70:	013e013e 	.word	0x013e013e
10016f74:	028d013e 	.word	0x028d013e
10016f78:	007f0223 	.word	0x007f0223
10016f7c:	02a600bd 	.word	0x02a600bd
10016f80:	029700bd 	.word	0x029700bd
10016f84:	02b906fb 	.word	0x02b906fb
10016f88:	00bd007f 	.word	0x00bd007f
10016f8c:	007d01f1 	.word	0x007d01f1
10016f90:	00bd0701 	.word	0x00bd0701
10016f94:	072a00bd 	.word	0x072a00bd
10016f98:	007d00bd 	.word	0x007d00bd
10016f9c:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10016fa0:	2100      	movs	r1, #0
10016fa2:	f814 3b01 	ldrb.w	r3, [r4], #1
10016fa6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10016faa:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10016fae:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10016fb2:	2a09      	cmp	r2, #9
10016fb4:	d9f5      	bls.n	10016fa2 <_svfprintf_r+0x17a>
10016fb6:	910b      	str	r1, [sp, #44]	@ 0x2c
10016fb8:	e78e      	b.n	10016ed8 <_svfprintf_r+0xb0>
10016fba:	9f07      	ldr	r7, [sp, #28]
10016fbc:	4638      	mov	r0, r7
10016fbe:	f7fe f9f5 	bl	100153ac <_localeconv_r>
10016fc2:	6843      	ldr	r3, [r0, #4]
10016fc4:	931d      	str	r3, [sp, #116]	@ 0x74
10016fc6:	4618      	mov	r0, r3
10016fc8:	f7fe fd1a 	bl	10015a00 <strlen>
10016fcc:	901e      	str	r0, [sp, #120]	@ 0x78
10016fce:	4606      	mov	r6, r0
10016fd0:	4638      	mov	r0, r7
10016fd2:	f7fe f9eb 	bl	100153ac <_localeconv_r>
10016fd6:	6883      	ldr	r3, [r0, #8]
10016fd8:	931b      	str	r3, [sp, #108]	@ 0x6c
10016fda:	2e00      	cmp	r6, #0
10016fdc:	f040 8616 	bne.w	10017c0c <_svfprintf_r+0xde4>
10016fe0:	7823      	ldrb	r3, [r4, #0]
10016fe2:	e778      	b.n	10016ed6 <_svfprintf_r+0xae>
10016fe4:	7823      	ldrb	r3, [r4, #0]
10016fe6:	f049 0920 	orr.w	r9, r9, #32
10016fea:	e774      	b.n	10016ed6 <_svfprintf_r+0xae>
10016fec:	2208      	movs	r2, #8
10016fee:	2100      	movs	r1, #0
10016ff0:	a82e      	add	r0, sp, #184	@ 0xb8
10016ff2:	f7fe f92d 	bl	10015250 <memset>
10016ff6:	2301      	movs	r3, #1
10016ff8:	441e      	add	r6, r3
10016ffa:	e747      	b.n	10016e8c <_svfprintf_r+0x64>
10016ffc:	1b77      	subs	r7, r6, r5
10016ffe:	4604      	mov	r4, r0
10017000:	d011      	beq.n	10017026 <_svfprintf_r+0x1fe>
10017002:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10017004:	443b      	add	r3, r7
10017006:	9334      	str	r3, [sp, #208]	@ 0xd0
10017008:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001700a:	3301      	adds	r3, #1
1001700c:	2b07      	cmp	r3, #7
1001700e:	e9c8 5700 	strd	r5, r7, [r8]
10017012:	9333      	str	r3, [sp, #204]	@ 0xcc
10017014:	dc18      	bgt.n	10017048 <_svfprintf_r+0x220>
10017016:	f108 0808 	add.w	r8, r8, #8
1001701a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001701c:	443b      	add	r3, r7
1001701e:	930a      	str	r3, [sp, #40]	@ 0x28
10017020:	2c00      	cmp	r4, #0
10017022:	f47f af4e 	bne.w	10016ec2 <_svfprintf_r+0x9a>
10017026:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10017028:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001702c:	2b00      	cmp	r3, #0
1001702e:	f041 81ed 	bne.w	1001840c <_svfprintf_r+0x15e4>
10017032:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017034:	899b      	ldrh	r3, [r3, #12]
10017036:	f003 0340 	and.w	r3, r3, #64	@ 0x40
1001703a:	2b00      	cmp	r3, #0
1001703c:	f041 83bd 	bne.w	100187ba <_svfprintf_r+0x1992>
10017040:	980a      	ldr	r0, [sp, #40]	@ 0x28
10017042:	b05f      	add	sp, #380	@ 0x17c
10017044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017048:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001704a:	9807      	ldr	r0, [sp, #28]
1001704c:	aa32      	add	r2, sp, #200	@ 0xc8
1001704e:	f006 f9b5 	bl	1001d3bc <__ssprint_r>
10017052:	2800      	cmp	r0, #0
10017054:	d1ed      	bne.n	10017032 <_svfprintf_r+0x20a>
10017056:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001705a:	e7de      	b.n	1001701a <_svfprintf_r+0x1f2>
1001705c:	2000042c 	.word	0x2000042c
10017060:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017064:	2b00      	cmp	r3, #0
10017066:	d0de      	beq.n	10017026 <_svfprintf_r+0x1fe>
10017068:	2200      	movs	r2, #0
1001706a:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001706e:	2301      	movs	r3, #1
10017070:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10017074:	9306      	str	r3, [sp, #24]
10017076:	920c      	str	r2, [sp, #48]	@ 0x30
10017078:	469b      	mov	fp, r3
1001707a:	9208      	str	r2, [sp, #32]
1001707c:	9214      	str	r2, [sp, #80]	@ 0x50
1001707e:	9210      	str	r2, [sp, #64]	@ 0x40
10017080:	9212      	str	r2, [sp, #72]	@ 0x48
10017082:	ad45      	add	r5, sp, #276	@ 0x114
10017084:	f019 0302 	ands.w	r3, r9, #2
10017088:	d002      	beq.n	10017090 <_svfprintf_r+0x268>
1001708a:	9906      	ldr	r1, [sp, #24]
1001708c:	3102      	adds	r1, #2
1001708e:	9106      	str	r1, [sp, #24]
10017090:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10017094:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017096:	d105      	bne.n	100170a4 <_svfprintf_r+0x27c>
10017098:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1001709a:	9806      	ldr	r0, [sp, #24]
1001709c:	1a0e      	subs	r6, r1, r0
1001709e:	2e00      	cmp	r6, #0
100170a0:	f300 80a7 	bgt.w	100171f2 <_svfprintf_r+0x3ca>
100170a4:	b182      	cbz	r2, 100170c8 <_svfprintf_r+0x2a0>
100170a6:	2201      	movs	r2, #1
100170a8:	f8c8 2004 	str.w	r2, [r8, #4]
100170ac:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100170ae:	3201      	adds	r2, #1
100170b0:	3401      	adds	r4, #1
100170b2:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
100170b6:	2a07      	cmp	r2, #7
100170b8:	9434      	str	r4, [sp, #208]	@ 0xd0
100170ba:	9233      	str	r2, [sp, #204]	@ 0xcc
100170bc:	f8c8 1000 	str.w	r1, [r8]
100170c0:	f300 8403 	bgt.w	100178ca <_svfprintf_r+0xaa2>
100170c4:	f108 0808 	add.w	r8, r8, #8
100170c8:	b183      	cbz	r3, 100170ec <_svfprintf_r+0x2c4>
100170ca:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100170cc:	aa28      	add	r2, sp, #160	@ 0xa0
100170ce:	3301      	adds	r3, #1
100170d0:	3402      	adds	r4, #2
100170d2:	f8c8 2000 	str.w	r2, [r8]
100170d6:	2b07      	cmp	r3, #7
100170d8:	f04f 0202 	mov.w	r2, #2
100170dc:	9434      	str	r4, [sp, #208]	@ 0xd0
100170de:	9333      	str	r3, [sp, #204]	@ 0xcc
100170e0:	f8c8 2004 	str.w	r2, [r8, #4]
100170e4:	f300 83e5 	bgt.w	100178b2 <_svfprintf_r+0xa8a>
100170e8:	f108 0808 	add.w	r8, r8, #8
100170ec:	2f80      	cmp	r7, #128	@ 0x80
100170ee:	f000 82be 	beq.w	1001766e <_svfprintf_r+0x846>
100170f2:	9b08      	ldr	r3, [sp, #32]
100170f4:	eba3 060b 	sub.w	r6, r3, fp
100170f8:	2e00      	cmp	r6, #0
100170fa:	f300 82fd 	bgt.w	100176f8 <_svfprintf_r+0x8d0>
100170fe:	f419 7f80 	tst.w	r9, #256	@ 0x100
10017102:	f040 8217 	bne.w	10017534 <_svfprintf_r+0x70c>
10017106:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017108:	f8c8 5000 	str.w	r5, [r8]
1001710c:	3301      	adds	r3, #1
1001710e:	445c      	add	r4, fp
10017110:	2b07      	cmp	r3, #7
10017112:	f8c8 b004 	str.w	fp, [r8, #4]
10017116:	9434      	str	r4, [sp, #208]	@ 0xd0
10017118:	9333      	str	r3, [sp, #204]	@ 0xcc
1001711a:	f300 836a 	bgt.w	100177f2 <_svfprintf_r+0x9ca>
1001711e:	f108 0808 	add.w	r8, r8, #8
10017122:	f019 0f04 	tst.w	r9, #4
10017126:	d005      	beq.n	10017134 <_svfprintf_r+0x30c>
10017128:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001712a:	9a06      	ldr	r2, [sp, #24]
1001712c:	1a9d      	subs	r5, r3, r2
1001712e:	2d00      	cmp	r5, #0
10017130:	f300 83da 	bgt.w	100178e8 <_svfprintf_r+0xac0>
10017134:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10017138:	9906      	ldr	r1, [sp, #24]
1001713a:	428a      	cmp	r2, r1
1001713c:	bfac      	ite	ge
1001713e:	189b      	addge	r3, r3, r2
10017140:	185b      	addlt	r3, r3, r1
10017142:	930a      	str	r3, [sp, #40]	@ 0x28
10017144:	2c00      	cmp	r4, #0
10017146:	f040 8316 	bne.w	10017776 <_svfprintf_r+0x94e>
1001714a:	2300      	movs	r3, #0
1001714c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001714e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10017150:	b11b      	cbz	r3, 1001715a <_svfprintf_r+0x332>
10017152:	990c      	ldr	r1, [sp, #48]	@ 0x30
10017154:	9807      	ldr	r0, [sp, #28]
10017156:	f7ff fd53 	bl	10016c00 <_free_r>
1001715a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001715e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10017160:	e692      	b.n	10016e88 <_svfprintf_r+0x60>
10017162:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017166:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017168:	3307      	adds	r3, #7
1001716a:	f023 0307 	bic.w	r3, r3, #7
1001716e:	e8f3 6702 	ldrd	r6, r7, [r3], #8
10017172:	930d      	str	r3, [sp, #52]	@ 0x34
10017174:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10017178:	9323      	str	r3, [sp, #140]	@ 0x8c
1001717a:	9622      	str	r6, [sp, #136]	@ 0x88
1001717c:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
10017180:	4bb1      	ldr	r3, [pc, #708]	@ (10017448 <_svfprintf_r+0x620>)
10017182:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10017186:	4650      	mov	r0, sl
10017188:	4659      	mov	r1, fp
1001718a:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
1001718e:	f006 ff41 	bl	1001e014 <__aeabi_dcmpun>
10017192:	2800      	cmp	r0, #0
10017194:	f040 8547 	bne.w	10017c26 <_svfprintf_r+0xdfe>
10017198:	4bab      	ldr	r3, [pc, #684]	@ (10017448 <_svfprintf_r+0x620>)
1001719a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001719e:	4650      	mov	r0, sl
100171a0:	4659      	mov	r1, fp
100171a2:	f006 ff19 	bl	1001dfd8 <__aeabi_dcmple>
100171a6:	2800      	cmp	r0, #0
100171a8:	f040 853d 	bne.w	10017c26 <_svfprintf_r+0xdfe>
100171ac:	2200      	movs	r2, #0
100171ae:	2300      	movs	r3, #0
100171b0:	4630      	mov	r0, r6
100171b2:	4639      	mov	r1, r7
100171b4:	f006 ff06 	bl	1001dfc4 <__aeabi_dcmplt>
100171b8:	2800      	cmp	r0, #0
100171ba:	f041 8053 	bne.w	10018264 <_svfprintf_r+0x143c>
100171be:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100171c2:	4da2      	ldr	r5, [pc, #648]	@ (1001744c <_svfprintf_r+0x624>)
100171c4:	4ba2      	ldr	r3, [pc, #648]	@ (10017450 <_svfprintf_r+0x628>)
100171c6:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
100171ca:	990e      	ldr	r1, [sp, #56]	@ 0x38
100171cc:	2947      	cmp	r1, #71	@ 0x47
100171ce:	bfc8      	it	gt
100171d0:	461d      	movgt	r5, r3
100171d2:	2300      	movs	r3, #0
100171d4:	2103      	movs	r1, #3
100171d6:	930c      	str	r3, [sp, #48]	@ 0x30
100171d8:	9106      	str	r1, [sp, #24]
100171da:	468b      	mov	fp, r1
100171dc:	9308      	str	r3, [sp, #32]
100171de:	9314      	str	r3, [sp, #80]	@ 0x50
100171e0:	9310      	str	r3, [sp, #64]	@ 0x40
100171e2:	9312      	str	r3, [sp, #72]	@ 0x48
100171e4:	2a00      	cmp	r2, #0
100171e6:	f43f af4d 	beq.w	10017084 <_svfprintf_r+0x25c>
100171ea:	9b06      	ldr	r3, [sp, #24]
100171ec:	3301      	adds	r3, #1
100171ee:	9306      	str	r3, [sp, #24]
100171f0:	e748      	b.n	10017084 <_svfprintf_r+0x25c>
100171f2:	2e10      	cmp	r6, #16
100171f4:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100171f6:	f341 8279 	ble.w	100186ec <_svfprintf_r+0x18c4>
100171fa:	4896      	ldr	r0, [pc, #600]	@ (10017454 <_svfprintf_r+0x62c>)
100171fc:	9521      	str	r5, [sp, #132]	@ 0x84
100171fe:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
10017202:	4621      	mov	r1, r4
10017204:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10017206:	9c07      	ldr	r4, [sp, #28]
10017208:	9015      	str	r0, [sp, #84]	@ 0x54
1001720a:	f04f 0a10 	mov.w	sl, #16
1001720e:	4607      	mov	r7, r0
10017210:	e004      	b.n	1001721c <_svfprintf_r+0x3f4>
10017212:	3e10      	subs	r6, #16
10017214:	2e10      	cmp	r6, #16
10017216:	f108 0808 	add.w	r8, r8, #8
1001721a:	dd16      	ble.n	1001724a <_svfprintf_r+0x422>
1001721c:	3201      	adds	r2, #1
1001721e:	3110      	adds	r1, #16
10017220:	2a07      	cmp	r2, #7
10017222:	e9c8 7a00 	strd	r7, sl, [r8]
10017226:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
1001722a:	ddf2      	ble.n	10017212 <_svfprintf_r+0x3ea>
1001722c:	aa32      	add	r2, sp, #200	@ 0xc8
1001722e:	4629      	mov	r1, r5
10017230:	4620      	mov	r0, r4
10017232:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017236:	f006 f8c1 	bl	1001d3bc <__ssprint_r>
1001723a:	2800      	cmp	r0, #0
1001723c:	f040 86f1 	bne.w	10018022 <_svfprintf_r+0x11fa>
10017240:	3e10      	subs	r6, #16
10017242:	2e10      	cmp	r6, #16
10017244:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10017248:	dce8      	bgt.n	1001721c <_svfprintf_r+0x3f4>
1001724a:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
1001724e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
10017250:	460c      	mov	r4, r1
10017252:	3201      	adds	r2, #1
10017254:	9915      	ldr	r1, [sp, #84]	@ 0x54
10017256:	f8c8 1000 	str.w	r1, [r8]
1001725a:	4434      	add	r4, r6
1001725c:	2a07      	cmp	r2, #7
1001725e:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
10017262:	f8c8 6004 	str.w	r6, [r8, #4]
10017266:	f300 86cb 	bgt.w	10018000 <_svfprintf_r+0x11d8>
1001726a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001726e:	f108 0808 	add.w	r8, r8, #8
10017272:	e717      	b.n	100170a4 <_svfprintf_r+0x27c>
10017274:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10017276:	2b43      	cmp	r3, #67	@ 0x43
10017278:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001727c:	f102 0404 	add.w	r4, r2, #4
10017280:	d003      	beq.n	1001728a <_svfprintf_r+0x462>
10017282:	f019 0f10 	tst.w	r9, #16
10017286:	f000 855d 	beq.w	10017d44 <_svfprintf_r+0xf1c>
1001728a:	2208      	movs	r2, #8
1001728c:	2100      	movs	r1, #0
1001728e:	a830      	add	r0, sp, #192	@ 0xc0
10017290:	f7fd ffde 	bl	10015250 <memset>
10017294:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017296:	9807      	ldr	r0, [sp, #28]
10017298:	681a      	ldr	r2, [r3, #0]
1001729a:	ad45      	add	r5, sp, #276	@ 0x114
1001729c:	ab30      	add	r3, sp, #192	@ 0xc0
1001729e:	4629      	mov	r1, r5
100172a0:	f7fe fc1a 	bl	10015ad8 <_wcrtomb_r>
100172a4:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
100172a8:	4683      	mov	fp, r0
100172aa:	f001 8281 	beq.w	100187b0 <_svfprintf_r+0x1988>
100172ae:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
100172b2:	9306      	str	r3, [sp, #24]
100172b4:	2200      	movs	r2, #0
100172b6:	940d      	str	r4, [sp, #52]	@ 0x34
100172b8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100172bc:	920c      	str	r2, [sp, #48]	@ 0x30
100172be:	9208      	str	r2, [sp, #32]
100172c0:	9214      	str	r2, [sp, #80]	@ 0x50
100172c2:	9210      	str	r2, [sp, #64]	@ 0x40
100172c4:	9212      	str	r2, [sp, #72]	@ 0x48
100172c6:	e6dd      	b.n	10017084 <_svfprintf_r+0x25c>
100172c8:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
100172ca:	f856 5b04 	ldr.w	r5, [r6], #4
100172ce:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100172d2:	2300      	movs	r3, #0
100172d4:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
100172d8:	2d00      	cmp	r5, #0
100172da:	f000 8558 	beq.w	10017d8e <_svfprintf_r+0xf66>
100172de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100172e0:	2b53      	cmp	r3, #83	@ 0x53
100172e2:	f000 86ba 	beq.w	1001805a <_svfprintf_r+0x1232>
100172e6:	f019 0310 	ands.w	r3, r9, #16
100172ea:	9312      	str	r3, [sp, #72]	@ 0x48
100172ec:	f040 86b5 	bne.w	1001805a <_svfprintf_r+0x1232>
100172f0:	9b08      	ldr	r3, [sp, #32]
100172f2:	1c5a      	adds	r2, r3, #1
100172f4:	f001 8095 	beq.w	10018422 <_svfprintf_r+0x15fa>
100172f8:	9912      	ldr	r1, [sp, #72]	@ 0x48
100172fa:	461a      	mov	r2, r3
100172fc:	4628      	mov	r0, r5
100172fe:	f7fe fa8f 	bl	10015820 <memchr>
10017302:	900c      	str	r0, [sp, #48]	@ 0x30
10017304:	2800      	cmp	r0, #0
10017306:	f001 82f0 	beq.w	100188ea <_svfprintf_r+0x1ac2>
1001730a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001730c:	960d      	str	r6, [sp, #52]	@ 0x34
1001730e:	eba3 0b05 	sub.w	fp, r3, r5
10017312:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10017314:	9308      	str	r3, [sp, #32]
10017316:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
1001731a:	9314      	str	r3, [sp, #80]	@ 0x50
1001731c:	9310      	str	r3, [sp, #64]	@ 0x40
1001731e:	930c      	str	r3, [sp, #48]	@ 0x30
10017320:	2373      	movs	r3, #115	@ 0x73
10017322:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10017326:	9106      	str	r1, [sp, #24]
10017328:	930e      	str	r3, [sp, #56]	@ 0x38
1001732a:	e75b      	b.n	100171e4 <_svfprintf_r+0x3bc>
1001732c:	f019 0f20 	tst.w	r9, #32
10017330:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017334:	f000 80ed 	beq.w	10017512 <_svfprintf_r+0x6ea>
10017338:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001733a:	3307      	adds	r3, #7
1001733c:	f023 0307 	bic.w	r3, r3, #7
10017340:	461a      	mov	r2, r3
10017342:	6859      	ldr	r1, [r3, #4]
10017344:	f852 3b08 	ldr.w	r3, [r2], #8
10017348:	920d      	str	r2, [sp, #52]	@ 0x34
1001734a:	460a      	mov	r2, r1
1001734c:	2900      	cmp	r1, #0
1001734e:	f2c0 841a 	blt.w	10017b86 <_svfprintf_r+0xd5e>
10017352:	9908      	ldr	r1, [sp, #32]
10017354:	3101      	adds	r1, #1
10017356:	f000 829d 	beq.w	10017894 <_svfprintf_r+0xa6c>
1001735a:	ea53 0102 	orrs.w	r1, r3, r2
1001735e:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10017362:	f040 8298 	bne.w	10017896 <_svfprintf_r+0xa6e>
10017366:	9a08      	ldr	r2, [sp, #32]
10017368:	2a00      	cmp	r2, #0
1001736a:	f040 8299 	bne.w	100178a0 <_svfprintf_r+0xa78>
1001736e:	46a1      	mov	r9, r4
10017370:	4693      	mov	fp, r2
10017372:	ad5e      	add	r5, sp, #376	@ 0x178
10017374:	e152      	b.n	1001761c <_svfprintf_r+0x7f4>
10017376:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017378:	f853 2b04 	ldr.w	r2, [r3], #4
1001737c:	920b      	str	r2, [sp, #44]	@ 0x2c
1001737e:	2a00      	cmp	r2, #0
10017380:	f280 8425 	bge.w	10017bce <_svfprintf_r+0xda6>
10017384:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10017386:	930d      	str	r3, [sp, #52]	@ 0x34
10017388:	4252      	negs	r2, r2
1001738a:	920b      	str	r2, [sp, #44]	@ 0x2c
1001738c:	7823      	ldrb	r3, [r4, #0]
1001738e:	f049 0904 	orr.w	r9, r9, #4
10017392:	e5a0      	b.n	10016ed6 <_svfprintf_r+0xae>
10017394:	232b      	movs	r3, #43	@ 0x2b
10017396:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001739a:	7823      	ldrb	r3, [r4, #0]
1001739c:	e59b      	b.n	10016ed6 <_svfprintf_r+0xae>
1001739e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100173a2:	f049 0910 	orr.w	r9, r9, #16
100173a6:	f019 0220 	ands.w	r2, r9, #32
100173aa:	f000 83b5 	beq.w	10017b18 <_svfprintf_r+0xcf0>
100173ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100173b0:	3307      	adds	r3, #7
100173b2:	f023 0307 	bic.w	r3, r3, #7
100173b6:	4619      	mov	r1, r3
100173b8:	685a      	ldr	r2, [r3, #4]
100173ba:	f851 3b08 	ldr.w	r3, [r1], #8
100173be:	910d      	str	r1, [sp, #52]	@ 0x34
100173c0:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
100173c4:	2100      	movs	r1, #0
100173c6:	2000      	movs	r0, #0
100173c8:	9d08      	ldr	r5, [sp, #32]
100173ca:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
100173ce:	1c6f      	adds	r7, r5, #1
100173d0:	f000 810d 	beq.w	100175ee <_svfprintf_r+0x7c6>
100173d4:	ea53 0002 	orrs.w	r0, r3, r2
100173d8:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
100173dc:	f040 8106 	bne.w	100175ec <_svfprintf_r+0x7c4>
100173e0:	2d00      	cmp	r5, #0
100173e2:	f040 8628 	bne.w	10018036 <_svfprintf_r+0x120e>
100173e6:	2900      	cmp	r1, #0
100173e8:	f040 83c9 	bne.w	10017b7e <_svfprintf_r+0xd56>
100173ec:	f014 0b01 	ands.w	fp, r4, #1
100173f0:	f000 83f1 	beq.w	10017bd6 <_svfprintf_r+0xdae>
100173f4:	2330      	movs	r3, #48	@ 0x30
100173f6:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
100173fa:	f20d 1577 	addw	r5, sp, #375	@ 0x177
100173fe:	e10d      	b.n	1001761c <_svfprintf_r+0x7f4>
10017400:	7823      	ldrb	r3, [r4, #0]
10017402:	2b68      	cmp	r3, #104	@ 0x68
10017404:	bf03      	ittte	eq
10017406:	7863      	ldrbeq	r3, [r4, #1]
10017408:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
1001740c:	3401      	addeq	r4, #1
1001740e:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
10017412:	e560      	b.n	10016ed6 <_svfprintf_r+0xae>
10017414:	f019 0f20 	tst.w	r9, #32
10017418:	940f      	str	r4, [sp, #60]	@ 0x3c
1001741a:	f000 83e6 	beq.w	10017bea <_svfprintf_r+0xdc2>
1001741e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017420:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10017422:	681b      	ldr	r3, [r3, #0]
10017424:	601a      	str	r2, [r3, #0]
10017426:	17d2      	asrs	r2, r2, #31
10017428:	605a      	str	r2, [r3, #4]
1001742a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001742c:	3304      	adds	r3, #4
1001742e:	930d      	str	r3, [sp, #52]	@ 0x34
10017430:	e695      	b.n	1001715e <_svfprintf_r+0x336>
10017432:	7823      	ldrb	r3, [r4, #0]
10017434:	2b6c      	cmp	r3, #108	@ 0x6c
10017436:	bf03      	ittte	eq
10017438:	7863      	ldrbeq	r3, [r4, #1]
1001743a:	f049 0920 	orreq.w	r9, r9, #32
1001743e:	3401      	addeq	r4, #1
10017440:	f049 0910 	orrne.w	r9, r9, #16
10017444:	e547      	b.n	10016ed6 <_svfprintf_r+0xae>
10017446:	bf00      	nop
10017448:	7fefffff 	.word	0x7fefffff
1001744c:	1001ea2c 	.word	0x1001ea2c
10017450:	1001ea30 	.word	0x1001ea30
10017454:	1001ec7c 	.word	0x1001ec7c
10017458:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001745a:	940f      	str	r4, [sp, #60]	@ 0x3c
1001745c:	f852 3b04 	ldr.w	r3, [r2], #4
10017460:	920d      	str	r2, [sp, #52]	@ 0x34
10017462:	f647 0230 	movw	r2, #30768	@ 0x7830
10017466:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
1001746a:	2078      	movs	r0, #120	@ 0x78
1001746c:	4aa8      	ldr	r2, [pc, #672]	@ (10017710 <_svfprintf_r+0x8e8>)
1001746e:	9219      	str	r2, [sp, #100]	@ 0x64
10017470:	f049 0402 	orr.w	r4, r9, #2
10017474:	2200      	movs	r2, #0
10017476:	2102      	movs	r1, #2
10017478:	900e      	str	r0, [sp, #56]	@ 0x38
1001747a:	e7a4      	b.n	100173c6 <_svfprintf_r+0x59e>
1001747c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017480:	f049 0410 	orr.w	r4, r9, #16
10017484:	f014 0220 	ands.w	r2, r4, #32
10017488:	f000 8355 	beq.w	10017b36 <_svfprintf_r+0xd0e>
1001748c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001748e:	3307      	adds	r3, #7
10017490:	f023 0307 	bic.w	r3, r3, #7
10017494:	4619      	mov	r1, r3
10017496:	685a      	ldr	r2, [r3, #4]
10017498:	f851 3b08 	ldr.w	r3, [r1], #8
1001749c:	910d      	str	r1, [sp, #52]	@ 0x34
1001749e:	2101      	movs	r1, #1
100174a0:	e791      	b.n	100173c6 <_svfprintf_r+0x59e>
100174a2:	7823      	ldrb	r3, [r4, #0]
100174a4:	f049 0908 	orr.w	r9, r9, #8
100174a8:	e515      	b.n	10016ed6 <_svfprintf_r+0xae>
100174aa:	7823      	ldrb	r3, [r4, #0]
100174ac:	f049 0901 	orr.w	r9, r9, #1
100174b0:	e511      	b.n	10016ed6 <_svfprintf_r+0xae>
100174b2:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100174b6:	7823      	ldrb	r3, [r4, #0]
100174b8:	2a00      	cmp	r2, #0
100174ba:	f47f ad0c 	bne.w	10016ed6 <_svfprintf_r+0xae>
100174be:	2220      	movs	r2, #32
100174c0:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100174c4:	e507      	b.n	10016ed6 <_svfprintf_r+0xae>
100174c6:	7823      	ldrb	r3, [r4, #0]
100174c8:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
100174cc:	e503      	b.n	10016ed6 <_svfprintf_r+0xae>
100174ce:	4621      	mov	r1, r4
100174d0:	f811 3b01 	ldrb.w	r3, [r1], #1
100174d4:	2b2a      	cmp	r3, #42	@ 0x2a
100174d6:	f001 822b 	beq.w	10018930 <_svfprintf_r+0x1b08>
100174da:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100174de:	2a09      	cmp	r2, #9
100174e0:	460c      	mov	r4, r1
100174e2:	bf98      	it	ls
100174e4:	2100      	movls	r1, #0
100174e6:	f201 8132 	bhi.w	1001874e <_svfprintf_r+0x1926>
100174ea:	f814 3b01 	ldrb.w	r3, [r4], #1
100174ee:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100174f2:	eb02 0141 	add.w	r1, r2, r1, lsl #1
100174f6:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100174fa:	2a09      	cmp	r2, #9
100174fc:	d9f5      	bls.n	100174ea <_svfprintf_r+0x6c2>
100174fe:	9108      	str	r1, [sp, #32]
10017500:	e4ea      	b.n	10016ed8 <_svfprintf_r+0xb0>
10017502:	f049 0910 	orr.w	r9, r9, #16
10017506:	f019 0f20 	tst.w	r9, #32
1001750a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001750e:	f47f af13 	bne.w	10017338 <_svfprintf_r+0x510>
10017512:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10017514:	f019 0f10 	tst.w	r9, #16
10017518:	f852 3b04 	ldr.w	r3, [r2], #4
1001751c:	920d      	str	r2, [sp, #52]	@ 0x34
1001751e:	f040 8360 	bne.w	10017be2 <_svfprintf_r+0xdba>
10017522:	f019 0f40 	tst.w	r9, #64	@ 0x40
10017526:	f000 8358 	beq.w	10017bda <_svfprintf_r+0xdb2>
1001752a:	f343 32c0 	sbfx	r2, r3, #15, #1
1001752e:	4611      	mov	r1, r2
10017530:	b21b      	sxth	r3, r3
10017532:	e70b      	b.n	1001734c <_svfprintf_r+0x524>
10017534:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10017536:	2b65      	cmp	r3, #101	@ 0x65
10017538:	f340 8166 	ble.w	10017808 <_svfprintf_r+0x9e0>
1001753c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10017540:	2200      	movs	r2, #0
10017542:	2300      	movs	r3, #0
10017544:	f006 fd34 	bl	1001dfb0 <__aeabi_dcmpeq>
10017548:	2800      	cmp	r0, #0
1001754a:	f000 8211 	beq.w	10017970 <_svfprintf_r+0xb48>
1001754e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017550:	4a70      	ldr	r2, [pc, #448]	@ (10017714 <_svfprintf_r+0x8ec>)
10017552:	f8c8 2000 	str.w	r2, [r8]
10017556:	3301      	adds	r3, #1
10017558:	3401      	adds	r4, #1
1001755a:	2201      	movs	r2, #1
1001755c:	2b07      	cmp	r3, #7
1001755e:	9434      	str	r4, [sp, #208]	@ 0xd0
10017560:	9333      	str	r3, [sp, #204]	@ 0xcc
10017562:	f8c8 2004 	str.w	r2, [r8, #4]
10017566:	f300 856b 	bgt.w	10018040 <_svfprintf_r+0x1218>
1001756a:	f108 0808 	add.w	r8, r8, #8
1001756e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10017570:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10017572:	4293      	cmp	r3, r2
10017574:	f280 8326 	bge.w	10017bc4 <_svfprintf_r+0xd9c>
10017578:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001757a:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001757c:	441c      	add	r4, r3
1001757e:	e9c8 2300 	strd	r2, r3, [r8]
10017582:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017584:	9434      	str	r4, [sp, #208]	@ 0xd0
10017586:	3301      	adds	r3, #1
10017588:	2b07      	cmp	r3, #7
1001758a:	9333      	str	r3, [sp, #204]	@ 0xcc
1001758c:	f300 83e4 	bgt.w	10017d58 <_svfprintf_r+0xf30>
10017590:	f108 0808 	add.w	r8, r8, #8
10017594:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10017596:	1e5d      	subs	r5, r3, #1
10017598:	2d00      	cmp	r5, #0
1001759a:	f77f adc2 	ble.w	10017122 <_svfprintf_r+0x2fa>
1001759e:	2d10      	cmp	r5, #16
100175a0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100175a2:	f340 85ae 	ble.w	10018102 <_svfprintf_r+0x12da>
100175a6:	4f5c      	ldr	r7, [pc, #368]	@ (10017718 <_svfprintf_r+0x8f0>)
100175a8:	f8dd b01c 	ldr.w	fp, [sp, #28]
100175ac:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
100175b0:	9715      	str	r7, [sp, #84]	@ 0x54
100175b2:	2610      	movs	r6, #16
100175b4:	e005      	b.n	100175c2 <_svfprintf_r+0x79a>
100175b6:	f108 0808 	add.w	r8, r8, #8
100175ba:	3d10      	subs	r5, #16
100175bc:	2d10      	cmp	r5, #16
100175be:	f340 85a2 	ble.w	10018106 <_svfprintf_r+0x12de>
100175c2:	3301      	adds	r3, #1
100175c4:	3410      	adds	r4, #16
100175c6:	2b07      	cmp	r3, #7
100175c8:	e9c8 7600 	strd	r7, r6, [r8]
100175cc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100175d0:	ddf1      	ble.n	100175b6 <_svfprintf_r+0x78e>
100175d2:	aa32      	add	r2, sp, #200	@ 0xc8
100175d4:	4651      	mov	r1, sl
100175d6:	4658      	mov	r0, fp
100175d8:	f005 fef0 	bl	1001d3bc <__ssprint_r>
100175dc:	2800      	cmp	r0, #0
100175de:	f040 82c0 	bne.w	10017b62 <_svfprintf_r+0xd3a>
100175e2:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100175e6:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100175ea:	e7e6      	b.n	100175ba <_svfprintf_r+0x792>
100175ec:	464c      	mov	r4, r9
100175ee:	2901      	cmp	r1, #1
100175f0:	f000 8151 	beq.w	10017896 <_svfprintf_r+0xa6e>
100175f4:	2902      	cmp	r1, #2
100175f6:	ad5e      	add	r5, sp, #376	@ 0x178
100175f8:	d11e      	bne.n	10017638 <_svfprintf_r+0x810>
100175fa:	9819      	ldr	r0, [sp, #100]	@ 0x64
100175fc:	f003 010f 	and.w	r1, r3, #15
10017600:	091b      	lsrs	r3, r3, #4
10017602:	5c41      	ldrb	r1, [r0, r1]
10017604:	f805 1d01 	strb.w	r1, [r5, #-1]!
10017608:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
1001760c:	0912      	lsrs	r2, r2, #4
1001760e:	ea53 0102 	orrs.w	r1, r3, r2
10017612:	d1f3      	bne.n	100175fc <_svfprintf_r+0x7d4>
10017614:	ab5e      	add	r3, sp, #376	@ 0x178
10017616:	46a1      	mov	r9, r4
10017618:	eba3 0b05 	sub.w	fp, r3, r5
1001761c:	9908      	ldr	r1, [sp, #32]
1001761e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10017622:	4559      	cmp	r1, fp
10017624:	f04f 0300 	mov.w	r3, #0
10017628:	bfb8      	it	lt
1001762a:	4659      	movlt	r1, fp
1001762c:	930c      	str	r3, [sp, #48]	@ 0x30
1001762e:	9106      	str	r1, [sp, #24]
10017630:	9314      	str	r3, [sp, #80]	@ 0x50
10017632:	9310      	str	r3, [sp, #64]	@ 0x40
10017634:	9312      	str	r3, [sp, #72]	@ 0x48
10017636:	e5d5      	b.n	100171e4 <_svfprintf_r+0x3bc>
10017638:	f003 0107 	and.w	r1, r3, #7
1001763c:	08db      	lsrs	r3, r3, #3
1001763e:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
10017642:	08d2      	lsrs	r2, r2, #3
10017644:	3130      	adds	r1, #48	@ 0x30
10017646:	ea53 0602 	orrs.w	r6, r3, r2
1001764a:	4628      	mov	r0, r5
1001764c:	f805 1d01 	strb.w	r1, [r5, #-1]!
10017650:	d1f2      	bne.n	10017638 <_svfprintf_r+0x810>
10017652:	07e6      	lsls	r6, r4, #31
10017654:	d5de      	bpl.n	10017614 <_svfprintf_r+0x7ec>
10017656:	2930      	cmp	r1, #48	@ 0x30
10017658:	d0dc      	beq.n	10017614 <_svfprintf_r+0x7ec>
1001765a:	2330      	movs	r3, #48	@ 0x30
1001765c:	3802      	subs	r0, #2
1001765e:	f805 3c01 	strb.w	r3, [r5, #-1]
10017662:	ab5e      	add	r3, sp, #376	@ 0x178
10017664:	46a1      	mov	r9, r4
10017666:	eba3 0b00 	sub.w	fp, r3, r0
1001766a:	4605      	mov	r5, r0
1001766c:	e7d6      	b.n	1001761c <_svfprintf_r+0x7f4>
1001766e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10017670:	9a06      	ldr	r2, [sp, #24]
10017672:	1a9e      	subs	r6, r3, r2
10017674:	2e00      	cmp	r6, #0
10017676:	f77f ad3c 	ble.w	100170f2 <_svfprintf_r+0x2ca>
1001767a:	2e10      	cmp	r6, #16
1001767c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001767e:	f341 80a1 	ble.w	100187c4 <_svfprintf_r+0x199c>
10017682:	4825      	ldr	r0, [pc, #148]	@ (10017718 <_svfprintf_r+0x8f0>)
10017684:	f8dd a01c 	ldr.w	sl, [sp, #28]
10017688:	9015      	str	r0, [sp, #84]	@ 0x54
1001768a:	4621      	mov	r1, r4
1001768c:	2710      	movs	r7, #16
1001768e:	461a      	mov	r2, r3
10017690:	4604      	mov	r4, r0
10017692:	e004      	b.n	1001769e <_svfprintf_r+0x876>
10017694:	3e10      	subs	r6, #16
10017696:	2e10      	cmp	r6, #16
10017698:	f108 0808 	add.w	r8, r8, #8
1001769c:	dd16      	ble.n	100176cc <_svfprintf_r+0x8a4>
1001769e:	3201      	adds	r2, #1
100176a0:	3110      	adds	r1, #16
100176a2:	2a07      	cmp	r2, #7
100176a4:	e9c8 4700 	strd	r4, r7, [r8]
100176a8:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
100176ac:	ddf2      	ble.n	10017694 <_svfprintf_r+0x86c>
100176ae:	9909      	ldr	r1, [sp, #36]	@ 0x24
100176b0:	aa32      	add	r2, sp, #200	@ 0xc8
100176b2:	4650      	mov	r0, sl
100176b4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100176b8:	f005 fe80 	bl	1001d3bc <__ssprint_r>
100176bc:	2800      	cmp	r0, #0
100176be:	f040 84b2 	bne.w	10018026 <_svfprintf_r+0x11fe>
100176c2:	3e10      	subs	r6, #16
100176c4:	2e10      	cmp	r6, #16
100176c6:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
100176ca:	dce8      	bgt.n	1001769e <_svfprintf_r+0x876>
100176cc:	460c      	mov	r4, r1
100176ce:	4613      	mov	r3, r2
100176d0:	3301      	adds	r3, #1
100176d2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100176d4:	f8c8 2000 	str.w	r2, [r8]
100176d8:	4434      	add	r4, r6
100176da:	2b07      	cmp	r3, #7
100176dc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100176e0:	f8c8 6004 	str.w	r6, [r8, #4]
100176e4:	f300 851d 	bgt.w	10018122 <_svfprintf_r+0x12fa>
100176e8:	9b08      	ldr	r3, [sp, #32]
100176ea:	eba3 060b 	sub.w	r6, r3, fp
100176ee:	2e00      	cmp	r6, #0
100176f0:	f108 0808 	add.w	r8, r8, #8
100176f4:	f77f ad03 	ble.w	100170fe <_svfprintf_r+0x2d6>
100176f8:	4a07      	ldr	r2, [pc, #28]	@ (10017718 <_svfprintf_r+0x8f0>)
100176fa:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100176fc:	9215      	str	r2, [sp, #84]	@ 0x54
100176fe:	2e10      	cmp	r6, #16
10017700:	dd2a      	ble.n	10017758 <_svfprintf_r+0x930>
10017702:	4622      	mov	r2, r4
10017704:	9f07      	ldr	r7, [sp, #28]
10017706:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10017708:	f04f 0a10 	mov.w	sl, #16
1001770c:	e00b      	b.n	10017726 <_svfprintf_r+0x8fe>
1001770e:	bf00      	nop
10017710:	1001e6a8 	.word	0x1001e6a8
10017714:	1001ea58 	.word	0x1001ea58
10017718:	1001ec6c 	.word	0x1001ec6c
1001771c:	3e10      	subs	r6, #16
1001771e:	2e10      	cmp	r6, #16
10017720:	f108 0808 	add.w	r8, r8, #8
10017724:	dd17      	ble.n	10017756 <_svfprintf_r+0x92e>
10017726:	3301      	adds	r3, #1
10017728:	498e      	ldr	r1, [pc, #568]	@ (10017964 <_svfprintf_r+0xb3c>)
1001772a:	3210      	adds	r2, #16
1001772c:	2b07      	cmp	r3, #7
1001772e:	e9c8 1a00 	strd	r1, sl, [r8]
10017732:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
10017736:	ddf1      	ble.n	1001771c <_svfprintf_r+0x8f4>
10017738:	aa32      	add	r2, sp, #200	@ 0xc8
1001773a:	4621      	mov	r1, r4
1001773c:	4638      	mov	r0, r7
1001773e:	f005 fe3d 	bl	1001d3bc <__ssprint_r>
10017742:	2800      	cmp	r0, #0
10017744:	f040 820c 	bne.w	10017b60 <_svfprintf_r+0xd38>
10017748:	3e10      	subs	r6, #16
1001774a:	2e10      	cmp	r6, #16
1001774c:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
10017750:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017754:	dce7      	bgt.n	10017726 <_svfprintf_r+0x8fe>
10017756:	4614      	mov	r4, r2
10017758:	3301      	adds	r3, #1
1001775a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001775c:	f8c8 2000 	str.w	r2, [r8]
10017760:	4434      	add	r4, r6
10017762:	2b07      	cmp	r3, #7
10017764:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017768:	f8c8 6004 	str.w	r6, [r8, #4]
1001776c:	f300 81c7 	bgt.w	10017afe <_svfprintf_r+0xcd6>
10017770:	f108 0808 	add.w	r8, r8, #8
10017774:	e4c3      	b.n	100170fe <_svfprintf_r+0x2d6>
10017776:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017778:	9807      	ldr	r0, [sp, #28]
1001777a:	aa32      	add	r2, sp, #200	@ 0xc8
1001777c:	f005 fe1e 	bl	1001d3bc <__ssprint_r>
10017780:	2800      	cmp	r0, #0
10017782:	f43f ace2 	beq.w	1001714a <_svfprintf_r+0x322>
10017786:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001778a:	e1ea      	b.n	10017b62 <_svfprintf_r+0xd3a>
1001778c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001778e:	4976      	ldr	r1, [pc, #472]	@ (10017968 <_svfprintf_r+0xb40>)
10017790:	f8c8 1000 	str.w	r1, [r8]
10017794:	3301      	adds	r3, #1
10017796:	3401      	adds	r4, #1
10017798:	2101      	movs	r1, #1
1001779a:	2b07      	cmp	r3, #7
1001779c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001779e:	9333      	str	r3, [sp, #204]	@ 0xcc
100177a0:	f8c8 1004 	str.w	r1, [r8, #4]
100177a4:	f300 8574 	bgt.w	10018290 <_svfprintf_r+0x1468>
100177a8:	f108 0808 	add.w	r8, r8, #8
100177ac:	2a00      	cmp	r2, #0
100177ae:	f040 84e6 	bne.w	1001817e <_svfprintf_r+0x1356>
100177b2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100177b4:	f009 0301 	and.w	r3, r9, #1
100177b8:	4313      	orrs	r3, r2
100177ba:	f43f acb2 	beq.w	10017122 <_svfprintf_r+0x2fa>
100177be:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100177c0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100177c2:	441c      	add	r4, r3
100177c4:	e9c8 2300 	strd	r2, r3, [r8]
100177c8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100177ca:	9434      	str	r4, [sp, #208]	@ 0xd0
100177cc:	3301      	adds	r3, #1
100177ce:	2b07      	cmp	r3, #7
100177d0:	9333      	str	r3, [sp, #204]	@ 0xcc
100177d2:	f300 8645 	bgt.w	10018460 <_svfprintf_r+0x1638>
100177d6:	f108 0808 	add.w	r8, r8, #8
100177da:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100177dc:	f8c8 5000 	str.w	r5, [r8]
100177e0:	3301      	adds	r3, #1
100177e2:	4414      	add	r4, r2
100177e4:	2b07      	cmp	r3, #7
100177e6:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100177ea:	f8c8 2004 	str.w	r2, [r8, #4]
100177ee:	f77f ac96 	ble.w	1001711e <_svfprintf_r+0x2f6>
100177f2:	9909      	ldr	r1, [sp, #36]	@ 0x24
100177f4:	9807      	ldr	r0, [sp, #28]
100177f6:	aa32      	add	r2, sp, #200	@ 0xc8
100177f8:	f005 fde0 	bl	1001d3bc <__ssprint_r>
100177fc:	2800      	cmp	r0, #0
100177fe:	d1c2      	bne.n	10017786 <_svfprintf_r+0x95e>
10017800:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017802:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017806:	e48c      	b.n	10017122 <_svfprintf_r+0x2fa>
10017808:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001780a:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
1001780c:	2b01      	cmp	r3, #1
1001780e:	f104 0401 	add.w	r4, r4, #1
10017812:	f106 0601 	add.w	r6, r6, #1
10017816:	f108 0708 	add.w	r7, r8, #8
1001781a:	f340 8129 	ble.w	10017a70 <_svfprintf_r+0xc48>
1001781e:	2301      	movs	r3, #1
10017820:	2e07      	cmp	r6, #7
10017822:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017826:	f8c8 5000 	str.w	r5, [r8]
1001782a:	f8c8 3004 	str.w	r3, [r8, #4]
1001782e:	f300 81b1 	bgt.w	10017b94 <_svfprintf_r+0xd6c>
10017832:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10017834:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10017836:	3601      	adds	r6, #1
10017838:	441c      	add	r4, r3
1001783a:	2e07      	cmp	r6, #7
1001783c:	e9c7 2300 	strd	r2, r3, [r7]
10017840:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017844:	f300 81b2 	bgt.w	10017bac <_svfprintf_r+0xd84>
10017848:	3708      	adds	r7, #8
1001784a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001784c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10017850:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
10017854:	2200      	movs	r2, #0
10017856:	2300      	movs	r3, #0
10017858:	f006 fbaa 	bl	1001dfb0 <__aeabi_dcmpeq>
1001785c:	2800      	cmp	r0, #0
1001785e:	f040 8121 	bne.w	10017aa4 <_svfprintf_r+0xc7c>
10017862:	3601      	adds	r6, #1
10017864:	3501      	adds	r5, #1
10017866:	4444      	add	r4, r8
10017868:	2e07      	cmp	r6, #7
1001786a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001786e:	603d      	str	r5, [r7, #0]
10017870:	f8c7 8004 	str.w	r8, [r7, #4]
10017874:	f300 810a 	bgt.w	10017a8c <_svfprintf_r+0xc64>
10017878:	3708      	adds	r7, #8
1001787a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001787c:	607b      	str	r3, [r7, #4]
1001787e:	3601      	adds	r6, #1
10017880:	441c      	add	r4, r3
10017882:	2e07      	cmp	r6, #7
10017884:	ab2c      	add	r3, sp, #176	@ 0xb0
10017886:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001788a:	603b      	str	r3, [r7, #0]
1001788c:	dcb1      	bgt.n	100177f2 <_svfprintf_r+0x9ca>
1001788e:	f107 0808 	add.w	r8, r7, #8
10017892:	e446      	b.n	10017122 <_svfprintf_r+0x2fa>
10017894:	464c      	mov	r4, r9
10017896:	2b0a      	cmp	r3, #10
10017898:	f172 0100 	sbcs.w	r1, r2, #0
1001789c:	f080 8353 	bcs.w	10017f46 <_svfprintf_r+0x111e>
100178a0:	3330      	adds	r3, #48	@ 0x30
100178a2:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
100178a6:	46a1      	mov	r9, r4
100178a8:	f04f 0b01 	mov.w	fp, #1
100178ac:	f20d 1577 	addw	r5, sp, #375	@ 0x177
100178b0:	e6b4      	b.n	1001761c <_svfprintf_r+0x7f4>
100178b2:	9909      	ldr	r1, [sp, #36]	@ 0x24
100178b4:	9807      	ldr	r0, [sp, #28]
100178b6:	aa32      	add	r2, sp, #200	@ 0xc8
100178b8:	f005 fd80 	bl	1001d3bc <__ssprint_r>
100178bc:	2800      	cmp	r0, #0
100178be:	f47f af62 	bne.w	10017786 <_svfprintf_r+0x95e>
100178c2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100178c4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100178c8:	e410      	b.n	100170ec <_svfprintf_r+0x2c4>
100178ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
100178cc:	9807      	ldr	r0, [sp, #28]
100178ce:	9315      	str	r3, [sp, #84]	@ 0x54
100178d0:	aa32      	add	r2, sp, #200	@ 0xc8
100178d2:	f005 fd73 	bl	1001d3bc <__ssprint_r>
100178d6:	2800      	cmp	r0, #0
100178d8:	f47f af55 	bne.w	10017786 <_svfprintf_r+0x95e>
100178dc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100178de:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100178e0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100178e4:	f7ff bbf0 	b.w	100170c8 <_svfprintf_r+0x2a0>
100178e8:	2d10      	cmp	r5, #16
100178ea:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100178ec:	f340 8733 	ble.w	10018756 <_svfprintf_r+0x192e>
100178f0:	4f1e      	ldr	r7, [pc, #120]	@ (1001796c <_svfprintf_r+0xb44>)
100178f2:	f8dd 901c 	ldr.w	r9, [sp, #28]
100178f6:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
100178fa:	9715      	str	r7, [sp, #84]	@ 0x54
100178fc:	2610      	movs	r6, #16
100178fe:	e004      	b.n	1001790a <_svfprintf_r+0xae2>
10017900:	3d10      	subs	r5, #16
10017902:	2d10      	cmp	r5, #16
10017904:	f108 0808 	add.w	r8, r8, #8
10017908:	dd16      	ble.n	10017938 <_svfprintf_r+0xb10>
1001790a:	3301      	adds	r3, #1
1001790c:	3410      	adds	r4, #16
1001790e:	2b07      	cmp	r3, #7
10017910:	e9c8 7600 	strd	r7, r6, [r8]
10017914:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017918:	ddf2      	ble.n	10017900 <_svfprintf_r+0xad8>
1001791a:	aa32      	add	r2, sp, #200	@ 0xc8
1001791c:	4651      	mov	r1, sl
1001791e:	4648      	mov	r0, r9
10017920:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017924:	f005 fd4a 	bl	1001d3bc <__ssprint_r>
10017928:	2800      	cmp	r0, #0
1001792a:	f040 83e8 	bne.w	100180fe <_svfprintf_r+0x12d6>
1001792e:	3d10      	subs	r5, #16
10017930:	2d10      	cmp	r5, #16
10017932:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10017936:	dce8      	bgt.n	1001790a <_svfprintf_r+0xae2>
10017938:	3301      	adds	r3, #1
1001793a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001793c:	442c      	add	r4, r5
1001793e:	2b07      	cmp	r3, #7
10017940:	e9c8 2500 	strd	r2, r5, [r8]
10017944:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017948:	f77f abf4 	ble.w	10017134 <_svfprintf_r+0x30c>
1001794c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001794e:	9807      	ldr	r0, [sp, #28]
10017950:	aa32      	add	r2, sp, #200	@ 0xc8
10017952:	f005 fd33 	bl	1001d3bc <__ssprint_r>
10017956:	2800      	cmp	r0, #0
10017958:	f47f af15 	bne.w	10017786 <_svfprintf_r+0x95e>
1001795c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001795e:	f7ff bbe9 	b.w	10017134 <_svfprintf_r+0x30c>
10017962:	bf00      	nop
10017964:	1001ec6c 	.word	0x1001ec6c
10017968:	1001ea58 	.word	0x1001ea58
1001796c:	1001ec7c 	.word	0x1001ec7c
10017970:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10017972:	2a00      	cmp	r2, #0
10017974:	f77f af0a 	ble.w	1001778c <_svfprintf_r+0x964>
10017978:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
1001797c:	429f      	cmp	r7, r3
1001797e:	bfa8      	it	ge
10017980:	461f      	movge	r7, r3
10017982:	2f00      	cmp	r7, #0
10017984:	eb05 0b03 	add.w	fp, r5, r3
10017988:	dd0b      	ble.n	100179a2 <_svfprintf_r+0xb7a>
1001798a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001798c:	3301      	adds	r3, #1
1001798e:	443c      	add	r4, r7
10017990:	2b07      	cmp	r3, #7
10017992:	e9c8 5700 	strd	r5, r7, [r8]
10017996:	9434      	str	r4, [sp, #208]	@ 0xd0
10017998:	9333      	str	r3, [sp, #204]	@ 0xcc
1001799a:	f300 8642 	bgt.w	10018622 <_svfprintf_r+0x17fa>
1001799e:	f108 0808 	add.w	r8, r8, #8
100179a2:	9e12      	ldr	r6, [sp, #72]	@ 0x48
100179a4:	2f00      	cmp	r7, #0
100179a6:	bfa8      	it	ge
100179a8:	1bf6      	subge	r6, r6, r7
100179aa:	2e00      	cmp	r6, #0
100179ac:	f300 8200 	bgt.w	10017db0 <_svfprintf_r+0xf88>
100179b0:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
100179b4:	f419 6f80 	tst.w	r9, #1024	@ 0x400
100179b8:	44aa      	add	sl, r5
100179ba:	f040 8221 	bne.w	10017e00 <_svfprintf_r+0xfd8>
100179be:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100179c0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100179c2:	429d      	cmp	r5, r3
100179c4:	db03      	blt.n	100179ce <_svfprintf_r+0xba6>
100179c6:	f019 0f01 	tst.w	r9, #1
100179ca:	f000 846f 	beq.w	100182ac <_svfprintf_r+0x1484>
100179ce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100179d0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100179d2:	441c      	add	r4, r3
100179d4:	e9c8 2300 	strd	r2, r3, [r8]
100179d8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100179da:	9434      	str	r4, [sp, #208]	@ 0xd0
100179dc:	3301      	adds	r3, #1
100179de:	2b07      	cmp	r3, #7
100179e0:	9333      	str	r3, [sp, #204]	@ 0xcc
100179e2:	f300 8675 	bgt.w	100186d0 <_svfprintf_r+0x18a8>
100179e6:	f108 0808 	add.w	r8, r8, #8
100179ea:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100179ec:	ebab 060a 	sub.w	r6, fp, sl
100179f0:	1b5d      	subs	r5, r3, r5
100179f2:	42ae      	cmp	r6, r5
100179f4:	bfa8      	it	ge
100179f6:	462e      	movge	r6, r5
100179f8:	2e00      	cmp	r6, #0
100179fa:	dd0d      	ble.n	10017a18 <_svfprintf_r+0xbf0>
100179fc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100179fe:	f8c8 a000 	str.w	sl, [r8]
10017a02:	3301      	adds	r3, #1
10017a04:	4434      	add	r4, r6
10017a06:	2b07      	cmp	r3, #7
10017a08:	f8c8 6004 	str.w	r6, [r8, #4]
10017a0c:	9434      	str	r4, [sp, #208]	@ 0xd0
10017a0e:	9333      	str	r3, [sp, #204]	@ 0xcc
10017a10:	f300 8670 	bgt.w	100186f4 <_svfprintf_r+0x18cc>
10017a14:	f108 0808 	add.w	r8, r8, #8
10017a18:	2e00      	cmp	r6, #0
10017a1a:	bfa8      	it	ge
10017a1c:	1bad      	subge	r5, r5, r6
10017a1e:	2d00      	cmp	r5, #0
10017a20:	f77f ab7f 	ble.w	10017122 <_svfprintf_r+0x2fa>
10017a24:	2d10      	cmp	r5, #16
10017a26:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017a28:	f340 836b 	ble.w	10018102 <_svfprintf_r+0x12da>
10017a2c:	4fad      	ldr	r7, [pc, #692]	@ (10017ce4 <_svfprintf_r+0xebc>)
10017a2e:	f8dd b01c 	ldr.w	fp, [sp, #28]
10017a32:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10017a36:	9715      	str	r7, [sp, #84]	@ 0x54
10017a38:	2610      	movs	r6, #16
10017a3a:	e005      	b.n	10017a48 <_svfprintf_r+0xc20>
10017a3c:	f108 0808 	add.w	r8, r8, #8
10017a40:	3d10      	subs	r5, #16
10017a42:	2d10      	cmp	r5, #16
10017a44:	f340 835f 	ble.w	10018106 <_svfprintf_r+0x12de>
10017a48:	3301      	adds	r3, #1
10017a4a:	3410      	adds	r4, #16
10017a4c:	2b07      	cmp	r3, #7
10017a4e:	e9c8 7600 	strd	r7, r6, [r8]
10017a52:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017a56:	ddf1      	ble.n	10017a3c <_svfprintf_r+0xc14>
10017a58:	aa32      	add	r2, sp, #200	@ 0xc8
10017a5a:	4651      	mov	r1, sl
10017a5c:	4658      	mov	r0, fp
10017a5e:	f005 fcad 	bl	1001d3bc <__ssprint_r>
10017a62:	2800      	cmp	r0, #0
10017a64:	d17d      	bne.n	10017b62 <_svfprintf_r+0xd3a>
10017a66:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10017a6a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017a6e:	e7e7      	b.n	10017a40 <_svfprintf_r+0xc18>
10017a70:	f019 0f01 	tst.w	r9, #1
10017a74:	f47f aed3 	bne.w	1001781e <_svfprintf_r+0x9f6>
10017a78:	2301      	movs	r3, #1
10017a7a:	2e07      	cmp	r6, #7
10017a7c:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017a80:	f8c8 5000 	str.w	r5, [r8]
10017a84:	f8c8 3004 	str.w	r3, [r8, #4]
10017a88:	f77f aef7 	ble.w	1001787a <_svfprintf_r+0xa52>
10017a8c:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017a8e:	9807      	ldr	r0, [sp, #28]
10017a90:	aa32      	add	r2, sp, #200	@ 0xc8
10017a92:	f005 fc93 	bl	1001d3bc <__ssprint_r>
10017a96:	2800      	cmp	r0, #0
10017a98:	f47f ae75 	bne.w	10017786 <_svfprintf_r+0x95e>
10017a9c:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017aa0:	af35      	add	r7, sp, #212	@ 0xd4
10017aa2:	e6ea      	b.n	1001787a <_svfprintf_r+0xa52>
10017aa4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10017aa6:	2b01      	cmp	r3, #1
10017aa8:	f77f aee7 	ble.w	1001787a <_svfprintf_r+0xa52>
10017aac:	2b11      	cmp	r3, #17
10017aae:	4b8d      	ldr	r3, [pc, #564]	@ (10017ce4 <_svfprintf_r+0xebc>)
10017ab0:	9315      	str	r3, [sp, #84]	@ 0x54
10017ab2:	f340 8358 	ble.w	10018166 <_svfprintf_r+0x133e>
10017ab6:	f8cd 9020 	str.w	r9, [sp, #32]
10017aba:	f8dd a01c 	ldr.w	sl, [sp, #28]
10017abe:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10017ac2:	2510      	movs	r5, #16
10017ac4:	4699      	mov	r9, r3
10017ac6:	e006      	b.n	10017ad6 <_svfprintf_r+0xcae>
10017ac8:	3708      	adds	r7, #8
10017aca:	f1a8 0810 	sub.w	r8, r8, #16
10017ace:	f1b8 0f10 	cmp.w	r8, #16
10017ad2:	f340 8346 	ble.w	10018162 <_svfprintf_r+0x133a>
10017ad6:	3601      	adds	r6, #1
10017ad8:	3410      	adds	r4, #16
10017ada:	2e07      	cmp	r6, #7
10017adc:	e9c7 9500 	strd	r9, r5, [r7]
10017ae0:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017ae4:	ddf0      	ble.n	10017ac8 <_svfprintf_r+0xca0>
10017ae6:	aa32      	add	r2, sp, #200	@ 0xc8
10017ae8:	4659      	mov	r1, fp
10017aea:	4650      	mov	r0, sl
10017aec:	f005 fc66 	bl	1001d3bc <__ssprint_r>
10017af0:	2800      	cmp	r0, #0
10017af2:	f040 8298 	bne.w	10018026 <_svfprintf_r+0x11fe>
10017af6:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017afa:	af35      	add	r7, sp, #212	@ 0xd4
10017afc:	e7e5      	b.n	10017aca <_svfprintf_r+0xca2>
10017afe:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017b00:	9807      	ldr	r0, [sp, #28]
10017b02:	aa32      	add	r2, sp, #200	@ 0xc8
10017b04:	f005 fc5a 	bl	1001d3bc <__ssprint_r>
10017b08:	2800      	cmp	r0, #0
10017b0a:	f47f ae3c 	bne.w	10017786 <_svfprintf_r+0x95e>
10017b0e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017b10:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017b14:	f7ff baf3 	b.w	100170fe <_svfprintf_r+0x2d6>
10017b18:	990d      	ldr	r1, [sp, #52]	@ 0x34
10017b1a:	f851 3b04 	ldr.w	r3, [r1], #4
10017b1e:	910d      	str	r1, [sp, #52]	@ 0x34
10017b20:	f019 0110 	ands.w	r1, r9, #16
10017b24:	f47f ac4c 	bne.w	100173c0 <_svfprintf_r+0x598>
10017b28:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10017b2c:	f000 8363 	beq.w	100181f6 <_svfprintf_r+0x13ce>
10017b30:	b29b      	uxth	r3, r3
10017b32:	460a      	mov	r2, r1
10017b34:	e444      	b.n	100173c0 <_svfprintf_r+0x598>
10017b36:	990d      	ldr	r1, [sp, #52]	@ 0x34
10017b38:	f851 3b04 	ldr.w	r3, [r1], #4
10017b3c:	910d      	str	r1, [sp, #52]	@ 0x34
10017b3e:	f014 0110 	ands.w	r1, r4, #16
10017b42:	d10b      	bne.n	10017b5c <_svfprintf_r+0xd34>
10017b44:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10017b48:	d003      	beq.n	10017b52 <_svfprintf_r+0xd2a>
10017b4a:	460a      	mov	r2, r1
10017b4c:	b29b      	uxth	r3, r3
10017b4e:	2101      	movs	r1, #1
10017b50:	e439      	b.n	100173c6 <_svfprintf_r+0x59e>
10017b52:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
10017b56:	bf1c      	itt	ne
10017b58:	b2db      	uxtbne	r3, r3
10017b5a:	4602      	movne	r2, r0
10017b5c:	2101      	movs	r1, #1
10017b5e:	e432      	b.n	100173c6 <_svfprintf_r+0x59e>
10017b60:	46bb      	mov	fp, r7
10017b62:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10017b64:	2b00      	cmp	r3, #0
10017b66:	f43f aa64 	beq.w	10017032 <_svfprintf_r+0x20a>
10017b6a:	990c      	ldr	r1, [sp, #48]	@ 0x30
10017b6c:	4658      	mov	r0, fp
10017b6e:	f7ff f847 	bl	10016c00 <_free_r>
10017b72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017b74:	899b      	ldrh	r3, [r3, #12]
10017b76:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10017b7a:	f7ff ba5e 	b.w	1001703a <_svfprintf_r+0x212>
10017b7e:	f8dd b020 	ldr.w	fp, [sp, #32]
10017b82:	ad5e      	add	r5, sp, #376	@ 0x178
10017b84:	e54a      	b.n	1001761c <_svfprintf_r+0x7f4>
10017b86:	425b      	negs	r3, r3
10017b88:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
10017b8c:	464c      	mov	r4, r9
10017b8e:	202d      	movs	r0, #45	@ 0x2d
10017b90:	2101      	movs	r1, #1
10017b92:	e419      	b.n	100173c8 <_svfprintf_r+0x5a0>
10017b94:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017b96:	9807      	ldr	r0, [sp, #28]
10017b98:	aa32      	add	r2, sp, #200	@ 0xc8
10017b9a:	f005 fc0f 	bl	1001d3bc <__ssprint_r>
10017b9e:	2800      	cmp	r0, #0
10017ba0:	f47f adf1 	bne.w	10017786 <_svfprintf_r+0x95e>
10017ba4:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017ba8:	af35      	add	r7, sp, #212	@ 0xd4
10017baa:	e642      	b.n	10017832 <_svfprintf_r+0xa0a>
10017bac:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017bae:	9807      	ldr	r0, [sp, #28]
10017bb0:	aa32      	add	r2, sp, #200	@ 0xc8
10017bb2:	f005 fc03 	bl	1001d3bc <__ssprint_r>
10017bb6:	2800      	cmp	r0, #0
10017bb8:	f47f ade5 	bne.w	10017786 <_svfprintf_r+0x95e>
10017bbc:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017bc0:	af35      	add	r7, sp, #212	@ 0xd4
10017bc2:	e642      	b.n	1001784a <_svfprintf_r+0xa22>
10017bc4:	f019 0f01 	tst.w	r9, #1
10017bc8:	f43f aaab 	beq.w	10017122 <_svfprintf_r+0x2fa>
10017bcc:	e4d4      	b.n	10017578 <_svfprintf_r+0x750>
10017bce:	930d      	str	r3, [sp, #52]	@ 0x34
10017bd0:	7823      	ldrb	r3, [r4, #0]
10017bd2:	f7ff b980 	b.w	10016ed6 <_svfprintf_r+0xae>
10017bd6:	ad5e      	add	r5, sp, #376	@ 0x178
10017bd8:	e520      	b.n	1001761c <_svfprintf_r+0x7f4>
10017bda:	f419 7f00 	tst.w	r9, #512	@ 0x200
10017bde:	f040 8374 	bne.w	100182ca <_svfprintf_r+0x14a2>
10017be2:	17da      	asrs	r2, r3, #31
10017be4:	4611      	mov	r1, r2
10017be6:	f7ff bbb1 	b.w	1001734c <_svfprintf_r+0x524>
10017bea:	f019 0f10 	tst.w	r9, #16
10017bee:	f040 82b2 	bne.w	10018156 <_svfprintf_r+0x132e>
10017bf2:	f019 0f40 	tst.w	r9, #64	@ 0x40
10017bf6:	f040 8362 	bne.w	100182be <_svfprintf_r+0x1496>
10017bfa:	f419 7f00 	tst.w	r9, #512	@ 0x200
10017bfe:	f000 82aa 	beq.w	10018156 <_svfprintf_r+0x132e>
10017c02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017c04:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10017c06:	681b      	ldr	r3, [r3, #0]
10017c08:	701a      	strb	r2, [r3, #0]
10017c0a:	e40e      	b.n	1001742a <_svfprintf_r+0x602>
10017c0c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
10017c0e:	7823      	ldrb	r3, [r4, #0]
10017c10:	2a00      	cmp	r2, #0
10017c12:	f43f a960 	beq.w	10016ed6 <_svfprintf_r+0xae>
10017c16:	7812      	ldrb	r2, [r2, #0]
10017c18:	2a00      	cmp	r2, #0
10017c1a:	f43f a95c 	beq.w	10016ed6 <_svfprintf_r+0xae>
10017c1e:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
10017c22:	f7ff b958 	b.w	10016ed6 <_svfprintf_r+0xae>
10017c26:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10017c2a:	4602      	mov	r2, r0
10017c2c:	460b      	mov	r3, r1
10017c2e:	f006 f9f1 	bl	1001e014 <__aeabi_dcmpun>
10017c32:	2800      	cmp	r0, #0
10017c34:	f040 860f 	bne.w	10018856 <_svfprintf_r+0x1a2e>
10017c38:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10017c3a:	2b61      	cmp	r3, #97	@ 0x61
10017c3c:	f000 8506 	beq.w	1001864c <_svfprintf_r+0x1824>
10017c40:	2b41      	cmp	r3, #65	@ 0x41
10017c42:	f000 8582 	beq.w	1001874a <_svfprintf_r+0x1922>
10017c46:	9b08      	ldr	r3, [sp, #32]
10017c48:	3301      	adds	r3, #1
10017c4a:	f000 8417 	beq.w	1001847c <_svfprintf_r+0x1654>
10017c4e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10017c50:	f023 0320 	bic.w	r3, r3, #32
10017c54:	2b47      	cmp	r3, #71	@ 0x47
10017c56:	d104      	bne.n	10017c62 <_svfprintf_r+0xe3a>
10017c58:	9b08      	ldr	r3, [sp, #32]
10017c5a:	2b00      	cmp	r3, #0
10017c5c:	bf08      	it	eq
10017c5e:	2301      	moveq	r3, #1
10017c60:	9308      	str	r3, [sp, #32]
10017c62:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
10017c66:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
10017c6a:	2a00      	cmp	r2, #0
10017c6c:	9015      	str	r0, [sp, #84]	@ 0x54
10017c6e:	f8cd 9018 	str.w	r9, [sp, #24]
10017c72:	f04f 0300 	mov.w	r3, #0
10017c76:	f2c0 8521 	blt.w	100186bc <_svfprintf_r+0x1894>
10017c7a:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
10017c7e:	931f      	str	r3, [sp, #124]	@ 0x7c
10017c80:	930c      	str	r3, [sp, #48]	@ 0x30
10017c82:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10017c84:	3b41      	subs	r3, #65	@ 0x41
10017c86:	2b25      	cmp	r3, #37	@ 0x25
10017c88:	f200 8328 	bhi.w	100182dc <_svfprintf_r+0x14b4>
10017c8c:	e8df f013 	tbh	[pc, r3, lsl #1]
10017c90:	03260401 	.word	0x03260401
10017c94:	03260326 	.word	0x03260326
10017c98:	03fe03fa 	.word	0x03fe03fa
10017c9c:	03260326 	.word	0x03260326
10017ca0:	03260326 	.word	0x03260326
10017ca4:	03260326 	.word	0x03260326
10017ca8:	03260326 	.word	0x03260326
10017cac:	03260326 	.word	0x03260326
10017cb0:	03260326 	.word	0x03260326
10017cb4:	03260326 	.word	0x03260326
10017cb8:	03260326 	.word	0x03260326
10017cbc:	03260326 	.word	0x03260326
10017cc0:	03260326 	.word	0x03260326
10017cc4:	03260326 	.word	0x03260326
10017cc8:	03260326 	.word	0x03260326
10017ccc:	03260326 	.word	0x03260326
10017cd0:	03260326 	.word	0x03260326
10017cd4:	03260326 	.word	0x03260326
10017cd8:	03fe03fa 	.word	0x03fe03fa
10017cdc:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017ce0:	f7ff bb61 	b.w	100173a6 <_svfprintf_r+0x57e>
10017ce4:	1001ec6c 	.word	0x1001ec6c
10017ce8:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017cec:	464c      	mov	r4, r9
10017cee:	f7ff bbc9 	b.w	10017484 <_svfprintf_r+0x65c>
10017cf2:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017cf6:	4bbd      	ldr	r3, [pc, #756]	@ (10017fec <_svfprintf_r+0x11c4>)
10017cf8:	9319      	str	r3, [sp, #100]	@ 0x64
10017cfa:	f019 0220 	ands.w	r2, r9, #32
10017cfe:	f000 8108 	beq.w	10017f12 <_svfprintf_r+0x10ea>
10017d02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017d04:	3307      	adds	r3, #7
10017d06:	f023 0307 	bic.w	r3, r3, #7
10017d0a:	4619      	mov	r1, r3
10017d0c:	685a      	ldr	r2, [r3, #4]
10017d0e:	f851 3b08 	ldr.w	r3, [r1], #8
10017d12:	910d      	str	r1, [sp, #52]	@ 0x34
10017d14:	f019 0f01 	tst.w	r9, #1
10017d18:	d00a      	beq.n	10017d30 <_svfprintf_r+0xf08>
10017d1a:	ea53 0102 	orrs.w	r1, r3, r2
10017d1e:	d007      	beq.n	10017d30 <_svfprintf_r+0xf08>
10017d20:	990e      	ldr	r1, [sp, #56]	@ 0x38
10017d22:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
10017d26:	2130      	movs	r1, #48	@ 0x30
10017d28:	f049 0902 	orr.w	r9, r9, #2
10017d2c:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10017d30:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10017d34:	2102      	movs	r1, #2
10017d36:	f7ff bb46 	b.w	100173c6 <_svfprintf_r+0x59e>
10017d3a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017d3e:	4bac      	ldr	r3, [pc, #688]	@ (10017ff0 <_svfprintf_r+0x11c8>)
10017d40:	9319      	str	r3, [sp, #100]	@ 0x64
10017d42:	e7da      	b.n	10017cfa <_svfprintf_r+0xed2>
10017d44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017d46:	681b      	ldr	r3, [r3, #0]
10017d48:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10017d4c:	2301      	movs	r3, #1
10017d4e:	9306      	str	r3, [sp, #24]
10017d50:	469b      	mov	fp, r3
10017d52:	ad45      	add	r5, sp, #276	@ 0x114
10017d54:	f7ff baae 	b.w	100172b4 <_svfprintf_r+0x48c>
10017d58:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017d5a:	9807      	ldr	r0, [sp, #28]
10017d5c:	aa32      	add	r2, sp, #200	@ 0xc8
10017d5e:	f005 fb2d 	bl	1001d3bc <__ssprint_r>
10017d62:	2800      	cmp	r0, #0
10017d64:	f47f ad0f 	bne.w	10017786 <_svfprintf_r+0x95e>
10017d68:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017d6a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017d6e:	e411      	b.n	10017594 <_svfprintf_r+0x76c>
10017d70:	2140      	movs	r1, #64	@ 0x40
10017d72:	4658      	mov	r0, fp
10017d74:	f7f9 f8cc 	bl	10010f10 <_malloc_r>
10017d78:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017d7a:	6018      	str	r0, [r3, #0]
10017d7c:	6118      	str	r0, [r3, #16]
10017d7e:	2800      	cmp	r0, #0
10017d80:	f000 8614 	beq.w	100189ac <_svfprintf_r+0x1b84>
10017d84:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10017d86:	2340      	movs	r3, #64	@ 0x40
10017d88:	6153      	str	r3, [r2, #20]
10017d8a:	f7ff b869 	b.w	10016e60 <_svfprintf_r+0x38>
10017d8e:	9b08      	ldr	r3, [sp, #32]
10017d90:	950c      	str	r5, [sp, #48]	@ 0x30
10017d92:	2b06      	cmp	r3, #6
10017d94:	4629      	mov	r1, r5
10017d96:	bf28      	it	cs
10017d98:	2306      	movcs	r3, #6
10017d9a:	9508      	str	r5, [sp, #32]
10017d9c:	462a      	mov	r2, r5
10017d9e:	9306      	str	r3, [sp, #24]
10017da0:	4d94      	ldr	r5, [pc, #592]	@ (10017ff4 <_svfprintf_r+0x11cc>)
10017da2:	960d      	str	r6, [sp, #52]	@ 0x34
10017da4:	469b      	mov	fp, r3
10017da6:	9114      	str	r1, [sp, #80]	@ 0x50
10017da8:	9110      	str	r1, [sp, #64]	@ 0x40
10017daa:	9112      	str	r1, [sp, #72]	@ 0x48
10017dac:	f7ff ba1a 	b.w	100171e4 <_svfprintf_r+0x3bc>
10017db0:	2e10      	cmp	r6, #16
10017db2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017db4:	f340 85eb 	ble.w	1001898e <_svfprintf_r+0x1b66>
10017db8:	488f      	ldr	r0, [pc, #572]	@ (10017ff8 <_svfprintf_r+0x11d0>)
10017dba:	f8dd a01c 	ldr.w	sl, [sp, #28]
10017dbe:	9015      	str	r0, [sp, #84]	@ 0x54
10017dc0:	4642      	mov	r2, r8
10017dc2:	4621      	mov	r1, r4
10017dc4:	46a8      	mov	r8, r5
10017dc6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10017dc8:	2710      	movs	r7, #16
10017dca:	4605      	mov	r5, r0
10017dcc:	e004      	b.n	10017dd8 <_svfprintf_r+0xfb0>
10017dce:	3208      	adds	r2, #8
10017dd0:	3e10      	subs	r6, #16
10017dd2:	2e10      	cmp	r6, #16
10017dd4:	f340 8224 	ble.w	10018220 <_svfprintf_r+0x13f8>
10017dd8:	3301      	adds	r3, #1
10017dda:	3110      	adds	r1, #16
10017ddc:	2b07      	cmp	r3, #7
10017dde:	e9c2 5700 	strd	r5, r7, [r2]
10017de2:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
10017de6:	ddf2      	ble.n	10017dce <_svfprintf_r+0xfa6>
10017de8:	aa32      	add	r2, sp, #200	@ 0xc8
10017dea:	4621      	mov	r1, r4
10017dec:	4650      	mov	r0, sl
10017dee:	f005 fae5 	bl	1001d3bc <__ssprint_r>
10017df2:	2800      	cmp	r0, #0
10017df4:	f040 8117 	bne.w	10018026 <_svfprintf_r+0x11fe>
10017df8:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
10017dfc:	aa35      	add	r2, sp, #212	@ 0xd4
10017dfe:	e7e7      	b.n	10017dd0 <_svfprintf_r+0xfa8>
10017e00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10017e02:	f8cd b020 	str.w	fp, [sp, #32]
10017e06:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
10017e0a:	4642      	mov	r2, r8
10017e0c:	4621      	mov	r1, r4
10017e0e:	4f7a      	ldr	r7, [pc, #488]	@ (10017ff8 <_svfprintf_r+0x11d0>)
10017e10:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
10017e14:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
10017e18:	f8dd b01c 	ldr.w	fp, [sp, #28]
10017e1c:	4654      	mov	r4, sl
10017e1e:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
10017e22:	b383      	cbz	r3, 10017e86 <_svfprintf_r+0x105e>
10017e24:	f1b9 0f00 	cmp.w	r9, #0
10017e28:	f000 80ff 	beq.w	1001802a <_svfprintf_r+0x1202>
10017e2c:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10017e30:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10017e32:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10017e34:	3001      	adds	r0, #1
10017e36:	4441      	add	r1, r8
10017e38:	2807      	cmp	r0, #7
10017e3a:	e9c2 3800 	strd	r3, r8, [r2]
10017e3e:	9134      	str	r1, [sp, #208]	@ 0xd0
10017e40:	9033      	str	r0, [sp, #204]	@ 0xcc
10017e42:	dc75      	bgt.n	10017f30 <_svfprintf_r+0x1108>
10017e44:	3208      	adds	r2, #8
10017e46:	9b08      	ldr	r3, [sp, #32]
10017e48:	f89a 0000 	ldrb.w	r0, [sl]
10017e4c:	1b1e      	subs	r6, r3, r4
10017e4e:	4286      	cmp	r6, r0
10017e50:	bfa8      	it	ge
10017e52:	4606      	movge	r6, r0
10017e54:	2e00      	cmp	r6, #0
10017e56:	dd0c      	ble.n	10017e72 <_svfprintf_r+0x104a>
10017e58:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10017e5a:	3001      	adds	r0, #1
10017e5c:	4431      	add	r1, r6
10017e5e:	2807      	cmp	r0, #7
10017e60:	e9c2 4600 	strd	r4, r6, [r2]
10017e64:	9134      	str	r1, [sp, #208]	@ 0xd0
10017e66:	9033      	str	r0, [sp, #204]	@ 0xcc
10017e68:	f300 8168 	bgt.w	1001813c <_svfprintf_r+0x1314>
10017e6c:	f89a 0000 	ldrb.w	r0, [sl]
10017e70:	3208      	adds	r2, #8
10017e72:	2e00      	cmp	r6, #0
10017e74:	bfac      	ite	ge
10017e76:	1b85      	subge	r5, r0, r6
10017e78:	4605      	movlt	r5, r0
10017e7a:	2d00      	cmp	r5, #0
10017e7c:	dc13      	bgt.n	10017ea6 <_svfprintf_r+0x107e>
10017e7e:	4404      	add	r4, r0
10017e80:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10017e82:	2b00      	cmp	r3, #0
10017e84:	d1ce      	bne.n	10017e24 <_svfprintf_r+0xffc>
10017e86:	f1b9 0f00 	cmp.w	r9, #0
10017e8a:	d1cf      	bne.n	10017e2c <_svfprintf_r+0x1004>
10017e8c:	f8dd b020 	ldr.w	fp, [sp, #32]
10017e90:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
10017e94:	46a2      	mov	sl, r4
10017e96:	45da      	cmp	sl, fp
10017e98:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
10017e9c:	4690      	mov	r8, r2
10017e9e:	460c      	mov	r4, r1
10017ea0:	bf28      	it	cs
10017ea2:	46da      	movcs	sl, fp
10017ea4:	e58b      	b.n	100179be <_svfprintf_r+0xb96>
10017ea6:	2d10      	cmp	r5, #16
10017ea8:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10017eaa:	f340 853e 	ble.w	1001892a <_svfprintf_r+0x1b02>
10017eae:	4623      	mov	r3, r4
10017eb0:	463e      	mov	r6, r7
10017eb2:	462c      	mov	r4, r5
10017eb4:	461d      	mov	r5, r3
10017eb6:	e004      	b.n	10017ec2 <_svfprintf_r+0x109a>
10017eb8:	3c10      	subs	r4, #16
10017eba:	2c10      	cmp	r4, #16
10017ebc:	f102 0208 	add.w	r2, r2, #8
10017ec0:	dd16      	ble.n	10017ef0 <_svfprintf_r+0x10c8>
10017ec2:	3001      	adds	r0, #1
10017ec4:	3110      	adds	r1, #16
10017ec6:	2310      	movs	r3, #16
10017ec8:	2807      	cmp	r0, #7
10017eca:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10017ece:	6017      	str	r7, [r2, #0]
10017ed0:	6053      	str	r3, [r2, #4]
10017ed2:	ddf1      	ble.n	10017eb8 <_svfprintf_r+0x1090>
10017ed4:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017ed6:	aa32      	add	r2, sp, #200	@ 0xc8
10017ed8:	4658      	mov	r0, fp
10017eda:	f005 fa6f 	bl	1001d3bc <__ssprint_r>
10017ede:	2800      	cmp	r0, #0
10017ee0:	f47f ae3f 	bne.w	10017b62 <_svfprintf_r+0xd3a>
10017ee4:	3c10      	subs	r4, #16
10017ee6:	2c10      	cmp	r4, #16
10017ee8:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
10017eec:	aa35      	add	r2, sp, #212	@ 0xd4
10017eee:	dce8      	bgt.n	10017ec2 <_svfprintf_r+0x109a>
10017ef0:	462b      	mov	r3, r5
10017ef2:	4625      	mov	r5, r4
10017ef4:	461c      	mov	r4, r3
10017ef6:	3001      	adds	r0, #1
10017ef8:	4429      	add	r1, r5
10017efa:	2807      	cmp	r0, #7
10017efc:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10017f00:	6016      	str	r6, [r2, #0]
10017f02:	6055      	str	r5, [r2, #4]
10017f04:	f300 837f 	bgt.w	10018606 <_svfprintf_r+0x17de>
10017f08:	f89a 0000 	ldrb.w	r0, [sl]
10017f0c:	3208      	adds	r2, #8
10017f0e:	4404      	add	r4, r0
10017f10:	e7b6      	b.n	10017e80 <_svfprintf_r+0x1058>
10017f12:	990d      	ldr	r1, [sp, #52]	@ 0x34
10017f14:	f851 3b04 	ldr.w	r3, [r1], #4
10017f18:	910d      	str	r1, [sp, #52]	@ 0x34
10017f1a:	f019 0110 	ands.w	r1, r9, #16
10017f1e:	f47f aef9 	bne.w	10017d14 <_svfprintf_r+0xeec>
10017f22:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10017f26:	f000 8160 	beq.w	100181ea <_svfprintf_r+0x13c2>
10017f2a:	b29b      	uxth	r3, r3
10017f2c:	460a      	mov	r2, r1
10017f2e:	e6f1      	b.n	10017d14 <_svfprintf_r+0xeec>
10017f30:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017f32:	aa32      	add	r2, sp, #200	@ 0xc8
10017f34:	4658      	mov	r0, fp
10017f36:	f005 fa41 	bl	1001d3bc <__ssprint_r>
10017f3a:	2800      	cmp	r0, #0
10017f3c:	f47f ae11 	bne.w	10017b62 <_svfprintf_r+0xd3a>
10017f40:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10017f42:	aa35      	add	r2, sp, #212	@ 0xd4
10017f44:	e77f      	b.n	10017e46 <_svfprintf_r+0x101e>
10017f46:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10017f4a:	2100      	movs	r1, #0
10017f4c:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10017f50:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 10017ffc <_svfprintf_r+0x11d4>
10017f54:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10017f58:	9406      	str	r4, [sp, #24]
10017f5a:	ad5e      	add	r5, sp, #376	@ 0x178
10017f5c:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10017f60:	2705      	movs	r7, #5
10017f62:	468c      	mov	ip, r1
10017f64:	465e      	mov	r6, fp
10017f66:	e005      	b.n	10017f74 <_svfprintf_r+0x114c>
10017f68:	2b0a      	cmp	r3, #10
10017f6a:	f172 0200 	sbcs.w	r2, r2, #0
10017f6e:	d333      	bcc.n	10017fd8 <_svfprintf_r+0x11b0>
10017f70:	465b      	mov	r3, fp
10017f72:	4622      	mov	r2, r4
10017f74:	1899      	adds	r1, r3, r2
10017f76:	f141 0100 	adc.w	r1, r1, #0
10017f7a:	fba9 0401 	umull	r0, r4, r9, r1
10017f7e:	f024 0003 	bic.w	r0, r4, #3
10017f82:	eb00 0094 	add.w	r0, r0, r4, lsr #2
10017f86:	1a09      	subs	r1, r1, r0
10017f88:	1a58      	subs	r0, r3, r1
10017f8a:	f162 0e00 	sbc.w	lr, r2, #0
10017f8e:	fb0a f400 	mul.w	r4, sl, r0
10017f92:	fba0 b009 	umull	fp, r0, r0, r9
10017f96:	fb09 440e 	mla	r4, r9, lr, r4
10017f9a:	f00b 0e01 	and.w	lr, fp, #1
10017f9e:	4404      	add	r4, r0
10017fa0:	fbae 0e07 	umull	r0, lr, lr, r7
10017fa4:	1840      	adds	r0, r0, r1
10017fa6:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
10017faa:	3030      	adds	r0, #48	@ 0x30
10017fac:	f805 0c01 	strb.w	r0, [r5, #-1]
10017fb0:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
10017fb4:	f10c 0c01 	add.w	ip, ip, #1
10017fb8:	3d01      	subs	r5, #1
10017fba:	0864      	lsrs	r4, r4, #1
10017fbc:	2e00      	cmp	r6, #0
10017fbe:	d0d3      	beq.n	10017f68 <_svfprintf_r+0x1140>
10017fc0:	f898 1000 	ldrb.w	r1, [r8]
10017fc4:	458c      	cmp	ip, r1
10017fc6:	d1cf      	bne.n	10017f68 <_svfprintf_r+0x1140>
10017fc8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10017fcc:	d0cc      	beq.n	10017f68 <_svfprintf_r+0x1140>
10017fce:	2b0a      	cmp	r3, #10
10017fd0:	f172 0200 	sbcs.w	r2, r2, #0
10017fd4:	f080 8137 	bcs.w	10018246 <_svfprintf_r+0x141e>
10017fd8:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
10017fdc:	9c06      	ldr	r4, [sp, #24]
10017fde:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
10017fe2:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
10017fe6:	f7ff bb15 	b.w	10017614 <_svfprintf_r+0x7ec>
10017fea:	bf00      	nop
10017fec:	1001ea3c 	.word	0x1001ea3c
10017ff0:	1001e6a8 	.word	0x1001e6a8
10017ff4:	1001ea50 	.word	0x1001ea50
10017ff8:	1001ec6c 	.word	0x1001ec6c
10017ffc:	cccccccd 	.word	0xcccccccd
10018000:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018002:	9807      	ldr	r0, [sp, #28]
10018004:	9315      	str	r3, [sp, #84]	@ 0x54
10018006:	aa32      	add	r2, sp, #200	@ 0xc8
10018008:	f005 f9d8 	bl	1001d3bc <__ssprint_r>
1001800c:	2800      	cmp	r0, #0
1001800e:	f47f abba 	bne.w	10017786 <_svfprintf_r+0x95e>
10018012:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10018016:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018018:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001801a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001801e:	f7ff b841 	b.w	100170a4 <_svfprintf_r+0x27c>
10018022:	46a3      	mov	fp, r4
10018024:	e59d      	b.n	10017b62 <_svfprintf_r+0xd3a>
10018026:	46d3      	mov	fp, sl
10018028:	e59b      	b.n	10017b62 <_svfprintf_r+0xd3a>
1001802a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001802c:	3b01      	subs	r3, #1
1001802e:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
10018032:	9310      	str	r3, [sp, #64]	@ 0x40
10018034:	e6fc      	b.n	10017e30 <_svfprintf_r+0x1008>
10018036:	2901      	cmp	r1, #1
10018038:	464c      	mov	r4, r9
1001803a:	f47f aadb 	bne.w	100175f4 <_svfprintf_r+0x7cc>
1001803e:	e42f      	b.n	100178a0 <_svfprintf_r+0xa78>
10018040:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018042:	9807      	ldr	r0, [sp, #28]
10018044:	aa32      	add	r2, sp, #200	@ 0xc8
10018046:	f005 f9b9 	bl	1001d3bc <__ssprint_r>
1001804a:	2800      	cmp	r0, #0
1001804c:	f47f ab9b 	bne.w	10017786 <_svfprintf_r+0x95e>
10018050:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018052:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018056:	f7ff ba8a 	b.w	1001756e <_svfprintf_r+0x746>
1001805a:	af30      	add	r7, sp, #192	@ 0xc0
1001805c:	2208      	movs	r2, #8
1001805e:	2100      	movs	r1, #0
10018060:	4638      	mov	r0, r7
10018062:	952b      	str	r5, [sp, #172]	@ 0xac
10018064:	f7fd f8f4 	bl	10015250 <memset>
10018068:	f8dd a020 	ldr.w	sl, [sp, #32]
1001806c:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
10018070:	f000 80c8 	beq.w	10018204 <_svfprintf_r+0x13dc>
10018074:	2400      	movs	r4, #0
10018076:	f8cd 9018 	str.w	r9, [sp, #24]
1001807a:	46a3      	mov	fp, r4
1001807c:	f8dd 901c 	ldr.w	r9, [sp, #28]
10018080:	e00c      	b.n	1001809c <_svfprintf_r+0x1274>
10018082:	a945      	add	r1, sp, #276	@ 0x114
10018084:	4648      	mov	r0, r9
10018086:	f7fd fd27 	bl	10015ad8 <_wcrtomb_r>
1001808a:	1c41      	adds	r1, r0, #1
1001808c:	4458      	add	r0, fp
1001808e:	f000 838f 	beq.w	100187b0 <_svfprintf_r+0x1988>
10018092:	4550      	cmp	r0, sl
10018094:	dc08      	bgt.n	100180a8 <_svfprintf_r+0x1280>
10018096:	f000 8442 	beq.w	1001891e <_svfprintf_r+0x1af6>
1001809a:	4683      	mov	fp, r0
1001809c:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
1001809e:	5912      	ldr	r2, [r2, r4]
100180a0:	463b      	mov	r3, r7
100180a2:	3404      	adds	r4, #4
100180a4:	2a00      	cmp	r2, #0
100180a6:	d1ec      	bne.n	10018082 <_svfprintf_r+0x125a>
100180a8:	f8dd 9018 	ldr.w	r9, [sp, #24]
100180ac:	f1bb 0f00 	cmp.w	fp, #0
100180b0:	f000 80dd 	beq.w	1001826e <_svfprintf_r+0x1446>
100180b4:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
100180b8:	f300 81ba 	bgt.w	10018430 <_svfprintf_r+0x1608>
100180bc:	2300      	movs	r3, #0
100180be:	930c      	str	r3, [sp, #48]	@ 0x30
100180c0:	ad45      	add	r5, sp, #276	@ 0x114
100180c2:	2208      	movs	r2, #8
100180c4:	2100      	movs	r1, #0
100180c6:	4638      	mov	r0, r7
100180c8:	f7fd f8c2 	bl	10015250 <memset>
100180cc:	9807      	ldr	r0, [sp, #28]
100180ce:	9700      	str	r7, [sp, #0]
100180d0:	465b      	mov	r3, fp
100180d2:	aa2b      	add	r2, sp, #172	@ 0xac
100180d4:	4629      	mov	r1, r5
100180d6:	f7fd fd25 	bl	10015b24 <_wcsrtombs_r>
100180da:	4583      	cmp	fp, r0
100180dc:	f040 845d 	bne.w	1001899a <_svfprintf_r+0x1b72>
100180e0:	2300      	movs	r3, #0
100180e2:	f805 300b 	strb.w	r3, [r5, fp]
100180e6:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
100180ea:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100180ee:	960d      	str	r6, [sp, #52]	@ 0x34
100180f0:	9308      	str	r3, [sp, #32]
100180f2:	9106      	str	r1, [sp, #24]
100180f4:	9314      	str	r3, [sp, #80]	@ 0x50
100180f6:	9310      	str	r3, [sp, #64]	@ 0x40
100180f8:	9312      	str	r3, [sp, #72]	@ 0x48
100180fa:	f7ff b873 	b.w	100171e4 <_svfprintf_r+0x3bc>
100180fe:	46cb      	mov	fp, r9
10018100:	e52f      	b.n	10017b62 <_svfprintf_r+0xd3a>
10018102:	4a75      	ldr	r2, [pc, #468]	@ (100182d8 <_svfprintf_r+0x14b0>)
10018104:	9215      	str	r2, [sp, #84]	@ 0x54
10018106:	3301      	adds	r3, #1
10018108:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001810a:	f8c8 2000 	str.w	r2, [r8]
1001810e:	442c      	add	r4, r5
10018110:	2b07      	cmp	r3, #7
10018112:	f8c8 5004 	str.w	r5, [r8, #4]
10018116:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001811a:	f77f a800 	ble.w	1001711e <_svfprintf_r+0x2f6>
1001811e:	f7ff bb68 	b.w	100177f2 <_svfprintf_r+0x9ca>
10018122:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018124:	9807      	ldr	r0, [sp, #28]
10018126:	aa32      	add	r2, sp, #200	@ 0xc8
10018128:	f005 f948 	bl	1001d3bc <__ssprint_r>
1001812c:	2800      	cmp	r0, #0
1001812e:	f47f ab2a 	bne.w	10017786 <_svfprintf_r+0x95e>
10018132:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018134:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018138:	f7fe bfdb 	b.w	100170f2 <_svfprintf_r+0x2ca>
1001813c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001813e:	aa32      	add	r2, sp, #200	@ 0xc8
10018140:	4658      	mov	r0, fp
10018142:	f005 f93b 	bl	1001d3bc <__ssprint_r>
10018146:	2800      	cmp	r0, #0
10018148:	f47f ad0b 	bne.w	10017b62 <_svfprintf_r+0xd3a>
1001814c:	f89a 0000 	ldrb.w	r0, [sl]
10018150:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10018152:	aa35      	add	r2, sp, #212	@ 0xd4
10018154:	e68d      	b.n	10017e72 <_svfprintf_r+0x104a>
10018156:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10018158:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001815a:	681b      	ldr	r3, [r3, #0]
1001815c:	601a      	str	r2, [r3, #0]
1001815e:	f7ff b964 	b.w	1001742a <_svfprintf_r+0x602>
10018162:	f8dd 9020 	ldr.w	r9, [sp, #32]
10018166:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10018168:	603b      	str	r3, [r7, #0]
1001816a:	3601      	adds	r6, #1
1001816c:	4444      	add	r4, r8
1001816e:	2e07      	cmp	r6, #7
10018170:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10018174:	f8c7 8004 	str.w	r8, [r7, #4]
10018178:	f77f ab7e 	ble.w	10017878 <_svfprintf_r+0xa50>
1001817c:	e486      	b.n	10017a8c <_svfprintf_r+0xc64>
1001817e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10018180:	991a      	ldr	r1, [sp, #104]	@ 0x68
10018182:	441c      	add	r4, r3
10018184:	e9c8 1300 	strd	r1, r3, [r8]
10018188:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001818a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001818c:	3301      	adds	r3, #1
1001818e:	2b07      	cmp	r3, #7
10018190:	9333      	str	r3, [sp, #204]	@ 0xcc
10018192:	f300 8165 	bgt.w	10018460 <_svfprintf_r+0x1638>
10018196:	f108 0808 	add.w	r8, r8, #8
1001819a:	2a00      	cmp	r2, #0
1001819c:	f6bf ab1d 	bge.w	100177da <_svfprintf_r+0x9b2>
100181a0:	4256      	negs	r6, r2
100181a2:	3210      	adds	r2, #16
100181a4:	4a4c      	ldr	r2, [pc, #304]	@ (100182d8 <_svfprintf_r+0x14b0>)
100181a6:	9215      	str	r2, [sp, #84]	@ 0x54
100181a8:	f280 82e8 	bge.w	1001877c <_svfprintf_r+0x1954>
100181ac:	46aa      	mov	sl, r5
100181ae:	2710      	movs	r7, #16
100181b0:	4615      	mov	r5, r2
100181b2:	e005      	b.n	100181c0 <_svfprintf_r+0x1398>
100181b4:	f108 0808 	add.w	r8, r8, #8
100181b8:	3e10      	subs	r6, #16
100181ba:	2e10      	cmp	r6, #16
100181bc:	f340 82dd 	ble.w	1001877a <_svfprintf_r+0x1952>
100181c0:	3301      	adds	r3, #1
100181c2:	3410      	adds	r4, #16
100181c4:	2b07      	cmp	r3, #7
100181c6:	e9c8 5700 	strd	r5, r7, [r8]
100181ca:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100181ce:	ddf1      	ble.n	100181b4 <_svfprintf_r+0x138c>
100181d0:	9909      	ldr	r1, [sp, #36]	@ 0x24
100181d2:	9807      	ldr	r0, [sp, #28]
100181d4:	aa32      	add	r2, sp, #200	@ 0xc8
100181d6:	f005 f8f1 	bl	1001d3bc <__ssprint_r>
100181da:	2800      	cmp	r0, #0
100181dc:	f47f aad3 	bne.w	10017786 <_svfprintf_r+0x95e>
100181e0:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100181e4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100181e8:	e7e6      	b.n	100181b8 <_svfprintf_r+0x1390>
100181ea:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
100181ee:	bf1c      	itt	ne
100181f0:	b2db      	uxtbne	r3, r3
100181f2:	4602      	movne	r2, r0
100181f4:	e58e      	b.n	10017d14 <_svfprintf_r+0xeec>
100181f6:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
100181fa:	bf1c      	itt	ne
100181fc:	b2db      	uxtbne	r3, r3
100181fe:	4602      	movne	r2, r0
10018200:	f7ff b8de 	b.w	100173c0 <_svfprintf_r+0x598>
10018204:	2300      	movs	r3, #0
10018206:	9807      	ldr	r0, [sp, #28]
10018208:	9700      	str	r7, [sp, #0]
1001820a:	aa2b      	add	r2, sp, #172	@ 0xac
1001820c:	4619      	mov	r1, r3
1001820e:	f7fd fc89 	bl	10015b24 <_wcsrtombs_r>
10018212:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10018216:	4683      	mov	fp, r0
10018218:	f000 82ca 	beq.w	100187b0 <_svfprintf_r+0x1988>
1001821c:	952b      	str	r5, [sp, #172]	@ 0xac
1001821e:	e745      	b.n	100180ac <_svfprintf_r+0x1284>
10018220:	4645      	mov	r5, r8
10018222:	460c      	mov	r4, r1
10018224:	4690      	mov	r8, r2
10018226:	3301      	adds	r3, #1
10018228:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001822a:	f8c8 2000 	str.w	r2, [r8]
1001822e:	4434      	add	r4, r6
10018230:	2b07      	cmp	r3, #7
10018232:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10018236:	f8c8 6004 	str.w	r6, [r8, #4]
1001823a:	f300 8104 	bgt.w	10018446 <_svfprintf_r+0x161e>
1001823e:	f108 0808 	add.w	r8, r8, #8
10018242:	f7ff bbb5 	b.w	100179b0 <_svfprintf_r+0xb88>
10018246:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10018248:	991d      	ldr	r1, [sp, #116]	@ 0x74
1001824a:	1aed      	subs	r5, r5, r3
1001824c:	461a      	mov	r2, r3
1001824e:	4628      	mov	r0, r5
10018250:	f7fd f872 	bl	10015338 <strncpy>
10018254:	f898 3001 	ldrb.w	r3, [r8, #1]
10018258:	b10b      	cbz	r3, 1001825e <_svfprintf_r+0x1436>
1001825a:	f108 0801 	add.w	r8, r8, #1
1001825e:	f04f 0c00 	mov.w	ip, #0
10018262:	e685      	b.n	10017f70 <_svfprintf_r+0x1148>
10018264:	222d      	movs	r2, #45	@ 0x2d
10018266:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001826a:	f7fe bfaa 	b.w	100171c2 <_svfprintf_r+0x39a>
1001826e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10018272:	960d      	str	r6, [sp, #52]	@ 0x34
10018274:	f8cd b018 	str.w	fp, [sp, #24]
10018278:	f8cd b020 	str.w	fp, [sp, #32]
1001827c:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10018280:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
10018284:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
10018288:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
1001828c:	f7fe bfaa 	b.w	100171e4 <_svfprintf_r+0x3bc>
10018290:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018292:	9807      	ldr	r0, [sp, #28]
10018294:	aa32      	add	r2, sp, #200	@ 0xc8
10018296:	f005 f891 	bl	1001d3bc <__ssprint_r>
1001829a:	2800      	cmp	r0, #0
1001829c:	f47f aa73 	bne.w	10017786 <_svfprintf_r+0x95e>
100182a0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100182a2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100182a4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100182a8:	f7ff ba80 	b.w	100177ac <_svfprintf_r+0x984>
100182ac:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100182ae:	ebab 060a 	sub.w	r6, fp, sl
100182b2:	1b5d      	subs	r5, r3, r5
100182b4:	42ae      	cmp	r6, r5
100182b6:	bfa8      	it	ge
100182b8:	462e      	movge	r6, r5
100182ba:	f7ff bbad 	b.w	10017a18 <_svfprintf_r+0xbf0>
100182be:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100182c0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100182c2:	681b      	ldr	r3, [r3, #0]
100182c4:	801a      	strh	r2, [r3, #0]
100182c6:	f7ff b8b0 	b.w	1001742a <_svfprintf_r+0x602>
100182ca:	f343 12c0 	sbfx	r2, r3, #7, #1
100182ce:	4611      	mov	r1, r2
100182d0:	b25b      	sxtb	r3, r3
100182d2:	f7ff b83b 	b.w	1001734c <_svfprintf_r+0x524>
100182d6:	bf00      	nop
100182d8:	1001ec6c 	.word	0x1001ec6c
100182dc:	9e08      	ldr	r6, [sp, #32]
100182de:	2302      	movs	r3, #2
100182e0:	e9cd 3600 	strd	r3, r6, [sp]
100182e4:	ab30      	add	r3, sp, #192	@ 0xc0
100182e6:	9304      	str	r3, [sp, #16]
100182e8:	ab2b      	add	r3, sp, #172	@ 0xac
100182ea:	9303      	str	r3, [sp, #12]
100182ec:	ab29      	add	r3, sp, #164	@ 0xa4
100182ee:	9302      	str	r3, [sp, #8]
100182f0:	9807      	ldr	r0, [sp, #28]
100182f2:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
100182f6:	f7fd fd03 	bl	10015d00 <_dtoa_r>
100182fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100182fc:	2b67      	cmp	r3, #103	@ 0x67
100182fe:	4605      	mov	r5, r0
10018300:	f000 813b 	beq.w	1001857a <_svfprintf_r+0x1752>
10018304:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018306:	2b47      	cmp	r3, #71	@ 0x47
10018308:	f000 8137 	beq.w	1001857a <_svfprintf_r+0x1752>
1001830c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001830e:	f023 0720 	bic.w	r7, r3, #32
10018312:	2f46      	cmp	r7, #70	@ 0x46
10018314:	eb00 0406 	add.w	r4, r0, r6
10018318:	d105      	bne.n	10018326 <_svfprintf_r+0x14fe>
1001831a:	7803      	ldrb	r3, [r0, #0]
1001831c:	2b30      	cmp	r3, #48	@ 0x30
1001831e:	f000 82f1 	beq.w	10018904 <_svfprintf_r+0x1adc>
10018322:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
10018324:	4434      	add	r4, r6
10018326:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001832a:	2200      	movs	r2, #0
1001832c:	2300      	movs	r3, #0
1001832e:	f005 fe3f 	bl	1001dfb0 <__aeabi_dcmpeq>
10018332:	2800      	cmp	r0, #0
10018334:	f000 813f 	beq.w	100185b6 <_svfprintf_r+0x178e>
10018338:	4623      	mov	r3, r4
1001833a:	1b5b      	subs	r3, r3, r5
1001833c:	9313      	str	r3, [sp, #76]	@ 0x4c
1001833e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10018340:	9212      	str	r2, [sp, #72]	@ 0x48
10018342:	2f47      	cmp	r7, #71	@ 0x47
10018344:	f000 8121 	beq.w	1001858a <_svfprintf_r+0x1762>
10018348:	2f46      	cmp	r7, #70	@ 0x46
1001834a:	f000 81e3 	beq.w	10018714 <_svfprintf_r+0x18ec>
1001834e:	990e      	ldr	r1, [sp, #56]	@ 0x38
10018350:	1e53      	subs	r3, r2, #1
10018352:	2961      	cmp	r1, #97	@ 0x61
10018354:	9329      	str	r3, [sp, #164]	@ 0xa4
10018356:	f000 8318 	beq.w	1001898a <_svfprintf_r+0x1b62>
1001835a:	2941      	cmp	r1, #65	@ 0x41
1001835c:	f040 8120 	bne.w	100185a0 <_svfprintf_r+0x1778>
10018360:	2150      	movs	r1, #80	@ 0x50
10018362:	2001      	movs	r0, #1
10018364:	2b00      	cmp	r3, #0
10018366:	bfb6      	itet	lt
10018368:	f1c2 0301 	rsblt	r3, r2, #1
1001836c:	222b      	movge	r2, #43	@ 0x2b
1001836e:	222d      	movlt	r2, #45	@ 0x2d
10018370:	2b09      	cmp	r3, #9
10018372:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
10018376:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001837a:	f340 8227 	ble.w	100187cc <_svfprintf_r+0x19a4>
1001837e:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
10018382:	4eae      	ldr	r6, [pc, #696]	@ (1001863c <_svfprintf_r+0x1814>)
10018384:	4622      	mov	r2, r4
10018386:	4610      	mov	r0, r2
10018388:	fba6 1203 	umull	r1, r2, r6, r3
1001838c:	08d2      	lsrs	r2, r2, #3
1001838e:	eb02 0182 	add.w	r1, r2, r2, lsl #2
10018392:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
10018396:	3130      	adds	r1, #48	@ 0x30
10018398:	f800 1c01 	strb.w	r1, [r0, #-1]
1001839c:	4619      	mov	r1, r3
1001839e:	2963      	cmp	r1, #99	@ 0x63
100183a0:	4613      	mov	r3, r2
100183a2:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
100183a6:	dcee      	bgt.n	10018386 <_svfprintf_r+0x155e>
100183a8:	3330      	adds	r3, #48	@ 0x30
100183aa:	f802 3c01 	strb.w	r3, [r2, #-1]
100183ae:	1e83      	subs	r3, r0, #2
100183b0:	42a3      	cmp	r3, r4
100183b2:	f080 82ef 	bcs.w	10018994 <_svfprintf_r+0x1b6c>
100183b6:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
100183ba:	f813 1b01 	ldrb.w	r1, [r3], #1
100183be:	f802 1f01 	strb.w	r1, [r2, #1]!
100183c2:	42a3      	cmp	r3, r4
100183c4:	d1f9      	bne.n	100183ba <_svfprintf_r+0x1592>
100183c6:	ab5e      	add	r3, sp, #376	@ 0x178
100183c8:	1a18      	subs	r0, r3, r0
100183ca:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
100183ce:	931c      	str	r3, [sp, #112]	@ 0x70
100183d0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100183d2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
100183d4:	2b01      	cmp	r3, #1
100183d6:	eb03 0b02 	add.w	fp, r3, r2
100183da:	f340 822a 	ble.w	10018832 <_svfprintf_r+0x1a0a>
100183de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100183e0:	449b      	add	fp, r3
100183e2:	9b06      	ldr	r3, [sp, #24]
100183e4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
100183e8:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
100183ec:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
100183f0:	2300      	movs	r3, #0
100183f2:	9314      	str	r3, [sp, #80]	@ 0x50
100183f4:	9206      	str	r2, [sp, #24]
100183f6:	9310      	str	r3, [sp, #64]	@ 0x40
100183f8:	9312      	str	r3, [sp, #72]	@ 0x48
100183fa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
100183fc:	2b00      	cmp	r3, #0
100183fe:	f040 80d3 	bne.w	100185a8 <_svfprintf_r+0x1780>
10018402:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10018406:	9308      	str	r3, [sp, #32]
10018408:	f7fe beec 	b.w	100171e4 <_svfprintf_r+0x3bc>
1001840c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1001840e:	aa32      	add	r2, sp, #200	@ 0xc8
10018410:	4621      	mov	r1, r4
10018412:	4658      	mov	r0, fp
10018414:	f004 ffd2 	bl	1001d3bc <__ssprint_r>
10018418:	89a3      	ldrh	r3, [r4, #12]
1001841a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
1001841e:	f7fe be0c 	b.w	1001703a <_svfprintf_r+0x212>
10018422:	4628      	mov	r0, r5
10018424:	960d      	str	r6, [sp, #52]	@ 0x34
10018426:	f7fd faeb 	bl	10015a00 <strlen>
1001842a:	4683      	mov	fp, r0
1001842c:	f7fe bf71 	b.w	10017312 <_svfprintf_r+0x4ea>
10018430:	9807      	ldr	r0, [sp, #28]
10018432:	f10b 0101 	add.w	r1, fp, #1
10018436:	f7f8 fd6b 	bl	10010f10 <_malloc_r>
1001843a:	4605      	mov	r5, r0
1001843c:	2800      	cmp	r0, #0
1001843e:	f000 81b7 	beq.w	100187b0 <_svfprintf_r+0x1988>
10018442:	900c      	str	r0, [sp, #48]	@ 0x30
10018444:	e63d      	b.n	100180c2 <_svfprintf_r+0x129a>
10018446:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018448:	9807      	ldr	r0, [sp, #28]
1001844a:	aa32      	add	r2, sp, #200	@ 0xc8
1001844c:	f004 ffb6 	bl	1001d3bc <__ssprint_r>
10018450:	2800      	cmp	r0, #0
10018452:	f47f a998 	bne.w	10017786 <_svfprintf_r+0x95e>
10018456:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018458:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001845c:	f7ff baa8 	b.w	100179b0 <_svfprintf_r+0xb88>
10018460:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018462:	9807      	ldr	r0, [sp, #28]
10018464:	aa32      	add	r2, sp, #200	@ 0xc8
10018466:	f004 ffa9 	bl	1001d3bc <__ssprint_r>
1001846a:	2800      	cmp	r0, #0
1001846c:	f47f a98b 	bne.w	10017786 <_svfprintf_r+0x95e>
10018470:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10018474:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10018476:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001847a:	e68e      	b.n	1001819a <_svfprintf_r+0x1372>
1001847c:	2306      	movs	r3, #6
1001847e:	9308      	str	r3, [sp, #32]
10018480:	f7ff bbef 	b.w	10017c62 <_svfprintf_r+0xe3a>
10018484:	9b08      	ldr	r3, [sp, #32]
10018486:	1c5e      	adds	r6, r3, #1
10018488:	2302      	movs	r3, #2
1001848a:	e729      	b.n	100182e0 <_svfprintf_r+0x14b8>
1001848c:	9e08      	ldr	r6, [sp, #32]
1001848e:	2303      	movs	r3, #3
10018490:	e726      	b.n	100182e0 <_svfprintf_r+0x14b8>
10018492:	aa29      	add	r2, sp, #164	@ 0xa4
10018494:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10018498:	f7fd fb52 	bl	10015b40 <frexp>
1001849c:	2200      	movs	r2, #0
1001849e:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
100184a2:	f005 fb1d 	bl	1001dae0 <__aeabi_dmul>
100184a6:	4602      	mov	r2, r0
100184a8:	460b      	mov	r3, r1
100184aa:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
100184ae:	2200      	movs	r2, #0
100184b0:	2300      	movs	r3, #0
100184b2:	f005 fd7d 	bl	1001dfb0 <__aeabi_dcmpeq>
100184b6:	2800      	cmp	r0, #0
100184b8:	f040 81c0 	bne.w	1001883c <_svfprintf_r+0x1a14>
100184bc:	4b60      	ldr	r3, [pc, #384]	@ (10018640 <_svfprintf_r+0x1818>)
100184be:	9312      	str	r3, [sp, #72]	@ 0x48
100184c0:	9b08      	ldr	r3, [sp, #32]
100184c2:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
100184c6:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
100184ca:	462e      	mov	r6, r5
100184cc:	9514      	str	r5, [sp, #80]	@ 0x50
100184ce:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
100184d2:	464d      	mov	r5, r9
100184d4:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
100184d8:	e005      	b.n	100184e6 <_svfprintf_r+0x16be>
100184da:	2200      	movs	r2, #0
100184dc:	2300      	movs	r3, #0
100184de:	f005 fd67 	bl	1001dfb0 <__aeabi_dcmpeq>
100184e2:	b9f0      	cbnz	r0, 10018522 <_svfprintf_r+0x16fa>
100184e4:	463d      	mov	r5, r7
100184e6:	4b57      	ldr	r3, [pc, #348]	@ (10018644 <_svfprintf_r+0x181c>)
100184e8:	2200      	movs	r2, #0
100184ea:	4640      	mov	r0, r8
100184ec:	4649      	mov	r1, r9
100184ee:	f005 faf7 	bl	1001dae0 <__aeabi_dmul>
100184f2:	4689      	mov	r9, r1
100184f4:	4680      	mov	r8, r0
100184f6:	f005 fda3 	bl	1001e040 <__aeabi_d2iz>
100184fa:	4604      	mov	r4, r0
100184fc:	f005 fa86 	bl	1001da0c <__aeabi_i2d>
10018500:	4602      	mov	r2, r0
10018502:	460b      	mov	r3, r1
10018504:	4640      	mov	r0, r8
10018506:	4649      	mov	r1, r9
10018508:	f005 f932 	bl	1001d770 <__aeabi_dsub>
1001850c:	f81b 3004 	ldrb.w	r3, [fp, r4]
10018510:	1c6a      	adds	r2, r5, #1
10018512:	46b2      	mov	sl, r6
10018514:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
10018518:	f806 3b01 	strb.w	r3, [r6], #1
1001851c:	4680      	mov	r8, r0
1001851e:	4689      	mov	r9, r1
10018520:	d1db      	bne.n	100184da <_svfprintf_r+0x16b2>
10018522:	46cb      	mov	fp, r9
10018524:	4657      	mov	r7, sl
10018526:	46c2      	mov	sl, r8
10018528:	4b47      	ldr	r3, [pc, #284]	@ (10018648 <_svfprintf_r+0x1820>)
1001852a:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
1001852e:	2200      	movs	r2, #0
10018530:	4650      	mov	r0, sl
10018532:	4659      	mov	r1, fp
10018534:	46a9      	mov	r9, r5
10018536:	9d14      	ldr	r5, [sp, #80]	@ 0x50
10018538:	f005 fd62 	bl	1001e000 <__aeabi_dcmpgt>
1001853c:	2800      	cmp	r0, #0
1001853e:	f040 8153 	bne.w	100187e8 <_svfprintf_r+0x19c0>
10018542:	4b41      	ldr	r3, [pc, #260]	@ (10018648 <_svfprintf_r+0x1820>)
10018544:	4650      	mov	r0, sl
10018546:	4659      	mov	r1, fp
10018548:	2200      	movs	r2, #0
1001854a:	f005 fd31 	bl	1001dfb0 <__aeabi_dcmpeq>
1001854e:	b110      	cbz	r0, 10018556 <_svfprintf_r+0x172e>
10018550:	07e3      	lsls	r3, r4, #31
10018552:	f100 8149 	bmi.w	100187e8 <_svfprintf_r+0x19c0>
10018556:	f1b9 0f00 	cmp.w	r9, #0
1001855a:	f2c0 815f 	blt.w	1001881c <_svfprintf_r+0x19f4>
1001855e:	f109 0301 	add.w	r3, r9, #1
10018562:	4433      	add	r3, r6
10018564:	2230      	movs	r2, #48	@ 0x30
10018566:	f806 2b01 	strb.w	r2, [r6], #1
1001856a:	42b3      	cmp	r3, r6
1001856c:	d1fb      	bne.n	10018566 <_svfprintf_r+0x173e>
1001856e:	1b5b      	subs	r3, r3, r5
10018570:	9313      	str	r3, [sp, #76]	@ 0x4c
10018572:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018574:	f023 0720 	bic.w	r7, r3, #32
10018578:	e6e1      	b.n	1001833e <_svfprintf_r+0x1516>
1001857a:	9b06      	ldr	r3, [sp, #24]
1001857c:	07df      	lsls	r7, r3, #31
1001857e:	f100 80f9 	bmi.w	10018774 <_svfprintf_r+0x194c>
10018582:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10018584:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10018586:	1b5b      	subs	r3, r3, r5
10018588:	9313      	str	r3, [sp, #76]	@ 0x4c
1001858a:	1cd3      	adds	r3, r2, #3
1001858c:	9212      	str	r2, [sp, #72]	@ 0x48
1001858e:	db02      	blt.n	10018596 <_svfprintf_r+0x176e>
10018590:	9b08      	ldr	r3, [sp, #32]
10018592:	4293      	cmp	r3, r2
10018594:	da1b      	bge.n	100185ce <_svfprintf_r+0x17a6>
10018596:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018598:	3b02      	subs	r3, #2
1001859a:	930e      	str	r3, [sp, #56]	@ 0x38
1001859c:	1e53      	subs	r3, r2, #1
1001859e:	9329      	str	r3, [sp, #164]	@ 0xa4
100185a0:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
100185a4:	2000      	movs	r0, #0
100185a6:	e6dd      	b.n	10018364 <_svfprintf_r+0x153c>
100185a8:	222d      	movs	r2, #45	@ 0x2d
100185aa:	2300      	movs	r3, #0
100185ac:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100185b0:	9308      	str	r3, [sp, #32]
100185b2:	f7fe be1a 	b.w	100171ea <_svfprintf_r+0x3c2>
100185b6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100185b8:	42a3      	cmp	r3, r4
100185ba:	f4bf aebe 	bcs.w	1001833a <_svfprintf_r+0x1512>
100185be:	2130      	movs	r1, #48	@ 0x30
100185c0:	1c5a      	adds	r2, r3, #1
100185c2:	9230      	str	r2, [sp, #192]	@ 0xc0
100185c4:	7019      	strb	r1, [r3, #0]
100185c6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100185c8:	429c      	cmp	r4, r3
100185ca:	d8f9      	bhi.n	100185c0 <_svfprintf_r+0x1798>
100185cc:	e6b5      	b.n	1001833a <_svfprintf_r+0x1512>
100185ce:	9913      	ldr	r1, [sp, #76]	@ 0x4c
100185d0:	428a      	cmp	r2, r1
100185d2:	f2c0 80c4 	blt.w	1001875e <_svfprintf_r+0x1936>
100185d6:	9b06      	ldr	r3, [sp, #24]
100185d8:	07dc      	lsls	r4, r3, #31
100185da:	f140 8184 	bpl.w	100188e6 <_svfprintf_r+0x1abe>
100185de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100185e0:	eb02 0b03 	add.w	fp, r2, r3
100185e4:	9b06      	ldr	r3, [sp, #24]
100185e6:	0558      	lsls	r0, r3, #21
100185e8:	d502      	bpl.n	100185f0 <_svfprintf_r+0x17c8>
100185ea:	2a00      	cmp	r2, #0
100185ec:	f300 814d 	bgt.w	1001888a <_svfprintf_r+0x1a62>
100185f0:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100185f4:	9306      	str	r3, [sp, #24]
100185f6:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
100185fa:	2367      	movs	r3, #103	@ 0x67
100185fc:	930e      	str	r3, [sp, #56]	@ 0x38
100185fe:	2300      	movs	r3, #0
10018600:	9314      	str	r3, [sp, #80]	@ 0x50
10018602:	9310      	str	r3, [sp, #64]	@ 0x40
10018604:	e6f9      	b.n	100183fa <_svfprintf_r+0x15d2>
10018606:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018608:	aa32      	add	r2, sp, #200	@ 0xc8
1001860a:	4658      	mov	r0, fp
1001860c:	f004 fed6 	bl	1001d3bc <__ssprint_r>
10018610:	2800      	cmp	r0, #0
10018612:	f47f aaa6 	bne.w	10017b62 <_svfprintf_r+0xd3a>
10018616:	f89a 0000 	ldrb.w	r0, [sl]
1001861a:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001861c:	aa35      	add	r2, sp, #212	@ 0xd4
1001861e:	4404      	add	r4, r0
10018620:	e42e      	b.n	10017e80 <_svfprintf_r+0x1058>
10018622:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018624:	9807      	ldr	r0, [sp, #28]
10018626:	aa32      	add	r2, sp, #200	@ 0xc8
10018628:	f004 fec8 	bl	1001d3bc <__ssprint_r>
1001862c:	2800      	cmp	r0, #0
1001862e:	f47f a8aa 	bne.w	10017786 <_svfprintf_r+0x95e>
10018632:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018634:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018638:	f7ff b9b3 	b.w	100179a2 <_svfprintf_r+0xb7a>
1001863c:	cccccccd 	.word	0xcccccccd
10018640:	1001ea3c 	.word	0x1001ea3c
10018644:	40300000 	.word	0x40300000
10018648:	3fe00000 	.word	0x3fe00000
1001864c:	2378      	movs	r3, #120	@ 0x78
1001864e:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
10018652:	2330      	movs	r3, #48	@ 0x30
10018654:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
10018658:	f049 0302 	orr.w	r3, r9, #2
1001865c:	9306      	str	r3, [sp, #24]
1001865e:	9b08      	ldr	r3, [sp, #32]
10018660:	2b63      	cmp	r3, #99	@ 0x63
10018662:	f300 80dd 	bgt.w	10018820 <_svfprintf_r+0x19f8>
10018666:	2300      	movs	r3, #0
10018668:	930c      	str	r3, [sp, #48]	@ 0x30
1001866a:	ad45      	add	r5, sp, #276	@ 0x114
1001866c:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
10018670:	9315      	str	r3, [sp, #84]	@ 0x54
10018672:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10018674:	2b00      	cmp	r3, #0
10018676:	db22      	blt.n	100186be <_svfprintf_r+0x1896>
10018678:	2300      	movs	r3, #0
1001867a:	931f      	str	r3, [sp, #124]	@ 0x7c
1001867c:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
10018680:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
10018684:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018686:	2b61      	cmp	r3, #97	@ 0x61
10018688:	f47f aafb 	bne.w	10017c82 <_svfprintf_r+0xe5a>
1001868c:	aa29      	add	r2, sp, #164	@ 0xa4
1001868e:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10018692:	f7fd fa55 	bl	10015b40 <frexp>
10018696:	2200      	movs	r2, #0
10018698:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001869c:	f005 fa20 	bl	1001dae0 <__aeabi_dmul>
100186a0:	4602      	mov	r2, r0
100186a2:	460b      	mov	r3, r1
100186a4:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
100186a8:	2200      	movs	r2, #0
100186aa:	2300      	movs	r3, #0
100186ac:	f005 fc80 	bl	1001dfb0 <__aeabi_dcmpeq>
100186b0:	2800      	cmp	r0, #0
100186b2:	f040 80c3 	bne.w	1001883c <_svfprintf_r+0x1a14>
100186b6:	4ba9      	ldr	r3, [pc, #676]	@ (1001895c <_svfprintf_r+0x1b34>)
100186b8:	9312      	str	r3, [sp, #72]	@ 0x48
100186ba:	e701      	b.n	100184c0 <_svfprintf_r+0x1698>
100186bc:	930c      	str	r3, [sp, #48]	@ 0x30
100186be:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
100186c2:	9324      	str	r3, [sp, #144]	@ 0x90
100186c4:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
100186c8:	9325      	str	r3, [sp, #148]	@ 0x94
100186ca:	232d      	movs	r3, #45	@ 0x2d
100186cc:	931f      	str	r3, [sp, #124]	@ 0x7c
100186ce:	e7d9      	b.n	10018684 <_svfprintf_r+0x185c>
100186d0:	9909      	ldr	r1, [sp, #36]	@ 0x24
100186d2:	9807      	ldr	r0, [sp, #28]
100186d4:	aa32      	add	r2, sp, #200	@ 0xc8
100186d6:	f004 fe71 	bl	1001d3bc <__ssprint_r>
100186da:	2800      	cmp	r0, #0
100186dc:	f47f a853 	bne.w	10017786 <_svfprintf_r+0x95e>
100186e0:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100186e2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100186e4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100186e8:	f7ff b97f 	b.w	100179ea <_svfprintf_r+0xbc2>
100186ec:	499c      	ldr	r1, [pc, #624]	@ (10018960 <_svfprintf_r+0x1b38>)
100186ee:	9115      	str	r1, [sp, #84]	@ 0x54
100186f0:	f7fe bdaf 	b.w	10017252 <_svfprintf_r+0x42a>
100186f4:	9909      	ldr	r1, [sp, #36]	@ 0x24
100186f6:	9807      	ldr	r0, [sp, #28]
100186f8:	aa32      	add	r2, sp, #200	@ 0xc8
100186fa:	f004 fe5f 	bl	1001d3bc <__ssprint_r>
100186fe:	2800      	cmp	r0, #0
10018700:	f47f a841 	bne.w	10017786 <_svfprintf_r+0x95e>
10018704:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10018706:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10018708:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001870a:	1b5d      	subs	r5, r3, r5
1001870c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018710:	f7ff b982 	b.w	10017a18 <_svfprintf_r+0xbf0>
10018714:	9b06      	ldr	r3, [sp, #24]
10018716:	9912      	ldr	r1, [sp, #72]	@ 0x48
10018718:	9a08      	ldr	r2, [sp, #32]
1001871a:	f003 0301 	and.w	r3, r3, #1
1001871e:	2900      	cmp	r1, #0
10018720:	ea43 0302 	orr.w	r3, r3, r2
10018724:	f340 810f 	ble.w	10018946 <_svfprintf_r+0x1b1e>
10018728:	2b00      	cmp	r3, #0
1001872a:	f040 80d5 	bne.w	100188d8 <_svfprintf_r+0x1ab0>
1001872e:	2366      	movs	r3, #102	@ 0x66
10018730:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10018734:	930e      	str	r3, [sp, #56]	@ 0x38
10018736:	9b06      	ldr	r3, [sp, #24]
10018738:	055a      	lsls	r2, r3, #21
1001873a:	f100 80a8 	bmi.w	1001888e <_svfprintf_r+0x1a66>
1001873e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10018742:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10018746:	9306      	str	r3, [sp, #24]
10018748:	e759      	b.n	100185fe <_svfprintf_r+0x17d6>
1001874a:	2358      	movs	r3, #88	@ 0x58
1001874c:	e77f      	b.n	1001864e <_svfprintf_r+0x1826>
1001874e:	2200      	movs	r2, #0
10018750:	9208      	str	r2, [sp, #32]
10018752:	f7fe bbc1 	b.w	10016ed8 <_svfprintf_r+0xb0>
10018756:	4a82      	ldr	r2, [pc, #520]	@ (10018960 <_svfprintf_r+0x1b38>)
10018758:	9215      	str	r2, [sp, #84]	@ 0x54
1001875a:	f7ff b8ed 	b.w	10017938 <_svfprintf_r+0xb10>
1001875e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10018760:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10018762:	eb03 0b02 	add.w	fp, r3, r2
10018766:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10018768:	2b00      	cmp	r3, #0
1001876a:	f340 8083 	ble.w	10018874 <_svfprintf_r+0x1a4c>
1001876e:	2367      	movs	r3, #103	@ 0x67
10018770:	930e      	str	r3, [sp, #56]	@ 0x38
10018772:	e7e0      	b.n	10018736 <_svfprintf_r+0x190e>
10018774:	19ac      	adds	r4, r5, r6
10018776:	2747      	movs	r7, #71	@ 0x47
10018778:	e5d5      	b.n	10018326 <_svfprintf_r+0x14fe>
1001877a:	4655      	mov	r5, sl
1001877c:	3301      	adds	r3, #1
1001877e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10018780:	f8c8 2000 	str.w	r2, [r8]
10018784:	4434      	add	r4, r6
10018786:	2b07      	cmp	r3, #7
10018788:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001878c:	f8c8 6004 	str.w	r6, [r8, #4]
10018790:	f77f a821 	ble.w	100177d6 <_svfprintf_r+0x9ae>
10018794:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018796:	9807      	ldr	r0, [sp, #28]
10018798:	aa32      	add	r2, sp, #200	@ 0xc8
1001879a:	f004 fe0f 	bl	1001d3bc <__ssprint_r>
1001879e:	2800      	cmp	r0, #0
100187a0:	f47e aff1 	bne.w	10017786 <_svfprintf_r+0x95e>
100187a4:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100187a8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100187ac:	f7ff b815 	b.w	100177da <_svfprintf_r+0x9b2>
100187b0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100187b2:	8993      	ldrh	r3, [r2, #12]
100187b4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100187b8:	8193      	strh	r3, [r2, #12]
100187ba:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100187be:	930a      	str	r3, [sp, #40]	@ 0x28
100187c0:	f7fe bc3e 	b.w	10017040 <_svfprintf_r+0x218>
100187c4:	4a67      	ldr	r2, [pc, #412]	@ (10018964 <_svfprintf_r+0x1b3c>)
100187c6:	9215      	str	r2, [sp, #84]	@ 0x54
100187c8:	f7fe bf82 	b.w	100176d0 <_svfprintf_r+0x8a8>
100187cc:	2800      	cmp	r0, #0
100187ce:	d13f      	bne.n	10018850 <_svfprintf_r+0x1a28>
100187d0:	2230      	movs	r2, #48	@ 0x30
100187d2:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
100187d6:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
100187da:	3330      	adds	r3, #48	@ 0x30
100187dc:	f802 3b01 	strb.w	r3, [r2], #1
100187e0:	ab2c      	add	r3, sp, #176	@ 0xb0
100187e2:	1ad3      	subs	r3, r2, r3
100187e4:	931c      	str	r3, [sp, #112]	@ 0x70
100187e6:	e5f3      	b.n	100183d0 <_svfprintf_r+0x15a8>
100187e8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100187ea:	9730      	str	r7, [sp, #192]	@ 0xc0
100187ec:	7bd9      	ldrb	r1, [r3, #15]
100187ee:	f816 2c01 	ldrb.w	r2, [r6, #-1]
100187f2:	428a      	cmp	r2, r1
100187f4:	4633      	mov	r3, r6
100187f6:	d109      	bne.n	1001880c <_svfprintf_r+0x19e4>
100187f8:	2030      	movs	r0, #48	@ 0x30
100187fa:	f803 0c01 	strb.w	r0, [r3, #-1]
100187fe:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10018800:	1e5a      	subs	r2, r3, #1
10018802:	9230      	str	r2, [sp, #192]	@ 0xc0
10018804:	f813 2c01 	ldrb.w	r2, [r3, #-1]
10018808:	4291      	cmp	r1, r2
1001880a:	d0f6      	beq.n	100187fa <_svfprintf_r+0x19d2>
1001880c:	2a39      	cmp	r2, #57	@ 0x39
1001880e:	bf0b      	itete	eq
10018810:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
10018812:	3201      	addne	r2, #1
10018814:	7a92      	ldrbeq	r2, [r2, #10]
10018816:	b2d2      	uxtbne	r2, r2
10018818:	f803 2c01 	strb.w	r2, [r3, #-1]
1001881c:	4633      	mov	r3, r6
1001881e:	e6a6      	b.n	1001856e <_svfprintf_r+0x1746>
10018820:	9807      	ldr	r0, [sp, #28]
10018822:	1c59      	adds	r1, r3, #1
10018824:	f7f8 fb74 	bl	10010f10 <_malloc_r>
10018828:	4605      	mov	r5, r0
1001882a:	2800      	cmp	r0, #0
1001882c:	d0c0      	beq.n	100187b0 <_svfprintf_r+0x1988>
1001882e:	900c      	str	r0, [sp, #48]	@ 0x30
10018830:	e71c      	b.n	1001866c <_svfprintf_r+0x1844>
10018832:	9b06      	ldr	r3, [sp, #24]
10018834:	07de      	lsls	r6, r3, #31
10018836:	f57f add4 	bpl.w	100183e2 <_svfprintf_r+0x15ba>
1001883a:	e5d0      	b.n	100183de <_svfprintf_r+0x15b6>
1001883c:	4b4a      	ldr	r3, [pc, #296]	@ (10018968 <_svfprintf_r+0x1b40>)
1001883e:	4a47      	ldr	r2, [pc, #284]	@ (1001895c <_svfprintf_r+0x1b34>)
10018840:	990e      	ldr	r1, [sp, #56]	@ 0x38
10018842:	2961      	cmp	r1, #97	@ 0x61
10018844:	bf18      	it	ne
10018846:	461a      	movne	r2, r3
10018848:	2301      	movs	r3, #1
1001884a:	9212      	str	r2, [sp, #72]	@ 0x48
1001884c:	9329      	str	r3, [sp, #164]	@ 0xa4
1001884e:	e637      	b.n	100184c0 <_svfprintf_r+0x1698>
10018850:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10018854:	e7c1      	b.n	100187da <_svfprintf_r+0x19b2>
10018856:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10018858:	4d44      	ldr	r5, [pc, #272]	@ (1001896c <_svfprintf_r+0x1b44>)
1001885a:	2b00      	cmp	r3, #0
1001885c:	bfb4      	ite	lt
1001885e:	222d      	movlt	r2, #45	@ 0x2d
10018860:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
10018864:	4b42      	ldr	r3, [pc, #264]	@ (10018970 <_svfprintf_r+0x1b48>)
10018866:	bfb8      	it	lt
10018868:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
1001886c:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10018870:	f7fe bcab 	b.w	100171ca <_svfprintf_r+0x3a2>
10018874:	f1c3 0301 	rsb	r3, r3, #1
10018878:	449b      	add	fp, r3
1001887a:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001887e:	9306      	str	r3, [sp, #24]
10018880:	2367      	movs	r3, #103	@ 0x67
10018882:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10018886:	930e      	str	r3, [sp, #56]	@ 0x38
10018888:	e6b9      	b.n	100185fe <_svfprintf_r+0x17d6>
1001888a:	2367      	movs	r3, #103	@ 0x67
1001888c:	930e      	str	r3, [sp, #56]	@ 0x38
1001888e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10018890:	780b      	ldrb	r3, [r1, #0]
10018892:	2bff      	cmp	r3, #255	@ 0xff
10018894:	f000 808e 	beq.w	100189b4 <_svfprintf_r+0x1b8c>
10018898:	2400      	movs	r4, #0
1001889a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1001889c:	4620      	mov	r0, r4
1001889e:	e003      	b.n	100188a8 <_svfprintf_r+0x1a80>
100188a0:	3001      	adds	r0, #1
100188a2:	3101      	adds	r1, #1
100188a4:	2bff      	cmp	r3, #255	@ 0xff
100188a6:	d008      	beq.n	100188ba <_svfprintf_r+0x1a92>
100188a8:	4293      	cmp	r3, r2
100188aa:	da06      	bge.n	100188ba <_svfprintf_r+0x1a92>
100188ac:	1ad2      	subs	r2, r2, r3
100188ae:	784b      	ldrb	r3, [r1, #1]
100188b0:	2b00      	cmp	r3, #0
100188b2:	d1f5      	bne.n	100188a0 <_svfprintf_r+0x1a78>
100188b4:	780b      	ldrb	r3, [r1, #0]
100188b6:	3401      	adds	r4, #1
100188b8:	e7f4      	b.n	100188a4 <_svfprintf_r+0x1a7c>
100188ba:	911b      	str	r1, [sp, #108]	@ 0x6c
100188bc:	9010      	str	r0, [sp, #64]	@ 0x40
100188be:	9414      	str	r4, [sp, #80]	@ 0x50
100188c0:	9212      	str	r2, [sp, #72]	@ 0x48
100188c2:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
100188c6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
100188c8:	4413      	add	r3, r2
100188ca:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
100188cc:	fb02 bb03 	mla	fp, r2, r3, fp
100188d0:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100188d4:	9306      	str	r3, [sp, #24]
100188d6:	e590      	b.n	100183fa <_svfprintf_r+0x15d2>
100188d8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100188da:	18cf      	adds	r7, r1, r3
100188dc:	443a      	add	r2, r7
100188de:	2366      	movs	r3, #102	@ 0x66
100188e0:	4693      	mov	fp, r2
100188e2:	930e      	str	r3, [sp, #56]	@ 0x38
100188e4:	e727      	b.n	10018736 <_svfprintf_r+0x190e>
100188e6:	4693      	mov	fp, r2
100188e8:	e67c      	b.n	100185e4 <_svfprintf_r+0x17bc>
100188ea:	9b08      	ldr	r3, [sp, #32]
100188ec:	9306      	str	r3, [sp, #24]
100188ee:	469b      	mov	fp, r3
100188f0:	2373      	movs	r3, #115	@ 0x73
100188f2:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100188f6:	960d      	str	r6, [sp, #52]	@ 0x34
100188f8:	9008      	str	r0, [sp, #32]
100188fa:	9014      	str	r0, [sp, #80]	@ 0x50
100188fc:	9010      	str	r0, [sp, #64]	@ 0x40
100188fe:	930e      	str	r3, [sp, #56]	@ 0x38
10018900:	f7fe bc70 	b.w	100171e4 <_svfprintf_r+0x3bc>
10018904:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10018908:	2200      	movs	r2, #0
1001890a:	2300      	movs	r3, #0
1001890c:	f005 fb50 	bl	1001dfb0 <__aeabi_dcmpeq>
10018910:	2800      	cmp	r0, #0
10018912:	f47f ad06 	bne.w	10018322 <_svfprintf_r+0x14fa>
10018916:	f1c6 0601 	rsb	r6, r6, #1
1001891a:	9629      	str	r6, [sp, #164]	@ 0xa4
1001891c:	e502      	b.n	10018324 <_svfprintf_r+0x14fc>
1001891e:	f8dd 9018 	ldr.w	r9, [sp, #24]
10018922:	f8dd b020 	ldr.w	fp, [sp, #32]
10018926:	f7ff bbc1 	b.w	100180ac <_svfprintf_r+0x1284>
1001892a:	4e0e      	ldr	r6, [pc, #56]	@ (10018964 <_svfprintf_r+0x1b3c>)
1001892c:	f7ff bae3 	b.w	10017ef6 <_svfprintf_r+0x10ce>
10018930:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10018932:	7863      	ldrb	r3, [r4, #1]
10018934:	460c      	mov	r4, r1
10018936:	f852 1b04 	ldr.w	r1, [r2], #4
1001893a:	920d      	str	r2, [sp, #52]	@ 0x34
1001893c:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10018940:	9108      	str	r1, [sp, #32]
10018942:	f7fe bac8 	b.w	10016ed6 <_svfprintf_r+0xae>
10018946:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001894a:	b99b      	cbnz	r3, 10018974 <_svfprintf_r+0x1b4c>
1001894c:	f04f 0b01 	mov.w	fp, #1
10018950:	2366      	movs	r3, #102	@ 0x66
10018952:	f8cd b018 	str.w	fp, [sp, #24]
10018956:	930e      	str	r3, [sp, #56]	@ 0x38
10018958:	e651      	b.n	100185fe <_svfprintf_r+0x17d6>
1001895a:	bf00      	nop
1001895c:	1001e6a8 	.word	0x1001e6a8
10018960:	1001ec7c 	.word	0x1001ec7c
10018964:	1001ec6c 	.word	0x1001ec6c
10018968:	1001ea3c 	.word	0x1001ea3c
1001896c:	1001ea34 	.word	0x1001ea34
10018970:	1001ea38 	.word	0x1001ea38
10018974:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10018976:	f8dd b020 	ldr.w	fp, [sp, #32]
1001897a:	1c5f      	adds	r7, r3, #1
1001897c:	44bb      	add	fp, r7
1001897e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10018982:	9306      	str	r3, [sp, #24]
10018984:	2366      	movs	r3, #102	@ 0x66
10018986:	930e      	str	r3, [sp, #56]	@ 0x38
10018988:	e639      	b.n	100185fe <_svfprintf_r+0x17d6>
1001898a:	2170      	movs	r1, #112	@ 0x70
1001898c:	e4e9      	b.n	10018362 <_svfprintf_r+0x153a>
1001898e:	4a0b      	ldr	r2, [pc, #44]	@ (100189bc <_svfprintf_r+0x1b94>)
10018990:	9215      	str	r2, [sp, #84]	@ 0x54
10018992:	e448      	b.n	10018226 <_svfprintf_r+0x13fe>
10018994:	2302      	movs	r3, #2
10018996:	931c      	str	r3, [sp, #112]	@ 0x70
10018998:	e51a      	b.n	100183d0 <_svfprintf_r+0x15a8>
1001899a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001899c:	f8dd b01c 	ldr.w	fp, [sp, #28]
100189a0:	8993      	ldrh	r3, [r2, #12]
100189a2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100189a6:	8193      	strh	r3, [r2, #12]
100189a8:	f7ff b8db 	b.w	10017b62 <_svfprintf_r+0xd3a>
100189ac:	230c      	movs	r3, #12
100189ae:	f8cb 3000 	str.w	r3, [fp]
100189b2:	e702      	b.n	100187ba <_svfprintf_r+0x1992>
100189b4:	2300      	movs	r3, #0
100189b6:	9314      	str	r3, [sp, #80]	@ 0x50
100189b8:	9310      	str	r3, [sp, #64]	@ 0x40
100189ba:	e782      	b.n	100188c2 <_svfprintf_r+0x1a9a>
100189bc:	1001ec6c 	.word	0x1001ec6c

100189c0 <__smakebuf_r>:
100189c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100189c4:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
100189c8:	460c      	mov	r4, r1
100189ca:	0799      	lsls	r1, r3, #30
100189cc:	b096      	sub	sp, #88	@ 0x58
100189ce:	d508      	bpl.n	100189e2 <__smakebuf_r+0x22>
100189d0:	f104 0343 	add.w	r3, r4, #67	@ 0x43
100189d4:	2201      	movs	r2, #1
100189d6:	e9c4 3204 	strd	r3, r2, [r4, #16]
100189da:	6023      	str	r3, [r4, #0]
100189dc:	b016      	add	sp, #88	@ 0x58
100189de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
100189e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
100189e6:	2900      	cmp	r1, #0
100189e8:	4606      	mov	r6, r0
100189ea:	db26      	blt.n	10018a3a <__smakebuf_r+0x7a>
100189ec:	466a      	mov	r2, sp
100189ee:	f7fc fcf3 	bl	100153d8 <_fstat_r>
100189f2:	2800      	cmp	r0, #0
100189f4:	db1f      	blt.n	10018a36 <__smakebuf_r+0x76>
100189f6:	9d01      	ldr	r5, [sp, #4]
100189f8:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
100189fc:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
10018a00:	fab5 f585 	clz	r5, r5
10018a04:	f44f 6880 	mov.w	r8, #1024	@ 0x400
10018a08:	096d      	lsrs	r5, r5, #5
10018a0a:	f44f 6700 	mov.w	r7, #2048	@ 0x800
10018a0e:	4641      	mov	r1, r8
10018a10:	4630      	mov	r0, r6
10018a12:	f7f8 fa7d 	bl	10010f10 <_malloc_r>
10018a16:	b1e8      	cbz	r0, 10018a54 <__smakebuf_r+0x94>
10018a18:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10018a1c:	f8c4 8014 	str.w	r8, [r4, #20]
10018a20:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10018a24:	6020      	str	r0, [r4, #0]
10018a26:	6120      	str	r0, [r4, #16]
10018a28:	81a3      	strh	r3, [r4, #12]
10018a2a:	bb3d      	cbnz	r5, 10018a7c <__smakebuf_r+0xbc>
10018a2c:	433b      	orrs	r3, r7
10018a2e:	81a3      	strh	r3, [r4, #12]
10018a30:	b016      	add	sp, #88	@ 0x58
10018a32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10018a36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10018a3a:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
10018a3e:	d019      	beq.n	10018a74 <__smakebuf_r+0xb4>
10018a40:	f04f 0840 	mov.w	r8, #64	@ 0x40
10018a44:	2500      	movs	r5, #0
10018a46:	4641      	mov	r1, r8
10018a48:	4630      	mov	r0, r6
10018a4a:	462f      	mov	r7, r5
10018a4c:	f7f8 fa60 	bl	10010f10 <_malloc_r>
10018a50:	2800      	cmp	r0, #0
10018a52:	d1e1      	bne.n	10018a18 <__smakebuf_r+0x58>
10018a54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10018a58:	059a      	lsls	r2, r3, #22
10018a5a:	d4bf      	bmi.n	100189dc <__smakebuf_r+0x1c>
10018a5c:	f023 0303 	bic.w	r3, r3, #3
10018a60:	f104 0243 	add.w	r2, r4, #67	@ 0x43
10018a64:	f043 0302 	orr.w	r3, r3, #2
10018a68:	2101      	movs	r1, #1
10018a6a:	e9c4 2104 	strd	r2, r1, [r4, #16]
10018a6e:	81a3      	strh	r3, [r4, #12]
10018a70:	6022      	str	r2, [r4, #0]
10018a72:	e7b3      	b.n	100189dc <__smakebuf_r+0x1c>
10018a74:	f44f 6880 	mov.w	r8, #1024	@ 0x400
10018a78:	462f      	mov	r7, r5
10018a7a:	e7c8      	b.n	10018a0e <__smakebuf_r+0x4e>
10018a7c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10018a80:	4630      	mov	r0, r6
10018a82:	f003 fc67 	bl	1001c354 <_isatty_r>
10018a86:	b910      	cbnz	r0, 10018a8e <__smakebuf_r+0xce>
10018a88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10018a8c:	e7ce      	b.n	10018a2c <__smakebuf_r+0x6c>
10018a8e:	89a3      	ldrh	r3, [r4, #12]
10018a90:	f023 0303 	bic.w	r3, r3, #3
10018a94:	f043 0301 	orr.w	r3, r3, #1
10018a98:	b21b      	sxth	r3, r3
10018a9a:	e7c7      	b.n	10018a2c <__smakebuf_r+0x6c>

10018a9c <__ssvfscanf_r>:
10018a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018aa0:	f5ad 7d37 	sub.w	sp, sp, #732	@ 0x2dc
10018aa4:	468a      	mov	sl, r1
10018aa6:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10018aaa:	af02      	add	r7, sp, #8
10018aac:	048c      	lsls	r4, r1, #18
10018aae:	64f8      	str	r0, [r7, #76]	@ 0x4c
10018ab0:	4615      	mov	r5, r2
10018ab2:	637b      	str	r3, [r7, #52]	@ 0x34
10018ab4:	d409      	bmi.n	10018aca <__ssvfscanf_r+0x2e>
10018ab6:	f8da 3064 	ldr.w	r3, [sl, #100]	@ 0x64
10018aba:	f441 5100 	orr.w	r1, r1, #8192	@ 0x2000
10018abe:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
10018ac2:	f8aa 100c 	strh.w	r1, [sl, #12]
10018ac6:	f8ca 3064 	str.w	r3, [sl, #100]	@ 0x64
10018aca:	2300      	movs	r3, #0
10018acc:	461c      	mov	r4, r3
10018ace:	2208      	movs	r2, #8
10018ad0:	4619      	mov	r1, r3
10018ad2:	f107 0058 	add.w	r0, r7, #88	@ 0x58
10018ad6:	62bb      	str	r3, [r7, #40]	@ 0x28
10018ad8:	46a1      	mov	r9, r4
10018ada:	f7fc fbb9 	bl	10015250 <memset>
10018ade:	46a8      	mov	r8, r5
10018ae0:	63fc      	str	r4, [r7, #60]	@ 0x3c
10018ae2:	627c      	str	r4, [r7, #36]	@ 0x24
10018ae4:	63bc      	str	r4, [r7, #56]	@ 0x38
10018ae6:	643c      	str	r4, [r7, #64]	@ 0x40
10018ae8:	4b83      	ldr	r3, [pc, #524]	@ (10018cf8 <__ssvfscanf_r+0x25c>)
10018aea:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10018aee:	f7fc fc57 	bl	100153a0 <__locale_mb_cur_max>
10018af2:	f107 0258 	add.w	r2, r7, #88	@ 0x58
10018af6:	9200      	str	r2, [sp, #0]
10018af8:	4603      	mov	r3, r0
10018afa:	4642      	mov	r2, r8
10018afc:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10018afe:	f107 0154 	add.w	r1, r7, #84	@ 0x54
10018b02:	47a0      	blx	r4
10018b04:	2800      	cmp	r0, #0
10018b06:	db4c      	blt.n	10018ba2 <__ssvfscanf_r+0x106>
10018b08:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
10018b0a:	4480      	add	r8, r0
10018b0c:	4606      	mov	r6, r0
10018b0e:	2b00      	cmp	r3, #0
10018b10:	f000 85a8 	beq.w	10019664 <__ssvfscanf_r+0xbc8>
10018b14:	2801      	cmp	r0, #1
10018b16:	d053      	beq.n	10018bc0 <__ssvfscanf_r+0x124>
10018b18:	2b25      	cmp	r3, #37	@ 0x25
10018b1a:	d05a      	beq.n	10018bd2 <__ssvfscanf_r+0x136>
10018b1c:	2800      	cmp	r0, #0
10018b1e:	d0e3      	beq.n	10018ae8 <__ssvfscanf_r+0x4c>
10018b20:	f8da 3004 	ldr.w	r3, [sl, #4]
10018b24:	461a      	mov	r2, r3
10018b26:	eba8 0606 	sub.w	r6, r8, r6
10018b2a:	3801      	subs	r0, #1
10018b2c:	2a00      	cmp	r2, #0
10018b2e:	eb06 0400 	add.w	r4, r6, r0
10018b32:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
10018b36:	dd17      	ble.n	10018b68 <__ssvfscanf_r+0xcc>
10018b38:	f8da 3000 	ldr.w	r3, [sl]
10018b3c:	786a      	ldrb	r2, [r5, #1]
10018b3e:	7818      	ldrb	r0, [r3, #0]
10018b40:	4290      	cmp	r0, r2
10018b42:	f103 0301 	add.w	r3, r3, #1
10018b46:	f105 0101 	add.w	r1, r5, #1
10018b4a:	f040 858b 	bne.w	10019664 <__ssvfscanf_r+0xbc8>
10018b4e:	f8da 2004 	ldr.w	r2, [sl, #4]
10018b52:	f8ca 3000 	str.w	r3, [sl]
10018b56:	3a01      	subs	r2, #1
10018b58:	428c      	cmp	r4, r1
10018b5a:	f8ca 2004 	str.w	r2, [sl, #4]
10018b5e:	f000 809b 	beq.w	10018c98 <__ssvfscanf_r+0x1fc>
10018b62:	2a00      	cmp	r2, #0
10018b64:	460d      	mov	r5, r1
10018b66:	dce7      	bgt.n	10018b38 <__ssvfscanf_r+0x9c>
10018b68:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10018b6a:	4651      	mov	r1, sl
10018b6c:	f004 fce6 	bl	1001d53c <__ssrefill_r>
10018b70:	2800      	cmp	r0, #0
10018b72:	d0e1      	beq.n	10018b38 <__ssvfscanf_r+0x9c>
10018b74:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10018b76:	2b00      	cmp	r3, #0
10018b78:	f001 81e3 	beq.w	10019f42 <__ssvfscanf_r+0x14a6>
10018b7c:	f8ba 300c 	ldrh.w	r3, [sl, #12]
10018b80:	f013 0f40 	tst.w	r3, #64	@ 0x40
10018b84:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10018b86:	f041 81dd 	bne.w	10019f44 <__ssvfscanf_r+0x14a8>
10018b8a:	b123      	cbz	r3, 10018b96 <__ssvfscanf_r+0xfa>
10018b8c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10018b8e:	6818      	ldr	r0, [r3, #0]
10018b90:	b108      	cbz	r0, 10018b96 <__ssvfscanf_r+0xfa>
10018b92:	f7f8 f9b5 	bl	10010f00 <free>
10018b96:	6c38      	ldr	r0, [r7, #64]	@ 0x40
10018b98:	f507 7735 	add.w	r7, r7, #724	@ 0x2d4
10018b9c:	46bd      	mov	sp, r7
10018b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018ba2:	f64f 73fd 	movw	r3, #65533	@ 0xfffd
10018ba6:	2208      	movs	r2, #8
10018ba8:	2100      	movs	r1, #0
10018baa:	f107 0058 	add.w	r0, r7, #88	@ 0x58
10018bae:	657b      	str	r3, [r7, #84]	@ 0x54
10018bb0:	f7fc fb4e 	bl	10015250 <memset>
10018bb4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
10018bb6:	f108 0801 	add.w	r8, r8, #1
10018bba:	2b00      	cmp	r3, #0
10018bbc:	f000 8552 	beq.w	10019664 <__ssvfscanf_r+0xbc8>
10018bc0:	4a4e      	ldr	r2, [pc, #312]	@ (10018cfc <__ssvfscanf_r+0x260>)
10018bc2:	5cd2      	ldrb	r2, [r2, r3]
10018bc4:	0710      	lsls	r0, r2, #28
10018bc6:	f100 855b 	bmi.w	10019680 <__ssvfscanf_r+0xbe4>
10018bca:	2601      	movs	r6, #1
10018bcc:	2b25      	cmp	r3, #37	@ 0x25
10018bce:	4630      	mov	r0, r6
10018bd0:	d1a6      	bne.n	10018b20 <__ssvfscanf_r+0x84>
10018bd2:	2400      	movs	r4, #0
10018bd4:	f898 2000 	ldrb.w	r2, [r8]
10018bd8:	4625      	mov	r5, r4
10018bda:	f1a2 0325 	sub.w	r3, r2, #37	@ 0x25
10018bde:	f108 0101 	add.w	r1, r8, #1
10018be2:	2b55      	cmp	r3, #85	@ 0x55
10018be4:	f200 8649 	bhi.w	1001987a <__ssvfscanf_r+0xdde>
10018be8:	e8df f013 	tbh	[pc, r3, lsl #1]
10018bec:	0647073d 	.word	0x0647073d
10018bf0:	06470647 	.word	0x06470647
10018bf4:	07340647 	.word	0x07340647
10018bf8:	06470647 	.word	0x06470647
10018bfc:	06470647 	.word	0x06470647
10018c00:	064d0647 	.word	0x064d0647
10018c04:	064d064d 	.word	0x064d064d
10018c08:	064d064d 	.word	0x064d064d
10018c0c:	064d064d 	.word	0x064d064d
10018c10:	064d064d 	.word	0x064d064d
10018c14:	0647064d 	.word	0x0647064d
10018c18:	06470647 	.word	0x06470647
10018c1c:	06470647 	.word	0x06470647
10018c20:	06470647 	.word	0x06470647
10018c24:	06470658 	.word	0x06470658
10018c28:	04f4006b 	.word	0x04f4006b
10018c2c:	06580658 	.word	0x06580658
10018c30:	06470658 	.word	0x06470658
10018c34:	06470647 	.word	0x06470647
10018c38:	00620647 	.word	0x00620647
10018c3c:	06470647 	.word	0x06470647
10018c40:	064704ff 	.word	0x064704ff
10018c44:	06470647 	.word	0x06470647
10018c48:	064704b5 	.word	0x064704b5
10018c4c:	06470647 	.word	0x06470647
10018c50:	06980647 	.word	0x06980647
10018c54:	06470647 	.word	0x06470647
10018c58:	064706d9 	.word	0x064706d9
10018c5c:	06470647 	.word	0x06470647
10018c60:	06470647 	.word	0x06470647
10018c64:	06470658 	.word	0x06470658
10018c68:	04f6006d 	.word	0x04f6006d
10018c6c:	06580658 	.word	0x06580658
10018c70:	06ed0658 	.word	0x06ed0658
10018c74:	006206e4 	.word	0x006206e4
10018c78:	071e0647 	.word	0x071e0647
10018c7c:	06fd070f 	.word	0x06fd070f
10018c80:	06fa0501 	.word	0x06fa0501
10018c84:	06470647 	.word	0x06470647
10018c88:	005b04b7 	.word	0x005b04b7
10018c8c:	0647072b 	.word	0x0647072b
10018c90:	06980647 	.word	0x06980647
10018c94:	005b0647 	.word	0x005b0647
10018c98:	3502      	adds	r5, #2
10018c9a:	444d      	add	r5, r9
10018c9c:	eba5 0906 	sub.w	r9, r5, r6
10018ca0:	e722      	b.n	10018ae8 <__ssvfscanf_r+0x4c>
10018ca2:	0723      	lsls	r3, r4, #28
10018ca4:	f040 84de 	bne.w	10019664 <__ssvfscanf_r+0xbc8>
10018ca8:	f898 2001 	ldrb.w	r2, [r8, #1]
10018cac:	4688      	mov	r8, r1
10018cae:	e794      	b.n	10018bda <__ssvfscanf_r+0x13e>
10018cb0:	0722      	lsls	r2, r4, #28
10018cb2:	f040 84d7 	bne.w	10019664 <__ssvfscanf_r+0xbc8>
10018cb6:	f898 2001 	ldrb.w	r2, [r8, #1]
10018cba:	f044 0402 	orr.w	r4, r4, #2
10018cbe:	4688      	mov	r8, r1
10018cc0:	e78b      	b.n	10018bda <__ssvfscanf_r+0x13e>
10018cc2:	f044 0401 	orr.w	r4, r4, #1
10018cc6:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
10018cca:	4688      	mov	r8, r1
10018ccc:	f04f 0b00 	mov.w	fp, #0
10018cd0:	f8da 3004 	ldr.w	r3, [sl, #4]
10018cd4:	2b00      	cmp	r3, #0
10018cd6:	f340 8448 	ble.w	1001956a <__ssvfscanf_r+0xace>
10018cda:	0660      	lsls	r0, r4, #25
10018cdc:	f140 844f 	bpl.w	1001957e <__ssvfscanf_r+0xae2>
10018ce0:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
10018ce4:	2b03      	cmp	r3, #3
10018ce6:	f200 8793 	bhi.w	10019c10 <__ssvfscanf_r+0x1174>
10018cea:	e8df f013 	tbh	[pc, r3, lsl #1]
10018cee:	02b1      	.short	0x02b1
10018cf0:	014801f4 	.word	0x014801f4
10018cf4:	0009      	.short	0x0009
10018cf6:	bf00      	nop
10018cf8:	2000042c 	.word	0x2000042c
10018cfc:	1001eae1 	.word	0x1001eae1
10018d00:	f444 63f0 	orr.w	r3, r4, #1920	@ 0x780
10018d04:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10018d06:	64bb      	str	r3, [r7, #72]	@ 0x48
10018d08:	f7fc fb50 	bl	100153ac <_localeconv_r>
10018d0c:	6803      	ldr	r3, [r0, #0]
10018d0e:	61fb      	str	r3, [r7, #28]
10018d10:	1e6b      	subs	r3, r5, #1
10018d12:	f5b3 7fae 	cmp.w	r3, #348	@ 0x15c
10018d16:	f04f 0400 	mov.w	r4, #0
10018d1a:	bf88      	it	hi
10018d1c:	f46f 70ae 	mvnhi.w	r0, #348	@ 0x15c
10018d20:	e9c7 4404 	strd	r4, r4, [r7, #16]
10018d24:	bf88      	it	hi
10018d26:	eb05 0c00 	addhi.w	ip, r5, r0
10018d2a:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
10018d2e:	bf94      	ite	ls
10018d30:	f04f 0c00 	movls.w	ip, #0
10018d34:	f240 155d 	movwhi	r5, #349	@ 0x15d
10018d38:	62fb      	str	r3, [r7, #44]	@ 0x2c
10018d3a:	647c      	str	r4, [r7, #68]	@ 0x44
10018d3c:	633c      	str	r4, [r7, #48]	@ 0x30
10018d3e:	61bc      	str	r4, [r7, #24]
10018d40:	469b      	mov	fp, r3
10018d42:	f8c7 c00c 	str.w	ip, [r7, #12]
10018d46:	f8c7 8020 	str.w	r8, [r7, #32]
10018d4a:	f8da 1000 	ldr.w	r1, [sl]
10018d4e:	780a      	ldrb	r2, [r1, #0]
10018d50:	f1a2 032b 	sub.w	r3, r2, #43	@ 0x2b
10018d54:	2b4e      	cmp	r3, #78	@ 0x4e
10018d56:	d850      	bhi.n	10018dfa <__ssvfscanf_r+0x35e>
10018d58:	e8df f013 	tbh	[pc, r3, lsl #1]
10018d5c:	004f03b7 	.word	0x004f03b7
10018d60:	004f03b7 	.word	0x004f03b7
10018d64:	0099004f 	.word	0x0099004f
10018d68:	009d009d 	.word	0x009d009d
10018d6c:	009d009d 	.word	0x009d009d
10018d70:	009d009d 	.word	0x009d009d
10018d74:	009d009d 	.word	0x009d009d
10018d78:	004f009d 	.word	0x004f009d
10018d7c:	004f004f 	.word	0x004f004f
10018d80:	004f004f 	.word	0x004f004f
10018d84:	004f004f 	.word	0x004f004f
10018d88:	033b03ac 	.word	0x033b03ac
10018d8c:	033b033b 	.word	0x033b033b
10018d90:	03d003d9 	.word	0x03d003d9
10018d94:	004f004f 	.word	0x004f004f
10018d98:	004f03bf 	.word	0x004f03bf
10018d9c:	004f004f 	.word	0x004f004f
10018da0:	0393004f 	.word	0x0393004f
10018da4:	0372004f 	.word	0x0372004f
10018da8:	004f004f 	.word	0x004f004f
10018dac:	036d004f 	.word	0x036d004f
10018db0:	004f004f 	.word	0x004f004f
10018db4:	0356004f 	.word	0x0356004f
10018db8:	004f03a7 	.word	0x004f03a7
10018dbc:	004f004f 	.word	0x004f004f
10018dc0:	004f004f 	.word	0x004f004f
10018dc4:	004f004f 	.word	0x004f004f
10018dc8:	033b03ac 	.word	0x033b03ac
10018dcc:	033b033b 	.word	0x033b033b
10018dd0:	03d003d9 	.word	0x03d003d9
10018dd4:	004f004f 	.word	0x004f004f
10018dd8:	004f03bf 	.word	0x004f03bf
10018ddc:	004f004f 	.word	0x004f004f
10018de0:	0393004f 	.word	0x0393004f
10018de4:	0372004f 	.word	0x0372004f
10018de8:	004f004f 	.word	0x004f004f
10018dec:	036d004f 	.word	0x036d004f
10018df0:	004f004f 	.word	0x004f004f
10018df4:	0356004f 	.word	0x0356004f
10018df8:	03a7      	.short	0x03a7
10018dfa:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10018dfc:	059e      	lsls	r6, r3, #22
10018dfe:	d568      	bpl.n	10018ed2 <__ssvfscanf_r+0x436>
10018e00:	f8d7 801c 	ldr.w	r8, [r7, #28]
10018e04:	f898 3000 	ldrb.w	r3, [r8]
10018e08:	4293      	cmp	r3, r2
10018e0a:	d162      	bne.n	10018ed2 <__ssvfscanf_r+0x436>
10018e0c:	e9c7 5401 	strd	r5, r4, [r7, #4]
10018e10:	2600      	movs	r6, #0
10018e12:	4655      	mov	r5, sl
10018e14:	e006      	b.n	10018e24 <__ssvfscanf_r+0x388>
10018e16:	6029      	str	r1, [r5, #0]
10018e18:	f891 e000 	ldrb.w	lr, [r1]
10018e1c:	f898 0000 	ldrb.w	r0, [r8]
10018e20:	4586      	cmp	lr, r0
10018e22:	d11b      	bne.n	10018e5c <__ssvfscanf_r+0x3c0>
10018e24:	f818 0f01 	ldrb.w	r0, [r8, #1]!
10018e28:	46b2      	mov	sl, r6
10018e2a:	464c      	mov	r4, r9
10018e2c:	3101      	adds	r1, #1
10018e2e:	3601      	adds	r6, #1
10018e30:	f109 0901 	add.w	r9, r9, #1
10018e34:	2800      	cmp	r0, #0
10018e36:	f000 8693 	beq.w	10019b60 <__ssvfscanf_r+0x10c4>
10018e3a:	6868      	ldr	r0, [r5, #4]
10018e3c:	3801      	subs	r0, #1
10018e3e:	2800      	cmp	r0, #0
10018e40:	6068      	str	r0, [r5, #4]
10018e42:	dce8      	bgt.n	10018e16 <__ssvfscanf_r+0x37a>
10018e44:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10018e46:	4629      	mov	r1, r5
10018e48:	f004 fb78 	bl	1001d53c <__ssrefill_r>
10018e4c:	b930      	cbnz	r0, 10018e5c <__ssvfscanf_r+0x3c0>
10018e4e:	6829      	ldr	r1, [r5, #0]
10018e50:	f898 0000 	ldrb.w	r0, [r8]
10018e54:	f891 e000 	ldrb.w	lr, [r1]
10018e58:	4586      	cmp	lr, r0
10018e5a:	d0e3      	beq.n	10018e24 <__ssvfscanf_r+0x388>
10018e5c:	4652      	mov	r2, sl
10018e5e:	46aa      	mov	sl, r5
10018e60:	e9d7 5807 	ldrd	r5, r8, [r7, #28]
10018e64:	4623      	mov	r3, r4
10018e66:	442e      	add	r6, r5
10018e68:	68bc      	ldr	r4, [r7, #8]
10018e6a:	623c      	str	r4, [r7, #32]
10018e6c:	4634      	mov	r4, r6
10018e6e:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
10018e70:	61fa      	str	r2, [r7, #28]
10018e72:	4699      	mov	r9, r3
10018e74:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
10018e78:	4652      	mov	r2, sl
10018e7a:	4630      	mov	r0, r6
10018e7c:	f004 fb22 	bl	1001d4c4 <_sungetc_r>
10018e80:	42ac      	cmp	r4, r5
10018e82:	d1f7      	bne.n	10018e74 <__ssvfscanf_r+0x3d8>
10018e84:	69fa      	ldr	r2, [r7, #28]
10018e86:	6a3c      	ldr	r4, [r7, #32]
10018e88:	eba9 0902 	sub.w	r9, r9, r2
10018e8c:	e023      	b.n	10018ed6 <__ssvfscanf_r+0x43a>
10018e8e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10018e90:	05d9      	lsls	r1, r3, #23
10018e92:	f100 854e 	bmi.w	10019932 <__ssvfscanf_r+0xe96>
10018e96:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10018e98:	191b      	adds	r3, r3, r4
10018e9a:	d11a      	bne.n	10018ed2 <__ssvfscanf_r+0x436>
10018e9c:	461c      	mov	r4, r3
10018e9e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10018ea0:	f423 73c0 	bic.w	r3, r3, #384	@ 0x180
10018ea4:	e9c7 4311 	strd	r4, r3, [r7, #68]	@ 0x44
10018ea8:	f80b 2b01 	strb.w	r2, [fp], #1
10018eac:	3d01      	subs	r5, #1
10018eae:	f8da 3004 	ldr.w	r3, [sl, #4]
10018eb2:	3b01      	subs	r3, #1
10018eb4:	2b00      	cmp	r3, #0
10018eb6:	f109 0901 	add.w	r9, r9, #1
10018eba:	f8ca 3004 	str.w	r3, [sl, #4]
10018ebe:	f340 83d4 	ble.w	1001966a <__ssvfscanf_r+0xbce>
10018ec2:	f8da 3000 	ldr.w	r3, [sl]
10018ec6:	3301      	adds	r3, #1
10018ec8:	f8ca 3000 	str.w	r3, [sl]
10018ecc:	2d00      	cmp	r5, #0
10018ece:	f47f af3c 	bne.w	10018d4a <__ssvfscanf_r+0x2ae>
10018ed2:	f8d7 8020 	ldr.w	r8, [r7, #32]
10018ed6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10018ed8:	2b00      	cmp	r3, #0
10018eda:	f040 8337 	bne.w	1001954c <__ssvfscanf_r+0xab0>
10018ede:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10018ee0:	3b01      	subs	r3, #1
10018ee2:	2b01      	cmp	r3, #1
10018ee4:	f240 83b1 	bls.w	1001964a <__ssvfscanf_r+0xbae>
10018ee8:	1e63      	subs	r3, r4, #1
10018eea:	2b06      	cmp	r3, #6
10018eec:	f240 864f 	bls.w	10019b8e <__ssvfscanf_r+0x10f2>
10018ef0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10018ef2:	05d8      	lsls	r0, r3, #23
10018ef4:	d51c      	bpl.n	10018f30 <__ssvfscanf_r+0x494>
10018ef6:	0559      	lsls	r1, r3, #21
10018ef8:	f101 8127 	bmi.w	1001a14a <__ssvfscanf_r+0x16ae>
10018efc:	f81b 1c01 	ldrb.w	r1, [fp, #-1]
10018f00:	2965      	cmp	r1, #101	@ 0x65
10018f02:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
10018f06:	f109 34ff 	add.w	r4, r9, #4294967295	@ 0xffffffff
10018f0a:	d00b      	beq.n	10018f24 <__ssvfscanf_r+0x488>
10018f0c:	2945      	cmp	r1, #69	@ 0x45
10018f0e:	d009      	beq.n	10018f24 <__ssvfscanf_r+0x488>
10018f10:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10018f12:	4652      	mov	r2, sl
10018f14:	f004 fad6 	bl	1001d4c4 <_sungetc_r>
10018f18:	f81b 1c02 	ldrb.w	r1, [fp, #-2]
10018f1c:	f1a9 0402 	sub.w	r4, r9, #2
10018f20:	f1ab 0302 	sub.w	r3, fp, #2
10018f24:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10018f26:	4652      	mov	r2, sl
10018f28:	46a1      	mov	r9, r4
10018f2a:	469b      	mov	fp, r3
10018f2c:	f004 faca 	bl	1001d4c4 <_sungetc_r>
10018f30:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10018f32:	f013 0210 	ands.w	r2, r3, #16
10018f36:	f47f add7 	bne.w	10018ae8 <__ssvfscanf_r+0x4c>
10018f3a:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
10018f3e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
10018f42:	f88b 2000 	strb.w	r2, [fp]
10018f46:	f000 850f 	beq.w	10019968 <__ssvfscanf_r+0xecc>
10018f4a:	697b      	ldr	r3, [r7, #20]
10018f4c:	2b00      	cmp	r3, #0
10018f4e:	f041 8023 	bne.w	10019f98 <__ssvfscanf_r+0x14fc>
10018f52:	2200      	movs	r2, #0
10018f54:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
10018f56:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10018f58:	f002 ffbc 	bl	1001bed4 <_strtod_r>
10018f5c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10018f5e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10018f60:	07d2      	lsls	r2, r2, #31
10018f62:	4605      	mov	r5, r0
10018f64:	460e      	mov	r6, r1
10018f66:	f103 0404 	add.w	r4, r3, #4
10018f6a:	f140 8629 	bpl.w	10019bc0 <__ssvfscanf_r+0x1124>
10018f6e:	681b      	ldr	r3, [r3, #0]
10018f70:	e9c3 5600 	strd	r5, r6, [r3]
10018f74:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10018f76:	637c      	str	r4, [r7, #52]	@ 0x34
10018f78:	3301      	adds	r3, #1
10018f7a:	643b      	str	r3, [r7, #64]	@ 0x40
10018f7c:	e5b4      	b.n	10018ae8 <__ssvfscanf_r+0x4c>
10018f7e:	1e6b      	subs	r3, r5, #1
10018f80:	f5b3 7fae 	cmp.w	r3, #348	@ 0x15c
10018f84:	bf88      	it	hi
10018f86:	f46f 72ae 	mvnhi.w	r2, #348	@ 0x15c
10018f8a:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
10018f8e:	bf8c      	ite	hi
10018f90:	18a9      	addhi	r1, r5, r2
10018f92:	2100      	movls	r1, #0
10018f94:	62fb      	str	r3, [r7, #44]	@ 0x2c
10018f96:	461e      	mov	r6, r3
10018f98:	6bba      	ldr	r2, [r7, #56]	@ 0x38
10018f9a:	6479      	str	r1, [r7, #68]	@ 0x44
10018f9c:	4653      	mov	r3, sl
10018f9e:	f444 6458 	orr.w	r4, r4, #3456	@ 0xd80
10018fa2:	46ca      	mov	sl, r9
10018fa4:	bf88      	it	hi
10018fa6:	f240 155d 	movwhi	r5, #349	@ 0x15d
10018faa:	f04f 0b00 	mov.w	fp, #0
10018fae:	4699      	mov	r9, r3
10018fb0:	f8d9 0000 	ldr.w	r0, [r9]
10018fb4:	f890 c000 	ldrb.w	ip, [r0]
10018fb8:	f1ac 032b 	sub.w	r3, ip, #43	@ 0x2b
10018fbc:	2b4d      	cmp	r3, #77	@ 0x4d
10018fbe:	d862      	bhi.n	10019086 <__ssvfscanf_r+0x5ea>
10018fc0:	e8df f013 	tbh	[pc, r3, lsl #1]
10018fc4:	006102b5 	.word	0x006102b5
10018fc8:	006102b5 	.word	0x006102b5
10018fcc:	031e0061 	.word	0x031e0061
10018fd0:	02150215 	.word	0x02150215
10018fd4:	02150215 	.word	0x02150215
10018fd8:	02150215 	.word	0x02150215
10018fdc:	02bb0215 	.word	0x02bb0215
10018fe0:	006102bb 	.word	0x006102bb
10018fe4:	00610061 	.word	0x00610061
10018fe8:	00610061 	.word	0x00610061
10018fec:	00610061 	.word	0x00610061
10018ff0:	004e004e 	.word	0x004e004e
10018ff4:	004e004e 	.word	0x004e004e
10018ff8:	004e004e 	.word	0x004e004e
10018ffc:	00610061 	.word	0x00610061
10019000:	00610061 	.word	0x00610061
10019004:	00610061 	.word	0x00610061
10019008:	00610061 	.word	0x00610061
1001900c:	00610061 	.word	0x00610061
10019010:	00610061 	.word	0x00610061
10019014:	00610061 	.word	0x00610061
10019018:	00610061 	.word	0x00610061
1001901c:	02a90061 	.word	0x02a90061
10019020:	00610061 	.word	0x00610061
10019024:	00610061 	.word	0x00610061
10019028:	00610061 	.word	0x00610061
1001902c:	00610061 	.word	0x00610061
10019030:	004e004e 	.word	0x004e004e
10019034:	004e004e 	.word	0x004e004e
10019038:	004e004e 	.word	0x004e004e
1001903c:	00610061 	.word	0x00610061
10019040:	00610061 	.word	0x00610061
10019044:	00610061 	.word	0x00610061
10019048:	00610061 	.word	0x00610061
1001904c:	00610061 	.word	0x00610061
10019050:	00610061 	.word	0x00610061
10019054:	00610061 	.word	0x00610061
10019058:	00610061 	.word	0x00610061
1001905c:	02a90061 	.word	0x02a90061
10019060:	2a0a      	cmp	r2, #10
10019062:	dd10      	ble.n	10019086 <__ssvfscanf_r+0x5ea>
10019064:	f424 6438 	bic.w	r4, r4, #2944	@ 0xb80
10019068:	f806 cb01 	strb.w	ip, [r6], #1
1001906c:	f8d9 3004 	ldr.w	r3, [r9, #4]
10019070:	3b01      	subs	r3, #1
10019072:	2b00      	cmp	r3, #0
10019074:	f8c9 3004 	str.w	r3, [r9, #4]
10019078:	f340 82dd 	ble.w	10019636 <__ssvfscanf_r+0xb9a>
1001907c:	3001      	adds	r0, #1
1001907e:	f8c9 0000 	str.w	r0, [r9]
10019082:	3d01      	subs	r5, #1
10019084:	d194      	bne.n	10018fb0 <__ssvfscanf_r+0x514>
10019086:	464b      	mov	r3, r9
10019088:	05e0      	lsls	r0, r4, #23
1001908a:	46d1      	mov	r9, sl
1001908c:	63ba      	str	r2, [r7, #56]	@ 0x38
1001908e:	469a      	mov	sl, r3
10019090:	d507      	bpl.n	100190a2 <__ssvfscanf_r+0x606>
10019092:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
10019094:	429e      	cmp	r6, r3
10019096:	f200 8479 	bhi.w	1001998c <__ssvfscanf_r+0xef0>
1001909a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001909c:	429e      	cmp	r6, r3
1001909e:	f000 82e1 	beq.w	10019664 <__ssvfscanf_r+0xbc8>
100190a2:	f014 0210 	ands.w	r2, r4, #16
100190a6:	d111      	bne.n	100190cc <__ssvfscanf_r+0x630>
100190a8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100190aa:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
100190ac:	6abd      	ldr	r5, [r7, #40]	@ 0x28
100190ae:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100190b0:	7032      	strb	r2, [r6, #0]
100190b2:	47a8      	blx	r5
100190b4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100190b6:	06a1      	lsls	r1, r4, #26
100190b8:	f103 0504 	add.w	r5, r3, #4
100190bc:	f140 844c 	bpl.w	10019958 <__ssvfscanf_r+0xebc>
100190c0:	681b      	ldr	r3, [r3, #0]
100190c2:	6018      	str	r0, [r3, #0]
100190c4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
100190c6:	637d      	str	r5, [r7, #52]	@ 0x34
100190c8:	3301      	adds	r3, #1
100190ca:	643b      	str	r3, [r7, #64]	@ 0x40
100190cc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
100190ce:	1af6      	subs	r6, r6, r3
100190d0:	445e      	add	r6, fp
100190d2:	44b1      	add	r9, r6
100190d4:	e508      	b.n	10018ae8 <__ssvfscanf_r+0x4c>
100190d6:	2d00      	cmp	r5, #0
100190d8:	bf08      	it	eq
100190da:	f04f 35ff 	moveq.w	r5, #4294967295	@ 0xffffffff
100190de:	07e0      	lsls	r0, r4, #31
100190e0:	f004 0310 	and.w	r3, r4, #16
100190e4:	f140 82eb 	bpl.w	100196be <__ssvfscanf_r+0xc22>
100190e8:	2b00      	cmp	r3, #0
100190ea:	f040 84bf 	bne.w	10019a6c <__ssvfscanf_r+0xfd0>
100190ee:	6b7e      	ldr	r6, [r7, #52]	@ 0x34
100190f0:	0621      	lsls	r1, r4, #24
100190f2:	f856 2b04 	ldr.w	r2, [r6], #4
100190f6:	64ba      	str	r2, [r7, #72]	@ 0x48
100190f8:	f140 875d 	bpl.w	10019fb6 <__ssvfscanf_r+0x151a>
100190fc:	647b      	str	r3, [r7, #68]	@ 0x44
100190fe:	2a00      	cmp	r2, #0
10019100:	f000 82b0 	beq.w	10019664 <__ssvfscanf_r+0xbc8>
10019104:	2080      	movs	r0, #128	@ 0x80
10019106:	f7f7 fef3 	bl	10010ef0 <malloc>
1001910a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001910c:	4602      	mov	r2, r0
1001910e:	2800      	cmp	r0, #0
10019110:	f000 8717 	beq.w	10019f42 <__ssvfscanf_r+0x14a6>
10019114:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10019116:	6008      	str	r0, [r1, #0]
10019118:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
1001911a:	88c4      	ldrh	r4, [r0, #6]
1001911c:	8881      	ldrh	r1, [r0, #4]
1001911e:	428c      	cmp	r4, r1
10019120:	f080 8607 	bcs.w	10019d32 <__ssvfscanf_r+0x1296>
10019124:	6800      	ldr	r0, [r0, #0]
10019126:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10019128:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
1001912c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
1001912e:	637e      	str	r6, [r7, #52]	@ 0x34
10019130:	3401      	adds	r4, #1
10019132:	80cc      	strh	r4, [r1, #6]
10019134:	4696      	mov	lr, r2
10019136:	f04f 0c20 	mov.w	ip, #32
1001913a:	f8da 1000 	ldr.w	r1, [sl]
1001913e:	4eaf      	ldr	r6, [pc, #700]	@ (100193fc <__ssvfscanf_r+0x960>)
10019140:	7809      	ldrb	r1, [r1, #0]
10019142:	f816 b001 	ldrb.w	fp, [r6, r1]
10019146:	f01b 0b08 	ands.w	fp, fp, #8
1001914a:	d170      	bne.n	1001922e <__ssvfscanf_r+0x792>
1001914c:	f8c7 801c 	str.w	r8, [r7, #28]
10019150:	623e      	str	r6, [r7, #32]
10019152:	f8c7 e030 	str.w	lr, [r7, #48]	@ 0x30
10019156:	462e      	mov	r6, r5
10019158:	f8c7 c044 	str.w	ip, [r7, #68]	@ 0x44
1001915c:	4698      	mov	r8, r3
1001915e:	4615      	mov	r5, r2
10019160:	f7fc f91e 	bl	100153a0 <__locale_mb_cur_max>
10019164:	4558      	cmp	r0, fp
10019166:	f43f ad05 	beq.w	10018b74 <__ssvfscanf_r+0xd8>
1001916a:	e9da 3200 	ldrd	r3, r2, [sl]
1001916e:	f507 71b8 	add.w	r1, r7, #368	@ 0x170
10019172:	4608      	mov	r0, r1
10019174:	62f9      	str	r1, [r7, #44]	@ 0x2c
10019176:	f813 1b01 	ldrb.w	r1, [r3], #1
1001917a:	f800 100b 	strb.w	r1, [r0, fp]
1001917e:	3a01      	subs	r2, #1
10019180:	e9ca 3200 	strd	r3, r2, [sl]
10019184:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
10019186:	2b03      	cmp	r3, #3
10019188:	f10b 0b01 	add.w	fp, fp, #1
1001918c:	f107 0468 	add.w	r4, r7, #104	@ 0x68
10019190:	d102      	bne.n	10019198 <__ssvfscanf_r+0x6fc>
10019192:	6823      	ldr	r3, [r4, #0]
10019194:	2b04      	cmp	r3, #4
10019196:	d004      	beq.n	100191a2 <__ssvfscanf_r+0x706>
10019198:	2208      	movs	r2, #8
1001919a:	2100      	movs	r1, #0
1001919c:	4620      	mov	r0, r4
1001919e:	f7fc f857 	bl	10015250 <memset>
100191a2:	9400      	str	r4, [sp, #0]
100191a4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
100191a6:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100191a8:	465b      	mov	r3, fp
100191aa:	4629      	mov	r1, r5
100191ac:	f003 fa84 	bl	1001c6b8 <_mbrtowc_r>
100191b0:	1c42      	adds	r2, r0, #1
100191b2:	6278      	str	r0, [r7, #36]	@ 0x24
100191b4:	f43f acde 	beq.w	10018b74 <__ssvfscanf_r+0xd8>
100191b8:	2800      	cmp	r0, #0
100191ba:	f000 860c 	beq.w	10019dd6 <__ssvfscanf_r+0x133a>
100191be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
100191c0:	3302      	adds	r3, #2
100191c2:	d01e      	beq.n	10019202 <__ssvfscanf_r+0x766>
100191c4:	6828      	ldr	r0, [r5, #0]
100191c6:	f003 fb29 	bl	1001c81c <iswspace>
100191ca:	2800      	cmp	r0, #0
100191cc:	f040 877a 	bne.w	1001a0c4 <__ssvfscanf_r+0x1628>
100191d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
100191d2:	2b03      	cmp	r3, #3
100191d4:	44d9      	add	r9, fp
100191d6:	d102      	bne.n	100191de <__ssvfscanf_r+0x742>
100191d8:	6823      	ldr	r3, [r4, #0]
100191da:	2b04      	cmp	r3, #4
100191dc:	d000      	beq.n	100191e0 <__ssvfscanf_r+0x744>
100191de:	3e01      	subs	r6, #1
100191e0:	f1b8 0f00 	cmp.w	r8, #0
100191e4:	f040 86e3 	bne.w	10019fae <__ssvfscanf_r+0x1512>
100191e8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100191ea:	3504      	adds	r5, #4
100191ec:	2b00      	cmp	r3, #0
100191ee:	f000 86de 	beq.w	10019fae <__ssvfscanf_r+0x1512>
100191f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100191f4:	1aec      	subs	r4, r5, r3
100191f6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100191f8:	ebb3 0fa4 	cmp.w	r3, r4, asr #2
100191fc:	f240 8794 	bls.w	1001a128 <__ssvfscanf_r+0x168c>
10019200:	46c3      	mov	fp, r8
10019202:	f8da 3004 	ldr.w	r3, [sl, #4]
10019206:	2b00      	cmp	r3, #0
10019208:	f340 8728 	ble.w	1001a05c <__ssvfscanf_r+0x15c0>
1001920c:	f8da 3000 	ldr.w	r3, [sl]
10019210:	6a3a      	ldr	r2, [r7, #32]
10019212:	781b      	ldrb	r3, [r3, #0]
10019214:	5cd3      	ldrb	r3, [r2, r3]
10019216:	0718      	lsls	r0, r3, #28
10019218:	d401      	bmi.n	1001921e <__ssvfscanf_r+0x782>
1001921a:	2e00      	cmp	r6, #0
1001921c:	d1a0      	bne.n	10019160 <__ssvfscanf_r+0x6c4>
1001921e:	4643      	mov	r3, r8
10019220:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
10019224:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
10019228:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001922c:	462a      	mov	r2, r5
1001922e:	2b00      	cmp	r3, #0
10019230:	f47f ac5a 	bne.w	10018ae8 <__ssvfscanf_r+0x4c>
10019234:	6013      	str	r3, [r2, #0]
10019236:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019238:	b133      	cbz	r3, 10019248 <__ssvfscanf_r+0x7ac>
1001923a:	eba2 020e 	sub.w	r2, r2, lr
1001923e:	1093      	asrs	r3, r2, #2
10019240:	3301      	adds	r3, #1
10019242:	459c      	cmp	ip, r3
10019244:	f200 8611 	bhi.w	10019e6a <__ssvfscanf_r+0x13ce>
10019248:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001924a:	3301      	adds	r3, #1
1001924c:	643b      	str	r3, [r7, #64]	@ 0x40
1001924e:	e44b      	b.n	10018ae8 <__ssvfscanf_r+0x4c>
10019250:	2d00      	cmp	r5, #0
10019252:	bf08      	it	eq
10019254:	f04f 35ff 	moveq.w	r5, #4294967295	@ 0xffffffff
10019258:	07e6      	lsls	r6, r4, #31
1001925a:	f004 0210 	and.w	r2, r4, #16
1001925e:	f140 829d 	bpl.w	1001979c <__ssvfscanf_r+0xd00>
10019262:	2a00      	cmp	r2, #0
10019264:	f040 843e 	bne.w	10019ae4 <__ssvfscanf_r+0x1048>
10019268:	6b79      	ldr	r1, [r7, #52]	@ 0x34
1001926a:	0624      	lsls	r4, r4, #24
1001926c:	f851 3b04 	ldr.w	r3, [r1], #4
10019270:	637b      	str	r3, [r7, #52]	@ 0x34
10019272:	6239      	str	r1, [r7, #32]
10019274:	f140 86aa 	bpl.w	10019fcc <__ssvfscanf_r+0x1530>
10019278:	64ba      	str	r2, [r7, #72]	@ 0x48
1001927a:	2b00      	cmp	r3, #0
1001927c:	f000 81f2 	beq.w	10019664 <__ssvfscanf_r+0xbc8>
10019280:	2080      	movs	r0, #128	@ 0x80
10019282:	f7f7 fe35 	bl	10010ef0 <malloc>
10019286:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10019288:	4683      	mov	fp, r0
1001928a:	2800      	cmp	r0, #0
1001928c:	f000 8659 	beq.w	10019f42 <__ssvfscanf_r+0x14a6>
10019290:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10019292:	6018      	str	r0, [r3, #0]
10019294:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019296:	88dc      	ldrh	r4, [r3, #6]
10019298:	8899      	ldrh	r1, [r3, #4]
1001929a:	428c      	cmp	r4, r1
1001929c:	f080 8535 	bcs.w	10019d0a <__ssvfscanf_r+0x126e>
100192a0:	6818      	ldr	r0, [r3, #0]
100192a2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100192a4:	f840 3024 	str.w	r3, [r0, r4, lsl #2]
100192a8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100192aa:	f8c7 b030 	str.w	fp, [r7, #48]	@ 0x30
100192ae:	3401      	adds	r4, #1
100192b0:	80dc      	strh	r4, [r3, #6]
100192b2:	2320      	movs	r3, #32
100192b4:	62fb      	str	r3, [r7, #44]	@ 0x2c
100192b6:	6a7c      	ldr	r4, [r7, #36]	@ 0x24
100192b8:	f8c7 801c 	str.w	r8, [r7, #28]
100192bc:	2600      	movs	r6, #0
100192be:	647a      	str	r2, [r7, #68]	@ 0x44
100192c0:	46a8      	mov	r8, r5
100192c2:	f7fc f86d 	bl	100153a0 <__locale_mb_cur_max>
100192c6:	42b0      	cmp	r0, r6
100192c8:	f43f ac54 	beq.w	10018b74 <__ssvfscanf_r+0xd8>
100192cc:	e9da 3200 	ldrd	r3, r2, [sl]
100192d0:	f507 70b8 	add.w	r0, r7, #368	@ 0x170
100192d4:	f813 1b01 	ldrb.w	r1, [r3], #1
100192d8:	5581      	strb	r1, [r0, r6]
100192da:	3a01      	subs	r2, #1
100192dc:	2c03      	cmp	r4, #3
100192de:	e9ca 3200 	strd	r3, r2, [sl]
100192e2:	f106 0601 	add.w	r6, r6, #1
100192e6:	f107 0560 	add.w	r5, r7, #96	@ 0x60
100192ea:	d102      	bne.n	100192f2 <__ssvfscanf_r+0x856>
100192ec:	682b      	ldr	r3, [r5, #0]
100192ee:	2b04      	cmp	r3, #4
100192f0:	d004      	beq.n	100192fc <__ssvfscanf_r+0x860>
100192f2:	2208      	movs	r2, #8
100192f4:	2100      	movs	r1, #0
100192f6:	4628      	mov	r0, r5
100192f8:	f7fb ffaa 	bl	10015250 <memset>
100192fc:	9500      	str	r5, [sp, #0]
100192fe:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10019300:	4633      	mov	r3, r6
10019302:	f507 72b8 	add.w	r2, r7, #368	@ 0x170
10019306:	4659      	mov	r1, fp
10019308:	f003 f9d6 	bl	1001c6b8 <_mbrtowc_r>
1001930c:	4604      	mov	r4, r0
1001930e:	1c60      	adds	r0, r4, #1
10019310:	f43f ac30 	beq.w	10018b74 <__ssvfscanf_r+0xd8>
10019314:	2c00      	cmp	r4, #0
10019316:	f040 83f2 	bne.w	10019afe <__ssvfscanf_r+0x1062>
1001931a:	f8cb 4000 	str.w	r4, [fp]
1001931e:	4623      	mov	r3, r4
10019320:	2208      	movs	r2, #8
10019322:	2100      	movs	r1, #0
10019324:	f107 0068 	add.w	r0, r7, #104	@ 0x68
10019328:	64bb      	str	r3, [r7, #72]	@ 0x48
1001932a:	f7fb ff91 	bl	10015250 <memset>
1001932e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019330:	461a      	mov	r2, r3
10019332:	4b33      	ldr	r3, [pc, #204]	@ (10019400 <__ssvfscanf_r+0x964>)
10019334:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
10019338:	64bb      	str	r3, [r7, #72]	@ 0x48
1001933a:	e9d7 c012 	ldrd	ip, r0, [r7, #72]	@ 0x48
1001933e:	f107 0368 	add.w	r3, r7, #104	@ 0x68
10019342:	f107 0150 	add.w	r1, r7, #80	@ 0x50
10019346:	47e0      	blx	ip
10019348:	2801      	cmp	r0, #1
1001934a:	bf0c      	ite	eq
1001934c:	f897 3050 	ldrbeq.w	r3, [r7, #80]	@ 0x50
10019350:	2300      	movne	r3, #0
10019352:	f107 0270 	add.w	r2, r7, #112	@ 0x70
10019356:	5cd3      	ldrb	r3, [r2, r3]
10019358:	2b00      	cmp	r3, #0
1001935a:	f000 863e 	beq.w	10019fda <__ssvfscanf_r+0x153e>
1001935e:	2c03      	cmp	r4, #3
10019360:	44b1      	add	r9, r6
10019362:	f000 83d5 	beq.w	10019b10 <__ssvfscanf_r+0x1074>
10019366:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
1001936a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001936c:	2b00      	cmp	r3, #0
1001936e:	f040 83c4 	bne.w	10019afa <__ssvfscanf_r+0x105e>
10019372:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10019374:	f10b 0b04 	add.w	fp, fp, #4
10019378:	2b00      	cmp	r3, #0
1001937a:	f000 83be 	beq.w	10019afa <__ssvfscanf_r+0x105e>
1001937e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10019380:	ebab 0503 	sub.w	r5, fp, r3
10019384:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
10019386:	ebb3 0fa5 	cmp.w	r3, r5, asr #2
1001938a:	f240 83d8 	bls.w	10019b3e <__ssvfscanf_r+0x10a2>
1001938e:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
10019390:	f8da 3004 	ldr.w	r3, [sl, #4]
10019394:	2b00      	cmp	r3, #0
10019396:	f340 82a3 	ble.w	100198e0 <__ssvfscanf_r+0xe44>
1001939a:	f1b8 0f00 	cmp.w	r8, #0
1001939e:	d190      	bne.n	100192c2 <__ssvfscanf_r+0x826>
100193a0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
100193a2:	f8d7 801c 	ldr.w	r8, [r7, #28]
100193a6:	627c      	str	r4, [r7, #36]	@ 0x24
100193a8:	b97a      	cbnz	r2, 100193ca <__ssvfscanf_r+0x92e>
100193aa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100193ac:	f8cb 2000 	str.w	r2, [fp]
100193b0:	b143      	cbz	r3, 100193c4 <__ssvfscanf_r+0x928>
100193b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100193b4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
100193b6:	ebab 0303 	sub.w	r3, fp, r3
100193ba:	109a      	asrs	r2, r3, #2
100193bc:	3201      	adds	r2, #1
100193be:	4291      	cmp	r1, r2
100193c0:	f200 86a7 	bhi.w	1001a112 <__ssvfscanf_r+0x1676>
100193c4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
100193c6:	3301      	adds	r3, #1
100193c8:	643b      	str	r3, [r7, #64]	@ 0x40
100193ca:	6a3b      	ldr	r3, [r7, #32]
100193cc:	637b      	str	r3, [r7, #52]	@ 0x34
100193ce:	f7ff bb8b 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
100193d2:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
100193d4:	050e      	lsls	r6, r1, #20
100193d6:	f57f ad7c 	bpl.w	10018ed2 <__ssvfscanf_r+0x436>
100193da:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100193dc:	191b      	adds	r3, r3, r4
100193de:	f47f ad78 	bne.w	10018ed2 <__ssvfscanf_r+0x436>
100193e2:	461c      	mov	r4, r3
100193e4:	f421 73c0 	bic.w	r3, r1, #384	@ 0x180
100193e8:	e9c7 4311 	strd	r4, r3, [r7, #68]	@ 0x44
100193ec:	e55c      	b.n	10018ea8 <__ssvfscanf_r+0x40c>
100193ee:	4b05      	ldr	r3, [pc, #20]	@ (10019404 <__ssvfscanf_r+0x968>)
100193f0:	f424 6438 	bic.w	r4, r4, #2944	@ 0xb80
100193f4:	f933 2012 	ldrsh.w	r2, [r3, r2, lsl #1]
100193f8:	e636      	b.n	10019068 <__ssvfscanf_r+0x5cc>
100193fa:	bf00      	nop
100193fc:	1001eae1 	.word	0x1001eae1
10019400:	2000042c 	.word	0x2000042c
10019404:	1001ec94 	.word	0x1001ec94
10019408:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001940a:	f401 6318 	and.w	r3, r1, #2432	@ 0x980
1001940e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
10019412:	f47f ad5e 	bne.w	10018ed2 <__ssvfscanf_r+0x436>
10019416:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10019418:	2b01      	cmp	r3, #1
1001941a:	f47f ad5a 	bne.w	10018ed2 <__ssvfscanf_r+0x436>
1001941e:	f421 7380 	bic.w	r3, r1, #256	@ 0x100
10019422:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
10019426:	64bb      	str	r3, [r7, #72]	@ 0x48
10019428:	2330      	movs	r3, #48	@ 0x30
1001942a:	f80b 3b01 	strb.w	r3, [fp], #1
1001942e:	2300      	movs	r3, #0
10019430:	3d01      	subs	r5, #1
10019432:	633b      	str	r3, [r7, #48]	@ 0x30
10019434:	e538      	b.n	10018ea8 <__ssvfscanf_r+0x40c>
10019436:	2c06      	cmp	r4, #6
10019438:	f47f ad4b 	bne.w	10018ed2 <__ssvfscanf_r+0x436>
1001943c:	2407      	movs	r4, #7
1001943e:	e533      	b.n	10018ea8 <__ssvfscanf_r+0x40c>
10019440:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019442:	051e      	lsls	r6, r3, #20
10019444:	f57f ad45 	bpl.w	10018ed2 <__ssvfscanf_r+0x436>
10019448:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001944a:	f401 63a0 	and.w	r3, r1, #1280	@ 0x500
1001944e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
10019452:	d005      	beq.n	10019460 <__ssvfscanf_r+0x9c4>
10019454:	0549      	lsls	r1, r1, #21
10019456:	f57f ad3c 	bpl.w	10018ed2 <__ssvfscanf_r+0x436>
1001945a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001945c:	2b00      	cmp	r3, #0
1001945e:	d048      	beq.n	100194f2 <__ssvfscanf_r+0xa56>
10019460:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019462:	059b      	lsls	r3, r3, #22
10019464:	d404      	bmi.n	10019470 <__ssvfscanf_r+0x9d4>
10019466:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10019468:	69b9      	ldr	r1, [r7, #24]
1001946a:	1a5b      	subs	r3, r3, r1
1001946c:	e9c7 b304 	strd	fp, r3, [r7, #16]
10019470:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019472:	f423 6378 	bic.w	r3, r3, #3968	@ 0xf80
10019476:	f443 73c0 	orr.w	r3, r3, #384	@ 0x180
1001947a:	64bb      	str	r3, [r7, #72]	@ 0x48
1001947c:	2300      	movs	r3, #0
1001947e:	633b      	str	r3, [r7, #48]	@ 0x30
10019480:	e512      	b.n	10018ea8 <__ssvfscanf_r+0x40c>
10019482:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10019484:	2b00      	cmp	r3, #0
10019486:	f040 821d 	bne.w	100198c4 <__ssvfscanf_r+0xe28>
1001948a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001948c:	b933      	cbnz	r3, 1001949c <__ssvfscanf_r+0xa00>
1001948e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019490:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
10019494:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
10019498:	f000 8606 	beq.w	1001a0a8 <__ssvfscanf_r+0x160c>
1001949c:	2c01      	cmp	r4, #1
1001949e:	f000 820d 	beq.w	100198bc <__ssvfscanf_r+0xe20>
100194a2:	2c04      	cmp	r4, #4
100194a4:	f000 820a 	beq.w	100198bc <__ssvfscanf_r+0xe20>
100194a8:	e513      	b.n	10018ed2 <__ssvfscanf_r+0x436>
100194aa:	2c07      	cmp	r4, #7
100194ac:	f47f ad11 	bne.w	10018ed2 <__ssvfscanf_r+0x436>
100194b0:	2408      	movs	r4, #8
100194b2:	e4f9      	b.n	10018ea8 <__ssvfscanf_r+0x40c>
100194b4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100194b6:	0519      	lsls	r1, r3, #20
100194b8:	f100 820c 	bmi.w	100198d4 <__ssvfscanf_r+0xe38>
100194bc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100194be:	2b01      	cmp	r3, #1
100194c0:	f47f ad07 	bne.w	10018ed2 <__ssvfscanf_r+0x436>
100194c4:	2302      	movs	r3, #2
100194c6:	647b      	str	r3, [r7, #68]	@ 0x44
100194c8:	e4ee      	b.n	10018ea8 <__ssvfscanf_r+0x40c>
100194ca:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100194cc:	0618      	lsls	r0, r3, #24
100194ce:	f57f ad00 	bpl.w	10018ed2 <__ssvfscanf_r+0x436>
100194d2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
100194d6:	64bb      	str	r3, [r7, #72]	@ 0x48
100194d8:	e4e6      	b.n	10018ea8 <__ssvfscanf_r+0x40c>
100194da:	2c00      	cmp	r4, #0
100194dc:	f040 81e9 	bne.w	100198b2 <__ssvfscanf_r+0xe16>
100194e0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100194e2:	bb8b      	cbnz	r3, 10019548 <__ssvfscanf_r+0xaac>
100194e4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100194e6:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
100194ea:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
100194ee:	f000 85cd 	beq.w	1001a08c <__ssvfscanf_r+0x15f0>
100194f2:	2300      	movs	r3, #0
100194f4:	f8d7 8020 	ldr.w	r8, [r7, #32]
100194f8:	633b      	str	r3, [r7, #48]	@ 0x30
100194fa:	e4f0      	b.n	10018ede <__ssvfscanf_r+0x442>
100194fc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100194fe:	051b      	lsls	r3, r3, #20
10019500:	f100 81d1 	bmi.w	100198a6 <__ssvfscanf_r+0xe0a>
10019504:	2c02      	cmp	r4, #2
10019506:	f47f ace4 	bne.w	10018ed2 <__ssvfscanf_r+0x436>
1001950a:	2403      	movs	r4, #3
1001950c:	e4cc      	b.n	10018ea8 <__ssvfscanf_r+0x40c>
1001950e:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10019510:	0508      	lsls	r0, r1, #20
10019512:	d599      	bpl.n	10019448 <__ssvfscanf_r+0x9ac>
10019514:	e761      	b.n	100193da <__ssvfscanf_r+0x93e>
10019516:	f404 63c0 	and.w	r3, r4, #1536	@ 0x600
1001951a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
1001951e:	f47f adb2 	bne.w	10019086 <__ssvfscanf_r+0x5ea>
10019522:	f424 7400 	bic.w	r4, r4, #512	@ 0x200
10019526:	f444 64a0 	orr.w	r4, r4, #1280	@ 0x500
1001952a:	2210      	movs	r2, #16
1001952c:	e59c      	b.n	10019068 <__ssvfscanf_r+0x5cc>
1001952e:	0623      	lsls	r3, r4, #24
10019530:	f57f ada9 	bpl.w	10019086 <__ssvfscanf_r+0x5ea>
10019534:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
10019538:	e596      	b.n	10019068 <__ssvfscanf_r+0x5cc>
1001953a:	4b94      	ldr	r3, [pc, #592]	@ (1001978c <__ssvfscanf_r+0xcf0>)
1001953c:	f933 2012 	ldrsh.w	r2, [r3, r2, lsl #1]
10019540:	2a08      	cmp	r2, #8
10019542:	f73f ad8f 	bgt.w	10019064 <__ssvfscanf_r+0x5c8>
10019546:	e59e      	b.n	10019086 <__ssvfscanf_r+0x5ea>
10019548:	f8d7 8020 	ldr.w	r8, [r7, #32]
1001954c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001954e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
10019552:	64bb      	str	r3, [r7, #72]	@ 0x48
10019554:	e4c3      	b.n	10018ede <__ssvfscanf_r+0x442>
10019556:	f044 0401 	orr.w	r4, r4, #1
1001955a:	f8da 3004 	ldr.w	r3, [sl, #4]
1001955e:	2b00      	cmp	r3, #0
10019560:	4688      	mov	r8, r1
10019562:	f04f 0b02 	mov.w	fp, #2
10019566:	f73f abb8 	bgt.w	10018cda <__ssvfscanf_r+0x23e>
1001956a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001956c:	4651      	mov	r1, sl
1001956e:	f003 ffe5 	bl	1001d53c <__ssrefill_r>
10019572:	2800      	cmp	r0, #0
10019574:	f47f aafe 	bne.w	10018b74 <__ssvfscanf_r+0xd8>
10019578:	0660      	lsls	r0, r4, #25
1001957a:	f53f abb1 	bmi.w	10018ce0 <__ssvfscanf_r+0x244>
1001957e:	f8da 2000 	ldr.w	r2, [sl]
10019582:	4e83      	ldr	r6, [pc, #524]	@ (10019790 <__ssvfscanf_r+0xcf4>)
10019584:	7813      	ldrb	r3, [r2, #0]
10019586:	5cf3      	ldrb	r3, [r6, r3]
10019588:	0719      	lsls	r1, r3, #28
1001958a:	f57f aba9 	bpl.w	10018ce0 <__ssvfscanf_r+0x244>
1001958e:	4633      	mov	r3, r6
10019590:	4656      	mov	r6, sl
10019592:	469a      	mov	sl, r3
10019594:	e005      	b.n	100195a2 <__ssvfscanf_r+0xb06>
10019596:	6032      	str	r2, [r6, #0]
10019598:	7813      	ldrb	r3, [r2, #0]
1001959a:	f81a 3003 	ldrb.w	r3, [sl, r3]
1001959e:	071b      	lsls	r3, r3, #28
100195a0:	d515      	bpl.n	100195ce <__ssvfscanf_r+0xb32>
100195a2:	6873      	ldr	r3, [r6, #4]
100195a4:	3b01      	subs	r3, #1
100195a6:	2b00      	cmp	r3, #0
100195a8:	f109 0901 	add.w	r9, r9, #1
100195ac:	6073      	str	r3, [r6, #4]
100195ae:	f102 0201 	add.w	r2, r2, #1
100195b2:	dcf0      	bgt.n	10019596 <__ssvfscanf_r+0xafa>
100195b4:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100195b6:	4631      	mov	r1, r6
100195b8:	f003 ffc0 	bl	1001d53c <__ssrefill_r>
100195bc:	2800      	cmp	r0, #0
100195be:	f040 82e3 	bne.w	10019b88 <__ssvfscanf_r+0x10ec>
100195c2:	6832      	ldr	r2, [r6, #0]
100195c4:	7813      	ldrb	r3, [r2, #0]
100195c6:	f81a 3003 	ldrb.w	r3, [sl, r3]
100195ca:	071b      	lsls	r3, r3, #28
100195cc:	d4e9      	bmi.n	100195a2 <__ssvfscanf_r+0xb06>
100195ce:	46b2      	mov	sl, r6
100195d0:	f7ff bb86 	b.w	10018ce0 <__ssvfscanf_r+0x244>
100195d4:	f044 0401 	orr.w	r4, r4, #1
100195d8:	4b6e      	ldr	r3, [pc, #440]	@ (10019794 <__ssvfscanf_r+0xcf8>)
100195da:	62bb      	str	r3, [r7, #40]	@ 0x28
100195dc:	230a      	movs	r3, #10
100195de:	4688      	mov	r8, r1
100195e0:	63bb      	str	r3, [r7, #56]	@ 0x38
100195e2:	f04f 0b03 	mov.w	fp, #3
100195e6:	f7ff bb73 	b.w	10018cd0 <__ssvfscanf_r+0x234>
100195ea:	f044 0401 	orr.w	r4, r4, #1
100195ee:	4b6a      	ldr	r3, [pc, #424]	@ (10019798 <__ssvfscanf_r+0xcfc>)
100195f0:	62bb      	str	r3, [r7, #40]	@ 0x28
100195f2:	2308      	movs	r3, #8
100195f4:	4688      	mov	r8, r1
100195f6:	63bb      	str	r3, [r7, #56]	@ 0x38
100195f8:	f04f 0b03 	mov.w	fp, #3
100195fc:	f7ff bb68 	b.w	10018cd0 <__ssvfscanf_r+0x234>
10019600:	0523      	lsls	r3, r4, #20
10019602:	f57f ad31 	bpl.w	10019068 <__ssvfscanf_r+0x5cc>
10019606:	b912      	cbnz	r2, 1001960e <__ssvfscanf_r+0xb72>
10019608:	f444 7400 	orr.w	r4, r4, #512	@ 0x200
1001960c:	2208      	movs	r2, #8
1001960e:	0561      	lsls	r1, r4, #21
10019610:	f100 819e 	bmi.w	10019950 <__ssvfscanf_r+0xeb4>
10019614:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10019616:	f424 7460 	bic.w	r4, r4, #896	@ 0x380
1001961a:	b113      	cbz	r3, 10019622 <__ssvfscanf_r+0xb86>
1001961c:	3b01      	subs	r3, #1
1001961e:	647b      	str	r3, [r7, #68]	@ 0x44
10019620:	3501      	adds	r5, #1
10019622:	f8d9 3004 	ldr.w	r3, [r9, #4]
10019626:	3b01      	subs	r3, #1
10019628:	2b00      	cmp	r3, #0
1001962a:	f10b 0b01 	add.w	fp, fp, #1
1001962e:	f8c9 3004 	str.w	r3, [r9, #4]
10019632:	f73f ad23 	bgt.w	1001907c <__ssvfscanf_r+0x5e0>
10019636:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10019638:	64ba      	str	r2, [r7, #72]	@ 0x48
1001963a:	4649      	mov	r1, r9
1001963c:	f003 ff7e 	bl	1001d53c <__ssrefill_r>
10019640:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10019642:	2800      	cmp	r0, #0
10019644:	f43f ad1d 	beq.w	10019082 <__ssvfscanf_r+0x5e6>
10019648:	e51d      	b.n	10019086 <__ssvfscanf_r+0x5ea>
1001964a:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
1001964c:	45ab      	cmp	fp, r5
1001964e:	f240 8114 	bls.w	1001987a <__ssvfscanf_r+0xdde>
10019652:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
10019654:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
10019658:	4652      	mov	r2, sl
1001965a:	4620      	mov	r0, r4
1001965c:	f003 ff32 	bl	1001d4c4 <_sungetc_r>
10019660:	45ab      	cmp	fp, r5
10019662:	d1f7      	bne.n	10019654 <__ssvfscanf_r+0xbb8>
10019664:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019666:	f7ff ba90 	b.w	10018b8a <__ssvfscanf_r+0xee>
1001966a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001966c:	4651      	mov	r1, sl
1001966e:	f003 ff65 	bl	1001d53c <__ssrefill_r>
10019672:	2800      	cmp	r0, #0
10019674:	f47f ac2d 	bne.w	10018ed2 <__ssvfscanf_r+0x436>
10019678:	2d00      	cmp	r5, #0
1001967a:	f47f ab66 	bne.w	10018d4a <__ssvfscanf_r+0x2ae>
1001967e:	e428      	b.n	10018ed2 <__ssvfscanf_r+0x436>
10019680:	f8da 2004 	ldr.w	r2, [sl, #4]
10019684:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
10019686:	e010      	b.n	100196aa <__ssvfscanf_r+0xc0e>
10019688:	f8da 3000 	ldr.w	r3, [sl]
1001968c:	4940      	ldr	r1, [pc, #256]	@ (10019790 <__ssvfscanf_r+0xcf4>)
1001968e:	781a      	ldrb	r2, [r3, #0]
10019690:	5c8a      	ldrb	r2, [r1, r2]
10019692:	0711      	lsls	r1, r2, #28
10019694:	f103 0301 	add.w	r3, r3, #1
10019698:	f57f aa26 	bpl.w	10018ae8 <__ssvfscanf_r+0x4c>
1001969c:	f8da 2004 	ldr.w	r2, [sl, #4]
100196a0:	3a01      	subs	r2, #1
100196a2:	e9ca 3200 	strd	r3, r2, [sl]
100196a6:	f109 0901 	add.w	r9, r9, #1
100196aa:	2a00      	cmp	r2, #0
100196ac:	dcec      	bgt.n	10019688 <__ssvfscanf_r+0xbec>
100196ae:	4651      	mov	r1, sl
100196b0:	4620      	mov	r0, r4
100196b2:	f003 ff43 	bl	1001d53c <__ssrefill_r>
100196b6:	2800      	cmp	r0, #0
100196b8:	d0e6      	beq.n	10019688 <__ssvfscanf_r+0xbec>
100196ba:	f7ff ba15 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
100196be:	2b00      	cmp	r3, #0
100196c0:	f040 8395 	bne.w	10019dee <__ssvfscanf_r+0x1352>
100196c4:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
100196c8:	f014 0280 	ands.w	r2, r4, #128	@ 0x80
100196cc:	f85b 6b04 	ldr.w	r6, [fp], #4
100196d0:	64be      	str	r6, [r7, #72]	@ 0x48
100196d2:	f000 8446 	beq.w	10019f62 <__ssvfscanf_r+0x14c6>
100196d6:	2e00      	cmp	r6, #0
100196d8:	d0c4      	beq.n	10019664 <__ssvfscanf_r+0xbc8>
100196da:	2020      	movs	r0, #32
100196dc:	f7f7 fc08 	bl	10010ef0 <malloc>
100196e0:	4604      	mov	r4, r0
100196e2:	2800      	cmp	r0, #0
100196e4:	f000 842d 	beq.w	10019f42 <__ssvfscanf_r+0x14a6>
100196e8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100196ea:	6030      	str	r0, [r6, #0]
100196ec:	889a      	ldrh	r2, [r3, #4]
100196ee:	88de      	ldrh	r6, [r3, #6]
100196f0:	4296      	cmp	r6, r2
100196f2:	f080 8273 	bcs.w	10019bdc <__ssvfscanf_r+0x1140>
100196f6:	6818      	ldr	r0, [r3, #0]
100196f8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100196fa:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
100196fe:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019700:	3601      	adds	r6, #1
10019702:	80de      	strh	r6, [r3, #6]
10019704:	2320      	movs	r3, #32
10019706:	647b      	str	r3, [r7, #68]	@ 0x44
10019708:	f8da 0000 	ldr.w	r0, [sl]
1001970c:	4e20      	ldr	r6, [pc, #128]	@ (10019790 <__ssvfscanf_r+0xcf4>)
1001970e:	7802      	ldrb	r2, [r0, #0]
10019710:	5cb2      	ldrb	r2, [r6, r2]
10019712:	0713      	lsls	r3, r2, #28
10019714:	f100 82e4 	bmi.w	10019ce0 <__ssvfscanf_r+0x1244>
10019718:	4643      	mov	r3, r8
1001971a:	4622      	mov	r2, r4
1001971c:	46b0      	mov	r8, r6
1001971e:	4626      	mov	r6, r4
10019720:	f8da 1004 	ldr.w	r1, [sl, #4]
10019724:	3901      	subs	r1, #1
10019726:	f8ca 1004 	str.w	r1, [sl, #4]
1001972a:	1c41      	adds	r1, r0, #1
1001972c:	f8ca 1000 	str.w	r1, [sl]
10019730:	4634      	mov	r4, r6
10019732:	7801      	ldrb	r1, [r0, #0]
10019734:	f804 1b01 	strb.w	r1, [r4], #1
10019738:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001973a:	b121      	cbz	r1, 10019746 <__ssvfscanf_r+0xcaa>
1001973c:	6c79      	ldr	r1, [r7, #68]	@ 0x44
1001973e:	1aa6      	subs	r6, r4, r2
10019740:	428e      	cmp	r6, r1
10019742:	f080 8419 	bcs.w	10019f78 <__ssvfscanf_r+0x14dc>
10019746:	3d01      	subs	r5, #1
10019748:	d00c      	beq.n	10019764 <__ssvfscanf_r+0xcc8>
1001974a:	f8da 1004 	ldr.w	r1, [sl, #4]
1001974e:	2900      	cmp	r1, #0
10019750:	4626      	mov	r6, r4
10019752:	f340 8462 	ble.w	1001a01a <__ssvfscanf_r+0x157e>
10019756:	f8da 0000 	ldr.w	r0, [sl]
1001975a:	7801      	ldrb	r1, [r0, #0]
1001975c:	f818 1001 	ldrb.w	r1, [r8, r1]
10019760:	0709      	lsls	r1, r1, #28
10019762:	d5dd      	bpl.n	10019720 <__ssvfscanf_r+0xc84>
10019764:	1aa2      	subs	r2, r4, r2
10019766:	4698      	mov	r8, r3
10019768:	4491      	add	r9, r2
1001976a:	1c51      	adds	r1, r2, #1
1001976c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001976e:	2200      	movs	r2, #0
10019770:	7022      	strb	r2, [r4, #0]
10019772:	b11b      	cbz	r3, 1001977c <__ssvfscanf_r+0xce0>
10019774:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10019776:	428b      	cmp	r3, r1
10019778:	f200 8445 	bhi.w	1001a006 <__ssvfscanf_r+0x156a>
1001977c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001977e:	f8c7 b034 	str.w	fp, [r7, #52]	@ 0x34
10019782:	3301      	adds	r3, #1
10019784:	643b      	str	r3, [r7, #64]	@ 0x40
10019786:	f7ff b9af 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
1001978a:	bf00      	nop
1001978c:	1001ec94 	.word	0x1001ec94
10019790:	1001eae1 	.word	0x1001eae1
10019794:	1001c019 	.word	0x1001c019
10019798:	1001c151 	.word	0x1001c151
1001979c:	2a00      	cmp	r2, #0
1001979e:	f040 816e 	bne.w	10019a7e <__ssvfscanf_r+0xfe2>
100197a2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100197a4:	f014 0480 	ands.w	r4, r4, #128	@ 0x80
100197a8:	f853 bb04 	ldr.w	fp, [r3], #4
100197ac:	64bb      	str	r3, [r7, #72]	@ 0x48
100197ae:	f000 8409 	beq.w	10019fc4 <__ssvfscanf_r+0x1528>
100197b2:	f1bb 0f00 	cmp.w	fp, #0
100197b6:	f43f af55 	beq.w	10019664 <__ssvfscanf_r+0xbc8>
100197ba:	2020      	movs	r0, #32
100197bc:	f7f7 fb98 	bl	10010ef0 <malloc>
100197c0:	4606      	mov	r6, r0
100197c2:	2800      	cmp	r0, #0
100197c4:	f000 83bd 	beq.w	10019f42 <__ssvfscanf_r+0x14a6>
100197c8:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
100197ca:	f8cb 0000 	str.w	r0, [fp]
100197ce:	88d4      	ldrh	r4, [r2, #6]
100197d0:	8893      	ldrh	r3, [r2, #4]
100197d2:	429c      	cmp	r4, r3
100197d4:	f080 8286 	bcs.w	10019ce4 <__ssvfscanf_r+0x1248>
100197d8:	6810      	ldr	r0, [r2, #0]
100197da:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100197dc:	f840 b024 	str.w	fp, [r0, r4, lsl #2]
100197e0:	3401      	adds	r4, #1
100197e2:	80dc      	strh	r4, [r3, #6]
100197e4:	2320      	movs	r3, #32
100197e6:	f8da 1000 	ldr.w	r1, [sl]
100197ea:	f107 0270 	add.w	r2, r7, #112	@ 0x70
100197ee:	7808      	ldrb	r0, [r1, #0]
100197f0:	5c10      	ldrb	r0, [r2, r0]
100197f2:	2800      	cmp	r0, #0
100197f4:	f43f af36 	beq.w	10019664 <__ssvfscanf_r+0xbc8>
100197f8:	f8c7 9044 	str.w	r9, [r7, #68]	@ 0x44
100197fc:	f8c7 8034 	str.w	r8, [r7, #52]	@ 0x34
10019800:	46d9      	mov	r9, fp
10019802:	4634      	mov	r4, r6
10019804:	4698      	mov	r8, r3
10019806:	4693      	mov	fp, r2
10019808:	f8da 0004 	ldr.w	r0, [sl, #4]
1001980c:	1c4b      	adds	r3, r1, #1
1001980e:	3801      	subs	r0, #1
10019810:	e9ca 3000 	strd	r3, r0, [sl]
10019814:	4630      	mov	r0, r6
10019816:	7809      	ldrb	r1, [r1, #0]
10019818:	f800 1b01 	strb.w	r1, [r0], #1
1001981c:	f1b9 0f00 	cmp.w	r9, #0
10019820:	d002      	beq.n	10019828 <__ssvfscanf_r+0xd8c>
10019822:	1b06      	subs	r6, r0, r4
10019824:	4546      	cmp	r6, r8
10019826:	d26b      	bcs.n	10019900 <__ssvfscanf_r+0xe64>
10019828:	4606      	mov	r6, r0
1001982a:	3d01      	subs	r5, #1
1001982c:	d00b      	beq.n	10019846 <__ssvfscanf_r+0xdaa>
1001982e:	f8da 1004 	ldr.w	r1, [sl, #4]
10019832:	2900      	cmp	r1, #0
10019834:	f340 8171 	ble.w	10019b1a <__ssvfscanf_r+0x107e>
10019838:	f8da 1000 	ldr.w	r1, [sl]
1001983c:	7808      	ldrb	r0, [r1, #0]
1001983e:	f81b 0000 	ldrb.w	r0, [fp, r0]
10019842:	2800      	cmp	r0, #0
10019844:	d1e0      	bne.n	10019808 <__ssvfscanf_r+0xd6c>
10019846:	1b34      	subs	r4, r6, r4
10019848:	46cb      	mov	fp, r9
1001984a:	4643      	mov	r3, r8
1001984c:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
10019850:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
10019854:	f43f af06 	beq.w	10019664 <__ssvfscanf_r+0xbc8>
10019858:	2200      	movs	r2, #0
1001985a:	7032      	strb	r2, [r6, #0]
1001985c:	f1bb 0f00 	cmp.w	fp, #0
10019860:	d003      	beq.n	1001986a <__ssvfscanf_r+0xdce>
10019862:	1c61      	adds	r1, r4, #1
10019864:	428b      	cmp	r3, r1
10019866:	f200 83e5 	bhi.w	1001a034 <__ssvfscanf_r+0x1598>
1001986a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001986c:	3301      	adds	r3, #1
1001986e:	643b      	str	r3, [r7, #64]	@ 0x40
10019870:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019872:	637b      	str	r3, [r7, #52]	@ 0x34
10019874:	44a1      	add	r9, r4
10019876:	f7ff b937 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
1001987a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001987c:	2b00      	cmp	r3, #0
1001987e:	f47f a986 	bne.w	10018b8e <__ssvfscanf_r+0xf2>
10019882:	f7ff b988 	b.w	10018b96 <__ssvfscanf_r+0xfa>
10019886:	f014 0f8f 	tst.w	r4, #143	@ 0x8f
1001988a:	f47f aeeb 	bne.w	10019664 <__ssvfscanf_r+0xbc8>
1001988e:	eb05 0585 	add.w	r5, r5, r5, lsl #2
10019892:	eb02 0545 	add.w	r5, r2, r5, lsl #1
10019896:	3d30      	subs	r5, #48	@ 0x30
10019898:	f7ff ba06 	b.w	10018ca8 <__ssvfscanf_r+0x20c>
1001989c:	4688      	mov	r8, r1
1001989e:	f04f 0b04 	mov.w	fp, #4
100198a2:	f7ff ba15 	b.w	10018cd0 <__ssvfscanf_r+0x234>
100198a6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100198a8:	191b      	adds	r3, r3, r4
100198aa:	f47f ae2b 	bne.w	10019504 <__ssvfscanf_r+0xa68>
100198ae:	f7ff baf5 	b.w	10018e9c <__ssvfscanf_r+0x400>
100198b2:	2c03      	cmp	r4, #3
100198b4:	d002      	beq.n	100198bc <__ssvfscanf_r+0xe20>
100198b6:	2c05      	cmp	r4, #5
100198b8:	f47f ab0b 	bne.w	10018ed2 <__ssvfscanf_r+0x436>
100198bc:	3401      	adds	r4, #1
100198be:	b2e4      	uxtb	r4, r4
100198c0:	f7ff baf2 	b.w	10018ea8 <__ssvfscanf_r+0x40c>
100198c4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100198c6:	2b02      	cmp	r3, #2
100198c8:	f47f ade8 	bne.w	1001949c <__ssvfscanf_r+0xa00>
100198cc:	2303      	movs	r3, #3
100198ce:	647b      	str	r3, [r7, #68]	@ 0x44
100198d0:	f7ff baea 	b.w	10018ea8 <__ssvfscanf_r+0x40c>
100198d4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100198d6:	191b      	adds	r3, r3, r4
100198d8:	f47f adf0 	bne.w	100194bc <__ssvfscanf_r+0xa20>
100198dc:	f7ff bade 	b.w	10018e9c <__ssvfscanf_r+0x400>
100198e0:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
100198e2:	4651      	mov	r1, sl
100198e4:	f003 fe2a 	bl	1001d53c <__ssrefill_r>
100198e8:	2800      	cmp	r0, #0
100198ea:	f43f ad56 	beq.w	1001939a <__ssvfscanf_r+0x8fe>
100198ee:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
100198f0:	f8d7 801c 	ldr.w	r8, [r7, #28]
100198f4:	627c      	str	r4, [r7, #36]	@ 0x24
100198f6:	2e00      	cmp	r6, #0
100198f8:	f43f ad56 	beq.w	100193a8 <__ssvfscanf_r+0x90c>
100198fc:	f7ff b93a 	b.w	10018b74 <__ssvfscanf_r+0xd8>
10019900:	ea4f 0848 	mov.w	r8, r8, lsl #1
10019904:	4620      	mov	r0, r4
10019906:	4641      	mov	r1, r8
10019908:	f7fa fcf0 	bl	100142ec <realloc>
1001990c:	4604      	mov	r4, r0
1001990e:	2800      	cmp	r0, #0
10019910:	f000 8317 	beq.w	10019f42 <__ssvfscanf_r+0x14a6>
10019914:	4406      	add	r6, r0
10019916:	f8c9 0000 	str.w	r0, [r9]
1001991a:	e786      	b.n	1001982a <__ssvfscanf_r+0xd8e>
1001991c:	f444 7400 	orr.w	r4, r4, #512	@ 0x200
10019920:	4bb8      	ldr	r3, [pc, #736]	@ (10019c04 <__ssvfscanf_r+0x1168>)
10019922:	62bb      	str	r3, [r7, #40]	@ 0x28
10019924:	2310      	movs	r3, #16
10019926:	4688      	mov	r8, r1
10019928:	63bb      	str	r3, [r7, #56]	@ 0x38
1001992a:	f04f 0b03 	mov.w	fp, #3
1001992e:	f7ff b9cf 	b.w	10018cd0 <__ssvfscanf_r+0x234>
10019932:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10019936:	64bb      	str	r3, [r7, #72]	@ 0x48
10019938:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001993a:	3301      	adds	r3, #1
1001993c:	633b      	str	r3, [r7, #48]	@ 0x30
1001993e:	68fb      	ldr	r3, [r7, #12]
10019940:	2b00      	cmp	r3, #0
10019942:	f43f aab3 	beq.w	10018eac <__ssvfscanf_r+0x410>
10019946:	68fb      	ldr	r3, [r7, #12]
10019948:	3b01      	subs	r3, #1
1001994a:	60fb      	str	r3, [r7, #12]
1001994c:	f7ff baaf 	b.w	10018eae <__ssvfscanf_r+0x412>
10019950:	f424 64b0 	bic.w	r4, r4, #1408	@ 0x580
10019954:	f7ff bb88 	b.w	10019068 <__ssvfscanf_r+0x5cc>
10019958:	0722      	lsls	r2, r4, #28
1001995a:	f140 8213 	bpl.w	10019d84 <__ssvfscanf_r+0x12e8>
1001995e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10019960:	681b      	ldr	r3, [r3, #0]
10019962:	7018      	strb	r0, [r3, #0]
10019964:	f7ff bbae 	b.w	100190c4 <__ssvfscanf_r+0x628>
10019968:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1001996a:	69bb      	ldr	r3, [r7, #24]
1001996c:	429a      	cmp	r2, r3
1001996e:	f43f aaf0 	beq.w	10018f52 <__ssvfscanf_r+0x4b6>
10019972:	1a9a      	subs	r2, r3, r2
10019974:	f207 23c3 	addw	r3, r7, #707	@ 0x2c3
10019978:	459b      	cmp	fp, r3
1001997a:	bf28      	it	cs
1001997c:	f207 2bc2 	addwcs	fp, r7, #706	@ 0x2c2
10019980:	49a1      	ldr	r1, [pc, #644]	@ (10019c08 <__ssvfscanf_r+0x116c>)
10019982:	4658      	mov	r0, fp
10019984:	f002 fbe6 	bl	1001c154 <sprintf>
10019988:	f7ff bae3 	b.w	10018f52 <__ssvfscanf_r+0x4b6>
1001998c:	f816 1c01 	ldrb.w	r1, [r6, #-1]
10019990:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10019992:	4652      	mov	r2, sl
10019994:	3e01      	subs	r6, #1
10019996:	f003 fd95 	bl	1001d4c4 <_sungetc_r>
1001999a:	f7ff bb7e 	b.w	1001909a <__ssvfscanf_r+0x5fe>
1001999e:	f107 0070 	add.w	r0, r7, #112	@ 0x70
100199a2:	f001 fa69 	bl	1001ae78 <__sccl>
100199a6:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
100199aa:	4680      	mov	r8, r0
100199ac:	f04f 0b01 	mov.w	fp, #1
100199b0:	f7ff b98e 	b.w	10018cd0 <__ssvfscanf_r+0x234>
100199b4:	4b95      	ldr	r3, [pc, #596]	@ (10019c0c <__ssvfscanf_r+0x1170>)
100199b6:	62bb      	str	r3, [r7, #40]	@ 0x28
100199b8:	2300      	movs	r3, #0
100199ba:	4688      	mov	r8, r1
100199bc:	63bb      	str	r3, [r7, #56]	@ 0x38
100199be:	f04f 0b03 	mov.w	fp, #3
100199c2:	f7ff b985 	b.w	10018cd0 <__ssvfscanf_r+0x234>
100199c6:	0723      	lsls	r3, r4, #28
100199c8:	f47f ae4c 	bne.w	10019664 <__ssvfscanf_r+0xbc8>
100199cc:	f898 2001 	ldrb.w	r2, [r8, #1]
100199d0:	2a68      	cmp	r2, #104	@ 0x68
100199d2:	f000 81cf 	beq.w	10019d74 <__ssvfscanf_r+0x12d8>
100199d6:	f044 0404 	orr.w	r4, r4, #4
100199da:	4688      	mov	r8, r1
100199dc:	f7ff b8fd 	b.w	10018bda <__ssvfscanf_r+0x13e>
100199e0:	f444 7408 	orr.w	r4, r4, #544	@ 0x220
100199e4:	e79c      	b.n	10019920 <__ssvfscanf_r+0xe84>
100199e6:	06e5      	lsls	r5, r4, #27
100199e8:	f100 80f5 	bmi.w	10019bd6 <__ssvfscanf_r+0x113a>
100199ec:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100199ee:	0720      	lsls	r0, r4, #28
100199f0:	f853 2b04 	ldr.w	r2, [r3], #4
100199f4:	f100 81f8 	bmi.w	10019de8 <__ssvfscanf_r+0x134c>
100199f8:	0766      	lsls	r6, r4, #29
100199fa:	f140 8325 	bpl.w	1001a048 <__ssvfscanf_r+0x15ac>
100199fe:	f8a2 9000 	strh.w	r9, [r2]
10019a02:	637b      	str	r3, [r7, #52]	@ 0x34
10019a04:	4688      	mov	r8, r1
10019a06:	f7ff b86f 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
10019a0a:	f014 038f 	ands.w	r3, r4, #143	@ 0x8f
10019a0e:	f47f ae29 	bne.w	10019664 <__ssvfscanf_r+0xbc8>
10019a12:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10019a14:	2a00      	cmp	r2, #0
10019a16:	f000 82a9 	beq.w	10019f6c <__ssvfscanf_r+0x14d0>
10019a1a:	f898 2001 	ldrb.w	r2, [r8, #1]
10019a1e:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
10019a22:	4688      	mov	r8, r1
10019a24:	f7ff b8d9 	b.w	10018bda <__ssvfscanf_r+0x13e>
10019a28:	0722      	lsls	r2, r4, #28
10019a2a:	f47f ae1b 	bne.w	10019664 <__ssvfscanf_r+0xbc8>
10019a2e:	f898 2001 	ldrb.w	r2, [r8, #1]
10019a32:	2a6c      	cmp	r2, #108	@ 0x6c
10019a34:	f000 8196 	beq.w	10019d64 <__ssvfscanf_r+0x12c8>
10019a38:	f044 0401 	orr.w	r4, r4, #1
10019a3c:	4688      	mov	r8, r1
10019a3e:	f7ff b8cc 	b.w	10018bda <__ssvfscanf_r+0x13e>
10019a42:	4b70      	ldr	r3, [pc, #448]	@ (10019c04 <__ssvfscanf_r+0x1168>)
10019a44:	62bb      	str	r3, [r7, #40]	@ 0x28
10019a46:	230a      	movs	r3, #10
10019a48:	4688      	mov	r8, r1
10019a4a:	63bb      	str	r3, [r7, #56]	@ 0x38
10019a4c:	f04f 0b03 	mov.w	fp, #3
10019a50:	f7ff b93e 	b.w	10018cd0 <__ssvfscanf_r+0x234>
10019a54:	4325      	orrs	r5, r4
10019a56:	f47f ae05 	bne.w	10019664 <__ssvfscanf_r+0xbc8>
10019a5a:	f898 2001 	ldrb.w	r2, [r8, #1]
10019a5e:	2410      	movs	r4, #16
10019a60:	4688      	mov	r8, r1
10019a62:	f7ff b8ba 	b.w	10018bda <__ssvfscanf_r+0x13e>
10019a66:	4688      	mov	r8, r1
10019a68:	f7ff b858 	b.w	10018b1c <__ssvfscanf_r+0x80>
10019a6c:	f04f 0c00 	mov.w	ip, #0
10019a70:	46e6      	mov	lr, ip
10019a72:	f8c7 c048 	str.w	ip, [r7, #72]	@ 0x48
10019a76:	f107 0254 	add.w	r2, r7, #84	@ 0x54
10019a7a:	f7ff bb5e 	b.w	1001913a <__ssvfscanf_r+0x69e>
10019a7e:	f8da 3000 	ldr.w	r3, [sl]
10019a82:	f107 0270 	add.w	r2, r7, #112	@ 0x70
10019a86:	7819      	ldrb	r1, [r3, #0]
10019a88:	5c51      	ldrb	r1, [r2, r1]
10019a8a:	2900      	cmp	r1, #0
10019a8c:	f43f aef5 	beq.w	1001987a <__ssvfscanf_r+0xdde>
10019a90:	3301      	adds	r3, #1
10019a92:	f8ca 3000 	str.w	r3, [sl]
10019a96:	f8da 3004 	ldr.w	r3, [sl, #4]
10019a9a:	2d01      	cmp	r5, #1
10019a9c:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
10019aa0:	f8ca 3004 	str.w	r3, [sl, #4]
10019aa4:	d01b      	beq.n	10019ade <__ssvfscanf_r+0x1042>
10019aa6:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
10019aa8:	4616      	mov	r6, r2
10019aaa:	e010      	b.n	10019ace <__ssvfscanf_r+0x1032>
10019aac:	f8da 3000 	ldr.w	r3, [sl]
10019ab0:	781a      	ldrb	r2, [r3, #0]
10019ab2:	5cb2      	ldrb	r2, [r6, r2]
10019ab4:	3301      	adds	r3, #1
10019ab6:	b192      	cbz	r2, 10019ade <__ssvfscanf_r+0x1042>
10019ab8:	f8ca 3000 	str.w	r3, [sl]
10019abc:	f8da 3004 	ldr.w	r3, [sl, #4]
10019ac0:	f10b 0b01 	add.w	fp, fp, #1
10019ac4:	3b01      	subs	r3, #1
10019ac6:	455d      	cmp	r5, fp
10019ac8:	f8ca 3004 	str.w	r3, [sl, #4]
10019acc:	d007      	beq.n	10019ade <__ssvfscanf_r+0x1042>
10019ace:	2b00      	cmp	r3, #0
10019ad0:	dcec      	bgt.n	10019aac <__ssvfscanf_r+0x1010>
10019ad2:	4651      	mov	r1, sl
10019ad4:	4620      	mov	r0, r4
10019ad6:	f003 fd31 	bl	1001d53c <__ssrefill_r>
10019ada:	2800      	cmp	r0, #0
10019adc:	d0e6      	beq.n	10019aac <__ssvfscanf_r+0x1010>
10019ade:	44d9      	add	r9, fp
10019ae0:	f7ff b802 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
10019ae4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10019ae6:	623b      	str	r3, [r7, #32]
10019ae8:	2300      	movs	r3, #0
10019aea:	e9c7 330b 	strd	r3, r3, [r7, #44]	@ 0x2c
10019aee:	637b      	str	r3, [r7, #52]	@ 0x34
10019af0:	f107 0354 	add.w	r3, r7, #84	@ 0x54
10019af4:	469b      	mov	fp, r3
10019af6:	f7ff bbde 	b.w	100192b6 <__ssvfscanf_r+0x81a>
10019afa:	2600      	movs	r6, #0
10019afc:	e448      	b.n	10019390 <__ssvfscanf_r+0x8f4>
10019afe:	1ca1      	adds	r1, r4, #2
10019b00:	f43f ac46 	beq.w	10019390 <__ssvfscanf_r+0x8f4>
10019b04:	f8db 3000 	ldr.w	r3, [fp]
10019b08:	1c5a      	adds	r2, r3, #1
10019b0a:	f47f ac09 	bne.w	10019320 <__ssvfscanf_r+0x884>
10019b0e:	e420      	b.n	10019352 <__ssvfscanf_r+0x8b6>
10019b10:	682b      	ldr	r3, [r5, #0]
10019b12:	2b04      	cmp	r3, #4
10019b14:	f47f ac27 	bne.w	10019366 <__ssvfscanf_r+0x8ca>
10019b18:	e427      	b.n	1001936a <__ssvfscanf_r+0x8ce>
10019b1a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10019b1c:	4651      	mov	r1, sl
10019b1e:	f003 fd0d 	bl	1001d53c <__ssrefill_r>
10019b22:	2800      	cmp	r0, #0
10019b24:	f43f ae88 	beq.w	10019838 <__ssvfscanf_r+0xd9c>
10019b28:	42a6      	cmp	r6, r4
10019b2a:	46cb      	mov	fp, r9
10019b2c:	4643      	mov	r3, r8
10019b2e:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
10019b32:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
10019b36:	f43f a81d 	beq.w	10018b74 <__ssvfscanf_r+0xd8>
10019b3a:	1b34      	subs	r4, r6, r4
10019b3c:	e68c      	b.n	10019858 <__ssvfscanf_r+0xdbc>
10019b3e:	6b38      	ldr	r0, [r7, #48]	@ 0x30
10019b40:	00d9      	lsls	r1, r3, #3
10019b42:	461e      	mov	r6, r3
10019b44:	f7fa fbd2 	bl	100142ec <realloc>
10019b48:	6338      	str	r0, [r7, #48]	@ 0x30
10019b4a:	2800      	cmp	r0, #0
10019b4c:	f000 81f9 	beq.w	10019f42 <__ssvfscanf_r+0x14a6>
10019b50:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
10019b52:	0073      	lsls	r3, r6, #1
10019b54:	eb00 0b05 	add.w	fp, r0, r5
10019b58:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
10019b5a:	6010      	str	r0, [r2, #0]
10019b5c:	62fb      	str	r3, [r7, #44]	@ 0x2c
10019b5e:	e417      	b.n	10019390 <__ssvfscanf_r+0x8f4>
10019b60:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10019b62:	f421 7120 	bic.w	r1, r1, #640	@ 0x280
10019b66:	4623      	mov	r3, r4
10019b68:	4658      	mov	r0, fp
10019b6a:	64b9      	str	r1, [r7, #72]	@ 0x48
10019b6c:	4632      	mov	r2, r6
10019b6e:	69f9      	ldr	r1, [r7, #28]
10019b70:	68bc      	ldr	r4, [r7, #8]
10019b72:	4699      	mov	r9, r3
10019b74:	46aa      	mov	sl, r5
10019b76:	687d      	ldr	r5, [r7, #4]
10019b78:	f002 fbb2 	bl	1001c2e0 <stpncpy>
10019b7c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10019b7e:	61bb      	str	r3, [r7, #24]
10019b80:	3d01      	subs	r5, #1
10019b82:	4683      	mov	fp, r0
10019b84:	f7ff b993 	b.w	10018eae <__ssvfscanf_r+0x412>
10019b88:	46b2      	mov	sl, r6
10019b8a:	f7fe bff3 	b.w	10018b74 <__ssvfscanf_r+0xd8>
10019b8e:	2c02      	cmp	r4, #2
10019b90:	f240 82ea 	bls.w	1001a168 <__ssvfscanf_r+0x16cc>
10019b94:	2c03      	cmp	r4, #3
10019b96:	f43f a9ab 	beq.w	10018ef0 <__ssvfscanf_r+0x454>
10019b9a:	3c04      	subs	r4, #4
10019b9c:	b2e5      	uxtb	r5, r4
10019b9e:	43ec      	mvns	r4, r5
10019ba0:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
10019ba2:	445c      	add	r4, fp
10019ba4:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
10019ba8:	4652      	mov	r2, sl
10019baa:	4630      	mov	r0, r6
10019bac:	f003 fc8a 	bl	1001d4c4 <_sungetc_r>
10019bb0:	455c      	cmp	r4, fp
10019bb2:	d1f7      	bne.n	10019ba4 <__ssvfscanf_r+0x1108>
10019bb4:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10019bb8:	eba9 0905 	sub.w	r9, r9, r5
10019bbc:	f7ff b998 	b.w	10018ef0 <__ssvfscanf_r+0x454>
10019bc0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10019bc2:	f8d3 b000 	ldr.w	fp, [r3]
10019bc6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019bc8:	079a      	lsls	r2, r3, #30
10019bca:	f140 80f5 	bpl.w	10019db8 <__ssvfscanf_r+0x131c>
10019bce:	e9cb 5600 	strd	r5, r6, [fp]
10019bd2:	f7ff b9cf 	b.w	10018f74 <__ssvfscanf_r+0x4d8>
10019bd6:	4688      	mov	r8, r1
10019bd8:	f7fe bf86 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
10019bdc:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
10019be0:	428a      	cmp	r2, r1
10019be2:	d864      	bhi.n	10019cae <__ssvfscanf_r+0x1212>
10019be4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019be6:	3208      	adds	r2, #8
10019be8:	b292      	uxth	r2, r2
10019bea:	6818      	ldr	r0, [r3, #0]
10019bec:	647a      	str	r2, [r7, #68]	@ 0x44
10019bee:	0091      	lsls	r1, r2, #2
10019bf0:	f7fa fb7c 	bl	100142ec <realloc>
10019bf4:	2800      	cmp	r0, #0
10019bf6:	d05a      	beq.n	10019cae <__ssvfscanf_r+0x1212>
10019bf8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019bfa:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10019bfc:	809a      	strh	r2, [r3, #4]
10019bfe:	6018      	str	r0, [r3, #0]
10019c00:	e57a      	b.n	100196f8 <__ssvfscanf_r+0xc5c>
10019c02:	bf00      	nop
10019c04:	1001c151 	.word	0x1001c151
10019c08:	1001ec8c 	.word	0x1001ec8c
10019c0c:	1001c019 	.word	0x1001c019
10019c10:	f004 0310 	and.w	r3, r4, #16
10019c14:	2d01      	cmp	r5, #1
10019c16:	bf38      	it	cc
10019c18:	2501      	movcc	r5, #1
10019c1a:	461a      	mov	r2, r3
10019c1c:	64bb      	str	r3, [r7, #72]	@ 0x48
10019c1e:	f014 0301 	ands.w	r3, r4, #1
10019c22:	f040 812d 	bne.w	10019e80 <__ssvfscanf_r+0x13e4>
10019c26:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10019c28:	2a00      	cmp	r2, #0
10019c2a:	f040 82b5 	bne.w	1001a198 <__ssvfscanf_r+0x16fc>
10019c2e:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
10019c32:	0623      	lsls	r3, r4, #24
10019c34:	f85b 6b04 	ldr.w	r6, [fp], #4
10019c38:	f140 82c5 	bpl.w	1001a1c6 <__ssvfscanf_r+0x172a>
10019c3c:	2e00      	cmp	r6, #0
10019c3e:	f43f ad11 	beq.w	10019664 <__ssvfscanf_r+0xbc8>
10019c42:	4628      	mov	r0, r5
10019c44:	f7f7 f954 	bl	10010ef0 <malloc>
10019c48:	4604      	mov	r4, r0
10019c4a:	2800      	cmp	r0, #0
10019c4c:	f000 8179 	beq.w	10019f42 <__ssvfscanf_r+0x14a6>
10019c50:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
10019c52:	6030      	str	r0, [r6, #0]
10019c54:	88cb      	ldrh	r3, [r1, #6]
10019c56:	888a      	ldrh	r2, [r1, #4]
10019c58:	4293      	cmp	r3, r2
10019c5a:	f0c0 8300 	bcc.w	1001a25e <__ssvfscanf_r+0x17c2>
10019c5e:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
10019c62:	428a      	cmp	r2, r1
10019c64:	647b      	str	r3, [r7, #68]	@ 0x44
10019c66:	d822      	bhi.n	10019cae <__ssvfscanf_r+0x1212>
10019c68:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019c6a:	3208      	adds	r2, #8
10019c6c:	b292      	uxth	r2, r2
10019c6e:	6818      	ldr	r0, [r3, #0]
10019c70:	64ba      	str	r2, [r7, #72]	@ 0x48
10019c72:	0091      	lsls	r1, r2, #2
10019c74:	f7fa fb3a 	bl	100142ec <realloc>
10019c78:	b1c8      	cbz	r0, 10019cae <__ssvfscanf_r+0x1212>
10019c7a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019c7c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10019c7e:	809a      	strh	r2, [r3, #4]
10019c80:	6018      	str	r0, [r3, #0]
10019c82:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10019c84:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10019c86:	f840 6023 	str.w	r6, [r0, r3, lsl #2]
10019c8a:	3301      	adds	r3, #1
10019c8c:	80d3      	strh	r3, [r2, #6]
10019c8e:	f8cd a000 	str.w	sl, [sp]
10019c92:	4621      	mov	r1, r4
10019c94:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10019c96:	462b      	mov	r3, r5
10019c98:	2201      	movs	r2, #1
10019c9a:	f003 fc6b 	bl	1001d574 <_sfread_r>
10019c9e:	4604      	mov	r4, r0
10019ca0:	2800      	cmp	r0, #0
10019ca2:	f040 82de 	bne.w	1001a262 <__ssvfscanf_r+0x17c6>
10019ca6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10019ca8:	2b00      	cmp	r3, #0
10019caa:	f040 82e4 	bne.w	1001a276 <__ssvfscanf_r+0x17da>
10019cae:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019cb0:	88de      	ldrh	r6, [r3, #6]
10019cb2:	6818      	ldr	r0, [r3, #0]
10019cb4:	b17e      	cbz	r6, 10019cd6 <__ssvfscanf_r+0x123a>
10019cb6:	2400      	movs	r4, #0
10019cb8:	1f05      	subs	r5, r0, #4
10019cba:	46a0      	mov	r8, r4
10019cbc:	4681      	mov	r9, r0
10019cbe:	f855 3f04 	ldr.w	r3, [r5, #4]!
10019cc2:	6818      	ldr	r0, [r3, #0]
10019cc4:	f7f7 f91c 	bl	10010f00 <free>
10019cc8:	3401      	adds	r4, #1
10019cca:	682b      	ldr	r3, [r5, #0]
10019ccc:	42a6      	cmp	r6, r4
10019cce:	f8c3 8000 	str.w	r8, [r3]
10019cd2:	d1f4      	bne.n	10019cbe <__ssvfscanf_r+0x1222>
10019cd4:	4648      	mov	r0, r9
10019cd6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10019cda:	643b      	str	r3, [r7, #64]	@ 0x40
10019cdc:	f7fe bf58 	b.w	10018b90 <__ssvfscanf_r+0xf4>
10019ce0:	2101      	movs	r1, #1
10019ce2:	e543      	b.n	1001976c <__ssvfscanf_r+0xcd0>
10019ce4:	f64f 72f6 	movw	r2, #65526	@ 0xfff6
10019ce8:	4293      	cmp	r3, r2
10019cea:	d8e0      	bhi.n	10019cae <__ssvfscanf_r+0x1212>
10019cec:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10019cee:	3308      	adds	r3, #8
10019cf0:	b29b      	uxth	r3, r3
10019cf2:	6810      	ldr	r0, [r2, #0]
10019cf4:	647b      	str	r3, [r7, #68]	@ 0x44
10019cf6:	0099      	lsls	r1, r3, #2
10019cf8:	f7fa faf8 	bl	100142ec <realloc>
10019cfc:	2800      	cmp	r0, #0
10019cfe:	d0d6      	beq.n	10019cae <__ssvfscanf_r+0x1212>
10019d00:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
10019d02:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10019d04:	8093      	strh	r3, [r2, #4]
10019d06:	6010      	str	r0, [r2, #0]
10019d08:	e567      	b.n	100197da <__ssvfscanf_r+0xd3e>
10019d0a:	f64f 70f6 	movw	r0, #65526	@ 0xfff6
10019d0e:	4281      	cmp	r1, r0
10019d10:	64ba      	str	r2, [r7, #72]	@ 0x48
10019d12:	d8cc      	bhi.n	10019cae <__ssvfscanf_r+0x1212>
10019d14:	3108      	adds	r1, #8
10019d16:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019d18:	b28e      	uxth	r6, r1
10019d1a:	6818      	ldr	r0, [r3, #0]
10019d1c:	00b1      	lsls	r1, r6, #2
10019d1e:	f7fa fae5 	bl	100142ec <realloc>
10019d22:	2800      	cmp	r0, #0
10019d24:	d0c3      	beq.n	10019cae <__ssvfscanf_r+0x1212>
10019d26:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019d28:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10019d2a:	809e      	strh	r6, [r3, #4]
10019d2c:	6018      	str	r0, [r3, #0]
10019d2e:	f7ff bab8 	b.w	100192a2 <__ssvfscanf_r+0x806>
10019d32:	f64f 70f6 	movw	r0, #65526	@ 0xfff6
10019d36:	4281      	cmp	r1, r0
10019d38:	637b      	str	r3, [r7, #52]	@ 0x34
10019d3a:	647a      	str	r2, [r7, #68]	@ 0x44
10019d3c:	d8b7      	bhi.n	10019cae <__ssvfscanf_r+0x1212>
10019d3e:	3108      	adds	r1, #8
10019d40:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019d42:	fa1f fb81 	uxth.w	fp, r1
10019d46:	6818      	ldr	r0, [r3, #0]
10019d48:	ea4f 018b 	mov.w	r1, fp, lsl #2
10019d4c:	f7fa face 	bl	100142ec <realloc>
10019d50:	2800      	cmp	r0, #0
10019d52:	d0ac      	beq.n	10019cae <__ssvfscanf_r+0x1212>
10019d54:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019d56:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10019d58:	f8a3 b004 	strh.w	fp, [r3, #4]
10019d5c:	6018      	str	r0, [r3, #0]
10019d5e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10019d60:	f7ff b9e1 	b.w	10019126 <__ssvfscanf_r+0x68a>
10019d64:	f898 2002 	ldrb.w	r2, [r8, #2]
10019d68:	f044 0402 	orr.w	r4, r4, #2
10019d6c:	f108 0802 	add.w	r8, r8, #2
10019d70:	f7fe bf33 	b.w	10018bda <__ssvfscanf_r+0x13e>
10019d74:	f898 2002 	ldrb.w	r2, [r8, #2]
10019d78:	f044 0408 	orr.w	r4, r4, #8
10019d7c:	f108 0802 	add.w	r8, r8, #2
10019d80:	f7fe bf2b 	b.w	10018bda <__ssvfscanf_r+0x13e>
10019d84:	0763      	lsls	r3, r4, #29
10019d86:	d46b      	bmi.n	10019e60 <__ssvfscanf_r+0x13c4>
10019d88:	f014 0201 	ands.w	r2, r4, #1
10019d8c:	f040 817b 	bne.w	1001a086 <__ssvfscanf_r+0x15ea>
10019d90:	07a4      	lsls	r4, r4, #30
10019d92:	f140 8178 	bpl.w	1001a086 <__ssvfscanf_r+0x15ea>
10019d96:	4bc1      	ldr	r3, [pc, #772]	@ (1001a09c <__ssvfscanf_r+0x1600>)
10019d98:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
10019d9a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10019d9c:	4299      	cmp	r1, r3
10019d9e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
10019da0:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
10019da2:	f000 81f0 	beq.w	1001a186 <__ssvfscanf_r+0x16ea>
10019da6:	f002 fba5 	bl	1001c4f4 <_strtoll_r>
10019daa:	460b      	mov	r3, r1
10019dac:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
10019dae:	6811      	ldr	r1, [r2, #0]
10019db0:	e9c1 0300 	strd	r0, r3, [r1]
10019db4:	f7ff b986 	b.w	100190c4 <__ssvfscanf_r+0x628>
10019db8:	4602      	mov	r2, r0
10019dba:	460b      	mov	r3, r1
10019dbc:	f004 f92a 	bl	1001e014 <__aeabi_dcmpun>
10019dc0:	2800      	cmp	r0, #0
10019dc2:	f040 80c7 	bne.w	10019f54 <__ssvfscanf_r+0x14b8>
10019dc6:	4628      	mov	r0, r5
10019dc8:	4631      	mov	r1, r6
10019dca:	f004 f981 	bl	1001e0d0 <__aeabi_d2f>
10019dce:	f8cb 0000 	str.w	r0, [fp]
10019dd2:	f7ff b8cf 	b.w	10018f74 <__ssvfscanf_r+0x4d8>
10019dd6:	6028      	str	r0, [r5, #0]
10019dd8:	f002 fd20 	bl	1001c81c <iswspace>
10019ddc:	2800      	cmp	r0, #0
10019dde:	f040 8171 	bne.w	1001a0c4 <__ssvfscanf_r+0x1628>
10019de2:	44d9      	add	r9, fp
10019de4:	f7ff b9fb 	b.w	100191de <__ssvfscanf_r+0x742>
10019de8:	f882 9000 	strb.w	r9, [r2]
10019dec:	e609      	b.n	10019a02 <__ssvfscanf_r+0xf66>
10019dee:	f8da 3000 	ldr.w	r3, [sl]
10019df2:	4eab      	ldr	r6, [pc, #684]	@ (1001a0a0 <__ssvfscanf_r+0x1604>)
10019df4:	781a      	ldrb	r2, [r3, #0]
10019df6:	5cb2      	ldrb	r2, [r6, r2]
10019df8:	0711      	lsls	r1, r2, #28
10019dfa:	f53e ae75 	bmi.w	10018ae8 <__ssvfscanf_r+0x4c>
10019dfe:	3301      	adds	r3, #1
10019e00:	f8ca 3000 	str.w	r3, [sl]
10019e04:	f8da 3004 	ldr.w	r3, [sl, #4]
10019e08:	2d01      	cmp	r5, #1
10019e0a:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
10019e0e:	f8ca 3004 	str.w	r3, [sl, #4]
10019e12:	bf08      	it	eq
10019e14:	f109 0901 	addeq.w	r9, r9, #1
10019e18:	f43e ae66 	beq.w	10018ae8 <__ssvfscanf_r+0x4c>
10019e1c:	f8d7 b04c 	ldr.w	fp, [r7, #76]	@ 0x4c
10019e20:	2401      	movs	r4, #1
10019e22:	e012      	b.n	10019e4a <__ssvfscanf_r+0x13ae>
10019e24:	f8da 3000 	ldr.w	r3, [sl]
10019e28:	781a      	ldrb	r2, [r3, #0]
10019e2a:	5cb2      	ldrb	r2, [r6, r2]
10019e2c:	0712      	lsls	r2, r2, #28
10019e2e:	f103 0301 	add.w	r3, r3, #1
10019e32:	d412      	bmi.n	10019e5a <__ssvfscanf_r+0x13be>
10019e34:	f8ca 3000 	str.w	r3, [sl]
10019e38:	f8da 3004 	ldr.w	r3, [sl, #4]
10019e3c:	3401      	adds	r4, #1
10019e3e:	3b01      	subs	r3, #1
10019e40:	42a5      	cmp	r5, r4
10019e42:	f8ca 3004 	str.w	r3, [sl, #4]
10019e46:	f000 813a 	beq.w	1001a0be <__ssvfscanf_r+0x1622>
10019e4a:	2b00      	cmp	r3, #0
10019e4c:	dcea      	bgt.n	10019e24 <__ssvfscanf_r+0x1388>
10019e4e:	4651      	mov	r1, sl
10019e50:	4658      	mov	r0, fp
10019e52:	f003 fb73 	bl	1001d53c <__ssrefill_r>
10019e56:	2800      	cmp	r0, #0
10019e58:	d0e4      	beq.n	10019e24 <__ssvfscanf_r+0x1388>
10019e5a:	44a1      	add	r9, r4
10019e5c:	f7fe be44 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
10019e60:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10019e62:	681b      	ldr	r3, [r3, #0]
10019e64:	8018      	strh	r0, [r3, #0]
10019e66:	f7ff b92d 	b.w	100190c4 <__ssvfscanf_r+0x628>
10019e6a:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
10019e6c:	1d11      	adds	r1, r2, #4
10019e6e:	6820      	ldr	r0, [r4, #0]
10019e70:	f7fa fa3c 	bl	100142ec <realloc>
10019e74:	2800      	cmp	r0, #0
10019e76:	f43f a9e7 	beq.w	10019248 <__ssvfscanf_r+0x7ac>
10019e7a:	6020      	str	r0, [r4, #0]
10019e7c:	f7ff b9e4 	b.w	10019248 <__ssvfscanf_r+0x7ac>
10019e80:	2a00      	cmp	r2, #0
10019e82:	f040 8184 	bne.w	1001a18e <__ssvfscanf_r+0x16f2>
10019e86:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10019e88:	461a      	mov	r2, r3
10019e8a:	0624      	lsls	r4, r4, #24
10019e8c:	f852 3b04 	ldr.w	r3, [r2], #4
10019e90:	637a      	str	r2, [r7, #52]	@ 0x34
10019e92:	f100 81ac 	bmi.w	1001a1ee <__ssvfscanf_r+0x1752>
10019e96:	469b      	mov	fp, r3
10019e98:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019e9a:	461a      	mov	r2, r3
10019e9c:	469c      	mov	ip, r3
10019e9e:	f8c7 8030 	str.w	r8, [r7, #48]	@ 0x30
10019ea2:	2600      	movs	r6, #0
10019ea4:	4664      	mov	r4, ip
10019ea6:	647b      	str	r3, [r7, #68]	@ 0x44
10019ea8:	4690      	mov	r8, r2
10019eaa:	f7fb fa79 	bl	100153a0 <__locale_mb_cur_max>
10019eae:	42b0      	cmp	r0, r6
10019eb0:	f43e ae60 	beq.w	10018b74 <__ssvfscanf_r+0xd8>
10019eb4:	e9da 3200 	ldrd	r3, r2, [sl]
10019eb8:	f813 1b01 	ldrb.w	r1, [r3], #1
10019ebc:	3a01      	subs	r2, #1
10019ebe:	e9ca 3200 	strd	r3, r2, [sl]
10019ec2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
10019ec4:	f507 70b8 	add.w	r0, r7, #368	@ 0x170
10019ec8:	2a03      	cmp	r2, #3
10019eca:	5581      	strb	r1, [r0, r6]
10019ecc:	f106 0301 	add.w	r3, r6, #1
10019ed0:	f107 0668 	add.w	r6, r7, #104	@ 0x68
10019ed4:	d102      	bne.n	10019edc <__ssvfscanf_r+0x1440>
10019ed6:	6832      	ldr	r2, [r6, #0]
10019ed8:	2a04      	cmp	r2, #4
10019eda:	d006      	beq.n	10019eea <__ssvfscanf_r+0x144e>
10019edc:	2208      	movs	r2, #8
10019ede:	2100      	movs	r1, #0
10019ee0:	4630      	mov	r0, r6
10019ee2:	62fb      	str	r3, [r7, #44]	@ 0x2c
10019ee4:	f7fb f9b4 	bl	10015250 <memset>
10019ee8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
10019eea:	9600      	str	r6, [sp, #0]
10019eec:	f507 72b8 	add.w	r2, r7, #368	@ 0x170
10019ef0:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10019ef2:	62fb      	str	r3, [r7, #44]	@ 0x2c
10019ef4:	4659      	mov	r1, fp
10019ef6:	f002 fbdf 	bl	1001c6b8 <_mbrtowc_r>
10019efa:	4602      	mov	r2, r0
10019efc:	6278      	str	r0, [r7, #36]	@ 0x24
10019efe:	1c50      	adds	r0, r2, #1
10019f00:	f43e ae38 	beq.w	10018b74 <__ssvfscanf_r+0xd8>
10019f04:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
10019f06:	2a00      	cmp	r2, #0
10019f08:	f040 81bd 	bne.w	1001a286 <__ssvfscanf_r+0x17ea>
10019f0c:	4499      	add	r9, r3
10019f0e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019f10:	3d01      	subs	r5, #1
10019f12:	2b00      	cmp	r3, #0
10019f14:	f040 81c5 	bne.w	1001a2a2 <__ssvfscanf_r+0x1806>
10019f18:	f8cb 3000 	str.w	r3, [fp]
10019f1c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10019f1e:	2b00      	cmp	r3, #0
10019f20:	f000 81f1 	beq.w	1001a306 <__ssvfscanf_r+0x186a>
10019f24:	ebab 0604 	sub.w	r6, fp, r4
10019f28:	ebb8 0fa6 	cmp.w	r8, r6, asr #2
10019f2c:	f200 81eb 	bhi.w	1001a306 <__ssvfscanf_r+0x186a>
10019f30:	4620      	mov	r0, r4
10019f32:	ea4f 01c8 	mov.w	r1, r8, lsl #3
10019f36:	f7fa f9d9 	bl	100142ec <realloc>
10019f3a:	4604      	mov	r4, r0
10019f3c:	2800      	cmp	r0, #0
10019f3e:	f040 81dc 	bne.w	1001a2fa <__ssvfscanf_r+0x185e>
10019f42:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10019f44:	2b00      	cmp	r3, #0
10019f46:	f47f aeb2 	bne.w	10019cae <__ssvfscanf_r+0x1212>
10019f4a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10019f4e:	643b      	str	r3, [r7, #64]	@ 0x40
10019f50:	f7fe be21 	b.w	10018b96 <__ssvfscanf_r+0xfa>
10019f54:	4853      	ldr	r0, [pc, #332]	@ (1001a0a4 <__ssvfscanf_r+0x1608>)
10019f56:	f002 fcbf 	bl	1001c8d8 <nanf>
10019f5a:	f8cb 0000 	str.w	r0, [fp]
10019f5e:	f7ff b809 	b.w	10018f74 <__ssvfscanf_r+0x4d8>
10019f62:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
10019f64:	e9c7 2211 	strd	r2, r2, [r7, #68]	@ 0x44
10019f68:	f7ff bbce 	b.w	10019708 <__ssvfscanf_r+0xc6c>
10019f6c:	b082      	sub	sp, #8
10019f6e:	e9cd 3302 	strd	r3, r3, [sp, #8]
10019f72:	ab02      	add	r3, sp, #8
10019f74:	63fb      	str	r3, [r7, #60]	@ 0x3c
10019f76:	e550      	b.n	10019a1a <__ssvfscanf_r+0xf7e>
10019f78:	637b      	str	r3, [r7, #52]	@ 0x34
10019f7a:	004b      	lsls	r3, r1, #1
10019f7c:	4610      	mov	r0, r2
10019f7e:	4619      	mov	r1, r3
10019f80:	647b      	str	r3, [r7, #68]	@ 0x44
10019f82:	f7fa f9b3 	bl	100142ec <realloc>
10019f86:	4602      	mov	r2, r0
10019f88:	2800      	cmp	r0, #0
10019f8a:	d0da      	beq.n	10019f42 <__ssvfscanf_r+0x14a6>
10019f8c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10019f8e:	1984      	adds	r4, r0, r6
10019f90:	6018      	str	r0, [r3, #0]
10019f92:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10019f94:	f7ff bbd7 	b.w	10019746 <__ssvfscanf_r+0xcaa>
10019f98:	6938      	ldr	r0, [r7, #16]
10019f9a:	4601      	mov	r1, r0
10019f9c:	230a      	movs	r3, #10
10019f9e:	3101      	adds	r1, #1
10019fa0:	4683      	mov	fp, r0
10019fa2:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
10019fa4:	f002 f838 	bl	1001c018 <_strtol_r>
10019fa8:	697b      	ldr	r3, [r7, #20]
10019faa:	1ac2      	subs	r2, r0, r3
10019fac:	e4e2      	b.n	10019974 <__ssvfscanf_r+0xed8>
10019fae:	f04f 0b00 	mov.w	fp, #0
10019fb2:	f7ff b926 	b.w	10019202 <__ssvfscanf_r+0x766>
10019fb6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10019fb8:	637e      	str	r6, [r7, #52]	@ 0x34
10019fba:	469c      	mov	ip, r3
10019fbc:	469e      	mov	lr, r3
10019fbe:	64bb      	str	r3, [r7, #72]	@ 0x48
10019fc0:	f7ff b8bb 	b.w	1001913a <__ssvfscanf_r+0x69e>
10019fc4:	465e      	mov	r6, fp
10019fc6:	4623      	mov	r3, r4
10019fc8:	46a3      	mov	fp, r4
10019fca:	e40c      	b.n	100197e6 <__ssvfscanf_r+0xd4a>
10019fcc:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
10019fd0:	637a      	str	r2, [r7, #52]	@ 0x34
10019fd2:	e9c7 220b 	strd	r2, r2, [r7, #44]	@ 0x2c
10019fd6:	f7ff b96e 	b.w	100192b6 <__ssvfscanf_r+0x81a>
10019fda:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10019fdc:	f8d7 801c 	ldr.w	r8, [r7, #28]
10019fe0:	627c      	str	r4, [r7, #36]	@ 0x24
10019fe2:	2e00      	cmp	r6, #0
10019fe4:	f43f a9e0 	beq.w	100193a8 <__ssvfscanf_r+0x90c>
10019fe8:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
10019fea:	4615      	mov	r5, r2
10019fec:	3e01      	subs	r6, #1
10019fee:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
10019ff2:	4652      	mov	r2, sl
10019ff4:	5d99      	ldrb	r1, [r3, r6]
10019ff6:	4620      	mov	r0, r4
10019ff8:	f003 fa64 	bl	1001d4c4 <_sungetc_r>
10019ffc:	2e00      	cmp	r6, #0
10019ffe:	d1f5      	bne.n	10019fec <__ssvfscanf_r+0x1550>
1001a000:	462a      	mov	r2, r5
1001a002:	f7ff b9d1 	b.w	100193a8 <__ssvfscanf_r+0x90c>
1001a006:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
1001a008:	6820      	ldr	r0, [r4, #0]
1001a00a:	f7fa f96f 	bl	100142ec <realloc>
1001a00e:	2800      	cmp	r0, #0
1001a010:	f43f abb4 	beq.w	1001977c <__ssvfscanf_r+0xce0>
1001a014:	6020      	str	r0, [r4, #0]
1001a016:	f7ff bbb1 	b.w	1001977c <__ssvfscanf_r+0xce0>
1001a01a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001a01c:	4651      	mov	r1, sl
1001a01e:	e9c7 320c 	strd	r3, r2, [r7, #48]	@ 0x30
1001a022:	f003 fa8b 	bl	1001d53c <__ssrefill_r>
1001a026:	e9d7 320c 	ldrd	r3, r2, [r7, #48]	@ 0x30
1001a02a:	2800      	cmp	r0, #0
1001a02c:	f43f ab93 	beq.w	10019756 <__ssvfscanf_r+0xcba>
1001a030:	f7ff bb98 	b.w	10019764 <__ssvfscanf_r+0xcc8>
1001a034:	f8db 0000 	ldr.w	r0, [fp]
1001a038:	f7fa f958 	bl	100142ec <realloc>
1001a03c:	2800      	cmp	r0, #0
1001a03e:	f43f ac14 	beq.w	1001986a <__ssvfscanf_r+0xdce>
1001a042:	f8cb 0000 	str.w	r0, [fp]
1001a046:	e410      	b.n	1001986a <__ssvfscanf_r+0xdce>
1001a048:	07e5      	lsls	r5, r4, #31
1001a04a:	d435      	bmi.n	1001a0b8 <__ssvfscanf_r+0x161c>
1001a04c:	07a4      	lsls	r4, r4, #30
1001a04e:	d533      	bpl.n	1001a0b8 <__ssvfscanf_r+0x161c>
1001a050:	ea4f 70e9 	mov.w	r0, r9, asr #31
1001a054:	f8c2 9000 	str.w	r9, [r2]
1001a058:	6050      	str	r0, [r2, #4]
1001a05a:	e4d2      	b.n	10019a02 <__ssvfscanf_r+0xf66>
1001a05c:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001a05e:	4651      	mov	r1, sl
1001a060:	f003 fa6c 	bl	1001d53c <__ssrefill_r>
1001a064:	2800      	cmp	r0, #0
1001a066:	f43f a8d1 	beq.w	1001920c <__ssvfscanf_r+0x770>
1001a06a:	4643      	mov	r3, r8
1001a06c:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
1001a070:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
1001a074:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001a078:	462a      	mov	r2, r5
1001a07a:	f1bb 0f00 	cmp.w	fp, #0
1001a07e:	f47e ad79 	bne.w	10018b74 <__ssvfscanf_r+0xd8>
1001a082:	f7ff b8d4 	b.w	1001922e <__ssvfscanf_r+0x792>
1001a086:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001a088:	f7ff b81a 	b.w	100190c0 <__ssvfscanf_r+0x624>
1001a08c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001a08e:	f423 63f0 	bic.w	r3, r3, #1920	@ 0x780
1001a092:	64bb      	str	r3, [r7, #72]	@ 0x48
1001a094:	2401      	movs	r4, #1
1001a096:	f7fe bf07 	b.w	10018ea8 <__ssvfscanf_r+0x40c>
1001a09a:	bf00      	nop
1001a09c:	1001c151 	.word	0x1001c151
1001a0a0:	1001eae1 	.word	0x1001eae1
1001a0a4:	1001e760 	.word	0x1001e760
1001a0a8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001a0aa:	f423 63f0 	bic.w	r3, r3, #1920	@ 0x780
1001a0ae:	64bb      	str	r3, [r7, #72]	@ 0x48
1001a0b0:	2301      	movs	r3, #1
1001a0b2:	647b      	str	r3, [r7, #68]	@ 0x44
1001a0b4:	f7fe bef8 	b.w	10018ea8 <__ssvfscanf_r+0x40c>
1001a0b8:	f8c2 9000 	str.w	r9, [r2]
1001a0bc:	e4a1      	b.n	10019a02 <__ssvfscanf_r+0xf66>
1001a0be:	44a9      	add	r9, r5
1001a0c0:	f7fe bd12 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
1001a0c4:	4643      	mov	r3, r8
1001a0c6:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
1001a0ca:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
1001a0ce:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001a0d2:	462a      	mov	r2, r5
1001a0d4:	f1bb 0f00 	cmp.w	fp, #0
1001a0d8:	f43f a8a9 	beq.w	1001922e <__ssvfscanf_r+0x792>
1001a0dc:	633d      	str	r5, [r7, #48]	@ 0x30
1001a0de:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001a0e0:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
1001a0e2:	f8c7 9044 	str.w	r9, [r7, #68]	@ 0x44
1001a0e6:	465e      	mov	r6, fp
1001a0e8:	46f1      	mov	r9, lr
1001a0ea:	46c3      	mov	fp, r8
1001a0ec:	623b      	str	r3, [r7, #32]
1001a0ee:	46e0      	mov	r8, ip
1001a0f0:	3e01      	subs	r6, #1
1001a0f2:	4652      	mov	r2, sl
1001a0f4:	5da9      	ldrb	r1, [r5, r6]
1001a0f6:	4620      	mov	r0, r4
1001a0f8:	f003 f9e4 	bl	1001d4c4 <_sungetc_r>
1001a0fc:	2e00      	cmp	r6, #0
1001a0fe:	d1f7      	bne.n	1001a0f0 <__ssvfscanf_r+0x1654>
1001a100:	46ce      	mov	lr, r9
1001a102:	46c4      	mov	ip, r8
1001a104:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1001a106:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
1001a10a:	6a3b      	ldr	r3, [r7, #32]
1001a10c:	46d8      	mov	r8, fp
1001a10e:	f7ff b88e 	b.w	1001922e <__ssvfscanf_r+0x792>
1001a112:	6b7c      	ldr	r4, [r7, #52]	@ 0x34
1001a114:	1d19      	adds	r1, r3, #4
1001a116:	6820      	ldr	r0, [r4, #0]
1001a118:	f7fa f8e8 	bl	100142ec <realloc>
1001a11c:	2800      	cmp	r0, #0
1001a11e:	f43f a951 	beq.w	100193c4 <__ssvfscanf_r+0x928>
1001a122:	6020      	str	r0, [r4, #0]
1001a124:	f7ff b94e 	b.w	100193c4 <__ssvfscanf_r+0x928>
1001a128:	6b38      	ldr	r0, [r7, #48]	@ 0x30
1001a12a:	00d9      	lsls	r1, r3, #3
1001a12c:	f7fa f8de 	bl	100142ec <realloc>
1001a130:	6338      	str	r0, [r7, #48]	@ 0x30
1001a132:	2800      	cmp	r0, #0
1001a134:	f43f af05 	beq.w	10019f42 <__ssvfscanf_r+0x14a6>
1001a138:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001a13a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001a13c:	005b      	lsls	r3, r3, #1
1001a13e:	1905      	adds	r5, r0, r4
1001a140:	6010      	str	r0, [r2, #0]
1001a142:	647b      	str	r3, [r7, #68]	@ 0x44
1001a144:	46c3      	mov	fp, r8
1001a146:	f7ff b85c 	b.w	10019202 <__ssvfscanf_r+0x766>
1001a14a:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
1001a14c:	45ab      	cmp	fp, r5
1001a14e:	f67f ab94 	bls.w	1001987a <__ssvfscanf_r+0xdde>
1001a152:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001a154:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001a158:	4652      	mov	r2, sl
1001a15a:	4620      	mov	r0, r4
1001a15c:	f003 f9b2 	bl	1001d4c4 <_sungetc_r>
1001a160:	45ab      	cmp	fp, r5
1001a162:	d1f7      	bne.n	1001a154 <__ssvfscanf_r+0x16b8>
1001a164:	f7ff ba7e 	b.w	10019664 <__ssvfscanf_r+0xbc8>
1001a168:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001a16a:	459b      	cmp	fp, r3
1001a16c:	f67f ab85 	bls.w	1001987a <__ssvfscanf_r+0xdde>
1001a170:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
1001a172:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001a176:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001a178:	4652      	mov	r2, sl
1001a17a:	f003 f9a3 	bl	1001d4c4 <_sungetc_r>
1001a17e:	45a3      	cmp	fp, r4
1001a180:	d1f7      	bne.n	1001a172 <__ssvfscanf_r+0x16d6>
1001a182:	f7ff ba6f 	b.w	10019664 <__ssvfscanf_r+0xbc8>
1001a186:	f002 fa95 	bl	1001c6b4 <_strtoull_r>
1001a18a:	460b      	mov	r3, r1
1001a18c:	e60e      	b.n	10019dac <__ssvfscanf_r+0x1310>
1001a18e:	2200      	movs	r2, #0
1001a190:	4694      	mov	ip, r2
1001a192:	4613      	mov	r3, r2
1001a194:	4693      	mov	fp, r2
1001a196:	e682      	b.n	10019e9e <__ssvfscanf_r+0x1402>
1001a198:	461c      	mov	r4, r3
1001a19a:	e9da 2300 	ldrd	r2, r3, [sl]
1001a19e:	429d      	cmp	r5, r3
1001a1a0:	eb02 0103 	add.w	r1, r2, r3
1001a1a4:	dd51      	ble.n	1001a24a <__ssvfscanf_r+0x17ae>
1001a1a6:	f8ca 1000 	str.w	r1, [sl]
1001a1aa:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001a1ac:	4651      	mov	r1, sl
1001a1ae:	441c      	add	r4, r3
1001a1b0:	1aed      	subs	r5, r5, r3
1001a1b2:	f003 f9c3 	bl	1001d53c <__ssrefill_r>
1001a1b6:	2800      	cmp	r0, #0
1001a1b8:	d0ef      	beq.n	1001a19a <__ssvfscanf_r+0x16fe>
1001a1ba:	2c00      	cmp	r4, #0
1001a1bc:	f43e acda 	beq.w	10018b74 <__ssvfscanf_r+0xd8>
1001a1c0:	44a1      	add	r9, r4
1001a1c2:	f7fe bc91 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
1001a1c6:	f8cd a000 	str.w	sl, [sp]
1001a1ca:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001a1cc:	462b      	mov	r3, r5
1001a1ce:	4631      	mov	r1, r6
1001a1d0:	2201      	movs	r2, #1
1001a1d2:	f003 f9cf 	bl	1001d574 <_sfread_r>
1001a1d6:	4604      	mov	r4, r0
1001a1d8:	2800      	cmp	r0, #0
1001a1da:	f43e accb 	beq.w	10018b74 <__ssvfscanf_r+0xd8>
1001a1de:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001a1e0:	f8c7 b034 	str.w	fp, [r7, #52]	@ 0x34
1001a1e4:	3301      	adds	r3, #1
1001a1e6:	44a1      	add	r9, r4
1001a1e8:	643b      	str	r3, [r7, #64]	@ 0x40
1001a1ea:	f7fe bc7d 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
1001a1ee:	647b      	str	r3, [r7, #68]	@ 0x44
1001a1f0:	2b00      	cmp	r3, #0
1001a1f2:	f43f aa37 	beq.w	10019664 <__ssvfscanf_r+0xbc8>
1001a1f6:	2080      	movs	r0, #128	@ 0x80
1001a1f8:	f7f6 fe7a 	bl	10010ef0 <malloc>
1001a1fc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001a1fe:	4683      	mov	fp, r0
1001a200:	2800      	cmp	r0, #0
1001a202:	f43f ae9e 	beq.w	10019f42 <__ssvfscanf_r+0x14a6>
1001a206:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
1001a208:	6018      	str	r0, [r3, #0]
1001a20a:	88ce      	ldrh	r6, [r1, #6]
1001a20c:	888a      	ldrh	r2, [r1, #4]
1001a20e:	4296      	cmp	r6, r2
1001a210:	d337      	bcc.n	1001a282 <__ssvfscanf_r+0x17e6>
1001a212:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
1001a216:	428a      	cmp	r2, r1
1001a218:	647b      	str	r3, [r7, #68]	@ 0x44
1001a21a:	f63f ad48 	bhi.w	10019cae <__ssvfscanf_r+0x1212>
1001a21e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001a220:	3208      	adds	r2, #8
1001a222:	b294      	uxth	r4, r2
1001a224:	6818      	ldr	r0, [r3, #0]
1001a226:	00a1      	lsls	r1, r4, #2
1001a228:	f7fa f860 	bl	100142ec <realloc>
1001a22c:	2800      	cmp	r0, #0
1001a22e:	f43f ad3e 	beq.w	10019cae <__ssvfscanf_r+0x1212>
1001a232:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001a234:	809c      	strh	r4, [r3, #4]
1001a236:	6018      	str	r0, [r3, #0]
1001a238:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001a23a:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001a23c:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
1001a240:	3601      	adds	r6, #1
1001a242:	80d6      	strh	r6, [r2, #6]
1001a244:	46dc      	mov	ip, fp
1001a246:	2220      	movs	r2, #32
1001a248:	e629      	b.n	10019e9e <__ssvfscanf_r+0x1402>
1001a24a:	1b5b      	subs	r3, r3, r5
1001a24c:	442a      	add	r2, r5
1001a24e:	442c      	add	r4, r5
1001a250:	f8ca 3004 	str.w	r3, [sl, #4]
1001a254:	f8ca 2000 	str.w	r2, [sl]
1001a258:	44a1      	add	r9, r4
1001a25a:	f7fe bc45 	b.w	10018ae8 <__ssvfscanf_r+0x4c>
1001a25e:	6808      	ldr	r0, [r1, #0]
1001a260:	e510      	b.n	10019c84 <__ssvfscanf_r+0x11e8>
1001a262:	4285      	cmp	r5, r0
1001a264:	d9bb      	bls.n	1001a1de <__ssvfscanf_r+0x1742>
1001a266:	6830      	ldr	r0, [r6, #0]
1001a268:	4621      	mov	r1, r4
1001a26a:	f7fa f83f 	bl	100142ec <realloc>
1001a26e:	2800      	cmp	r0, #0
1001a270:	d0b5      	beq.n	1001a1de <__ssvfscanf_r+0x1742>
1001a272:	6030      	str	r0, [r6, #0]
1001a274:	e7b3      	b.n	1001a1de <__ssvfscanf_r+0x1742>
1001a276:	f8ba 300c 	ldrh.w	r3, [sl, #12]
1001a27a:	065b      	lsls	r3, r3, #25
1001a27c:	f57e ac86 	bpl.w	10018b8c <__ssvfscanf_r+0xf0>
1001a280:	e515      	b.n	10019cae <__ssvfscanf_r+0x1212>
1001a282:	6808      	ldr	r0, [r1, #0]
1001a284:	e7d9      	b.n	1001a23a <__ssvfscanf_r+0x179e>
1001a286:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
1001a288:	1c91      	adds	r1, r2, #2
1001a28a:	d034      	beq.n	1001a2f6 <__ssvfscanf_r+0x185a>
1001a28c:	2a03      	cmp	r2, #3
1001a28e:	4499      	add	r9, r3
1001a290:	d102      	bne.n	1001a298 <__ssvfscanf_r+0x17fc>
1001a292:	6833      	ldr	r3, [r6, #0]
1001a294:	2b04      	cmp	r3, #4
1001a296:	d000      	beq.n	1001a29a <__ssvfscanf_r+0x17fe>
1001a298:	3d01      	subs	r5, #1
1001a29a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001a29c:	2b00      	cmp	r3, #0
1001a29e:	f43f ae3d 	beq.w	10019f1c <__ssvfscanf_r+0x1480>
1001a2a2:	2600      	movs	r6, #0
1001a2a4:	f8da 3004 	ldr.w	r3, [sl, #4]
1001a2a8:	2b00      	cmp	r3, #0
1001a2aa:	dd13      	ble.n	1001a2d4 <__ssvfscanf_r+0x1838>
1001a2ac:	2d00      	cmp	r5, #0
1001a2ae:	f47f adfc 	bne.w	10019eaa <__ssvfscanf_r+0x140e>
1001a2b2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001a2b4:	4642      	mov	r2, r8
1001a2b6:	46a4      	mov	ip, r4
1001a2b8:	f8d7 8030 	ldr.w	r8, [r7, #48]	@ 0x30
1001a2bc:	b123      	cbz	r3, 1001a2c8 <__ssvfscanf_r+0x182c>
1001a2be:	ebab 010c 	sub.w	r1, fp, ip
1001a2c2:	ebb2 0fa1 	cmp.w	r2, r1, asr #2
1001a2c6:	d821      	bhi.n	1001a30c <__ssvfscanf_r+0x1870>
1001a2c8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001a2ca:	2b00      	cmp	r3, #0
1001a2cc:	f47e ac0c 	bne.w	10018ae8 <__ssvfscanf_r+0x4c>
1001a2d0:	f7fe bfba 	b.w	10019248 <__ssvfscanf_r+0x7ac>
1001a2d4:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001a2d6:	4651      	mov	r1, sl
1001a2d8:	f003 f930 	bl	1001d53c <__ssrefill_r>
1001a2dc:	2800      	cmp	r0, #0
1001a2de:	d0e5      	beq.n	1001a2ac <__ssvfscanf_r+0x1810>
1001a2e0:	4642      	mov	r2, r8
1001a2e2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001a2e4:	f8d7 8030 	ldr.w	r8, [r7, #48]	@ 0x30
1001a2e8:	46a4      	mov	ip, r4
1001a2ea:	2e00      	cmp	r6, #0
1001a2ec:	f47e ac42 	bne.w	10018b74 <__ssvfscanf_r+0xd8>
1001a2f0:	2b00      	cmp	r3, #0
1001a2f2:	d1e4      	bne.n	1001a2be <__ssvfscanf_r+0x1822>
1001a2f4:	e7e8      	b.n	1001a2c8 <__ssvfscanf_r+0x182c>
1001a2f6:	461e      	mov	r6, r3
1001a2f8:	e7d4      	b.n	1001a2a4 <__ssvfscanf_r+0x1808>
1001a2fa:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001a2fc:	eb00 0b06 	add.w	fp, r0, r6
1001a300:	6018      	str	r0, [r3, #0]
1001a302:	ea4f 0848 	mov.w	r8, r8, lsl #1
1001a306:	f10b 0b04 	add.w	fp, fp, #4
1001a30a:	e7ca      	b.n	1001a2a2 <__ssvfscanf_r+0x1806>
1001a30c:	6818      	ldr	r0, [r3, #0]
1001a30e:	647b      	str	r3, [r7, #68]	@ 0x44
1001a310:	f7f9 ffec 	bl	100142ec <realloc>
1001a314:	2800      	cmp	r0, #0
1001a316:	d0d7      	beq.n	1001a2c8 <__ssvfscanf_r+0x182c>
1001a318:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001a31a:	6018      	str	r0, [r3, #0]
1001a31c:	e7d4      	b.n	1001a2c8 <__ssvfscanf_r+0x182c>
1001a31e:	bf00      	nop

1001a320 <_Balloc>:
1001a320:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001a322:	b570      	push	{r4, r5, r6, lr}
1001a324:	4605      	mov	r5, r0
1001a326:	460c      	mov	r4, r1
1001a328:	b14b      	cbz	r3, 1001a33e <_Balloc+0x1e>
1001a32a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1001a32e:	b180      	cbz	r0, 1001a352 <_Balloc+0x32>
1001a330:	6802      	ldr	r2, [r0, #0]
1001a332:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
1001a336:	2300      	movs	r3, #0
1001a338:	60c3      	str	r3, [r0, #12]
1001a33a:	6103      	str	r3, [r0, #16]
1001a33c:	bd70      	pop	{r4, r5, r6, pc}
1001a33e:	2221      	movs	r2, #33	@ 0x21
1001a340:	2104      	movs	r1, #4
1001a342:	f002 fbb1 	bl	1001caa8 <_calloc_r>
1001a346:	4603      	mov	r3, r0
1001a348:	6468      	str	r0, [r5, #68]	@ 0x44
1001a34a:	2800      	cmp	r0, #0
1001a34c:	d1ed      	bne.n	1001a32a <_Balloc+0xa>
1001a34e:	2000      	movs	r0, #0
1001a350:	bd70      	pop	{r4, r5, r6, pc}
1001a352:	2101      	movs	r1, #1
1001a354:	fa01 f604 	lsl.w	r6, r1, r4
1001a358:	1d72      	adds	r2, r6, #5
1001a35a:	0092      	lsls	r2, r2, #2
1001a35c:	4628      	mov	r0, r5
1001a35e:	f002 fba3 	bl	1001caa8 <_calloc_r>
1001a362:	2800      	cmp	r0, #0
1001a364:	d0f3      	beq.n	1001a34e <_Balloc+0x2e>
1001a366:	e9c0 4601 	strd	r4, r6, [r0, #4]
1001a36a:	e7e4      	b.n	1001a336 <_Balloc+0x16>

1001a36c <_Bfree>:
1001a36c:	b131      	cbz	r1, 1001a37c <_Bfree+0x10>
1001a36e:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001a370:	684a      	ldr	r2, [r1, #4]
1001a372:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1001a376:	6008      	str	r0, [r1, #0]
1001a378:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
1001a37c:	4770      	bx	lr
1001a37e:	bf00      	nop

1001a380 <__multadd>:
1001a380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001a384:	690d      	ldr	r5, [r1, #16]
1001a386:	4607      	mov	r7, r0
1001a388:	460e      	mov	r6, r1
1001a38a:	461c      	mov	r4, r3
1001a38c:	f101 0e14 	add.w	lr, r1, #20
1001a390:	2000      	movs	r0, #0
1001a392:	f8de 1000 	ldr.w	r1, [lr]
1001a396:	b28b      	uxth	r3, r1
1001a398:	fb02 4303 	mla	r3, r2, r3, r4
1001a39c:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001a3a0:	0c09      	lsrs	r1, r1, #16
1001a3a2:	fb02 cc01 	mla	ip, r2, r1, ip
1001a3a6:	3001      	adds	r0, #1
1001a3a8:	b29b      	uxth	r3, r3
1001a3aa:	eb03 430c 	add.w	r3, r3, ip, lsl #16
1001a3ae:	4285      	cmp	r5, r0
1001a3b0:	f84e 3b04 	str.w	r3, [lr], #4
1001a3b4:	ea4f 441c 	mov.w	r4, ip, lsr #16
1001a3b8:	dceb      	bgt.n	1001a392 <__multadd+0x12>
1001a3ba:	b13c      	cbz	r4, 1001a3cc <__multadd+0x4c>
1001a3bc:	68b3      	ldr	r3, [r6, #8]
1001a3be:	42ab      	cmp	r3, r5
1001a3c0:	dd07      	ble.n	1001a3d2 <__multadd+0x52>
1001a3c2:	eb06 0385 	add.w	r3, r6, r5, lsl #2
1001a3c6:	3501      	adds	r5, #1
1001a3c8:	615c      	str	r4, [r3, #20]
1001a3ca:	6135      	str	r5, [r6, #16]
1001a3cc:	4630      	mov	r0, r6
1001a3ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001a3d2:	6871      	ldr	r1, [r6, #4]
1001a3d4:	4638      	mov	r0, r7
1001a3d6:	3101      	adds	r1, #1
1001a3d8:	f7ff ffa2 	bl	1001a320 <_Balloc>
1001a3dc:	4680      	mov	r8, r0
1001a3de:	b1a8      	cbz	r0, 1001a40c <__multadd+0x8c>
1001a3e0:	6932      	ldr	r2, [r6, #16]
1001a3e2:	3202      	adds	r2, #2
1001a3e4:	f106 010c 	add.w	r1, r6, #12
1001a3e8:	0092      	lsls	r2, r2, #2
1001a3ea:	300c      	adds	r0, #12
1001a3ec:	f7fb fa68 	bl	100158c0 <memcpy>
1001a3f0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001a3f2:	6872      	ldr	r2, [r6, #4]
1001a3f4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001a3f8:	6031      	str	r1, [r6, #0]
1001a3fa:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
1001a3fe:	4646      	mov	r6, r8
1001a400:	eb06 0385 	add.w	r3, r6, r5, lsl #2
1001a404:	3501      	adds	r5, #1
1001a406:	615c      	str	r4, [r3, #20]
1001a408:	6135      	str	r5, [r6, #16]
1001a40a:	e7df      	b.n	1001a3cc <__multadd+0x4c>
1001a40c:	4b02      	ldr	r3, [pc, #8]	@ (1001a418 <__multadd+0x98>)
1001a40e:	4803      	ldr	r0, [pc, #12]	@ (1001a41c <__multadd+0x9c>)
1001a410:	4642      	mov	r2, r8
1001a412:	21ba      	movs	r1, #186	@ 0xba
1001a414:	f002 fa64 	bl	1001c8e0 <__assert_func>
1001a418:	1001ebf4 	.word	0x1001ebf4
1001a41c:	1001ecb8 	.word	0x1001ecb8

1001a420 <__s2b>:
1001a420:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001a424:	4617      	mov	r7, r2
1001a426:	4a27      	ldr	r2, [pc, #156]	@ (1001a4c4 <__s2b+0xa4>)
1001a428:	461e      	mov	r6, r3
1001a42a:	3308      	adds	r3, #8
1001a42c:	460c      	mov	r4, r1
1001a42e:	2e09      	cmp	r6, #9
1001a430:	fb82 1203 	smull	r1, r2, r2, r3
1001a434:	ea4f 73e3 	mov.w	r3, r3, asr #31
1001a438:	4605      	mov	r5, r0
1001a43a:	ebc3 0362 	rsb	r3, r3, r2, asr #1
1001a43e:	dd39      	ble.n	1001a4b4 <__s2b+0x94>
1001a440:	f04f 0c01 	mov.w	ip, #1
1001a444:	2100      	movs	r1, #0
1001a446:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
1001a44a:	4563      	cmp	r3, ip
1001a44c:	f101 0101 	add.w	r1, r1, #1
1001a450:	dcf9      	bgt.n	1001a446 <__s2b+0x26>
1001a452:	4628      	mov	r0, r5
1001a454:	f7ff ff64 	bl	1001a320 <_Balloc>
1001a458:	4601      	mov	r1, r0
1001a45a:	b368      	cbz	r0, 1001a4b8 <__s2b+0x98>
1001a45c:	9b08      	ldr	r3, [sp, #32]
1001a45e:	6143      	str	r3, [r0, #20]
1001a460:	2f09      	cmp	r7, #9
1001a462:	f04f 0301 	mov.w	r3, #1
1001a466:	6103      	str	r3, [r0, #16]
1001a468:	dc12      	bgt.n	1001a490 <__s2b+0x70>
1001a46a:	340a      	adds	r4, #10
1001a46c:	2709      	movs	r7, #9
1001a46e:	42be      	cmp	r6, r7
1001a470:	dd0b      	ble.n	1001a48a <__s2b+0x6a>
1001a472:	1bf6      	subs	r6, r6, r7
1001a474:	4426      	add	r6, r4
1001a476:	f814 3b01 	ldrb.w	r3, [r4], #1
1001a47a:	220a      	movs	r2, #10
1001a47c:	3b30      	subs	r3, #48	@ 0x30
1001a47e:	4628      	mov	r0, r5
1001a480:	f7ff ff7e 	bl	1001a380 <__multadd>
1001a484:	42a6      	cmp	r6, r4
1001a486:	4601      	mov	r1, r0
1001a488:	d1f5      	bne.n	1001a476 <__s2b+0x56>
1001a48a:	4608      	mov	r0, r1
1001a48c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001a490:	f104 0909 	add.w	r9, r4, #9
1001a494:	46c8      	mov	r8, r9
1001a496:	443c      	add	r4, r7
1001a498:	f818 3b01 	ldrb.w	r3, [r8], #1
1001a49c:	220a      	movs	r2, #10
1001a49e:	3b30      	subs	r3, #48	@ 0x30
1001a4a0:	4628      	mov	r0, r5
1001a4a2:	f7ff ff6d 	bl	1001a380 <__multadd>
1001a4a6:	45a0      	cmp	r8, r4
1001a4a8:	4601      	mov	r1, r0
1001a4aa:	d1f5      	bne.n	1001a498 <__s2b+0x78>
1001a4ac:	f1a7 0408 	sub.w	r4, r7, #8
1001a4b0:	444c      	add	r4, r9
1001a4b2:	e7dc      	b.n	1001a46e <__s2b+0x4e>
1001a4b4:	2100      	movs	r1, #0
1001a4b6:	e7cc      	b.n	1001a452 <__s2b+0x32>
1001a4b8:	460a      	mov	r2, r1
1001a4ba:	4b03      	ldr	r3, [pc, #12]	@ (1001a4c8 <__s2b+0xa8>)
1001a4bc:	4803      	ldr	r0, [pc, #12]	@ (1001a4cc <__s2b+0xac>)
1001a4be:	21d3      	movs	r1, #211	@ 0xd3
1001a4c0:	f002 fa0e 	bl	1001c8e0 <__assert_func>
1001a4c4:	38e38e39 	.word	0x38e38e39
1001a4c8:	1001ebf4 	.word	0x1001ebf4
1001a4cc:	1001ecb8 	.word	0x1001ecb8

1001a4d0 <__hi0bits>:
1001a4d0:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
1001a4d4:	4603      	mov	r3, r0
1001a4d6:	bf36      	itet	cc
1001a4d8:	0403      	lslcc	r3, r0, #16
1001a4da:	2000      	movcs	r0, #0
1001a4dc:	2010      	movcc	r0, #16
1001a4de:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
1001a4e2:	bf3c      	itt	cc
1001a4e4:	021b      	lslcc	r3, r3, #8
1001a4e6:	3008      	addcc	r0, #8
1001a4e8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
1001a4ec:	bf3c      	itt	cc
1001a4ee:	011b      	lslcc	r3, r3, #4
1001a4f0:	3004      	addcc	r0, #4
1001a4f2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
1001a4f6:	d303      	bcc.n	1001a500 <__hi0bits+0x30>
1001a4f8:	2b00      	cmp	r3, #0
1001a4fa:	db06      	blt.n	1001a50a <__hi0bits+0x3a>
1001a4fc:	3001      	adds	r0, #1
1001a4fe:	4770      	bx	lr
1001a500:	009b      	lsls	r3, r3, #2
1001a502:	d403      	bmi.n	1001a50c <__hi0bits+0x3c>
1001a504:	005b      	lsls	r3, r3, #1
1001a506:	d403      	bmi.n	1001a510 <__hi0bits+0x40>
1001a508:	2020      	movs	r0, #32
1001a50a:	4770      	bx	lr
1001a50c:	3002      	adds	r0, #2
1001a50e:	4770      	bx	lr
1001a510:	3003      	adds	r0, #3
1001a512:	4770      	bx	lr

1001a514 <__lo0bits>:
1001a514:	6803      	ldr	r3, [r0, #0]
1001a516:	f013 0207 	ands.w	r2, r3, #7
1001a51a:	4601      	mov	r1, r0
1001a51c:	d007      	beq.n	1001a52e <__lo0bits+0x1a>
1001a51e:	07da      	lsls	r2, r3, #31
1001a520:	d41f      	bmi.n	1001a562 <__lo0bits+0x4e>
1001a522:	0798      	lsls	r0, r3, #30
1001a524:	d521      	bpl.n	1001a56a <__lo0bits+0x56>
1001a526:	085b      	lsrs	r3, r3, #1
1001a528:	600b      	str	r3, [r1, #0]
1001a52a:	2001      	movs	r0, #1
1001a52c:	4770      	bx	lr
1001a52e:	b298      	uxth	r0, r3
1001a530:	b1a0      	cbz	r0, 1001a55c <__lo0bits+0x48>
1001a532:	4610      	mov	r0, r2
1001a534:	b2da      	uxtb	r2, r3
1001a536:	b90a      	cbnz	r2, 1001a53c <__lo0bits+0x28>
1001a538:	3008      	adds	r0, #8
1001a53a:	0a1b      	lsrs	r3, r3, #8
1001a53c:	071a      	lsls	r2, r3, #28
1001a53e:	bf04      	itt	eq
1001a540:	091b      	lsreq	r3, r3, #4
1001a542:	3004      	addeq	r0, #4
1001a544:	079a      	lsls	r2, r3, #30
1001a546:	bf04      	itt	eq
1001a548:	089b      	lsreq	r3, r3, #2
1001a54a:	3002      	addeq	r0, #2
1001a54c:	07da      	lsls	r2, r3, #31
1001a54e:	d403      	bmi.n	1001a558 <__lo0bits+0x44>
1001a550:	085b      	lsrs	r3, r3, #1
1001a552:	f100 0001 	add.w	r0, r0, #1
1001a556:	d006      	beq.n	1001a566 <__lo0bits+0x52>
1001a558:	600b      	str	r3, [r1, #0]
1001a55a:	4770      	bx	lr
1001a55c:	0c1b      	lsrs	r3, r3, #16
1001a55e:	2010      	movs	r0, #16
1001a560:	e7e8      	b.n	1001a534 <__lo0bits+0x20>
1001a562:	2000      	movs	r0, #0
1001a564:	4770      	bx	lr
1001a566:	2020      	movs	r0, #32
1001a568:	4770      	bx	lr
1001a56a:	089b      	lsrs	r3, r3, #2
1001a56c:	600b      	str	r3, [r1, #0]
1001a56e:	2002      	movs	r0, #2
1001a570:	4770      	bx	lr
1001a572:	bf00      	nop

1001a574 <__i2b>:
1001a574:	b538      	push	{r3, r4, r5, lr}
1001a576:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001a578:	4604      	mov	r4, r0
1001a57a:	460d      	mov	r5, r1
1001a57c:	b14b      	cbz	r3, 1001a592 <__i2b+0x1e>
1001a57e:	6858      	ldr	r0, [r3, #4]
1001a580:	b1b0      	cbz	r0, 1001a5b0 <__i2b+0x3c>
1001a582:	6802      	ldr	r2, [r0, #0]
1001a584:	605a      	str	r2, [r3, #4]
1001a586:	2200      	movs	r2, #0
1001a588:	2301      	movs	r3, #1
1001a58a:	6145      	str	r5, [r0, #20]
1001a58c:	60c2      	str	r2, [r0, #12]
1001a58e:	6103      	str	r3, [r0, #16]
1001a590:	bd38      	pop	{r3, r4, r5, pc}
1001a592:	2221      	movs	r2, #33	@ 0x21
1001a594:	2104      	movs	r1, #4
1001a596:	f002 fa87 	bl	1001caa8 <_calloc_r>
1001a59a:	4603      	mov	r3, r0
1001a59c:	6460      	str	r0, [r4, #68]	@ 0x44
1001a59e:	2800      	cmp	r0, #0
1001a5a0:	d1ed      	bne.n	1001a57e <__i2b+0xa>
1001a5a2:	4b09      	ldr	r3, [pc, #36]	@ (1001a5c8 <__i2b+0x54>)
1001a5a4:	4809      	ldr	r0, [pc, #36]	@ (1001a5cc <__i2b+0x58>)
1001a5a6:	2200      	movs	r2, #0
1001a5a8:	f240 1145 	movw	r1, #325	@ 0x145
1001a5ac:	f002 f998 	bl	1001c8e0 <__assert_func>
1001a5b0:	221c      	movs	r2, #28
1001a5b2:	2101      	movs	r1, #1
1001a5b4:	4620      	mov	r0, r4
1001a5b6:	f002 fa77 	bl	1001caa8 <_calloc_r>
1001a5ba:	2800      	cmp	r0, #0
1001a5bc:	d0f1      	beq.n	1001a5a2 <__i2b+0x2e>
1001a5be:	2201      	movs	r2, #1
1001a5c0:	2302      	movs	r3, #2
1001a5c2:	6042      	str	r2, [r0, #4]
1001a5c4:	6083      	str	r3, [r0, #8]
1001a5c6:	e7de      	b.n	1001a586 <__i2b+0x12>
1001a5c8:	1001ebf4 	.word	0x1001ebf4
1001a5cc:	1001ecb8 	.word	0x1001ecb8

1001a5d0 <__multiply>:
1001a5d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001a5d4:	f8d1 8010 	ldr.w	r8, [r1, #16]
1001a5d8:	6915      	ldr	r5, [r2, #16]
1001a5da:	45a8      	cmp	r8, r5
1001a5dc:	b085      	sub	sp, #20
1001a5de:	460e      	mov	r6, r1
1001a5e0:	4692      	mov	sl, r2
1001a5e2:	db05      	blt.n	1001a5f0 <__multiply+0x20>
1001a5e4:	462a      	mov	r2, r5
1001a5e6:	4653      	mov	r3, sl
1001a5e8:	4645      	mov	r5, r8
1001a5ea:	468a      	mov	sl, r1
1001a5ec:	4690      	mov	r8, r2
1001a5ee:	461e      	mov	r6, r3
1001a5f0:	f8da 3008 	ldr.w	r3, [sl, #8]
1001a5f4:	f8da 1004 	ldr.w	r1, [sl, #4]
1001a5f8:	eb05 0408 	add.w	r4, r5, r8
1001a5fc:	42a3      	cmp	r3, r4
1001a5fe:	bfb8      	it	lt
1001a600:	3101      	addlt	r1, #1
1001a602:	f7ff fe8d 	bl	1001a320 <_Balloc>
1001a606:	4684      	mov	ip, r0
1001a608:	2800      	cmp	r0, #0
1001a60a:	f000 808b 	beq.w	1001a724 <__multiply+0x154>
1001a60e:	f100 0714 	add.w	r7, r0, #20
1001a612:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
1001a616:	4577      	cmp	r7, lr
1001a618:	d205      	bcs.n	1001a626 <__multiply+0x56>
1001a61a:	463b      	mov	r3, r7
1001a61c:	2200      	movs	r2, #0
1001a61e:	f843 2b04 	str.w	r2, [r3], #4
1001a622:	459e      	cmp	lr, r3
1001a624:	d8fb      	bhi.n	1001a61e <__multiply+0x4e>
1001a626:	3614      	adds	r6, #20
1001a628:	eb06 0888 	add.w	r8, r6, r8, lsl #2
1001a62c:	f10a 0914 	add.w	r9, sl, #20
1001a630:	4546      	cmp	r6, r8
1001a632:	eb09 0585 	add.w	r5, r9, r5, lsl #2
1001a636:	d266      	bcs.n	1001a706 <__multiply+0x136>
1001a638:	eba5 030a 	sub.w	r3, r5, sl
1001a63c:	3b15      	subs	r3, #21
1001a63e:	f023 0303 	bic.w	r3, r3, #3
1001a642:	f10a 0a15 	add.w	sl, sl, #21
1001a646:	3304      	adds	r3, #4
1001a648:	4555      	cmp	r5, sl
1001a64a:	bf2c      	ite	cs
1001a64c:	469b      	movcs	fp, r3
1001a64e:	f04f 0b04 	movcc.w	fp, #4
1001a652:	f8cd e008 	str.w	lr, [sp, #8]
1001a656:	9403      	str	r4, [sp, #12]
1001a658:	46ae      	mov	lr, r5
1001a65a:	46e2      	mov	sl, ip
1001a65c:	e005      	b.n	1001a66a <__multiply+0x9a>
1001a65e:	0c09      	lsrs	r1, r1, #16
1001a660:	d12a      	bne.n	1001a6b8 <__multiply+0xe8>
1001a662:	45b0      	cmp	r8, r6
1001a664:	f107 0704 	add.w	r7, r7, #4
1001a668:	d94a      	bls.n	1001a700 <__multiply+0x130>
1001a66a:	f856 1b04 	ldr.w	r1, [r6], #4
1001a66e:	b28d      	uxth	r5, r1
1001a670:	2d00      	cmp	r5, #0
1001a672:	d0f4      	beq.n	1001a65e <__multiply+0x8e>
1001a674:	46cc      	mov	ip, r9
1001a676:	463c      	mov	r4, r7
1001a678:	2300      	movs	r3, #0
1001a67a:	9601      	str	r6, [sp, #4]
1001a67c:	f85c 0b04 	ldr.w	r0, [ip], #4
1001a680:	6821      	ldr	r1, [r4, #0]
1001a682:	b286      	uxth	r6, r0
1001a684:	b28a      	uxth	r2, r1
1001a686:	0c00      	lsrs	r0, r0, #16
1001a688:	fb05 2206 	mla	r2, r5, r6, r2
1001a68c:	0c09      	lsrs	r1, r1, #16
1001a68e:	441a      	add	r2, r3
1001a690:	fb05 1100 	mla	r1, r5, r0, r1
1001a694:	eb01 4112 	add.w	r1, r1, r2, lsr #16
1001a698:	b292      	uxth	r2, r2
1001a69a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
1001a69e:	45e6      	cmp	lr, ip
1001a6a0:	f844 2b04 	str.w	r2, [r4], #4
1001a6a4:	ea4f 4311 	mov.w	r3, r1, lsr #16
1001a6a8:	d8e8      	bhi.n	1001a67c <__multiply+0xac>
1001a6aa:	9e01      	ldr	r6, [sp, #4]
1001a6ac:	f847 300b 	str.w	r3, [r7, fp]
1001a6b0:	f856 1c04 	ldr.w	r1, [r6, #-4]
1001a6b4:	0c09      	lsrs	r1, r1, #16
1001a6b6:	d0d4      	beq.n	1001a662 <__multiply+0x92>
1001a6b8:	683b      	ldr	r3, [r7, #0]
1001a6ba:	2200      	movs	r2, #0
1001a6bc:	4648      	mov	r0, r9
1001a6be:	461d      	mov	r5, r3
1001a6c0:	463c      	mov	r4, r7
1001a6c2:	4694      	mov	ip, r2
1001a6c4:	8802      	ldrh	r2, [r0, #0]
1001a6c6:	fb01 c202 	mla	r2, r1, r2, ip
1001a6ca:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1001a6ce:	b29b      	uxth	r3, r3
1001a6d0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1001a6d4:	f844 3b04 	str.w	r3, [r4], #4
1001a6d8:	f850 3b04 	ldr.w	r3, [r0], #4
1001a6dc:	6825      	ldr	r5, [r4, #0]
1001a6de:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001a6e2:	b2ab      	uxth	r3, r5
1001a6e4:	fb01 330c 	mla	r3, r1, ip, r3
1001a6e8:	eb03 4312 	add.w	r3, r3, r2, lsr #16
1001a6ec:	4586      	cmp	lr, r0
1001a6ee:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001a6f2:	d8e7      	bhi.n	1001a6c4 <__multiply+0xf4>
1001a6f4:	45b0      	cmp	r8, r6
1001a6f6:	f847 300b 	str.w	r3, [r7, fp]
1001a6fa:	f107 0704 	add.w	r7, r7, #4
1001a6fe:	d8b4      	bhi.n	1001a66a <__multiply+0x9a>
1001a700:	e9dd e402 	ldrd	lr, r4, [sp, #8]
1001a704:	46d4      	mov	ip, sl
1001a706:	2c00      	cmp	r4, #0
1001a708:	dc02      	bgt.n	1001a710 <__multiply+0x140>
1001a70a:	e005      	b.n	1001a718 <__multiply+0x148>
1001a70c:	3c01      	subs	r4, #1
1001a70e:	d003      	beq.n	1001a718 <__multiply+0x148>
1001a710:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
1001a714:	2b00      	cmp	r3, #0
1001a716:	d0f9      	beq.n	1001a70c <__multiply+0x13c>
1001a718:	4660      	mov	r0, ip
1001a71a:	f8cc 4010 	str.w	r4, [ip, #16]
1001a71e:	b005      	add	sp, #20
1001a720:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001a724:	4b03      	ldr	r3, [pc, #12]	@ (1001a734 <__multiply+0x164>)
1001a726:	4804      	ldr	r0, [pc, #16]	@ (1001a738 <__multiply+0x168>)
1001a728:	4662      	mov	r2, ip
1001a72a:	f44f 71b1 	mov.w	r1, #354	@ 0x162
1001a72e:	f002 f8d7 	bl	1001c8e0 <__assert_func>
1001a732:	bf00      	nop
1001a734:	1001ebf4 	.word	0x1001ebf4
1001a738:	1001ecb8 	.word	0x1001ecb8

1001a73c <__pow5mult>:
1001a73c:	f012 0303 	ands.w	r3, r2, #3
1001a740:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001a744:	4614      	mov	r4, r2
1001a746:	4607      	mov	r7, r0
1001a748:	d12c      	bne.n	1001a7a4 <__pow5mult+0x68>
1001a74a:	460d      	mov	r5, r1
1001a74c:	10a4      	asrs	r4, r4, #2
1001a74e:	d01c      	beq.n	1001a78a <__pow5mult+0x4e>
1001a750:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
1001a752:	b386      	cbz	r6, 1001a7b6 <__pow5mult+0x7a>
1001a754:	07e3      	lsls	r3, r4, #31
1001a756:	f04f 0800 	mov.w	r8, #0
1001a75a:	d406      	bmi.n	1001a76a <__pow5mult+0x2e>
1001a75c:	1064      	asrs	r4, r4, #1
1001a75e:	d014      	beq.n	1001a78a <__pow5mult+0x4e>
1001a760:	6830      	ldr	r0, [r6, #0]
1001a762:	b1a8      	cbz	r0, 1001a790 <__pow5mult+0x54>
1001a764:	4606      	mov	r6, r0
1001a766:	07e3      	lsls	r3, r4, #31
1001a768:	d5f8      	bpl.n	1001a75c <__pow5mult+0x20>
1001a76a:	4632      	mov	r2, r6
1001a76c:	4629      	mov	r1, r5
1001a76e:	4638      	mov	r0, r7
1001a770:	f7ff ff2e 	bl	1001a5d0 <__multiply>
1001a774:	b135      	cbz	r5, 1001a784 <__pow5mult+0x48>
1001a776:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001a778:	6869      	ldr	r1, [r5, #4]
1001a77a:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001a77e:	602a      	str	r2, [r5, #0]
1001a780:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
1001a784:	1064      	asrs	r4, r4, #1
1001a786:	4605      	mov	r5, r0
1001a788:	d1ea      	bne.n	1001a760 <__pow5mult+0x24>
1001a78a:	4628      	mov	r0, r5
1001a78c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001a790:	4632      	mov	r2, r6
1001a792:	4631      	mov	r1, r6
1001a794:	4638      	mov	r0, r7
1001a796:	f7ff ff1b 	bl	1001a5d0 <__multiply>
1001a79a:	6030      	str	r0, [r6, #0]
1001a79c:	f8c0 8000 	str.w	r8, [r0]
1001a7a0:	4606      	mov	r6, r0
1001a7a2:	e7e0      	b.n	1001a766 <__pow5mult+0x2a>
1001a7a4:	3b01      	subs	r3, #1
1001a7a6:	4a0f      	ldr	r2, [pc, #60]	@ (1001a7e4 <__pow5mult+0xa8>)
1001a7a8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001a7ac:	2300      	movs	r3, #0
1001a7ae:	f7ff fde7 	bl	1001a380 <__multadd>
1001a7b2:	4605      	mov	r5, r0
1001a7b4:	e7ca      	b.n	1001a74c <__pow5mult+0x10>
1001a7b6:	2101      	movs	r1, #1
1001a7b8:	4638      	mov	r0, r7
1001a7ba:	f7ff fdb1 	bl	1001a320 <_Balloc>
1001a7be:	4606      	mov	r6, r0
1001a7c0:	b140      	cbz	r0, 1001a7d4 <__pow5mult+0x98>
1001a7c2:	2301      	movs	r3, #1
1001a7c4:	f240 2271 	movw	r2, #625	@ 0x271
1001a7c8:	e9c0 3204 	strd	r3, r2, [r0, #16]
1001a7cc:	2300      	movs	r3, #0
1001a7ce:	6438      	str	r0, [r7, #64]	@ 0x40
1001a7d0:	6003      	str	r3, [r0, #0]
1001a7d2:	e7bf      	b.n	1001a754 <__pow5mult+0x18>
1001a7d4:	4b04      	ldr	r3, [pc, #16]	@ (1001a7e8 <__pow5mult+0xac>)
1001a7d6:	4805      	ldr	r0, [pc, #20]	@ (1001a7ec <__pow5mult+0xb0>)
1001a7d8:	4632      	mov	r2, r6
1001a7da:	f240 1145 	movw	r1, #325	@ 0x145
1001a7de:	f002 f87f 	bl	1001c8e0 <__assert_func>
1001a7e2:	bf00      	nop
1001a7e4:	1001ed1c 	.word	0x1001ed1c
1001a7e8:	1001ebf4 	.word	0x1001ebf4
1001a7ec:	1001ecb8 	.word	0x1001ecb8

1001a7f0 <__lshift>:
1001a7f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001a7f4:	460c      	mov	r4, r1
1001a7f6:	4690      	mov	r8, r2
1001a7f8:	6927      	ldr	r7, [r4, #16]
1001a7fa:	68a3      	ldr	r3, [r4, #8]
1001a7fc:	6849      	ldr	r1, [r1, #4]
1001a7fe:	eb07 1762 	add.w	r7, r7, r2, asr #5
1001a802:	1c7d      	adds	r5, r7, #1
1001a804:	429d      	cmp	r5, r3
1001a806:	4606      	mov	r6, r0
1001a808:	ea4f 1962 	mov.w	r9, r2, asr #5
1001a80c:	dd04      	ble.n	1001a818 <__lshift+0x28>
1001a80e:	005b      	lsls	r3, r3, #1
1001a810:	429d      	cmp	r5, r3
1001a812:	f101 0101 	add.w	r1, r1, #1
1001a816:	dcfa      	bgt.n	1001a80e <__lshift+0x1e>
1001a818:	4630      	mov	r0, r6
1001a81a:	f7ff fd81 	bl	1001a320 <_Balloc>
1001a81e:	4684      	mov	ip, r0
1001a820:	2800      	cmp	r0, #0
1001a822:	d051      	beq.n	1001a8c8 <__lshift+0xd8>
1001a824:	f1b9 0f00 	cmp.w	r9, #0
1001a828:	f100 0014 	add.w	r0, r0, #20
1001a82c:	dd0e      	ble.n	1001a84c <__lshift+0x5c>
1001a82e:	f109 0205 	add.w	r2, r9, #5
1001a832:	ea4f 0e82 	mov.w	lr, r2, lsl #2
1001a836:	4603      	mov	r3, r0
1001a838:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
1001a83c:	2100      	movs	r1, #0
1001a83e:	f843 1b04 	str.w	r1, [r3], #4
1001a842:	4293      	cmp	r3, r2
1001a844:	d1fb      	bne.n	1001a83e <__lshift+0x4e>
1001a846:	f1ae 0314 	sub.w	r3, lr, #20
1001a84a:	4418      	add	r0, r3
1001a84c:	6921      	ldr	r1, [r4, #16]
1001a84e:	f104 0314 	add.w	r3, r4, #20
1001a852:	f018 081f 	ands.w	r8, r8, #31
1001a856:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001a85a:	d02d      	beq.n	1001a8b8 <__lshift+0xc8>
1001a85c:	f1c8 0920 	rsb	r9, r8, #32
1001a860:	4686      	mov	lr, r0
1001a862:	f04f 0a00 	mov.w	sl, #0
1001a866:	681a      	ldr	r2, [r3, #0]
1001a868:	fa02 f208 	lsl.w	r2, r2, r8
1001a86c:	ea42 020a 	orr.w	r2, r2, sl
1001a870:	f84e 2b04 	str.w	r2, [lr], #4
1001a874:	f853 2b04 	ldr.w	r2, [r3], #4
1001a878:	4299      	cmp	r1, r3
1001a87a:	fa22 fa09 	lsr.w	sl, r2, r9
1001a87e:	d8f2      	bhi.n	1001a866 <__lshift+0x76>
1001a880:	1b0b      	subs	r3, r1, r4
1001a882:	3b15      	subs	r3, #21
1001a884:	f023 0303 	bic.w	r3, r3, #3
1001a888:	3304      	adds	r3, #4
1001a88a:	f104 0215 	add.w	r2, r4, #21
1001a88e:	4291      	cmp	r1, r2
1001a890:	bf38      	it	cc
1001a892:	2304      	movcc	r3, #4
1001a894:	f840 a003 	str.w	sl, [r0, r3]
1001a898:	f1ba 0f00 	cmp.w	sl, #0
1001a89c:	d100      	bne.n	1001a8a0 <__lshift+0xb0>
1001a89e:	463d      	mov	r5, r7
1001a8a0:	6c73      	ldr	r3, [r6, #68]	@ 0x44
1001a8a2:	6862      	ldr	r2, [r4, #4]
1001a8a4:	f8cc 5010 	str.w	r5, [ip, #16]
1001a8a8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001a8ac:	6021      	str	r1, [r4, #0]
1001a8ae:	4660      	mov	r0, ip
1001a8b0:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
1001a8b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001a8b8:	3804      	subs	r0, #4
1001a8ba:	f853 2b04 	ldr.w	r2, [r3], #4
1001a8be:	f840 2f04 	str.w	r2, [r0, #4]!
1001a8c2:	4299      	cmp	r1, r3
1001a8c4:	d8f9      	bhi.n	1001a8ba <__lshift+0xca>
1001a8c6:	e7ea      	b.n	1001a89e <__lshift+0xae>
1001a8c8:	4b03      	ldr	r3, [pc, #12]	@ (1001a8d8 <__lshift+0xe8>)
1001a8ca:	4804      	ldr	r0, [pc, #16]	@ (1001a8dc <__lshift+0xec>)
1001a8cc:	4662      	mov	r2, ip
1001a8ce:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
1001a8d2:	f002 f805 	bl	1001c8e0 <__assert_func>
1001a8d6:	bf00      	nop
1001a8d8:	1001ebf4 	.word	0x1001ebf4
1001a8dc:	1001ecb8 	.word	0x1001ecb8

1001a8e0 <__mcmp>:
1001a8e0:	690b      	ldr	r3, [r1, #16]
1001a8e2:	4684      	mov	ip, r0
1001a8e4:	6900      	ldr	r0, [r0, #16]
1001a8e6:	1ac0      	subs	r0, r0, r3
1001a8e8:	d115      	bne.n	1001a916 <__mcmp+0x36>
1001a8ea:	f10c 0c14 	add.w	ip, ip, #20
1001a8ee:	3114      	adds	r1, #20
1001a8f0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
1001a8f4:	b410      	push	{r4}
1001a8f6:	eb01 0383 	add.w	r3, r1, r3, lsl #2
1001a8fa:	e001      	b.n	1001a900 <__mcmp+0x20>
1001a8fc:	4594      	cmp	ip, r2
1001a8fe:	d208      	bcs.n	1001a912 <__mcmp+0x32>
1001a900:	f852 4d04 	ldr.w	r4, [r2, #-4]!
1001a904:	f853 1d04 	ldr.w	r1, [r3, #-4]!
1001a908:	428c      	cmp	r4, r1
1001a90a:	d0f7      	beq.n	1001a8fc <__mcmp+0x1c>
1001a90c:	d204      	bcs.n	1001a918 <__mcmp+0x38>
1001a90e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001a912:	bc10      	pop	{r4}
1001a914:	4770      	bx	lr
1001a916:	4770      	bx	lr
1001a918:	2001      	movs	r0, #1
1001a91a:	bc10      	pop	{r4}
1001a91c:	4770      	bx	lr
1001a91e:	bf00      	nop

1001a920 <__mdiff>:
1001a920:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001a924:	6913      	ldr	r3, [r2, #16]
1001a926:	690f      	ldr	r7, [r1, #16]
1001a928:	1aff      	subs	r7, r7, r3
1001a92a:	2f00      	cmp	r7, #0
1001a92c:	b083      	sub	sp, #12
1001a92e:	460d      	mov	r5, r1
1001a930:	4690      	mov	r8, r2
1001a932:	d115      	bne.n	1001a960 <__mdiff+0x40>
1001a934:	f101 0614 	add.w	r6, r1, #20
1001a938:	3214      	adds	r2, #20
1001a93a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
1001a93e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
1001a942:	e001      	b.n	1001a948 <__mdiff+0x28>
1001a944:	429e      	cmp	r6, r3
1001a946:	d276      	bcs.n	1001aa36 <__mdiff+0x116>
1001a948:	f853 4d04 	ldr.w	r4, [r3, #-4]!
1001a94c:	f852 1d04 	ldr.w	r1, [r2, #-4]!
1001a950:	428c      	cmp	r4, r1
1001a952:	d0f7      	beq.n	1001a944 <__mdiff+0x24>
1001a954:	d206      	bcs.n	1001a964 <__mdiff+0x44>
1001a956:	462b      	mov	r3, r5
1001a958:	2701      	movs	r7, #1
1001a95a:	4645      	mov	r5, r8
1001a95c:	4698      	mov	r8, r3
1001a95e:	e001      	b.n	1001a964 <__mdiff+0x44>
1001a960:	dbf9      	blt.n	1001a956 <__mdiff+0x36>
1001a962:	2700      	movs	r7, #0
1001a964:	6869      	ldr	r1, [r5, #4]
1001a966:	f7ff fcdb 	bl	1001a320 <_Balloc>
1001a96a:	4681      	mov	r9, r0
1001a96c:	2800      	cmp	r0, #0
1001a96e:	d076      	beq.n	1001aa5e <__mdiff+0x13e>
1001a970:	692e      	ldr	r6, [r5, #16]
1001a972:	60c7      	str	r7, [r0, #12]
1001a974:	f8d8 0010 	ldr.w	r0, [r8, #16]
1001a978:	f105 0b14 	add.w	fp, r5, #20
1001a97c:	f108 0e14 	add.w	lr, r8, #20
1001a980:	f109 0a14 	add.w	sl, r9, #20
1001a984:	f105 0110 	add.w	r1, r5, #16
1001a988:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
1001a98c:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
1001a990:	4657      	mov	r7, sl
1001a992:	f04f 0c00 	mov.w	ip, #0
1001a996:	f8cd b004 	str.w	fp, [sp, #4]
1001a99a:	f85e 4b04 	ldr.w	r4, [lr], #4
1001a99e:	f851 5f04 	ldr.w	r5, [r1, #4]!
1001a9a2:	fa1f fb84 	uxth.w	fp, r4
1001a9a6:	b2ab      	uxth	r3, r5
1001a9a8:	eba3 030b 	sub.w	r3, r3, fp
1001a9ac:	0c24      	lsrs	r4, r4, #16
1001a9ae:	4463      	add	r3, ip
1001a9b0:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
1001a9b4:	eb04 4423 	add.w	r4, r4, r3, asr #16
1001a9b8:	b29b      	uxth	r3, r3
1001a9ba:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001a9be:	4570      	cmp	r0, lr
1001a9c0:	f847 3b04 	str.w	r3, [r7], #4
1001a9c4:	ea4f 4c24 	mov.w	ip, r4, asr #16
1001a9c8:	d8e7      	bhi.n	1001a99a <__mdiff+0x7a>
1001a9ca:	eba0 0108 	sub.w	r1, r0, r8
1001a9ce:	3915      	subs	r1, #21
1001a9d0:	0889      	lsrs	r1, r1, #2
1001a9d2:	1c4c      	adds	r4, r1, #1
1001a9d4:	f8dd b004 	ldr.w	fp, [sp, #4]
1001a9d8:	f108 0815 	add.w	r8, r8, #21
1001a9dc:	00a4      	lsls	r4, r4, #2
1001a9de:	4540      	cmp	r0, r8
1001a9e0:	bf38      	it	cc
1001a9e2:	2404      	movcc	r4, #4
1001a9e4:	eb0b 0504 	add.w	r5, fp, r4
1001a9e8:	42aa      	cmp	r2, r5
1001a9ea:	4454      	add	r4, sl
1001a9ec:	d930      	bls.n	1001aa50 <__mdiff+0x130>
1001a9ee:	4627      	mov	r7, r4
1001a9f0:	4628      	mov	r0, r5
1001a9f2:	f850 3b04 	ldr.w	r3, [r0], #4
1001a9f6:	fa1c fe83 	uxtah	lr, ip, r3
1001a9fa:	0c19      	lsrs	r1, r3, #16
1001a9fc:	4463      	add	r3, ip
1001a9fe:	eb01 412e 	add.w	r1, r1, lr, asr #16
1001aa02:	b29b      	uxth	r3, r3
1001aa04:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001aa08:	4282      	cmp	r2, r0
1001aa0a:	f847 3b04 	str.w	r3, [r7], #4
1001aa0e:	ea4f 4c21 	mov.w	ip, r1, asr #16
1001aa12:	d8ee      	bhi.n	1001a9f2 <__mdiff+0xd2>
1001aa14:	3a01      	subs	r2, #1
1001aa16:	1b52      	subs	r2, r2, r5
1001aa18:	f022 0203 	bic.w	r2, r2, #3
1001aa1c:	4414      	add	r4, r2
1001aa1e:	b923      	cbnz	r3, 1001aa2a <__mdiff+0x10a>
1001aa20:	f854 3d04 	ldr.w	r3, [r4, #-4]!
1001aa24:	3e01      	subs	r6, #1
1001aa26:	2b00      	cmp	r3, #0
1001aa28:	d0fa      	beq.n	1001aa20 <__mdiff+0x100>
1001aa2a:	4648      	mov	r0, r9
1001aa2c:	f8c9 6010 	str.w	r6, [r9, #16]
1001aa30:	b003      	add	sp, #12
1001aa32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001aa36:	2100      	movs	r1, #0
1001aa38:	f7ff fc72 	bl	1001a320 <_Balloc>
1001aa3c:	4681      	mov	r9, r0
1001aa3e:	b1a8      	cbz	r0, 1001aa6c <__mdiff+0x14c>
1001aa40:	2201      	movs	r2, #1
1001aa42:	2300      	movs	r3, #0
1001aa44:	e9c0 2304 	strd	r2, r3, [r0, #16]
1001aa48:	4648      	mov	r0, r9
1001aa4a:	b003      	add	sp, #12
1001aa4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001aa50:	0089      	lsls	r1, r1, #2
1001aa52:	4540      	cmp	r0, r8
1001aa54:	bf38      	it	cc
1001aa56:	2100      	movcc	r1, #0
1001aa58:	eb0a 0401 	add.w	r4, sl, r1
1001aa5c:	e7df      	b.n	1001aa1e <__mdiff+0xfe>
1001aa5e:	4b07      	ldr	r3, [pc, #28]	@ (1001aa7c <__mdiff+0x15c>)
1001aa60:	4807      	ldr	r0, [pc, #28]	@ (1001aa80 <__mdiff+0x160>)
1001aa62:	464a      	mov	r2, r9
1001aa64:	f240 2145 	movw	r1, #581	@ 0x245
1001aa68:	f001 ff3a 	bl	1001c8e0 <__assert_func>
1001aa6c:	4b03      	ldr	r3, [pc, #12]	@ (1001aa7c <__mdiff+0x15c>)
1001aa6e:	4804      	ldr	r0, [pc, #16]	@ (1001aa80 <__mdiff+0x160>)
1001aa70:	464a      	mov	r2, r9
1001aa72:	f240 2137 	movw	r1, #567	@ 0x237
1001aa76:	f001 ff33 	bl	1001c8e0 <__assert_func>
1001aa7a:	bf00      	nop
1001aa7c:	1001ebf4 	.word	0x1001ebf4
1001aa80:	1001ecb8 	.word	0x1001ecb8

1001aa84 <__ulp>:
1001aa84:	4b11      	ldr	r3, [pc, #68]	@ (1001aacc <__ulp+0x48>)
1001aa86:	400b      	ands	r3, r1
1001aa88:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
1001aa8c:	2b00      	cmp	r3, #0
1001aa8e:	dd03      	ble.n	1001aa98 <__ulp+0x14>
1001aa90:	2200      	movs	r2, #0
1001aa92:	4619      	mov	r1, r3
1001aa94:	4610      	mov	r0, r2
1001aa96:	4770      	bx	lr
1001aa98:	425b      	negs	r3, r3
1001aa9a:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
1001aa9e:	ea4f 5223 	mov.w	r2, r3, asr #20
1001aaa2:	da06      	bge.n	1001aab2 <__ulp+0x2e>
1001aaa4:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
1001aaa8:	4113      	asrs	r3, r2
1001aaaa:	2200      	movs	r2, #0
1001aaac:	4619      	mov	r1, r3
1001aaae:	4610      	mov	r0, r2
1001aab0:	4770      	bx	lr
1001aab2:	f1a2 0314 	sub.w	r3, r2, #20
1001aab6:	2b1e      	cmp	r3, #30
1001aab8:	bfda      	itte	le
1001aaba:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
1001aabe:	40da      	lsrle	r2, r3
1001aac0:	2201      	movgt	r2, #1
1001aac2:	2300      	movs	r3, #0
1001aac4:	4619      	mov	r1, r3
1001aac6:	4610      	mov	r0, r2
1001aac8:	4770      	bx	lr
1001aaca:	bf00      	nop
1001aacc:	7ff00000 	.word	0x7ff00000

1001aad0 <__b2d>:
1001aad0:	6902      	ldr	r2, [r0, #16]
1001aad2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001aad6:	f100 0714 	add.w	r7, r0, #20
1001aada:	eb07 0282 	add.w	r2, r7, r2, lsl #2
1001aade:	f1a2 0804 	sub.w	r8, r2, #4
1001aae2:	f852 6c04 	ldr.w	r6, [r2, #-4]
1001aae6:	4630      	mov	r0, r6
1001aae8:	f7ff fcf2 	bl	1001a4d0 <__hi0bits>
1001aaec:	f1c0 0320 	rsb	r3, r0, #32
1001aaf0:	280a      	cmp	r0, #10
1001aaf2:	600b      	str	r3, [r1, #0]
1001aaf4:	dd33      	ble.n	1001ab5e <__b2d+0x8e>
1001aaf6:	4547      	cmp	r7, r8
1001aaf8:	f1a0 010b 	sub.w	r1, r0, #11
1001aafc:	d219      	bcs.n	1001ab32 <__b2d+0x62>
1001aafe:	f852 3c08 	ldr.w	r3, [r2, #-8]
1001ab02:	b321      	cbz	r1, 1001ab4e <__b2d+0x7e>
1001ab04:	f1c1 0020 	rsb	r0, r1, #32
1001ab08:	408e      	lsls	r6, r1
1001ab0a:	fa23 f400 	lsr.w	r4, r3, r0
1001ab0e:	4326      	orrs	r6, r4
1001ab10:	408b      	lsls	r3, r1
1001ab12:	f1a2 0108 	sub.w	r1, r2, #8
1001ab16:	f046 557f 	orr.w	r5, r6, #1069547520	@ 0x3fc00000
1001ab1a:	428f      	cmp	r7, r1
1001ab1c:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001ab20:	d219      	bcs.n	1001ab56 <__b2d+0x86>
1001ab22:	f852 2c0c 	ldr.w	r2, [r2, #-12]
1001ab26:	40c2      	lsrs	r2, r0
1001ab28:	4313      	orrs	r3, r2
1001ab2a:	4618      	mov	r0, r3
1001ab2c:	4629      	mov	r1, r5
1001ab2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001ab32:	280b      	cmp	r0, #11
1001ab34:	d00a      	beq.n	1001ab4c <__b2d+0x7c>
1001ab36:	fa06 f101 	lsl.w	r1, r6, r1
1001ab3a:	f041 557f 	orr.w	r5, r1, #1069547520	@ 0x3fc00000
1001ab3e:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001ab42:	2300      	movs	r3, #0
1001ab44:	4618      	mov	r0, r3
1001ab46:	4629      	mov	r1, r5
1001ab48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001ab4c:	2300      	movs	r3, #0
1001ab4e:	f046 557f 	orr.w	r5, r6, #1069547520	@ 0x3fc00000
1001ab52:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001ab56:	4618      	mov	r0, r3
1001ab58:	4629      	mov	r1, r5
1001ab5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001ab5e:	4547      	cmp	r7, r8
1001ab60:	bf38      	it	cc
1001ab62:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
1001ab66:	f1c0 030b 	rsb	r3, r0, #11
1001ab6a:	fa26 f103 	lsr.w	r1, r6, r3
1001ab6e:	bf38      	it	cc
1001ab70:	40da      	lsrcc	r2, r3
1001ab72:	f100 0315 	add.w	r3, r0, #21
1001ab76:	f041 557f 	orr.w	r5, r1, #1069547520	@ 0x3fc00000
1001ab7a:	bf28      	it	cs
1001ab7c:	2200      	movcs	r2, #0
1001ab7e:	fa06 f303 	lsl.w	r3, r6, r3
1001ab82:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001ab86:	4313      	orrs	r3, r2
1001ab88:	4618      	mov	r0, r3
1001ab8a:	4629      	mov	r1, r5
1001ab8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1001ab90 <__d2b>:
1001ab90:	b5f0      	push	{r4, r5, r6, r7, lr}
1001ab92:	2101      	movs	r1, #1
1001ab94:	b083      	sub	sp, #12
1001ab96:	4616      	mov	r6, r2
1001ab98:	461f      	mov	r7, r3
1001ab9a:	f7ff fbc1 	bl	1001a320 <_Balloc>
1001ab9e:	4605      	mov	r5, r0
1001aba0:	2800      	cmp	r0, #0
1001aba2:	d047      	beq.n	1001ac34 <__d2b+0xa4>
1001aba4:	f3c7 540a 	ubfx	r4, r7, #20, #11
1001aba8:	f3c7 0313 	ubfx	r3, r7, #0, #20
1001abac:	b10c      	cbz	r4, 1001abb2 <__d2b+0x22>
1001abae:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001abb2:	2e00      	cmp	r6, #0
1001abb4:	9301      	str	r3, [sp, #4]
1001abb6:	d114      	bne.n	1001abe2 <__d2b+0x52>
1001abb8:	a801      	add	r0, sp, #4
1001abba:	f7ff fcab 	bl	1001a514 <__lo0bits>
1001abbe:	9b01      	ldr	r3, [sp, #4]
1001abc0:	616b      	str	r3, [r5, #20]
1001abc2:	2201      	movs	r2, #1
1001abc4:	3020      	adds	r0, #32
1001abc6:	612a      	str	r2, [r5, #16]
1001abc8:	b314      	cbz	r4, 1001ac10 <__d2b+0x80>
1001abca:	9b08      	ldr	r3, [sp, #32]
1001abcc:	f2a4 4433 	subw	r4, r4, #1075	@ 0x433
1001abd0:	4404      	add	r4, r0
1001abd2:	601c      	str	r4, [r3, #0]
1001abd4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001abd6:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
1001abda:	6018      	str	r0, [r3, #0]
1001abdc:	4628      	mov	r0, r5
1001abde:	b003      	add	sp, #12
1001abe0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001abe2:	4668      	mov	r0, sp
1001abe4:	9600      	str	r6, [sp, #0]
1001abe6:	f7ff fc95 	bl	1001a514 <__lo0bits>
1001abea:	9b01      	ldr	r3, [sp, #4]
1001abec:	b300      	cbz	r0, 1001ac30 <__d2b+0xa0>
1001abee:	9900      	ldr	r1, [sp, #0]
1001abf0:	f1c0 0220 	rsb	r2, r0, #32
1001abf4:	fa03 f202 	lsl.w	r2, r3, r2
1001abf8:	40c3      	lsrs	r3, r0
1001abfa:	9301      	str	r3, [sp, #4]
1001abfc:	430a      	orrs	r2, r1
1001abfe:	2b00      	cmp	r3, #0
1001ac00:	e9c5 2305 	strd	r2, r3, [r5, #20]
1001ac04:	bf0c      	ite	eq
1001ac06:	2201      	moveq	r2, #1
1001ac08:	2202      	movne	r2, #2
1001ac0a:	612a      	str	r2, [r5, #16]
1001ac0c:	2c00      	cmp	r4, #0
1001ac0e:	d1dc      	bne.n	1001abca <__d2b+0x3a>
1001ac10:	eb05 0182 	add.w	r1, r5, r2, lsl #2
1001ac14:	f2a0 4332 	subw	r3, r0, #1074	@ 0x432
1001ac18:	6908      	ldr	r0, [r1, #16]
1001ac1a:	9908      	ldr	r1, [sp, #32]
1001ac1c:	600b      	str	r3, [r1, #0]
1001ac1e:	f7ff fc57 	bl	1001a4d0 <__hi0bits>
1001ac22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001ac24:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
1001ac28:	6018      	str	r0, [r3, #0]
1001ac2a:	4628      	mov	r0, r5
1001ac2c:	b003      	add	sp, #12
1001ac2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001ac30:	9a00      	ldr	r2, [sp, #0]
1001ac32:	e7e4      	b.n	1001abfe <__d2b+0x6e>
1001ac34:	4b03      	ldr	r3, [pc, #12]	@ (1001ac44 <__d2b+0xb4>)
1001ac36:	4804      	ldr	r0, [pc, #16]	@ (1001ac48 <__d2b+0xb8>)
1001ac38:	462a      	mov	r2, r5
1001ac3a:	f240 310f 	movw	r1, #783	@ 0x30f
1001ac3e:	f001 fe4f 	bl	1001c8e0 <__assert_func>
1001ac42:	bf00      	nop
1001ac44:	1001ebf4 	.word	0x1001ebf4
1001ac48:	1001ecb8 	.word	0x1001ecb8

1001ac4c <__ratio>:
1001ac4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1001ac50:	b083      	sub	sp, #12
1001ac52:	460e      	mov	r6, r1
1001ac54:	4669      	mov	r1, sp
1001ac56:	4607      	mov	r7, r0
1001ac58:	f7ff ff3a 	bl	1001aad0 <__b2d>
1001ac5c:	4604      	mov	r4, r0
1001ac5e:	460d      	mov	r5, r1
1001ac60:	4630      	mov	r0, r6
1001ac62:	a901      	add	r1, sp, #4
1001ac64:	f7ff ff34 	bl	1001aad0 <__b2d>
1001ac68:	6933      	ldr	r3, [r6, #16]
1001ac6a:	693a      	ldr	r2, [r7, #16]
1001ac6c:	1ad2      	subs	r2, r2, r3
1001ac6e:	e9dd 3600 	ldrd	r3, r6, [sp]
1001ac72:	1b9b      	subs	r3, r3, r6
1001ac74:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1001ac78:	2b00      	cmp	r3, #0
1001ac7a:	dd0b      	ble.n	1001ac94 <__ratio+0x48>
1001ac7c:	eb05 5903 	add.w	r9, r5, r3, lsl #20
1001ac80:	464d      	mov	r5, r9
1001ac82:	4602      	mov	r2, r0
1001ac84:	460b      	mov	r3, r1
1001ac86:	4620      	mov	r0, r4
1001ac88:	4629      	mov	r1, r5
1001ac8a:	f003 f853 	bl	1001dd34 <__aeabi_ddiv>
1001ac8e:	b003      	add	sp, #12
1001ac90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1001ac94:	ebc3 3303 	rsb	r3, r3, r3, lsl #12
1001ac98:	eb01 5703 	add.w	r7, r1, r3, lsl #20
1001ac9c:	4639      	mov	r1, r7
1001ac9e:	e7f0      	b.n	1001ac82 <__ratio+0x36>

1001aca0 <__copybits>:
1001aca0:	3901      	subs	r1, #1
1001aca2:	1149      	asrs	r1, r1, #5
1001aca4:	f101 0c01 	add.w	ip, r1, #1
1001aca8:	6911      	ldr	r1, [r2, #16]
1001acaa:	f102 0314 	add.w	r3, r2, #20
1001acae:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001acb2:	428b      	cmp	r3, r1
1001acb4:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
1001acb8:	d216      	bcs.n	1001ace8 <__copybits+0x48>
1001acba:	b510      	push	{r4, lr}
1001acbc:	f1a0 0e04 	sub.w	lr, r0, #4
1001acc0:	f853 4b04 	ldr.w	r4, [r3], #4
1001acc4:	f84e 4f04 	str.w	r4, [lr, #4]!
1001acc8:	4299      	cmp	r1, r3
1001acca:	d8f9      	bhi.n	1001acc0 <__copybits+0x20>
1001accc:	1a8b      	subs	r3, r1, r2
1001acce:	3b15      	subs	r3, #21
1001acd0:	f023 0303 	bic.w	r3, r3, #3
1001acd4:	3304      	adds	r3, #4
1001acd6:	4418      	add	r0, r3
1001acd8:	4584      	cmp	ip, r0
1001acda:	d904      	bls.n	1001ace6 <__copybits+0x46>
1001acdc:	2300      	movs	r3, #0
1001acde:	f840 3b04 	str.w	r3, [r0], #4
1001ace2:	4584      	cmp	ip, r0
1001ace4:	d8fb      	bhi.n	1001acde <__copybits+0x3e>
1001ace6:	bd10      	pop	{r4, pc}
1001ace8:	4584      	cmp	ip, r0
1001acea:	d905      	bls.n	1001acf8 <__copybits+0x58>
1001acec:	2300      	movs	r3, #0
1001acee:	f840 3b04 	str.w	r3, [r0], #4
1001acf2:	4584      	cmp	ip, r0
1001acf4:	d8fb      	bhi.n	1001acee <__copybits+0x4e>
1001acf6:	4770      	bx	lr
1001acf8:	4770      	bx	lr
1001acfa:	bf00      	nop

1001acfc <__any_on>:
1001acfc:	6903      	ldr	r3, [r0, #16]
1001acfe:	114a      	asrs	r2, r1, #5
1001ad00:	4293      	cmp	r3, r2
1001ad02:	f100 0014 	add.w	r0, r0, #20
1001ad06:	da09      	bge.n	1001ad1c <__any_on+0x20>
1001ad08:	eb00 0383 	add.w	r3, r0, r3, lsl #2
1001ad0c:	e002      	b.n	1001ad14 <__any_on+0x18>
1001ad0e:	f853 2d04 	ldr.w	r2, [r3, #-4]!
1001ad12:	b9a2      	cbnz	r2, 1001ad3e <__any_on+0x42>
1001ad14:	4283      	cmp	r3, r0
1001ad16:	d8fa      	bhi.n	1001ad0e <__any_on+0x12>
1001ad18:	2000      	movs	r0, #0
1001ad1a:	4770      	bx	lr
1001ad1c:	eb00 0382 	add.w	r3, r0, r2, lsl #2
1001ad20:	ddf8      	ble.n	1001ad14 <__any_on+0x18>
1001ad22:	f011 011f 	ands.w	r1, r1, #31
1001ad26:	d0f5      	beq.n	1001ad14 <__any_on+0x18>
1001ad28:	b410      	push	{r4}
1001ad2a:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
1001ad2e:	fa24 f201 	lsr.w	r2, r4, r1
1001ad32:	408a      	lsls	r2, r1
1001ad34:	4294      	cmp	r4, r2
1001ad36:	d008      	beq.n	1001ad4a <__any_on+0x4e>
1001ad38:	2001      	movs	r0, #1
1001ad3a:	bc10      	pop	{r4}
1001ad3c:	4770      	bx	lr
1001ad3e:	2001      	movs	r0, #1
1001ad40:	4770      	bx	lr
1001ad42:	f853 2d04 	ldr.w	r2, [r3, #-4]!
1001ad46:	2a00      	cmp	r2, #0
1001ad48:	d1f6      	bne.n	1001ad38 <__any_on+0x3c>
1001ad4a:	4283      	cmp	r3, r0
1001ad4c:	d8f9      	bhi.n	1001ad42 <__any_on+0x46>
1001ad4e:	2000      	movs	r0, #0
1001ad50:	bc10      	pop	{r4}
1001ad52:	4770      	bx	lr

1001ad54 <lflush>:
1001ad54:	898b      	ldrh	r3, [r1, #12]
1001ad56:	f003 0309 	and.w	r3, r3, #9
1001ad5a:	2b09      	cmp	r3, #9
1001ad5c:	d001      	beq.n	1001ad62 <lflush+0xe>
1001ad5e:	2000      	movs	r0, #0
1001ad60:	4770      	bx	lr
1001ad62:	4b02      	ldr	r3, [pc, #8]	@ (1001ad6c <lflush+0x18>)
1001ad64:	6818      	ldr	r0, [r3, #0]
1001ad66:	f7f9 bd63 	b.w	10014830 <_fflush_r>
1001ad6a:	bf00      	nop
1001ad6c:	20000598 	.word	0x20000598

1001ad70 <__srefill_r>:
1001ad70:	b570      	push	{r4, r5, r6, lr}
1001ad72:	460c      	mov	r4, r1
1001ad74:	4605      	mov	r5, r0
1001ad76:	b110      	cbz	r0, 1001ad7e <__srefill_r+0xe>
1001ad78:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001ad7a:	2b00      	cmp	r3, #0
1001ad7c:	d05f      	beq.n	1001ae3e <__srefill_r+0xce>
1001ad7e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001ad82:	049a      	lsls	r2, r3, #18
1001ad84:	d406      	bmi.n	1001ad94 <__srefill_r+0x24>
1001ad86:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001ad88:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001ad8c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001ad90:	81a3      	strh	r3, [r4, #12]
1001ad92:	6662      	str	r2, [r4, #100]	@ 0x64
1001ad94:	2200      	movs	r2, #0
1001ad96:	069e      	lsls	r6, r3, #26
1001ad98:	6062      	str	r2, [r4, #4]
1001ad9a:	d45d      	bmi.n	1001ae58 <__srefill_r+0xe8>
1001ad9c:	0758      	lsls	r0, r3, #29
1001ad9e:	d419      	bmi.n	1001add4 <__srefill_r+0x64>
1001ada0:	06d9      	lsls	r1, r3, #27
1001ada2:	d55c      	bpl.n	1001ae5e <__srefill_r+0xee>
1001ada4:	071a      	lsls	r2, r3, #28
1001ada6:	d439      	bmi.n	1001ae1c <__srefill_r+0xac>
1001ada8:	f043 0304 	orr.w	r3, r3, #4
1001adac:	81a3      	strh	r3, [r4, #12]
1001adae:	6923      	ldr	r3, [r4, #16]
1001adb0:	2b00      	cmp	r3, #0
1001adb2:	d03f      	beq.n	1001ae34 <__srefill_r+0xc4>
1001adb4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
1001adb8:	07b3      	lsls	r3, r6, #30
1001adba:	d11e      	bne.n	1001adfa <__srefill_r+0x8a>
1001adbc:	6922      	ldr	r2, [r4, #16]
1001adbe:	6a26      	ldr	r6, [r4, #32]
1001adc0:	6963      	ldr	r3, [r4, #20]
1001adc2:	69e1      	ldr	r1, [r4, #28]
1001adc4:	6022      	str	r2, [r4, #0]
1001adc6:	4628      	mov	r0, r5
1001adc8:	47b0      	blx	r6
1001adca:	2800      	cmp	r0, #0
1001adcc:	6060      	str	r0, [r4, #4]
1001adce:	dd39      	ble.n	1001ae44 <__srefill_r+0xd4>
1001add0:	2000      	movs	r0, #0
1001add2:	bd70      	pop	{r4, r5, r6, pc}
1001add4:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1001add6:	2900      	cmp	r1, #0
1001add8:	d0e9      	beq.n	1001adae <__srefill_r+0x3e>
1001adda:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001adde:	4299      	cmp	r1, r3
1001ade0:	d002      	beq.n	1001ade8 <__srefill_r+0x78>
1001ade2:	4628      	mov	r0, r5
1001ade4:	f7fb ff0c 	bl	10016c00 <_free_r>
1001ade8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
1001adea:	6063      	str	r3, [r4, #4]
1001adec:	2200      	movs	r2, #0
1001adee:	6322      	str	r2, [r4, #48]	@ 0x30
1001adf0:	2b00      	cmp	r3, #0
1001adf2:	d0dc      	beq.n	1001adae <__srefill_r+0x3e>
1001adf4:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
1001adf6:	6023      	str	r3, [r4, #0]
1001adf8:	e7ea      	b.n	1001add0 <__srefill_r+0x60>
1001adfa:	2301      	movs	r3, #1
1001adfc:	81a3      	strh	r3, [r4, #12]
1001adfe:	4a1b      	ldr	r2, [pc, #108]	@ (1001ae6c <__srefill_r+0xfc>)
1001ae00:	491b      	ldr	r1, [pc, #108]	@ (1001ae70 <__srefill_r+0x100>)
1001ae02:	481c      	ldr	r0, [pc, #112]	@ (1001ae74 <__srefill_r+0x104>)
1001ae04:	f7fa f8b2 	bl	10014f6c <_fwalk_sglue>
1001ae08:	f006 0309 	and.w	r3, r6, #9
1001ae0c:	2b09      	cmp	r3, #9
1001ae0e:	81a6      	strh	r6, [r4, #12]
1001ae10:	d1d4      	bne.n	1001adbc <__srefill_r+0x4c>
1001ae12:	4621      	mov	r1, r4
1001ae14:	4628      	mov	r0, r5
1001ae16:	f7f9 fc77 	bl	10014708 <__sflush_r>
1001ae1a:	e7cf      	b.n	1001adbc <__srefill_r+0x4c>
1001ae1c:	4621      	mov	r1, r4
1001ae1e:	4628      	mov	r0, r5
1001ae20:	f7f9 fd06 	bl	10014830 <_fflush_r>
1001ae24:	b9c0      	cbnz	r0, 1001ae58 <__srefill_r+0xe8>
1001ae26:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001ae2a:	60a0      	str	r0, [r4, #8]
1001ae2c:	f023 0308 	bic.w	r3, r3, #8
1001ae30:	61a0      	str	r0, [r4, #24]
1001ae32:	e7b9      	b.n	1001ada8 <__srefill_r+0x38>
1001ae34:	4621      	mov	r1, r4
1001ae36:	4628      	mov	r0, r5
1001ae38:	f7fd fdc2 	bl	100189c0 <__smakebuf_r>
1001ae3c:	e7ba      	b.n	1001adb4 <__srefill_r+0x44>
1001ae3e:	f7f9 feef 	bl	10014c20 <__sinit>
1001ae42:	e79c      	b.n	1001ad7e <__srefill_r+0xe>
1001ae44:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001ae48:	bf17      	itett	ne
1001ae4a:	2200      	movne	r2, #0
1001ae4c:	f043 0320 	orreq.w	r3, r3, #32
1001ae50:	f043 0340 	orrne.w	r3, r3, #64	@ 0x40
1001ae54:	6062      	strne	r2, [r4, #4]
1001ae56:	81a3      	strh	r3, [r4, #12]
1001ae58:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001ae5c:	bd70      	pop	{r4, r5, r6, pc}
1001ae5e:	2209      	movs	r2, #9
1001ae60:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001ae64:	602a      	str	r2, [r5, #0]
1001ae66:	81a3      	strh	r3, [r4, #12]
1001ae68:	e7f6      	b.n	1001ae58 <__srefill_r+0xe8>
1001ae6a:	bf00      	nop
1001ae6c:	20000420 	.word	0x20000420
1001ae70:	1001ad55 	.word	0x1001ad55
1001ae74:	200005a0 	.word	0x200005a0

1001ae78 <__sccl>:
1001ae78:	b570      	push	{r4, r5, r6, lr}
1001ae7a:	780c      	ldrb	r4, [r1, #0]
1001ae7c:	2c5e      	cmp	r4, #94	@ 0x5e
1001ae7e:	4686      	mov	lr, r0
1001ae80:	d026      	beq.n	1001aed0 <__sccl+0x58>
1001ae82:	2300      	movs	r3, #0
1001ae84:	1c48      	adds	r0, r1, #1
1001ae86:	469c      	mov	ip, r3
1001ae88:	2200      	movs	r2, #0
1001ae8a:	f363 0207 	bfi	r2, r3, #0, #8
1001ae8e:	f363 220f 	bfi	r2, r3, #8, #8
1001ae92:	f363 4217 	bfi	r2, r3, #16, #8
1001ae96:	f363 621f 	bfi	r2, r3, #24, #8
1001ae9a:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
1001ae9e:	4673      	mov	r3, lr
1001aea0:	f843 2b04 	str.w	r2, [r3], #4
1001aea4:	428b      	cmp	r3, r1
1001aea6:	d1fb      	bne.n	1001aea0 <__sccl+0x28>
1001aea8:	b184      	cbz	r4, 1001aecc <__sccl+0x54>
1001aeaa:	f08c 0101 	eor.w	r1, ip, #1
1001aeae:	f80e 1004 	strb.w	r1, [lr, r4]
1001aeb2:	1c45      	adds	r5, r0, #1
1001aeb4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
1001aeb8:	2b2d      	cmp	r3, #45	@ 0x2d
1001aeba:	d00e      	beq.n	1001aeda <__sccl+0x62>
1001aebc:	2b5d      	cmp	r3, #93	@ 0x5d
1001aebe:	d003      	beq.n	1001aec8 <__sccl+0x50>
1001aec0:	b11b      	cbz	r3, 1001aeca <__sccl+0x52>
1001aec2:	461c      	mov	r4, r3
1001aec4:	4628      	mov	r0, r5
1001aec6:	e7f2      	b.n	1001aeae <__sccl+0x36>
1001aec8:	4628      	mov	r0, r5
1001aeca:	bd70      	pop	{r4, r5, r6, pc}
1001aecc:	3801      	subs	r0, #1
1001aece:	bd70      	pop	{r4, r5, r6, pc}
1001aed0:	2301      	movs	r3, #1
1001aed2:	784c      	ldrb	r4, [r1, #1]
1001aed4:	1c88      	adds	r0, r1, #2
1001aed6:	469c      	mov	ip, r3
1001aed8:	e7d6      	b.n	1001ae88 <__sccl+0x10>
1001aeda:	f890 c001 	ldrb.w	ip, [r0, #1]
1001aede:	f1bc 0f5d 	cmp.w	ip, #93	@ 0x5d
1001aee2:	d0ee      	beq.n	1001aec2 <__sccl+0x4a>
1001aee4:	4564      	cmp	r4, ip
1001aee6:	dcec      	bgt.n	1001aec2 <__sccl+0x4a>
1001aee8:	1c66      	adds	r6, r4, #1
1001aeea:	3002      	adds	r0, #2
1001aeec:	eb0e 0206 	add.w	r2, lr, r6
1001aef0:	f802 1b01 	strb.w	r1, [r2], #1
1001aef4:	eba2 030e 	sub.w	r3, r2, lr
1001aef8:	3b01      	subs	r3, #1
1001aefa:	459c      	cmp	ip, r3
1001aefc:	dcf8      	bgt.n	1001aef0 <__sccl+0x78>
1001aefe:	ebac 0304 	sub.w	r3, ip, r4
1001af02:	3b01      	subs	r3, #1
1001af04:	4564      	cmp	r4, ip
1001af06:	bfa8      	it	ge
1001af08:	2300      	movge	r3, #0
1001af0a:	3502      	adds	r5, #2
1001af0c:	18f4      	adds	r4, r6, r3
1001af0e:	e7d1      	b.n	1001aeb4 <__sccl+0x3c>

1001af10 <_strtod_l>:
1001af10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001af14:	b09f      	sub	sp, #124	@ 0x7c
1001af16:	460e      	mov	r6, r1
1001af18:	2100      	movs	r1, #0
1001af1a:	9207      	str	r2, [sp, #28]
1001af1c:	911a      	str	r1, [sp, #104]	@ 0x68
1001af1e:	2200      	movs	r2, #0
1001af20:	2100      	movs	r1, #0
1001af22:	e9cd 1204 	strd	r1, r2, [sp, #16]
1001af26:	4683      	mov	fp, r0
1001af28:	4631      	mov	r1, r6
1001af2a:	9119      	str	r1, [sp, #100]	@ 0x64
1001af2c:	4688      	mov	r8, r1
1001af2e:	f811 2b01 	ldrb.w	r2, [r1], #1
1001af32:	2a2d      	cmp	r2, #45	@ 0x2d
1001af34:	d85e      	bhi.n	1001aff4 <_strtod_l+0xe4>
1001af36:	a001      	add	r0, pc, #4	@ (adr r0, 1001af3c <_strtod_l+0x2c>)
1001af38:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
1001af3c:	1001b10d 	.word	0x1001b10d
1001af40:	1001aff5 	.word	0x1001aff5
1001af44:	1001aff5 	.word	0x1001aff5
1001af48:	1001aff5 	.word	0x1001aff5
1001af4c:	1001aff5 	.word	0x1001aff5
1001af50:	1001aff5 	.word	0x1001aff5
1001af54:	1001aff5 	.word	0x1001aff5
1001af58:	1001aff5 	.word	0x1001aff5
1001af5c:	1001aff5 	.word	0x1001aff5
1001af60:	1001af2b 	.word	0x1001af2b
1001af64:	1001af2b 	.word	0x1001af2b
1001af68:	1001af2b 	.word	0x1001af2b
1001af6c:	1001af2b 	.word	0x1001af2b
1001af70:	1001af2b 	.word	0x1001af2b
1001af74:	1001aff5 	.word	0x1001aff5
1001af78:	1001aff5 	.word	0x1001aff5
1001af7c:	1001aff5 	.word	0x1001aff5
1001af80:	1001aff5 	.word	0x1001aff5
1001af84:	1001aff5 	.word	0x1001aff5
1001af88:	1001aff5 	.word	0x1001aff5
1001af8c:	1001aff5 	.word	0x1001aff5
1001af90:	1001aff5 	.word	0x1001aff5
1001af94:	1001aff5 	.word	0x1001aff5
1001af98:	1001aff5 	.word	0x1001aff5
1001af9c:	1001aff5 	.word	0x1001aff5
1001afa0:	1001aff5 	.word	0x1001aff5
1001afa4:	1001aff5 	.word	0x1001aff5
1001afa8:	1001aff5 	.word	0x1001aff5
1001afac:	1001aff5 	.word	0x1001aff5
1001afb0:	1001aff5 	.word	0x1001aff5
1001afb4:	1001aff5 	.word	0x1001aff5
1001afb8:	1001aff5 	.word	0x1001aff5
1001afbc:	1001af2b 	.word	0x1001af2b
1001afc0:	1001aff5 	.word	0x1001aff5
1001afc4:	1001aff5 	.word	0x1001aff5
1001afc8:	1001aff5 	.word	0x1001aff5
1001afcc:	1001aff5 	.word	0x1001aff5
1001afd0:	1001aff5 	.word	0x1001aff5
1001afd4:	1001aff5 	.word	0x1001aff5
1001afd8:	1001aff5 	.word	0x1001aff5
1001afdc:	1001aff5 	.word	0x1001aff5
1001afe0:	1001aff5 	.word	0x1001aff5
1001afe4:	1001aff5 	.word	0x1001aff5
1001afe8:	1001b70b 	.word	0x1001b70b
1001afec:	1001aff5 	.word	0x1001aff5
1001aff0:	1001b723 	.word	0x1001b723
1001aff4:	2100      	movs	r1, #0
1001aff6:	9108      	str	r1, [sp, #32]
1001aff8:	2a30      	cmp	r2, #48	@ 0x30
1001affa:	f000 8093 	beq.w	1001b124 <_strtod_l+0x214>
1001affe:	2300      	movs	r3, #0
1001b000:	9309      	str	r3, [sp, #36]	@ 0x24
1001b002:	2a2f      	cmp	r2, #47	@ 0x2f
1001b004:	4617      	mov	r7, r2
1001b006:	f240 84ee 	bls.w	1001b9e6 <_strtod_l+0xad6>
1001b00a:	f04f 0900 	mov.w	r9, #0
1001b00e:	4640      	mov	r0, r8
1001b010:	464d      	mov	r5, r9
1001b012:	464c      	mov	r4, r9
1001b014:	e013      	b.n	1001b03e <_strtod_l+0x12e>
1001b016:	3001      	adds	r0, #1
1001b018:	2c08      	cmp	r4, #8
1001b01a:	9019      	str	r0, [sp, #100]	@ 0x64
1001b01c:	bfc8      	it	gt
1001b01e:	eb09 0989 	addgt.w	r9, r9, r9, lsl #2
1001b022:	7807      	ldrb	r7, [r0, #0]
1001b024:	bfc6      	itte	gt
1001b026:	eb02 0249 	addgt.w	r2, r2, r9, lsl #1
1001b02a:	f1a2 0930 	subgt.w	r9, r2, #48	@ 0x30
1001b02e:	f1a3 0530 	suble.w	r5, r3, #48	@ 0x30
1001b032:	2f2f      	cmp	r7, #47	@ 0x2f
1001b034:	f104 0401 	add.w	r4, r4, #1
1001b038:	463a      	mov	r2, r7
1001b03a:	f340 80b7 	ble.w	1001b1ac <_strtod_l+0x29c>
1001b03e:	eb05 0385 	add.w	r3, r5, r5, lsl #2
1001b042:	2f39      	cmp	r7, #57	@ 0x39
1001b044:	eb02 0343 	add.w	r3, r2, r3, lsl #1
1001b048:	dde5      	ble.n	1001b016 <_strtod_l+0x106>
1001b04a:	4974      	ldr	r1, [pc, #464]	@ (1001b21c <_strtod_l+0x30c>)
1001b04c:	2201      	movs	r2, #1
1001b04e:	f001 f905 	bl	1001c25c <strncmp>
1001b052:	2800      	cmp	r0, #0
1001b054:	d17b      	bne.n	1001b14e <_strtod_l+0x23e>
1001b056:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001b058:	4613      	mov	r3, r2
1001b05a:	3201      	adds	r2, #1
1001b05c:	9219      	str	r2, [sp, #100]	@ 0x64
1001b05e:	785f      	ldrb	r7, [r3, #1]
1001b060:	2c00      	cmp	r4, #0
1001b062:	f040 8587 	bne.w	1001bb74 <_strtod_l+0xc64>
1001b066:	2f30      	cmp	r7, #48	@ 0x30
1001b068:	f040 851f 	bne.w	1001baaa <_strtod_l+0xb9a>
1001b06c:	4613      	mov	r3, r2
1001b06e:	4618      	mov	r0, r3
1001b070:	3301      	adds	r3, #1
1001b072:	9319      	str	r3, [sp, #100]	@ 0x64
1001b074:	781f      	ldrb	r7, [r3, #0]
1001b076:	2f30      	cmp	r7, #48	@ 0x30
1001b078:	d0f9      	beq.n	1001b06e <_strtod_l+0x15e>
1001b07a:	f1c2 0201 	rsb	r2, r2, #1
1001b07e:	4410      	add	r0, r2
1001b080:	f1a7 0331 	sub.w	r3, r7, #49	@ 0x31
1001b084:	2b08      	cmp	r3, #8
1001b086:	d834      	bhi.n	1001b0f2 <_strtod_l+0x1e2>
1001b088:	f8dd 8064 	ldr.w	r8, [sp, #100]	@ 0x64
1001b08c:	1c43      	adds	r3, r0, #1
1001b08e:	f1a7 0e30 	sub.w	lr, r7, #48	@ 0x30
1001b092:	930e      	str	r3, [sp, #56]	@ 0x38
1001b094:	2401      	movs	r4, #1
1001b096:	4647      	mov	r7, r8
1001b098:	f04f 0a00 	mov.w	sl, #0
1001b09c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
1001b0a0:	eb0e 0545 	add.w	r5, lr, r5, lsl #1
1001b0a4:	2000      	movs	r0, #0
1001b0a6:	1c7b      	adds	r3, r7, #1
1001b0a8:	9319      	str	r3, [sp, #100]	@ 0x64
1001b0aa:	787f      	ldrb	r7, [r7, #1]
1001b0ac:	f1a7 0230 	sub.w	r2, r7, #48	@ 0x30
1001b0b0:	2a09      	cmp	r2, #9
1001b0b2:	f200 8322 	bhi.w	1001b6fa <_strtod_l+0x7ea>
1001b0b6:	9f19      	ldr	r7, [sp, #100]	@ 0x64
1001b0b8:	3001      	adds	r0, #1
1001b0ba:	4696      	mov	lr, r2
1001b0bc:	2a00      	cmp	r2, #0
1001b0be:	d0f2      	beq.n	1001b0a6 <_strtod_l+0x196>
1001b0c0:	2801      	cmp	r0, #1
1001b0c2:	f000 86e5 	beq.w	1001be90 <_strtod_l+0xf80>
1001b0c6:	eb00 0c04 	add.w	ip, r0, r4
1001b0ca:	f10c 31ff 	add.w	r1, ip, #4294967295	@ 0xffffffff
1001b0ce:	e003      	b.n	1001b0d8 <_strtod_l+0x1c8>
1001b0d0:	005d      	lsls	r5, r3, #1
1001b0d2:	428c      	cmp	r4, r1
1001b0d4:	f000 8477 	beq.w	1001b9c6 <_strtod_l+0xab6>
1001b0d8:	2c08      	cmp	r4, #8
1001b0da:	eb05 0385 	add.w	r3, r5, r5, lsl #2
1001b0de:	f104 0401 	add.w	r4, r4, #1
1001b0e2:	d9f5      	bls.n	1001b0d0 <_strtod_l+0x1c0>
1001b0e4:	2c10      	cmp	r4, #16
1001b0e6:	bfdc      	itt	le
1001b0e8:	eb09 0989 	addle.w	r9, r9, r9, lsl #2
1001b0ec:	ea4f 0949 	movle.w	r9, r9, lsl #1
1001b0f0:	e7ef      	b.n	1001b0d2 <_strtod_l+0x1c2>
1001b0f2:	2f65      	cmp	r7, #101	@ 0x65
1001b0f4:	f040 8318 	bne.w	1001b728 <_strtod_l+0x818>
1001b0f8:	f04f 0a00 	mov.w	sl, #0
1001b0fc:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
1001b100:	f04f 0c01 	mov.w	ip, #1
1001b104:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001b106:	4303      	orrs	r3, r0
1001b108:	f040 82fd 	bne.w	1001b706 <_strtod_l+0x7f6>
1001b10c:	9b07      	ldr	r3, [sp, #28]
1001b10e:	f04f 0800 	mov.w	r8, #0
1001b112:	f04f 0900 	mov.w	r9, #0
1001b116:	b103      	cbz	r3, 1001b11a <_strtod_l+0x20a>
1001b118:	601e      	str	r6, [r3, #0]
1001b11a:	4640      	mov	r0, r8
1001b11c:	4649      	mov	r1, r9
1001b11e:	b01f      	add	sp, #124	@ 0x7c
1001b120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001b124:	f898 2001 	ldrb.w	r2, [r8, #1]
1001b128:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001b12c:	2a58      	cmp	r2, #88	@ 0x58
1001b12e:	bf18      	it	ne
1001b130:	4643      	movne	r3, r8
1001b132:	f000 83fc 	beq.w	1001b92e <_strtod_l+0xa1e>
1001b136:	3301      	adds	r3, #1
1001b138:	9319      	str	r3, [sp, #100]	@ 0x64
1001b13a:	781a      	ldrb	r2, [r3, #0]
1001b13c:	2a30      	cmp	r2, #48	@ 0x30
1001b13e:	d0fa      	beq.n	1001b136 <_strtod_l+0x226>
1001b140:	4698      	mov	r8, r3
1001b142:	2a00      	cmp	r2, #0
1001b144:	f000 82bb 	beq.w	1001b6be <_strtod_l+0x7ae>
1001b148:	2301      	movs	r3, #1
1001b14a:	9309      	str	r3, [sp, #36]	@ 0x24
1001b14c:	e759      	b.n	1001b002 <_strtod_l+0xf2>
1001b14e:	2000      	movs	r0, #0
1001b150:	46a2      	mov	sl, r4
1001b152:	900e      	str	r0, [sp, #56]	@ 0x38
1001b154:	4684      	mov	ip, r0
1001b156:	2f65      	cmp	r7, #101	@ 0x65
1001b158:	d035      	beq.n	1001b1c6 <_strtod_l+0x2b6>
1001b15a:	2f45      	cmp	r7, #69	@ 0x45
1001b15c:	d033      	beq.n	1001b1c6 <_strtod_l+0x2b6>
1001b15e:	2300      	movs	r3, #0
1001b160:	930f      	str	r3, [sp, #60]	@ 0x3c
1001b162:	2c00      	cmp	r4, #0
1001b164:	f040 8081 	bne.w	1001b26a <_strtod_l+0x35a>
1001b168:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001b16a:	4303      	orrs	r3, r0
1001b16c:	f040 82a7 	bne.w	1001b6be <_strtod_l+0x7ae>
1001b170:	f1bc 0f00 	cmp.w	ip, #0
1001b174:	d1ca      	bne.n	1001b10c <_strtod_l+0x1fc>
1001b176:	2f69      	cmp	r7, #105	@ 0x69
1001b178:	f000 847e 	beq.w	1001ba78 <_strtod_l+0xb68>
1001b17c:	f300 83a3 	bgt.w	1001b8c6 <_strtod_l+0x9b6>
1001b180:	2f49      	cmp	r7, #73	@ 0x49
1001b182:	f000 8479 	beq.w	1001ba78 <_strtod_l+0xb68>
1001b186:	2f4e      	cmp	r7, #78	@ 0x4e
1001b188:	d1c0      	bne.n	1001b10c <_strtod_l+0x1fc>
1001b18a:	4925      	ldr	r1, [pc, #148]	@ (1001b220 <_strtod_l+0x310>)
1001b18c:	a819      	add	r0, sp, #100	@ 0x64
1001b18e:	f002 f801 	bl	1001d194 <__match>
1001b192:	2800      	cmp	r0, #0
1001b194:	d0ba      	beq.n	1001b10c <_strtod_l+0x1fc>
1001b196:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001b198:	781b      	ldrb	r3, [r3, #0]
1001b19a:	2b28      	cmp	r3, #40	@ 0x28
1001b19c:	f000 85a2 	beq.w	1001bce4 <_strtod_l+0xdd4>
1001b1a0:	4820      	ldr	r0, [pc, #128]	@ (1001b224 <_strtod_l+0x314>)
1001b1a2:	f001 fb93 	bl	1001c8cc <nan>
1001b1a6:	4680      	mov	r8, r0
1001b1a8:	4689      	mov	r9, r1
1001b1aa:	e28c      	b.n	1001b6c6 <_strtod_l+0x7b6>
1001b1ac:	491b      	ldr	r1, [pc, #108]	@ (1001b21c <_strtod_l+0x30c>)
1001b1ae:	2201      	movs	r2, #1
1001b1b0:	f001 f854 	bl	1001c25c <strncmp>
1001b1b4:	2800      	cmp	r0, #0
1001b1b6:	d1ca      	bne.n	1001b14e <_strtod_l+0x23e>
1001b1b8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001b1ba:	900e      	str	r0, [sp, #56]	@ 0x38
1001b1bc:	1c5a      	adds	r2, r3, #1
1001b1be:	9219      	str	r2, [sp, #100]	@ 0x64
1001b1c0:	785f      	ldrb	r7, [r3, #1]
1001b1c2:	46a2      	mov	sl, r4
1001b1c4:	e772      	b.n	1001b0ac <_strtod_l+0x19c>
1001b1c6:	2c00      	cmp	r4, #0
1001b1c8:	d09c      	beq.n	1001b104 <_strtod_l+0x1f4>
1001b1ca:	9e19      	ldr	r6, [sp, #100]	@ 0x64
1001b1cc:	1c73      	adds	r3, r6, #1
1001b1ce:	9319      	str	r3, [sp, #100]	@ 0x64
1001b1d0:	7877      	ldrb	r7, [r6, #1]
1001b1d2:	2f2b      	cmp	r7, #43	@ 0x2b
1001b1d4:	f000 8294 	beq.w	1001b700 <_strtod_l+0x7f0>
1001b1d8:	2f2d      	cmp	r7, #45	@ 0x2d
1001b1da:	f000 8284 	beq.w	1001b6e6 <_strtod_l+0x7d6>
1001b1de:	2300      	movs	r3, #0
1001b1e0:	930a      	str	r3, [sp, #40]	@ 0x28
1001b1e2:	f1a7 0130 	sub.w	r1, r7, #48	@ 0x30
1001b1e6:	2909      	cmp	r1, #9
1001b1e8:	f200 8283 	bhi.w	1001b6f2 <_strtod_l+0x7e2>
1001b1ec:	2f30      	cmp	r7, #48	@ 0x30
1001b1ee:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001b1f0:	d10a      	bne.n	1001b208 <_strtod_l+0x2f8>
1001b1f2:	3301      	adds	r3, #1
1001b1f4:	9319      	str	r3, [sp, #100]	@ 0x64
1001b1f6:	781f      	ldrb	r7, [r3, #0]
1001b1f8:	2f30      	cmp	r7, #48	@ 0x30
1001b1fa:	d0fa      	beq.n	1001b1f2 <_strtod_l+0x2e2>
1001b1fc:	f1a7 0231 	sub.w	r2, r7, #49	@ 0x31
1001b200:	2a08      	cmp	r2, #8
1001b202:	d8ac      	bhi.n	1001b15e <_strtod_l+0x24e>
1001b204:	f1a7 0130 	sub.w	r1, r7, #48	@ 0x30
1001b208:	1c5a      	adds	r2, r3, #1
1001b20a:	9219      	str	r2, [sp, #100]	@ 0x64
1001b20c:	785f      	ldrb	r7, [r3, #1]
1001b20e:	2f2f      	cmp	r7, #47	@ 0x2f
1001b210:	f340 83fc 	ble.w	1001ba0c <_strtod_l+0xafc>
1001b214:	4696      	mov	lr, r2
1001b216:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
1001b21a:	e00e      	b.n	1001b23a <_strtod_l+0x32a>
1001b21c:	1001e7f8 	.word	0x1001e7f8
1001b220:	1001ee24 	.word	0x1001ee24
1001b224:	1001e760 	.word	0x1001e760
1001b228:	3201      	adds	r2, #1
1001b22a:	9219      	str	r2, [sp, #100]	@ 0x64
1001b22c:	f89e 7001 	ldrb.w	r7, [lr, #1]
1001b230:	2f2f      	cmp	r7, #47	@ 0x2f
1001b232:	f1a8 0130 	sub.w	r1, r8, #48	@ 0x30
1001b236:	dd06      	ble.n	1001b246 <_strtod_l+0x336>
1001b238:	4696      	mov	lr, r2
1001b23a:	eb01 0881 	add.w	r8, r1, r1, lsl #2
1001b23e:	2f39      	cmp	r7, #57	@ 0x39
1001b240:	eb07 0848 	add.w	r8, r7, r8, lsl #1
1001b244:	ddf0      	ble.n	1001b228 <_strtod_l+0x318>
1001b246:	1ad2      	subs	r2, r2, r3
1001b248:	2a08      	cmp	r2, #8
1001b24a:	f8dd 802c 	ldr.w	r8, [sp, #44]	@ 0x2c
1001b24e:	f340 83dd 	ble.w	1001ba0c <_strtod_l+0xafc>
1001b252:	f644 631f 	movw	r3, #19999	@ 0x4e1f
1001b256:	930f      	str	r3, [sp, #60]	@ 0x3c
1001b258:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001b25a:	2b00      	cmp	r3, #0
1001b25c:	d081      	beq.n	1001b162 <_strtod_l+0x252>
1001b25e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001b260:	425b      	negs	r3, r3
1001b262:	930f      	str	r3, [sp, #60]	@ 0x3c
1001b264:	2c00      	cmp	r4, #0
1001b266:	f43f af7f 	beq.w	1001b168 <_strtod_l+0x258>
1001b26a:	4628      	mov	r0, r5
1001b26c:	f002 fbbe 	bl	1001d9ec <__aeabi_ui2d>
1001b270:	4602      	mov	r2, r0
1001b272:	460b      	mov	r3, r1
1001b274:	e9cd 2304 	strd	r2, r3, [sp, #16]
1001b278:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
1001b27c:	f1ba 0f00 	cmp.w	sl, #0
1001b280:	bf08      	it	eq
1001b282:	46a2      	moveq	sl, r4
1001b284:	2c10      	cmp	r4, #16
1001b286:	eba3 0302 	sub.w	r3, r3, r2
1001b28a:	4626      	mov	r6, r4
1001b28c:	bfa8      	it	ge
1001b28e:	2610      	movge	r6, #16
1001b290:	2c09      	cmp	r4, #9
1001b292:	930b      	str	r3, [sp, #44]	@ 0x2c
1001b294:	dd16      	ble.n	1001b2c4 <_strtod_l+0x3b4>
1001b296:	4b4f      	ldr	r3, [pc, #316]	@ (1001b3d4 <_strtod_l+0x4c4>)
1001b298:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
1001b29c:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
1001b2a0:	f002 fc1e 	bl	1001dae0 <__aeabi_dmul>
1001b2a4:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001b2a8:	4648      	mov	r0, r9
1001b2aa:	f002 fb9f 	bl	1001d9ec <__aeabi_ui2d>
1001b2ae:	4602      	mov	r2, r0
1001b2b0:	460b      	mov	r3, r1
1001b2b2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001b2b6:	f002 fa5d 	bl	1001d774 <__adddf3>
1001b2ba:	2c0f      	cmp	r4, #15
1001b2bc:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001b2c0:	f300 81a7 	bgt.w	1001b612 <_strtod_l+0x702>
1001b2c4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001b2c6:	2b00      	cmp	r3, #0
1001b2c8:	f000 8301 	beq.w	1001b8ce <_strtod_l+0x9be>
1001b2cc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001b2ce:	f340 8231 	ble.w	1001b734 <_strtod_l+0x824>
1001b2d2:	2b16      	cmp	r3, #22
1001b2d4:	f340 83a1 	ble.w	1001ba1a <_strtod_l+0xb0a>
1001b2d8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001b2da:	f1c4 0325 	rsb	r3, r4, #37	@ 0x25
1001b2de:	4293      	cmp	r3, r2
1001b2e0:	f280 8432 	bge.w	1001bb48 <_strtod_l+0xc38>
1001b2e4:	1ba6      	subs	r6, r4, r6
1001b2e6:	4416      	add	r6, r2
1001b2e8:	f016 000f 	ands.w	r0, r6, #15
1001b2ec:	d00a      	beq.n	1001b304 <_strtod_l+0x3f4>
1001b2ee:	4939      	ldr	r1, [pc, #228]	@ (1001b3d4 <_strtod_l+0x4c4>)
1001b2f0:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
1001b2f4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001b2f8:	e9d1 0100 	ldrd	r0, r1, [r1]
1001b2fc:	f002 fbf0 	bl	1001dae0 <__aeabi_dmul>
1001b300:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001b304:	f036 030f 	bics.w	r3, r6, #15
1001b308:	d046      	beq.n	1001b398 <_strtod_l+0x488>
1001b30a:	f5b3 7f9a 	cmp.w	r3, #308	@ 0x134
1001b30e:	f300 834e 	bgt.w	1001b9ae <_strtod_l+0xa9e>
1001b312:	2b10      	cmp	r3, #16
1001b314:	4a30      	ldr	r2, [pc, #192]	@ (1001b3d8 <_strtod_l+0x4c8>)
1001b316:	ea4f 1623 	mov.w	r6, r3, asr #4
1001b31a:	f340 8539 	ble.w	1001bd90 <_strtod_l+0xe80>
1001b31e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001b322:	2300      	movs	r3, #0
1001b324:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
1001b328:	4617      	mov	r7, r2
1001b32a:	4699      	mov	r9, r3
1001b32c:	4690      	mov	r8, r2
1001b32e:	f016 0f01 	tst.w	r6, #1
1001b332:	f109 0901 	add.w	r9, r9, #1
1001b336:	ea4f 0666 	mov.w	r6, r6, asr #1
1001b33a:	d004      	beq.n	1001b346 <_strtod_l+0x436>
1001b33c:	e9d7 2300 	ldrd	r2, r3, [r7]
1001b340:	f002 fbce 	bl	1001dae0 <__aeabi_dmul>
1001b344:	2301      	movs	r3, #1
1001b346:	2e01      	cmp	r6, #1
1001b348:	f107 0708 	add.w	r7, r7, #8
1001b34c:	d1ef      	bne.n	1001b32e <_strtod_l+0x41e>
1001b34e:	4642      	mov	r2, r8
1001b350:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
1001b354:	b10b      	cbz	r3, 1001b35a <_strtod_l+0x44a>
1001b356:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001b35a:	9b05      	ldr	r3, [sp, #20]
1001b35c:	f1a3 7354 	sub.w	r3, r3, #55574528	@ 0x3500000
1001b360:	eb02 01c9 	add.w	r1, r2, r9, lsl #3
1001b364:	9305      	str	r3, [sp, #20]
1001b366:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001b36a:	e9d1 0100 	ldrd	r0, r1, [r1]
1001b36e:	f002 fbb7 	bl	1001dae0 <__aeabi_dmul>
1001b372:	4b1a      	ldr	r3, [pc, #104]	@ (1001b3dc <_strtod_l+0x4cc>)
1001b374:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001b378:	400b      	ands	r3, r1
1001b37a:	460a      	mov	r2, r1
1001b37c:	4918      	ldr	r1, [pc, #96]	@ (1001b3e0 <_strtod_l+0x4d0>)
1001b37e:	428b      	cmp	r3, r1
1001b380:	f200 8315 	bhi.w	1001b9ae <_strtod_l+0xa9e>
1001b384:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
1001b388:	428b      	cmp	r3, r1
1001b38a:	f240 8454 	bls.w	1001bc36 <_strtod_l+0xd26>
1001b38e:	4b15      	ldr	r3, [pc, #84]	@ (1001b3e4 <_strtod_l+0x4d4>)
1001b390:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001b394:	e9cd 2304 	strd	r2, r3, [sp, #16]
1001b398:	2300      	movs	r3, #0
1001b39a:	930a      	str	r3, [sp, #40]	@ 0x28
1001b39c:	9500      	str	r5, [sp, #0]
1001b39e:	4623      	mov	r3, r4
1001b3a0:	4652      	mov	r2, sl
1001b3a2:	4641      	mov	r1, r8
1001b3a4:	4658      	mov	r0, fp
1001b3a6:	f7ff f83b 	bl	1001a420 <__s2b>
1001b3aa:	9014      	str	r0, [sp, #80]	@ 0x50
1001b3ac:	2800      	cmp	r0, #0
1001b3ae:	f000 82fe 	beq.w	1001b9ae <_strtod_l+0xa9e>
1001b3b2:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
1001b3b6:	1a9b      	subs	r3, r3, r2
1001b3b8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001b3ba:	2a00      	cmp	r2, #0
1001b3bc:	bfa8      	it	ge
1001b3be:	2300      	movge	r3, #0
1001b3c0:	930e      	str	r3, [sp, #56]	@ 0x38
1001b3c2:	f04f 0a00 	mov.w	sl, #0
1001b3c6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
1001b3ca:	f8cd a024 	str.w	sl, [sp, #36]	@ 0x24
1001b3ce:	9315      	str	r3, [sp, #84]	@ 0x54
1001b3d0:	e0df      	b.n	1001b592 <_strtod_l+0x682>
1001b3d2:	bf00      	nop
1001b3d4:	1001ed50 	.word	0x1001ed50
1001b3d8:	1001ed28 	.word	0x1001ed28
1001b3dc:	7ff00000 	.word	0x7ff00000
1001b3e0:	7ca00000 	.word	0x7ca00000
1001b3e4:	7fefffff 	.word	0x7fefffff
1001b3e8:	1ad2      	subs	r2, r2, r3
1001b3ea:	2a1f      	cmp	r2, #31
1001b3ec:	eba4 0402 	sub.w	r4, r4, r2
1001b3f0:	f300 822e 	bgt.w	1001b850 <_strtod_l+0x940>
1001b3f4:	2301      	movs	r3, #1
1001b3f6:	4093      	lsls	r3, r2
1001b3f8:	4698      	mov	r8, r3
1001b3fa:	2500      	movs	r5, #0
1001b3fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001b3fe:	4426      	add	r6, r4
1001b400:	443c      	add	r4, r7
1001b402:	42a7      	cmp	r7, r4
1001b404:	441e      	add	r6, r3
1001b406:	463b      	mov	r3, r7
1001b408:	bfa8      	it	ge
1001b40a:	4623      	movge	r3, r4
1001b40c:	42b3      	cmp	r3, r6
1001b40e:	bfa8      	it	ge
1001b410:	4633      	movge	r3, r6
1001b412:	2b00      	cmp	r3, #0
1001b414:	dd02      	ble.n	1001b41c <_strtod_l+0x50c>
1001b416:	1ae4      	subs	r4, r4, r3
1001b418:	1af6      	subs	r6, r6, r3
1001b41a:	1aff      	subs	r7, r7, r3
1001b41c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b41e:	2b00      	cmp	r3, #0
1001b420:	f300 81bc 	bgt.w	1001b79c <_strtod_l+0x88c>
1001b424:	2c00      	cmp	r4, #0
1001b426:	f300 81d2 	bgt.w	1001b7ce <_strtod_l+0x8be>
1001b42a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001b42c:	2b00      	cmp	r3, #0
1001b42e:	f300 8205 	bgt.w	1001b83c <_strtod_l+0x92c>
1001b432:	2e00      	cmp	r6, #0
1001b434:	f300 81f6 	bgt.w	1001b824 <_strtod_l+0x914>
1001b438:	2f00      	cmp	r7, #0
1001b43a:	dd08      	ble.n	1001b44e <_strtod_l+0x53e>
1001b43c:	4651      	mov	r1, sl
1001b43e:	463a      	mov	r2, r7
1001b440:	4658      	mov	r0, fp
1001b442:	f7ff f9d5 	bl	1001a7f0 <__lshift>
1001b446:	4682      	mov	sl, r0
1001b448:	2800      	cmp	r0, #0
1001b44a:	f000 81f4 	beq.w	1001b836 <_strtod_l+0x926>
1001b44e:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001b450:	464a      	mov	r2, r9
1001b452:	4658      	mov	r0, fp
1001b454:	f7ff fa64 	bl	1001a920 <__mdiff>
1001b458:	9009      	str	r0, [sp, #36]	@ 0x24
1001b45a:	2800      	cmp	r0, #0
1001b45c:	f000 81eb 	beq.w	1001b836 <_strtod_l+0x926>
1001b460:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001b462:	2300      	movs	r3, #0
1001b464:	68d1      	ldr	r1, [r2, #12]
1001b466:	910f      	str	r1, [sp, #60]	@ 0x3c
1001b468:	60d3      	str	r3, [r2, #12]
1001b46a:	4651      	mov	r1, sl
1001b46c:	f7ff fa38 	bl	1001a8e0 <__mcmp>
1001b470:	2800      	cmp	r0, #0
1001b472:	f2c0 8402 	blt.w	1001bc7a <_strtod_l+0xd6a>
1001b476:	9f05      	ldr	r7, [sp, #20]
1001b478:	f000 8389 	beq.w	1001bb8e <_strtod_l+0xc7e>
1001b47c:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001b47e:	4651      	mov	r1, sl
1001b480:	f7ff fbe4 	bl	1001ac4c <__ratio>
1001b484:	2200      	movs	r2, #0
1001b486:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
1001b48a:	4604      	mov	r4, r0
1001b48c:	460d      	mov	r5, r1
1001b48e:	f002 fda3 	bl	1001dfd8 <__aeabi_dcmple>
1001b492:	2800      	cmp	r0, #0
1001b494:	f000 8172 	beq.w	1001b77c <_strtod_l+0x86c>
1001b498:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001b49a:	2b00      	cmp	r3, #0
1001b49c:	f040 81e4 	bne.w	1001b868 <_strtod_l+0x958>
1001b4a0:	9b04      	ldr	r3, [sp, #16]
1001b4a2:	2b00      	cmp	r3, #0
1001b4a4:	f040 8273 	bne.w	1001b98e <_strtod_l+0xa7e>
1001b4a8:	f3c7 0313 	ubfx	r3, r7, #0, #20
1001b4ac:	2b00      	cmp	r3, #0
1001b4ae:	f040 8211 	bne.w	1001b8d4 <_strtod_l+0x9c4>
1001b4b2:	4bab      	ldr	r3, [pc, #684]	@ (1001b760 <_strtod_l+0x850>)
1001b4b4:	2200      	movs	r2, #0
1001b4b6:	4620      	mov	r0, r4
1001b4b8:	4629      	mov	r1, r5
1001b4ba:	f002 fd83 	bl	1001dfc4 <__aeabi_dcmplt>
1001b4be:	2800      	cmp	r0, #0
1001b4c0:	f040 835c 	bne.w	1001bb7c <_strtod_l+0xc6c>
1001b4c4:	4ba7      	ldr	r3, [pc, #668]	@ (1001b764 <_strtod_l+0x854>)
1001b4c6:	4620      	mov	r0, r4
1001b4c8:	4629      	mov	r1, r5
1001b4ca:	2200      	movs	r2, #0
1001b4cc:	f002 fb08 	bl	1001dae0 <__aeabi_dmul>
1001b4d0:	4603      	mov	r3, r0
1001b4d2:	460c      	mov	r4, r1
1001b4d4:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001b4d8:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
1001b4dc:	900c      	str	r0, [sp, #48]	@ 0x30
1001b4de:	930d      	str	r3, [sp, #52]	@ 0x34
1001b4e0:	4ea1      	ldr	r6, [pc, #644]	@ (1001b768 <_strtod_l+0x858>)
1001b4e2:	4ba2      	ldr	r3, [pc, #648]	@ (1001b76c <_strtod_l+0x85c>)
1001b4e4:	403e      	ands	r6, r7
1001b4e6:	429e      	cmp	r6, r3
1001b4e8:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	@ 0x30
1001b4ec:	f000 81c3 	beq.w	1001b876 <_strtod_l+0x966>
1001b4f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001b4f2:	b323      	cbz	r3, 1001b53e <_strtod_l+0x62e>
1001b4f4:	f1b6 6fd4 	cmp.w	r6, #111149056	@ 0x6a00000
1001b4f8:	d821      	bhi.n	1001b53e <_strtod_l+0x62e>
1001b4fa:	e9dd 7812 	ldrd	r7, r8, [sp, #72]	@ 0x48
1001b4fe:	a396      	add	r3, pc, #600	@ (adr r3, 1001b758 <_strtod_l+0x848>)
1001b500:	e9d3 2300 	ldrd	r2, r3, [r3]
1001b504:	4638      	mov	r0, r7
1001b506:	4641      	mov	r1, r8
1001b508:	f002 fd66 	bl	1001dfd8 <__aeabi_dcmple>
1001b50c:	b1a0      	cbz	r0, 1001b538 <_strtod_l+0x628>
1001b50e:	4641      	mov	r1, r8
1001b510:	4638      	mov	r0, r7
1001b512:	f002 fdbd 	bl	1001e090 <__aeabi_d2uiz>
1001b516:	2801      	cmp	r0, #1
1001b518:	bf38      	it	cc
1001b51a:	2001      	movcc	r0, #1
1001b51c:	f002 fa66 	bl	1001d9ec <__aeabi_ui2d>
1001b520:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001b522:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001b526:	2b00      	cmp	r3, #0
1001b528:	f040 82ba 	bne.w	1001baa0 <_strtod_l+0xb90>
1001b52c:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
1001b530:	9016      	str	r0, [sp, #88]	@ 0x58
1001b532:	9317      	str	r3, [sp, #92]	@ 0x5c
1001b534:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	@ 0x58
1001b538:	f105 63d6 	add.w	r3, r5, #112197632	@ 0x6b00000
1001b53c:	1b9d      	subs	r5, r3, r6
1001b53e:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	@ 0x40
1001b542:	4638      	mov	r0, r7
1001b544:	4641      	mov	r1, r8
1001b546:	f7ff fa9d 	bl	1001aa84 <__ulp>
1001b54a:	4602      	mov	r2, r0
1001b54c:	460b      	mov	r3, r1
1001b54e:	4620      	mov	r0, r4
1001b550:	4629      	mov	r1, r5
1001b552:	f002 fac5 	bl	1001dae0 <__aeabi_dmul>
1001b556:	463a      	mov	r2, r7
1001b558:	4643      	mov	r3, r8
1001b55a:	f002 f90b 	bl	1001d774 <__adddf3>
1001b55e:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001b562:	460c      	mov	r4, r1
1001b564:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001b566:	b923      	cbnz	r3, 1001b572 <_strtod_l+0x662>
1001b568:	4b7f      	ldr	r3, [pc, #508]	@ (1001b768 <_strtod_l+0x858>)
1001b56a:	4023      	ands	r3, r4
1001b56c:	429e      	cmp	r6, r3
1001b56e:	f000 81ba 	beq.w	1001b8e6 <_strtod_l+0x9d6>
1001b572:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001b574:	4658      	mov	r0, fp
1001b576:	f7fe fef9 	bl	1001a36c <_Bfree>
1001b57a:	4649      	mov	r1, r9
1001b57c:	4658      	mov	r0, fp
1001b57e:	f7fe fef5 	bl	1001a36c <_Bfree>
1001b582:	4651      	mov	r1, sl
1001b584:	4658      	mov	r0, fp
1001b586:	f7fe fef1 	bl	1001a36c <_Bfree>
1001b58a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b58c:	4658      	mov	r0, fp
1001b58e:	f7fe feed 	bl	1001a36c <_Bfree>
1001b592:	9c14      	ldr	r4, [sp, #80]	@ 0x50
1001b594:	4658      	mov	r0, fp
1001b596:	6861      	ldr	r1, [r4, #4]
1001b598:	f7fe fec2 	bl	1001a320 <_Balloc>
1001b59c:	4681      	mov	r9, r0
1001b59e:	2800      	cmp	r0, #0
1001b5a0:	f000 8149 	beq.w	1001b836 <_strtod_l+0x926>
1001b5a4:	6922      	ldr	r2, [r4, #16]
1001b5a6:	3202      	adds	r2, #2
1001b5a8:	f104 010c 	add.w	r1, r4, #12
1001b5ac:	0092      	lsls	r2, r2, #2
1001b5ae:	300c      	adds	r0, #12
1001b5b0:	f7fa f986 	bl	100158c0 <memcpy>
1001b5b4:	ab1c      	add	r3, sp, #112	@ 0x70
1001b5b6:	9301      	str	r3, [sp, #4]
1001b5b8:	ab1b      	add	r3, sp, #108	@ 0x6c
1001b5ba:	9300      	str	r3, [sp, #0]
1001b5bc:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
1001b5c0:	4658      	mov	r0, fp
1001b5c2:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
1001b5c6:	461a      	mov	r2, r3
1001b5c8:	4623      	mov	r3, r4
1001b5ca:	f7ff fae1 	bl	1001ab90 <__d2b>
1001b5ce:	901a      	str	r0, [sp, #104]	@ 0x68
1001b5d0:	2800      	cmp	r0, #0
1001b5d2:	f000 8105 	beq.w	1001b7e0 <_strtod_l+0x8d0>
1001b5d6:	2101      	movs	r1, #1
1001b5d8:	4658      	mov	r0, fp
1001b5da:	f7fe ffcb 	bl	1001a574 <__i2b>
1001b5de:	4682      	mov	sl, r0
1001b5e0:	2800      	cmp	r0, #0
1001b5e2:	f000 8128 	beq.w	1001b836 <_strtod_l+0x926>
1001b5e6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
1001b5e8:	2b00      	cmp	r3, #0
1001b5ea:	f2c0 8117 	blt.w	1001b81c <_strtod_l+0x90c>
1001b5ee:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001b5f0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
1001b5f2:	189f      	adds	r7, r3, r2
1001b5f4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001b5f6:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
1001b5f8:	1a9b      	subs	r3, r3, r2
1001b5fa:	4423      	add	r3, r4
1001b5fc:	4a5c      	ldr	r2, [pc, #368]	@ (1001b770 <_strtod_l+0x860>)
1001b5fe:	3b01      	subs	r3, #1
1001b600:	4293      	cmp	r3, r2
1001b602:	f1c4 0436 	rsb	r4, r4, #54	@ 0x36
1001b606:	f6ff aeef 	blt.w	1001b3e8 <_strtod_l+0x4d8>
1001b60a:	2301      	movs	r3, #1
1001b60c:	2500      	movs	r5, #0
1001b60e:	4698      	mov	r8, r3
1001b610:	e6f4      	b.n	1001b3fc <_strtod_l+0x4ec>
1001b612:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001b614:	1ba6      	subs	r6, r4, r6
1001b616:	441e      	add	r6, r3
1001b618:	2e00      	cmp	r6, #0
1001b61a:	f73f ae65 	bgt.w	1001b2e8 <_strtod_l+0x3d8>
1001b61e:	f43f aebb 	beq.w	1001b398 <_strtod_l+0x488>
1001b622:	4276      	negs	r6, r6
1001b624:	f016 020f 	ands.w	r2, r6, #15
1001b628:	d00a      	beq.n	1001b640 <_strtod_l+0x730>
1001b62a:	4b52      	ldr	r3, [pc, #328]	@ (1001b774 <_strtod_l+0x864>)
1001b62c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1001b630:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001b634:	e9d3 2300 	ldrd	r2, r3, [r3]
1001b638:	f002 fb7c 	bl	1001dd34 <__aeabi_ddiv>
1001b63c:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001b640:	1136      	asrs	r6, r6, #4
1001b642:	f43f aea9 	beq.w	1001b398 <_strtod_l+0x488>
1001b646:	2e1f      	cmp	r6, #31
1001b648:	dc36      	bgt.n	1001b6b8 <_strtod_l+0x7a8>
1001b64a:	f016 0310 	ands.w	r3, r6, #16
1001b64e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001b652:	bf18      	it	ne
1001b654:	236a      	movne	r3, #106	@ 0x6a
1001b656:	4f48      	ldr	r7, [pc, #288]	@ (1001b778 <_strtod_l+0x868>)
1001b658:	930a      	str	r3, [sp, #40]	@ 0x28
1001b65a:	2300      	movs	r3, #0
1001b65c:	07f2      	lsls	r2, r6, #31
1001b65e:	d504      	bpl.n	1001b66a <_strtod_l+0x75a>
1001b660:	e9d7 2300 	ldrd	r2, r3, [r7]
1001b664:	f002 fa3c 	bl	1001dae0 <__aeabi_dmul>
1001b668:	2301      	movs	r3, #1
1001b66a:	1076      	asrs	r6, r6, #1
1001b66c:	f107 0708 	add.w	r7, r7, #8
1001b670:	d1f4      	bne.n	1001b65c <_strtod_l+0x74c>
1001b672:	b10b      	cbz	r3, 1001b678 <_strtod_l+0x768>
1001b674:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001b678:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001b67a:	b1a3      	cbz	r3, 1001b6a6 <_strtod_l+0x796>
1001b67c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001b680:	f3c1 520a 	ubfx	r2, r1, #20, #11
1001b684:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
1001b688:	2b00      	cmp	r3, #0
1001b68a:	dd0a      	ble.n	1001b6a2 <_strtod_l+0x792>
1001b68c:	2b1f      	cmp	r3, #31
1001b68e:	f340 8398 	ble.w	1001bdc2 <_strtod_l+0xeb2>
1001b692:	2000      	movs	r0, #0
1001b694:	2b34      	cmp	r3, #52	@ 0x34
1001b696:	9004      	str	r0, [sp, #16]
1001b698:	f340 83ca 	ble.w	1001be30 <_strtod_l+0xf20>
1001b69c:	f04f 735c 	mov.w	r3, #57671680	@ 0x3700000
1001b6a0:	9305      	str	r3, [sp, #20]
1001b6a2:	236a      	movs	r3, #106	@ 0x6a
1001b6a4:	930a      	str	r3, [sp, #40]	@ 0x28
1001b6a6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001b6aa:	2200      	movs	r2, #0
1001b6ac:	2300      	movs	r3, #0
1001b6ae:	f002 fc7f 	bl	1001dfb0 <__aeabi_dcmpeq>
1001b6b2:	2800      	cmp	r0, #0
1001b6b4:	f43f ae72 	beq.w	1001b39c <_strtod_l+0x48c>
1001b6b8:	2322      	movs	r3, #34	@ 0x22
1001b6ba:	f8cb 3000 	str.w	r3, [fp]
1001b6be:	f04f 0800 	mov.w	r8, #0
1001b6c2:	f04f 0900 	mov.w	r9, #0
1001b6c6:	9a07      	ldr	r2, [sp, #28]
1001b6c8:	b10a      	cbz	r2, 1001b6ce <_strtod_l+0x7be>
1001b6ca:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001b6cc:	6013      	str	r3, [r2, #0]
1001b6ce:	9b08      	ldr	r3, [sp, #32]
1001b6d0:	2b00      	cmp	r3, #0
1001b6d2:	f43f ad22 	beq.w	1001b11a <_strtod_l+0x20a>
1001b6d6:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
1001b6da:	4699      	mov	r9, r3
1001b6dc:	4640      	mov	r0, r8
1001b6de:	4649      	mov	r1, r9
1001b6e0:	b01f      	add	sp, #124	@ 0x7c
1001b6e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001b6e6:	2301      	movs	r3, #1
1001b6e8:	930a      	str	r3, [sp, #40]	@ 0x28
1001b6ea:	1cb3      	adds	r3, r6, #2
1001b6ec:	9319      	str	r3, [sp, #100]	@ 0x64
1001b6ee:	78b7      	ldrb	r7, [r6, #2]
1001b6f0:	e577      	b.n	1001b1e2 <_strtod_l+0x2d2>
1001b6f2:	2300      	movs	r3, #0
1001b6f4:	9619      	str	r6, [sp, #100]	@ 0x64
1001b6f6:	930f      	str	r3, [sp, #60]	@ 0x3c
1001b6f8:	e533      	b.n	1001b162 <_strtod_l+0x252>
1001b6fa:	f04f 0c01 	mov.w	ip, #1
1001b6fe:	e52a      	b.n	1001b156 <_strtod_l+0x246>
1001b700:	2300      	movs	r3, #0
1001b702:	930a      	str	r3, [sp, #40]	@ 0x28
1001b704:	e7f1      	b.n	1001b6ea <_strtod_l+0x7da>
1001b706:	2400      	movs	r4, #0
1001b708:	e55f      	b.n	1001b1ca <_strtod_l+0x2ba>
1001b70a:	2200      	movs	r2, #0
1001b70c:	9208      	str	r2, [sp, #32]
1001b70e:	f108 0101 	add.w	r1, r8, #1
1001b712:	9119      	str	r1, [sp, #100]	@ 0x64
1001b714:	f898 2001 	ldrb.w	r2, [r8, #1]
1001b718:	2a00      	cmp	r2, #0
1001b71a:	f43f acf7 	beq.w	1001b10c <_strtod_l+0x1fc>
1001b71e:	4688      	mov	r8, r1
1001b720:	e46a      	b.n	1001aff8 <_strtod_l+0xe8>
1001b722:	2201      	movs	r2, #1
1001b724:	9208      	str	r2, [sp, #32]
1001b726:	e7f2      	b.n	1001b70e <_strtod_l+0x7fe>
1001b728:	2f45      	cmp	r7, #69	@ 0x45
1001b72a:	f43f ace5 	beq.w	1001b0f8 <_strtod_l+0x1e8>
1001b72e:	f04f 0c01 	mov.w	ip, #1
1001b732:	e519      	b.n	1001b168 <_strtod_l+0x258>
1001b734:	3316      	adds	r3, #22
1001b736:	f6ff af6c 	blt.w	1001b612 <_strtod_l+0x702>
1001b73a:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
1001b73e:	1a9a      	subs	r2, r3, r2
1001b740:	4b0c      	ldr	r3, [pc, #48]	@ (1001b774 <_strtod_l+0x864>)
1001b742:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1001b746:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001b74a:	e9d3 2300 	ldrd	r2, r3, [r3]
1001b74e:	f002 faf1 	bl	1001dd34 <__aeabi_ddiv>
1001b752:	4680      	mov	r8, r0
1001b754:	4689      	mov	r9, r1
1001b756:	e7b6      	b.n	1001b6c6 <_strtod_l+0x7b6>
1001b758:	ffc00000 	.word	0xffc00000
1001b75c:	41dfffff 	.word	0x41dfffff
1001b760:	3ff00000 	.word	0x3ff00000
1001b764:	3fe00000 	.word	0x3fe00000
1001b768:	7ff00000 	.word	0x7ff00000
1001b76c:	7fe00000 	.word	0x7fe00000
1001b770:	fffffc02 	.word	0xfffffc02
1001b774:	1001ed50 	.word	0x1001ed50
1001b778:	1001ee50 	.word	0x1001ee50
1001b77c:	4bb4      	ldr	r3, [pc, #720]	@ (1001ba50 <_strtod_l+0xb40>)
1001b77e:	4620      	mov	r0, r4
1001b780:	4629      	mov	r1, r5
1001b782:	2200      	movs	r2, #0
1001b784:	f002 f9ac 	bl	1001dae0 <__aeabi_dmul>
1001b788:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001b78a:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001b78e:	2b00      	cmp	r3, #0
1001b790:	d165      	bne.n	1001b85e <_strtod_l+0x94e>
1001b792:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
1001b796:	900c      	str	r0, [sp, #48]	@ 0x30
1001b798:	930d      	str	r3, [sp, #52]	@ 0x34
1001b79a:	e6a1      	b.n	1001b4e0 <_strtod_l+0x5d0>
1001b79c:	4651      	mov	r1, sl
1001b79e:	461a      	mov	r2, r3
1001b7a0:	4658      	mov	r0, fp
1001b7a2:	f7fe ffcb 	bl	1001a73c <__pow5mult>
1001b7a6:	4682      	mov	sl, r0
1001b7a8:	2800      	cmp	r0, #0
1001b7aa:	d044      	beq.n	1001b836 <_strtod_l+0x926>
1001b7ac:	4601      	mov	r1, r0
1001b7ae:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001b7b0:	4658      	mov	r0, fp
1001b7b2:	f7fe ff0d 	bl	1001a5d0 <__multiply>
1001b7b6:	2800      	cmp	r0, #0
1001b7b8:	d03d      	beq.n	1001b836 <_strtod_l+0x926>
1001b7ba:	900f      	str	r0, [sp, #60]	@ 0x3c
1001b7bc:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001b7be:	4658      	mov	r0, fp
1001b7c0:	f7fe fdd4 	bl	1001a36c <_Bfree>
1001b7c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001b7c6:	931a      	str	r3, [sp, #104]	@ 0x68
1001b7c8:	2c00      	cmp	r4, #0
1001b7ca:	f77f ae2e 	ble.w	1001b42a <_strtod_l+0x51a>
1001b7ce:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001b7d0:	4622      	mov	r2, r4
1001b7d2:	4658      	mov	r0, fp
1001b7d4:	f7ff f80c 	bl	1001a7f0 <__lshift>
1001b7d8:	901a      	str	r0, [sp, #104]	@ 0x68
1001b7da:	2800      	cmp	r0, #0
1001b7dc:	f47f ae25 	bne.w	1001b42a <_strtod_l+0x51a>
1001b7e0:	464f      	mov	r7, r9
1001b7e2:	4605      	mov	r5, r0
1001b7e4:	2322      	movs	r3, #34	@ 0x22
1001b7e6:	f8df 926c 	ldr.w	r9, [pc, #620]	@ 1001ba54 <_strtod_l+0xb44>
1001b7ea:	f8cb 3000 	str.w	r3, [fp]
1001b7ee:	f04f 0800 	mov.w	r8, #0
1001b7f2:	4629      	mov	r1, r5
1001b7f4:	4658      	mov	r0, fp
1001b7f6:	f7fe fdb9 	bl	1001a36c <_Bfree>
1001b7fa:	4639      	mov	r1, r7
1001b7fc:	4658      	mov	r0, fp
1001b7fe:	f7fe fdb5 	bl	1001a36c <_Bfree>
1001b802:	4651      	mov	r1, sl
1001b804:	4658      	mov	r0, fp
1001b806:	f7fe fdb1 	bl	1001a36c <_Bfree>
1001b80a:	9914      	ldr	r1, [sp, #80]	@ 0x50
1001b80c:	4658      	mov	r0, fp
1001b80e:	f7fe fdad 	bl	1001a36c <_Bfree>
1001b812:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b814:	4658      	mov	r0, fp
1001b816:	f7fe fda9 	bl	1001a36c <_Bfree>
1001b81a:	e754      	b.n	1001b6c6 <_strtod_l+0x7b6>
1001b81c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001b81e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
1001b820:	1ad6      	subs	r6, r2, r3
1001b822:	e6e7      	b.n	1001b5f4 <_strtod_l+0x6e4>
1001b824:	4649      	mov	r1, r9
1001b826:	4632      	mov	r2, r6
1001b828:	4658      	mov	r0, fp
1001b82a:	f7fe ffe1 	bl	1001a7f0 <__lshift>
1001b82e:	4681      	mov	r9, r0
1001b830:	2800      	cmp	r0, #0
1001b832:	f47f ae01 	bne.w	1001b438 <_strtod_l+0x528>
1001b836:	464f      	mov	r7, r9
1001b838:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001b83a:	e7d3      	b.n	1001b7e4 <_strtod_l+0x8d4>
1001b83c:	4649      	mov	r1, r9
1001b83e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001b840:	4658      	mov	r0, fp
1001b842:	f7fe ff7b 	bl	1001a73c <__pow5mult>
1001b846:	4681      	mov	r9, r0
1001b848:	2800      	cmp	r0, #0
1001b84a:	f47f adf2 	bne.w	1001b432 <_strtod_l+0x522>
1001b84e:	e7f2      	b.n	1001b836 <_strtod_l+0x926>
1001b850:	4a81      	ldr	r2, [pc, #516]	@ (1001ba58 <_strtod_l+0xb48>)
1001b852:	1ad3      	subs	r3, r2, r3
1001b854:	2201      	movs	r2, #1
1001b856:	fa02 f503 	lsl.w	r5, r2, r3
1001b85a:	4690      	mov	r8, r2
1001b85c:	e5ce      	b.n	1001b3fc <_strtod_l+0x4ec>
1001b85e:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
1001b862:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001b866:	e63b      	b.n	1001b4e0 <_strtod_l+0x5d0>
1001b868:	4c7c      	ldr	r4, [pc, #496]	@ (1001ba5c <_strtod_l+0xb4c>)
1001b86a:	2300      	movs	r3, #0
1001b86c:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001b870:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001b874:	e634      	b.n	1001b4e0 <_strtod_l+0x5d0>
1001b876:	f1a7 7354 	sub.w	r3, r7, #55574528	@ 0x3500000
1001b87a:	9305      	str	r3, [sp, #20]
1001b87c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
1001b880:	4620      	mov	r0, r4
1001b882:	4629      	mov	r1, r5
1001b884:	f7ff f8fe 	bl	1001aa84 <__ulp>
1001b888:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
1001b88c:	f002 f928 	bl	1001dae0 <__aeabi_dmul>
1001b890:	462b      	mov	r3, r5
1001b892:	4622      	mov	r2, r4
1001b894:	f001 ff6e 	bl	1001d774 <__adddf3>
1001b898:	4f6e      	ldr	r7, [pc, #440]	@ (1001ba54 <_strtod_l+0xb44>)
1001b89a:	4b71      	ldr	r3, [pc, #452]	@ (1001ba60 <_strtod_l+0xb50>)
1001b89c:	400f      	ands	r7, r1
1001b89e:	429f      	cmp	r7, r3
1001b8a0:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001b8a4:	f240 808b 	bls.w	1001b9be <_strtod_l+0xaae>
1001b8a8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
1001b8ac:	f103 7354 	add.w	r3, r3, #55574528	@ 0x3500000
1001b8b0:	4299      	cmp	r1, r3
1001b8b2:	d102      	bne.n	1001b8ba <_strtod_l+0x9aa>
1001b8b4:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001b8b8:	d0bd      	beq.n	1001b836 <_strtod_l+0x926>
1001b8ba:	4c6a      	ldr	r4, [pc, #424]	@ (1001ba64 <_strtod_l+0xb54>)
1001b8bc:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001b8c0:	e9cd 3404 	strd	r3, r4, [sp, #16]
1001b8c4:	e655      	b.n	1001b572 <_strtod_l+0x662>
1001b8c6:	2f6e      	cmp	r7, #110	@ 0x6e
1001b8c8:	f43f ac5f 	beq.w	1001b18a <_strtod_l+0x27a>
1001b8cc:	e41e      	b.n	1001b10c <_strtod_l+0x1fc>
1001b8ce:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001b8d2:	e6f8      	b.n	1001b6c6 <_strtod_l+0x7b6>
1001b8d4:	4c64      	ldr	r4, [pc, #400]	@ (1001ba68 <_strtod_l+0xb58>)
1001b8d6:	2300      	movs	r3, #0
1001b8d8:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001b8dc:	4c5f      	ldr	r4, [pc, #380]	@ (1001ba5c <_strtod_l+0xb4c>)
1001b8de:	2300      	movs	r3, #0
1001b8e0:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001b8e4:	e5fc      	b.n	1001b4e0 <_strtod_l+0x5d0>
1001b8e6:	e9dd 5612 	ldrd	r5, r6, [sp, #72]	@ 0x48
1001b8ea:	4628      	mov	r0, r5
1001b8ec:	4631      	mov	r1, r6
1001b8ee:	f002 fc57 	bl	1001e1a0 <__aeabi_d2lz>
1001b8f2:	f002 f8c7 	bl	1001da84 <__aeabi_l2d>
1001b8f6:	460b      	mov	r3, r1
1001b8f8:	4602      	mov	r2, r0
1001b8fa:	4631      	mov	r1, r6
1001b8fc:	4628      	mov	r0, r5
1001b8fe:	f001 ff37 	bl	1001d770 <__aeabi_dsub>
1001b902:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001b904:	9b04      	ldr	r3, [sp, #16]
1001b906:	f3c4 0413 	ubfx	r4, r4, #0, #20
1001b90a:	431d      	orrs	r5, r3
1001b90c:	432c      	orrs	r4, r5
1001b90e:	4606      	mov	r6, r0
1001b910:	460f      	mov	r7, r1
1001b912:	d12a      	bne.n	1001b96a <_strtod_l+0xa5a>
1001b914:	a348      	add	r3, pc, #288	@ (adr r3, 1001ba38 <_strtod_l+0xb28>)
1001b916:	e9d3 2300 	ldrd	r2, r3, [r3]
1001b91a:	f002 fb53 	bl	1001dfc4 <__aeabi_dcmplt>
1001b91e:	2800      	cmp	r0, #0
1001b920:	f43f ae27 	beq.w	1001b572 <_strtod_l+0x662>
1001b924:	464f      	mov	r7, r9
1001b926:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001b92a:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001b92c:	e761      	b.n	1001b7f2 <_strtod_l+0x8e2>
1001b92e:	9302      	str	r3, [sp, #8]
1001b930:	9b08      	ldr	r3, [sp, #32]
1001b932:	9301      	str	r3, [sp, #4]
1001b934:	ab1a      	add	r3, sp, #104	@ 0x68
1001b936:	9300      	str	r3, [sp, #0]
1001b938:	4a4c      	ldr	r2, [pc, #304]	@ (1001ba6c <_strtod_l+0xb5c>)
1001b93a:	ab1b      	add	r3, sp, #108	@ 0x6c
1001b93c:	a919      	add	r1, sp, #100	@ 0x64
1001b93e:	4658      	mov	r0, fp
1001b940:	f001 f96e 	bl	1001cc20 <__gethex>
1001b944:	f010 050f 	ands.w	r5, r0, #15
1001b948:	4604      	mov	r4, r0
1001b94a:	f43f aeb8 	beq.w	1001b6be <_strtod_l+0x7ae>
1001b94e:	2d06      	cmp	r5, #6
1001b950:	f040 80ae 	bne.w	1001bab0 <_strtod_l+0xba0>
1001b954:	9a07      	ldr	r2, [sp, #28]
1001b956:	b112      	cbz	r2, 1001b95e <_strtod_l+0xa4e>
1001b958:	f108 0301 	add.w	r3, r8, #1
1001b95c:	6013      	str	r3, [r2, #0]
1001b95e:	f04f 0800 	mov.w	r8, #0
1001b962:	f04f 0900 	mov.w	r9, #0
1001b966:	f7ff bbd8 	b.w	1001b11a <_strtod_l+0x20a>
1001b96a:	a335      	add	r3, pc, #212	@ (adr r3, 1001ba40 <_strtod_l+0xb30>)
1001b96c:	e9d3 2300 	ldrd	r2, r3, [r3]
1001b970:	f002 fb28 	bl	1001dfc4 <__aeabi_dcmplt>
1001b974:	2800      	cmp	r0, #0
1001b976:	d1d5      	bne.n	1001b924 <_strtod_l+0xa14>
1001b978:	a333      	add	r3, pc, #204	@ (adr r3, 1001ba48 <_strtod_l+0xb38>)
1001b97a:	e9d3 2300 	ldrd	r2, r3, [r3]
1001b97e:	4630      	mov	r0, r6
1001b980:	4639      	mov	r1, r7
1001b982:	f002 fb3d 	bl	1001e000 <__aeabi_dcmpgt>
1001b986:	2800      	cmp	r0, #0
1001b988:	f43f adf3 	beq.w	1001b572 <_strtod_l+0x662>
1001b98c:	e7ca      	b.n	1001b924 <_strtod_l+0xa14>
1001b98e:	9b04      	ldr	r3, [sp, #16]
1001b990:	2b01      	cmp	r3, #1
1001b992:	d19f      	bne.n	1001b8d4 <_strtod_l+0x9c4>
1001b994:	2f00      	cmp	r7, #0
1001b996:	d19d      	bne.n	1001b8d4 <_strtod_l+0x9c4>
1001b998:	464f      	mov	r7, r9
1001b99a:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
1001b99c:	2322      	movs	r3, #34	@ 0x22
1001b99e:	4625      	mov	r5, r4
1001b9a0:	f8cb 3000 	str.w	r3, [fp]
1001b9a4:	f04f 0800 	mov.w	r8, #0
1001b9a8:	f04f 0900 	mov.w	r9, #0
1001b9ac:	e721      	b.n	1001b7f2 <_strtod_l+0x8e2>
1001b9ae:	2322      	movs	r3, #34	@ 0x22
1001b9b0:	f8cb 3000 	str.w	r3, [fp]
1001b9b4:	f8df 909c 	ldr.w	r9, [pc, #156]	@ 1001ba54 <_strtod_l+0xb44>
1001b9b8:	f04f 0800 	mov.w	r8, #0
1001b9bc:	e683      	b.n	1001b6c6 <_strtod_l+0x7b6>
1001b9be:	f101 7454 	add.w	r4, r1, #55574528	@ 0x3500000
1001b9c2:	9405      	str	r4, [sp, #20]
1001b9c4:	e5ce      	b.n	1001b564 <_strtod_l+0x654>
1001b9c6:	4664      	mov	r4, ip
1001b9c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b9ca:	2908      	cmp	r1, #8
1001b9cc:	4403      	add	r3, r0
1001b9ce:	930e      	str	r3, [sp, #56]	@ 0x38
1001b9d0:	f77f ab64 	ble.w	1001b09c <_strtod_l+0x18c>
1001b9d4:	2c10      	cmp	r4, #16
1001b9d6:	bfdc      	itt	le
1001b9d8:	eb09 0989 	addle.w	r9, r9, r9, lsl #2
1001b9dc:	eb02 0949 	addle.w	r9, r2, r9, lsl #1
1001b9e0:	2000      	movs	r0, #0
1001b9e2:	f7ff bb60 	b.w	1001b0a6 <_strtod_l+0x196>
1001b9e6:	4922      	ldr	r1, [pc, #136]	@ (1001ba70 <_strtod_l+0xb60>)
1001b9e8:	2201      	movs	r2, #1
1001b9ea:	4640      	mov	r0, r8
1001b9ec:	f000 fc36 	bl	1001c25c <strncmp>
1001b9f0:	2800      	cmp	r0, #0
1001b9f2:	f000 80a0 	beq.w	1001bb36 <_strtod_l+0xc26>
1001b9f6:	f04f 0a00 	mov.w	sl, #0
1001b9fa:	46d1      	mov	r9, sl
1001b9fc:	4655      	mov	r5, sl
1001b9fe:	4650      	mov	r0, sl
1001ba00:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
1001ba04:	4654      	mov	r4, sl
1001ba06:	46d4      	mov	ip, sl
1001ba08:	f7ff bba7 	b.w	1001b15a <_strtod_l+0x24a>
1001ba0c:	f644 631f 	movw	r3, #19999	@ 0x4e1f
1001ba10:	4299      	cmp	r1, r3
1001ba12:	bfa8      	it	ge
1001ba14:	4619      	movge	r1, r3
1001ba16:	910f      	str	r1, [sp, #60]	@ 0x3c
1001ba18:	e41e      	b.n	1001b258 <_strtod_l+0x348>
1001ba1a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1001ba1c:	4915      	ldr	r1, [pc, #84]	@ (1001ba74 <_strtod_l+0xb64>)
1001ba1e:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
1001ba22:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001ba26:	e9d1 0100 	ldrd	r0, r1, [r1]
1001ba2a:	f002 f859 	bl	1001dae0 <__aeabi_dmul>
1001ba2e:	4680      	mov	r8, r0
1001ba30:	4689      	mov	r9, r1
1001ba32:	e648      	b.n	1001b6c6 <_strtod_l+0x7b6>
1001ba34:	f3af 8000 	nop.w
1001ba38:	94a03595 	.word	0x94a03595
1001ba3c:	3fcfffff 	.word	0x3fcfffff
1001ba40:	94a03595 	.word	0x94a03595
1001ba44:	3fdfffff 	.word	0x3fdfffff
1001ba48:	35afe535 	.word	0x35afe535
1001ba4c:	3fe00000 	.word	0x3fe00000
1001ba50:	3fe00000 	.word	0x3fe00000
1001ba54:	7ff00000 	.word	0x7ff00000
1001ba58:	fffffbe2 	.word	0xfffffbe2
1001ba5c:	3ff00000 	.word	0x3ff00000
1001ba60:	7c9fffff 	.word	0x7c9fffff
1001ba64:	7fefffff 	.word	0x7fefffff
1001ba68:	bff00000 	.word	0xbff00000
1001ba6c:	1001ee3c 	.word	0x1001ee3c
1001ba70:	1001e7f8 	.word	0x1001e7f8
1001ba74:	1001ed50 	.word	0x1001ed50
1001ba78:	49a4      	ldr	r1, [pc, #656]	@ (1001bd0c <_strtod_l+0xdfc>)
1001ba7a:	a819      	add	r0, sp, #100	@ 0x64
1001ba7c:	f001 fb8a 	bl	1001d194 <__match>
1001ba80:	2800      	cmp	r0, #0
1001ba82:	f43f ab43 	beq.w	1001b10c <_strtod_l+0x1fc>
1001ba86:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001ba88:	49a1      	ldr	r1, [pc, #644]	@ (1001bd10 <_strtod_l+0xe00>)
1001ba8a:	3b01      	subs	r3, #1
1001ba8c:	a819      	add	r0, sp, #100	@ 0x64
1001ba8e:	9319      	str	r3, [sp, #100]	@ 0x64
1001ba90:	f001 fb80 	bl	1001d194 <__match>
1001ba94:	2800      	cmp	r0, #0
1001ba96:	d18d      	bne.n	1001b9b4 <_strtod_l+0xaa4>
1001ba98:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001ba9a:	3301      	adds	r3, #1
1001ba9c:	9319      	str	r3, [sp, #100]	@ 0x64
1001ba9e:	e789      	b.n	1001b9b4 <_strtod_l+0xaa4>
1001baa0:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
1001baa4:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
1001baa8:	e544      	b.n	1001b534 <_strtod_l+0x624>
1001baaa:	2000      	movs	r0, #0
1001baac:	f7ff bae8 	b.w	1001b080 <_strtod_l+0x170>
1001bab0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001bab2:	b13a      	cbz	r2, 1001bac4 <_strtod_l+0xbb4>
1001bab4:	2135      	movs	r1, #53	@ 0x35
1001bab6:	a81c      	add	r0, sp, #112	@ 0x70
1001bab8:	f7ff f8f2 	bl	1001aca0 <__copybits>
1001babc:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001babe:	4658      	mov	r0, fp
1001bac0:	f7fe fc54 	bl	1001a36c <_Bfree>
1001bac4:	3d01      	subs	r5, #1
1001bac6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
1001bac8:	2d04      	cmp	r5, #4
1001baca:	f200 81fc 	bhi.w	1001bec6 <_strtod_l+0xfb6>
1001bace:	e8df f005 	tbb	[pc, r5]
1001bad2:	2c03      	.short	0x2c03
1001bad4:	1e29      	.short	0x1e29
1001bad6:	03          	.byte	0x03
1001bad7:	00          	.byte	0x00
1001bad8:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001bada:	9204      	str	r2, [sp, #16]
1001badc:	f203 4233 	addw	r2, r3, #1075	@ 0x433
1001bae0:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001bae2:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
1001bae6:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
1001baea:	9305      	str	r3, [sp, #20]
1001baec:	05e1      	lsls	r1, r4, #23
1001baee:	d502      	bpl.n	1001baf6 <_strtod_l+0xbe6>
1001baf0:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
1001baf4:	9305      	str	r3, [sp, #20]
1001baf6:	4a87      	ldr	r2, [pc, #540]	@ (1001bd14 <_strtod_l+0xe04>)
1001baf8:	401a      	ands	r2, r3
1001bafa:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001bafe:	2a00      	cmp	r2, #0
1001bb00:	f47f ade1 	bne.w	1001b6c6 <_strtod_l+0x7b6>
1001bb04:	f7f9 fcd2 	bl	100154ac <__errno>
1001bb08:	2322      	movs	r3, #34	@ 0x22
1001bb0a:	6003      	str	r3, [r0, #0]
1001bb0c:	e5db      	b.n	1001b6c6 <_strtod_l+0x7b6>
1001bb0e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001bb12:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
1001bb16:	e9cd 2304 	strd	r2, r3, [sp, #16]
1001bb1a:	05e3      	lsls	r3, r4, #23
1001bb1c:	f57f aed7 	bpl.w	1001b8ce <_strtod_l+0x9be>
1001bb20:	9b05      	ldr	r3, [sp, #20]
1001bb22:	e7e5      	b.n	1001baf0 <_strtod_l+0xbe0>
1001bb24:	4b7b      	ldr	r3, [pc, #492]	@ (1001bd14 <_strtod_l+0xe04>)
1001bb26:	9305      	str	r3, [sp, #20]
1001bb28:	e7f7      	b.n	1001bb1a <_strtod_l+0xc0a>
1001bb2a:	e9dd 121c 	ldrd	r1, r2, [sp, #112]	@ 0x70
1001bb2e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001bb30:	e9cd 1204 	strd	r1, r2, [sp, #16]
1001bb34:	e7da      	b.n	1001baec <_strtod_l+0xbdc>
1001bb36:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001bb38:	4613      	mov	r3, r2
1001bb3a:	3201      	adds	r2, #1
1001bb3c:	9219      	str	r2, [sp, #100]	@ 0x64
1001bb3e:	785f      	ldrb	r7, [r3, #1]
1001bb40:	4605      	mov	r5, r0
1001bb42:	4681      	mov	r9, r0
1001bb44:	f7ff ba8f 	b.w	1001b066 <_strtod_l+0x156>
1001bb48:	4d73      	ldr	r5, [pc, #460]	@ (1001bd18 <_strtod_l+0xe08>)
1001bb4a:	f1c4 040f 	rsb	r4, r4, #15
1001bb4e:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
1001bb52:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001bb56:	e9d1 0100 	ldrd	r0, r1, [r1]
1001bb5a:	f001 ffc1 	bl	1001dae0 <__aeabi_dmul>
1001bb5e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001bb60:	1b1c      	subs	r4, r3, r4
1001bb62:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
1001bb66:	e9d5 2300 	ldrd	r2, r3, [r5]
1001bb6a:	f001 ffb9 	bl	1001dae0 <__aeabi_dmul>
1001bb6e:	4680      	mov	r8, r0
1001bb70:	4689      	mov	r9, r1
1001bb72:	e5a8      	b.n	1001b6c6 <_strtod_l+0x7b6>
1001bb74:	46a2      	mov	sl, r4
1001bb76:	900e      	str	r0, [sp, #56]	@ 0x38
1001bb78:	f7ff ba98 	b.w	1001b0ac <_strtod_l+0x19c>
1001bb7c:	4c67      	ldr	r4, [pc, #412]	@ (1001bd1c <_strtod_l+0xe0c>)
1001bb7e:	2300      	movs	r3, #0
1001bb80:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001bb84:	4c66      	ldr	r4, [pc, #408]	@ (1001bd20 <_strtod_l+0xe10>)
1001bb86:	2300      	movs	r3, #0
1001bb88:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001bb8c:	e4a8      	b.n	1001b4e0 <_strtod_l+0x5d0>
1001bb8e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
1001bb90:	4964      	ldr	r1, [pc, #400]	@ (1001bd24 <_strtod_l+0xe14>)
1001bb92:	463b      	mov	r3, r7
1001bb94:	46c4      	mov	ip, r8
1001bb96:	464f      	mov	r7, r9
1001bb98:	46ae      	mov	lr, r5
1001bb9a:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001bb9e:	f3c3 0213 	ubfx	r2, r3, #0, #20
1001bba2:	2800      	cmp	r0, #0
1001bba4:	d04c      	beq.n	1001bc40 <_strtod_l+0xd30>
1001bba6:	428a      	cmp	r2, r1
1001bba8:	f000 80fc 	beq.w	1001bda4 <_strtod_l+0xe94>
1001bbac:	2d00      	cmp	r5, #0
1001bbae:	f000 80f3 	beq.w	1001bd98 <_strtod_l+0xe88>
1001bbb2:	421d      	tst	r5, r3
1001bbb4:	d03b      	beq.n	1001bc2e <_strtod_l+0xd1e>
1001bbb6:	4640      	mov	r0, r8
1001bbb8:	4649      	mov	r1, r9
1001bbba:	9304      	str	r3, [sp, #16]
1001bbbc:	f7fe ff62 	bl	1001aa84 <__ulp>
1001bbc0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001bbc2:	4604      	mov	r4, r0
1001bbc4:	460d      	mov	r5, r1
1001bbc6:	2b00      	cmp	r3, #0
1001bbc8:	f000 8128 	beq.w	1001be1c <_strtod_l+0xf0c>
1001bbcc:	9b04      	ldr	r3, [sp, #16]
1001bbce:	f3c3 530a 	ubfx	r3, r3, #20, #11
1001bbd2:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
1001bbd6:	2b00      	cmp	r3, #0
1001bbd8:	f340 8151 	ble.w	1001be7e <_strtod_l+0xf6e>
1001bbdc:	051c      	lsls	r4, r3, #20
1001bbde:	f104 537f 	add.w	r3, r4, #1069547520	@ 0x3fc00000
1001bbe2:	2200      	movs	r2, #0
1001bbe4:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
1001bbe8:	f001 ff7a 	bl	1001dae0 <__aeabi_dmul>
1001bbec:	4602      	mov	r2, r0
1001bbee:	460b      	mov	r3, r1
1001bbf0:	4640      	mov	r0, r8
1001bbf2:	4649      	mov	r1, r9
1001bbf4:	f001 fdbe 	bl	1001d774 <__adddf3>
1001bbf8:	4680      	mov	r8, r0
1001bbfa:	4689      	mov	r9, r1
1001bbfc:	4b4a      	ldr	r3, [pc, #296]	@ (1001bd28 <_strtod_l+0xe18>)
1001bbfe:	4640      	mov	r0, r8
1001bc00:	4649      	mov	r1, r9
1001bc02:	2200      	movs	r2, #0
1001bc04:	f001 ff6c 	bl	1001dae0 <__aeabi_dmul>
1001bc08:	4b42      	ldr	r3, [pc, #264]	@ (1001bd14 <_strtod_l+0xe04>)
1001bc0a:	400b      	ands	r3, r1
1001bc0c:	4680      	mov	r8, r0
1001bc0e:	4689      	mov	r9, r1
1001bc10:	2b00      	cmp	r3, #0
1001bc12:	f47f ae8a 	bne.w	1001b92a <_strtod_l+0xa1a>
1001bc16:	2322      	movs	r3, #34	@ 0x22
1001bc18:	f8cb 3000 	str.w	r3, [fp]
1001bc1c:	e685      	b.n	1001b92a <_strtod_l+0xa1a>
1001bc1e:	f1be 0f00 	cmp.w	lr, #0
1001bc22:	f000 8089 	beq.w	1001bd38 <_strtod_l+0xe28>
1001bc26:	ea1e 0f03 	tst.w	lr, r3
1001bc2a:	f040 8089 	bne.w	1001bd40 <_strtod_l+0xe30>
1001bc2e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001bc30:	2b00      	cmp	r3, #0
1001bc32:	d1e3      	bne.n	1001bbfc <_strtod_l+0xcec>
1001bc34:	e679      	b.n	1001b92a <_strtod_l+0xa1a>
1001bc36:	f102 7354 	add.w	r3, r2, #55574528	@ 0x3500000
1001bc3a:	9305      	str	r3, [sp, #20]
1001bc3c:	f7ff bbac 	b.w	1001b398 <_strtod_l+0x488>
1001bc40:	2a00      	cmp	r2, #0
1001bc42:	d175      	bne.n	1001bd30 <_strtod_l+0xe20>
1001bc44:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
1001bc48:	4622      	mov	r2, r4
1001bc4a:	2c00      	cmp	r4, #0
1001bc4c:	d1e7      	bne.n	1001bc1e <_strtod_l+0xd0e>
1001bc4e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001bc50:	2a00      	cmp	r2, #0
1001bc52:	f040 80be 	bne.w	1001bdd2 <_strtod_l+0xec2>
1001bc56:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
1001bc5a:	0d24      	lsrs	r4, r4, #20
1001bc5c:	0524      	lsls	r4, r4, #20
1001bc5e:	f5a4 1480 	sub.w	r4, r4, #1048576	@ 0x100000
1001bc62:	ea6f 5314 	mvn.w	r3, r4, lsr #20
1001bc66:	ea6f 5303 	mvn.w	r3, r3, lsl #20
1001bc6a:	9305      	str	r3, [sp, #20]
1001bc6c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001bc70:	9304      	str	r3, [sp, #16]
1001bc72:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001bc76:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001bc78:	e5bb      	b.n	1001b7f2 <_strtod_l+0x8e2>
1001bc7a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001bc7e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001bc80:	4303      	orrs	r3, r0
1001bc82:	464f      	mov	r7, r9
1001bc84:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001bc88:	d1d1      	bne.n	1001bc2e <_strtod_l+0xd1e>
1001bc8a:	f3c1 0313 	ubfx	r3, r1, #0, #20
1001bc8e:	2b00      	cmp	r3, #0
1001bc90:	d1cd      	bne.n	1001bc2e <_strtod_l+0xd1e>
1001bc92:	f021 4400 	bic.w	r4, r1, #2147483648	@ 0x80000000
1001bc96:	0d24      	lsrs	r4, r4, #20
1001bc98:	0524      	lsls	r4, r4, #20
1001bc9a:	f1b4 6fd6 	cmp.w	r4, #112197632	@ 0x6b00000
1001bc9e:	4625      	mov	r5, r4
1001bca0:	d9c5      	bls.n	1001bc2e <_strtod_l+0xd1e>
1001bca2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001bca4:	6953      	ldr	r3, [r2, #20]
1001bca6:	b913      	cbnz	r3, 1001bcae <_strtod_l+0xd9e>
1001bca8:	6913      	ldr	r3, [r2, #16]
1001bcaa:	2b01      	cmp	r3, #1
1001bcac:	ddbf      	ble.n	1001bc2e <_strtod_l+0xd1e>
1001bcae:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001bcb0:	2201      	movs	r2, #1
1001bcb2:	4658      	mov	r0, fp
1001bcb4:	f7fe fd9c 	bl	1001a7f0 <__lshift>
1001bcb8:	4651      	mov	r1, sl
1001bcba:	9009      	str	r0, [sp, #36]	@ 0x24
1001bcbc:	f7fe fe10 	bl	1001a8e0 <__mcmp>
1001bcc0:	2800      	cmp	r0, #0
1001bcc2:	ddb4      	ble.n	1001bc2e <_strtod_l+0xd1e>
1001bcc4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001bcc6:	2b00      	cmp	r3, #0
1001bcc8:	d0c9      	beq.n	1001bc5e <_strtod_l+0xd4e>
1001bcca:	f5a5 1380 	sub.w	r3, r5, #1048576	@ 0x100000
1001bcce:	ea6f 5313 	mvn.w	r3, r3, lsr #20
1001bcd2:	ea6f 5303 	mvn.w	r3, r3, lsl #20
1001bcd6:	9305      	str	r3, [sp, #20]
1001bcd8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001bcdc:	9304      	str	r3, [sp, #16]
1001bcde:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001bce2:	e78b      	b.n	1001bbfc <_strtod_l+0xcec>
1001bce4:	4911      	ldr	r1, [pc, #68]	@ (1001bd2c <_strtod_l+0xe1c>)
1001bce6:	a819      	add	r0, sp, #100	@ 0x64
1001bce8:	aa1c      	add	r2, sp, #112	@ 0x70
1001bcea:	f001 fa6d 	bl	1001d1c8 <__hexnan>
1001bcee:	2805      	cmp	r0, #5
1001bcf0:	f47f aa56 	bne.w	1001b1a0 <_strtod_l+0x290>
1001bcf4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001bcf6:	f043 43ff 	orr.w	r3, r3, #2139095040	@ 0x7f800000
1001bcfa:	f443 03e0 	orr.w	r3, r3, #7340032	@ 0x700000
1001bcfe:	9305      	str	r3, [sp, #20]
1001bd00:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001bd02:	9304      	str	r3, [sp, #16]
1001bd04:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001bd08:	e4dd      	b.n	1001b6c6 <_strtod_l+0x7b6>
1001bd0a:	bf00      	nop
1001bd0c:	1001ee18 	.word	0x1001ee18
1001bd10:	1001ee1c 	.word	0x1001ee1c
1001bd14:	7ff00000 	.word	0x7ff00000
1001bd18:	1001ed50 	.word	0x1001ed50
1001bd1c:	bfe00000 	.word	0xbfe00000
1001bd20:	3fe00000 	.word	0x3fe00000
1001bd24:	000fffff 	.word	0x000fffff
1001bd28:	39500000 	.word	0x39500000
1001bd2c:	1001ee28 	.word	0x1001ee28
1001bd30:	2d00      	cmp	r5, #0
1001bd32:	f47f af78 	bne.w	1001bc26 <_strtod_l+0xd16>
1001bd36:	9a04      	ldr	r2, [sp, #16]
1001bd38:	ea1c 0f02 	tst.w	ip, r2
1001bd3c:	f43f af77 	beq.w	1001bc2e <_strtod_l+0xd1e>
1001bd40:	4640      	mov	r0, r8
1001bd42:	4649      	mov	r1, r9
1001bd44:	9304      	str	r3, [sp, #16]
1001bd46:	f7fe fe9d 	bl	1001aa84 <__ulp>
1001bd4a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001bd4c:	2b00      	cmp	r3, #0
1001bd4e:	d053      	beq.n	1001bdf8 <_strtod_l+0xee8>
1001bd50:	9b04      	ldr	r3, [sp, #16]
1001bd52:	f3c3 530a 	ubfx	r3, r3, #20, #11
1001bd56:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
1001bd5a:	2b00      	cmp	r3, #0
1001bd5c:	f340 809b 	ble.w	1001be96 <_strtod_l+0xf86>
1001bd60:	051c      	lsls	r4, r3, #20
1001bd62:	f104 537f 	add.w	r3, r4, #1069547520	@ 0x3fc00000
1001bd66:	2200      	movs	r2, #0
1001bd68:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
1001bd6c:	f001 feb8 	bl	1001dae0 <__aeabi_dmul>
1001bd70:	4602      	mov	r2, r0
1001bd72:	460b      	mov	r3, r1
1001bd74:	4640      	mov	r0, r8
1001bd76:	4649      	mov	r1, r9
1001bd78:	f001 fcfa 	bl	1001d770 <__aeabi_dsub>
1001bd7c:	2200      	movs	r2, #0
1001bd7e:	2300      	movs	r3, #0
1001bd80:	4680      	mov	r8, r0
1001bd82:	4689      	mov	r9, r1
1001bd84:	f002 f914 	bl	1001dfb0 <__aeabi_dcmpeq>
1001bd88:	2800      	cmp	r0, #0
1001bd8a:	f43f af37 	beq.w	1001bbfc <_strtod_l+0xcec>
1001bd8e:	e604      	b.n	1001b99a <_strtod_l+0xa8a>
1001bd90:	f04f 0900 	mov.w	r9, #0
1001bd94:	f7ff bae1 	b.w	1001b35a <_strtod_l+0x44a>
1001bd98:	9a04      	ldr	r2, [sp, #16]
1001bd9a:	ea1c 0f02 	tst.w	ip, r2
1001bd9e:	f43f af46 	beq.w	1001bc2e <_strtod_l+0xd1e>
1001bda2:	e708      	b.n	1001bbb6 <_strtod_l+0xca6>
1001bda4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001bda8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001bdaa:	4604      	mov	r4, r0
1001bdac:	2a00      	cmp	r2, #0
1001bdae:	d147      	bne.n	1001be40 <_strtod_l+0xf30>
1001bdb0:	4602      	mov	r2, r0
1001bdb2:	3201      	adds	r2, #1
1001bdb4:	d077      	beq.n	1001bea6 <_strtod_l+0xf96>
1001bdb6:	2d00      	cmp	r5, #0
1001bdb8:	d070      	beq.n	1001be9c <_strtod_l+0xf8c>
1001bdba:	421d      	tst	r5, r3
1001bdbc:	f43f adb5 	beq.w	1001b92a <_strtod_l+0xa1a>
1001bdc0:	e6f9      	b.n	1001bbb6 <_strtod_l+0xca6>
1001bdc2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001bdc6:	fa02 f303 	lsl.w	r3, r2, r3
1001bdca:	9a04      	ldr	r2, [sp, #16]
1001bdcc:	401a      	ands	r2, r3
1001bdce:	9204      	str	r2, [sp, #16]
1001bdd0:	e467      	b.n	1001b6a2 <_strtod_l+0x792>
1001bdd2:	4d3e      	ldr	r5, [pc, #248]	@ (1001becc <_strtod_l+0xfbc>)
1001bdd4:	401d      	ands	r5, r3
1001bdd6:	f1b5 6fd6 	cmp.w	r5, #112197632	@ 0x6b00000
1001bdda:	f63f af76 	bhi.w	1001bcca <_strtod_l+0xdba>
1001bdde:	f1b5 7f5c 	cmp.w	r5, #57671680	@ 0x3700000
1001bde2:	f63f af0b 	bhi.w	1001bbfc <_strtod_l+0xcec>
1001bde6:	2322      	movs	r3, #34	@ 0x22
1001bde8:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001bdea:	f8cb 3000 	str.w	r3, [fp]
1001bdee:	f04f 0800 	mov.w	r8, #0
1001bdf2:	f04f 0900 	mov.w	r9, #0
1001bdf6:	e4fc      	b.n	1001b7f2 <_strtod_l+0x8e2>
1001bdf8:	4602      	mov	r2, r0
1001bdfa:	460b      	mov	r3, r1
1001bdfc:	4640      	mov	r0, r8
1001bdfe:	4649      	mov	r1, r9
1001be00:	f001 fcb6 	bl	1001d770 <__aeabi_dsub>
1001be04:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
1001be06:	2200      	movs	r2, #0
1001be08:	2300      	movs	r3, #0
1001be0a:	4680      	mov	r8, r0
1001be0c:	4689      	mov	r9, r1
1001be0e:	4625      	mov	r5, r4
1001be10:	f002 f8ce 	bl	1001dfb0 <__aeabi_dcmpeq>
1001be14:	2800      	cmp	r0, #0
1001be16:	f43f acec 	beq.w	1001b7f2 <_strtod_l+0x8e2>
1001be1a:	e5bf      	b.n	1001b99c <_strtod_l+0xa8c>
1001be1c:	4640      	mov	r0, r8
1001be1e:	4649      	mov	r1, r9
1001be20:	462b      	mov	r3, r5
1001be22:	4622      	mov	r2, r4
1001be24:	f001 fca6 	bl	1001d774 <__adddf3>
1001be28:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001be2a:	4680      	mov	r8, r0
1001be2c:	4689      	mov	r9, r1
1001be2e:	e4e0      	b.n	1001b7f2 <_strtod_l+0x8e2>
1001be30:	f1c2 024b 	rsb	r2, r2, #75	@ 0x4b
1001be34:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001be38:	4093      	lsls	r3, r2
1001be3a:	400b      	ands	r3, r1
1001be3c:	9305      	str	r3, [sp, #20]
1001be3e:	e430      	b.n	1001b6a2 <_strtod_l+0x792>
1001be40:	4a22      	ldr	r2, [pc, #136]	@ (1001becc <_strtod_l+0xfbc>)
1001be42:	401a      	ands	r2, r3
1001be44:	f1b2 6fd4 	cmp.w	r2, #111149056	@ 0x6a00000
1001be48:	d909      	bls.n	1001be5e <_strtod_l+0xf4e>
1001be4a:	1c61      	adds	r1, r4, #1
1001be4c:	d032      	beq.n	1001beb4 <_strtod_l+0xfa4>
1001be4e:	f1be 0f00 	cmp.w	lr, #0
1001be52:	d033      	beq.n	1001bebc <_strtod_l+0xfac>
1001be54:	ea1e 0f03 	tst.w	lr, r3
1001be58:	f43f aed0 	beq.w	1001bbfc <_strtod_l+0xcec>
1001be5c:	e6ab      	b.n	1001bbb6 <_strtod_l+0xca6>
1001be5e:	0d10      	lsrs	r0, r2, #20
1001be60:	f1c0 006b 	rsb	r0, r0, #107	@ 0x6b
1001be64:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001be68:	4081      	lsls	r1, r0
1001be6a:	428c      	cmp	r4, r1
1001be6c:	d1ef      	bne.n	1001be4e <_strtod_l+0xf3e>
1001be6e:	f502 1380 	add.w	r3, r2, #1048576	@ 0x100000
1001be72:	9305      	str	r3, [sp, #20]
1001be74:	2300      	movs	r3, #0
1001be76:	9304      	str	r3, [sp, #16]
1001be78:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001be7c:	e6d7      	b.n	1001bc2e <_strtod_l+0xd1e>
1001be7e:	4640      	mov	r0, r8
1001be80:	4649      	mov	r1, r9
1001be82:	4622      	mov	r2, r4
1001be84:	462b      	mov	r3, r5
1001be86:	f001 fc75 	bl	1001d774 <__adddf3>
1001be8a:	4680      	mov	r8, r0
1001be8c:	4689      	mov	r9, r1
1001be8e:	e6b5      	b.n	1001bbfc <_strtod_l+0xcec>
1001be90:	4621      	mov	r1, r4
1001be92:	3401      	adds	r4, #1
1001be94:	e598      	b.n	1001b9c8 <_strtod_l+0xab8>
1001be96:	4602      	mov	r2, r0
1001be98:	460b      	mov	r3, r1
1001be9a:	e76b      	b.n	1001bd74 <_strtod_l+0xe64>
1001be9c:	ea10 0f0c 	tst.w	r0, ip
1001bea0:	f43f ad43 	beq.w	1001b92a <_strtod_l+0xa1a>
1001bea4:	e687      	b.n	1001bbb6 <_strtod_l+0xca6>
1001bea6:	4a0a      	ldr	r2, [pc, #40]	@ (1001bed0 <_strtod_l+0xfc0>)
1001bea8:	4293      	cmp	r3, r2
1001beaa:	f43f acc5 	beq.w	1001b838 <_strtod_l+0x928>
1001beae:	3201      	adds	r2, #1
1001beb0:	401a      	ands	r2, r3
1001beb2:	e7dc      	b.n	1001be6e <_strtod_l+0xf5e>
1001beb4:	4906      	ldr	r1, [pc, #24]	@ (1001bed0 <_strtod_l+0xfc0>)
1001beb6:	428b      	cmp	r3, r1
1001beb8:	d1d9      	bne.n	1001be6e <_strtod_l+0xf5e>
1001beba:	e4bd      	b.n	1001b838 <_strtod_l+0x928>
1001bebc:	ea14 0f0c 	tst.w	r4, ip
1001bec0:	f43f ae9c 	beq.w	1001bbfc <_strtod_l+0xcec>
1001bec4:	e677      	b.n	1001bbb6 <_strtod_l+0xca6>
1001bec6:	2300      	movs	r3, #0
1001bec8:	e610      	b.n	1001baec <_strtod_l+0xbdc>
1001beca:	bf00      	nop
1001becc:	7ff00000 	.word	0x7ff00000
1001bed0:	7fefffff 	.word	0x7fefffff

1001bed4 <_strtod_r>:
1001bed4:	4b01      	ldr	r3, [pc, #4]	@ (1001bedc <_strtod_r+0x8>)
1001bed6:	f7ff b81b 	b.w	1001af10 <_strtod_l>
1001beda:	bf00      	nop
1001bedc:	2000042c 	.word	0x2000042c

1001bee0 <_strtol_l.constprop.0>:
1001bee0:	2b24      	cmp	r3, #36	@ 0x24
1001bee2:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001bee6:	d843      	bhi.n	1001bf70 <_strtol_l.constprop.0+0x90>
1001bee8:	2b01      	cmp	r3, #1
1001beea:	d041      	beq.n	1001bf70 <_strtol_l.constprop.0+0x90>
1001beec:	4680      	mov	r8, r0
1001beee:	4849      	ldr	r0, [pc, #292]	@ (1001c014 <_strtol_l.constprop.0+0x134>)
1001bef0:	461f      	mov	r7, r3
1001bef2:	468e      	mov	lr, r1
1001bef4:	4675      	mov	r5, lr
1001bef6:	f81e bb01 	ldrb.w	fp, [lr], #1
1001befa:	f810 400b 	ldrb.w	r4, [r0, fp]
1001befe:	f014 0408 	ands.w	r4, r4, #8
1001bf02:	d1f7      	bne.n	1001bef4 <_strtol_l.constprop.0+0x14>
1001bf04:	f1bb 0f2d 	cmp.w	fp, #45	@ 0x2d
1001bf08:	d06f      	beq.n	1001bfea <_strtol_l.constprop.0+0x10a>
1001bf0a:	f1bb 0f2b 	cmp.w	fp, #43	@ 0x2b
1001bf0e:	bf08      	it	eq
1001bf10:	f89e b000 	ldrbeq.w	fp, [lr]
1001bf14:	f06f 4900 	mvn.w	r9, #2147483648	@ 0x80000000
1001bf18:	bf08      	it	eq
1001bf1a:	f105 0e02 	addeq.w	lr, r5, #2
1001bf1e:	bb73      	cbnz	r3, 1001bf7e <_strtol_l.constprop.0+0x9e>
1001bf20:	f1bb 0f30 	cmp.w	fp, #48	@ 0x30
1001bf24:	d04b      	beq.n	1001bfbe <_strtol_l.constprop.0+0xde>
1001bf26:	270a      	movs	r7, #10
1001bf28:	463b      	mov	r3, r7
1001bf2a:	2500      	movs	r5, #0
1001bf2c:	fbb9 f6f7 	udiv	r6, r9, r7
1001bf30:	4628      	mov	r0, r5
1001bf32:	fb07 9a16 	mls	sl, r7, r6, r9
1001bf36:	e005      	b.n	1001bf44 <_strtol_l.constprop.0+0x64>
1001bf38:	d03a      	beq.n	1001bfb0 <_strtol_l.constprop.0+0xd0>
1001bf3a:	fb07 c000 	mla	r0, r7, r0, ip
1001bf3e:	2501      	movs	r5, #1
1001bf40:	f81e bb01 	ldrb.w	fp, [lr], #1
1001bf44:	f1ab 0c30 	sub.w	ip, fp, #48	@ 0x30
1001bf48:	f1bc 0f09 	cmp.w	ip, #9
1001bf4c:	d906      	bls.n	1001bf5c <_strtol_l.constprop.0+0x7c>
1001bf4e:	f1ab 0c41 	sub.w	ip, fp, #65	@ 0x41
1001bf52:	f1bc 0f19 	cmp.w	ip, #25
1001bf56:	d819      	bhi.n	1001bf8c <_strtol_l.constprop.0+0xac>
1001bf58:	f1ab 0c37 	sub.w	ip, fp, #55	@ 0x37
1001bf5c:	4563      	cmp	r3, ip
1001bf5e:	dd1e      	ble.n	1001bf9e <_strtol_l.constprop.0+0xbe>
1001bf60:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
1001bf64:	d0ec      	beq.n	1001bf40 <_strtol_l.constprop.0+0x60>
1001bf66:	4286      	cmp	r6, r0
1001bf68:	d2e6      	bcs.n	1001bf38 <_strtol_l.constprop.0+0x58>
1001bf6a:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001bf6e:	e7e7      	b.n	1001bf40 <_strtol_l.constprop.0+0x60>
1001bf70:	f7f9 fa9c 	bl	100154ac <__errno>
1001bf74:	2316      	movs	r3, #22
1001bf76:	6003      	str	r3, [r0, #0]
1001bf78:	2000      	movs	r0, #0
1001bf7a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001bf7e:	2b10      	cmp	r3, #16
1001bf80:	d1d3      	bne.n	1001bf2a <_strtol_l.constprop.0+0x4a>
1001bf82:	f1bb 0f30 	cmp.w	fp, #48	@ 0x30
1001bf86:	d023      	beq.n	1001bfd0 <_strtol_l.constprop.0+0xf0>
1001bf88:	461f      	mov	r7, r3
1001bf8a:	e7ce      	b.n	1001bf2a <_strtol_l.constprop.0+0x4a>
1001bf8c:	f1ab 0c61 	sub.w	ip, fp, #97	@ 0x61
1001bf90:	f1bc 0f19 	cmp.w	ip, #25
1001bf94:	d803      	bhi.n	1001bf9e <_strtol_l.constprop.0+0xbe>
1001bf96:	f1ab 0c57 	sub.w	ip, fp, #87	@ 0x57
1001bf9a:	4563      	cmp	r3, ip
1001bf9c:	dce0      	bgt.n	1001bf60 <_strtol_l.constprop.0+0x80>
1001bf9e:	1c6b      	adds	r3, r5, #1
1001bfa0:	d02b      	beq.n	1001bffa <_strtol_l.constprop.0+0x11a>
1001bfa2:	b954      	cbnz	r4, 1001bfba <_strtol_l.constprop.0+0xda>
1001bfa4:	2a00      	cmp	r2, #0
1001bfa6:	d0e8      	beq.n	1001bf7a <_strtol_l.constprop.0+0x9a>
1001bfa8:	bb85      	cbnz	r5, 1001c00c <_strtol_l.constprop.0+0x12c>
1001bfaa:	6011      	str	r1, [r2, #0]
1001bfac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001bfb0:	45e2      	cmp	sl, ip
1001bfb2:	dac2      	bge.n	1001bf3a <_strtol_l.constprop.0+0x5a>
1001bfb4:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001bfb8:	e7c2      	b.n	1001bf40 <_strtol_l.constprop.0+0x60>
1001bfba:	4240      	negs	r0, r0
1001bfbc:	e7f2      	b.n	1001bfa4 <_strtol_l.constprop.0+0xc4>
1001bfbe:	f89e 3000 	ldrb.w	r3, [lr]
1001bfc2:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001bfc6:	2b58      	cmp	r3, #88	@ 0x58
1001bfc8:	d008      	beq.n	1001bfdc <_strtol_l.constprop.0+0xfc>
1001bfca:	2708      	movs	r7, #8
1001bfcc:	463b      	mov	r3, r7
1001bfce:	e7ac      	b.n	1001bf2a <_strtol_l.constprop.0+0x4a>
1001bfd0:	f89e 0000 	ldrb.w	r0, [lr]
1001bfd4:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
1001bfd8:	2858      	cmp	r0, #88	@ 0x58
1001bfda:	d1d5      	bne.n	1001bf88 <_strtol_l.constprop.0+0xa8>
1001bfdc:	2710      	movs	r7, #16
1001bfde:	f89e b001 	ldrb.w	fp, [lr, #1]
1001bfe2:	463b      	mov	r3, r7
1001bfe4:	f10e 0e02 	add.w	lr, lr, #2
1001bfe8:	e79f      	b.n	1001bf2a <_strtol_l.constprop.0+0x4a>
1001bfea:	f89e b000 	ldrb.w	fp, [lr]
1001bfee:	f04f 4900 	mov.w	r9, #2147483648	@ 0x80000000
1001bff2:	f105 0e02 	add.w	lr, r5, #2
1001bff6:	2401      	movs	r4, #1
1001bff8:	e791      	b.n	1001bf1e <_strtol_l.constprop.0+0x3e>
1001bffa:	2322      	movs	r3, #34	@ 0x22
1001bffc:	f8c8 3000 	str.w	r3, [r8]
1001c000:	b132      	cbz	r2, 1001c010 <_strtol_l.constprop.0+0x130>
1001c002:	f10e 31ff 	add.w	r1, lr, #4294967295	@ 0xffffffff
1001c006:	4648      	mov	r0, r9
1001c008:	6011      	str	r1, [r2, #0]
1001c00a:	e7cf      	b.n	1001bfac <_strtol_l.constprop.0+0xcc>
1001c00c:	4681      	mov	r9, r0
1001c00e:	e7f8      	b.n	1001c002 <_strtol_l.constprop.0+0x122>
1001c010:	4648      	mov	r0, r9
1001c012:	e7b2      	b.n	1001bf7a <_strtol_l.constprop.0+0x9a>
1001c014:	1001eae1 	.word	0x1001eae1

1001c018 <_strtol_r>:
1001c018:	f7ff bf62 	b.w	1001bee0 <_strtol_l.constprop.0>

1001c01c <_strtoul_l.constprop.0>:
1001c01c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001c020:	4607      	mov	r7, r0
1001c022:	4849      	ldr	r0, [pc, #292]	@ (1001c148 <_strtoul_l.constprop.0+0x12c>)
1001c024:	460e      	mov	r6, r1
1001c026:	4635      	mov	r5, r6
1001c028:	f816 eb01 	ldrb.w	lr, [r6], #1
1001c02c:	f810 c00e 	ldrb.w	ip, [r0, lr]
1001c030:	f01c 0c08 	ands.w	ip, ip, #8
1001c034:	d1f7      	bne.n	1001c026 <_strtoul_l.constprop.0+0xa>
1001c036:	f1be 0f2d 	cmp.w	lr, #45	@ 0x2d
1001c03a:	d05a      	beq.n	1001c0f2 <_strtoul_l.constprop.0+0xd6>
1001c03c:	f1be 0f2b 	cmp.w	lr, #43	@ 0x2b
1001c040:	bf03      	ittte	eq
1001c042:	f896 e000 	ldrbeq.w	lr, [r6]
1001c046:	4664      	moveq	r4, ip
1001c048:	1cae      	addeq	r6, r5, #2
1001c04a:	4664      	movne	r4, ip
1001c04c:	b94b      	cbnz	r3, 1001c062 <_strtoul_l.constprop.0+0x46>
1001c04e:	f1be 0f30 	cmp.w	lr, #48	@ 0x30
1001c052:	d05c      	beq.n	1001c10e <_strtoul_l.constprop.0+0xf2>
1001c054:	230a      	movs	r3, #10
1001c056:	f8df 80f4 	ldr.w	r8, [pc, #244]	@ 1001c14c <_strtoul_l.constprop.0+0x130>
1001c05a:	f04f 0a05 	mov.w	sl, #5
1001c05e:	4699      	mov	r9, r3
1001c060:	e00a      	b.n	1001c078 <_strtoul_l.constprop.0+0x5c>
1001c062:	2b10      	cmp	r3, #16
1001c064:	d04a      	beq.n	1001c0fc <_strtoul_l.constprop.0+0xe0>
1001c066:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1001c06a:	fbb8 f8f3 	udiv	r8, r8, r3
1001c06e:	fb03 fa08 	mul.w	sl, r3, r8
1001c072:	ea6f 0a0a 	mvn.w	sl, sl
1001c076:	4699      	mov	r9, r3
1001c078:	2500      	movs	r5, #0
1001c07a:	4628      	mov	r0, r5
1001c07c:	e005      	b.n	1001c08a <_strtoul_l.constprop.0+0x6e>
1001c07e:	d02c      	beq.n	1001c0da <_strtoul_l.constprop.0+0xbe>
1001c080:	fb09 c000 	mla	r0, r9, r0, ip
1001c084:	2501      	movs	r5, #1
1001c086:	f816 eb01 	ldrb.w	lr, [r6], #1
1001c08a:	f1ae 0c30 	sub.w	ip, lr, #48	@ 0x30
1001c08e:	f1bc 0f09 	cmp.w	ip, #9
1001c092:	d906      	bls.n	1001c0a2 <_strtoul_l.constprop.0+0x86>
1001c094:	f1ae 0c41 	sub.w	ip, lr, #65	@ 0x41
1001c098:	f1bc 0f19 	cmp.w	ip, #25
1001c09c:	d80b      	bhi.n	1001c0b6 <_strtoul_l.constprop.0+0x9a>
1001c09e:	f1ae 0c37 	sub.w	ip, lr, #55	@ 0x37
1001c0a2:	4563      	cmp	r3, ip
1001c0a4:	dd10      	ble.n	1001c0c8 <_strtoul_l.constprop.0+0xac>
1001c0a6:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
1001c0aa:	d0ec      	beq.n	1001c086 <_strtoul_l.constprop.0+0x6a>
1001c0ac:	4540      	cmp	r0, r8
1001c0ae:	d9e6      	bls.n	1001c07e <_strtoul_l.constprop.0+0x62>
1001c0b0:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001c0b4:	e7e7      	b.n	1001c086 <_strtoul_l.constprop.0+0x6a>
1001c0b6:	f1ae 0c61 	sub.w	ip, lr, #97	@ 0x61
1001c0ba:	f1bc 0f19 	cmp.w	ip, #25
1001c0be:	d803      	bhi.n	1001c0c8 <_strtoul_l.constprop.0+0xac>
1001c0c0:	f1ae 0c57 	sub.w	ip, lr, #87	@ 0x57
1001c0c4:	4563      	cmp	r3, ip
1001c0c6:	dcee      	bgt.n	1001c0a6 <_strtoul_l.constprop.0+0x8a>
1001c0c8:	1c6b      	adds	r3, r5, #1
1001c0ca:	d00b      	beq.n	1001c0e4 <_strtoul_l.constprop.0+0xc8>
1001c0cc:	b104      	cbz	r4, 1001c0d0 <_strtoul_l.constprop.0+0xb4>
1001c0ce:	4240      	negs	r0, r0
1001c0d0:	b10a      	cbz	r2, 1001c0d6 <_strtoul_l.constprop.0+0xba>
1001c0d2:	b965      	cbnz	r5, 1001c0ee <_strtoul_l.constprop.0+0xd2>
1001c0d4:	6011      	str	r1, [r2, #0]
1001c0d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001c0da:	45d4      	cmp	ip, sl
1001c0dc:	ddd0      	ble.n	1001c080 <_strtoul_l.constprop.0+0x64>
1001c0de:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001c0e2:	e7d0      	b.n	1001c086 <_strtoul_l.constprop.0+0x6a>
1001c0e4:	2322      	movs	r3, #34	@ 0x22
1001c0e6:	603b      	str	r3, [r7, #0]
1001c0e8:	4628      	mov	r0, r5
1001c0ea:	2a00      	cmp	r2, #0
1001c0ec:	d0f3      	beq.n	1001c0d6 <_strtoul_l.constprop.0+0xba>
1001c0ee:	1e71      	subs	r1, r6, #1
1001c0f0:	e7f0      	b.n	1001c0d4 <_strtoul_l.constprop.0+0xb8>
1001c0f2:	f896 e000 	ldrb.w	lr, [r6]
1001c0f6:	2401      	movs	r4, #1
1001c0f8:	1cae      	adds	r6, r5, #2
1001c0fa:	e7a7      	b.n	1001c04c <_strtoul_l.constprop.0+0x30>
1001c0fc:	f1be 0f30 	cmp.w	lr, #48	@ 0x30
1001c100:	d011      	beq.n	1001c126 <_strtoul_l.constprop.0+0x10a>
1001c102:	f04f 0a0f 	mov.w	sl, #15
1001c106:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001c10a:	4699      	mov	r9, r3
1001c10c:	e7b4      	b.n	1001c078 <_strtoul_l.constprop.0+0x5c>
1001c10e:	7833      	ldrb	r3, [r6, #0]
1001c110:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001c114:	2b58      	cmp	r3, #88	@ 0x58
1001c116:	d00b      	beq.n	1001c130 <_strtoul_l.constprop.0+0x114>
1001c118:	2308      	movs	r3, #8
1001c11a:	f04f 0a07 	mov.w	sl, #7
1001c11e:	f06f 4860 	mvn.w	r8, #3758096384	@ 0xe0000000
1001c122:	4699      	mov	r9, r3
1001c124:	e7a8      	b.n	1001c078 <_strtoul_l.constprop.0+0x5c>
1001c126:	7830      	ldrb	r0, [r6, #0]
1001c128:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
1001c12c:	2858      	cmp	r0, #88	@ 0x58
1001c12e:	d1e8      	bne.n	1001c102 <_strtoul_l.constprop.0+0xe6>
1001c130:	f04f 0910 	mov.w	r9, #16
1001c134:	f896 e001 	ldrb.w	lr, [r6, #1]
1001c138:	f04f 0a0f 	mov.w	sl, #15
1001c13c:	3602      	adds	r6, #2
1001c13e:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001c142:	464b      	mov	r3, r9
1001c144:	e798      	b.n	1001c078 <_strtoul_l.constprop.0+0x5c>
1001c146:	bf00      	nop
1001c148:	1001eae1 	.word	0x1001eae1
1001c14c:	19999999 	.word	0x19999999

1001c150 <_strtoul_r>:
1001c150:	f7ff bf64 	b.w	1001c01c <_strtoul_l.constprop.0>

1001c154 <sprintf>:
1001c154:	b40e      	push	{r1, r2, r3}
1001c156:	b510      	push	{r4, lr}
1001c158:	b09d      	sub	sp, #116	@ 0x74
1001c15a:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
1001c15e:	ab1f      	add	r3, sp, #124	@ 0x7c
1001c160:	9104      	str	r1, [sp, #16]
1001c162:	9107      	str	r1, [sp, #28]
1001c164:	4909      	ldr	r1, [pc, #36]	@ (1001c18c <sprintf+0x38>)
1001c166:	f853 2b04 	ldr.w	r2, [r3], #4
1001c16a:	9002      	str	r0, [sp, #8]
1001c16c:	9006      	str	r0, [sp, #24]
1001c16e:	4c08      	ldr	r4, [pc, #32]	@ (1001c190 <sprintf+0x3c>)
1001c170:	6808      	ldr	r0, [r1, #0]
1001c172:	9301      	str	r3, [sp, #4]
1001c174:	a902      	add	r1, sp, #8
1001c176:	9405      	str	r4, [sp, #20]
1001c178:	f7fa fe56 	bl	10016e28 <_svfprintf_r>
1001c17c:	9b02      	ldr	r3, [sp, #8]
1001c17e:	2200      	movs	r2, #0
1001c180:	701a      	strb	r2, [r3, #0]
1001c182:	b01d      	add	sp, #116	@ 0x74
1001c184:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001c188:	b003      	add	sp, #12
1001c18a:	4770      	bx	lr
1001c18c:	20000598 	.word	0x20000598
1001c190:	ffff0208 	.word	0xffff0208

1001c194 <__ascii_wctomb>:
1001c194:	b149      	cbz	r1, 1001c1aa <__ascii_wctomb+0x16>
1001c196:	2aff      	cmp	r2, #255	@ 0xff
1001c198:	d802      	bhi.n	1001c1a0 <__ascii_wctomb+0xc>
1001c19a:	700a      	strb	r2, [r1, #0]
1001c19c:	2001      	movs	r0, #1
1001c19e:	4770      	bx	lr
1001c1a0:	238a      	movs	r3, #138	@ 0x8a
1001c1a2:	6003      	str	r3, [r0, #0]
1001c1a4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001c1a8:	4770      	bx	lr
1001c1aa:	4608      	mov	r0, r1
1001c1ac:	4770      	bx	lr
1001c1ae:	bf00      	nop

1001c1b0 <__swbuf_r>:
1001c1b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001c1b2:	460d      	mov	r5, r1
1001c1b4:	4614      	mov	r4, r2
1001c1b6:	4606      	mov	r6, r0
1001c1b8:	b110      	cbz	r0, 1001c1c0 <__swbuf_r+0x10>
1001c1ba:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001c1bc:	2b00      	cmp	r3, #0
1001c1be:	d04a      	beq.n	1001c256 <__swbuf_r+0xa6>
1001c1c0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001c1c4:	69a3      	ldr	r3, [r4, #24]
1001c1c6:	60a3      	str	r3, [r4, #8]
1001c1c8:	0710      	lsls	r0, r2, #28
1001c1ca:	d51b      	bpl.n	1001c204 <__swbuf_r+0x54>
1001c1cc:	6923      	ldr	r3, [r4, #16]
1001c1ce:	b1cb      	cbz	r3, 1001c204 <__swbuf_r+0x54>
1001c1d0:	b2ed      	uxtb	r5, r5
1001c1d2:	0491      	lsls	r1, r2, #18
1001c1d4:	462f      	mov	r7, r5
1001c1d6:	d521      	bpl.n	1001c21c <__swbuf_r+0x6c>
1001c1d8:	6822      	ldr	r2, [r4, #0]
1001c1da:	6961      	ldr	r1, [r4, #20]
1001c1dc:	1ad3      	subs	r3, r2, r3
1001c1de:	4299      	cmp	r1, r3
1001c1e0:	dd28      	ble.n	1001c234 <__swbuf_r+0x84>
1001c1e2:	3301      	adds	r3, #1
1001c1e4:	68a1      	ldr	r1, [r4, #8]
1001c1e6:	3901      	subs	r1, #1
1001c1e8:	60a1      	str	r1, [r4, #8]
1001c1ea:	1c51      	adds	r1, r2, #1
1001c1ec:	6021      	str	r1, [r4, #0]
1001c1ee:	7015      	strb	r5, [r2, #0]
1001c1f0:	6962      	ldr	r2, [r4, #20]
1001c1f2:	429a      	cmp	r2, r3
1001c1f4:	d026      	beq.n	1001c244 <__swbuf_r+0x94>
1001c1f6:	89a3      	ldrh	r3, [r4, #12]
1001c1f8:	07db      	lsls	r3, r3, #31
1001c1fa:	d501      	bpl.n	1001c200 <__swbuf_r+0x50>
1001c1fc:	2d0a      	cmp	r5, #10
1001c1fe:	d021      	beq.n	1001c244 <__swbuf_r+0x94>
1001c200:	4638      	mov	r0, r7
1001c202:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001c204:	4621      	mov	r1, r4
1001c206:	4630      	mov	r0, r6
1001c208:	f7f8 fed4 	bl	10014fb4 <__swsetup_r>
1001c20c:	bb00      	cbnz	r0, 1001c250 <__swbuf_r+0xa0>
1001c20e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001c212:	6923      	ldr	r3, [r4, #16]
1001c214:	b2ed      	uxtb	r5, r5
1001c216:	0491      	lsls	r1, r2, #18
1001c218:	462f      	mov	r7, r5
1001c21a:	d4dd      	bmi.n	1001c1d8 <__swbuf_r+0x28>
1001c21c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001c220:	81a2      	strh	r2, [r4, #12]
1001c222:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001c224:	6961      	ldr	r1, [r4, #20]
1001c226:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001c22a:	6662      	str	r2, [r4, #100]	@ 0x64
1001c22c:	6822      	ldr	r2, [r4, #0]
1001c22e:	1ad3      	subs	r3, r2, r3
1001c230:	4299      	cmp	r1, r3
1001c232:	dcd6      	bgt.n	1001c1e2 <__swbuf_r+0x32>
1001c234:	4621      	mov	r1, r4
1001c236:	4630      	mov	r0, r6
1001c238:	f7f8 fafa 	bl	10014830 <_fflush_r>
1001c23c:	b940      	cbnz	r0, 1001c250 <__swbuf_r+0xa0>
1001c23e:	6822      	ldr	r2, [r4, #0]
1001c240:	2301      	movs	r3, #1
1001c242:	e7cf      	b.n	1001c1e4 <__swbuf_r+0x34>
1001c244:	4621      	mov	r1, r4
1001c246:	4630      	mov	r0, r6
1001c248:	f7f8 faf2 	bl	10014830 <_fflush_r>
1001c24c:	2800      	cmp	r0, #0
1001c24e:	d0d7      	beq.n	1001c200 <__swbuf_r+0x50>
1001c250:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001c254:	e7d4      	b.n	1001c200 <__swbuf_r+0x50>
1001c256:	f7f8 fce3 	bl	10014c20 <__sinit>
1001c25a:	e7b1      	b.n	1001c1c0 <__swbuf_r+0x10>

1001c25c <strncmp>:
1001c25c:	b3b2      	cbz	r2, 1001c2cc <strncmp+0x70>
1001c25e:	ea40 0301 	orr.w	r3, r0, r1
1001c262:	079b      	lsls	r3, r3, #30
1001c264:	b530      	push	{r4, r5, lr}
1001c266:	4684      	mov	ip, r0
1001c268:	d118      	bne.n	1001c29c <strncmp+0x40>
1001c26a:	2a03      	cmp	r2, #3
1001c26c:	d916      	bls.n	1001c29c <strncmp+0x40>
1001c26e:	4604      	mov	r4, r0
1001c270:	460b      	mov	r3, r1
1001c272:	e006      	b.n	1001c282 <strncmp+0x26>
1001c274:	3a04      	subs	r2, #4
1001c276:	d02b      	beq.n	1001c2d0 <strncmp+0x74>
1001c278:	f01e 3f80 	tst.w	lr, #2155905152	@ 0x80808080
1001c27c:	d128      	bne.n	1001c2d0 <strncmp+0x74>
1001c27e:	2a03      	cmp	r2, #3
1001c280:	d92a      	bls.n	1001c2d8 <strncmp+0x7c>
1001c282:	6820      	ldr	r0, [r4, #0]
1001c284:	4619      	mov	r1, r3
1001c286:	f853 5b04 	ldr.w	r5, [r3], #4
1001c28a:	f1a0 3e01 	sub.w	lr, r0, #16843009	@ 0x1010101
1001c28e:	42a8      	cmp	r0, r5
1001c290:	46a4      	mov	ip, r4
1001c292:	ea2e 0e00 	bic.w	lr, lr, r0
1001c296:	f104 0404 	add.w	r4, r4, #4
1001c29a:	d0eb      	beq.n	1001c274 <strncmp+0x18>
1001c29c:	f89c 0000 	ldrb.w	r0, [ip]
1001c2a0:	780c      	ldrb	r4, [r1, #0]
1001c2a2:	4284      	cmp	r4, r0
1001c2a4:	d116      	bne.n	1001c2d4 <strncmp+0x78>
1001c2a6:	2a01      	cmp	r2, #1
1001c2a8:	d012      	beq.n	1001c2d0 <strncmp+0x74>
1001c2aa:	46e6      	mov	lr, ip
1001c2ac:	b168      	cbz	r0, 1001c2ca <strncmp+0x6e>
1001c2ae:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
1001c2b2:	f811 4f01 	ldrb.w	r4, [r1, #1]!
1001c2b6:	eba2 030e 	sub.w	r3, r2, lr
1001c2ba:	42a0      	cmp	r0, r4
1001c2bc:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
1001c2c0:	d108      	bne.n	1001c2d4 <strncmp+0x78>
1001c2c2:	eb1c 0303 	adds.w	r3, ip, r3
1001c2c6:	d1f1      	bne.n	1001c2ac <strncmp+0x50>
1001c2c8:	4618      	mov	r0, r3
1001c2ca:	bd30      	pop	{r4, r5, pc}
1001c2cc:	4610      	mov	r0, r2
1001c2ce:	4770      	bx	lr
1001c2d0:	2000      	movs	r0, #0
1001c2d2:	bd30      	pop	{r4, r5, pc}
1001c2d4:	1b00      	subs	r0, r0, r4
1001c2d6:	bd30      	pop	{r4, r5, pc}
1001c2d8:	46a4      	mov	ip, r4
1001c2da:	4619      	mov	r1, r3
1001c2dc:	e7de      	b.n	1001c29c <strncmp+0x40>
1001c2de:	bf00      	nop

1001c2e0 <stpncpy>:
1001c2e0:	ea41 0300 	orr.w	r3, r1, r0
1001c2e4:	079b      	lsls	r3, r3, #30
1001c2e6:	b410      	push	{r4}
1001c2e8:	d101      	bne.n	1001c2ee <stpncpy+0xe>
1001c2ea:	2a03      	cmp	r2, #3
1001c2ec:	d81a      	bhi.n	1001c324 <stpncpy+0x44>
1001c2ee:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
1001c2f2:	e007      	b.n	1001c304 <stpncpy+0x24>
1001c2f4:	f81c 1f01 	ldrb.w	r1, [ip, #1]!
1001c2f8:	f803 1b01 	strb.w	r1, [r3], #1
1001c2fc:	1e54      	subs	r4, r2, #1
1001c2fe:	b131      	cbz	r1, 1001c30e <stpncpy+0x2e>
1001c300:	4622      	mov	r2, r4
1001c302:	4618      	mov	r0, r3
1001c304:	4603      	mov	r3, r0
1001c306:	2a00      	cmp	r2, #0
1001c308:	d1f4      	bne.n	1001c2f4 <stpncpy+0x14>
1001c30a:	bc10      	pop	{r4}
1001c30c:	4770      	bx	lr
1001c30e:	4402      	add	r2, r0
1001c310:	b1f4      	cbz	r4, 1001c350 <stpncpy+0x70>
1001c312:	f803 1b01 	strb.w	r1, [r3], #1
1001c316:	4293      	cmp	r3, r2
1001c318:	d1fb      	bne.n	1001c312 <stpncpy+0x32>
1001c31a:	2800      	cmp	r0, #0
1001c31c:	bf08      	it	eq
1001c31e:	4610      	moveq	r0, r2
1001c320:	bc10      	pop	{r4}
1001c322:	4770      	bx	lr
1001c324:	468c      	mov	ip, r1
1001c326:	e004      	b.n	1001c332 <stpncpy+0x52>
1001c328:	3a04      	subs	r2, #4
1001c32a:	2a03      	cmp	r2, #3
1001c32c:	f840 4b04 	str.w	r4, [r0], #4
1001c330:	d90c      	bls.n	1001c34c <stpncpy+0x6c>
1001c332:	f8dc 4000 	ldr.w	r4, [ip]
1001c336:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
1001c33a:	ea23 0304 	bic.w	r3, r3, r4
1001c33e:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
1001c342:	4661      	mov	r1, ip
1001c344:	f10c 0c04 	add.w	ip, ip, #4
1001c348:	d0ee      	beq.n	1001c328 <stpncpy+0x48>
1001c34a:	e7d0      	b.n	1001c2ee <stpncpy+0xe>
1001c34c:	4661      	mov	r1, ip
1001c34e:	e7ce      	b.n	1001c2ee <stpncpy+0xe>
1001c350:	461a      	mov	r2, r3
1001c352:	e7e2      	b.n	1001c31a <stpncpy+0x3a>

1001c354 <_isatty_r>:
1001c354:	b538      	push	{r3, r4, r5, lr}
1001c356:	4d07      	ldr	r5, [pc, #28]	@ (1001c374 <_isatty_r+0x20>)
1001c358:	2200      	movs	r2, #0
1001c35a:	4604      	mov	r4, r0
1001c35c:	4608      	mov	r0, r1
1001c35e:	602a      	str	r2, [r5, #0]
1001c360:	f7f2 fd76 	bl	1000ee50 <_isatty>
1001c364:	1c43      	adds	r3, r0, #1
1001c366:	d000      	beq.n	1001c36a <_isatty_r+0x16>
1001c368:	bd38      	pop	{r3, r4, r5, pc}
1001c36a:	682b      	ldr	r3, [r5, #0]
1001c36c:	2b00      	cmp	r3, #0
1001c36e:	d0fb      	beq.n	1001c368 <_isatty_r+0x14>
1001c370:	6023      	str	r3, [r4, #0]
1001c372:	bd38      	pop	{r3, r4, r5, pc}
1001c374:	200015c4 	.word	0x200015c4

1001c378 <_strtoll_l.constprop.0>:
1001c378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001c37c:	b085      	sub	sp, #20
1001c37e:	4692      	mov	sl, r2
1001c380:	4a5b      	ldr	r2, [pc, #364]	@ (1001c4f0 <_strtoll_l.constprop.0+0x178>)
1001c382:	9003      	str	r0, [sp, #12]
1001c384:	4689      	mov	r9, r1
1001c386:	461e      	mov	r6, r3
1001c388:	460d      	mov	r5, r1
1001c38a:	4629      	mov	r1, r5
1001c38c:	f815 4b01 	ldrb.w	r4, [r5], #1
1001c390:	5d13      	ldrb	r3, [r2, r4]
1001c392:	f013 0308 	ands.w	r3, r3, #8
1001c396:	d1f8      	bne.n	1001c38a <_strtoll_l.constprop.0+0x12>
1001c398:	2c2d      	cmp	r4, #45	@ 0x2d
1001c39a:	d07d      	beq.n	1001c498 <_strtoll_l.constprop.0+0x120>
1001c39c:	2c2b      	cmp	r4, #43	@ 0x2b
1001c39e:	d041      	beq.n	1001c424 <_strtoll_l.constprop.0+0xac>
1001c3a0:	9302      	str	r3, [sp, #8]
1001c3a2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001c3a6:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
1001c3aa:	e9cd 2300 	strd	r2, r3, [sp]
1001c3ae:	2e00      	cmp	r6, #0
1001c3b0:	d143      	bne.n	1001c43a <_strtoll_l.constprop.0+0xc2>
1001c3b2:	2c30      	cmp	r4, #48	@ 0x30
1001c3b4:	d079      	beq.n	1001c4aa <_strtoll_l.constprop.0+0x132>
1001c3b6:	270a      	movs	r7, #10
1001c3b8:	46b0      	mov	r8, r6
1001c3ba:	463e      	mov	r6, r7
1001c3bc:	e9dd 0100 	ldrd	r0, r1, [sp]
1001c3c0:	463a      	mov	r2, r7
1001c3c2:	4643      	mov	r3, r8
1001c3c4:	f001 fed4 	bl	1001e170 <__aeabi_uldivmod>
1001c3c8:	2300      	movs	r3, #0
1001c3ca:	468e      	mov	lr, r1
1001c3cc:	4683      	mov	fp, r0
1001c3ce:	4619      	mov	r1, r3
1001c3d0:	4618      	mov	r0, r3
1001c3d2:	46a4      	mov	ip, r4
1001c3d4:	e010      	b.n	1001c3f8 <_strtoll_l.constprop.0+0x80>
1001c3d6:	458e      	cmp	lr, r1
1001c3d8:	bf08      	it	eq
1001c3da:	4583      	cmpeq	fp, r0
1001c3dc:	d04c      	beq.n	1001c478 <_strtoll_l.constprop.0+0x100>
1001c3de:	fb00 f308 	mul.w	r3, r0, r8
1001c3e2:	fb07 3301 	mla	r3, r7, r1, r3
1001c3e6:	fba0 0107 	umull	r0, r1, r0, r7
1001c3ea:	440b      	add	r3, r1
1001c3ec:	1820      	adds	r0, r4, r0
1001c3ee:	eb43 71e4 	adc.w	r1, r3, r4, asr #31
1001c3f2:	2301      	movs	r3, #1
1001c3f4:	f815 cb01 	ldrb.w	ip, [r5], #1
1001c3f8:	f1ac 0430 	sub.w	r4, ip, #48	@ 0x30
1001c3fc:	2c09      	cmp	r4, #9
1001c3fe:	d905      	bls.n	1001c40c <_strtoll_l.constprop.0+0x94>
1001c400:	f1ac 0441 	sub.w	r4, ip, #65	@ 0x41
1001c404:	2c19      	cmp	r4, #25
1001c406:	d81e      	bhi.n	1001c446 <_strtoll_l.constprop.0+0xce>
1001c408:	f1ac 0437 	sub.w	r4, ip, #55	@ 0x37
1001c40c:	42a6      	cmp	r6, r4
1001c40e:	dd22      	ble.n	1001c456 <_strtoll_l.constprop.0+0xde>
1001c410:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
1001c414:	d0ee      	beq.n	1001c3f4 <_strtoll_l.constprop.0+0x7c>
1001c416:	4583      	cmp	fp, r0
1001c418:	eb7e 0301 	sbcs.w	r3, lr, r1
1001c41c:	d2db      	bcs.n	1001c3d6 <_strtoll_l.constprop.0+0x5e>
1001c41e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001c422:	e7e7      	b.n	1001c3f4 <_strtoll_l.constprop.0+0x7c>
1001c424:	782c      	ldrb	r4, [r5, #0]
1001c426:	9302      	str	r3, [sp, #8]
1001c428:	1c8d      	adds	r5, r1, #2
1001c42a:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
1001c42e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001c432:	e9cd 1300 	strd	r1, r3, [sp]
1001c436:	2e00      	cmp	r6, #0
1001c438:	d0bb      	beq.n	1001c3b2 <_strtoll_l.constprop.0+0x3a>
1001c43a:	2e10      	cmp	r6, #16
1001c43c:	d03e      	beq.n	1001c4bc <_strtoll_l.constprop.0+0x144>
1001c43e:	4637      	mov	r7, r6
1001c440:	ea4f 78e6 	mov.w	r8, r6, asr #31
1001c444:	e7ba      	b.n	1001c3bc <_strtoll_l.constprop.0+0x44>
1001c446:	f1ac 0461 	sub.w	r4, ip, #97	@ 0x61
1001c44a:	2c19      	cmp	r4, #25
1001c44c:	d803      	bhi.n	1001c456 <_strtoll_l.constprop.0+0xde>
1001c44e:	f1ac 0457 	sub.w	r4, ip, #87	@ 0x57
1001c452:	42a6      	cmp	r6, r4
1001c454:	dcdc      	bgt.n	1001c410 <_strtoll_l.constprop.0+0x98>
1001c456:	1c5a      	adds	r2, r3, #1
1001c458:	d013      	beq.n	1001c482 <_strtoll_l.constprop.0+0x10a>
1001c45a:	9a02      	ldr	r2, [sp, #8]
1001c45c:	b112      	cbz	r2, 1001c464 <_strtoll_l.constprop.0+0xec>
1001c45e:	4240      	negs	r0, r0
1001c460:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001c464:	f1ba 0f00 	cmp.w	sl, #0
1001c468:	d003      	beq.n	1001c472 <_strtoll_l.constprop.0+0xfa>
1001c46a:	2b00      	cmp	r3, #0
1001c46c:	d13d      	bne.n	1001c4ea <_strtoll_l.constprop.0+0x172>
1001c46e:	f8ca 9000 	str.w	r9, [sl]
1001c472:	b005      	add	sp, #20
1001c474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001c478:	42a2      	cmp	r2, r4
1001c47a:	dab0      	bge.n	1001c3de <_strtoll_l.constprop.0+0x66>
1001c47c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001c480:	e7b8      	b.n	1001c3f4 <_strtoll_l.constprop.0+0x7c>
1001c482:	9a03      	ldr	r2, [sp, #12]
1001c484:	2322      	movs	r3, #34	@ 0x22
1001c486:	6013      	str	r3, [r2, #0]
1001c488:	f1ba 0f00 	cmp.w	sl, #0
1001c48c:	d028      	beq.n	1001c4e0 <_strtoll_l.constprop.0+0x168>
1001c48e:	e9dd 0100 	ldrd	r0, r1, [sp]
1001c492:	f105 39ff 	add.w	r9, r5, #4294967295	@ 0xffffffff
1001c496:	e7ea      	b.n	1001c46e <_strtoll_l.constprop.0+0xf6>
1001c498:	9300      	str	r3, [sp, #0]
1001c49a:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
1001c49e:	2301      	movs	r3, #1
1001c4a0:	782c      	ldrb	r4, [r5, #0]
1001c4a2:	e9cd 0301 	strd	r0, r3, [sp, #4]
1001c4a6:	1c8d      	adds	r5, r1, #2
1001c4a8:	e781      	b.n	1001c3ae <_strtoll_l.constprop.0+0x36>
1001c4aa:	782b      	ldrb	r3, [r5, #0]
1001c4ac:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001c4b0:	2b58      	cmp	r3, #88	@ 0x58
1001c4b2:	d00e      	beq.n	1001c4d2 <_strtoll_l.constprop.0+0x15a>
1001c4b4:	2708      	movs	r7, #8
1001c4b6:	46b0      	mov	r8, r6
1001c4b8:	463e      	mov	r6, r7
1001c4ba:	e77f      	b.n	1001c3bc <_strtoll_l.constprop.0+0x44>
1001c4bc:	2c30      	cmp	r4, #48	@ 0x30
1001c4be:	d003      	beq.n	1001c4c8 <_strtoll_l.constprop.0+0x150>
1001c4c0:	4637      	mov	r7, r6
1001c4c2:	f04f 0800 	mov.w	r8, #0
1001c4c6:	e779      	b.n	1001c3bc <_strtoll_l.constprop.0+0x44>
1001c4c8:	782b      	ldrb	r3, [r5, #0]
1001c4ca:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001c4ce:	2b58      	cmp	r3, #88	@ 0x58
1001c4d0:	d1f6      	bne.n	1001c4c0 <_strtoll_l.constprop.0+0x148>
1001c4d2:	2710      	movs	r7, #16
1001c4d4:	786c      	ldrb	r4, [r5, #1]
1001c4d6:	f04f 0800 	mov.w	r8, #0
1001c4da:	3502      	adds	r5, #2
1001c4dc:	463e      	mov	r6, r7
1001c4de:	e76d      	b.n	1001c3bc <_strtoll_l.constprop.0+0x44>
1001c4e0:	e9dd 0100 	ldrd	r0, r1, [sp]
1001c4e4:	b005      	add	sp, #20
1001c4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001c4ea:	e9cd 0100 	strd	r0, r1, [sp]
1001c4ee:	e7ce      	b.n	1001c48e <_strtoll_l.constprop.0+0x116>
1001c4f0:	1001eae1 	.word	0x1001eae1

1001c4f4 <_strtoll_r>:
1001c4f4:	f7ff bf40 	b.w	1001c378 <_strtoll_l.constprop.0>

1001c4f8 <__libc_fini_array>:
1001c4f8:	b538      	push	{r3, r4, r5, lr}
1001c4fa:	4d07      	ldr	r5, [pc, #28]	@ (1001c518 <__libc_fini_array+0x20>)
1001c4fc:	4c07      	ldr	r4, [pc, #28]	@ (1001c51c <__libc_fini_array+0x24>)
1001c4fe:	1b2c      	subs	r4, r5, r4
1001c500:	10a4      	asrs	r4, r4, #2
1001c502:	d005      	beq.n	1001c510 <__libc_fini_array+0x18>
1001c504:	3c01      	subs	r4, #1
1001c506:	f855 3d04 	ldr.w	r3, [r5, #-4]!
1001c50a:	4798      	blx	r3
1001c50c:	2c00      	cmp	r4, #0
1001c50e:	d1f9      	bne.n	1001c504 <__libc_fini_array+0xc>
1001c510:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001c514:	f009 baec 	b.w	10025af0 <_fini>
1001c518:	20000bcc 	.word	0x20000bcc
1001c51c:	20000bc8 	.word	0x20000bc8

1001c520 <_strtoull_l.constprop.0>:
1001c520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001c524:	b085      	sub	sp, #20
1001c526:	468b      	mov	fp, r1
1001c528:	9201      	str	r2, [sp, #4]
1001c52a:	4a60      	ldr	r2, [pc, #384]	@ (1001c6ac <_strtoull_l.constprop.0+0x18c>)
1001c52c:	9003      	str	r0, [sp, #12]
1001c52e:	461e      	mov	r6, r3
1001c530:	460d      	mov	r5, r1
1001c532:	4629      	mov	r1, r5
1001c534:	f815 4b01 	ldrb.w	r4, [r5], #1
1001c538:	5d13      	ldrb	r3, [r2, r4]
1001c53a:	f013 0308 	ands.w	r3, r3, #8
1001c53e:	d1f8      	bne.n	1001c532 <_strtoull_l.constprop.0+0x12>
1001c540:	2c2d      	cmp	r4, #45	@ 0x2d
1001c542:	d07e      	beq.n	1001c642 <_strtoull_l.constprop.0+0x122>
1001c544:	2c2b      	cmp	r4, #43	@ 0x2b
1001c546:	bf03      	ittte	eq
1001c548:	782c      	ldrbeq	r4, [r5, #0]
1001c54a:	9302      	streq	r3, [sp, #8]
1001c54c:	1c8d      	addeq	r5, r1, #2
1001c54e:	9302      	strne	r3, [sp, #8]
1001c550:	b96e      	cbnz	r6, 1001c56e <_strtoull_l.constprop.0+0x4e>
1001c552:	2c30      	cmp	r4, #48	@ 0x30
1001c554:	f000 8086 	beq.w	1001c664 <_strtoull_l.constprop.0+0x144>
1001c558:	f04f 090a 	mov.w	r9, #10
1001c55c:	46b2      	mov	sl, r6
1001c55e:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 1001c6b0 <_strtoull_l.constprop.0+0x190>
1001c562:	f04f 0c05 	mov.w	ip, #5
1001c566:	f04f 3799 	mov.w	r7, #2576980377	@ 0x99999999
1001c56a:	464e      	mov	r6, r9
1001c56c:	e017      	b.n	1001c59e <_strtoull_l.constprop.0+0x7e>
1001c56e:	2e10      	cmp	r6, #16
1001c570:	d06c      	beq.n	1001c64c <_strtoull_l.constprop.0+0x12c>
1001c572:	ea4f 7ae6 	mov.w	sl, r6, asr #31
1001c576:	4632      	mov	r2, r6
1001c578:	4653      	mov	r3, sl
1001c57a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001c57e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001c582:	f001 fdf5 	bl	1001e170 <__aeabi_uldivmod>
1001c586:	4632      	mov	r2, r6
1001c588:	4607      	mov	r7, r0
1001c58a:	4688      	mov	r8, r1
1001c58c:	4653      	mov	r3, sl
1001c58e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001c592:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001c596:	f001 fdeb 	bl	1001e170 <__aeabi_uldivmod>
1001c59a:	46b1      	mov	r9, r6
1001c59c:	4694      	mov	ip, r2
1001c59e:	2200      	movs	r2, #0
1001c5a0:	4610      	mov	r0, r2
1001c5a2:	4611      	mov	r1, r2
1001c5a4:	e010      	b.n	1001c5c8 <_strtoull_l.constprop.0+0xa8>
1001c5a6:	4541      	cmp	r1, r8
1001c5a8:	bf08      	it	eq
1001c5aa:	42b8      	cmpeq	r0, r7
1001c5ac:	d039      	beq.n	1001c622 <_strtoull_l.constprop.0+0x102>
1001c5ae:	fb00 f20a 	mul.w	r2, r0, sl
1001c5b2:	fb09 2101 	mla	r1, r9, r1, r2
1001c5b6:	fba0 0209 	umull	r0, r2, r0, r9
1001c5ba:	4411      	add	r1, r2
1001c5bc:	1818      	adds	r0, r3, r0
1001c5be:	eb41 71e3 	adc.w	r1, r1, r3, asr #31
1001c5c2:	2201      	movs	r2, #1
1001c5c4:	f815 4b01 	ldrb.w	r4, [r5], #1
1001c5c8:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
1001c5cc:	2b09      	cmp	r3, #9
1001c5ce:	d905      	bls.n	1001c5dc <_strtoull_l.constprop.0+0xbc>
1001c5d0:	f1a4 0341 	sub.w	r3, r4, #65	@ 0x41
1001c5d4:	2b19      	cmp	r3, #25
1001c5d6:	d80c      	bhi.n	1001c5f2 <_strtoull_l.constprop.0+0xd2>
1001c5d8:	f1a4 0337 	sub.w	r3, r4, #55	@ 0x37
1001c5dc:	429e      	cmp	r6, r3
1001c5de:	dd10      	ble.n	1001c602 <_strtoull_l.constprop.0+0xe2>
1001c5e0:	1c54      	adds	r4, r2, #1
1001c5e2:	d0ef      	beq.n	1001c5c4 <_strtoull_l.constprop.0+0xa4>
1001c5e4:	4287      	cmp	r7, r0
1001c5e6:	eb78 0201 	sbcs.w	r2, r8, r1
1001c5ea:	d2dc      	bcs.n	1001c5a6 <_strtoull_l.constprop.0+0x86>
1001c5ec:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001c5f0:	e7e8      	b.n	1001c5c4 <_strtoull_l.constprop.0+0xa4>
1001c5f2:	f1a4 0361 	sub.w	r3, r4, #97	@ 0x61
1001c5f6:	2b19      	cmp	r3, #25
1001c5f8:	d803      	bhi.n	1001c602 <_strtoull_l.constprop.0+0xe2>
1001c5fa:	f1a4 0357 	sub.w	r3, r4, #87	@ 0x57
1001c5fe:	429e      	cmp	r6, r3
1001c600:	dcee      	bgt.n	1001c5e0 <_strtoull_l.constprop.0+0xc0>
1001c602:	1c53      	adds	r3, r2, #1
1001c604:	d012      	beq.n	1001c62c <_strtoull_l.constprop.0+0x10c>
1001c606:	9b02      	ldr	r3, [sp, #8]
1001c608:	b113      	cbz	r3, 1001c610 <_strtoull_l.constprop.0+0xf0>
1001c60a:	4240      	negs	r0, r0
1001c60c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001c610:	9b01      	ldr	r3, [sp, #4]
1001c612:	b11b      	cbz	r3, 1001c61c <_strtoull_l.constprop.0+0xfc>
1001c614:	b992      	cbnz	r2, 1001c63c <_strtoull_l.constprop.0+0x11c>
1001c616:	9b01      	ldr	r3, [sp, #4]
1001c618:	f8c3 b000 	str.w	fp, [r3]
1001c61c:	b005      	add	sp, #20
1001c61e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001c622:	4563      	cmp	r3, ip
1001c624:	ddc3      	ble.n	1001c5ae <_strtoull_l.constprop.0+0x8e>
1001c626:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001c62a:	e7cb      	b.n	1001c5c4 <_strtoull_l.constprop.0+0xa4>
1001c62c:	9903      	ldr	r1, [sp, #12]
1001c62e:	2322      	movs	r3, #34	@ 0x22
1001c630:	600b      	str	r3, [r1, #0]
1001c632:	9b01      	ldr	r3, [sp, #4]
1001c634:	4610      	mov	r0, r2
1001c636:	4611      	mov	r1, r2
1001c638:	2b00      	cmp	r3, #0
1001c63a:	d0ef      	beq.n	1001c61c <_strtoull_l.constprop.0+0xfc>
1001c63c:	f105 3bff 	add.w	fp, r5, #4294967295	@ 0xffffffff
1001c640:	e7e9      	b.n	1001c616 <_strtoull_l.constprop.0+0xf6>
1001c642:	2301      	movs	r3, #1
1001c644:	782c      	ldrb	r4, [r5, #0]
1001c646:	9302      	str	r3, [sp, #8]
1001c648:	1c8d      	adds	r5, r1, #2
1001c64a:	e781      	b.n	1001c550 <_strtoull_l.constprop.0+0x30>
1001c64c:	2c30      	cmp	r4, #48	@ 0x30
1001c64e:	d019      	beq.n	1001c684 <_strtoull_l.constprop.0+0x164>
1001c650:	f04f 0c0f 	mov.w	ip, #15
1001c654:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001c658:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001c65c:	46b1      	mov	r9, r6
1001c65e:	f04f 0a00 	mov.w	sl, #0
1001c662:	e79c      	b.n	1001c59e <_strtoull_l.constprop.0+0x7e>
1001c664:	782b      	ldrb	r3, [r5, #0]
1001c666:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001c66a:	2b58      	cmp	r3, #88	@ 0x58
1001c66c:	d00f      	beq.n	1001c68e <_strtoull_l.constprop.0+0x16e>
1001c66e:	f04f 0908 	mov.w	r9, #8
1001c672:	46b2      	mov	sl, r6
1001c674:	f04f 0c07 	mov.w	ip, #7
1001c678:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001c67c:	f06f 4860 	mvn.w	r8, #3758096384	@ 0xe0000000
1001c680:	464e      	mov	r6, r9
1001c682:	e78c      	b.n	1001c59e <_strtoull_l.constprop.0+0x7e>
1001c684:	782b      	ldrb	r3, [r5, #0]
1001c686:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001c68a:	2b58      	cmp	r3, #88	@ 0x58
1001c68c:	d1e0      	bne.n	1001c650 <_strtoull_l.constprop.0+0x130>
1001c68e:	f04f 0910 	mov.w	r9, #16
1001c692:	786c      	ldrb	r4, [r5, #1]
1001c694:	f04f 0c0f 	mov.w	ip, #15
1001c698:	3502      	adds	r5, #2
1001c69a:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001c69e:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001c6a2:	f04f 0a00 	mov.w	sl, #0
1001c6a6:	464e      	mov	r6, r9
1001c6a8:	e779      	b.n	1001c59e <_strtoull_l.constprop.0+0x7e>
1001c6aa:	bf00      	nop
1001c6ac:	1001eae1 	.word	0x1001eae1
1001c6b0:	19999999 	.word	0x19999999

1001c6b4 <_strtoull_r>:
1001c6b4:	f7ff bf34 	b.w	1001c520 <_strtoull_l.constprop.0>

1001c6b8 <_mbrtowc_r>:
1001c6b8:	b570      	push	{r4, r5, r6, lr}
1001c6ba:	b082      	sub	sp, #8
1001c6bc:	4604      	mov	r4, r0
1001c6be:	9d06      	ldr	r5, [sp, #24]
1001c6c0:	b155      	cbz	r5, 1001c6d8 <_mbrtowc_r+0x20>
1001c6c2:	4810      	ldr	r0, [pc, #64]	@ (1001c704 <_mbrtowc_r+0x4c>)
1001c6c4:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
1001c6c8:	9500      	str	r5, [sp, #0]
1001c6ca:	b16a      	cbz	r2, 1001c6e8 <_mbrtowc_r+0x30>
1001c6cc:	4620      	mov	r0, r4
1001c6ce:	47b0      	blx	r6
1001c6d0:	1c43      	adds	r3, r0, #1
1001c6d2:	d010      	beq.n	1001c6f6 <_mbrtowc_r+0x3e>
1001c6d4:	b002      	add	sp, #8
1001c6d6:	bd70      	pop	{r4, r5, r6, pc}
1001c6d8:	f100 05f4 	add.w	r5, r0, #244	@ 0xf4
1001c6dc:	4809      	ldr	r0, [pc, #36]	@ (1001c704 <_mbrtowc_r+0x4c>)
1001c6de:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
1001c6e2:	9500      	str	r5, [sp, #0]
1001c6e4:	2a00      	cmp	r2, #0
1001c6e6:	d1f1      	bne.n	1001c6cc <_mbrtowc_r+0x14>
1001c6e8:	2301      	movs	r3, #1
1001c6ea:	4611      	mov	r1, r2
1001c6ec:	4620      	mov	r0, r4
1001c6ee:	4a06      	ldr	r2, [pc, #24]	@ (1001c708 <_mbrtowc_r+0x50>)
1001c6f0:	47b0      	blx	r6
1001c6f2:	1c43      	adds	r3, r0, #1
1001c6f4:	d1ee      	bne.n	1001c6d4 <_mbrtowc_r+0x1c>
1001c6f6:	2200      	movs	r2, #0
1001c6f8:	238a      	movs	r3, #138	@ 0x8a
1001c6fa:	602a      	str	r2, [r5, #0]
1001c6fc:	6023      	str	r3, [r4, #0]
1001c6fe:	b002      	add	sp, #8
1001c700:	bd70      	pop	{r4, r5, r6, pc}
1001c702:	bf00      	nop
1001c704:	2000042c 	.word	0x2000042c
1001c708:	1001e760 	.word	0x1001e760

1001c70c <_wcsnrtombs_l>:
1001c70c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001c710:	b089      	sub	sp, #36	@ 0x24
1001c712:	e9dd 7a13 	ldrd	r7, sl, [sp, #76]	@ 0x4c
1001c716:	4686      	mov	lr, r0
1001c718:	461e      	mov	r6, r3
1001c71a:	2f00      	cmp	r7, #0
1001c71c:	d053      	beq.n	1001c7c6 <_wcsnrtombs_l+0xba>
1001c71e:	6815      	ldr	r5, [r2, #0]
1001c720:	2900      	cmp	r1, #0
1001c722:	d055      	beq.n	1001c7d0 <_wcsnrtombs_l+0xc4>
1001c724:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001c726:	2b00      	cmp	r3, #0
1001c728:	d062      	beq.n	1001c7f0 <_wcsnrtombs_l+0xe4>
1001c72a:	1e74      	subs	r4, r6, #1
1001c72c:	b32e      	cbz	r6, 1001c77a <_wcsnrtombs_l+0x6e>
1001c72e:	e9cd e100 	strd	lr, r1, [sp]
1001c732:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001c736:	9102      	str	r1, [sp, #8]
1001c738:	3d04      	subs	r5, #4
1001c73a:	2600      	movs	r6, #0
1001c73c:	9203      	str	r2, [sp, #12]
1001c73e:	e00a      	b.n	1001c756 <_wcsnrtombs_l+0x4a>
1001c740:	9b01      	ldr	r3, [sp, #4]
1001c742:	b9f3      	cbnz	r3, 1001c782 <_wcsnrtombs_l+0x76>
1001c744:	6828      	ldr	r0, [r5, #0]
1001c746:	2800      	cmp	r0, #0
1001c748:	d031      	beq.n	1001c7ae <_wcsnrtombs_l+0xa2>
1001c74a:	45dc      	cmp	ip, fp
1001c74c:	d252      	bcs.n	1001c7f4 <_wcsnrtombs_l+0xe8>
1001c74e:	3c01      	subs	r4, #1
1001c750:	1c63      	adds	r3, r4, #1
1001c752:	4666      	mov	r6, ip
1001c754:	d011      	beq.n	1001c77a <_wcsnrtombs_l+0x6e>
1001c756:	f855 2f04 	ldr.w	r2, [r5, #4]!
1001c75a:	9800      	ldr	r0, [sp, #0]
1001c75c:	f8da c0e0 	ldr.w	ip, [sl, #224]	@ 0xe0
1001c760:	463b      	mov	r3, r7
1001c762:	a905      	add	r1, sp, #20
1001c764:	e9d7 9800 	ldrd	r9, r8, [r7]
1001c768:	47e0      	blx	ip
1001c76a:	1c42      	adds	r2, r0, #1
1001c76c:	d034      	beq.n	1001c7d8 <_wcsnrtombs_l+0xcc>
1001c76e:	eb00 0c06 	add.w	ip, r0, r6
1001c772:	45dc      	cmp	ip, fp
1001c774:	d9e4      	bls.n	1001c740 <_wcsnrtombs_l+0x34>
1001c776:	e9c7 9800 	strd	r9, r8, [r7]
1001c77a:	4630      	mov	r0, r6
1001c77c:	b009      	add	sp, #36	@ 0x24
1001c77e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001c782:	2800      	cmp	r0, #0
1001c784:	dd0c      	ble.n	1001c7a0 <_wcsnrtombs_l+0x94>
1001c786:	9b02      	ldr	r3, [sp, #8]
1001c788:	4418      	add	r0, r3
1001c78a:	1e5a      	subs	r2, r3, #1
1001c78c:	a905      	add	r1, sp, #20
1001c78e:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
1001c792:	f811 3b01 	ldrb.w	r3, [r1], #1
1001c796:	f802 3f01 	strb.w	r3, [r2, #1]!
1001c79a:	4596      	cmp	lr, r2
1001c79c:	d1f9      	bne.n	1001c792 <_wcsnrtombs_l+0x86>
1001c79e:	9002      	str	r0, [sp, #8]
1001c7a0:	9b03      	ldr	r3, [sp, #12]
1001c7a2:	6828      	ldr	r0, [r5, #0]
1001c7a4:	681a      	ldr	r2, [r3, #0]
1001c7a6:	3204      	adds	r2, #4
1001c7a8:	601a      	str	r2, [r3, #0]
1001c7aa:	2800      	cmp	r0, #0
1001c7ac:	d1cd      	bne.n	1001c74a <_wcsnrtombs_l+0x3e>
1001c7ae:	9901      	ldr	r1, [sp, #4]
1001c7b0:	9a03      	ldr	r2, [sp, #12]
1001c7b2:	b101      	cbz	r1, 1001c7b6 <_wcsnrtombs_l+0xaa>
1001c7b4:	6010      	str	r0, [r2, #0]
1001c7b6:	f10c 36ff 	add.w	r6, ip, #4294967295	@ 0xffffffff
1001c7ba:	2200      	movs	r2, #0
1001c7bc:	4630      	mov	r0, r6
1001c7be:	603a      	str	r2, [r7, #0]
1001c7c0:	b009      	add	sp, #36	@ 0x24
1001c7c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001c7c6:	6815      	ldr	r5, [r2, #0]
1001c7c8:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
1001c7cc:	2900      	cmp	r1, #0
1001c7ce:	d1a9      	bne.n	1001c724 <_wcsnrtombs_l+0x18>
1001c7d0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001c7d4:	9312      	str	r3, [sp, #72]	@ 0x48
1001c7d6:	e7a8      	b.n	1001c72a <_wcsnrtombs_l+0x1e>
1001c7d8:	f8dd e000 	ldr.w	lr, [sp]
1001c7dc:	4606      	mov	r6, r0
1001c7de:	218a      	movs	r1, #138	@ 0x8a
1001c7e0:	2200      	movs	r2, #0
1001c7e2:	4630      	mov	r0, r6
1001c7e4:	f8ce 1000 	str.w	r1, [lr]
1001c7e8:	603a      	str	r2, [r7, #0]
1001c7ea:	b009      	add	sp, #36	@ 0x24
1001c7ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001c7f0:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001c7f2:	e7c2      	b.n	1001c77a <_wcsnrtombs_l+0x6e>
1001c7f4:	4666      	mov	r6, ip
1001c7f6:	e7c0      	b.n	1001c77a <_wcsnrtombs_l+0x6e>

1001c7f8 <_wcsnrtombs_r>:
1001c7f8:	b510      	push	{r4, lr}
1001c7fa:	b084      	sub	sp, #16
1001c7fc:	4c05      	ldr	r4, [pc, #20]	@ (1001c814 <_wcsnrtombs_r+0x1c>)
1001c7fe:	9806      	ldr	r0, [sp, #24]
1001c800:	9000      	str	r0, [sp, #0]
1001c802:	9807      	ldr	r0, [sp, #28]
1001c804:	9001      	str	r0, [sp, #4]
1001c806:	4804      	ldr	r0, [pc, #16]	@ (1001c818 <_wcsnrtombs_r+0x20>)
1001c808:	6800      	ldr	r0, [r0, #0]
1001c80a:	9402      	str	r4, [sp, #8]
1001c80c:	f7ff ff7e 	bl	1001c70c <_wcsnrtombs_l>
1001c810:	b004      	add	sp, #16
1001c812:	bd10      	pop	{r4, pc}
1001c814:	2000042c 	.word	0x2000042c
1001c818:	20000598 	.word	0x20000598

1001c81c <iswspace>:
1001c81c:	2100      	movs	r1, #0
1001c81e:	f000 b801 	b.w	1001c824 <iswspace_l>
1001c822:	bf00      	nop

1001c824 <iswspace_l>:
1001c824:	b510      	push	{r4, lr}
1001c826:	f000 f90d 	bl	1001ca44 <_jp2uc_l>
1001c82a:	4604      	mov	r4, r0
1001c82c:	f000 f972 	bl	1001cb14 <category>
1001c830:	f1a0 031a 	sub.w	r3, r0, #26
1001c834:	b2db      	uxtb	r3, r3
1001c836:	2b02      	cmp	r3, #2
1001c838:	d906      	bls.n	1001c848 <iswspace_l+0x24>
1001c83a:	f1a4 0009 	sub.w	r0, r4, #9
1001c83e:	2804      	cmp	r0, #4
1001c840:	bf8c      	ite	hi
1001c842:	2000      	movhi	r0, #0
1001c844:	2001      	movls	r0, #1
1001c846:	bd10      	pop	{r4, pc}
1001c848:	2001      	movs	r0, #1
1001c84a:	bd10      	pop	{r4, pc}

1001c84c <__register_exitproc>:
1001c84c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001c850:	4d1b      	ldr	r5, [pc, #108]	@ (1001c8c0 <__register_exitproc+0x74>)
1001c852:	4606      	mov	r6, r0
1001c854:	6828      	ldr	r0, [r5, #0]
1001c856:	4698      	mov	r8, r3
1001c858:	460f      	mov	r7, r1
1001c85a:	4691      	mov	r9, r2
1001c85c:	f7f8 ffdc 	bl	10015818 <__retarget_lock_acquire_recursive>
1001c860:	4b18      	ldr	r3, [pc, #96]	@ (1001c8c4 <__register_exitproc+0x78>)
1001c862:	681c      	ldr	r4, [r3, #0]
1001c864:	b31c      	cbz	r4, 1001c8ae <__register_exitproc+0x62>
1001c866:	6828      	ldr	r0, [r5, #0]
1001c868:	6865      	ldr	r5, [r4, #4]
1001c86a:	2d1f      	cmp	r5, #31
1001c86c:	dc22      	bgt.n	1001c8b4 <__register_exitproc+0x68>
1001c86e:	b94e      	cbnz	r6, 1001c884 <__register_exitproc+0x38>
1001c870:	1c6b      	adds	r3, r5, #1
1001c872:	3502      	adds	r5, #2
1001c874:	6063      	str	r3, [r4, #4]
1001c876:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
1001c87a:	f7f8 ffcf 	bl	1001581c <__retarget_lock_release_recursive>
1001c87e:	2000      	movs	r0, #0
1001c880:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001c884:	eb04 0185 	add.w	r1, r4, r5, lsl #2
1001c888:	2301      	movs	r3, #1
1001c88a:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
1001c88e:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
1001c892:	40ab      	lsls	r3, r5
1001c894:	431a      	orrs	r2, r3
1001c896:	2e02      	cmp	r6, #2
1001c898:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
1001c89c:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
1001c8a0:	d1e6      	bne.n	1001c870 <__register_exitproc+0x24>
1001c8a2:	f8d4 218c 	ldr.w	r2, [r4, #396]	@ 0x18c
1001c8a6:	431a      	orrs	r2, r3
1001c8a8:	f8c4 218c 	str.w	r2, [r4, #396]	@ 0x18c
1001c8ac:	e7e0      	b.n	1001c870 <__register_exitproc+0x24>
1001c8ae:	4c06      	ldr	r4, [pc, #24]	@ (1001c8c8 <__register_exitproc+0x7c>)
1001c8b0:	601c      	str	r4, [r3, #0]
1001c8b2:	e7d8      	b.n	1001c866 <__register_exitproc+0x1a>
1001c8b4:	f7f8 ffb2 	bl	1001581c <__retarget_lock_release_recursive>
1001c8b8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001c8bc:	e7e0      	b.n	1001c880 <__register_exitproc+0x34>
1001c8be:	bf00      	nop
1001c8c0:	200006c0 	.word	0x200006c0
1001c8c4:	200015d4 	.word	0x200015d4
1001c8c8:	200015d8 	.word	0x200015d8

1001c8cc <nan>:
1001c8cc:	4901      	ldr	r1, [pc, #4]	@ (1001c8d4 <nan+0x8>)
1001c8ce:	2000      	movs	r0, #0
1001c8d0:	4770      	bx	lr
1001c8d2:	bf00      	nop
1001c8d4:	7ff80000 	.word	0x7ff80000

1001c8d8 <nanf>:
1001c8d8:	4800      	ldr	r0, [pc, #0]	@ (1001c8dc <nanf+0x4>)
1001c8da:	4770      	bx	lr
1001c8dc:	7fc00000 	.word	0x7fc00000

1001c8e0 <__assert_func>:
1001c8e0:	b500      	push	{lr}
1001c8e2:	4c0b      	ldr	r4, [pc, #44]	@ (1001c910 <__assert_func+0x30>)
1001c8e4:	6825      	ldr	r5, [r4, #0]
1001c8e6:	4614      	mov	r4, r2
1001c8e8:	68ee      	ldr	r6, [r5, #12]
1001c8ea:	461a      	mov	r2, r3
1001c8ec:	b085      	sub	sp, #20
1001c8ee:	4603      	mov	r3, r0
1001c8f0:	460d      	mov	r5, r1
1001c8f2:	b14c      	cbz	r4, 1001c908 <__assert_func+0x28>
1001c8f4:	4907      	ldr	r1, [pc, #28]	@ (1001c914 <__assert_func+0x34>)
1001c8f6:	9500      	str	r5, [sp, #0]
1001c8f8:	e9cd 1401 	strd	r1, r4, [sp, #4]
1001c8fc:	4630      	mov	r0, r6
1001c8fe:	4906      	ldr	r1, [pc, #24]	@ (1001c918 <__assert_func+0x38>)
1001c900:	f000 fd48 	bl	1001d394 <fiprintf>
1001c904:	f000 fed2 	bl	1001d6ac <abort>
1001c908:	4904      	ldr	r1, [pc, #16]	@ (1001c91c <__assert_func+0x3c>)
1001c90a:	460c      	mov	r4, r1
1001c90c:	e7f3      	b.n	1001c8f6 <__assert_func+0x16>
1001c90e:	bf00      	nop
1001c910:	20000598 	.word	0x20000598
1001c914:	1001ee78 	.word	0x1001ee78
1001c918:	1001ee88 	.word	0x1001ee88
1001c91c:	1001e760 	.word	0x1001e760

1001c920 <__jp2uc>:
1001c920:	2902      	cmp	r1, #2
1001c922:	f3c0 2207 	ubfx	r2, r0, #8, #8
1001c926:	b2c3      	uxtb	r3, r0
1001c928:	d025      	beq.n	1001c976 <__jp2uc+0x56>
1001c92a:	2903      	cmp	r1, #3
1001c92c:	d11e      	bne.n	1001c96c <__jp2uc+0x4c>
1001c92e:	f102 0150 	add.w	r1, r2, #80	@ 0x50
1001c932:	b2c9      	uxtb	r1, r1
1001c934:	291f      	cmp	r1, #31
1001c936:	d90b      	bls.n	1001c950 <__jp2uc+0x30>
1001c938:	f102 0130 	add.w	r1, r2, #48	@ 0x30
1001c93c:	b2c9      	uxtb	r1, r1
1001c93e:	2924      	cmp	r1, #36	@ 0x24
1001c940:	d834      	bhi.n	1001c9ac <__jp2uc+0x8c>
1001c942:	f24f 41a6 	movw	r1, #62630	@ 0xf4a6
1001c946:	4288      	cmp	r0, r1
1001c948:	d926      	bls.n	1001c998 <__jp2uc+0x78>
1001c94a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001c94e:	4770      	bx	lr
1001c950:	f64c 71d3 	movw	r1, #53203	@ 0xcfd3
1001c954:	4288      	cmp	r0, r1
1001c956:	d8f8      	bhi.n	1001c94a <__jp2uc+0x2a>
1001c958:	3ab0      	subs	r2, #176	@ 0xb0
1001c95a:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
1001c95e:	3ba1      	subs	r3, #161	@ 0xa1
1001c960:	4930      	ldr	r1, [pc, #192]	@ (1001ca24 <__jp2uc+0x104>)
1001c962:	eb03 0342 	add.w	r3, r3, r2, lsl #1
1001c966:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
1001c96a:	4770      	bx	lr
1001c96c:	f082 0280 	eor.w	r2, r2, #128	@ 0x80
1001c970:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
1001c974:	e7db      	b.n	1001c92e <__jp2uc+0xe>
1001c976:	2b9e      	cmp	r3, #158	@ 0x9e
1001c978:	d90a      	bls.n	1001c990 <__jp2uc+0x70>
1001c97a:	3323      	adds	r3, #35	@ 0x23
1001c97c:	b2db      	uxtb	r3, r3
1001c97e:	2180      	movs	r1, #128	@ 0x80
1001c980:	2a9f      	cmp	r2, #159	@ 0x9f
1001c982:	bf94      	ite	ls
1001c984:	3a70      	subls	r2, #112	@ 0x70
1001c986:	3250      	addhi	r2, #80	@ 0x50
1001c988:	eb01 0142 	add.w	r1, r1, r2, lsl #1
1001c98c:	b2ca      	uxtb	r2, r1
1001c98e:	e7ce      	b.n	1001c92e <__jp2uc+0xe>
1001c990:	3b7e      	subs	r3, #126	@ 0x7e
1001c992:	b2db      	uxtb	r3, r3
1001c994:	217f      	movs	r1, #127	@ 0x7f
1001c996:	e7f3      	b.n	1001c980 <__jp2uc+0x60>
1001c998:	3ad0      	subs	r2, #208	@ 0xd0
1001c99a:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
1001c99e:	3ba1      	subs	r3, #161	@ 0xa1
1001c9a0:	4921      	ldr	r1, [pc, #132]	@ (1001ca28 <__jp2uc+0x108>)
1001c9a2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
1001c9a6:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
1001c9aa:	4770      	bx	lr
1001c9ac:	3aa1      	subs	r2, #161	@ 0xa1
1001c9ae:	2a07      	cmp	r2, #7
1001c9b0:	d8cb      	bhi.n	1001c94a <__jp2uc+0x2a>
1001c9b2:	e8df f002 	tbb	[pc, r2]
1001c9b6:	2831      	.short	0x2831
1001c9b8:	0f13181e 	.word	0x0f13181e
1001c9bc:	040b      	.short	0x040b
1001c9be:	2bc0      	cmp	r3, #192	@ 0xc0
1001c9c0:	d8c3      	bhi.n	1001c94a <__jp2uc+0x2a>
1001c9c2:	4a1a      	ldr	r2, [pc, #104]	@ (1001ca2c <__jp2uc+0x10c>)
1001c9c4:	3ba1      	subs	r3, #161	@ 0xa1
1001c9c6:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001c9ca:	4770      	bx	lr
1001c9cc:	2bf1      	cmp	r3, #241	@ 0xf1
1001c9ce:	d8bc      	bhi.n	1001c94a <__jp2uc+0x2a>
1001c9d0:	4a17      	ldr	r2, [pc, #92]	@ (1001ca30 <__jp2uc+0x110>)
1001c9d2:	e019      	b.n	1001ca08 <__jp2uc+0xe8>
1001c9d4:	2bd8      	cmp	r3, #216	@ 0xd8
1001c9d6:	d8b8      	bhi.n	1001c94a <__jp2uc+0x2a>
1001c9d8:	4a16      	ldr	r2, [pc, #88]	@ (1001ca34 <__jp2uc+0x114>)
1001c9da:	e015      	b.n	1001ca08 <__jp2uc+0xe8>
1001c9dc:	2bf6      	cmp	r3, #246	@ 0xf6
1001c9de:	d8b4      	bhi.n	1001c94a <__jp2uc+0x2a>
1001c9e0:	f503 5040 	add.w	r0, r3, #12288	@ 0x3000
1001c9e4:	4770      	bx	lr
1001c9e6:	2bf3      	cmp	r3, #243	@ 0xf3
1001c9e8:	d8af      	bhi.n	1001c94a <__jp2uc+0x2a>
1001c9ea:	f503 503e 	add.w	r0, r3, #12160	@ 0x2f80
1001c9ee:	3020      	adds	r0, #32
1001c9f0:	4770      	bx	lr
1001c9f2:	4a11      	ldr	r2, [pc, #68]	@ (1001ca38 <__jp2uc+0x118>)
1001c9f4:	441a      	add	r2, r3
1001c9f6:	f812 2ca1 	ldrb.w	r2, [r2, #-161]
1001c9fa:	2a00      	cmp	r2, #0
1001c9fc:	d0a5      	beq.n	1001c94a <__jp2uc+0x2a>
1001c9fe:	f503 407e 	add.w	r0, r3, #65024	@ 0xfe00
1001ca02:	3060      	adds	r0, #96	@ 0x60
1001ca04:	4770      	bx	lr
1001ca06:	4a0d      	ldr	r2, [pc, #52]	@ (1001ca3c <__jp2uc+0x11c>)
1001ca08:	3ba1      	subs	r3, #161	@ 0xa1
1001ca0a:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001ca0e:	2800      	cmp	r0, #0
1001ca10:	bf08      	it	eq
1001ca12:	f04f 30ff 	moveq.w	r0, #4294967295	@ 0xffffffff
1001ca16:	4770      	bx	lr
1001ca18:	4a09      	ldr	r2, [pc, #36]	@ (1001ca40 <__jp2uc+0x120>)
1001ca1a:	3ba1      	subs	r3, #161	@ 0xa1
1001ca1c:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001ca20:	4770      	bx	lr
1001ca22:	bf00      	nop
1001ca24:	10020948 	.word	0x10020948
1001ca28:	1001eecc 	.word	0x1001eecc
1001ca2c:	10022074 	.word	0x10022074
1001ca30:	100220b4 	.word	0x100220b4
1001ca34:	10022158 	.word	0x10022158
1001ca38:	100221c8 	.word	0x100221c8
1001ca3c:	10022224 	.word	0x10022224
1001ca40:	100222e0 	.word	0x100222e0

1001ca44 <_jp2uc_l>:
1001ca44:	b538      	push	{r3, r4, r5, lr}
1001ca46:	4605      	mov	r5, r0
1001ca48:	b1b9      	cbz	r1, 1001ca7a <_jp2uc_l+0x36>
1001ca4a:	f501 7495 	add.w	r4, r1, #298	@ 0x12a
1001ca4e:	4912      	ldr	r1, [pc, #72]	@ (1001ca98 <_jp2uc_l+0x54>)
1001ca50:	4620      	mov	r0, r4
1001ca52:	f7f8 fd45 	bl	100154e0 <strcmp>
1001ca56:	b928      	cbnz	r0, 1001ca64 <_jp2uc_l+0x20>
1001ca58:	4628      	mov	r0, r5
1001ca5a:	2101      	movs	r1, #1
1001ca5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001ca60:	f7ff bf5e 	b.w	1001c920 <__jp2uc>
1001ca64:	490d      	ldr	r1, [pc, #52]	@ (1001ca9c <_jp2uc_l+0x58>)
1001ca66:	4620      	mov	r0, r4
1001ca68:	f7f8 fd3a 	bl	100154e0 <strcmp>
1001ca6c:	b938      	cbnz	r0, 1001ca7e <_jp2uc_l+0x3a>
1001ca6e:	4628      	mov	r0, r5
1001ca70:	2102      	movs	r1, #2
1001ca72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001ca76:	f7ff bf53 	b.w	1001c920 <__jp2uc>
1001ca7a:	4c09      	ldr	r4, [pc, #36]	@ (1001caa0 <_jp2uc_l+0x5c>)
1001ca7c:	e7e7      	b.n	1001ca4e <_jp2uc_l+0xa>
1001ca7e:	4909      	ldr	r1, [pc, #36]	@ (1001caa4 <_jp2uc_l+0x60>)
1001ca80:	4620      	mov	r0, r4
1001ca82:	f7f8 fd2d 	bl	100154e0 <strcmp>
1001ca86:	b928      	cbnz	r0, 1001ca94 <_jp2uc_l+0x50>
1001ca88:	4628      	mov	r0, r5
1001ca8a:	2103      	movs	r1, #3
1001ca8c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001ca90:	f7ff bf46 	b.w	1001c920 <__jp2uc>
1001ca94:	4628      	mov	r0, r5
1001ca96:	bd38      	pop	{r3, r4, r5, pc}
1001ca98:	1001eeb8 	.word	0x1001eeb8
1001ca9c:	1001eebc 	.word	0x1001eebc
1001caa0:	20000556 	.word	0x20000556
1001caa4:	1001eec4 	.word	0x1001eec4

1001caa8 <_calloc_r>:
1001caa8:	b538      	push	{r3, r4, r5, lr}
1001caaa:	fba1 1402 	umull	r1, r4, r1, r2
1001caae:	bb54      	cbnz	r4, 1001cb06 <_calloc_r+0x5e>
1001cab0:	f7f4 fa2e 	bl	10010f10 <_malloc_r>
1001cab4:	4605      	mov	r5, r0
1001cab6:	b350      	cbz	r0, 1001cb0e <_calloc_r+0x66>
1001cab8:	f850 2c04 	ldr.w	r2, [r0, #-4]
1001cabc:	f022 0203 	bic.w	r2, r2, #3
1001cac0:	3a04      	subs	r2, #4
1001cac2:	2a24      	cmp	r2, #36	@ 0x24
1001cac4:	d810      	bhi.n	1001cae8 <_calloc_r+0x40>
1001cac6:	2a13      	cmp	r2, #19
1001cac8:	d913      	bls.n	1001caf2 <_calloc_r+0x4a>
1001caca:	2a1b      	cmp	r2, #27
1001cacc:	6004      	str	r4, [r0, #0]
1001cace:	6044      	str	r4, [r0, #4]
1001cad0:	d916      	bls.n	1001cb00 <_calloc_r+0x58>
1001cad2:	2a24      	cmp	r2, #36	@ 0x24
1001cad4:	6084      	str	r4, [r0, #8]
1001cad6:	60c4      	str	r4, [r0, #12]
1001cad8:	bf11      	iteee	ne
1001cada:	f100 0210 	addne.w	r2, r0, #16
1001cade:	f100 0218 	addeq.w	r2, r0, #24
1001cae2:	6104      	streq	r4, [r0, #16]
1001cae4:	6144      	streq	r4, [r0, #20]
1001cae6:	e005      	b.n	1001caf4 <_calloc_r+0x4c>
1001cae8:	4621      	mov	r1, r4
1001caea:	f7f8 fbb1 	bl	10015250 <memset>
1001caee:	4628      	mov	r0, r5
1001caf0:	bd38      	pop	{r3, r4, r5, pc}
1001caf2:	4602      	mov	r2, r0
1001caf4:	2300      	movs	r3, #0
1001caf6:	6013      	str	r3, [r2, #0]
1001caf8:	6053      	str	r3, [r2, #4]
1001cafa:	6093      	str	r3, [r2, #8]
1001cafc:	4628      	mov	r0, r5
1001cafe:	bd38      	pop	{r3, r4, r5, pc}
1001cb00:	f100 0208 	add.w	r2, r0, #8
1001cb04:	e7f6      	b.n	1001caf4 <_calloc_r+0x4c>
1001cb06:	f7f8 fcd1 	bl	100154ac <__errno>
1001cb0a:	230c      	movs	r3, #12
1001cb0c:	6003      	str	r3, [r0, #0]
1001cb0e:	2500      	movs	r5, #0
1001cb10:	4628      	mov	r0, r5
1001cb12:	bd38      	pop	{r3, r4, r5, pc}

1001cb14 <category>:
1001cb14:	4b17      	ldr	r3, [pc, #92]	@ (1001cb74 <category+0x60>)
1001cb16:	4298      	cmp	r0, r3
1001cb18:	d827      	bhi.n	1001cb6a <category+0x56>
1001cb1a:	b570      	push	{r4, r5, r6, lr}
1001cb1c:	4d16      	ldr	r5, [pc, #88]	@ (1001cb78 <category+0x64>)
1001cb1e:	f04f 0e00 	mov.w	lr, #0
1001cb22:	f640 04f9 	movw	r4, #2297	@ 0x8f9
1001cb26:	e003      	b.n	1001cb30 <category+0x1c>
1001cb28:	f102 0e01 	add.w	lr, r2, #1
1001cb2c:	4574      	cmp	r4, lr
1001cb2e:	db1a      	blt.n	1001cb66 <category+0x52>
1001cb30:	eb0e 0204 	add.w	r2, lr, r4
1001cb34:	f022 0301 	bic.w	r3, r2, #1
1001cb38:	eb03 0362 	add.w	r3, r3, r2, asr #1
1001cb3c:	eb05 0c43 	add.w	ip, r5, r3, lsl #1
1001cb40:	1052      	asrs	r2, r2, #1
1001cb42:	f89c 1001 	ldrb.w	r1, [ip, #1]
1001cb46:	f8bc 6002 	ldrh.w	r6, [ip, #2]
1001cb4a:	f8bc c004 	ldrh.w	ip, [ip, #4]
1001cb4e:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
1001cb52:	448c      	add	ip, r1
1001cb54:	4560      	cmp	r0, ip
1001cb56:	ea4f 0343 	mov.w	r3, r3, lsl #1
1001cb5a:	d8e5      	bhi.n	1001cb28 <category+0x14>
1001cb5c:	4288      	cmp	r0, r1
1001cb5e:	d206      	bcs.n	1001cb6e <category+0x5a>
1001cb60:	1e54      	subs	r4, r2, #1
1001cb62:	4574      	cmp	r4, lr
1001cb64:	dae4      	bge.n	1001cb30 <category+0x1c>
1001cb66:	20ff      	movs	r0, #255	@ 0xff
1001cb68:	bd70      	pop	{r4, r5, r6, pc}
1001cb6a:	20ff      	movs	r0, #255	@ 0xff
1001cb6c:	4770      	bx	lr
1001cb6e:	5ce8      	ldrb	r0, [r5, r3]
1001cb70:	bd70      	pop	{r4, r5, r6, pc}
1001cb72:	bf00      	nop
1001cb74:	000e01ef 	.word	0x000e01ef
1001cb78:	1002239c 	.word	0x1002239c

1001cb7c <rshift>:
1001cb7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001cb80:	6904      	ldr	r4, [r0, #16]
1001cb82:	ebb4 1f61 	cmp.w	r4, r1, asr #5
1001cb86:	dc05      	bgt.n	1001cb94 <rshift+0x18>
1001cb88:	2300      	movs	r3, #0
1001cb8a:	6103      	str	r3, [r0, #16]
1001cb8c:	2300      	movs	r3, #0
1001cb8e:	6143      	str	r3, [r0, #20]
1001cb90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001cb94:	f100 0514 	add.w	r5, r0, #20
1001cb98:	114e      	asrs	r6, r1, #5
1001cb9a:	f011 0c1f 	ands.w	ip, r1, #31
1001cb9e:	eb05 0e84 	add.w	lr, r5, r4, lsl #2
1001cba2:	eb05 0386 	add.w	r3, r5, r6, lsl #2
1001cba6:	d021      	beq.n	1001cbec <rshift+0x70>
1001cba8:	f855 1026 	ldr.w	r1, [r5, r6, lsl #2]
1001cbac:	3304      	adds	r3, #4
1001cbae:	459e      	cmp	lr, r3
1001cbb0:	fa21 f10c 	lsr.w	r1, r1, ip
1001cbb4:	f1cc 0820 	rsb	r8, ip, #32
1001cbb8:	d92d      	bls.n	1001cc16 <rshift+0x9a>
1001cbba:	462f      	mov	r7, r5
1001cbbc:	681a      	ldr	r2, [r3, #0]
1001cbbe:	fa02 f208 	lsl.w	r2, r2, r8
1001cbc2:	430a      	orrs	r2, r1
1001cbc4:	f847 2b04 	str.w	r2, [r7], #4
1001cbc8:	f853 1b04 	ldr.w	r1, [r3], #4
1001cbcc:	459e      	cmp	lr, r3
1001cbce:	fa21 f10c 	lsr.w	r1, r1, ip
1001cbd2:	d8f3      	bhi.n	1001cbbc <rshift+0x40>
1001cbd4:	1ba3      	subs	r3, r4, r6
1001cbd6:	009b      	lsls	r3, r3, #2
1001cbd8:	3b05      	subs	r3, #5
1001cbda:	089b      	lsrs	r3, r3, #2
1001cbdc:	3301      	adds	r3, #1
1001cbde:	eb05 0483 	add.w	r4, r5, r3, lsl #2
1001cbe2:	f845 1023 	str.w	r1, [r5, r3, lsl #2]
1001cbe6:	b179      	cbz	r1, 1001cc08 <rshift+0x8c>
1001cbe8:	3404      	adds	r4, #4
1001cbea:	e00d      	b.n	1001cc08 <rshift+0x8c>
1001cbec:	459e      	cmp	lr, r3
1001cbee:	bf88      	it	hi
1001cbf0:	f100 0210 	addhi.w	r2, r0, #16
1001cbf4:	d9c8      	bls.n	1001cb88 <rshift+0xc>
1001cbf6:	f853 1b04 	ldr.w	r1, [r3], #4
1001cbfa:	f842 1f04 	str.w	r1, [r2, #4]!
1001cbfe:	459e      	cmp	lr, r3
1001cc00:	d8f9      	bhi.n	1001cbf6 <rshift+0x7a>
1001cc02:	1ba4      	subs	r4, r4, r6
1001cc04:	eb05 0484 	add.w	r4, r5, r4, lsl #2
1001cc08:	1b63      	subs	r3, r4, r5
1001cc0a:	109b      	asrs	r3, r3, #2
1001cc0c:	42ac      	cmp	r4, r5
1001cc0e:	6103      	str	r3, [r0, #16]
1001cc10:	d0bc      	beq.n	1001cb8c <rshift+0x10>
1001cc12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001cc16:	6141      	str	r1, [r0, #20]
1001cc18:	2900      	cmp	r1, #0
1001cc1a:	d0b5      	beq.n	1001cb88 <rshift+0xc>
1001cc1c:	462c      	mov	r4, r5
1001cc1e:	e7e3      	b.n	1001cbe8 <rshift+0x6c>

1001cc20 <__gethex>:
1001cc20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001cc24:	680f      	ldr	r7, [r1, #0]
1001cc26:	b085      	sub	sp, #20
1001cc28:	e9cd 2000 	strd	r2, r0, [sp]
1001cc2c:	78ba      	ldrb	r2, [r7, #2]
1001cc2e:	9303      	str	r3, [sp, #12]
1001cc30:	2a30      	cmp	r2, #48	@ 0x30
1001cc32:	4689      	mov	r9, r1
1001cc34:	f040 81ca 	bne.w	1001cfcc <__gethex+0x3ac>
1001cc38:	1cfb      	adds	r3, r7, #3
1001cc3a:	781a      	ldrb	r2, [r3, #0]
1001cc3c:	2a30      	cmp	r2, #48	@ 0x30
1001cc3e:	461c      	mov	r4, r3
1001cc40:	f103 0301 	add.w	r3, r3, #1
1001cc44:	d0f9      	beq.n	1001cc3a <__gethex+0x1a>
1001cc46:	1be7      	subs	r7, r4, r7
1001cc48:	3f02      	subs	r7, #2
1001cc4a:	f8df 82d8 	ldr.w	r8, [pc, #728]	@ 1001cf24 <__gethex+0x304>
1001cc4e:	f818 3002 	ldrb.w	r3, [r8, r2]
1001cc52:	2b00      	cmp	r3, #0
1001cc54:	f000 80df 	beq.w	1001ce16 <__gethex+0x1f6>
1001cc58:	7823      	ldrb	r3, [r4, #0]
1001cc5a:	f818 3003 	ldrb.w	r3, [r8, r3]
1001cc5e:	f04f 0a00 	mov.w	sl, #0
1001cc62:	4655      	mov	r5, sl
1001cc64:	2b00      	cmp	r3, #0
1001cc66:	f000 8150 	beq.w	1001cf0a <__gethex+0x2ea>
1001cc6a:	4626      	mov	r6, r4
1001cc6c:	f816 3f01 	ldrb.w	r3, [r6, #1]!
1001cc70:	f818 3003 	ldrb.w	r3, [r8, r3]
1001cc74:	2b00      	cmp	r3, #0
1001cc76:	d1f9      	bne.n	1001cc6c <__gethex+0x4c>
1001cc78:	49ab      	ldr	r1, [pc, #684]	@ (1001cf28 <__gethex+0x308>)
1001cc7a:	2201      	movs	r2, #1
1001cc7c:	4630      	mov	r0, r6
1001cc7e:	f7ff faed 	bl	1001c25c <strncmp>
1001cc82:	4683      	mov	fp, r0
1001cc84:	2800      	cmp	r0, #0
1001cc86:	d04c      	beq.n	1001cd22 <__gethex+0x102>
1001cc88:	7832      	ldrb	r2, [r6, #0]
1001cc8a:	2d00      	cmp	r5, #0
1001cc8c:	f000 8180 	beq.w	1001cf90 <__gethex+0x370>
1001cc90:	1bab      	subs	r3, r5, r6
1001cc92:	ea4f 0b83 	mov.w	fp, r3, lsl #2
1001cc96:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001cc9a:	2a50      	cmp	r2, #80	@ 0x50
1001cc9c:	4635      	mov	r5, r6
1001cc9e:	d04c      	beq.n	1001cd3a <__gethex+0x11a>
1001cca0:	f8c9 6000 	str.w	r6, [r9]
1001cca4:	f1ba 0f00 	cmp.w	sl, #0
1001cca8:	d165      	bne.n	1001cd76 <__gethex+0x156>
1001ccaa:	1b2a      	subs	r2, r5, r4
1001ccac:	3a01      	subs	r2, #1
1001ccae:	2a07      	cmp	r2, #7
1001ccb0:	4651      	mov	r1, sl
1001ccb2:	dd04      	ble.n	1001ccbe <__gethex+0x9e>
1001ccb4:	1052      	asrs	r2, r2, #1
1001ccb6:	2a07      	cmp	r2, #7
1001ccb8:	f101 0101 	add.w	r1, r1, #1
1001ccbc:	dcfa      	bgt.n	1001ccb4 <__gethex+0x94>
1001ccbe:	9801      	ldr	r0, [sp, #4]
1001ccc0:	f7fd fb2e 	bl	1001a320 <_Balloc>
1001ccc4:	4682      	mov	sl, r0
1001ccc6:	2800      	cmp	r0, #0
1001ccc8:	f000 8250 	beq.w	1001d16c <__gethex+0x54c>
1001cccc:	f100 0614 	add.w	r6, r0, #20
1001ccd0:	42a5      	cmp	r5, r4
1001ccd2:	9602      	str	r6, [sp, #8]
1001ccd4:	d957      	bls.n	1001cd86 <__gethex+0x166>
1001ccd6:	2700      	movs	r7, #0
1001ccd8:	46b9      	mov	r9, r7
1001ccda:	e00d      	b.n	1001ccf8 <__gethex+0xd8>
1001ccdc:	2f20      	cmp	r7, #32
1001ccde:	d01a      	beq.n	1001cd16 <__gethex+0xf6>
1001cce0:	463a      	mov	r2, r7
1001cce2:	3704      	adds	r7, #4
1001cce4:	782b      	ldrb	r3, [r5, #0]
1001cce6:	f818 3003 	ldrb.w	r3, [r8, r3]
1001ccea:	f003 030f 	and.w	r3, r3, #15
1001ccee:	4093      	lsls	r3, r2
1001ccf0:	ea49 0903 	orr.w	r9, r9, r3
1001ccf4:	42a5      	cmp	r5, r4
1001ccf6:	d049      	beq.n	1001cd8c <__gethex+0x16c>
1001ccf8:	f815 3d01 	ldrb.w	r3, [r5, #-1]!
1001ccfc:	2b2e      	cmp	r3, #46	@ 0x2e
1001ccfe:	d1ed      	bne.n	1001ccdc <__gethex+0xbc>
1001cd00:	42a5      	cmp	r5, r4
1001cd02:	d3eb      	bcc.n	1001ccdc <__gethex+0xbc>
1001cd04:	4988      	ldr	r1, [pc, #544]	@ (1001cf28 <__gethex+0x308>)
1001cd06:	2201      	movs	r2, #1
1001cd08:	4628      	mov	r0, r5
1001cd0a:	f7ff faa7 	bl	1001c25c <strncmp>
1001cd0e:	2800      	cmp	r0, #0
1001cd10:	d0f0      	beq.n	1001ccf4 <__gethex+0xd4>
1001cd12:	2f20      	cmp	r7, #32
1001cd14:	d1e4      	bne.n	1001cce0 <__gethex+0xc0>
1001cd16:	2200      	movs	r2, #0
1001cd18:	f846 9b04 	str.w	r9, [r6], #4
1001cd1c:	2704      	movs	r7, #4
1001cd1e:	4691      	mov	r9, r2
1001cd20:	e7e0      	b.n	1001cce4 <__gethex+0xc4>
1001cd22:	2d00      	cmp	r5, #0
1001cd24:	f000 8143 	beq.w	1001cfae <__gethex+0x38e>
1001cd28:	7832      	ldrb	r2, [r6, #0]
1001cd2a:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001cd2e:	1bab      	subs	r3, r5, r6
1001cd30:	2a50      	cmp	r2, #80	@ 0x50
1001cd32:	ea4f 0b83 	mov.w	fp, r3, lsl #2
1001cd36:	4635      	mov	r5, r6
1001cd38:	d1b2      	bne.n	1001cca0 <__gethex+0x80>
1001cd3a:	786a      	ldrb	r2, [r5, #1]
1001cd3c:	2a2b      	cmp	r2, #43	@ 0x2b
1001cd3e:	f000 8125 	beq.w	1001cf8c <__gethex+0x36c>
1001cd42:	2a2d      	cmp	r2, #45	@ 0x2d
1001cd44:	f000 80a1 	beq.w	1001ce8a <__gethex+0x26a>
1001cd48:	1c6e      	adds	r6, r5, #1
1001cd4a:	2000      	movs	r0, #0
1001cd4c:	f818 1002 	ldrb.w	r1, [r8, r2]
1001cd50:	1e4a      	subs	r2, r1, #1
1001cd52:	2a18      	cmp	r2, #24
1001cd54:	f200 8097 	bhi.w	1001ce86 <__gethex+0x266>
1001cd58:	7872      	ldrb	r2, [r6, #1]
1001cd5a:	f818 2002 	ldrb.w	r2, [r8, r2]
1001cd5e:	3910      	subs	r1, #16
1001cd60:	3601      	adds	r6, #1
1001cd62:	2a00      	cmp	r2, #0
1001cd64:	d154      	bne.n	1001ce10 <__gethex+0x1f0>
1001cd66:	b100      	cbz	r0, 1001cd6a <__gethex+0x14a>
1001cd68:	4249      	negs	r1, r1
1001cd6a:	448b      	add	fp, r1
1001cd6c:	f8c9 6000 	str.w	r6, [r9]
1001cd70:	f1ba 0f00 	cmp.w	sl, #0
1001cd74:	d099      	beq.n	1001ccaa <__gethex+0x8a>
1001cd76:	2f00      	cmp	r7, #0
1001cd78:	bf0c      	ite	eq
1001cd7a:	2506      	moveq	r5, #6
1001cd7c:	2500      	movne	r5, #0
1001cd7e:	4628      	mov	r0, r5
1001cd80:	b005      	add	sp, #20
1001cd82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001cd86:	9e02      	ldr	r6, [sp, #8]
1001cd88:	f04f 0900 	mov.w	r9, #0
1001cd8c:	f846 9b04 	str.w	r9, [r6], #4
1001cd90:	9b02      	ldr	r3, [sp, #8]
1001cd92:	1af6      	subs	r6, r6, r3
1001cd94:	10b6      	asrs	r6, r6, #2
1001cd96:	f8ca 6010 	str.w	r6, [sl, #16]
1001cd9a:	4648      	mov	r0, r9
1001cd9c:	f7fd fb98 	bl	1001a4d0 <__hi0bits>
1001cda0:	9b00      	ldr	r3, [sp, #0]
1001cda2:	0176      	lsls	r6, r6, #5
1001cda4:	681c      	ldr	r4, [r3, #0]
1001cda6:	1a36      	subs	r6, r6, r0
1001cda8:	42a6      	cmp	r6, r4
1001cdaa:	dc72      	bgt.n	1001ce92 <__gethex+0x272>
1001cdac:	f2c0 80f2 	blt.w	1001cf94 <__gethex+0x374>
1001cdb0:	2700      	movs	r7, #0
1001cdb2:	9b00      	ldr	r3, [sp, #0]
1001cdb4:	689a      	ldr	r2, [r3, #8]
1001cdb6:	455a      	cmp	r2, fp
1001cdb8:	f2c0 8129 	blt.w	1001d00e <__gethex+0x3ee>
1001cdbc:	9b00      	ldr	r3, [sp, #0]
1001cdbe:	685a      	ldr	r2, [r3, #4]
1001cdc0:	455a      	cmp	r2, fp
1001cdc2:	dd49      	ble.n	1001ce58 <__gethex+0x238>
1001cdc4:	eba2 0b0b 	sub.w	fp, r2, fp
1001cdc8:	455c      	cmp	r4, fp
1001cdca:	dc7f      	bgt.n	1001cecc <__gethex+0x2ac>
1001cdcc:	68db      	ldr	r3, [r3, #12]
1001cdce:	2b02      	cmp	r3, #2
1001cdd0:	f000 815b 	beq.w	1001d08a <__gethex+0x46a>
1001cdd4:	2b03      	cmp	r3, #3
1001cdd6:	f000 8153 	beq.w	1001d080 <__gethex+0x460>
1001cdda:	2b01      	cmp	r3, #1
1001cddc:	f000 8136 	beq.w	1001d04c <__gethex+0x42c>
1001cde0:	9801      	ldr	r0, [sp, #4]
1001cde2:	4651      	mov	r1, sl
1001cde4:	f7fd fac2 	bl	1001a36c <_Bfree>
1001cde8:	2550      	movs	r5, #80	@ 0x50
1001cdea:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001cdec:	2300      	movs	r3, #0
1001cdee:	4628      	mov	r0, r5
1001cdf0:	6013      	str	r3, [r2, #0]
1001cdf2:	b005      	add	sp, #20
1001cdf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001cdf8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001cdfc:	f816 3f01 	ldrb.w	r3, [r6, #1]!
1001ce00:	eb02 0241 	add.w	r2, r2, r1, lsl #1
1001ce04:	f1a2 0110 	sub.w	r1, r2, #16
1001ce08:	f818 2003 	ldrb.w	r2, [r8, r3]
1001ce0c:	2a00      	cmp	r2, #0
1001ce0e:	d0aa      	beq.n	1001cd66 <__gethex+0x146>
1001ce10:	2a19      	cmp	r2, #25
1001ce12:	ddf1      	ble.n	1001cdf8 <__gethex+0x1d8>
1001ce14:	e7a7      	b.n	1001cd66 <__gethex+0x146>
1001ce16:	4944      	ldr	r1, [pc, #272]	@ (1001cf28 <__gethex+0x308>)
1001ce18:	2201      	movs	r2, #1
1001ce1a:	4620      	mov	r0, r4
1001ce1c:	f7ff fa1e 	bl	1001c25c <strncmp>
1001ce20:	4682      	mov	sl, r0
1001ce22:	2800      	cmp	r0, #0
1001ce24:	d173      	bne.n	1001cf0e <__gethex+0x2ee>
1001ce26:	7863      	ldrb	r3, [r4, #1]
1001ce28:	f818 2003 	ldrb.w	r2, [r8, r3]
1001ce2c:	1c65      	adds	r5, r4, #1
1001ce2e:	2a00      	cmp	r2, #0
1001ce30:	d06f      	beq.n	1001cf12 <__gethex+0x2f2>
1001ce32:	2b30      	cmp	r3, #48	@ 0x30
1001ce34:	462c      	mov	r4, r5
1001ce36:	f040 8134 	bne.w	1001d0a2 <__gethex+0x482>
1001ce3a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1001ce3e:	2b30      	cmp	r3, #48	@ 0x30
1001ce40:	d0fb      	beq.n	1001ce3a <__gethex+0x21a>
1001ce42:	f818 3003 	ldrb.w	r3, [r8, r3]
1001ce46:	fab3 fa83 	clz	sl, r3
1001ce4a:	2701      	movs	r7, #1
1001ce4c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
1001ce50:	2b00      	cmp	r3, #0
1001ce52:	f47f af0a 	bne.w	1001cc6a <__gethex+0x4a>
1001ce56:	e058      	b.n	1001cf0a <__gethex+0x2ea>
1001ce58:	2501      	movs	r5, #1
1001ce5a:	b157      	cbz	r7, 1001ce72 <__gethex+0x252>
1001ce5c:	9b00      	ldr	r3, [sp, #0]
1001ce5e:	68da      	ldr	r2, [r3, #12]
1001ce60:	2a02      	cmp	r2, #2
1001ce62:	d063      	beq.n	1001cf2c <__gethex+0x30c>
1001ce64:	2a03      	cmp	r2, #3
1001ce66:	d065      	beq.n	1001cf34 <__gethex+0x314>
1001ce68:	2a01      	cmp	r2, #1
1001ce6a:	f000 8086 	beq.w	1001cf7a <__gethex+0x35a>
1001ce6e:	f045 0510 	orr.w	r5, r5, #16
1001ce72:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001ce74:	f8c3 a000 	str.w	sl, [r3]
1001ce78:	9b03      	ldr	r3, [sp, #12]
1001ce7a:	4628      	mov	r0, r5
1001ce7c:	f8c3 b000 	str.w	fp, [r3]
1001ce80:	b005      	add	sp, #20
1001ce82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001ce86:	462e      	mov	r6, r5
1001ce88:	e70a      	b.n	1001cca0 <__gethex+0x80>
1001ce8a:	2001      	movs	r0, #1
1001ce8c:	78aa      	ldrb	r2, [r5, #2]
1001ce8e:	1cae      	adds	r6, r5, #2
1001ce90:	e75c      	b.n	1001cd4c <__gethex+0x12c>
1001ce92:	1b36      	subs	r6, r6, r4
1001ce94:	4631      	mov	r1, r6
1001ce96:	4650      	mov	r0, sl
1001ce98:	f7fd ff30 	bl	1001acfc <__any_on>
1001ce9c:	4607      	mov	r7, r0
1001ce9e:	b178      	cbz	r0, 1001cec0 <__gethex+0x2a0>
1001cea0:	1e71      	subs	r1, r6, #1
1001cea2:	114a      	asrs	r2, r1, #5
1001cea4:	9b02      	ldr	r3, [sp, #8]
1001cea6:	2701      	movs	r7, #1
1001cea8:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1001ceac:	f001 021f 	and.w	r2, r1, #31
1001ceb0:	fa07 f202 	lsl.w	r2, r7, r2
1001ceb4:	4202      	tst	r2, r0
1001ceb6:	d003      	beq.n	1001cec0 <__gethex+0x2a0>
1001ceb8:	42b9      	cmp	r1, r7
1001ceba:	f300 80b9 	bgt.w	1001d030 <__gethex+0x410>
1001cebe:	2702      	movs	r7, #2
1001cec0:	4631      	mov	r1, r6
1001cec2:	4650      	mov	r0, sl
1001cec4:	44b3      	add	fp, r6
1001cec6:	f7ff fe59 	bl	1001cb7c <rshift>
1001ceca:	e772      	b.n	1001cdb2 <__gethex+0x192>
1001cecc:	f10b 36ff 	add.w	r6, fp, #4294967295	@ 0xffffffff
1001ced0:	2f00      	cmp	r7, #0
1001ced2:	f040 80a5 	bne.w	1001d020 <__gethex+0x400>
1001ced6:	2e00      	cmp	r6, #0
1001ced8:	f040 80a4 	bne.w	1001d024 <__gethex+0x404>
1001cedc:	1173      	asrs	r3, r6, #5
1001cede:	9a02      	ldr	r2, [sp, #8]
1001cee0:	f006 061f 	and.w	r6, r6, #31
1001cee4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001cee8:	2301      	movs	r3, #1
1001ceea:	40b3      	lsls	r3, r6
1001ceec:	4213      	tst	r3, r2
1001ceee:	4659      	mov	r1, fp
1001cef0:	4650      	mov	r0, sl
1001cef2:	bf18      	it	ne
1001cef4:	f047 0702 	orrne.w	r7, r7, #2
1001cef8:	f7ff fe40 	bl	1001cb7c <rshift>
1001cefc:	9b00      	ldr	r3, [sp, #0]
1001cefe:	eba4 040b 	sub.w	r4, r4, fp
1001cf02:	2502      	movs	r5, #2
1001cf04:	f8d3 b004 	ldr.w	fp, [r3, #4]
1001cf08:	e7a7      	b.n	1001ce5a <__gethex+0x23a>
1001cf0a:	4626      	mov	r6, r4
1001cf0c:	e6b4      	b.n	1001cc78 <__gethex+0x58>
1001cf0e:	7823      	ldrb	r3, [r4, #0]
1001cf10:	4625      	mov	r5, r4
1001cf12:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001cf16:	2b50      	cmp	r3, #80	@ 0x50
1001cf18:	f000 8093 	beq.w	1001d042 <__gethex+0x422>
1001cf1c:	f8c9 5000 	str.w	r5, [r9]
1001cf20:	e729      	b.n	1001cd76 <__gethex+0x156>
1001cf22:	bf00      	nop
1001cf24:	100259e4 	.word	0x100259e4
1001cf28:	1001e7f8 	.word	0x1001e7f8
1001cf2c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001cf2e:	f1c3 0301 	rsb	r3, r3, #1
1001cf32:	930f      	str	r3, [sp, #60]	@ 0x3c
1001cf34:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001cf36:	2b00      	cmp	r3, #0
1001cf38:	d099      	beq.n	1001ce6e <__gethex+0x24e>
1001cf3a:	f8dd 8008 	ldr.w	r8, [sp, #8]
1001cf3e:	f8da 7010 	ldr.w	r7, [sl, #16]
1001cf42:	4642      	mov	r2, r8
1001cf44:	ea4f 0987 	mov.w	r9, r7, lsl #2
1001cf48:	eb08 0687 	add.w	r6, r8, r7, lsl #2
1001cf4c:	2000      	movs	r0, #0
1001cf4e:	e003      	b.n	1001cf58 <__gethex+0x338>
1001cf50:	4296      	cmp	r6, r2
1001cf52:	f842 0c04 	str.w	r0, [r2, #-4]
1001cf56:	d93c      	bls.n	1001cfd2 <__gethex+0x3b2>
1001cf58:	4694      	mov	ip, r2
1001cf5a:	f852 1b04 	ldr.w	r1, [r2], #4
1001cf5e:	1c4b      	adds	r3, r1, #1
1001cf60:	d0f6      	beq.n	1001cf50 <__gethex+0x330>
1001cf62:	3101      	adds	r1, #1
1001cf64:	2d02      	cmp	r5, #2
1001cf66:	f8cc 1000 	str.w	r1, [ip]
1001cf6a:	f000 8093 	beq.w	1001d094 <__gethex+0x474>
1001cf6e:	f014 041f 	ands.w	r4, r4, #31
1001cf72:	f040 80b3 	bne.w	1001d0dc <__gethex+0x4bc>
1001cf76:	2521      	movs	r5, #33	@ 0x21
1001cf78:	e77b      	b.n	1001ce72 <__gethex+0x252>
1001cf7a:	07b9      	lsls	r1, r7, #30
1001cf7c:	f57f af77 	bpl.w	1001ce6e <__gethex+0x24e>
1001cf80:	9b02      	ldr	r3, [sp, #8]
1001cf82:	681a      	ldr	r2, [r3, #0]
1001cf84:	4317      	orrs	r7, r2
1001cf86:	07fa      	lsls	r2, r7, #31
1001cf88:	d4d7      	bmi.n	1001cf3a <__gethex+0x31a>
1001cf8a:	e770      	b.n	1001ce6e <__gethex+0x24e>
1001cf8c:	2000      	movs	r0, #0
1001cf8e:	e77d      	b.n	1001ce8c <__gethex+0x26c>
1001cf90:	46ab      	mov	fp, r5
1001cf92:	e680      	b.n	1001cc96 <__gethex+0x76>
1001cf94:	1ba2      	subs	r2, r4, r6
1001cf96:	4651      	mov	r1, sl
1001cf98:	9801      	ldr	r0, [sp, #4]
1001cf9a:	ebab 0b02 	sub.w	fp, fp, r2
1001cf9e:	f7fd fc27 	bl	1001a7f0 <__lshift>
1001cfa2:	f100 0314 	add.w	r3, r0, #20
1001cfa6:	4682      	mov	sl, r0
1001cfa8:	9302      	str	r3, [sp, #8]
1001cfaa:	2700      	movs	r7, #0
1001cfac:	e701      	b.n	1001cdb2 <__gethex+0x192>
1001cfae:	7872      	ldrb	r2, [r6, #1]
1001cfb0:	f818 1002 	ldrb.w	r1, [r8, r2]
1001cfb4:	1c75      	adds	r5, r6, #1
1001cfb6:	462e      	mov	r6, r5
1001cfb8:	2900      	cmp	r1, #0
1001cfba:	f43f ae6c 	beq.w	1001cc96 <__gethex+0x76>
1001cfbe:	f816 2f01 	ldrb.w	r2, [r6, #1]!
1001cfc2:	f818 3002 	ldrb.w	r3, [r8, r2]
1001cfc6:	2b00      	cmp	r3, #0
1001cfc8:	d1f9      	bne.n	1001cfbe <__gethex+0x39e>
1001cfca:	e661      	b.n	1001cc90 <__gethex+0x70>
1001cfcc:	1cbc      	adds	r4, r7, #2
1001cfce:	2700      	movs	r7, #0
1001cfd0:	e63b      	b.n	1001cc4a <__gethex+0x2a>
1001cfd2:	f8da 2008 	ldr.w	r2, [sl, #8]
1001cfd6:	4297      	cmp	r7, r2
1001cfd8:	da65      	bge.n	1001d0a6 <__gethex+0x486>
1001cfda:	463a      	mov	r2, r7
1001cfdc:	eb0a 0182 	add.w	r1, sl, r2, lsl #2
1001cfe0:	2001      	movs	r0, #1
1001cfe2:	3201      	adds	r2, #1
1001cfe4:	2d02      	cmp	r5, #2
1001cfe6:	f8ca 2010 	str.w	r2, [sl, #16]
1001cfea:	6148      	str	r0, [r1, #20]
1001cfec:	d052      	beq.n	1001d094 <__gethex+0x474>
1001cfee:	4297      	cmp	r7, r2
1001cff0:	dabd      	bge.n	1001cf6e <__gethex+0x34e>
1001cff2:	2a00      	cmp	r2, #0
1001cff4:	dc7f      	bgt.n	1001d0f6 <__gethex+0x4d6>
1001cff6:	2200      	movs	r2, #0
1001cff8:	f8ca 2010 	str.w	r2, [sl, #16]
1001cffc:	2200      	movs	r2, #0
1001cffe:	f8ca 2014 	str.w	r2, [sl, #20]
1001d002:	9b00      	ldr	r3, [sp, #0]
1001d004:	689a      	ldr	r2, [r3, #8]
1001d006:	f10b 0b01 	add.w	fp, fp, #1
1001d00a:	455a      	cmp	r2, fp
1001d00c:	dab3      	bge.n	1001cf76 <__gethex+0x356>
1001d00e:	9801      	ldr	r0, [sp, #4]
1001d010:	4651      	mov	r1, sl
1001d012:	f7fd f9ab 	bl	1001a36c <_Bfree>
1001d016:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001d018:	2300      	movs	r3, #0
1001d01a:	6013      	str	r3, [r2, #0]
1001d01c:	25a3      	movs	r5, #163	@ 0xa3
1001d01e:	e6ae      	b.n	1001cd7e <__gethex+0x15e>
1001d020:	2701      	movs	r7, #1
1001d022:	e75b      	b.n	1001cedc <__gethex+0x2bc>
1001d024:	4631      	mov	r1, r6
1001d026:	4650      	mov	r0, sl
1001d028:	f7fd fe68 	bl	1001acfc <__any_on>
1001d02c:	4607      	mov	r7, r0
1001d02e:	e755      	b.n	1001cedc <__gethex+0x2bc>
1001d030:	1eb1      	subs	r1, r6, #2
1001d032:	4650      	mov	r0, sl
1001d034:	f7fd fe62 	bl	1001acfc <__any_on>
1001d038:	2800      	cmp	r0, #0
1001d03a:	f43f af40 	beq.w	1001cebe <__gethex+0x29e>
1001d03e:	2703      	movs	r7, #3
1001d040:	e73e      	b.n	1001cec0 <__gethex+0x2a0>
1001d042:	f04f 0b00 	mov.w	fp, #0
1001d046:	f04f 0a01 	mov.w	sl, #1
1001d04a:	e676      	b.n	1001cd3a <__gethex+0x11a>
1001d04c:	455c      	cmp	r4, fp
1001d04e:	f47f aec7 	bne.w	1001cde0 <__gethex+0x1c0>
1001d052:	2c01      	cmp	r4, #1
1001d054:	d008      	beq.n	1001d068 <__gethex+0x448>
1001d056:	1e61      	subs	r1, r4, #1
1001d058:	4650      	mov	r0, sl
1001d05a:	f7fd fe4f 	bl	1001acfc <__any_on>
1001d05e:	2800      	cmp	r0, #0
1001d060:	f43f aebe 	beq.w	1001cde0 <__gethex+0x1c0>
1001d064:	9b00      	ldr	r3, [sp, #0]
1001d066:	685a      	ldr	r2, [r3, #4]
1001d068:	9903      	ldr	r1, [sp, #12]
1001d06a:	600a      	str	r2, [r1, #0]
1001d06c:	9a02      	ldr	r2, [sp, #8]
1001d06e:	2301      	movs	r3, #1
1001d070:	f8ca 3010 	str.w	r3, [sl, #16]
1001d074:	6013      	str	r3, [r2, #0]
1001d076:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001d078:	2562      	movs	r5, #98	@ 0x62
1001d07a:	f8c3 a000 	str.w	sl, [r3]
1001d07e:	e67e      	b.n	1001cd7e <__gethex+0x15e>
1001d080:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001d082:	2b00      	cmp	r3, #0
1001d084:	f43f aeac 	beq.w	1001cde0 <__gethex+0x1c0>
1001d088:	e7ee      	b.n	1001d068 <__gethex+0x448>
1001d08a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001d08c:	2b00      	cmp	r3, #0
1001d08e:	f47f aea7 	bne.w	1001cde0 <__gethex+0x1c0>
1001d092:	e7e9      	b.n	1001d068 <__gethex+0x448>
1001d094:	9b00      	ldr	r3, [sp, #0]
1001d096:	681a      	ldr	r2, [r3, #0]
1001d098:	3a01      	subs	r2, #1
1001d09a:	42a2      	cmp	r2, r4
1001d09c:	d054      	beq.n	1001d148 <__gethex+0x528>
1001d09e:	2522      	movs	r5, #34	@ 0x22
1001d0a0:	e6e7      	b.n	1001ce72 <__gethex+0x252>
1001d0a2:	2701      	movs	r7, #1
1001d0a4:	e5e1      	b.n	1001cc6a <__gethex+0x4a>
1001d0a6:	f8da 1004 	ldr.w	r1, [sl, #4]
1001d0aa:	9801      	ldr	r0, [sp, #4]
1001d0ac:	3101      	adds	r1, #1
1001d0ae:	f7fd f937 	bl	1001a320 <_Balloc>
1001d0b2:	4606      	mov	r6, r0
1001d0b4:	2800      	cmp	r0, #0
1001d0b6:	d05f      	beq.n	1001d178 <__gethex+0x558>
1001d0b8:	f8da 2010 	ldr.w	r2, [sl, #16]
1001d0bc:	3202      	adds	r2, #2
1001d0be:	0092      	lsls	r2, r2, #2
1001d0c0:	f10a 010c 	add.w	r1, sl, #12
1001d0c4:	300c      	adds	r0, #12
1001d0c6:	f7f8 fbfb 	bl	100158c0 <memcpy>
1001d0ca:	4651      	mov	r1, sl
1001d0cc:	9801      	ldr	r0, [sp, #4]
1001d0ce:	f7fd f94d 	bl	1001a36c <_Bfree>
1001d0d2:	f106 0814 	add.w	r8, r6, #20
1001d0d6:	6932      	ldr	r2, [r6, #16]
1001d0d8:	46b2      	mov	sl, r6
1001d0da:	e77f      	b.n	1001cfdc <__gethex+0x3bc>
1001d0dc:	44c1      	add	r9, r8
1001d0de:	f1c4 0420 	rsb	r4, r4, #32
1001d0e2:	f859 0c04 	ldr.w	r0, [r9, #-4]
1001d0e6:	f7fd f9f3 	bl	1001a4d0 <__hi0bits>
1001d0ea:	42a0      	cmp	r0, r4
1001d0ec:	f6bf af43 	bge.w	1001cf76 <__gethex+0x356>
1001d0f0:	f8da 2010 	ldr.w	r2, [sl, #16]
1001d0f4:	e77d      	b.n	1001cff2 <__gethex+0x3d2>
1001d0f6:	f8da 0014 	ldr.w	r0, [sl, #20]
1001d0fa:	eb08 0282 	add.w	r2, r8, r2, lsl #2
1001d0fe:	f10a 0418 	add.w	r4, sl, #24
1001d102:	42a2      	cmp	r2, r4
1001d104:	ea4f 0050 	mov.w	r0, r0, lsr #1
1001d108:	d92a      	bls.n	1001d160 <__gethex+0x540>
1001d10a:	4645      	mov	r5, r8
1001d10c:	6823      	ldr	r3, [r4, #0]
1001d10e:	ea40 70c3 	orr.w	r0, r0, r3, lsl #31
1001d112:	f845 0b04 	str.w	r0, [r5], #4
1001d116:	f854 0b04 	ldr.w	r0, [r4], #4
1001d11a:	42a2      	cmp	r2, r4
1001d11c:	ea4f 0050 	mov.w	r0, r0, lsr #1
1001d120:	d8f4      	bhi.n	1001d10c <__gethex+0x4ec>
1001d122:	eba2 020a 	sub.w	r2, r2, sl
1001d126:	3a19      	subs	r2, #25
1001d128:	0892      	lsrs	r2, r2, #2
1001d12a:	3201      	adds	r2, #1
1001d12c:	f848 0022 	str.w	r0, [r8, r2, lsl #2]
1001d130:	eb08 0282 	add.w	r2, r8, r2, lsl #2
1001d134:	b9c0      	cbnz	r0, 1001d168 <__gethex+0x548>
1001d136:	eba2 0108 	sub.w	r1, r2, r8
1001d13a:	1089      	asrs	r1, r1, #2
1001d13c:	4590      	cmp	r8, r2
1001d13e:	f8ca 1010 	str.w	r1, [sl, #16]
1001d142:	f47f af5e 	bne.w	1001d002 <__gethex+0x3e2>
1001d146:	e759      	b.n	1001cffc <__gethex+0x3dc>
1001d148:	1162      	asrs	r2, r4, #5
1001d14a:	f004 041f 	and.w	r4, r4, #31
1001d14e:	f858 1022 	ldr.w	r1, [r8, r2, lsl #2]
1001d152:	2201      	movs	r2, #1
1001d154:	40a2      	lsls	r2, r4
1001d156:	420a      	tst	r2, r1
1001d158:	bf14      	ite	ne
1001d15a:	2521      	movne	r5, #33	@ 0x21
1001d15c:	2522      	moveq	r5, #34	@ 0x22
1001d15e:	e688      	b.n	1001ce72 <__gethex+0x252>
1001d160:	f8c8 0000 	str.w	r0, [r8]
1001d164:	4642      	mov	r2, r8
1001d166:	b168      	cbz	r0, 1001d184 <__gethex+0x564>
1001d168:	3204      	adds	r2, #4
1001d16a:	e7e4      	b.n	1001d136 <__gethex+0x516>
1001d16c:	4b07      	ldr	r3, [pc, #28]	@ (1001d18c <__gethex+0x56c>)
1001d16e:	4808      	ldr	r0, [pc, #32]	@ (1001d190 <__gethex+0x570>)
1001d170:	4652      	mov	r2, sl
1001d172:	21e4      	movs	r1, #228	@ 0xe4
1001d174:	f7ff fbb4 	bl	1001c8e0 <__assert_func>
1001d178:	4b04      	ldr	r3, [pc, #16]	@ (1001d18c <__gethex+0x56c>)
1001d17a:	4805      	ldr	r0, [pc, #20]	@ (1001d190 <__gethex+0x570>)
1001d17c:	4632      	mov	r2, r6
1001d17e:	2184      	movs	r1, #132	@ 0x84
1001d180:	f7ff fbae 	bl	1001c8e0 <__assert_func>
1001d184:	f8ca 0010 	str.w	r0, [sl, #16]
1001d188:	e738      	b.n	1001cffc <__gethex+0x3dc>
1001d18a:	bf00      	nop
1001d18c:	1001ebf4 	.word	0x1001ebf4
1001d190:	10025978 	.word	0x10025978

1001d194 <__match>:
1001d194:	b410      	push	{r4}
1001d196:	6804      	ldr	r4, [r0, #0]
1001d198:	3401      	adds	r4, #1
1001d19a:	e009      	b.n	1001d1b0 <__match+0x1c>
1001d19c:	f814 3b01 	ldrb.w	r3, [r4], #1
1001d1a0:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
1001d1a4:	f1bc 0f19 	cmp.w	ip, #25
1001d1a8:	bf98      	it	ls
1001d1aa:	3320      	addls	r3, #32
1001d1ac:	4293      	cmp	r3, r2
1001d1ae:	d107      	bne.n	1001d1c0 <__match+0x2c>
1001d1b0:	f811 2b01 	ldrb.w	r2, [r1], #1
1001d1b4:	2a00      	cmp	r2, #0
1001d1b6:	d1f1      	bne.n	1001d19c <__match+0x8>
1001d1b8:	6004      	str	r4, [r0, #0]
1001d1ba:	2001      	movs	r0, #1
1001d1bc:	bc10      	pop	{r4}
1001d1be:	4770      	bx	lr
1001d1c0:	2000      	movs	r0, #0
1001d1c2:	bc10      	pop	{r4}
1001d1c4:	4770      	bx	lr
1001d1c6:	bf00      	nop

1001d1c8 <__hexnan>:
1001d1c8:	6809      	ldr	r1, [r1, #0]
1001d1ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001d1ce:	114b      	asrs	r3, r1, #5
1001d1d0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
1001d1d4:	f011 0b1f 	ands.w	fp, r1, #31
1001d1d8:	4607      	mov	r7, r0
1001d1da:	bf0c      	ite	eq
1001d1dc:	4618      	moveq	r0, r3
1001d1de:	1d18      	addne	r0, r3, #4
1001d1e0:	683c      	ldr	r4, [r7, #0]
1001d1e2:	bf0c      	ite	eq
1001d1e4:	1f1d      	subeq	r5, r3, #4
1001d1e6:	461d      	movne	r5, r3
1001d1e8:	2300      	movs	r3, #0
1001d1ea:	f840 3c04 	str.w	r3, [r0, #-4]
1001d1ee:	7861      	ldrb	r1, [r4, #1]
1001d1f0:	b085      	sub	sp, #20
1001d1f2:	3401      	adds	r4, #1
1001d1f4:	2900      	cmp	r1, #0
1001d1f6:	f000 80a8 	beq.w	1001d34a <__hexnan+0x182>
1001d1fa:	469e      	mov	lr, r3
1001d1fc:	469a      	mov	sl, r3
1001d1fe:	461e      	mov	r6, r3
1001d200:	460b      	mov	r3, r1
1001d202:	4601      	mov	r1, r0
1001d204:	4610      	mov	r0, r2
1001d206:	f8df 9188 	ldr.w	r9, [pc, #392]	@ 1001d390 <__hexnan+0x1c8>
1001d20a:	9701      	str	r7, [sp, #4]
1001d20c:	465a      	mov	r2, fp
1001d20e:	46a8      	mov	r8, r5
1001d210:	46ac      	mov	ip, r5
1001d212:	4683      	mov	fp, r0
1001d214:	e010      	b.n	1001d238 <__hexnan+0x70>
1001d216:	2b20      	cmp	r3, #32
1001d218:	f200 808f 	bhi.w	1001d33a <__hexnan+0x172>
1001d21c:	4556      	cmp	r6, sl
1001d21e:	dd08      	ble.n	1001d232 <__hexnan+0x6a>
1001d220:	45c4      	cmp	ip, r8
1001d222:	d202      	bcs.n	1001d22a <__hexnan+0x62>
1001d224:	f1be 0f07 	cmp.w	lr, #7
1001d228:	dd5f      	ble.n	1001d2ea <__hexnan+0x122>
1001d22a:	45e3      	cmp	fp, ip
1001d22c:	d354      	bcc.n	1001d2d8 <__hexnan+0x110>
1001d22e:	f04f 0e08 	mov.w	lr, #8
1001d232:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1001d236:	b1b3      	cbz	r3, 1001d266 <__hexnan+0x9e>
1001d238:	f819 7003 	ldrb.w	r7, [r9, r3]
1001d23c:	2f00      	cmp	r7, #0
1001d23e:	d0ea      	beq.n	1001d216 <__hexnan+0x4e>
1001d240:	f10e 0e01 	add.w	lr, lr, #1
1001d244:	f1be 0f08 	cmp.w	lr, #8
1001d248:	f106 0601 	add.w	r6, r6, #1
1001d24c:	dc3a      	bgt.n	1001d2c4 <__hexnan+0xfc>
1001d24e:	f8dc 3000 	ldr.w	r3, [ip]
1001d252:	011b      	lsls	r3, r3, #4
1001d254:	f007 070f 	and.w	r7, r7, #15
1001d258:	431f      	orrs	r7, r3
1001d25a:	f8cc 7000 	str.w	r7, [ip]
1001d25e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1001d262:	2b00      	cmp	r3, #0
1001d264:	d1e8      	bne.n	1001d238 <__hexnan+0x70>
1001d266:	465b      	mov	r3, fp
1001d268:	4608      	mov	r0, r1
1001d26a:	4693      	mov	fp, r2
1001d26c:	461a      	mov	r2, r3
1001d26e:	2e00      	cmp	r6, #0
1001d270:	d06b      	beq.n	1001d34a <__hexnan+0x182>
1001d272:	45e0      	cmp	r8, ip
1001d274:	d902      	bls.n	1001d27c <__hexnan+0xb4>
1001d276:	f1be 0f07 	cmp.w	lr, #7
1001d27a:	dd73      	ble.n	1001d364 <__hexnan+0x19c>
1001d27c:	4562      	cmp	r2, ip
1001d27e:	d24d      	bcs.n	1001d31c <__hexnan+0x154>
1001d280:	1f11      	subs	r1, r2, #4
1001d282:	4663      	mov	r3, ip
1001d284:	f853 4b04 	ldr.w	r4, [r3], #4
1001d288:	f841 4f04 	str.w	r4, [r1, #4]!
1001d28c:	42ab      	cmp	r3, r5
1001d28e:	d9f9      	bls.n	1001d284 <__hexnan+0xbc>
1001d290:	eba5 030c 	sub.w	r3, r5, ip
1001d294:	f023 0303 	bic.w	r3, r3, #3
1001d298:	1c69      	adds	r1, r5, #1
1001d29a:	3304      	adds	r3, #4
1001d29c:	f10c 0c01 	add.w	ip, ip, #1
1001d2a0:	4561      	cmp	r1, ip
1001d2a2:	bf38      	it	cc
1001d2a4:	2304      	movcc	r3, #4
1001d2a6:	4413      	add	r3, r2
1001d2a8:	2100      	movs	r1, #0
1001d2aa:	f843 1b04 	str.w	r1, [r3], #4
1001d2ae:	42ab      	cmp	r3, r5
1001d2b0:	d9fb      	bls.n	1001d2aa <__hexnan+0xe2>
1001d2b2:	f850 3c04 	ldr.w	r3, [r0, #-4]
1001d2b6:	2b00      	cmp	r3, #0
1001d2b8:	d14d      	bne.n	1001d356 <__hexnan+0x18e>
1001d2ba:	42aa      	cmp	r2, r5
1001d2bc:	d049      	beq.n	1001d352 <__hexnan+0x18a>
1001d2be:	f855 3d04 	ldr.w	r3, [r5, #-4]!
1001d2c2:	e7f8      	b.n	1001d2b6 <__hexnan+0xee>
1001d2c4:	45e3      	cmp	fp, ip
1001d2c6:	d2b4      	bcs.n	1001d232 <__hexnan+0x6a>
1001d2c8:	2300      	movs	r3, #0
1001d2ca:	f84c 3c04 	str.w	r3, [ip, #-4]
1001d2ce:	f04f 0e01 	mov.w	lr, #1
1001d2d2:	f1ac 0c04 	sub.w	ip, ip, #4
1001d2d6:	e7bd      	b.n	1001d254 <__hexnan+0x8c>
1001d2d8:	2300      	movs	r3, #0
1001d2da:	f1ac 0804 	sub.w	r8, ip, #4
1001d2de:	f84c 3c04 	str.w	r3, [ip, #-4]
1001d2e2:	46b2      	mov	sl, r6
1001d2e4:	46c4      	mov	ip, r8
1001d2e6:	469e      	mov	lr, r3
1001d2e8:	e7a3      	b.n	1001d232 <__hexnan+0x6a>
1001d2ea:	f1ce 0008 	rsb	r0, lr, #8
1001d2ee:	0080      	lsls	r0, r0, #2
1001d2f0:	e9cd 2c02 	strd	r2, ip, [sp, #8]
1001d2f4:	f8dc 3000 	ldr.w	r3, [ip]
1001d2f8:	4667      	mov	r7, ip
1001d2fa:	f1c0 0e20 	rsb	lr, r0, #32
1001d2fe:	4684      	mov	ip, r0
1001d300:	6878      	ldr	r0, [r7, #4]
1001d302:	fa00 f20e 	lsl.w	r2, r0, lr
1001d306:	431a      	orrs	r2, r3
1001d308:	fa20 f30c 	lsr.w	r3, r0, ip
1001d30c:	603a      	str	r2, [r7, #0]
1001d30e:	f847 3f04 	str.w	r3, [r7, #4]!
1001d312:	4547      	cmp	r7, r8
1001d314:	d3f4      	bcc.n	1001d300 <__hexnan+0x138>
1001d316:	e9dd 2c02 	ldrd	r2, ip, [sp, #8]
1001d31a:	e786      	b.n	1001d22a <__hexnan+0x62>
1001d31c:	f850 3c04 	ldr.w	r3, [r0, #-4]
1001d320:	f1bb 0f00 	cmp.w	fp, #0
1001d324:	d0c7      	beq.n	1001d2b6 <__hexnan+0xee>
1001d326:	f1cb 0b20 	rsb	fp, fp, #32
1001d32a:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001d32e:	fa21 f10b 	lsr.w	r1, r1, fp
1001d332:	400b      	ands	r3, r1
1001d334:	f840 3c04 	str.w	r3, [r0, #-4]
1001d338:	e7bd      	b.n	1001d2b6 <__hexnan+0xee>
1001d33a:	4608      	mov	r0, r1
1001d33c:	4619      	mov	r1, r3
1001d33e:	2929      	cmp	r1, #41	@ 0x29
1001d340:	465b      	mov	r3, fp
1001d342:	9f01      	ldr	r7, [sp, #4]
1001d344:	4693      	mov	fp, r2
1001d346:	461a      	mov	r2, r3
1001d348:	d009      	beq.n	1001d35e <__hexnan+0x196>
1001d34a:	2004      	movs	r0, #4
1001d34c:	b005      	add	sp, #20
1001d34e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d352:	2301      	movs	r3, #1
1001d354:	602b      	str	r3, [r5, #0]
1001d356:	2005      	movs	r0, #5
1001d358:	b005      	add	sp, #20
1001d35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d35e:	3401      	adds	r4, #1
1001d360:	603c      	str	r4, [r7, #0]
1001d362:	e784      	b.n	1001d26e <__hexnan+0xa6>
1001d364:	f1ce 0308 	rsb	r3, lr, #8
1001d368:	f8dc 1000 	ldr.w	r1, [ip]
1001d36c:	009b      	lsls	r3, r3, #2
1001d36e:	f1c3 0e20 	rsb	lr, r3, #32
1001d372:	4666      	mov	r6, ip
1001d374:	460c      	mov	r4, r1
1001d376:	6877      	ldr	r7, [r6, #4]
1001d378:	fa07 f10e 	lsl.w	r1, r7, lr
1001d37c:	4321      	orrs	r1, r4
1001d37e:	fa27 f403 	lsr.w	r4, r7, r3
1001d382:	6031      	str	r1, [r6, #0]
1001d384:	f846 4f04 	str.w	r4, [r6, #4]!
1001d388:	45b0      	cmp	r8, r6
1001d38a:	d8f4      	bhi.n	1001d376 <__hexnan+0x1ae>
1001d38c:	e776      	b.n	1001d27c <__hexnan+0xb4>
1001d38e:	bf00      	nop
1001d390:	100259e4 	.word	0x100259e4

1001d394 <fiprintf>:
1001d394:	b40e      	push	{r1, r2, r3}
1001d396:	b510      	push	{r4, lr}
1001d398:	b083      	sub	sp, #12
1001d39a:	ab05      	add	r3, sp, #20
1001d39c:	4c06      	ldr	r4, [pc, #24]	@ (1001d3b8 <fiprintf+0x24>)
1001d39e:	f853 2b04 	ldr.w	r2, [r3], #4
1001d3a2:	9301      	str	r3, [sp, #4]
1001d3a4:	4601      	mov	r1, r0
1001d3a6:	6820      	ldr	r0, [r4, #0]
1001d3a8:	f7f5 ff2a 	bl	10013200 <_vfiprintf_r>
1001d3ac:	b003      	add	sp, #12
1001d3ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001d3b2:	b003      	add	sp, #12
1001d3b4:	4770      	bx	lr
1001d3b6:	bf00      	nop
1001d3b8:	20000598 	.word	0x20000598

1001d3bc <__ssprint_r>:
1001d3bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001d3c0:	6893      	ldr	r3, [r2, #8]
1001d3c2:	6817      	ldr	r7, [r2, #0]
1001d3c4:	b083      	sub	sp, #12
1001d3c6:	4692      	mov	sl, r2
1001d3c8:	2b00      	cmp	r3, #0
1001d3ca:	d074      	beq.n	1001d4b6 <__ssprint_r+0xfa>
1001d3cc:	f04f 0b00 	mov.w	fp, #0
1001d3d0:	688b      	ldr	r3, [r1, #8]
1001d3d2:	680a      	ldr	r2, [r1, #0]
1001d3d4:	4681      	mov	r9, r0
1001d3d6:	460c      	mov	r4, r1
1001d3d8:	465d      	mov	r5, fp
1001d3da:	e045      	b.n	1001d468 <__ssprint_r+0xac>
1001d3dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001d3e0:	f413 6f90 	tst.w	r3, #1152	@ 0x480
1001d3e4:	d02c      	beq.n	1001d440 <__ssprint_r+0x84>
1001d3e6:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
1001d3ea:	1a16      	subs	r6, r2, r0
1001d3ec:	eb01 0241 	add.w	r2, r1, r1, lsl #1
1001d3f0:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
1001d3f4:	1c71      	adds	r1, r6, #1
1001d3f6:	1052      	asrs	r2, r2, #1
1001d3f8:	4429      	add	r1, r5
1001d3fa:	4291      	cmp	r1, r2
1001d3fc:	bf92      	itee	ls
1001d3fe:	4690      	movls	r8, r2
1001d400:	4688      	movhi	r8, r1
1001d402:	460a      	movhi	r2, r1
1001d404:	055b      	lsls	r3, r3, #21
1001d406:	d539      	bpl.n	1001d47c <__ssprint_r+0xc0>
1001d408:	4611      	mov	r1, r2
1001d40a:	4648      	mov	r0, r9
1001d40c:	f7f3 fd80 	bl	10010f10 <_malloc_r>
1001d410:	9001      	str	r0, [sp, #4]
1001d412:	2800      	cmp	r0, #0
1001d414:	d03d      	beq.n	1001d492 <__ssprint_r+0xd6>
1001d416:	4632      	mov	r2, r6
1001d418:	6921      	ldr	r1, [r4, #16]
1001d41a:	f7f8 fa51 	bl	100158c0 <memcpy>
1001d41e:	89a2      	ldrh	r2, [r4, #12]
1001d420:	9b01      	ldr	r3, [sp, #4]
1001d422:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
1001d426:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
1001d42a:	81a2      	strh	r2, [r4, #12]
1001d42c:	1998      	adds	r0, r3, r6
1001d42e:	eba8 0606 	sub.w	r6, r8, r6
1001d432:	60a6      	str	r6, [r4, #8]
1001d434:	f8c4 8014 	str.w	r8, [r4, #20]
1001d438:	6123      	str	r3, [r4, #16]
1001d43a:	6020      	str	r0, [r4, #0]
1001d43c:	46a8      	mov	r8, r5
1001d43e:	462e      	mov	r6, r5
1001d440:	4632      	mov	r2, r6
1001d442:	4659      	mov	r1, fp
1001d444:	f7f7 fe84 	bl	10015150 <memmove>
1001d448:	f8da 1008 	ldr.w	r1, [sl, #8]
1001d44c:	68a3      	ldr	r3, [r4, #8]
1001d44e:	6822      	ldr	r2, [r4, #0]
1001d450:	eba3 0308 	sub.w	r3, r3, r8
1001d454:	4432      	add	r2, r6
1001d456:	1b49      	subs	r1, r1, r5
1001d458:	60a3      	str	r3, [r4, #8]
1001d45a:	6022      	str	r2, [r4, #0]
1001d45c:	f8ca 1008 	str.w	r1, [sl, #8]
1001d460:	b349      	cbz	r1, 1001d4b6 <__ssprint_r+0xfa>
1001d462:	e9d7 b500 	ldrd	fp, r5, [r7]
1001d466:	3708      	adds	r7, #8
1001d468:	4698      	mov	r8, r3
1001d46a:	4610      	mov	r0, r2
1001d46c:	2d00      	cmp	r5, #0
1001d46e:	d0f8      	beq.n	1001d462 <__ssprint_r+0xa6>
1001d470:	429d      	cmp	r5, r3
1001d472:	461e      	mov	r6, r3
1001d474:	d2b2      	bcs.n	1001d3dc <__ssprint_r+0x20>
1001d476:	46a8      	mov	r8, r5
1001d478:	462e      	mov	r6, r5
1001d47a:	e7e1      	b.n	1001d440 <__ssprint_r+0x84>
1001d47c:	4601      	mov	r1, r0
1001d47e:	4648      	mov	r0, r9
1001d480:	f7f6 ffa0 	bl	100143c4 <_realloc_r>
1001d484:	4603      	mov	r3, r0
1001d486:	2800      	cmp	r0, #0
1001d488:	d1d0      	bne.n	1001d42c <__ssprint_r+0x70>
1001d48a:	6921      	ldr	r1, [r4, #16]
1001d48c:	4648      	mov	r0, r9
1001d48e:	f7f9 fbb7 	bl	10016c00 <_free_r>
1001d492:	89a3      	ldrh	r3, [r4, #12]
1001d494:	220c      	movs	r2, #12
1001d496:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001d49a:	f8c9 2000 	str.w	r2, [r9]
1001d49e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d4a2:	81a3      	strh	r3, [r4, #12]
1001d4a4:	2200      	movs	r2, #0
1001d4a6:	2300      	movs	r3, #0
1001d4a8:	f8ca 2008 	str.w	r2, [sl, #8]
1001d4ac:	f8ca 3004 	str.w	r3, [sl, #4]
1001d4b0:	b003      	add	sp, #12
1001d4b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d4b6:	2000      	movs	r0, #0
1001d4b8:	2300      	movs	r3, #0
1001d4ba:	f8ca 3004 	str.w	r3, [sl, #4]
1001d4be:	b003      	add	sp, #12
1001d4c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1001d4c4 <_sungetc_r>:
1001d4c4:	b538      	push	{r3, r4, r5, lr}
1001d4c6:	1c4b      	adds	r3, r1, #1
1001d4c8:	d01a      	beq.n	1001d500 <_sungetc_r+0x3c>
1001d4ca:	4614      	mov	r4, r2
1001d4cc:	8992      	ldrh	r2, [r2, #12]
1001d4ce:	6863      	ldr	r3, [r4, #4]
1001d4d0:	f022 0220 	bic.w	r2, r2, #32
1001d4d4:	81a2      	strh	r2, [r4, #12]
1001d4d6:	6b22      	ldr	r2, [r4, #48]	@ 0x30
1001d4d8:	b2cd      	uxtb	r5, r1
1001d4da:	b1a2      	cbz	r2, 1001d506 <_sungetc_r+0x42>
1001d4dc:	6b62      	ldr	r2, [r4, #52]	@ 0x34
1001d4de:	429a      	cmp	r2, r3
1001d4e0:	dd09      	ble.n	1001d4f6 <_sungetc_r+0x32>
1001d4e2:	6823      	ldr	r3, [r4, #0]
1001d4e4:	1e5a      	subs	r2, r3, #1
1001d4e6:	6022      	str	r2, [r4, #0]
1001d4e8:	f803 5c01 	strb.w	r5, [r3, #-1]
1001d4ec:	6863      	ldr	r3, [r4, #4]
1001d4ee:	3301      	adds	r3, #1
1001d4f0:	6063      	str	r3, [r4, #4]
1001d4f2:	4628      	mov	r0, r5
1001d4f4:	bd38      	pop	{r3, r4, r5, pc}
1001d4f6:	4621      	mov	r1, r4
1001d4f8:	f000 f89e 	bl	1001d638 <__submore>
1001d4fc:	2800      	cmp	r0, #0
1001d4fe:	d0f0      	beq.n	1001d4e2 <_sungetc_r+0x1e>
1001d500:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001d504:	e7f5      	b.n	1001d4f2 <_sungetc_r+0x2e>
1001d506:	6922      	ldr	r2, [r4, #16]
1001d508:	6821      	ldr	r1, [r4, #0]
1001d50a:	b12a      	cbz	r2, 1001d518 <_sungetc_r+0x54>
1001d50c:	428a      	cmp	r2, r1
1001d50e:	d203      	bcs.n	1001d518 <_sungetc_r+0x54>
1001d510:	f811 2c01 	ldrb.w	r2, [r1, #-1]
1001d514:	42aa      	cmp	r2, r5
1001d516:	d00c      	beq.n	1001d532 <_sungetc_r+0x6e>
1001d518:	4622      	mov	r2, r4
1001d51a:	e9c4 130e 	strd	r1, r3, [r4, #56]	@ 0x38
1001d51e:	f104 0040 	add.w	r0, r4, #64	@ 0x40
1001d522:	2303      	movs	r3, #3
1001d524:	6363      	str	r3, [r4, #52]	@ 0x34
1001d526:	6320      	str	r0, [r4, #48]	@ 0x30
1001d528:	f802 5f42 	strb.w	r5, [r2, #66]!
1001d52c:	2301      	movs	r3, #1
1001d52e:	6022      	str	r2, [r4, #0]
1001d530:	e7de      	b.n	1001d4f0 <_sungetc_r+0x2c>
1001d532:	3901      	subs	r1, #1
1001d534:	6021      	str	r1, [r4, #0]
1001d536:	3301      	adds	r3, #1
1001d538:	e7da      	b.n	1001d4f0 <_sungetc_r+0x2c>
1001d53a:	bf00      	nop

1001d53c <__ssrefill_r>:
1001d53c:	b510      	push	{r4, lr}
1001d53e:	460c      	mov	r4, r1
1001d540:	6b09      	ldr	r1, [r1, #48]	@ 0x30
1001d542:	b169      	cbz	r1, 1001d560 <__ssrefill_r+0x24>
1001d544:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001d548:	4299      	cmp	r1, r3
1001d54a:	d001      	beq.n	1001d550 <__ssrefill_r+0x14>
1001d54c:	f7f9 fb58 	bl	10016c00 <_free_r>
1001d550:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
1001d552:	6063      	str	r3, [r4, #4]
1001d554:	2000      	movs	r0, #0
1001d556:	6320      	str	r0, [r4, #48]	@ 0x30
1001d558:	b113      	cbz	r3, 1001d560 <__ssrefill_r+0x24>
1001d55a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
1001d55c:	6023      	str	r3, [r4, #0]
1001d55e:	bd10      	pop	{r4, pc}
1001d560:	89a2      	ldrh	r2, [r4, #12]
1001d562:	6923      	ldr	r3, [r4, #16]
1001d564:	2100      	movs	r1, #0
1001d566:	f042 0220 	orr.w	r2, r2, #32
1001d56a:	6061      	str	r1, [r4, #4]
1001d56c:	81a2      	strh	r2, [r4, #12]
1001d56e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d572:	e7f3      	b.n	1001d55c <__ssrefill_r+0x20>

1001d574 <_sfread_r>:
1001d574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001d578:	b085      	sub	sp, #20
1001d57a:	469c      	mov	ip, r3
1001d57c:	fb02 f303 	mul.w	r3, r2, r3
1001d580:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
1001d582:	9301      	str	r3, [sp, #4]
1001d584:	2b00      	cmp	r3, #0
1001d586:	d03c      	beq.n	1001d602 <_sfread_r+0x8e>
1001d588:	460f      	mov	r7, r1
1001d58a:	e9d4 1500 	ldrd	r1, r5, [r4]
1001d58e:	9b01      	ldr	r3, [sp, #4]
1001d590:	42ab      	cmp	r3, r5
1001d592:	d94e      	bls.n	1001d632 <_sfread_r+0xbe>
1001d594:	9e01      	ldr	r6, [sp, #4]
1001d596:	e9cd c202 	strd	ip, r2, [sp, #8]
1001d59a:	462b      	mov	r3, r5
1001d59c:	4683      	mov	fp, r0
1001d59e:	4635      	mov	r5, r6
1001d5a0:	f04f 0800 	mov.w	r8, #0
1001d5a4:	f104 0940 	add.w	r9, r4, #64	@ 0x40
1001d5a8:	461e      	mov	r6, r3
1001d5aa:	4632      	mov	r2, r6
1001d5ac:	4638      	mov	r0, r7
1001d5ae:	f7f8 f987 	bl	100158c0 <memcpy>
1001d5b2:	6821      	ldr	r1, [r4, #0]
1001d5b4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1001d5b6:	198a      	adds	r2, r1, r6
1001d5b8:	46aa      	mov	sl, r5
1001d5ba:	e9c4 2800 	strd	r2, r8, [r4]
1001d5be:	4619      	mov	r1, r3
1001d5c0:	4658      	mov	r0, fp
1001d5c2:	4437      	add	r7, r6
1001d5c4:	1bad      	subs	r5, r5, r6
1001d5c6:	b303      	cbz	r3, 1001d60a <_sfread_r+0x96>
1001d5c8:	454b      	cmp	r3, r9
1001d5ca:	d001      	beq.n	1001d5d0 <_sfread_r+0x5c>
1001d5cc:	f7f9 fb18 	bl	10016c00 <_free_r>
1001d5d0:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
1001d5d2:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
1001d5d6:	6060      	str	r0, [r4, #4]
1001d5d8:	b1b8      	cbz	r0, 1001d60a <_sfread_r+0x96>
1001d5da:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
1001d5dc:	6021      	str	r1, [r4, #0]
1001d5de:	42a8      	cmp	r0, r5
1001d5e0:	4606      	mov	r6, r0
1001d5e2:	d3e2      	bcc.n	1001d5aa <_sfread_r+0x36>
1001d5e4:	f8dd c008 	ldr.w	ip, [sp, #8]
1001d5e8:	462e      	mov	r6, r5
1001d5ea:	4632      	mov	r2, r6
1001d5ec:	4638      	mov	r0, r7
1001d5ee:	f8cd c004 	str.w	ip, [sp, #4]
1001d5f2:	f7f8 f965 	bl	100158c0 <memcpy>
1001d5f6:	e9d4 3200 	ldrd	r3, r2, [r4]
1001d5fa:	1b92      	subs	r2, r2, r6
1001d5fc:	4433      	add	r3, r6
1001d5fe:	e9c4 3200 	strd	r3, r2, [r4]
1001d602:	9801      	ldr	r0, [sp, #4]
1001d604:	b005      	add	sp, #20
1001d606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d60a:	9b01      	ldr	r3, [sp, #4]
1001d60c:	9a03      	ldr	r2, [sp, #12]
1001d60e:	4433      	add	r3, r6
1001d610:	eba3 050a 	sub.w	r5, r3, sl
1001d614:	fbb5 f3f2 	udiv	r3, r5, r2
1001d618:	9301      	str	r3, [sp, #4]
1001d61a:	89a3      	ldrh	r3, [r4, #12]
1001d61c:	6922      	ldr	r2, [r4, #16]
1001d61e:	9801      	ldr	r0, [sp, #4]
1001d620:	f043 0320 	orr.w	r3, r3, #32
1001d624:	81a3      	strh	r3, [r4, #12]
1001d626:	2300      	movs	r3, #0
1001d628:	e9c4 2300 	strd	r2, r3, [r4]
1001d62c:	b005      	add	sp, #20
1001d62e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d632:	461e      	mov	r6, r3
1001d634:	e7d9      	b.n	1001d5ea <_sfread_r+0x76>
1001d636:	bf00      	nop

1001d638 <__submore>:
1001d638:	f101 0340 	add.w	r3, r1, #64	@ 0x40
1001d63c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001d640:	460c      	mov	r4, r1
1001d642:	6b09      	ldr	r1, [r1, #48]	@ 0x30
1001d644:	4299      	cmp	r1, r3
1001d646:	d014      	beq.n	1001d672 <__submore+0x3a>
1001d648:	6b66      	ldr	r6, [r4, #52]	@ 0x34
1001d64a:	0077      	lsls	r7, r6, #1
1001d64c:	463a      	mov	r2, r7
1001d64e:	f7f6 feb9 	bl	100143c4 <_realloc_r>
1001d652:	4605      	mov	r5, r0
1001d654:	b330      	cbz	r0, 1001d6a4 <__submore+0x6c>
1001d656:	eb00 0806 	add.w	r8, r0, r6
1001d65a:	4601      	mov	r1, r0
1001d65c:	4632      	mov	r2, r6
1001d65e:	4640      	mov	r0, r8
1001d660:	f7f8 f92e 	bl	100158c0 <memcpy>
1001d664:	e9c4 570c 	strd	r5, r7, [r4, #48]	@ 0x30
1001d668:	f8c4 8000 	str.w	r8, [r4]
1001d66c:	2000      	movs	r0, #0
1001d66e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d672:	f44f 6180 	mov.w	r1, #1024	@ 0x400
1001d676:	f7f3 fc4b 	bl	10010f10 <_malloc_r>
1001d67a:	b198      	cbz	r0, 1001d6a4 <__submore+0x6c>
1001d67c:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
1001d680:	f44f 6280 	mov.w	r2, #1024	@ 0x400
1001d684:	e9c4 020c 	strd	r0, r2, [r4, #48]	@ 0x30
1001d688:	f880 33ff 	strb.w	r3, [r0, #1023]	@ 0x3ff
1001d68c:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
1001d690:	f880 33fe 	strb.w	r3, [r0, #1022]	@ 0x3fe
1001d694:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
1001d698:	f880 23fd 	strb.w	r2, [r0, #1021]	@ 0x3fd
1001d69c:	f200 33fd 	addw	r3, r0, #1021	@ 0x3fd
1001d6a0:	6023      	str	r3, [r4, #0]
1001d6a2:	e7e3      	b.n	1001d66c <__submore+0x34>
1001d6a4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d6a8:	e7e1      	b.n	1001d66e <__submore+0x36>
1001d6aa:	bf00      	nop

1001d6ac <abort>:
1001d6ac:	b508      	push	{r3, lr}
1001d6ae:	2006      	movs	r0, #6
1001d6b0:	f000 f804 	bl	1001d6bc <raise>
1001d6b4:	2001      	movs	r0, #1
1001d6b6:	f000 f855 	bl	1001d764 <_exit>
1001d6ba:	bf00      	nop

1001d6bc <raise>:
1001d6bc:	b538      	push	{r3, r4, r5, lr}
1001d6be:	4b14      	ldr	r3, [pc, #80]	@ (1001d710 <raise+0x54>)
1001d6c0:	281f      	cmp	r0, #31
1001d6c2:	681d      	ldr	r5, [r3, #0]
1001d6c4:	d81e      	bhi.n	1001d704 <raise+0x48>
1001d6c6:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
1001d6ca:	4604      	mov	r4, r0
1001d6cc:	b162      	cbz	r2, 1001d6e8 <raise+0x2c>
1001d6ce:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
1001d6d2:	b14b      	cbz	r3, 1001d6e8 <raise+0x2c>
1001d6d4:	2b01      	cmp	r3, #1
1001d6d6:	d005      	beq.n	1001d6e4 <raise+0x28>
1001d6d8:	1c59      	adds	r1, r3, #1
1001d6da:	d00f      	beq.n	1001d6fc <raise+0x40>
1001d6dc:	2100      	movs	r1, #0
1001d6de:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
1001d6e2:	4798      	blx	r3
1001d6e4:	2000      	movs	r0, #0
1001d6e6:	bd38      	pop	{r3, r4, r5, pc}
1001d6e8:	4628      	mov	r0, r5
1001d6ea:	f000 f829 	bl	1001d740 <_getpid_r>
1001d6ee:	4622      	mov	r2, r4
1001d6f0:	4601      	mov	r1, r0
1001d6f2:	4628      	mov	r0, r5
1001d6f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001d6f8:	f000 b80c 	b.w	1001d714 <_kill_r>
1001d6fc:	2316      	movs	r3, #22
1001d6fe:	602b      	str	r3, [r5, #0]
1001d700:	2001      	movs	r0, #1
1001d702:	bd38      	pop	{r3, r4, r5, pc}
1001d704:	2316      	movs	r3, #22
1001d706:	602b      	str	r3, [r5, #0]
1001d708:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d70c:	bd38      	pop	{r3, r4, r5, pc}
1001d70e:	bf00      	nop
1001d710:	20000598 	.word	0x20000598

1001d714 <_kill_r>:
1001d714:	b570      	push	{r4, r5, r6, lr}
1001d716:	460c      	mov	r4, r1
1001d718:	4d08      	ldr	r5, [pc, #32]	@ (1001d73c <_kill_r+0x28>)
1001d71a:	4603      	mov	r3, r0
1001d71c:	2600      	movs	r6, #0
1001d71e:	4620      	mov	r0, r4
1001d720:	4611      	mov	r1, r2
1001d722:	461c      	mov	r4, r3
1001d724:	602e      	str	r6, [r5, #0]
1001d726:	f000 f815 	bl	1001d754 <_kill>
1001d72a:	1c43      	adds	r3, r0, #1
1001d72c:	d000      	beq.n	1001d730 <_kill_r+0x1c>
1001d72e:	bd70      	pop	{r4, r5, r6, pc}
1001d730:	682b      	ldr	r3, [r5, #0]
1001d732:	2b00      	cmp	r3, #0
1001d734:	d0fb      	beq.n	1001d72e <_kill_r+0x1a>
1001d736:	6023      	str	r3, [r4, #0]
1001d738:	bd70      	pop	{r4, r5, r6, pc}
1001d73a:	bf00      	nop
1001d73c:	200015c4 	.word	0x200015c4

1001d740 <_getpid_r>:
1001d740:	f000 b800 	b.w	1001d744 <_getpid>

1001d744 <_getpid>:
1001d744:	4b02      	ldr	r3, [pc, #8]	@ (1001d750 <_getpid+0xc>)
1001d746:	2258      	movs	r2, #88	@ 0x58
1001d748:	601a      	str	r2, [r3, #0]
1001d74a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d74e:	4770      	bx	lr
1001d750:	200015c4 	.word	0x200015c4

1001d754 <_kill>:
1001d754:	4b02      	ldr	r3, [pc, #8]	@ (1001d760 <_kill+0xc>)
1001d756:	2258      	movs	r2, #88	@ 0x58
1001d758:	601a      	str	r2, [r3, #0]
1001d75a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d75e:	4770      	bx	lr
1001d760:	200015c4 	.word	0x200015c4

1001d764 <_exit>:
1001d764:	e7fe      	b.n	1001d764 <_exit>
1001d766:	bf00      	nop

1001d768 <__aeabi_drsub>:
1001d768:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
1001d76c:	e002      	b.n	1001d774 <__adddf3>
1001d76e:	bf00      	nop

1001d770 <__aeabi_dsub>:
1001d770:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

1001d774 <__adddf3>:
1001d774:	b530      	push	{r4, r5, lr}
1001d776:	ea4f 0441 	mov.w	r4, r1, lsl #1
1001d77a:	ea4f 0543 	mov.w	r5, r3, lsl #1
1001d77e:	ea94 0f05 	teq	r4, r5
1001d782:	bf08      	it	eq
1001d784:	ea90 0f02 	teqeq	r0, r2
1001d788:	bf1f      	itttt	ne
1001d78a:	ea54 0c00 	orrsne.w	ip, r4, r0
1001d78e:	ea55 0c02 	orrsne.w	ip, r5, r2
1001d792:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
1001d796:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1001d79a:	f000 80e2 	beq.w	1001d962 <__adddf3+0x1ee>
1001d79e:	ea4f 5454 	mov.w	r4, r4, lsr #21
1001d7a2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
1001d7a6:	bfb8      	it	lt
1001d7a8:	426d      	neglt	r5, r5
1001d7aa:	dd0c      	ble.n	1001d7c6 <__adddf3+0x52>
1001d7ac:	442c      	add	r4, r5
1001d7ae:	ea80 0202 	eor.w	r2, r0, r2
1001d7b2:	ea81 0303 	eor.w	r3, r1, r3
1001d7b6:	ea82 0000 	eor.w	r0, r2, r0
1001d7ba:	ea83 0101 	eor.w	r1, r3, r1
1001d7be:	ea80 0202 	eor.w	r2, r0, r2
1001d7c2:	ea81 0303 	eor.w	r3, r1, r3
1001d7c6:	2d36      	cmp	r5, #54	@ 0x36
1001d7c8:	bf88      	it	hi
1001d7ca:	bd30      	pophi	{r4, r5, pc}
1001d7cc:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
1001d7d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
1001d7d4:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
1001d7d8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
1001d7dc:	d002      	beq.n	1001d7e4 <__adddf3+0x70>
1001d7de:	4240      	negs	r0, r0
1001d7e0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001d7e4:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
1001d7e8:	ea4f 3303 	mov.w	r3, r3, lsl #12
1001d7ec:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
1001d7f0:	d002      	beq.n	1001d7f8 <__adddf3+0x84>
1001d7f2:	4252      	negs	r2, r2
1001d7f4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
1001d7f8:	ea94 0f05 	teq	r4, r5
1001d7fc:	f000 80a7 	beq.w	1001d94e <__adddf3+0x1da>
1001d800:	f1a4 0401 	sub.w	r4, r4, #1
1001d804:	f1d5 0e20 	rsbs	lr, r5, #32
1001d808:	db0d      	blt.n	1001d826 <__adddf3+0xb2>
1001d80a:	fa02 fc0e 	lsl.w	ip, r2, lr
1001d80e:	fa22 f205 	lsr.w	r2, r2, r5
1001d812:	1880      	adds	r0, r0, r2
1001d814:	f141 0100 	adc.w	r1, r1, #0
1001d818:	fa03 f20e 	lsl.w	r2, r3, lr
1001d81c:	1880      	adds	r0, r0, r2
1001d81e:	fa43 f305 	asr.w	r3, r3, r5
1001d822:	4159      	adcs	r1, r3
1001d824:	e00e      	b.n	1001d844 <__adddf3+0xd0>
1001d826:	f1a5 0520 	sub.w	r5, r5, #32
1001d82a:	f10e 0e20 	add.w	lr, lr, #32
1001d82e:	2a01      	cmp	r2, #1
1001d830:	fa03 fc0e 	lsl.w	ip, r3, lr
1001d834:	bf28      	it	cs
1001d836:	f04c 0c02 	orrcs.w	ip, ip, #2
1001d83a:	fa43 f305 	asr.w	r3, r3, r5
1001d83e:	18c0      	adds	r0, r0, r3
1001d840:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
1001d844:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1001d848:	d507      	bpl.n	1001d85a <__adddf3+0xe6>
1001d84a:	f04f 0e00 	mov.w	lr, #0
1001d84e:	f1dc 0c00 	rsbs	ip, ip, #0
1001d852:	eb7e 0000 	sbcs.w	r0, lr, r0
1001d856:	eb6e 0101 	sbc.w	r1, lr, r1
1001d85a:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
1001d85e:	d31b      	bcc.n	1001d898 <__adddf3+0x124>
1001d860:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
1001d864:	d30c      	bcc.n	1001d880 <__adddf3+0x10c>
1001d866:	0849      	lsrs	r1, r1, #1
1001d868:	ea5f 0030 	movs.w	r0, r0, rrx
1001d86c:	ea4f 0c3c 	mov.w	ip, ip, rrx
1001d870:	f104 0401 	add.w	r4, r4, #1
1001d874:	ea4f 5244 	mov.w	r2, r4, lsl #21
1001d878:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
1001d87c:	f080 809a 	bcs.w	1001d9b4 <__adddf3+0x240>
1001d880:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
1001d884:	bf08      	it	eq
1001d886:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1001d88a:	f150 0000 	adcs.w	r0, r0, #0
1001d88e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001d892:	ea41 0105 	orr.w	r1, r1, r5
1001d896:	bd30      	pop	{r4, r5, pc}
1001d898:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1001d89c:	4140      	adcs	r0, r0
1001d89e:	eb41 0101 	adc.w	r1, r1, r1
1001d8a2:	3c01      	subs	r4, #1
1001d8a4:	bf28      	it	cs
1001d8a6:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
1001d8aa:	d2e9      	bcs.n	1001d880 <__adddf3+0x10c>
1001d8ac:	f091 0f00 	teq	r1, #0
1001d8b0:	bf04      	itt	eq
1001d8b2:	4601      	moveq	r1, r0
1001d8b4:	2000      	moveq	r0, #0
1001d8b6:	fab1 f381 	clz	r3, r1
1001d8ba:	bf08      	it	eq
1001d8bc:	3320      	addeq	r3, #32
1001d8be:	f1a3 030b 	sub.w	r3, r3, #11
1001d8c2:	f1b3 0220 	subs.w	r2, r3, #32
1001d8c6:	da0c      	bge.n	1001d8e2 <__adddf3+0x16e>
1001d8c8:	320c      	adds	r2, #12
1001d8ca:	dd08      	ble.n	1001d8de <__adddf3+0x16a>
1001d8cc:	f102 0c14 	add.w	ip, r2, #20
1001d8d0:	f1c2 020c 	rsb	r2, r2, #12
1001d8d4:	fa01 f00c 	lsl.w	r0, r1, ip
1001d8d8:	fa21 f102 	lsr.w	r1, r1, r2
1001d8dc:	e00c      	b.n	1001d8f8 <__adddf3+0x184>
1001d8de:	f102 0214 	add.w	r2, r2, #20
1001d8e2:	bfd8      	it	le
1001d8e4:	f1c2 0c20 	rsble	ip, r2, #32
1001d8e8:	fa01 f102 	lsl.w	r1, r1, r2
1001d8ec:	fa20 fc0c 	lsr.w	ip, r0, ip
1001d8f0:	bfdc      	itt	le
1001d8f2:	ea41 010c 	orrle.w	r1, r1, ip
1001d8f6:	4090      	lslle	r0, r2
1001d8f8:	1ae4      	subs	r4, r4, r3
1001d8fa:	bfa2      	ittt	ge
1001d8fc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
1001d900:	4329      	orrge	r1, r5
1001d902:	bd30      	popge	{r4, r5, pc}
1001d904:	ea6f 0404 	mvn.w	r4, r4
1001d908:	3c1f      	subs	r4, #31
1001d90a:	da1c      	bge.n	1001d946 <__adddf3+0x1d2>
1001d90c:	340c      	adds	r4, #12
1001d90e:	dc0e      	bgt.n	1001d92e <__adddf3+0x1ba>
1001d910:	f104 0414 	add.w	r4, r4, #20
1001d914:	f1c4 0220 	rsb	r2, r4, #32
1001d918:	fa20 f004 	lsr.w	r0, r0, r4
1001d91c:	fa01 f302 	lsl.w	r3, r1, r2
1001d920:	ea40 0003 	orr.w	r0, r0, r3
1001d924:	fa21 f304 	lsr.w	r3, r1, r4
1001d928:	ea45 0103 	orr.w	r1, r5, r3
1001d92c:	bd30      	pop	{r4, r5, pc}
1001d92e:	f1c4 040c 	rsb	r4, r4, #12
1001d932:	f1c4 0220 	rsb	r2, r4, #32
1001d936:	fa20 f002 	lsr.w	r0, r0, r2
1001d93a:	fa01 f304 	lsl.w	r3, r1, r4
1001d93e:	ea40 0003 	orr.w	r0, r0, r3
1001d942:	4629      	mov	r1, r5
1001d944:	bd30      	pop	{r4, r5, pc}
1001d946:	fa21 f004 	lsr.w	r0, r1, r4
1001d94a:	4629      	mov	r1, r5
1001d94c:	bd30      	pop	{r4, r5, pc}
1001d94e:	f094 0f00 	teq	r4, #0
1001d952:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
1001d956:	bf06      	itte	eq
1001d958:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
1001d95c:	3401      	addeq	r4, #1
1001d95e:	3d01      	subne	r5, #1
1001d960:	e74e      	b.n	1001d800 <__adddf3+0x8c>
1001d962:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1001d966:	bf18      	it	ne
1001d968:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1001d96c:	d029      	beq.n	1001d9c2 <__adddf3+0x24e>
1001d96e:	ea94 0f05 	teq	r4, r5
1001d972:	bf08      	it	eq
1001d974:	ea90 0f02 	teqeq	r0, r2
1001d978:	d005      	beq.n	1001d986 <__adddf3+0x212>
1001d97a:	ea54 0c00 	orrs.w	ip, r4, r0
1001d97e:	bf04      	itt	eq
1001d980:	4619      	moveq	r1, r3
1001d982:	4610      	moveq	r0, r2
1001d984:	bd30      	pop	{r4, r5, pc}
1001d986:	ea91 0f03 	teq	r1, r3
1001d98a:	bf1e      	ittt	ne
1001d98c:	2100      	movne	r1, #0
1001d98e:	2000      	movne	r0, #0
1001d990:	bd30      	popne	{r4, r5, pc}
1001d992:	ea5f 5c54 	movs.w	ip, r4, lsr #21
1001d996:	d105      	bne.n	1001d9a4 <__adddf3+0x230>
1001d998:	0040      	lsls	r0, r0, #1
1001d99a:	4149      	adcs	r1, r1
1001d99c:	bf28      	it	cs
1001d99e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
1001d9a2:	bd30      	pop	{r4, r5, pc}
1001d9a4:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
1001d9a8:	bf3c      	itt	cc
1001d9aa:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
1001d9ae:	bd30      	popcc	{r4, r5, pc}
1001d9b0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1001d9b4:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
1001d9b8:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
1001d9bc:	f04f 0000 	mov.w	r0, #0
1001d9c0:	bd30      	pop	{r4, r5, pc}
1001d9c2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1001d9c6:	bf1a      	itte	ne
1001d9c8:	4619      	movne	r1, r3
1001d9ca:	4610      	movne	r0, r2
1001d9cc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
1001d9d0:	bf1c      	itt	ne
1001d9d2:	460b      	movne	r3, r1
1001d9d4:	4602      	movne	r2, r0
1001d9d6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1001d9da:	bf06      	itte	eq
1001d9dc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
1001d9e0:	ea91 0f03 	teqeq	r1, r3
1001d9e4:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
1001d9e8:	bd30      	pop	{r4, r5, pc}
1001d9ea:	bf00      	nop

1001d9ec <__aeabi_ui2d>:
1001d9ec:	f090 0f00 	teq	r0, #0
1001d9f0:	bf04      	itt	eq
1001d9f2:	2100      	moveq	r1, #0
1001d9f4:	4770      	bxeq	lr
1001d9f6:	b530      	push	{r4, r5, lr}
1001d9f8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001d9fc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001da00:	f04f 0500 	mov.w	r5, #0
1001da04:	f04f 0100 	mov.w	r1, #0
1001da08:	e750      	b.n	1001d8ac <__adddf3+0x138>
1001da0a:	bf00      	nop

1001da0c <__aeabi_i2d>:
1001da0c:	f090 0f00 	teq	r0, #0
1001da10:	bf04      	itt	eq
1001da12:	2100      	moveq	r1, #0
1001da14:	4770      	bxeq	lr
1001da16:	b530      	push	{r4, r5, lr}
1001da18:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001da1c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001da20:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
1001da24:	bf48      	it	mi
1001da26:	4240      	negmi	r0, r0
1001da28:	f04f 0100 	mov.w	r1, #0
1001da2c:	e73e      	b.n	1001d8ac <__adddf3+0x138>
1001da2e:	bf00      	nop

1001da30 <__aeabi_f2d>:
1001da30:	0042      	lsls	r2, r0, #1
1001da32:	ea4f 01e2 	mov.w	r1, r2, asr #3
1001da36:	ea4f 0131 	mov.w	r1, r1, rrx
1001da3a:	ea4f 7002 	mov.w	r0, r2, lsl #28
1001da3e:	bf1f      	itttt	ne
1001da40:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
1001da44:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
1001da48:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
1001da4c:	4770      	bxne	lr
1001da4e:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
1001da52:	bf08      	it	eq
1001da54:	4770      	bxeq	lr
1001da56:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
1001da5a:	bf04      	itt	eq
1001da5c:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
1001da60:	4770      	bxeq	lr
1001da62:	b530      	push	{r4, r5, lr}
1001da64:	f44f 7460 	mov.w	r4, #896	@ 0x380
1001da68:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1001da6c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1001da70:	e71c      	b.n	1001d8ac <__adddf3+0x138>
1001da72:	bf00      	nop

1001da74 <__aeabi_ul2d>:
1001da74:	ea50 0201 	orrs.w	r2, r0, r1
1001da78:	bf08      	it	eq
1001da7a:	4770      	bxeq	lr
1001da7c:	b530      	push	{r4, r5, lr}
1001da7e:	f04f 0500 	mov.w	r5, #0
1001da82:	e00a      	b.n	1001da9a <__aeabi_l2d+0x16>

1001da84 <__aeabi_l2d>:
1001da84:	ea50 0201 	orrs.w	r2, r0, r1
1001da88:	bf08      	it	eq
1001da8a:	4770      	bxeq	lr
1001da8c:	b530      	push	{r4, r5, lr}
1001da8e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
1001da92:	d502      	bpl.n	1001da9a <__aeabi_l2d+0x16>
1001da94:	4240      	negs	r0, r0
1001da96:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001da9a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001da9e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001daa2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
1001daa6:	f43f aed8 	beq.w	1001d85a <__adddf3+0xe6>
1001daaa:	f04f 0203 	mov.w	r2, #3
1001daae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1001dab2:	bf18      	it	ne
1001dab4:	3203      	addne	r2, #3
1001dab6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1001daba:	bf18      	it	ne
1001dabc:	3203      	addne	r2, #3
1001dabe:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1001dac2:	f1c2 0320 	rsb	r3, r2, #32
1001dac6:	fa00 fc03 	lsl.w	ip, r0, r3
1001daca:	fa20 f002 	lsr.w	r0, r0, r2
1001dace:	fa01 fe03 	lsl.w	lr, r1, r3
1001dad2:	ea40 000e 	orr.w	r0, r0, lr
1001dad6:	fa21 f102 	lsr.w	r1, r1, r2
1001dada:	4414      	add	r4, r2
1001dadc:	e6bd      	b.n	1001d85a <__adddf3+0xe6>
1001dade:	bf00      	nop

1001dae0 <__aeabi_dmul>:
1001dae0:	b570      	push	{r4, r5, r6, lr}
1001dae2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
1001dae6:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1001daea:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001daee:	bf1d      	ittte	ne
1001daf0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1001daf4:	ea94 0f0c 	teqne	r4, ip
1001daf8:	ea95 0f0c 	teqne	r5, ip
1001dafc:	f000 f8de 	bleq	1001dcbc <__aeabi_dmul+0x1dc>
1001db00:	442c      	add	r4, r5
1001db02:	ea81 0603 	eor.w	r6, r1, r3
1001db06:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
1001db0a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1001db0e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1001db12:	bf18      	it	ne
1001db14:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
1001db18:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001db1c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001db20:	d038      	beq.n	1001db94 <__aeabi_dmul+0xb4>
1001db22:	fba0 ce02 	umull	ip, lr, r0, r2
1001db26:	f04f 0500 	mov.w	r5, #0
1001db2a:	fbe1 e502 	umlal	lr, r5, r1, r2
1001db2e:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
1001db32:	fbe0 e503 	umlal	lr, r5, r0, r3
1001db36:	f04f 0600 	mov.w	r6, #0
1001db3a:	fbe1 5603 	umlal	r5, r6, r1, r3
1001db3e:	f09c 0f00 	teq	ip, #0
1001db42:	bf18      	it	ne
1001db44:	f04e 0e01 	orrne.w	lr, lr, #1
1001db48:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
1001db4c:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
1001db50:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
1001db54:	d204      	bcs.n	1001db60 <__aeabi_dmul+0x80>
1001db56:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
1001db5a:	416d      	adcs	r5, r5
1001db5c:	eb46 0606 	adc.w	r6, r6, r6
1001db60:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
1001db64:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
1001db68:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1001db6c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
1001db70:	ea4f 2ece 	mov.w	lr, lr, lsl #11
1001db74:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
1001db78:	bf88      	it	hi
1001db7a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1001db7e:	d81e      	bhi.n	1001dbbe <__aeabi_dmul+0xde>
1001db80:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
1001db84:	bf08      	it	eq
1001db86:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1001db8a:	f150 0000 	adcs.w	r0, r0, #0
1001db8e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001db92:	bd70      	pop	{r4, r5, r6, pc}
1001db94:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
1001db98:	ea46 0101 	orr.w	r1, r6, r1
1001db9c:	ea40 0002 	orr.w	r0, r0, r2
1001dba0:	ea81 0103 	eor.w	r1, r1, r3
1001dba4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
1001dba8:	bfc2      	ittt	gt
1001dbaa:	ebd4 050c 	rsbsgt	r5, r4, ip
1001dbae:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1001dbb2:	bd70      	popgt	{r4, r5, r6, pc}
1001dbb4:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001dbb8:	f04f 0e00 	mov.w	lr, #0
1001dbbc:	3c01      	subs	r4, #1
1001dbbe:	f300 80ab 	bgt.w	1001dd18 <__aeabi_dmul+0x238>
1001dbc2:	f114 0f36 	cmn.w	r4, #54	@ 0x36
1001dbc6:	bfde      	ittt	le
1001dbc8:	2000      	movle	r0, #0
1001dbca:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
1001dbce:	bd70      	pople	{r4, r5, r6, pc}
1001dbd0:	f1c4 0400 	rsb	r4, r4, #0
1001dbd4:	3c20      	subs	r4, #32
1001dbd6:	da35      	bge.n	1001dc44 <__aeabi_dmul+0x164>
1001dbd8:	340c      	adds	r4, #12
1001dbda:	dc1b      	bgt.n	1001dc14 <__aeabi_dmul+0x134>
1001dbdc:	f104 0414 	add.w	r4, r4, #20
1001dbe0:	f1c4 0520 	rsb	r5, r4, #32
1001dbe4:	fa00 f305 	lsl.w	r3, r0, r5
1001dbe8:	fa20 f004 	lsr.w	r0, r0, r4
1001dbec:	fa01 f205 	lsl.w	r2, r1, r5
1001dbf0:	ea40 0002 	orr.w	r0, r0, r2
1001dbf4:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
1001dbf8:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1001dbfc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1001dc00:	fa21 f604 	lsr.w	r6, r1, r4
1001dc04:	eb42 0106 	adc.w	r1, r2, r6
1001dc08:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001dc0c:	bf08      	it	eq
1001dc0e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001dc12:	bd70      	pop	{r4, r5, r6, pc}
1001dc14:	f1c4 040c 	rsb	r4, r4, #12
1001dc18:	f1c4 0520 	rsb	r5, r4, #32
1001dc1c:	fa00 f304 	lsl.w	r3, r0, r4
1001dc20:	fa20 f005 	lsr.w	r0, r0, r5
1001dc24:	fa01 f204 	lsl.w	r2, r1, r4
1001dc28:	ea40 0002 	orr.w	r0, r0, r2
1001dc2c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001dc30:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1001dc34:	f141 0100 	adc.w	r1, r1, #0
1001dc38:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001dc3c:	bf08      	it	eq
1001dc3e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001dc42:	bd70      	pop	{r4, r5, r6, pc}
1001dc44:	f1c4 0520 	rsb	r5, r4, #32
1001dc48:	fa00 f205 	lsl.w	r2, r0, r5
1001dc4c:	ea4e 0e02 	orr.w	lr, lr, r2
1001dc50:	fa20 f304 	lsr.w	r3, r0, r4
1001dc54:	fa01 f205 	lsl.w	r2, r1, r5
1001dc58:	ea43 0302 	orr.w	r3, r3, r2
1001dc5c:	fa21 f004 	lsr.w	r0, r1, r4
1001dc60:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001dc64:	fa21 f204 	lsr.w	r2, r1, r4
1001dc68:	ea20 0002 	bic.w	r0, r0, r2
1001dc6c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
1001dc70:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1001dc74:	bf08      	it	eq
1001dc76:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001dc7a:	bd70      	pop	{r4, r5, r6, pc}
1001dc7c:	f094 0f00 	teq	r4, #0
1001dc80:	d10f      	bne.n	1001dca2 <__aeabi_dmul+0x1c2>
1001dc82:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
1001dc86:	0040      	lsls	r0, r0, #1
1001dc88:	eb41 0101 	adc.w	r1, r1, r1
1001dc8c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001dc90:	bf08      	it	eq
1001dc92:	3c01      	subeq	r4, #1
1001dc94:	d0f7      	beq.n	1001dc86 <__aeabi_dmul+0x1a6>
1001dc96:	ea41 0106 	orr.w	r1, r1, r6
1001dc9a:	f095 0f00 	teq	r5, #0
1001dc9e:	bf18      	it	ne
1001dca0:	4770      	bxne	lr
1001dca2:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
1001dca6:	0052      	lsls	r2, r2, #1
1001dca8:	eb43 0303 	adc.w	r3, r3, r3
1001dcac:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
1001dcb0:	bf08      	it	eq
1001dcb2:	3d01      	subeq	r5, #1
1001dcb4:	d0f7      	beq.n	1001dca6 <__aeabi_dmul+0x1c6>
1001dcb6:	ea43 0306 	orr.w	r3, r3, r6
1001dcba:	4770      	bx	lr
1001dcbc:	ea94 0f0c 	teq	r4, ip
1001dcc0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1001dcc4:	bf18      	it	ne
1001dcc6:	ea95 0f0c 	teqne	r5, ip
1001dcca:	d00c      	beq.n	1001dce6 <__aeabi_dmul+0x206>
1001dccc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1001dcd0:	bf18      	it	ne
1001dcd2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1001dcd6:	d1d1      	bne.n	1001dc7c <__aeabi_dmul+0x19c>
1001dcd8:	ea81 0103 	eor.w	r1, r1, r3
1001dcdc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001dce0:	f04f 0000 	mov.w	r0, #0
1001dce4:	bd70      	pop	{r4, r5, r6, pc}
1001dce6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1001dcea:	bf06      	itte	eq
1001dcec:	4610      	moveq	r0, r2
1001dcee:	4619      	moveq	r1, r3
1001dcf0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1001dcf4:	d019      	beq.n	1001dd2a <__aeabi_dmul+0x24a>
1001dcf6:	ea94 0f0c 	teq	r4, ip
1001dcfa:	d102      	bne.n	1001dd02 <__aeabi_dmul+0x222>
1001dcfc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
1001dd00:	d113      	bne.n	1001dd2a <__aeabi_dmul+0x24a>
1001dd02:	ea95 0f0c 	teq	r5, ip
1001dd06:	d105      	bne.n	1001dd14 <__aeabi_dmul+0x234>
1001dd08:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
1001dd0c:	bf1c      	itt	ne
1001dd0e:	4610      	movne	r0, r2
1001dd10:	4619      	movne	r1, r3
1001dd12:	d10a      	bne.n	1001dd2a <__aeabi_dmul+0x24a>
1001dd14:	ea81 0103 	eor.w	r1, r1, r3
1001dd18:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001dd1c:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001dd20:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
1001dd24:	f04f 0000 	mov.w	r0, #0
1001dd28:	bd70      	pop	{r4, r5, r6, pc}
1001dd2a:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001dd2e:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
1001dd32:	bd70      	pop	{r4, r5, r6, pc}

1001dd34 <__aeabi_ddiv>:
1001dd34:	b570      	push	{r4, r5, r6, lr}
1001dd36:	f04f 0cff 	mov.w	ip, #255	@ 0xff
1001dd3a:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1001dd3e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001dd42:	bf1d      	ittte	ne
1001dd44:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1001dd48:	ea94 0f0c 	teqne	r4, ip
1001dd4c:	ea95 0f0c 	teqne	r5, ip
1001dd50:	f000 f8a7 	bleq	1001dea2 <__aeabi_ddiv+0x16e>
1001dd54:	eba4 0405 	sub.w	r4, r4, r5
1001dd58:	ea81 0e03 	eor.w	lr, r1, r3
1001dd5c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1001dd60:	ea4f 3101 	mov.w	r1, r1, lsl #12
1001dd64:	f000 8088 	beq.w	1001de78 <__aeabi_ddiv+0x144>
1001dd68:	ea4f 3303 	mov.w	r3, r3, lsl #12
1001dd6c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
1001dd70:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
1001dd74:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
1001dd78:	ea4f 2202 	mov.w	r2, r2, lsl #8
1001dd7c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
1001dd80:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
1001dd84:	ea4f 2600 	mov.w	r6, r0, lsl #8
1001dd88:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
1001dd8c:	429d      	cmp	r5, r3
1001dd8e:	bf08      	it	eq
1001dd90:	4296      	cmpeq	r6, r2
1001dd92:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
1001dd96:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1001dd9a:	d202      	bcs.n	1001dda2 <__aeabi_ddiv+0x6e>
1001dd9c:	085b      	lsrs	r3, r3, #1
1001dd9e:	ea4f 0232 	mov.w	r2, r2, rrx
1001dda2:	1ab6      	subs	r6, r6, r2
1001dda4:	eb65 0503 	sbc.w	r5, r5, r3
1001dda8:	085b      	lsrs	r3, r3, #1
1001ddaa:	ea4f 0232 	mov.w	r2, r2, rrx
1001ddae:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
1001ddb2:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
1001ddb6:	ebb6 0e02 	subs.w	lr, r6, r2
1001ddba:	eb75 0e03 	sbcs.w	lr, r5, r3
1001ddbe:	bf22      	ittt	cs
1001ddc0:	1ab6      	subcs	r6, r6, r2
1001ddc2:	4675      	movcs	r5, lr
1001ddc4:	ea40 000c 	orrcs.w	r0, r0, ip
1001ddc8:	085b      	lsrs	r3, r3, #1
1001ddca:	ea4f 0232 	mov.w	r2, r2, rrx
1001ddce:	ebb6 0e02 	subs.w	lr, r6, r2
1001ddd2:	eb75 0e03 	sbcs.w	lr, r5, r3
1001ddd6:	bf22      	ittt	cs
1001ddd8:	1ab6      	subcs	r6, r6, r2
1001ddda:	4675      	movcs	r5, lr
1001dddc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
1001dde0:	085b      	lsrs	r3, r3, #1
1001dde2:	ea4f 0232 	mov.w	r2, r2, rrx
1001dde6:	ebb6 0e02 	subs.w	lr, r6, r2
1001ddea:	eb75 0e03 	sbcs.w	lr, r5, r3
1001ddee:	bf22      	ittt	cs
1001ddf0:	1ab6      	subcs	r6, r6, r2
1001ddf2:	4675      	movcs	r5, lr
1001ddf4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
1001ddf8:	085b      	lsrs	r3, r3, #1
1001ddfa:	ea4f 0232 	mov.w	r2, r2, rrx
1001ddfe:	ebb6 0e02 	subs.w	lr, r6, r2
1001de02:	eb75 0e03 	sbcs.w	lr, r5, r3
1001de06:	bf22      	ittt	cs
1001de08:	1ab6      	subcs	r6, r6, r2
1001de0a:	4675      	movcs	r5, lr
1001de0c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
1001de10:	ea55 0e06 	orrs.w	lr, r5, r6
1001de14:	d018      	beq.n	1001de48 <__aeabi_ddiv+0x114>
1001de16:	ea4f 1505 	mov.w	r5, r5, lsl #4
1001de1a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
1001de1e:	ea4f 1606 	mov.w	r6, r6, lsl #4
1001de22:	ea4f 03c3 	mov.w	r3, r3, lsl #3
1001de26:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
1001de2a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
1001de2e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
1001de32:	d1c0      	bne.n	1001ddb6 <__aeabi_ddiv+0x82>
1001de34:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001de38:	d10b      	bne.n	1001de52 <__aeabi_ddiv+0x11e>
1001de3a:	ea41 0100 	orr.w	r1, r1, r0
1001de3e:	f04f 0000 	mov.w	r0, #0
1001de42:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
1001de46:	e7b6      	b.n	1001ddb6 <__aeabi_ddiv+0x82>
1001de48:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001de4c:	bf04      	itt	eq
1001de4e:	4301      	orreq	r1, r0
1001de50:	2000      	moveq	r0, #0
1001de52:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
1001de56:	bf88      	it	hi
1001de58:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1001de5c:	f63f aeaf 	bhi.w	1001dbbe <__aeabi_dmul+0xde>
1001de60:	ebb5 0c03 	subs.w	ip, r5, r3
1001de64:	bf04      	itt	eq
1001de66:	ebb6 0c02 	subseq.w	ip, r6, r2
1001de6a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1001de6e:	f150 0000 	adcs.w	r0, r0, #0
1001de72:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001de76:	bd70      	pop	{r4, r5, r6, pc}
1001de78:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
1001de7c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
1001de80:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
1001de84:	bfc2      	ittt	gt
1001de86:	ebd4 050c 	rsbsgt	r5, r4, ip
1001de8a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1001de8e:	bd70      	popgt	{r4, r5, r6, pc}
1001de90:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001de94:	f04f 0e00 	mov.w	lr, #0
1001de98:	3c01      	subs	r4, #1
1001de9a:	e690      	b.n	1001dbbe <__aeabi_dmul+0xde>
1001de9c:	ea45 0e06 	orr.w	lr, r5, r6
1001dea0:	e68d      	b.n	1001dbbe <__aeabi_dmul+0xde>
1001dea2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1001dea6:	ea94 0f0c 	teq	r4, ip
1001deaa:	bf08      	it	eq
1001deac:	ea95 0f0c 	teqeq	r5, ip
1001deb0:	f43f af3b 	beq.w	1001dd2a <__aeabi_dmul+0x24a>
1001deb4:	ea94 0f0c 	teq	r4, ip
1001deb8:	d10a      	bne.n	1001ded0 <__aeabi_ddiv+0x19c>
1001deba:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1001debe:	f47f af34 	bne.w	1001dd2a <__aeabi_dmul+0x24a>
1001dec2:	ea95 0f0c 	teq	r5, ip
1001dec6:	f47f af25 	bne.w	1001dd14 <__aeabi_dmul+0x234>
1001deca:	4610      	mov	r0, r2
1001decc:	4619      	mov	r1, r3
1001dece:	e72c      	b.n	1001dd2a <__aeabi_dmul+0x24a>
1001ded0:	ea95 0f0c 	teq	r5, ip
1001ded4:	d106      	bne.n	1001dee4 <__aeabi_ddiv+0x1b0>
1001ded6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1001deda:	f43f aefd 	beq.w	1001dcd8 <__aeabi_dmul+0x1f8>
1001dede:	4610      	mov	r0, r2
1001dee0:	4619      	mov	r1, r3
1001dee2:	e722      	b.n	1001dd2a <__aeabi_dmul+0x24a>
1001dee4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1001dee8:	bf18      	it	ne
1001deea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1001deee:	f47f aec5 	bne.w	1001dc7c <__aeabi_dmul+0x19c>
1001def2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1001def6:	f47f af0d 	bne.w	1001dd14 <__aeabi_dmul+0x234>
1001defa:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
1001defe:	f47f aeeb 	bne.w	1001dcd8 <__aeabi_dmul+0x1f8>
1001df02:	e712      	b.n	1001dd2a <__aeabi_dmul+0x24a>

1001df04 <__gedf2>:
1001df04:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
1001df08:	e006      	b.n	1001df18 <__cmpdf2+0x4>
1001df0a:	bf00      	nop

1001df0c <__ledf2>:
1001df0c:	f04f 0c01 	mov.w	ip, #1
1001df10:	e002      	b.n	1001df18 <__cmpdf2+0x4>
1001df12:	bf00      	nop

1001df14 <__cmpdf2>:
1001df14:	f04f 0c01 	mov.w	ip, #1
1001df18:	f84d cd04 	str.w	ip, [sp, #-4]!
1001df1c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1001df20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001df24:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1001df28:	bf18      	it	ne
1001df2a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
1001df2e:	d01b      	beq.n	1001df68 <__cmpdf2+0x54>
1001df30:	b001      	add	sp, #4
1001df32:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
1001df36:	bf0c      	ite	eq
1001df38:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
1001df3c:	ea91 0f03 	teqne	r1, r3
1001df40:	bf02      	ittt	eq
1001df42:	ea90 0f02 	teqeq	r0, r2
1001df46:	2000      	moveq	r0, #0
1001df48:	4770      	bxeq	lr
1001df4a:	f110 0f00 	cmn.w	r0, #0
1001df4e:	ea91 0f03 	teq	r1, r3
1001df52:	bf58      	it	pl
1001df54:	4299      	cmppl	r1, r3
1001df56:	bf08      	it	eq
1001df58:	4290      	cmpeq	r0, r2
1001df5a:	bf2c      	ite	cs
1001df5c:	17d8      	asrcs	r0, r3, #31
1001df5e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
1001df62:	f040 0001 	orr.w	r0, r0, #1
1001df66:	4770      	bx	lr
1001df68:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1001df6c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001df70:	d102      	bne.n	1001df78 <__cmpdf2+0x64>
1001df72:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1001df76:	d107      	bne.n	1001df88 <__cmpdf2+0x74>
1001df78:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1001df7c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001df80:	d1d6      	bne.n	1001df30 <__cmpdf2+0x1c>
1001df82:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1001df86:	d0d3      	beq.n	1001df30 <__cmpdf2+0x1c>
1001df88:	f85d 0b04 	ldr.w	r0, [sp], #4
1001df8c:	4770      	bx	lr
1001df8e:	bf00      	nop

1001df90 <__aeabi_cdrcmple>:
1001df90:	4684      	mov	ip, r0
1001df92:	4610      	mov	r0, r2
1001df94:	4662      	mov	r2, ip
1001df96:	468c      	mov	ip, r1
1001df98:	4619      	mov	r1, r3
1001df9a:	4663      	mov	r3, ip
1001df9c:	e000      	b.n	1001dfa0 <__aeabi_cdcmpeq>
1001df9e:	bf00      	nop

1001dfa0 <__aeabi_cdcmpeq>:
1001dfa0:	b501      	push	{r0, lr}
1001dfa2:	f7ff ffb7 	bl	1001df14 <__cmpdf2>
1001dfa6:	2800      	cmp	r0, #0
1001dfa8:	bf48      	it	mi
1001dfaa:	f110 0f00 	cmnmi.w	r0, #0
1001dfae:	bd01      	pop	{r0, pc}

1001dfb0 <__aeabi_dcmpeq>:
1001dfb0:	f84d ed08 	str.w	lr, [sp, #-8]!
1001dfb4:	f7ff fff4 	bl	1001dfa0 <__aeabi_cdcmpeq>
1001dfb8:	bf0c      	ite	eq
1001dfba:	2001      	moveq	r0, #1
1001dfbc:	2000      	movne	r0, #0
1001dfbe:	f85d fb08 	ldr.w	pc, [sp], #8
1001dfc2:	bf00      	nop

1001dfc4 <__aeabi_dcmplt>:
1001dfc4:	f84d ed08 	str.w	lr, [sp, #-8]!
1001dfc8:	f7ff ffea 	bl	1001dfa0 <__aeabi_cdcmpeq>
1001dfcc:	bf34      	ite	cc
1001dfce:	2001      	movcc	r0, #1
1001dfd0:	2000      	movcs	r0, #0
1001dfd2:	f85d fb08 	ldr.w	pc, [sp], #8
1001dfd6:	bf00      	nop

1001dfd8 <__aeabi_dcmple>:
1001dfd8:	f84d ed08 	str.w	lr, [sp, #-8]!
1001dfdc:	f7ff ffe0 	bl	1001dfa0 <__aeabi_cdcmpeq>
1001dfe0:	bf94      	ite	ls
1001dfe2:	2001      	movls	r0, #1
1001dfe4:	2000      	movhi	r0, #0
1001dfe6:	f85d fb08 	ldr.w	pc, [sp], #8
1001dfea:	bf00      	nop

1001dfec <__aeabi_dcmpge>:
1001dfec:	f84d ed08 	str.w	lr, [sp, #-8]!
1001dff0:	f7ff ffce 	bl	1001df90 <__aeabi_cdrcmple>
1001dff4:	bf94      	ite	ls
1001dff6:	2001      	movls	r0, #1
1001dff8:	2000      	movhi	r0, #0
1001dffa:	f85d fb08 	ldr.w	pc, [sp], #8
1001dffe:	bf00      	nop

1001e000 <__aeabi_dcmpgt>:
1001e000:	f84d ed08 	str.w	lr, [sp, #-8]!
1001e004:	f7ff ffc4 	bl	1001df90 <__aeabi_cdrcmple>
1001e008:	bf34      	ite	cc
1001e00a:	2001      	movcc	r0, #1
1001e00c:	2000      	movcs	r0, #0
1001e00e:	f85d fb08 	ldr.w	pc, [sp], #8
1001e012:	bf00      	nop

1001e014 <__aeabi_dcmpun>:
1001e014:	ea4f 0c41 	mov.w	ip, r1, lsl #1
1001e018:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001e01c:	d102      	bne.n	1001e024 <__aeabi_dcmpun+0x10>
1001e01e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
1001e022:	d10a      	bne.n	1001e03a <__aeabi_dcmpun+0x26>
1001e024:	ea4f 0c43 	mov.w	ip, r3, lsl #1
1001e028:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
1001e02c:	d102      	bne.n	1001e034 <__aeabi_dcmpun+0x20>
1001e02e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1001e032:	d102      	bne.n	1001e03a <__aeabi_dcmpun+0x26>
1001e034:	f04f 0000 	mov.w	r0, #0
1001e038:	4770      	bx	lr
1001e03a:	f04f 0001 	mov.w	r0, #1
1001e03e:	4770      	bx	lr

1001e040 <__aeabi_d2iz>:
1001e040:	ea4f 0241 	mov.w	r2, r1, lsl #1
1001e044:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
1001e048:	d215      	bcs.n	1001e076 <__aeabi_d2iz+0x36>
1001e04a:	d511      	bpl.n	1001e070 <__aeabi_d2iz+0x30>
1001e04c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
1001e050:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
1001e054:	d912      	bls.n	1001e07c <__aeabi_d2iz+0x3c>
1001e056:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1001e05a:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
1001e05e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
1001e062:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
1001e066:	fa23 f002 	lsr.w	r0, r3, r2
1001e06a:	bf18      	it	ne
1001e06c:	4240      	negne	r0, r0
1001e06e:	4770      	bx	lr
1001e070:	f04f 0000 	mov.w	r0, #0
1001e074:	4770      	bx	lr
1001e076:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1001e07a:	d105      	bne.n	1001e088 <__aeabi_d2iz+0x48>
1001e07c:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
1001e080:	bf08      	it	eq
1001e082:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
1001e086:	4770      	bx	lr
1001e088:	f04f 0000 	mov.w	r0, #0
1001e08c:	4770      	bx	lr
1001e08e:	bf00      	nop

1001e090 <__aeabi_d2uiz>:
1001e090:	004a      	lsls	r2, r1, #1
1001e092:	d211      	bcs.n	1001e0b8 <__aeabi_d2uiz+0x28>
1001e094:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
1001e098:	d211      	bcs.n	1001e0be <__aeabi_d2uiz+0x2e>
1001e09a:	d50d      	bpl.n	1001e0b8 <__aeabi_d2uiz+0x28>
1001e09c:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
1001e0a0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
1001e0a4:	d40e      	bmi.n	1001e0c4 <__aeabi_d2uiz+0x34>
1001e0a6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1001e0aa:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
1001e0ae:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
1001e0b2:	fa23 f002 	lsr.w	r0, r3, r2
1001e0b6:	4770      	bx	lr
1001e0b8:	f04f 0000 	mov.w	r0, #0
1001e0bc:	4770      	bx	lr
1001e0be:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1001e0c2:	d102      	bne.n	1001e0ca <__aeabi_d2uiz+0x3a>
1001e0c4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001e0c8:	4770      	bx	lr
1001e0ca:	f04f 0000 	mov.w	r0, #0
1001e0ce:	4770      	bx	lr

1001e0d0 <__aeabi_d2f>:
1001e0d0:	ea4f 0241 	mov.w	r2, r1, lsl #1
1001e0d4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
1001e0d8:	bf24      	itt	cs
1001e0da:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
1001e0de:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
1001e0e2:	d90d      	bls.n	1001e100 <__aeabi_d2f+0x30>
1001e0e4:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
1001e0e8:	ea4f 02c0 	mov.w	r2, r0, lsl #3
1001e0ec:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
1001e0f0:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
1001e0f4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
1001e0f8:	bf08      	it	eq
1001e0fa:	f020 0001 	biceq.w	r0, r0, #1
1001e0fe:	4770      	bx	lr
1001e100:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
1001e104:	d121      	bne.n	1001e14a <__aeabi_d2f+0x7a>
1001e106:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
1001e10a:	bfbc      	itt	lt
1001e10c:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
1001e110:	4770      	bxlt	lr
1001e112:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
1001e116:	ea4f 5252 	mov.w	r2, r2, lsr #21
1001e11a:	f1c2 0218 	rsb	r2, r2, #24
1001e11e:	f1c2 0c20 	rsb	ip, r2, #32
1001e122:	fa10 f30c 	lsls.w	r3, r0, ip
1001e126:	fa20 f002 	lsr.w	r0, r0, r2
1001e12a:	bf18      	it	ne
1001e12c:	f040 0001 	orrne.w	r0, r0, #1
1001e130:	ea4f 23c1 	mov.w	r3, r1, lsl #11
1001e134:	ea4f 23d3 	mov.w	r3, r3, lsr #11
1001e138:	fa03 fc0c 	lsl.w	ip, r3, ip
1001e13c:	ea40 000c 	orr.w	r0, r0, ip
1001e140:	fa23 f302 	lsr.w	r3, r3, r2
1001e144:	ea4f 0343 	mov.w	r3, r3, lsl #1
1001e148:	e7cc      	b.n	1001e0e4 <__aeabi_d2f+0x14>
1001e14a:	ea7f 5362 	mvns.w	r3, r2, asr #21
1001e14e:	d107      	bne.n	1001e160 <__aeabi_d2f+0x90>
1001e150:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
1001e154:	bf1e      	ittt	ne
1001e156:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
1001e15a:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
1001e15e:	4770      	bxne	lr
1001e160:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
1001e164:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
1001e168:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
1001e16c:	4770      	bx	lr
1001e16e:	bf00      	nop

1001e170 <__aeabi_uldivmod>:
1001e170:	b953      	cbnz	r3, 1001e188 <__aeabi_uldivmod+0x18>
1001e172:	b94a      	cbnz	r2, 1001e188 <__aeabi_uldivmod+0x18>
1001e174:	2900      	cmp	r1, #0
1001e176:	bf08      	it	eq
1001e178:	2800      	cmpeq	r0, #0
1001e17a:	bf1c      	itt	ne
1001e17c:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
1001e180:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
1001e184:	f000 b9a0 	b.w	1001e4c8 <__aeabi_idiv0>
1001e188:	f1ad 0c08 	sub.w	ip, sp, #8
1001e18c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
1001e190:	f000 f83c 	bl	1001e20c <__udivmoddi4>
1001e194:	f8dd e004 	ldr.w	lr, [sp, #4]
1001e198:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
1001e19c:	b004      	add	sp, #16
1001e19e:	4770      	bx	lr

1001e1a0 <__aeabi_d2lz>:
1001e1a0:	b538      	push	{r3, r4, r5, lr}
1001e1a2:	2200      	movs	r2, #0
1001e1a4:	2300      	movs	r3, #0
1001e1a6:	4604      	mov	r4, r0
1001e1a8:	460d      	mov	r5, r1
1001e1aa:	f7ff ff0b 	bl	1001dfc4 <__aeabi_dcmplt>
1001e1ae:	b928      	cbnz	r0, 1001e1bc <__aeabi_d2lz+0x1c>
1001e1b0:	4620      	mov	r0, r4
1001e1b2:	4629      	mov	r1, r5
1001e1b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001e1b8:	f000 b80a 	b.w	1001e1d0 <__aeabi_d2ulz>
1001e1bc:	4620      	mov	r0, r4
1001e1be:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
1001e1c2:	f000 f805 	bl	1001e1d0 <__aeabi_d2ulz>
1001e1c6:	4240      	negs	r0, r0
1001e1c8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001e1cc:	bd38      	pop	{r3, r4, r5, pc}
1001e1ce:	bf00      	nop

1001e1d0 <__aeabi_d2ulz>:
1001e1d0:	b5d0      	push	{r4, r6, r7, lr}
1001e1d2:	4b0c      	ldr	r3, [pc, #48]	@ (1001e204 <__aeabi_d2ulz+0x34>)
1001e1d4:	2200      	movs	r2, #0
1001e1d6:	4606      	mov	r6, r0
1001e1d8:	460f      	mov	r7, r1
1001e1da:	f7ff fc81 	bl	1001dae0 <__aeabi_dmul>
1001e1de:	f7ff ff57 	bl	1001e090 <__aeabi_d2uiz>
1001e1e2:	4604      	mov	r4, r0
1001e1e4:	f7ff fc02 	bl	1001d9ec <__aeabi_ui2d>
1001e1e8:	4b07      	ldr	r3, [pc, #28]	@ (1001e208 <__aeabi_d2ulz+0x38>)
1001e1ea:	2200      	movs	r2, #0
1001e1ec:	f7ff fc78 	bl	1001dae0 <__aeabi_dmul>
1001e1f0:	4602      	mov	r2, r0
1001e1f2:	460b      	mov	r3, r1
1001e1f4:	4630      	mov	r0, r6
1001e1f6:	4639      	mov	r1, r7
1001e1f8:	f7ff faba 	bl	1001d770 <__aeabi_dsub>
1001e1fc:	f7ff ff48 	bl	1001e090 <__aeabi_d2uiz>
1001e200:	4621      	mov	r1, r4
1001e202:	bdd0      	pop	{r4, r6, r7, pc}
1001e204:	3df00000 	.word	0x3df00000
1001e208:	41f00000 	.word	0x41f00000

1001e20c <__udivmoddi4>:
1001e20c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001e210:	9d08      	ldr	r5, [sp, #32]
1001e212:	460c      	mov	r4, r1
1001e214:	2b00      	cmp	r3, #0
1001e216:	d14e      	bne.n	1001e2b6 <__udivmoddi4+0xaa>
1001e218:	4694      	mov	ip, r2
1001e21a:	458c      	cmp	ip, r1
1001e21c:	4686      	mov	lr, r0
1001e21e:	fab2 f282 	clz	r2, r2
1001e222:	d962      	bls.n	1001e2ea <__udivmoddi4+0xde>
1001e224:	b14a      	cbz	r2, 1001e23a <__udivmoddi4+0x2e>
1001e226:	f1c2 0320 	rsb	r3, r2, #32
1001e22a:	4091      	lsls	r1, r2
1001e22c:	fa20 f303 	lsr.w	r3, r0, r3
1001e230:	fa0c fc02 	lsl.w	ip, ip, r2
1001e234:	4319      	orrs	r1, r3
1001e236:	fa00 fe02 	lsl.w	lr, r0, r2
1001e23a:	ea4f 471c 	mov.w	r7, ip, lsr #16
1001e23e:	fa1f f68c 	uxth.w	r6, ip
1001e242:	fbb1 f4f7 	udiv	r4, r1, r7
1001e246:	ea4f 431e 	mov.w	r3, lr, lsr #16
1001e24a:	fb07 1114 	mls	r1, r7, r4, r1
1001e24e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001e252:	fb04 f106 	mul.w	r1, r4, r6
1001e256:	4299      	cmp	r1, r3
1001e258:	d90a      	bls.n	1001e270 <__udivmoddi4+0x64>
1001e25a:	eb1c 0303 	adds.w	r3, ip, r3
1001e25e:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
1001e262:	f080 8112 	bcs.w	1001e48a <__udivmoddi4+0x27e>
1001e266:	4299      	cmp	r1, r3
1001e268:	f240 810f 	bls.w	1001e48a <__udivmoddi4+0x27e>
1001e26c:	3c02      	subs	r4, #2
1001e26e:	4463      	add	r3, ip
1001e270:	1a59      	subs	r1, r3, r1
1001e272:	fa1f f38e 	uxth.w	r3, lr
1001e276:	fbb1 f0f7 	udiv	r0, r1, r7
1001e27a:	fb07 1110 	mls	r1, r7, r0, r1
1001e27e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001e282:	fb00 f606 	mul.w	r6, r0, r6
1001e286:	429e      	cmp	r6, r3
1001e288:	d90a      	bls.n	1001e2a0 <__udivmoddi4+0x94>
1001e28a:	eb1c 0303 	adds.w	r3, ip, r3
1001e28e:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
1001e292:	f080 80fc 	bcs.w	1001e48e <__udivmoddi4+0x282>
1001e296:	429e      	cmp	r6, r3
1001e298:	f240 80f9 	bls.w	1001e48e <__udivmoddi4+0x282>
1001e29c:	4463      	add	r3, ip
1001e29e:	3802      	subs	r0, #2
1001e2a0:	1b9b      	subs	r3, r3, r6
1001e2a2:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
1001e2a6:	2100      	movs	r1, #0
1001e2a8:	b11d      	cbz	r5, 1001e2b2 <__udivmoddi4+0xa6>
1001e2aa:	40d3      	lsrs	r3, r2
1001e2ac:	2200      	movs	r2, #0
1001e2ae:	e9c5 3200 	strd	r3, r2, [r5]
1001e2b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001e2b6:	428b      	cmp	r3, r1
1001e2b8:	d905      	bls.n	1001e2c6 <__udivmoddi4+0xba>
1001e2ba:	b10d      	cbz	r5, 1001e2c0 <__udivmoddi4+0xb4>
1001e2bc:	e9c5 0100 	strd	r0, r1, [r5]
1001e2c0:	2100      	movs	r1, #0
1001e2c2:	4608      	mov	r0, r1
1001e2c4:	e7f5      	b.n	1001e2b2 <__udivmoddi4+0xa6>
1001e2c6:	fab3 f183 	clz	r1, r3
1001e2ca:	2900      	cmp	r1, #0
1001e2cc:	d146      	bne.n	1001e35c <__udivmoddi4+0x150>
1001e2ce:	42a3      	cmp	r3, r4
1001e2d0:	d302      	bcc.n	1001e2d8 <__udivmoddi4+0xcc>
1001e2d2:	4290      	cmp	r0, r2
1001e2d4:	f0c0 80f0 	bcc.w	1001e4b8 <__udivmoddi4+0x2ac>
1001e2d8:	1a86      	subs	r6, r0, r2
1001e2da:	eb64 0303 	sbc.w	r3, r4, r3
1001e2de:	2001      	movs	r0, #1
1001e2e0:	2d00      	cmp	r5, #0
1001e2e2:	d0e6      	beq.n	1001e2b2 <__udivmoddi4+0xa6>
1001e2e4:	e9c5 6300 	strd	r6, r3, [r5]
1001e2e8:	e7e3      	b.n	1001e2b2 <__udivmoddi4+0xa6>
1001e2ea:	2a00      	cmp	r2, #0
1001e2ec:	f040 8090 	bne.w	1001e410 <__udivmoddi4+0x204>
1001e2f0:	eba1 040c 	sub.w	r4, r1, ip
1001e2f4:	ea4f 481c 	mov.w	r8, ip, lsr #16
1001e2f8:	fa1f f78c 	uxth.w	r7, ip
1001e2fc:	2101      	movs	r1, #1
1001e2fe:	fbb4 f6f8 	udiv	r6, r4, r8
1001e302:	ea4f 431e 	mov.w	r3, lr, lsr #16
1001e306:	fb08 4416 	mls	r4, r8, r6, r4
1001e30a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001e30e:	fb07 f006 	mul.w	r0, r7, r6
1001e312:	4298      	cmp	r0, r3
1001e314:	d908      	bls.n	1001e328 <__udivmoddi4+0x11c>
1001e316:	eb1c 0303 	adds.w	r3, ip, r3
1001e31a:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
1001e31e:	d202      	bcs.n	1001e326 <__udivmoddi4+0x11a>
1001e320:	4298      	cmp	r0, r3
1001e322:	f200 80cd 	bhi.w	1001e4c0 <__udivmoddi4+0x2b4>
1001e326:	4626      	mov	r6, r4
1001e328:	1a1c      	subs	r4, r3, r0
1001e32a:	fa1f f38e 	uxth.w	r3, lr
1001e32e:	fbb4 f0f8 	udiv	r0, r4, r8
1001e332:	fb08 4410 	mls	r4, r8, r0, r4
1001e336:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001e33a:	fb00 f707 	mul.w	r7, r0, r7
1001e33e:	429f      	cmp	r7, r3
1001e340:	d908      	bls.n	1001e354 <__udivmoddi4+0x148>
1001e342:	eb1c 0303 	adds.w	r3, ip, r3
1001e346:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
1001e34a:	d202      	bcs.n	1001e352 <__udivmoddi4+0x146>
1001e34c:	429f      	cmp	r7, r3
1001e34e:	f200 80b0 	bhi.w	1001e4b2 <__udivmoddi4+0x2a6>
1001e352:	4620      	mov	r0, r4
1001e354:	1bdb      	subs	r3, r3, r7
1001e356:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
1001e35a:	e7a5      	b.n	1001e2a8 <__udivmoddi4+0x9c>
1001e35c:	f1c1 0620 	rsb	r6, r1, #32
1001e360:	408b      	lsls	r3, r1
1001e362:	fa22 f706 	lsr.w	r7, r2, r6
1001e366:	431f      	orrs	r7, r3
1001e368:	fa20 fc06 	lsr.w	ip, r0, r6
1001e36c:	fa04 f301 	lsl.w	r3, r4, r1
1001e370:	ea43 030c 	orr.w	r3, r3, ip
1001e374:	40f4      	lsrs	r4, r6
1001e376:	fa00 f801 	lsl.w	r8, r0, r1
1001e37a:	0c38      	lsrs	r0, r7, #16
1001e37c:	ea4f 4913 	mov.w	r9, r3, lsr #16
1001e380:	fbb4 fef0 	udiv	lr, r4, r0
1001e384:	fa1f fc87 	uxth.w	ip, r7
1001e388:	fb00 441e 	mls	r4, r0, lr, r4
1001e38c:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
1001e390:	fb0e f90c 	mul.w	r9, lr, ip
1001e394:	45a1      	cmp	r9, r4
1001e396:	fa02 f201 	lsl.w	r2, r2, r1
1001e39a:	d90a      	bls.n	1001e3b2 <__udivmoddi4+0x1a6>
1001e39c:	193c      	adds	r4, r7, r4
1001e39e:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
1001e3a2:	f080 8084 	bcs.w	1001e4ae <__udivmoddi4+0x2a2>
1001e3a6:	45a1      	cmp	r9, r4
1001e3a8:	f240 8081 	bls.w	1001e4ae <__udivmoddi4+0x2a2>
1001e3ac:	f1ae 0e02 	sub.w	lr, lr, #2
1001e3b0:	443c      	add	r4, r7
1001e3b2:	eba4 0409 	sub.w	r4, r4, r9
1001e3b6:	fa1f f983 	uxth.w	r9, r3
1001e3ba:	fbb4 f3f0 	udiv	r3, r4, r0
1001e3be:	fb00 4413 	mls	r4, r0, r3, r4
1001e3c2:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
1001e3c6:	fb03 fc0c 	mul.w	ip, r3, ip
1001e3ca:	45a4      	cmp	ip, r4
1001e3cc:	d907      	bls.n	1001e3de <__udivmoddi4+0x1d2>
1001e3ce:	193c      	adds	r4, r7, r4
1001e3d0:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
1001e3d4:	d267      	bcs.n	1001e4a6 <__udivmoddi4+0x29a>
1001e3d6:	45a4      	cmp	ip, r4
1001e3d8:	d965      	bls.n	1001e4a6 <__udivmoddi4+0x29a>
1001e3da:	3b02      	subs	r3, #2
1001e3dc:	443c      	add	r4, r7
1001e3de:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
1001e3e2:	fba0 9302 	umull	r9, r3, r0, r2
1001e3e6:	eba4 040c 	sub.w	r4, r4, ip
1001e3ea:	429c      	cmp	r4, r3
1001e3ec:	46ce      	mov	lr, r9
1001e3ee:	469c      	mov	ip, r3
1001e3f0:	d351      	bcc.n	1001e496 <__udivmoddi4+0x28a>
1001e3f2:	d04e      	beq.n	1001e492 <__udivmoddi4+0x286>
1001e3f4:	b155      	cbz	r5, 1001e40c <__udivmoddi4+0x200>
1001e3f6:	ebb8 030e 	subs.w	r3, r8, lr
1001e3fa:	eb64 040c 	sbc.w	r4, r4, ip
1001e3fe:	fa04 f606 	lsl.w	r6, r4, r6
1001e402:	40cb      	lsrs	r3, r1
1001e404:	431e      	orrs	r6, r3
1001e406:	40cc      	lsrs	r4, r1
1001e408:	e9c5 6400 	strd	r6, r4, [r5]
1001e40c:	2100      	movs	r1, #0
1001e40e:	e750      	b.n	1001e2b2 <__udivmoddi4+0xa6>
1001e410:	f1c2 0320 	rsb	r3, r2, #32
1001e414:	fa20 f103 	lsr.w	r1, r0, r3
1001e418:	fa0c fc02 	lsl.w	ip, ip, r2
1001e41c:	fa24 f303 	lsr.w	r3, r4, r3
1001e420:	4094      	lsls	r4, r2
1001e422:	430c      	orrs	r4, r1
1001e424:	ea4f 481c 	mov.w	r8, ip, lsr #16
1001e428:	fa00 fe02 	lsl.w	lr, r0, r2
1001e42c:	fa1f f78c 	uxth.w	r7, ip
1001e430:	fbb3 f0f8 	udiv	r0, r3, r8
1001e434:	fb08 3110 	mls	r1, r8, r0, r3
1001e438:	0c23      	lsrs	r3, r4, #16
1001e43a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001e43e:	fb00 f107 	mul.w	r1, r0, r7
1001e442:	4299      	cmp	r1, r3
1001e444:	d908      	bls.n	1001e458 <__udivmoddi4+0x24c>
1001e446:	eb1c 0303 	adds.w	r3, ip, r3
1001e44a:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
1001e44e:	d22c      	bcs.n	1001e4aa <__udivmoddi4+0x29e>
1001e450:	4299      	cmp	r1, r3
1001e452:	d92a      	bls.n	1001e4aa <__udivmoddi4+0x29e>
1001e454:	3802      	subs	r0, #2
1001e456:	4463      	add	r3, ip
1001e458:	1a5b      	subs	r3, r3, r1
1001e45a:	b2a4      	uxth	r4, r4
1001e45c:	fbb3 f1f8 	udiv	r1, r3, r8
1001e460:	fb08 3311 	mls	r3, r8, r1, r3
1001e464:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1001e468:	fb01 f307 	mul.w	r3, r1, r7
1001e46c:	42a3      	cmp	r3, r4
1001e46e:	d908      	bls.n	1001e482 <__udivmoddi4+0x276>
1001e470:	eb1c 0404 	adds.w	r4, ip, r4
1001e474:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
1001e478:	d213      	bcs.n	1001e4a2 <__udivmoddi4+0x296>
1001e47a:	42a3      	cmp	r3, r4
1001e47c:	d911      	bls.n	1001e4a2 <__udivmoddi4+0x296>
1001e47e:	3902      	subs	r1, #2
1001e480:	4464      	add	r4, ip
1001e482:	1ae4      	subs	r4, r4, r3
1001e484:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
1001e488:	e739      	b.n	1001e2fe <__udivmoddi4+0xf2>
1001e48a:	4604      	mov	r4, r0
1001e48c:	e6f0      	b.n	1001e270 <__udivmoddi4+0x64>
1001e48e:	4608      	mov	r0, r1
1001e490:	e706      	b.n	1001e2a0 <__udivmoddi4+0x94>
1001e492:	45c8      	cmp	r8, r9
1001e494:	d2ae      	bcs.n	1001e3f4 <__udivmoddi4+0x1e8>
1001e496:	ebb9 0e02 	subs.w	lr, r9, r2
1001e49a:	eb63 0c07 	sbc.w	ip, r3, r7
1001e49e:	3801      	subs	r0, #1
1001e4a0:	e7a8      	b.n	1001e3f4 <__udivmoddi4+0x1e8>
1001e4a2:	4631      	mov	r1, r6
1001e4a4:	e7ed      	b.n	1001e482 <__udivmoddi4+0x276>
1001e4a6:	4603      	mov	r3, r0
1001e4a8:	e799      	b.n	1001e3de <__udivmoddi4+0x1d2>
1001e4aa:	4630      	mov	r0, r6
1001e4ac:	e7d4      	b.n	1001e458 <__udivmoddi4+0x24c>
1001e4ae:	46d6      	mov	lr, sl
1001e4b0:	e77f      	b.n	1001e3b2 <__udivmoddi4+0x1a6>
1001e4b2:	4463      	add	r3, ip
1001e4b4:	3802      	subs	r0, #2
1001e4b6:	e74d      	b.n	1001e354 <__udivmoddi4+0x148>
1001e4b8:	4606      	mov	r6, r0
1001e4ba:	4623      	mov	r3, r4
1001e4bc:	4608      	mov	r0, r1
1001e4be:	e70f      	b.n	1001e2e0 <__udivmoddi4+0xd4>
1001e4c0:	3e02      	subs	r6, #2
1001e4c2:	4463      	add	r3, ip
1001e4c4:	e730      	b.n	1001e328 <__udivmoddi4+0x11c>
1001e4c6:	bf00      	nop

1001e4c8 <__aeabi_idiv0>:
1001e4c8:	4770      	bx	lr
1001e4ca:	bf00      	nop
1001e4cc:	6e692525 	.word	0x6e692525
1001e4d0:	203a6f66 	.word	0x203a6f66
1001e4d4:	00000000 	.word	0x00000000
1001e4d8:	78303e50 	.word	0x78303e50
1001e4dc:	78383025 	.word	0x78383025
1001e4e0:	0000000a 	.word	0x0000000a
1001e4e4:	00002525 	.word	0x00002525
1001e4e8:	78303e46 	.word	0x78303e46
1001e4ec:	78383025 	.word	0x78383025
1001e4f0:	0000000a 	.word	0x0000000a
1001e4f4:	75732525 	.word	0x75732525
1001e4f8:	73656363 	.word	0x73656363
1001e4fc:	00203a73 	.word	0x00203a73
1001e500:	7473694c 	.word	0x7473694c
1001e504:	00000000 	.word	0x00000000
1001e508:	65642525 	.word	0x65642525
1001e50c:	3a677562 	.word	0x3a677562
1001e510:	00000020 	.word	0x00000020
1001e514:	73726946 	.word	0x73726946
1001e518:	6f622074 	.word	0x6f622074
1001e51c:	202c746f 	.word	0x202c746f
1001e520:	74746573 	.word	0x74746573
1001e524:	20676e69 	.word	0x20676e69
1001e528:	73616c66 	.word	0x73616c66
1001e52c:	00002168 	.word	0x00002168
1001e530:	72652525 	.word	0x72652525
1001e534:	3a726f72 	.word	0x3a726f72
1001e538:	00000020 	.word	0x00000020
1001e53c:	6c756f43 	.word	0x6c756f43
1001e540:	6f6e2064 	.word	0x6f6e2064
1001e544:	61762074 	.word	0x61762074
1001e548:	6164696c 	.word	0x6164696c
1001e54c:	63206574 	.word	0x63206574
1001e550:	6f706d6f 	.word	0x6f706d6f
1001e554:	746e656e 	.word	0x746e656e
1001e558:	00000000 	.word	0x00000000
1001e55c:	706d6f43 	.word	0x706d6f43
1001e560:	6e656e6f 	.word	0x6e656e6f
1001e564:	44492074 	.word	0x44492074
1001e568:	7830203a 	.word	0x7830203a
1001e56c:	78383025 	.word	0x78383025
1001e570:	766e6920 	.word	0x766e6920
1001e574:	64696c61 	.word	0x64696c61
1001e578:	0000000a 	.word	0x0000000a
1001e57c:	30257830 	.word	0x30257830
1001e580:	253e7838 	.word	0x253e7838
1001e584:	00000a73 	.word	0x00000a73
1001e588:	6c756f43 	.word	0x6c756f43
1001e58c:	6f6e2064 	.word	0x6f6e2064
1001e590:	6f622074 	.word	0x6f622074
1001e594:	6320746f 	.word	0x6320746f
1001e598:	6f706d6f 	.word	0x6f706d6f
1001e59c:	746e656e 	.word	0x746e656e
1001e5a0:	00000000 	.word	0x00000000
1001e5a4:	78303e43 	.word	0x78303e43
1001e5a8:	78383025 	.word	0x78383025
1001e5ac:	0000000a 	.word	0x0000000a
1001e5b0:	00007325 	.word	0x00007325
1001e5b4:	6c756f43 	.word	0x6c756f43
1001e5b8:	6f6e2064 	.word	0x6f6e2064
1001e5bc:	74612074 	.word	0x74612074
1001e5c0:	74736574 	.word	0x74736574
1001e5c4:	6d6f6320 	.word	0x6d6f6320
1001e5c8:	656e6f70 	.word	0x656e6f70
1001e5cc:	0000746e 	.word	0x0000746e
1001e5d0:	706d6f43 	.word	0x706d6f43
1001e5d4:	6e656e6f 	.word	0x6e656e6f
1001e5d8:	63207374 	.word	0x63207374
1001e5dc:	646c756f 	.word	0x646c756f
1001e5e0:	746f6e20 	.word	0x746f6e20
1001e5e4:	20656220 	.word	0x20656220
1001e5e8:	696c6176 	.word	0x696c6176
1001e5ec:	65746164 	.word	0x65746164
1001e5f0:	00000064 	.word	0x00000064
1001e5f4:	206c6c41 	.word	0x206c6c41
1001e5f8:	706d6f43 	.word	0x706d6f43
1001e5fc:	6e656e6f 	.word	0x6e656e6f
1001e600:	76207374 	.word	0x76207374
1001e604:	64696c61 	.word	0x64696c61
1001e608:	64657461 	.word	0x64657461
1001e60c:	00000000 	.word	0x00000000
1001e610:	6c696146 	.word	0x6c696146
1001e614:	74206465 	.word	0x74206465
1001e618:	6f62206f 	.word	0x6f62206f
1001e61c:	6120746f 	.word	0x6120746f
1001e620:	63206c6c 	.word	0x63206c6c
1001e624:	6f706d6f 	.word	0x6f706d6f
1001e628:	746e656e 	.word	0x746e656e
1001e62c:	00000073 	.word	0x00000073
1001e630:	746f6f62 	.word	0x746f6f62
1001e634:	00000000 	.word	0x00000000
1001e638:	253e5041 	.word	0x253e5041
1001e63c:	00000a73 	.word	0x00000a73
1001e640:	746f6f42 	.word	0x746f6f42
1001e644:	00000000 	.word	0x00000000
1001e648:	65746e45 	.word	0x65746e45
1001e64c:	69702072 	.word	0x69702072
1001e650:	00203a6e 	.word	0x00203a6e
1001e654:	34333231 	.word	0x34333231
1001e658:	00003635 	.word	0x00003635
1001e65c:	206e6950 	.word	0x206e6950
1001e660:	65636341 	.word	0x65636341
1001e664:	64657470 	.word	0x64657470
1001e668:	00000021 	.word	0x00000021
1001e66c:	61766e49 	.word	0x61766e49
1001e670:	2064696c 	.word	0x2064696c
1001e674:	214e4950 	.word	0x214e4950
1001e678:	00000000 	.word	0x00000000
1001e67c:	706d6f43 	.word	0x706d6f43
1001e680:	6e656e6f 	.word	0x6e656e6f
1001e684:	44492074 	.word	0x44492074
1001e688:	0000203a 	.word	0x0000203a
1001e68c:	00007825 	.word	0x00007825
1001e690:	65747441 	.word	0x65747441
1001e694:	00007473 	.word	0x00007473
1001e698:	65746e45 	.word	0x65746e45
1001e69c:	6f742072 	.word	0x6f742072
1001e6a0:	3a6e656b 	.word	0x3a6e656b
1001e6a4:	00000020 	.word	0x00000020
1001e6a8:	33323130 	.word	0x33323130
1001e6ac:	37363534 	.word	0x37363534
1001e6b0:	62613938 	.word	0x62613938
1001e6b4:	66656463 	.word	0x66656463
1001e6b8:	00000000 	.word	0x00000000
1001e6bc:	656b6f54 	.word	0x656b6f54
1001e6c0:	6341206e 	.word	0x6341206e
1001e6c4:	74706563 	.word	0x74706563
1001e6c8:	00216465 	.word	0x00216465
1001e6cc:	61766e49 	.word	0x61766e49
1001e6d0:	2064696c 	.word	0x2064696c
1001e6d4:	656b6f54 	.word	0x656b6f54
1001e6d8:	0000216e 	.word	0x0000216e
1001e6dc:	706d6f43 	.word	0x706d6f43
1001e6e0:	6e656e6f 	.word	0x6e656e6f
1001e6e4:	44492074 	.word	0x44492074
1001e6e8:	3a6e4920 	.word	0x3a6e4920
1001e6ec:	00000020 	.word	0x00000020
1001e6f0:	706d6f43 	.word	0x706d6f43
1001e6f4:	6e656e6f 	.word	0x6e656e6f
1001e6f8:	44492074 	.word	0x44492074
1001e6fc:	74754f20 	.word	0x74754f20
1001e700:	0000203a 	.word	0x0000203a
1001e704:	6c706552 	.word	0x6c706552
1001e708:	64656361 	.word	0x64656361
1001e70c:	25783020 	.word	0x25783020
1001e710:	20783830 	.word	0x20783830
1001e714:	68746977 	.word	0x68746977
1001e718:	25783020 	.word	0x25783020
1001e71c:	0a783830 	.word	0x0a783830
1001e720:	00000000 	.word	0x00000000
1001e724:	6c706552 	.word	0x6c706552
1001e728:	00656361 	.word	0x00656361
1001e72c:	706d6f43 	.word	0x706d6f43
1001e730:	6e656e6f 	.word	0x6e656e6f
1001e734:	78302074 	.word	0x78302074
1001e738:	78383025 	.word	0x78383025
1001e73c:	20736920 	.word	0x20736920
1001e740:	20746f6e 	.word	0x20746f6e
1001e744:	766f7270 	.word	0x766f7270
1001e748:	6f697369 	.word	0x6f697369
1001e74c:	2064656e 	.word	0x2064656e
1001e750:	20726f66 	.word	0x20726f66
1001e754:	20656874 	.word	0x20656874
1001e758:	74737973 	.word	0x74737973
1001e75c:	0a0d6d65 	.word	0x0a0d6d65
1001e760:	00000000 	.word	0x00000000
1001e764:	65746e45 	.word	0x65746e45
1001e768:	6f432072 	.word	0x6f432072
1001e76c:	6e616d6d 	.word	0x6e616d6d
1001e770:	00203a64 	.word	0x00203a64
1001e774:	7473696c 	.word	0x7473696c
1001e778:	00000000 	.word	0x00000000
1001e77c:	6c706572 	.word	0x6c706572
1001e780:	00656361 	.word	0x00656361
1001e784:	65747461 	.word	0x65747461
1001e788:	00007473 	.word	0x00007473
1001e78c:	1001e774 	.word	0x1001e774
1001e790:	1000e295 	.word	0x1000e295
1001e794:	1001e630 	.word	0x1001e630
1001e798:	1000e6a5 	.word	0x1000e6a5
1001e79c:	1001e77c 	.word	0x1001e77c
1001e7a0:	1000e8e1 	.word	0x1000e8e1
1001e7a4:	1001e784 	.word	0x1001e784
1001e7a8:	1000e7f9 	.word	0x1000e7f9
1001e7ac:	63612525 	.word	0x63612525
1001e7b0:	0a25256b 	.word	0x0a25256b
1001e7b4:	00000000 	.word	0x00000000
1001e7b8:	203e2d20 	.word	0x203e2d20
1001e7bc:	65746e49 	.word	0x65746e49
1001e7c0:	70757272 	.word	0x70757272
1001e7c4:	28202174 	.word	0x28202174
1001e7c8:	73616c46 	.word	0x73616c46
1001e7cc:	63612068 	.word	0x63612068
1001e7d0:	73736563 	.word	0x73736563
1001e7d4:	69616620 	.word	0x69616620
1001e7d8:	6572756c 	.word	0x6572756c
1001e7dc:	00000a29 	.word	0x00000a29
1001e7e0:	6c696146 	.word	0x6c696146
1001e7e4:	74206465 	.word	0x74206465
1001e7e8:	6e69206f 	.word	0x6e69206f
1001e7ec:	61697469 	.word	0x61697469
1001e7f0:	657a696c 	.word	0x657a696c
1001e7f4:	43324920 	.word	0x43324920
1001e7f8:	0000002e 	.word	0x0000002e
1001e7fc:	5f43584d 	.word	0x5f43584d
1001e800:	45535341 	.word	0x45535341
1001e804:	25205452 	.word	0x25205452
1001e808:	25232073 	.word	0x25232073
1001e80c:	28203a64 	.word	0x28203a64
1001e810:	0a297325 	.word	0x0a297325
1001e814:	00000000 	.word	0x00000000
1001e818:	6573552f 	.word	0x6573552f
1001e81c:	732f7372 	.word	0x732f7372
1001e820:	6c696f70 	.word	0x6c696f70
1001e824:	442f7265 	.word	0x442f7265
1001e828:	6d75636f 	.word	0x6d75636f
1001e82c:	73746e65 	.word	0x73746e65
1001e830:	7469472f 	.word	0x7469472f
1001e834:	2f627548 	.word	0x2f627548
1001e838:	2d544143 	.word	0x2d544143
1001e83c:	66746365 	.word	0x66746365
1001e840:	3230322d 	.word	0x3230322d
1001e844:	736d2f34 	.word	0x736d2f34
1001e848:	4c2f6b64 	.word	0x4c2f6b64
1001e84c:	61726269 	.word	0x61726269
1001e850:	73656972 	.word	0x73656972
1001e854:	616f422f 	.word	0x616f422f
1001e858:	2f736472 	.word	0x2f736472
1001e85c:	3758414d 	.word	0x3758414d
1001e860:	30303038 	.word	0x30303038
1001e864:	4854462f 	.word	0x4854462f
1001e868:	65525f52 	.word	0x65525f52
1001e86c:	532f4176 	.word	0x532f4176
1001e870:	6372756f 	.word	0x6372756f
1001e874:	6f622f65 	.word	0x6f622f65
1001e878:	2e647261 	.word	0x2e647261
1001e87c:	00000063 	.word	0x00000063
1001e880:	4c494146 	.word	0x4c494146
1001e884:	00000000 	.word	0x00000000

1001e888 <num_leds>:
1001e888:	00000003                                ....

1001e88c <led_pin>:
1001e88c:	40080400 00000001 00010001 40080400     ...@...........@
1001e89c:	00000002 00010001 40080400 00000004     ...........@....
1001e8ac:	00010001                                ....

1001e8b0 <num_pbs>:
1001e8b0:	00000002                                ....

1001e8b4 <pb_pin>:
1001e8b4:	40008000 00000004 00010100 40009000     ...@...........@
1001e8c4:	00000080 00010100 6573552f 732f7372     ......../Users/s
1001e8d4:	6c696f70 442f7265 6d75636f 73746e65     poiler/Documents
1001e8e4:	7469472f 2f627548 2d544143 66746365     /GitHub/CAT-ectf
1001e8f4:	3230322d 736d2f34 4c2f6b64 61726269     -2024/msdk/Libra
1001e904:	73656972 73694d2f 69724463 73726576     ries/MiscDrivers
1001e914:	44454c2f 64656c2f 0000632e 20786469     /LED/led.c..idx 
1001e924:	756e203c 656c5f6d 00007364              < num_leds..

1001e930 <gpio_cfg_uart3>:
1001e930:	40080400 000000c0 00000003              ...@........

1001e93c <gpio_cfg_uart2>:
1001e93c:	40009000 00000003 00000002              ...@........

1001e948 <gpio_cfg_uart1>:
1001e948:	40008000 00003000 00000002              ...@.0......

1001e954 <gpio_cfg_uart0>:
1001e954:	40008000 00000003 00000002              ...@........

1001e960 <gpio_cfg_i2c2>:
1001e960:	40008000 c0000000 00000002              ...@........

1001e96c <gpio_cfg_i2c1>:
1001e96c:	40008000 00030000 00000002              ...@........

1001e978 <gpio_cfg_i2c0>:
1001e978:	40008000 00000c00 00000002              ...@........

1001e984 <gpio_cfg_extclk>:
1001e984:	40008000 00000008 00000002 6573552f     ...@......../Use
1001e994:	732f7372 6c696f70 442f7265 6d75636f     rs/spoiler/Docum
1001e9a4:	73746e65 7469472f 2f627548 2d544143     ents/GitHub/CAT-
1001e9b4:	66746365 3230322d 736d2f34 4c2f6b64     ectf-2024/msdk/L
1001e9c4:	61726269 73656972 534d432f 2e2f5349     ibraries/CMSIS/.
1001e9d4:	65502f2e 68706972 76697244 2f737265     ./PeriphDrivers/
1001e9e4:	72756f53 472f6563 2f4f4950 6f697067     Source/GPIO/gpio
1001e9f4:	6d6f635f 2e6e6f6d 00000063 74726f70     _common.c...port
1001ea04:	4d203c20 435f4358 475f4746 5f4f4950      < MXC_CFG_GPIO_
1001ea14:	54534e49 45434e41 00000053              INSTANCES...

1001ea20 <CSWTCH.16>:
1001ea20:	40009000 40080400 40080600 00464e49     ...@...@...@INF.
1001ea30:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
1001ea40:	37363534 42413938 46454443 00000000     456789ABCDEF....
1001ea50:	6c756e28 0000296c 00000030              (null)..0...

1001ea5c <zeroes.0>:
1001ea5c:	30303030 30303030 30303030 30303030     0000000000000000

1001ea6c <blanks.1>:
1001ea6c:	20202020 20202020 20202020 20202020                     

1001ea7c <zeroes.0>:
1001ea7c:	30303030 30303030 30303030 30303030     0000000000000000

1001ea8c <blanks.1>:
1001ea8c:	20202020 20202020 20202020 20202020                     
1001ea9c:	435f434c 414c4c4f 00004554 435f434c     LC_COLLATE..LC_C
1001eaac:	45505954 00000000 4d5f434c 54454e4f     TYPE....LC_MONET
1001eabc:	00595241 4e5f434c 52454d55 00004349     ARY.LC_NUMERIC..
1001eacc:	545f434c 00454d49 4d5f434c 41535345     LC_TIME.LC_MESSA
1001eadc:	00534547                                GES.

1001eae0 <_ctype_>:
1001eae0:	20202000 20202020 28282020 20282828     .         ((((( 
1001eaf0:	20202020 20202020 20202020 20202020                     
1001eb00:	10108820 10101010 10101010 10101010      ...............
1001eb10:	04040410 04040404 10040404 10101010     ................
1001eb20:	41411010 41414141 01010101 01010101     ..AAAAAA........
1001eb30:	01010101 01010101 01010101 10101010     ................
1001eb40:	42421010 42424242 02020202 02020202     ..BBBBBB........
1001eb50:	02020202 02020202 02020202 10101010     ................
1001eb60:	00000020 00000000 00000000 00000000      ...............
	...
1001ebe4:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
1001ebf4:	6c6c6142 7320636f 65636375 64656465     Balloc succeeded
1001ec04:	00000000 6c6f562f 73656d75 7461642f     ..../Volumes/dat
1001ec14:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
1001ec24:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
1001ec34:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
1001ec44:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
1001ec54:	696c2f62 732f6362 696c6474 74642f62     b/libc/stdlib/dt
1001ec64:	632e616f 00000000                       oa.c....

1001ec6c <zeroes.0>:
1001ec6c:	30303030 30303030 30303030 30303030     0000000000000000

1001ec7c <blanks.1>:
1001ec7c:	20202020 20202020 20202020 20202020                     
1001ec8c:	646c2565 00000000                       e%ld....

1001ec94 <basefix.0>:
1001ec94:	0001000a 00030002 00050004 00070006     ................
1001eca4:	00090008 000b000a 000d000c 000f000e     ................
1001ecb4:	00000010 6c6f562f 73656d75 7461642f     ..../Volumes/dat
1001ecc4:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
1001ecd4:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
1001ece4:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
1001ecf4:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
1001ed04:	696c2f62 732f6362 696c6474 706d2f62     b/libc/stdlib/mp
1001ed14:	2e636572 00000063                       rec.c...

1001ed1c <p05.0>:
1001ed1c:	00000005 00000019 0000007d              ........}...

1001ed28 <__mprec_bigtens>:
1001ed28:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
1001ed38:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
1001ed48:	7f73bf3c 75154fdd                       <.s..O.u

1001ed50 <__mprec_tens>:
1001ed50:	00000000 3ff00000 00000000 40240000     .......?......$@
1001ed60:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
1001ed70:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
1001ed80:	00000000 412e8480 00000000 416312d0     .......A......cA
1001ed90:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
1001eda0:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
1001edb0:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
1001edc0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
1001edd0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
1001ede0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
1001edf0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
1001ee00:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
1001ee10:	79d99db4 44ea7843 0000666e 74696e69     ...yCx.Dnf..init
1001ee20:	00000079 00006e61                       y...an..

1001ee28 <fpinan.0>:
1001ee28:	00000034 fffffbce 000003cb 00000001     4...............
1001ee38:	00000000                                ....

1001ee3c <fpi.1>:
1001ee3c:	00000035 fffffbce 000003cb 00000001     5...............
1001ee4c:	00000000                                ....

1001ee50 <tinytens>:
1001ee50:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
1001ee60:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
1001ee70:	64ac6f43 11680628 7566202c 6974636e     Co.d(.h., functi
1001ee80:	203a6e6f 00000000 65737361 6f697472     on: ....assertio
1001ee90:	2522206e 66202273 656c6961 66203a64     n "%s" failed: f
1001eea0:	20656c69 22732522 696c202c 2520656e     ile "%s", line %
1001eeb0:	25732564 00000a73 0053494a 53494a53     d%s%s...JIS.SJIS
1001eec0:	00000000 4a435545 00000050              ....EUCJP...

1001eecc <d02f4>:
1001eecc:	4e105f0c 4e2a4e15 4e364e31 4e3f4e3c     ._.N.N*N1N6N<N?N
1001eedc:	4e564e42 4e824e58 8c6b4e85 82124e8a     BNVNXN.N.Nk..N..
1001eeec:	4e8e5f0d 4e9f4e9e 4ea24ea0 4eb34eb0     ._.N.N.N.N.N.N.N
1001eefc:	4ece4eb6 4ec44ecd 4ec24ec6 4ede4ed7     .N.N.N.N.N.N.N.N
1001ef0c:	4edf4eed 4f094ef7 4f304f5a 4f5d4f5b     .N.N.N.OZO0O[O]O
1001ef1c:	4f474f57 4f884f76 4f984f8f 4f694f7b     WOGOvO.O.O.O{OiO
1001ef2c:	4f914f70 4f864f6f 51184f96 4fdf4fd4     pO.OoO.O.O.Q.O.O
1001ef3c:	4fd84fce 4fd14fdb 4fd04fda 4fe54fe4     .O.O.O.O.O.O.O.O
1001ef4c:	5028501a 502a5014 50055025 4ff64f1c     .P(P.P*P%P.P.O.O
1001ef5c:	50295021 4ffe502c 50114fef 50435006     !P)P,P.O.O.P.PCP
1001ef6c:	67035047 50505055 505a5048 506c5056     GP.gUPPPHPZPVPlP
1001ef7c:	50805078 5085509a 50b250b4 50ca50c9     xP.P.P.P.P.P.P.P
1001ef8c:	50c250b3 50de50d6 50ed50e5 50ee50e3     .P.P.P.P.P.P.P.P
1001ef9c:	50f550f9 51015109 51165102 51145115     .P.P.Q.Q.Q.Q.Q.Q
1001efac:	5121511a 5137513a 513b513c 5140513f     .Q!Q:Q7Q<Q;Q?Q@Q
1001efbc:	514c5152 51625154 51697af8 516e516a     RQLQTQbQ.ziQjQnQ
1001efcc:	51825180 518c56d8 518f5189 51935191     .Q.Q.V.Q.Q.Q.Q.Q
1001efdc:	51965195 51a651a4 51a951a2 51ab51aa     .Q.Q.Q.Q.Q.Q.Q.Q
1001efec:	51b151b3 51b051b2 51bd51b5 51c951c5     .Q.Q.Q.Q.Q.Q.Q.Q
1001effc:	51e051db 51e98655 51f051ed 51fe51f5     .Q.QU..Q.Q.Q.Q.Q
1001f00c:	520b5204 520e5214 522a5227 5233522e     .R.R.R.R'R*R.R3R
1001f01c:	524f5239 524b5244 525e524c 526a5254     9RORDRKRLR^RTRjR
1001f02c:	52695274 527f5273 528d527d 52925294     tRiRsR.R}R.R.R.R
1001f03c:	52885271 8fa85291 52ac8fa7 52bc52ad     qR.R.R.....R.R.R
1001f04c:	52c152b5 52d752cd 52e352de 98ed52e6     .R.R.R.R.R.R.R..
1001f05c:	52f352e0 52f852f5 530652f9 75385308     .R.R.R.R.R.S.S8u
1001f06c:	5310530d 5315530f 5323531a 5331532f     .S.S.S.S.S#S/S1S
1001f07c:	53385333 53465340 4e175345 534d5349     3S8S@SFSES.NISMS
1001f08c:	535e51d6 536e5369 537b5918 53825377     .Q^SiSnS.Y{SwS.S
1001f09c:	53a05396 53a553a6 53b053ae 53c353b6     .S.S.S.S.S.S.S.S
1001f0ac:	96d97c12 66fc53df 53ee71ee 53ed53e8     .|...S.f.q.S.S.S
1001f0bc:	540153fa 5440543d 542d542c 542e543c     .S.T=T@T,T-T<T.T
1001f0cc:	54295436 544e541d 5475548f 545f548e     6T)T.TNT.TuT.T_T
1001f0dc:	54775471 54925470 5480547b 54845476     qTwTpT.T{T.TvT.T
1001f0ec:	54865490 54a254c7 54a554b8 54c454ac     .T.T.T.T.T.T.T.T
1001f0fc:	54a854c8 54c254ab 54be54a4 54d854bc     .T.T.T.T.T.T.T.T
1001f10c:	54e654e5 5514550f 54ee54fd 54fa54ed     .T.T.U.U.T.T.T.T
1001f11c:	553954e2 55635540 552e554c 5545555c     .T9U@UcULU.U\UEU
1001f12c:	55575556 55335538 5599555d 54af5580     VUWU8U3U]U.U.U.T
1001f13c:	559f558a 557e557b 559e5598 557c55ae     .U.U{U~U.U.U.U|U
1001f14c:	55a95583 55a85587 55c555da 55c455df     .U.U.U.U.U.U.U.U
1001f15c:	55e455dc 561455d4 561655f7 55fd55fe     .U.U.U.V.U.V.U.U
1001f16c:	55f9561b 5650564e 563471df 56325636     .V.UNVPV.q4V6V2V
1001f17c:	566b5638 562f5664 566a566c 56805686     8VkVdV/VlVjV.V.V
1001f18c:	56a0568a 568f5694 56ae56a5 56b456b6     .V.V.V.V.V.V.V.V
1001f19c:	56bc56c2 56c356c1 56c856c0 56d156ce     .V.V.V.V.V.V.V.V
1001f1ac:	56d756d3 56f956ee 56ff5700 57095704     .V.V.V.V.W.V.W.W
1001f1bc:	570b5708 5713570d 57165718 571c55c7     .W.W.W.W.W.W.U.W
1001f1cc:	57375726 574e5738 5740573b 5769574f     &W7W8WNW;W@WOWiW
1001f1dc:	578857c0 577f5761 57935789 57b357a0     .W.WaW.W.W.W.W.W
1001f1ec:	57aa57a4 57c357b0 57d457c6 57d357d2     .W.W.W.W.W.W.W.W
1001f1fc:	57d6580a 580b57e3 581d5819 58215872     .X.W.W.X.X.XrX!X
1001f20c:	584b5862 6bc05870 583d5852 58855879     bXKXpX.kRX=XyX.X
1001f21c:	589f58b9 58ba58ab 58bb58de 58ae58b8     .X.X.X.X.X.X.X.X
1001f22c:	58d358c5 58d758d1 58d858d9 58dc58e5     .X.X.X.X.X.X.X.X
1001f23c:	58df58e4 58fa58ef 58fb58f9 58fd58fc     .X.X.X.X.X.X.X.X
1001f24c:	590a5902 591b5910 592568a6 592d592c     .Y.Y.Y.Y.h%Y,Y-Y
1001f25c:	59385932 7ad2593e 59505955 595a594e     2Y8Y>Y.zUYPYNYZY
1001f26c:	59625958 59675960 5969596c 59815978     XYbY`YgYlYiYxY.Y
1001f27c:	4f5e599d 59a34fab 59c659b2 59dc59e8     .Y^O.O.Y.Y.Y.Y.Y
1001f28c:	59d9598d 5a2559da 5a115a1f 5a095a1c     .Y.Y.Y%Z.Z.Z.Z.Z
1001f29c:	5a405a1a 5a495a6c 5a365a35 5a6a5a62     .Z@ZlZIZ5Z6ZbZjZ
1001f2ac:	5abc5a9a 5acb5abe 5abd5ac2 5ad75ae3     .Z.Z.Z.Z.Z.Z.Z.Z
1001f2bc:	5ae95ae6 5afa5ad6 5b0c5afb 5b165b0b     .Z.Z.Z.Z.Z.[.[.[
1001f2cc:	5ad05b32 5b365b2a 5b435b3e 5b405b45     2[.Z*[6[>[C[E[@[
1001f2dc:	5b555b51 5b5b5b5a 5b695b65 5b735b70     Q[U[Z[[[e[i[p[s[
1001f2ec:	5b785b75 5b7a6588 5b835b80 5bb85ba6     u[x[.ez[.[.[.[.[
1001f2fc:	5bc75bc3 5bd45bc9 5be45bd0 5be25be6     .[.[.[.[.[.[.[.[
1001f30c:	5be55bde 5bf05beb 5bf35bf6 5c075c05     .[.[.[.[.[.[.\.\
1001f31c:	5c0d5c08 5c205c13 5c285c22 5c395c38     .\.\.\ \"\(\8\9\
1001f32c:	5c465c41 5c535c4e 5c4f5c50 5c6c5b71     A\F\N\S\P\O\q[l\
1001f33c:	4e625c6e 5c795c76 5c915c8c 599b5c94     n\bNv\y\.\.\.\.Y
1001f34c:	5cbb5cab 5cbc5cb6 5cc55cb7 5cc75cbe     .\.\.\.\.\.\.\.\
1001f35c:	5ce95cd9 5cfa5cfd 5d8c5ced 5d0b5cea     .\.\.\.\.\.].\.]
1001f36c:	5d175d15 5d1f5d5c 5d115d1b 5d225d14     .].]\].].].].]"]
1001f37c:	5d195d1a 5d4c5d18 5d4e5d52 5d6c5d4b     .].].]L]R]N]K]l]
1001f38c:	5d765d73 5d845d87 5da25d82 5dac5d9d     s]v].].].].].].]
1001f39c:	5dbd5dae 5db75d90 5dc95dbc 5dd35dcd     .].].].].].].].]
1001f3ac:	5dd65dd2 5deb5ddb 5df55df2 5e1a5e0b     .].].].].].].^.^
1001f3bc:	5e115e19 5e365e1b 5e445e37 5e405e43     .^.^.^6^7^D^C^@^
1001f3cc:	5e575e4e 5e5f5e54 5e645e62 5e755e47     N^W^T^_^b^d^G^u^
1001f3dc:	5e7a5e76 5e7f9ebc 5ec15ea0 5ec85ec2     v^z^...^.^.^.^.^
1001f3ec:	5ecf5ed0 5ee35ed6 5eda5edd 5ee25edb     .^.^.^.^.^.^.^.^
1001f3fc:	5ee85ee1 5eec5ee9 5ef35ef1 5ef45ef0     .^.^.^.^.^.^.^.^
1001f40c:	5efe5ef8 5f095f03 5f5c5f5d 5f115f0b     .^.^._._]_\_._._
1001f41c:	5f295f16 5f385f2d 5f485f41 5f4e5f4c     ._)_-_8_A_H_L_N_
1001f42c:	5f515f2f 5f575f56 5f615f59 5f735f6d     /_Q_V_W_Y_a_m_s_
1001f43c:	5f835f77 5f7f5f82 5f885f8a 5f875f91     w_._._._._._._._
1001f44c:	5f995f9e 5fa05f98 5fad5fa8 5fd65fbc     ._._._._._._._._
1001f45c:	5fe45ffb 5ff15ff8 60b35fdd 60215fff     ._._._._._.`._!`
1001f46c:	60196060 60296010 6031600e 6015601b     ``.`.`)`.`1`.`.`
1001f47c:	6026602b 603a600f 6041605a 6077606a     +`&`.`:`Z`A`j`w`
1001f48c:	604a605f 604d6046 60436063 60426064     _`J`F`M`c`C`d`B`
1001f49c:	606b606c 60816059 60e7608d 609a6083     l`k`Y`.`.`.`.`.`
1001f4ac:	609b6084 60976096 60a76092 60e1608b     .`.`.`.`.`.`.`.`
1001f4bc:	60e060b8 60b460d3 60bd5ff0 60b560c6     .`.`.`.`._.`.`.`
1001f4cc:	614d60d8 61066115 60f760f6 60f46100     .`Ma.a.a.`.`.a.`
1001f4dc:	610360fa 60fb6121 610d60f1 6147610e     .`.a!a.`.`.a.aGa
1001f4ec:	6128613e 614a6127 613c613f 6134612c     >a(a'aJa?a<a,a4a
1001f4fc:	6142613d 61736144 61586177 615a6159     =aBaDasawaXaYaZa
1001f50c:	6174616b 6165616f 615f6171 6153615d     kataoaeaqa_a]aSa
1001f51c:	61996175 61876196 619461ac 618a619a     ua.a.a.a.a.a.a.a
1001f52c:	61ab6191 61cc61ae 61c961ca 61c861f7     .a.a.a.a.a.a.a.a
1001f53c:	61c661c3 61cb61ba 61cd7f79 61e361e6     .a.a.a.ay..a.a.a
1001f54c:	61fa61f6 61ff61f4 61fc61fd 620061fe     .a.a.a.a.a.a.a.b
1001f55c:	62096208 620c620d 621b6214 6221621e     .b.b.b.b.b.b.b!b
1001f56c:	622e622a 62326230 62416233 625e624e     *b.b0b2b3bAbNb^b
1001f57c:	625b6263 62686260 6282627c 627e6289     cb[b`bhb|b.b.b~b
1001f58c:	62936292 62d46296 62946283 62d162d7     .b.b.b.b.b.b.b.b
1001f59c:	62cf62bb 62c662ff 62c864d4 62cc62dc     .b.b.b.b.d.b.b.b
1001f5ac:	62c262ca 629b62c7 630c62c9 62f162ee     .b.b.b.b.b.c.b.b
1001f5bc:	63026327 62ef6308 635062f5 634d633e     'c.c.c.b.bPc>cMc
1001f5cc:	634f641c 638e6396 63ab6380 63a36376     .dOc.c.c.c.cvc.c
1001f5dc:	6389638f 63b5639f 6369636b 63e963be     .c.c.c.ckcic.c.c
1001f5ec:	63c663c0 63c963e3 63f663d2 641663c4     .c.c.c.c.c.c.c.d
1001f5fc:	64066434 64266413 651d6436 64286417     4d.d.d&d6d.e.d(d
1001f60c:	6467640f 6476646f 652a644e 64936495     .dgdodvdNd*e.d.d
1001f61c:	64a964a5 64bc6488 64d264da 64c764c5     .d.d.d.d.d.d.d.d
1001f62c:	64d864bb 64f164c2 820964e7 64e164e0     .d.d.d.d.d...d.d
1001f63c:	64e362ac 652c64ef 64f464f6 64fa64f2     .b.d.d,e.d.d.d.d
1001f64c:	64fd6500 651c6518 65246505 652b6523     .e.d.e.e.e$e#e+e
1001f65c:	65356534 65366537 754b6538 65566548     4e5e7e6e8eKuHeVe
1001f66c:	654d6555 655e6558 6572655d 65826578     UeMeXe^e]erexe.e
1001f67c:	8b8a6583 659f659b 65b765ab 65c665c3     .e...e.e.e.e.e.e
1001f68c:	65c465c1 65d265cc 65d965db 65e165e0     .e.e.e.e.e.e.e.e
1001f69c:	677265f1 6603660a 677365fb 66366635     .erg.f.f.esg5f6f
1001f6ac:	661c6634 6644664f 66416649 665d665e     4f.fOfDfIfAf^f]f
1001f6bc:	66676664 665f6668 66706662 66886683     dfgfhf_fbfpf.f.f
1001f6cc:	6689668e 66986684 66c1669d 66c966b9     .f.f.f.f.f.f.f.f
1001f6dc:	66bc66be 66b866c4 66da66d6 663f66e0     .f.f.f.f.f.f.f?f
1001f6ec:	66e966e6 66f566f0 670f66f7 671e6716     .f.f.f.f.f.g.g.g
1001f6fc:	67276726 672e9738 6736673f 67386741     &g'g8..g?g6gAg8g
1001f70c:	67466737 6760675e 67636759 67896764     7gFg^g`gYgcgdg.g
1001f71c:	67a96770 676a677c 678b678c 67a167a6     pg.g|gjg.g.g.g.g
1001f72c:	67b76785 67b467ef 67b367ec 67b867e9     .g.g.g.g.g.g.g.g
1001f73c:	67de67e4 67e267dd 67b967ee 67c667ce     .g.g.g.g.g.g.g.g
1001f74c:	6a9c67e7 6846681e 68406829 6832684d     .g.j.hFh)h@hMh2h
1001f75c:	68b3684e 6859682b 68776863 689f687f     Nh.h+hYhchwh.h.h
1001f76c:	68ad688f 689d6894 6883689b 68b96aae     .h.h.h.h.h.h.j.h
1001f77c:	68b56874 68ba68a0 688d690f 6901687e     th.h.h.h.i.h~h.i
1001f78c:	690868ca 692268d8 68e16926 68cd690c     .h.i.h"i&i.h.i.h
1001f79c:	68e768d4 693668d5 69046912 68e368d7     .h.h.h6i.i.i.h.h
1001f7ac:	68f96925 68ef68e0 692a6928 6923691a     %i.h.h.h(i*i.i#i
1001f7bc:	68c66921 69776979 6978695c 6954696b     !i.hyiwi\ixikiTi
1001f7cc:	696e697e 69746939 6959693d 69616930     ~ini9iti=iYi0iai
1001f7dc:	695d695e 696a6981 69ae69b2 69bf69d0     ^i]i.iji.i.i.i.i
1001f7ec:	69d369c1 69ce69be 69ca5be8 69bb69dd     .i.i.i.i.[.i.i.i
1001f7fc:	69a769c3 69916a2e 699c69a0 69b46995     .i.i.j.i.i.i.i.i
1001f80c:	69e869de 6a1b6a02 6b0a69ff 69f269f9     .i.i.j.j.i.k.i.i
1001f81c:	6a0569e7 6a1e69b1 6a1469ed 6a0a69eb     .i.j.i.j.i.j.i.j
1001f82c:	6ac16a12 6a136a23 6a0c6a44 6a366a72     .j.j#j.jDj.jrj6j
1001f83c:	6a476a78 6a596a62 6a486a66 6a226a38     xjGjbjYjfjHj8j"j
1001f84c:	6a8d6a90 6a846aa0 6aa36aa2 86176a97     .j.j.j.j.j.j.j..
1001f85c:	6ac36abb 6ab86ac2 6aac6ab3 6ad16ade     .j.j.j.j.j.j.j.j
1001f86c:	6aaa6adf 6aea6ada 6b056afb 6afa8616     .j.j.j.j.j.k...j
1001f87c:	6b166b12 6b1f9b31 6b376b38 6b3976dc     .k.k1..k8k7k.v9k
1001f88c:	6b4798ee 6b496b43 6b596b50 6b5b6b54     ..GkCkIkPkYkTk[k
1001f89c:	6b616b5f 6b796b78 6b806b7f 6b836b84     _kakxkyk.k.k.k.k
1001f8ac:	6b986b8d 6b9e6b95 6baa6ba4 6baf6bab     .k.k.k.k.k.k.k.k
1001f8bc:	6bb16bb2 6bb76bb3 6bc66bbc 6bd36bcb     .k.k.k.k.k.k.k.k
1001f8cc:	6bec6bdf 6bf36beb 9ebe6bef 6c136c08     .k.k.k.k.k...l.l
1001f8dc:	6c1b6c14 6c236c24 6c556c5e 6c6a6c62     .l.l$l#l^lUlbljl
1001f8ec:	6c8d6c82 6c816c9a 6c7e6c9b 6c736c68     .l.l.l.l.l~lhlsl
1001f8fc:	6c906c92 6cf16cc4 6cbd6cd3 6cc56cd7     .l.l.l.l.l.l.l.l
1001f90c:	6cae6cdd 6cbe6cb1 6cdb6cba 6cd96cef     .l.l.l.l.l.l.l.l
1001f91c:	6d1f6cea 6d36884d 6d3d6d2b 6d196d38     .l.mM.6m+m=m8m.m
1001f92c:	6d336d35 6d0c6d12 6d936d63 6d5a6d64     5m3m.m.mcm.mdmZm
1001f93c:	6d596d79 6d956d8e 6d856fe4 6e156df9     ymYm.m.m.o.m.m.n
1001f94c:	6db56e0a 6de66dc7 6dc66db8 6dde6dec     .n.m.m.m.m.m.m.m
1001f95c:	6de86dcc 6dc56dd2 6dd96dfa 6dd56de4     .m.m.m.m.m.m.m.m
1001f96c:	6dee6dea 6e6e6e2d 6e196e2e 6e5f6e72     .m.m-nnn.n.nrn_n
1001f97c:	6e236e3e 6e2b6e6b 6e4d6e76 6e436e1f     >n#nkn+nvnMn.nCn
1001f98c:	6e4e6e3a 6eff6e24 6e386e1d 6eaa6e82     :nNn$n.n.n8n.n.n
1001f99c:	6ec96e98 6ed36eb7 6eaf6ebd 6eb26ec4     .n.n.n.n.n.n.n.n
1001f9ac:	6ed56ed4 6ea56e8f 6e9f6ec2 6f116f41     .n.n.n.n.n.nAo.o
1001f9bc:	6eec704c 6efe6ef8 6ef26f3f 6eef6f31     Lp.n.n.n?o.n1o.n
1001f9cc:	6ecc6f32 6f136f3e 6f866ef7 6f786f7a     2o.n>o.o.n.ozoxo
1001f9dc:	6f806f81 6f5b6f6f 6f6d6ff3 6f7c6f82     .o.ooo[o.omo.o|o
1001f9ec:	6f8e6f58 6fc26f91 6fb36f66 6fa16fa3     Xo.o.o.ofo.o.o.o
1001f9fc:	6fb96fa4 6faa6fc6 6fd56fdf 6fd46fec     .o.o.o.o.o.o.o.o
1001fa0c:	6ff16fd8 6fdb6fee 700b7009 70116ffa     .o.o.o.o.p.p.o.p
1001fa1c:	700f7001 701b6ffe 6f74701a 7018701d     .p.p.o.p.pto.p.p
1001fa2c:	7030701f 7032703e 70637051 70927099     .p0p>p2pQpcp.p.p
1001fa3c:	70f170af 70b870ac 70ae70b3 70cb70df     .p.p.p.p.p.p.p.p
1001fa4c:	70d970dd 70fd7109 7119711c 71557165     .p.p.q.p.q.qeqUq
1001fa5c:	71667188 714c7162 716c7156 71fb718f     .qfqbqLqVqlq.q.q
1001fa6c:	71957184 71ac71a8 71b971d7 71d271be     .q.q.q.q.q.q.q.q
1001fa7c:	71d471c9 71e071ce 71e771ec 71fc71f5     .q.q.q.q.q.q.q.q
1001fa8c:	71ff71f9 7210720d 7228721b 722c722d     .q.q.r.r.r(r-r,r
1001fa9c:	72327230 723c723b 7240723f 724b7246     0r2r;r<r?r@rFrKr
1001faac:	72747258 7282727e 72877281 72967292     Xrtr~r.r.r.r.r.r
1001fabc:	72a772a2 72b272b9 72c672c3 72ce72c4     .r.r.r.r.r.r.r.r
1001facc:	72e272d2 72e172e0 72f772f9 7317500f     .r.r.r.r.r.r.P.s
1001fadc:	731c730a 731d7316 732f7334 73257329     .s.s.s.s4s/s)s%s
1001faec:	734e733e 9ed8734f 736a7357 73707368     >sNsOs..Wsjshsps
1001fafc:	73757378 737a737b 73b373c8 73bb73ce     xsus{szs.s.s.s.s
1001fb0c:	73e573c0 73de73ee 740574a2 7425746f     .s.s.s.s.t.tot%t
1001fb1c:	743273f8 7455743a 745f743f 74417459     .s2t:tUt?t_tYtAt
1001fb2c:	7469745c 74637470 7476746a 748b747e     \titptctjtvt~t.t
1001fb3c:	74a7749e 74cf74ca 73f174d4 74e374e0     .t.t.t.t.t.s.t.t
1001fb4c:	74e974e7 74f274ee 74f174f0 74f774f8     .t.t.t.t.t.t.t.t
1001fb5c:	75037504 750c7505 750d750e 75137515     .u.u.u.u.u.u.u.u
1001fb6c:	7526751e 753c752c 754d7544 7549754a     .u&u,u<uDuMuJuIu
1001fb7c:	7546755b 7569755a 75677564 756d756b     [uFuZuiudugukumu
1001fb8c:	75767578 75877586 758a7574 75827589     xuvu.u.utu.u.u.u
1001fb9c:	759a7594 75a5759d 75c275a3 75c375b3     .u.u.u.u.u.u.u.u
1001fbac:	75bd75b5 75bc75b8 75cd75b1 75d275ca     .u.u.u.u.u.u.u.u
1001fbbc:	75e375d9 75fe75de 75fc75ff 75f07601     .u.u.u.u.u.u.v.u
1001fbcc:	75f275fa 760b75f3 7609760d 7627761f     .u.u.u.v.v.v.v'v
1001fbdc:	76217620 76247622 76307634 7647763b      v!v"v$v4v0v;vGv
1001fbec:	76467648 7658765c 76627661 76697668     HvFv\vXvavbvhviv
1001fbfc:	7667766a 7670766c 76767672 767c7678     jvgvlvpvrvvvxv|v
1001fc0c:	76837680 768b7688 7696768e 76997693     .v.v.v.v.v.v.v.v
1001fc1c:	76b0769a 76b876b4 76ba76b9 76cd76c2     .v.v.v.v.v.v.v.v
1001fc2c:	76d276d6 76e176de 76e776e5 862f76ea     .v.v.v.v.v.v.v/.
1001fc3c:	770876fb 77047707 77247729 7725771e     .v.w.w.w)w$w.w%w
1001fc4c:	771b7726 77387737 775a7747 776b7768     &w.w7w8wGwZwhwkw
1001fc5c:	7765775b 777e777f 778e7779 7791778b     [wew.w~wyw.w.w.w
1001fc6c:	779e77a0 77b677b0 77bf77b9 77bd77bc     .w.w.w.w.w.w.w.w
1001fc7c:	77c777bb 77d777cd 77dc77da 77ee77e3     .w.w.w.w.w.w.w.w
1001fc8c:	780c77fc 79267812 792a7820 788e7845     .w.x.x&y x*yEx.x
1001fc9c:	78867874 789a787c 78a3788c 78aa78b5     tx.x|x.x.x.x.x.x
1001fcac:	78d178af 78cb78c6 78be78d4 78c578bc     .x.x.x.x.x.x.x.x
1001fcbc:	78ec78ca 78da78e7 78f478fd 79127907     .x.x.x.x.x.x.y.y
1001fccc:	79197911 792b792c 79607940 795f7957     .y.y,y+y@y`yWy_y
1001fcdc:	7955795a 797a7953 798a797f 79a7799d     ZyUySyzy.y.y.y.y
1001fcec:	79aa9f4b 79b379ae 79ba79b9 79d579c9     K..y.y.y.y.y.y.y
1001fcfc:	79ec79e7 79e379e1 7a0d7a08 7a197a18     .y.y.y.y.z.z.z.z
1001fd0c:	7a1f7a20 7a317980 7a3e7a3b 7a437a37      z.z.y1z;z>z7zCz
1001fd1c:	7a497a57 7a627a61 9f9d7a69 7a797a70     WzIzazbziz..pzyz
1001fd2c:	7a887a7d 7a957a97 7a967a98 7ac87aa9     }z.z.z.z.z.z.z.z
1001fd3c:	7ab67ab0 7ac47ac5 90837abf 7aca7ac7     .z.z.z.z.z...z.z
1001fd4c:	7acf7acd 7ad37ad5 7ada7ad9 7ae17add     .z.z.z.z.z.z.z.z
1001fd5c:	7ae67ae2 7af07aed 7b0f7b02 7b067b0a     .z.z.z.z.{.{.{.{
1001fd6c:	7b187b33 7b1e7b19 7b287b35 7b507b36     3{.{.{.{5{({6{P{
1001fd7c:	7b047b7a 7b0b7b4d 7b457b4c 7b657b75     z{.{M{.{L{E{u{e{
1001fd8c:	7b677b74 7b717b70 7b6e7b6c 7b987b9d     t{g{p{q{l{n{.{.{
1001fd9c:	7b8d7b9f 7b9a7b9c 7b927b8b 7b5d7b8f     .{.{.{.{.{.{.{]{
1001fdac:	7bcb7b99 7bcc7bc1 7bb47bcf 7bdd7bc6     .{.{.{.{.{.{.{.{
1001fdbc:	7c117be9 7be67c14 7c607be5 7c077c00     .{.|.|.{.{`|.|.|
1001fdcc:	7bf37c13 7c177bf7 7bf67c0d 7c277c23     .|.{.{.|.|.{#|'|
1001fddc:	7c1f7c2a 7c2b7c37 7c4c7c3d 7c547c43     *|.|7|+|=|L|C|T|
1001fdec:	7c407c4f 7c587c50 7c647c5f 7c657c56     O|@|P|X|_|d|V|e|
1001fdfc:	7c757c6c 7c907c83 7cad7ca4 7cab7ca2     l|u|.|.|.|.|.|.|
1001fe0c:	7ca87ca1 7cb27cb3 7cae7cb1 7cbd7cb9     .|.|.|.|.|.|.|.|
1001fe1c:	7cc57cc0 7cd87cc2 7cdc7cd2 9b3b7ce2     .|.|.|.|.|.|.|;.
1001fe2c:	7cf27cef 7cf67cf4 7d067cfa 7d1c7d02     .|.|.|.|.|.}.}.}
1001fe3c:	7d0a7d15 7d4b7d45 7d327d2e 7d357d3f     .}.}E}K}.}2}?}5}
1001fe4c:	7d737d46 7d4e7d56 7d687d72 7d4f7d6e     F}s}V}N}r}h}n}O}
1001fe5c:	7d937d63 7d5b7d89 7d7d7d8f 7dba7d9b     c}.}.}[}.}}}.}.}
1001fe6c:	7da37dae 7dc77db5 7dab7dbd 7da27e3d     .}.}.}.}.}.}=~.}
1001fe7c:	7ddc7daf 7d9f7db8 7dd87db0 7de47ddd     .}.}.}.}.}.}.}.}
1001fe8c:	7dfb7dde 7de17df2 7e0a7e05 7e217e23     .}.}.}.}.~.~#~!~
1001fe9c:	7e317e12 7e097e1f 7e227e0b 7e667e46     .~1~.~.~.~"~F~f~
1001feac:	7e357e3b 7e437e39 7e327e37 7e677e3a     ;~5~9~C~7~2~:~g~
1001febc:	7e567e5d 7e597e5e 7e797e5a 7e697e6a     ]~V~^~Y~Z~y~j~i~
1001fecc:	7e7b7e7c 7dd57e83 8fae7e7d 7e887e7f     |~{~.~.}}~...~.~
1001fedc:	7e8c7e89 7e907e92 7e947e93 7e8e7e96     .~.~.~.~.~.~.~.~
1001feec:	7e9c7e9b 7f3a7f38 7f4c7f45 7f4e7f4d     .~.~8.:.E.L.M.N.
1001fefc:	7f517f50 7f547f55 7f5f7f58 7f687f60     P.Q.U.T.X._.`.h.
1001ff0c:	7f677f69 7f827f78 7f837f86 7f877f88     i.g.x...........
1001ff1c:	7f947f8c 7f9d7f9e 7fa37f9a 7fb27faf     ................
1001ff2c:	7fae7fb9 7fb87fb6 7fc58b71 7fca7fc6     ........q.......
1001ff3c:	7fd47fd5 7fe67fe1 7ff37fe9 98dc7ff9     ................
1001ff4c:	80048006 8012800b 80198018 8021801c     ..............!.
1001ff5c:	803f8028 804a803b 80528046 805a8058     (.?.;.J.F.R.X.Z.
1001ff6c:	8062805f 80738068 80708072 80798076     _.b.h.s.r.p.v.y.
1001ff7c:	807f807d 80868084 809b8085 809a8093     }...............
1001ff8c:	519080ad 80db80ac 80d980e5 80c480dd     ...Q............
1001ff9c:	80d680da 80ef8109 811b80f1 81238129     ............).#.
1001ffac:	814b812f 8146968b 8153813e 80fc8151     /.K...F.>.S.Q...
1001ffbc:	816e8171 81668165 81838174 818a8188     q.n.e.f.t.......
1001ffcc:	81828180 819581a0 81a381a4 8193815f     ............_...
1001ffdc:	81b081a9 81be81b5 81bd81b8 81c281c0     ................
1001ffec:	81c981ba 81d181cd 81d881d9 81da81c8     ................
1001fffc:	81e081df 81fa81e7 81fe81fb 82028201     ................
1002000c:	82078205 820d820a 82168210 822b8229     ............).+.
1002001c:	82338238 82598240 825d8258 825f825a     8.3.@.Y.X.].Z._.
1002002c:	82628264 826a8268 822e826b 82778271     d.b.h.j.k...q.w.
1002003c:	827e8278 8292828d 829f82ab 82ac82bb     x.~.............
1002004c:	82e382e1 82d282df 82f382f4 839382fa     ................
1002005c:	82fb8303 82de82f9 82dc8306 82d98309     ................
1002006c:	83348335 83328316 83408331 83508339     5.4...2.1.@.9.P.
1002007c:	832f8345 8317832b 83858318 83aa839a     E./.+...........
1002008c:	83a2839f 83238396 8387838e 837c838a     ......#.......|.
1002009c:	837383b5 83a08375 83a88389 841383f4     ..s.u...........
100200ac:	83ce83eb 840383fd 840b83d8 83f783c1     ................
100200bc:	83e08407 840d83f2 84208422 843883bd     ........". ...8.
100200cc:	83fb8506 842a846d 855a843c 84778484     ....m.*.<.Z...w.
100200dc:	84ad846b 8482846e 84468469 846f842c     k...n...i.F.,.o.
100200ec:	84358479 846284ca 84bf84b9 84d9849f     y.5...b.........
100200fc:	84bb84cd 84d084da 84c684c1 84a184d6     ................
1002010c:	84ff8521 851784f4 852c8518 8515851f     !.........,.....
1002011c:	84fc8514 85638540 85488558 86028541     ....@.c.X.H.A...
1002012c:	8555854b 85a48580 85918588 85a8858a     K.U.............
1002013c:	8594856d 85ea859b 859c8587 857e8577     m...........w.~.
1002014c:	85c98590 85cf85ba 85d085b9 85dd85d5     ................
1002015c:	85dc85e5 860a85f9 860b8613 85fa85fe     ................
1002016c:	86228606 8630861a 864d863f 86544e55     .."...0.?.M.UNT.
1002017c:	8667865f 86938671 86a986a3 868b86aa     _.g.q...........
1002018c:	86b6868c 86c486af 86b086c6 882386c9     ..............#.
1002019c:	86d486ab 86e986de 86df86ec 86ef86db     ................
100201ac:	87068712 87008708 86fb8703 87098711     ................
100201bc:	86f9870d 8734870a 8737873f 8725873b     ......4.?.7.;.%.
100201cc:	871a8729 875f8760 874c8778 8774874e     )...`._.x.L.N.t.
100201dc:	87688757 8759876e 87638753 8805876a     W.h.n.Y.S.c.j...
100201ec:	879f87a2 87af8782 87bd87cb 87d087c0     ................
100201fc:	87ab96d6 87b387c4 87c687c7 87ef87bb     ................
1002020c:	87e087f2 880d880f 87f687fe 880e87f7     ................
1002021c:	881187d2 88158816 88218822 88368831     ........".!.1.6.
1002022c:	88278839 8844883b 88528842 885e8859     9.'.;.D.B.R.Y.^.
1002023c:	886b8862 887e8881 8875889e 88b5887d     b.k...~...u.}...
1002024c:	88828872 88928897 889988ae 888d88a2     r...............
1002025c:	88b088a4 88b188bf 88c488c3 88d888d4     ................
1002026c:	88dd88d9 890288f9 88f488fc 88f288e8     ................
1002027c:	890c8904 8913890a 891e8943 892a8925     ........C...%.*.
1002028c:	8941892b 893b8944 89388936 891d894c     +.A.D.;.6.8.L...
1002029c:	895e8960 89648966 896a896d 8974896f     `.^.f.d.m.j.o.t.
100202ac:	897e8977 89888983 8993898a 89a18998     w.~.............
100202bc:	89a689a9 89af89ac 89ba89b2 89bf89bd     ................
100202cc:	89da89c0 89dd89dc 89f489e7 8a0389f8     ................
100202dc:	8a108a16 8a1b8a0c 8a258a1d 8a418a36     ..........%.6.A.
100202ec:	8a528a5b 8a488a46 8a6d8a7c 8a628a6c     [.R.F.H.|.m.l.b.
100202fc:	8a828a85 8aa88a84 8a918aa1 8aa68aa5     ................
1002030c:	8aa38a9a 8acd8ac4 8ada8ac2 8af38aeb     ................
1002031c:	8ae48ae7 8b148af1 8ae28ae0 8ade8af7     ................
1002032c:	8b0c8adb 8b1a8b07 8b168ae1 8b178b10     ................
1002033c:	8b338b20 8b2697ab 8b3e8b2b 8b418b28      .3...&.+.>.(.A.
1002034c:	8b4f8b4c 8b498b4e 8b5b8b56 8b6b8b5a     L.O.N.I.V.[.Z.k.
1002035c:	8b6c8b5f 8b748b6f 8b808b7d 8b8e8b8c     _.l.o.t.}.......
1002036c:	8b938b92 8b998b96 8c3a8b9a 8c3f8c41     ..........:.A.?.
1002037c:	8c4c8c48 8c508c4e 8c628c55 8c788c6c     H.L.N.P.U.b.l.x.
1002038c:	8c828c7a 8c858c89 8c8d8c8a 8c948c8e     z...............
1002039c:	8c988c7c 8cad621d 8cbd8caa 8cb38cb2     |....b..........
100203ac:	8cb68cae 8cc18cc8 8ce38ce4 8cfd8cda     ................
100203bc:	8cfb8cfa 8d058d04 8d078d0a 8d0d8d0f     ................
100203cc:	9f4e8d10 8ccd8d13 8d168d14 8d6d8d67     ..N.........g.m.
100203dc:	8d738d71 8d998d81 8dbe8dc2 8dcf8dba     q.s.............
100203ec:	8dd68dda 8ddb8dcc 8dea8dcb 8ddf8deb     ................
100203fc:	8dfc8de3 8e098e08 8e1d8dff 8e108e1e     ................
1002040c:	8e428e1f 8e308e35 8e4a8e34 8e498e47     ..B.5.0.4.J.G.I.
1002041c:	8e508e4c 8e598e48 8e608e64 8e638e2a     L.P.H.Y.d.`.*.c.
1002042c:	8e768e55 8e7c8e72 8e878e81 8e848e85     U.v.r.|.........
1002043c:	8e8a8e8b 8e918e93 8e998e94 8ea18eaa     ................
1002044c:	8eb08eac 8eb18ec6 8ec58ebe 8ecb8ec8     ................
1002045c:	8ee38edb 8efb8efc 8efe8eeb 8f058f0a     ................
1002046c:	8f128f15 8f138f19 8f1f8f1c 8f0c8f1b     ................
1002047c:	8f338f26 8f398f3b 8f428f45 8f4c8f3e     &.3.;.9.E.B.>.L.
1002048c:	8f468f49 8f578f4e 8f628f5c 8f648f63     I.F.N.W.\.b.c.d.
1002049c:	8f9f8f9c 8fad8fa3 8fb78faf 8fe58fda     ................
100204ac:	8fea8fe2 90878fef 90058ff4 8ffa8ff9     ................
100204bc:	90159011 900d9021 9016901e 9027900b     ....!.........'.
100204cc:	90359036 8ff89039 9050904f 90529051     6.5.9...O.P.Q.R.
100204dc:	9049900e 9056903e 905e9058 906f9068     ..I.>.V.X.^.h.o.
100204ec:	96a89076 90829072 9081907d 908a9080     v...r...}.......
100204fc:	908f9089 90af90a8 90b590b1 90e490e2     ................
1002050c:	90db6248 91129102 91329119 914a9130     Hb........2.0.J.
1002051c:	91589156 91659163 91739169 918b9172     V.X.c.e.i.s.r...
1002052c:	91829189 91ab91a2 91aa91af 91b491b5     ................
1002053c:	91c091ba 91c991c1 91d091cb 91df91d6     ................
1002054c:	91db91e1 91f591fc 921e91f6 921491ff     ................
1002055c:	9215922c 925e9211 92459257 92649249     ,.....^.W.E.I.d.
1002056c:	92959248 924b923f 929c9250 92939296     H...?.K.P.......
1002057c:	925a929b 92b992cf 92e992b7 92fa930f     ..Z.............
1002058c:	932e9344 93229319 9323931a 9335933a     D....."...#.:.5.
1002059c:	935c933b 937c9360 9356936e 93ac93b0     ;.\.`.|.n.V.....
100205ac:	939493ad 93d693b9 93e893d7 93d893e5     ................
100205bc:	93dd93c3 93c893d0 941a93e4 94139414     ................
100205cc:	94079403 94369410 9435942b 943a9421     ......6.+.5.!.:.
100205dc:	94529441 945b9444 94629460 946a945e     A.R.D.[.`.b.^.j.
100205ec:	94709229 94779475 945a947d 947e947c     ).p.u.w.}.Z.|.~.
100205fc:	947f9481 95879582 9594958a 95989596     ................
1002060c:	95a09599 95a795a8 95bc95ad 95b995bb     ................
1002061c:	95ca95be 95c36ff6 95cc95cd 95d495d5     .....o..........
1002062c:	95dc95d6 95e595e1 962195e2 962e9628     ..........!.(...
1002063c:	9642962f 964f964c 9677964b 965e965c     /.B.L.O.K.w.\.^.
1002064c:	965f965d 96729666 968d966c 96959698     ]._.f.r.l.......
1002065c:	96aa9697 96b196a7 96b096b2 96b696b4     ................
1002066c:	96b996b8 96cb96ce 96cd96c9 96dc894d     ............M...
1002067c:	96d5970d 970496f9 97089706 970e9713     ................
1002068c:	970f9711 97199716 972a9724 97399730     ........$.*.0.9.
1002069c:	973e973d 97469744 97429748 975c9749     =.>.D.F.H.B.I.\.
100206ac:	97649760 97689766 976b52d2 97799771     `.d.f.h..Rk.q.y.
100206bc:	977c9785 977a9781 978b9786 9790978f     ..|...z.........
100206cc:	97a8979c 97a397a6 97b497b3 97c697c3     ................
100206dc:	97cb97c8 97ed97dc 97f29f4f 97f67adf     ........O....z..
100206ec:	980f97f5 9838980c 98219824 983d9837     ......8.$.!.7.=.
100206fc:	984f9846 986b984b 9870986f 98749871     F.O.K.k.o.p.q.t.
1002070c:	98aa9873 98b198af 98c498b6 98c698c3     s...............
1002071c:	98eb98e9 99099903 99149912 99219918     ..............!.
1002072c:	991e991d 99209924 992e992c 993e993d     ....$. .,...=.>.
1002073c:	99499942 99509945 9951994b 994c9952     B.I.E.P.K.Q.R.L.
1002074c:	99979955 99a59998 99ae99ad 99df99bc     U...............
1002075c:	99dd99db 99d199d8 99ee99ed 99f299f1     ................
1002076c:	99f899fb 9a0f9a01 99e29a05 9a2b9a19     ..............+.
1002077c:	9a459a37 9a409a42 9a3e9a43 9a4d9a55     7.E.B.@.C.>.U.M.
1002078c:	9a579a5b 9a629a5f 9a649a65 9a6b9a69     [.W._.b.e.d.i.k.
1002079c:	9aad9a6a 9abc9ab0 9acf9ac0 9ad39ad1     j...............
100207ac:	9ade9ad4 9ae29adf 9ae69ae3 9aeb9aef     ................
100207bc:	9af49aee 9af79af1 9b069afb 9b1a9b18     ................
100207cc:	9b229b1f 9b259b23 9b289b27 9b2a9b29     ..".#.%.'.(.).*.
100207dc:	9b2f9b2e 9b449b32 9b4f9b43 9b4e9b4d     ../.2.D.C.O.M.N.
100207ec:	9b589b51 9b939b74 9b919b83 9b979b96     Q.X.t...........
100207fc:	9ba09b9f 9bb49ba8 9bca9bc0 9bc69bb9     ................
1002080c:	9bd19bcf 9be39bd2 9be49be2 9be19bd4     ................
1002081c:	9bf29c3a 9bf09bf1 9c149c15 9c139c09     :...............
1002082c:	9c069c0c 9c129c08 9c049c0a 9c1b9c2e     ................
1002083c:	9c249c25 9c309c21 9c329c47 9c3e9c46     %.$.!.0.G.2.F.>.
1002084c:	9c609c5a 9c769c67 9ce79c78 9cf09cec     Z.`.g.v.x.......
1002085c:	9d089d09 9d039ceb 9d2a9d06 9daf9d26     ..........*.&...
1002086c:	9d1f9d23 9d159d44 9d419d12 9d3e9d3f     #...D.....A.?.>.
1002087c:	9d489d46 9d5e9d5d 9d519d64 9d599d50     F.H.].^.d.Q.P.Y.
1002088c:	9d899d72 9dab9d87 9d7a9d6f 9da49d9a     r.......o.z.....
1002089c:	9db29da9 9dc19dc4 9db89dbb 9dc69dba     ................
100208ac:	9dc29dcf 9dd39dd9 9de69df8 9def9ded     ................
100208bc:	9e1a9dfd 9e1e9e1b 9e799e75 9e819e7d     ........u.y.}...
100208cc:	9e8b9e88 9e929e8c 9e919e95 9ea59e9d     ................
100208dc:	9eb89ea9 9ead9eaa 9ecc9761 9ecf9ece     ........a.......
100208ec:	9ed49ed0 9ede9edc 9ee09edd 9ee89ee5     ................
100208fc:	9ef49eef 9ef79ef6 9efb9ef9 9efd9efc     ................
1002090c:	9f089f07 9f1576b7 9f2c9f21 9f4a9f3e     .....v..!.,.>.J.
1002091c:	9f549f52 9f5f9f63 9f619f60 9f679f66     R.T.c._.`.a.f.g.
1002092c:	9f6a9f6c 9f729f77 9f959f76 9fa09f9c     l.j.w.r.v.......
1002093c:	69c7582f 74649059 719951dc              /X.iY.dt.Q.q

10020948 <b02cf>:
10020948:	55164e9c 963f5a03 611b54c0 59f66328     .N.U.Z?..T.a(c.Y
10020958:	84759022 7a50831c 63e160aa 65ed6e25     ".u...Pz.`.c%n.e
10020968:	82a68466 68939bf5 65a15727 5b9b6271     f......h'W.eqb.[
10020978:	867b59d0 7d6298f4 9b8e7dbe 7c9f6216     .Y{...b}.}...b.|
10020988:	5b8988b7 63095eb5 68486697 978d95c7     ...[.^.c.fHh....
10020998:	4ee5674f 4f4d4f0a 50494f9d 593756f2     Og.N.OMO.OIP.V7Y
100209a8:	5a0159d4 60df5c09 6170610f 69056613     .Y.Z.\.`.apa.f.i
100209b8:	754f70ba 79fb7570 7def7dad 840e80c3     .pOupu.y.}.}....
100209c8:	8b028863 907a9055 4e95533b 57df4ea5     c...U.z.;S.N.N.W
100209d8:	90c180b2 4e0078ef 6ea258f1 7a329038     .....x.N.X.n8.2z
100209e8:	828b8328 51419c2f 54bd5370 56e054e1     (.../.AQpS.T.T.V
100209f8:	5f1559fb 6deb98f2 852d80e4 96709662     .Y._...m..-.b.p.
10020a08:	97fb96a0 53f3540b 70cf5b87 8fc27fbd     .....T.S.[.p....
10020a18:	536f96e8 7aba9d5c 78934e11 6e2681fc     ..oS\..z.N.x..&n
10020a28:	55045618 851a6b1d 59e59c3b 6d6653a9     .V.U.k..;..Y.Sfm
10020a38:	958f74dc 4e915642 96f2904b 990c834f     .t..BV.NK...O...
10020a48:	55b653e1 5f715b30 66f36620 6c386804     .S.U0[q_ f.f.h8l
10020a58:	6d296cf3 76c8745b 98347a4e 885b82f1     .l)m[t.vNz4...[.
10020a68:	92ed8a60 75ab6db2 99c576ca 8b0160a6     `....m.u.v...`..
10020a78:	95b28d8a 53ad698e 57125186 59445830     .....i.S.Q.W0XDY
10020a88:	5ef65bb4 63a96028 6cbf63f4 708e6f14     .[.^(`.c.c.l.o.p
10020a98:	71597114 733f71d5 82767e01 859782d1     .qYq.q?s.~v.....
10020aa8:	925b9060 58699d1b 6c5a65bc 51f97525     `.[...iX.eZl%u.Q
10020ab8:	5965592e 5fdc5f80 65fa62bc 6b276a2a     .YeY._._.b.e*j'k
10020ac8:	738b6bb4 89567fc1 9d0e9d2c 5ca19ec4     .k.s..V.,......\
10020ad8:	837b6c96 5c4b5104 81c661b6 72616876     .l{..QK\.a..vhar
10020ae8:	4ffa4e59 60695378 7a4f6e29 4e0b97f3     YN.OxSi`)nOz...N
10020af8:	4eee5316 4f3d4f55 4f734fa1 53ef52a0     .S.NUO=O.OsO.R.S
10020b08:	590f5609 5bb65ac1 79d15be1 679c6687     .V.Y.Z.[.[.y.f.g
10020b18:	6b4c67b6 706b6cb3 798d73c2 7a3c79be     .gLk.lkp.s.y.y<z
10020b28:	82b17b87 830482db 83ef8377 876683d3     .{......w.....f.
10020b38:	56298ab2 8fe68ca8 971e904e 4fc4868a     ..)V....N......O
10020b48:	62115ce8 753b7259 82bd81e5 8cc086fe     .\.bYr;u........
10020b58:	991396c5 4ecb99d5 89e34f1a 584a56de     .......N.O...VJX
10020b68:	5efb58ca 602a5feb 60626094 621261d0     .X.^._*`.`b`.a.b
10020b78:	653962d0 66669b41 6d7768b0 754c7070     .b9eA.ff.hwmppLu
10020b88:	7d757686 87f982a5 968e958b 51f18c9d     .vu}...........Q
10020b98:	591652be 5bb354b3 61685d16 6daf6982     .R.Y.T.[.]ha.i.m
10020ba8:	84cb788d 8a728857 9ab893a7 99a86d6c     .x..W.r.....lm..
10020bb8:	57a386d9 86ce67ff 5283920e 54045687     ...W.g.....R.V.T
10020bc8:	62e15ed3 683c64b9 6bbb6838 78ba7372     .^.b.d<h8h.krs.x
10020bd8:	899a7a6b 8d6b89d2 90ed8f03 969495a3     kz....k.........
10020be8:	5b669769 697d5cb3 984e984d 7b20639b     i.f[.\}iM.N..c {
10020bf8:	6a7f6a2b 9c0d68b6 52726f5f 6070559d     +j.j.h.._orR.Up`
10020c08:	6d3b62ec 6ed16e07 8910845b 4e148f44     .b;m.n.n[...D..N
10020c18:	53f69c39 6a3a691b 682a9784 7ac3515c     9..S.i:j..*h\Q.z
10020c28:	91dc84b2 565b938c 68229d28 84318305     ......[V(."h..1.
10020c38:	52087ca5 74e682c5 4f834e7e 5bd251a0     .|.R...t~N.O.Q.[
10020c48:	52d8520a 5dfb52e7 582a559a 5b8c59e6     .R.R.R.].U*X.Y.[
10020c58:	5bdb5b98 5e795e72 611f60a3 61be6163     .[.[r^y^.`.aca.a
10020c68:	656263db 685367d1 6b3e68fa 6c576b53     .cbe.gSh.h>kSkWl
10020c78:	6f976f22 74b06f45 76e37518 7aff770b     "o.oEo.t.u.v.w.z
10020c88:	7c217ba1 7f367de9 809d7ff0 839e8266     .{!|.}6.....f...
10020c98:	8acc89b3 90848cab 95939451 95a29591     ........Q.......
10020ca8:	97d39665 82189928 542b4e38 5dcc5cb8     e...(...8N+T.\.]
10020cb8:	764c73a9 5ca9773c 8d0b7feb 981196c1     .sLv<w.\........
10020cc8:	98589854 4f0e4f01 559c5371 57fa5668     T.X..O.OqS.UhV.W
10020cd8:	5b095947 5c905bc4 5e7e5e0c 63ee5fcc     GY.[.[.\.^~^._.c
10020ce8:	65d7673a 671f65e2 68c468cb 5e306a5f     :g.e.e.g.h.h_j0^
10020cf8:	6c176bc5 757f6c7d 5b637948 7d007a00     .k.l}l.uHyc[.z.}
10020d08:	898f5fbd 8cb48a18 8ecc8d77 98e28f1d     ._......w.......
10020d18:	9b3c9a0e 507d4e80 59935100 622f5b9c     ..<..N}P.Q.Y.[/b
10020d28:	64ec6280 72a06b3a 79477591 87fb7fa9     .b.d:k.r.uGy....
10020d38:	8b708abc 83ca63ac 540997a0 55ab5403     ..p..c.....T.T.U
10020d48:	6a586854 78278a70 9ecd6775 5ba25374     ThXjp.'xug..tS.[
10020d58:	8650811a 4e189006 4ec74e45 53ca4f11     ..P....NEN.N.O.S
10020d68:	5bae5438 60255f13 673d6551 6c726c42     8T.[._%`Qe=gBlrl
10020d78:	70786ce3 7a767403 7b087aae 7cfe7d1a     .lxp.tvz.z.{.}.|
10020d88:	65e77d66 53bb725b 5de85c45 62e062d2     f}.e[r.SE\.].b.b
10020d98:	6e206319 8a31865a 92f88ddd 79a66f01     .c nZ.1......o.y
10020da8:	4ea89b5a 4eac4eab 4fa04f9b 514750d1     Z..N.N.N.O.O.PGQ
10020db8:	51717af6 535451f6 537f5321 55ac53eb     .zqQ.QTS!S.S.S.U
10020dc8:	5ce15883 5f4a5f37 6050602f 631f606d     .X.\7_J_/`P`m`.c
10020dd8:	6a4b6559 72c26cc1 77ef72ed 810580f8     YeKj.l.r.r.w....
10020de8:	854e8208 93e190f7 995797ff 4ef09a5a     ..N.......W.Z..N
10020df8:	5c2d51dd 696d6681 66f25c40 73896975     .Q-\.fmi@\.fui.s
10020e08:	7c816850 52e450c5 5dfe5747 65a49326     Ph.|.P.RGW.]&..e
10020e18:	6b3d6b23 79817434 7b4b79bd 82b97dca     #k=k4t.y.yK{.}..
10020e28:	887f83cc 8b39895f 91d18fd1 9280541f     ...._.9......T..
10020e38:	50364e5d 533a53e5 739672d7 82e677e9     ]N6P.S:S.r.s.w..
10020e48:	99c68eaf 99d299c8 611a5177 55b0865e     ........wQ.a^..U
10020e58:	50767a7a 90475bd3 4e329685 91e76adb     zzvP.[G...2N.j..
10020e68:	5c485c51 7a9f6398 97746c93 7aaa8f61     Q\H\.c.z.lt.a..z
10020e78:	9688718a 68177c82 68517e70 52f2936c     .q...|.hp~Qhl..R
10020e88:	85ab541b 7fa48a13 90e18ecd 88885366     .T..........fS..
10020e98:	4fc27941 521150be 55535144 73ea572d     Ay.O.P.RDQSU-W.s
10020ea8:	5951578b 5f845f62 61766075 61a96167     .WQYb_._u`vaga.a
10020eb8:	643a63b2 666f656c 6e136842 7a3d7566     .c:dleofBh.nfu=z
10020ec8:	7d4c7cfb 7e4b7d99 830e7f6b 86cd834a     .|L}.}K~k...J...
10020ed8:	8a638a08 8efd8b66 9d8f981a 8fce82b8     ..c.f...........
10020ee8:	52879be8 6483621f 96996fc0 50916841     ...R.b.d.o..Ah.P
10020ef8:	6c7a6b20 7a746f54 88407d50 67088a23      kzlTotzP}@.#..g
10020f08:	50394ef6 50655026 5238517c 55a75263     .N9P&PeP|Q8RcR.U
10020f18:	5805570f 5efa5acc 61f861b2 637262f3     .W.X.Z.^.a.a.brc
10020f28:	6a29691c 72ac727d 7814732e 7d79786f     .i)j}r.r.s.xoxy}
10020f38:	80a9770c 8b19898b 8ed28ce2 93759063     .w..........c.u.
10020f48:	9855967a 9e789a13 539f5143 5e7b53b3     z.U...x.CQ.S.S{^
10020f58:	6e1b5f26 73846e90 7d4373fe 8a008237     &_.n.n.s.sC}7...
10020f68:	96508afa 500b4e4e 547c53e4 59d156fa     ..P.NN.P.S|T.V.Y
10020f78:	5df15b64 5f275eab 65456238 6e5667af     d[.].^'_8bEe.gVn
10020f88:	7cca72d0 80a188b4 83f080e1 8a87864e     .r.|........N...
10020f98:	92378de8 986796c7 4e949f13 4f0d4e92     ..7...g....N.N.O
10020fa8:	54495348 5a2f543e 5fa15f8c 68a7609f     HSIT>T/Z._._.`.h
10020fb8:	745a6a8e 8a9e7881 8b778aa4 4e5e9190     .jZt.x....w...^N
10020fc8:	4ea49bc9 4faf4f7c 50165019 516c5149     ...N|O.O.P.PIQlQ
10020fd8:	52b9529f 539a52fe 541153e3 5589540e     .R.R.R.S.S.T.T.U
10020fe8:	57a25751 5b54597d 5b8f5b5d 5de75de5     QW.W}YT[][.[.].]
10020ff8:	5e785df7 5e9a5e83 5f185eb7 614c6052     .]x^.^.^.^._R`La
10021008:	62d86297 653b63a7 66436602 676d66f4     .b.b.c;e.fCf.fmg
10021018:	68976821 6c5f69cb 6d696d2a 6e9d6e2f     !h.h.i_l*mim/n.n
10021028:	76877532 7a3f786c 7d057ce0 7d5e7d18     2u.vlx?z.|.}.}^}
10021038:	80157db1 80af8003 815480b1 822a818f     .}........T...*.
10021048:	884c8352 8b1b8861 8cfc8ca2 917590ca     R.L.a.........u.
10021058:	783f9271 95a492fc 9805964d 9ad89999     q.?x....M.......
10021068:	525b9d3b 53f752ab 58d55408 6fe062f7     ;.[R.R.S.T.X.b.o
10021078:	8f5f8c6a 514b9eb9 544a523b 7a4056fd     j._...KQ;RJT.V@z
10021088:	9d609177 73449ed2 81706f09 5ffd7511     w.`...Ds.op..u._
10021098:	9aa860da 8fbc72db 98036b64 56f04eca     .`...r..dk...N.V
100210a8:	58be5764 60685a5a 660f61c7 68396606     dW.XZZh`.a.f.f9h
100210b8:	6df768b1 7d3a75d5 9b42826e 4f504e9b     .h.m.u:}n.B..NPO
100210c8:	550653c9 5de65d6f 67fb5dee 74736c99     .S.Uo].].].g.lst
100210d8:	8a507802 88df9396 5ea75750 50b5632b     .xP.....PW.^+c.P
100210e8:	518d50ac 54c96700 59bb585e 5f695bb0     .P.Q.g.T^X.Y.[i_
100210f8:	63a1624d 6b73683d 707d6e08 728091c7     Mb.c=hsk.n}p...r
10021108:	78267815 658e796d 83dc7d30 8f0988c1     .x&xmy.e0}......
10021118:	5264969b 67505728 8ca17f6a 574251b4     ..dR(WPgj....QBW
10021128:	583a962a 80b4698a 5d0e54b2 789557fc     *.:X.i...T.].W.x
10021138:	4f5c9dfa 548b524a 6628643e 67f56714     ..\OJR.T>d(f.g.g
10021148:	7b567a84 932f7d22 9bad685c 53197b39     .zV{"}/.\h..9{.S
10021158:	5237518a 62f65bdf 64e664ae 6bba672d     .Q7R.[.b.d.d-g.k
10021168:	96d185a9 9bd67690 9306634c 76bf9bab     .....v..Lc.....v
10021178:	4e096652 53c25098 60e85c71 65636492     Rf.N.P.Sq\.`.dce
10021188:	71e6685f 752373ca 7e827b97 8b838695     _h.q.s#u.{.~....
10021198:	91788cdb 65ac9910 6b8b66ab 4ed44ed5     ..x....e.f.k.N.N
100211a8:	4f7f4f3a 53f8523a 55e353f2 58eb56db     :O.O:R.S.S.U.V.X
100211b8:	59c959cb 5b5059ff 5e025c4d 5fd75e2b     .Y.Y.YP[M\.^+^._
100211c8:	6307601d 5b5c652f 65bd65af 679d65e8     .`.c/e\[.e.e.e.g
100211d8:	6b7b6b62 73456c0f 79c17949 7d197cf8     bk{k.lEsIy.y.|.}
100211e8:	80a27d2b 81f38102 8a5e8996 8a668a69     +}........^.i.f.
100211f8:	8aee8a8c 8cdc8cc7 98fc96cc 4e8b6b6f     ............ok.N
10021208:	4f8d4f3c 5b575150 61485bfa 66426301     <O.OPQW[.[Ha.cBf
10021218:	6ecb6b21 723e6cbb 75d474bd 793a78c1     !k.n.l>r.t.u.x:y
10021228:	8033800c 849481ea 6c508f9e 5f0f9e7f     ..3.......Pl..._
10021238:	9d2b8b58 8ef87afa 96eb5b8d 53f14e03     X.+..z...[...N.S
10021248:	593157f7 5ba45ac9 6e7f6089 75be6f06     .W1Y.Z.[.`.n.o.u
10021258:	5b9f8cea 7be08500 67f45072 5c61829d     ...[...{rP.g..a\
10021268:	7e1e854a 5199820e 63685c04 659c8d66     J..~...Q.\hcf..e
10021278:	793e716e 80057d17 8eca8b1d 86c7906e     nq>y.}......n...
10021288:	501f90aa 5c3a52fa 707c6753 914c7235     ...P.R:\Sg|p5rL.
10021298:	932b91c8 5bc282e5 60f95f31 53d64e3b     ..+....[1_.`;N.S
100212a8:	624b5b88 6b8a6731 73e072e9 816b7a2e     .[Kb1g.k.r.s.zk.
100212b8:	91528da3 51129996 546a53d7 63885bff     ..R....Q.SjT.[.c
100212c8:	7dac6a39 56da9700 546853ce 5c315b97     9j.}...V.ShT.[1\
100212d8:	4fee5dde 62fe6101 79c06d32 7d4279cb     .].O.a.b2m.y.yB}
100212e8:	7fd27e4d 821f81ed 88468490 8b908972     M~........F.r...
100212f8:	8f2f8e74 914b9031 96c6916c 4ec0919c     t./.1.K.l......N
10021308:	51454f4f 5f935341 67d4620e 6e0b6c41     OOEQAS._.b.gAl.n
10021318:	7e267363 928391cd 591953d4 6dd15bbf     cs&~.....S.Y.[.m
10021328:	7e2e795d 587e7c9b 51fa719f 8ff08853     ]y.~.|~X.q.QS...
10021338:	5cfb4fca 77ac6625 821c7ae3 51c699ff     .O.\%f.w.z.....Q
10021348:	65ec5faa 6b89696f 6e966df3 76fe6f64     ._.eoi.k.m.ndo.v
10021358:	5de17d14 91879075 51e69806 6240521d     .}.]u......Q.R@b
10021368:	66d96691 5eb66e1a 7f727dd2 85af66f8     .f.f.n.^.}r..f..
10021378:	8af885f7 53d952a9 5e8f5973 60555f90     .....R.SsY.^._U`
10021388:	966492e4 511f50b7 532052dd 53ec5347     ..d..P.Q.R SGS.S
10021398:	554654e8 56175531 59be5968 5bb55a3c     .TFU1U.VhY.Y<Z.[
100213a8:	5c0f5c06 5c1a5c11 5e8a5e84 5f705ee0     .\.\.\.\.^.^.^p_
100213b8:	6284627f 638c62db 66076377 662d660c     .b.b.b.cwc.f.f-f
100213c8:	677e6676 6a1f68a2 6cbc6a35 6e096d88     vf~g.h.j5j.l.m.n
100213d8:	713c6e58 71677126 770175c7 7901785d     Xn<q&qgq.u.w]x.y
100213e8:	79f07965 7b117ae0 7d397ca7 83d68096     ey.y.z.{.|9}....
100213f8:	8549848b 88f3885d 8a3c8a1f 8a738a54     ..I.].....<.T.s.
10021408:	8cde8c61 926691a4 9418937e 9798969c     a.....f.~.......
10021418:	4e084e0a 4e574e1e 52705197 583457ce     .N.N.NWN.QpR.W4X
10021428:	5b2258cc 60c55e38 676164fe 6d446756     .X"[8^.`.dagVgDm
10021438:	757372b6 84b87a63 91b88b72 56319320     .rsucz..r... .1V
10021448:	98fe57f4 690d62ed 71ed6b96 80777e54     .W...b.i.k.qT~w.
10021458:	89e68272 875598df 5c3b8fb1 4fe14f38     r.....U...;\8O.O
10021468:	55074fb5 5bdd5a20 5fc35be9 632f614e     .O.U Z.[.[._Na/c
10021478:	664b65b0 699b68ee 6df16d78 75b97533     .eKf.h.ixm.m3u.u
10021488:	795e771f 7d3379e6 82af81e3 89aa85aa     .w^y.y3}........
10021498:	8eab8a3a 90328f9b 970791dd 4ec14eba     :.....2......N.N
100214a8:	58755203 5c0b58ec 5c3d751a 8a0a814e     .RuX.X.\.u=\N...
100214b8:	96638fc5 7b25976d 98088acf 56f39162     ..c.m.%{....b..V
100214c8:	901753a8 57825439 63a85e25 708a6c34     .S..9T.W%^.c4l.p
100214d8:	7c8b7761 88707fe0 91549042 93189310     aw.|..p.B.T.....
100214e8:	745e968f 5d079ac4 65705d69 8da867a2     ..^t...]i]pe.g..
100214f8:	636e96db 69196749 981783c5 88fe96c0     ..ncIg.i........
10021508:	647a6f84 4e165bf8 755d702c 51c4662f     .ozd.[.N,p]u/f.Q
10021518:	52e25236 5f8159d3 62106027 6574653f     6R.R.Y._'`.b?ete
10021528:	6674661f 681668f2 6e056b63 751f7272     .ftf.h.hck.nrr.u
10021538:	7cbe76db 58f08056 897f88fd 8a938aa0     .v.|V..X........
10021548:	901d8acb 97529192 65899759 81067a0e     ......R.Y..e.z..
10021558:	5e2d96bb 621a60dc 661465a5 77f36790     ..-^.`.b.e.f.g.w
10021568:	7c4d7a4d 810a7e3e 8d648cac 8e5f8de1     MzM|>~....d..._.
10021578:	520778a9 63a562d9 62986442 7a838a2d     .x.R.b.cBd.b-..z
10021588:	8aac7bc0 7d7696ea 8749820c 51484ed9     .{....v}..I..NHQ
10021598:	53605343 5c025ba3 5ddd5c16 62476226     CS`S.[.\.\.]&bGb
100215a8:	681364b0 6cc96834 6d176d45 6f5c67d3     .d.h4h.lEm.m.g\o
100215b8:	717d714e 7a7f65cb 7dda7bad 7fa87e4a     Nq}q.e.z.{.}J~..
100215c8:	821b817a 85a68239 8cce8a6e 90788df5     z...9...n.....x.
100215d8:	92ad9077 95839291 524d9bae 6f385584     w.........MR.U8o
100215e8:	51687136 7e557985 7cce81b3 5851564c     6qhQ.yU~...|LVQX
100215f8:	63aa5ca8 66fd66fe 72d9695a 758e758f     .\.c.f.fZi.r.u.u
10021608:	7956790e 7c9779df 7d447d20 8a348607     .yVy.y.| }D}..4.
10021618:	9061963b 50e79f20 53cc5275 500953e2     ;.a. ..PuR.S.S.P
10021628:	58ee55aa 723d594f 5c645b8b 60e3531d     .U.XOY=r.[d\.S.`
10021638:	635c60f3 633f6383 64cd63bb 66f965e9     .`\c.c?c.c.d.e.f
10021648:	69cd5de3 6f1569fd 4e8971e5 76f875e9     .].i.i.o.q.N.u.v
10021658:	7cdf7a93 7d9c7dcf 83498061 846c8358     .z.|.}.}a.I.X.l.
10021668:	85fb84bc 8d7088c5 906d9001 971c9397     ......p...m.....
10021678:	50cf9a12 618e5897 853581d3 90208d08     ...P.X.a..5... .
10021688:	50744fc3 53735247 6349606f 6e2c675f     .OtPGRsSo`Ic_g,n
10021698:	901f8db3 5c5e4fd7 65cf8cca 53527d9a     .....O^\...e.}RS
100216a8:	51768896 5b5863c3 5c0a5b6b 6751640d     ..vQ.cX[k[.\.dQg
100216b8:	4ed6905c 592a591a 8a516c70 5815553e     \..N.Y*YplQ.>U.X
100216c8:	60f059a5 67c16253 69558235 99c49640     .Y.`Sb.g5.Ui@...
100216d8:	4f539a28 5bfe5806 5cb18010 5f855e2f     (.SO.X.[...\/^._
100216e8:	614b6020 66ff6234 6ede6cf0 817f80ce      `Ka4b.f.l.n....
100216f8:	888b82d4 90008cb8 968a902e 9bdb9edb     ................
10021708:	53f04ee3 7b2c5927 984c918d 6edd9df9     .N.S'Y,{..L....n
10021718:	53537027 5b855544 629e6258 6ca262d3     'pSSDU.[Xb.b.b.l
10021728:	74226fef 94388a17 8afe6fc1 51e78338     .o"t..8..o..8..Q
10021738:	53ea86f8 4f4653e9 8fb09054 8131596a     ...S.SFOT...jY1.
10021748:	7aea5dfd 68da8fbf 72f88c37 6a3d9c48     .].z...h7..rH.=j
10021758:	4e398ab0 56065358 62c55766 65e663a2     ..9NXS.VfW.b.c.e
10021768:	6de16b4e 70ad6e5b 7aef77ed 7dbb7baa     Nk.m[n.p.w.z.{.}
10021778:	80c6803d 8a9586cb 56e3935b 5f3e58c7     =.......[..V.X>_
10021788:	669665ad 6bb56a80 8ac77537 77e55024     .e.f.j.k7u..$P.w
10021798:	5f1b5730 667a6065 75f46c60 7f6e7a1a     0W._e`zf`l.u.zn.
100217a8:	871881f4 99b39045 755c7bc9 7b517af9     ....E....{\u.zQ{
100217b8:	901084c4 7a9279e9 5ae18336 4e2d7740     .....y.z6..Z@w-N
100217c8:	5b994ef2 62bd5fe0 67f1663c 866b6ce8     .N.[._.b<f.g.lk.
100217d8:	8a3b8877 92f3914e 6a1799d0 732a7026     w.;.N......j&p*s
100217e8:	845782e7 4e018caf 51cb5146 5bf5558b     ..W....NFQ.Q.U.[
100217f8:	5e335e16 5f145e81 5f6b5f35 61f25fb4     .^3^.^._5_k_._.a
10021808:	66a26311 6f6e671d 753a7252 8074773a     .c.f.gnoRr:u:wt.
10021818:	81788139 8abf8776 8d858adc 929a8df3     9.x.v...........
10021828:	98029577 52c59ce5 76f46357 6c886715     w......RWc.v.g.l
10021838:	8cc373cd 967393ae 589c6d25 69cc690e     .s....s.%m.X.i.i
10021848:	939a8ffd 901a75db 6802585a 69fb63b4     .....u..ZX.h.c.i
10021858:	6f2c4f43 8fbb67d8 7db48526 693f9354     CO,o.g..&..}T.?i
10021868:	576a6f70 5b2c58f7 722a7d2c 91e3540a     pojW.X,[,}*r.T..
10021878:	4ead9db4 505c4f4e 52435075 54488c9e     ...NNO\PuPCR..HT
10021888:	5b9a5824 5e955e1d 5ef75ead 608c5f1f     $X.[.^.^.^.^._.`
10021898:	633a62b5 68af63d0 78876c40 7a0b798e     .b:c.c.h@l.x.y.z
100218a8:	82477de0 8ae68a02 90138e44 912d90b8     .}G.....D.....-.
100218b8:	9f0e91d8 64586ce5 657564e2 76846ef4     .....lXd.due.n.v
100218c8:	90697b1b 6eba93d1 5fb954f2 8f4d64a4     .{i....n.T._.dM.
100218d8:	92448fed 586b5178 5c555929 6dfb5e97     ..D.xQkX)YU\.^.m
100218e8:	751c7e8f 8ee28cbc 70b9985b 6bbf4f1d     .~.u....[..p.O.k
100218f8:	75306fb1 514e96fb 58355410 59ac5857     .o0u..NQ.T5XWX.Y
10021908:	5f925c60 675c6597 767b6e21 8ced83df     `\._.e\g!n{v....
10021918:	90fd9014 7825934d 52aa783a 571f5ea6     ....M.%x:x.R.^.W
10021928:	60125974 515a5012 51cd51ac 55105200     tY.`.PZQ.Q.Q.R.U
10021938:	58585854 5b955957 5d8b5cf6 629560bc     TXXXWY.[.\.].`.b
10021948:	6771642d 68bc6843 76d768df 6e6f6dd8     -dqgCh.h.h.v.mon
10021958:	706f6d9b 5f5371c8 797775d8 7b547b49     .mop.qS_.uwyI{T{
10021968:	7cd67b52 52307d71 85698463 8a0e85e4     R{.|q}0Rc.i.....
10021978:	8c468b04 90038e0f 9419900f 982d9676     ..F.........v.-.
10021988:	95d89a30 52d550cd 5802540c 61a75c0e     0....P.R.T.X.\.a
10021998:	6d1e649e 7ae577b3 840480f4 92859053     .d.m.w.z....S...
100219a8:	9d075ce0 5f97533f 6d9c5fb3 77637279     .\..?S._._.myrcw
100219b8:	7be479bf 72ec6bd2 68038aad 51f86a61     .y.{.k.r...haj.Q
100219c8:	69347a81 9cf65c4a 5bc582eb 701e9149     .z4iJ\.....[I..p
100219d8:	5c6f5678 656660c7 8c5a6c8c 98139041     xVo\.`fe.lZ.A...
100219e8:	66c75451 5948920d 518590a3 51ea4e4d     QT.f..HY...QMN.Q
100219f8:	8b0e8599 637a7058 6962934b 7e0499b4     ....XpzcK.bi...~
10021a08:	53577577 8edf6960 6c5d96e3 5c3c4e8c     wuWS`i....]l.N<\
10021a18:	8fe95f10 8cd15302 86798089 65e55eff     ._...S....y..^.e
10021a28:	51654e73 5c3f5982 4efb97ee 5fcd598a     sNeQ.Y?\...N.Y._
10021a38:	6fe18a8d 796279b0 84715be7 71b1732b     ...o.yby.[q.+s.q
10021a48:	5ff55e74 649a637b 7c9871c3 5efc4e43     t^._{c.d.q.|CN.^
10021a58:	57dc4e4b 60a956a2 7d0d6fc3 813380fd     KN.W.V.`.o.}..3.
10021a68:	8fb281bf 86a48997 628a5df4 898764ad     .........].b.d..
10021a78:	6ce26777 74366d3e 5a467834 82ad7f75     wg.l>m6t4xFZu...
10021a88:	4ff399ac 62dd5ec3 65576392 76c3676f     ...O.^.b.cWeog.v
10021a98:	80cc724c 8f2980ba 500d914d 5a9257f9     Lr....).M..P.W.Z
10021aa8:	69736885 72fd7164 58f28cb7 966a8ce0     .hsidq.r...X..j.
10021ab8:	877f9019 77e779e4 4f2f8429 535a5265     .....y.w)./OeRZS
10021ac8:	67cf62cd 767d6cca 7c957b94 85848236     .b.g.l}v.{.|6...
10021ad8:	66dd8feb 72066f20 83ab7e1b 9ea699c1     ...f o.r.~......
10021ae8:	7bb151fd 7bb87872 7b488087 5e616ae8     .Q.{rx.{..H{.ja^
10021af8:	7551808c 516b7560 6e8c9262 9197767a     ..Qu`ukQb..nzv..
10021b08:	4f109aea 629c7f70 95a57b4f 567a9ce9     ...Op..bO{....zV
10021b18:	86e45859 4f3496bc 534a5224 53db53cd     YX....4O$RJS.S.S
10021b28:	642c5e06 677f6591 6c4e6c3e 72af7248     .^,d.e.g>lNlHr.r
10021b38:	755473ed 822c7e41 8ca985e9 91c67bc4     .sTuA~,......{..
10021b48:	98127169 633d98ef 756a6669 78d076e4     iq....=cifju.v.x
10021b58:	86ee8543 5351532a 59835426 5f7c5e87     C...*SQS&T.Y.^|_
10021b68:	624960b2 62ab6279 6bd46590 75b26ccc     .`Ibyb.b.e.k.l.u
10021b78:	789176ae 7dcb79d8 80a57f77 8ab988ab     .v.x.y.}w.......
10021b88:	907f8cbb 98db975e 7c386a0b 5c3e5099     ....^....j8|.P>\
10021b98:	67875fae 74356bd8 7f8e7709 67ca9f3b     ._.g.k5t.w..;..g
10021ba8:	53397a17 9aed758b 819d5f66 809883f1     .z9S.u..f_......
10021bb8:	5fc55f3c 7b467562 6867903c 5a9b59eb     <_._buF{<.gh.Y.Z
10021bc8:	767e7d10 4ff58b2c 6a195f6a 6f026c37     .}~v,..Oj_.j7l.o
10021bd8:	796874e2 8a558868 5edf8c79 75c563cf     .thyh.U.y..^.c.u
10021be8:	82d779d2 92f29328 86ed849c 54c19c2d     .y..(.......-..T
10021bf8:	658c5f6c 70156d5c 8cd38ca7 654f983b     l_.e\m.p....;.Oe
10021c08:	4e0d74f6 57e04ed8 5a66592b 51a85bcc     .t.N.N.W+YfZ.[.Q
10021c18:	5e9c5e03 62766016 65a76577 6d6e666e     .^.^.`vbwe.enfnm
10021c28:	7b267236 819a8150 8b5c8299 8ce68ca0     6r&{P.....\.....
10021c38:	961c8d74 4fae9644 6b6664ab 8461821e     t...D..O.dfk..a.
10021c48:	90e8856a 69535c01 847a98a8 4f0f8557     j....\Si..z.W..O
10021c58:	5fa9526f 670d5e45 8179798f 89868907     oR._E^.g.yy.....
10021c68:	5f176df5 6cb86255 72694ecf 52069b92     .m._Ub.l.Nir...R
10021c78:	5674543b 61a458b3 711a626e 7c89596e     ;TtV.X.anb.qnY.|
10021c88:	7d1b7cde 658796f0 4e19805e 51754f75     .|.}...e^..NuOuQ
10021c98:	5e635840 5f0a5e73 4e2667c4 9589853d     @Xc^s^._.g&N=...
10021ca8:	7c73965b 50fb9801 765658c1 522578a7     [.s|...P.XVv.x%R
10021cb8:	851177a5 504f7b86 72475909 7de87bc7     .w...{OP.YGr.{.}
10021cc8:	8fd48fba 4fbf904d 5a2952c9 97ad5f01     ....M..O.R)Z._..
10021cd8:	82174fdd 570392ea 6b696355 88dc752b     .O.....WUcik+u..
10021ce8:	7a428f14 589352df 620a6155 6bcd66ae     ..Bz.R.XUa.b.f.k
10021cf8:	83e97c3f 4ff85023 54465305 59495831     ?|..#P.O.SFT1XIY
10021d08:	5cf05b9d 5d295cef 62b15e96 653e6367     .[.\.\)].^.bgc>e
10021d18:	670b65b9 6ce16cd5 783270f9 80de7e2b     .e.g.l.l.p2x+~..
10021d28:	840c82b3 870284ec 8a2a8912 90a68c4a     ..........*.J...
10021d38:	98fd92d2 9d6c9cf3 4ea14e4f 5256508d     ......l.ON.N.PVR
10021d48:	59a8574a 5fd85e3d 623f5fd9 671b66b4     JW.Y=^._._?b.f.g
10021d58:	68d267d0 7d215192 81a880aa 8c8c8b00     .g.h.Q!}........
10021d68:	927e8cbf 54209632 5317982c 535c50d5     ..~.2. T,..S.P\S
10021d78:	64b258a8 72676734 7a467766 52c391e6     .X.d4ggrfwFz...R
10021d88:	6b866ca1 5e4c5800 672c5954 51e17ffb     .l.k.XL^TY,g...Q
10021d98:	646976c6 9b5478e8 57cb9ebb 662759b9     .vid.xT....W.Y'f
10021da8:	6bce679a 69d954e9 819c5e55 9baa6795     .g.k.T.iU^...g..
10021db8:	9c5267fe 4ea6685d 53c84fe3 672b62b9     .gR.]h.N.O.S.b+g
10021dc8:	8fc46cab 7e6d4fad 4e079ebf 6e806162     .l...Om~...Nba.n
10021dd8:	85136f2b 672a5473 5df39b45 5cac7b95     +o..sT*gE..].{.\
10021de8:	871c5bc6 84d16e4a 81087a14 7c8d5999     .[..Jn...z...Y.|
10021df8:	77206c11 592252d9 725f7121 972777db     .l w.R"Y!q_r.w'.
10021e08:	690b9d61 5a185a7f 540d51a5 660e547d     a..i.Z.Z.Q.T}T.f
10021e18:	8ff776df 9cf49298 725d59ea 514d6ec5     .v.......Y]r.nMQ
10021e28:	7dbf68c9 97627dec 64789eba 83026a21     .h.}.}b...xd!j..
10021e38:	5b5f5984 731b6bdb 7db276f2 84998017     .Y_[.k.s.v.}....
10021e48:	67285132 76ee9ed9 52ff6762 5c249905     2Q(g...vbg.R..$\
10021e58:	7c7e623b 554f8cb0 7d0b60b6 53019580     ;b~|..OU.`.}...S
10021e68:	51b64e5f 723a591c 91ce8036 77e25f25     _N.Q.Y:r6...%_.w
10021e78:	5f795384 85ac7d04 8e8d8a33 67f39756     .Sy_.}..3...V..g
10021e88:	945385ae 61086109 76526cb9 8f388aed     ..S..a.a.lRv..8.
10021e98:	4f51552f 52c7512a 5ba553cb 60a05e7d     /UQO*Q.R.S.[}^.`
10021ea8:	63d66182 67da6709 6d8c6e67 73377336     .a.c.g.ggn.m6s7s
10021eb8:	79507531 8a9888d5 9091904a 96c490f5     1uPy....J.......
10021ec8:	5915878d 4f594e88 8a894e0e 98108f3f     ...Y.NYO.N..?...
10021ed8:	5e7c50ad 5bb95996 63da5eb8 64c163fa     .P|^.Y.[.^.c.c.d
10021ee8:	694a66dc 6d0b69d8 71946eb6 7aaf7528     .fJi.i.m.n.q(u.z
10021ef8:	80007f8a 84c98449 8b218981 90658e0a     ....I.....!...e.
10021f08:	990a967d 6291617e 6c836b32 7fcc6d74     }...~a.b2k.ltm..
10021f18:	6dc07ffc 87ba7f85 676588f8 983c83b1     ...m......eg..<.
10021f28:	6d1b96f7 843d7d61 4e71916a 5d505375     ...ma}=.j.qNuSP]
10021f38:	6feb6b04 862d85cd 522989a7 5c65540f     .k.o..-...)R.Te\
10021f48:	68a8674e 74837406 88cf75e2 91cc88e1     Ng.h.t.t.u......
10021f58:	967896e2 73875f8b 844e7acb 756563a0     ..x.._.s.zN..ceu
10021f68:	6d415289 74096e9c 786b7559 96867c92     .RAm.n.tYukx.|..
10021f78:	9f8d7adc 616e4fb6 865c65c5 4eae4e86     .z...Ona.e\..N.N
10021f88:	4e2150da 5bee51cc 68816599 731f6dbc     .P!N.Q.[.e.h.m.s
10021f98:	77ad7642 7ce77a1c 8ad2826f 91cf907c     Bv.w.z.|o...|...
10021fa8:	98189675 7dd1529b 5398502b 6dcb6797     u....R.}+P.S.g.m
10021fb8:	743371d0 8f2a81e8 9c5796a3 74609e9f     .q3t..*...W...`t
10021fc8:	6d995841 985e7d2f 4f364ee4 51b74f8b     AX.m/}^..N6O.O.Q
10021fd8:	5dba52b1 73b2601c 82d3793c 96b79234     .R.].`.s<y..4...
10021fe8:	970a96f6 9f629e97 6b7466a6 52a35217     ......b..ftk.R.R
10021ff8:	88c270c8 604b5ec9 6f236190 7c3e7149     .p...^K`.a#oIq>|
10022008:	806f7df4 902384ee 5442932c 6ad39b6f     .}o...#.,.BTo..j
10022018:	8cc27089 97328def 5a4152b4 5f045eca     .p....2..RAZ.^._
10022028:	697c6717 6d6a6994 72626f0f 7bed72fc     .g|i.ijm.obr.r.{
10022038:	807e8001 90ce874b 9e93516d 808b7984     ..~.K...mQ...y..
10022048:	8ad69332 548c502d 6b6a8a71 81078cc4     2...-P.Tq.jk....
10022058:	67a060d1 4e999df2 9c104e98 85c18a6b     .`.g...N.N..k...
10022068:	69008568 78976e7e 00008155              h..i~n.xU...

10022074 <a8>:
10022074:	25022500 2510250c 25142518 252c251c     .%.%.%.%.%.%.%,%
10022084:	25342524 2501253c 250f2503 251b2513     $%4%<%.%.%.%.%.%
10022094:	25232517 252b2533 254b253b 252f2520     .%#%3%+%;%K% %/%
100220a4:	25372528 251d253f 25252530 25422538     (%7%?%.%0%%%8%B%

100220b4 <a7>:
100220b4:	04110410 04130412 04150414 04160401     ................
100220c4:	04180417 041a0419 041c041b 041e041d     ................
100220d4:	0420041f 04220421 04240423 04260425     .. .!.".#.$.%.&.
100220e4:	04280427 042a0429 042c042b 042e042d     '.(.).*.+.,.-...
100220f4:	0000042f 00000000 00000000 00000000     /...............
	...
10022114:	04310430 04330432 04350434 04360451     0.1.2.3.4.5.Q.6.
10022124:	04380437 043a0439 043c043b 043e043d     7.8.9.:.;.<.=.>.
10022134:	0440043f 04420441 04440443 04460445     ?.@.A.B.C.D.E.F.
10022144:	04480447 044a0449 044c044b 044e044d     G.H.I.J.K.L.M.N.
10022154:	0000044f                                O...

10022158 <a6>:
10022158:	03920391 03940393 03960395 03980397     ................
10022168:	039a0399 039c039b 039e039d 03a0039f     ................
10022178:	03a303a1 03a503a4 03a703a6 03a903a8     ................
	...
10022198:	03b203b1 03b403b3 03b603b5 03b803b7     ................
100221a8:	03ba03b9 03bc03bb 03be03bd 03c003bf     ................
100221b8:	03c303c1 03c503c4 03c703c6 03c903c8     ................

100221c8 <a3>:
	...
100221d4:	01000000 01010101 01010101 00000001     ................
100221e4:	00000000 01010101 01010101 01010101     ................
100221f4:	01010101 01010101 01010101 00000101     ................
10022204:	00000000 01010100 01010101 01010101     ................
10022214:	01010101 01010101 01010101 00010101     ................

10022224 <a2>:
10022224:	25a125c6 25b325a0 25bd25b2 203b25bc     .%.%.%.%.%.%.%; 
10022234:	21923012 21912190 30132193 00000000     .0.!.!.!.!.0....
	...
10022254:	22080000 2286220b 22822287 222a2283     ..."."."."."."*"
10022264:	00002229 00000000 00000000 00000000     )"..............
10022274:	22270000 00ac2228 21d421d2 22032200     ..'"("...!.!."."
10022284:	00002229 00000000 00000000 00000000     )"..............
10022294:	00000000 22200000 231222a5 22072202     ...... ".".#."."
100222a4:	22522261 226b226a 223d221a 2235221d     a"R"j"k"."="."5"
100222b4:	222c222b 00000000 00000000 00000000     +","............
100222c4:	212b0000 266f2030 266a266d 20212020     ..+!0 o&m&j&  ! 
100222d4:	222c00b6 00000000 25ef0000              ..,".......%

100222e0 <a1>:
100222e0:	30013000 ff0c3002 30fbff0e ff1bff1a     .0.0.0.....0....
100222f0:	ff01ff1f 309c309b ff4000b4 ff3e00a8     .....0.0..@...>.
10022300:	ff3f203e 30fe30fd 309e309d 4edd3003     > ?..0.0.0.0.0.N
10022310:	30063005 30fc3007 20102014 ff3cff0f     .0.0.0.0. . ..<.
10022320:	2016301c 2026ff5c 20182025 201c2019     .0. \.& % . . . 
10022330:	ff08201d 3014ff09 ff3b3015 ff5bff3d     . .....0.0;.=.[.
10022340:	3008ff5d 300a3009 300c300b 300e300d     ]..0.0.0.0.0.0.0
10022350:	3010300f ff0b3011 00b12212 00f700d7     .0.0.0..."......
10022360:	2260ff1d ff1eff1c 22672266 2234221e     ..`"....f"g"."4"
10022370:	26402642 203200b0 21032033 ff0400a5     B&@&..2 3 .!....
10022380:	00a300a2 ff03ff05 ff0aff06 00a7ff20     ............ ...
10022390:	26052606 25cf25cb 25c725ce              .&.&.%.%.%.%

1002239c <categories>:
1002239c:	00000000 201c001f 00000000 00002114     ....... .....!..
100223ac:	24160002 00000000 00002514 28150002     ...$.....%.....(
100223bc:	00000000 00002911 2a140000 00000000     .....).....*....
100223cc:	00002b18 2c140000 00000000 00002d10     .+.....,.....-..
100223dc:	2e140000 00010000 0000300c 3a140009     .........0.....:
100223ec:	00010000 00003c18 3f140002 00010000     .....<.....?....
100223fc:	00004103 5b150019 00000000 00005c14     .A.....[.....\..
1002240c:	5d110000 00000000 00005e17 5f0f0000     ...].....^....._
1002241c:	00000000 00006017 61030000 00190000     .....`.....a....
1002242c:	00007b15 7c180000 00000000 00007d11     .{.....|.....}..
1002243c:	7e180000 00000000 00007f00 a01c0020     ...~........ ...
1002244c:	00000000 0000a114 a2160000 00030000     ................
1002245c:	0000a619 a7140000 00000000 0000a817     ................
1002246c:	a9190000 00000000 0000aa06 ab130000     ................
1002247c:	00000000 0000ac18 ad010000 00000000     ................
1002248c:	0000ae19 af170000 00000000 0000b019     ................
1002249c:	b1180000 00000000 0000b20e b4170001     ................
100224ac:	00000000 0000b503 b6140000 00010000     ................
100224bc:	0000b817 b90e0000 00000000 0000ba06     ................
100224cc:	bb120000 00000000 0000bc0e bf140002     ................
100224dc:	00000000 0000c003 d7180016 00000000     ................
100224ec:	0000d803 df040006 00000000 0000e003     ................
100224fc:	f7180016 00000000 0000f803 3804003f     ............?..8
1002250c:	00000001 00013903 4904000f 00000001     .....9.....I....
1002251c:	00014a03 8d040042 00000001 00018e03     .J..B...........
1002252c:	9b04000c 00000001 00019c03 aa04000d     ................
1002253c:	00010001 0001ac03 ba04000d 00000001     ................
1002254c:	0001bb06 bc030000 00010001 0001be04     ................
1002255c:	bf030000 00000001 0001c006 c4030003     ................
1002256c:	00000001 0001c507 c6030000 00010001     ................
1002257c:	0001c807 c9030000 00010001 0001cb07     ................
1002258c:	cc030000 00230001 0001f004 f1030000     ......#.........
1002259c:	00000001 0001f207 f3030000 002d0001     ..............-.
100225ac:	00022104 22030000 00110002 00023404     .!.....".....4..
100225bc:	3a030005 001a0002 00025504 56030000     ...:.....U.....V
100225cc:	00010002 00025804 59030000 00000002     .....X.....Y....
100225dc:	00025a04 5b030000 00010002 00025d04     .Z.....[.....]..
100225ec:	60030002 00010002 00026204 63030000     ...`.....b.....c
100225fc:	00000002 00026404 65030000 00010002     .....d.....e....
1002260c:	00026704 68030000 00040002 00026d04     .g.....h.....m..
1002261c:	6f030001 00000002 00027004 71030000     ...o.....p.....q
1002262c:	00010002 00027304 75030001 00000002     .....s.....u....
1002263c:	00027604 7d030006 00000002 00027e04     .v.....}.....~..
1002264c:	80030001 00000002 00028104 82030000     ................
1002265c:	00010002 00028404 87030002 00050002     ................
1002266c:	00028d04 92030004 00000002 00029304     ................
1002267c:	94060000 00000002 00029504 9d030007     ................
1002268c:	00010002 00029f04 b0050010 00110002     ................
1002269c:	0002c217 c6050003 000b0002 0002d217     ................
100226ac:	e005000d 00040002 0002e517 ec050006     ................
100226bc:	00000002 0002ed17 ee050000 00000002     ................
100226cc:	0002ef17 000b0010 006f0003 00037003     ..........o..p..
100226dc:	74050003 00000003 00037517 76030000     ...t.....u.....v
100226ec:	00010003 00037a05 7b030000 00020003     .....z.....{....
100226fc:	00037e14 7f030000 00000003 00038417     .~..............
1002270c:	86030001 00000003 00038714 88030000     ................
1002271c:	00020003 00038c03 8e030000 00010003     ................
1002272c:	00039004 91030000 00100003 0003a303     ................
1002273c:	b004000c 00000003 0003b103 d2080020     ............ ...
1002274c:	00020003 0003d503 f6180020 00000003     ........ .......
1002275c:	0003f703 fc040004 00000003 0003fd03     ................
1002276c:	82190084 00000004 0004830b 880a0004     ................
1002277c:	00010004 00048a03 310300a5 00250005     ...........1..%.
1002278c:	00055905 5a140000 00050005 00056004     .Y.....Z.....`..
1002279c:	61030000 00250005 00058704 89140001     ...a..%.........
100227ac:	00000005 00058a10 8d190000 00010005     ................
100227bc:	00058f16 910b0000 002c0005 0005be10     ..........,.....
100227cc:	bf0b0000 00000005 0005c014 c10b0000     ................
100227dc:	00010005 0005c314 c40b0000 00010005     ................
100227ec:	0005c614 c70b0000 00000005 0005d006     ................
100227fc:	ef06001a 00030005 0005f314 00010001     ................
1002280c:	00050006 00060618 09140002 00010006     ................
1002281c:	00060b16 0c140000 00010006 00060e19     ................
1002282c:	100b0001 000a0006 00061b14 1c010000     ................
1002283c:	00000006 00061d14 20060002 001f0006     ........... ....
1002284c:	00064005 41060000 00090006 00064b0b     .@.....A.....K..
1002285c:	600c0014 00090006 00066a14 6e060003     ...`.....j.....n
1002286c:	00010006 0006700b 71060000 00620006     .....p.....q..b.
1002287c:	0006d414 d5060000 00000006 0006d60b     ................
1002288c:	dd010006 00000006 0006de19 df0b0000     ................
1002289c:	00050006 0006e505 e70b0001 00010006     ................
100228ac:	0006e919 ea0b0000 00030006 0006ee06     ................
100228bc:	f00c0001 00090006 0006fa06 fd190002     ................
100228cc:	00010006 0006ff06 00140000 000d0007     ................
100228dc:	00070f01 10060000 00000007 0007110b     ................
100228ec:	12060000 001d0007 0007300b 4d06001a     .........0.....M
100228fc:	00580007 0007a60b b106000a 00000007     ..X.............
1002290c:	0007c00c ca060009 00200007 0007eb0b     .......... .....
1002291c:	f4050008 00010007 0007f619 f7140000     ................
1002292c:	00020007 0007fa05 fd0b0000 00000007     ................
1002293c:	0007fe16 00060001 00150008 0008160b     ................
1002294c:	1a050003 00000008 00081b0b 24050008     ...............$
1002295c:	00000008 0008250b 28050002 00000008     .....%.....(....
1002296c:	0008290b 30140004 000e0008 00084006     .).....0.....@..
1002297c:	590b0018 00020008 00085e14 60060000     ...Y.....^.....`
1002298c:	000a0008 00087006 88170017 00000008     .....p..........
1002299c:	00088906 90010005 00010008 0008980b     ................
100229ac:	a0060007 00280008 0008c905 ca0b0000     ......(.........
100229bc:	00170008 0008e201 e30b0000 001f0008     ................
100229cc:	00090309 04060000 00350009 00093a0b     ..........5..:..
100229dc:	3b090000 00000009 00093c0b 3d060000     ...;.....<.....=
100229ec:	00000009 00093e09 410b0002 00070009     .....>.....A....
100229fc:	00094909 4d0b0003 00000009 00094e09     .I.....M.....N..
10022a0c:	50060001 00000009 0009510b 58060006     ...P.....Q.....X
10022a1c:	00090009 0009620b 64140001 00010009     .....b.....d....
10022a2c:	0009660c 70140009 00000009 00097105     .f.....p.....q..
10022a3c:	72060000 000e0009 0009810b 82090000     ...r............
10022a4c:	00010009 00098506 8f060007 00010009     ................
10022a5c:	00099306 aa060015 00060009 0009b206     ................
10022a6c:	b6060000 00030009 0009bc0b bd060000     ................
10022a7c:	00000009 0009be09 c10b0002 00030009     ................
10022a8c:	0009c709 cb090001 00010009 0009cd0b     ................
10022a9c:	ce060000 00000009 0009d709 dc060000     ................
10022aac:	00010009 0009df06 e20b0002 00010009     ................
10022abc:	0009e60c f0060009 00010009 0009f216     ................
10022acc:	f40e0001 00050009 0009fa19 fb160000     ................
10022adc:	00000009 0009fc06 fd140000 00000009     ................
10022aec:	0009fe0b 010b0000 0001000a 000a0309     ................
10022afc:	05060000 0005000a 000a0f06 13060001     ................
10022b0c:	0015000a 000a2a06 32060006 0001000a     .....*.....2....
10022b1c:	000a3506 38060001 0001000a 000a3c0b     .5.....8.....<..
10022b2c:	3e090000 0002000a 000a410b 470b0001     ...>.....A.....G
10022b3c:	0001000a 000a4b0b 510b0002 0000000a     .....K.....Q....
10022b4c:	000a5906 5e060003 0000000a 000a660c     .Y.....^.....f..
10022b5c:	700b0009 0001000a 000a7206 750b0002     ...p.....r.....u
10022b6c:	0000000a 000a7614 810b0000 0001000a     .....v..........
10022b7c:	000a8309 85060000 0008000a 000a8f06     ................
10022b8c:	93060002 0015000a 000aaa06 b2060006     ................
10022b9c:	0001000a 000ab506 bc0b0004 0000000a     ................
10022bac:	000abd06 be090000 0002000a 000ac10b     ................
10022bbc:	c70b0004 0001000a 000ac909 cb090000     ................
10022bcc:	0001000a 000acd0b d0060000 0000000a     ................
10022bdc:	000ae006 e20b0001 0001000a 000ae60c     ................
10022bec:	f0140009 0000000a 000af116 f9060000     ................
10022bfc:	0000000a 000afa0b 010b0005 0000000b     ................
10022c0c:	000b0209 05060001 0007000b 000b0f06     ................
10022c1c:	13060001 0015000b 000b2a06 32060006     .........*.....2
10022c2c:	0001000b 000b3506 3c0b0004 0000000b     .....5.....<....
10022c3c:	000b3d06 3e090000 0000000b 000b3f0b     .=.....>.....?..
10022c4c:	40090000 0000000b 000b410b 47090003     ...@.....A.....G
10022c5c:	0001000b 000b4b09 4d0b0001 0000000b     .....K.....M....
10022c6c:	000b550b 57090001 0000000b 000b5c06     .U.....W.....\..
10022c7c:	5f060001 0002000b 000b620b 660c0001     ..._.....b.....f
10022c8c:	0009000b 000b7019 71060000 0000000b     .....p.....q....
10022c9c:	000b720e 820b0005 0000000b 000b8306     .r..............
10022cac:	85060000 0005000b 000b8e06 92060002     ................
10022cbc:	0003000b 000b9906 9c060001 0000000b     ................
10022ccc:	000b9e06 a3060001 0001000b 000ba806     ................
10022cdc:	ae060002 000b000b 000bbe09 c00b0001     ................
10022cec:	0000000b 000bc109 c6090001 0002000b     ................
10022cfc:	000bca09 cd0b0002 0000000b 000bd006     ................
10022d0c:	d7090000 0000000b 000be60c f00e0009     ................
10022d1c:	0002000b 000bf319 f9160005 0000000b     ................
10022d2c:	000bfa19 000b0000 0000000c 000c0109     ................
10022d3c:	040b0002 0000000c 000c0506 0e060007     ................
10022d4c:	0002000c 000c1206 2a060016 000f000c     ...........*....
10022d5c:	000c3c0b 3d060000 0000000c 000c3e0b     .<.....=.....>..
10022d6c:	41090002 0003000c 000c460b 4a0b0002     ...A.....F.....J
10022d7c:	0003000c 000c550b 58060001 0002000c     .....U.....X....
10022d8c:	000c5d06 60060000 0001000c 000c620b     .].....`.....b..
10022d9c:	660c0001 0009000c 000c7714 780e0000     ...f.....w.....x
10022dac:	0006000c 000c7f19 80060000 0000000c     ................
10022dbc:	000c810b 82090000 0001000c 000c8414     ................
10022dcc:	85060000 0007000c 000c8e06 92060002     ................
10022ddc:	0016000c 000caa06 b5060009 0004000c     ................
10022dec:	000cbc0b bd060000 0000000c 000cbe09     ................
10022dfc:	bf0b0000 0000000c 000cc009 c60b0004     ................
10022e0c:	0000000c 000cc709 ca090001 0001000c     ................
10022e1c:	000ccc0b d5090001 0001000c 000cdd06     ................
10022e2c:	e0060001 0001000c 000ce20b e60c0001     ................
10022e3c:	0009000c 000cf106 f3090001 0000000c     ................
10022e4c:	000d000b 02090001 0001000d 000d0406     ................
10022e5c:	0e060008 0002000d 000d1206 3b0b0028     ............(..;
10022e6c:	0001000d 000d3d06 3e090000 0002000d     .....=.....>....
10022e7c:	000d410b 46090003 0002000d 000d4a09     .A.....F.....J..
10022e8c:	4d0b0002 0000000d 000d4e06 4f190000     ...M.....N.....O
10022e9c:	0000000d 000d5406 57090002 0000000d     .....T.....W....
10022eac:	000d580e 5f060006 0002000d 000d620b     .X....._.....b..
10022ebc:	660c0001 0009000d 000d700e 79190008     ...f.....p.....y
10022ecc:	0000000d 000d7a06 810b0005 0000000d     .....z..........
10022edc:	000d8209 85060001 0011000d 000d9a06     ................
10022eec:	b3060017 0008000d 000dbd06 c0060000     ................
10022efc:	0006000d 000dca0b cf090000 0002000d     ................
10022f0c:	000dd20b d60b0002 0000000d 000dd809     ................
10022f1c:	e60c0007 0009000d 000df209 f4140001     ................
10022f2c:	0000000d 000e0106 310b002f 0000000e     ......../..1....
10022f3c:	000e3206 340b0001 0006000e 000e3f16     .2.....4.....?..
10022f4c:	40060000 0005000e 000e4605 470b0000     ...@.....F.....G
10022f5c:	0007000e 000e4f14 500c0000 0009000e     .....O.....P....
10022f6c:	000e5a14 81060001 0001000e 000e8406     .Z..............
10022f7c:	86060000 0004000e 000e8c06 a5060017     ................
10022f8c:	0000000e 000ea706 b10b0009 0000000e     ................
10022f9c:	000eb206 b40b0001 0008000e 000ebd06     ................
10022fac:	c0060000 0004000e 000ec605 c80b0000     ................
10022fbc:	0006000e 000ed00c dc060009 0003000e     ................
10022fcc:	000f0006 01190000 0002000f 000f0414     ................
10022fdc:	1319000e 0000000f 000f1414 15190000     ................
10022fec:	0002000f 000f180b 1a190001 0005000f     ................
10022ffc:	000f200c 2a0e0009 0009000f 000f3419     . .....*.....4..
1002300c:	350b0000 0000000f 000f3619 370b0000     ...5.....6.....7
1002301c:	0000000f 000f3819 390b0000 0000000f     .....8.....9....
1002302c:	000f3a15 3b110000 0000000f 000f3c15     .:.....;.....<..
1002303c:	3d110000 0000000f 000f3e09 40060001     ...=.....>.....@
1002304c:	0007000f 000f4906 710b0023 000d000f     .....I..#..q....
1002305c:	000f7f09 800b0000 0004000f 000f8514     ................
1002306c:	860b0000 0001000f 000f8806 8d0b0004     ................
1002307c:	000a000f 000f990b be190023 0007000f     ........#.......
1002308c:	000fc60b c7190000 0005000f 000fce19     ................
1002309c:	d0140001 0004000f 000fd519 d9140003     ................
100230ac:	0001000f 00100006 2b09002a 00010010     ........*..+....
100230bc:	00102d0b 31090003 00000010 0010320b     .-.....1.....2..
100230cc:	38090005 00000010 0010390b 3b090001     ...8.....9.....;
100230dc:	00010010 00103d0b 3f060001 00000010     .....=.....?....
100230ec:	0010400c 4a140009 00050010 00105006     .@.....J.....P..
100230fc:	56090005 00010010 0010580b 5a060001     ...V.....X.....Z
1002310c:	00030010 00105e0b 61060002 00000010     .....^.....a....
1002311c:	00106209 65060002 00010010 00106709     .b.....e.....g..
1002312c:	6e060006 00020010 0010710b 75060003     ...n.....q.....u
1002313c:	000c0010 0010820b 83090000 00010010     ................
1002314c:	0010850b 87090001 00050010 00108d0b     ................
1002315c:	8e060000 00000010 00108f09 900c0000     ................
1002316c:	00090010 00109a09 9d0b0002 00000010     ................
1002317c:	00109e19 a0030001 00250010 0010c703     ..........%.....
1002318c:	cd030000 00000010 0010d003 fb14002a     ............*...
1002319c:	00000010 0010fc05 fd030000 00020010     ................
100231ac:	00110006 4a060148 00030012 00125006     ....H..J.....P..
100231bc:	58060006 00000012 00125a06 60060003     ...X.....Z.....`
100231cc:	00280012 00128a06 90060003 00200012     ..(........... .
100231dc:	0012b206 b8060003 00060012 0012c006     ................
100231ec:	c2060000 00030012 0012c806 d806000e     ................
100231fc:	00380012 00131206 18060003 00420013     ..8...........B.
1002320c:	00135d0b 60140002 00080013 0013690e     .].....`.....i..
1002321c:	80060013 000f0013 00139019 a0030009     ................
1002322c:	00550013 0013f803 00100005 00000014     ..U.............
1002323c:	00140106 6d19026b 00000016 00166e14     ....k..m.....n..
1002324c:	6f060000 00100016 0016801c 81060000     ...o............
1002325c:	00190016 00169b15 9c110000 00000016     ................
1002326c:	0016a006 eb14004a 00020016 0016ee0d     ....J...........
1002327c:	f1060002 00070016 00170006 120b0011     ................
1002328c:	00020017 00171509 1f060000 00120017     ................
1002329c:	0017320b 34090001 00000017 00173514     .2.....4.....5..
100232ac:	40060001 00110017 0017520b 60060001     ...@.....R.....`
100232bc:	000c0017 00176e06 720b0002 00010017     .....n.....r....
100232cc:	00178006 b40b0033 00010017 0017b609     ....3...........
100232dc:	b70b0000 00060017 0017be09 c60b0007     ................
100232ec:	00000017 0017c709 c90b0001 000a0017     ................
100232fc:	0017d414 d7050002 00000017 0017d814     ................
1002330c:	db160002 00000017 0017dc06 dd0b0000     ................
1002331c:	00000017 0017e00c f00e0009 00090017     ................
1002332c:	00180014 06100005 00000018 00180714     ................
1002333c:	0b0b0003 00020018 00180e01 0f0b0000     ................
1002334c:	00000018 0018100c 20060009 00220018     ........... ..".
1002335c:	00184305 44060000 00340018 00188006     .C.....D..4.....
1002336c:	850b0004 00010018 00188706 a90b0021     ............!...
1002337c:	00000018 0018aa06 b0060000 00450018     ..............E.
1002338c:	00190006 200b001e 00020019 00192309     ....... .....#..
1002339c:	270b0003 00010019 00192909 30090002     ...'.....).....0
100233ac:	00010019 0019320b 33090000 00050019     .....2.....3....
100233bc:	0019390b 40190002 00000019 00194414     .9.....@.....D..
100233cc:	460c0001 00090019 00195006 7006001d     ...F.....P.....p
100233dc:	00040019 00198006 b006002b 00190019     ........+.......
100233ec:	0019d00c da0e0009 00000019 0019de19     ................
100233fc:	00060021 0016001a 001a170b 19090001     !...............
1002340c:	0001001a 001a1b0b 1e140000 0001001a     ................
1002341c:	001a2006 55090034 0000001a 001a560b     . ..4..U.....V..
1002342c:	57090000 0000001a 001a580b 600b0006     ...W.....X.....`
1002343c:	0000001a 001a6109 620b0000 0000001a     .....a.....b....
1002344c:	001a6309 650b0001 0007001a 001a6d09     .c.....e.....m..
1002345c:	730b0005 0009001a 001a7f0b 800c0000     ...s............
1002346c:	0009001a 001a900c a0140009 0006001a     ................
1002347c:	001aa705 a8140000 0005001a 001ab00b     ................
1002348c:	be0a000d 0000001a 001abf0b 000b000f     ................
1002349c:	0003001b 001b0409 05060000 002e001b     ................
100234ac:	001b340b 35090000 0000001b 001b360b     .4.....5.....6..
100234bc:	3b090004 0000001b 001b3c0b 3d090000     ...;.....<.....=
100234cc:	0004001b 001b420b 43090000 0001001b     .....B.....C....
100234dc:	001b4506 500c0007 0009001b 001b5a14     .E.....P.....Z..
100234ec:	61190006 0009001b 001b6b0b 74190008     ...a.....k.....t
100234fc:	0008001b 001b7d14 800b0001 0001001b     .....}..........
1002350c:	001b8209 83060000 001d001b 001ba109     ................
1002351c:	a20b0000 0003001b 001ba609 a80b0001     ................
1002352c:	0001001b 001baa09 ab0b0000 0002001b     ................
1002353c:	001bae06 b00c0001 0009001b 001bba06     ................
1002354c:	e60b002b 0000001b 001be709 e80b0000     +...............
1002355c:	0001001b 001bea09 ed0b0002 0000001b     ................
1002356c:	001bee09 ef0b0000 0002001b 001bf209     ................
1002357c:	fc140001 0003001b 001c0006 24090023     ............#..$
1002358c:	0007001c 001c2c0b 34090007 0001001c     .....,.....4....
1002359c:	001c360b 3b140001 0004001c 001c400c     .6.....;.....@..
100235ac:	4d060009 0002001c 001c500c 5a060009     ...M.....P.....Z
100235bc:	001d001c 001c7805 7e140005 0001001c     .....x.....~....
100235cc:	001c8003 90030008 002a001c 001cbd03     ..........*.....
100235dc:	c0140002 0007001c 001cd00b d3140002     ................
100235ec:	0000001c 001cd40b e109000c 0000001c     ................
100235fc:	001ce20b e9060006 0003001c 001ced0b     ................
1002360c:	ee060000 0005001c 001cf40b f5060000     ................
1002361c:	0001001c 001cf709 f80b0000 0001001c     ................
1002362c:	001cfa06 00040000 002b001d 001d2c05     ..........+..,..
1002363c:	6b04003e 000c001d 001d7805 79030000     >..k.....x.....y
1002364c:	0000001d 001d7a04 7d030002 0000001d     .....z.....}....
1002365c:	001d7e04 8e03000f 0000001d 001d8f04     .~..............
1002366c:	9b05000b 0024001d 001dc00b 0003003f     ......$.....?...
1002367c:	0095001e 001e9604 9b030004 0000001e     ................
1002368c:	001e9c04 9e030001 0000001e 001e9f04     ................
1002369c:	a0030000 0075001e 001f1803 20030005     ......u........ 
100236ac:	0025001f 001f4803 50040005 0000001f     ..%..H.....P....
100236bc:	001f5103 52040000 0000001f 001f5303     .Q.....R.....S..
100236cc:	54040000 0000001f 001f5503 56040000     ...T.....U.....V
100236dc:	0000001f 001f5703 59030000 0000001f     .....W.....Y....
100236ec:	001f5b03 5d030000 0000001f 001f5f03     .[.....]....._..
100236fc:	8003001e 0007001f 001f8807 90030007     ................
1002370c:	0007001f 001f9807 a0030007 0007001f     ................
1002371c:	001fa807 b0030007 0001001f 001fb204     ................
1002372c:	b3030000 0000001f 001fb404 b6040000     ................
1002373c:	0001001f 001fb803 bc070003 0000001f     ................
1002374c:	001fbd17 be030000 0000001f 001fbf17     ................
1002375c:	c2040002 0000001f 001fc303 c4040000     ................
1002376c:	0000001f 001fc604 c8030001 0003001f     ................
1002377c:	001fcc07 cd170000 0002001f 001fd003     ................
1002378c:	d2040001 0001001f 001fd604 d8030001     ................
1002379c:	0003001f 001fdd17 e0030002 0001001f     ................
100237ac:	001fe204 e5030002 0000001f 001fe604     ................
100237bc:	e8030001 0004001f 001fed17 f2040002     ................
100237cc:	0000001f 001ff303 f4040000 0000001f     ................
100237dc:	001ff604 f8030001 0003001f 001ffc07     ................
100237ec:	fd170000 0001001f 0020001c 0b01000a     .......... .....
100237fc:	00040020 00201010 16140005 00010020      ..... ..... ...
1002380c:	00201813 19120000 00000020 00201a15     .. ..... ..... .
1002381c:	1b130000 00010020 00201d12 1e150000     .... ..... .....
1002382c:	00000020 00201f13 20140000 00070020      ..... ....  ...
1002383c:	0020281a 291b0000 00000020 00202a01     .( ....) ....* .
1002384c:	2f1c0004 00000020 00203014 39130008     .../ ....0 ....9
1002385c:	00000020 00203a12 3b140000 00030020      ....: ....; ...
1002386c:	00203f0f 41140001 00020020 00204418     .? ....A ....D .
1002387c:	45150000 00000020 00204611 47140000     ...E ....F ....G
1002388c:	000a0020 00205218 53140000 00000020      ....R ....S ...
1002389c:	0020540f 55140000 00090020 00205f1c     .T ....U ...._ .
100238ac:	60010000 00040020 00206601 700e0009     ...` ....f ....p
100238bc:	00000020 00207105 740e0000 00050020      ....q ....t ...
100238cc:	00207a18 7d150002 00000020 00207e11     .z ....} ....~ .
100238dc:	7f050000 00000020 0020800e 8a180009     .... ..... .....
100238ec:	00020020 00208d15 8e110000 00000020      ..... ..... ...
100238fc:	00209005 a016000c 00200020 0020d00b     .. ..... . ... .
1002390c:	dd0a000c 00030020 0020e10b e20a0000     .... ..... .....
1002391c:	00020020 0020e50b 0019000b 00010021      ..... .....!...
1002392c:	00210208 03190000 00030021 00210708     ..!.....!.....!.
1002393c:	08190000 00010021 00210a04 0b080000     ....!.....!.....
1002394c:	00020021 00210e04 10080001 00020021     !.....!.....!...
1002395c:	00211304 14190000 00000021 00211508     ..!.....!.....!.
1002396c:	16190000 00010021 00211818 19080000     ....!.....!.....
1002397c:	00040021 00211e19 24080005 00000021     !.....!....$!...
1002398c:	00212519 26030000 00000021 00212719     .%!....&!....'!.
1002399c:	28080000 00000021 00212919 2a030000     ...(!....)!....*
100239ac:	00010021 00212c08 2e190001 00000021     !....,!.....!...
100239bc:	00212f04 30080000 00010021 00213203     ./!....0!....2!.
100239cc:	33080000 00000021 00213404 35060000     ...3!....4!....5
100239dc:	00030021 00213904 3a190000 00010021     !....9!....:!...
100239ec:	00213c04 3e080001 00010021 00214018     .<!....>!....@!.
100239fc:	45080004 00000021 00214604 4a190003     ...E!....F!....J
10023a0c:	00000021 00214b18 4c190000 00010021     !....K!....L!...
10023a1c:	00214e03 4f190000 00000021 0021500e     .N!....O!....P!.
10023a2c:	600d000f 00220021 00218303 850d0001     ...`!."...!.....
10023a3c:	00030021 0021890e 8a190000 00010021     !.....!.....!...
10023a4c:	00219018 95190004 00040021 00219a18     ..!.....!.....!.
10023a5c:	9c190001 00030021 0021a018 a1190000     ....!.....!.....
10023a6c:	00010021 0021a318 a4190000 00010021     !.....!.....!...
10023a7c:	0021a618 a7190000 00060021 0021ae18     ..!.....!.....!.
10023a8c:	af190000 001e0021 0021ce18 d0190001     ....!.....!.....
10023a9c:	00010021 0021d218 d3190000 00000021     !.....!.....!...
10023aac:	0021d418 d5190000 001e0021 0021f418     ..!.....!.....!.
10023abc:	0019010b 00070023 00230815 09110000     ....#.....#.....
10023acc:	00000023 00230a15 0b110000 00000023     #.....#.....#...
10023adc:	00230c19 20180013 00010023 00232219     ..#.... #...."#.
10023aec:	29150006 00000023 00232a11 2b190000     ...)#....*#....+
10023afc:	00500023 00237c18 7d190000 001d0023     #.P..|#....}#...
10023b0c:	00239b18 b4190018 00270023 0023dc18     ..#.....#.'...#.
10023b1c:	e2190005 00440023 00244019 600e000a     ....#.D..@$....`
10023b2c:	003b0024 00249c19 ea0e004d 00150024     $.;...$.M...$...
10023b3c:	00250019 b71800b6 00000025 0025b819     ..%.....%.....%.
10023b4c:	c1180008 00000025 0025c219 f8180035     ....%.....%.5...
10023b5c:	00070025 00260019 6f18006e 00000026     %.....&.n..o&...
10023b6c:	00267019 681500f7 00000027 00276911     .p&....h'....i'.
10023b7c:	6a150000 00000027 00276b11 6c150000     ...j'....k'....l
10023b8c:	00000027 00276d11 6e150000 00000027     '....m'....n'...
10023b9c:	00276f11 70150000 00000027 00277111     .o'....p'....q'.
10023bac:	72150000 00000027 00277311 74150000     ...r'....s'....t
10023bbc:	00000027 00277511 760e0000 001d0027     '....u'....v'...
10023bcc:	00279419 c018002b 00040027 0027c515     ..'.+...'.....'.
10023bdc:	c6110000 00000027 0027c718 e615001e     ....'.....'.....
10023bec:	00000027 0027e711 e8150000 00000027     '.....'.....'...
10023bfc:	0027e911 ea150000 00000027 0027eb11     ..'.....'.....'.
10023c0c:	ec150000 00000027 0027ed11 ee150000     ....'.....'.....
10023c1c:	00000027 0027ef11 f0180000 000f0027     '.....'.....'...
10023c2c:	00280019 001800ff 00820029 00298315     ..(.....).....).
10023c3c:	84110000 00000029 00298515 86110000     ....).....).....
10023c4c:	00000029 00298715 88110000 00000029     ).....).....)...
10023c5c:	00298915 8a110000 00000029 00298b15     ..).....).....).
10023c6c:	8c110000 00000029 00298d15 8e110000     ....).....).....
10023c7c:	00000029 00298f15 90110000 00000029     ).....).....)...
10023c8c:	00299115 92110000 00000029 00299315     ..).....).....).
10023c9c:	94110000 00000029 00299515 96110000     ....).....).....
10023cac:	00000029 00299715 98110000 00000029     ).....).....)...
10023cbc:	00299918 d815003e 00000029 0029d911     ..).>...).....).
10023ccc:	da150000 00000029 0029db11 dc180000     ....).....).....
10023cdc:	001f0029 0029fc15 fd110000 00000029     ).....).....)...
10023cec:	0029fe18 00190101 002f002b 002b3018     ..).....+./..0+.
10023cfc:	45190014 0001002b 002b4718 4d190005     ...E+....G+....M
10023d0c:	0026002b 002b7619 9719001f 0068002b     +.&..v+.....+.h.
10023d1c:	002c0003 71040070 0000002c 002c7203     ..,.p..q,....r,.
10023d2c:	74040001 0000002c 002c7503 77040001     ...t,....u,....w
10023d3c:	0004002c 002c7c05 7e030001 0065002c     ,....|,....~,.e.
10023d4c:	002ce404 e5190000 0005002c 002ceb03     ..,.....,.....,.
10023d5c:	ef0b0003 0002002c 002cf203 f9140001     ....,.....,.....
10023d6c:	0003002c 002cfd0e fe140000 0001002c     ,.....,.....,...
10023d7c:	002d0003 27030025 0000002d 002d2d03     ..-.%..'-....--.
10023d8c:	30060000 0037002d 002d6f05 70140000     ...0-.7..o-....p
10023d9c:	0000002d 002d7f0b 80060000 0016002d     -.....-.....-...
10023dac:	002da006 a8060006 0006002d 002db006     ..-.....-.....-.
10023dbc:	b8060006 0006002d 002dc006 c8060006     ....-.....-.....
10023dcc:	0006002d 002dd006 d8060006 0006002d     -.....-.....-...
10023ddc:	002de00b 0014001f 0001002e 002e0213     ..-.............
10023dec:	03120000 0000002e 002e0413 05120000     ................
10023dfc:	0000002e 002e0614 09130002 0000002e     ................
10023e0c:	002e0a12 0b140000 0000002e 002e0c13     ................
10023e1c:	0d120000 0000002e 002e0e14 17100008     ................
10023e2c:	0000002e 002e1814 1a100001 0000002e     ................
10023e3c:	002e1b14 1c130000 0000002e 002e1d12     ................
10023e4c:	1e140000 0001002e 002e2013 21120000     ......... .....!
10023e5c:	0000002e 002e2215 23110000 0000002e     .....".....#....
10023e6c:	002e2415 25110000 0000002e 002e2615     .$.....%.....&..
10023e7c:	27110000 0000002e 002e2815 29110000     ...'.....(.....)
10023e8c:	0000002e 002e2a14 2f050004 0000002e     .....*...../....
10023e9c:	002e3014 3a100009 0001002e 002e3c14     .0.....:.....<..
10023eac:	40100003 0000002e 002e4114 42150000     ...@.....A.....B
10023ebc:	0000002e 002e4314 5019000c 0001002e     .....C.....P....
10023ecc:	002e5214 55150002 0000002e 002e5611     .R.....U.....V..
10023edc:	57150000 0000002e 002e5811 59150000     ...W.....X.....Y
10023eec:	0000002e 002e5a11 5b150000 0000002e     .....Z.....[....
10023efc:	002e5c11 5d100000 0000002e 002e8019     .\.....]........
10023f0c:	9b190019 0058002e 002f0019 f01900d5     ......X.../.....
10023f1c:	000b002f 0030001c 01140000 00020030     /.....0.....0...
10023f2c:	00300419 05050000 00000030 00300606     ..0.....0.....0.
10023f3c:	070d0000 00000030 00300815 09110000     ....0.....0.....
10023f4c:	00000030 00300a15 0b110000 00000030     0.....0.....0...
10023f5c:	00300c15 0d110000 00000030 00300e15     ..0.....0.....0.
10023f6c:	0f110000 00000030 00301015 11110000     ....0.....0.....
10023f7c:	00000030 00301219 14150001 00000030     0.....0.....0...
10023f8c:	00301511 16150000 00000030 00301711     ..0.....0.....0.
10023f9c:	18150000 00000030 00301911 1a150000     ....0.....0.....
10023fac:	00000030 00301b11 1c100000 00000030     0.....0.....0...
10023fbc:	00301d15 1e110000 00010030 00302019     ..0.....0.... 0.
10023fcc:	210d0000 00080030 00302a0b 2e090003     ...!0....*0.....
10023fdc:	00010030 00303010 31050000 00040030     0....00....10...
10023fec:	00303619 380d0001 00020030 00303b05     .60....80....;0.
10023ffc:	3c060000 00000030 00303d14 3e190000     ...<0....=0....>
1002400c:	00010030 00304106 990b0055 00010030     0....A0.U...0...
1002401c:	00309b17 9d050001 00010030 00309f06     ..0.....0.....0.
1002402c:	a0100000 00000030 0030a106 fb140059     ....0.....0.Y...
1002403c:	00000030 0030fc05 ff060002 00000030     0.....0.....0...
1002404c:	00310506 3106002a 005d0031 00319019     ..1.*..11.]...1.
1002405c:	920e0001 00030031 00319619 a0060009     ....1.....1.....
1002406c:	001f0031 0031c019 f0060023 000f0031     1.....1.#...1...
1002407c:	00320019 200e001e 00090032 00322a19     ..2.... 2....*2.
1002408c:	480e001d 00070032 00325019 510e0000     ...H2....P2....Q
1002409c:	000e0032 00326019 800e001f 00090032     2....`2.....2...
100240ac:	00328a19 b10e0026 000e0032 0032c019     ..2.&...2.....2.
100240bc:	0006013f 19bf0034 004dc019 0006003f     ?...4.....M.?...
100240cc:	5214004e 00a01505 16060000 047600a0     N..R..........v.
100240dc:	00a49019 d0060036 002700a4 00a4f805     ....6.....'.....
100240ec:	fe140005 000100a4 00a50006 0c05010b     ................
100240fc:	000000a6 00a60d14 10060002 000f00a6     ................
1002410c:	00a6200c 2a060009 000100a6 00a64003     . .....*.....@..
1002411c:	6e06002d 000000a6 00a66f0b 700a0000     -..n.....o.....p
1002412c:	000200a6 00a67314 740b0000 000900a6     .....s.....t....
1002413c:	00a67e14 7f050000 000000a6 00a68003     .~..............
1002414c:	9c05001b 000100a6 00a69e0b a0060001     ................
1002415c:	004500a6 00a6e60d f00b0009 000100a6     ..E.............
1002416c:	00a6f214 00170005 001600a7 00a71705     ................
1002417c:	20170008 000100a7 00a72203 3004000d     ... .....".....0
1002418c:	000100a7 00a73203 7005003d 000000a7     .....2..=..p....
1002419c:	00a77104 79030007 000e00a7 00a78805     .q.....y........
100241ac:	89170000 000100a7 00a78b03 8e040002     ................
100241bc:	000000a7 00a78f06 90030000 000400a7     ................
100241cc:	00a79504 96030000 001800a7 00a7af04     ................
100241dc:	b0030000 001a00a7 00a7d003 d3040001     ................
100241ec:	000000a7 00a7d504 d6030000 000300a7     ................
100241fc:	00a7f205 f5030002 000100a7 00a7f706     ................
1002420c:	f8050000 000100a7 00a7fa04 fb060000     ................
1002421c:	000600a7 00a8020b 03060000 000200a8     ................
1002422c:	00a8060b 07060000 000300a8 00a80b0b     ................
1002423c:	0c060000 001600a8 00a82309 250b0001     .........#.....%
1002424c:	000100a8 00a82709 28190000 000300a8     .....'.....(....
1002425c:	00a82c0b 300e0000 000500a8 00a83619     .,.....0.....6..
1002426c:	38160001 000000a8 00a83919 40060000     ...8.....9.....@
1002427c:	003300a8 00a87414 80090003 000100a8     ..3..t..........
1002428c:	00a88206 b4090031 000f00a8 00a8c40b     ....1...........
1002429c:	ce140001 000100a8 00a8d00c e00b0009     ................
100242ac:	001100a8 00a8f206 f8140005 000200a8     ................
100242bc:	00a8fb06 fc140000 000000a8 00a8fd06     ................
100242cc:	ff0b0001 000000a8 00a9000c 0a060009     ................
100242dc:	001b00a9 00a9260b 2e140007 000100a9     .....&..........
100242ec:	00a93006 470b0016 000a00a9 00a95209     .0.....G.....R..
100242fc:	5f140001 000000a9 00a96006 800b001c     ..._.....`......
1002430c:	000200a9 00a98309 84060000 002e00a9     ................
1002431c:	00a9b30b b4090000 000100a9 00a9b60b     ................
1002432c:	ba090003 000100a9 00a9bc0b be090001     ................
1002433c:	000200a9 00a9c114 cf05000c 000000a9     ................
1002434c:	00a9d00c de140009 000100a9 00a9e006     ................
1002435c:	e50b0004 000000a9 00a9e605 e7060000     ................
1002436c:	000800a9 00a9f00c fa060009 000400a9     ................
1002437c:	00aa0006 290b0028 000500aa 00aa2f09     ....(..)...../..
1002438c:	310b0001 000100aa 00aa3309 350b0001     ...1.....3.....5
1002439c:	000100aa 00aa4006 430b0002 000000aa     .....@.....C....
100243ac:	00aa4406 4c0b0007 000000aa 00aa4d09     .D.....L.....M..
100243bc:	500c0000 000900aa 00aa5c14 60060003     ...P.....\.....`
100243cc:	000f00aa 00aa7005 71060000 000500aa     .....p.....q....
100243dc:	00aa7719 7a060002 000000aa 00aa7b09     .w.....z.....{..
100243ec:	7c0b0000 000000aa 00aa7d09 7e060000     ...|.....}.....~
100243fc:	003100aa 00aab00b b1060000 000000aa     ..1.............
1002440c:	00aab20b b5060002 000100aa 00aab70b     ................
1002441c:	b9060001 000400aa 00aabe0b c0060001     ................
1002442c:	000000aa 00aac10b c2060000 000000aa     ................
1002443c:	00aadb06 dd050001 000000aa 00aade14     ................
1002444c:	e0060001 000a00aa 00aaeb09 ec0b0000     ................
1002445c:	000100aa 00aaee09 f0140001 000100aa     ................
1002446c:	00aaf206 f3050000 000100aa 00aaf509     ................
1002447c:	f60b0000 000000aa 00ab0106 09060005     ................
1002448c:	000500ab 00ab1106 20060005 000600ab     ........... ....
1002449c:	00ab2806 30040006 002200ab 00ab5303     .(.....0.."..S..
100244ac:	54040000 000600ab 00ab5b17 5c050000     ...T.....[.....\
100244bc:	000300ab 00ab6004 69050008 000000ab     .....`.....i....
100244cc:	00ab6a17 70030001 004f00ab 00abc006     .j.....p..O.....
100244dc:	e3090022 000100ab 00abe50b e6090000     "...............
100244ec:	000100ab 00abe80b e9090000 000100ab     ................
100244fc:	00abeb14 ec090000 000000ab 00abed0b     ................
1002450c:	f00c0000 000900ab 00ac0006 b0062ba3     .............+..
1002451c:	001600d7 00d7cb06 00020030 07ff00d8     ........0.......
1002452c:	00f90006 7006016d 006900fa 00fb0004     ....m..p..i.....
1002453c:	13040006 000400fb 00fb1d06 1e0b0000     ................
1002454c:	000000fb 00fb1f06 29180009 000000fb     ...........)....
1002455c:	00fb2a06 3806000c 000400fb 00fb3e06     .*.....8.....>..
1002456c:	40060000 000100fb 00fb4306 46060001     ...@.....C.....F
1002457c:	006b00fb 00fbb217 d3060010 016a00fb     ..k...........j.
1002458c:	00fd3e11 3f150000 000000fd 00fd4019     .>.....?.....@..
1002459c:	5006000f 003f00fd 00fd9206 cf190035     ...P..?.....5...
100245ac:	000000fd 00fdf006 fc16000b 000000fd     ................
100245bc:	00fdfd19 000b0002 000f00fe 00fe1014     ................
100245cc:	17150006 000000fe 00fe1811 19140000     ................
100245dc:	000000fe 00fe200b 3014000f 000000fe     ..... .....0....
100245ec:	00fe3110 330f0001 000100fe 00fe3515     .1.....3.....5..
100245fc:	36110000 000000fe 00fe3715 38110000     ...6.....7.....8
1002460c:	000000fe 00fe3915 3a110000 000000fe     .....9.....:....
1002461c:	00fe3b15 3c110000 000000fe 00fe3d15     .;.....<.....=..
1002462c:	3e110000 000000fe 00fe3f15 40110000     ...>.....?.....@
1002463c:	000000fe 00fe4115 42110000 000000fe     .....A.....B....
1002464c:	00fe4315 44110000 000000fe 00fe4514     .C.....D.....E..
1002465c:	47150001 000000fe 00fe4811 49140000     ...G.....H.....I
1002466c:	000300fe 00fe4d0f 50140002 000200fe     .....M.....P....
1002467c:	00fe5414 58100003 000000fe 00fe5915     .T.....X.....Y..
1002468c:	5a110000 000000fe 00fe5b15 5c110000     ...Z.....[.....\
1002469c:	000000fe 00fe5d15 5e110000 000000fe     .....].....^....
100246ac:	00fe5f14 62180002 000000fe 00fe6310     ._.....b.....c..
100246bc:	64180000 000200fe 00fe6814 69160000     ...d.....h.....i
100246cc:	000000fe 00fe6a14 70060001 000400fe     .....j.....p....
100246dc:	00fe7606 ff010086 000000fe 00ff0114     .v..............
100246ec:	04160002 000000ff 00ff0514 08150002     ................
100246fc:	000000ff 00ff0911 0a140000 000000ff     ................
1002470c:	00ff0b18 0c140000 000000ff 00ff0d10     ................
1002471c:	0e140000 000100ff 00ff100c 1a140009     ................
1002472c:	000100ff 00ff1c18 1f140002 000100ff     ................
1002473c:	00ff2103 3b150019 000000ff 00ff3c14     .!.....;.....<..
1002474c:	3d110000 000000ff 00ff3e17 3f0f0000     ...=.....>.....?
1002475c:	000000ff 00ff4017 41030000 001900ff     .....@.....A....
1002476c:	00ff5b15 5c180000 000000ff 00ff5d11     .[.....\.....]..
1002477c:	5e180000 000000ff 00ff5f15 60110000     ...^....._.....`
1002478c:	000000ff 00ff6114 62150000 000000ff     .....a.....b....
1002479c:	00ff6311 64140000 000100ff 00ff6606     .c.....d.....f..
100247ac:	70050009 000000ff 00ff7106 9e05002c     ...p.....q..,...
100247bc:	000100ff 00ffa006 c206001e 000500ff     ................
100247cc:	00ffca06 d2060005 000500ff 00ffda06     ................
100247dc:	e0160002 000100ff 00ffe218 e3170000     ................
100247ec:	000000ff 00ffe419 e5160000 000100ff     ................
100247fc:	00ffe819 e9180000 000300ff 00ffed19     ................
1002480c:	f9010001 000200ff 00fffc19 00060001     ................
1002481c:	000b0100 01000d06 28060019 00120100     ...........(....
1002482c:	01003c06 3f060001 000e0100 01005006     .<.....?.....P..
1002483c:	8006000d 007a0100 01010014 070e0002     ......z.........
1002484c:	002c0101 01013719 400d0008 00340101     ..,..7.....@..4.
1002485c:	0101750e 79190003 00100101 01018a0e     .u.....y........
1002486c:	8c190001 00020101 01019019 a019000c     ................
1002487c:	00000101 0101d019 fd0b002c 00000101     ........,.......
1002488c:	01028006 a006001c 00300102 0102e00b     ..........0.....
1002489c:	e10e0000 001a0102 01030006 200e001f     ............... 
100248ac:	00030103 01032d06 410d0013 00000103     .....-.....A....
100248bc:	01034206 4a0d0007 00000103 01035006     .B.....J.....P..
100248cc:	760b0025 00040103 01038006 9f14001d     %..v............
100248dc:	00000103 0103a006 c8060023 00070103     ........#.......
100248ec:	0103d014 d10d0000 00040103 01040003     ................
100248fc:	5006004f 004d0104 0104a00c b0030009     O..P..M.........
1002490c:	00230104 0104d803 00060023 00270105     ..#.....#.....'.
1002491c:	01053006 6f140033 00000105 01057003     .0..3..o.....p..
1002492c:	7c03000a 000e0105 01058c03 94030006     ...|............
1002493c:	00010105 01059703 a303000a 000e0105     ................
1002494c:	0105b303 bb030006 00010105 01060006     ................
1002495c:	40060136 00150107 01076006 80050007     6..@.....`......
1002496c:	00050107 01078705 b2050029 00080107     ........).......
1002497c:	01080006 08060005 00000108 01080a06     ................
1002498c:	3706002b 00010108 01083c06 3f060000     +..7.....<.....?
1002499c:	00160108 01085714 580e0000 00070108     .....W.....X....
100249ac:	01086006 77190016 00010108 0108790e     .`.....w.....y..
100249bc:	80060006 001e0108 0108a70e e0060008     ................
100249cc:	00120108 0108f406 fb0e0001 00040108     ................
100249dc:	01090006 160e0015 00050109 01091f14     ................
100249ec:	20060000 00190109 01093f14 80060000     ... .....?......
100249fc:	00370109 0109bc0e be060001 00010109     ..7.............
10024a0c:	0109c00e d20e000f 002d0109 010a0006     ..........-.....
10024a1c:	010b0000 0002010a 010a050b 0c0b0001     ................
10024a2c:	0003010a 010a1006 15060003 0002010a     ................
10024a3c:	010a1906 380b001c 0002010a 010a3f0b     .......8.....?..
10024a4c:	400e0000 0008010a 010a5014 60060008     ...@.....P.....`
10024a5c:	001c010a 010a7d0e 7f140001 0000010a     .....}..........
10024a6c:	010a8006 9d0e001c 0002010a 010ac006     ................
10024a7c:	c8190007 0000010a 010ac906 e50b001b     ................
10024a8c:	0001010a 010aeb0e f0140004 0006010a     ................
10024a9c:	010b0006 39140035 0006010b 010b4006     ....5..9.....@..
10024aac:	580e0015 0007010b 010b6006 780e0012     ...X.....`.....x
10024abc:	0007010b 010b8006 99140011 0003010b     ................
10024acc:	010ba90e 00060006 0048010c 010c8003     ..........H.....
10024adc:	c0030032 0032010c 010cfa0e 00060005     2.....2.........
10024aec:	0023010d 010d240b 300c0003 0009010d     ..#..$.....0....
10024afc:	010e600e 8006001e 0029010e 010eab0b     .`........).....
10024b0c:	ad100001 0000010e 010eb006 fd0b0001     ................
10024b1c:	0002010e 010f0006 1d0e001c 0009010f     ................
10024b2c:	010f2706 30060000 0015010f 010f460b     .'.....0.....F..
10024b3c:	510e000a 0003010f 010f5514 70060004     ...Q.....U.....p
10024b4c:	0011010f 010f820b 86140003 0003010f     ................
10024b5c:	010fb006 c50e0014 0006010f 010fe006     ................
10024b6c:	00090016 00000110 0110010b 02090000     ................
10024b7c:	00000110 01100306 380b0034 000e0110     ........4..8....
10024b8c:	01104714 520e0006 00130110 0110660c     .G.....R.....f..
10024b9c:	700b0009 00000110 01107106 730b0001     ...p.....q.....s
10024bac:	00010110 01107506 7f0b0000 00020110     .....u..........
10024bbc:	01108209 83060000 002c0110 0110b009     ..........,.....
10024bcc:	b30b0002 00030110 0110b709 b90b0001     ................
10024bdc:	00010110 0110bb14 bd010001 00000110     ................
10024bec:	0110be14 c20b0003 00000110 0110cd01     ................
10024bfc:	d0060000 00180110 0110f00c 000b0009     ................
10024c0c:	00020111 01110306 270b0023 00040111     ........#..'....
10024c1c:	01112c09 2d0b0000 00070111 0111360c     .,.....-.....6..
10024c2c:	40140009 00030111 01114406 45090000     ...@.....D.....E
10024c3c:	00010111 01114706 50060000 00220111     .....G.....P..".
10024c4c:	0111730b 74140000 00010111 01117606     .s.....t.....v..
10024c5c:	800b0000 00010111 01118209 83060000     ................
10024c6c:	002f0111 0111b309 b60b0002 00080111     ../.............
10024c7c:	0111bf09 c1060001 00030111 0111c514     ................
10024c8c:	c90b0003 00030111 0111cd14 ce090000     ................
10024c9c:	00000111 0111cf0b d00c0000 00090111     ................
10024cac:	0111da06 db140000 00000111 0111dc06     ................
10024cbc:	dd140000 00020111 0111e10e 00060013     ................
10024ccc:	00110112 01121306 2c090018 00020112     ...........,....
10024cdc:	01122f0b 32090002 00010112 0112340b     ./.....2.....4..
10024cec:	35090000 00000112 0112360b 38140001     ...5.....6.....8
10024cfc:	00050112 01123e0b 3f060000 00010112     .....>.....?....
10024d0c:	0112410b 80060000 00060112 01128806     .A..............
10024d1c:	8a060000 00030112 01128f06 9f06000e     ................
10024d2c:	00090112 0112a914 b0060000 002e0112     ................
10024d3c:	0112df0b e0090000 00020112 0112e30b     ................
10024d4c:	f00c0007 00090112 0113000b 02090001     ................
10024d5c:	00010113 01130506 0f060007 00010113     ................
10024d6c:	01131306 2a060015 00060113 01133206     .......*.....2..
10024d7c:	35060001 00040113 01133b0b 3d060001     ...5.....;.....=
10024d8c:	00000113 01133e09 400b0001 00000113     .....>.....@....
10024d9c:	01134109 47090003 00010113 01134b09     .A.....G.....K..
10024dac:	50060002 00000113 01135709 5d060000     ...P.....W.....]
10024dbc:	00040113 01136209 660b0001 00060113     .....b.....f....
10024dcc:	0113700b 00060004 00340114 01143509     .p........4..5..
10024ddc:	380b0002 00070114 01144009 420b0001     ...8.....@.....B
10024dec:	00020114 01144509 460b0000 00000114     .....E.....F....
10024dfc:	01144706 4b140003 00040114 0114500c     .G.....K.....P..
10024e0c:	5a140009 00010114 01145d14 5e0b0000     ...Z.....].....^
10024e1c:	00000114 01145f06 80060002 002f0114     ....._......../.
10024e2c:	0114b009 b30b0002 00050114 0114b909     ................
10024e3c:	ba0b0000 00000114 0114bb09 bf0b0003     ................
10024e4c:	00010114 0114c109 c20b0000 00010114     ................
10024e5c:	0114c406 c6140001 00000114 0114c706     ................
10024e6c:	d00c0000 00090114 01158006 af09002e     ................
10024e7c:	00020115 0115b20b b8090003 00030115     ................
10024e8c:	0115bc0b be090001 00000115 0115bf0b     ................
10024e9c:	c1140001 00160115 0115d806 dc0b0003     ................
10024eac:	00010115 01160006 3009002f 00020116     ......../..0....
10024ebc:	0116330b 3b090007 00010116 01163d0b     .3.....;.....=..
10024ecc:	3e090000 00000116 01163f0b 41140001     ...>.....?.....A
10024edc:	00020116 01164406 500c0000 00090116     .....D.....P....
10024eec:	01166014 8006000c 002a0116 0116ab0b     .`........*.....
10024efc:	ac090000 00000116 0116ad0b ae090000     ................
10024f0c:	00010116 0116b00b b6090005 00000116     ................
10024f1c:	0116b70b b8060000 00000116 0116b914     ................
10024f2c:	c00c0000 00090116 01170006 1d0b001a     ................
10024f3c:	00020117 01172009 220b0001 00030117     ..... ....."....
10024f4c:	01172609 270b0000 00040117 0117300c     .&.....'.....0..
10024f5c:	3a0e0009 00010117 01173c14 3f190002     ...:.....<.....?
10024f6c:	00000117 01174006 00060006 002b0118     .....@........+.
10024f7c:	01182c09 2f0b0002 00080118 01183809     .,...../.....8..
10024f8c:	390b0000 00010118 01183b14 a0030000     ...9.....;......
10024f9c:	003f0118 0118e00c ea0e0009 00080118     ..?.............
10024fac:	0118ff06 09060007 00000119 01190c06     ................
10024fbc:	15060007 00010119 01191806 30090017     ...............0
10024fcc:	00050119 01193709 3b0b0001 00010119     .....7.....;....
10024fdc:	01193d09 3e0b0000 00000119 01193f06     .=.....>.....?..
10024fec:	40090000 00000119 01194106 42090000     ...@.....A.....B
10024ffc:	00000119 0119430b 44140000 00020119     .....C.....D....
1002500c:	0119500c a0060009 00070119 0119aa06     .P..............
1002501c:	d1090026 00020119 0119d40b da0b0003     &...............
1002502c:	00010119 0119dc09 e00b0003 00000119     ................
1002503c:	0119e106 e2140000 00000119 0119e306     ................
1002504c:	e4090000 00000119 011a0006 010b0000     ................
1002505c:	0009011a 011a0b06 330b0027 0005011a     ........'..3....
1002506c:	011a3909 3a060000 0000011a 011a3b0b     .9.....:.....;..
1002507c:	3f140003 0007011a 011a470b 50060000     ...?.....G.....P
1002508c:	0000011a 011a510b 57090005 0001011a     .....Q.....W....
1002509c:	011a590b 5c060002 002d011a 011a8a0b     .Y.....\..-.....
100250ac:	9709000c 0000011a 011a980b 9a140001     ................
100250bc:	0002011a 011a9d06 9e140000 0004011a     ................
100250cc:	011ab006 00140048 0009011b 011c0006     ....H...........
100250dc:	0a060008 0024011c 011c2f09 300b0000     ......$../.....0
100250ec:	0006011c 011c380b 3e090005 0000011c     .....8.....>....
100250fc:	011c3f0b 40060000 0000011c 011c4114     .?.....@.....A..
1002510c:	500c0004 0009011c 011c5a0e 70140012     ...P.....Z.....p
1002511c:	0001011c 011c7206 920b001d 0015011c     .....r..........
1002512c:	011ca909 aa0b0000 0006011c 011cb109     ................
1002513c:	b20b0000 0001011c 011cb409 b50b0000     ................
1002514c:	0001011c 011d0006 08060006 0001011d     ................
1002515c:	011d0b06 310b0025 0005011d 011d3a0b     ....%..1.....:..
1002516c:	3c0b0000 0001011d 011d3f0b 46060006     ...<.....?.....F
1002517c:	0000011d 011d470b 500c0000 0009011d     .....G.....P....
1002518c:	011d6006 67060005 0001011d 011d6a06     .`.....g.....j..
1002519c:	8a09001f 0004011d 011d900b 93090001     ................
100251ac:	0001011d 011d950b 96090000 0000011d     ................
100251bc:	011d970b 98060000 0000011d 011da00c     ................
100251cc:	e0060009 0012011e 011ef30b f5090001     ................
100251dc:	0001011e 011ef714 000b0001 0001011f     ................
100251ec:	011f0206 03090000 0000011f 011f0406     ................
100251fc:	1206000c 0021011f 011f3409 360b0001     ......!..4.....6
1002520c:	0004011f 011f3e09 400b0001 0000011f     .....>.....@....
1002521c:	011f4109 420b0000 0000011f 011f4314     .A.....B.....C..
1002522c:	500c000c 0009011f 011fb006 c00e0000     ...P............
1002523c:	0014011f 011fd519 dd160007 0003011f     ................
1002524c:	011fe119 ff140010 0000011f 01200006     .............. .
1002525c:	000d0399 006e0124 01247014 80060004     ....$.n..p$.....
1002526c:	00c30124 012f9006 f1140060 0001012f     $...../.`.../...
1002527c:	01300006 3001042f 000f0134 0134400b     ..0./..04....@4.
1002528c:	41060000 00050134 0134470b 0006000e     ...A4....G4.....
1002529c:	02460144 01680006 40060238 001e016a     D.F...h.8..@j...
100252ac:	016a600c 6e140009 0001016a 016a7006     .`j....nj....pj.
100252bc:	c00c004e 0009016a 016ad006 f00b001d     N...j.....j.....
100252cc:	0004016a 016af514 00060000 002f016b     j.....j.....k./.
100252dc:	016b300b 37140006 0004016b 016b3c19     .0k....7k....<k.
100252ec:	40050003 0003016b 016b4414 45190000     ...@k....Dk....E
100252fc:	0000016b 016b500c 5b0e0009 0006016b     k....Pk....[k...
1002530c:	016b6306 7d060014 0012016b 016e4003     .ck....}k....@n.
1002531c:	800e003f 0016016e 016e9714 00060003     ?...n.....n.....
1002532c:	004a016f 016f4f0b 50060000 0000016f     o.J..Oo....Po...
1002533c:	016f5109 8f0b0036 0003016f 016f9305     .Qo.6...o.....o.
1002534c:	e005000c 0001016f 016fe214 e3050000     ....o.....o.....
1002535c:	0000016f 016fe40b f0090000 0001016f     o.....o.....o...
1002536c:	01700006 000617f7 04d50188 018d0006     ..p.............
1002537c:	f0050008 000301af 01aff505 fd050006     ................
1002538c:	000101af 01b00006 32060122 000001b1     ........"..2....
1002539c:	01b15006 55060002 000001b1 01b16406     .P.....U.....d..
100253ac:	70060003 018b01b1 01bc0006 7006006a     ...p........j..p
100253bc:	000c01bc 01bc8006 90060008 000901bc     ................
100253cc:	01bc9c19 9d0b0000 000101bc 01bc9f14     ................
100253dc:	a0010000 000301bc 01cf000b 300b002d     ............-..0
100253ec:	001601cf 01cf5019 00190073 00f501d0     .....P..s.......
100253fc:	01d10019 29190026 003b01d1 01d16509     ....&..)..;..e..
1002540c:	670b0001 000201d1 01d16a19 6d090002     ...g.....j.....m
1002541c:	000501d1 01d17301 7b0b0007 000701d1     .....s.....{....
1002542c:	01d18319 850b0001 000601d1 01d18c19     ................
1002543c:	aa0b001d 000301d1 01d1ae19 0019003c     ............<...
1002544c:	004101d2 01d2420b 45190002 000001d2     ..A..B.....E....
1002545c:	01d2c00e e00e0013 001301d2 01d30019     ................
1002546c:	600e0056 001801d3 01d40008 1a040019     V..`............
1002547c:	001901d4 01d43408 4e040019 000601d4     .....4.....N....
1002548c:	01d45604 68080011 001901d4 01d48204     .V.....h........
1002549c:	9c080019 000001d4 01d49e08 a2080001     ................
100254ac:	000001d4 01d4a508 a9080001 000301d4     ................
100254bc:	01d4ae08 b6040007 000301d4 01d4bb04     ................
100254cc:	bd040000 000601d4 01d4c504 d008000a     ................
100254dc:	001901d4 01d4ea04 04080019 000101d5     ................
100254ec:	01d50708 0d080003 000701d5 01d51608     ................
100254fc:	1e040006 001901d5 01d53808 3b080001     .........8.....;
1002550c:	000301d5 01d54008 46080004 000001d5     .....@.....F....
1002551c:	01d54a08 52040006 001901d5 01d56c08     .J.....R.....l..
1002552c:	86040019 001901d5 01d5a008 ba040019     ................
1002553c:	001901d5 01d5d408 ee040019 001901d5     ................
1002554c:	01d60808 22040019 001901d6 01d63c08     .......".....<..
1002555c:	56040019 001901d6 01d67008 8a040019     ...V.....p......
1002556c:	001b01d6 01d6a808 c1180018 000001d6     ................
1002557c:	01d6c204 db180018 000001d6 01d6dc04     ................
1002558c:	e2080005 001801d6 01d6fb18 fc040000     ................
1002559c:	001801d6 01d71518 16040000 000501d7     ................
100255ac:	01d71c08 35180018 000001d7 01d73604     .......5.....6..
100255bc:	4f180018 000001d7 01d75004 56080005     ...O.....P.....V
100255cc:	001801d7 01d76f18 70040000 001801d7     .....o.....p....
100255dc:	01d78918 8a040000 000501d7 01d79008     ................
100255ec:	a9180018 000001d7 01d7aa04 c3180018     ................
100255fc:	000001d7 01d7c404 ca080005 000001d7     ................
1002560c:	01d7cb04 ce0c0000 003101d7 01d80019     ..........1.....
1002561c:	000b01ff 003601da 01da3719 3b0b0003     ......6..7.....;
1002562c:	003101da 01da6d19 750b0007 000001da     ..1..m.....u....
1002563c:	01da7619 840b000d 000001da 01da8519     .v..............
1002564c:	87140001 000401da 01da9b0b a10b0004     ................
1002565c:	000e01da 01df0004 0a060009 000001df     ................
1002566c:	01df0b04 25040013 000501df 01e0000b     .......%........
1002567c:	080b0006 001001e0 01e01b0b 230b0006     ...............#
1002568c:	000101e0 01e0260b 30050004 003d01e0     .....&.....0..=.
1002569c:	01e08f0b 00060000 002c01e1 01e1300b     ..........,..0..
100256ac:	37050006 000601e1 01e1400c 4e060009     ...7.....@.....N
100256bc:	000001e1 01e14f19 90060000 001d01e2     .....O..........
100256cc:	01e2ae0b c0060000 002b01e2 01e2ec0b     ..........+.....
100256dc:	f00c0003 000901e2 01e2ff16 d0060000     ................
100256ec:	001a01e4 01e4eb05 ec0b0000 000301e4     ................
100256fc:	01e4f00c e0060009 000601e7 01e7e806     ................
1002570c:	ed060003 000101e7 01e7f006 0006000e     ................
1002571c:	00c401e8 01e8c70e d00b0008 000601e8     ................
1002572c:	01e90003 440b0043 000601e9 01e94b05     ....C..D.....K..
1002573c:	500c0000 000901e9 01e95e14 710e0001     ...P.....^.....q
1002574c:	003a01ec 01ecac19 ad0e0000 000201ec     ..:.............
1002575c:	01ecb016 b10e0000 000301ec 01ed010e     ................
1002576c:	2e19002c 000001ed 01ed2f0e 0006000e     ,......../......
1002577c:	000301ee 01ee0506 2106001a 000101ee     ...........!....
1002578c:	01ee2406 27060000 000001ee 01ee2906     .$.....'.....)..
1002579c:	34060009 000301ee 01ee3906 3b060000     ...4.....9.....;
100257ac:	000001ee 01ee4206 47060000 000001ee     .....B.....G....
100257bc:	01ee4906 4b060000 000001ee 01ee4d06     .I.....K.....M..
100257cc:	51060002 000101ee 01ee5406 57060000     ...Q.....T.....W
100257dc:	000001ee 01ee5906 5b060000 000001ee     .....Y.....[....
100257ec:	01ee5d06 5f060000 000001ee 01ee6106     .]....._.....a..
100257fc:	64060001 000001ee 01ee6706 6c060003     ...d.....g.....l
1002580c:	000601ee 01ee7406 79060003 000301ee     .....t.....y....
1002581c:	01ee7e06 80060000 000901ee 01ee8b06     .~..............
1002582c:	a1060010 000201ee 01eea506 ab060004     ................
1002583c:	001001ee 01eef018 00190001 002b01f0     ..............+.
1002584c:	01f03019 a0190063 000e01f0 01f0b119     .0..c...........
1002585c:	c119000e 000e01f0 01f0d119 000e0024     ............$...
1002586c:	000c01f1 01f10d19 e61900a0 001c01f1     ................
1002587c:	01f21019 4019002b 000801f2 01f25019     ....+..@.....P..
1002588c:	60190001 000501f2 01f30019 fb1700fa     ...`............
1002589c:	000401f3 01f40019 dc1902d7 001001f6     ................
100258ac:	01f6f019 0019000c 007601f7 01f77b19     ..........v..{..
100258bc:	e019005e 000b01f7 01f7f019 00190000     ^...............
100258cc:	000b01f8 01f81019 50190037 000901f8     ........7..P....
100258dc:	01f86019 90190027 001d01f8 01f8b019     .`..'...........
100258ec:	00190001 015301f9 01fa6019 7019000d     ......S..`.....p
100258fc:	000c01fa 01fa8019 90190008 002d01fa     ..............-.
1002590c:	01fabf19 ce190006 000d01fa 01fae019     ................
1002591c:	f0190008 000801fa 01fb0019 94190092     ................
1002592c:	003601fb 01fbf00c 00060009 a6df0200     ..6.............
1002593c:	02a70006 40061039 00dd02b7 02b82006     ....9..@..... ..
1002594c:	b0061681 1d3002ce 02f80006 0006021d     ......0.........
1002595c:	134a0300 03135006 0101105f 00000e00     ..J..P.._.......
1002596c:	0e002001 000b005f 00ef0e01 6c6f562f     . .._......./Vol
1002597c:	73656d75 7461642f 656a2f61 6e696b6e     umes/data/jenkin
1002598c:	6f772f73 70736b72 2f656361 2d554e47     s/workspace/GNU-
1002599c:	6c6f6f74 69616863 72612f6e 32312d6d     toolchain/arm-12
100259ac:	6372732f 77656e2f 2d62696c 77677963     /src/newlib-cygw
100259bc:	6e2f6e69 696c7765 696c2f62 732f6362     in/newlib/libc/s
100259cc:	696c6474 64672f62 2d616f74 68746567     tdlib/gdtoa-geth
100259dc:	632e7865 00000000                       ex.c....

100259e4 <__hexdig>:
	...
10025a14:	13121110 17161514 00001918 00000000     ................
10025a24:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...
10025a44:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...

10025ae4 <_init>:
10025ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10025ae6:	bf00      	nop
10025ae8:	bcf8      	pop	{r3, r4, r5, r6, r7}
10025aea:	bc08      	pop	{r3}
10025aec:	469e      	mov	lr, r3
10025aee:	4770      	bx	lr

10025af0 <_fini>:
10025af0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10025af2:	bf00      	nop
10025af4:	bcf8      	pop	{r3, r4, r5, r6, r7}
10025af6:	bc08      	pop	{r3}
10025af8:	469e      	mov	lr, r3
10025afa:	4770      	bx	lr
10025afc:	0000      	movs	r0, r0
	...

10025b00 <__MXC_FLC_Com_Read_veneer>:
10025b00:	f85f f000 	ldr.w	pc, [pc]	@ 10025b04 <__MXC_FLC_Com_Read_veneer+0x4>
10025b04:	20000ba1 	.word	0x20000ba1

10025b08 <__MXC_FLC_Com_Write_veneer>:
10025b08:	f85f f000 	ldr.w	pc, [pc]	@ 10025b0c <__MXC_FLC_Com_Write_veneer+0x4>
10025b0c:	20000ac9 	.word	0x20000ac9

10025b10 <__MXC_FLC_RevA_Write32Using128_veneer>:
10025b10:	f85f f000 	ldr.w	pc, [pc]	@ 10025b14 <__MXC_FLC_RevA_Write32Using128_veneer+0x4>
10025b14:	20000939 	.word	0x20000939

10025b18 <__MXC_FLC_PageErase_veneer>:
10025b18:	f85f f000 	ldr.w	pc, [pc]	@ 10025b1c <__MXC_FLC_PageErase_veneer+0x4>
10025b1c:	200006c9 	.word	0x200006c9

10025b20 <__EH_FRAME_BEGIN__>:
10025b20:	00000010 00000000 00527a01 010e7c02     .........zR..|..
10025b30:	000d0c1b 00000038 00000018 fffefce4     ....8...........
10025b40:	0000009e 100e5100 03850484 01870286     .....Q..........
10025b50:	c5c6c75b 4c000ec4 0a0b420a 100e0b42     [......L.B..B...
10025b60:	03850484 01870286 c5c6c751 00000ec4     ........Q.......
10025b70:	00000010 00000000 00527a01 010e7c02     .........zR..|..
10025b80:	000d0c1b 00000014 00000018 fffefd34     ............4...
10025b90:	00000134 0a710200 00000b43 00000010     4.....q.C.......
10025ba0:	00000000 00527a01 010e7c02 000d0c1b     .....zR..|......
10025bb0:	0000001c 00000018 fffefe48 000000d8     ........H.......
10025bc0:	080e4100 02840185 4a0a4902 0b41c4c5     .A.......I.J..A.

10025bd0 <__FRAME_END__>:
10025bd0:	00000000                                ....

Disassembly of section .data:

20000000 <ConsoleUart>:
20000000:	40042000                                . .@

20000004 <overflows>:
20000004:	ffffffff                                ....

20000008 <flc_int>:
20000008:	40029000                                ...@

2000000c <interruptCheck>:
2000000c:	00001008                                ....

20000010 <__malloc_sbrk_base>:
20000010:	ffffffff                                ....

20000014 <__malloc_trim_threshold>:
20000014:	00020000                                ....

20000018 <__malloc_av_>:
	...
20000020:	20000018 20000018 20000020 20000020     ... ...  ..  .. 
20000030:	20000028 20000028 20000030 20000030     (.. (.. 0.. 0.. 
20000040:	20000038 20000038 20000040 20000040     8.. 8.. @.. @.. 
20000050:	20000048 20000048 20000050 20000050     H.. H.. P.. P.. 
20000060:	20000058 20000058 20000060 20000060     X.. X.. `.. `.. 
20000070:	20000068 20000068 20000070 20000070     h.. h.. p.. p.. 
20000080:	20000078 20000078 20000080 20000080     x.. x.. ... ... 
20000090:	20000088 20000088 20000090 20000090     ... ... ... ... 
200000a0:	20000098 20000098 200000a0 200000a0     ... ... ... ... 
200000b0:	200000a8 200000a8 200000b0 200000b0     ... ... ... ... 
200000c0:	200000b8 200000b8 200000c0 200000c0     ... ... ... ... 
200000d0:	200000c8 200000c8 200000d0 200000d0     ... ... ... ... 
200000e0:	200000d8 200000d8 200000e0 200000e0     ... ... ... ... 
200000f0:	200000e8 200000e8 200000f0 200000f0     ... ... ... ... 
20000100:	200000f8 200000f8 20000100 20000100     ... ... ... ... 
20000110:	20000108 20000108 20000110 20000110     ... ... ... ... 
20000120:	20000118 20000118 20000120 20000120     ... ...  ..  .. 
20000130:	20000128 20000128 20000130 20000130     (.. (.. 0.. 0.. 
20000140:	20000138 20000138 20000140 20000140     8.. 8.. @.. @.. 
20000150:	20000148 20000148 20000150 20000150     H.. H.. P.. P.. 
20000160:	20000158 20000158 20000160 20000160     X.. X.. `.. `.. 
20000170:	20000168 20000168 20000170 20000170     h.. h.. p.. p.. 
20000180:	20000178 20000178 20000180 20000180     x.. x.. ... ... 
20000190:	20000188 20000188 20000190 20000190     ... ... ... ... 
200001a0:	20000198 20000198 200001a0 200001a0     ... ... ... ... 
200001b0:	200001a8 200001a8 200001b0 200001b0     ... ... ... ... 
200001c0:	200001b8 200001b8 200001c0 200001c0     ... ... ... ... 
200001d0:	200001c8 200001c8 200001d0 200001d0     ... ... ... ... 
200001e0:	200001d8 200001d8 200001e0 200001e0     ... ... ... ... 
200001f0:	200001e8 200001e8 200001f0 200001f0     ... ... ... ... 
20000200:	200001f8 200001f8 20000200 20000200     ... ... ... ... 
20000210:	20000208 20000208 20000210 20000210     ... ... ... ... 
20000220:	20000218 20000218 20000220 20000220     ... ...  ..  .. 
20000230:	20000228 20000228 20000230 20000230     (.. (.. 0.. 0.. 
20000240:	20000238 20000238 20000240 20000240     8.. 8.. @.. @.. 
20000250:	20000248 20000248 20000250 20000250     H.. H.. P.. P.. 
20000260:	20000258 20000258 20000260 20000260     X.. X.. `.. `.. 
20000270:	20000268 20000268 20000270 20000270     h.. h.. p.. p.. 
20000280:	20000278 20000278 20000280 20000280     x.. x.. ... ... 
20000290:	20000288 20000288 20000290 20000290     ... ... ... ... 
200002a0:	20000298 20000298 200002a0 200002a0     ... ... ... ... 
200002b0:	200002a8 200002a8 200002b0 200002b0     ... ... ... ... 
200002c0:	200002b8 200002b8 200002c0 200002c0     ... ... ... ... 
200002d0:	200002c8 200002c8 200002d0 200002d0     ... ... ... ... 
200002e0:	200002d8 200002d8 200002e0 200002e0     ... ... ... ... 
200002f0:	200002e8 200002e8 200002f0 200002f0     ... ... ... ... 
20000300:	200002f8 200002f8 20000300 20000300     ... ... ... ... 
20000310:	20000308 20000308 20000310 20000310     ... ... ... ... 
20000320:	20000318 20000318 20000320 20000320     ... ...  ..  .. 
20000330:	20000328 20000328 20000330 20000330     (.. (.. 0.. 0.. 
20000340:	20000338 20000338 20000340 20000340     8.. 8.. @.. @.. 
20000350:	20000348 20000348 20000350 20000350     H.. H.. P.. P.. 
20000360:	20000358 20000358 20000360 20000360     X.. X.. `.. `.. 
20000370:	20000368 20000368 20000370 20000370     h.. h.. p.. p.. 
20000380:	20000378 20000378 20000380 20000380     x.. x.. ... ... 
20000390:	20000388 20000388 20000390 20000390     ... ... ... ... 
200003a0:	20000398 20000398 200003a0 200003a0     ... ... ... ... 
200003b0:	200003a8 200003a8 200003b0 200003b0     ... ... ... ... 
200003c0:	200003b8 200003b8 200003c0 200003c0     ... ... ... ... 
200003d0:	200003c8 200003c8 200003d0 200003d0     ... ... ... ... 
200003e0:	200003d8 200003d8 200003e0 200003e0     ... ... ... ... 
200003f0:	200003e8 200003e8 200003f0 200003f0     ... ... ... ... 
20000400:	200003f8 200003f8 20000400 20000400     ... ... ... ... 
20000410:	20000408 20000408 20000410 20000410     ... ... ... ... 

20000420 <__sglue>:
20000420:	00000000 00000003 20001488              ........... 

2000042c <__global_locale>:
2000042c:	00000043 00000000 00000000 00000000     C...............
	...
2000044c:	00000043 00000000 00000000 00000000     C...............
	...
2000046c:	00000043 00000000 00000000 00000000     C...............
	...
2000048c:	00000043 00000000 00000000 00000000     C...............
	...
200004ac:	00000043 00000000 00000000 00000000     C...............
	...
200004cc:	00000043 00000000 00000000 00000000     C...............
	...
200004ec:	00000043 00000000 00000000 00000000     C...............
	...
2000050c:	1001c195 10016dfd 00000000 1001eae0     .....m..........
2000051c:	1001e7f8 1001e760 1001e760 1001e760     ....`...`...`...
2000052c:	1001e760 1001e760 1001e760 1001e760     `...`...`...`...
2000053c:	1001e760 1001e760 ffffffff ffffffff     `...`...........
2000054c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000574:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000598 <_impure_ptr>:
20000598:	200005a0 00000000                       ... ....

200005a0 <_impure_data>:
200005a0:	00000000 20001488 200014f0 20001558     ....... ... X.. 
	...
20000638:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20000648:	0005deec 0000000b 00000000 00000000     ................
	...

200006c0 <__atexit_recursive_mutex>:
200006c0:	200015cc                                ... 

200006c4 <MXC_FLC_Busy>:
    return MXC_FLC_RevA_Busy();
200006c4:	f000 b864 	b.w	20000790 <MXC_FLC_RevA_Busy>

200006c8 <MXC_FLC_PageErase>:
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
200006c8:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
200006cc:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
200006d0:	d320      	bcc.n	20000714 <MXC_FLC_PageErase+0x4c>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
200006d2:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
200006d6:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
200006da:	d21e      	bcs.n	2000071a <MXC_FLC_PageErase+0x52>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
200006dc:	f3c0 000d 	ubfx	r0, r0, #0, #14
200006e0:	f500 2100 	add.w	r1, r0, #524288	@ 0x80000
{
200006e4:	b500      	push	{lr}
    err = MXC_FLC_RevA_PageErase((mxc_flc_reva_regs_t *)flc, addr);
200006e6:	480e      	ldr	r0, [pc, #56]	@ (20000720 <MXC_FLC_PageErase+0x58>)
{
200006e8:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_PageErase((mxc_flc_reva_regs_t *)flc, addr);
200006ea:	f000 f897 	bl	2000081c <MXC_FLC_RevA_PageErase>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
200006ee:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
200006f2:	6813      	ldr	r3, [r2, #0]
200006f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
200006f8:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
200006fa:	6813      	ldr	r3, [r2, #0]
200006fc:	065b      	lsls	r3, r3, #25
200006fe:	d4fc      	bmi.n	200006fa <MXC_FLC_PageErase+0x32>
    line = *line_addr;
20000700:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
20000704:	4b07      	ldr	r3, [pc, #28]	@ (20000724 <MXC_FLC_PageErase+0x5c>)
    line = *line_addr;
20000706:	6812      	ldr	r2, [r2, #0]
20000708:	9201      	str	r2, [sp, #4]
    line = *line_addr;
2000070a:	681b      	ldr	r3, [r3, #0]
2000070c:	9301      	str	r3, [sp, #4]
}
2000070e:	b003      	add	sp, #12
20000710:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
20000714:	f3c0 0112 	ubfx	r1, r0, #0, #19
20000718:	e7e4      	b.n	200006e4 <MXC_FLC_PageErase+0x1c>
        return E_BAD_PARAM;
2000071a:	f06f 0002 	mvn.w	r0, #2
}
2000071e:	4770      	bx	lr
20000720:	40029000 	.word	0x40029000
20000724:	10002000 	.word	0x10002000

20000728 <MXC_FLC_Write128>:
    if (address & 0xF) {
20000728:	0702      	lsls	r2, r0, #28
2000072a:	d129      	bne.n	20000780 <MXC_FLC_Write128+0x58>
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
2000072c:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
20000730:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
20000734:	460a      	mov	r2, r1
20000736:	d320      	bcc.n	2000077a <MXC_FLC_Write128+0x52>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
20000738:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
2000073c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
20000740:	d21e      	bcs.n	20000780 <MXC_FLC_Write128+0x58>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
20000742:	f3c0 000d 	ubfx	r0, r0, #0, #14
20000746:	f500 2100 	add.w	r1, r0, #524288	@ 0x80000
{
2000074a:	b500      	push	{lr}
    err = MXC_FLC_RevA_Write128((mxc_flc_reva_regs_t *)flc, addr, data);
2000074c:	480e      	ldr	r0, [pc, #56]	@ (20000788 <MXC_FLC_Write128+0x60>)
{
2000074e:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_Write128((mxc_flc_reva_regs_t *)flc, addr, data);
20000750:	f000 f958 	bl	20000a04 <MXC_FLC_RevA_Write128>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
20000754:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
20000758:	6813      	ldr	r3, [r2, #0]
2000075a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
2000075e:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
20000760:	6813      	ldr	r3, [r2, #0]
20000762:	065b      	lsls	r3, r3, #25
20000764:	d4fc      	bmi.n	20000760 <MXC_FLC_Write128+0x38>
    line = *line_addr;
20000766:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
2000076a:	4b08      	ldr	r3, [pc, #32]	@ (2000078c <MXC_FLC_Write128+0x64>)
    line = *line_addr;
2000076c:	6812      	ldr	r2, [r2, #0]
2000076e:	9201      	str	r2, [sp, #4]
    line = *line_addr;
20000770:	681b      	ldr	r3, [r3, #0]
20000772:	9301      	str	r3, [sp, #4]
}
20000774:	b003      	add	sp, #12
20000776:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
2000077a:	f3c0 0112 	ubfx	r1, r0, #0, #19
2000077e:	e7e4      	b.n	2000074a <MXC_FLC_Write128+0x22>
        return E_BAD_PARAM;
20000780:	f06f 0002 	mvn.w	r0, #2
}
20000784:	4770      	bx	lr
20000786:	bf00      	nop
20000788:	40029000 	.word	0x40029000
2000078c:	10002000 	.word	0x10002000

20000790 <MXC_FLC_RevA_Busy>:
    return (flc->ctrl &
20000790:	4b02      	ldr	r3, [pc, #8]	@ (2000079c <MXC_FLC_RevA_Busy+0xc>)
20000792:	6898      	ldr	r0, [r3, #8]
}
20000794:	f000 0007 	and.w	r0, r0, #7
20000798:	4770      	bx	lr
2000079a:	bf00      	nop
2000079c:	40029000 	.word	0x40029000

200007a0 <MXC_FLC_RevA_MassErase>:
    return (flc->ctrl &
200007a0:	6882      	ldr	r2, [r0, #8]
{
200007a2:	4603      	mov	r3, r0
    if (MXC_busy_flc(flc)) {
200007a4:	0750      	lsls	r0, r2, #29
200007a6:	d12a      	bne.n	200007fe <MXC_FLC_RevA_MassErase+0x5e>
    flc->clkdiv = SystemCoreClock / 1000000;
200007a8:	4a1a      	ldr	r2, [pc, #104]	@ (20000814 <MXC_FLC_RevA_MassErase+0x74>)
200007aa:	491b      	ldr	r1, [pc, #108]	@ (20000818 <MXC_FLC_RevA_MassErase+0x78>)
200007ac:	6812      	ldr	r2, [r2, #0]
200007ae:	fba1 1202 	umull	r1, r2, r1, r2
200007b2:	0c92      	lsrs	r2, r2, #18
200007b4:	605a      	str	r2, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200007b6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
200007b8:	0791      	lsls	r1, r2, #30
200007ba:	d41b      	bmi.n	200007f4 <MXC_FLC_RevA_MassErase+0x54>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
200007bc:	689a      	ldr	r2, [r3, #8]
200007be:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200007c2:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
200007c6:	609a      	str	r2, [r3, #8]
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_ERASE_CODE) |
200007c8:	689a      	ldr	r2, [r3, #8]
200007ca:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
200007ce:	f442 422a 	orr.w	r2, r2, #43520	@ 0xaa00
200007d2:	609a      	str	r2, [r3, #8]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_ME;
200007d4:	689a      	ldr	r2, [r3, #8]
200007d6:	f042 0202 	orr.w	r2, r2, #2
200007da:	609a      	str	r2, [r3, #8]
    return (flc->ctrl &
200007dc:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
200007de:	0752      	lsls	r2, r2, #29
200007e0:	d1fc      	bne.n	200007dc <MXC_FLC_RevA_MassErase+0x3c>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
200007e2:	689a      	ldr	r2, [r3, #8]
200007e4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200007e8:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200007ea:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200007ec:	f010 0002 	ands.w	r0, r0, #2
200007f0:	d108      	bne.n	20000804 <MXC_FLC_RevA_MassErase+0x64>
}
200007f2:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
200007f4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
200007f6:	f022 0202 	bic.w	r2, r2, #2
200007fa:	625a      	str	r2, [r3, #36]	@ 0x24
200007fc:	e7de      	b.n	200007bc <MXC_FLC_RevA_MassErase+0x1c>
        return E_BUSY;
200007fe:	f06f 0005 	mvn.w	r0, #5
20000802:	e7f6      	b.n	200007f2 <MXC_FLC_RevA_MassErase+0x52>
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000804:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000806:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
2000080a:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000080e:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000810:	4770      	bx	lr
20000812:	bf00      	nop
20000814:	20001768 	.word	0x20001768
20000818:	431bde83 	.word	0x431bde83

2000081c <MXC_FLC_RevA_PageErase>:
    return (flc->ctrl &
2000081c:	6882      	ldr	r2, [r0, #8]
    if (MXC_busy_flc(flc)) {
2000081e:	0752      	lsls	r2, r2, #29
{
20000820:	4603      	mov	r3, r0
    if (MXC_busy_flc(flc)) {
20000822:	d12b      	bne.n	2000087c <MXC_FLC_RevA_PageErase+0x60>
    flc->clkdiv = SystemCoreClock / 1000000;
20000824:	4a1a      	ldr	r2, [pc, #104]	@ (20000890 <MXC_FLC_RevA_PageErase+0x74>)
20000826:	481b      	ldr	r0, [pc, #108]	@ (20000894 <MXC_FLC_RevA_PageErase+0x78>)
20000828:	6812      	ldr	r2, [r2, #0]
2000082a:	fba0 0202 	umull	r0, r2, r0, r2
2000082e:	0c92      	lsrs	r2, r2, #18
20000830:	605a      	str	r2, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000832:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000834:	0790      	lsls	r0, r2, #30
20000836:	d41c      	bmi.n	20000872 <MXC_FLC_RevA_PageErase+0x56>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000838:	689a      	ldr	r2, [r3, #8]
2000083a:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
2000083e:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
20000842:	609a      	str	r2, [r3, #8]
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_ERASE_CODE) |
20000844:	689a      	ldr	r2, [r3, #8]
20000846:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
2000084a:	f442 42aa 	orr.w	r2, r2, #21760	@ 0x5500
2000084e:	609a      	str	r2, [r3, #8]
    flc->addr = addr;
20000850:	6019      	str	r1, [r3, #0]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_PGE;
20000852:	689a      	ldr	r2, [r3, #8]
20000854:	f042 0204 	orr.w	r2, r2, #4
20000858:	609a      	str	r2, [r3, #8]
    return (flc->ctrl &
2000085a:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
2000085c:	0752      	lsls	r2, r2, #29
2000085e:	d1fc      	bne.n	2000085a <MXC_FLC_RevA_PageErase+0x3e>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
20000860:	689a      	ldr	r2, [r3, #8]
20000862:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
20000866:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000868:	6a58      	ldr	r0, [r3, #36]	@ 0x24
2000086a:	f010 0002 	ands.w	r0, r0, #2
2000086e:	d108      	bne.n	20000882 <MXC_FLC_RevA_PageErase+0x66>
}
20000870:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000872:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000874:	f022 0202 	bic.w	r2, r2, #2
20000878:	625a      	str	r2, [r3, #36]	@ 0x24
2000087a:	e7dd      	b.n	20000838 <MXC_FLC_RevA_PageErase+0x1c>
        return E_BUSY;
2000087c:	f06f 0005 	mvn.w	r0, #5
20000880:	e7f6      	b.n	20000870 <MXC_FLC_RevA_PageErase+0x54>
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000882:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000884:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
20000888:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000088c:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
2000088e:	4770      	bx	lr
20000890:	20001768 	.word	0x20001768
20000894:	431bde83 	.word	0x431bde83

20000898 <MXC_FLC_RevA_Write32>:
    if (logicAddr & 0x3) {
20000898:	078b      	lsls	r3, r1, #30
2000089a:	d139      	bne.n	20000910 <MXC_FLC_RevA_Write32+0x78>
    if ((*(uint32_t *)logicAddr & data) != data) {
2000089c:	4603      	mov	r3, r0
2000089e:	6808      	ldr	r0, [r1, #0]
200008a0:	ea32 0000 	bics.w	r0, r2, r0
200008a4:	d141      	bne.n	2000092a <MXC_FLC_RevA_Write32+0x92>
    return (flc->ctrl &
200008a6:	6898      	ldr	r0, [r3, #8]
    if (MXC_busy_flc(flc)) {
200008a8:	0740      	lsls	r0, r0, #29
    logicAddr = logicAddr & 0xfffffffc;
200008aa:	f021 0103 	bic.w	r1, r1, #3
    if (MXC_busy_flc(flc)) {
200008ae:	d132      	bne.n	20000916 <MXC_FLC_RevA_Write32+0x7e>
    flc->clkdiv = SystemCoreClock / 1000000;
200008b0:	481f      	ldr	r0, [pc, #124]	@ (20000930 <MXC_FLC_RevA_Write32+0x98>)
{
200008b2:	b410      	push	{r4}
    flc->clkdiv = SystemCoreClock / 1000000;
200008b4:	6800      	ldr	r0, [r0, #0]
200008b6:	4c1f      	ldr	r4, [pc, #124]	@ (20000934 <MXC_FLC_RevA_Write32+0x9c>)
200008b8:	fba4 4000 	umull	r4, r0, r4, r0
200008bc:	0c80      	lsrs	r0, r0, #18
200008be:	6058      	str	r0, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200008c0:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200008c2:	0780      	lsls	r0, r0, #30
200008c4:	d41f      	bmi.n	20000906 <MXC_FLC_RevA_Write32+0x6e>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
200008c6:	6898      	ldr	r0, [r3, #8]
200008c8:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
200008cc:	f040 5000 	orr.w	r0, r0, #536870912	@ 0x20000000
200008d0:	6098      	str	r0, [r3, #8]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WDTH;
200008d2:	6898      	ldr	r0, [r3, #8]
200008d4:	f040 0010 	orr.w	r0, r0, #16
200008d8:	6098      	str	r0, [r3, #8]
    flc->addr = logicAddr;
200008da:	6019      	str	r1, [r3, #0]
    flc->data[0] = data;
200008dc:	631a      	str	r2, [r3, #48]	@ 0x30
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WR;
200008de:	689a      	ldr	r2, [r3, #8]
200008e0:	f042 0201 	orr.w	r2, r2, #1
200008e4:	609a      	str	r2, [r3, #8]
    while ((flc->ctrl & MXC_F_FLC_REVA_CTRL_PEND) != 0) {}
200008e6:	689a      	ldr	r2, [r3, #8]
200008e8:	01d1      	lsls	r1, r2, #7
200008ea:	d4fc      	bmi.n	200008e6 <MXC_FLC_RevA_Write32+0x4e>
    return (flc->ctrl &
200008ec:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
200008ee:	0752      	lsls	r2, r2, #29
200008f0:	d1fc      	bne.n	200008ec <MXC_FLC_RevA_Write32+0x54>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
200008f2:	689a      	ldr	r2, [r3, #8]
200008f4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200008f8:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200008fa:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200008fc:	f010 0002 	ands.w	r0, r0, #2
20000900:	d10c      	bne.n	2000091c <MXC_FLC_RevA_Write32+0x84>
}
20000902:	bc10      	pop	{r4}
20000904:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000906:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000908:	f020 0002 	bic.w	r0, r0, #2
2000090c:	6258      	str	r0, [r3, #36]	@ 0x24
2000090e:	e7da      	b.n	200008c6 <MXC_FLC_RevA_Write32+0x2e>
        return E_BAD_PARAM;
20000910:	f06f 0002 	mvn.w	r0, #2
20000914:	4770      	bx	lr
        return E_BUSY;
20000916:	f06f 0005 	mvn.w	r0, #5
2000091a:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000091c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
2000091e:	f022 0202 	bic.w	r2, r2, #2
20000922:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000924:	f06f 0006 	mvn.w	r0, #6
20000928:	e7eb      	b.n	20000902 <MXC_FLC_RevA_Write32+0x6a>
2000092a:	f06f 0006 	mvn.w	r0, #6
}
2000092e:	4770      	bx	lr
20000930:	20001768 	.word	0x20001768
20000934:	431bde83 	.word	0x431bde83

20000938 <MXC_FLC_RevA_Write32Using128>:
{
20000938:	b570      	push	{r4, r5, r6, lr}
2000093a:	4684      	mov	ip, r0
2000093c:	b084      	sub	sp, #16
    uint32_t current_data[4] = { 0, 0, 0, 0 };
2000093e:	2000      	movs	r0, #0
    if (logicAddr & 0x3) {
20000940:	078e      	lsls	r6, r1, #30
    uint32_t current_data[4] = { 0, 0, 0, 0 };
20000942:	e9cd 0000 	strd	r0, r0, [sp]
20000946:	e9cd 0002 	strd	r0, r0, [sp, #8]
    if (logicAddr & 0x3) {
2000094a:	d150      	bne.n	200009ee <MXC_FLC_RevA_Write32Using128+0xb6>
    if ((*(uint32_t *)logicAddr & data) != data) {
2000094c:	6808      	ldr	r0, [r1, #0]
2000094e:	ea32 0000 	bics.w	r0, r2, r0
20000952:	d149      	bne.n	200009e8 <MXC_FLC_RevA_Write32Using128+0xb0>
    return (flc->ctrl &
20000954:	f8dc 4008 	ldr.w	r4, [ip, #8]
    if (MXC_busy_flc(flc)) {
20000958:	0765      	lsls	r5, r4, #29
    logicAddr = logicAddr & 0xfffffff0;
2000095a:	f021 000f 	bic.w	r0, r1, #15
    if (MXC_busy_flc(flc)) {
2000095e:	d149      	bne.n	200009f4 <MXC_FLC_RevA_Write32Using128+0xbc>
    flc->clkdiv = SystemCoreClock / 1000000;
20000960:	4c26      	ldr	r4, [pc, #152]	@ (200009fc <MXC_FLC_RevA_Write32Using128+0xc4>)
20000962:	4d27      	ldr	r5, [pc, #156]	@ (20000a00 <MXC_FLC_RevA_Write32Using128+0xc8>)
20000964:	6824      	ldr	r4, [r4, #0]
20000966:	fba5 5404 	umull	r5, r4, r5, r4
2000096a:	0ca4      	lsrs	r4, r4, #18
2000096c:	f8cc 4004 	str.w	r4, [ip, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000970:	f8dc 4024 	ldr.w	r4, [ip, #36]	@ 0x24
20000974:	07a4      	lsls	r4, r4, #30
20000976:	d425      	bmi.n	200009c4 <MXC_FLC_RevA_Write32Using128+0x8c>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000978:	f8dc 4008 	ldr.w	r4, [ip, #8]
2000097c:	f024 4470 	bic.w	r4, r4, #4026531840	@ 0xf0000000
20000980:	f044 5400 	orr.w	r4, r4, #536870912	@ 0x20000000
20000984:	f8cc 4008 	str.w	r4, [ip, #8]
    for (ptr = (uint32_t *)logicAddr; ptr < (uint32_t *)(logicAddr + 16); ptr++, i++) {
20000988:	f100 0410 	add.w	r4, r0, #16
2000098c:	42a0      	cmp	r0, r4
2000098e:	4686      	mov	lr, r0
20000990:	d20d      	bcs.n	200009ae <MXC_FLC_RevA_Write32Using128+0x76>
20000992:	1d05      	adds	r5, r0, #4
20000994:	42ac      	cmp	r4, r5
20000996:	bf34      	ite	cc
20000998:	2401      	movcc	r4, #1
2000099a:	2404      	movcs	r4, #4
2000099c:	eb00 0484 	add.w	r4, r0, r4, lsl #2
200009a0:	466d      	mov	r5, sp
        current_data[i] = *ptr;
200009a2:	f85e 6b04 	ldr.w	r6, [lr], #4
200009a6:	f845 6b04 	str.w	r6, [r5], #4
    for (ptr = (uint32_t *)logicAddr; ptr < (uint32_t *)(logicAddr + 16); ptr++, i++) {
200009aa:	45a6      	cmp	lr, r4
200009ac:	d1f9      	bne.n	200009a2 <MXC_FLC_RevA_Write32Using128+0x6a>
    if (byte < 4) {
200009ae:	f011 0f0c 	tst.w	r1, #12
    flc->addr = physicalAddr;
200009b2:	f8cc 3000 	str.w	r3, [ip]
    if (byte < 4) {
200009b6:	d10c      	bne.n	200009d2 <MXC_FLC_RevA_Write32Using128+0x9a>
        current_data[0] = data;
200009b8:	9200      	str	r2, [sp, #0]
    return MXC_FLC_Write128(logicAddr, current_data);
200009ba:	4669      	mov	r1, sp
200009bc:	f7ff feb4 	bl	20000728 <MXC_FLC_Write128>
}
200009c0:	b004      	add	sp, #16
200009c2:	bd70      	pop	{r4, r5, r6, pc}
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
200009c4:	f8dc 4024 	ldr.w	r4, [ip, #36]	@ 0x24
200009c8:	f024 0402 	bic.w	r4, r4, #2
200009cc:	f8cc 4024 	str.w	r4, [ip, #36]	@ 0x24
200009d0:	e7d2      	b.n	20000978 <MXC_FLC_RevA_Write32Using128+0x40>
    } else if (byte < 8) {
200009d2:	070b      	lsls	r3, r1, #28
200009d4:	d401      	bmi.n	200009da <MXC_FLC_RevA_Write32Using128+0xa2>
        current_data[1] = data;
200009d6:	9201      	str	r2, [sp, #4]
200009d8:	e7ef      	b.n	200009ba <MXC_FLC_RevA_Write32Using128+0x82>
    byte = (logicAddr & 0xf);
200009da:	f001 010f 	and.w	r1, r1, #15
    } else if (byte < 12) {
200009de:	290b      	cmp	r1, #11
        current_data[2] = data;
200009e0:	bf94      	ite	ls
200009e2:	9202      	strls	r2, [sp, #8]
        current_data[3] = data;
200009e4:	9203      	strhi	r2, [sp, #12]
200009e6:	e7e8      	b.n	200009ba <MXC_FLC_RevA_Write32Using128+0x82>
        return E_BAD_STATE;
200009e8:	f06f 0006 	mvn.w	r0, #6
200009ec:	e7e8      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
        return E_BAD_PARAM;
200009ee:	f06f 0002 	mvn.w	r0, #2
200009f2:	e7e5      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
        return E_BUSY;
200009f4:	f06f 0005 	mvn.w	r0, #5
200009f8:	e7e2      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
200009fa:	bf00      	nop
200009fc:	20001768 	.word	0x20001768
20000a00:	431bde83 	.word	0x431bde83

20000a04 <MXC_FLC_RevA_Write128>:
    if (addr & 0xF) {
20000a04:	070b      	lsls	r3, r1, #28
20000a06:	d13a      	bne.n	20000a7e <MXC_FLC_RevA_Write128+0x7a>
    return (flc->ctrl &
20000a08:	4603      	mov	r3, r0
20000a0a:	6880      	ldr	r0, [r0, #8]
    if (MXC_busy_flc(flc)) {
20000a0c:	0740      	lsls	r0, r0, #29
20000a0e:	d139      	bne.n	20000a84 <MXC_FLC_RevA_Write128+0x80>
    flc->clkdiv = SystemCoreClock / 1000000;
20000a10:	4821      	ldr	r0, [pc, #132]	@ (20000a98 <MXC_FLC_RevA_Write128+0x94>)
{
20000a12:	b410      	push	{r4}
    flc->clkdiv = SystemCoreClock / 1000000;
20000a14:	6800      	ldr	r0, [r0, #0]
20000a16:	4c21      	ldr	r4, [pc, #132]	@ (20000a9c <MXC_FLC_RevA_Write128+0x98>)
20000a18:	fba4 4000 	umull	r4, r0, r4, r0
20000a1c:	0c80      	lsrs	r0, r0, #18
20000a1e:	6058      	str	r0, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000a20:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a22:	0780      	lsls	r0, r0, #30
20000a24:	d426      	bmi.n	20000a74 <MXC_FLC_RevA_Write128+0x70>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000a26:	6898      	ldr	r0, [r3, #8]
20000a28:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
20000a2c:	f040 5000 	orr.w	r0, r0, #536870912	@ 0x20000000
20000a30:	6098      	str	r0, [r3, #8]
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_WDTH;
20000a32:	6898      	ldr	r0, [r3, #8]
20000a34:	f020 0010 	bic.w	r0, r0, #16
20000a38:	6098      	str	r0, [r3, #8]
    flc->addr = addr;
20000a3a:	6019      	str	r1, [r3, #0]
    flc->data[0] = data[0];
20000a3c:	6811      	ldr	r1, [r2, #0]
20000a3e:	6319      	str	r1, [r3, #48]	@ 0x30
    flc->data[1] = data[1];
20000a40:	6851      	ldr	r1, [r2, #4]
20000a42:	6359      	str	r1, [r3, #52]	@ 0x34
    flc->data[2] = data[2];
20000a44:	6891      	ldr	r1, [r2, #8]
20000a46:	6399      	str	r1, [r3, #56]	@ 0x38
    flc->data[3] = data[3];
20000a48:	68d2      	ldr	r2, [r2, #12]
20000a4a:	63da      	str	r2, [r3, #60]	@ 0x3c
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WR;
20000a4c:	689a      	ldr	r2, [r3, #8]
20000a4e:	f042 0201 	orr.w	r2, r2, #1
20000a52:	609a      	str	r2, [r3, #8]
    while ((flc->ctrl & MXC_F_FLC_REVA_CTRL_PEND) != 0) {}
20000a54:	689a      	ldr	r2, [r3, #8]
20000a56:	01d1      	lsls	r1, r2, #7
20000a58:	d4fc      	bmi.n	20000a54 <MXC_FLC_RevA_Write128+0x50>
    return (flc->ctrl &
20000a5a:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
20000a5c:	0752      	lsls	r2, r2, #29
20000a5e:	d1fc      	bne.n	20000a5a <MXC_FLC_RevA_Write128+0x56>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
20000a60:	689a      	ldr	r2, [r3, #8]
20000a62:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
20000a66:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000a68:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a6a:	f010 0002 	ands.w	r0, r0, #2
20000a6e:	d10c      	bne.n	20000a8a <MXC_FLC_RevA_Write128+0x86>
}
20000a70:	bc10      	pop	{r4}
20000a72:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a74:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a76:	f020 0002 	bic.w	r0, r0, #2
20000a7a:	6258      	str	r0, [r3, #36]	@ 0x24
20000a7c:	e7d3      	b.n	20000a26 <MXC_FLC_RevA_Write128+0x22>
        return E_BAD_PARAM;
20000a7e:	f06f 0002 	mvn.w	r0, #2
20000a82:	4770      	bx	lr
        return E_BUSY;
20000a84:	f06f 0005 	mvn.w	r0, #5
}
20000a88:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a8a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000a8c:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
20000a90:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a94:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000a96:	e7eb      	b.n	20000a70 <MXC_FLC_RevA_Write128+0x6c>
20000a98:	20001768 	.word	0x20001768
20000a9c:	431bde83 	.word	0x431bde83

20000aa0 <MXC_FLC_Com_VerifyData>:
// Length is number of 32-bit words
int MXC_FLC_Com_VerifyData(uint32_t address, uint32_t length, uint32_t *data)
{
    volatile uint32_t *ptr;

    for (ptr = (uint32_t *)address; ptr < (((uint32_t *)(address)) + length); ptr++, data++) {
20000aa0:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
20000aa4:	4560      	cmp	r0, ip
20000aa6:	d20d      	bcs.n	20000ac4 <MXC_FLC_Com_VerifyData+0x24>
20000aa8:	3a04      	subs	r2, #4
20000aaa:	e001      	b.n	20000ab0 <MXC_FLC_Com_VerifyData+0x10>
20000aac:	4560      	cmp	r0, ip
20000aae:	d209      	bcs.n	20000ac4 <MXC_FLC_Com_VerifyData+0x24>
        if (*ptr != *data) {
20000ab0:	6801      	ldr	r1, [r0, #0]
20000ab2:	f852 3f04 	ldr.w	r3, [r2, #4]!
20000ab6:	4299      	cmp	r1, r3
    for (ptr = (uint32_t *)address; ptr < (((uint32_t *)(address)) + length); ptr++, data++) {
20000ab8:	f100 0004 	add.w	r0, r0, #4
        if (*ptr != *data) {
20000abc:	d0f6      	beq.n	20000aac <MXC_FLC_Com_VerifyData+0xc>
            return E_BAD_STATE;
20000abe:	f06f 0006 	mvn.w	r0, #6
        }
    }

    return E_NO_ERROR;
}
20000ac2:	4770      	bx	lr
    return E_NO_ERROR;
20000ac4:	2000      	movs	r0, #0
20000ac6:	4770      	bx	lr

20000ac8 <MXC_FLC_Com_Write>:
#else
__attribute__((section(".flashprog")))
#endif
// make sure to disable ICC with ICC_Disable(); before Running this function
int MXC_FLC_Com_Write(uint32_t address, uint32_t length, uint32_t *buffer)
{
20000ac8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    uint32_t current_data_32;
    uint8_t *current_data = (uint8_t *)&current_data_32;
    uint8_t *buffer8 = (uint8_t *)buffer;

    // Align the address to a word boundary and read/write if we have to
    if (address & 0x3) {
20000acc:	f010 0703 	ands.w	r7, r0, #3
{
20000ad0:	b087      	sub	sp, #28
20000ad2:	4604      	mov	r4, r0
20000ad4:	460e      	mov	r6, r1
20000ad6:	4615      	mov	r5, r2
    if (address & 0x3) {
20000ad8:	d00b      	beq.n	20000af2 <MXC_FLC_Com_Write+0x2a>
20000ada:	e012      	b.n	20000b02 <MXC_FLC_Com_Write+0x3a>
        length -= bytes_written;
        buffer8 += bytes_written;
    }

    // Align the address to a 4-word (128bit) boundary
    while ((length >= 4) && ((address & 0xF) != 0)) {
20000adc:	0723      	lsls	r3, r4, #28
20000ade:	d028      	beq.n	20000b32 <MXC_FLC_Com_Write+0x6a>
        memcpy(current_data, buffer8, 4);
20000ae0:	6829      	ldr	r1, [r5, #0]
20000ae2:	9101      	str	r1, [sp, #4]
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000ae4:	4620      	mov	r0, r4
20000ae6:	f000 f867 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
            return err;
        }

        address += 4;
        length -= 4;
20000aea:	3e04      	subs	r6, #4
        address += 4;
20000aec:	3404      	adds	r4, #4
        buffer8 += 4;
20000aee:	3504      	adds	r5, #4
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000af0:	b920      	cbnz	r0, 20000afc <MXC_FLC_Com_Write+0x34>
    while ((length >= 4) && ((address & 0xF) != 0)) {
20000af2:	2e03      	cmp	r6, #3
20000af4:	d8f2      	bhi.n	20000adc <MXC_FLC_Com_Write+0x14>
        address += 4;
        length -= 4;
        buffer8 += 4;
    }

    if (length > 0) {
20000af6:	2e00      	cmp	r6, #0
20000af8:	d143      	bne.n	20000b82 <MXC_FLC_Com_Write+0xba>
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
            return err;
        }
    }

    return E_NO_ERROR;
20000afa:	4630      	mov	r0, r6
}
20000afc:	b007      	add	sp, #28
20000afe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        memcpy(current_data, (void *)(address & (~0x3)), 4);
20000b02:	f020 0903 	bic.w	r9, r0, #3
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b06:	ab01      	add	r3, sp, #4
        bytes_written = 4 - (address & 0x3);
20000b08:	f1c7 0804 	rsb	r8, r7, #4
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b0c:	19d8      	adds	r0, r3, r7
20000b0e:	4629      	mov	r1, r5
        memcpy(current_data, (void *)(address & (~0x3)), 4);
20000b10:	f8d9 3000 	ldr.w	r3, [r9]
20000b14:	9301      	str	r3, [sp, #4]
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b16:	4642      	mov	r2, r8
20000b18:	f000 f84a 	bl	20000bb0 <__memcpy_veneer>
        if ((err = MXC_FLC_Write32(address - (address % 4), current_data_32)) != E_NO_ERROR) {
20000b1c:	9901      	ldr	r1, [sp, #4]
20000b1e:	4648      	mov	r0, r9
20000b20:	f000 f84a 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
20000b24:	2800      	cmp	r0, #0
20000b26:	d1e9      	bne.n	20000afc <MXC_FLC_Com_Write+0x34>
        address += bytes_written;
20000b28:	3e04      	subs	r6, #4
20000b2a:	4444      	add	r4, r8
        length -= bytes_written;
20000b2c:	443e      	add	r6, r7
        buffer8 += bytes_written;
20000b2e:	4445      	add	r5, r8
20000b30:	e7df      	b.n	20000af2 <MXC_FLC_Com_Write+0x2a>
    if (length >= 16) {
20000b32:	2e0f      	cmp	r6, #15
20000b34:	d902      	bls.n	20000b3c <MXC_FLC_Com_Write+0x74>
20000b36:	e010      	b.n	20000b5a <MXC_FLC_Com_Write+0x92>
    while (length >= 4) {
20000b38:	2e03      	cmp	r6, #3
20000b3a:	d9dc      	bls.n	20000af6 <MXC_FLC_Com_Write+0x2e>
        memcpy(current_data, buffer8, 4);
20000b3c:	6829      	ldr	r1, [r5, #0]
20000b3e:	9101      	str	r1, [sp, #4]
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b40:	4620      	mov	r0, r4
20000b42:	f000 f839 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
        length -= 4;
20000b46:	3e04      	subs	r6, #4
        address += 4;
20000b48:	3404      	adds	r4, #4
        buffer8 += 4;
20000b4a:	3504      	adds	r5, #4
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b4c:	2800      	cmp	r0, #0
20000b4e:	d0f3      	beq.n	20000b38 <MXC_FLC_Com_Write+0x70>
}
20000b50:	b007      	add	sp, #28
20000b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        while (length >= 16) {
20000b56:	2e0f      	cmp	r6, #15
20000b58:	d9ee      	bls.n	20000b38 <MXC_FLC_Com_Write+0x70>
            memcpy(buff128, buffer8, 16);
20000b5a:	6828      	ldr	r0, [r5, #0]
20000b5c:	6869      	ldr	r1, [r5, #4]
20000b5e:	68aa      	ldr	r2, [r5, #8]
20000b60:	68eb      	ldr	r3, [r5, #12]
20000b62:	f10d 0c08 	add.w	ip, sp, #8
20000b66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
            if ((err = MXC_FLC_Write128(address, buff128)) != E_NO_ERROR) {
20000b6a:	4620      	mov	r0, r4
20000b6c:	a902      	add	r1, sp, #8
20000b6e:	f7ff fddb 	bl	20000728 <MXC_FLC_Write128>
            length -= 16;
20000b72:	3e10      	subs	r6, #16
            address += 16;
20000b74:	3410      	adds	r4, #16
            buffer8 += 16;
20000b76:	3510      	adds	r5, #16
            if ((err = MXC_FLC_Write128(address, buff128)) != E_NO_ERROR) {
20000b78:	2800      	cmp	r0, #0
20000b7a:	d0ec      	beq.n	20000b56 <MXC_FLC_Com_Write+0x8e>
}
20000b7c:	b007      	add	sp, #28
20000b7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        memcpy(current_data, (void *)(address), 4);
20000b82:	6823      	ldr	r3, [r4, #0]
20000b84:	9301      	str	r3, [sp, #4]
        memcpy(current_data, buffer8, length);
20000b86:	4629      	mov	r1, r5
20000b88:	4632      	mov	r2, r6
20000b8a:	a801      	add	r0, sp, #4
20000b8c:	f000 f810 	bl	20000bb0 <__memcpy_veneer>
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b90:	9901      	ldr	r1, [sp, #4]
20000b92:	4620      	mov	r0, r4
}
20000b94:	b007      	add	sp, #28
20000b96:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b9a:	f000 b80d 	b.w	20000bb8 <__MXC_FLC_Write32_veneer>
20000b9e:	bf00      	nop

20000ba0 <MXC_FLC_Com_Read>:
#pragma section = ".flashprog"
#else
__attribute__((section(".flashprog")))
#endif
void MXC_FLC_Com_Read(int address, void *buffer, int len)
{
20000ba0:	4603      	mov	r3, r0
    memcpy(buffer, (void *)address, len);
20000ba2:	4608      	mov	r0, r1
20000ba4:	4619      	mov	r1, r3
20000ba6:	f000 b803 	b.w	20000bb0 <__memcpy_veneer>
20000baa:	bf00      	nop
20000bac:	0000      	movs	r0, r0
	...

20000bb0 <__memcpy_veneer>:
20000bb0:	f85f f000 	ldr.w	pc, [pc]	@ 20000bb4 <__memcpy_veneer+0x4>
20000bb4:	100158c1 	.word	0x100158c1

20000bb8 <__MXC_FLC_Write32_veneer>:
20000bb8:	f85f f000 	ldr.w	pc, [pc]	@ 20000bbc <__MXC_FLC_Write32_veneer+0x4>
20000bbc:	1000f619 	.word	0x1000f619

20000bc0 <__init_array_start>:
20000bc0:	10015bb1 	.word	0x10015bb1

20000bc4 <__frame_dummy_init_array_entry>:
20000bc4:	1000e271                                q...

20000bc8 <__do_global_dtors_aux_fini_array_entry>:
20000bc8:	1000e249                                I...
