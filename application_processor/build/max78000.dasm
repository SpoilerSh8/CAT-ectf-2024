
/Users/spoiler/Documents/GitHub/CAT-ectf-2024/application_processor/build/max78000.elf:     file format elf32-littlearm


Disassembly of section .text:

1000e000 <__isr_vector>:
1000e000:	20020000 	.word	0x20020000
1000e004:	10011c21 	.word	0x10011c21
1000e008:	10011a55 	.word	0x10011a55
1000e00c:	10011c5f 	.word	0x10011c5f
1000e010:	10011c61 	.word	0x10011c61
1000e014:	10011c63 	.word	0x10011c63
1000e018:	10011c65 	.word	0x10011c65
	...
1000e02c:	10011c67 	.word	0x10011c67
1000e030:	10011c69 	.word	0x10011c69
1000e034:	00000000 	.word	0x00000000
1000e038:	10011c6b 	.word	0x10011c6b
1000e03c:	10011c6d 	.word	0x10011c6d
1000e040:	10011c71 	.word	0x10011c71
1000e044:	10011c73 	.word	0x10011c73
1000e048:	10011c75 	.word	0x10011c75
1000e04c:	10011c77 	.word	0x10011c77
1000e050:	10011c79 	.word	0x10011c79
1000e054:	10011c7b 	.word	0x10011c7b
1000e058:	10011c7d 	.word	0x10011c7d
1000e05c:	10011c7f 	.word	0x10011c7f
1000e060:	10011c81 	.word	0x10011c81
1000e064:	10011c83 	.word	0x10011c83
1000e068:	10011c85 	.word	0x10011c85
1000e06c:	10011c87 	.word	0x10011c87
1000e070:	10011c89 	.word	0x10011c89
1000e074:	10011c8b 	.word	0x10011c8b
1000e078:	10011c8d 	.word	0x10011c8d
1000e07c:	10011c8f 	.word	0x10011c8f
1000e080:	10011c91 	.word	0x10011c91
1000e084:	10011c93 	.word	0x10011c93
1000e088:	10011c95 	.word	0x10011c95
1000e08c:	10011c97 	.word	0x10011c97
1000e090:	10011c99 	.word	0x10011c99
1000e094:	10011c9b 	.word	0x10011c9b
1000e098:	10011c9d 	.word	0x10011c9d
1000e09c:	10011c9f 	.word	0x10011c9f
1000e0a0:	100119d9 	.word	0x100119d9
1000e0a4:	100119e1 	.word	0x100119e1
1000e0a8:	10011ca5 	.word	0x10011ca5
1000e0ac:	10011ca7 	.word	0x10011ca7
1000e0b0:	10011ca9 	.word	0x10011ca9
1000e0b4:	10011cab 	.word	0x10011cab
1000e0b8:	10011cad 	.word	0x10011cad
1000e0bc:	10011caf 	.word	0x10011caf
1000e0c0:	10011cb1 	.word	0x10011cb1
1000e0c4:	10011cb3 	.word	0x10011cb3
1000e0c8:	10011cb5 	.word	0x10011cb5
1000e0cc:	10011cb7 	.word	0x10011cb7
1000e0d0:	10011cb9 	.word	0x10011cb9
1000e0d4:	10011cbb 	.word	0x10011cbb
1000e0d8:	10011cbd 	.word	0x10011cbd
1000e0dc:	10011cbf 	.word	0x10011cbf
1000e0e0:	10011cc1 	.word	0x10011cc1
1000e0e4:	10011cc3 	.word	0x10011cc3
1000e0e8:	10011cc5 	.word	0x10011cc5
1000e0ec:	10011cc7 	.word	0x10011cc7
1000e0f0:	10011cc9 	.word	0x10011cc9
1000e0f4:	10011ccb 	.word	0x10011ccb
1000e0f8:	10011ccd 	.word	0x10011ccd
1000e0fc:	10011ccf 	.word	0x10011ccf
1000e100:	10011cd1 	.word	0x10011cd1
1000e104:	10011cd3 	.word	0x10011cd3
1000e108:	10011cd5 	.word	0x10011cd5
1000e10c:	10011cd7 	.word	0x10011cd7
1000e110:	10011cd9 	.word	0x10011cd9
1000e114:	10011cdb 	.word	0x10011cdb
1000e118:	10011cdd 	.word	0x10011cdd
1000e11c:	10011cdf 	.word	0x10011cdf
1000e120:	10011ce1 	.word	0x10011ce1
1000e124:	10011ce3 	.word	0x10011ce3
1000e128:	10011ce5 	.word	0x10011ce5
1000e12c:	10011ce7 	.word	0x10011ce7
1000e130:	10011ce9 	.word	0x10011ce9
1000e134:	10011ceb 	.word	0x10011ceb
1000e138:	10011ced 	.word	0x10011ced
1000e13c:	10011cef 	.word	0x10011cef
1000e140:	10011cf1 	.word	0x10011cf1
1000e144:	10011cf3 	.word	0x10011cf3
1000e148:	10011cf5 	.word	0x10011cf5
1000e14c:	10011cf7 	.word	0x10011cf7
1000e150:	10011cf9 	.word	0x10011cf9
1000e154:	10011cfb 	.word	0x10011cfb
1000e158:	10011cfd 	.word	0x10011cfd
1000e15c:	10011cff 	.word	0x10011cff
1000e160:	10011d01 	.word	0x10011d01
1000e164:	10011d03 	.word	0x10011d03
1000e168:	10011d05 	.word	0x10011d05
1000e16c:	10011d07 	.word	0x10011d07
1000e170:	10011d09 	.word	0x10011d09
1000e174:	10011d0b 	.word	0x10011d0b
1000e178:	10011d0d 	.word	0x10011d0d
1000e17c:	10011d0f 	.word	0x10011d0f
1000e180:	10011d11 	.word	0x10011d11
1000e184:	10011d13 	.word	0x10011d13
1000e188:	10011d15 	.word	0x10011d15
1000e18c:	10011d17 	.word	0x10011d17
1000e190:	10011d19 	.word	0x10011d19
1000e194:	10011d1b 	.word	0x10011d1b
1000e198:	10011d1d 	.word	0x10011d1d
1000e19c:	10011d1f 	.word	0x10011d1f
1000e1a0:	10011d21 	.word	0x10011d21
1000e1a4:	10011d23 	.word	0x10011d23
1000e1a8:	10011d25 	.word	0x10011d25
1000e1ac:	10011d27 	.word	0x10011d27
1000e1b0:	10011d29 	.word	0x10011d29
1000e1b4:	10011d2b 	.word	0x10011d2b
1000e1b8:	10011d2d 	.word	0x10011d2d
1000e1bc:	10011d2f 	.word	0x10011d2f
1000e1c0:	10011d31 	.word	0x10011d31
1000e1c4:	10011d33 	.word	0x10011d33
1000e1c8:	10011d35 	.word	0x10011d35
1000e1cc:	10011d37 	.word	0x10011d37
1000e1d0:	10011d39 	.word	0x10011d39
1000e1d4:	10011d3b 	.word	0x10011d3b
1000e1d8:	10011d3d 	.word	0x10011d3d
1000e1dc:	10011d3f 	.word	0x10011d3f
	...

1000e200 <firmware_startup>:
1000e200:	4800      	ldr	r0, [pc, #0]	@ (1000e204 <firmware_startup+0x4>)
1000e202:	4780      	blx	r0
1000e204:	10011c21 	.word	0x10011c21

1000e208 <deregister_tm_clones>:
1000e208:	4803      	ldr	r0, [pc, #12]	@ (1000e218 <deregister_tm_clones+0x10>)
1000e20a:	4b04      	ldr	r3, [pc, #16]	@ (1000e21c <deregister_tm_clones+0x14>)
1000e20c:	4283      	cmp	r3, r0
1000e20e:	d002      	beq.n	1000e216 <deregister_tm_clones+0xe>
1000e210:	4b03      	ldr	r3, [pc, #12]	@ (1000e220 <deregister_tm_clones+0x18>)
1000e212:	b103      	cbz	r3, 1000e216 <deregister_tm_clones+0xe>
1000e214:	4718      	bx	r3
1000e216:	4770      	bx	lr
1000e218:	20000bcc 	.word	0x20000bcc
1000e21c:	20000bcc 	.word	0x20000bcc
1000e220:	00000000 	.word	0x00000000

1000e224 <register_tm_clones>:
1000e224:	4805      	ldr	r0, [pc, #20]	@ (1000e23c <register_tm_clones+0x18>)
1000e226:	4b06      	ldr	r3, [pc, #24]	@ (1000e240 <register_tm_clones+0x1c>)
1000e228:	1a1b      	subs	r3, r3, r0
1000e22a:	0fd9      	lsrs	r1, r3, #31
1000e22c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
1000e230:	1049      	asrs	r1, r1, #1
1000e232:	d002      	beq.n	1000e23a <register_tm_clones+0x16>
1000e234:	4b03      	ldr	r3, [pc, #12]	@ (1000e244 <register_tm_clones+0x20>)
1000e236:	b103      	cbz	r3, 1000e23a <register_tm_clones+0x16>
1000e238:	4718      	bx	r3
1000e23a:	4770      	bx	lr
1000e23c:	20000bcc 	.word	0x20000bcc
1000e240:	20000bcc 	.word	0x20000bcc
1000e244:	00000000 	.word	0x00000000

1000e248 <__do_global_dtors_aux>:
1000e248:	b510      	push	{r4, lr}
1000e24a:	4c06      	ldr	r4, [pc, #24]	@ (1000e264 <__do_global_dtors_aux+0x1c>)
1000e24c:	7823      	ldrb	r3, [r4, #0]
1000e24e:	b943      	cbnz	r3, 1000e262 <__do_global_dtors_aux+0x1a>
1000e250:	f7ff ffda 	bl	1000e208 <deregister_tm_clones>
1000e254:	4b04      	ldr	r3, [pc, #16]	@ (1000e268 <__do_global_dtors_aux+0x20>)
1000e256:	b113      	cbz	r3, 1000e25e <__do_global_dtors_aux+0x16>
1000e258:	4804      	ldr	r0, [pc, #16]	@ (1000e26c <__do_global_dtors_aux+0x24>)
1000e25a:	f3af 8000 	nop.w
1000e25e:	2301      	movs	r3, #1
1000e260:	7023      	strb	r3, [r4, #0]
1000e262:	bd10      	pop	{r4, pc}
1000e264:	20000c00 	.word	0x20000c00
1000e268:	00000000 	.word	0x00000000
1000e26c:	1002a958 	.word	0x1002a958

1000e270 <frame_dummy>:
1000e270:	b508      	push	{r3, lr}
1000e272:	4b05      	ldr	r3, [pc, #20]	@ (1000e288 <frame_dummy+0x18>)
1000e274:	b11b      	cbz	r3, 1000e27e <frame_dummy+0xe>
1000e276:	4905      	ldr	r1, [pc, #20]	@ (1000e28c <frame_dummy+0x1c>)
1000e278:	4805      	ldr	r0, [pc, #20]	@ (1000e290 <frame_dummy+0x20>)
1000e27a:	f3af 8000 	nop.w
1000e27e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
1000e282:	f7ff bfcf 	b.w	1000e224 <register_tm_clones>
1000e286:	bf00      	nop
1000e288:	00000000 	.word	0x00000000
1000e28c:	20000c04 	.word	0x20000c04
1000e290:	1002a958 	.word	0x1002a958

1000e294 <scan_components>:
    return len;
}

/******************************** COMPONENT COMMS ********************************/

int scan_components() {
1000e294:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    // Print out provisioned component IDs
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e298:	f8df a0dc 	ldr.w	sl, [pc, #220]	@ 1000e378 <scan_components+0xe4>
1000e29c:	4e37      	ldr	r6, [pc, #220]	@ (1000e37c <scan_components+0xe8>)
1000e29e:	f8da 3004 	ldr.w	r3, [sl, #4]
int scan_components() {
1000e2a2:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e2a6:	b1db      	cbz	r3, 1000e2e0 <scan_components+0x4c>
        print_info("P>0x%08x\n", flash_status.component_ids[i]);
1000e2a8:	f8df 90d4 	ldr.w	r9, [pc, #212]	@ 1000e380 <scan_components+0xec>
1000e2ac:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 1000e384 <scan_components+0xf0>
1000e2b0:	4f35      	ldr	r7, [pc, #212]	@ (1000e388 <scan_components+0xf4>)
1000e2b2:	f10a 0504 	add.w	r5, sl, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e2b6:	2400      	movs	r4, #0
        print_info("P>0x%08x\n", flash_status.component_ids[i]);
1000e2b8:	4648      	mov	r0, r9
1000e2ba:	f005 feeb 	bl	10014094 <printf>
1000e2be:	f855 1f04 	ldr.w	r1, [r5, #4]!
1000e2c2:	4640      	mov	r0, r8
1000e2c4:	f005 fee6 	bl	10014094 <printf>
1000e2c8:	4638      	mov	r0, r7
1000e2ca:	f005 fee3 	bl	10014094 <printf>
1000e2ce:	6833      	ldr	r3, [r6, #0]
1000e2d0:	6898      	ldr	r0, [r3, #8]
1000e2d2:	f009 f8e7 	bl	100174a4 <fflush>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e2d6:	f8da 3004 	ldr.w	r3, [sl, #4]
1000e2da:	3401      	adds	r4, #1
1000e2dc:	42a3      	cmp	r3, r4
1000e2de:	d8eb      	bhi.n	1000e2b8 <scan_components+0x24>
        int len = issue_cmd(addr, transmit_buffer, receive_buffer);

        // Success, device is present
        if (len > 0) {
            scan_message* scan = (scan_message*) receive_buffer;
            print_info("F>0x%08x\n", scan->component_id);
1000e2e0:	4d27      	ldr	r5, [pc, #156]	@ (1000e380 <scan_components+0xec>)
1000e2e2:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 1000e38c <scan_components+0xf8>
1000e2e6:	4f28      	ldr	r7, [pc, #160]	@ (1000e388 <scan_components+0xf4>)
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e2e8:	2408      	movs	r4, #8
1000e2ea:	e01f      	b.n	1000e32c <scan_components+0x98>
        command->opcode = COMPONENT_CMD_SCAN;
1000e2ec:	f88d e100 	strb.w	lr, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e2f0:	f000 fc2c 	bl	1000eb4c <send_packet>
1000e2f4:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e2f6:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e2f8:	4669      	mov	r1, sp
1000e2fa:	4620      	mov	r0, r4
    if (result == ERROR_RETURN) {
1000e2fc:	d012      	beq.n	1000e324 <scan_components+0x90>
    int len = poll_and_receive_packet(addr, receive);
1000e2fe:	f000 fc3f 	bl	1000eb80 <poll_and_receive_packet>
1000e302:	4603      	mov	r3, r0
        if (len > 0) {
1000e304:	2b00      	cmp	r3, #0
            print_info("F>0x%08x\n", scan->component_id);
1000e306:	4628      	mov	r0, r5
        if (len > 0) {
1000e308:	dd0c      	ble.n	1000e324 <scan_components+0x90>
            print_info("F>0x%08x\n", scan->component_id);
1000e30a:	f005 fec3 	bl	10014094 <printf>
1000e30e:	9900      	ldr	r1, [sp, #0]
1000e310:	4640      	mov	r0, r8
1000e312:	f005 febf 	bl	10014094 <printf>
1000e316:	4638      	mov	r0, r7
1000e318:	f005 febc 	bl	10014094 <printf>
1000e31c:	6833      	ldr	r3, [r6, #0]
1000e31e:	6898      	ldr	r0, [r3, #8]
1000e320:	f009 f8c0 	bl	100174a4 <fflush>
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e324:	3401      	adds	r4, #1
1000e326:	b2e4      	uxtb	r4, r4
1000e328:	2c78      	cmp	r4, #120	@ 0x78
1000e32a:	d013      	beq.n	1000e354 <scan_components+0xc0>
        command->opcode = COMPONENT_CMD_SCAN;
1000e32c:	f1a4 0318 	sub.w	r3, r4, #24
1000e330:	b2db      	uxtb	r3, r3
1000e332:	f8df c05c 	ldr.w	ip, [pc, #92]	@ 1000e390 <scan_components+0xfc>
1000e336:	f04f 0e01 	mov.w	lr, #1
1000e33a:	2b1e      	cmp	r3, #30
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e33c:	aa40      	add	r2, sp, #256	@ 0x100
1000e33e:	4671      	mov	r1, lr
1000e340:	4620      	mov	r0, r4
1000e342:	fa2c fc03 	lsr.w	ip, ip, r3
1000e346:	d8d1      	bhi.n	1000e2ec <scan_components+0x58>
1000e348:	f01c 0f01 	tst.w	ip, #1
1000e34c:	d0ce      	beq.n	1000e2ec <scan_components+0x58>
    for (i2c_addr_t addr = 0x8; addr < 0x78; addr++) {
1000e34e:	4474      	add	r4, lr
1000e350:	b2e4      	uxtb	r4, r4
1000e352:	e7eb      	b.n	1000e32c <scan_components+0x98>
        }
    }
    print_success("List\n");
1000e354:	480f      	ldr	r0, [pc, #60]	@ (1000e394 <scan_components+0x100>)
1000e356:	f005 fe9d 	bl	10014094 <printf>
1000e35a:	480f      	ldr	r0, [pc, #60]	@ (1000e398 <scan_components+0x104>)
1000e35c:	f008 fdce 	bl	10016efc <puts>
1000e360:	4809      	ldr	r0, [pc, #36]	@ (1000e388 <scan_components+0xf4>)
1000e362:	f005 fe97 	bl	10014094 <printf>
1000e366:	6833      	ldr	r3, [r6, #0]
1000e368:	6898      	ldr	r0, [r3, #8]
1000e36a:	f009 f89b 	bl	100174a4 <fflush>
    return SUCCESS_RETURN;
}
1000e36e:	2000      	movs	r0, #0
1000e370:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e374:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1000e378:	20000c20 	.word	0x20000c20
1000e37c:	20000598 	.word	0x20000598
1000e380:	10021184 	.word	0x10021184
1000e384:	10021190 	.word	0x10021190
1000e388:	1002119c 	.word	0x1002119c
1000e38c:	100211a0 	.word	0x100211a0
1000e390:	40010001 	.word	0x40010001
1000e394:	100211ac 	.word	0x100211ac
1000e398:	100211b8 	.word	0x100211b8
1000e39c:	00000000 	.word	0x00000000

1000e3a0 <init>:
void init() {
1000e3a0:	b510      	push	{r4, lr}
  \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
1000e3a2:	b662      	cpsie	i
    flash_simple_read(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e3a4:	4c1a      	ldr	r4, [pc, #104]	@ (1000e410 <init+0x70>)
    flash_simple_init();
1000e3a6:	f000 fccd 	bl	1000ed44 <flash_simple_init>
    flash_simple_read(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e3aa:	2288      	movs	r2, #136	@ 0x88
1000e3ac:	4819      	ldr	r0, [pc, #100]	@ (1000e414 <init+0x74>)
1000e3ae:	4621      	mov	r1, r4
1000e3b0:	f000 fce2 	bl	1000ed78 <flash_simple_read>
    if (flash_status.flash_magic != FLASH_MAGIC) {
1000e3b4:	4b18      	ldr	r3, [pc, #96]	@ (1000e418 <init+0x78>)
1000e3b6:	6822      	ldr	r2, [r4, #0]
1000e3b8:	429a      	cmp	r2, r3
1000e3ba:	d01c      	beq.n	1000e3f6 <init+0x56>
        print_debug("First boot, setting flash!\n");
1000e3bc:	4817      	ldr	r0, [pc, #92]	@ (1000e41c <init+0x7c>)
1000e3be:	f005 fe69 	bl	10014094 <printf>
1000e3c2:	4817      	ldr	r0, [pc, #92]	@ (1000e420 <init+0x80>)
1000e3c4:	f008 fd9a 	bl	10016efc <puts>
1000e3c8:	4816      	ldr	r0, [pc, #88]	@ (1000e424 <init+0x84>)
1000e3ca:	f005 fe63 	bl	10014094 <printf>
1000e3ce:	4b16      	ldr	r3, [pc, #88]	@ (1000e428 <init+0x88>)
1000e3d0:	681b      	ldr	r3, [r3, #0]
1000e3d2:	6898      	ldr	r0, [r3, #8]
1000e3d4:	f009 f866 	bl	100174a4 <fflush>
        flash_status.flash_magic = FLASH_MAGIC;
1000e3d8:	a109      	add	r1, pc, #36	@ (adr r1, 1000e400 <init+0x60>)
1000e3da:	e9d1 0100 	ldrd	r0, r1, [r1]
1000e3de:	a30a      	add	r3, pc, #40	@ (adr r3, 1000e408 <init+0x68>)
1000e3e0:	e9d3 2300 	ldrd	r2, r3, [r3]
1000e3e4:	e9c4 0100 	strd	r0, r1, [r4]
1000e3e8:	e9c4 2302 	strd	r2, r3, [r4, #8]
        flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000e3ec:	4809      	ldr	r0, [pc, #36]	@ (1000e414 <init+0x74>)
1000e3ee:	2288      	movs	r2, #136	@ 0x88
1000e3f0:	4621      	mov	r1, r4
1000e3f2:	f000 fcc3 	bl	1000ed7c <flash_simple_write>
}
1000e3f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    board_link_init();
1000e3fa:	f000 bba3 	b.w	1000eb44 <board_link_init>
1000e3fe:	bf00      	nop
1000e400:	deadbeef 	.word	0xdeadbeef
1000e404:	00000002 	.word	0x00000002
1000e408:	11111111 	.word	0x11111111
1000e40c:	11111112 	.word	0x11111112
1000e410:	20000c20 	.word	0x20000c20
1000e414:	1007c000 	.word	0x1007c000
1000e418:	deadbeef 	.word	0xdeadbeef
1000e41c:	100211c0 	.word	0x100211c0
1000e420:	100211cc 	.word	0x100211cc
1000e424:	1002119c 	.word	0x1002119c
1000e428:	20000598 	.word	0x20000598

1000e42c <validate_components>:

int validate_components() {
1000e42c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Send validate command to each component
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e430:	4f24      	ldr	r7, [pc, #144]	@ (1000e4c4 <validate_components+0x98>)
1000e432:	687b      	ldr	r3, [r7, #4]
int validate_components() {
1000e434:	f5ad 7d00 	sub.w	sp, sp, #512	@ 0x200
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e438:	2b00      	cmp	r3, #0
1000e43a:	d037      	beq.n	1000e4ac <validate_components+0x80>
1000e43c:	1d3d      	adds	r5, r7, #4
1000e43e:	2600      	movs	r6, #0
        // Set the I2C address of the component
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);

        // Create command message
        command_message* command = (command_message*) transmit_buffer;
        command->opcode = COMPONENT_CMD_VALIDATE;
1000e440:	f04f 0802 	mov.w	r8, #2
1000e444:	e003      	b.n	1000e44e <validate_components+0x22>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e446:	687b      	ldr	r3, [r7, #4]
1000e448:	3601      	adds	r6, #1
1000e44a:	42b3      	cmp	r3, r6
1000e44c:	d92e      	bls.n	1000e4ac <validate_components+0x80>
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e44e:	f855 0f04 	ldr.w	r0, [r5, #4]!
1000e452:	f000 fb79 	bl	1000eb48 <component_id_to_i2c_addr>
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e456:	2101      	movs	r1, #1
1000e458:	aa40      	add	r2, sp, #256	@ 0x100
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e45a:	4604      	mov	r4, r0
        command->opcode = COMPONENT_CMD_VALIDATE;
1000e45c:	f88d 8100 	strb.w	r8, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e460:	f000 fb74 	bl	1000eb4c <send_packet>
1000e464:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e466:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e468:	4669      	mov	r1, sp
1000e46a:	4620      	mov	r0, r4
    if (result == ERROR_RETURN) {
1000e46c:	d023      	beq.n	1000e4b6 <validate_components+0x8a>
    int len = poll_and_receive_packet(addr, receive);
1000e46e:	f000 fb87 	bl	1000eb80 <poll_and_receive_packet>
    if (len == ERROR_RETURN) {
1000e472:	3001      	adds	r0, #1
1000e474:	d01f      	beq.n	1000e4b6 <validate_components+0x8a>
            return ERROR_RETURN;
        }

        validate_message* validate = (validate_message*) receive_buffer;
        // Check that the result is correct
        if (validate->component_id != flash_status.component_ids[i]) {
1000e476:	9a00      	ldr	r2, [sp, #0]
1000e478:	682b      	ldr	r3, [r5, #0]
1000e47a:	429a      	cmp	r2, r3
1000e47c:	d0e3      	beq.n	1000e446 <validate_components+0x1a>
            print_error("Component ID: 0x%08x invalid\n", flash_status.component_ids[i]);
1000e47e:	3602      	adds	r6, #2
1000e480:	4811      	ldr	r0, [pc, #68]	@ (1000e4c8 <validate_components+0x9c>)
1000e482:	f005 fe07 	bl	10014094 <printf>
1000e486:	4811      	ldr	r0, [pc, #68]	@ (1000e4cc <validate_components+0xa0>)
1000e488:	f857 1026 	ldr.w	r1, [r7, r6, lsl #2]
1000e48c:	f005 fe02 	bl	10014094 <printf>
1000e490:	480f      	ldr	r0, [pc, #60]	@ (1000e4d0 <validate_components+0xa4>)
1000e492:	f005 fdff 	bl	10014094 <printf>
1000e496:	4b0f      	ldr	r3, [pc, #60]	@ (1000e4d4 <validate_components+0xa8>)
1000e498:	681b      	ldr	r3, [r3, #0]
1000e49a:	6898      	ldr	r0, [r3, #8]
1000e49c:	f009 f802 	bl	100174a4 <fflush>
            return ERROR_RETURN;
1000e4a0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
            return ERROR_RETURN;
        }
    }
    return SUCCESS_RETURN;
}
1000e4a4:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e4a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return SUCCESS_RETURN;
1000e4ac:	2000      	movs	r0, #0
}
1000e4ae:	f50d 7d00 	add.w	sp, sp, #512	@ 0x200
1000e4b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            print_error("Could not validate component\n");
1000e4b6:	4804      	ldr	r0, [pc, #16]	@ (1000e4c8 <validate_components+0x9c>)
1000e4b8:	f005 fdec 	bl	10014094 <printf>
1000e4bc:	4806      	ldr	r0, [pc, #24]	@ (1000e4d8 <validate_components+0xac>)
1000e4be:	f008 fd1d 	bl	10016efc <puts>
1000e4c2:	e7e5      	b.n	1000e490 <validate_components+0x64>
1000e4c4:	20000c20 	.word	0x20000c20
1000e4c8:	100211e8 	.word	0x100211e8
1000e4cc:	10021214 	.word	0x10021214
1000e4d0:	1002119c 	.word	0x1002119c
1000e4d4:	20000598 	.word	0x20000598
1000e4d8:	100211f4 	.word	0x100211f4

1000e4dc <boot_components>:

int boot_components() {
1000e4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Send boot command to each component
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4e0:	4f29      	ldr	r7, [pc, #164]	@ (1000e588 <boot_components+0xac>)
1000e4e2:	687b      	ldr	r3, [r7, #4]
int boot_components() {
1000e4e4:	f5ad 7d01 	sub.w	sp, sp, #516	@ 0x204
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4e8:	b3a3      	cbz	r3, 1000e554 <boot_components+0x78>
1000e4ea:	f8df 80a0 	ldr.w	r8, [pc, #160]	@ 1000e58c <boot_components+0xb0>
            print_error("Could not boot component\n");
            return ERROR_RETURN;
        }

        // Print boot message from component
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e4ee:	f8df 90a0 	ldr.w	r9, [pc, #160]	@ 1000e590 <boot_components+0xb4>
1000e4f2:	f8df b0a0 	ldr.w	fp, [pc, #160]	@ 1000e594 <boot_components+0xb8>
1000e4f6:	f8df a0a0 	ldr.w	sl, [pc, #160]	@ 1000e598 <boot_components+0xbc>
1000e4fa:	1d3e      	adds	r6, r7, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e4fc:	2500      	movs	r5, #0
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e4fe:	f856 0f04 	ldr.w	r0, [r6, #4]!
1000e502:	f000 fb21 	bl	1000eb48 <component_id_to_i2c_addr>
        command->opcode = COMPONENT_CMD_BOOT;
1000e506:	2303      	movs	r3, #3
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e508:	2101      	movs	r1, #1
1000e50a:	aa40      	add	r2, sp, #256	@ 0x100
        i2c_addr_t addr = component_id_to_i2c_addr(flash_status.component_ids[i]);
1000e50c:	4604      	mov	r4, r0
        command->opcode = COMPONENT_CMD_BOOT;
1000e50e:	f88d 3100 	strb.w	r3, [sp, #256]	@ 0x100
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e512:	f000 fb1b 	bl	1000eb4c <send_packet>
1000e516:	4603      	mov	r3, r0
    if (result == ERROR_RETURN) {
1000e518:	3301      	adds	r3, #1
    int len = poll_and_receive_packet(addr, receive);
1000e51a:	4669      	mov	r1, sp
1000e51c:	4620      	mov	r0, r4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e51e:	f105 0501 	add.w	r5, r5, #1
    if (result == ERROR_RETURN) {
1000e522:	d01c      	beq.n	1000e55e <boot_components+0x82>
    int len = poll_and_receive_packet(addr, receive);
1000e524:	f000 fb2c 	bl	1000eb80 <poll_and_receive_packet>
1000e528:	4603      	mov	r3, r0
    if (len == ERROR_RETURN) {
1000e52a:	3301      	adds	r3, #1
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e52c:	4648      	mov	r0, r9
    if (len == ERROR_RETURN) {
1000e52e:	d016      	beq.n	1000e55e <boot_components+0x82>
        print_info("0x%08x>%s\n", flash_status.component_ids[i], receive_buffer);
1000e530:	f005 fdb0 	bl	10014094 <printf>
1000e534:	6831      	ldr	r1, [r6, #0]
1000e536:	466a      	mov	r2, sp
1000e538:	4658      	mov	r0, fp
1000e53a:	f005 fdab 	bl	10014094 <printf>
1000e53e:	4650      	mov	r0, sl
1000e540:	f005 fda8 	bl	10014094 <printf>
1000e544:	f8d8 3000 	ldr.w	r3, [r8]
1000e548:	6898      	ldr	r0, [r3, #8]
1000e54a:	f008 ffab 	bl	100174a4 <fflush>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e54e:	687b      	ldr	r3, [r7, #4]
1000e550:	42ab      	cmp	r3, r5
1000e552:	d8d4      	bhi.n	1000e4fe <boot_components+0x22>
    }
    return SUCCESS_RETURN;
1000e554:	2000      	movs	r0, #0
}
1000e556:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e55a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            print_error("Could not boot component\n");
1000e55e:	480f      	ldr	r0, [pc, #60]	@ (1000e59c <boot_components+0xc0>)
1000e560:	f005 fd98 	bl	10014094 <printf>
1000e564:	480e      	ldr	r0, [pc, #56]	@ (1000e5a0 <boot_components+0xc4>)
1000e566:	f008 fcc9 	bl	10016efc <puts>
1000e56a:	480b      	ldr	r0, [pc, #44]	@ (1000e598 <boot_components+0xbc>)
1000e56c:	f005 fd92 	bl	10014094 <printf>
1000e570:	f8d8 3000 	ldr.w	r3, [r8]
1000e574:	6898      	ldr	r0, [r3, #8]
1000e576:	f008 ff95 	bl	100174a4 <fflush>
            return ERROR_RETURN;
1000e57a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e57e:	f50d 7d01 	add.w	sp, sp, #516	@ 0x204
1000e582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1000e586:	bf00      	nop
1000e588:	20000c20 	.word	0x20000c20
1000e58c:	20000598 	.word	0x20000598
1000e590:	10021184 	.word	0x10021184
1000e594:	10021234 	.word	0x10021234
1000e598:	1002119c 	.word	0x1002119c
1000e59c:	100211e8 	.word	0x100211e8
1000e5a0:	10021240 	.word	0x10021240

1000e5a4 <attest_component>:

int attest_component(uint32_t component_id) {
1000e5a4:	b530      	push	{r4, r5, lr}
1000e5a6:	f5ad 7d05 	sub.w	sp, sp, #532	@ 0x214
1000e5aa:	4604      	mov	r4, r0
    // Buffers for board link communication
    uint8_t receive_buffer[MAX_I2C_MESSAGE_LEN];
    uint8_t transmit_buffer[MAX_I2C_MESSAGE_LEN];

    // Set the I2C address of the component
    i2c_addr_t addr = component_id_to_i2c_addr(component_id);
1000e5ac:	f000 facc 	bl	1000eb48 <component_id_to_i2c_addr>

    // Create command message
    command_message* command = (command_message*) transmit_buffer;
    command->opcode = COMPONENT_CMD_ATTEST;
1000e5b0:	2304      	movs	r3, #4
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e5b2:	aa44      	add	r2, sp, #272	@ 0x110
1000e5b4:	2101      	movs	r1, #1
    i2c_addr_t addr = component_id_to_i2c_addr(component_id);
1000e5b6:	4605      	mov	r5, r0
    command->opcode = COMPONENT_CMD_ATTEST;
1000e5b8:	f88d 3110 	strb.w	r3, [sp, #272]	@ 0x110
    int result = send_packet(addr, sizeof(uint8_t), transmit);
1000e5bc:	f000 fac6 	bl	1000eb4c <send_packet>
    if (result == ERROR_RETURN) {
1000e5c0:	3001      	adds	r0, #1
1000e5c2:	d02c      	beq.n	1000e61e <attest_component+0x7a>
    int len = poll_and_receive_packet(addr, receive);
1000e5c4:	a904      	add	r1, sp, #16
1000e5c6:	4628      	mov	r0, r5
1000e5c8:	f000 fada 	bl	1000eb80 <poll_and_receive_packet>
    if (len == ERROR_RETURN) {
1000e5cc:	3001      	adds	r0, #1
1000e5ce:	d026      	beq.n	1000e61e <attest_component+0x7a>
        print_error("Could not attest component\n");
        return ERROR_RETURN;
    }

    // Print out attestation data 
    print_info("C>0x%08x\n", component_id);
1000e5d0:	481b      	ldr	r0, [pc, #108]	@ (1000e640 <attest_component+0x9c>)
1000e5d2:	f005 fd5f 	bl	10014094 <printf>
1000e5d6:	4621      	mov	r1, r4
1000e5d8:	481a      	ldr	r0, [pc, #104]	@ (1000e644 <attest_component+0xa0>)
1000e5da:	4c1b      	ldr	r4, [pc, #108]	@ (1000e648 <attest_component+0xa4>)
1000e5dc:	f005 fd5a 	bl	10014094 <printf>
1000e5e0:	481a      	ldr	r0, [pc, #104]	@ (1000e64c <attest_component+0xa8>)
1000e5e2:	f005 fd57 	bl	10014094 <printf>
1000e5e6:	6823      	ldr	r3, [r4, #0]
1000e5e8:	6898      	ldr	r0, [r3, #8]
1000e5ea:	f008 ff5b 	bl	100174a4 <fflush>

   // print_info("%s", receive_buffer);
    // Hash example encryption results 
    uint8_t hash_out[16];
    hash(receive_buffer, 16, hash_out);
1000e5ee:	2110      	movs	r1, #16
1000e5f0:	466a      	mov	r2, sp
1000e5f2:	eb0d 0001 	add.w	r0, sp, r1
1000e5f6:	f000 fb8b 	bl	1000ed10 <hash>

    // Output hash result
    print_info("%08x", hash_out);
1000e5fa:	4811      	ldr	r0, [pc, #68]	@ (1000e640 <attest_component+0x9c>)
1000e5fc:	f005 fd4a 	bl	10014094 <printf>
1000e600:	4669      	mov	r1, sp
1000e602:	4813      	ldr	r0, [pc, #76]	@ (1000e650 <attest_component+0xac>)
1000e604:	f005 fd46 	bl	10014094 <printf>
1000e608:	4810      	ldr	r0, [pc, #64]	@ (1000e64c <attest_component+0xa8>)
1000e60a:	f005 fd43 	bl	10014094 <printf>
1000e60e:	6823      	ldr	r3, [r4, #0]
1000e610:	6898      	ldr	r0, [r3, #8]
1000e612:	f008 ff47 	bl	100174a4 <fflush>

    return SUCCESS_RETURN;
1000e616:	2000      	movs	r0, #0
}
1000e618:	f50d 7d05 	add.w	sp, sp, #532	@ 0x214
1000e61c:	bd30      	pop	{r4, r5, pc}
        print_error("Could not attest component\n");
1000e61e:	480d      	ldr	r0, [pc, #52]	@ (1000e654 <attest_component+0xb0>)
1000e620:	f005 fd38 	bl	10014094 <printf>
1000e624:	480c      	ldr	r0, [pc, #48]	@ (1000e658 <attest_component+0xb4>)
1000e626:	f008 fc69 	bl	10016efc <puts>
1000e62a:	4808      	ldr	r0, [pc, #32]	@ (1000e64c <attest_component+0xa8>)
1000e62c:	f005 fd32 	bl	10014094 <printf>
1000e630:	4b05      	ldr	r3, [pc, #20]	@ (1000e648 <attest_component+0xa4>)
1000e632:	681b      	ldr	r3, [r3, #0]
1000e634:	6898      	ldr	r0, [r3, #8]
1000e636:	f008 ff35 	bl	100174a4 <fflush>
        return ERROR_RETURN;
1000e63a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e63e:	e7eb      	b.n	1000e618 <attest_component+0x74>
1000e640:	10021184 	.word	0x10021184
1000e644:	1002125c 	.word	0x1002125c
1000e648:	20000598 	.word	0x20000598
1000e64c:	1002119c 	.word	0x1002119c
1000e650:	10021268 	.word	0x10021268
1000e654:	100211e8 	.word	0x100211e8
1000e658:	10021270 	.word	0x10021270

1000e65c <boot>:
/********************************* AP LOGIC ***********************************/

// Boot sequence
// YOUR DESIGN MUST NOT CHANGE THIS FUNCTION
// Boot message is customized through the AP_BOOT_MSG macro
void boot() {
1000e65c:	b510      	push	{r4, lr}
    char* data = "Crypto Example!";
    uint8_t ciphertext[BLOCK_SIZE];
    uint8_t key[KEY_SIZE];
    
    // Zero out the key
    bzero(key, BLOCK_SIZE);
1000e65e:	2000      	movs	r0, #0
void boot() {
1000e660:	b090      	sub	sp, #64	@ 0x40

    // Encrypt example data and print out
    encrypt_sym((uint8_t*)data, BLOCK_SIZE, key, ciphertext); 
1000e662:	aa04      	add	r2, sp, #16
1000e664:	2110      	movs	r1, #16
1000e666:	466b      	mov	r3, sp
    bzero(key, BLOCK_SIZE);
1000e668:	e9cd 0004 	strd	r0, r0, [sp, #16]
1000e66c:	e9cd 0006 	strd	r0, r0, [sp, #24]
    encrypt_sym((uint8_t*)data, BLOCK_SIZE, key, ciphertext); 
1000e670:	483c      	ldr	r0, [pc, #240]	@ (1000e764 <boot+0x108>)
    print_debug("Encrypted data: ");
1000e672:	4c3d      	ldr	r4, [pc, #244]	@ (1000e768 <boot+0x10c>)
    encrypt_sym((uint8_t*)data, BLOCK_SIZE, key, ciphertext); 
1000e674:	f000 faf6 	bl	1000ec64 <encrypt_sym>
    print_debug("Encrypted data: ");
1000e678:	483c      	ldr	r0, [pc, #240]	@ (1000e76c <boot+0x110>)
1000e67a:	f005 fd0b 	bl	10014094 <printf>
1000e67e:	483c      	ldr	r0, [pc, #240]	@ (1000e770 <boot+0x114>)
1000e680:	f005 fd08 	bl	10014094 <printf>
1000e684:	483b      	ldr	r0, [pc, #236]	@ (1000e774 <boot+0x118>)
1000e686:	f005 fd05 	bl	10014094 <printf>
1000e68a:	6823      	ldr	r3, [r4, #0]
1000e68c:	6898      	ldr	r0, [r3, #8]
1000e68e:	f008 ff09 	bl	100174a4 <fflush>
    print_hex_debug(ciphertext, BLOCK_SIZE);
1000e692:	4836      	ldr	r0, [pc, #216]	@ (1000e76c <boot+0x110>)
1000e694:	f005 fcfe 	bl	10014094 <printf>
1000e698:	2110      	movs	r1, #16
1000e69a:	4668      	mov	r0, sp
1000e69c:	f000 faca 	bl	1000ec34 <print_hex>
1000e6a0:	4834      	ldr	r0, [pc, #208]	@ (1000e774 <boot+0x118>)
1000e6a2:	f005 fcf7 	bl	10014094 <printf>
1000e6a6:	6823      	ldr	r3, [r4, #0]
1000e6a8:	6898      	ldr	r0, [r3, #8]
1000e6aa:	f008 fefb 	bl	100174a4 <fflush>

    // Hash example encryption results 
    uint8_t hash_out[HASH_SIZE];
    hash(ciphertext, BLOCK_SIZE, hash_out);
1000e6ae:	aa08      	add	r2, sp, #32
1000e6b0:	2110      	movs	r1, #16
1000e6b2:	4668      	mov	r0, sp
1000e6b4:	f000 fb2c 	bl	1000ed10 <hash>

    // Output hash result
    print_debug("Hash result: ");
1000e6b8:	482c      	ldr	r0, [pc, #176]	@ (1000e76c <boot+0x110>)
1000e6ba:	f005 fceb 	bl	10014094 <printf>
1000e6be:	482e      	ldr	r0, [pc, #184]	@ (1000e778 <boot+0x11c>)
1000e6c0:	f005 fce8 	bl	10014094 <printf>
1000e6c4:	482b      	ldr	r0, [pc, #172]	@ (1000e774 <boot+0x118>)
1000e6c6:	f005 fce5 	bl	10014094 <printf>
1000e6ca:	6823      	ldr	r3, [r4, #0]
1000e6cc:	6898      	ldr	r0, [r3, #8]
1000e6ce:	f008 fee9 	bl	100174a4 <fflush>
    print_hex_debug(hash_out, HASH_SIZE);
1000e6d2:	4826      	ldr	r0, [pc, #152]	@ (1000e76c <boot+0x110>)
1000e6d4:	f005 fcde 	bl	10014094 <printf>
1000e6d8:	2110      	movs	r1, #16
1000e6da:	a808      	add	r0, sp, #32
1000e6dc:	f000 faaa 	bl	1000ec34 <print_hex>
1000e6e0:	4824      	ldr	r0, [pc, #144]	@ (1000e774 <boot+0x118>)
1000e6e2:	f005 fcd7 	bl	10014094 <printf>
1000e6e6:	6823      	ldr	r3, [r4, #0]
1000e6e8:	6898      	ldr	r0, [r3, #8]
1000e6ea:	f008 fedb 	bl	100174a4 <fflush>
    
    // Decrypt the encrypted message and print out
    uint8_t decrypted[BLOCK_SIZE];
    decrypt_sym(ciphertext, BLOCK_SIZE, key, decrypted);
1000e6ee:	ab0c      	add	r3, sp, #48	@ 0x30
1000e6f0:	aa04      	add	r2, sp, #16
1000e6f2:	2110      	movs	r1, #16
1000e6f4:	4668      	mov	r0, sp
1000e6f6:	f000 fadf 	bl	1000ecb8 <decrypt_sym>
    print_debug("Decrypted message: %s\r\n", decrypted);
1000e6fa:	481c      	ldr	r0, [pc, #112]	@ (1000e76c <boot+0x110>)
1000e6fc:	f005 fcca 	bl	10014094 <printf>
1000e700:	a90c      	add	r1, sp, #48	@ 0x30
1000e702:	481e      	ldr	r0, [pc, #120]	@ (1000e77c <boot+0x120>)
1000e704:	f005 fcc6 	bl	10014094 <printf>
1000e708:	481a      	ldr	r0, [pc, #104]	@ (1000e774 <boot+0x118>)
1000e70a:	f005 fcc3 	bl	10014094 <printf>
1000e70e:	6823      	ldr	r3, [r4, #0]
    #else
    // Everything after this point is modifiable in your design
    // LED loop to show that boot occurred
    while (1) {
        LED_On(LED1);
        MXC_Delay(500000);
1000e710:	4c1b      	ldr	r4, [pc, #108]	@ (1000e780 <boot+0x124>)
    print_debug("Decrypted message: %s\r\n", decrypted);
1000e712:	6898      	ldr	r0, [r3, #8]
1000e714:	f008 fec6 	bl	100174a4 <fflush>
        LED_On(LED1);
1000e718:	2000      	movs	r0, #0
1000e71a:	f003 fa25 	bl	10011b68 <LED_On>
        MXC_Delay(500000);
1000e71e:	4620      	mov	r0, r4
1000e720:	f003 fc40 	bl	10011fa4 <MXC_Delay>
        LED_On(LED2);
1000e724:	2001      	movs	r0, #1
1000e726:	f003 fa1f 	bl	10011b68 <LED_On>
        MXC_Delay(500000);
1000e72a:	4620      	mov	r0, r4
1000e72c:	f003 fc3a 	bl	10011fa4 <MXC_Delay>
        LED_On(LED3);
1000e730:	2002      	movs	r0, #2
1000e732:	f003 fa19 	bl	10011b68 <LED_On>
        MXC_Delay(500000);
1000e736:	4620      	mov	r0, r4
1000e738:	f003 fc34 	bl	10011fa4 <MXC_Delay>
        LED_Off(LED1);
1000e73c:	2000      	movs	r0, #0
1000e73e:	f003 fa33 	bl	10011ba8 <LED_Off>
        MXC_Delay(500000);
1000e742:	4620      	mov	r0, r4
1000e744:	f003 fc2e 	bl	10011fa4 <MXC_Delay>
        LED_Off(LED2);
1000e748:	2001      	movs	r0, #1
1000e74a:	f003 fa2d 	bl	10011ba8 <LED_Off>
        MXC_Delay(500000);
1000e74e:	4620      	mov	r0, r4
1000e750:	f003 fc28 	bl	10011fa4 <MXC_Delay>
        LED_Off(LED3);
1000e754:	2002      	movs	r0, #2
1000e756:	f003 fa27 	bl	10011ba8 <LED_Off>
        MXC_Delay(500000);
1000e75a:	4620      	mov	r0, r4
1000e75c:	f003 fc22 	bl	10011fa4 <MXC_Delay>
    while (1) {
1000e760:	e7da      	b.n	1000e718 <boot+0xbc>
1000e762:	bf00      	nop
1000e764:	1002128c 	.word	0x1002128c
1000e768:	20000598 	.word	0x20000598
1000e76c:	100211c0 	.word	0x100211c0
1000e770:	1002129c 	.word	0x1002129c
1000e774:	1002119c 	.word	0x1002119c
1000e778:	100212b0 	.word	0x100212b0
1000e77c:	100212c0 	.word	0x100212c0
1000e780:	0007a120 	.word	0x0007a120

1000e784 <attempt_boot>:
    print_error("Invalid Token!\n");
    return ERROR_RETURN;
}

// Boot the components and board if the components validate
void attempt_boot() {
1000e784:	b510      	push	{r4, lr}
    if (validate_components()) {
1000e786:	f7ff fe51 	bl	1000e42c <validate_components>
1000e78a:	b9f8      	cbnz	r0, 1000e7cc <attempt_boot+0x48>
        print_error("Components could not be validated\n");
        return;
    }
    print_debug("All Components validated\n");
1000e78c:	4826      	ldr	r0, [pc, #152]	@ (1000e828 <attempt_boot+0xa4>)
1000e78e:	4c27      	ldr	r4, [pc, #156]	@ (1000e82c <attempt_boot+0xa8>)
1000e790:	f005 fc80 	bl	10014094 <printf>
1000e794:	4826      	ldr	r0, [pc, #152]	@ (1000e830 <attempt_boot+0xac>)
1000e796:	f008 fbb1 	bl	10016efc <puts>
1000e79a:	4826      	ldr	r0, [pc, #152]	@ (1000e834 <attempt_boot+0xb0>)
1000e79c:	f005 fc7a 	bl	10014094 <printf>
1000e7a0:	6823      	ldr	r3, [r4, #0]
1000e7a2:	6898      	ldr	r0, [r3, #8]
1000e7a4:	f008 fe7e 	bl	100174a4 <fflush>
    if (boot_components()) {
1000e7a8:	f7ff fe98 	bl	1000e4dc <boot_components>
1000e7ac:	b1f0      	cbz	r0, 1000e7ec <attempt_boot+0x68>
        print_error("Failed to boot all components\n");
1000e7ae:	4822      	ldr	r0, [pc, #136]	@ (1000e838 <attempt_boot+0xb4>)
1000e7b0:	f005 fc70 	bl	10014094 <printf>
1000e7b4:	4821      	ldr	r0, [pc, #132]	@ (1000e83c <attempt_boot+0xb8>)
1000e7b6:	f008 fba1 	bl	10016efc <puts>
1000e7ba:	481e      	ldr	r0, [pc, #120]	@ (1000e834 <attempt_boot+0xb0>)
1000e7bc:	f005 fc6a 	bl	10014094 <printf>
1000e7c0:	6823      	ldr	r3, [r4, #0]
    // This always needs to be printed when booting
    print_info("AP>%s\n", AP_BOOT_MSG);
    print_success("Boot\n");
    // Boot
    boot();
}
1000e7c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        print_error("Failed to boot all components\n");
1000e7c6:	6898      	ldr	r0, [r3, #8]
1000e7c8:	f008 be6c 	b.w	100174a4 <fflush>
        print_error("Components could not be validated\n");
1000e7cc:	481a      	ldr	r0, [pc, #104]	@ (1000e838 <attempt_boot+0xb4>)
1000e7ce:	f005 fc61 	bl	10014094 <printf>
1000e7d2:	481b      	ldr	r0, [pc, #108]	@ (1000e840 <attempt_boot+0xbc>)
1000e7d4:	f008 fb92 	bl	10016efc <puts>
1000e7d8:	4816      	ldr	r0, [pc, #88]	@ (1000e834 <attempt_boot+0xb0>)
1000e7da:	f005 fc5b 	bl	10014094 <printf>
1000e7de:	4b13      	ldr	r3, [pc, #76]	@ (1000e82c <attempt_boot+0xa8>)
1000e7e0:	681b      	ldr	r3, [r3, #0]
}
1000e7e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        print_error("Components could not be validated\n");
1000e7e6:	6898      	ldr	r0, [r3, #8]
1000e7e8:	f008 be5c 	b.w	100174a4 <fflush>
    print_info("AP>%s\n", AP_BOOT_MSG);
1000e7ec:	4815      	ldr	r0, [pc, #84]	@ (1000e844 <attempt_boot+0xc0>)
1000e7ee:	f005 fc51 	bl	10014094 <printf>
1000e7f2:	4915      	ldr	r1, [pc, #84]	@ (1000e848 <attempt_boot+0xc4>)
1000e7f4:	4815      	ldr	r0, [pc, #84]	@ (1000e84c <attempt_boot+0xc8>)
1000e7f6:	f005 fc4d 	bl	10014094 <printf>
1000e7fa:	480e      	ldr	r0, [pc, #56]	@ (1000e834 <attempt_boot+0xb0>)
1000e7fc:	f005 fc4a 	bl	10014094 <printf>
1000e800:	6823      	ldr	r3, [r4, #0]
1000e802:	6898      	ldr	r0, [r3, #8]
1000e804:	f008 fe4e 	bl	100174a4 <fflush>
    print_success("Boot\n");
1000e808:	4811      	ldr	r0, [pc, #68]	@ (1000e850 <attempt_boot+0xcc>)
1000e80a:	f005 fc43 	bl	10014094 <printf>
1000e80e:	4811      	ldr	r0, [pc, #68]	@ (1000e854 <attempt_boot+0xd0>)
1000e810:	f008 fb74 	bl	10016efc <puts>
1000e814:	4807      	ldr	r0, [pc, #28]	@ (1000e834 <attempt_boot+0xb0>)
1000e816:	f005 fc3d 	bl	10014094 <printf>
1000e81a:	6823      	ldr	r3, [r4, #0]
1000e81c:	6898      	ldr	r0, [r3, #8]
1000e81e:	f008 fe41 	bl	100174a4 <fflush>
    boot();
1000e822:	f7ff ff1b 	bl	1000e65c <boot>
1000e826:	bf00      	nop
1000e828:	100211c0 	.word	0x100211c0
1000e82c:	20000598 	.word	0x20000598
1000e830:	100212fc 	.word	0x100212fc
1000e834:	1002119c 	.word	0x1002119c
1000e838:	100211e8 	.word	0x100211e8
1000e83c:	10021318 	.word	0x10021318
1000e840:	100212d8 	.word	0x100212d8
1000e844:	10021184 	.word	0x10021184
1000e848:	10021338 	.word	0x10021338
1000e84c:	10021340 	.word	0x10021340
1000e850:	100211ac 	.word	0x100211ac
1000e854:	10021348 	.word	0x10021348

1000e858 <validate_pin>:
int validate_pin() {
1000e858:	b510      	push	{r4, lr}
1000e85a:	b082      	sub	sp, #8
    recv_input("Enter pin: ", buf, 7);
1000e85c:	4816      	ldr	r0, [pc, #88]	@ (1000e8b8 <validate_pin+0x60>)
1000e85e:	4669      	mov	r1, sp
1000e860:	2207      	movs	r2, #7
1000e862:	f000 f9b5 	bl	1000ebd0 <recv_input>
    if (!strcmp(buf, AP_PIN)) {
1000e866:	4915      	ldr	r1, [pc, #84]	@ (1000e8bc <validate_pin+0x64>)
1000e868:	4668      	mov	r0, sp
1000e86a:	f009 fc49 	bl	10018100 <strcmp>
1000e86e:	b988      	cbnz	r0, 1000e894 <validate_pin+0x3c>
        print_debug("Pin Accepted!\n");
1000e870:	4604      	mov	r4, r0
1000e872:	4813      	ldr	r0, [pc, #76]	@ (1000e8c0 <validate_pin+0x68>)
1000e874:	f005 fc0e 	bl	10014094 <printf>
1000e878:	4812      	ldr	r0, [pc, #72]	@ (1000e8c4 <validate_pin+0x6c>)
1000e87a:	f008 fb3f 	bl	10016efc <puts>
1000e87e:	4812      	ldr	r0, [pc, #72]	@ (1000e8c8 <validate_pin+0x70>)
1000e880:	f005 fc08 	bl	10014094 <printf>
1000e884:	4b11      	ldr	r3, [pc, #68]	@ (1000e8cc <validate_pin+0x74>)
1000e886:	681b      	ldr	r3, [r3, #0]
1000e888:	6898      	ldr	r0, [r3, #8]
1000e88a:	f008 fe0b 	bl	100174a4 <fflush>
}
1000e88e:	4620      	mov	r0, r4
1000e890:	b002      	add	sp, #8
1000e892:	bd10      	pop	{r4, pc}
    print_error("Invalid PIN!\n");
1000e894:	480e      	ldr	r0, [pc, #56]	@ (1000e8d0 <validate_pin+0x78>)
1000e896:	f005 fbfd 	bl	10014094 <printf>
1000e89a:	480e      	ldr	r0, [pc, #56]	@ (1000e8d4 <validate_pin+0x7c>)
1000e89c:	f008 fb2e 	bl	10016efc <puts>
1000e8a0:	4809      	ldr	r0, [pc, #36]	@ (1000e8c8 <validate_pin+0x70>)
1000e8a2:	f005 fbf7 	bl	10014094 <printf>
1000e8a6:	4b09      	ldr	r3, [pc, #36]	@ (1000e8cc <validate_pin+0x74>)
1000e8a8:	681b      	ldr	r3, [r3, #0]
1000e8aa:	6898      	ldr	r0, [r3, #8]
1000e8ac:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
1000e8b0:	f008 fdf8 	bl	100174a4 <fflush>
    return ERROR_RETURN;
1000e8b4:	e7eb      	b.n	1000e88e <validate_pin+0x36>
1000e8b6:	bf00      	nop
1000e8b8:	10021350 	.word	0x10021350
1000e8bc:	1002135c 	.word	0x1002135c
1000e8c0:	100211c0 	.word	0x100211c0
1000e8c4:	10021364 	.word	0x10021364
1000e8c8:	1002119c 	.word	0x1002119c
1000e8cc:	20000598 	.word	0x20000598
1000e8d0:	100211e8 	.word	0x100211e8
1000e8d4:	10021374 	.word	0x10021374

1000e8d8 <attempt_attest>:
    print_error("Component 0x%08x is not provisioned for the system\r\n",
            component_id_out);
}

// Attest a component if the PIN is correct
void attempt_attest() {
1000e8d8:	b500      	push	{lr}
1000e8da:	b085      	sub	sp, #20
    char buf[11];

    if (validate_pin()) {
1000e8dc:	f7ff ffbc 	bl	1000e858 <validate_pin>
1000e8e0:	b110      	cbz	r0, 1000e8e8 <attempt_attest+0x10>
    recv_input("Component ID: ", buf,11);
    sscanf(buf, "%x", &component_id);
    if (attest_component(component_id) == SUCCESS_RETURN) {
        print_success("Attest\n");
    }
}
1000e8e2:	b005      	add	sp, #20
1000e8e4:	f85d fb04 	ldr.w	pc, [sp], #4
    recv_input("Component ID: ", buf,11);
1000e8e8:	480f      	ldr	r0, [pc, #60]	@ (1000e928 <attempt_attest+0x50>)
1000e8ea:	220b      	movs	r2, #11
1000e8ec:	a901      	add	r1, sp, #4
1000e8ee:	f000 f96f 	bl	1000ebd0 <recv_input>
    sscanf(buf, "%x", &component_id);
1000e8f2:	490e      	ldr	r1, [pc, #56]	@ (1000e92c <attempt_attest+0x54>)
1000e8f4:	466a      	mov	r2, sp
1000e8f6:	a801      	add	r0, sp, #4
1000e8f8:	f008 fe8a 	bl	10017610 <sscanf>
    if (attest_component(component_id) == SUCCESS_RETURN) {
1000e8fc:	9800      	ldr	r0, [sp, #0]
1000e8fe:	f7ff fe51 	bl	1000e5a4 <attest_component>
1000e902:	2800      	cmp	r0, #0
1000e904:	d1ed      	bne.n	1000e8e2 <attempt_attest+0xa>
        print_success("Attest\n");
1000e906:	480a      	ldr	r0, [pc, #40]	@ (1000e930 <attempt_attest+0x58>)
1000e908:	f005 fbc4 	bl	10014094 <printf>
1000e90c:	4809      	ldr	r0, [pc, #36]	@ (1000e934 <attempt_attest+0x5c>)
1000e90e:	f008 faf5 	bl	10016efc <puts>
1000e912:	4809      	ldr	r0, [pc, #36]	@ (1000e938 <attempt_attest+0x60>)
1000e914:	f005 fbbe 	bl	10014094 <printf>
1000e918:	4b08      	ldr	r3, [pc, #32]	@ (1000e93c <attempt_attest+0x64>)
1000e91a:	681b      	ldr	r3, [r3, #0]
1000e91c:	6898      	ldr	r0, [r3, #8]
1000e91e:	f008 fdc1 	bl	100174a4 <fflush>
}
1000e922:	b005      	add	sp, #20
1000e924:	f85d fb04 	ldr.w	pc, [sp], #4
1000e928:	10021384 	.word	0x10021384
1000e92c:	10021394 	.word	0x10021394
1000e930:	100211ac 	.word	0x100211ac
1000e934:	10021398 	.word	0x10021398
1000e938:	1002119c 	.word	0x1002119c
1000e93c:	20000598 	.word	0x20000598

1000e940 <validate_token>:
int validate_token() {
1000e940:	b510      	push	{r4, lr}
1000e942:	b086      	sub	sp, #24
    recv_input("Enter token: ", buf, 17);
1000e944:	4816      	ldr	r0, [pc, #88]	@ (1000e9a0 <validate_token+0x60>)
1000e946:	a901      	add	r1, sp, #4
1000e948:	2211      	movs	r2, #17
1000e94a:	f000 f941 	bl	1000ebd0 <recv_input>
    if (!strcmp(buf, AP_TOKEN)) {
1000e94e:	4915      	ldr	r1, [pc, #84]	@ (1000e9a4 <validate_token+0x64>)
1000e950:	a801      	add	r0, sp, #4
1000e952:	f009 fbd5 	bl	10018100 <strcmp>
1000e956:	b988      	cbnz	r0, 1000e97c <validate_token+0x3c>
        print_debug("Token Accepted!\n");
1000e958:	4604      	mov	r4, r0
1000e95a:	4813      	ldr	r0, [pc, #76]	@ (1000e9a8 <validate_token+0x68>)
1000e95c:	f005 fb9a 	bl	10014094 <printf>
1000e960:	4812      	ldr	r0, [pc, #72]	@ (1000e9ac <validate_token+0x6c>)
1000e962:	f008 facb 	bl	10016efc <puts>
1000e966:	4812      	ldr	r0, [pc, #72]	@ (1000e9b0 <validate_token+0x70>)
1000e968:	f005 fb94 	bl	10014094 <printf>
1000e96c:	4b11      	ldr	r3, [pc, #68]	@ (1000e9b4 <validate_token+0x74>)
1000e96e:	681b      	ldr	r3, [r3, #0]
1000e970:	6898      	ldr	r0, [r3, #8]
1000e972:	f008 fd97 	bl	100174a4 <fflush>
}
1000e976:	4620      	mov	r0, r4
1000e978:	b006      	add	sp, #24
1000e97a:	bd10      	pop	{r4, pc}
    print_error("Invalid Token!\n");
1000e97c:	480e      	ldr	r0, [pc, #56]	@ (1000e9b8 <validate_token+0x78>)
1000e97e:	f005 fb89 	bl	10014094 <printf>
1000e982:	480e      	ldr	r0, [pc, #56]	@ (1000e9bc <validate_token+0x7c>)
1000e984:	f008 faba 	bl	10016efc <puts>
1000e988:	4809      	ldr	r0, [pc, #36]	@ (1000e9b0 <validate_token+0x70>)
1000e98a:	f005 fb83 	bl	10014094 <printf>
1000e98e:	4b09      	ldr	r3, [pc, #36]	@ (1000e9b4 <validate_token+0x74>)
1000e990:	681b      	ldr	r3, [r3, #0]
1000e992:	6898      	ldr	r0, [r3, #8]
1000e994:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
1000e998:	f008 fd84 	bl	100174a4 <fflush>
    return ERROR_RETURN;
1000e99c:	e7eb      	b.n	1000e976 <validate_token+0x36>
1000e99e:	bf00      	nop
1000e9a0:	100213a0 	.word	0x100213a0
1000e9a4:	100213b0 	.word	0x100213b0
1000e9a8:	100211c0 	.word	0x100211c0
1000e9ac:	100213c4 	.word	0x100213c4
1000e9b0:	1002119c 	.word	0x1002119c
1000e9b4:	20000598 	.word	0x20000598
1000e9b8:	100211e8 	.word	0x100211e8
1000e9bc:	100213d4 	.word	0x100213d4

1000e9c0 <attempt_replace>:
void attempt_replace() {
1000e9c0:	b570      	push	{r4, r5, r6, lr}
1000e9c2:	b086      	sub	sp, #24
    if (validate_token()) {
1000e9c4:	f7ff ffbc 	bl	1000e940 <validate_token>
1000e9c8:	b108      	cbz	r0, 1000e9ce <attempt_replace+0xe>
}
1000e9ca:	b006      	add	sp, #24
1000e9cc:	bd70      	pop	{r4, r5, r6, pc}
    uint32_t component_id_in = 0;
1000e9ce:	4604      	mov	r4, r0
    recv_input("Component ID In: ", buf, 11);
1000e9d0:	220b      	movs	r2, #11
1000e9d2:	4830      	ldr	r0, [pc, #192]	@ (1000ea94 <attempt_replace+0xd4>)
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e9d4:	4e30      	ldr	r6, [pc, #192]	@ (1000ea98 <attempt_replace+0xd8>)
    recv_input("Component ID In: ", buf, 11);
1000e9d6:	a903      	add	r1, sp, #12
    uint32_t component_id_out = 0;
1000e9d8:	e9cd 4401 	strd	r4, r4, [sp, #4]
    recv_input("Component ID In: ", buf, 11);
1000e9dc:	f000 f8f8 	bl	1000ebd0 <recv_input>
    sscanf(buf, "%x", &component_id_in);
1000e9e0:	492e      	ldr	r1, [pc, #184]	@ (1000ea9c <attempt_replace+0xdc>)
1000e9e2:	aa01      	add	r2, sp, #4
1000e9e4:	a803      	add	r0, sp, #12
1000e9e6:	f008 fe13 	bl	10017610 <sscanf>
    recv_input("Component ID Out: ", buf, 11);
1000e9ea:	482d      	ldr	r0, [pc, #180]	@ (1000eaa0 <attempt_replace+0xe0>)
1000e9ec:	220b      	movs	r2, #11
1000e9ee:	a903      	add	r1, sp, #12
1000e9f0:	f000 f8ee 	bl	1000ebd0 <recv_input>
    sscanf(buf, "%x", &component_id_out);
1000e9f4:	4929      	ldr	r1, [pc, #164]	@ (1000ea9c <attempt_replace+0xdc>)
1000e9f6:	aa02      	add	r2, sp, #8
1000e9f8:	a803      	add	r0, sp, #12
1000e9fa:	f008 fe09 	bl	10017610 <sscanf>
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000e9fe:	6871      	ldr	r1, [r6, #4]
1000ea00:	2900      	cmp	r1, #0
1000ea02:	d035      	beq.n	1000ea70 <attempt_replace+0xb0>
        if (flash_status.component_ids[i] == component_id_out) {
1000ea04:	9d02      	ldr	r5, [sp, #8]
1000ea06:	1d33      	adds	r3, r6, #4
    for (unsigned i = 0; i < flash_status.component_cnt; i++) {
1000ea08:	4620      	mov	r0, r4
1000ea0a:	e002      	b.n	1000ea12 <attempt_replace+0x52>
1000ea0c:	3001      	adds	r0, #1
1000ea0e:	4288      	cmp	r0, r1
1000ea10:	d02e      	beq.n	1000ea70 <attempt_replace+0xb0>
        if (flash_status.component_ids[i] == component_id_out) {
1000ea12:	f853 2f04 	ldr.w	r2, [r3, #4]!
1000ea16:	42aa      	cmp	r2, r5
1000ea18:	d1f8      	bne.n	1000ea0c <attempt_replace+0x4c>
            flash_status.component_ids[i] = component_id_in;
1000ea1a:	1c83      	adds	r3, r0, #2
1000ea1c:	9a01      	ldr	r2, [sp, #4]
            flash_simple_erase_page(FLASH_ADDR);
1000ea1e:	4821      	ldr	r0, [pc, #132]	@ (1000eaa4 <attempt_replace+0xe4>)
            flash_status.component_ids[i] = component_id_in;
1000ea20:	f846 2023 	str.w	r2, [r6, r3, lsl #2]
            flash_simple_erase_page(FLASH_ADDR);
1000ea24:	f000 f9a6 	bl	1000ed74 <flash_simple_erase_page>
            flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000ea28:	491b      	ldr	r1, [pc, #108]	@ (1000ea98 <attempt_replace+0xd8>)
1000ea2a:	481e      	ldr	r0, [pc, #120]	@ (1000eaa4 <attempt_replace+0xe4>)
            print_debug("Replaced 0x%08x with 0x%08x\n", component_id_out,
1000ea2c:	4c1e      	ldr	r4, [pc, #120]	@ (1000eaa8 <attempt_replace+0xe8>)
            flash_simple_write(FLASH_ADDR, (uint32_t*)&flash_status, sizeof(flash_entry));
1000ea2e:	2288      	movs	r2, #136	@ 0x88
1000ea30:	f000 f9a4 	bl	1000ed7c <flash_simple_write>
            print_debug("Replaced 0x%08x with 0x%08x\n", component_id_out,
1000ea34:	481d      	ldr	r0, [pc, #116]	@ (1000eaac <attempt_replace+0xec>)
1000ea36:	f005 fb2d 	bl	10014094 <printf>
1000ea3a:	e9dd 2101 	ldrd	r2, r1, [sp, #4]
1000ea3e:	481c      	ldr	r0, [pc, #112]	@ (1000eab0 <attempt_replace+0xf0>)
1000ea40:	f005 fb28 	bl	10014094 <printf>
1000ea44:	481b      	ldr	r0, [pc, #108]	@ (1000eab4 <attempt_replace+0xf4>)
1000ea46:	f005 fb25 	bl	10014094 <printf>
1000ea4a:	6823      	ldr	r3, [r4, #0]
1000ea4c:	6898      	ldr	r0, [r3, #8]
1000ea4e:	f008 fd29 	bl	100174a4 <fflush>
            print_success("Replace\n");
1000ea52:	4819      	ldr	r0, [pc, #100]	@ (1000eab8 <attempt_replace+0xf8>)
1000ea54:	f005 fb1e 	bl	10014094 <printf>
1000ea58:	4818      	ldr	r0, [pc, #96]	@ (1000eabc <attempt_replace+0xfc>)
1000ea5a:	f008 fa4f 	bl	10016efc <puts>
1000ea5e:	4815      	ldr	r0, [pc, #84]	@ (1000eab4 <attempt_replace+0xf4>)
1000ea60:	f005 fb18 	bl	10014094 <printf>
1000ea64:	6823      	ldr	r3, [r4, #0]
1000ea66:	6898      	ldr	r0, [r3, #8]
1000ea68:	f008 fd1c 	bl	100174a4 <fflush>
}
1000ea6c:	b006      	add	sp, #24
1000ea6e:	bd70      	pop	{r4, r5, r6, pc}
    print_error("Component 0x%08x is not provisioned for the system\r\n",
1000ea70:	4813      	ldr	r0, [pc, #76]	@ (1000eac0 <attempt_replace+0x100>)
1000ea72:	f005 fb0f 	bl	10014094 <printf>
1000ea76:	9902      	ldr	r1, [sp, #8]
1000ea78:	4812      	ldr	r0, [pc, #72]	@ (1000eac4 <attempt_replace+0x104>)
1000ea7a:	f005 fb0b 	bl	10014094 <printf>
1000ea7e:	480d      	ldr	r0, [pc, #52]	@ (1000eab4 <attempt_replace+0xf4>)
1000ea80:	f005 fb08 	bl	10014094 <printf>
1000ea84:	4b08      	ldr	r3, [pc, #32]	@ (1000eaa8 <attempt_replace+0xe8>)
1000ea86:	681b      	ldr	r3, [r3, #0]
1000ea88:	6898      	ldr	r0, [r3, #8]
1000ea8a:	f008 fd0b 	bl	100174a4 <fflush>
}
1000ea8e:	b006      	add	sp, #24
1000ea90:	bd70      	pop	{r4, r5, r6, pc}
1000ea92:	bf00      	nop
1000ea94:	100213e4 	.word	0x100213e4
1000ea98:	20000c20 	.word	0x20000c20
1000ea9c:	10021394 	.word	0x10021394
1000eaa0:	100213f8 	.word	0x100213f8
1000eaa4:	1007c000 	.word	0x1007c000
1000eaa8:	20000598 	.word	0x20000598
1000eaac:	100211c0 	.word	0x100211c0
1000eab0:	1002140c 	.word	0x1002140c
1000eab4:	1002119c 	.word	0x1002119c
1000eab8:	100211ac 	.word	0x100211ac
1000eabc:	1002142c 	.word	0x1002142c
1000eac0:	100211e8 	.word	0x100211e8
1000eac4:	10021434 	.word	0x10021434

1000eac8 <main>:
    const char *name;
    void (*function)();
} Command;


int main() {
1000eac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000eacc:	b08a      	sub	sp, #40	@ 0x28
    // Initialize board
    init();
1000eace:	f7ff fc67 	bl	1000e3a0 <init>
            {"boot", attempt_boot},
            {"replace", attempt_replace},
            {"attest", attempt_attest}
        };

        recv_input("Enter Command: ", buf, 8);
1000ead2:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 1000eb38 <main+0x70>

        // Remove newline character from input
        buf[strcspn(buf, "\n")] = '\0';
1000ead6:	4f19      	ldr	r7, [pc, #100]	@ (1000eb3c <main+0x74>)
1000ead8:	ae02      	add	r6, sp, #8
        Command commands[] = 
1000eada:	4d19      	ldr	r5, [pc, #100]	@ (1000eb40 <main+0x78>)
1000eadc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
1000eade:	4634      	mov	r4, r6
1000eae0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1000eae2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
1000eae6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
        recv_input("Enter Command: ", buf, 8);
1000eaea:	2208      	movs	r2, #8
1000eaec:	4669      	mov	r1, sp
1000eaee:	4640      	mov	r0, r8
1000eaf0:	f000 f86e 	bl	1000ebd0 <recv_input>
        buf[strcspn(buf, "\n")] = '\0';
1000eaf4:	4639      	mov	r1, r7
1000eaf6:	4668      	mov	r0, sp
1000eaf8:	f009 fa0c 	bl	10017f14 <strcspn>
1000eafc:	f100 0328 	add.w	r3, r0, #40	@ 0x28
1000eb00:	eb0d 0003 	add.w	r0, sp, r3
1000eb04:	2400      	movs	r4, #0
1000eb06:	f800 4c28 	strb.w	r4, [r0, #-40]

        // Execute requested command
        for (int i = 0; i < sizeof(commands) / sizeof(commands[0]); i++)
            {
                if (!strcmp(buf, commands[i].name)) 
1000eb0a:	f856 1034 	ldr.w	r1, [r6, r4, lsl #3]
1000eb0e:	4668      	mov	r0, sp
1000eb10:	f009 faf6 	bl	10018100 <strcmp>
1000eb14:	b148      	cbz	r0, 1000eb2a <main+0x62>
        for (int i = 0; i < sizeof(commands) / sizeof(commands[0]); i++)
1000eb16:	3401      	adds	r4, #1
1000eb18:	2c04      	cmp	r4, #4
1000eb1a:	d0de      	beq.n	1000eada <main+0x12>
                if (!strcmp(buf, commands[i].name)) 
1000eb1c:	f856 1034 	ldr.w	r1, [r6, r4, lsl #3]
1000eb20:	4668      	mov	r0, sp
1000eb22:	f009 faed 	bl	10018100 <strcmp>
1000eb26:	2800      	cmp	r0, #0
1000eb28:	d1f5      	bne.n	1000eb16 <main+0x4e>
                {
                    commands[i].function();
1000eb2a:	ab0a      	add	r3, sp, #40	@ 0x28
1000eb2c:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
1000eb30:	f854 3c1c 	ldr.w	r3, [r4, #-28]
1000eb34:	4798      	blx	r3
                    break;
1000eb36:	e7d0      	b.n	1000eada <main+0x12>
1000eb38:	1002146c 	.word	0x1002146c
1000eb3c:	10021230 	.word	0x10021230
1000eb40:	10021494 	.word	0x10021494

1000eb44 <board_link_init>:
 * @brief Initialize the board link connection
 * 
 * Initiailize the underlying i2c simple interface
*/
void board_link_init(void) {
    i2c_simple_controller_init();
1000eb44:	f000 b926 	b.w	1000ed94 <i2c_simple_controller_init>

1000eb48 <component_id_to_i2c_addr>:
 * 
 * @return i2c_addr_t, i2c address
*/
i2c_addr_t component_id_to_i2c_addr(uint32_t component_id) {
    return (uint8_t) component_id & COMPONENT_ADDR_MASK;
}
1000eb48:	b2c0      	uxtb	r0, r0
1000eb4a:	4770      	bx	lr

1000eb4c <send_packet>:
 * 
 * @return status: SUCCESS_RETURN if success, ERROR_RETURN if error
 *
 * Function sends an arbitrary packet over i2c to a specified component
*/
int send_packet(i2c_addr_t address, uint8_t len, uint8_t* packet) {
1000eb4c:	b570      	push	{r4, r5, r6, lr}
1000eb4e:	4604      	mov	r4, r0
1000eb50:	460d      	mov	r5, r1
1000eb52:	4616      	mov	r6, r2

    int result;
    result = i2c_simple_write_receive_len(address, len);
1000eb54:	f000 f9a2 	bl	1000ee9c <i2c_simple_write_receive_len>
    if (result < SUCCESS_RETURN) {
1000eb58:	2800      	cmp	r0, #0
1000eb5a:	db0d      	blt.n	1000eb78 <send_packet+0x2c>
        return ERROR_RETURN;
    }
    result = i2c_simple_write_data_generic(address, RECEIVE, len, packet);
1000eb5c:	4633      	mov	r3, r6
1000eb5e:	462a      	mov	r2, r5
1000eb60:	2100      	movs	r1, #0
1000eb62:	4620      	mov	r0, r4
1000eb64:	f000 f9e8 	bl	1000ef38 <i2c_simple_write_data_generic>
    if (result < SUCCESS_RETURN) {
1000eb68:	2800      	cmp	r0, #0
1000eb6a:	db05      	blt.n	1000eb78 <send_packet+0x2c>
        return ERROR_RETURN;
    }
    result = i2c_simple_write_receive_done(address, true);
1000eb6c:	2101      	movs	r1, #1
1000eb6e:	4620      	mov	r0, r4
1000eb70:	f000 f978 	bl	1000ee64 <i2c_simple_write_receive_done>
    if (result < SUCCESS_RETURN) {
1000eb74:	17c0      	asrs	r0, r0, #31
        return ERROR_RETURN;
    }

    return SUCCESS_RETURN;
}
1000eb76:	bd70      	pop	{r4, r5, r6, pc}
        return ERROR_RETURN;
1000eb78:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000eb7c:	bd70      	pop	{r4, r5, r6, pc}
1000eb7e:	bf00      	nop

1000eb80 <poll_and_receive_packet>:
 * @param address: i2c_addr_t, i2c address
 * @param packet: uint8_t*, pointer to a buffer where a packet will be received 
 * 
 * @return int: size of data received, ERROR_RETURN if error
*/
int poll_and_receive_packet(i2c_addr_t address, uint8_t* packet) {
1000eb80:	b570      	push	{r4, r5, r6, lr}
1000eb82:	4604      	mov	r4, r0
1000eb84:	460e      	mov	r6, r1

    int result = SUCCESS_RETURN;
1000eb86:	e002      	b.n	1000eb8e <poll_and_receive_packet+0xe>
    while (true) {
        result = i2c_simple_read_transmit_done(address);
        if (result < SUCCESS_RETURN) {
            return ERROR_RETURN;
        }
        else if (result == SUCCESS_RETURN) {
1000eb88:	d00c      	beq.n	1000eba4 <poll_and_receive_packet+0x24>
            break;
        }
        MXC_Delay(50);
1000eb8a:	f003 fa0b 	bl	10011fa4 <MXC_Delay>
        result = i2c_simple_read_transmit_done(address);
1000eb8e:	4620      	mov	r0, r4
1000eb90:	f000 f924 	bl	1000eddc <i2c_simple_read_transmit_done>
        if (result < SUCCESS_RETURN) {
1000eb94:	2800      	cmp	r0, #0
        MXC_Delay(50);
1000eb96:	f04f 0032 	mov.w	r0, #50	@ 0x32
        if (result < SUCCESS_RETURN) {
1000eb9a:	daf5      	bge.n	1000eb88 <poll_and_receive_packet+0x8>
            return ERROR_RETURN;
1000eb9c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
    if (result < SUCCESS_RETURN) {
        return ERROR_RETURN;
    }

    return len;
}
1000eba0:	4628      	mov	r0, r5
1000eba2:	bd70      	pop	{r4, r5, r6, pc}
    int len = i2c_simple_read_transmit_len(address);
1000eba4:	4620      	mov	r0, r4
1000eba6:	f000 f93b 	bl	1000ee20 <i2c_simple_read_transmit_len>
    if (len < SUCCESS_RETURN) {
1000ebaa:	1e05      	subs	r5, r0, #0
1000ebac:	dbf6      	blt.n	1000eb9c <poll_and_receive_packet+0x1c>
    result = i2c_simple_read_data_generic(address, TRANSMIT, (uint8_t)len, packet);
1000ebae:	4633      	mov	r3, r6
1000ebb0:	b2ea      	uxtb	r2, r5
1000ebb2:	2103      	movs	r1, #3
1000ebb4:	4620      	mov	r0, r4
1000ebb6:	f000 f9a7 	bl	1000ef08 <i2c_simple_read_data_generic>
    if (result < SUCCESS_RETURN) {
1000ebba:	2800      	cmp	r0, #0
1000ebbc:	dbee      	blt.n	1000eb9c <poll_and_receive_packet+0x1c>
    result = i2c_simple_write_transmit_done(address, true);
1000ebbe:	2101      	movs	r1, #1
1000ebc0:	4620      	mov	r0, r4
1000ebc2:	f000 f985 	bl	1000eed0 <i2c_simple_write_transmit_done>
    if (result < SUCCESS_RETURN) {
1000ebc6:	2800      	cmp	r0, #0
1000ebc8:	dbe8      	blt.n	1000eb9c <poll_and_receive_packet+0x1c>
}
1000ebca:	4628      	mov	r0, r5
1000ebcc:	bd70      	pop	{r4, r5, r6, pc}
1000ebce:	bf00      	nop

1000ebd0 <recv_input>:

#include "host_messaging.h"

// Print a message through USB UART and then receive a line over USB UART
// size of buf has to be precised everywhere the recv_input fonction is called
void recv_input(const char *msg, char *buf, size_t n) {
1000ebd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000ebd2:	4607      	mov	r7, r0
    print_debug(msg);
1000ebd4:	4812      	ldr	r0, [pc, #72]	@ (1000ec20 <recv_input+0x50>)
1000ebd6:	4e13      	ldr	r6, [pc, #76]	@ (1000ec24 <recv_input+0x54>)
void recv_input(const char *msg, char *buf, size_t n) {
1000ebd8:	460c      	mov	r4, r1
1000ebda:	4615      	mov	r5, r2
    print_debug(msg);
1000ebdc:	f005 fa5a 	bl	10014094 <printf>
1000ebe0:	4638      	mov	r0, r7
1000ebe2:	f005 fa57 	bl	10014094 <printf>
1000ebe6:	4810      	ldr	r0, [pc, #64]	@ (1000ec28 <recv_input+0x58>)
1000ebe8:	f005 fa54 	bl	10014094 <printf>
1000ebec:	6833      	ldr	r3, [r6, #0]
1000ebee:	6898      	ldr	r0, [r3, #8]
1000ebf0:	f008 fc58 	bl	100174a4 <fflush>
    fflush(0);
1000ebf4:	2000      	movs	r0, #0
1000ebf6:	f008 fc55 	bl	100174a4 <fflush>
    print_ack();
1000ebfa:	480c      	ldr	r0, [pc, #48]	@ (1000ec2c <recv_input+0x5c>)
1000ebfc:	f005 fa4a 	bl	10014094 <printf>
1000ec00:	6833      	ldr	r3, [r6, #0]
1000ec02:	6898      	ldr	r0, [r3, #8]
1000ec04:	f008 fc4e 	bl	100174a4 <fflush>
    fgets(buf, n , stdin);
1000ec08:	6833      	ldr	r3, [r6, #0]
1000ec0a:	4629      	mov	r1, r5
1000ec0c:	685a      	ldr	r2, [r3, #4]
1000ec0e:	4620      	mov	r0, r4
1000ec10:	f008 fcf2 	bl	100175f8 <fgets>
    puts("");
}
1000ec14:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    puts("");
1000ec18:	4805      	ldr	r0, [pc, #20]	@ (1000ec30 <recv_input+0x60>)
1000ec1a:	f008 b96f 	b.w	10016efc <puts>
1000ec1e:	bf00      	nop
1000ec20:	100211c0 	.word	0x100211c0
1000ec24:	20000598 	.word	0x20000598
1000ec28:	1002119c 	.word	0x1002119c
1000ec2c:	100214b4 	.word	0x100214b4
1000ec30:	10021468 	.word	0x10021468

1000ec34 <print_hex>:

// Prints a buffer of bytes as a hex string
void print_hex(uint8_t *buf, size_t len) {
    for (int i = 0; i < len; i++)
1000ec34:	b181      	cbz	r1, 1000ec58 <print_hex+0x24>
void print_hex(uint8_t *buf, size_t len) {
1000ec36:	b570      	push	{r4, r5, r6, lr}
1000ec38:	4401      	add	r1, r0
    	printf("%02x", buf[i]);
1000ec3a:	4e09      	ldr	r6, [pc, #36]	@ (1000ec60 <print_hex+0x2c>)
1000ec3c:	1e44      	subs	r4, r0, #1
1000ec3e:	1e4d      	subs	r5, r1, #1
1000ec40:	f814 1f01 	ldrb.w	r1, [r4, #1]!
1000ec44:	4630      	mov	r0, r6
1000ec46:	f005 fa25 	bl	10014094 <printf>
    for (int i = 0; i < len; i++)
1000ec4a:	42ac      	cmp	r4, r5
1000ec4c:	d1f8      	bne.n	1000ec40 <print_hex+0xc>
    printf("\n");
}
1000ec4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    printf("\n");
1000ec52:	200a      	movs	r0, #10
1000ec54:	f008 b8f2 	b.w	10016e3c <putchar>
1000ec58:	200a      	movs	r0, #10
1000ec5a:	f008 b8ef 	b.w	10016e3c <putchar>
1000ec5e:	bf00      	nop
1000ec60:	100214c0 	.word	0x100214c0

1000ec64 <encrypt_sym>:
 * @param ciphertext A pointer to a buffer of length len where the resulting
 *          ciphertext will be written to
 *
 * @return 0 on success, -1 on bad length, other non-zero for other error
 */
int encrypt_sym(uint8_t *plaintext, size_t len, uint8_t *key, uint8_t *ciphertext) {
1000ec64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000ec68:	460c      	mov	r4, r1
1000ec6a:	b0dc      	sub	sp, #368	@ 0x170
    Aes ctx; // Context for encryption
    int result; // Library result

    // Ensure valid length
    if (len <= 0 || len % BLOCK_SIZE)
1000ec6c:	b309      	cbz	r1, 1000ecb2 <encrypt_sym+0x4e>
1000ec6e:	461e      	mov	r6, r3
1000ec70:	f011 030f 	ands.w	r3, r1, #15
1000ec74:	d11d      	bne.n	1000ecb2 <encrypt_sym+0x4e>
        return -1;

    // Set the key for encryption
    result = wc_AesSetKey(&ctx, key, 16, NULL, AES_ENCRYPTION);
1000ec76:	4611      	mov	r1, r2
1000ec78:	4605      	mov	r5, r0
1000ec7a:	9300      	str	r3, [sp, #0]
1000ec7c:	2210      	movs	r2, #16
1000ec7e:	a803      	add	r0, sp, #12
1000ec80:	f002 f9b8 	bl	10010ff4 <wc_AesSetKey>
    if (result != 0)
1000ec84:	4680      	mov	r8, r0
1000ec86:	b980      	cbnz	r0, 1000ecaa <encrypt_sym+0x46>
        return result; // Report error


    // Encrypt each block
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ec88:	2c01      	cmp	r4, #1
1000ec8a:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
1000ec8e:	d00c      	beq.n	1000ecaa <encrypt_sym+0x46>
1000ec90:	4604      	mov	r4, r0
1000ec92:	e001      	b.n	1000ec98 <encrypt_sym+0x34>
1000ec94:	42a7      	cmp	r7, r4
1000ec96:	d908      	bls.n	1000ecaa <encrypt_sym+0x46>
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000ec98:	192a      	adds	r2, r5, r4
1000ec9a:	1931      	adds	r1, r6, r4
1000ec9c:	a803      	add	r0, sp, #12
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ec9e:	3410      	adds	r4, #16
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000eca0:	f002 f9b6 	bl	10011010 <wc_AesEncryptDirect>
        if (result != 0)
1000eca4:	2800      	cmp	r0, #0
1000eca6:	d0f5      	beq.n	1000ec94 <encrypt_sym+0x30>
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000eca8:	4680      	mov	r8, r0
            return result; // Report error
    }
    return 0;
}
1000ecaa:	4640      	mov	r0, r8
1000ecac:	b05c      	add	sp, #368	@ 0x170
1000ecae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return -1;
1000ecb2:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1000ecb6:	e7f8      	b.n	1000ecaa <encrypt_sym+0x46>

1000ecb8 <decrypt_sym>:
 * @param plaintext A pointer to a buffer of length len where the resulting
 *          plaintext will be written to
 *
 * @return 0 on success, -1 on bad length, other non-zero for other error
 */
int decrypt_sym(uint8_t *ciphertext, size_t len, uint8_t *key, uint8_t *plaintext) {
1000ecb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000ecbc:	b0dc      	sub	sp, #368	@ 0x170
    Aes ctx; // Context for decryption
    int result; // Library result

    // Ensure valid length
    if (len <= 0 || len % BLOCK_SIZE)
1000ecbe:	b319      	cbz	r1, 1000ed08 <decrypt_sym+0x50>
1000ecc0:	461e      	mov	r6, r3
1000ecc2:	f011 030f 	ands.w	r3, r1, #15
1000ecc6:	460c      	mov	r4, r1
1000ecc8:	d11e      	bne.n	1000ed08 <decrypt_sym+0x50>
        return -1;

    // Set the key for decryption
    result = wc_AesSetKey(&ctx, key, 16, NULL, AES_DECRYPTION);
1000ecca:	4611      	mov	r1, r2
1000eccc:	2201      	movs	r2, #1
1000ecce:	9200      	str	r2, [sp, #0]
1000ecd0:	4605      	mov	r5, r0
1000ecd2:	2210      	movs	r2, #16
1000ecd4:	a803      	add	r0, sp, #12
1000ecd6:	f002 f98d 	bl	10010ff4 <wc_AesSetKey>
    if (result != 0)
1000ecda:	4680      	mov	r8, r0
1000ecdc:	b980      	cbnz	r0, 1000ed00 <decrypt_sym+0x48>
        return result; // Report error

    // Decrypt each block
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ecde:	2c01      	cmp	r4, #1
1000ece0:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
1000ece4:	d00c      	beq.n	1000ed00 <decrypt_sym+0x48>
1000ece6:	4604      	mov	r4, r0
1000ece8:	e001      	b.n	1000ecee <decrypt_sym+0x36>
1000ecea:	42a7      	cmp	r7, r4
1000ecec:	d908      	bls.n	1000ed00 <decrypt_sym+0x48>
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000ecee:	192a      	adds	r2, r5, r4
1000ecf0:	1931      	adds	r1, r6, r4
1000ecf2:	a803      	add	r0, sp, #12
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000ecf4:	3410      	adds	r4, #16
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000ecf6:	f002 f9a3 	bl	10011040 <wc_AesDecryptDirect>
        if (result != 0)
1000ecfa:	2800      	cmp	r0, #0
1000ecfc:	d0f5      	beq.n	1000ecea <decrypt_sym+0x32>
        result = wc_AesDecryptDirect(&ctx, plaintext + i, ciphertext + i);
1000ecfe:	4680      	mov	r8, r0
            return result; // Report error
    }
    return 0;
}
1000ed00:	4640      	mov	r0, r8
1000ed02:	b05c      	add	sp, #368	@ 0x170
1000ed04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return -1;
1000ed08:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1000ed0c:	e7f8      	b.n	1000ed00 <decrypt_sym+0x48>
1000ed0e:	bf00      	nop

1000ed10 <hash>:
 *
 * @return 0 on success, non-zero for other error
 */
int hash(void *data, size_t len, uint8_t *hash_out) {
    // Pass values to hash
    return wc_Md5Hash((uint8_t *)data, len, hash_out);
1000ed10:	f002 b9ae 	b.w	10011070 <wc_Md5Hash>

1000ed14 <flash_simple_irq>:
 * 
 * This ISR allows for access to the flash through simple_flash to operate
 */
void flash_simple_irq(void) {
    uint32_t temp;
    temp = MXC_FLC0->intr;
1000ed14:	4a09      	ldr	r2, [pc, #36]	@ (1000ed3c <flash_simple_irq+0x28>)
1000ed16:	6a53      	ldr	r3, [r2, #36]	@ 0x24

    if (temp & MXC_F_FLC_INTR_DONE) {
1000ed18:	07d9      	lsls	r1, r3, #31
1000ed1a:	d503      	bpl.n	1000ed24 <flash_simple_irq+0x10>
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_DONE;
1000ed1c:	6a51      	ldr	r1, [r2, #36]	@ 0x24
1000ed1e:	f021 0101 	bic.w	r1, r1, #1
1000ed22:	6251      	str	r1, [r2, #36]	@ 0x24
    }

    if (temp & MXC_F_FLC_INTR_AF) {
1000ed24:	079b      	lsls	r3, r3, #30
1000ed26:	d400      	bmi.n	1000ed2a <flash_simple_irq+0x16>
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
        printf(" -> Interrupt! (Flash access failure)\n\n");
    }
}
1000ed28:	4770      	bx	lr
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
1000ed2a:	4a04      	ldr	r2, [pc, #16]	@ (1000ed3c <flash_simple_irq+0x28>)
        printf(" -> Interrupt! (Flash access failure)\n\n");
1000ed2c:	4804      	ldr	r0, [pc, #16]	@ (1000ed40 <flash_simple_irq+0x2c>)
        MXC_FLC0->intr &= ~MXC_F_FLC_INTR_AF;
1000ed2e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
1000ed30:	f023 0302 	bic.w	r3, r3, #2
1000ed34:	6253      	str	r3, [r2, #36]	@ 0x24
        printf(" -> Interrupt! (Flash access failure)\n\n");
1000ed36:	f008 b8e1 	b.w	10016efc <puts>
1000ed3a:	bf00      	nop
1000ed3c:	40029000 	.word	0x40029000
1000ed40:	100214c8 	.word	0x100214c8

1000ed44 <flash_simple_init>:
 * @brief Initialize the Simple Flash Interface
 * 
 * This function registers the interrupt for the flash system,
 * enables the interrupt, and disables ICC
*/
void flash_simple_init(void) {
1000ed44:	b508      	push	{r3, lr}
    // Setup Flash
    MXC_NVIC_SetVector(FLC0_IRQn, flash_simple_irq);
1000ed46:	4908      	ldr	r1, [pc, #32]	@ (1000ed68 <flash_simple_init+0x24>)
1000ed48:	2017      	movs	r0, #23
1000ed4a:	f003 f965 	bl	10012018 <MXC_NVIC_SetVector>
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000ed4e:	4b07      	ldr	r3, [pc, #28]	@ (1000ed6c <flash_simple_init+0x28>)
1000ed50:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
1000ed54:	601a      	str	r2, [r3, #0]
    NVIC_EnableIRQ(FLC0_IRQn);
    MXC_FLC_EnableInt(MXC_F_FLC_INTR_DONEIE | MXC_F_FLC_INTR_AFIE);
1000ed56:	f44f 7040 	mov.w	r0, #768	@ 0x300
1000ed5a:	f003 faa9 	bl	100122b0 <MXC_FLC_EnableInt>
    MXC_ICC_Disable(MXC_ICC0);
}
1000ed5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    MXC_ICC_Disable(MXC_ICC0);
1000ed62:	4803      	ldr	r0, [pc, #12]	@ (1000ed70 <flash_simple_init+0x2c>)
1000ed64:	f004 bb4a 	b.w	100133fc <MXC_ICC_Disable>
1000ed68:	1000ed15 	.word	0x1000ed15
1000ed6c:	e000e100 	.word	0xe000e100
1000ed70:	4002a000 	.word	0x4002a000

1000ed74 <flash_simple_erase_page>:
 * Flash memory can only be erased in a large block size called a page.
 * Once erased, memory can only be written one way e.g. 1->0.
 * In order to be re-written the entire page must be erased.
*/
int flash_simple_erase_page(uint32_t address) {
    return MXC_FLC_PageErase(address);
1000ed74:	f01b bde8 	b.w	1002a948 <__MXC_FLC_PageErase_veneer>

1000ed78 <flash_simple_read>:
 * 
 * This function reads data from the specified flash page into the buffer
 * with the specified amount of bytes
*/
void flash_simple_read(uint32_t address, uint32_t* buffer, uint32_t size) {
    MXC_FLC_Read(address, buffer, size);
1000ed78:	f003 ba98 	b.w	100122ac <MXC_FLC_Read>

1000ed7c <flash_simple_write>:
 * This function writes data to the specified flash page from the buffer passed
 * with the specified amount of bytes. Flash memory can only be written in one
 * way e.g. 1->0. To rewrite previously written memory see the 
 * flash_simple_erase_page documentation.
*/
int flash_simple_write(uint32_t address, uint32_t* buffer, uint32_t size) {
1000ed7c:	460b      	mov	r3, r1
    return MXC_FLC_Write(address, size, buffer);
1000ed7e:	4611      	mov	r1, r2
1000ed80:	461a      	mov	r2, r3
1000ed82:	f003 ba91 	b.w	100122a8 <MXC_FLC_Write>
1000ed86:	bf00      	nop

1000ed88 <I2C_Handler>:
 * @brief Built-In I2C Interrupt Handler
 *
 * Utilize the built-in I2C interrupt handler to allow for the use
 * of MXC_I2C_Master_Transaction() function calls
 */
static void I2C_Handler(void) { MXC_I2C_AsyncHandler(I2C_INTERFACE); }
1000ed88:	4801      	ldr	r0, [pc, #4]	@ (1000ed90 <I2C_Handler+0x8>)
1000ed8a:	f003 bcf5 	b.w	10012778 <MXC_I2C_AsyncHandler>
1000ed8e:	bf00      	nop
1000ed90:	4001e000 	.word	0x4001e000

1000ed94 <i2c_simple_controller_init>:
 * @brief Initialize the I2C Connection
 * 
 * Initialize the I2C by enabling the module, setting the correct
 * frequency, and enabling the interrupt to our I2C_Handler
*/
int i2c_simple_controller_init(void) {
1000ed94:	b510      	push	{r4, lr}
    int error;

    // Initialize the I2C Interface
    error = MXC_I2C_Init(I2C_INTERFACE, true, 0);
1000ed96:	480c      	ldr	r0, [pc, #48]	@ (1000edc8 <i2c_simple_controller_init+0x34>)
1000ed98:	2200      	movs	r2, #0
1000ed9a:	2101      	movs	r1, #1
1000ed9c:	f003 fc88 	bl	100126b0 <MXC_I2C_Init>
    if (error != E_NO_ERROR) {
1000eda0:	4604      	mov	r4, r0
1000eda2:	b960      	cbnz	r0, 1000edbe <i2c_simple_controller_init+0x2a>
        printf("Failed to initialize I2C.\n");
        return error;
    }
    // Set frequency to frequency macro
    MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_FREQ);
1000eda4:	4909      	ldr	r1, [pc, #36]	@ (1000edcc <i2c_simple_controller_init+0x38>)
1000eda6:	4808      	ldr	r0, [pc, #32]	@ (1000edc8 <i2c_simple_controller_init+0x34>)
1000eda8:	f003 fccc 	bl	10012744 <MXC_I2C_SetFrequency>
    
    // Set up interrupt
    MXC_NVIC_SetVector(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)), I2C_Handler);
1000edac:	4908      	ldr	r1, [pc, #32]	@ (1000edd0 <i2c_simple_controller_init+0x3c>)
1000edae:	2024      	movs	r0, #36	@ 0x24
1000edb0:	f003 f932 	bl	10012018 <MXC_NVIC_SetVector>
1000edb4:	4b07      	ldr	r3, [pc, #28]	@ (1000edd4 <i2c_simple_controller_init+0x40>)
1000edb6:	2210      	movs	r2, #16
1000edb8:	605a      	str	r2, [r3, #4]
    NVIC_EnableIRQ(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)));

    return E_NO_ERROR;
}
1000edba:	4620      	mov	r0, r4
1000edbc:	bd10      	pop	{r4, pc}
        printf("Failed to initialize I2C.\n");
1000edbe:	4806      	ldr	r0, [pc, #24]	@ (1000edd8 <i2c_simple_controller_init+0x44>)
1000edc0:	f008 f89c 	bl	10016efc <puts>
}
1000edc4:	4620      	mov	r0, r4
1000edc6:	bd10      	pop	{r4, pc}
1000edc8:	4001e000 	.word	0x4001e000
1000edcc:	000186a0 	.word	0x000186a0
1000edd0:	1000ed89 	.word	0x1000ed89
1000edd4:	e000e100 	.word	0xe000e100
1000edd8:	100214f0 	.word	0x100214f0

1000eddc <i2c_simple_read_transmit_done>:
 * @return int: TRANSMIT_DONE value, negative if error
 *
 * Read the TRANSMIT_DONE for an I2C peripheral
 * and return the value 
*/
int i2c_simple_read_transmit_done(i2c_addr_t addr) {
1000eddc:	b510      	push	{r4, lr}
*/
int i2c_simple_read_status_generic(i2c_addr_t addr, ECTF_I2C_REGS reg) {
    uint8_t value = 0;

    mxc_i2c_req_t request;
    request.i2c = I2C_INTERFACE;
1000edde:	490f      	ldr	r1, [pc, #60]	@ (1000ee1c <i2c_simple_read_transmit_done+0x40>)
int i2c_simple_read_transmit_done(i2c_addr_t addr) {
1000ede0:	b08a      	sub	sp, #40	@ 0x28
1000ede2:	2404      	movs	r4, #4
    request.addr = addr;
1000ede4:	e9cd 1002 	strd	r1, r0, [sp, #8]
    uint8_t value = 0;
1000ede8:	2300      	movs	r3, #0
    request.tx_len = 1;
1000edea:	2201      	movs	r2, #1
1000edec:	f88d 4006 	strb.w	r4, [sp, #6]
    request.tx_buf = (uint8_t*)&reg;
    request.rx_len = 1;
    request.rx_buf = (uint8_t*)&value;
1000edf0:	f10d 0107 	add.w	r1, sp, #7
    request.tx_buf = (uint8_t*)&reg;
1000edf4:	f10d 0406 	add.w	r4, sp, #6
    request.restart = 0;
    request.callback = NULL;

    int result = MXC_I2C_MasterTransaction(&request);
1000edf8:	a802      	add	r0, sp, #8
    request.tx_buf = (uint8_t*)&reg;
1000edfa:	e9cd 4204 	strd	r4, r2, [sp, #16]
    request.rx_buf = (uint8_t*)&value;
1000edfe:	e9cd 1206 	strd	r1, r2, [sp, #24]
    request.callback = NULL;
1000ee02:	e9cd 3308 	strd	r3, r3, [sp, #32]
    uint8_t value = 0;
1000ee06:	f88d 3007 	strb.w	r3, [sp, #7]
    int result = MXC_I2C_MasterTransaction(&request);
1000ee0a:	f003 fcaf 	bl	1001276c <MXC_I2C_MasterTransaction>
    if (result < 0) {
1000ee0e:	2800      	cmp	r0, #0
        return result;
    }
    return value;
1000ee10:	bfa8      	it	ge
1000ee12:	f89d 0007 	ldrbge.w	r0, [sp, #7]
}
1000ee16:	b00a      	add	sp, #40	@ 0x28
1000ee18:	bd10      	pop	{r4, pc}
1000ee1a:	bf00      	nop
1000ee1c:	4001e000 	.word	0x4001e000

1000ee20 <i2c_simple_read_transmit_len>:
int i2c_simple_read_transmit_len(i2c_addr_t addr) {
1000ee20:	b510      	push	{r4, lr}
    request.i2c = I2C_INTERFACE;
1000ee22:	490f      	ldr	r1, [pc, #60]	@ (1000ee60 <i2c_simple_read_transmit_len+0x40>)
int i2c_simple_read_transmit_len(i2c_addr_t addr) {
1000ee24:	b08a      	sub	sp, #40	@ 0x28
1000ee26:	2405      	movs	r4, #5
    request.addr = addr;
1000ee28:	e9cd 1002 	strd	r1, r0, [sp, #8]
    uint8_t value = 0;
1000ee2c:	2300      	movs	r3, #0
    request.tx_len = 1;
1000ee2e:	2201      	movs	r2, #1
1000ee30:	f88d 4006 	strb.w	r4, [sp, #6]
    request.rx_buf = (uint8_t*)&value;
1000ee34:	f10d 0107 	add.w	r1, sp, #7
    request.tx_buf = (uint8_t*)&reg;
1000ee38:	f10d 0406 	add.w	r4, sp, #6
    int result = MXC_I2C_MasterTransaction(&request);
1000ee3c:	a802      	add	r0, sp, #8
    request.tx_buf = (uint8_t*)&reg;
1000ee3e:	e9cd 4204 	strd	r4, r2, [sp, #16]
    request.rx_buf = (uint8_t*)&value;
1000ee42:	e9cd 1206 	strd	r1, r2, [sp, #24]
    request.callback = NULL;
1000ee46:	e9cd 3308 	strd	r3, r3, [sp, #32]
    uint8_t value = 0;
1000ee4a:	f88d 3007 	strb.w	r3, [sp, #7]
    int result = MXC_I2C_MasterTransaction(&request);
1000ee4e:	f003 fc8d 	bl	1001276c <MXC_I2C_MasterTransaction>
    if (result < 0) {
1000ee52:	2800      	cmp	r0, #0
    return value;
1000ee54:	bfa8      	it	ge
1000ee56:	f89d 0007 	ldrbge.w	r0, [sp, #7]
}
1000ee5a:	b00a      	add	sp, #40	@ 0x28
1000ee5c:	bd10      	pop	{r4, pc}
1000ee5e:	bf00      	nop
1000ee60:	4001e000 	.word	0x4001e000

1000ee64 <i2c_simple_write_receive_done>:
int i2c_simple_write_receive_done(i2c_addr_t addr, bool done) {
1000ee64:	b530      	push	{r4, r5, lr}
1000ee66:	b08b      	sub	sp, #44	@ 0x2c
1000ee68:	4605      	mov	r5, r0
    uint8_t packet[2];
    packet[0] = (uint8_t) reg;
    packet[1] = value;
    
    mxc_i2c_req_t request;
    request.i2c = I2C_INTERFACE;
1000ee6a:	4a0b      	ldr	r2, [pc, #44]	@ (1000ee98 <i2c_simple_write_receive_done+0x34>)
1000ee6c:	9202      	str	r2, [sp, #8]
    packet[0] = (uint8_t) reg;
1000ee6e:	2001      	movs	r0, #1
    request.addr = addr;
    request.tx_len = 2;
    request.tx_buf = packet;
    request.rx_len = 0;
1000ee70:	2300      	movs	r3, #0
    packet[0] = (uint8_t) reg;
1000ee72:	f88d 0004 	strb.w	r0, [sp, #4]
    request.tx_buf = packet;
1000ee76:	aa01      	add	r2, sp, #4
    request.tx_len = 2;
1000ee78:	2402      	movs	r4, #2
    request.rx_buf = 0;
    request.restart = 0;
    request.callback = NULL;

    return MXC_I2C_MasterTransaction(&request);
1000ee7a:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000ee7c:	e9cd 2404 	strd	r2, r4, [sp, #16]
    request.rx_buf = 0;
1000ee80:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000ee84:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[1] = value;
1000ee88:	f88d 1005 	strb.w	r1, [sp, #5]
    request.addr = addr;
1000ee8c:	9503      	str	r5, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000ee8e:	f003 fc6d 	bl	1001276c <MXC_I2C_MasterTransaction>
}
1000ee92:	b00b      	add	sp, #44	@ 0x2c
1000ee94:	bd30      	pop	{r4, r5, pc}
1000ee96:	bf00      	nop
1000ee98:	4001e000 	.word	0x4001e000

1000ee9c <i2c_simple_write_receive_len>:
int i2c_simple_write_receive_len(i2c_addr_t addr, uint8_t len) {
1000ee9c:	b510      	push	{r4, lr}
1000ee9e:	b08a      	sub	sp, #40	@ 0x28
1000eea0:	4604      	mov	r4, r0
    request.i2c = I2C_INTERFACE;
1000eea2:	480a      	ldr	r0, [pc, #40]	@ (1000eecc <i2c_simple_write_receive_len+0x30>)
    packet[1] = value;
1000eea4:	f88d 1005 	strb.w	r1, [sp, #5]
    request.rx_len = 0;
1000eea8:	2300      	movs	r3, #0
    packet[0] = (uint8_t) reg;
1000eeaa:	2202      	movs	r2, #2
    request.i2c = I2C_INTERFACE;
1000eeac:	9002      	str	r0, [sp, #8]
    request.tx_buf = packet;
1000eeae:	a901      	add	r1, sp, #4
    return MXC_I2C_MasterTransaction(&request);
1000eeb0:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000eeb2:	e9cd 1204 	strd	r1, r2, [sp, #16]
    request.rx_buf = 0;
1000eeb6:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000eeba:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[0] = (uint8_t) reg;
1000eebe:	f88d 2004 	strb.w	r2, [sp, #4]
    request.addr = addr;
1000eec2:	9403      	str	r4, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000eec4:	f003 fc52 	bl	1001276c <MXC_I2C_MasterTransaction>
}
1000eec8:	b00a      	add	sp, #40	@ 0x28
1000eeca:	bd10      	pop	{r4, pc}
1000eecc:	4001e000 	.word	0x4001e000

1000eed0 <i2c_simple_write_transmit_done>:
int i2c_simple_write_transmit_done(i2c_addr_t addr, bool done) {
1000eed0:	b530      	push	{r4, r5, lr}
1000eed2:	b08b      	sub	sp, #44	@ 0x2c
1000eed4:	4605      	mov	r5, r0
    request.i2c = I2C_INTERFACE;
1000eed6:	4a0b      	ldr	r2, [pc, #44]	@ (1000ef04 <i2c_simple_write_transmit_done+0x34>)
1000eed8:	9202      	str	r2, [sp, #8]
    packet[0] = (uint8_t) reg;
1000eeda:	2004      	movs	r0, #4
    request.rx_len = 0;
1000eedc:	2300      	movs	r3, #0
    request.tx_buf = packet;
1000eede:	eb0d 0200 	add.w	r2, sp, r0
    packet[0] = (uint8_t) reg;
1000eee2:	f88d 0004 	strb.w	r0, [sp, #4]
    request.tx_len = 2;
1000eee6:	2402      	movs	r4, #2
    return MXC_I2C_MasterTransaction(&request);
1000eee8:	a802      	add	r0, sp, #8
    request.tx_buf = packet;
1000eeea:	e9cd 2404 	strd	r2, r4, [sp, #16]
    request.rx_buf = 0;
1000eeee:	e9cd 3306 	strd	r3, r3, [sp, #24]
    request.callback = NULL;
1000eef2:	e9cd 3308 	strd	r3, r3, [sp, #32]
    packet[1] = value;
1000eef6:	f88d 1005 	strb.w	r1, [sp, #5]
    request.addr = addr;
1000eefa:	9503      	str	r5, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000eefc:	f003 fc36 	bl	1001276c <MXC_I2C_MasterTransaction>
}
1000ef00:	b00b      	add	sp, #44	@ 0x2c
1000ef02:	bd30      	pop	{r4, r5, pc}
1000ef04:	4001e000 	.word	0x4001e000

1000ef08 <i2c_simple_read_data_generic>:
{
1000ef08:	b530      	push	{r4, r5, lr}
1000ef0a:	b08b      	sub	sp, #44	@ 0x2c
    request.i2c = I2C_INTERFACE;
1000ef0c:	4d09      	ldr	r5, [pc, #36]	@ (1000ef34 <i2c_simple_read_data_generic+0x2c>)
{
1000ef0e:	f88d 1007 	strb.w	r1, [sp, #7]
    request.addr = addr;
1000ef12:	9003      	str	r0, [sp, #12]
    request.tx_buf = (uint8_t*)&reg;
1000ef14:	f10d 0107 	add.w	r1, sp, #7
    request.tx_len = 1;
1000ef18:	2001      	movs	r0, #1
    request.tx_buf = (uint8_t*)&reg;
1000ef1a:	e9cd 1004 	strd	r1, r0, [sp, #16]
    request.restart = 0;
1000ef1e:	2400      	movs	r4, #0
    return MXC_I2C_MasterTransaction(&request);
1000ef20:	a802      	add	r0, sp, #8
    request.rx_buf = buf;
1000ef22:	e9cd 3206 	strd	r3, r2, [sp, #24]
    request.callback = NULL;
1000ef26:	e9cd 4408 	strd	r4, r4, [sp, #32]
    request.i2c = I2C_INTERFACE;
1000ef2a:	9502      	str	r5, [sp, #8]
    return MXC_I2C_MasterTransaction(&request);
1000ef2c:	f003 fc1e 	bl	1001276c <MXC_I2C_MasterTransaction>
}
1000ef30:	b00b      	add	sp, #44	@ 0x2c
1000ef32:	bd30      	pop	{r4, r5, pc}
1000ef34:	4001e000 	.word	0x4001e000

1000ef38 <i2c_simple_write_data_generic>:
int i2c_simple_write_data_generic(i2c_addr_t addr, ECTF_I2C_REGS reg, uint8_t len, uint8_t* buf) {
1000ef38:	b570      	push	{r4, r5, r6, lr}
1000ef3a:	b0ca      	sub	sp, #296	@ 0x128
1000ef3c:	468c      	mov	ip, r1
1000ef3e:	4605      	mov	r5, r0
    memcpy(&packet[1], buf, len);
1000ef40:	4619      	mov	r1, r3
1000ef42:	f10d 0025 	add.w	r0, sp, #37	@ 0x25
int i2c_simple_write_data_generic(i2c_addr_t addr, ECTF_I2C_REGS reg, uint8_t len, uint8_t* buf) {
1000ef46:	4614      	mov	r4, r2
    packet[0] = reg;
1000ef48:	f88d c024 	strb.w	ip, [sp, #36]	@ 0x24
    memcpy(&packet[1], buf, len);
1000ef4c:	f009 fac8 	bl	100184e0 <memcpy>
    request.i2c = I2C_INTERFACE;
1000ef50:	4b08      	ldr	r3, [pc, #32]	@ (1000ef74 <i2c_simple_write_data_generic+0x3c>)
1000ef52:	9301      	str	r3, [sp, #4]
    packet[0] = reg;
1000ef54:	ae09      	add	r6, sp, #36	@ 0x24
    request.rx_len = 0;
1000ef56:	2300      	movs	r3, #0
    request.tx_len = len+1;
1000ef58:	3401      	adds	r4, #1
    return MXC_I2C_MasterTransaction(&request);
1000ef5a:	a801      	add	r0, sp, #4
    request.rx_buf = 0;
1000ef5c:	e9cd 3305 	strd	r3, r3, [sp, #20]
    request.callback = NULL;
1000ef60:	e9cd 3307 	strd	r3, r3, [sp, #28]
    request.addr = addr;
1000ef64:	9502      	str	r5, [sp, #8]
    request.tx_len = len+1;
1000ef66:	9404      	str	r4, [sp, #16]
    request.tx_buf = packet;
1000ef68:	9603      	str	r6, [sp, #12]
    return MXC_I2C_MasterTransaction(&request);
1000ef6a:	f003 fbff 	bl	1001276c <MXC_I2C_MasterTransaction>
}
1000ef6e:	b04a      	add	sp, #296	@ 0x128
1000ef70:	bd70      	pop	{r4, r5, r6, pc}
1000ef72:	bf00      	nop
1000ef74:	4001e000 	.word	0x4001e000

1000ef78 <AesEncrypt_C>:
 * @param [out] outBlock  Encrypted block.
 * @param [in]  r         Rounds divided by 2.
 */
static void AesEncrypt_C(Aes* aes, const byte* inBlock, byte* outBlock,
        word32 r)
{
1000ef78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000ef7c:	b087      	sub	sp, #28
1000ef7e:	680d      	ldr	r5, [r1, #0]
1000ef80:	684f      	ldr	r7, [r1, #4]
1000ef82:	688e      	ldr	r6, [r1, #8]
1000ef84:	68cc      	ldr	r4, [r1, #12]
1000ef86:	e9cd 3200 	strd	r3, r2, [sp]
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    /* AddRoundKey */
    s0 ^= rk[0];
1000ef8a:	6803      	ldr	r3, [r0, #0]
1000ef8c:	ba2d      	rev	r5, r5
1000ef8e:	405d      	eors	r5, r3
    s1 ^= rk[1];
1000ef90:	6843      	ldr	r3, [r0, #4]
1000ef92:	ba3f      	rev	r7, r7
1000ef94:	405f      	eors	r7, r3
    s2 ^= rk[2];
1000ef96:	6883      	ldr	r3, [r0, #8]
1000ef98:	ba36      	rev	r6, r6
1000ef9a:	405e      	eors	r6, r3
    s3 ^= rk[3];
1000ef9c:	68c3      	ldr	r3, [r0, #12]
    s0 ^= rk[(o)+0]; s1 ^= rk[(o)+1]; s2 ^= rk[(o)+2]; s3 ^= rk[(o)+3];
#endif

#ifndef WOLFSSL_AES_NO_UNROLL
/* Unroll the loop. */
                       ENC_ROUND_T_S( 0);
1000ef9e:	b2f9      	uxtb	r1, r7
1000efa0:	b2f2      	uxtb	r2, r6
1000efa2:	ba24      	rev	r4, r4
    s3 ^= rk[3];
1000efa4:	405c      	eors	r4, r3
                       ENC_ROUND_T_S( 0);
1000efa6:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000efaa:	4bea      	ldr	r3, [pc, #936]	@ (1000f354 <AesEncrypt_C+0x3dc>)
1000efac:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000efb0:	fa5f fe84 	uxtb.w	lr, r4
1000efb4:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
1000efb8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000efbc:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000efc0:	0e2a      	lsrs	r2, r5, #24
1000efc2:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000efc6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000efca:	fa5f fc85 	uxtb.w	ip, r5
1000efce:	ea82 020e 	eor.w	r2, r2, lr
1000efd2:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000efd6:	ea4f 6e17 	mov.w	lr, r7, lsr #24
1000efda:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000efde:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000efe2:	ea8e 0e0c 	eor.w	lr, lr, ip
1000efe6:	ea4f 6c16 	mov.w	ip, r6, lsr #24
1000efea:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000efee:	ea8c 0c08 	eor.w	ip, ip, r8
1000eff2:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000eff6:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000effa:	ea88 0101 	eor.w	r1, r8, r1
1000effe:	f3c7 4807 	ubfx	r8, r7, #16, #8
1000f002:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f006:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f00a:	9102      	str	r1, [sp, #8]
1000f00c:	f853 b027 	ldr.w	fp, [r3, r7, lsl #2]
1000f010:	6901      	ldr	r1, [r0, #16]
1000f012:	f3c6 4707 	ubfx	r7, r6, #16, #8
1000f016:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f01a:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f01e:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f022:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000f026:	f853 a028 	ldr.w	sl, [r3, r8, lsl #2]
1000f02a:	f3c4 4607 	ubfx	r6, r4, #16, #8
1000f02e:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f032:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1000f036:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f03a:	404a      	eors	r2, r1
1000f03c:	6941      	ldr	r1, [r0, #20]
1000f03e:	f853 8027 	ldr.w	r8, [r3, r7, lsl #2]
1000f042:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
1000f046:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f04a:	f3c5 4407 	ubfx	r4, r5, #16, #8
1000f04e:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f052:	ea8e 0e01 	eor.w	lr, lr, r1
1000f056:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f05a:	6981      	ldr	r1, [r0, #24]
1000f05c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f060:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f064:	ea8c 0c01 	eor.w	ip, ip, r1
1000f068:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f06c:	ea8c 0c06 	eor.w	ip, ip, r6
1000f070:	ea8c 0c05 	eor.w	ip, ip, r5
1000f074:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f078:	69c5      	ldr	r5, [r0, #28]
1000f07a:	9902      	ldr	r1, [sp, #8]
1000f07c:	4069      	eors	r1, r5
1000f07e:	4061      	eors	r1, r4
1000f080:	ea81 010b 	eor.w	r1, r1, fp
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f084:	b2cc      	uxtb	r4, r1
                       ENC_ROUND_T_S( 0);
1000f086:	ea8e 0e08 	eor.w	lr, lr, r8
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f08a:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                       ENC_ROUND_T_S( 0);
1000f08e:	ea8e 0e07 	eor.w	lr, lr, r7
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f092:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
1000f096:	f3ce 4407 	ubfx	r4, lr, #16, #8
1000f09a:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                       ENC_ROUND_T_S( 0);
1000f09e:	ea82 020a 	eor.w	r2, r2, sl
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f0a2:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
1000f0a6:	fa5f f48e 	uxtb.w	r4, lr
1000f0aa:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                       ENC_ROUND_T_S( 0);
1000f0ae:	ea82 0209 	eor.w	r2, r2, r9
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f0b2:	9403      	str	r4, [sp, #12]
1000f0b4:	fa5f f48c 	uxtb.w	r4, ip
1000f0b8:	f504 7940 	add.w	r9, r4, #768	@ 0x300
1000f0bc:	0e14      	lsrs	r4, r2, #24
1000f0be:	b2d6      	uxtb	r6, r2
1000f0c0:	f3c2 4b07 	ubfx	fp, r2, #16, #8
1000f0c4:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f0c8:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f0cc:	f8cd 9014 	str.w	r9, [sp, #20]
1000f0d0:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f0d4:	9204      	str	r2, [sp, #16]
1000f0d6:	f3cc 2807 	ubfx	r8, ip, #8, #8
1000f0da:	6a02      	ldr	r2, [r0, #32]
1000f0dc:	f508 7800 	add.w	r8, r8, #512	@ 0x200
1000f0e0:	406c      	eors	r4, r5
1000f0e2:	4054      	eors	r4, r2
1000f0e4:	ea4f 691e 	mov.w	r9, lr, lsr #24
1000f0e8:	407c      	eors	r4, r7
1000f0ea:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f0ee:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000f0f2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f0f6:	9a03      	ldr	r2, [sp, #12]
1000f0f8:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f0fc:	4067      	eors	r7, r4
1000f0fe:	f50e 7a00 	add.w	sl, lr, #512	@ 0x200
1000f102:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
1000f106:	f8dd 9014 	ldr.w	r9, [sp, #20]
1000f10a:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
1000f10e:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
1000f112:	f3cc 4c07 	ubfx	ip, ip, #16, #8
1000f116:	f50c 7580 	add.w	r5, ip, #256	@ 0x100
1000f11a:	4074      	eors	r4, r6
1000f11c:	ea4f 6c11 	mov.w	ip, r1, lsr #24
1000f120:	f853 602e 	ldr.w	r6, [r3, lr, lsl #2]
1000f124:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f128:	9502      	str	r5, [sp, #8]
1000f12a:	9a02      	ldr	r2, [sp, #8]
1000f12c:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f130:	ea86 060e 	eor.w	r6, r6, lr
1000f134:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000f138:	f3c1 4507 	ubfx	r5, r1, #16, #8
1000f13c:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f140:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f144:	ea8c 0c0e 	eor.w	ip, ip, lr
1000f148:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f14c:	9a04      	ldr	r2, [sp, #16]
1000f14e:	f853 9021 	ldr.w	r9, [r3, r1, lsl #2]
1000f152:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f156:	6a42      	ldr	r2, [r0, #36]	@ 0x24
1000f158:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f15c:	4054      	eors	r4, r2
1000f15e:	6a82      	ldr	r2, [r0, #40]	@ 0x28
1000f160:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1000f164:	4056      	eors	r6, r2
1000f166:	f50b 7b80 	add.w	fp, fp, #256	@ 0x100
1000f16a:	ea86 0608 	eor.w	r6, r6, r8
1000f16e:	404e      	eors	r6, r1
1000f170:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000f172:	f853 502b 	ldr.w	r5, [r3, fp, lsl #2]
1000f176:	ea8c 0c01 	eor.w	ip, ip, r1
1000f17a:	ea8c 0c05 	eor.w	ip, ip, r5
1000f17e:	ea8c 0c0a 	eor.w	ip, ip, sl
1000f182:	fa5f f28c 	uxtb.w	r2, ip
1000f186:	ea84 040e 	eor.w	r4, r4, lr
1000f18a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f18e:	ea84 0409 	eor.w	r4, r4, r9
1000f192:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f196:	f3c4 4207 	ubfx	r2, r4, #16, #8
1000f19a:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f19e:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000f1a2:	f3c6 2207 	ubfx	r2, r6, #8, #8
1000f1a6:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f1aa:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f1ae:	9502      	str	r5, [sp, #8]
1000f1b0:	b2fa      	uxtb	r2, r7
1000f1b2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f1b6:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f1ba:	f3c6 4207 	ubfx	r2, r6, #16, #8
1000f1be:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f1c2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f1c6:	9203      	str	r2, [sp, #12]
1000f1c8:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f1cc:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f1d0:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f1d4:	f8cd e010 	str.w	lr, [sp, #16]
1000f1d8:	b2e2      	uxtb	r2, r4
1000f1da:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f1de:	fa5f fe86 	uxtb.w	lr, r6
1000f1e2:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000f1e6:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000f1ea:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f1ee:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f1f2:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
1000f1f6:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000f1fa:	f3c7 2c07 	ubfx	ip, r7, #8, #8
1000f1fe:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f202:	0e36      	lsrs	r6, r6, #24
1000f204:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f208:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f20c:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f210:	ea86 060b 	eor.w	r6, r6, fp
1000f214:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000f218:	f3c7 4707 	ubfx	r7, r7, #16, #8
1000f21c:	ea8b 0b01 	eor.w	fp, fp, r1
1000f220:	f507 7180 	add.w	r1, r7, #256	@ 0x100
1000f224:	0e27      	lsrs	r7, r4, #24
1000f226:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f22a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f22e:	ea87 0c05 	eor.w	ip, r7, r5
1000f232:	6b05      	ldr	r5, [r0, #48]	@ 0x30
1000f234:	ea8b 0b05 	eor.w	fp, fp, r5
1000f238:	9d02      	ldr	r5, [sp, #8]
1000f23a:	ea8b 070a 	eor.w	r7, fp, sl
1000f23e:	406f      	eors	r7, r5
1000f240:	6b45      	ldr	r5, [r0, #52]	@ 0x34
1000f242:	ea8c 0c05 	eor.w	ip, ip, r5
1000f246:	9d03      	ldr	r5, [sp, #12]
1000f248:	ea8c 0c05 	eor.w	ip, ip, r5
1000f24c:	9d04      	ldr	r5, [sp, #16]
1000f24e:	ea8c 0c05 	eor.w	ip, ip, r5
1000f252:	6b85      	ldr	r5, [r0, #56]	@ 0x38
1000f254:	406e      	eors	r6, r5
1000f256:	f853 502e 	ldr.w	r5, [r3, lr, lsl #2]
1000f25a:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f25e:	ea82 0e05 	eor.w	lr, r2, r5
1000f262:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f266:	f853 5021 	ldr.w	r5, [r3, r1, lsl #2]
1000f26a:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
1000f26c:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
1000f270:	ea8e 0e01 	eor.w	lr, lr, r1
1000f274:	ea8e 0e05 	eor.w	lr, lr, r5
1000f278:	ea8e 0e02 	eor.w	lr, lr, r2
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f27c:	fa5f f28e 	uxtb.w	r2, lr
1000f280:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f284:	ea86 0609 	eor.w	r6, r6, r9
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f288:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f28c:	b2fa      	uxtb	r2, r7
1000f28e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000f292:	ea86 0608 	eor.w	r6, r6, r8
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f296:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000f29a:	fa5f f28c 	uxtb.w	r2, ip
1000f29e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f2a2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f2a6:	b2f2      	uxtb	r2, r6
1000f2a8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f2ac:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f2b0:	0e3a      	lsrs	r2, r7, #24
1000f2b2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f2b6:	4051      	eors	r1, r2
1000f2b8:	ea4f 621c 	mov.w	r2, ip, lsr #24
1000f2bc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f2c0:	ea82 0208 	eor.w	r2, r2, r8
1000f2c4:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f2c8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f2cc:	ea88 0505 	eor.w	r5, r8, r5
1000f2d0:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f2d4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f2d8:	ea88 0404 	eor.w	r4, r8, r4
1000f2dc:	f3cc 4807 	ubfx	r8, ip, #16, #8
1000f2e0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f2e4:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f2e8:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f2ec:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f2f0:	9402      	str	r4, [sp, #8]
1000f2f2:	f853 402c 	ldr.w	r4, [r3, ip, lsl #2]
1000f2f6:	9403      	str	r4, [sp, #12]
1000f2f8:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000f2fc:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f300:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f304:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f308:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1000f30c:	6c04      	ldr	r4, [r0, #64]	@ 0x40
1000f30e:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
1000f312:	f3ce 4c07 	ubfx	ip, lr, #16, #8
1000f316:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f31a:	f50e 7600 	add.w	r6, lr, #512	@ 0x200
1000f31e:	4061      	eors	r1, r4
1000f320:	6c44      	ldr	r4, [r0, #68]	@ 0x44
1000f322:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f326:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f32a:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f32e:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f332:	4062      	eors	r2, r4
1000f334:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f338:	6c84      	ldr	r4, [r0, #72]	@ 0x48
1000f33a:	f853 e02c 	ldr.w	lr, [r3, ip, lsl #2]
1000f33e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f342:	4065      	eors	r5, r4
1000f344:	ea85 050e 	eor.w	r5, r5, lr
1000f348:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f34c:	407d      	eors	r5, r7
1000f34e:	9c02      	ldr	r4, [sp, #8]
1000f350:	6cc7      	ldr	r7, [r0, #76]	@ 0x4c
1000f352:	e001      	b.n	1000f358 <AesEncrypt_C+0x3e0>
1000f354:	1002260c 	.word	0x1002260c
1000f358:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f35c:	407c      	eors	r4, r7
1000f35e:	9f03      	ldr	r7, [sp, #12]
1000f360:	4074      	eors	r4, r6
1000f362:	407c      	eors	r4, r7
1000f364:	b2e6      	uxtb	r6, r4
1000f366:	ea82 0209 	eor.w	r2, r2, r9
1000f36a:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f36e:	ea82 0208 	eor.w	r2, r2, r8
1000f372:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000f376:	f3c2 4607 	ubfx	r6, r2, #16, #8
1000f37a:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f37e:	ea81 010b 	eor.w	r1, r1, fp
1000f382:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000f386:	f8cd c008 	str.w	ip, [sp, #8]
1000f38a:	f3c5 4c07 	ubfx	ip, r5, #16, #8
1000f38e:	f50c 7b80 	add.w	fp, ip, #256	@ 0x100
1000f392:	fa5f fc82 	uxtb.w	ip, r2
1000f396:	ea81 010a 	eor.w	r1, r1, sl
1000f39a:	f3c5 2607 	ubfx	r6, r5, #8, #8
1000f39e:	f50c 7940 	add.w	r9, ip, #768	@ 0x300
1000f3a2:	fa5f fc85 	uxtb.w	ip, r5
1000f3a6:	0e2d      	lsrs	r5, r5, #24
1000f3a8:	9504      	str	r5, [sp, #16]
1000f3aa:	0e0d      	lsrs	r5, r1, #24
1000f3ac:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f3b0:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f3b4:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000f3b8:	f8cd e00c 	str.w	lr, [sp, #12]
1000f3bc:	b2ce      	uxtb	r6, r1
1000f3be:	406f      	eors	r7, r5
1000f3c0:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f3c4:	0e15      	lsrs	r5, r2, #24
1000f3c6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f3ca:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f3ce:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1000f3d2:	4075      	eors	r5, r6
1000f3d4:	6d06      	ldr	r6, [r0, #80]	@ 0x50
1000f3d6:	4077      	eors	r7, r6
1000f3d8:	9e02      	ldr	r6, [sp, #8]
1000f3da:	4077      	eors	r7, r6
1000f3dc:	9e03      	ldr	r6, [sp, #12]
1000f3de:	4077      	eors	r7, r6
1000f3e0:	6d46      	ldr	r6, [r0, #84]	@ 0x54
1000f3e2:	4075      	eors	r5, r6
1000f3e4:	f853 602b 	ldr.w	r6, [r3, fp, lsl #2]
1000f3e8:	f8dd b010 	ldr.w	fp, [sp, #16]
1000f3ec:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000f3f0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
1000f3f4:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f3f8:	f50c 7a40 	add.w	sl, ip, #768	@ 0x300
1000f3fc:	4075      	eors	r5, r6
1000f3fe:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f402:	f853 602b 	ldr.w	r6, [r3, fp, lsl #2]
1000f406:	f3c1 4c07 	ubfx	ip, r1, #16, #8
1000f40a:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f40e:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f412:	ea86 0909 	eor.w	r9, r6, r9
1000f416:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f41a:	f853 6028 	ldr.w	r6, [r3, r8, lsl #2]
1000f41e:	f853 802a 	ldr.w	r8, [r3, sl, lsl #2]
1000f422:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f426:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f42a:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f42e:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f432:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f436:	ea85 0e04 	eor.w	lr, r5, r4
1000f43a:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000f43e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f442:	6d82      	ldr	r2, [r0, #88]	@ 0x58
1000f444:	ea86 0608 	eor.w	r6, r6, r8
1000f448:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f44c:	ea89 0c02 	eor.w	ip, r9, r2
1000f450:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
1000f452:	4056      	eors	r6, r2
1000f454:	ea86 0608 	eor.w	r6, r6, r8
1000f458:	404e      	eors	r6, r1
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f45a:	b2f2      	uxtb	r2, r6
1000f45c:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f460:	ea8c 0c0a 	eor.w	ip, ip, sl
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f464:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000f468:	b2fa      	uxtb	r2, r7
1000f46a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000f46e:	ea8c 0c04 	eor.w	ip, ip, r4
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f472:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f476:	fa5f f28e 	uxtb.w	r2, lr
1000f47a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f47e:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f482:	fa5f f28c 	uxtb.w	r2, ip
1000f486:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f48a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f48e:	0e3a      	lsrs	r2, r7, #24
1000f490:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f494:	ea82 0208 	eor.w	r2, r2, r8
1000f498:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f49c:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f4a0:	ea88 0505 	eor.w	r5, r8, r5
1000f4a4:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000f4a8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f4ac:	ea88 0404 	eor.w	r4, r8, r4
1000f4b0:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f4b4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f4b8:	ea88 0101 	eor.w	r1, r8, r1
1000f4bc:	f3ce 4807 	ubfx	r8, lr, #16, #8
1000f4c0:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f4c4:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
1000f4c8:	9102      	str	r1, [sp, #8]
1000f4ca:	f853 102e 	ldr.w	r1, [r3, lr, lsl #2]
1000f4ce:	9103      	str	r1, [sp, #12]
1000f4d0:	f3cc 4e07 	ubfx	lr, ip, #16, #8
1000f4d4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f4d8:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f4dc:	6e01      	ldr	r1, [r0, #96]	@ 0x60
1000f4de:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000f4e2:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000f4e6:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f4ea:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f4ee:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f4f2:	404a      	eors	r2, r1
1000f4f4:	6e41      	ldr	r1, [r0, #100]	@ 0x64
1000f4f6:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f4fa:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f4fe:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f502:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000f506:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f50a:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f50e:	404d      	eors	r5, r1
1000f510:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f514:	6e81      	ldr	r1, [r0, #104]	@ 0x68
1000f516:	f853 902e 	ldr.w	r9, [r3, lr, lsl #2]
1000f51a:	f853 e02c 	ldr.w	lr, [r3, ip, lsl #2]
1000f51e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f522:	404c      	eors	r4, r1
1000f524:	ea84 040e 	eor.w	r4, r4, lr
1000f528:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f52c:	407c      	eors	r4, r7
1000f52e:	9902      	ldr	r1, [sp, #8]
1000f530:	6ec7      	ldr	r7, [r0, #108]	@ 0x6c
1000f532:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f536:	4079      	eors	r1, r7
1000f538:	9f03      	ldr	r7, [sp, #12]
1000f53a:	4071      	eors	r1, r6
1000f53c:	4079      	eors	r1, r7
1000f53e:	ea82 020b 	eor.w	r2, r2, fp
1000f542:	ea85 0509 	eor.w	r5, r5, r9
1000f546:	ea82 020a 	eor.w	r2, r2, sl
1000f54a:	ea85 0508 	eor.w	r5, r5, r8
1000f54e:	fa5f f881 	uxtb.w	r8, r1
1000f552:	0e17      	lsrs	r7, r2, #24
1000f554:	f508 7840 	add.w	r8, r8, #768	@ 0x300
1000f558:	fa5f fe82 	uxtb.w	lr, r2
1000f55c:	b2e6      	uxtb	r6, r4
1000f55e:	f853 9027 	ldr.w	r9, [r3, r7, lsl #2]
1000f562:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000f566:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f56a:	fa5f fc85 	uxtb.w	ip, r5
1000f56e:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f572:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000f576:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f57a:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f57e:	ea89 0707 	eor.w	r7, r9, r7
1000f582:	0e2e      	lsrs	r6, r5, #24
1000f584:	f853 902e 	ldr.w	r9, [r3, lr, lsl #2]
1000f588:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f58c:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f590:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f594:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f598:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f59c:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f5a0:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f5a4:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f5a8:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000f5ac:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f5b0:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f5b4:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f5b8:	ea8c 0c08 	eor.w	ip, ip, r8
1000f5bc:	ea4f 6811 	mov.w	r8, r1, lsr #24
1000f5c0:	ea86 0609 	eor.w	r6, r6, r9
1000f5c4:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000f5c8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f5cc:	f3c1 4407 	ubfx	r4, r1, #16, #8
1000f5d0:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f5d4:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f5d8:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f5dc:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f5e0:	ea88 0b0b 	eor.w	fp, r8, fp
1000f5e4:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1000f5e8:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
1000f5ec:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000f5f0:	f3c2 4107 	ubfx	r1, r2, #16, #8
1000f5f4:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f5f8:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f5fc:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000f600:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f604:	9202      	str	r2, [sp, #8]
1000f606:	6f02      	ldr	r2, [r0, #112]	@ 0x70
1000f608:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000f60c:	4057      	eors	r7, r2
1000f60e:	6f42      	ldr	r2, [r0, #116]	@ 0x74
1000f610:	4056      	eors	r6, r2
1000f612:	ea86 0608 	eor.w	r6, r6, r8
1000f616:	4066      	eors	r6, r4
1000f618:	6f84      	ldr	r4, [r0, #120]	@ 0x78
1000f61a:	9a02      	ldr	r2, [sp, #8]
1000f61c:	ea8c 0c04 	eor.w	ip, ip, r4
1000f620:	6fc4      	ldr	r4, [r0, #124]	@ 0x7c
1000f622:	ea8c 0c05 	eor.w	ip, ip, r5
1000f626:	ea8b 0404 	eor.w	r4, fp, r4
1000f62a:	ea8c 0c02 	eor.w	ip, ip, r2
1000f62e:	404c      	eors	r4, r1
1000f630:	4672      	mov	r2, lr
1000f632:	4054      	eors	r4, r2
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f634:	b2e2      	uxtb	r2, r4
1000f636:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f63a:	ea87 070a 	eor.w	r7, r7, sl
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f63e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f642:	f3c6 4207 	ubfx	r2, r6, #16, #8
1000f646:	f502 7280 	add.w	r2, r2, #256	@ 0x100
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000f64a:	ea87 0709 	eor.w	r7, r7, r9
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f64e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f652:	9202      	str	r2, [sp, #8]
1000f654:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f658:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f65c:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000f660:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f664:	9103      	str	r1, [sp, #12]
1000f666:	b2fa      	uxtb	r2, r7
1000f668:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f66c:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000f670:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f674:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000f678:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f67c:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000f680:	f8cd e010 	str.w	lr, [sp, #16]
1000f684:	f3c4 2207 	ubfx	r2, r4, #8, #8
1000f688:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f68c:	fa5f fe8c 	uxtb.w	lr, ip
1000f690:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000f694:	f8cd 8014 	str.w	r8, [sp, #20]
1000f698:	b2f2      	uxtb	r2, r6
1000f69a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f69e:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f6a2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f6a6:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f6aa:	ea8c 0202 	eor.w	r2, ip, r2
1000f6ae:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f6b2:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f6b6:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000f6ba:	ea8b 0b05 	eor.w	fp, fp, r5
1000f6be:	0e35      	lsrs	r5, r6, #24
1000f6c0:	f507 7c00 	add.w	ip, r7, #512	@ 0x200
1000f6c4:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f6c8:	9f02      	ldr	r7, [sp, #8]
1000f6ca:	ea85 0a01 	eor.w	sl, r5, r1
1000f6ce:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
1000f6d2:	ea8b 0b05 	eor.w	fp, fp, r5
1000f6d6:	9d03      	ldr	r5, [sp, #12]
1000f6d8:	ea8b 0707 	eor.w	r7, fp, r7
1000f6dc:	406f      	eors	r7, r5
1000f6de:	f8d0 5084 	ldr.w	r5, [r0, #132]	@ 0x84
1000f6e2:	ea8a 0a05 	eor.w	sl, sl, r5
1000f6e6:	9d04      	ldr	r5, [sp, #16]
1000f6e8:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000f6ec:	ea8a 0a05 	eor.w	sl, sl, r5
1000f6f0:	f3c4 4407 	ubfx	r4, r4, #16, #8
1000f6f4:	9d05      	ldr	r5, [sp, #20]
1000f6f6:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f6fa:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f6fe:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f702:	f506 7100 	add.w	r1, r6, #512	@ 0x200
1000f706:	ea8a 0605 	eor.w	r6, sl, r5
1000f70a:	f8d0 5088 	ldr.w	r5, [r0, #136]	@ 0x88
1000f70e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f712:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000f716:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f71a:	406a      	eors	r2, r5
1000f71c:	f853 502e 	ldr.w	r5, [r3, lr, lsl #2]
1000f720:	ea82 0e04 	eor.w	lr, r2, r4
1000f724:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000f728:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
1000f72c:	ea8e 0e02 	eor.w	lr, lr, r2
1000f730:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
1000f734:	ea88 0505 	eor.w	r5, r8, r5
1000f738:	ea85 0c02 	eor.w	ip, r5, r2
1000f73c:	ea8c 0c04 	eor.w	ip, ip, r4
1000f740:	ea8c 0c01 	eor.w	ip, ip, r1
1000f744:	fa5f f28c 	uxtb.w	r2, ip
1000f748:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f74c:	ea4f 6817 	mov.w	r8, r7, lsr #24
1000f750:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f754:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f758:	b2fa      	uxtb	r2, r7
1000f75a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f75e:	ea88 0101 	eor.w	r1, r8, r1
1000f762:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f766:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f76a:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f76e:	b2f2      	uxtb	r2, r6
1000f770:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f774:	ea88 0505 	eor.w	r5, r8, r5
1000f778:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000f77c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000f780:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f784:	fa5f f28e 	uxtb.w	r2, lr
1000f788:	ea88 0404 	eor.w	r4, r8, r4
1000f78c:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f790:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000f794:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f798:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f79c:	ea88 0202 	eor.w	r2, r8, r2
1000f7a0:	f3c6 4807 	ubfx	r8, r6, #16, #8
1000f7a4:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f7a8:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f7ac:	9202      	str	r2, [sp, #8]
1000f7ae:	f853 2026 	ldr.w	r2, [r3, r6, lsl #2]
1000f7b2:	9203      	str	r2, [sp, #12]
1000f7b4:	f3ce 4607 	ubfx	r6, lr, #16, #8
1000f7b8:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f7bc:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000f7c0:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000f7c4:	f3cc 4607 	ubfx	r6, ip, #16, #8
1000f7c8:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000f7cc:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
1000f7d0:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f7d4:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000f7d8:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000f7dc:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000f7e0:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90
1000f7e4:	4051      	eors	r1, r2
1000f7e6:	f8d0 2094 	ldr.w	r2, [r0, #148]	@ 0x94
1000f7ea:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000f7ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f7f2:	4055      	eors	r5, r2
1000f7f4:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f7f8:	f8d0 2098 	ldr.w	r2, [r0, #152]	@ 0x98
1000f7fc:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f800:	4054      	eors	r4, r2
1000f802:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f806:	ea84 040e 	eor.w	r4, r4, lr
1000f80a:	9a02      	ldr	r2, [sp, #8]
1000f80c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f810:	407c      	eors	r4, r7
1000f812:	f8d0 709c 	ldr.w	r7, [r0, #156]	@ 0x9c
1000f816:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f81a:	407a      	eors	r2, r7
1000f81c:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f820:	4072      	eors	r2, r6
    if (r > 5) {
1000f822:	9e00      	ldr	r6, [sp, #0]
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f824:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f828:	9f03      	ldr	r7, [sp, #12]
1000f82a:	ea81 010b 	eor.w	r1, r1, fp
1000f82e:	ea85 0509 	eor.w	r5, r5, r9
    if (r > 5) {
1000f832:	2e05      	cmp	r6, #5
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f834:	ea81 010a 	eor.w	r1, r1, sl
1000f838:	ea85 0508 	eor.w	r5, r5, r8
1000f83c:	ea82 0207 	eor.w	r2, r2, r7
    if (r > 5) {
1000f840:	f240 81ed 	bls.w	1000fc1e <AesEncrypt_C+0xca6>
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000f844:	b2d6      	uxtb	r6, r2
1000f846:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f84a:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f84e:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000f852:	b2ce      	uxtb	r6, r1
1000f854:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f858:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f85c:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000f860:	b2ee      	uxtb	r6, r5
1000f862:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f866:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f86a:	b2e6      	uxtb	r6, r4
1000f86c:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f870:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f874:	0e0e      	lsrs	r6, r1, #24
1000f876:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f87a:	4077      	eors	r7, r6
1000f87c:	0e2e      	lsrs	r6, r5, #24
1000f87e:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f882:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f886:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f88a:	ea86 060c 	eor.w	r6, r6, ip
1000f88e:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f892:	f853 a025 	ldr.w	sl, [r3, r5, lsl #2]
1000f896:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f89a:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f89e:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f8a2:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f8a6:	ea8c 0c08 	eor.w	ip, ip, r8
1000f8aa:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000f8ae:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000f8b2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f8b6:	f3c2 4407 	ubfx	r4, r2, #16, #8
1000f8ba:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f8be:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f8c2:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f8c6:	ea88 0b0b 	eor.w	fp, r8, fp
1000f8ca:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000f8ce:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000f8d2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f8d6:	f3c1 4207 	ubfx	r2, r1, #16, #8
1000f8da:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f8de:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f8e2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f8e6:	9202      	str	r2, [sp, #8]
1000f8e8:	f8d0 20a0 	ldr.w	r2, [r0, #160]	@ 0xa0
1000f8ec:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f8f0:	4057      	eors	r7, r2
1000f8f2:	f8d0 20a4 	ldr.w	r2, [r0, #164]	@ 0xa4
1000f8f6:	4056      	eors	r6, r2
1000f8f8:	ea86 060e 	eor.w	r6, r6, lr
1000f8fc:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f900:	4075      	eors	r5, r6
1000f902:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f906:	f8d0 60a8 	ldr.w	r6, [r0, #168]	@ 0xa8
1000f90a:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000f90e:	9a02      	ldr	r2, [sp, #8]
1000f910:	ea8c 0c06 	eor.w	ip, ip, r6
1000f914:	ea8c 0c04 	eor.w	ip, ip, r4
1000f918:	ea8c 0c01 	eor.w	ip, ip, r1
1000f91c:	f8d0 10ac 	ldr.w	r1, [r0, #172]	@ 0xac
1000f920:	ea8b 0601 	eor.w	r6, fp, r1
1000f924:	4056      	eors	r6, r2
1000f926:	4652      	mov	r2, sl
1000f928:	4056      	eors	r6, r2
1000f92a:	b2f2      	uxtb	r2, r6
1000f92c:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f930:	f3cc 4407 	ubfx	r4, ip, #16, #8
1000f934:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f938:	f3c5 4207 	ubfx	r2, r5, #16, #8
1000f93c:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f940:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f944:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000f948:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f94c:	9403      	str	r4, [sp, #12]
1000f94e:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f952:	f3c6 2407 	ubfx	r4, r6, #8, #8
1000f956:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f95a:	ea87 0708 	eor.w	r7, r7, r8
1000f95e:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f962:	ea87 0709 	eor.w	r7, r7, r9
1000f966:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f96a:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000f96e:	9202      	str	r2, [sp, #8]
1000f970:	b2ec      	uxtb	r4, r5
1000f972:	b2fa      	uxtb	r2, r7
1000f974:	f8cd e010 	str.w	lr, [sp, #16]
1000f978:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f97c:	fa5f fe8c 	uxtb.w	lr, ip
1000f980:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1000f984:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f988:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f98c:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f990:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f994:	ea8c 0404 	eor.w	r4, ip, r4
1000f998:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f99c:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f9a0:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f9a4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f9a8:	ea8c 0101 	eor.w	r1, ip, r1
1000f9ac:	ea4f 6c15 	mov.w	ip, r5, lsr #24
1000f9b0:	f3c6 4607 	ubfx	r6, r6, #16, #8
1000f9b4:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000f9b8:	ea8a 0a02 	eor.w	sl, sl, r2
1000f9bc:	f8d0 20b0 	ldr.w	r2, [r0, #176]	@ 0xb0
1000f9c0:	4051      	eors	r1, r2
1000f9c2:	9a02      	ldr	r2, [sp, #8]
1000f9c4:	ea81 010b 	eor.w	r1, r1, fp
1000f9c8:	4051      	eors	r1, r2
1000f9ca:	f8d0 20b4 	ldr.w	r2, [r0, #180]	@ 0xb4
1000f9ce:	ea8a 0a02 	eor.w	sl, sl, r2
1000f9d2:	9a03      	ldr	r2, [sp, #12]
1000f9d4:	ea8a 0a02 	eor.w	sl, sl, r2
1000f9d8:	9a04      	ldr	r2, [sp, #16]
1000f9da:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f9de:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f9e2:	f505 7c00 	add.w	ip, r5, #512	@ 0x200
1000f9e6:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000f9ea:	ea8a 0502 	eor.w	r5, sl, r2
1000f9ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f9f2:	f8d0 20b8 	ldr.w	r2, [r0, #184]	@ 0xb8
1000f9f6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f9fa:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f9fe:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000fa02:	4054      	eors	r4, r2
1000fa04:	4074      	eors	r4, r6
1000fa06:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
1000fa0a:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
1000fa0e:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
1000fa12:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000fa16:	4074      	eors	r4, r6
1000fa18:	f8d0 60bc 	ldr.w	r6, [r0, #188]	@ 0xbc
1000fa1c:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000fa20:	ea88 0202 	eor.w	r2, r8, r2
1000fa24:	4072      	eors	r2, r6
        if (r > 6) {
1000fa26:	9e00      	ldr	r6, [sp, #0]
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000fa28:	ea82 020e 	eor.w	r2, r2, lr
        if (r > 6) {
1000fa2c:	2e06      	cmp	r6, #6
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000fa2e:	ea82 0207 	eor.w	r2, r2, r7
        if (r > 6) {
1000fa32:	f000 80f4 	beq.w	1000fc1e <AesEncrypt_C+0xca6>
            ENC_ROUND_S_T(48); ENC_ROUND_T_S(48);
1000fa36:	b2d6      	uxtb	r6, r2
1000fa38:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fa3c:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000fa40:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000fa44:	b2ce      	uxtb	r6, r1
1000fa46:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fa4a:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000fa4e:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000fa52:	b2ee      	uxtb	r6, r5
1000fa54:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fa58:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000fa5c:	b2e6      	uxtb	r6, r4
1000fa5e:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000fa62:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000fa66:	0e0e      	lsrs	r6, r1, #24
1000fa68:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fa6c:	4077      	eors	r7, r6
1000fa6e:	0e2e      	lsrs	r6, r5, #24
1000fa70:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fa74:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fa78:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000fa7c:	ea86 060c 	eor.w	r6, r6, ip
1000fa80:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000fa84:	f853 a025 	ldr.w	sl, [r3, r5, lsl #2]
1000fa88:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fa8c:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000fa90:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000fa94:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fa98:	ea8c 0c08 	eor.w	ip, ip, r8
1000fa9c:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000faa0:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000faa4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000faa8:	f3c2 4407 	ubfx	r4, r2, #16, #8
1000faac:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000fab0:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000fab4:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fab8:	ea88 0b0b 	eor.w	fp, r8, fp
1000fabc:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000fac0:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000fac4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000fac8:	f3c1 4207 	ubfx	r2, r1, #16, #8
1000facc:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000fad0:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000fad4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fad8:	9202      	str	r2, [sp, #8]
1000fada:	f8d0 20c0 	ldr.w	r2, [r0, #192]	@ 0xc0
1000fade:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fae2:	4057      	eors	r7, r2
1000fae4:	f8d0 20c4 	ldr.w	r2, [r0, #196]	@ 0xc4
1000fae8:	4056      	eors	r6, r2
1000faea:	ea86 060e 	eor.w	r6, r6, lr
1000faee:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000faf2:	4075      	eors	r5, r6
1000faf4:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000faf8:	f8d0 60c8 	ldr.w	r6, [r0, #200]	@ 0xc8
1000fafc:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000fb00:	9a02      	ldr	r2, [sp, #8]
1000fb02:	ea8c 0c06 	eor.w	ip, ip, r6
1000fb06:	ea8c 0c04 	eor.w	ip, ip, r4
1000fb0a:	ea8c 0c01 	eor.w	ip, ip, r1
1000fb0e:	f8d0 10cc 	ldr.w	r1, [r0, #204]	@ 0xcc
1000fb12:	ea8b 0601 	eor.w	r6, fp, r1
1000fb16:	4056      	eors	r6, r2
1000fb18:	4652      	mov	r2, sl
1000fb1a:	4056      	eors	r6, r2
1000fb1c:	b2f2      	uxtb	r2, r6
1000fb1e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fb22:	f3cc 4407 	ubfx	r4, ip, #16, #8
1000fb26:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000fb2a:	f3c5 4207 	ubfx	r2, r5, #16, #8
1000fb2e:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000fb32:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000fb36:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000fb3a:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fb3e:	9403      	str	r4, [sp, #12]
1000fb40:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000fb44:	f3c6 2407 	ubfx	r4, r6, #8, #8
1000fb48:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000fb4c:	ea87 0708 	eor.w	r7, r7, r8
1000fb50:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fb54:	ea87 0709 	eor.w	r7, r7, r9
1000fb58:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fb5c:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000fb60:	9202      	str	r2, [sp, #8]
1000fb62:	b2ec      	uxtb	r4, r5
1000fb64:	b2fa      	uxtb	r2, r7
1000fb66:	f8cd e010 	str.w	lr, [sp, #16]
1000fb6a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fb6e:	fa5f fe8c 	uxtb.w	lr, ip
1000fb72:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1000fb76:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000fb7a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fb7e:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000fb82:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fb86:	ea8c 0404 	eor.w	r4, ip, r4
1000fb8a:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000fb8e:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000fb92:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fb96:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000fb9a:	ea8c 0101 	eor.w	r1, ip, r1
1000fb9e:	ea4f 6c15 	mov.w	ip, r5, lsr #24
1000fba2:	f3c6 4607 	ubfx	r6, r6, #16, #8
1000fba6:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000fbaa:	ea8a 0a02 	eor.w	sl, sl, r2
1000fbae:	f8d0 20d0 	ldr.w	r2, [r0, #208]	@ 0xd0
1000fbb2:	4051      	eors	r1, r2
1000fbb4:	9a02      	ldr	r2, [sp, #8]
1000fbb6:	ea81 010b 	eor.w	r1, r1, fp
1000fbba:	4051      	eors	r1, r2
1000fbbc:	f8d0 20d4 	ldr.w	r2, [r0, #212]	@ 0xd4
1000fbc0:	ea8a 0a02 	eor.w	sl, sl, r2
1000fbc4:	9a03      	ldr	r2, [sp, #12]
1000fbc6:	ea8a 0a02 	eor.w	sl, sl, r2
1000fbca:	9a04      	ldr	r2, [sp, #16]
1000fbcc:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fbd0:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fbd4:	f505 7c00 	add.w	ip, r5, #512	@ 0x200
1000fbd8:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000fbdc:	ea8a 0502 	eor.w	r5, sl, r2
1000fbe0:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000fbe4:	f8d0 20d8 	ldr.w	r2, [r0, #216]	@ 0xd8
1000fbe8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fbec:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000fbf0:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000fbf4:	4054      	eors	r4, r2
1000fbf6:	4074      	eors	r4, r6
1000fbf8:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
1000fbfc:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
1000fc00:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
1000fc04:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000fc08:	4074      	eors	r4, r6
1000fc0a:	f8d0 60dc 	ldr.w	r6, [r0, #220]	@ 0xdc
1000fc0e:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000fc12:	ea88 0202 	eor.w	r2, r8, r2
1000fc16:	4072      	eors	r2, r6
1000fc18:	ea82 020e 	eor.w	r2, r2, lr
1000fc1c:	407a      	eors	r2, r7
#ifndef WOLFSSL_AES_TOUCH_LINES
    s0 =
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fc1e:	b2d6      	uxtb	r6, r2
1000fc20:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
        rk[1];
    s2 =
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fc24:	ea4f 6914 	mov.w	r9, r4, lsr #24
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fc28:	f813 c026 	ldrb.w	ip, [r3, r6, lsl #2]
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000fc2c:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000fc30:	f506 7640 	add.w	r6, r6, #768	@ 0x300
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fc34:	f509 7900 	add.w	r9, r9, #512	@ 0x200
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000fc38:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fc3c:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000fc40:	f406 087f 	and.w	r8, r6, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
1000fc44:	0e0e      	lsrs	r6, r1, #24
1000fc46:	f506 7600 	add.w	r6, r6, #512	@ 0x200
        rk[2];
    s3 =
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fc4a:	fa5f fa84 	uxtb.w	sl, r4
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
1000fc4e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fc52:	f006 467f 	and.w	r6, r6, #4278190080	@ 0xff000000
1000fc56:	ea48 0806 	orr.w	r8, r8, r6
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fc5a:	b2ce      	uxtb	r6, r1
1000fc5c:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fc60:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fc64:	f813 7026 	ldrb.w	r7, [r3, r6, lsl #2]
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
1000fc68:	f3c4 4607 	ubfx	r6, r4, #16, #8
1000fc6c:	f506 7640 	add.w	r6, r6, #768	@ 0x300
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000fc70:	f3c4 2407 	ubfx	r4, r4, #8, #8
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
1000fc74:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fc78:	f406 0e7f 	and.w	lr, r6, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t1, 3)) & 0xff000000) ^
1000fc7c:	0e2e      	lsrs	r6, r5, #24
1000fc7e:	f506 7600 	add.w	r6, r6, #512	@ 0x200
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fc82:	f009 497f 	and.w	r9, r9, #4278190080	@ 0xff000000
        (GetTable(Te[2], GETBYTE(t1, 3)) & 0xff000000) ^
1000fc86:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000fc8a:	f006 467f 	and.w	r6, r6, #4278190080	@ 0xff000000
1000fc8e:	ea4e 0e06 	orr.w	lr, lr, r6
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fc92:	b2ee      	uxtb	r6, r5
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
1000fc94:	f3c5 2507 	ubfx	r5, r5, #8, #8
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fc98:	ea4f 6b12 	mov.w	fp, r2, lsr #24
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
1000fc9c:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000fca0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
1000fca4:	9502      	str	r5, [sp, #8]
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000fca6:	f3c2 4507 	ubfx	r5, r2, #16, #8
1000fcaa:	f505 7540 	add.w	r5, r5, #768	@ 0x300
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000fcae:	f3c2 2207 	ubfx	r2, r2, #8, #8
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000fcb2:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000fcb6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000fcba:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000fcbe:	ea45 0509 	orr.w	r5, r5, r9
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000fcc2:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fcc6:	f813 402a 	ldrb.w	r4, [r3, sl, lsl #2]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fcca:	f3c1 4a07 	ubfx	sl, r1, #16, #8
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fcce:	f50b 7b00 	add.w	fp, fp, #512	@ 0x200
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fcd2:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000fcd6:	f3c1 2107 	ubfx	r1, r1, #8, #8
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fcda:	f50a 7a40 	add.w	sl, sl, #768	@ 0x300
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fcde:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000fce2:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fce6:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fcea:	f853 302b 	ldr.w	r3, [r3, fp, lsl #2]
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000fcee:	f402 4b7f 	and.w	fp, r2, #65280	@ 0xff00
    rk += r * 8;
1000fcf2:	9a00      	ldr	r2, [sp, #0]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000fcf4:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000fcf8:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
1000fcfc:	ea4a 0303 	orr.w	r3, sl, r3
    rk += r * 8;
1000fd00:	eb00 1a42 	add.w	sl, r0, r2, lsl #5
1000fd04:	0152      	lsls	r2, r2, #5
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000fd06:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fd0a:	5882      	ldr	r2, [r0, r2]
1000fd0c:	ea8c 0c02 	eor.w	ip, ip, r2
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fd10:	f8da 2004 	ldr.w	r2, [sl, #4]
1000fd14:	4057      	eors	r7, r2
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fd16:	f8da 2008 	ldr.w	r2, [sl, #8]
1000fd1a:	4056      	eors	r6, r2
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fd1c:	f8da 200c 	ldr.w	r2, [sl, #12]
1000fd20:	4054      	eors	r4, r2
1000fd22:	9a02      	ldr	r2, [sp, #8]
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000fd24:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fd28:	ea8c 0c09 	eor.w	ip, ip, r9
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fd2c:	ea87 070b 	eor.w	r7, r7, fp
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fd30:	404e      	eors	r6, r1
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fd32:	4054      	eors	r4, r2
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    XMEMCPY(outBlock,                  &s0, sizeof(s0));
1000fd34:	9901      	ldr	r1, [sp, #4]
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000fd36:	ea8c 0c08 	eor.w	ip, ip, r8
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000fd3a:	ea87 070e 	eor.w	r7, r7, lr
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000fd3e:	406e      	eors	r6, r5
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000fd40:	405c      	eors	r4, r3
1000fd42:	fa9c fc8c 	rev.w	ip, ip
    s1 = ByteReverseWord32(s1);
1000fd46:	ba3f      	rev	r7, r7
    s2 = ByteReverseWord32(s2);
1000fd48:	ba36      	rev	r6, r6
    s3 = ByteReverseWord32(s3);
1000fd4a:	ba24      	rev	r4, r4
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
1000fd4c:	f8c1 c000 	str.w	ip, [r1]
    XMEMCPY(outBlock +     sizeof(s0), &s1, sizeof(s1));
1000fd50:	604f      	str	r7, [r1, #4]
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
1000fd52:	608e      	str	r6, [r1, #8]
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
1000fd54:	60cc      	str	r4, [r1, #12]
}
1000fd56:	b007      	add	sp, #28
1000fd58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1000fd5c <AesDecrypt_C>:
 * @param [out] outBlock  Encrypted block.
 * @param [in]  r         Rounds divided by 2.
 */
static void AesDecrypt_C(Aes* aes, const byte* inBlock, byte* outBlock,
    word32 r)
{
1000fd5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000fd60:	b087      	sub	sp, #28
1000fd62:	680d      	ldr	r5, [r1, #0]
1000fd64:	684c      	ldr	r4, [r1, #4]
1000fd66:	f8d1 9008 	ldr.w	r9, [r1, #8]
1000fd6a:	68ce      	ldr	r6, [r1, #12]
1000fd6c:	e9cd 3200 	strd	r3, r2, [sp]
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    s0 ^= rk[0];
1000fd70:	6803      	ldr	r3, [r0, #0]
1000fd72:	ba2d      	rev	r5, r5
1000fd74:	405d      	eors	r5, r3
    s1 ^= rk[1];
1000fd76:	6843      	ldr	r3, [r0, #4]
1000fd78:	ba24      	rev	r4, r4
1000fd7a:	405c      	eors	r4, r3
    s2 ^= rk[2];
1000fd7c:	6883      	ldr	r3, [r0, #8]
1000fd7e:	fa99 f989 	rev.w	r9, r9
1000fd82:	ea89 0903 	eor.w	r9, r9, r3
    s3 ^= rk[3];
1000fd86:	68c3      	ldr	r3, [r0, #12]
                          &s2, GETBYTE(t3, 0), &s3, GETBYTE(t0, 0));           \
    s0 ^= rk[(o)+0]; s1 ^= rk[(o)+1]; s2 ^= rk[(o)+2]; s3 ^= rk[(o)+3];
#endif

#ifndef WOLFSSL_AES_NO_UNROLL
                       DEC_ROUND_T_S( 0);
1000fd88:	fa5f fc84 	uxtb.w	ip, r4
1000fd8c:	fa5f f789 	uxtb.w	r7, r9
1000fd90:	b2ea      	uxtb	r2, r5
1000fd92:	ba36      	rev	r6, r6
    s3 ^= rk[3];
1000fd94:	405e      	eors	r6, r3
                       DEC_ROUND_T_S( 0);
1000fd96:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000fd9a:	4be8      	ldr	r3, [pc, #928]	@ (1001013c <AesDecrypt_C+0x3e0>)
1000fd9c:	f507 7740 	add.w	r7, r7, #768	@ 0x300
1000fda0:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fda4:	b2f1      	uxtb	r1, r6
1000fda6:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000fdaa:	f853 c027 	ldr.w	ip, [r3, r7, lsl #2]
1000fdae:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
1000fdb2:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000fdb6:	0e2a      	lsrs	r2, r5, #24
1000fdb8:	f853 e021 	ldr.w	lr, [r3, r1, lsl #2]
1000fdbc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000fdc0:	0e22      	lsrs	r2, r4, #24
1000fdc2:	ea81 0108 	eor.w	r1, r1, r8
1000fdc6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000fdca:	ea82 020c 	eor.w	r2, r2, ip
1000fdce:	ea4f 6c19 	mov.w	ip, r9, lsr #24
1000fdd2:	9202      	str	r2, [sp, #8]
1000fdd4:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000fdd8:	ea8c 0c0e 	eor.w	ip, ip, lr
1000fddc:	ea4f 6e16 	mov.w	lr, r6, lsr #24
1000fde0:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
1000fde4:	ea8b 0b07 	eor.w	fp, fp, r7
1000fde8:	f3c6 4707 	ubfx	r7, r6, #16, #8
1000fdec:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000fdf0:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000fdf4:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1000fdf8:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000fdfc:	f853 a027 	ldr.w	sl, [r3, r7, lsl #2]
1000fe00:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000fe04:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000fe08:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000fe0c:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000fe10:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000fe14:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1000fe18:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000fe1c:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000fe20:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000fe24:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000fe28:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
1000fe2c:	9203      	str	r2, [sp, #12]
1000fe2e:	6902      	ldr	r2, [r0, #16]
1000fe30:	9c02      	ldr	r4, [sp, #8]
1000fe32:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1000fe36:	4051      	eors	r1, r2
1000fe38:	6942      	ldr	r2, [r0, #20]
1000fe3a:	f3c9 4507 	ubfx	r5, r9, #16, #8
1000fe3e:	f3c9 2907 	ubfx	r9, r9, #8, #8
1000fe42:	4054      	eors	r4, r2
1000fe44:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000fe48:	f509 7900 	add.w	r9, r9, #512	@ 0x200
1000fe4c:	ea84 0208 	eor.w	r2, r4, r8
1000fe50:	ea82 020e 	eor.w	r2, r2, lr
1000fe54:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000fe58:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1000fe5c:	f8d0 e018 	ldr.w	lr, [r0, #24]
1000fe60:	9c03      	ldr	r4, [sp, #12]
1000fe62:	ea8c 0c0e 	eor.w	ip, ip, lr
1000fe66:	ea8c 0c07 	eor.w	ip, ip, r7
1000fe6a:	ea8c 0c06 	eor.w	ip, ip, r6
1000fe6e:	69c6      	ldr	r6, [r0, #28]
1000fe70:	ea8b 0b06 	eor.w	fp, fp, r6
1000fe74:	ea8b 0b05 	eor.w	fp, fp, r5
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fe78:	b2d5      	uxtb	r5, r2
1000fe7a:	f505 7540 	add.w	r5, r5, #768	@ 0x300
                       DEC_ROUND_T_S( 0);
1000fe7e:	ea8b 0404 	eor.w	r4, fp, r4
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fe82:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
1000fe86:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000fe8a:	f505 7580 	add.w	r5, r5, #256	@ 0x100
                       DEC_ROUND_T_S( 0);
1000fe8e:	ea81 010a 	eor.w	r1, r1, sl
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fe92:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1000fe96:	9702      	str	r7, [sp, #8]
1000fe98:	fa5f f58c 	uxtb.w	r5, ip
                       DEC_ROUND_T_S( 0);
1000fe9c:	ea81 0109 	eor.w	r1, r1, r9
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1000fea0:	f505 7b40 	add.w	fp, r5, #768	@ 0x300
1000fea4:	b2e5      	uxtb	r5, r4
1000fea6:	f505 7e40 	add.w	lr, r5, #768	@ 0x300
1000feaa:	b2cd      	uxtb	r5, r1
1000feac:	f505 7940 	add.w	r9, r5, #768	@ 0x300
1000feb0:	0e0d      	lsrs	r5, r1, #24
1000feb2:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000feb6:	f3c2 4a07 	ubfx	sl, r2, #16, #8
1000feba:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000febe:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000fec2:	f8cd e00c 	str.w	lr, [sp, #12]
1000fec6:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000feca:	9205      	str	r2, [sp, #20]
1000fecc:	f3cc 2707 	ubfx	r7, ip, #8, #8
1000fed0:	6a02      	ldr	r2, [r0, #32]
1000fed2:	4075      	eors	r5, r6
1000fed4:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000fed8:	4055      	eors	r5, r2
1000feda:	9a02      	ldr	r2, [sp, #8]
1000fedc:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000fee0:	4055      	eors	r5, r2
1000fee2:	406f      	eors	r7, r5
1000fee4:	9a03      	ldr	r2, [sp, #12]
1000fee6:	f853 5028 	ldr.w	r5, [r3, r8, lsl #2]
1000feea:	f853 802b 	ldr.w	r8, [r3, fp, lsl #2]
1000feee:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
1000fef2:	f3cc 4c07 	ubfx	ip, ip, #16, #8
1000fef6:	f50c 7680 	add.w	r6, ip, #256	@ 0x100
1000fefa:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000fefe:	9604      	str	r6, [sp, #16]
1000ff00:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000ff04:	ea85 0508 	eor.w	r5, r5, r8
1000ff08:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000ff0c:	9a05      	ldr	r2, [sp, #20]
1000ff0e:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000ff12:	f3c1 4607 	ubfx	r6, r1, #16, #8
1000ff16:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
1000ff1a:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000ff1e:	ea8e 0e08 	eor.w	lr, lr, r8
1000ff22:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000ff26:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
1000ff2a:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
1000ff2e:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000ff32:	6a42      	ldr	r2, [r0, #36]	@ 0x24
1000ff34:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000ff38:	ea8c 0c08 	eor.w	ip, ip, r8
1000ff3c:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000ff40:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000ff44:	9e04      	ldr	r6, [sp, #16]
1000ff46:	4055      	eors	r5, r2
1000ff48:	ea85 0508 	eor.w	r5, r5, r8
1000ff4c:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000ff50:	4065      	eors	r5, r4
1000ff52:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000ff56:	6a84      	ldr	r4, [r0, #40]	@ 0x28
1000ff58:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000ff5c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ff60:	ea8e 0e04 	eor.w	lr, lr, r4
1000ff64:	ea8e 0e09 	eor.w	lr, lr, r9
1000ff68:	ea8e 0e01 	eor.w	lr, lr, r1
1000ff6c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000ff6e:	b2ea      	uxtb	r2, r5
1000ff70:	ea8c 0c01 	eor.w	ip, ip, r1
1000ff74:	ea8c 0c06 	eor.w	ip, ip, r6
1000ff78:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ff7c:	ea8c 0c0a 	eor.w	ip, ip, sl
1000ff80:	f3c7 4107 	ubfx	r1, r7, #16, #8
1000ff84:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000ff88:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000ff8c:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000ff90:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000ff94:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ff98:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000ff9c:	9103      	str	r1, [sp, #12]
1000ff9e:	f3cc 2107 	ubfx	r1, ip, #8, #8
1000ffa2:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000ffa6:	9202      	str	r2, [sp, #8]
1000ffa8:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
1000ffac:	f8cd 8010 	str.w	r8, [sp, #16]
1000ffb0:	fa5f f18c 	uxtb.w	r1, ip
1000ffb4:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000ffb8:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000ffbc:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000ffc0:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000ffc4:	f3c5 4107 	ubfx	r1, r5, #16, #8
1000ffc8:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000ffcc:	f3ce 2207 	ubfx	r2, lr, #8, #8
1000ffd0:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
1000ffd4:	f3c7 2107 	ubfx	r1, r7, #8, #8
1000ffd8:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000ffdc:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000ffe0:	f853 c021 	ldr.w	ip, [r3, r1, lsl #2]
1000ffe4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
1000ffe8:	b2f9      	uxtb	r1, r7
1000ffea:	0e3f      	lsrs	r7, r7, #24
1000ffec:	fa5f f28e 	uxtb.w	r2, lr
1000fff0:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000fff4:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000fff8:	ea87 0a0a 	eor.w	sl, r7, sl
1000fffc:	0e2f      	lsrs	r7, r5, #24
1000fffe:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010002:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010006:	f3c5 2507 	ubfx	r5, r5, #8, #8
1001000a:	ea87 0902 	eor.w	r9, r7, r2
1001000e:	f505 7200 	add.w	r2, r5, #512	@ 0x200
10010012:	ea4f 651e 	mov.w	r5, lr, lsr #24
10010016:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1001001a:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
1001001e:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010022:	4067      	eors	r7, r4
10010024:	6b04      	ldr	r4, [r0, #48]	@ 0x30
10010026:	ea8a 0a04 	eor.w	sl, sl, r4
1001002a:	9c02      	ldr	r4, [sp, #8]
1001002c:	ea8a 0a04 	eor.w	sl, sl, r4
10010030:	6b44      	ldr	r4, [r0, #52]	@ 0x34
10010032:	ea89 0904 	eor.w	r9, r9, r4
10010036:	9c03      	ldr	r4, [sp, #12]
10010038:	ea89 0904 	eor.w	r9, r9, r4
1001003c:	9c04      	ldr	r4, [sp, #16]
1001003e:	ea8b 0b01 	eor.w	fp, fp, r1
10010042:	ea89 0504 	eor.w	r5, r9, r4
10010046:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001004a:	6b84      	ldr	r4, [r0, #56]	@ 0x38
1001004c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
1001004e:	f3ce 4e07 	ubfx	lr, lr, #16, #8
10010052:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
10010056:	4067      	eors	r7, r4
10010058:	ea8b 0b02 	eor.w	fp, fp, r2
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
1001005c:	b2ea      	uxtb	r2, r5
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1001005e:	f853 402e 	ldr.w	r4, [r3, lr, lsl #2]
10010062:	ea87 0708 	eor.w	r7, r7, r8
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
10010066:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1001006a:	ea87 070c 	eor.w	r7, r7, ip
1001006e:	ea8b 0b04 	eor.w	fp, fp, r4
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
10010072:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010076:	b2fa      	uxtb	r2, r7
10010078:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1001007c:	ea8b 0b01 	eor.w	fp, fp, r1
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
10010080:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010084:	fa5f f28b 	uxtb.w	r2, fp
10010088:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T( 8); DEC_ROUND_T_S( 8);
1001008c:	ea8a 0606 	eor.w	r6, sl, r6
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
10010090:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10010094:	b2f2      	uxtb	r2, r6
10010096:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001009a:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1001009e:	0e32      	lsrs	r2, r6, #24
100100a0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100100a4:	4054      	eors	r4, r2
100100a6:	0e2a      	lsrs	r2, r5, #24
100100a8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100100ac:	ea82 020e 	eor.w	r2, r2, lr
100100b0:	ea4f 6e17 	mov.w	lr, r7, lsr #24
100100b4:	9202      	str	r2, [sp, #8]
100100b6:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100100ba:	ea8e 0101 	eor.w	r1, lr, r1
100100be:	ea4f 6e1b 	mov.w	lr, fp, lsr #24
100100c2:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100100c6:	ea8e 0808 	eor.w	r8, lr, r8
100100ca:	f3cb 4e07 	ubfx	lr, fp, #16, #8
100100ce:	f3cb 2b07 	ubfx	fp, fp, #8, #8
100100d2:	f50b 7c00 	add.w	ip, fp, #512	@ 0x200
100100d6:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100100da:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
100100de:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100100e2:	9203      	str	r2, [sp, #12]
100100e4:	f3c6 4c07 	ubfx	ip, r6, #16, #8
100100e8:	f3c6 2607 	ubfx	r6, r6, #8, #8
100100ec:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
100100f0:	f506 7600 	add.w	r6, r6, #512	@ 0x200
100100f4:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
100100f8:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
100100fc:	6c02      	ldr	r2, [r0, #64]	@ 0x40
100100fe:	f3c5 4607 	ubfx	r6, r5, #16, #8
10010102:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010106:	4054      	eors	r4, r2
10010108:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1001010c:	9a02      	ldr	r2, [sp, #8]
1001010e:	f3c7 4607 	ubfx	r6, r7, #16, #8
10010112:	f3c7 2707 	ubfx	r7, r7, #8, #8
10010116:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1001011a:	ea84 040b 	eor.w	r4, r4, fp
1001011e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010122:	ea84 0a07 	eor.w	sl, r4, r7
10010126:	6c47      	ldr	r7, [r0, #68]	@ 0x44
10010128:	9c03      	ldr	r4, [sp, #12]
1001012a:	407a      	eors	r2, r7
1001012c:	6c87      	ldr	r7, [r0, #72]	@ 0x48
1001012e:	ea82 0209 	eor.w	r2, r2, r9
10010132:	f3c5 2507 	ubfx	r5, r5, #8, #8
10010136:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1001013a:	e001      	b.n	10010140 <AesDecrypt_C+0x3e4>
1001013c:	1002160c 	.word	0x1002160c
10010140:	4062      	eors	r2, r4
10010142:	f505 7500 	add.w	r5, r5, #512	@ 0x200
10010146:	ea81 0407 	eor.w	r4, r1, r7
1001014a:	6cc7      	ldr	r7, [r0, #76]	@ 0x4c
1001014c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010150:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
10010154:	ea88 0107 	eor.w	r1, r8, r7
10010158:	ea84 040e 	eor.w	r4, r4, lr
1001015c:	ea84 040c 	eor.w	r4, r4, ip
10010160:	4071      	eors	r1, r6
10010162:	f3ca 4c07 	ubfx	ip, sl, #16, #8
10010166:	4069      	eors	r1, r5
10010168:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1001016c:	f8cd c00c 	str.w	ip, [sp, #12]
10010170:	fa5f fc81 	uxtb.w	ip, r1
10010174:	f50c 7e40 	add.w	lr, ip, #768	@ 0x300
10010178:	b2d5      	uxtb	r5, r2
1001017a:	fa5f fc8a 	uxtb.w	ip, sl
1001017e:	f50c 7940 	add.w	r9, ip, #768	@ 0x300
10010182:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010186:	ea4f 6c1a 	mov.w	ip, sl, lsr #24
1001018a:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001018e:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
10010192:	f8cd e010 	str.w	lr, [sp, #16]
10010196:	b2e7      	uxtb	r7, r4
10010198:	ea8b 0b05 	eor.w	fp, fp, r5
1001019c:	f507 7740 	add.w	r7, r7, #768	@ 0x300
100101a0:	0e15      	lsrs	r5, r2, #24
100101a2:	f3c1 4607 	ubfx	r6, r1, #16, #8
100101a6:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
100101aa:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100101ae:	f506 7680 	add.w	r6, r6, #256	@ 0x100
100101b2:	407d      	eors	r5, r7
100101b4:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100101b8:	6d07      	ldr	r7, [r0, #80]	@ 0x50
100101ba:	9602      	str	r6, [sp, #8]
100101bc:	ea8b 0b07 	eor.w	fp, fp, r7
100101c0:	9f02      	ldr	r7, [sp, #8]
100101c2:	ea8b 0b07 	eor.w	fp, fp, r7
100101c6:	6d47      	ldr	r7, [r0, #84]	@ 0x54
100101c8:	407d      	eors	r5, r7
100101ca:	9f03      	ldr	r7, [sp, #12]
100101cc:	f3c4 2607 	ubfx	r6, r4, #8, #8
100101d0:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
100101d4:	ea4f 6814 	mov.w	r8, r4, lsr #24
100101d8:	ea4f 6e11 	mov.w	lr, r1, lsr #24
100101dc:	f506 7600 	add.w	r6, r6, #512	@ 0x200
100101e0:	f3c1 2107 	ubfx	r1, r1, #8, #8
100101e4:	f501 7100 	add.w	r1, r1, #512	@ 0x200
100101e8:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100101ec:	f3c2 4c07 	ubfx	ip, r2, #16, #8
100101f0:	407d      	eors	r5, r7
100101f2:	f3c2 2207 	ubfx	r2, r2, #8, #8
100101f6:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
100101fa:	f8dd 8010 	ldr.w	r8, [sp, #16]
100101fe:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010202:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010206:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1001020a:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1001020e:	404d      	eors	r5, r1
10010210:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
10010214:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10010218:	6d82      	ldr	r2, [r0, #88]	@ 0x58
1001021a:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1001021e:	ea87 0708 	eor.w	r7, r7, r8
10010222:	f3ca 2a07 	ubfx	sl, sl, #8, #8
10010226:	f853 8029 	ldr.w	r8, [r3, r9, lsl #2]
1001022a:	f50a 7a00 	add.w	sl, sl, #512	@ 0x200
1001022e:	4057      	eors	r7, r2
10010230:	f3c4 4407 	ubfx	r4, r4, #16, #8
10010234:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
10010236:	ea8e 0e08 	eor.w	lr, lr, r8
1001023a:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1001023e:	f853 802a 	ldr.w	r8, [r3, sl, lsl #2]
10010242:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010246:	ea87 070c 	eor.w	r7, r7, ip
1001024a:	ea8e 0c02 	eor.w	ip, lr, r2
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001024e:	b2ea      	uxtb	r2, r5
10010250:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
10010254:	ea87 0708 	eor.w	r7, r7, r8
10010258:	ea8c 0c04 	eor.w	ip, ip, r4
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001025c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010260:	b2fa      	uxtb	r2, r7
10010262:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
10010266:	ea8c 0c01 	eor.w	ip, ip, r1
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001026a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001026e:	fa5f f28c 	uxtb.w	r2, ip
10010272:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(16); DEC_ROUND_T_S(16);
10010276:	ea8b 0606 	eor.w	r6, fp, r6
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001027a:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1001027e:	b2f2      	uxtb	r2, r6
10010280:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010284:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010288:	0e32      	lsrs	r2, r6, #24
1001028a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001028e:	4054      	eors	r4, r2
10010290:	0e2a      	lsrs	r2, r5, #24
10010292:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010296:	4051      	eors	r1, r2
10010298:	0e3a      	lsrs	r2, r7, #24
1001029a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001029e:	ea82 0208 	eor.w	r2, r2, r8
100102a2:	ea4f 681c 	mov.w	r8, ip, lsr #24
100102a6:	9202      	str	r2, [sp, #8]
100102a8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100102ac:	6e02      	ldr	r2, [r0, #96]	@ 0x60
100102ae:	ea88 0e0e 	eor.w	lr, r8, lr
100102b2:	f3cc 4807 	ubfx	r8, ip, #16, #8
100102b6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
100102ba:	f508 7880 	add.w	r8, r8, #256	@ 0x100
100102be:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
100102c2:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
100102c6:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
100102ca:	f3c6 4c07 	ubfx	ip, r6, #16, #8
100102ce:	f3c6 2607 	ubfx	r6, r6, #8, #8
100102d2:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
100102d6:	f506 7600 	add.w	r6, r6, #512	@ 0x200
100102da:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
100102de:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
100102e2:	f3c5 4607 	ubfx	r6, r5, #16, #8
100102e6:	f506 7680 	add.w	r6, r6, #256	@ 0x100
100102ea:	4054      	eors	r4, r2
100102ec:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
100102f0:	9a02      	ldr	r2, [sp, #8]
100102f2:	f3c7 4607 	ubfx	r6, r7, #16, #8
100102f6:	f3c7 2707 	ubfx	r7, r7, #8, #8
100102fa:	f507 7700 	add.w	r7, r7, #512	@ 0x200
100102fe:	ea84 040b 	eor.w	r4, r4, fp
10010302:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010306:	407c      	eors	r4, r7
10010308:	6e47      	ldr	r7, [r0, #100]	@ 0x64
1001030a:	f3c5 2507 	ubfx	r5, r5, #8, #8
1001030e:	4079      	eors	r1, r7
10010310:	f505 7500 	add.w	r5, r5, #512	@ 0x200
10010314:	6e87      	ldr	r7, [r0, #104]	@ 0x68
10010316:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001031a:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1001031e:	407a      	eors	r2, r7
10010320:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010324:	6ec7      	ldr	r7, [r0, #108]	@ 0x6c
10010326:	ea82 020a 	eor.w	r2, r2, sl
1001032a:	ea82 020c 	eor.w	r2, r2, ip
1001032e:	ea81 0109 	eor.w	r1, r1, r9
10010332:	ea8e 0c07 	eor.w	ip, lr, r7
10010336:	ea81 0108 	eor.w	r1, r1, r8
1001033a:	ea8c 0c06 	eor.w	ip, ip, r6
1001033e:	ea8c 0c05 	eor.w	ip, ip, r5
10010342:	fa5f f881 	uxtb.w	r8, r1
10010346:	fa5f fe82 	uxtb.w	lr, r2
1001034a:	b2e5      	uxtb	r5, r4
1001034c:	0e26      	lsrs	r6, r4, #24
1001034e:	f508 7840 	add.w	r8, r8, #768	@ 0x300
10010352:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
10010356:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001035a:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1001035e:	f853 6028 	ldr.w	r6, [r3, r8, lsl #2]
10010362:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
10010366:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1001036a:	0e0d      	lsrs	r5, r1, #24
1001036c:	fa5f f78c 	uxtb.w	r7, ip
10010370:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
10010374:	f507 7740 	add.w	r7, r7, #768	@ 0x300
10010378:	ea85 0508 	eor.w	r5, r5, r8
1001037c:	ea4f 6812 	mov.w	r8, r2, lsr #24
10010380:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
10010384:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010388:	ea88 0707 	eor.w	r7, r8, r7
1001038c:	ea4f 681c 	mov.w	r8, ip, lsr #24
10010390:	f3c2 4a07 	ubfx	sl, r2, #16, #8
10010394:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010398:	f3c2 2207 	ubfx	r2, r2, #8, #8
1001039c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100103a0:	ea88 080e 	eor.w	r8, r8, lr
100103a4:	f3cc 4e07 	ubfx	lr, ip, #16, #8
100103a8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100103ac:	9202      	str	r2, [sp, #8]
100103ae:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100103b2:	6f02      	ldr	r2, [r0, #112]	@ 0x70
100103b4:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100103b8:	ea89 0606 	eor.w	r6, r9, r6
100103bc:	4056      	eors	r6, r2
100103be:	9a02      	ldr	r2, [sp, #8]
100103c0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
100103c4:	ea86 060b 	eor.w	r6, r6, fp
100103c8:	4056      	eors	r6, r2
100103ca:	f3cc 2c07 	ubfx	ip, ip, #8, #8
100103ce:	6f42      	ldr	r2, [r0, #116]	@ 0x74
100103d0:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100103d4:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
100103d8:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100103dc:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
100103e0:	4055      	eors	r5, r2
100103e2:	6f82      	ldr	r2, [r0, #120]	@ 0x78
100103e4:	f3c1 4907 	ubfx	r9, r1, #16, #8
100103e8:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
100103ec:	f3c1 2107 	ubfx	r1, r1, #8, #8
100103f0:	ea85 050e 	eor.w	r5, r5, lr
100103f4:	4057      	eors	r7, r2
100103f6:	f501 7100 	add.w	r1, r1, #512	@ 0x200
100103fa:	6fc2      	ldr	r2, [r0, #124]	@ 0x7c
100103fc:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
10010400:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010404:	ea85 0c0c 	eor.w	ip, r5, ip
10010408:	ea88 0e02 	eor.w	lr, r8, r2
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
1001040c:	fa5f f28c 	uxtb.w	r2, ip
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
10010410:	ea8e 0e0a 	eor.w	lr, lr, sl
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010414:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
10010418:	f3c4 2407 	ubfx	r4, r4, #8, #8
1001041c:	f509 7980 	add.w	r9, r9, #256	@ 0x100
10010420:	ea8e 0e01 	eor.w	lr, lr, r1
10010424:	f504 7400 	add.w	r4, r4, #512	@ 0x200
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010428:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001042c:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
10010430:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010434:	f3ce 4207 	ubfx	r2, lr, #16, #8
10010438:	f502 7280 	add.w	r2, r2, #256	@ 0x100
    DEC_ROUND_S_T(24); DEC_ROUND_T_S(24);
1001043c:	ea87 0709 	eor.w	r7, r7, r9
10010440:	4067      	eors	r7, r4
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010442:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010446:	9202      	str	r2, [sp, #8]
10010448:	f3c7 2207 	ubfx	r2, r7, #8, #8
1001044c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010450:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
10010454:	f8cd 800c 	str.w	r8, [sp, #12]
10010458:	b2fa      	uxtb	r2, r7
1001045a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001045e:	fa5f f886 	uxtb.w	r8, r6
10010462:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010466:	f3c6 4207 	ubfx	r2, r6, #16, #8
1001046a:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1001046e:	f508 7840 	add.w	r8, r8, #768	@ 0x300
10010472:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
10010476:	f8cd 9010 	str.w	r9, [sp, #16]
1001047a:	f3ce 2207 	ubfx	r2, lr, #8, #8
1001047e:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010482:	f3cc 4907 	ubfx	r9, ip, #16, #8
10010486:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1001048a:	fa5f f28e 	uxtb.w	r2, lr
1001048e:	ea4f 6e1e 	mov.w	lr, lr, lsr #24
10010492:	f8cd e014 	str.w	lr, [sp, #20]
10010496:	ea4f 6e16 	mov.w	lr, r6, lsr #24
1001049a:	f3c6 2607 	ubfx	r6, r6, #8, #8
1001049e:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100104a2:	ea8b 0b01 	eor.w	fp, fp, r1
100104a6:	f506 7100 	add.w	r1, r6, #512	@ 0x200
100104aa:	ea4f 661c 	mov.w	r6, ip, lsr #24
100104ae:	f502 7240 	add.w	r2, r2, #768	@ 0x300
100104b2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100104b6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100104ba:	ea86 0a04 	eor.w	sl, r6, r4
100104be:	0e3c      	lsrs	r4, r7, #24
100104c0:	f3c7 4707 	ubfx	r7, r7, #16, #8
100104c4:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
100104c8:	ea84 0e02 	eor.w	lr, r4, r2
100104cc:	f8d0 4080 	ldr.w	r4, [r0, #128]	@ 0x80
100104d0:	ea8b 0b04 	eor.w	fp, fp, r4
100104d4:	9c02      	ldr	r4, [sp, #8]
100104d6:	ea8b 0b04 	eor.w	fp, fp, r4
100104da:	9c03      	ldr	r4, [sp, #12]
100104dc:	ea8b 0604 	eor.w	r6, fp, r4
100104e0:	f8d0 4084 	ldr.w	r4, [r0, #132]	@ 0x84
100104e4:	ea8a 0a04 	eor.w	sl, sl, r4
100104e8:	9c04      	ldr	r4, [sp, #16]
100104ea:	ea8a 0a04 	eor.w	sl, sl, r4
100104ee:	f8d0 4088 	ldr.w	r4, [r0, #136]	@ 0x88
100104f2:	f507 7280 	add.w	r2, r7, #256	@ 0x100
100104f6:	ea8e 0704 	eor.w	r7, lr, r4
100104fa:	f8dd e014 	ldr.w	lr, [sp, #20]
100104fe:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
10010502:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
10010506:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1001050a:	ea8e 0404 	eor.w	r4, lr, r4
1001050e:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
10010512:	ea87 070e 	eor.w	r7, r7, lr
10010516:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1001051a:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001051e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
10010522:	4057      	eors	r7, r2
10010524:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
10010528:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
1001052c:	f853 102c 	ldr.w	r1, [r3, ip, lsl #2]
10010530:	ea8a 0505 	eor.w	r5, sl, r5
10010534:	ea84 0c02 	eor.w	ip, r4, r2
10010538:	b2ea      	uxtb	r2, r5
1001053a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001053e:	ea8c 0c0e 	eor.w	ip, ip, lr
10010542:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010546:	b2fa      	uxtb	r2, r7
10010548:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001054c:	ea8c 0c01 	eor.w	ip, ip, r1
10010550:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10010554:	fa5f f28c 	uxtb.w	r2, ip
10010558:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1001055c:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
10010560:	b2f2      	uxtb	r2, r6
10010562:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010566:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1001056a:	0e32      	lsrs	r2, r6, #24
1001056c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010570:	4054      	eors	r4, r2
10010572:	0e2a      	lsrs	r2, r5, #24
10010574:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010578:	4051      	eors	r1, r2
1001057a:	0e3a      	lsrs	r2, r7, #24
1001057c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010580:	ea82 0208 	eor.w	r2, r2, r8
10010584:	ea4f 681c 	mov.w	r8, ip, lsr #24
10010588:	9202      	str	r2, [sp, #8]
1001058a:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001058e:	ea88 080e 	eor.w	r8, r8, lr
10010592:	f3cc 4e07 	ubfx	lr, ip, #16, #8
10010596:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1001059a:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1001059e:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100105a2:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
100105a6:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100105aa:	f3c6 4c07 	ubfx	ip, r6, #16, #8
100105ae:	f3c6 2607 	ubfx	r6, r6, #8, #8
100105b2:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
100105b6:	f506 7600 	add.w	r6, r6, #512	@ 0x200
100105ba:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
100105be:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
100105c2:	f3c5 4607 	ubfx	r6, r5, #16, #8
100105c6:	f506 7680 	add.w	r6, r6, #256	@ 0x100
100105ca:	f3c5 2507 	ubfx	r5, r5, #8, #8
100105ce:	f505 7500 	add.w	r5, r5, #512	@ 0x200
100105d2:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
100105d6:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100105da:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90
100105de:	f3c7 4607 	ubfx	r6, r7, #16, #8
100105e2:	f3c7 2707 	ubfx	r7, r7, #8, #8
100105e6:	f507 7700 	add.w	r7, r7, #512	@ 0x200
100105ea:	4054      	eors	r4, r2
100105ec:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
100105f0:	9a02      	ldr	r2, [sp, #8]
100105f2:	ea84 040b 	eor.w	r4, r4, fp
100105f6:	407c      	eors	r4, r7
100105f8:	f8d0 7094 	ldr.w	r7, [r0, #148]	@ 0x94
100105fc:	4079      	eors	r1, r7
100105fe:	f8d0 7098 	ldr.w	r7, [r0, #152]	@ 0x98
10010602:	f506 7680 	add.w	r6, r6, #256	@ 0x100
10010606:	407a      	eors	r2, r7
10010608:	f8d0 709c 	ldr.w	r7, [r0, #156]	@ 0x9c
1001060c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
10010610:	ea82 020e 	eor.w	r2, r2, lr
10010614:	ea82 020c 	eor.w	r2, r2, ip
10010618:	ea88 0c07 	eor.w	ip, r8, r7
1001061c:	ea8c 0c06 	eor.w	ip, ip, r6
10010620:	ea8c 0c05 	eor.w	ip, ip, r5
    if (r > 5) {
10010624:	9d00      	ldr	r5, [sp, #0]
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
10010626:	ea81 0109 	eor.w	r1, r1, r9
    if (r > 5) {
1001062a:	2d05      	cmp	r5, #5
    DEC_ROUND_S_T(32); DEC_ROUND_T_S(32);
1001062c:	ea81 010a 	eor.w	r1, r1, sl
    if (r > 5) {
10010630:	f240 81ee 	bls.w	10010a10 <AesDecrypt_C+0xcb4>
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
10010634:	b2cd      	uxtb	r5, r1
10010636:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001063a:	f3c2 4a07 	ubfx	sl, r2, #16, #8
1001063e:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
10010642:	b2d5      	uxtb	r5, r2
10010644:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010648:	f3c1 4907 	ubfx	r9, r1, #16, #8
1001064c:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
10010650:	fa5f f58c 	uxtb.w	r5, ip
10010654:	f505 7540 	add.w	r5, r5, #768	@ 0x300
10010658:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
1001065c:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
10010660:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
10010664:	b2e5      	uxtb	r5, r4
10010666:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001066a:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1001066e:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
10010672:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
10010676:	0e25      	lsrs	r5, r4, #24
10010678:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001067c:	406e      	eors	r6, r5
1001067e:	0e0d      	lsrs	r5, r1, #24
10010680:	f3c1 2107 	ubfx	r1, r1, #8, #8
10010684:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
10010688:	ea85 0508 	eor.w	r5, r5, r8
1001068c:	ea4f 6812 	mov.w	r8, r2, lsr #24
10010690:	f3c2 2207 	ubfx	r2, r2, #8, #8
10010694:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010698:	ea88 0707 	eor.w	r7, r8, r7
1001069c:	ea4f 681c 	mov.w	r8, ip, lsr #24
100106a0:	f502 7200 	add.w	r2, r2, #512	@ 0x200
100106a4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
100106a8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
100106ac:	9202      	str	r2, [sp, #8]
100106ae:	ea88 080e 	eor.w	r8, r8, lr
100106b2:	f3cc 4e07 	ubfx	lr, ip, #16, #8
100106b6:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100106ba:	f8d0 20a0 	ldr.w	r2, [r0, #160]	@ 0xa0
100106be:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100106c2:	4056      	eors	r6, r2
100106c4:	9a02      	ldr	r2, [sp, #8]
100106c6:	f3c4 4e07 	ubfx	lr, r4, #16, #8
100106ca:	ea86 060b 	eor.w	r6, r6, fp
100106ce:	4056      	eors	r6, r2
100106d0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
100106d4:	f8d0 20a4 	ldr.w	r2, [r0, #164]	@ 0xa4
100106d8:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100106dc:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
100106e0:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100106e4:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
100106e8:	4055      	eors	r5, r2
100106ea:	f8d0 20a8 	ldr.w	r2, [r0, #168]	@ 0xa8
100106ee:	ea85 050e 	eor.w	r5, r5, lr
100106f2:	4057      	eors	r7, r2
100106f4:	f501 7100 	add.w	r1, r1, #512	@ 0x200
100106f8:	f8d0 20ac 	ldr.w	r2, [r0, #172]	@ 0xac
100106fc:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
10010700:	ea85 050c 	eor.w	r5, r5, ip
10010704:	f3c4 2407 	ubfx	r4, r4, #8, #8
10010708:	ea88 0c02 	eor.w	ip, r8, r2
1001070c:	b2ea      	uxtb	r2, r5
1001070e:	ea8c 0c0a 	eor.w	ip, ip, sl
10010712:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010716:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1001071a:	ea8c 0c01 	eor.w	ip, ip, r1
1001071e:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010722:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010726:	f3cc 4207 	ubfx	r2, ip, #16, #8
1001072a:	ea87 0709 	eor.w	r7, r7, r9
1001072e:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010732:	4067      	eors	r7, r4
10010734:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
10010738:	f3c7 2207 	ubfx	r2, r7, #8, #8
1001073c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010740:	ea4f 6816 	mov.w	r8, r6, lsr #24
10010744:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
10010748:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001074c:	b2fa      	uxtb	r2, r7
1001074e:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010752:	ea4f 6a1c 	mov.w	sl, ip, lsr #24
10010756:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001075a:	f3c6 4207 	ubfx	r2, r6, #16, #8
1001075e:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010762:	ea88 080e 	eor.w	r8, r8, lr
10010766:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1001076a:	f3cc 2207 	ubfx	r2, ip, #8, #8
1001076e:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010772:	ea4f 6e15 	mov.w	lr, r5, lsr #24
10010776:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001077a:	9202      	str	r2, [sp, #8]
1001077c:	fa5f f28c 	uxtb.w	r2, ip
10010780:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010784:	fa5f fc86 	uxtb.w	ip, r6
10010788:	f3c6 2607 	ubfx	r6, r6, #8, #8
1001078c:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010790:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010794:	9603      	str	r6, [sp, #12]
10010796:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1001079a:	ea8e 0101 	eor.w	r1, lr, r1
1001079e:	ea4f 6e17 	mov.w	lr, r7, lsr #24
100107a2:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
100107a6:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100107aa:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
100107ae:	ea8e 0602 	eor.w	r6, lr, r2
100107b2:	f8d0 20b0 	ldr.w	r2, [r0, #176]	@ 0xb0
100107b6:	ea88 0802 	eor.w	r8, r8, r2
100107ba:	f8d0 20b4 	ldr.w	r2, [r0, #180]	@ 0xb4
100107be:	f3c5 4e07 	ubfx	lr, r5, #16, #8
100107c2:	4051      	eors	r1, r2
100107c4:	9a02      	ldr	r2, [sp, #8]
100107c6:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100107ca:	ea81 010b 	eor.w	r1, r1, fp
100107ce:	4051      	eors	r1, r2
100107d0:	f8d0 20b8 	ldr.w	r2, [r0, #184]	@ 0xb8
100107d4:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100107d8:	4056      	eors	r6, r2
100107da:	ea86 020e 	eor.w	r2, r6, lr
100107de:	9e03      	ldr	r6, [sp, #12]
100107e0:	f3c5 2507 	ubfx	r5, r5, #8, #8
100107e4:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100107e8:	f505 7500 	add.w	r5, r5, #512	@ 0x200
100107ec:	ea88 0804 	eor.w	r8, r8, r4
100107f0:	f3c7 4707 	ubfx	r7, r7, #16, #8
100107f4:	ea88 0409 	eor.w	r4, r8, r9
100107f8:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
100107fc:	f507 7780 	add.w	r7, r7, #256	@ 0x100
10010800:	4072      	eors	r2, r6
10010802:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
10010806:	f8d0 50bc 	ldr.w	r5, [r0, #188]	@ 0xbc
1001080a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1001080e:	ea89 0c0c 	eor.w	ip, r9, ip
10010812:	ea8c 0c05 	eor.w	ip, ip, r5
        if (r > 6) {
10010816:	9d00      	ldr	r5, [sp, #0]
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
10010818:	ea8c 0c07 	eor.w	ip, ip, r7
        if (r > 6) {
1001081c:	2d06      	cmp	r5, #6
        DEC_ROUND_S_T(40); DEC_ROUND_T_S(40);
1001081e:	ea8c 0c06 	eor.w	ip, ip, r6
        if (r > 6) {
10010822:	f000 80f5 	beq.w	10010a10 <AesDecrypt_C+0xcb4>
            DEC_ROUND_S_T(48); DEC_ROUND_T_S(48);
10010826:	b2cd      	uxtb	r5, r1
10010828:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001082c:	f3c2 4a07 	ubfx	sl, r2, #16, #8
10010830:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
10010834:	b2d5      	uxtb	r5, r2
10010836:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001083a:	f3c1 4907 	ubfx	r9, r1, #16, #8
1001083e:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
10010842:	fa5f f58c 	uxtb.w	r5, ip
10010846:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001084a:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
1001084e:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
10010852:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
10010856:	b2e5      	uxtb	r5, r4
10010858:	f505 7540 	add.w	r5, r5, #768	@ 0x300
1001085c:	f509 7980 	add.w	r9, r9, #256	@ 0x100
10010860:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
10010864:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
10010868:	0e25      	lsrs	r5, r4, #24
1001086a:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001086e:	406e      	eors	r6, r5
10010870:	0e0d      	lsrs	r5, r1, #24
10010872:	f3c1 2107 	ubfx	r1, r1, #8, #8
10010876:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1001087a:	ea85 0508 	eor.w	r5, r5, r8
1001087e:	ea4f 6812 	mov.w	r8, r2, lsr #24
10010882:	f3c2 2207 	ubfx	r2, r2, #8, #8
10010886:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001088a:	ea88 0707 	eor.w	r7, r8, r7
1001088e:	ea4f 681c 	mov.w	r8, ip, lsr #24
10010892:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010896:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001089a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001089e:	9202      	str	r2, [sp, #8]
100108a0:	ea88 080e 	eor.w	r8, r8, lr
100108a4:	f3cc 4e07 	ubfx	lr, ip, #16, #8
100108a8:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100108ac:	f8d0 20c0 	ldr.w	r2, [r0, #192]	@ 0xc0
100108b0:	f853 b02e 	ldr.w	fp, [r3, lr, lsl #2]
100108b4:	4056      	eors	r6, r2
100108b6:	9a02      	ldr	r2, [sp, #8]
100108b8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
100108bc:	ea86 060b 	eor.w	r6, r6, fp
100108c0:	4056      	eors	r6, r2
100108c2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
100108c6:	f8d0 20c4 	ldr.w	r2, [r0, #196]	@ 0xc4
100108ca:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100108ce:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
100108d2:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100108d6:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
100108da:	4055      	eors	r5, r2
100108dc:	f8d0 20c8 	ldr.w	r2, [r0, #200]	@ 0xc8
100108e0:	ea85 050e 	eor.w	r5, r5, lr
100108e4:	4057      	eors	r7, r2
100108e6:	f501 7100 	add.w	r1, r1, #512	@ 0x200
100108ea:	f8d0 20cc 	ldr.w	r2, [r0, #204]	@ 0xcc
100108ee:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
100108f2:	ea85 050c 	eor.w	r5, r5, ip
100108f6:	f3c4 2407 	ubfx	r4, r4, #8, #8
100108fa:	ea88 0c02 	eor.w	ip, r8, r2
100108fe:	b2ea      	uxtb	r2, r5
10010900:	ea8c 0c0a 	eor.w	ip, ip, sl
10010904:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010908:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1001090c:	ea8c 0c01 	eor.w	ip, ip, r1
10010910:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
10010914:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
10010918:	f3cc 4207 	ubfx	r2, ip, #16, #8
1001091c:	ea87 0709 	eor.w	r7, r7, r9
10010920:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010924:	4067      	eors	r7, r4
10010926:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1001092a:	f3c7 2207 	ubfx	r2, r7, #8, #8
1001092e:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010932:	ea4f 6816 	mov.w	r8, r6, lsr #24
10010936:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
1001093a:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1001093e:	b2fa      	uxtb	r2, r7
10010940:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010944:	ea4f 6a1c 	mov.w	sl, ip, lsr #24
10010948:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001094c:	f3c6 4207 	ubfx	r2, r6, #16, #8
10010950:	f502 7280 	add.w	r2, r2, #256	@ 0x100
10010954:	ea88 080e 	eor.w	r8, r8, lr
10010958:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1001095c:	f3cc 2207 	ubfx	r2, ip, #8, #8
10010960:	f502 7200 	add.w	r2, r2, #512	@ 0x200
10010964:	ea4f 6e15 	mov.w	lr, r5, lsr #24
10010968:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1001096c:	9202      	str	r2, [sp, #8]
1001096e:	fa5f f28c 	uxtb.w	r2, ip
10010972:	f502 7240 	add.w	r2, r2, #768	@ 0x300
10010976:	fa5f fc86 	uxtb.w	ip, r6
1001097a:	f3c6 2607 	ubfx	r6, r6, #8, #8
1001097e:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010982:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10010986:	9603      	str	r6, [sp, #12]
10010988:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1001098c:	ea8e 0101 	eor.w	r1, lr, r1
10010990:	ea4f 6e17 	mov.w	lr, r7, lsr #24
10010994:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
10010998:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1001099c:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
100109a0:	ea8e 0602 	eor.w	r6, lr, r2
100109a4:	f8d0 20d0 	ldr.w	r2, [r0, #208]	@ 0xd0
100109a8:	ea88 0802 	eor.w	r8, r8, r2
100109ac:	f8d0 20d4 	ldr.w	r2, [r0, #212]	@ 0xd4
100109b0:	f3c5 4e07 	ubfx	lr, r5, #16, #8
100109b4:	4051      	eors	r1, r2
100109b6:	9a02      	ldr	r2, [sp, #8]
100109b8:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
100109bc:	ea81 010b 	eor.w	r1, r1, fp
100109c0:	4051      	eors	r1, r2
100109c2:	f8d0 20d8 	ldr.w	r2, [r0, #216]	@ 0xd8
100109c6:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
100109ca:	4056      	eors	r6, r2
100109cc:	f3c7 4707 	ubfx	r7, r7, #16, #8
100109d0:	f3c5 2507 	ubfx	r5, r5, #8, #8
100109d4:	ea86 020e 	eor.w	r2, r6, lr
100109d8:	f507 7780 	add.w	r7, r7, #256	@ 0x100
100109dc:	9e03      	ldr	r6, [sp, #12]
100109de:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
100109e2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
100109e6:	f505 7500 	add.w	r5, r5, #512	@ 0x200
100109ea:	ea88 0804 	eor.w	r8, r8, r4
100109ee:	ea88 0409 	eor.w	r4, r8, r9
100109f2:	f853 902a 	ldr.w	r9, [r3, sl, lsl #2]
100109f6:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
100109fa:	f8d0 30dc 	ldr.w	r3, [r0, #220]	@ 0xdc
100109fe:	ea89 0c0c 	eor.w	ip, r9, ip
10010a02:	ea8c 0c03 	eor.w	ip, ip, r3
10010a06:	ea8c 0c07 	eor.w	ip, ip, r7
10010a0a:	4072      	eors	r2, r6
10010a0c:	ea8c 0c05 	eor.w	ip, ip, r5

#ifndef WC_NO_CACHE_RESISTANT
    t0 |= PreFetchTd4();
#endif

    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010a10:	4b31      	ldr	r3, [pc, #196]	@ (10010ad8 <AesDecrypt_C+0xd7c>)
10010a12:	0e25      	lsrs	r5, r4, #24
10010a14:	b2ce      	uxtb	r6, r1
10010a16:	5d5d      	ldrb	r5, [r3, r5]
10010a18:	5d9e      	ldrb	r6, [r3, r6]
10010a1a:	ea46 6605 	orr.w	r6, r6, r5, lsl #24
                          GETBYTE(t2, 1), GETBYTE(t1, 0)) ^ rk[0];
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010a1e:	0e0d      	lsrs	r5, r1, #24
                          GETBYTE(t3, 1), GETBYTE(t2, 0)) ^ rk[1];
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010a20:	fa5f fe8c 	uxtb.w	lr, ip
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010a24:	5d5f      	ldrb	r7, [r3, r5]
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010a26:	f813 e00e 	ldrb.w	lr, [r3, lr]
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010a2a:	b2d5      	uxtb	r5, r2
10010a2c:	5d5d      	ldrb	r5, [r3, r5]
10010a2e:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010a32:	0e17      	lsrs	r7, r2, #24
10010a34:	5ddf      	ldrb	r7, [r3, r7]
10010a36:	ea4e 6e07 	orr.w	lr, lr, r7, lsl #24
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010a3a:	ea4f 671c 	mov.w	r7, ip, lsr #24
10010a3e:	f813 8007 	ldrb.w	r8, [r3, r7]
10010a42:	b2e7      	uxtb	r7, r4
10010a44:	5ddf      	ldrb	r7, [r3, r7]
10010a46:	ea47 6708 	orr.w	r7, r7, r8, lsl #24
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010a4a:	f3cc 4807 	ubfx	r8, ip, #16, #8
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010a4e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010a52:	f813 8008 	ldrb.w	r8, [r3, r8]
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010a56:	f813 c00c 	ldrb.w	ip, [r3, ip]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010a5a:	ea46 4608 	orr.w	r6, r6, r8, lsl #16
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010a5e:	f3c4 4807 	ubfx	r8, r4, #16, #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010a62:	f3c4 2407 	ubfx	r4, r4, #8, #8
    s1 = GetTable8_4(Td4, GETBYTE(t1, 3), GETBYTE(t0, 2),
10010a66:	f813 8008 	ldrb.w	r8, [r3, r8]
10010a6a:	ea45 4508 	orr.w	r5, r5, r8, lsl #16
10010a6e:	ea45 250c 	orr.w	r5, r5, ip, lsl #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010a72:	f813 c004 	ldrb.w	ip, [r3, r4]
10010a76:	f3c1 4407 	ubfx	r4, r1, #16, #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010a7a:	f3c1 2107 	ubfx	r1, r1, #8, #8
    s2 = GetTable8_4(Td4, GETBYTE(t2, 3), GETBYTE(t1, 2),
10010a7e:	5d1c      	ldrb	r4, [r3, r4]
10010a80:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
10010a84:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010a88:	f813 c001 	ldrb.w	ip, [r3, r1]
10010a8c:	f3c2 4107 	ubfx	r1, r2, #16, #8
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010a90:	f3c2 2207 	ubfx	r2, r2, #8, #8
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010a94:	5c59      	ldrb	r1, [r3, r1]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010a96:	5c9b      	ldrb	r3, [r3, r2]
    rk += r * 8;
10010a98:	9a00      	ldr	r2, [sp, #0]
    s0 = GetTable8_4(Td4, GETBYTE(t0, 3), GETBYTE(t3, 2),
10010a9a:	ea46 2303 	orr.w	r3, r6, r3, lsl #8
    rk += r * 8;
10010a9e:	eb00 1642 	add.w	r6, r0, r2, lsl #5
10010aa2:	0152      	lsls	r2, r2, #5
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010aa4:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
                          GETBYTE(t2, 1), GETBYTE(t1, 0)) ^ rk[0];
10010aa8:	5882      	ldr	r2, [r0, r2]
10010aaa:	4053      	eors	r3, r2
                          GETBYTE(t3, 1), GETBYTE(t2, 0)) ^ rk[1];
10010aac:	6872      	ldr	r2, [r6, #4]
10010aae:	ea85 0002 	eor.w	r0, r5, r2
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
10010ab2:	68b2      	ldr	r2, [r6, #8]
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    XMEMCPY(outBlock,                  &s0, sizeof(s0));
10010ab4:	9d01      	ldr	r5, [sp, #4]
                          GETBYTE(t0, 1), GETBYTE(t3, 0)) ^ rk[2];
10010ab6:	4062      	eors	r2, r4
                          GETBYTE(t1, 1), GETBYTE(t0, 0)) ^ rk[3];
10010ab8:	68f4      	ldr	r4, [r6, #12]
    s3 = GetTable8_4(Td4, GETBYTE(t3, 3), GETBYTE(t2, 2),
10010aba:	ea41 210c 	orr.w	r1, r1, ip, lsl #8
10010abe:	ba1b      	rev	r3, r3
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
10010ac0:	602b      	str	r3, [r5, #0]
                          GETBYTE(t1, 1), GETBYTE(t0, 0)) ^ rk[3];
10010ac2:	ea81 0304 	eor.w	r3, r1, r4
10010ac6:	ba00      	rev	r0, r0
    s2 = ByteReverseWord32(s2);
10010ac8:	ba12      	rev	r2, r2
    s3 = ByteReverseWord32(s3);
10010aca:	ba1b      	rev	r3, r3
    XMEMCPY(outBlock + sizeof(s0),     &s1, sizeof(s1));
10010acc:	6068      	str	r0, [r5, #4]
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
10010ace:	60aa      	str	r2, [r5, #8]
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
10010ad0:	60eb      	str	r3, [r5, #12]

}
10010ad2:	b007      	add	sp, #28
10010ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10010ad8:	1002150c 	.word	0x1002150c

10010adc <wc_AesSetKeyLocal.constprop.0>:
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        byte   local[32];
        word32 localSz = 32;
    #endif

        if (aes == NULL)
10010adc:	2800      	cmp	r0, #0
10010ade:	f000 827d 	beq.w	10010fdc <wc_AesSetKeyLocal.constprop.0+0x500>
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
10010ae2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        ret = wc_debug_CipherLifecycleCheck(aes->CipherLifecycleTag, 0);
        if (ret < 0)
            return ret;
#endif

        switch (keylen) {
10010ae6:	f1a2 0510 	sub.w	r5, r2, #16
10010aea:	2d10      	cmp	r5, #16
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
10010aec:	b085      	sub	sp, #20
10010aee:	4692      	mov	sl, r2
        switch (keylen) {
10010af0:	d804      	bhi.n	10010afc <wc_AesSetKeyLocal.constprop.0+0x20>
10010af2:	461f      	mov	r7, r3
10010af4:	4bd8      	ldr	r3, [pc, #864]	@ (10010e58 <wc_AesSetKeyLocal.constprop.0+0x37c>)
10010af6:	40eb      	lsrs	r3, r5
10010af8:	07db      	lsls	r3, r3, #31
10010afa:	d404      	bmi.n	10010b06 <wc_AesSetKeyLocal.constprop.0+0x2a>
10010afc:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
    #endif
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        ForceZero(local, sizeof(local));
    #endif
        return ret;
    } /* wc_AesSetKeyLocal */
10010b00:	b005      	add	sp, #20
10010b02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        aes->rounds = (keylen/4) + 6;
10010b06:	ea4f 0892 	mov.w	r8, r2, lsr #2
10010b0a:	f108 0306 	add.w	r3, r8, #6
10010b0e:	4689      	mov	r9, r1
10010b10:	4604      	mov	r4, r0
        aes->keylen = (int)keylen;
10010b12:	f8c0 20f4 	str.w	r2, [r0, #244]	@ 0xf4
        aes->rounds = (keylen/4) + 6;
10010b16:	f8c0 30f0 	str.w	r3, [r0, #240]	@ 0xf0
        XMEMCPY(aes->key, userKey, keylen);
10010b1a:	4606      	mov	r6, r0
            return ret;
    }
#endif

    if (iv)
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
10010b1c:	f100 0bf8 	add.w	fp, r0, #248	@ 0xf8
    if (iv)
10010b20:	2f00      	cmp	r7, #0
10010b22:	d047      	beq.n	10010bb4 <wc_AesSetKeyLocal.constprop.0+0xd8>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
10010b24:	f8d7 e000 	ldr.w	lr, [r7]
10010b28:	f8d7 c004 	ldr.w	ip, [r7, #4]
10010b2c:	68bd      	ldr	r5, [r7, #8]
10010b2e:	68fb      	ldr	r3, [r7, #12]
10010b30:	f8c0 e0f8 	str.w	lr, [r0, #248]	@ 0xf8
10010b34:	f8cb c004 	str.w	ip, [fp, #4]
10010b38:	f8cb 5008 	str.w	r5, [fp, #8]
10010b3c:	f8cb 300c 	str.w	r3, [fp, #12]
        XMEMCPY(aes->key, userKey, keylen);
10010b40:	f007 fcce 	bl	100184e0 <memcpy>
    if ((((size_t)in & 0x3) == 0) &&
        (((size_t)out & 0x3) == 0))
#endif
    {
        word32 count = byteCount/(word32)sizeof(word32);
        for (i = 0; i < count; i++)
10010b44:	eb04 0888 	add.w	r8, r4, r8, lsl #2
10010b48:	4625      	mov	r5, r4
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
10010b4a:	4623      	mov	r3, r4
            out[i] = ByteReverseWord32(in[i]);
10010b4c:	681a      	ldr	r2, [r3, #0]
10010b4e:	ba12      	rev	r2, r2
10010b50:	f843 2b04 	str.w	r2, [r3], #4
        for (i = 0; i < count; i++)
10010b54:	4598      	cmp	r8, r3
10010b56:	d1f9      	bne.n	10010b4c <wc_AesSetKeyLocal.constprop.0+0x70>
    XMEMCPY(rk, key, keySz);
10010b58:	4649      	mov	r1, r9
10010b5a:	4652      	mov	r2, sl
10010b5c:	4620      	mov	r0, r4
10010b5e:	f007 fcbf 	bl	100184e0 <memcpy>
10010b62:	4623      	mov	r3, r4
            out[i] = ByteReverseWord32(in[i]);
10010b64:	681a      	ldr	r2, [r3, #0]
10010b66:	ba12      	rev	r2, r2
10010b68:	f843 2b04 	str.w	r2, [r3], #4
        for (i = 0; i < count; i++)
10010b6c:	4598      	cmp	r8, r3
10010b6e:	d1f9      	bne.n	10010b64 <wc_AesSetKeyLocal.constprop.0+0x88>
    switch (keySz) {
10010b70:	f1ba 0f18 	cmp.w	sl, #24
10010b74:	f000 81e8 	beq.w	10010f48 <wc_AesSetKeyLocal.constprop.0+0x46c>
10010b78:	f1ba 0f20 	cmp.w	sl, #32
10010b7c:	f000 815d 	beq.w	10010e3a <wc_AesSetKeyLocal.constprop.0+0x35e>
10010b80:	f1ba 0f10 	cmp.w	sl, #16
10010b84:	f000 8117 	beq.w	10010db6 <wc_AesSetKeyLocal.constprop.0+0x2da>
    if (dir == AES_DECRYPTION) {
10010b88:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10010b8a:	2b01      	cmp	r3, #1
10010b8c:	d01d      	beq.n	10010bca <wc_AesSetKeyLocal.constprop.0+0xee>
    if (iv)
10010b8e:	2f00      	cmp	r7, #0
10010b90:	f000 8108 	beq.w	10010da4 <wc_AesSetKeyLocal.constprop.0+0x2c8>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
10010b94:	6838      	ldr	r0, [r7, #0]
10010b96:	6879      	ldr	r1, [r7, #4]
10010b98:	68ba      	ldr	r2, [r7, #8]
10010b9a:	68fb      	ldr	r3, [r7, #12]
10010b9c:	f8c4 00f8 	str.w	r0, [r4, #248]	@ 0xf8
10010ba0:	f8cb 1004 	str.w	r1, [fp, #4]
10010ba4:	f8cb 2008 	str.w	r2, [fp, #8]
10010ba8:	f8cb 300c 	str.w	r3, [fp, #12]
        return ret;
10010bac:	2000      	movs	r0, #0
    } /* wc_AesSetKeyLocal */
10010bae:	b005      	add	sp, #20
10010bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    else
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
10010bb4:	f8c0 70f8 	str.w	r7, [r0, #248]	@ 0xf8
10010bb8:	f8cb 7004 	str.w	r7, [fp, #4]
10010bbc:	f8cb 7008 	str.w	r7, [fp, #8]
10010bc0:	f8cb 700c 	str.w	r7, [fp, #12]
        XMEMCPY(aes->key, userKey, keylen);
10010bc4:	f007 fc8c 	bl	100184e0 <memcpy>
10010bc8:	e7bc      	b.n	10010b44 <wc_AesSetKeyLocal.constprop.0+0x68>
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
10010bca:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
10010bce:	009e      	lsls	r6, r3, #2
10010bd0:	d025      	beq.n	10010c1e <wc_AesSetKeyLocal.constprop.0+0x142>
10010bd2:	eb04 1303 	add.w	r3, r4, r3, lsl #4
10010bd6:	4622      	mov	r2, r4
10010bd8:	2100      	movs	r1, #0
            temp = rk[i    ]; rk[i    ] = rk[j    ]; rk[j    ] = temp;
10010bda:	6810      	ldr	r0, [r2, #0]
10010bdc:	f8d3 c000 	ldr.w	ip, [r3]
10010be0:	f8c2 c000 	str.w	ip, [r2]
10010be4:	6018      	str	r0, [r3, #0]
            temp = rk[i + 1]; rk[i + 1] = rk[j + 1]; rk[j + 1] = temp;
10010be6:	6850      	ldr	r0, [r2, #4]
10010be8:	f8d3 c004 	ldr.w	ip, [r3, #4]
10010bec:	f8c2 c004 	str.w	ip, [r2, #4]
10010bf0:	6058      	str	r0, [r3, #4]
            temp = rk[i + 2]; rk[i + 2] = rk[j + 2]; rk[j + 2] = temp;
10010bf2:	6890      	ldr	r0, [r2, #8]
10010bf4:	f8d3 c008 	ldr.w	ip, [r3, #8]
10010bf8:	f8c2 c008 	str.w	ip, [r2, #8]
10010bfc:	6098      	str	r0, [r3, #8]
            temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
10010bfe:	68d0      	ldr	r0, [r2, #12]
10010c00:	f8d3 c00c 	ldr.w	ip, [r3, #12]
10010c04:	f8c2 c00c 	str.w	ip, [r2, #12]
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
10010c08:	3104      	adds	r1, #4
            temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
10010c0a:	60d8      	str	r0, [r3, #12]
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
10010c0c:	1a70      	subs	r0, r6, r1
10010c0e:	4281      	cmp	r1, r0
10010c10:	f102 0210 	add.w	r2, r2, #16
10010c14:	f1a3 0310 	sub.w	r3, r3, #16
10010c18:	d3df      	bcc.n	10010bda <wc_AesSetKeyLocal.constprop.0+0xfe>
        for (i = 1; i < aes->rounds; i++) {
10010c1a:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
10010c1e:	2b01      	cmp	r3, #1
10010c20:	d9b5      	bls.n	10010b8e <wc_AesSetKeyLocal.constprop.0+0xb2>
10010c22:	4b8e      	ldr	r3, [pc, #568]	@ (10010e5c <wc_AesSetKeyLocal.constprop.0+0x380>)
10010c24:	4a8e      	ldr	r2, [pc, #568]	@ (10010e60 <wc_AesSetKeyLocal.constprop.0+0x384>)
10010c26:	f8cd b008 	str.w	fp, [sp, #8]
10010c2a:	f04f 0e01 	mov.w	lr, #1
10010c2e:	46a3      	mov	fp, r4
10010c30:	9703      	str	r7, [sp, #12]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
10010c32:	e9d5 6004 	ldrd	r6, r0, [r5, #16]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[0], 0)) & 0xff);
10010c36:	b2f4      	uxtb	r4, r6
10010c38:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010c3c:	69a9      	ldr	r1, [r5, #24]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[0], 0)) & 0xff);
10010c3e:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
10010c42:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010c46:	ea4f 6a16 	mov.w	sl, r6, lsr #24
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010c4a:	f852 9024 	ldr.w	r9, [r2, r4, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010c4e:	b2c4      	uxtb	r4, r0
10010c50:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010c54:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010c58:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
10010c5c:	f813 a02a 	ldrb.w	sl, [r3, sl, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
10010c60:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010c64:	f852 a02a 	ldr.w	sl, [r2, sl, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010c68:	f852 c024 	ldr.w	ip, [r2, r4, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[2], 0)) & 0xff);
10010c6c:	b2cc      	uxtb	r4, r1
10010c6e:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010c72:	ea8a 0a09 	eor.w	sl, sl, r9
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[2], 0)) & 0xff);
10010c76:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
10010c7a:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010c7e:	f3c1 4707 	ubfx	r7, r1, #16, #8
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010c82:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
10010c86:	9401      	str	r4, [sp, #4]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
10010c88:	f3c6 4407 	ubfx	r4, r6, #16, #8
10010c8c:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010c90:	f3c6 2607 	ubfx	r6, r6, #8, #8
10010c94:	f506 7680 	add.w	r6, r6, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
10010c98:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010c9c:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
10010ca0:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010ca4:	f506 7600 	add.w	r6, r6, #512	@ 0x200
10010ca8:	f852 8024 	ldr.w	r8, [r2, r4, lsl #2]
10010cac:	f852 6026 	ldr.w	r6, [r2, r6, lsl #2]
10010cb0:	ea8a 0a08 	eor.w	sl, sl, r8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010cb4:	f3c0 4407 	ubfx	r4, r0, #16, #8
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
10010cb8:	ea8a 0606 	eor.w	r6, sl, r6
            rk[0] =
10010cbc:	612e      	str	r6, [r5, #16]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010cbe:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
10010cc2:	0e06      	lsrs	r6, r0, #24
10010cc4:	f506 7680 	add.w	r6, r6, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010cc8:	f3c0 2007 	ubfx	r0, r0, #8, #8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010ccc:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
10010cd0:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010cd4:	f500 7080 	add.w	r0, r0, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
10010cd8:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
10010cdc:	f813 8020 	ldrb.w	r8, [r3, r0, lsl #2]
10010ce0:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
10010ce4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
10010ce8:	f508 7800 	add.w	r8, r8, #512	@ 0x200
10010cec:	ea80 000c 	eor.w	r0, r0, ip
10010cf0:	4060      	eors	r0, r4
10010cf2:	f852 4028 	ldr.w	r4, [r2, r8, lsl #2]
10010cf6:	4060      	eors	r0, r4
            rk[1] =
10010cf8:	6168      	str	r0, [r5, #20]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010cfa:	f507 7780 	add.w	r7, r7, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010cfe:	0e08      	lsrs	r0, r1, #24
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010d00:	f3c1 2107 	ubfx	r1, r1, #8, #8
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010d04:	f500 7080 	add.w	r0, r0, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010d08:	f501 7180 	add.w	r1, r1, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010d0c:	f813 7027 	ldrb.w	r7, [r3, r7, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
10010d10:	f813 4020 	ldrb.w	r4, [r3, r0, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010d14:	f813 0021 	ldrb.w	r0, [r3, r1, lsl #2]
10010d18:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
10010d1c:	9c01      	ldr	r4, [sp, #4]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
10010d1e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
10010d22:	f500 7000 	add.w	r0, r0, #512	@ 0x200
10010d26:	f852 7027 	ldr.w	r7, [r2, r7, lsl #2]
10010d2a:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
10010d2e:	4061      	eors	r1, r4
10010d30:	4079      	eors	r1, r7
10010d32:	4041      	eors	r1, r0
            rk[2] =
10010d34:	61a9      	str	r1, [r5, #24]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[3], 3)) & 0xff) ^
10010d36:	69e9      	ldr	r1, [r5, #28]
10010d38:	0e08      	lsrs	r0, r1, #24
10010d3a:	f500 7080 	add.w	r0, r0, #256	@ 0x100
        for (i = 1; i < aes->rounds; i++) {
10010d3e:	3510      	adds	r5, #16
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[3], 3)) & 0xff) ^
10010d40:	f813 6020 	ldrb.w	r6, [r3, r0, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010d44:	b2c8      	uxtb	r0, r1
10010d46:	f500 7080 	add.w	r0, r0, #256	@ 0x100
        for (i = 1; i < aes->rounds; i++) {
10010d4a:	f10e 0e01 	add.w	lr, lr, #1
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010d4e:	f813 4020 	ldrb.w	r4, [r3, r0, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010d52:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
10010d56:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010d5a:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
10010d5e:	4060      	eors	r0, r4
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010d60:	f3c1 4407 	ubfx	r4, r1, #16, #8
10010d64:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010d68:	f3c1 2107 	ubfx	r1, r1, #8, #8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010d6c:	f813 6024 	ldrb.w	r6, [r3, r4, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010d70:	f501 7180 	add.w	r1, r1, #256	@ 0x100
10010d74:	f813 4021 	ldrb.w	r4, [r3, r1, lsl #2]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
10010d78:	f506 7180 	add.w	r1, r6, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
10010d7c:	f504 7400 	add.w	r4, r4, #512	@ 0x200
10010d80:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
10010d84:	4041      	eors	r1, r0
10010d86:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
10010d8a:	4041      	eors	r1, r0
            rk[3] =
10010d8c:	60e9      	str	r1, [r5, #12]
        for (i = 1; i < aes->rounds; i++) {
10010d8e:	f8db 10f0 	ldr.w	r1, [fp, #240]	@ 0xf0
10010d92:	458e      	cmp	lr, r1
10010d94:	f4ff af4d 	bcc.w	10010c32 <wc_AesSetKeyLocal.constprop.0+0x156>
10010d98:	465c      	mov	r4, fp
10010d9a:	e9dd b702 	ldrd	fp, r7, [sp, #8]
    if (iv)
10010d9e:	2f00      	cmp	r7, #0
10010da0:	f47f aef8 	bne.w	10010b94 <wc_AesSetKeyLocal.constprop.0+0xb8>
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
10010da4:	f8c4 70f8 	str.w	r7, [r4, #248]	@ 0xf8
10010da8:	f8cb 7004 	str.w	r7, [fp, #4]
10010dac:	f8cb 7008 	str.w	r7, [fp, #8]
10010db0:	f8cb 700c 	str.w	r7, [fp, #12]
10010db4:	e6fa      	b.n	10010bac <wc_AesSetKeyLocal.constprop.0+0xd0>
10010db6:	e9d4 ce01 	ldrd	ip, lr, [r4, #4]
10010dba:	4b28      	ldr	r3, [pc, #160]	@ (10010e5c <wc_AesSetKeyLocal.constprop.0+0x380>)
10010dbc:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 10010e64 <wc_AesSetKeyLocal.constprop.0+0x388>
10010dc0:	6820      	ldr	r0, [r4, #0]
10010dc2:	68e1      	ldr	r1, [r4, #12]
10010dc4:	46a2      	mov	sl, r4
10010dc6:	461a      	mov	r2, r3
10010dc8:	4674      	mov	r4, lr
10010dca:	4663      	mov	r3, ip
10010dcc:	f108 0928 	add.w	r9, r8, #40	@ 0x28
10010dd0:	4694      	mov	ip, r2
10010dd2:	46d6      	mov	lr, sl
10010dd4:	e000      	b.n	10010dd8 <wc_AesSetKeyLocal.constprop.0+0x2fc>
            rk += 4;
10010dd6:	3610      	adds	r6, #16
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010dd8:	b2ca      	uxtb	r2, r1
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010dda:	ea4f 6a11 	mov.w	sl, r1, lsr #24
10010dde:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010de2:	f85c 2022 	ldr.w	r2, [ip, r2, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010de6:	f81c a02a 	ldrb.w	sl, [ip, sl, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010dea:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010dee:	ea42 020a 	orr.w	r2, r2, sl
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010df2:	f3c1 4a07 	ubfx	sl, r1, #16, #8
10010df6:	f50a 7a00 	add.w	sl, sl, #512	@ 0x200
10010dfa:	f85c a02a 	ldr.w	sl, [ip, sl, lsl #2]
10010dfe:	f00a 4a7f 	and.w	sl, sl, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010e02:	ea82 020a 	eor.w	r2, r2, sl
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10010e06:	f3c1 2a07 	ubfx	sl, r1, #8, #8
10010e0a:	f50a 7a40 	add.w	sl, sl, #768	@ 0x300
10010e0e:	f85c a02a 	ldr.w	sl, [ip, sl, lsl #2]
10010e12:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010e16:	ea82 020a 	eor.w	r2, r2, sl
                rcon[i];
10010e1a:	f858 ab04 	ldr.w	sl, [r8], #4
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010e1e:	ea82 020a 	eor.w	r2, r2, sl
10010e22:	4050      	eors	r0, r2
            rk[5] = rk[1] ^ rk[4];
10010e24:	4043      	eors	r3, r0
            rk[6] = rk[2] ^ rk[5];
10010e26:	405c      	eors	r4, r3
            rk[7] = rk[3] ^ rk[6];
10010e28:	4061      	eors	r1, r4
            if (++i == 10)
10010e2a:	45c1      	cmp	r9, r8
            rk[5] = rk[1] ^ rk[4];
10010e2c:	e9c6 0304 	strd	r0, r3, [r6, #16]
            rk[7] = rk[3] ^ rk[6];
10010e30:	e9c6 4106 	strd	r4, r1, [r6, #24]
            if (++i == 10)
10010e34:	d1cf      	bne.n	10010dd6 <wc_AesSetKeyLocal.constprop.0+0x2fa>
10010e36:	4674      	mov	r4, lr
10010e38:	e6a6      	b.n	10010b88 <wc_AesSetKeyLocal.constprop.0+0xac>
10010e3a:	e9d4 8e00 	ldrd	r8, lr, [r4]
10010e3e:	e9d4 c102 	ldrd	ip, r1, [r4, #8]
10010e42:	4622      	mov	r2, r4
10010e44:	9501      	str	r5, [sp, #4]
10010e46:	4664      	mov	r4, ip
10010e48:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 10010e68 <wc_AesSetKeyLocal.constprop.0+0x38c>
10010e4c:	4b03      	ldr	r3, [pc, #12]	@ (10010e5c <wc_AesSetKeyLocal.constprop.0+0x380>)
10010e4e:	4640      	mov	r0, r8
10010e50:	4675      	mov	r5, lr
10010e52:	4694      	mov	ip, r2
10010e54:	e041      	b.n	10010eda <wc_AesSetKeyLocal.constprop.0+0x3fe>
10010e56:	bf00      	nop
10010e58:	00010101 	.word	0x00010101
10010e5c:	1002260c 	.word	0x1002260c
10010e60:	1002160c 	.word	0x1002160c
10010e64:	1002360c 	.word	0x1002360c
10010e68:	10023608 	.word	0x10023608
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010e6c:	f3c1 4e07 	ubfx	lr, r1, #16, #8
10010e70:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010e74:	f3c1 2807 	ubfx	r8, r1, #8, #8
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010e78:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010e7c:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
10010e80:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010e84:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
10010e88:	ea4e 0e08 	orr.w	lr, lr, r8
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
10010e8c:	ea4f 6811 	mov.w	r8, r1, lsr #24
10010e90:	f508 7800 	add.w	r8, r8, #512	@ 0x200
10010e94:	f853 a028 	ldr.w	sl, [r3, r8, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 0)) & 0x000000ff);
10010e98:	fa5f f881 	uxtb.w	r8, r1
10010e9c:	f508 7880 	add.w	r8, r8, #256	@ 0x100
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
10010ea0:	f00a 4a7f 	and.w	sl, sl, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 0)) & 0x000000ff);
10010ea4:	f813 8028 	ldrb.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
10010ea8:	ea4a 0808 	orr.w	r8, sl, r8
10010eac:	f8d6 a010 	ldr.w	sl, [r6, #16]
10010eb0:	ea8e 0e0a 	eor.w	lr, lr, sl
10010eb4:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[13] = rk[ 5] ^ rk[12];
10010eb8:	f8d6 8014 	ldr.w	r8, [r6, #20]
            rk[12] = rk[ 4] ^
10010ebc:	f8c6 e030 	str.w	lr, [r6, #48]	@ 0x30
            rk[13] = rk[ 5] ^ rk[12];
10010ec0:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[14] = rk[ 6] ^ rk[13];
10010ec4:	f8d6 8018 	ldr.w	r8, [r6, #24]
            rk[13] = rk[ 5] ^ rk[12];
10010ec8:	f8c6 e034 	str.w	lr, [r6, #52]	@ 0x34
            rk[14] = rk[ 6] ^ rk[13];
10010ecc:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[15] = rk[ 7] ^ rk[14];
10010ed0:	ea82 020e 	eor.w	r2, r2, lr
10010ed4:	e9c6 e20e 	strd	lr, r2, [r6, #56]	@ 0x38
            rk += 8;
10010ed8:	3620      	adds	r6, #32
            temp = rk[ 7];
10010eda:	69f2      	ldr	r2, [r6, #28]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010edc:	f859 af04 	ldr.w	sl, [r9, #4]!
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010ee0:	fa5f fe82 	uxtb.w	lr, r2
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010ee4:	ea4f 6812 	mov.w	r8, r2, lsr #24
10010ee8:	f508 7880 	add.w	r8, r8, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010eec:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010ef0:	f813 8028 	ldrb.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010ef4:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010ef8:	ea4e 0e08 	orr.w	lr, lr, r8
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010efc:	f3c2 4807 	ubfx	r8, r2, #16, #8
10010f00:	f508 7800 	add.w	r8, r8, #512	@ 0x200
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f04:	ea8e 0e0a 	eor.w	lr, lr, sl
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010f08:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010f0c:	f008 487f 	and.w	r8, r8, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f10:	ea8e 0e08 	eor.w	lr, lr, r8
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10010f14:	f3c2 2807 	ubfx	r8, r2, #8, #8
10010f18:	f508 7840 	add.w	r8, r8, #768	@ 0x300
10010f1c:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
10010f20:	f408 087f 	and.w	r8, r8, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f24:	ea8e 0e08 	eor.w	lr, lr, r8
10010f28:	ea80 000e 	eor.w	r0, r0, lr
            rk[ 9] = rk[ 1] ^ rk[ 8];
10010f2c:	4045      	eors	r5, r0
            if (++i == 7)
10010f2e:	f8df e0b4 	ldr.w	lr, [pc, #180]	@ 10010fe4 <wc_AesSetKeyLocal.constprop.0+0x508>
            rk[10] = rk[ 2] ^ rk[ 9];
10010f32:	406c      	eors	r4, r5
            rk[11] = rk[ 3] ^ rk[10];
10010f34:	4061      	eors	r1, r4
            if (++i == 7)
10010f36:	45ce      	cmp	lr, r9
            rk[ 9] = rk[ 1] ^ rk[ 8];
10010f38:	e9c6 0508 	strd	r0, r5, [r6, #32]
            rk[11] = rk[ 3] ^ rk[10];
10010f3c:	e9c6 410a 	strd	r4, r1, [r6, #40]	@ 0x28
            if (++i == 7)
10010f40:	d194      	bne.n	10010e6c <wc_AesSetKeyLocal.constprop.0+0x390>
10010f42:	9d01      	ldr	r5, [sp, #4]
10010f44:	4664      	mov	r4, ip
10010f46:	e61f      	b.n	10010b88 <wc_AesSetKeyLocal.constprop.0+0xac>
10010f48:	e9d4 c902 	ldrd	ip, r9, [r4, #8]
10010f4c:	4b26      	ldr	r3, [pc, #152]	@ (10010fe8 <wc_AesSetKeyLocal.constprop.0+0x50c>)
10010f4e:	f8d4 e000 	ldr.w	lr, [r4]
10010f52:	6860      	ldr	r0, [r4, #4]
10010f54:	9501      	str	r5, [sp, #4]
10010f56:	461a      	mov	r2, r3
10010f58:	46a0      	mov	r8, r4
10010f5a:	4663      	mov	r3, ip
10010f5c:	f8df a08c 	ldr.w	sl, [pc, #140]	@ 10010fec <wc_AesSetKeyLocal.constprop.0+0x510>
10010f60:	4675      	mov	r5, lr
10010f62:	464c      	mov	r4, r9
10010f64:	4694      	mov	ip, r2
10010f66:	e005      	b.n	10010f74 <wc_AesSetKeyLocal.constprop.0+0x498>
            rk[10] = rk[ 4] ^ rk[ 9];
10010f68:	6932      	ldr	r2, [r6, #16]
10010f6a:	4062      	eors	r2, r4
            rk[11] = rk[ 5] ^ rk[10];
10010f6c:	4051      	eors	r1, r2
10010f6e:	e9c6 210a 	strd	r2, r1, [r6, #40]	@ 0x28
            rk += 6;
10010f72:	3618      	adds	r6, #24
            temp = rk[ 5];
10010f74:	6971      	ldr	r1, [r6, #20]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f76:	f85a 9f04 	ldr.w	r9, [sl, #4]!
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010f7a:	b2ca      	uxtb	r2, r1
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f7c:	ea4f 6e11 	mov.w	lr, r1, lsr #24
10010f80:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010f84:	f85c 2022 	ldr.w	r2, [ip, r2, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f88:	f81c e02e 	ldrb.w	lr, [ip, lr, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
10010f8c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f90:	ea42 020e 	orr.w	r2, r2, lr
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010f94:	f3c1 4e07 	ubfx	lr, r1, #16, #8
10010f98:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010f9c:	ea82 0209 	eor.w	r2, r2, r9
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
10010fa0:	f85c e02e 	ldr.w	lr, [ip, lr, lsl #2]
10010fa4:	f00e 4e7f 	and.w	lr, lr, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010fa8:	ea82 020e 	eor.w	r2, r2, lr
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
10010fac:	f3c1 2e07 	ubfx	lr, r1, #8, #8
10010fb0:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
10010fb4:	f85c e02e 	ldr.w	lr, [ip, lr, lsl #2]
10010fb8:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
10010fbc:	ea82 020e 	eor.w	r2, r2, lr
10010fc0:	4055      	eors	r5, r2
            rk[ 7] = rk[ 1] ^ rk[ 6];
10010fc2:	4068      	eors	r0, r5
            if (++i == 8)
10010fc4:	4a0a      	ldr	r2, [pc, #40]	@ (10010ff0 <wc_AesSetKeyLocal.constprop.0+0x514>)
            rk[ 8] = rk[ 2] ^ rk[ 7];
10010fc6:	4043      	eors	r3, r0
            rk[ 9] = rk[ 3] ^ rk[ 8];
10010fc8:	405c      	eors	r4, r3
            if (++i == 8)
10010fca:	4552      	cmp	r2, sl
            rk[ 7] = rk[ 1] ^ rk[ 6];
10010fcc:	e9c6 5006 	strd	r5, r0, [r6, #24]
            rk[ 9] = rk[ 3] ^ rk[ 8];
10010fd0:	e9c6 3408 	strd	r3, r4, [r6, #32]
            if (++i == 8)
10010fd4:	d1c8      	bne.n	10010f68 <wc_AesSetKeyLocal.constprop.0+0x48c>
10010fd6:	9d01      	ldr	r5, [sp, #4]
10010fd8:	4644      	mov	r4, r8
10010fda:	e5d5      	b.n	10010b88 <wc_AesSetKeyLocal.constprop.0+0xac>
10010fdc:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
    } /* wc_AesSetKeyLocal */
10010fe0:	4770      	bx	lr
10010fe2:	bf00      	nop
10010fe4:	10023624 	.word	0x10023624
10010fe8:	1002260c 	.word	0x1002260c
10010fec:	10023608 	.word	0x10023608
10010ff0:	10023628 	.word	0x10023628

10010ff4 <wc_AesSetKey>:
    {
10010ff4:	b410      	push	{r4}
10010ff6:	9c01      	ldr	r4, [sp, #4]
        if (aes == NULL) {
10010ff8:	b128      	cbz	r0, 10011006 <wc_AesSetKey+0x12>
        if (keylen > sizeof(aes->key)) {
10010ffa:	2af0      	cmp	r2, #240	@ 0xf0
10010ffc:	d803      	bhi.n	10011006 <wc_AesSetKey+0x12>
        return wc_AesSetKeyLocal(aes, userKey, keylen, iv, dir, 1);
10010ffe:	9401      	str	r4, [sp, #4]
    } /* wc_AesSetKey() */
10011000:	bc10      	pop	{r4}
        return wc_AesSetKeyLocal(aes, userKey, keylen, iv, dir, 1);
10011002:	f7ff bd6b 	b.w	10010adc <wc_AesSetKeyLocal.constprop.0>
    } /* wc_AesSetKey() */
10011006:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
1001100a:	bc10      	pop	{r4}
1001100c:	4770      	bx	lr
1001100e:	bf00      	nop

10011010 <wc_AesEncryptDirect>:
        /* Allow direct access to one block encrypt */
        int wc_AesEncryptDirect(Aes* aes, byte* out, const byte* in)
        {
            int ret;

            if (aes == NULL)
10011010:	b190      	cbz	r0, 10011038 <wc_AesEncryptDirect+0x28>
        {
10011012:	b508      	push	{r3, lr}
10011014:	4613      	mov	r3, r2
10011016:	460a      	mov	r2, r1
10011018:	4619      	mov	r1, r3
    r = aes->rounds >> 1;
1001101a:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
1001101e:	085b      	lsrs	r3, r3, #1
    if (r > 7 || r == 0) {
10011020:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
10011024:	f1bc 0f06 	cmp.w	ip, #6
10011028:	d803      	bhi.n	10011032 <wc_AesEncryptDirect+0x22>
    AesEncrypt_C(aes, inBlock, outBlock, r);
1001102a:	f7fd ffa5 	bl	1000ef78 <AesEncrypt_C>
    return 0;
1001102e:	2000      	movs	r0, #0
                return BAD_FUNC_ARG;
            VECTOR_REGISTERS_PUSH;
            ret = wc_AesEncrypt(aes, in, out);
            VECTOR_REGISTERS_POP;
            return ret;
        }
10011030:	bd08      	pop	{r3, pc}
        return KEYUSAGE_E;
10011032:	f06f 00e1 	mvn.w	r0, #225	@ 0xe1
        }
10011036:	bd08      	pop	{r3, pc}
                return BAD_FUNC_ARG;
10011038:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
        }
1001103c:	4770      	bx	lr
1001103e:	bf00      	nop

10011040 <wc_AesDecryptDirect>:
        /* Allow direct access to one block decrypt */
        int wc_AesDecryptDirect(Aes* aes, byte* out, const byte* in)
        {
            int ret;

            if (aes == NULL)
10011040:	b190      	cbz	r0, 10011068 <wc_AesDecryptDirect+0x28>
        {
10011042:	b508      	push	{r3, lr}
10011044:	4613      	mov	r3, r2
10011046:	460a      	mov	r2, r1
10011048:	4619      	mov	r1, r3
    r = aes->rounds >> 1;
1001104a:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
1001104e:	085b      	lsrs	r3, r3, #1
    if (r > 7 || r == 0) {
10011050:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
10011054:	f1bc 0f06 	cmp.w	ip, #6
10011058:	d803      	bhi.n	10011062 <wc_AesDecryptDirect+0x22>
    AesDecrypt_C(aes, inBlock, outBlock, r);
1001105a:	f7fe fe7f 	bl	1000fd5c <AesDecrypt_C>
    return 0;
1001105e:	2000      	movs	r0, #0
                return BAD_FUNC_ARG;
            VECTOR_REGISTERS_PUSH;
            ret = wc_AesDecrypt(aes, in, out);
            VECTOR_REGISTERS_POP;
            return ret;
        }
10011060:	bd08      	pop	{r3, pc}
        return KEYUSAGE_E;
10011062:	f06f 00e1 	mvn.w	r0, #225	@ 0xe1
        }
10011066:	bd08      	pop	{r3, pc}
                return BAD_FUNC_ARG;
10011068:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
        }
1001106c:	4770      	bx	lr
1001106e:	bf00      	nop

10011070 <wc_Md5Hash>:

#if !defined(WOLFSSL_TI_HASH)

#if !defined(NO_MD5)
    int wc_Md5Hash(const byte* data, word32 len, byte* hash)
    {
10011070:	b5f0      	push	{r4, r5, r6, r7, lr}
10011072:	b099      	sub	sp, #100	@ 0x64
10011074:	4605      	mov	r5, r0
        md5 = (wc_Md5*)XMALLOC(sizeof(wc_Md5), NULL, DYNAMIC_TYPE_TMP_BUFFER);
        if (md5 == NULL)
            return MEMORY_E;
    #endif

        if ((ret = wc_InitMd5(md5)) != 0) {
10011076:	4668      	mov	r0, sp
    {
10011078:	460e      	mov	r6, r1
1001107a:	4617      	mov	r7, r2
        if ((ret = wc_InitMd5(md5)) != 0) {
1001107c:	f000 fc84 	bl	10011988 <wc_InitMd5>
10011080:	b118      	cbz	r0, 1001108a <wc_Md5Hash+0x1a>
10011082:	4604      	mov	r4, r0
    #ifdef WOLFSSL_SMALL_STACK
        XFREE(md5, NULL, DYNAMIC_TYPE_TMP_BUFFER);
    #endif

        return ret;
    }
10011084:	4620      	mov	r0, r4
10011086:	b019      	add	sp, #100	@ 0x64
10011088:	bdf0      	pop	{r4, r5, r6, r7, pc}
            if ((ret = wc_Md5Update(md5, data, len)) != 0) {
1001108a:	4632      	mov	r2, r6
1001108c:	4629      	mov	r1, r5
1001108e:	4668      	mov	r0, sp
10011090:	f000 fba2 	bl	100117d8 <wc_Md5Update>
10011094:	4604      	mov	r4, r0
10011096:	b128      	cbz	r0, 100110a4 <wc_Md5Hash+0x34>
            wc_Md5Free(md5);
10011098:	4668      	mov	r0, sp
1001109a:	f000 fc93 	bl	100119c4 <wc_Md5Free>
    }
1001109e:	4620      	mov	r0, r4
100110a0:	b019      	add	sp, #100	@ 0x64
100110a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
            else if ((ret = wc_Md5Final(md5, hash)) != 0) {
100110a4:	4639      	mov	r1, r7
100110a6:	4668      	mov	r0, sp
100110a8:	f000 fc16 	bl	100118d8 <wc_Md5Final>
100110ac:	4604      	mov	r4, r0
100110ae:	e7f3      	b.n	10011098 <wc_Md5Hash+0x28>

100110b0 <Transform>:
    word32 a = md5->digest[0];
    word32 b = md5->digest[1];
    word32 c = md5->digest[2];
    word32 d = md5->digest[3];

    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
100110b0:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
100110b2:	4ae9      	ldr	r2, [pc, #932]	@ (10011458 <Transform+0x3a8>)
{
100110b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
100110b8:	441a      	add	r2, r3
100110ba:	e9d0 3415 	ldrd	r3, r4, [r0, #84]	@ 0x54
    word32 b = md5->digest[1];
100110be:	6d07      	ldr	r7, [r0, #80]	@ 0x50
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
100110c0:	f8d1 b000 	ldr.w	fp, [r1]
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
100110c4:	6d46      	ldr	r6, [r0, #84]	@ 0x54
100110c6:	684d      	ldr	r5, [r1, #4]
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
100110c8:	f8d1 e014 	ldr.w	lr, [r1, #20]
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
100110cc:	f8d1 8018 	ldr.w	r8, [r1, #24]
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
100110d0:	f8d1 a01c 	ldr.w	sl, [r1, #28]
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
100110d4:	f8d1 9020 	ldr.w	r9, [r1, #32]
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
100110d8:	4063      	eors	r3, r4
100110da:	403b      	ands	r3, r7
100110dc:	445a      	add	r2, fp
100110de:	4063      	eors	r3, r4
100110e0:	4413      	add	r3, r2
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
100110e2:	4ade      	ldr	r2, [pc, #888]	@ (1001145c <Transform+0x3ac>)
100110e4:	4422      	add	r2, r4
    MD5STEP(F1, a, b, c, d, buffer[0]  + 0xd76aa478,  7);
100110e6:	eb07 6373 	add.w	r3, r7, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
100110ea:	462c      	mov	r4, r5
100110ec:	442a      	add	r2, r5
100110ee:	ea87 0506 	eor.w	r5, r7, r6
100110f2:	401d      	ands	r5, r3
100110f4:	4075      	eors	r5, r6
100110f6:	4415      	add	r5, r2
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
100110f8:	4ad9      	ldr	r2, [pc, #868]	@ (10011460 <Transform+0x3b0>)
{
100110fa:	b08d      	sub	sp, #52	@ 0x34
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
100110fc:	4432      	add	r2, r6
100110fe:	688e      	ldr	r6, [r1, #8]
10011100:	9601      	str	r6, [sp, #4]
    MD5STEP(F1, d, a, b, c, buffer[1]  + 0xe8c7b756, 12);
10011102:	eb03 5535 	add.w	r5, r3, r5, ror #20
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
10011106:	4432      	add	r2, r6
10011108:	ea87 0603 	eor.w	r6, r7, r3
1001110c:	402e      	ands	r6, r5
1001110e:	970a      	str	r7, [sp, #40]	@ 0x28
10011110:	407e      	eors	r6, r7
10011112:	4416      	add	r6, r2
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
10011114:	4fd3      	ldr	r7, [pc, #844]	@ (10011464 <Transform+0x3b4>)
10011116:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
10011118:	f8cd e010 	str.w	lr, [sp, #16]
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
1001111c:	4417      	add	r7, r2
1001111e:	68ca      	ldr	r2, [r1, #12]
10011120:	9202      	str	r2, [sp, #8]
    MD5STEP(F1, c, d, a, b, buffer[2]  + 0x242070db, 17);
10011122:	eb05 36f6 	add.w	r6, r5, r6, ror #15
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
10011126:	4417      	add	r7, r2
10011128:	ea83 0205 	eor.w	r2, r3, r5
1001112c:	4032      	ands	r2, r6
1001112e:	405a      	eors	r2, r3
10011130:	443a      	add	r2, r7
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
10011132:	690f      	ldr	r7, [r1, #16]
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
10011134:	f8cd 8014 	str.w	r8, [sp, #20]
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
10011138:	46bc      	mov	ip, r7
1001113a:	4fcb      	ldr	r7, [pc, #812]	@ (10011468 <Transform+0x3b8>)
1001113c:	f8cd c00c 	str.w	ip, [sp, #12]
10011140:	4467      	add	r7, ip
    MD5STEP(F1, b, c, d, a, buffer[3]  + 0xc1bdceee, 22);
10011142:	eb06 22b2 	add.w	r2, r6, r2, ror #10
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
10011146:	441f      	add	r7, r3
10011148:	ea85 0306 	eor.w	r3, r5, r6
1001114c:	4013      	ands	r3, r2
1001114e:	406b      	eors	r3, r5
10011150:	443b      	add	r3, r7
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
10011152:	4fc6      	ldr	r7, [pc, #792]	@ (1001146c <Transform+0x3bc>)
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
10011154:	f8cd 9018 	str.w	r9, [sp, #24]
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
10011158:	4477      	add	r7, lr
    MD5STEP(F1, a, b, c, d, buffer[4]  + 0xf57c0faf,  7);
1001115a:	eb02 6373 	add.w	r3, r2, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
1001115e:	442f      	add	r7, r5
10011160:	ea86 0502 	eor.w	r5, r6, r2
10011164:	401d      	ands	r5, r3
10011166:	4075      	eors	r5, r6
10011168:	443d      	add	r5, r7
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
1001116a:	4fc1      	ldr	r7, [pc, #772]	@ (10011470 <Transform+0x3c0>)
1001116c:	4447      	add	r7, r8
    MD5STEP(F1, d, a, b, c, buffer[5]  + 0x4787c62a, 12);
1001116e:	eb03 5535 	add.w	r5, r3, r5, ror #20
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
10011172:	4437      	add	r7, r6
10011174:	ea82 0603 	eor.w	r6, r2, r3
10011178:	402e      	ands	r6, r5
1001117a:	4056      	eors	r6, r2
1001117c:	443e      	add	r6, r7
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
1001117e:	4fbd      	ldr	r7, [pc, #756]	@ (10011474 <Transform+0x3c4>)
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
10011180:	f8d1 8030 	ldr.w	r8, [r1, #48]	@ 0x30
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
10011184:	4457      	add	r7, sl
    MD5STEP(F1, c, d, a, b, buffer[6]  + 0xa8304613, 17);
10011186:	eb05 36f6 	add.w	r6, r5, r6, ror #15
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
1001118a:	4417      	add	r7, r2
1001118c:	ea83 0205 	eor.w	r2, r3, r5
10011190:	4032      	ands	r2, r6
10011192:	405a      	eors	r2, r3
10011194:	443a      	add	r2, r7
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
10011196:	4fb8      	ldr	r7, [pc, #736]	@ (10011478 <Transform+0x3c8>)
10011198:	444f      	add	r7, r9
    MD5STEP(F1, b, c, d, a, buffer[7]  + 0xfd469501, 22);
1001119a:	eb06 22b2 	add.w	r2, r6, r2, ror #10
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
1001119e:	441f      	add	r7, r3
100111a0:	ea85 0306 	eor.w	r3, r5, r6
100111a4:	4013      	ands	r3, r2
100111a6:	406b      	eors	r3, r5
100111a8:	443b      	add	r3, r7
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
100111aa:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
100111ac:	46bc      	mov	ip, r7
100111ae:	4fb3      	ldr	r7, [pc, #716]	@ (1001147c <Transform+0x3cc>)
100111b0:	f8cd c01c 	str.w	ip, [sp, #28]
100111b4:	4467      	add	r7, ip
    MD5STEP(F1, a, b, c, d, buffer[8]  + 0x698098d8,  7);
100111b6:	eb02 6373 	add.w	r3, r2, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
100111ba:	443d      	add	r5, r7
100111bc:	ea86 0702 	eor.w	r7, r6, r2
100111c0:	401f      	ands	r7, r3
100111c2:	4077      	eors	r7, r6
100111c4:	442f      	add	r7, r5
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
100111c6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
100111c8:	f5a5 4e24 	sub.w	lr, r5, #41984	@ 0xa400
    MD5STEP(F1, d, a, b, c, buffer[9]  + 0x8b44f7af, 12);
100111cc:	eb03 5737 	add.w	r7, r3, r7, ror #20
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
100111d0:	ea82 0c03 	eor.w	ip, r2, r3
100111d4:	f1ae 0e4f 	sub.w	lr, lr, #79	@ 0x4f
100111d8:	44b6      	add	lr, r6
100111da:	ea0c 0c07 	and.w	ip, ip, r7
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
100111de:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
100111e0:	ea8c 0c02 	eor.w	ip, ip, r2
100111e4:	44f4      	add	ip, lr
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
100111e6:	46b6      	mov	lr, r6
100111e8:	4ea5      	ldr	r6, [pc, #660]	@ (10011480 <Transform+0x3d0>)
100111ea:	f8cd e020 	str.w	lr, [sp, #32]
100111ee:	4476      	add	r6, lr
    MD5STEP(F1, c, d, a, b, buffer[10] + 0xffff5bb1, 17);
100111f0:	eb07 3cfc 	add.w	ip, r7, ip, ror #15
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
100111f4:	4416      	add	r6, r2
100111f6:	ea83 0207 	eor.w	r2, r3, r7
100111fa:	ea02 020c 	and.w	r2, r2, ip
100111fe:	405a      	eors	r2, r3
10011200:	4432      	add	r2, r6
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
10011202:	4ea0      	ldr	r6, [pc, #640]	@ (10011484 <Transform+0x3d4>)
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
10011204:	f8df e280 	ldr.w	lr, [pc, #640]	@ 10011488 <Transform+0x3d8>
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
10011208:	4446      	add	r6, r8
    MD5STEP(F1, b, c, d, a, buffer[11] + 0x895cd7be, 22);
1001120a:	eb0c 22b2 	add.w	r2, ip, r2, ror #10
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
1001120e:	441e      	add	r6, r3
10011210:	ea87 030c 	eor.w	r3, r7, ip
10011214:	4013      	ands	r3, r2
10011216:	407b      	eors	r3, r7
10011218:	4433      	add	r3, r6
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
1001121a:	6b4e      	ldr	r6, [r1, #52]	@ 0x34
1001121c:	44b6      	add	lr, r6
    MD5STEP(F1, a, b, c, d, buffer[12] + 0x6b901122,  7);
1001121e:	eb02 6373 	add.w	r3, r2, r3, ror #25
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
10011222:	4477      	add	r7, lr
10011224:	ea8c 0e02 	eor.w	lr, ip, r2
10011228:	ea0e 0e03 	and.w	lr, lr, r3
1001122c:	ea8e 0e0c 	eor.w	lr, lr, ip
10011230:	44be      	add	lr, r7
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
10011232:	e9d1 970e 	ldrd	r9, r7, [r1, #56]	@ 0x38
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
10011236:	4995      	ldr	r1, [pc, #596]	@ (1001148c <Transform+0x3dc>)

    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
10011238:	9409      	str	r4, [sp, #36]	@ 0x24
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
1001123a:	4449      	add	r1, r9
    MD5STEP(F1, d, a, b, c, buffer[13] + 0xfd987193, 12);
1001123c:	eb03 5e3e 	add.w	lr, r3, lr, ror #20
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
10011240:	4461      	add	r1, ip
10011242:	ea82 0c03 	eor.w	ip, r2, r3
10011246:	ea0c 0c0e 	and.w	ip, ip, lr
1001124a:	ea8c 0c02 	eor.w	ip, ip, r2
1001124e:	448c      	add	ip, r1
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
10011250:	498f      	ldr	r1, [pc, #572]	@ (10011490 <Transform+0x3e0>)
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
10011252:	f8cd b02c 	str.w	fp, [sp, #44]	@ 0x2c
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
10011256:	4439      	add	r1, r7
    MD5STEP(F1, c, d, a, b, buffer[14] + 0xa679438e, 17);
10011258:	eb0e 3cfc 	add.w	ip, lr, ip, ror #15
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
1001125c:	4411      	add	r1, r2
1001125e:	ea83 020e 	eor.w	r2, r3, lr
10011262:	ea02 020c 	and.w	r2, r2, ip
10011266:	405a      	eors	r2, r3
10011268:	440a      	add	r2, r1
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
1001126a:	498a      	ldr	r1, [pc, #552]	@ (10011494 <Transform+0x3e4>)
    MD5STEP(F1, b, c, d, a, buffer[15] + 0x49b40821, 22);
1001126c:	eb0c 22b2 	add.w	r2, ip, r2, ror #10
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
10011270:	4421      	add	r1, r4
10011272:	4419      	add	r1, r3
10011274:	ea8c 0302 	eor.w	r3, ip, r2
10011278:	ea03 030e 	and.w	r3, r3, lr
1001127c:	ea83 030c 	eor.w	r3, r3, ip
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
10011280:	9c05      	ldr	r4, [sp, #20]
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
10011282:	440b      	add	r3, r1
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
10011284:	4984      	ldr	r1, [pc, #528]	@ (10011498 <Transform+0x3e8>)
    MD5STEP(F2, a, b, c, d, buffer[1]  + 0xf61e2562,  5);
10011286:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
1001128a:	4421      	add	r1, r4
1001128c:	448e      	add	lr, r1
1001128e:	ea82 0103 	eor.w	r1, r2, r3
10011292:	ea01 010c 	and.w	r1, r1, ip
10011296:	4051      	eors	r1, r2
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
10011298:	9c08      	ldr	r4, [sp, #32]
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
1001129a:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
1001129c:	f8df e1fc 	ldr.w	lr, [pc, #508]	@ 1001149c <Transform+0x3ec>
    MD5STEP(F2, d, a, b, c, buffer[6]  + 0xc040b340,  9);
100112a0:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
100112a4:	44a6      	add	lr, r4
100112a6:	44e6      	add	lr, ip
100112a8:	ea83 0c01 	eor.w	ip, r3, r1
100112ac:	ea0c 0c02 	and.w	ip, ip, r2
100112b0:	ea8c 0c03 	eor.w	ip, ip, r3
100112b4:	44f4      	add	ip, lr
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
100112b6:	f8df e1e8 	ldr.w	lr, [pc, #488]	@ 100114a0 <Transform+0x3f0>
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
100112ba:	9c07      	ldr	r4, [sp, #28]
    MD5STEP(F2, c, d, a, b, buffer[11] + 0x265e5a51, 14);
100112bc:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
100112c0:	44de      	add	lr, fp
100112c2:	4496      	add	lr, r2
100112c4:	ea81 020c 	eor.w	r2, r1, ip
100112c8:	401a      	ands	r2, r3
100112ca:	404a      	eors	r2, r1
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
100112cc:	f8dd b010 	ldr.w	fp, [sp, #16]
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
100112d0:	4472      	add	r2, lr
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
100112d2:	f8df e1d0 	ldr.w	lr, [pc, #464]	@ 100114a4 <Transform+0x3f4>
    MD5STEP(F2, b, c, d, a, buffer[0]  + 0xe9b6c7aa, 20);
100112d6:	eb0c 3232 	add.w	r2, ip, r2, ror #12
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
100112da:	44de      	add	lr, fp
100112dc:	449e      	add	lr, r3
100112de:	ea8c 0302 	eor.w	r3, ip, r2
100112e2:	400b      	ands	r3, r1
100112e4:	ea83 030c 	eor.w	r3, r3, ip
100112e8:	4473      	add	r3, lr
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
100112ea:	f8df e1bc 	ldr.w	lr, [pc, #444]	@ 100114a8 <Transform+0x3f8>
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
100112ee:	f8dd b00c 	ldr.w	fp, [sp, #12]
    MD5STEP(F2, a, b, c, d, buffer[5]  + 0xd62f105d,  5);
100112f2:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
100112f6:	44ae      	add	lr, r5
100112f8:	448e      	add	lr, r1
100112fa:	ea82 0103 	eor.w	r1, r2, r3
100112fe:	ea01 010c 	and.w	r1, r1, ip
10011302:	4051      	eors	r1, r2
10011304:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
10011306:	f8df e1a4 	ldr.w	lr, [pc, #420]	@ 100114ac <Transform+0x3fc>
    MD5STEP(F2, d, a, b, c, buffer[10] + 0x02441453,  9);
1001130a:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
1001130e:	44be      	add	lr, r7
10011310:	44e6      	add	lr, ip
10011312:	ea83 0c01 	eor.w	ip, r3, r1
10011316:	ea0c 0c02 	and.w	ip, ip, r2
1001131a:	ea8c 0c03 	eor.w	ip, ip, r3
1001131e:	44f4      	add	ip, lr
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
10011320:	f8df e18c 	ldr.w	lr, [pc, #396]	@ 100114b0 <Transform+0x400>
    MD5STEP(F2, c, d, a, b, buffer[15] + 0xd8a1e681, 14);
10011324:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
10011328:	44de      	add	lr, fp
1001132a:	4496      	add	lr, r2
1001132c:	ea81 020c 	eor.w	r2, r1, ip
10011330:	401a      	ands	r2, r3
10011332:	404a      	eors	r2, r1
10011334:	4472      	add	r2, lr
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
10011336:	f8df e17c 	ldr.w	lr, [pc, #380]	@ 100114b4 <Transform+0x404>
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
    MD5STEP(F2, c, d, a, b, buffer[7]  + 0x676f02d9, 14);
    MD5STEP(F2, b, c, d, a, buffer[12] + 0x8d2a4c8a, 20);
1001133a:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 100114b8 <Transform+0x408>
    MD5STEP(F2, b, c, d, a, buffer[4]  + 0xe7d3fbc8, 20);
1001133e:	eb0c 3232 	add.w	r2, ip, r2, ror #12
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
10011342:	44a6      	add	lr, r4
10011344:	449e      	add	lr, r3
10011346:	ea8c 0302 	eor.w	r3, ip, r2
1001134a:	400b      	ands	r3, r1
1001134c:	ea83 030c 	eor.w	r3, r3, ip
10011350:	4473      	add	r3, lr
    MD5STEP(F2, d, a, b, c, buffer[14] + 0xc33707d6,  9);
10011352:	f8df e168 	ldr.w	lr, [pc, #360]	@ 100114bc <Transform+0x40c>
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
10011356:	9c02      	ldr	r4, [sp, #8]
    MD5STEP(F2, a, b, c, d, buffer[9]  + 0x21e1cde6,  5);
10011358:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[14] + 0xc33707d6,  9);
1001135c:	44ce      	add	lr, r9
1001135e:	448e      	add	lr, r1
10011360:	ea82 0103 	eor.w	r1, r2, r3
10011364:	ea01 010c 	and.w	r1, r1, ip
10011368:	4051      	eors	r1, r2
1001136a:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
1001136c:	f8df e150 	ldr.w	lr, [pc, #336]	@ 100114c0 <Transform+0x410>
    MD5STEP(F2, d, a, b, c, buffer[14] + 0xc33707d6,  9);
10011370:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
10011374:	44a6      	add	lr, r4
10011376:	44e6      	add	lr, ip
10011378:	ea83 0c01 	eor.w	ip, r3, r1
1001137c:	ea0c 0c02 	and.w	ip, ip, r2
10011380:	ea8c 0c03 	eor.w	ip, ip, r3
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
10011384:	9c06      	ldr	r4, [sp, #24]
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
10011386:	44f4      	add	ip, lr
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
10011388:	f8df e138 	ldr.w	lr, [pc, #312]	@ 100114c4 <Transform+0x414>
    MD5STEP(F2, c, d, a, b, buffer[3]  + 0xf4d50d87, 14);
1001138c:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
10011390:	44a6      	add	lr, r4
10011392:	4496      	add	lr, r2
10011394:	ea81 020c 	eor.w	r2, r1, ip
10011398:	401a      	ands	r2, r3
1001139a:	404a      	eors	r2, r1
1001139c:	4472      	add	r2, lr
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
1001139e:	f8df e128 	ldr.w	lr, [pc, #296]	@ 100114c8 <Transform+0x418>
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
100113a2:	9c01      	ldr	r4, [sp, #4]
    MD5STEP(F2, b, c, d, a, buffer[8]  + 0x455a14ed, 20);
100113a4:	eb0c 3232 	add.w	r2, ip, r2, ror #12
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
100113a8:	44b6      	add	lr, r6
100113aa:	449e      	add	lr, r3
100113ac:	ea8c 0302 	eor.w	r3, ip, r2
100113b0:	400b      	ands	r3, r1
100113b2:	ea83 030c 	eor.w	r3, r3, ip
100113b6:	4473      	add	r3, lr
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
100113b8:	f8df e110 	ldr.w	lr, [pc, #272]	@ 100114cc <Transform+0x41c>
    MD5STEP(F2, a, b, c, d, buffer[13] + 0xa9e3e905,  5);
100113bc:	eb02 63f3 	add.w	r3, r2, r3, ror #27
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
100113c0:	44a6      	add	lr, r4
100113c2:	448e      	add	lr, r1
100113c4:	ea82 0103 	eor.w	r1, r2, r3
100113c8:	ea01 010c 	and.w	r1, r1, ip
100113cc:	4051      	eors	r1, r2
100113ce:	4471      	add	r1, lr
    MD5STEP(F2, c, d, a, b, buffer[7]  + 0x676f02d9, 14);
100113d0:	f8df e0fc 	ldr.w	lr, [pc, #252]	@ 100114d0 <Transform+0x420>

    MD5STEP(F3, a, b, c, d, buffer[5]  + 0xfffa3942,  4);
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
100113d4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
    MD5STEP(F2, d, a, b, c, buffer[2]  + 0xfcefa3f8,  9);
100113d6:	eb03 51f1 	add.w	r1, r3, r1, ror #23
    MD5STEP(F2, c, d, a, b, buffer[7]  + 0x676f02d9, 14);
100113da:	44d6      	add	lr, sl
100113dc:	44e6      	add	lr, ip
100113de:	ea83 0c01 	eor.w	ip, r3, r1
100113e2:	ea0c 0c02 	and.w	ip, ip, r2
100113e6:	ea8c 0c03 	eor.w	ip, ip, r3
100113ea:	44f4      	add	ip, lr
100113ec:	eb01 4cbc 	add.w	ip, r1, ip, ror #18
    MD5STEP(F2, b, c, d, a, buffer[12] + 0x8d2a4c8a, 20);
100113f0:	44c3      	add	fp, r8
100113f2:	4493      	add	fp, r2
100113f4:	ea81 020c 	eor.w	r2, r1, ip
100113f8:	ea02 0e03 	and.w	lr, r2, r3
100113fc:	ea8e 0e01 	eor.w	lr, lr, r1
10011400:	44de      	add	lr, fp
10011402:	eb0c 3e3e 	add.w	lr, ip, lr, ror #12
    MD5STEP(F3, a, b, c, d, buffer[5]  + 0xfffa3942,  4);
10011406:	ea82 0b0e 	eor.w	fp, r2, lr
1001140a:	9a04      	ldr	r2, [sp, #16]
1001140c:	f5a2 22b8 	sub.w	r2, r2, #376832	@ 0x5c000
10011410:	f2a2 62be 	subw	r2, r2, #1726	@ 0x6be
10011414:	441a      	add	r2, r3
10011416:	445a      	add	r2, fp
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011418:	4b2e      	ldr	r3, [pc, #184]	@ (100114d4 <Transform+0x424>)
1001141a:	f8dd b018 	ldr.w	fp, [sp, #24]
1001141e:	445b      	add	r3, fp
    MD5STEP(F3, a, b, c, d, buffer[5]  + 0xfffa3942,  4);
10011420:	eb0e 7232 	add.w	r2, lr, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011424:	4419      	add	r1, r3
10011426:	ea8c 030e 	eor.w	r3, ip, lr
1001142a:	4053      	eors	r3, r2
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
1001142c:	f8dd b020 	ldr.w	fp, [sp, #32]
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011430:	440b      	add	r3, r1
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
10011432:	4929      	ldr	r1, [pc, #164]	@ (100114d8 <Transform+0x428>)
10011434:	4459      	add	r1, fp
    MD5STEP(F3, d, a, b, c, buffer[8]  + 0x8771f681, 11);
10011436:	eb02 5373 	add.w	r3, r2, r3, ror #21
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
1001143a:	4461      	add	r1, ip
1001143c:	ea8e 0c02 	eor.w	ip, lr, r2
10011440:	ea8c 0c03 	eor.w	ip, ip, r3
10011444:	448c      	add	ip, r1
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
10011446:	4925      	ldr	r1, [pc, #148]	@ (100114dc <Transform+0x42c>)
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
10011448:	f8dd b00c 	ldr.w	fp, [sp, #12]
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
1001144c:	4449      	add	r1, r9
    MD5STEP(F3, c, d, a, b, buffer[11] + 0x6d9d6122, 16);
1001144e:	eb03 4c3c 	add.w	ip, r3, ip, ror #16
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
10011452:	448e      	add	lr, r1
10011454:	e044      	b.n	100114e0 <Transform+0x430>
10011456:	bf00      	nop
10011458:	d76aa478 	.word	0xd76aa478
1001145c:	e8c7b756 	.word	0xe8c7b756
10011460:	242070db 	.word	0x242070db
10011464:	c1bdceee 	.word	0xc1bdceee
10011468:	f57c0faf 	.word	0xf57c0faf
1001146c:	4787c62a 	.word	0x4787c62a
10011470:	a8304613 	.word	0xa8304613
10011474:	fd469501 	.word	0xfd469501
10011478:	698098d8 	.word	0x698098d8
1001147c:	8b44f7af 	.word	0x8b44f7af
10011480:	895cd7be 	.word	0x895cd7be
10011484:	6b901122 	.word	0x6b901122
10011488:	fd987193 	.word	0xfd987193
1001148c:	a679438e 	.word	0xa679438e
10011490:	49b40821 	.word	0x49b40821
10011494:	f61e2562 	.word	0xf61e2562
10011498:	c040b340 	.word	0xc040b340
1001149c:	265e5a51 	.word	0x265e5a51
100114a0:	e9b6c7aa 	.word	0xe9b6c7aa
100114a4:	d62f105d 	.word	0xd62f105d
100114a8:	02441453 	.word	0x02441453
100114ac:	d8a1e681 	.word	0xd8a1e681
100114b0:	e7d3fbc8 	.word	0xe7d3fbc8
100114b4:	21e1cde6 	.word	0x21e1cde6
100114b8:	8d2a4c8a 	.word	0x8d2a4c8a
100114bc:	c33707d6 	.word	0xc33707d6
100114c0:	f4d50d87 	.word	0xf4d50d87
100114c4:	455a14ed 	.word	0x455a14ed
100114c8:	a9e3e905 	.word	0xa9e3e905
100114cc:	fcefa3f8 	.word	0xfcefa3f8
100114d0:	676f02d9 	.word	0x676f02d9
100114d4:	8771f681 	.word	0x8771f681
100114d8:	6d9d6122 	.word	0x6d9d6122
100114dc:	fde5380c 	.word	0xfde5380c
100114e0:	ea82 0103 	eor.w	r1, r2, r3
100114e4:	ea81 010c 	eor.w	r1, r1, ip
100114e8:	4471      	add	r1, lr
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
100114ea:	f8df e280 	ldr.w	lr, [pc, #640]	@ 1001176c <Transform+0x6bc>
100114ee:	44a6      	add	lr, r4
    MD5STEP(F3, b, c, d, a, buffer[14] + 0xfde5380c, 23);
100114f0:	eb0c 2171 	add.w	r1, ip, r1, ror #9
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
100114f4:	4496      	add	lr, r2
100114f6:	ea83 020c 	eor.w	r2, r3, ip
100114fa:	404a      	eors	r2, r1
100114fc:	4472      	add	r2, lr
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
100114fe:	f8df e270 	ldr.w	lr, [pc, #624]	@ 10011770 <Transform+0x6c0>
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
10011502:	9c02      	ldr	r4, [sp, #8]
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
10011504:	44de      	add	lr, fp
    MD5STEP(F3, a, b, c, d, buffer[1]  + 0xa4beea44,  4);
10011506:	eb01 7232 	add.w	r2, r1, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
1001150a:	4473      	add	r3, lr
1001150c:	ea8c 0e01 	eor.w	lr, ip, r1
10011510:	ea8e 0e02 	eor.w	lr, lr, r2
10011514:	449e      	add	lr, r3
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
10011516:	4b97      	ldr	r3, [pc, #604]	@ (10011774 <Transform+0x6c4>)
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
10011518:	f8dd b02c 	ldr.w	fp, [sp, #44]	@ 0x2c
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
1001151c:	4453      	add	r3, sl
    MD5STEP(F3, d, a, b, c, buffer[4]  + 0x4bdecfa9, 11);
1001151e:	eb02 5e7e 	add.w	lr, r2, lr, ror #21
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
10011522:	449c      	add	ip, r3
10011524:	ea81 0302 	eor.w	r3, r1, r2
10011528:	ea83 030e 	eor.w	r3, r3, lr
1001152c:	4463      	add	r3, ip
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
1001152e:	f8df c248 	ldr.w	ip, [pc, #584]	@ 10011778 <Transform+0x6c8>
10011532:	44ac      	add	ip, r5
    MD5STEP(F3, c, d, a, b, buffer[7]  + 0xf6bb4b60, 16);
10011534:	eb0e 4333 	add.w	r3, lr, r3, ror #16
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
10011538:	4461      	add	r1, ip
1001153a:	ea82 0c0e 	eor.w	ip, r2, lr
1001153e:	ea8c 0c03 	eor.w	ip, ip, r3
10011542:	448c      	add	ip, r1
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
10011544:	498d      	ldr	r1, [pc, #564]	@ (1001177c <Transform+0x6cc>)
10011546:	4431      	add	r1, r6
    MD5STEP(F3, b, c, d, a, buffer[10] + 0xbebfbc70, 23);
10011548:	eb03 2c7c 	add.w	ip, r3, ip, ror #9
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
1001154c:	4411      	add	r1, r2
1001154e:	ea8e 0203 	eor.w	r2, lr, r3
10011552:	ea82 020c 	eor.w	r2, r2, ip
10011556:	440a      	add	r2, r1
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
10011558:	4989      	ldr	r1, [pc, #548]	@ (10011780 <Transform+0x6d0>)
1001155a:	4459      	add	r1, fp
    MD5STEP(F3, a, b, c, d, buffer[13] + 0x289b7ec6,  4);
1001155c:	eb0c 7232 	add.w	r2, ip, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
10011560:	448e      	add	lr, r1
10011562:	ea83 010c 	eor.w	r1, r3, ip
10011566:	4051      	eors	r1, r2
10011568:	4471      	add	r1, lr
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
1001156a:	f8df e218 	ldr.w	lr, [pc, #536]	@ 10011784 <Transform+0x6d4>
1001156e:	44a6      	add	lr, r4
    MD5STEP(F3, d, a, b, c, buffer[0]  + 0xeaa127fa, 11);
10011570:	eb02 5171 	add.w	r1, r2, r1, ror #21
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
10011574:	449e      	add	lr, r3
10011576:	ea8c 0302 	eor.w	r3, ip, r2
1001157a:	404b      	eors	r3, r1
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
1001157c:	9c05      	ldr	r4, [sp, #20]
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
1001157e:	4473      	add	r3, lr
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
10011580:	f8df e204 	ldr.w	lr, [pc, #516]	@ 10011788 <Transform+0x6d8>
10011584:	44a6      	add	lr, r4
    MD5STEP(F3, c, d, a, b, buffer[3]  + 0xd4ef3085, 16);
10011586:	eb01 4333 	add.w	r3, r1, r3, ror #16
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
1001158a:	44e6      	add	lr, ip
1001158c:	ea82 0c01 	eor.w	ip, r2, r1
10011590:	ea8c 0c03 	eor.w	ip, ip, r3
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
10011594:	9c07      	ldr	r4, [sp, #28]
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
10011596:	44f4      	add	ip, lr
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
10011598:	f8df e1f0 	ldr.w	lr, [pc, #496]	@ 1001178c <Transform+0x6dc>
1001159c:	44a6      	add	lr, r4
    MD5STEP(F3, b, c, d, a, buffer[6]  + 0x04881d05, 23);
1001159e:	eb03 2c7c 	add.w	ip, r3, ip, ror #9
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
100115a2:	4496      	add	lr, r2
100115a4:	ea81 0203 	eor.w	r2, r1, r3
100115a8:	ea82 020c 	eor.w	r2, r2, ip
100115ac:	4472      	add	r2, lr
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
100115ae:	f8df e1e0 	ldr.w	lr, [pc, #480]	@ 10011790 <Transform+0x6e0>
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
100115b2:	9c01      	ldr	r4, [sp, #4]
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
100115b4:	44c6      	add	lr, r8
    MD5STEP(F3, a, b, c, d, buffer[9]  + 0xd9d4d039,  4);
100115b6:	eb0c 7232 	add.w	r2, ip, r2, ror #28
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
100115ba:	448e      	add	lr, r1
100115bc:	ea83 010c 	eor.w	r1, r3, ip
100115c0:	4051      	eors	r1, r2
100115c2:	4471      	add	r1, lr
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
100115c4:	f8df e1cc 	ldr.w	lr, [pc, #460]	@ 10011794 <Transform+0x6e4>
100115c8:	44be      	add	lr, r7
    MD5STEP(F3, d, a, b, c, buffer[12] + 0xe6db99e5, 11);
100115ca:	eb02 5171 	add.w	r1, r2, r1, ror #21
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
100115ce:	4473      	add	r3, lr
100115d0:	ea8c 0e02 	eor.w	lr, ip, r2
100115d4:	ea8e 0e01 	eor.w	lr, lr, r1
100115d8:	449e      	add	lr, r3
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
100115da:	4b6f      	ldr	r3, [pc, #444]	@ (10011798 <Transform+0x6e8>)
100115dc:	4423      	add	r3, r4
    MD5STEP(F3, c, d, a, b, buffer[15] + 0x1fa27cf8, 16);
100115de:	eb01 4e3e 	add.w	lr, r1, lr, ror #16
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
100115e2:	449c      	add	ip, r3
100115e4:	ea82 0301 	eor.w	r3, r2, r1
100115e8:	ea83 030e 	eor.w	r3, r3, lr
100115ec:	4463      	add	r3, ip

    MD5STEP(F4, a, b, c, d, buffer[0]  + 0xf4292244,  6);
100115ee:	f8df c1ac 	ldr.w	ip, [pc, #428]	@ 1001179c <Transform+0x6ec>
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
100115f2:	9c09      	ldr	r4, [sp, #36]	@ 0x24
    MD5STEP(F3, b, c, d, a, buffer[2]  + 0xc4ac5665, 23);
100115f4:	eb0e 2373 	add.w	r3, lr, r3, ror #9
    MD5STEP(F4, a, b, c, d, buffer[0]  + 0xf4292244,  6);
100115f8:	44dc      	add	ip, fp
100115fa:	4494      	add	ip, r2
100115fc:	ea63 0201 	orn	r2, r3, r1
10011600:	ea82 020e 	eor.w	r2, r2, lr
10011604:	4462      	add	r2, ip
    MD5STEP(F4, d, a, b, c, buffer[7]  + 0x432aff97, 10);
10011606:	f8df c198 	ldr.w	ip, [pc, #408]	@ 100117a0 <Transform+0x6f0>
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
1001160a:	f8dd b00c 	ldr.w	fp, [sp, #12]
    MD5STEP(F4, a, b, c, d, buffer[0]  + 0xf4292244,  6);
1001160e:	eb03 62b2 	add.w	r2, r3, r2, ror #26
    MD5STEP(F4, d, a, b, c, buffer[7]  + 0x432aff97, 10);
10011612:	44d4      	add	ip, sl
10011614:	448c      	add	ip, r1
10011616:	ea62 010e 	orn	r1, r2, lr
1001161a:	4059      	eors	r1, r3
1001161c:	4461      	add	r1, ip
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
1001161e:	f8df c184 	ldr.w	ip, [pc, #388]	@ 100117a4 <Transform+0x6f4>
    MD5STEP(F4, d, a, b, c, buffer[7]  + 0x432aff97, 10);
10011622:	eb02 51b1 	add.w	r1, r2, r1, ror #22
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
10011626:	44cc      	add	ip, r9
10011628:	44f4      	add	ip, lr
1001162a:	ea61 0e03 	orn	lr, r1, r3
1001162e:	ea8e 0e02 	eor.w	lr, lr, r2
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
10011632:	f8dd 9010 	ldr.w	r9, [sp, #16]
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
10011636:	44f4      	add	ip, lr
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
10011638:	f8df e16c 	ldr.w	lr, [pc, #364]	@ 100117a8 <Transform+0x6f8>
    MD5STEP(F4, c, d, a, b, buffer[14] + 0xab9423a7, 15);
1001163c:	eb01 4c7c 	add.w	ip, r1, ip, ror #17
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
10011640:	44ce      	add	lr, r9
10011642:	449e      	add	lr, r3
10011644:	ea6c 0302 	orn	r3, ip, r2
10011648:	404b      	eors	r3, r1
1001164a:	4473      	add	r3, lr
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
1001164c:	f8df e15c 	ldr.w	lr, [pc, #348]	@ 100117ac <Transform+0x6fc>
    MD5STEP(F4, b, c, d, a, buffer[5]  + 0xfc93a039, 21);
10011650:	eb0c 23f3 	add.w	r3, ip, r3, ror #11
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
10011654:	44c6      	add	lr, r8
10011656:	4496      	add	lr, r2
10011658:	ea63 0201 	orn	r2, r3, r1
1001165c:	ea82 020c 	eor.w	r2, r2, ip
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
10011660:	f8dd 8008 	ldr.w	r8, [sp, #8]
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
10011664:	4472      	add	r2, lr
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
10011666:	f5a5 1580 	sub.w	r5, r5, #1048576	@ 0x100000
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
1001166a:	f8df e144 	ldr.w	lr, [pc, #324]	@ 100117b0 <Transform+0x700>
    MD5STEP(F4, a, b, c, d, buffer[12] + 0x655b59c3,  6);
1001166e:	eb03 62b2 	add.w	r2, r3, r2, ror #26
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
10011672:	f6a5 3583 	subw	r5, r5, #2947	@ 0xb83
10011676:	4465      	add	r5, ip
    MD5STEP(F4, d, a, b, c, buffer[3]  + 0x8f0ccc92, 10);
10011678:	44c6      	add	lr, r8
1001167a:	ea62 0c0c 	orn	ip, r2, ip
1001167e:	448e      	add	lr, r1
10011680:	ea8c 0c03 	eor.w	ip, ip, r3
10011684:	44f4      	add	ip, lr
10011686:	eb02 5cbc 	add.w	ip, r2, ip, ror #22
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
1001168a:	ea6c 0103 	orn	r1, ip, r3
1001168e:	4051      	eors	r1, r2
10011690:	4429      	add	r1, r5
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
10011692:	4d48      	ldr	r5, [pc, #288]	@ (100117b4 <Transform+0x704>)
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
10011694:	f8dd e018 	ldr.w	lr, [sp, #24]
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
10011698:	f8dd 8014 	ldr.w	r8, [sp, #20]
    MD5STEP(F4, c, d, a, b, buffer[10] + 0xffeff47d, 15);
1001169c:	eb0c 4171 	add.w	r1, ip, r1, ror #17
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
100116a0:	4425      	add	r5, r4
100116a2:	441d      	add	r5, r3
100116a4:	ea61 0302 	orn	r3, r1, r2
100116a8:	ea83 030c 	eor.w	r3, r3, ip
100116ac:	442b      	add	r3, r5
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
100116ae:	4d42      	ldr	r5, [pc, #264]	@ (100117b8 <Transform+0x708>)
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
    MD5STEP(F4, c, d, a, b, buffer[2]  + 0x2ad7d2bb, 15);
100116b0:	9c01      	ldr	r4, [sp, #4]
    MD5STEP(F4, b, c, d, a, buffer[1]  + 0x85845dd1, 21);
100116b2:	eb01 23f3 	add.w	r3, r1, r3, ror #11
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
100116b6:	4475      	add	r5, lr
100116b8:	4415      	add	r5, r2
100116ba:	ea63 020c 	orn	r2, r3, ip
100116be:	404a      	eors	r2, r1
100116c0:	442a      	add	r2, r5
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
100116c2:	4d3e      	ldr	r5, [pc, #248]	@ (100117bc <Transform+0x70c>)
    MD5STEP(F4, a, b, c, d, buffer[8]  + 0x6fa87e4f,  6);
100116c4:	eb03 62b2 	add.w	r2, r3, r2, ror #26
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
100116c8:	443d      	add	r5, r7
100116ca:	ea62 0701 	orn	r7, r2, r1
100116ce:	405f      	eors	r7, r3
100116d0:	4465      	add	r5, ip
100116d2:	443d      	add	r5, r7
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
100116d4:	4f3a      	ldr	r7, [pc, #232]	@ (100117c0 <Transform+0x710>)
    MD5STEP(F4, d, a, b, c, buffer[15] + 0xfe2ce6e0, 10);
100116d6:	eb02 55b5 	add.w	r5, r2, r5, ror #22
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
100116da:	4447      	add	r7, r8
100116dc:	440f      	add	r7, r1
100116de:	ea65 0103 	orn	r1, r5, r3
100116e2:	4051      	eors	r1, r2
100116e4:	4439      	add	r1, r7
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
100116e6:	4f37      	ldr	r7, [pc, #220]	@ (100117c4 <Transform+0x714>)
    MD5STEP(F4, c, d, a, b, buffer[6]  + 0xa3014314, 15);
100116e8:	eb05 4171 	add.w	r1, r5, r1, ror #17
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
100116ec:	4437      	add	r7, r6
100116ee:	ea61 0602 	orn	r6, r1, r2
100116f2:	441f      	add	r7, r3
100116f4:	406e      	eors	r6, r5
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
100116f6:	4b34      	ldr	r3, [pc, #208]	@ (100117c8 <Transform+0x718>)
    MD5STEP(F4, b, c, d, a, buffer[13] + 0x4e0811a1, 21);
100116f8:	443e      	add	r6, r7
100116fa:	eb01 26f6 	add.w	r6, r1, r6, ror #11
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
100116fe:	445b      	add	r3, fp
10011700:	441a      	add	r2, r3
10011702:	ea66 0305 	orn	r3, r6, r5
10011706:	404b      	eors	r3, r1
10011708:	4413      	add	r3, r2
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);

    /* Add the working vars back into digest state[]  */
    md5->digest[0] += a;
1001170a:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
1001170c:	f8dd b020 	ldr.w	fp, [sp, #32]
    MD5STEP(F4, a, b, c, d, buffer[4]  + 0xf7537e82,  6);
10011710:	eb06 63b3 	add.w	r3, r6, r3, ror #26
    md5->digest[0] += a;
10011714:	441a      	add	r2, r3
10011716:	64c2      	str	r2, [r0, #76]	@ 0x4c
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
10011718:	4a2c      	ldr	r2, [pc, #176]	@ (100117cc <Transform+0x71c>)
1001171a:	445a      	add	r2, fp
1001171c:	4415      	add	r5, r2
1001171e:	ea63 0201 	orn	r2, r3, r1
10011722:	4072      	eors	r2, r6
10011724:	442a      	add	r2, r5
    md5->digest[1] += b;
    md5->digest[2] += c;
    md5->digest[3] += d;
10011726:	6d85      	ldr	r5, [r0, #88]	@ 0x58
    MD5STEP(F4, d, a, b, c, buffer[11] + 0xbd3af235, 10);
10011728:	eb03 52b2 	add.w	r2, r3, r2, ror #22
    md5->digest[3] += d;
1001172c:	4415      	add	r5, r2
1001172e:	6585      	str	r5, [r0, #88]	@ 0x58
    MD5STEP(F4, c, d, a, b, buffer[2]  + 0x2ad7d2bb, 15);
10011730:	4d27      	ldr	r5, [pc, #156]	@ (100117d0 <Transform+0x720>)
10011732:	4425      	add	r5, r4
10011734:	440d      	add	r5, r1
10011736:	ea62 0106 	orn	r1, r2, r6
1001173a:	4059      	eors	r1, r3
1001173c:	4429      	add	r1, r5
1001173e:	eb02 4171 	add.w	r1, r2, r1, ror #17
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
10011742:	ea61 0303 	orn	r3, r1, r3
    md5->digest[1] += b;
10011746:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
10011748:	4053      	eors	r3, r2
    md5->digest[2] += c;
1001174a:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
1001174c:	f8dd c01c 	ldr.w	ip, [sp, #28]
    md5->digest[1] += b;
10011750:	440c      	add	r4, r1
    md5->digest[2] += c;
10011752:	4411      	add	r1, r2
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
10011754:	4a1f      	ldr	r2, [pc, #124]	@ (100117d4 <Transform+0x724>)
    md5->digest[2] += c;
10011756:	6541      	str	r1, [r0, #84]	@ 0x54
    MD5STEP(F4, b, c, d, a, buffer[9]  + 0xeb86d391, 21);
10011758:	4462      	add	r2, ip
1001175a:	4432      	add	r2, r6
1001175c:	4413      	add	r3, r2
    md5->digest[1] += b;
1001175e:	eb04 24f3 	add.w	r4, r4, r3, ror #11
10011762:	6504      	str	r4, [r0, #80]	@ 0x50

    return 0;
}
10011764:	2000      	movs	r0, #0
10011766:	b00d      	add	sp, #52	@ 0x34
10011768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001176c:	a4beea44 	.word	0xa4beea44
10011770:	4bdecfa9 	.word	0x4bdecfa9
10011774:	f6bb4b60 	.word	0xf6bb4b60
10011778:	bebfbc70 	.word	0xbebfbc70
1001177c:	289b7ec6 	.word	0x289b7ec6
10011780:	eaa127fa 	.word	0xeaa127fa
10011784:	d4ef3085 	.word	0xd4ef3085
10011788:	04881d05 	.word	0x04881d05
1001178c:	d9d4d039 	.word	0xd9d4d039
10011790:	e6db99e5 	.word	0xe6db99e5
10011794:	1fa27cf8 	.word	0x1fa27cf8
10011798:	c4ac5665 	.word	0xc4ac5665
1001179c:	f4292244 	.word	0xf4292244
100117a0:	432aff97 	.word	0x432aff97
100117a4:	ab9423a7 	.word	0xab9423a7
100117a8:	fc93a039 	.word	0xfc93a039
100117ac:	655b59c3 	.word	0x655b59c3
100117b0:	8f0ccc92 	.word	0x8f0ccc92
100117b4:	85845dd1 	.word	0x85845dd1
100117b8:	6fa87e4f 	.word	0x6fa87e4f
100117bc:	fe2ce6e0 	.word	0xfe2ce6e0
100117c0:	a3014314 	.word	0xa3014314
100117c4:	4e0811a1 	.word	0x4e0811a1
100117c8:	f7537e82 	.word	0xf7537e82
100117cc:	bd3af235 	.word	0xbd3af235
100117d0:	2ad7d2bb 	.word	0x2ad7d2bb
100117d4:	eb86d391 	.word	0xeb86d391

100117d8 <wc_Md5Update>:
    return ret;
}

/* do block size increments/updates */
int wc_Md5Update(wc_Md5* md5, const byte* data, word32 len)
{
100117d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int ret = 0;
    word32 blocksLen;
    byte* local;

    if (md5 == NULL || (data == NULL && len > 0)) {
100117dc:	2800      	cmp	r0, #0
100117de:	d074      	beq.n	100118ca <wc_Md5Update+0xf2>
100117e0:	460c      	mov	r4, r1
100117e2:	4690      	mov	r8, r2
100117e4:	4605      	mov	r5, r0
100117e6:	2900      	cmp	r1, #0
100117e8:	d04d      	beq.n	10011886 <wc_Md5Update+0xae>
#endif
    }
#endif /* WOLFSSL_ASYNC_CRYPT */

    /* check that internal buffLen is valid */
    if (md5->buffLen >= WC_MD5_BLOCK_SIZE)
100117ea:	6800      	ldr	r0, [r0, #0]
100117ec:	283f      	cmp	r0, #63	@ 0x3f
100117ee:	d86f      	bhi.n	100118d0 <wc_Md5Update+0xf8>
    if ((md5->loLen += len) < tmp) {
100117f0:	686b      	ldr	r3, [r5, #4]
100117f2:	18d3      	adds	r3, r2, r3
100117f4:	606b      	str	r3, [r5, #4]
100117f6:	d22c      	bcs.n	10011852 <wc_Md5Update+0x7a>
    }

    /* add length for final */
    AddLength(md5, len);

    local = (byte*)md5->buffer;
100117f8:	f105 060c 	add.w	r6, r5, #12

    /* process any remainder from previous operation */
    if (md5->buffLen > 0) {
100117fc:	bb80      	cbnz	r0, 10011860 <wc_Md5Update+0x88>
        XTRANSFORM_LEN(md5, data, blocksLen);
        data += blocksLen;
        len  -= blocksLen;
    }
#else
    while (len >= WC_MD5_BLOCK_SIZE) {
100117fe:	f1b8 0f3f 	cmp.w	r8, #63	@ 0x3f
10011802:	d955      	bls.n	100118b0 <wc_Md5Update+0xd8>
10011804:	f1a8 0740 	sub.w	r7, r8, #64	@ 0x40
10011808:	f027 073f 	bic.w	r7, r7, #63	@ 0x3f
1001180c:	3740      	adds	r7, #64	@ 0x40
1001180e:	4427      	add	r7, r4
            local32 = (word32*)data;
        }
        else
    #endif
        {
            XMEMCPY(local32, data, WC_MD5_BLOCK_SIZE);
10011810:	4633      	mov	r3, r6
10011812:	f104 0e40 	add.w	lr, r4, #64	@ 0x40
10011816:	f8d4 c000 	ldr.w	ip, [r4]
1001181a:	6860      	ldr	r0, [r4, #4]
1001181c:	68a1      	ldr	r1, [r4, #8]
1001181e:	68e2      	ldr	r2, [r4, #12]
10011820:	60da      	str	r2, [r3, #12]
10011822:	3410      	adds	r4, #16
10011824:	4574      	cmp	r4, lr
10011826:	f8c3 c000 	str.w	ip, [r3]
1001182a:	6058      	str	r0, [r3, #4]
1001182c:	6099      	str	r1, [r3, #8]
1001182e:	f103 0310 	add.w	r3, r3, #16
10011832:	d1f0      	bne.n	10011816 <wc_Md5Update+0x3e>

    #if defined(BIG_ENDIAN_ORDER) && !defined(FREESCALE_MMCAU_SHA)
        ByteReverseWords(local32, local32, WC_MD5_BLOCK_SIZE);
    #endif

        ret = XTRANSFORM(md5, (const byte*)local32);
10011834:	4631      	mov	r1, r6
10011836:	4628      	mov	r0, r5
10011838:	f7ff fc3a 	bl	100110b0 <Transform>
    while (len >= WC_MD5_BLOCK_SIZE) {
1001183c:	42bc      	cmp	r4, r7
        ret = XTRANSFORM(md5, (const byte*)local32);
1001183e:	4681      	mov	r9, r0
    while (len >= WC_MD5_BLOCK_SIZE) {
10011840:	d1e6      	bne.n	10011810 <wc_Md5Update+0x38>
        len  -= WC_MD5_BLOCK_SIZE;
10011842:	f008 083f 	and.w	r8, r8, #63	@ 0x3f
    }
#endif /* XTRANSFORM_LEN */

    /* save remainder */
    if (len > 0) {
10011846:	f1b8 0f00 	cmp.w	r8, #0
1001184a:	d127      	bne.n	1001189c <wc_Md5Update+0xc4>
        XMEMCPY(local, data, len);
        md5->buffLen = len;
    }

    return ret;
}
1001184c:	4648      	mov	r0, r9
1001184e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        md5->hiLen++;                       /* carry low to high */
10011852:	68ab      	ldr	r3, [r5, #8]
10011854:	3301      	adds	r3, #1
10011856:	60ab      	str	r3, [r5, #8]
    local = (byte*)md5->buffer;
10011858:	f105 060c 	add.w	r6, r5, #12
    if (md5->buffLen > 0) {
1001185c:	2800      	cmp	r0, #0
1001185e:	d0ce      	beq.n	100117fe <wc_Md5Update+0x26>
        blocksLen = min(len, WC_MD5_BLOCK_SIZE - md5->buffLen);
10011860:	f1c0 0740 	rsb	r7, r0, #64	@ 0x40
        #define min min
    #endif
    /* returns the smaller of a and b */
    WC_MISC_STATIC WC_INLINE word32 min(word32 a, word32 b)
    {
        return a > b ? b : a;
10011864:	4547      	cmp	r7, r8
10011866:	bf28      	it	cs
10011868:	4647      	movcs	r7, r8
        XMEMCPY(&local[md5->buffLen], data, blocksLen);
1001186a:	4430      	add	r0, r6
1001186c:	463a      	mov	r2, r7
1001186e:	4621      	mov	r1, r4
10011870:	f006 fe36 	bl	100184e0 <memcpy>
        md5->buffLen += blocksLen;
10011874:	682b      	ldr	r3, [r5, #0]
10011876:	443b      	add	r3, r7
        if (md5->buffLen == WC_MD5_BLOCK_SIZE) {
10011878:	2b40      	cmp	r3, #64	@ 0x40
        md5->buffLen += blocksLen;
1001187a:	602b      	str	r3, [r5, #0]
        if (md5->buffLen == WC_MD5_BLOCK_SIZE) {
1001187c:	d01c      	beq.n	100118b8 <wc_Md5Update+0xe0>
        data         += blocksLen;
1001187e:	443c      	add	r4, r7
        len          -= blocksLen;
10011880:	eba8 0807 	sub.w	r8, r8, r7
10011884:	e7bb      	b.n	100117fe <wc_Md5Update+0x26>
    if (md5 == NULL || (data == NULL && len > 0)) {
10011886:	bb02      	cbnz	r2, 100118ca <wc_Md5Update+0xf2>
    if (md5->buffLen >= WC_MD5_BLOCK_SIZE)
10011888:	6803      	ldr	r3, [r0, #0]
        return BUFFER_E;
1001188a:	2b40      	cmp	r3, #64	@ 0x40
1001188c:	bf34      	ite	cc
1001188e:	f04f 0900 	movcc.w	r9, #0
10011892:	f06f 0983 	mvncs.w	r9, #131	@ 0x83
}
10011896:	4648      	mov	r0, r9
10011898:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        XMEMCPY(local, data, len);
1001189c:	4639      	mov	r1, r7
1001189e:	4630      	mov	r0, r6
100118a0:	4642      	mov	r2, r8
100118a2:	f006 fe1d 	bl	100184e0 <memcpy>
        md5->buffLen = len;
100118a6:	f8c5 8000 	str.w	r8, [r5]
}
100118aa:	4648      	mov	r0, r9
100118ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    while (len >= WC_MD5_BLOCK_SIZE) {
100118b0:	4627      	mov	r7, r4
100118b2:	f04f 0900 	mov.w	r9, #0
100118b6:	e7c6      	b.n	10011846 <wc_Md5Update+0x6e>
            ret = XTRANSFORM(md5, (const byte*)local);
100118b8:	4631      	mov	r1, r6
100118ba:	4628      	mov	r0, r5
100118bc:	f7ff fbf8 	bl	100110b0 <Transform>
            if (ret != 0)
100118c0:	4681      	mov	r9, r0
100118c2:	2800      	cmp	r0, #0
100118c4:	d1c2      	bne.n	1001184c <wc_Md5Update+0x74>
            md5->buffLen = 0;
100118c6:	6028      	str	r0, [r5, #0]
100118c8:	e7d9      	b.n	1001187e <wc_Md5Update+0xa6>
        return BAD_FUNC_ARG;
100118ca:	f06f 09ac 	mvn.w	r9, #172	@ 0xac
100118ce:	e7bd      	b.n	1001184c <wc_Md5Update+0x74>
        return BUFFER_E;
100118d0:	f06f 0983 	mvn.w	r9, #131	@ 0x83
100118d4:	e7ba      	b.n	1001184c <wc_Md5Update+0x74>
100118d6:	bf00      	nop

100118d8 <wc_Md5Final>:

int wc_Md5Final(wc_Md5* md5, byte* hash)
{
    byte* local;

    if (md5 == NULL || hash == NULL) {
100118d8:	2800      	cmp	r0, #0
100118da:	d04a      	beq.n	10011972 <wc_Md5Final+0x9a>
{
100118dc:	b570      	push	{r4, r5, r6, lr}
100118de:	460d      	mov	r5, r1
    if (md5 == NULL || hash == NULL) {
100118e0:	2900      	cmp	r1, #0
100118e2:	d043      	beq.n	1001196c <wc_Md5Final+0x94>
        return IntelQaSymMd5(&md5->asyncDev, hash, NULL, WC_MD5_DIGEST_SIZE);
#endif
    }
#endif /* WOLFSSL_ASYNC_CRYPT */

    local = (byte*)md5->buffer; /* buffer allocated in word32 size */
100118e4:	4606      	mov	r6, r0
100118e6:	4604      	mov	r4, r0

    /* ensure we have a valid buffer length; (-1 to append a byte to length) */
    if (md5->buffLen > WC_MD5_BLOCK_SIZE - 1) {
100118e8:	f856 3b0c 	ldr.w	r3, [r6], #12
100118ec:	2b3f      	cmp	r3, #63	@ 0x3f
100118ee:	d83a      	bhi.n	10011966 <wc_Md5Final+0x8e>
        return BUFFER_E;
    }

    local[md5->buffLen++] = 0x80;  /* add 1 */
100118f0:	1c5a      	adds	r2, r3, #1
100118f2:	6002      	str	r2, [r0, #0]
100118f4:	2280      	movs	r2, #128	@ 0x80
100118f6:	54f2      	strb	r2, [r6, r3]

    /* pad with zeros */
    if (md5->buffLen > WC_MD5_PAD_SIZE) {
100118f8:	6803      	ldr	r3, [r0, #0]
100118fa:	2b38      	cmp	r3, #56	@ 0x38
100118fc:	d826      	bhi.n	1001194c <wc_Md5Final+0x74>
        XMEMSET(&local[md5->buffLen], 0, WC_MD5_BLOCK_SIZE - md5->buffLen);
100118fe:	18f0      	adds	r0, r6, r3
        ByteReverseWords(md5->buffer, md5->buffer, WC_MD5_BLOCK_SIZE);
#endif
        XTRANSFORM(md5, local);
        md5->buffLen = 0;
    }
    XMEMSET(&local[md5->buffLen], 0, WC_MD5_PAD_SIZE - md5->buffLen);
10011900:	f1c3 0238 	rsb	r2, r3, #56	@ 0x38
10011904:	2100      	movs	r1, #0
10011906:	f006 fab3 	bl	10017e70 <memset>
    ByteReverseWords(md5->buffer, md5->buffer, WC_MD5_BLOCK_SIZE);
#endif

    /* put lengths in bits */
    md5->hiLen = (md5->loLen >> (8 * sizeof(md5->loLen) - 3)) +
                 (md5->hiLen << 3);
1001190a:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
    md5->hiLen = (md5->loLen >> (8 * sizeof(md5->loLen) - 3)) +
1001190e:	0f5a      	lsrs	r2, r3, #29
10011910:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
    md5->loLen = md5->loLen << 3;
10011914:	00db      	lsls	r3, r3, #3
    /* ! length ordering dependent on digest endian type ! */
    XMEMCPY(&local[WC_MD5_PAD_SIZE], &md5->loLen, sizeof(word32));
    XMEMCPY(&local[WC_MD5_PAD_SIZE + sizeof(word32)], &md5->hiLen, sizeof(word32));

    /* final transform and result to hash */
    XTRANSFORM(md5, local);
10011916:	4631      	mov	r1, r6
    XMEMCPY(&local[WC_MD5_PAD_SIZE], &md5->loLen, sizeof(word32));
10011918:	6463      	str	r3, [r4, #68]	@ 0x44
    XMEMCPY(&local[WC_MD5_PAD_SIZE + sizeof(word32)], &md5->hiLen, sizeof(word32));
1001191a:	64a2      	str	r2, [r4, #72]	@ 0x48
    XTRANSFORM(md5, local);
1001191c:	4620      	mov	r0, r4
1001191e:	f7ff fbc7 	bl	100110b0 <Transform>
#ifdef BIG_ENDIAN_ORDER
    ByteReverseWords(md5->digest, md5->digest, WC_MD5_DIGEST_SIZE);
#endif
    XMEMCPY(hash, md5->digest, WC_MD5_DIGEST_SIZE);
10011922:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
10011924:	6d63      	ldr	r3, [r4, #84]	@ 0x54
10011926:	6d22      	ldr	r2, [r4, #80]	@ 0x50
10011928:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001192a:	6029      	str	r1, [r5, #0]
1001192c:	60ab      	str	r3, [r5, #8]
    md5->digest[0] = 0x67452301L;
1001192e:	4912      	ldr	r1, [pc, #72]	@ (10011978 <wc_Md5Final+0xa0>)
    md5->digest[1] = 0xefcdab89L;
10011930:	4b12      	ldr	r3, [pc, #72]	@ (1001197c <wc_Md5Final+0xa4>)
    XMEMCPY(hash, md5->digest, WC_MD5_DIGEST_SIZE);
10011932:	60e8      	str	r0, [r5, #12]
10011934:	606a      	str	r2, [r5, #4]
    md5->digest[1] = 0xefcdab89L;
10011936:	e9c4 1313 	strd	r1, r3, [r4, #76]	@ 0x4c
    md5->digest[2] = 0x98badcfeL;
1001193a:	4a11      	ldr	r2, [pc, #68]	@ (10011980 <wc_Md5Final+0xa8>)
    md5->digest[3] = 0x10325476L;
1001193c:	4b11      	ldr	r3, [pc, #68]	@ (10011984 <wc_Md5Final+0xac>)
    md5->buffLen = 0;
1001193e:	2000      	movs	r0, #0
    md5->digest[3] = 0x10325476L;
10011940:	e9c4 2315 	strd	r2, r3, [r4, #84]	@ 0x54
    md5->buffLen = 0;
10011944:	6020      	str	r0, [r4, #0]
10011946:	6060      	str	r0, [r4, #4]
    md5->hiLen   = 0;
10011948:	60a0      	str	r0, [r4, #8]

    return _InitMd5(md5); /* reset state */
}
1001194a:	bd70      	pop	{r4, r5, r6, pc}
        XMEMSET(&local[md5->buffLen], 0, WC_MD5_BLOCK_SIZE - md5->buffLen);
1001194c:	f1c3 0240 	rsb	r2, r3, #64	@ 0x40
10011950:	18f0      	adds	r0, r6, r3
10011952:	2100      	movs	r1, #0
10011954:	f006 fa8c 	bl	10017e70 <memset>
        XTRANSFORM(md5, local);
10011958:	4631      	mov	r1, r6
1001195a:	4620      	mov	r0, r4
1001195c:	f7ff fba8 	bl	100110b0 <Transform>
10011960:	4630      	mov	r0, r6
10011962:	2238      	movs	r2, #56	@ 0x38
10011964:	e7ce      	b.n	10011904 <wc_Md5Final+0x2c>
        return BUFFER_E;
10011966:	f06f 0083 	mvn.w	r0, #131	@ 0x83
}
1001196a:	bd70      	pop	{r4, r5, r6, pc}
        return BAD_FUNC_ARG;
1001196c:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
}
10011970:	bd70      	pop	{r4, r5, r6, pc}
        return BAD_FUNC_ARG;
10011972:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
}
10011976:	4770      	bx	lr
10011978:	67452301 	.word	0x67452301
1001197c:	efcdab89 	.word	0xefcdab89
10011980:	98badcfe 	.word	0x98badcfe
10011984:	10325476 	.word	0x10325476

10011988 <wc_InitMd5>:
#endif /* !HAVE_MD5_CUST_API */


int wc_InitMd5(wc_Md5* md5)
{
    if (md5 == NULL) {
10011988:	b180      	cbz	r0, 100119ac <wc_InitMd5+0x24>
{
1001198a:	b410      	push	{r4}
    md5->digest[1] = 0xefcdab89L;
1001198c:	4a09      	ldr	r2, [pc, #36]	@ (100119b4 <wc_InitMd5+0x2c>)
    md5->digest[0] = 0x67452301L;
1001198e:	4c0a      	ldr	r4, [pc, #40]	@ (100119b8 <wc_InitMd5+0x30>)
    md5->digest[2] = 0x98badcfeL;
10011990:	490a      	ldr	r1, [pc, #40]	@ (100119bc <wc_InitMd5+0x34>)
    md5->digest[1] = 0xefcdab89L;
10011992:	e9c0 4213 	strd	r4, r2, [r0, #76]	@ 0x4c
    md5->digest[3] = 0x10325476L;
10011996:	4a0a      	ldr	r2, [pc, #40]	@ (100119c0 <wc_InitMd5+0x38>)
        return BAD_FUNC_ARG;
    }
    return wc_InitMd5_ex(md5, NULL, INVALID_DEVID);
}
10011998:	bc10      	pop	{r4}
    md5->heap = heap;
1001199a:	2300      	movs	r3, #0
    md5->digest[3] = 0x10325476L;
1001199c:	e9c0 1215 	strd	r1, r2, [r0, #84]	@ 0x54
    md5->heap = heap;
100119a0:	65c3      	str	r3, [r0, #92]	@ 0x5c
    md5->buffLen = 0;
100119a2:	6003      	str	r3, [r0, #0]
100119a4:	6043      	str	r3, [r0, #4]
    md5->hiLen   = 0;
100119a6:	6083      	str	r3, [r0, #8]
    return wc_InitMd5_ex(md5, NULL, INVALID_DEVID);
100119a8:	4618      	mov	r0, r3
}
100119aa:	4770      	bx	lr
        return BAD_FUNC_ARG;
100119ac:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
}
100119b0:	4770      	bx	lr
100119b2:	bf00      	nop
100119b4:	efcdab89 	.word	0xefcdab89
100119b8:	67452301 	.word	0x67452301
100119bc:	98badcfe 	.word	0x98badcfe
100119c0:	10325476 	.word	0x10325476

100119c4 <wc_Md5Free>:
#endif /* WOLFSSL_ASYNC_CRYPT */

#ifdef WOLFSSL_PIC32MZ_HASH
    wc_Md5Pic32Free(md5);
#endif
}
100119c4:	4770      	bx	lr
100119c6:	bf00      	nop

100119c8 <mxc_assert>:
};
const unsigned int num_leds = (sizeof(led_pin) / sizeof(mxc_gpio_cfg_t));

/******************************************************************************/
void mxc_assert(const char *expr, const char *file, int line)
{
100119c8:	b508      	push	{r3, lr}
100119ca:	4603      	mov	r3, r0
    printf("MXC_ASSERT %s #%d: (%s)\n", file, line, expr);
100119cc:	4801      	ldr	r0, [pc, #4]	@ (100119d4 <mxc_assert+0xc>)
100119ce:	f002 fb61 	bl	10014094 <printf>

    while (1) {}
100119d2:	e7fe      	b.n	100119d2 <mxc_assert+0xa>
100119d4:	10023634 	.word	0x10023634

100119d8 <GPIO0_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 0 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO0_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO0));
100119d8:	2000      	movs	r0, #0
100119da:	f000 bdcf 	b.w	1001257c <MXC_GPIO_Handler>
100119de:	bf00      	nop

100119e0 <GPIO1_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 1 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO1_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO1));
100119e0:	2001      	movs	r0, #1
100119e2:	f000 bdcb 	b.w	1001257c <MXC_GPIO_Handler>
100119e6:	bf00      	nop

100119e8 <Board_Init>:
}

/******************************************************************************/
int Board_Init(void)
{
100119e8:	b510      	push	{r4, lr}
#ifndef __riscv
    int err;

    // Enable GPIO
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
100119ea:	2000      	movs	r0, #0
100119ec:	f000 fb5c 	bl	100120a8 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
100119f0:	2001      	movs	r0, #1
100119f2:	f000 fb59 	bl	100120a8 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
100119f6:	2040      	movs	r0, #64	@ 0x40
100119f8:	f000 fb56 	bl	100120a8 <MXC_SYS_ClockEnable>
/******************************************************************************/
int Console_Init(void)
{
    int err;

    if ((err = MXC_UART_Init(ConsoleUart, CONSOLE_BAUD, MXC_UART_IBRO_CLK)) != E_NO_ERROR) {
100119fc:	4b10      	ldr	r3, [pc, #64]	@ (10011a40 <Board_Init+0x58>)
100119fe:	2202      	movs	r2, #2
10011a00:	6818      	ldr	r0, [r3, #0]
10011a02:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
10011a06:	f001 fd51 	bl	100134ac <MXC_UART_Init>
    if ((err = Console_Init()) < E_NO_ERROR) {
10011a0a:	1e04      	subs	r4, r0, #0
10011a0c:	db0c      	blt.n	10011a28 <Board_Init+0x40>
    if ((err = PB_Init()) != E_NO_ERROR) {
10011a0e:	f000 f8eb 	bl	10011be8 <PB_Init>
10011a12:	b958      	cbnz	r0, 10011a2c <Board_Init+0x44>
    if ((err = LED_Init()) != E_NO_ERROR) {
10011a14:	f000 f888 	bl	10011b28 <LED_Init>
10011a18:	4604      	mov	r4, r0
10011a1a:	b960      	cbnz	r0, 10011a36 <Board_Init+0x4e>
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
10011a1c:	4b09      	ldr	r3, [pc, #36]	@ (10011a44 <Board_Init+0x5c>)
    MXC_Delay(200000);
10011a1e:	480a      	ldr	r0, [pc, #40]	@ (10011a48 <Board_Init+0x60>)
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
10011a20:	2243      	movs	r2, #67	@ 0x43
10011a22:	60da      	str	r2, [r3, #12]
    MXC_Delay(200000);
10011a24:	f000 fabe 	bl	10011fa4 <MXC_Delay>
}
10011a28:	4620      	mov	r0, r4
10011a2a:	bd10      	pop	{r4, pc}
        MXC_ASSERT_FAIL();
10011a2c:	4907      	ldr	r1, [pc, #28]	@ (10011a4c <Board_Init+0x64>)
10011a2e:	4808      	ldr	r0, [pc, #32]	@ (10011a50 <Board_Init+0x68>)
10011a30:	226f      	movs	r2, #111	@ 0x6f
10011a32:	f7ff ffc9 	bl	100119c8 <mxc_assert>
        MXC_ASSERT_FAIL();
10011a36:	4905      	ldr	r1, [pc, #20]	@ (10011a4c <Board_Init+0x64>)
10011a38:	4805      	ldr	r0, [pc, #20]	@ (10011a50 <Board_Init+0x68>)
10011a3a:	2274      	movs	r2, #116	@ 0x74
10011a3c:	f7ff ffc4 	bl	100119c8 <mxc_assert>
10011a40:	20000000 	.word	0x20000000
10011a44:	40004400 	.word	0x40004400
10011a48:	00030d40 	.word	0x00030d40
10011a4c:	10023650 	.word	0x10023650
10011a50:	100236b8 	.word	0x100236b8

10011a54 <NMI_Handler>:
}

/******************************************************************************/
void NMI_Handler(void)
{
    __NOP();
10011a54:	bf00      	nop
}
10011a56:	4770      	bx	lr

10011a58 <_close>:
    return -1;
}
int _close(int file)
{
    return -1;
}
10011a58:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011a5c:	4770      	bx	lr
10011a5e:	bf00      	nop

10011a60 <_isatty>:
int _isatty(int file)
10011a60:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011a64:	4770      	bx	lr
10011a66:	bf00      	nop

10011a68 <_lseek>:
    return -1;
}
int _lseek(int file, off_t offset, int whence)
{
    return -1;
}
10011a68:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011a6c:	4770      	bx	lr
10011a6e:	bf00      	nop

10011a70 <_fstat>:
int _fstat(int file, struct stat *st)
{
    return -1;
}
10011a70:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10011a74:	4770      	bx	lr
10011a76:	bf00      	nop

10011a78 <_read>:
   fgetc for stdio */
#if defined(__ICCARM__) || defined(__GNUC__)

#if defined(__GNUC__) // GNUC _read function prototype
int _read(int file, char *ptr, int len)
{
10011a78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    size_t n;
#endif /*  */

    int num = 0; // count of number received.

    switch (file) {
10011a7a:	b9e0      	cbnz	r0, 10011ab6 <_read+0x3e>
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
10011a7c:	2a00      	cmp	r2, #0
10011a7e:	dd19      	ble.n	10011ab4 <_read+0x3c>
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
10011a80:	4d10      	ldr	r5, [pc, #64]	@ (10011ac4 <_read+0x4c>)
10011a82:	460e      	mov	r6, r1
10011a84:	188f      	adds	r7, r1, r2
        for (n = 0; n < len; n++) {
10011a86:	460c      	mov	r4, r1
10011a88:	e002      	b.n	10011a90 <_read+0x18>
10011a8a:	42bb      	cmp	r3, r7
10011a8c:	d00f      	beq.n	10011aae <_read+0x36>
                num++;
                ptr++;

                break;
            } else {
                ptr++;
10011a8e:	461c      	mov	r4, r3
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
10011a90:	4628      	mov	r0, r5
10011a92:	f001 fe03 	bl	1001369c <MXC_UART_ReadCharacter>
10011a96:	b2c1      	uxtb	r1, r0
10011a98:	7021      	strb	r1, [r4, #0]
            MXC_UART_WriteCharacter(MXC_UARTn, *ptr); // echo the byte.
10011a9a:	4628      	mov	r0, r5
10011a9c:	f001 fe00 	bl	100136a0 <MXC_UART_WriteCharacter>
            if (*ptr == '\r') { // check for end of line.
10011aa0:	7822      	ldrb	r2, [r4, #0]
10011aa2:	2a0d      	cmp	r2, #13
                ptr++;
10011aa4:	f104 0301 	add.w	r3, r4, #1
            if (*ptr == '\r') { // check for end of line.
10011aa8:	d1ef      	bne.n	10011a8a <_read+0x12>
                *ptr = '\n';
10011aaa:	230a      	movs	r3, #10
10011aac:	7023      	strb	r3, [r4, #0]
                num++;
10011aae:	f1c6 0601 	rsb	r6, r6, #1
10011ab2:	19a0      	adds	r0, r4, r6
        errno = EBADF;
        return -1;
    }

    return num;
}
10011ab4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        errno = EBADF;
10011ab6:	f006 fb09 	bl	100180cc <__errno>
10011aba:	2309      	movs	r3, #9
10011abc:	6003      	str	r3, [r0, #0]
        return -1;
10011abe:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011ac2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011ac4:	40042000 	.word	0x40042000

10011ac8 <_write>:

/* newlib/libc printf() will eventually call write() to get the data to the stdout */
#if defined(__GNUC__)
// GNUC _write function prototype
int _write(int file, char *ptr, int len)
{
10011ac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
int __write(int file, const unsigned char *ptr, size_t len)
{
    size_t n;
#endif /* __GNUC__ */

    switch (file) {
10011aca:	1e43      	subs	r3, r0, #1
10011acc:	2b01      	cmp	r3, #1
10011ace:	d821      	bhi.n	10011b14 <_write+0x4c>
    case STDOUT_FILENO:
    case STDERR_FILENO:

        // This function should be as fast as possible
        // So we'll forgo the UART driver for now
        for (n = 0; n < len; n++) {
10011ad0:	2a00      	cmp	r2, #0
10011ad2:	4617      	mov	r7, r2
10011ad4:	dd12      	ble.n	10011afc <_write+0x34>
10011ad6:	1e53      	subs	r3, r2, #1
            if (*ptr == '\n') {
                // Wait until there's room in the FIFO
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011ad8:	4e12      	ldr	r6, [pc, #72]	@ (10011b24 <_write+0x5c>)
10011ada:	1e4c      	subs	r4, r1, #1
10011adc:	18cd      	adds	r5, r1, r3
            if (*ptr == '\n') {
10011ade:	f814 3f01 	ldrb.w	r3, [r4, #1]!
10011ae2:	2b0a      	cmp	r3, #10
10011ae4:	d00c      	beq.n	10011b00 <_write+0x38>

                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
            }

            // Wait until there's room in the FIFO
            while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011ae6:	480f      	ldr	r0, [pc, #60]	@ (10011b24 <_write+0x5c>)
10011ae8:	f001 fdde 	bl	100136a8 <MXC_UART_GetTXFIFOAvailable>
10011aec:	2800      	cmp	r0, #0
10011aee:	d0fa      	beq.n	10011ae6 <_write+0x1e>

            MXC_UART_WriteCharacter(MXC_UARTn, *ptr++);
10011af0:	7821      	ldrb	r1, [r4, #0]
10011af2:	4630      	mov	r0, r6
10011af4:	f001 fdd4 	bl	100136a0 <MXC_UART_WriteCharacter>
        for (n = 0; n < len; n++) {
10011af8:	42ac      	cmp	r4, r5
10011afa:	d1f0      	bne.n	10011ade <_write+0x16>

        break;

    default:
        errno = EBADF;
        return -1;
10011afc:	4638      	mov	r0, r7
    }

    return len;
}
10011afe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
10011b00:	4808      	ldr	r0, [pc, #32]	@ (10011b24 <_write+0x5c>)
10011b02:	f001 fdd1 	bl	100136a8 <MXC_UART_GetTXFIFOAvailable>
10011b06:	2800      	cmp	r0, #0
10011b08:	d0fa      	beq.n	10011b00 <_write+0x38>
                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
10011b0a:	210d      	movs	r1, #13
10011b0c:	4630      	mov	r0, r6
10011b0e:	f001 fdc7 	bl	100136a0 <MXC_UART_WriteCharacter>
10011b12:	e7e8      	b.n	10011ae6 <_write+0x1e>
        errno = EBADF;
10011b14:	f006 fada 	bl	100180cc <__errno>
10011b18:	2309      	movs	r3, #9
10011b1a:	6003      	str	r3, [r0, #0]
        return -1;
10011b1c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011b20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011b22:	bf00      	nop
10011b24:	40042000 	.word	0x40042000

10011b28 <LED_Init>:
#include "led.h"
#include "mxc_device.h"

/******************************************************************************/
int LED_Init(void)
{
10011b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    /* setup GPIO for the LED */
    for (i = 0; i < num_leds; i++) {
10011b2a:	4b0d      	ldr	r3, [pc, #52]	@ (10011b60 <LED_Init+0x38>)
10011b2c:	681f      	ldr	r7, [r3, #0]
10011b2e:	b1a7      	cbz	r7, 10011b5a <LED_Init+0x32>
10011b30:	2500      	movs	r5, #0
10011b32:	4c0c      	ldr	r4, [pc, #48]	@ (10011b64 <LED_Init+0x3c>)
    int retval = E_NO_ERROR;
10011b34:	462e      	mov	r6, r5
//******************************************************************************
void LED_Off(unsigned int idx)
{
    MXC_ASSERT(idx < num_leds);
#if (LED_ON == 0)
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10011b36:	e9d4 0100 	ldrd	r0, r1, [r4]
10011b3a:	f000 fcf1 	bl	10012520 <MXC_GPIO_OutSet>
        if (MXC_GPIO_Config(&led_pin[i]) != E_NO_ERROR) {
10011b3e:	4620      	mov	r0, r4
10011b40:	f000 fbe8 	bl	10012314 <MXC_GPIO_Config>
    for (i = 0; i < num_leds; i++) {
10011b44:	3501      	adds	r5, #1
            retval = E_UNKNOWN;
10011b46:	2800      	cmp	r0, #0
10011b48:	bf18      	it	ne
10011b4a:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_leds; i++) {
10011b4e:	42af      	cmp	r7, r5
10011b50:	f104 040c 	add.w	r4, r4, #12
10011b54:	d1ef      	bne.n	10011b36 <LED_Init+0xe>
}
10011b56:	4630      	mov	r0, r6
10011b58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
10011b5a:	463e      	mov	r6, r7
}
10011b5c:	4630      	mov	r0, r6
10011b5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011b60:	100236c0 	.word	0x100236c0
10011b64:	100236c4 	.word	0x100236c4

10011b68 <LED_On>:
    MXC_ASSERT(idx < num_leds);
10011b68:	4b0b      	ldr	r3, [pc, #44]	@ (10011b98 <LED_On+0x30>)
10011b6a:	681b      	ldr	r3, [r3, #0]
10011b6c:	4283      	cmp	r3, r0
{
10011b6e:	b510      	push	{r4, lr}
10011b70:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
10011b72:	d90b      	bls.n	10011b8c <LED_On+0x24>
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
10011b74:	4b09      	ldr	r3, [pc, #36]	@ (10011b9c <LED_On+0x34>)
10011b76:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10011b7a:	eb03 0284 	add.w	r2, r3, r4, lsl #2
10011b7e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
10011b82:	6851      	ldr	r1, [r2, #4]
}
10011b84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
10011b88:	f000 bce0 	b.w	1001254c <MXC_GPIO_OutClr>
    MXC_ASSERT(idx < num_leds);
10011b8c:	4904      	ldr	r1, [pc, #16]	@ (10011ba0 <LED_On+0x38>)
10011b8e:	4805      	ldr	r0, [pc, #20]	@ (10011ba4 <LED_On+0x3c>)
10011b90:	223b      	movs	r2, #59	@ 0x3b
10011b92:	f7ff ff19 	bl	100119c8 <mxc_assert>
10011b96:	e7ed      	b.n	10011b74 <LED_On+0xc>
10011b98:	100236c0 	.word	0x100236c0
10011b9c:	100236c4 	.word	0x100236c4
10011ba0:	10023704 	.word	0x10023704
10011ba4:	10023758 	.word	0x10023758

10011ba8 <LED_Off>:
    MXC_ASSERT(idx < num_leds);
10011ba8:	4b0b      	ldr	r3, [pc, #44]	@ (10011bd8 <LED_Off+0x30>)
10011baa:	681b      	ldr	r3, [r3, #0]
10011bac:	4283      	cmp	r3, r0
{
10011bae:	b510      	push	{r4, lr}
10011bb0:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
10011bb2:	d90b      	bls.n	10011bcc <LED_Off+0x24>
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10011bb4:	4b09      	ldr	r3, [pc, #36]	@ (10011bdc <LED_Off+0x34>)
10011bb6:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10011bba:	eb03 0284 	add.w	r2, r3, r4, lsl #2
10011bbe:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
10011bc2:	6851      	ldr	r1, [r2, #4]
#else
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
#endif
}
10011bc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
10011bc8:	f000 bcaa 	b.w	10012520 <MXC_GPIO_OutSet>
    MXC_ASSERT(idx < num_leds);
10011bcc:	4904      	ldr	r1, [pc, #16]	@ (10011be0 <LED_Off+0x38>)
10011bce:	4805      	ldr	r0, [pc, #20]	@ (10011be4 <LED_Off+0x3c>)
10011bd0:	2246      	movs	r2, #70	@ 0x46
10011bd2:	f7ff fef9 	bl	100119c8 <mxc_assert>
10011bd6:	e7ed      	b.n	10011bb4 <LED_Off+0xc>
10011bd8:	100236c0 	.word	0x100236c0
10011bdc:	100236c4 	.word	0x100236c4
10011be0:	10023704 	.word	0x10023704
10011be4:	10023758 	.word	0x10023758

10011be8 <PB_Init>:
#include "mxc_assert.h"
#include "pb.h"

/******************************************************************************/
int PB_Init(void)
{
10011be8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    // Enable pushbutton inputs
    for (i = 0; i < num_pbs; i++) {
10011bea:	4b0b      	ldr	r3, [pc, #44]	@ (10011c18 <PB_Init+0x30>)
10011bec:	681f      	ldr	r7, [r3, #0]
10011bee:	b187      	cbz	r7, 10011c12 <PB_Init+0x2a>
10011bf0:	2400      	movs	r4, #0
10011bf2:	4d0a      	ldr	r5, [pc, #40]	@ (10011c1c <PB_Init+0x34>)
    int retval = E_NO_ERROR;
10011bf4:	4626      	mov	r6, r4
        if (MXC_GPIO_Config(&pb_pin[i]) != E_NO_ERROR) {
10011bf6:	4628      	mov	r0, r5
10011bf8:	f000 fb8c 	bl	10012314 <MXC_GPIO_Config>
    for (i = 0; i < num_pbs; i++) {
10011bfc:	3401      	adds	r4, #1
            retval = E_UNKNOWN;
10011bfe:	2800      	cmp	r0, #0
10011c00:	bf18      	it	ne
10011c02:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_pbs; i++) {
10011c06:	42bc      	cmp	r4, r7
10011c08:	f105 050c 	add.w	r5, r5, #12
10011c0c:	d1f3      	bne.n	10011bf6 <PB_Init+0xe>
        }
    }

    return retval;
}
10011c0e:	4630      	mov	r0, r6
10011c10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
10011c12:	463e      	mov	r6, r7
}
10011c14:	4630      	mov	r0, r6
10011c16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011c18:	100236e8 	.word	0x100236e8
10011c1c:	100236ec 	.word	0x100236ec

10011c20 <Reset_Handler>:
10011c20:	4847      	ldr	r0, [pc, #284]	@ (10011d40 <LPCMP_IRQHandler+0x2>)
10011c22:	4685      	mov	sp, r0
10011c24:	4847      	ldr	r0, [pc, #284]	@ (10011d44 <LPCMP_IRQHandler+0x6>)
10011c26:	4780      	blx	r0
10011c28:	b980      	cbnz	r0, 10011c4c <.SKIPRAMINIT>
10011c2a:	4947      	ldr	r1, [pc, #284]	@ (10011d48 <LPCMP_IRQHandler+0xa>)
10011c2c:	4a47      	ldr	r2, [pc, #284]	@ (10011d4c <LPCMP_IRQHandler+0xe>)
10011c2e:	4b48      	ldr	r3, [pc, #288]	@ (10011d50 <LPCMP_IRQHandler+0x12>)
10011c30:	1a9b      	subs	r3, r3, r2
10011c32:	dd03      	ble.n	10011c3c <Reset_Handler+0x1c>
10011c34:	3b04      	subs	r3, #4
10011c36:	58c8      	ldr	r0, [r1, r3]
10011c38:	50d0      	str	r0, [r2, r3]
10011c3a:	dcfb      	bgt.n	10011c34 <Reset_Handler+0x14>
10011c3c:	4945      	ldr	r1, [pc, #276]	@ (10011d54 <LPCMP_IRQHandler+0x16>)
10011c3e:	4a46      	ldr	r2, [pc, #280]	@ (10011d58 <LPCMP_IRQHandler+0x1a>)
10011c40:	2000      	movs	r0, #0
10011c42:	4291      	cmp	r1, r2
10011c44:	bfbc      	itt	lt
10011c46:	f841 0b04 	strlt.w	r0, [r1], #4
10011c4a:	e7fa      	blt.n	10011c42 <Reset_Handler+0x22>

10011c4c <.SKIPRAMINIT>:
10011c4c:	4843      	ldr	r0, [pc, #268]	@ (10011d5c <LPCMP_IRQHandler+0x1e>)
10011c4e:	4780      	blx	r0
10011c50:	4843      	ldr	r0, [pc, #268]	@ (10011d60 <LPCMP_IRQHandler+0x22>)
10011c52:	4780      	blx	r0
10011c54:	4843      	ldr	r0, [pc, #268]	@ (10011d64 <LPCMP_IRQHandler+0x26>)
10011c56:	4780      	blx	r0

10011c58 <.SPIN>:
10011c58:	f7ff fffe 	bl	10011c58 <.SPIN>
10011c5c:	e7fe      	b.n	10011c5c <.SPIN+0x4>

10011c5e <HardFault_Handler>:
10011c5e:	e7fe      	b.n	10011c5e <HardFault_Handler>

10011c60 <MemManage_Handler>:
10011c60:	e7fe      	b.n	10011c60 <MemManage_Handler>

10011c62 <BusFault_Handler>:
10011c62:	e7fe      	b.n	10011c62 <BusFault_Handler>

10011c64 <UsageFault_Handler>:
10011c64:	e7fe      	b.n	10011c64 <UsageFault_Handler>

10011c66 <SVC_Handler>:
10011c66:	e7fe      	b.n	10011c66 <SVC_Handler>

10011c68 <DebugMon_Handler>:
10011c68:	e7fe      	b.n	10011c68 <DebugMon_Handler>

10011c6a <PendSV_Handler>:
10011c6a:	e7fe      	b.n	10011c6a <PendSV_Handler>

10011c6c <SysTick_Handler>:
10011c6c:	e7fe      	b.n	10011c6c <SysTick_Handler>

10011c6e <Default_Handler>:
10011c6e:	e7fe      	b.n	10011c6e <Default_Handler>

10011c70 <PF_IRQHandler>:
10011c70:	e7fe      	b.n	10011c70 <PF_IRQHandler>

10011c72 <WDT0_IRQHandler>:
10011c72:	e7fe      	b.n	10011c72 <WDT0_IRQHandler>

10011c74 <RSV02_IRQHandler>:
10011c74:	e7fe      	b.n	10011c74 <RSV02_IRQHandler>

10011c76 <RTC_IRQHandler>:
10011c76:	e7fe      	b.n	10011c76 <RTC_IRQHandler>

10011c78 <TRNG_IRQHandler>:
10011c78:	e7fe      	b.n	10011c78 <TRNG_IRQHandler>

10011c7a <TMR0_IRQHandler>:
10011c7a:	e7fe      	b.n	10011c7a <TMR0_IRQHandler>

10011c7c <TMR1_IRQHandler>:
10011c7c:	e7fe      	b.n	10011c7c <TMR1_IRQHandler>

10011c7e <TMR2_IRQHandler>:
10011c7e:	e7fe      	b.n	10011c7e <TMR2_IRQHandler>

10011c80 <TMR3_IRQHandler>:
10011c80:	e7fe      	b.n	10011c80 <TMR3_IRQHandler>

10011c82 <TMR4_IRQHandler>:
10011c82:	e7fe      	b.n	10011c82 <TMR4_IRQHandler>

10011c84 <TMR5_IRQHandler>:
10011c84:	e7fe      	b.n	10011c84 <TMR5_IRQHandler>

10011c86 <RSV11_IRQHandler>:
10011c86:	e7fe      	b.n	10011c86 <RSV11_IRQHandler>

10011c88 <RSV12_IRQHandler>:
10011c88:	e7fe      	b.n	10011c88 <RSV12_IRQHandler>

10011c8a <I2C0_IRQHandler>:
10011c8a:	e7fe      	b.n	10011c8a <I2C0_IRQHandler>

10011c8c <UART0_IRQHandler>:
10011c8c:	e7fe      	b.n	10011c8c <UART0_IRQHandler>

10011c8e <UART1_IRQHandler>:
10011c8e:	e7fe      	b.n	10011c8e <UART1_IRQHandler>

10011c90 <SPI1_IRQHandler>:
10011c90:	e7fe      	b.n	10011c90 <SPI1_IRQHandler>

10011c92 <RSV17_IRQHandler>:
10011c92:	e7fe      	b.n	10011c92 <RSV17_IRQHandler>

10011c94 <RSV18_IRQHandler>:
10011c94:	e7fe      	b.n	10011c94 <RSV18_IRQHandler>

10011c96 <RSV19_IRQHandler>:
10011c96:	e7fe      	b.n	10011c96 <RSV19_IRQHandler>

10011c98 <ADC_IRQHandler>:
10011c98:	e7fe      	b.n	10011c98 <ADC_IRQHandler>

10011c9a <RSV21_IRQHandler>:
10011c9a:	e7fe      	b.n	10011c9a <RSV21_IRQHandler>

10011c9c <RSV22_IRQHandler>:
10011c9c:	e7fe      	b.n	10011c9c <RSV22_IRQHandler>

10011c9e <FLC0_IRQHandler>:
10011c9e:	e7fe      	b.n	10011c9e <FLC0_IRQHandler>
10011ca0:	e7fe      	b.n	10011ca0 <FLC0_IRQHandler+0x2>
10011ca2:	e7fe      	b.n	10011ca2 <FLC0_IRQHandler+0x4>

10011ca4 <GPIO2_IRQHandler>:
10011ca4:	e7fe      	b.n	10011ca4 <GPIO2_IRQHandler>

10011ca6 <RSV27_IRQHandler>:
10011ca6:	e7fe      	b.n	10011ca6 <RSV27_IRQHandler>

10011ca8 <DMA0_IRQHandler>:
10011ca8:	e7fe      	b.n	10011ca8 <DMA0_IRQHandler>

10011caa <DMA1_IRQHandler>:
10011caa:	e7fe      	b.n	10011caa <DMA1_IRQHandler>

10011cac <DMA2_IRQHandler>:
10011cac:	e7fe      	b.n	10011cac <DMA2_IRQHandler>

10011cae <DMA3_IRQHandler>:
10011cae:	e7fe      	b.n	10011cae <DMA3_IRQHandler>

10011cb0 <RSV32_IRQHandler>:
10011cb0:	e7fe      	b.n	10011cb0 <RSV32_IRQHandler>

10011cb2 <RSV33_IRQHandler>:
10011cb2:	e7fe      	b.n	10011cb2 <RSV33_IRQHandler>

10011cb4 <UART2_IRQHandler>:
10011cb4:	e7fe      	b.n	10011cb4 <UART2_IRQHandler>

10011cb6 <RSV35_IRQHandler>:
10011cb6:	e7fe      	b.n	10011cb6 <RSV35_IRQHandler>

10011cb8 <I2C1_IRQHandler>:
10011cb8:	e7fe      	b.n	10011cb8 <I2C1_IRQHandler>

10011cba <RSV37_IRQHandler>:
10011cba:	e7fe      	b.n	10011cba <RSV37_IRQHandler>

10011cbc <RSV38_IRQHandler>:
10011cbc:	e7fe      	b.n	10011cbc <RSV38_IRQHandler>

10011cbe <RSV39_IRQHandler>:
10011cbe:	e7fe      	b.n	10011cbe <RSV39_IRQHandler>

10011cc0 <RSV40_IRQHandler>:
10011cc0:	e7fe      	b.n	10011cc0 <RSV40_IRQHandler>

10011cc2 <RSV41_IRQHandler>:
10011cc2:	e7fe      	b.n	10011cc2 <RSV41_IRQHandler>

10011cc4 <RSV42_IRQHandler>:
10011cc4:	e7fe      	b.n	10011cc4 <RSV42_IRQHandler>

10011cc6 <RSV43_IRQHandler>:
10011cc6:	e7fe      	b.n	10011cc6 <RSV43_IRQHandler>

10011cc8 <RSV44_IRQHandler>:
10011cc8:	e7fe      	b.n	10011cc8 <RSV44_IRQHandler>

10011cca <RSV45_IRQHandler>:
10011cca:	e7fe      	b.n	10011cca <RSV45_IRQHandler>

10011ccc <RSV46_IRQHandler>:
10011ccc:	e7fe      	b.n	10011ccc <RSV46_IRQHandler>

10011cce <RSV47_IRQHandler>:
10011cce:	e7fe      	b.n	10011cce <RSV47_IRQHandler>

10011cd0 <RSV48_IRQHandler>:
10011cd0:	e7fe      	b.n	10011cd0 <RSV48_IRQHandler>

10011cd2 <RSV49_IRQHandler>:
10011cd2:	e7fe      	b.n	10011cd2 <RSV49_IRQHandler>

10011cd4 <RSV50_IRQHandler>:
10011cd4:	e7fe      	b.n	10011cd4 <RSV50_IRQHandler>

10011cd6 <RSV51_IRQHandler>:
10011cd6:	e7fe      	b.n	10011cd6 <RSV51_IRQHandler>

10011cd8 <RSV52_IRQHandler>:
10011cd8:	e7fe      	b.n	10011cd8 <RSV52_IRQHandler>

10011cda <WUT_IRQHandler>:
10011cda:	e7fe      	b.n	10011cda <WUT_IRQHandler>

10011cdc <GPIOWAKE_IRQHandler>:
10011cdc:	e7fe      	b.n	10011cdc <GPIOWAKE_IRQHandler>

10011cde <RSV55_IRQHandler>:
10011cde:	e7fe      	b.n	10011cde <RSV55_IRQHandler>

10011ce0 <SPI0_IRQHandler>:
10011ce0:	e7fe      	b.n	10011ce0 <SPI0_IRQHandler>

10011ce2 <WDT1_IRQHandler>:
10011ce2:	e7fe      	b.n	10011ce2 <WDT1_IRQHandler>

10011ce4 <RSV58_IRQHandler>:
10011ce4:	e7fe      	b.n	10011ce4 <RSV58_IRQHandler>

10011ce6 <PT_IRQHandler>:
10011ce6:	e7fe      	b.n	10011ce6 <PT_IRQHandler>

10011ce8 <RSV60_IRQHandler>:
10011ce8:	e7fe      	b.n	10011ce8 <RSV60_IRQHandler>

10011cea <RSV61_IRQHandler>:
10011cea:	e7fe      	b.n	10011cea <RSV61_IRQHandler>

10011cec <I2C2_IRQHandler>:
10011cec:	e7fe      	b.n	10011cec <I2C2_IRQHandler>

10011cee <RISCV_IRQHandler>:
10011cee:	e7fe      	b.n	10011cee <RISCV_IRQHandler>

10011cf0 <RSV64_IRQHandler>:
10011cf0:	e7fe      	b.n	10011cf0 <RSV64_IRQHandler>

10011cf2 <RSV65_IRQHandler>:
10011cf2:	e7fe      	b.n	10011cf2 <RSV65_IRQHandler>

10011cf4 <RSV66_IRQHandler>:
10011cf4:	e7fe      	b.n	10011cf4 <RSV66_IRQHandler>

10011cf6 <OWM_IRQHandler>:
10011cf6:	e7fe      	b.n	10011cf6 <OWM_IRQHandler>

10011cf8 <RSV68_IRQHandler>:
10011cf8:	e7fe      	b.n	10011cf8 <RSV68_IRQHandler>

10011cfa <RSV69_IRQHandler>:
10011cfa:	e7fe      	b.n	10011cfa <RSV69_IRQHandler>

10011cfc <RSV70_IRQHandler>:
10011cfc:	e7fe      	b.n	10011cfc <RSV70_IRQHandler>

10011cfe <RSV71_IRQHandler>:
10011cfe:	e7fe      	b.n	10011cfe <RSV71_IRQHandler>

10011d00 <RSV72_IRQHandler>:
10011d00:	e7fe      	b.n	10011d00 <RSV72_IRQHandler>

10011d02 <RSV73_IRQHandler>:
10011d02:	e7fe      	b.n	10011d02 <RSV73_IRQHandler>

10011d04 <RSV74_IRQHandler>:
10011d04:	e7fe      	b.n	10011d04 <RSV74_IRQHandler>

10011d06 <RSV75_IRQHandler>:
10011d06:	e7fe      	b.n	10011d06 <RSV75_IRQHandler>

10011d08 <RSV76_IRQHandler>:
10011d08:	e7fe      	b.n	10011d08 <RSV76_IRQHandler>

10011d0a <RSV77_IRQHandler>:
10011d0a:	e7fe      	b.n	10011d0a <RSV77_IRQHandler>

10011d0c <RSV78_IRQHandler>:
10011d0c:	e7fe      	b.n	10011d0c <RSV78_IRQHandler>

10011d0e <RSV79_IRQHandler>:
10011d0e:	e7fe      	b.n	10011d0e <RSV79_IRQHandler>

10011d10 <RSV80_IRQHandler>:
10011d10:	e7fe      	b.n	10011d10 <RSV80_IRQHandler>

10011d12 <RSV81_IRQHandler>:
10011d12:	e7fe      	b.n	10011d12 <RSV81_IRQHandler>

10011d14 <ECC_IRQHandler>:
10011d14:	e7fe      	b.n	10011d14 <ECC_IRQHandler>

10011d16 <DVS_IRQHandler>:
10011d16:	e7fe      	b.n	10011d16 <DVS_IRQHandler>

10011d18 <SIMO_IRQHandler>:
10011d18:	e7fe      	b.n	10011d18 <SIMO_IRQHandler>

10011d1a <RSV85_IRQHandler>:
10011d1a:	e7fe      	b.n	10011d1a <RSV85_IRQHandler>

10011d1c <RSV86_IRQHandler>:
10011d1c:	e7fe      	b.n	10011d1c <RSV86_IRQHandler>

10011d1e <RSV87_IRQHandler>:
10011d1e:	e7fe      	b.n	10011d1e <RSV87_IRQHandler>

10011d20 <UART3_IRQHandler>:
10011d20:	e7fe      	b.n	10011d20 <UART3_IRQHandler>

10011d22 <RSV89_IRQHandler>:
10011d22:	e7fe      	b.n	10011d22 <RSV89_IRQHandler>

10011d24 <RSV90_IRQHandler>:
10011d24:	e7fe      	b.n	10011d24 <RSV90_IRQHandler>

10011d26 <PCIF_IRQHandler>:
10011d26:	e7fe      	b.n	10011d26 <PCIF_IRQHandler>

10011d28 <RSV92_IRQHandler>:
10011d28:	e7fe      	b.n	10011d28 <RSV92_IRQHandler>

10011d2a <RSV93_IRQHandler>:
10011d2a:	e7fe      	b.n	10011d2a <RSV93_IRQHandler>

10011d2c <RSV94_IRQHandler>:
10011d2c:	e7fe      	b.n	10011d2c <RSV94_IRQHandler>

10011d2e <RSV95_IRQHandler>:
10011d2e:	e7fe      	b.n	10011d2e <RSV95_IRQHandler>

10011d30 <RSV96_IRQHandler>:
10011d30:	e7fe      	b.n	10011d30 <RSV96_IRQHandler>

10011d32 <AES_IRQHandler>:
10011d32:	e7fe      	b.n	10011d32 <AES_IRQHandler>

10011d34 <RSV98_IRQHandler>:
10011d34:	e7fe      	b.n	10011d34 <RSV98_IRQHandler>

10011d36 <I2S_IRQHandler>:
10011d36:	e7fe      	b.n	10011d36 <I2S_IRQHandler>

10011d38 <CNN_FIFO_IRQHandler>:
10011d38:	e7fe      	b.n	10011d38 <CNN_FIFO_IRQHandler>

10011d3a <CNN_IRQHandler>:
10011d3a:	e7fe      	b.n	10011d3a <CNN_IRQHandler>

10011d3c <RSV102_IRQHandler>:
10011d3c:	e7fe      	b.n	10011d3c <RSV102_IRQHandler>

10011d3e <LPCMP_IRQHandler>:
10011d3e:	e7fe      	b.n	10011d3e <LPCMP_IRQHandler>
10011d40:	20020000 	.word	0x20020000
10011d44:	10011e0d 	.word	0x10011e0d
10011d48:	1002aa18 	.word	0x1002aa18
10011d4c:	20000000 	.word	0x20000000
10011d50:	20000bcc 	.word	0x20000bcc
10011d54:	20000c00 	.word	0x20000c00
10011d58:	20001768 	.word	0x20001768
10011d5c:	10011e11 	.word	0x10011e11
10011d60:	100183e1 	.word	0x100183e1
10011d64:	1000eac9 	.word	0x1000eac9

10011d68 <_sbrk>:
extern unsigned int __HeapLimit;
caddr_t _sbrk(int incr)
{
    char *prev_heap_end;

    if (heap_end == 0) {
10011d68:	4a0b      	ldr	r2, [pc, #44]	@ (10011d98 <_sbrk+0x30>)
{
10011d6a:	b508      	push	{r3, lr}
10011d6c:	4603      	mov	r3, r0
    if (heap_end == 0) {
10011d6e:	6810      	ldr	r0, [r2, #0]
10011d70:	b128      	cbz	r0, 10011d7e <_sbrk+0x16>
        heap_end = (caddr_t)&__HeapBase;
    }
    prev_heap_end = heap_end;

    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011d72:	490a      	ldr	r1, [pc, #40]	@ (10011d9c <_sbrk+0x34>)
10011d74:	4403      	add	r3, r0
10011d76:	428b      	cmp	r3, r1
10011d78:	d807      	bhi.n	10011d8a <_sbrk+0x22>
        errno = ENOMEM;
        return (caddr_t)-1;
    }

    heap_end += incr;
10011d7a:	6013      	str	r3, [r2, #0]

    return (caddr_t)prev_heap_end;
}
10011d7c:	bd08      	pop	{r3, pc}
        heap_end = (caddr_t)&__HeapBase;
10011d7e:	4808      	ldr	r0, [pc, #32]	@ (10011da0 <_sbrk+0x38>)
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011d80:	4906      	ldr	r1, [pc, #24]	@ (10011d9c <_sbrk+0x34>)
        heap_end = (caddr_t)&__HeapBase;
10011d82:	6010      	str	r0, [r2, #0]
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
10011d84:	4403      	add	r3, r0
10011d86:	428b      	cmp	r3, r1
10011d88:	d9f7      	bls.n	10011d7a <_sbrk+0x12>
        errno = ENOMEM;
10011d8a:	f006 f99f 	bl	100180cc <__errno>
10011d8e:	230c      	movs	r3, #12
10011d90:	6003      	str	r3, [r0, #0]
        return (caddr_t)-1;
10011d92:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10011d96:	bd08      	pop	{r3, pc}
10011d98:	20000ca8 	.word	0x20000ca8
10011d9c:	2001f000 	.word	0x2001f000
10011da0:	20001770 	.word	0x20001770

10011da4 <SystemCoreClockUpdate>:
__weak void SystemCoreClockUpdate(void)
{
    uint32_t base_freq, div, clk_src;

    // Get the clock source and frequency
    clk_src = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL);
10011da4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
10011da8:	689a      	ldr	r2, [r3, #8]
10011daa:	f402 6260 	and.w	r2, r2, #3584	@ 0xe00
    switch (clk_src) {
10011dae:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
10011db2:	d020      	beq.n	10011df6 <SystemCoreClockUpdate+0x52>
10011db4:	d911      	bls.n	10011dda <SystemCoreClockUpdate+0x36>
10011db6:	f5b2 6f40 	cmp.w	r2, #3072	@ 0xc00
10011dba:	d017      	beq.n	10011dec <SystemCoreClockUpdate+0x48>
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_INRO:
        base_freq = INRO_FREQ;
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_IPO:
        base_freq = IPO_FREQ;
10011dbc:	4b0f      	ldr	r3, [pc, #60]	@ (10011dfc <SystemCoreClockUpdate+0x58>)
10011dbe:	4910      	ldr	r1, [pc, #64]	@ (10011e00 <SystemCoreClockUpdate+0x5c>)
10011dc0:	f5b2 6f60 	cmp.w	r2, #3584	@ 0xe00
10011dc4:	bf18      	it	ne
10011dc6:	460b      	movne	r3, r1
        // This code should never execute, however, initialize to safe value.
        base_freq = HIRC_FREQ;
        break;
    }

    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
10011dc8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000

    SystemCoreClock = base_freq >> div;
10011dcc:	490d      	ldr	r1, [pc, #52]	@ (10011e04 <SystemCoreClockUpdate+0x60>)
    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
10011dce:	6892      	ldr	r2, [r2, #8]
10011dd0:	f3c2 1282 	ubfx	r2, r2, #6, #3
    SystemCoreClock = base_freq >> div;
10011dd4:	40d3      	lsrs	r3, r2
10011dd6:	600b      	str	r3, [r1, #0]
}
10011dd8:	4770      	bx	lr
    switch (clk_src) {
10011dda:	b152      	cbz	r2, 10011df2 <SystemCoreClockUpdate+0x4e>
        base_freq = IPO_FREQ;
10011ddc:	4908      	ldr	r1, [pc, #32]	@ (10011e00 <SystemCoreClockUpdate+0x5c>)
10011dde:	f247 5330 	movw	r3, #30000	@ 0x7530
10011de2:	f5b2 6fc0 	cmp.w	r2, #1536	@ 0x600
10011de6:	bf18      	it	ne
10011de8:	460b      	movne	r3, r1
10011dea:	e7ed      	b.n	10011dc8 <SystemCoreClockUpdate+0x24>
        base_freq = ERTCO_FREQ;
10011dec:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
10011df0:	e7ea      	b.n	10011dc8 <SystemCoreClockUpdate+0x24>
        base_freq = ISO_FREQ;
10011df2:	4b05      	ldr	r3, [pc, #20]	@ (10011e08 <SystemCoreClockUpdate+0x64>)
10011df4:	e7e8      	b.n	10011dc8 <SystemCoreClockUpdate+0x24>
        base_freq = IBRO_FREQ;
10011df6:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
10011dfa:	e7e5      	b.n	10011dc8 <SystemCoreClockUpdate+0x24>
10011dfc:	047868c0 	.word	0x047868c0
10011e00:	05f5e100 	.word	0x05f5e100
10011e04:	20001768 	.word	0x20001768
10011e08:	03938700 	.word	0x03938700

10011e0c <PreInit>:
 */
__weak int PreInit(void)
{
    /* Do nothing */
    return 0;
}
10011e0c:	2000      	movs	r0, #0
10011e0e:	4770      	bx	lr

10011e10 <SystemInit>:
 * You may over-ride this function in your program by defining a custom 
 *  SystemInit(), but care should be taken to reproduce the initialization
 *  steps or a non-functional system may result.
 */
__weak void SystemInit(void)
{
10011e10:	b510      	push	{r4, lr}
    /* Configure the interrupt controller to use the application vector table in */
    /* the application space */
#if defined(__CC_ARM) || defined(__GNUC__)
    /* IAR sets the VTOR pointer incorrectly and causes stack corruption */
    SCB->VTOR = (uint32_t)__isr_vector;
10011e12:	4c0a      	ldr	r4, [pc, #40]	@ (10011e3c <SystemInit+0x2c>)
10011e14:	4b0a      	ldr	r3, [pc, #40]	@ (10011e40 <SystemInit+0x30>)
10011e16:	60a3      	str	r3, [r4, #8]
#endif /* __CC_ARM || __GNUC__ */

    /* Enable instruction cache */
    MXC_ICC_Enable(MXC_ICC0);
10011e18:	480a      	ldr	r0, [pc, #40]	@ (10011e44 <SystemInit+0x34>)
10011e1a:	f001 faed 	bl	100133f8 <MXC_ICC_Enable>

    /* Enable FPU on Cortex-M4, which occupies coprocessor slots 10 & 11 */
    /* Grant full access, per "Table B3-24 CPACR bit assignments". */
    /* DDI0403D "ARMv7-M Architecture Reference Manual" */
    SCB->CPACR |= SCB_CPACR_CP10_Msk | SCB_CPACR_CP11_Msk;
10011e1e:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
10011e22:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
10011e26:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
10011e2a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
10011e2e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();

    SystemCoreClockUpdate();
10011e32:	f7ff ffb7 	bl	10011da4 <SystemCoreClockUpdate>

    Board_Init();
10011e36:	f7ff fdd7 	bl	100119e8 <Board_Init>
}
10011e3a:	bd10      	pop	{r4, pc}
10011e3c:	e000ed00 	.word	0xe000ed00
10011e40:	1000e000 	.word	0x1000e000
10011e44:	4002a000 	.word	0x4002a000

10011e48 <MXC_DelayInit>:
    }
}

/* ************************************************************************** */
static void MXC_DelayInit(uint32_t us)
{
10011e48:	b538      	push	{r3, r4, r5, lr}
    uint32_t starttick, reload, ticks, lastticks;

    // Record the current tick value and clear the overflow flag
    starttick = SysTick->VAL;
10011e4a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000

    // Save the state of control register (and clear the overflow flag)
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
10011e4e:	4918      	ldr	r1, [pc, #96]	@ (10011eb0 <MXC_DelayInit+0x68>)
    starttick = SysTick->VAL;
10011e50:	699c      	ldr	r4, [r3, #24]
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
10011e52:	691a      	ldr	r2, [r3, #16]
10011e54:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
10011e58:	600a      	str	r2, [r1, #0]

    // If the SysTick is not running, configure and start it
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk)) {
10011e5a:	691a      	ldr	r2, [r3, #16]
10011e5c:	07d2      	lsls	r2, r2, #31
10011e5e:	d41f      	bmi.n	10011ea0 <MXC_DelayInit+0x58>
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
10011e60:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
10011e64:	2205      	movs	r2, #5
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
10011e66:	615c      	str	r4, [r3, #20]
        starttick = SysTick_VAL_CURRENT_Msk;
        reload = SysTick_LOAD_RELOAD_Msk + 1;
10011e68:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
10011e6c:	619c      	str	r4, [r3, #24]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
10011e6e:	611a      	str	r2, [r3, #16]
    } else {
        reload = SysTick->LOAD + 1; // get the current reload value
    }

    // Calculate the total number of ticks to delay
    ticks = (uint32_t)(((uint64_t)us * (uint64_t)SystemCoreClock) / 1000000);
10011e70:	4b10      	ldr	r3, [pc, #64]	@ (10011eb4 <MXC_DelayInit+0x6c>)
10011e72:	4a11      	ldr	r2, [pc, #68]	@ (10011eb8 <MXC_DelayInit+0x70>)
10011e74:	6819      	ldr	r1, [r3, #0]
10011e76:	2300      	movs	r3, #0
10011e78:	fba0 0101 	umull	r0, r1, r0, r1
10011e7c:	f00e ffd4 	bl	10020e28 <__aeabi_uldivmod>

    // How many overflows of the SysTick will occur
    overflows = ticks / reload;
10011e80:	4b0e      	ldr	r3, [pc, #56]	@ (10011ebc <MXC_DelayInit+0x74>)
10011e82:	fbb0 f2f5 	udiv	r2, r0, r5

    // How many remaining ticks after the last overflow
    lastticks = ticks % reload;
10011e86:	fb05 0012 	mls	r0, r5, r2, r0

    // Check if there will be another overflow due to the current value of the SysTick
    if (lastticks >= starttick) {
10011e8a:	4284      	cmp	r4, r0
    overflows = ticks / reload;
10011e8c:	601a      	str	r2, [r3, #0]
    if (lastticks >= starttick) {
10011e8e:	d80a      	bhi.n	10011ea6 <MXC_DelayInit+0x5e>
        overflows++;
10011e90:	681a      	ldr	r2, [r3, #0]
10011e92:	3201      	adds	r2, #1
10011e94:	601a      	str	r2, [r3, #0]
        endtick = reload - (lastticks - starttick);
10011e96:	4425      	add	r5, r4
10011e98:	4b09      	ldr	r3, [pc, #36]	@ (10011ec0 <MXC_DelayInit+0x78>)
10011e9a:	1a28      	subs	r0, r5, r0
10011e9c:	6018      	str	r0, [r3, #0]
    } else {
        endtick = starttick - lastticks;
    }
}
10011e9e:	bd38      	pop	{r3, r4, r5, pc}
        reload = SysTick->LOAD + 1; // get the current reload value
10011ea0:	695d      	ldr	r5, [r3, #20]
10011ea2:	3501      	adds	r5, #1
10011ea4:	e7e4      	b.n	10011e70 <MXC_DelayInit+0x28>
        endtick = starttick - lastticks;
10011ea6:	4b06      	ldr	r3, [pc, #24]	@ (10011ec0 <MXC_DelayInit+0x78>)
10011ea8:	1a20      	subs	r0, r4, r0
10011eaa:	6018      	str	r0, [r3, #0]
}
10011eac:	bd38      	pop	{r3, r4, r5, pc}
10011eae:	bf00      	nop
10011eb0:	20000cb0 	.word	0x20000cb0
10011eb4:	20001768 	.word	0x20001768
10011eb8:	000f4240 	.word	0x000f4240
10011ebc:	20000004 	.word	0x20000004
10011ec0:	20000cb4 	.word	0x20000cb4

10011ec4 <MXC_DelayAsync>:

/* ************************************************************************** */
int MXC_DelayAsync(uint32_t us, mxc_delay_complete_t callback)
{
10011ec4:	b510      	push	{r4, lr}
    cbFunc = callback;

    // Check if timeout currently ongoing
    if (overflows > 0) {
10011ec6:	4c0c      	ldr	r4, [pc, #48]	@ (10011ef8 <MXC_DelayAsync+0x34>)
    cbFunc = callback;
10011ec8:	4b0c      	ldr	r3, [pc, #48]	@ (10011efc <MXC_DelayAsync+0x38>)
    if (overflows > 0) {
10011eca:	6822      	ldr	r2, [r4, #0]
    cbFunc = callback;
10011ecc:	6019      	str	r1, [r3, #0]
    if (overflows > 0) {
10011ece:	2a00      	cmp	r2, #0
10011ed0:	dc0e      	bgt.n	10011ef0 <MXC_DelayAsync+0x2c>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
10011ed2:	b908      	cbnz	r0, 10011ed8 <MXC_DelayAsync+0x14>
        return E_NO_ERROR;
10011ed4:	2000      	movs	r0, #0
    if (overflows > 0) {
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
    }

    return E_NO_ERROR;
}
10011ed6:	bd10      	pop	{r4, pc}
    MXC_DelayInit(us);
10011ed8:	f7ff ffb6 	bl	10011e48 <MXC_DelayInit>
    if (overflows > 0) {
10011edc:	6823      	ldr	r3, [r4, #0]
10011ede:	2b00      	cmp	r3, #0
10011ee0:	ddf8      	ble.n	10011ed4 <MXC_DelayAsync+0x10>
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
10011ee2:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
10011ee6:	6913      	ldr	r3, [r2, #16]
10011ee8:	f043 0302 	orr.w	r3, r3, #2
10011eec:	6113      	str	r3, [r2, #16]
10011eee:	e7f1      	b.n	10011ed4 <MXC_DelayAsync+0x10>
        return E_BUSY;
10011ef0:	f06f 0005 	mvn.w	r0, #5
}
10011ef4:	bd10      	pop	{r4, pc}
10011ef6:	bf00      	nop
10011ef8:	20000004 	.word	0x20000004
10011efc:	20000cac 	.word	0x20000cac

10011f00 <MXC_DelayCheck>:

/* ************************************************************************** */
int MXC_DelayCheck(void)
{
10011f00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Check if timeout currently ongoing
    if (overflows < 0) {
10011f02:	4c17      	ldr	r4, [pc, #92]	@ (10011f60 <MXC_DelayCheck+0x60>)
10011f04:	6823      	ldr	r3, [r4, #0]
10011f06:	2b00      	cmp	r3, #0
10011f08:	db1e      	blt.n	10011f48 <MXC_DelayCheck+0x48>

        return E_NO_ERROR;
    }

    // Check the global values
    if ((overflows == 0) && (SysTick->VAL <= endtick)) {
10011f0a:	6826      	ldr	r6, [r4, #0]
10011f0c:	bb2e      	cbnz	r6, 10011f5a <MXC_DelayCheck+0x5a>
10011f0e:	4b15      	ldr	r3, [pc, #84]	@ (10011f64 <MXC_DelayCheck+0x64>)
10011f10:	f04f 25e0 	mov.w	r5, #3758153728	@ 0xe000e000
10011f14:	681b      	ldr	r3, [r3, #0]
10011f16:	69aa      	ldr	r2, [r5, #24]
10011f18:	429a      	cmp	r2, r3
10011f1a:	d81e      	bhi.n	10011f5a <MXC_DelayCheck+0x5a>
}

/* ************************************************************************** */
void MXC_DelayAbort(void)
{
    if (cbFunc != NULL) {
10011f1c:	4f12      	ldr	r7, [pc, #72]	@ (10011f68 <MXC_DelayCheck+0x68>)
10011f1e:	683b      	ldr	r3, [r7, #0]
10011f20:	b15b      	cbz	r3, 10011f3a <MXC_DelayCheck+0x3a>
        cbFunc(E_ABORT);
10011f22:	f06f 000f 	mvn.w	r0, #15
10011f26:	4798      	blx	r3
        cbFunc = NULL;
    }

    SysTick->CTRL = ctrl_save;
10011f28:	4b10      	ldr	r3, [pc, #64]	@ (10011f6c <MXC_DelayCheck+0x6c>)
        cbFunc = NULL;
10011f2a:	603e      	str	r6, [r7, #0]
    SysTick->CTRL = ctrl_save;
10011f2c:	681a      	ldr	r2, [r3, #0]
10011f2e:	612a      	str	r2, [r5, #16]
    overflows = -1;
10011f30:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10011f34:	6023      	str	r3, [r4, #0]
        return E_NO_ERROR;
10011f36:	2000      	movs	r0, #0
}
10011f38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SysTick->CTRL = ctrl_save;
10011f3a:	4a0c      	ldr	r2, [pc, #48]	@ (10011f6c <MXC_DelayCheck+0x6c>)
    overflows = -1;
10011f3c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
10011f40:	6812      	ldr	r2, [r2, #0]
10011f42:	612a      	str	r2, [r5, #16]
    overflows = -1;
10011f44:	6023      	str	r3, [r4, #0]
        if (cbFunc != NULL) {
10011f46:	e7f6      	b.n	10011f36 <MXC_DelayCheck+0x36>
        if (cbFunc != NULL) {
10011f48:	4c07      	ldr	r4, [pc, #28]	@ (10011f68 <MXC_DelayCheck+0x68>)
10011f4a:	6823      	ldr	r3, [r4, #0]
10011f4c:	2b00      	cmp	r3, #0
10011f4e:	d0f2      	beq.n	10011f36 <MXC_DelayCheck+0x36>
            cbFunc(E_NO_ERROR);
10011f50:	2000      	movs	r0, #0
10011f52:	4798      	blx	r3
            cbFunc = NULL;
10011f54:	2300      	movs	r3, #0
10011f56:	6023      	str	r3, [r4, #0]
10011f58:	e7ed      	b.n	10011f36 <MXC_DelayCheck+0x36>
    return E_BUSY;
10011f5a:	f06f 0005 	mvn.w	r0, #5
}
10011f5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10011f60:	20000004 	.word	0x20000004
10011f64:	20000cb4 	.word	0x20000cb4
10011f68:	20000cac 	.word	0x20000cac
10011f6c:	20000cb0 	.word	0x20000cb0

10011f70 <MXC_DelayAbort>:
{
10011f70:	b510      	push	{r4, lr}
    if (cbFunc != NULL) {
10011f72:	4c09      	ldr	r4, [pc, #36]	@ (10011f98 <MXC_DelayAbort+0x28>)
10011f74:	6823      	ldr	r3, [r4, #0]
10011f76:	b123      	cbz	r3, 10011f82 <MXC_DelayAbort+0x12>
        cbFunc(E_ABORT);
10011f78:	f06f 000f 	mvn.w	r0, #15
10011f7c:	4798      	blx	r3
        cbFunc = NULL;
10011f7e:	2300      	movs	r3, #0
10011f80:	6023      	str	r3, [r4, #0]
    SysTick->CTRL = ctrl_save;
10011f82:	4a06      	ldr	r2, [pc, #24]	@ (10011f9c <MXC_DelayAbort+0x2c>)
    overflows = -1;
10011f84:	4b06      	ldr	r3, [pc, #24]	@ (10011fa0 <MXC_DelayAbort+0x30>)
    SysTick->CTRL = ctrl_save;
10011f86:	6810      	ldr	r0, [r2, #0]
10011f88:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
    overflows = -1;
10011f8c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
10011f90:	6108      	str	r0, [r1, #16]
    overflows = -1;
10011f92:	601a      	str	r2, [r3, #0]
}
10011f94:	bd10      	pop	{r4, pc}
10011f96:	bf00      	nop
10011f98:	20000cac 	.word	0x20000cac
10011f9c:	20000cb0 	.word	0x20000cb0
10011fa0:	20000004 	.word	0x20000004

10011fa4 <MXC_Delay>:

/* ************************************************************************** */
int MXC_Delay(uint32_t us)
{
10011fa4:	b538      	push	{r3, r4, r5, lr}
    // Check if timeout currently ongoing
    if (overflows > 0) {
10011fa6:	4c18      	ldr	r4, [pc, #96]	@ (10012008 <MXC_Delay+0x64>)
10011fa8:	6822      	ldr	r2, [r4, #0]
10011faa:	2a00      	cmp	r2, #0
10011fac:	dc29      	bgt.n	10012002 <MXC_Delay+0x5e>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
10011fae:	b908      	cbnz	r0, 10011fb4 <MXC_Delay+0x10>
        return E_NO_ERROR;
10011fb0:	2000      	movs	r0, #0
    // Wait for the counter value
    while (SysTick->VAL > endtick) {}

    MXC_DelayAbort();
    return E_NO_ERROR;
}
10011fb2:	bd38      	pop	{r3, r4, r5, pc}
    MXC_DelayInit(us);
10011fb4:	f7ff ff48 	bl	10011e48 <MXC_DelayInit>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
10011fb8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    while (overflows > 0) {
10011fbc:	e002      	b.n	10011fc4 <MXC_Delay+0x20>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
10011fbe:	6913      	ldr	r3, [r2, #16]
10011fc0:	03db      	lsls	r3, r3, #15
10011fc2:	d41a      	bmi.n	10011ffa <MXC_Delay+0x56>
    while (overflows > 0) {
10011fc4:	6823      	ldr	r3, [r4, #0]
10011fc6:	2b00      	cmp	r3, #0
10011fc8:	dcf9      	bgt.n	10011fbe <MXC_Delay+0x1a>
    while (SysTick->VAL > endtick) {}
10011fca:	4b10      	ldr	r3, [pc, #64]	@ (1001200c <MXC_Delay+0x68>)
10011fcc:	681a      	ldr	r2, [r3, #0]
10011fce:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
10011fd2:	698b      	ldr	r3, [r1, #24]
10011fd4:	4293      	cmp	r3, r2
10011fd6:	d8fc      	bhi.n	10011fd2 <MXC_Delay+0x2e>
    if (cbFunc != NULL) {
10011fd8:	4d0d      	ldr	r5, [pc, #52]	@ (10012010 <MXC_Delay+0x6c>)
10011fda:	682b      	ldr	r3, [r5, #0]
10011fdc:	b123      	cbz	r3, 10011fe8 <MXC_Delay+0x44>
        cbFunc(E_ABORT);
10011fde:	f06f 000f 	mvn.w	r0, #15
10011fe2:	4798      	blx	r3
        cbFunc = NULL;
10011fe4:	2300      	movs	r3, #0
10011fe6:	602b      	str	r3, [r5, #0]
    SysTick->CTRL = ctrl_save;
10011fe8:	4b0a      	ldr	r3, [pc, #40]	@ (10012014 <MXC_Delay+0x70>)
10011fea:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
10011fee:	6819      	ldr	r1, [r3, #0]
10011ff0:	6111      	str	r1, [r2, #16]
    overflows = -1;
10011ff2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10011ff6:	6023      	str	r3, [r4, #0]
}
10011ff8:	e7da      	b.n	10011fb0 <MXC_Delay+0xc>
            overflows--;
10011ffa:	6823      	ldr	r3, [r4, #0]
10011ffc:	3b01      	subs	r3, #1
10011ffe:	6023      	str	r3, [r4, #0]
10012000:	e7e0      	b.n	10011fc4 <MXC_Delay+0x20>
        return E_BUSY;
10012002:	f06f 0005 	mvn.w	r0, #5
}
10012006:	bd38      	pop	{r3, r4, r5, pc}
10012008:	20000004 	.word	0x20000004
1001200c:	20000cb4 	.word	0x20000cb4
10012010:	20000cac 	.word	0x20000cac
10012014:	20000cb0 	.word	0x20000cb0

10012018 <MXC_NVIC_SetVector>:
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
    SCB->VTOR = (uint32_t)&ramVectorTable;
}

void MXC_NVIC_SetVector(IRQn_Type irqn, void (*irq_handler)(void))
{
10012018:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int index = irqn + 16; /* offset for externals */

    /* If not copied, do copy */
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1001201a:	4e0f      	ldr	r6, [pc, #60]	@ (10012058 <MXC_NVIC_SetVector+0x40>)
1001201c:	4b0f      	ldr	r3, [pc, #60]	@ (1001205c <MXC_NVIC_SetVector+0x44>)
1001201e:	68b2      	ldr	r2, [r6, #8]
10012020:	429a      	cmp	r2, r3
{
10012022:	4604      	mov	r4, r0
10012024:	460d      	mov	r5, r1
    int index = irqn + 16; /* offset for externals */
10012026:	f100 0710 	add.w	r7, r0, #16
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1001202a:	d007      	beq.n	1001203c <MXC_NVIC_SetVector+0x24>
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
1001202c:	4618      	mov	r0, r3
1001202e:	490c      	ldr	r1, [pc, #48]	@ (10012060 <MXC_NVIC_SetVector+0x48>)
10012030:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
10012034:	f006 fa54 	bl	100184e0 <memcpy>
10012038:	4603      	mov	r3, r0
    SCB->VTOR = (uint32_t)&ramVectorTable;
1001203a:	60b0      	str	r0, [r6, #8]
  if ((int32_t)(IRQn) >= 0)
1001203c:	2c00      	cmp	r4, #0
        NVIC_SetRAM();
    }

    ramVectorTable[index] = irq_handler;
1001203e:	f843 5027 	str.w	r5, [r3, r7, lsl #2]
10012042:	db07      	blt.n	10012054 <MXC_NVIC_SetVector+0x3c>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
10012044:	4a07      	ldr	r2, [pc, #28]	@ (10012064 <MXC_NVIC_SetVector+0x4c>)
10012046:	0961      	lsrs	r1, r4, #5
10012048:	2301      	movs	r3, #1
1001204a:	f004 041f 	and.w	r4, r4, #31
1001204e:	40a3      	lsls	r3, r4
10012050:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
    NVIC_EnableIRQ(irqn);
}
10012054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10012056:	bf00      	nop
10012058:	e000ed00 	.word	0xe000ed00
1001205c:	20000e00 	.word	0x20000e00
10012060:	1000e000 	.word	0x1000e000
10012064:	e000e100 	.word	0xe000e100

10012068 <MXC_SYS_ClockDisable>:

/* ************************************************************************** */
void MXC_SYS_ClockDisable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
10012068:	283f      	cmp	r0, #63	@ 0x3f
1001206a:	d908      	bls.n	1001207e <MXC_SYS_ClockDisable+0x16>
        clock -= 64;
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1001206c:	4a0d      	ldr	r2, [pc, #52]	@ (100120a4 <MXC_SYS_ClockDisable+0x3c>)
        clock -= 64;
1001206e:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis |= (0x1 << clock);
10012070:	68d1      	ldr	r1, [r2, #12]
10012072:	b2c0      	uxtb	r0, r0
10012074:	2301      	movs	r3, #1
10012076:	4083      	lsls	r3, r0
10012078:	430b      	orrs	r3, r1
1001207a:	60d3      	str	r3, [r2, #12]
1001207c:	4770      	bx	lr
    } else if (clock > 31) {
1001207e:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 |= (0x1 << clock);
10012080:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    } else if (clock > 31) {
10012084:	d907      	bls.n	10012096 <MXC_SYS_ClockDisable+0x2e>
        clock -= 32;
10012086:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 |= (0x1 << clock);
10012088:	6c91      	ldr	r1, [r2, #72]	@ 0x48
1001208a:	b2c0      	uxtb	r0, r0
1001208c:	2301      	movs	r3, #1
1001208e:	4083      	lsls	r3, r0
10012090:	430b      	orrs	r3, r1
10012092:	6493      	str	r3, [r2, #72]	@ 0x48
10012094:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 |= (0x1 << clock);
10012096:	6a51      	ldr	r1, [r2, #36]	@ 0x24
10012098:	2301      	movs	r3, #1
1001209a:	4083      	lsls	r3, r0
1001209c:	430b      	orrs	r3, r1
1001209e:	6253      	str	r3, [r2, #36]	@ 0x24
    }
}
100120a0:	4770      	bx	lr
100120a2:	bf00      	nop
100120a4:	40080000 	.word	0x40080000

100120a8 <MXC_SYS_ClockEnable>:

/* ************************************************************************** */
void MXC_SYS_ClockEnable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
100120a8:	283f      	cmp	r0, #63	@ 0x3f
100120aa:	d909      	bls.n	100120c0 <MXC_SYS_ClockEnable+0x18>
        clock -= 64;
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
100120ac:	490e      	ldr	r1, [pc, #56]	@ (100120e8 <MXC_SYS_ClockEnable+0x40>)
        clock -= 64;
100120ae:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
100120b0:	68cb      	ldr	r3, [r1, #12]
100120b2:	b2c0      	uxtb	r0, r0
100120b4:	2201      	movs	r2, #1
100120b6:	4082      	lsls	r2, r0
100120b8:	ea23 0302 	bic.w	r3, r3, r2
100120bc:	60cb      	str	r3, [r1, #12]
100120be:	4770      	bx	lr
    } else if (clock > 31) {
100120c0:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
100120c2:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
    } else if (clock > 31) {
100120c6:	d908      	bls.n	100120da <MXC_SYS_ClockEnable+0x32>
        clock -= 32;
100120c8:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
100120ca:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
100120cc:	b2c0      	uxtb	r0, r0
100120ce:	2201      	movs	r2, #1
100120d0:	4082      	lsls	r2, r0
100120d2:	ea23 0302 	bic.w	r3, r3, r2
100120d6:	648b      	str	r3, [r1, #72]	@ 0x48
100120d8:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 &= ~(0x1 << clock);
100120da:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
100120dc:	2201      	movs	r2, #1
100120de:	4082      	lsls	r2, r0
100120e0:	ea23 0302 	bic.w	r3, r3, r2
100120e4:	624b      	str	r3, [r1, #36]	@ 0x24
    }
}
100120e6:	4770      	bx	lr
100120e8:	40080000 	.word	0x40080000

100120ec <MXC_SYS_ClockSourceEnable>:
    }
}

/******************************************************************************/
int MXC_SYS_ClockSourceEnable(mxc_sys_system_clock_t clock)
{
100120ec:	b510      	push	{r4, lr}
    switch (clock) {
100120ee:	2807      	cmp	r0, #7
100120f0:	d80a      	bhi.n	10012108 <MXC_SYS_ClockSourceEnable+0x1c>
100120f2:	e8df f000 	tbb	[pc, r0]
100120f6:	090c      	.short	0x090c
100120f8:	47332309 	.word	0x47332309
100120fc:	045b      	.short	0x045b

    default:
        return E_BAD_PARAM;
        break;
    }
}
100120fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return MXC_GPIO_Config(&gpio_cfg_extclk);
10012102:	4836      	ldr	r0, [pc, #216]	@ (100121dc <MXC_SYS_ClockSourceEnable+0xf0>)
10012104:	f000 b906 	b.w	10012314 <MXC_GPIO_Config>
    switch (clock) {
10012108:	f06f 0002 	mvn.w	r0, #2
}
1001210c:	bd10      	pop	{r4, pc}
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1001210e:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    // We do not have access to a system tick in the RV core.
    while (!(MXC_GCR->clkctrl & ready)) {}
    return E_NO_ERROR;
#else
    // Start timeout, wait for ready
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10012112:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
10012114:	68a3      	ldr	r3, [r4, #8]
10012116:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
1001211a:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001211c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
10012120:	f7ff fed0 	bl	10011ec4 <MXC_DelayAsync>
10012124:	e003      	b.n	1001212e <MXC_SYS_ClockSourceEnable+0x42>
    do {
        if (MXC_GCR->clkctrl & ready) {
            MXC_DelayAbort();
            return E_NO_ERROR;
        }
    } while (MXC_DelayCheck() == E_BUSY);
10012126:	f7ff feeb 	bl	10011f00 <MXC_DelayCheck>
1001212a:	3006      	adds	r0, #6
1001212c:	d152      	bne.n	100121d4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001212e:	68a3      	ldr	r3, [r4, #8]
10012130:	0159      	lsls	r1, r3, #5
10012132:	d5f8      	bpl.n	10012126 <MXC_SYS_ClockSourceEnable+0x3a>
            MXC_DelayAbort();
10012134:	f7ff ff1c 	bl	10011f70 <MXC_DelayAbort>
            return E_NO_ERROR;
10012138:	2000      	movs	r0, #0
}
1001213a:	bd10      	pop	{r4, pc}
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001213c:	2100      	movs	r1, #0
1001213e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
10012142:	f7ff febf 	bl	10011ec4 <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
10012146:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1001214a:	e003      	b.n	10012154 <MXC_SYS_ClockSourceEnable+0x68>
    } while (MXC_DelayCheck() == E_BUSY);
1001214c:	f7ff fed8 	bl	10011f00 <MXC_DelayCheck>
10012150:	3006      	adds	r0, #6
10012152:	d13f      	bne.n	100121d4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
10012154:	68a3      	ldr	r3, [r4, #8]
10012156:	009a      	lsls	r2, r3, #2
10012158:	d4ec      	bmi.n	10012134 <MXC_SYS_ClockSourceEnable+0x48>
1001215a:	e7f7      	b.n	1001214c <MXC_SYS_ClockSourceEnable+0x60>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1001215c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10012160:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
10012162:	68a3      	ldr	r3, [r4, #8]
10012164:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
10012168:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001216a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001216e:	f7ff fea9 	bl	10011ec4 <MXC_DelayAsync>
10012172:	e003      	b.n	1001217c <MXC_SYS_ClockSourceEnable+0x90>
    } while (MXC_DelayCheck() == E_BUSY);
10012174:	f7ff fec4 	bl	10011f00 <MXC_DelayCheck>
10012178:	3006      	adds	r0, #6
1001217a:	d12b      	bne.n	100121d4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001217c:	68a3      	ldr	r3, [r4, #8]
1001217e:	011b      	lsls	r3, r3, #4
10012180:	d5f8      	bpl.n	10012174 <MXC_SYS_ClockSourceEnable+0x88>
10012182:	e7d7      	b.n	10012134 <MXC_SYS_ClockSourceEnable+0x48>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
10012184:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10012188:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1001218a:	68a3      	ldr	r3, [r4, #8]
1001218c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
10012190:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10012192:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
10012196:	f7ff fe95 	bl	10011ec4 <MXC_DelayAsync>
1001219a:	e003      	b.n	100121a4 <MXC_SYS_ClockSourceEnable+0xb8>
    } while (MXC_DelayCheck() == E_BUSY);
1001219c:	f7ff feb0 	bl	10011f00 <MXC_DelayCheck>
100121a0:	3006      	adds	r0, #6
100121a2:	d117      	bne.n	100121d4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
100121a4:	68a3      	ldr	r3, [r4, #8]
100121a6:	00d8      	lsls	r0, r3, #3
100121a8:	d4c4      	bmi.n	10012134 <MXC_SYS_ClockSourceEnable+0x48>
100121aa:	e7f7      	b.n	1001219c <MXC_SYS_ClockSourceEnable+0xb0>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
100121ac:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100121b0:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
100121b2:	68a3      	ldr	r3, [r4, #8]
100121b4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
100121b8:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100121ba:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
100121be:	f7ff fe81 	bl	10011ec4 <MXC_DelayAsync>
100121c2:	e003      	b.n	100121cc <MXC_SYS_ClockSourceEnable+0xe0>
    } while (MXC_DelayCheck() == E_BUSY);
100121c4:	f7ff fe9c 	bl	10011f00 <MXC_DelayCheck>
100121c8:	3006      	adds	r0, #6
100121ca:	d103      	bne.n	100121d4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
100121cc:	68a3      	ldr	r3, [r4, #8]
100121ce:	019b      	lsls	r3, r3, #6
100121d0:	d4b0      	bmi.n	10012134 <MXC_SYS_ClockSourceEnable+0x48>
100121d2:	e7f7      	b.n	100121c4 <MXC_SYS_ClockSourceEnable+0xd8>

    return E_TIME_OUT;
100121d4:	f06f 0009 	mvn.w	r0, #9
}
100121d8:	bd10      	pop	{r4, pc}
100121da:	bf00      	nop
100121dc:	100237bc 	.word	0x100237bc

100121e0 <MXC_SYS_Reset_Periph>:

/* ************************************************************************** */
void MXC_SYS_Reset_Periph(mxc_sys_reset_t reset)
{
    /* The mxc_sys_reset_t enum uses enum values that are the offset by 32 and 64 for the rst register. */
    if (reset > 63) {
100121e0:	283f      	cmp	r0, #63	@ 0x3f
100121e2:	d909      	bls.n	100121f8 <MXC_SYS_Reset_Periph+0x18>
        reset -= 64;
100121e4:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->rst = (0x1 << reset);
100121e6:	490f      	ldr	r1, [pc, #60]	@ (10012224 <MXC_SYS_Reset_Periph+0x44>)
100121e8:	b2c0      	uxtb	r0, r0
100121ea:	2201      	movs	r2, #1
100121ec:	4082      	lsls	r2, r0
100121ee:	608a      	str	r2, [r1, #8]
        while (MXC_LPGCR->rst & (0x1 << reset)) {}
100121f0:	688b      	ldr	r3, [r1, #8]
100121f2:	421a      	tst	r2, r3
100121f4:	d1fc      	bne.n	100121f0 <MXC_SYS_Reset_Periph+0x10>
100121f6:	4770      	bx	lr
    } else if (reset > 31) {
100121f8:	281f      	cmp	r0, #31
100121fa:	d90a      	bls.n	10012212 <MXC_SYS_Reset_Periph+0x32>
        reset -= 32;
100121fc:	3820      	subs	r0, #32
        MXC_GCR->rst1 = (0x1 << reset);
100121fe:	b2c0      	uxtb	r0, r0
10012200:	2201      	movs	r2, #1
10012202:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
10012206:	4082      	lsls	r2, r0
10012208:	644a      	str	r2, [r1, #68]	@ 0x44
        while (MXC_GCR->rst1 & (0x1 << reset)) {}
1001220a:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
1001220c:	421a      	tst	r2, r3
1001220e:	d1fc      	bne.n	1001220a <MXC_SYS_Reset_Periph+0x2a>
10012210:	4770      	bx	lr
    } else {
        MXC_GCR->rst0 = (0x1 << reset);
10012212:	2201      	movs	r2, #1
10012214:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
10012218:	4082      	lsls	r2, r0
1001221a:	604a      	str	r2, [r1, #4]
        while (MXC_GCR->rst0 & (0x1 << reset)) {}
1001221c:	684b      	ldr	r3, [r1, #4]
1001221e:	421a      	tst	r2, r3
10012220:	d1fc      	bne.n	1001221c <MXC_SYS_Reset_Periph+0x3c>
    }
}
10012222:	4770      	bx	lr
10012224:	40080000 	.word	0x40080000

10012228 <MXC_FLC_Write32>:
    uint32_t addr, aligned;
    int err;
    mxc_flc_regs_t *flc = NULL;

    // Address checked if it is byte addressable
    if (address & 0x3) {
10012228:	0782      	lsls	r2, r0, #30
1001222a:	d133      	bne.n	10012294 <MXC_FLC_Write32+0x6c>
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
1001222c:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
10012230:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
10012234:	4684      	mov	ip, r0
10012236:	460a      	mov	r2, r1
10012238:	d329      	bcc.n	1001228e <MXC_FLC_Write32+0x66>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
1001223a:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
1001223e:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
10012242:	d227      	bcs.n	10012294 <MXC_FLC_Write32+0x6c>
        return E_BAD_PARAM;
    }

    // Align address to 128-bit word
    aligned = address & 0xfffffff0;
10012244:	f020 030f 	bic.w	r3, r0, #15
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
10012248:	f1a3 5384 	sub.w	r3, r3, #276824064	@ 0x10800000
1001224c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
10012250:	d220      	bcs.n	10012294 <MXC_FLC_Write32+0x6c>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
10012252:	f643 73f0 	movw	r3, #16368	@ 0x3ff0
10012256:	4003      	ands	r3, r0
10012258:	f503 2300 	add.w	r3, r3, #524288	@ 0x80000
{
1001225c:	b500      	push	{lr}

    if ((err = MXC_FLC_ME17_GetPhysicalAddress(aligned, &addr)) < E_NO_ERROR) {
        return err;
    }

    err = MXC_FLC_RevA_Write32Using128((mxc_flc_reva_regs_t *)flc, address, data, addr);
1001225e:	480f      	ldr	r0, [pc, #60]	@ (1001229c <MXC_FLC_Write32+0x74>)
{
10012260:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_Write32Using128((mxc_flc_reva_regs_t *)flc, address, data, addr);
10012262:	4661      	mov	r1, ip
10012264:	f018 fb6c 	bl	1002a940 <__MXC_FLC_RevA_Write32Using128_veneer>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
10012268:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
1001226c:	6813      	ldr	r3, [r2, #0]
1001226e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012272:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
10012274:	6813      	ldr	r3, [r2, #0]
10012276:	065b      	lsls	r3, r3, #25
10012278:	d4fc      	bmi.n	10012274 <MXC_FLC_Write32+0x4c>
    line = *line_addr;
1001227a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
1001227e:	4b08      	ldr	r3, [pc, #32]	@ (100122a0 <MXC_FLC_Write32+0x78>)
    line = *line_addr;
10012280:	6812      	ldr	r2, [r2, #0]
10012282:	9201      	str	r2, [sp, #4]
    line = *line_addr;
10012284:	681b      	ldr	r3, [r3, #0]
10012286:	9301      	str	r3, [sp, #4]

    // Flush the cache
    MXC_FLC_ME17_Flash_Operation();

    return err;
}
10012288:	b003      	add	sp, #12
1001228a:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
1001228e:	4b05      	ldr	r3, [pc, #20]	@ (100122a4 <MXC_FLC_Write32+0x7c>)
10012290:	4003      	ands	r3, r0
10012292:	e7e3      	b.n	1001225c <MXC_FLC_Write32+0x34>
        return E_BAD_PARAM;
10012294:	f06f 0002 	mvn.w	r0, #2
}
10012298:	4770      	bx	lr
1001229a:	bf00      	nop
1001229c:	40029000 	.word	0x40029000
100122a0:	10002000 	.word	0x10002000
100122a4:	0007fff0 	.word	0x0007fff0

100122a8 <MXC_FLC_Write>:
}

//******************************************************************************
int MXC_FLC_Write(uint32_t address, uint32_t length, uint32_t *buffer)
{
    return MXC_FLC_Com_Write(address, length, buffer);
100122a8:	f018 bb46 	b.w	1002a938 <__MXC_FLC_Com_Write_veneer>

100122ac <MXC_FLC_Read>:
}

//******************************************************************************
void MXC_FLC_Read(int address, void *buffer, int len)
{
    MXC_FLC_Com_Read(address, buffer, len);
100122ac:	f018 bb50 	b.w	1002a950 <__MXC_FLC_Com_Read_veneer>

100122b0 <MXC_FLC_EnableInt>:
}

//******************************************************************************
int MXC_FLC_EnableInt(uint32_t flags)
{
    return MXC_FLC_RevA_EnableInt(flags);
100122b0:	f000 b800 	b.w	100122b4 <MXC_FLC_RevA_EnableInt>

100122b4 <MXC_FLC_RevA_EnableInt>:
//******************************************************************************
int MXC_FLC_RevA_EnableInt(uint32_t mask)
{
    mask &= (MXC_F_FLC_REVA_INTR_DONEIE | MXC_F_FLC_REVA_INTR_AFIE);

    if (!mask) {
100122b4:	f410 7340 	ands.w	r3, r0, #768	@ 0x300
100122b8:	d006      	beq.n	100122c8 <MXC_FLC_RevA_EnableInt+0x14>
        /* No bits set? Wasn't something we can enable. */
        return E_BAD_PARAM;
    }

    /* Apply enables and write back, preserving the flags */
    flc_int->intr |= mask;
100122ba:	4a05      	ldr	r2, [pc, #20]	@ (100122d0 <MXC_FLC_RevA_EnableInt+0x1c>)
100122bc:	6811      	ldr	r1, [r2, #0]
100122be:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
100122c0:	4313      	orrs	r3, r2

    return E_NO_ERROR;
100122c2:	2000      	movs	r0, #0
    flc_int->intr |= mask;
100122c4:	624b      	str	r3, [r1, #36]	@ 0x24
    return E_NO_ERROR;
100122c6:	4770      	bx	lr
        return E_BAD_PARAM;
100122c8:	f06f 0002 	mvn.w	r0, #2
}
100122cc:	4770      	bx	lr
100122ce:	bf00      	nop
100122d0:	20000008 	.word	0x20000008

100122d4 <MXC_GPIO_Init>:
/* **** Globals **** */

/* **** Functions **** */
int MXC_GPIO_Init(uint32_t portmask)
{
    if (portmask & 0x1) {
100122d4:	07c1      	lsls	r1, r0, #31
{
100122d6:	b510      	push	{r4, lr}
100122d8:	4604      	mov	r4, r0
    if (portmask & 0x1) {
100122da:	d408      	bmi.n	100122ee <MXC_GPIO_Init+0x1a>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
    }

    if (portmask & 0x2) {
100122dc:	07a2      	lsls	r2, r4, #30
100122de:	d40b      	bmi.n	100122f8 <MXC_GPIO_Init+0x24>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
    }

    if (portmask & 0x4) {
100122e0:	0763      	lsls	r3, r4, #29
100122e2:	d40e      	bmi.n	10012302 <MXC_GPIO_Init+0x2e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
    }

    return MXC_GPIO_Common_Init(portmask);
100122e4:	4620      	mov	r0, r4
}
100122e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
100122ea:	f001 bbbd 	b.w	10013a68 <MXC_GPIO_Common_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
100122ee:	2000      	movs	r0, #0
100122f0:	f7ff feda 	bl	100120a8 <MXC_SYS_ClockEnable>
    if (portmask & 0x2) {
100122f4:	07a2      	lsls	r2, r4, #30
100122f6:	d5f3      	bpl.n	100122e0 <MXC_GPIO_Init+0xc>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
100122f8:	2001      	movs	r0, #1
100122fa:	f7ff fed5 	bl	100120a8 <MXC_SYS_ClockEnable>
    if (portmask & 0x4) {
100122fe:	0763      	lsls	r3, r4, #29
10012300:	d5f0      	bpl.n	100122e4 <MXC_GPIO_Init+0x10>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
10012302:	2040      	movs	r0, #64	@ 0x40
10012304:	f7ff fed0 	bl	100120a8 <MXC_SYS_ClockEnable>
    return MXC_GPIO_Common_Init(portmask);
10012308:	4620      	mov	r0, r4
}
1001230a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1001230e:	f001 bbab 	b.w	10013a68 <MXC_GPIO_Common_Init>
10012312:	bf00      	nop

10012314 <MXC_GPIO_Config>:

    return E_NO_ERROR;
}

int MXC_GPIO_Config(const mxc_gpio_cfg_t *cfg)
{
10012314:	b570      	push	{r4, r5, r6, lr}
    int port, error;
    mxc_gpio_regs_t *gpio = cfg->port;

    port = MXC_GPIO_GET_IDX(cfg->port);
10012316:	4b7f      	ldr	r3, [pc, #508]	@ (10012514 <MXC_GPIO_Config+0x200>)
    mxc_gpio_regs_t *gpio = cfg->port;
10012318:	6805      	ldr	r5, [r0, #0]
    port = MXC_GPIO_GET_IDX(cfg->port);
1001231a:	429d      	cmp	r5, r3
{
1001231c:	4604      	mov	r4, r0
    port = MXC_GPIO_GET_IDX(cfg->port);
1001231e:	d037      	beq.n	10012390 <MXC_GPIO_Config+0x7c>
10012320:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012324:	429d      	cmp	r5, r3
10012326:	d020      	beq.n	1001236a <MXC_GPIO_Config+0x56>
10012328:	f503 23ee 	add.w	r3, r3, #487424	@ 0x77000
1001232c:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
10012330:	429d      	cmp	r5, r3
10012332:	d07f      	beq.n	10012434 <MXC_GPIO_Config+0x120>
10012334:	4878      	ldr	r0, [pc, #480]	@ (10012518 <MXC_GPIO_Config+0x204>)
10012336:	1a28      	subs	r0, r5, r0
10012338:	fab0 f080 	clz	r0, r0
1001233c:	0940      	lsrs	r0, r0, #5
1001233e:	00c0      	lsls	r0, r0, #3

    MXC_GPIO_Init(1 << port);
10012340:	f7ff ffc8 	bl	100122d4 <MXC_GPIO_Init>

    if (cfg->port == MXC_GPIO3) {
10012344:	4b74      	ldr	r3, [pc, #464]	@ (10012518 <MXC_GPIO_Config+0x204>)
10012346:	6822      	ldr	r2, [r4, #0]
10012348:	429a      	cmp	r2, r3
1001234a:	d015      	beq.n	10012378 <MXC_GPIO_Config+0x64>
        default:
            return E_NOT_SUPPORTED;
        }
    } else {
        // Configure alternate function
        error = MXC_GPIO_RevA_SetAF((mxc_gpio_reva_regs_t *)gpio, cfg->func, cfg->mask);
1001234c:	6862      	ldr	r2, [r4, #4]
1001234e:	7a21      	ldrb	r1, [r4, #8]
10012350:	4628      	mov	r0, r5
10012352:	f000 f94b 	bl	100125ec <MXC_GPIO_RevA_SetAF>
        if (error != E_NO_ERROR) {
10012356:	b9d0      	cbnz	r0, 1001238e <MXC_GPIO_Config+0x7a>
            return error;
        }

        // Configure the pad
        switch (cfg->pad) {
10012358:	7a63      	ldrb	r3, [r4, #9]
1001235a:	2b04      	cmp	r3, #4
1001235c:	f200 80d7 	bhi.w	1001250e <MXC_GPIO_Config+0x1fa>
10012360:	e8df f003 	tbb	[pc, r3]
10012364:	2f3e4c5a 	.word	0x2f3e4c5a
10012368:	18          	.byte	0x18
10012369:	00          	.byte	0x00
1001236a:	2002      	movs	r0, #2
    MXC_GPIO_Init(1 << port);
1001236c:	f7ff ffb2 	bl	100122d4 <MXC_GPIO_Init>
    if (cfg->port == MXC_GPIO3) {
10012370:	4b69      	ldr	r3, [pc, #420]	@ (10012518 <MXC_GPIO_Config+0x204>)
10012372:	6822      	ldr	r2, [r4, #0]
10012374:	429a      	cmp	r2, r3
10012376:	d1e9      	bne.n	1001234c <MXC_GPIO_Config+0x38>
        switch (cfg->func) {
10012378:	7a23      	ldrb	r3, [r4, #8]
1001237a:	2b01      	cmp	r3, #1
1001237c:	f000 80bb 	beq.w	100124f6 <MXC_GPIO_Config+0x1e2>
10012380:	2b02      	cmp	r3, #2
10012382:	f000 80a5 	beq.w	100124d0 <MXC_GPIO_Config+0x1bc>
10012386:	2b00      	cmp	r3, #0
10012388:	d056      	beq.n	10012438 <MXC_GPIO_Config+0x124>
            return E_NOT_SUPPORTED;
1001238a:	f06f 0010 	mvn.w	r0, #16
        }
    }

    // Configure the vssel
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
}
1001238e:	bd70      	pop	{r4, r5, r6, pc}
10012390:	2001      	movs	r0, #1
10012392:	e7d5      	b.n	10012340 <MXC_GPIO_Config+0x2c>
            gpio->padctrl0 &= ~cfg->mask;
10012394:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
10012396:	6862      	ldr	r2, [r4, #4]
10012398:	ea23 0302 	bic.w	r3, r3, r2
1001239c:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1001239e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100123a0:	4313      	orrs	r3, r2
100123a2:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
100123a4:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
100123a8:	ea23 0302 	bic.w	r3, r3, r2
100123ac:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
}

/* ************************************************************************** */
int MXC_GPIO_SetVSSEL(mxc_gpio_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    if (port == MXC_GPIO3) {
100123b0:	4b59      	ldr	r3, [pc, #356]	@ (10012518 <MXC_GPIO_Config+0x204>)
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
100123b2:	7aa1      	ldrb	r1, [r4, #10]
    if (port == MXC_GPIO3) {
100123b4:	429d      	cmp	r5, r3
100123b6:	d039      	beq.n	1001242c <MXC_GPIO_Config+0x118>
        }

        return E_NO_ERROR;
    }

    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
100123b8:	4628      	mov	r0, r5
}
100123ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
100123be:	f000 b8ff 	b.w	100125c0 <MXC_GPIO_RevA_SetVSSEL>
            gpio->padctrl0 |= cfg->mask;
100123c2:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100123c4:	6862      	ldr	r2, [r4, #4]
100123c6:	4313      	orrs	r3, r2
100123c8:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
100123ca:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100123cc:	ea23 0302 	bic.w	r3, r3, r2
100123d0:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
100123d2:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
100123d6:	ea23 0302 	bic.w	r3, r3, r2
100123da:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
100123de:	e7e7      	b.n	100123b0 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
100123e0:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100123e2:	6862      	ldr	r2, [r4, #4]
100123e4:	ea23 0302 	bic.w	r3, r3, r2
100123e8:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
100123ea:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100123ec:	4313      	orrs	r3, r2
100123ee:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
100123f0:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
100123f4:	4313      	orrs	r3, r2
100123f6:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
100123fa:	e7d9      	b.n	100123b0 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 |= cfg->mask;
100123fc:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100123fe:	6862      	ldr	r2, [r4, #4]
10012400:	4313      	orrs	r3, r2
10012402:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10012404:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10012406:	ea23 0302 	bic.w	r3, r3, r2
1001240a:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1001240c:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10012410:	4313      	orrs	r3, r2
10012412:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
10012416:	e7cb      	b.n	100123b0 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
10012418:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1001241a:	6862      	ldr	r2, [r4, #4]
1001241c:	ea23 0302 	bic.w	r3, r3, r2
10012420:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10012422:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10012424:	ea23 0302 	bic.w	r3, r3, r2
10012428:	666b      	str	r3, [r5, #100]	@ 0x64
            break;
1001242a:	e7c1      	b.n	100123b0 <MXC_GPIO_Config+0x9c>
        if (vssel == MXC_GPIO_VSSEL_VDDIO) {
1001242c:	2900      	cmp	r1, #0
1001242e:	d0ac      	beq.n	1001238a <MXC_GPIO_Config+0x76>
        return E_NO_ERROR;
10012430:	2000      	movs	r0, #0
}
10012432:	bd70      	pop	{r4, r5, r6, pc}
10012434:	2004      	movs	r0, #4
10012436:	e783      	b.n	10012340 <MXC_GPIO_Config+0x2c>
            MXC_MCR->gpio3_ctrl &= ~(P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask));
10012438:	6863      	ldr	r3, [r4, #4]
1001243a:	4938      	ldr	r1, [pc, #224]	@ (1001251c <MXC_GPIO_Config+0x208>)
1001243c:	0058      	lsls	r0, r3, #1
1001243e:	011a      	lsls	r2, r3, #4
10012440:	6a0e      	ldr	r6, [r1, #32]
10012442:	f000 0002 	and.w	r0, r0, #2
10012446:	f002 0220 	and.w	r2, r2, #32
1001244a:	4302      	orrs	r2, r0
1001244c:	ea26 0202 	bic.w	r2, r6, r2
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
10012450:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen &= ~(SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask));
10012452:	688a      	ldr	r2, [r1, #8]
10012454:	f3c3 0340 	ubfx	r3, r3, #1, #1
10012458:	4303      	orrs	r3, r0
1001245a:	ea22 0303 	bic.w	r3, r2, r3
1001245e:	608b      	str	r3, [r1, #8]
        switch (cfg->pad) {
10012460:	7a63      	ldrb	r3, [r4, #9]
10012462:	2b04      	cmp	r3, #4
10012464:	d891      	bhi.n	1001238a <MXC_GPIO_Config+0x76>
10012466:	e8df f003 	tbb	[pc, r3]
1001246a:	1b26      	.short	0x1b26
1001246c:	1b03      	.short	0x1b03
1001246e:	03          	.byte	0x03
1001246f:	00          	.byte	0x00
            MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask));
10012470:	6862      	ldr	r2, [r4, #4]
10012472:	492a      	ldr	r1, [pc, #168]	@ (1001251c <MXC_GPIO_Config+0x208>)
10012474:	00d3      	lsls	r3, r2, #3
10012476:	6a08      	ldr	r0, [r1, #32]
10012478:	f003 0310 	and.w	r3, r3, #16
1001247c:	f002 0601 	and.w	r6, r2, #1
10012480:	4333      	orrs	r3, r6
10012482:	ea20 0303 	bic.w	r3, r0, r3
10012486:	620b      	str	r3, [r1, #32]
            MXC_MCR->gpio3_ctrl &= ~(P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask));
10012488:	0156      	lsls	r6, r2, #5
1001248a:	0093      	lsls	r3, r2, #2
1001248c:	6a08      	ldr	r0, [r1, #32]
1001248e:	f003 0304 	and.w	r3, r3, #4
10012492:	f006 0640 	and.w	r6, r6, #64	@ 0x40
10012496:	4333      	orrs	r3, r6
10012498:	ea20 0303 	bic.w	r3, r0, r3
1001249c:	620b      	str	r3, [r1, #32]
            break;
1001249e:	e787      	b.n	100123b0 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask);
100124a0:	491e      	ldr	r1, [pc, #120]	@ (1001251c <MXC_GPIO_Config+0x208>)
100124a2:	6862      	ldr	r2, [r4, #4]
100124a4:	6a0e      	ldr	r6, [r1, #32]
100124a6:	00d3      	lsls	r3, r2, #3
100124a8:	f002 0001 	and.w	r0, r2, #1
100124ac:	f003 0310 	and.w	r3, r3, #16
100124b0:	4330      	orrs	r0, r6
100124b2:	4303      	orrs	r3, r0
100124b4:	e7e7      	b.n	10012486 <MXC_GPIO_Config+0x172>
            MXC_MCR->gpio3_ctrl |= P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask);
100124b6:	6862      	ldr	r2, [r4, #4]
100124b8:	4818      	ldr	r0, [pc, #96]	@ (1001251c <MXC_GPIO_Config+0x208>)
100124ba:	0093      	lsls	r3, r2, #2
100124bc:	0151      	lsls	r1, r2, #5
100124be:	6a06      	ldr	r6, [r0, #32]
100124c0:	f003 0304 	and.w	r3, r3, #4
100124c4:	f001 0140 	and.w	r1, r1, #64	@ 0x40
100124c8:	430b      	orrs	r3, r1
100124ca:	4333      	orrs	r3, r6
100124cc:	6203      	str	r3, [r0, #32]
            break;
100124ce:	e76f      	b.n	100123b0 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
100124d0:	6863      	ldr	r3, [r4, #4]
100124d2:	4912      	ldr	r1, [pc, #72]	@ (1001251c <MXC_GPIO_Config+0x208>)
100124d4:	0058      	lsls	r0, r3, #1
100124d6:	011a      	lsls	r2, r3, #4
100124d8:	6a0e      	ldr	r6, [r1, #32]
100124da:	f000 0002 	and.w	r0, r0, #2
100124de:	f002 0220 	and.w	r2, r2, #32
100124e2:	4302      	orrs	r2, r0
100124e4:	4332      	orrs	r2, r6
100124e6:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen |= SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask);
100124e8:	688a      	ldr	r2, [r1, #8]
100124ea:	f3c3 0340 	ubfx	r3, r3, #1, #1
100124ee:	4303      	orrs	r3, r0
100124f0:	4313      	orrs	r3, r2
100124f2:	608b      	str	r3, [r1, #8]
            break;
100124f4:	e7b4      	b.n	10012460 <MXC_GPIO_Config+0x14c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
100124f6:	6863      	ldr	r3, [r4, #4]
100124f8:	4908      	ldr	r1, [pc, #32]	@ (1001251c <MXC_GPIO_Config+0x208>)
100124fa:	0058      	lsls	r0, r3, #1
100124fc:	011a      	lsls	r2, r3, #4
100124fe:	6a0e      	ldr	r6, [r1, #32]
10012500:	f000 0002 	and.w	r0, r0, #2
10012504:	f002 0220 	and.w	r2, r2, #32
10012508:	4302      	orrs	r2, r0
1001250a:	4332      	orrs	r2, r6
1001250c:	e7a0      	b.n	10012450 <MXC_GPIO_Config+0x13c>
        switch (cfg->pad) {
1001250e:	f06f 0002 	mvn.w	r0, #2
}
10012512:	bd70      	pop	{r4, r5, r6, pc}
10012514:	40008000 	.word	0x40008000
10012518:	40080600 	.word	0x40080600
1001251c:	40006c00 	.word	0x40006c00

10012520 <MXC_GPIO_OutSet>:
    if (port == MXC_GPIO3) {
10012520:	4a08      	ldr	r2, [pc, #32]	@ (10012544 <MXC_GPIO_OutSet+0x24>)
10012522:	4290      	cmp	r0, r2
10012524:	d001      	beq.n	1001252a <MXC_GPIO_OutSet+0xa>
    MXC_GPIO_RevA_OutSet((mxc_gpio_reva_regs_t *)port, mask);
10012526:	f000 b843 	b.w	100125b0 <MXC_GPIO_RevA_OutSet>
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1001252a:	4807      	ldr	r0, [pc, #28]	@ (10012548 <MXC_GPIO_OutSet+0x28>)
{
1001252c:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1001252e:	6a04      	ldr	r4, [r0, #32]
10012530:	00ca      	lsls	r2, r1, #3
10012532:	f001 0101 	and.w	r1, r1, #1
10012536:	4321      	orrs	r1, r4
10012538:	f002 0310 	and.w	r3, r2, #16
1001253c:	430b      	orrs	r3, r1
}
1001253e:	bc10      	pop	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
10012540:	6203      	str	r3, [r0, #32]
}
10012542:	4770      	bx	lr
10012544:	40080600 	.word	0x40080600
10012548:	40006c00 	.word	0x40006c00

1001254c <MXC_GPIO_OutClr>:
    if (port == MXC_GPIO3) {
1001254c:	4a09      	ldr	r2, [pc, #36]	@ (10012574 <MXC_GPIO_OutClr+0x28>)
1001254e:	4290      	cmp	r0, r2
10012550:	d001      	beq.n	10012556 <MXC_GPIO_OutClr+0xa>
    MXC_GPIO_RevA_OutClr((mxc_gpio_reva_regs_t *)port, mask);
10012552:	f000 b82f 	b.w	100125b4 <MXC_GPIO_RevA_OutClr>
{
10012556:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(mask) | P31_DATA_OUT(mask));
10012558:	4c07      	ldr	r4, [pc, #28]	@ (10012578 <MXC_GPIO_OutClr+0x2c>)
1001255a:	00ca      	lsls	r2, r1, #3
1001255c:	6a20      	ldr	r0, [r4, #32]
1001255e:	f002 0210 	and.w	r2, r2, #16
10012562:	f001 0101 	and.w	r1, r1, #1
10012566:	ea42 0301 	orr.w	r3, r2, r1
1001256a:	ea20 0303 	bic.w	r3, r0, r3
1001256e:	6223      	str	r3, [r4, #32]
}
10012570:	bc10      	pop	{r4}
10012572:	4770      	bx	lr
10012574:	40080600 	.word	0x40080600
10012578:	40006c00 	.word	0x40006c00

1001257c <MXC_GPIO_Handler>:
    MXC_GPIO_Common_Handler(port);
1001257c:	f001 ba86 	b.w	10013a8c <MXC_GPIO_Common_Handler>

10012580 <MXC_GPIO_ClearFlags>:
    if (port == MXC_GPIO3) {
10012580:	4a03      	ldr	r2, [pc, #12]	@ (10012590 <MXC_GPIO_ClearFlags+0x10>)
10012582:	4290      	cmp	r0, r2
10012584:	d001      	beq.n	1001258a <MXC_GPIO_ClearFlags+0xa>
    MXC_GPIO_RevA_ClearFlags((mxc_gpio_reva_regs_t *)port, flags);
10012586:	f000 b817 	b.w	100125b8 <MXC_GPIO_RevA_ClearFlags>
        MXC_PWRSEQ->lpwkst3 = flags;
1001258a:	4a02      	ldr	r2, [pc, #8]	@ (10012594 <MXC_GPIO_ClearFlags+0x14>)
1001258c:	61d1      	str	r1, [r2, #28]
}
1001258e:	4770      	bx	lr
10012590:	40080600 	.word	0x40080600
10012594:	40006800 	.word	0x40006800

10012598 <MXC_GPIO_GetFlags>:
    if (port == MXC_GPIO3) {
10012598:	4b03      	ldr	r3, [pc, #12]	@ (100125a8 <MXC_GPIO_GetFlags+0x10>)
1001259a:	4298      	cmp	r0, r3
1001259c:	d001      	beq.n	100125a2 <MXC_GPIO_GetFlags+0xa>
    return MXC_GPIO_RevA_GetFlags((mxc_gpio_reva_regs_t *)port);
1001259e:	f000 b80d 	b.w	100125bc <MXC_GPIO_RevA_GetFlags>
        return MXC_PWRSEQ->lpwkst3;
100125a2:	4b02      	ldr	r3, [pc, #8]	@ (100125ac <MXC_GPIO_GetFlags+0x14>)
100125a4:	69d8      	ldr	r0, [r3, #28]
}
100125a6:	4770      	bx	lr
100125a8:	40080600 	.word	0x40080600
100125ac:	40006800 	.word	0x40006800

100125b0 <MXC_GPIO_RevA_OutSet>:
    return (port->in & mask);
}

void MXC_GPIO_RevA_OutSet(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_set = mask;
100125b0:	61c1      	str	r1, [r0, #28]
}
100125b2:	4770      	bx	lr

100125b4 <MXC_GPIO_RevA_OutClr>:

void MXC_GPIO_RevA_OutClr(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_clr = mask;
100125b4:	6201      	str	r1, [r0, #32]
}
100125b6:	4770      	bx	lr

100125b8 <MXC_GPIO_RevA_ClearFlags>:
    port->inten_clr = mask;
}

void MXC_GPIO_RevA_ClearFlags(mxc_gpio_reva_regs_t *port, uint32_t flags)
{
    port->intfl_clr = flags;
100125b8:	6481      	str	r1, [r0, #72]	@ 0x48
}
100125ba:	4770      	bx	lr

100125bc <MXC_GPIO_RevA_GetFlags>:

uint32_t MXC_GPIO_RevA_GetFlags(mxc_gpio_reva_regs_t *port)
{
    return port->intfl;
100125bc:	6c00      	ldr	r0, [r0, #64]	@ 0x40
}
100125be:	4770      	bx	lr

100125c0 <MXC_GPIO_RevA_SetVSSEL>:

int MXC_GPIO_RevA_SetVSSEL(mxc_gpio_reva_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    // Configure the vssel
    switch (vssel) {
100125c0:	b159      	cbz	r1, 100125da <MXC_GPIO_RevA_SetVSSEL+0x1a>
100125c2:	2901      	cmp	r1, #1
100125c4:	d106      	bne.n	100125d4 <MXC_GPIO_RevA_SetVSSEL+0x14>
    case MXC_GPIO_VSSEL_VDDIO:
        port->vssel &= ~mask;
        break;

    case MXC_GPIO_VSSEL_VDDIOH:
        port->vssel |= mask;
100125c6:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
100125ca:	4313      	orrs	r3, r2
100125cc:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
100125d0:	2000      	movs	r0, #0
}
100125d2:	4770      	bx	lr
    switch (vssel) {
100125d4:	f06f 0002 	mvn.w	r0, #2
100125d8:	4770      	bx	lr
        port->vssel &= ~mask;
100125da:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
100125de:	ea23 0302 	bic.w	r3, r3, r2
100125e2:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    return E_NO_ERROR;
100125e6:	2000      	movs	r0, #0
}
100125e8:	4770      	bx	lr
100125ea:	bf00      	nop

100125ec <MXC_GPIO_RevA_SetAF>:

int MXC_GPIO_RevA_SetAF(mxc_gpio_reva_regs_t *port, mxc_gpio_func_t func, uint32_t mask)
{
    //This is required for new devices going forward.
    port->inen |= mask;
100125ec:	6b03      	ldr	r3, [r0, #48]	@ 0x30
100125ee:	4313      	orrs	r3, r2
100125f0:	6303      	str	r3, [r0, #48]	@ 0x30

    //Switch to I/O mode first
    port->en0_set = mask;
100125f2:	6042      	str	r2, [r0, #4]

    switch (func) {
100125f4:	2905      	cmp	r1, #5
100125f6:	d82c      	bhi.n	10012652 <MXC_GPIO_RevA_SetAF+0x66>
100125f8:	e8df f001 	tbb	[pc, r1]
100125fc:	1f19120a 	.word	0x1f19120a
10012600:	0325      	.short	0x0325
        port->en1_clr = mask;
        port->en0_clr = mask;
        break;

    case MXC_GPIO_FUNC_ALT4:
        port->en3_clr = mask;
10012602:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
10012606:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_set = mask;
10012608:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1001260a:	6082      	str	r2, [r0, #8]
#endif
    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1001260c:	2000      	movs	r0, #0
1001260e:	4770      	bx	lr
        port->outen_clr = mask;
10012610:	6142      	str	r2, [r0, #20]
        port->en0_set = mask;
10012612:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10012614:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
10012616:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
10012618:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    return E_NO_ERROR;
1001261c:	2000      	movs	r0, #0
1001261e:	4770      	bx	lr
        port->outen_set = mask;
10012620:	6102      	str	r2, [r0, #16]
        port->en0_set = mask;
10012622:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10012624:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
10012626:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
10012628:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        break;
1001262c:	e7ee      	b.n	1001260c <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1001262e:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
10012632:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_clr = mask;
10012634:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
10012636:	6082      	str	r2, [r0, #8]
        break;
10012638:	e7e8      	b.n	1001260c <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1001263a:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1001263e:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_set = mask;
10012640:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
10012642:	6082      	str	r2, [r0, #8]
        break;
10012644:	e7e2      	b.n	1001260c <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
10012646:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1001264a:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_clr = mask;
1001264c:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1001264e:	6082      	str	r2, [r0, #8]
        break;
10012650:	e7dc      	b.n	1001260c <MXC_GPIO_RevA_SetAF+0x20>
    switch (func) {
10012652:	f06f 0002 	mvn.w	r0, #2
}
10012656:	4770      	bx	lr

10012658 <MXC_I2C_SetSlaveAddr>:
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
}

int MXC_I2C_SetSlaveAddr(mxc_i2c_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    return MXC_I2C_RevA_SetSlaveAddr((mxc_i2c_reva_regs_t *)i2c, slaveAddr, idx);
10012658:	f000 b8fa 	b.w	10012850 <MXC_I2C_RevA_SetSlaveAddr>

1001265c <MXC_I2C_Shutdown>:
}

int MXC_I2C_Shutdown(mxc_i2c_regs_t *i2c)
{
1001265c:	b508      	push	{r3, lr}
    // Configure GPIO for I2C
    if (i2c == MXC_I2C0) {
1001265e:	4b11      	ldr	r3, [pc, #68]	@ (100126a4 <MXC_I2C_Shutdown+0x48>)
10012660:	4298      	cmp	r0, r3
10012662:	d00d      	beq.n	10012680 <MXC_I2C_Shutdown+0x24>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
    } else if (i2c == MXC_I2C1) {
10012664:	4b10      	ldr	r3, [pc, #64]	@ (100126a8 <MXC_I2C_Shutdown+0x4c>)
10012666:	4298      	cmp	r0, r3
10012668:	d011      	beq.n	1001268e <MXC_I2C_Shutdown+0x32>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
    } else if (i2c == MXC_I2C2) {
1001266a:	4b10      	ldr	r3, [pc, #64]	@ (100126ac <MXC_I2C_Shutdown+0x50>)
1001266c:	4298      	cmp	r0, r3
1001266e:	d115      	bne.n	1001269c <MXC_I2C_Shutdown+0x40>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C2);
10012670:	2038      	movs	r0, #56	@ 0x38
10012672:	f7ff fcf9 	bl	10012068 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C2);
10012676:	2034      	movs	r0, #52	@ 0x34
10012678:	f7ff fdb2 	bl	100121e0 <MXC_SYS_Reset_Periph>
    } else {
        return E_NO_DEVICE;
    }

    return E_NO_ERROR;
1001267c:	2000      	movs	r0, #0
}
1001267e:	bd08      	pop	{r3, pc}
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
10012680:	200d      	movs	r0, #13
10012682:	f7ff fcf1 	bl	10012068 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
10012686:	2010      	movs	r0, #16
10012688:	f7ff fdaa 	bl	100121e0 <MXC_SYS_Reset_Periph>
1001268c:	e7f6      	b.n	1001267c <MXC_I2C_Shutdown+0x20>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
1001268e:	201c      	movs	r0, #28
10012690:	f7ff fcea 	bl	10012068 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
10012694:	2020      	movs	r0, #32
10012696:	f7ff fda3 	bl	100121e0 <MXC_SYS_Reset_Periph>
1001269a:	e7ef      	b.n	1001267c <MXC_I2C_Shutdown+0x20>
        return E_NO_DEVICE;
1001269c:	f06f 0001 	mvn.w	r0, #1
}
100126a0:	bd08      	pop	{r3, pc}
100126a2:	bf00      	nop
100126a4:	4001d000 	.word	0x4001d000
100126a8:	4001e000 	.word	0x4001e000
100126ac:	4001f000 	.word	0x4001f000

100126b0 <MXC_I2C_Init>:
    if (i2c == NULL) {
100126b0:	b3c0      	cbz	r0, 10012724 <MXC_I2C_Init+0x74>
{
100126b2:	b570      	push	{r4, r5, r6, lr}
100126b4:	4604      	mov	r4, r0
    MXC_I2C_Shutdown(i2c); // Clear everything out
100126b6:	460d      	mov	r5, r1
100126b8:	4616      	mov	r6, r2
100126ba:	f7ff ffcf 	bl	1001265c <MXC_I2C_Shutdown>
    if (i2c == MXC_I2C0) {
100126be:	4b1b      	ldr	r3, [pc, #108]	@ (1001272c <MXC_I2C_Init+0x7c>)
100126c0:	429c      	cmp	r4, r3
100126c2:	d012      	beq.n	100126ea <MXC_I2C_Init+0x3a>
    } else if (i2c == MXC_I2C1) {
100126c4:	4b1a      	ldr	r3, [pc, #104]	@ (10012730 <MXC_I2C_Init+0x80>)
100126c6:	429c      	cmp	r4, r3
100126c8:	d01c      	beq.n	10012704 <MXC_I2C_Init+0x54>
    } else if (i2c == MXC_I2C2) {
100126ca:	4b1a      	ldr	r3, [pc, #104]	@ (10012734 <MXC_I2C_Init+0x84>)
100126cc:	429c      	cmp	r4, r3
100126ce:	d126      	bne.n	1001271e <MXC_I2C_Init+0x6e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C2);
100126d0:	2038      	movs	r0, #56	@ 0x38
100126d2:	f7ff fce9 	bl	100120a8 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c2);
100126d6:	4818      	ldr	r0, [pc, #96]	@ (10012738 <MXC_I2C_Init+0x88>)
100126d8:	f7ff fe1c 	bl	10012314 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
100126dc:	4632      	mov	r2, r6
100126de:	4629      	mov	r1, r5
100126e0:	4620      	mov	r0, r4
}
100126e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
100126e6:	f000 b84d 	b.w	10012784 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C0);
100126ea:	200d      	movs	r0, #13
100126ec:	f7ff fcdc 	bl	100120a8 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c0);
100126f0:	4812      	ldr	r0, [pc, #72]	@ (1001273c <MXC_I2C_Init+0x8c>)
100126f2:	f7ff fe0f 	bl	10012314 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
100126f6:	4632      	mov	r2, r6
100126f8:	4629      	mov	r1, r5
100126fa:	4620      	mov	r0, r4
}
100126fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10012700:	f000 b840 	b.w	10012784 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C1);
10012704:	201c      	movs	r0, #28
10012706:	f7ff fccf 	bl	100120a8 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c1);
1001270a:	480d      	ldr	r0, [pc, #52]	@ (10012740 <MXC_I2C_Init+0x90>)
1001270c:	f7ff fe02 	bl	10012314 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10012710:	4632      	mov	r2, r6
10012712:	4629      	mov	r1, r5
10012714:	4620      	mov	r0, r4
}
10012716:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1001271a:	f000 b833 	b.w	10012784 <MXC_I2C_RevA_Init>
        return E_NO_DEVICE;
1001271e:	f06f 0001 	mvn.w	r0, #1
}
10012722:	bd70      	pop	{r4, r5, r6, pc}
        return E_NULL_PTR;
10012724:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012728:	4770      	bx	lr
1001272a:	bf00      	nop
1001272c:	4001d000 	.word	0x4001d000
10012730:	4001e000 	.word	0x4001e000
10012734:	4001f000 	.word	0x4001f000
10012738:	10023798 	.word	0x10023798
1001273c:	100237b0 	.word	0x100237b0
10012740:	100237a4 	.word	0x100237a4

10012744 <MXC_I2C_SetFrequency>:
    return E_NO_ERROR;
}

int MXC_I2C_SetFrequency(mxc_i2c_regs_t *i2c, unsigned int hz)
{
    return MXC_I2C_RevA_SetFrequency((mxc_i2c_reva_regs_t *)i2c, hz);
10012744:	f000 b89e 	b.w	10012884 <MXC_I2C_RevA_SetFrequency>

10012748 <MXC_I2C_GetFrequency>:
}

int MXC_I2C_GetFrequency(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetFrequency((mxc_i2c_reva_regs_t *)i2c);
10012748:	f000 b8ec 	b.w	10012924 <MXC_I2C_RevA_GetFrequency>

1001274c <MXC_I2C_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_Start(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Start((mxc_i2c_reva_regs_t *)i2c);
1001274c:	f000 b8fa 	b.w	10012944 <MXC_I2C_RevA_Start>

10012750 <MXC_I2C_Stop>:
}

int MXC_I2C_Stop(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Stop((mxc_i2c_reva_regs_t *)i2c);
10012750:	f000 b90c 	b.w	1001296c <MXC_I2C_RevA_Stop>

10012754 <MXC_I2C_ReadRXFIFO>:
    return MXC_I2C_RevA_Read((mxc_i2c_reva_regs_t *)i2c, bytes, len, ack);
}

int MXC_I2C_ReadRXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_ReadRXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
10012754:	f000 b918 	b.w	10012988 <MXC_I2C_RevA_ReadRXFIFO>

10012758 <MXC_I2C_WriteTXFIFO>:
    return MXC_I2C_RevA_GetRXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_WriteTXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_WriteTXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
10012758:	f000 b934 	b.w	100129c4 <MXC_I2C_RevA_WriteTXFIFO>

1001275c <MXC_I2C_ClearRXFIFO>:
    return MXC_I2C_RevA_GetTXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_ClearRXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearRXFIFO((mxc_i2c_reva_regs_t *)i2c);
1001275c:	f000 b94a 	b.w	100129f4 <MXC_I2C_RevA_ClearRXFIFO>

10012760 <MXC_I2C_ClearTXFIFO>:
}

void MXC_I2C_ClearTXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearTXFIFO((mxc_i2c_reva_regs_t *)i2c);
10012760:	f000 b950 	b.w	10012a04 <MXC_I2C_RevA_ClearTXFIFO>

10012764 <MXC_I2C_ClearFlags>:
    return MXC_I2C_RevA_GetFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
}

void MXC_I2C_ClearFlags(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_ClearFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
10012764:	f000 b956 	b.w	10012a14 <MXC_I2C_RevA_ClearFlags>

10012768 <MXC_I2C_Recover>:
    return MXC_I2C_RevA_GetTimeout((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_Recover(mxc_i2c_regs_t *i2c, unsigned int retries)
{
    return MXC_I2C_RevA_Recover((mxc_i2c_reva_regs_t *)i2c, retries);
10012768:	f000 b958 	b.w	10012a1c <MXC_I2C_RevA_Recover>

1001276c <MXC_I2C_MasterTransaction>:
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_MasterTransaction(mxc_i2c_req_t *req)
{
    return MXC_I2C_RevA_MasterTransaction((mxc_i2c_reva_req_t *)req);
1001276c:	f000 b9c2 	b.w	10012af4 <MXC_I2C_RevA_MasterTransaction>

10012770 <MXC_I2C_SetRXThreshold>:
        (mxc_i2c_reva_regs_t *)i2c, (mxc_i2c_reva_slave_handler_t)callback, interruptCheck);
}

int MXC_I2C_SetRXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetRXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
10012770:	f000 ba90 	b.w	10012c94 <MXC_I2C_RevA_SetRXThreshold>

10012774 <MXC_I2C_SetTXThreshold>:
    return MXC_I2C_RevA_GetRXThreshold((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_SetTXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetTXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
10012774:	f000 ba9e 	b.w	10012cb4 <MXC_I2C_RevA_SetTXThreshold>

10012778 <MXC_I2C_AsyncHandler>:
    MXC_I2C_RevA_AbortAsync((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_AsyncHandler(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_AsyncHandler((mxc_i2c_reva_regs_t *)i2c, interruptCheck);
10012778:	4b01      	ldr	r3, [pc, #4]	@ (10012780 <MXC_I2C_AsyncHandler+0x8>)
1001277a:	6819      	ldr	r1, [r3, #0]
1001277c:	f000 be08 	b.w	10013390 <MXC_I2C_RevA_AsyncHandler>
10012780:	2000000c 	.word	0x2000000c

10012784 <MXC_I2C_RevA_Init>:

/* ************************************************************************* */
/* Control/Configuration functions                                           */
/* ************************************************************************* */
int MXC_I2C_RevA_Init(mxc_i2c_reva_regs_t *i2c, int masterMode, unsigned int slaveAddr)
{
10012784:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int err;

    if (i2c == NULL) {
10012786:	2800      	cmp	r0, #0
10012788:	d057      	beq.n	1001283a <MXC_I2C_RevA_Init+0xb6>
        return E_NULL_PTR;
    }

    if ((err = MXC_I2C_Recover((mxc_i2c_regs_t *)i2c, 16)) != E_NO_ERROR) {
1001278a:	460f      	mov	r7, r1
1001278c:	2110      	movs	r1, #16
1001278e:	4615      	mov	r5, r2
10012790:	4604      	mov	r4, r0
10012792:	f7ff ffe9 	bl	10012768 <MXC_I2C_Recover>
10012796:	4606      	mov	r6, r0
10012798:	b108      	cbz	r0, 1001279e <MXC_I2C_RevA_Init+0x1a>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
    }

    return E_NO_ERROR;
}
1001279a:	4630      	mov	r0, r6
1001279c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1001279e:	6823      	ldr	r3, [r4, #0]
100127a0:	f043 0301 	orr.w	r3, r3, #1
100127a4:	6023      	str	r3, [r4, #0]
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
100127a6:	4620      	mov	r0, r4
100127a8:	f7ff ffd8 	bl	1001275c <MXC_I2C_ClearRXFIFO>
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
100127ac:	4620      	mov	r0, r4
100127ae:	f7ff ffd7 	bl	10012760 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_SetTXThreshold((mxc_i2c_regs_t *)i2c, 2); // set TX threshold to 2 bytes
100127b2:	2102      	movs	r1, #2
100127b4:	4620      	mov	r0, r4
100127b6:	f7ff ffdd 	bl	10012774 <MXC_I2C_SetTXThreshold>
    MXC_I2C_SetRXThreshold((mxc_i2c_regs_t *)i2c, 6); // set RX threshold to 6 bytes
100127ba:	2106      	movs	r1, #6
100127bc:	4620      	mov	r0, r4
100127be:	f7ff ffd7 	bl	10012770 <MXC_I2C_SetRXThreshold>
    if (!masterMode) {
100127c2:	b1df      	cbz	r7, 100127fc <MXC_I2C_RevA_Init+0x78>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
100127c4:	6823      	ldr	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
100127c6:	4a1e      	ldr	r2, [pc, #120]	@ (10012840 <MXC_I2C_RevA_Init+0xbc>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
100127c8:	f043 0302 	orr.w	r3, r3, #2
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
100127cc:	4294      	cmp	r4, r2
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
100127ce:	6023      	str	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
100127d0:	d02f      	beq.n	10012832 <MXC_I2C_RevA_Init+0xae>
100127d2:	4b1c      	ldr	r3, [pc, #112]	@ (10012844 <MXC_I2C_RevA_Init+0xc0>)
100127d4:	429c      	cmp	r4, r3
100127d6:	d00f      	beq.n	100127f8 <MXC_I2C_RevA_Init+0x74>
100127d8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100127dc:	429c      	cmp	r4, r3
100127de:	bf14      	ite	ne
100127e0:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
100127e4:	2402      	moveq	r4, #2
100127e6:	4b18      	ldr	r3, [pc, #96]	@ (10012848 <MXC_I2C_RevA_Init+0xc4>)
100127e8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
100127ec:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
100127f0:	2201      	movs	r2, #1
100127f2:	605a      	str	r2, [r3, #4]
}
100127f4:	4630      	mov	r0, r6
100127f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
100127f8:	2401      	movs	r4, #1
100127fa:	e7f4      	b.n	100127e6 <MXC_I2C_RevA_Init+0x62>
        MXC_I2C_SetSlaveAddr((mxc_i2c_regs_t *)i2c, slaveAddr, 0);
100127fc:	463a      	mov	r2, r7
100127fe:	4629      	mov	r1, r5
10012800:	4620      	mov	r0, r4
10012802:	f7ff ff29 	bl	10012658 <MXC_I2C_SetSlaveAddr>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
10012806:	4b0e      	ldr	r3, [pc, #56]	@ (10012840 <MXC_I2C_RevA_Init+0xbc>)
10012808:	429c      	cmp	r4, r3
1001280a:	d009      	beq.n	10012820 <MXC_I2C_RevA_Init+0x9c>
1001280c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012810:	429c      	cmp	r4, r3
10012812:	d010      	beq.n	10012836 <MXC_I2C_RevA_Init+0xb2>
10012814:	4f0d      	ldr	r7, [pc, #52]	@ (1001284c <MXC_I2C_RevA_Init+0xc8>)
10012816:	42bc      	cmp	r4, r7
10012818:	bf14      	ite	ne
1001281a:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
1001281e:	2702      	moveq	r7, #2
10012820:	4b09      	ldr	r3, [pc, #36]	@ (10012848 <MXC_I2C_RevA_Init+0xc4>)
10012822:	eb07 0147 	add.w	r1, r7, r7, lsl #1
10012826:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
1001282a:	2200      	movs	r2, #0
1001282c:	605a      	str	r2, [r3, #4]
}
1001282e:	4630      	mov	r0, r6
10012830:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10012832:	4634      	mov	r4, r6
10012834:	e7d7      	b.n	100127e6 <MXC_I2C_RevA_Init+0x62>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
10012836:	2701      	movs	r7, #1
10012838:	e7f2      	b.n	10012820 <MXC_I2C_RevA_Init+0x9c>
        return E_NULL_PTR;
1001283a:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
1001283e:	e7ac      	b.n	1001279a <MXC_I2C_RevA_Init+0x16>
10012840:	4001d000 	.word	0x4001d000
10012844:	4001e000 	.word	0x4001e000
10012848:	20001008 	.word	0x20001008
1001284c:	4001f000 	.word	0x4001f000

10012850 <MXC_I2C_RevA_SetSlaveAddr>:

int MXC_I2C_RevA_SetSlaveAddr(mxc_i2c_reva_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    if (i2c == NULL) {
10012850:	4603      	mov	r3, r0
10012852:	b1a0      	cbz	r0, 1001287e <MXC_I2C_RevA_SetSlaveAddr+0x2e>
        return E_NULL_PTR;
    }

    if (idx != 0) {
10012854:	b96a      	cbnz	r2, 10012872 <MXC_I2C_RevA_SetSlaveAddr+0x22>
        // Multiple slaves are not supported yet
        return E_NOT_SUPPORTED;
    }

    if (slaveAddr > MXC_F_I2C_REVA_SLAVE_ADDR) {
10012856:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
1001285a:	d20d      	bcs.n	10012878 <MXC_I2C_RevA_SetSlaveAddr+0x28>
        return E_BAD_PARAM;
    }

    i2c->slave = 0;

    if (slaveAddr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
1001285c:	297f      	cmp	r1, #127	@ 0x7f
    i2c->slave = 0;
1001285e:	64c2      	str	r2, [r0, #76]	@ 0x4c
        // Set for 10bit addressing mode
        i2c->slave = MXC_F_I2C_REVA_SLAVE_EXT_ADDR_EN;
10012860:	bf84      	itt	hi
10012862:	f44f 4200 	movhi.w	r2, #32768	@ 0x8000
10012866:	64c2      	strhi	r2, [r0, #76]	@ 0x4c
    }

    i2c->slave |= slaveAddr;
10012868:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
1001286a:	430a      	orrs	r2, r1

    return E_NO_ERROR;
1001286c:	2000      	movs	r0, #0
    i2c->slave |= slaveAddr;
1001286e:	64da      	str	r2, [r3, #76]	@ 0x4c
    return E_NO_ERROR;
10012870:	4770      	bx	lr
        return E_NOT_SUPPORTED;
10012872:	f06f 0010 	mvn.w	r0, #16
10012876:	4770      	bx	lr
        return E_BAD_PARAM;
10012878:	f06f 0002 	mvn.w	r0, #2
}
1001287c:	4770      	bx	lr
        return E_NULL_PTR;
1001287e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10012882:	4770      	bx	lr

10012884 <MXC_I2C_RevA_SetFrequency>:

int MXC_I2C_RevA_SetFrequency(mxc_i2c_reva_regs_t *i2c, unsigned int hz)
{
    unsigned int ticksTotal, hiClks, lowClks;

    if (i2c == NULL) {
10012884:	2800      	cmp	r0, #0
10012886:	d03f      	beq.n	10012908 <MXC_I2C_RevA_SetFrequency+0x84>
{
10012888:	b410      	push	{r4}
        return E_NULL_PTR;
    }

    if (hz > MXC_I2C_REVA_FASTPLUS_SPEED && hz <= MXC_I2C_REVA_HIGH_SPEED) {
1001288a:	4a21      	ldr	r2, [pc, #132]	@ (10012910 <MXC_I2C_RevA_SetFrequency+0x8c>)
1001288c:	f5a1 2374 	sub.w	r3, r1, #999424	@ 0xf4000
10012890:	f46f 7410 	mvn.w	r4, #576	@ 0x240
10012894:	4423      	add	r3, r4
10012896:	4293      	cmp	r3, r2
10012898:	d313      	bcc.n	100128c2 <MXC_I2C_RevA_SetFrequency+0x3e>

        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;

        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz

    } else if (hz > MXC_I2C_REVA_HIGH_SPEED) {
1001289a:	4b1e      	ldr	r3, [pc, #120]	@ (10012914 <MXC_I2C_RevA_SetFrequency+0x90>)
1001289c:	4299      	cmp	r1, r3
1001289e:	d82f      	bhi.n	10012900 <MXC_I2C_RevA_SetFrequency+0x7c>
        ticksTotal = PeripheralClock / hz;
100128a0:	4b1d      	ldr	r3, [pc, #116]	@ (10012918 <MXC_I2C_RevA_SetFrequency+0x94>)
        return E_BAD_PARAM;
    }

    // Calculate the period of SCL, 50% duty cycle
    ticksTotal = PeripheralClock / hz;
100128a2:	681b      	ldr	r3, [r3, #0]
100128a4:	085b      	lsrs	r3, r3, #1
100128a6:	fbb3 f3f1 	udiv	r3, r3, r1
    hiClks = (ticksTotal >> 1) - 1;
100128aa:	085b      	lsrs	r3, r3, #1
    if (ticksTotal % 1) {
        hiClks++;
    }

    // Check for maximum/minimum supported speeds
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
100128ac:	1e9a      	subs	r2, r3, #2
100128ae:	f5b2 7fff 	cmp.w	r2, #510	@ 0x1fe
    hiClks = (ticksTotal >> 1) - 1;
100128b2:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
100128b6:	d823      	bhi.n	10012900 <MXC_I2C_RevA_SetFrequency+0x7c>
        return E_BAD_PARAM;
    }

    i2c->clklo = lowClks & MXC_F_I2C_REVA_CLKLO_LO;
100128b8:	6343      	str	r3, [r0, #52]	@ 0x34
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;

    // Return the actual speed set, since it won't be exactly what's requested
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
}
100128ba:	bc10      	pop	{r4}
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;
100128bc:	6383      	str	r3, [r0, #56]	@ 0x38
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
100128be:	f7ff bf43 	b.w	10012748 <MXC_I2C_GetFrequency>
        ticksTotal = PeripheralClock / hz;
100128c2:	4b15      	ldr	r3, [pc, #84]	@ (10012918 <MXC_I2C_RevA_SetFrequency+0x94>)
        hsLowClks = (ticksTotal * 2) / 3 - 1;
100128c4:	4c15      	ldr	r4, [pc, #84]	@ (1001291c <MXC_I2C_RevA_SetFrequency+0x98>)
        ticksTotal = PeripheralClock / hz;
100128c6:	681b      	ldr	r3, [r3, #0]
100128c8:	085b      	lsrs	r3, r3, #1
100128ca:	fbb3 f1f1 	udiv	r1, r3, r1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
100128ce:	004a      	lsls	r2, r1, #1
        hsHiClks = ticksTotal / 3 - 1;
100128d0:	fba4 c101 	umull	ip, r1, r4, r1
100128d4:	0849      	lsrs	r1, r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
100128d6:	fba4 4202 	umull	r4, r2, r4, r2
        hsHiClks = ticksTotal / 3 - 1;
100128da:	3901      	subs	r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
100128dc:	0852      	lsrs	r2, r2, #1
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
100128de:	290f      	cmp	r1, #15
        hsLowClks = (ticksTotal * 2) / 3 - 1;
100128e0:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
100128e4:	dc0c      	bgt.n	10012900 <MXC_I2C_RevA_SetFrequency+0x7c>
100128e6:	2a0f      	cmp	r2, #15
100128e8:	dc0a      	bgt.n	10012900 <MXC_I2C_RevA_SetFrequency+0x7c>
        hsHiClks = (hsHiClks << MXC_F_I2C_REVA_HSCLK_HI_POS) & MXC_F_I2C_REVA_HSCLK_HI;
100128ea:	0209      	lsls	r1, r1, #8
100128ec:	b289      	uxth	r1, r1
        i2c->hsclk = (hsLowClks | hsHiClks);
100128ee:	b2d2      	uxtb	r2, r2
100128f0:	430a      	orrs	r2, r1
100128f2:	63c2      	str	r2, [r0, #60]	@ 0x3c
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
100128f4:	6802      	ldr	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
100128f6:	490a      	ldr	r1, [pc, #40]	@ (10012920 <MXC_I2C_RevA_SetFrequency+0x9c>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
100128f8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
100128fc:	6002      	str	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
100128fe:	e7d2      	b.n	100128a6 <MXC_I2C_RevA_SetFrequency+0x22>
            return E_BAD_PARAM;
10012900:	f06f 0002 	mvn.w	r0, #2
}
10012904:	bc10      	pop	{r4}
10012906:	4770      	bx	lr
        return E_NULL_PTR;
10012908:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1001290c:	4770      	bx	lr
1001290e:	bf00      	nop
10012910:	00249f00 	.word	0x00249f00
10012914:	0033e140 	.word	0x0033e140
10012918:	20001768 	.word	0x20001768
1001291c:	aaaaaaab 	.word	0xaaaaaaab
10012920:	00061a80 	.word	0x00061a80

10012924 <MXC_I2C_RevA_GetFrequency>:
    unsigned int sclCycles = 0;

    // Calculate the speed based on what we've written into registers
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);

    return PeripheralClock / sclCycles;
10012924:	4906      	ldr	r1, [pc, #24]	@ (10012940 <MXC_I2C_RevA_GetFrequency+0x1c>)
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
10012926:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10012928:	6b82      	ldr	r2, [r0, #56]	@ 0x38
    return PeripheralClock / sclCycles;
1001292a:	6808      	ldr	r0, [r1, #0]
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1001292c:	f3c2 0208 	ubfx	r2, r2, #0, #9
10012930:	f3c3 0308 	ubfx	r3, r3, #0, #9
10012934:	4413      	add	r3, r2
    return PeripheralClock / sclCycles;
10012936:	0840      	lsrs	r0, r0, #1
}
10012938:	fbb0 f0f3 	udiv	r0, r0, r3
1001293c:	4770      	bx	lr
1001293e:	bf00      	nop
10012940:	20001768 	.word	0x20001768

10012944 <MXC_I2C_RevA_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_RevA_Start(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
10012944:	b170      	cbz	r0, 10012964 <MXC_I2C_RevA_Start+0x20>
        return E_NULL_PTR;
    }

    // If we have an incomplete transfer, we need to do a restart
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
10012946:	6b03      	ldr	r3, [r0, #48]	@ 0x30
10012948:	f013 0f01 	tst.w	r3, #1
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
1001294c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
1001294e:	d104      	bne.n	1001295a <MXC_I2C_RevA_Start+0x16>
    } else {
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START; // No check for start generation
10012950:	f043 0301 	orr.w	r3, r3, #1
10012954:	6303      	str	r3, [r0, #48]	@ 0x30
    }

    return E_NO_ERROR;
10012956:	2000      	movs	r0, #0
10012958:	4770      	bx	lr
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
1001295a:	f043 0302 	orr.w	r3, r3, #2
1001295e:	6303      	str	r3, [r0, #48]	@ 0x30
    return E_NO_ERROR;
10012960:	2000      	movs	r0, #0
10012962:	4770      	bx	lr
        return E_NULL_PTR;
10012964:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012968:	4770      	bx	lr
1001296a:	bf00      	nop

1001296c <MXC_I2C_RevA_Stop>:

int MXC_I2C_RevA_Stop(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
1001296c:	b148      	cbz	r0, 10012982 <MXC_I2C_RevA_Stop+0x16>
        return E_NULL_PTR;
    }

    i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
1001296e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
10012970:	f043 0304 	orr.w	r3, r3, #4
10012974:	6303      	str	r3, [r0, #48]	@ 0x30

    while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_STOP) {}
10012976:	6b03      	ldr	r3, [r0, #48]	@ 0x30
10012978:	f013 0304 	ands.w	r3, r3, #4
1001297c:	d1fb      	bne.n	10012976 <MXC_I2C_RevA_Stop+0xa>

    return E_NO_ERROR;
1001297e:	4618      	mov	r0, r3
10012980:	4770      	bx	lr
        return E_NULL_PTR;
10012982:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012986:	4770      	bx	lr

10012988 <MXC_I2C_RevA_ReadRXFIFO>:
int MXC_I2C_RevA_ReadRXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                            unsigned int len)
{
    unsigned read = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
10012988:	b1c8      	cbz	r0, 100129be <MXC_I2C_RevA_ReadRXFIFO+0x36>
1001298a:	b1c1      	cbz	r1, 100129be <MXC_I2C_RevA_ReadRXFIFO+0x36>
        return E_NULL_PTR;
    }

    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1001298c:	b1aa      	cbz	r2, 100129ba <MXC_I2C_RevA_ReadRXFIFO+0x32>
{
1001298e:	b500      	push	{lr}
    unsigned read = 0;
10012990:	2300      	movs	r3, #0
        bytes[read++] = i2c->fifo;
10012992:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10012996:	e007      	b.n	100129a8 <MXC_I2C_RevA_ReadRXFIFO+0x20>
10012998:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1001299a:	3301      	adds	r3, #1
1001299c:	fa5f fc81 	uxtb.w	ip, r1
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
100129a0:	429a      	cmp	r2, r3
        bytes[read++] = i2c->fifo;
100129a2:	f80e c003 	strb.w	ip, [lr, r3]
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
100129a6:	d005      	beq.n	100129b4 <MXC_I2C_RevA_ReadRXFIFO+0x2c>
100129a8:	6841      	ldr	r1, [r0, #4]
100129aa:	0789      	lsls	r1, r1, #30
100129ac:	d5f4      	bpl.n	10012998 <MXC_I2C_RevA_ReadRXFIFO+0x10>
    }

    return read;
100129ae:	4618      	mov	r0, r3
}
100129b0:	f85d fb04 	ldr.w	pc, [sp], #4
    return read;
100129b4:	4610      	mov	r0, r2
}
100129b6:	f85d fb04 	ldr.w	pc, [sp], #4
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
100129ba:	4610      	mov	r0, r2
100129bc:	4770      	bx	lr
        return E_NULL_PTR;
100129be:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
100129c2:	4770      	bx	lr

100129c4 <MXC_I2C_RevA_WriteTXFIFO>:
int MXC_I2C_RevA_WriteTXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                             unsigned int len)
{
    unsigned written = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
100129c4:	b198      	cbz	r0, 100129ee <MXC_I2C_RevA_WriteTXFIFO+0x2a>
100129c6:	b191      	cbz	r1, 100129ee <MXC_I2C_RevA_WriteTXFIFO+0x2a>
        return E_NULL_PTR;
    }

    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
100129c8:	b17a      	cbz	r2, 100129ea <MXC_I2C_RevA_WriteTXFIFO+0x26>
    unsigned written = 0;
100129ca:	2300      	movs	r3, #0
        i2c->fifo = bytes[written++];
100129cc:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
100129d0:	e006      	b.n	100129e0 <MXC_I2C_RevA_WriteTXFIFO+0x1c>
100129d2:	3301      	adds	r3, #1
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
100129d4:	429a      	cmp	r2, r3
        i2c->fifo = bytes[written++];
100129d6:	f81c 1003 	ldrb.w	r1, [ip, r3]
100129da:	b2c9      	uxtb	r1, r1
100129dc:	62c1      	str	r1, [r0, #44]	@ 0x2c
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
100129de:	d004      	beq.n	100129ea <MXC_I2C_RevA_WriteTXFIFO+0x26>
100129e0:	6841      	ldr	r1, [r0, #4]
100129e2:	06c9      	lsls	r1, r1, #27
100129e4:	d5f5      	bpl.n	100129d2 <MXC_I2C_RevA_WriteTXFIFO+0xe>
    }

    return written;
100129e6:	4618      	mov	r0, r3
100129e8:	4770      	bx	lr
100129ea:	4610      	mov	r0, r2
100129ec:	4770      	bx	lr
        return E_NULL_PTR;
100129ee:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
100129f2:	4770      	bx	lr

100129f4 <MXC_I2C_RevA_ClearRXFIFO>:
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
}

void MXC_I2C_RevA_ClearRXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
100129f4:	69c3      	ldr	r3, [r0, #28]
100129f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
100129fa:	61c3      	str	r3, [r0, #28]

    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
100129fc:	69c3      	ldr	r3, [r0, #28]
100129fe:	061b      	lsls	r3, r3, #24
10012a00:	d4fc      	bmi.n	100129fc <MXC_I2C_RevA_ClearRXFIFO+0x8>
}
10012a02:	4770      	bx	lr

10012a04 <MXC_I2C_RevA_ClearTXFIFO>:

void MXC_I2C_RevA_ClearTXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
10012a04:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10012a06:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10012a0a:	6243      	str	r3, [r0, #36]	@ 0x24

    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
10012a0c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10012a0e:	061b      	lsls	r3, r3, #24
10012a10:	d4fc      	bmi.n	10012a0c <MXC_I2C_RevA_ClearTXFIFO+0x8>
}
10012a12:	4770      	bx	lr

10012a14 <MXC_I2C_RevA_ClearFlags>:
    return E_NO_ERROR;
}

void MXC_I2C_RevA_ClearFlags(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->intfl0 = flags0;
10012a14:	6081      	str	r1, [r0, #8]
    i2c->intfl1 = flags1;
10012a16:	6102      	str	r2, [r0, #16]
}
10012a18:	4770      	bx	lr
10012a1a:	bf00      	nop

10012a1c <MXC_I2C_RevA_Recover>:
int MXC_I2C_RevA_Recover(mxc_i2c_reva_regs_t *i2c, unsigned int retries)
{
    int err;
    unsigned int i;

    if (i2c == NULL) {
10012a1c:	2800      	cmp	r0, #0
10012a1e:	d065      	beq.n	10012aec <MXC_I2C_RevA_Recover+0xd0>
        return E_NULL_PTR;
    }

    err = E_COMM_ERR;

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10012a20:	6803      	ldr	r3, [r0, #0]
10012a22:	f043 0301 	orr.w	r3, r3, #1
{
10012a26:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10012a2a:	6003      	str	r3, [r0, #0]
    int swBit = i2c->ctrl & MXC_F_I2C_REVA_CTRL_BB_MODE;
10012a2c:	6807      	ldr	r7, [r0, #0]

    if (i2c == NULL) {
        return E_NULL_PTR;
    }

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_BB_MODE;
10012a2e:	6803      	ldr	r3, [r0, #0]
10012a30:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
10012a34:	460e      	mov	r6, r1
10012a36:	4604      	mov	r4, r0
10012a38:	f407 6780 	and.w	r7, r7, #1024	@ 0x400
10012a3c:	6003      	str	r3, [r0, #0]

    // Follow the procedure detailed in the header file
    // Delay 10uS between each step to give the line/slaves time to react
    for (i = 0; i < retries; i++) {
10012a3e:	2900      	cmp	r1, #0
10012a40:	d043      	beq.n	10012aca <MXC_I2C_RevA_Recover+0xae>
10012a42:	2500      	movs	r5, #0
10012a44:	e02b      	b.n	10012a9e <MXC_I2C_RevA_Recover+0x82>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10012a46:	f7ff faad 	bl	10011fa4 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012a4a:	6823      	ldr	r3, [r4, #0]
10012a4c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10012a50:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10012a52:	200a      	movs	r0, #10
10012a54:	f7ff faa6 	bl	10011fa4 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10012a58:	6823      	ldr	r3, [r4, #0]
10012a5a:	f413 7800 	ands.w	r8, r3, #512	@ 0x200
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10012a5e:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10012a62:	d12b      	bne.n	10012abc <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10012a64:	f7ff fa9e 	bl	10011fa4 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012a68:	6823      	ldr	r3, [r4, #0]
10012a6a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10012a6e:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10012a70:	200a      	movs	r0, #10
10012a72:	f7ff fa97 	bl	10011fa4 <MXC_Delay>

        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10012a76:	6823      	ldr	r3, [r4, #0]
10012a78:	059a      	lsls	r2, r3, #22
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10012a7a:	f04f 000a 	mov.w	r0, #10
        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10012a7e:	d51d      	bpl.n	10012abc <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10012a80:	f7ff fa90 	bl	10011fa4 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT;
10012a84:	6823      	ldr	r3, [r4, #0]
10012a86:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012a8a:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10012a8c:	200a      	movs	r0, #10
10012a8e:	f7ff fa89 	bl	10011fa4 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10012a92:	6823      	ldr	r3, [r4, #0]
10012a94:	05db      	lsls	r3, r3, #23
10012a96:	d425      	bmi.n	10012ae4 <MXC_I2C_RevA_Recover+0xc8>
    for (i = 0; i < retries; i++) {
10012a98:	3501      	adds	r5, #1
10012a9a:	42ae      	cmp	r6, r5
10012a9c:	d015      	beq.n	10012aca <MXC_I2C_RevA_Recover+0xae>
        MXC_Delay(10);
10012a9e:	200a      	movs	r0, #10
10012aa0:	f7ff fa80 	bl	10011fa4 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SCL_OUT;
10012aa4:	6823      	ldr	r3, [r4, #0]
10012aa6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10012aaa:	6023      	str	r3, [r4, #0]
        MXC_Delay(10);
10012aac:	200a      	movs	r0, #10
10012aae:	f7ff fa79 	bl	10011fa4 <MXC_Delay>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10012ab2:	6823      	ldr	r3, [r4, #0]
10012ab4:	05d9      	lsls	r1, r3, #23
        MXC_Delay(10);
10012ab6:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10012aba:	d5c4      	bpl.n	10012a46 <MXC_I2C_RevA_Recover+0x2a>
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012abc:	6823      	ldr	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10012abe:	3501      	adds	r5, #1
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012ac0:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
    for (i = 0; i < retries; i++) {
10012ac4:	42ae      	cmp	r6, r5
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10012ac6:	6023      	str	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10012ac8:	d1e9      	bne.n	10012a9e <MXC_I2C_RevA_Recover+0x82>
    err = E_COMM_ERR;
10012aca:	f06f 0008 	mvn.w	r0, #8
            err = E_NO_ERROR; // We have control
            break;
        }
    }

    if (swBit == 0) {
10012ace:	b91f      	cbnz	r7, 10012ad8 <MXC_I2C_RevA_Recover+0xbc>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_BB_MODE;
10012ad0:	6823      	ldr	r3, [r4, #0]
10012ad2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10012ad6:	6023      	str	r3, [r4, #0]
    }

    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_EN;
10012ad8:	6823      	ldr	r3, [r4, #0]
10012ada:	f023 0301 	bic.w	r3, r3, #1
10012ade:	6023      	str	r3, [r4, #0]

    return err;
}
10012ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            err = E_NO_ERROR; // We have control
10012ae4:	4640      	mov	r0, r8
    if (swBit == 0) {
10012ae6:	2f00      	cmp	r7, #0
10012ae8:	d1f6      	bne.n	10012ad8 <MXC_I2C_RevA_Recover+0xbc>
10012aea:	e7f1      	b.n	10012ad0 <MXC_I2C_RevA_Recover+0xb4>
        return E_NULL_PTR;
10012aec:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10012af0:	4770      	bx	lr
10012af2:	bf00      	nop

10012af4 <MXC_I2C_RevA_MasterTransaction>:
/* ************************************************************************* */
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_RevA_MasterTransaction(mxc_i2c_reva_req_t *req)
{
10012af4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    mxc_i2c_reva_regs_t *i2c = req->i2c; // Save off pointer for faster access
10012af8:	e9d0 4300 	ldrd	r4, r3, [r0]
    unsigned int written = 0;
    unsigned int read = 0;

    if (req->addr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
10012afc:	2b7f      	cmp	r3, #127	@ 0x7f
10012afe:	f200 80c3 	bhi.w	10012c88 <MXC_I2C_RevA_MasterTransaction+0x194>
        return E_NOT_SUPPORTED;
    }

    if (MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c) < 0) {
10012b02:	4b63      	ldr	r3, [pc, #396]	@ (10012c90 <MXC_I2C_RevA_MasterTransaction+0x19c>)
10012b04:	429c      	cmp	r4, r3
10012b06:	4605      	mov	r5, r0
10012b08:	d008      	beq.n	10012b1c <MXC_I2C_RevA_MasterTransaction+0x28>
10012b0a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012b0e:	429c      	cmp	r4, r3
10012b10:	d004      	beq.n	10012b1c <MXC_I2C_RevA_MasterTransaction+0x28>
10012b12:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012b16:	429c      	cmp	r4, r3
10012b18:	f040 80b0 	bne.w	10012c7c <MXC_I2C_RevA_MasterTransaction+0x188>
        return E_BAD_PARAM;
    }

    if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE)) {
10012b1c:	6823      	ldr	r3, [r4, #0]
10012b1e:	079e      	lsls	r6, r3, #30
10012b20:	f140 80af 	bpl.w	10012c82 <MXC_I2C_RevA_MasterTransaction+0x18e>
    //  send addr w/ read bit
    //  read rx_len bytes acking all
    // stop or restart
    // return good or error

    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
10012b24:	2207      	movs	r2, #7
10012b26:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
10012b2a:	4620      	mov	r0, r4
10012b2c:	f7ff fe1a 	bl	10012764 <MXC_I2C_ClearFlags>
                       MXC_I2C_REVA_INTFL1_MASK); // Clear all I2C Interrupts
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
10012b30:	4620      	mov	r0, r4
10012b32:	f7ff fe15 	bl	10012760 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
10012b36:	4620      	mov	r0, r4
10012b38:	f7ff fe10 	bl	1001275c <MXC_I2C_ClearRXFIFO>
    i2c->inten0 = 0;
    i2c->inten1 = 0;

    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012b3c:	696a      	ldr	r2, [r5, #20]
    i2c->inten0 = 0;
10012b3e:	2300      	movs	r3, #0
10012b40:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012b42:	6163      	str	r3, [r4, #20]
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012b44:	bb42      	cbnz	r2, 10012b98 <MXC_I2C_RevA_MasterTransaction+0xa4>
10012b46:	68ea      	ldr	r2, [r5, #12]
        // Load the slave address with write bit set
        i2c->fifo = (req->addr << 1) & ~0x1;
10012b48:	686b      	ldr	r3, [r5, #4]
10012b4a:	005b      	lsls	r3, r3, #1
10012b4c:	62e3      	str	r3, [r4, #44]	@ 0x2c
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START;
10012b4e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012b50:	f043 0301 	orr.w	r3, r3, #1
10012b54:	2600      	movs	r6, #0
10012b56:	6323      	str	r3, [r4, #48]	@ 0x30

    while (req->tx_len > written) {
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
                                           req->tx_len - written);
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012b58:	2720      	movs	r7, #32
10012b5a:	e004      	b.n	10012b66 <MXC_I2C_RevA_MasterTransaction+0x72>
        }

        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012b5c:	68a3      	ldr	r3, [r4, #8]
10012b5e:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012b62:	d111      	bne.n	10012b88 <MXC_I2C_RevA_MasterTransaction+0x94>
    while (req->tx_len > written) {
10012b64:	68ea      	ldr	r2, [r5, #12]
10012b66:	4296      	cmp	r6, r2
10012b68:	d219      	bcs.n	10012b9e <MXC_I2C_RevA_MasterTransaction+0xaa>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
10012b6a:	68a3      	ldr	r3, [r4, #8]
10012b6c:	0698      	lsls	r0, r3, #26
10012b6e:	d5f5      	bpl.n	10012b5c <MXC_I2C_RevA_MasterTransaction+0x68>
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012b70:	68a9      	ldr	r1, [r5, #8]
10012b72:	1b92      	subs	r2, r2, r6
10012b74:	4431      	add	r1, r6
10012b76:	4620      	mov	r0, r4
10012b78:	f7ff fdee 	bl	10012758 <MXC_I2C_WriteTXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012b7c:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012b7e:	68a3      	ldr	r3, [r4, #8]
10012b80:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012b84:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012b86:	d0ed      	beq.n	10012b64 <MXC_I2C_RevA_MasterTransaction+0x70>
            req->tx_len = written;
10012b88:	60ee      	str	r6, [r5, #12]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012b8a:	4620      	mov	r0, r4
10012b8c:	f7ff fde0 	bl	10012750 <MXC_I2C_Stop>
            return E_COMM_ERR;
10012b90:	f06f 0008 	mvn.w	r0, #8
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
        return E_COMM_ERR;
    }

    return E_NO_ERROR;
}
10012b94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
10012b98:	68ea      	ldr	r2, [r5, #12]
10012b9a:	2a00      	cmp	r2, #0
10012b9c:	d1d4      	bne.n	10012b48 <MXC_I2C_RevA_MasterTransaction+0x54>
    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c,
10012b9e:	2200      	movs	r2, #0
10012ba0:	2111      	movs	r1, #17
10012ba2:	4620      	mov	r0, r4
10012ba4:	f7ff fdde 	bl	10012764 <MXC_I2C_ClearFlags>
    if (req->rx_len != 0) {
10012ba8:	696b      	ldr	r3, [r5, #20]
10012baa:	2b00      	cmp	r3, #0
10012bac:	d04a      	beq.n	10012c44 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (req->rx_len > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012bae:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->rxctrl1 = 0;
10012bb2:	bf88      	it	hi
10012bb4:	2300      	movhi	r3, #0
            i2c->rxctrl1 = req->rx_len; // 0 for 256, otherwise number of bytes to read
10012bb6:	6223      	str	r3, [r4, #32]
        MXC_I2C_Start((mxc_i2c_regs_t *)i2c); // Start or Restart as needed
10012bb8:	4620      	mov	r0, r4
10012bba:	f7ff fdc7 	bl	1001274c <MXC_I2C_Start>
        while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_RESTART) {}
10012bbe:	6b26      	ldr	r6, [r4, #48]	@ 0x30
10012bc0:	f016 0602 	ands.w	r6, r6, #2
10012bc4:	d1fb      	bne.n	10012bbe <MXC_I2C_RevA_MasterTransaction+0xca>
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012bc6:	686b      	ldr	r3, [r5, #4]
    while (req->rx_len > read) {
10012bc8:	696a      	ldr	r2, [r5, #20]
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012bca:	005b      	lsls	r3, r3, #1
10012bcc:	f043 0301 	orr.w	r3, r3, #1
10012bd0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
10012bd2:	2a00      	cmp	r2, #0
10012bd4:	d036      	beq.n	10012c44 <MXC_I2C_RevA_MasterTransaction+0x150>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012bd6:	2710      	movs	r7, #16
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10012bd8:	f04f 0801 	mov.w	r8, #1
10012bdc:	e01d      	b.n	10012c1a <MXC_I2C_RevA_MasterTransaction+0x126>
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012bde:	68a3      	ldr	r3, [r4, #8]
10012be0:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
10012be4:	d129      	bne.n	10012c3a <MXC_I2C_RevA_MasterTransaction+0x146>
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
10012be6:	68a1      	ldr	r1, [r4, #8]
10012be8:	696a      	ldr	r2, [r5, #20]
10012bea:	07c9      	lsls	r1, r1, #31
10012bec:	d513      	bpl.n	10012c16 <MXC_I2C_RevA_MasterTransaction+0x122>
10012bee:	4296      	cmp	r6, r2
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012bf0:	eba2 0106 	sub.w	r1, r2, r6
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
10012bf4:	d90f      	bls.n	10012c16 <MXC_I2C_RevA_MasterTransaction+0x122>
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012bf6:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
                i2c->rxctrl1 = 0;
10012bfa:	bf8c      	ite	hi
10012bfc:	6223      	strhi	r3, [r4, #32]
                i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
10012bfe:	6221      	strls	r1, [r4, #32]
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012c00:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012c02:	f043 0302 	orr.w	r3, r3, #2
10012c06:	6323      	str	r3, [r4, #48]	@ 0x30
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012c08:	686b      	ldr	r3, [r5, #4]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10012c0a:	f8c4 8008 	str.w	r8, [r4, #8]
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012c0e:	005b      	lsls	r3, r3, #1
10012c10:	f043 0301 	orr.w	r3, r3, #1
10012c14:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
10012c16:	4296      	cmp	r6, r2
10012c18:	d214      	bcs.n	10012c44 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012c1a:	68a3      	ldr	r3, [r4, #8]
10012c1c:	f013 0f11 	tst.w	r3, #17
10012c20:	d0dd      	beq.n	10012bde <MXC_I2C_RevA_MasterTransaction+0xea>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
10012c22:	6929      	ldr	r1, [r5, #16]
10012c24:	1b92      	subs	r2, r2, r6
10012c26:	4431      	add	r1, r6
10012c28:	4620      	mov	r0, r4
10012c2a:	f7ff fd93 	bl	10012754 <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012c2e:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012c30:	68a3      	ldr	r3, [r4, #8]
10012c32:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
            read +=
10012c36:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012c38:	d0d5      	beq.n	10012be6 <MXC_I2C_RevA_MasterTransaction+0xf2>
            req->rx_len = read;
10012c3a:	616e      	str	r6, [r5, #20]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012c3c:	4620      	mov	r0, r4
10012c3e:	f7ff fd87 	bl	10012750 <MXC_I2C_Stop>
            return E_COMM_ERR;
10012c42:	e7a5      	b.n	10012b90 <MXC_I2C_RevA_MasterTransaction+0x9c>
    if (req->restart) {
10012c44:	69ab      	ldr	r3, [r5, #24]
10012c46:	b173      	cbz	r3, 10012c66 <MXC_I2C_RevA_MasterTransaction+0x172>
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012c48:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012c4a:	f043 0302 	orr.w	r3, r3, #2
10012c4e:	6323      	str	r3, [r4, #48]	@ 0x30
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
10012c50:	68a3      	ldr	r3, [r4, #8]
10012c52:	07db      	lsls	r3, r3, #31
10012c54:	d5fc      	bpl.n	10012c50 <MXC_I2C_RevA_MasterTransaction+0x15c>
    i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE | MXC_F_I2C_REVA_INTFL0_STOP;
10012c56:	2341      	movs	r3, #65	@ 0x41
10012c58:	60a3      	str	r3, [r4, #8]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012c5a:	68a0      	ldr	r0, [r4, #8]
10012c5c:	f410 40fe 	ands.w	r0, r0, #32512	@ 0x7f00
10012c60:	d196      	bne.n	10012b90 <MXC_I2C_RevA_MasterTransaction+0x9c>
}
10012c62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
10012c66:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012c68:	f043 0304 	orr.w	r3, r3, #4
10012c6c:	6323      	str	r3, [r4, #48]	@ 0x30
        while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_STOP)) {}
10012c6e:	68a3      	ldr	r3, [r4, #8]
10012c70:	065a      	lsls	r2, r3, #25
10012c72:	d5fc      	bpl.n	10012c6e <MXC_I2C_RevA_MasterTransaction+0x17a>
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
10012c74:	68a3      	ldr	r3, [r4, #8]
10012c76:	07db      	lsls	r3, r3, #31
10012c78:	d5ea      	bpl.n	10012c50 <MXC_I2C_RevA_MasterTransaction+0x15c>
10012c7a:	e7ec      	b.n	10012c56 <MXC_I2C_RevA_MasterTransaction+0x162>
        return E_BAD_PARAM;
10012c7c:	f06f 0002 	mvn.w	r0, #2
10012c80:	e7ef      	b.n	10012c62 <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_BAD_STATE;
10012c82:	f06f 0006 	mvn.w	r0, #6
10012c86:	e7ec      	b.n	10012c62 <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_NOT_SUPPORTED;
10012c88:	f06f 0010 	mvn.w	r0, #16
10012c8c:	e7e9      	b.n	10012c62 <MXC_I2C_RevA_MasterTransaction+0x16e>
10012c8e:	bf00      	nop
10012c90:	4001d000 	.word	0x4001d000

10012c94 <MXC_I2C_RevA_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_SetRXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int rxFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH) >>
10012c94:	6982      	ldr	r2, [r0, #24]
10012c96:	b2d2      	uxtb	r2, r2
                             MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH_POS;

    if (numBytes > rxFIFOlen) {
10012c98:	428a      	cmp	r2, r1
{
10012c9a:	4603      	mov	r3, r0
    if (numBytes > rxFIFOlen) {
10012c9c:	d307      	bcc.n	10012cae <MXC_I2C_RevA_SetRXThreshold+0x1a>
        return E_BAD_PARAM;
    }

    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
10012c9e:	69c2      	ldr	r2, [r0, #28]
10012ca0:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10012ca4:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10012ca8:	2000      	movs	r0, #0
    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
10012caa:	61d9      	str	r1, [r3, #28]
    return E_NO_ERROR;
10012cac:	4770      	bx	lr
        return E_BAD_PARAM;
10012cae:	f06f 0002 	mvn.w	r0, #2
}
10012cb2:	4770      	bx	lr

10012cb4 <MXC_I2C_RevA_SetTXThreshold>:
    return (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_THD_LVL) >> MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS;
}

int MXC_I2C_RevA_SetTXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
10012cb4:	6982      	ldr	r2, [r0, #24]
10012cb6:	f3c2 2207 	ubfx	r2, r2, #8, #8
                             MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;

    if (numBytes > txFIFOlen) {
10012cba:	428a      	cmp	r2, r1
{
10012cbc:	4603      	mov	r3, r0
    if (numBytes > txFIFOlen) {
10012cbe:	d307      	bcc.n	10012cd0 <MXC_I2C_RevA_SetTXThreshold+0x1c>
        return E_BAD_PARAM;
    }

    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
10012cc0:	6a42      	ldr	r2, [r0, #36]	@ 0x24
10012cc2:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10012cc6:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_TXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10012cca:	2000      	movs	r0, #0
    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
10012ccc:	6259      	str	r1, [r3, #36]	@ 0x24
    return E_NO_ERROR;
10012cce:	4770      	bx	lr
        return E_BAD_PARAM;
10012cd0:	f06f 0002 	mvn.w	r0, #2
}
10012cd4:	4770      	bx	lr
10012cd6:	bf00      	nop

10012cd8 <MXC_I2C_RevA_MasterAsyncHandler>:
    MXC_I2C_RevA_AsyncCallback(i2c, E_ABORT);
    MXC_I2C_RevA_AsyncStop(i2c);
}

void MXC_I2C_RevA_MasterAsyncHandler(int i2cNum)
{
10012cd8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    unsigned int written = AsyncWritten[i2cNum];
10012cdc:	f8df a298 	ldr.w	sl, [pc, #664]	@ 10012f78 <MXC_I2C_RevA_MasterAsyncHandler+0x2a0>
    unsigned int read = AsyncRead[i2cNum];
10012ce0:	f8df 9298 	ldr.w	r9, [pc, #664]	@ 10012f7c <MXC_I2C_RevA_MasterAsyncHandler+0x2a4>
    unsigned int written = AsyncWritten[i2cNum];
10012ce4:	f85a 6020 	ldr.w	r6, [sl, r0, lsl #2]
    unsigned int read = AsyncRead[i2cNum];
10012ce8:	f859 8020 	ldr.w	r8, [r9, r0, lsl #2]
{
10012cec:	4605      	mov	r5, r0
    mxc_i2c_reva_regs_t *i2c = (mxc_i2c_reva_regs_t *)MXC_I2C_GET_BASE(i2cNum);
10012cee:	b320      	cbz	r0, 10012d3a <MXC_I2C_RevA_MasterAsyncHandler+0x62>
10012cf0:	2801      	cmp	r0, #1
10012cf2:	f000 809c 	beq.w	10012e2e <MXC_I2C_RevA_MasterAsyncHandler+0x156>
10012cf6:	4ca2      	ldr	r4, [pc, #648]	@ (10012f80 <MXC_I2C_RevA_MasterAsyncHandler+0x2a8>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012cf8:	f8df b288 	ldr.w	fp, [pc, #648]	@ 10012f84 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    mxc_i2c_reva_regs_t *i2c = (mxc_i2c_reva_regs_t *)MXC_I2C_GET_BASE(i2cNum);
10012cfc:	2802      	cmp	r0, #2
10012cfe:	bf0c      	ite	eq
10012d00:	4623      	moveq	r3, r4
10012d02:	2300      	movne	r3, #0
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012d04:	f85b 7020 	ldr.w	r7, [fp, r0, lsl #2]

    /* Check for errors */
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012d08:	689b      	ldr	r3, [r3, #8]
10012d0a:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012d0e:	f040 80b2 	bne.w	10012e76 <MXC_I2C_RevA_MasterAsyncHandler+0x19e>

        return;
    }

    /* Write data to the TX FIFO */
    if (req->tx_len > written) {
10012d12:	68fa      	ldr	r2, [r7, #12]
10012d14:	42b2      	cmp	r2, r6
10012d16:	4611      	mov	r1, r2
10012d18:	d82f      	bhi.n	10012d7a <MXC_I2C_RevA_MasterAsyncHandler+0xa2>
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
        }
    }

    /* Read data in the RX FIFO */
    if (req->rx_len > read) {
10012d1a:	697b      	ldr	r3, [r7, #20]
10012d1c:	4543      	cmp	r3, r8
10012d1e:	d946      	bls.n	10012dae <MXC_I2C_RevA_MasterAsyncHandler+0xd6>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012d20:	68a1      	ldr	r1, [r4, #8]
10012d22:	f011 0f11 	tst.w	r1, #17
10012d26:	d137      	bne.n	10012d98 <MXC_I2C_RevA_MasterAsyncHandler+0xc0>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
        }
    }

    /* Done writing, still reading */
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012d28:	42b2      	cmp	r2, r6
10012d2a:	f000 80eb 	beq.w	10012f04 <MXC_I2C_RevA_MasterAsyncHandler+0x22c>

        /* Clear the async state */
        MXC_I2C_RevA_AsyncStop(i2c);

    } else {
        AsyncWritten[i2cNum] = written;
10012d2e:	f84a 6025 	str.w	r6, [sl, r5, lsl #2]
        AsyncRead[i2cNum] = read;
10012d32:	f849 8025 	str.w	r8, [r9, r5, lsl #2]
    }
}
10012d36:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012d3a:	4c93      	ldr	r4, [pc, #588]	@ (10012f88 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012d3c:	f8df b244 	ldr.w	fp, [pc, #580]	@ 10012f84 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012d40:	68a3      	ldr	r3, [r4, #8]
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012d42:	f8db 7000 	ldr.w	r7, [fp]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012d46:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012d4a:	d0e2      	beq.n	10012d12 <MXC_I2C_RevA_MasterAsyncHandler+0x3a>
        i2c->intfl0 = i2c->intfl0;
10012d4c:	68a3      	ldr	r3, [r4, #8]
10012d4e:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012d50:	6923      	ldr	r3, [r4, #16]
10012d52:	6123      	str	r3, [r4, #16]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012d54:	4620      	mov	r0, r4
        i2c->inten0 = 0;
10012d56:	60e5      	str	r5, [r4, #12]
        i2c->inten1 = 0;
10012d58:	6165      	str	r5, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012d5a:	f7ff fcf9 	bl	10012750 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10012d5e:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
10012d62:	69c3      	ldr	r3, [r0, #28]
10012d64:	b113      	cbz	r3, 10012d6c <MXC_I2C_RevA_MasterAsyncHandler+0x94>
        req->callback(req, retVal);
10012d66:	f06f 0108 	mvn.w	r1, #8
10012d6a:	4798      	blx	r3
    i2c->inten0 = 0;
10012d6c:	60e5      	str	r5, [r4, #12]
    i2c->inten1 = 0;
10012d6e:	6165      	str	r5, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012d70:	68a3      	ldr	r3, [r4, #8]
10012d72:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012d74:	6923      	ldr	r3, [r4, #16]
10012d76:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012d78:	e096      	b.n	10012ea8 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
10012d7a:	68a3      	ldr	r3, [r4, #8]
10012d7c:	0699      	lsls	r1, r3, #26
10012d7e:	f100 8098 	bmi.w	10012eb2 <MXC_I2C_RevA_MasterAsyncHandler+0x1da>
            i2c->inten0 |= MXC_F_I2C_REVA_INTEN0_TX_THD;
10012d82:	68e3      	ldr	r3, [r4, #12]
10012d84:	f043 0320 	orr.w	r3, r3, #32
10012d88:	60e3      	str	r3, [r4, #12]
        if ((req->tx_len == written) && (req->rx_len)) {
10012d8a:	697b      	ldr	r3, [r7, #20]
    if (req->rx_len > read) {
10012d8c:	4598      	cmp	r8, r3
10012d8e:	d2ce      	bcs.n	10012d2e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012d90:	68a1      	ldr	r1, [r4, #8]
10012d92:	f011 0f11 	tst.w	r1, #17
10012d96:	d0c7      	beq.n	10012d28 <MXC_I2C_RevA_MasterAsyncHandler+0x50>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
10012d98:	6939      	ldr	r1, [r7, #16]
10012d9a:	eba3 0208 	sub.w	r2, r3, r8
10012d9e:	4441      	add	r1, r8
10012da0:	4620      	mov	r0, r4
10012da2:	f7ff fcd7 	bl	10012754 <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012da6:	2310      	movs	r3, #16
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012da8:	68f9      	ldr	r1, [r7, #12]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10012daa:	60a3      	str	r3, [r4, #8]
            read +=
10012dac:	4480      	add	r8, r0
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012dae:	42b1      	cmp	r1, r6
10012db0:	d1bd      	bne.n	10012d2e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
10012db2:	697b      	ldr	r3, [r7, #20]
10012db4:	4543      	cmp	r3, r8
10012db6:	f040 80a5 	bne.w	10012f04 <MXC_I2C_RevA_MasterAsyncHandler+0x22c>
        i2c->inten0 = 0;
10012dba:	2300      	movs	r3, #0
10012dbc:	60e3      	str	r3, [r4, #12]
        i2c->inten1 = 0;
10012dbe:	6163      	str	r3, [r4, #20]
        i2c->intfl0 = i2c->intfl0;
10012dc0:	68a3      	ldr	r3, [r4, #8]
10012dc2:	60a3      	str	r3, [r4, #8]
        if (req->restart) {
10012dc4:	69bb      	ldr	r3, [r7, #24]
        i2c->intfl1 = i2c->intfl1;
10012dc6:	6922      	ldr	r2, [r4, #16]
10012dc8:	6122      	str	r2, [r4, #16]
        if (req->restart) {
10012dca:	2b00      	cmp	r3, #0
10012dcc:	f040 80b3 	bne.w	10012f36 <MXC_I2C_RevA_MasterAsyncHandler+0x25e>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
10012dd0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012dd2:	f043 0304 	orr.w	r3, r3, #4
10012dd6:	6323      	str	r3, [r4, #48]	@ 0x30
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012dd8:	68a3      	ldr	r3, [r4, #8]
10012dda:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
10012dde:	4b6a      	ldr	r3, [pc, #424]	@ (10012f88 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012de0:	f000 80bc 	beq.w	10012f5c <MXC_I2C_RevA_MasterAsyncHandler+0x284>
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
10012de4:	429c      	cmp	r4, r3
10012de6:	f000 80da 	beq.w	10012f9e <MXC_I2C_RevA_MasterAsyncHandler+0x2c6>
10012dea:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012dee:	429c      	cmp	r4, r3
10012df0:	f000 8105 	beq.w	10012ffe <MXC_I2C_RevA_MasterAsyncHandler+0x326>
    mxc_i2c_reva_req_t *req =
10012df4:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
10012df8:	69c3      	ldr	r3, [r0, #28]
10012dfa:	2b00      	cmp	r3, #0
10012dfc:	f000 80e3 	beq.w	10012fc6 <MXC_I2C_RevA_MasterAsyncHandler+0x2ee>
        req->callback(req, retVal);
10012e00:	f06f 0108 	mvn.w	r1, #8
10012e04:	4798      	blx	r3
    i2c->inten0 = 0;
10012e06:	2300      	movs	r3, #0
10012e08:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012e0a:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012e0c:	68a3      	ldr	r3, [r4, #8]
10012e0e:	60a3      	str	r3, [r4, #8]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012e10:	4b5d      	ldr	r3, [pc, #372]	@ (10012f88 <MXC_I2C_RevA_MasterAsyncHandler+0x2b0>)
    i2c->intfl1 = i2c->intfl1;
10012e12:	6922      	ldr	r2, [r4, #16]
10012e14:	6122      	str	r2, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012e16:	429c      	cmp	r4, r3
10012e18:	f000 80cd 	beq.w	10012fb6 <MXC_I2C_RevA_MasterAsyncHandler+0x2de>
10012e1c:	4b5b      	ldr	r3, [pc, #364]	@ (10012f8c <MXC_I2C_RevA_MasterAsyncHandler+0x2b4>)
10012e1e:	429c      	cmp	r4, r3
10012e20:	f000 80e4 	beq.w	10012fec <MXC_I2C_RevA_MasterAsyncHandler+0x314>
10012e24:	2202      	movs	r2, #2
10012e26:	2300      	movs	r3, #0
10012e28:	f84b 3022 	str.w	r3, [fp, r2, lsl #2]
}
10012e2c:	e783      	b.n	10012d36 <MXC_I2C_RevA_MasterAsyncHandler+0x5e>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e2e:	4c57      	ldr	r4, [pc, #348]	@ (10012f8c <MXC_I2C_RevA_MasterAsyncHandler+0x2b4>)
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012e30:	f8df b150 	ldr.w	fp, [pc, #336]	@ 10012f84 <MXC_I2C_RevA_MasterAsyncHandler+0x2ac>
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e34:	68a3      	ldr	r3, [r4, #8]
    mxc_i2c_reva_req_t *req = (mxc_i2c_reva_req_t *)AsyncRequests[i2cNum];
10012e36:	f8db 7004 	ldr.w	r7, [fp, #4]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
10012e3a:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
10012e3e:	f43f af68 	beq.w	10012d12 <MXC_I2C_RevA_MasterAsyncHandler+0x3a>
        i2c->intfl0 = i2c->intfl0;
10012e42:	68a3      	ldr	r3, [r4, #8]
10012e44:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012e46:	6923      	ldr	r3, [r4, #16]
10012e48:	6123      	str	r3, [r4, #16]
        i2c->inten0 = 0;
10012e4a:	2600      	movs	r6, #0
10012e4c:	60e6      	str	r6, [r4, #12]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012e4e:	4620      	mov	r0, r4
        i2c->inten1 = 0;
10012e50:	6166      	str	r6, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012e52:	f7ff fc7d 	bl	10012750 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10012e56:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
10012e5a:	69c3      	ldr	r3, [r0, #28]
10012e5c:	2b00      	cmp	r3, #0
10012e5e:	f000 80c7 	beq.w	10012ff0 <MXC_I2C_RevA_MasterAsyncHandler+0x318>
        req->callback(req, retVal);
10012e62:	f06f 0108 	mvn.w	r1, #8
10012e66:	4798      	blx	r3
    i2c->inten0 = 0;
10012e68:	60e6      	str	r6, [r4, #12]
    i2c->inten1 = 0;
10012e6a:	6166      	str	r6, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012e6c:	68a3      	ldr	r3, [r4, #8]
10012e6e:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012e70:	6923      	ldr	r3, [r4, #16]
10012e72:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012e74:	e018      	b.n	10012ea8 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
        i2c->intfl0 = i2c->intfl0;
10012e76:	68a3      	ldr	r3, [r4, #8]
10012e78:	60a3      	str	r3, [r4, #8]
        i2c->intfl1 = i2c->intfl1;
10012e7a:	6923      	ldr	r3, [r4, #16]
10012e7c:	6123      	str	r3, [r4, #16]
        i2c->inten0 = 0;
10012e7e:	2500      	movs	r5, #0
10012e80:	60e5      	str	r5, [r4, #12]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012e82:	4620      	mov	r0, r4
        i2c->inten1 = 0;
10012e84:	6165      	str	r5, [r4, #20]
        MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
10012e86:	f7ff fc63 	bl	10012750 <MXC_I2C_Stop>
    mxc_i2c_reva_req_t *req =
10012e8a:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
10012e8e:	69c3      	ldr	r3, [r0, #28]
10012e90:	2b00      	cmp	r3, #0
10012e92:	d07d      	beq.n	10012f90 <MXC_I2C_RevA_MasterAsyncHandler+0x2b8>
        req->callback(req, retVal);
10012e94:	f06f 0108 	mvn.w	r1, #8
10012e98:	4798      	blx	r3
    i2c->inten0 = 0;
10012e9a:	60e5      	str	r5, [r4, #12]
    i2c->inten1 = 0;
10012e9c:	6165      	str	r5, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012e9e:	68a3      	ldr	r3, [r4, #8]
10012ea0:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012ea2:	6923      	ldr	r3, [r4, #16]
10012ea4:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012ea6:	2502      	movs	r5, #2
10012ea8:	2300      	movs	r3, #0
10012eaa:	f84b 3025 	str.w	r3, [fp, r5, lsl #2]
}
10012eae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012eb2:	68b9      	ldr	r1, [r7, #8]
10012eb4:	1b92      	subs	r2, r2, r6
10012eb6:	4431      	add	r1, r6
10012eb8:	4620      	mov	r0, r4
10012eba:	f7ff fc4d 	bl	10012758 <MXC_I2C_WriteTXFIFO>
        if (written < req->tx_len) {
10012ebe:	68fa      	ldr	r2, [r7, #12]
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
10012ec0:	4406      	add	r6, r0
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012ec2:	2320      	movs	r3, #32
        if (written < req->tx_len) {
10012ec4:	42b2      	cmp	r2, r6
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10012ec6:	60a3      	str	r3, [r4, #8]
        if (written < req->tx_len) {
10012ec8:	f63f af5b 	bhi.w	10012d82 <MXC_I2C_RevA_MasterAsyncHandler+0xaa>
            i2c->inten0 &= ~(MXC_F_I2C_REVA_INTEN0_TX_THD);
10012ecc:	68e3      	ldr	r3, [r4, #12]
10012ece:	f023 0320 	bic.w	r3, r3, #32
10012ed2:	60e3      	str	r3, [r4, #12]
        if ((req->tx_len == written) && (req->rx_len)) {
10012ed4:	697b      	ldr	r3, [r7, #20]
10012ed6:	f47f af59 	bne.w	10012d8c <MXC_I2C_RevA_MasterAsyncHandler+0xb4>
10012eda:	2b00      	cmp	r3, #0
10012edc:	f43f af6a 	beq.w	10012db4 <MXC_I2C_RevA_MasterAsyncHandler+0xdc>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012ee0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
10012ee2:	f042 0202 	orr.w	r2, r2, #2
10012ee6:	6322      	str	r2, [r4, #48]	@ 0x30
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10012ee8:	2201      	movs	r2, #1
10012eea:	60a2      	str	r2, [r4, #8]
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
10012eec:	68e2      	ldr	r2, [r4, #12]
    if (req->rx_len > read) {
10012eee:	4598      	cmp	r8, r3
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_DONE);
10012ef0:	f042 0201 	orr.w	r2, r2, #1
10012ef4:	60e2      	str	r2, [r4, #12]
    if (req->rx_len > read) {
10012ef6:	f4bf af5d 	bcs.w	10012db4 <MXC_I2C_RevA_MasterAsyncHandler+0xdc>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
10012efa:	68a2      	ldr	r2, [r4, #8]
10012efc:	f012 0f11 	tst.w	r2, #17
10012f00:	f47f af4a 	bne.w	10012d98 <MXC_I2C_RevA_MasterAsyncHandler+0xc0>
        (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {
10012f04:	68a2      	ldr	r2, [r4, #8]
    if ((req->tx_len == written) && (req->rx_len - read) &&
10012f06:	07d2      	lsls	r2, r2, #31
10012f08:	f57f af11 	bpl.w	10012d2e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
10012f0c:	2201      	movs	r2, #1
10012f0e:	60a2      	str	r2, [r4, #8]
        if (read == 0) {
10012f10:	f1b8 0f00 	cmp.w	r8, #0
10012f14:	d114      	bne.n	10012f40 <MXC_I2C_RevA_MasterAsyncHandler+0x268>
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012f16:	687a      	ldr	r2, [r7, #4]
10012f18:	0052      	lsls	r2, r2, #1
        if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012f1a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
10012f1e:	f042 0201 	orr.w	r2, r2, #1
10012f22:	62e2      	str	r2, [r4, #44]	@ 0x2c
            i2c->rxctrl1 = 0;
10012f24:	bf8c      	ite	hi
10012f26:	f8c4 8020 	strhi.w	r8, [r4, #32]
            i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
10012f2a:	6223      	strls	r3, [r4, #32]
            i2c->inten0 |= (MXC_F_I2C_REVA_INTEN0_RX_THD | MXC_F_I2C_REVA_INTEN0_DONE);
10012f2c:	68e3      	ldr	r3, [r4, #12]
10012f2e:	f043 0311 	orr.w	r3, r3, #17
10012f32:	60e3      	str	r3, [r4, #12]
10012f34:	e6fb      	b.n	10012d2e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
10012f36:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10012f38:	f043 0302 	orr.w	r3, r3, #2
10012f3c:	6323      	str	r3, [r4, #48]	@ 0x30
10012f3e:	e74b      	b.n	10012dd8 <MXC_I2C_RevA_MasterAsyncHandler+0x100>
        if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
10012f40:	eba3 0208 	sub.w	r2, r3, r8
10012f44:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
            i2c->rxctrl1 = 0;
10012f48:	bf88      	it	hi
10012f4a:	2200      	movhi	r2, #0
        if (read < req->rx_len) {
10012f4c:	4598      	cmp	r8, r3
            i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
10012f4e:	6222      	str	r2, [r4, #32]
        if (read < req->rx_len) {
10012f50:	d3ec      	bcc.n	10012f2c <MXC_I2C_RevA_MasterAsyncHandler+0x254>
            i2c->inten0 &= ~(MXC_F_I2C_REVA_INTEN0_RX_THD | MXC_F_I2C_REVA_INTEN0_DONE);
10012f52:	68e3      	ldr	r3, [r4, #12]
10012f54:	f023 0311 	bic.w	r3, r3, #17
10012f58:	60e3      	str	r3, [r4, #12]
10012f5a:	e6e8      	b.n	10012d2e <MXC_I2C_RevA_MasterAsyncHandler+0x56>
        (mxc_i2c_reva_req_t *)AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)];
10012f5c:	429c      	cmp	r4, r3
10012f5e:	d02c      	beq.n	10012fba <MXC_I2C_RevA_MasterAsyncHandler+0x2e2>
10012f60:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10012f64:	429c      	cmp	r4, r3
10012f66:	d036      	beq.n	10012fd6 <MXC_I2C_RevA_MasterAsyncHandler+0x2fe>
    mxc_i2c_reva_req_t *req =
10012f68:	f8db 0008 	ldr.w	r0, [fp, #8]
    if (req->callback != NULL) {
10012f6c:	69c3      	ldr	r3, [r0, #28]
10012f6e:	b353      	cbz	r3, 10012fc6 <MXC_I2C_RevA_MasterAsyncHandler+0x2ee>
        req->callback(req, retVal);
10012f70:	2100      	movs	r1, #0
10012f72:	4798      	blx	r3
10012f74:	e747      	b.n	10012e06 <MXC_I2C_RevA_MasterAsyncHandler+0x12e>
10012f76:	bf00      	nop
10012f78:	20000fec 	.word	0x20000fec
10012f7c:	20000fe0 	.word	0x20000fe0
10012f80:	4001f000 	.word	0x4001f000
10012f84:	20000ff8 	.word	0x20000ff8
10012f88:	4001d000 	.word	0x4001d000
10012f8c:	4001e000 	.word	0x4001e000
    i2c->inten0 = 0;
10012f90:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012f92:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012f94:	68a3      	ldr	r3, [r4, #8]
10012f96:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012f98:	6923      	ldr	r3, [r4, #16]
10012f9a:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012f9c:	e783      	b.n	10012ea6 <MXC_I2C_RevA_MasterAsyncHandler+0x1ce>
    mxc_i2c_reva_req_t *req =
10012f9e:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
10012fa2:	69c3      	ldr	r3, [r0, #28]
10012fa4:	2b00      	cmp	r3, #0
10012fa6:	f47f af2b 	bne.w	10012e00 <MXC_I2C_RevA_MasterAsyncHandler+0x128>
    i2c->inten0 = 0;
10012faa:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012fac:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012fae:	68a3      	ldr	r3, [r4, #8]
10012fb0:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012fb2:	6923      	ldr	r3, [r4, #16]
10012fb4:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012fb6:	2200      	movs	r2, #0
10012fb8:	e735      	b.n	10012e26 <MXC_I2C_RevA_MasterAsyncHandler+0x14e>
    mxc_i2c_reva_req_t *req =
10012fba:	f8db 0000 	ldr.w	r0, [fp]
    if (req->callback != NULL) {
10012fbe:	69c3      	ldr	r3, [r0, #28]
10012fc0:	2b00      	cmp	r3, #0
10012fc2:	d1d5      	bne.n	10012f70 <MXC_I2C_RevA_MasterAsyncHandler+0x298>
10012fc4:	e7f1      	b.n	10012faa <MXC_I2C_RevA_MasterAsyncHandler+0x2d2>
    i2c->inten0 = 0;
10012fc6:	4a11      	ldr	r2, [pc, #68]	@ (1001300c <MXC_I2C_RevA_MasterAsyncHandler+0x334>)
10012fc8:	60d3      	str	r3, [r2, #12]
    i2c->inten1 = 0;
10012fca:	6153      	str	r3, [r2, #20]
    i2c->intfl0 = i2c->intfl0;
10012fcc:	6893      	ldr	r3, [r2, #8]
10012fce:	6093      	str	r3, [r2, #8]
    i2c->intfl1 = i2c->intfl1;
10012fd0:	6913      	ldr	r3, [r2, #16]
10012fd2:	6113      	str	r3, [r2, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012fd4:	e726      	b.n	10012e24 <MXC_I2C_RevA_MasterAsyncHandler+0x14c>
    mxc_i2c_reva_req_t *req =
10012fd6:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
10012fda:	69c3      	ldr	r3, [r0, #28]
10012fdc:	2b00      	cmp	r3, #0
10012fde:	d1c7      	bne.n	10012f70 <MXC_I2C_RevA_MasterAsyncHandler+0x298>
    i2c->inten0 = 0;
10012fe0:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012fe2:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012fe4:	68a3      	ldr	r3, [r4, #8]
10012fe6:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012fe8:	6923      	ldr	r3, [r4, #16]
10012fea:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012fec:	2201      	movs	r2, #1
10012fee:	e71a      	b.n	10012e26 <MXC_I2C_RevA_MasterAsyncHandler+0x14e>
    i2c->inten0 = 0;
10012ff0:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
10012ff2:	6163      	str	r3, [r4, #20]
    i2c->intfl0 = i2c->intfl0;
10012ff4:	68a3      	ldr	r3, [r4, #8]
10012ff6:	60a3      	str	r3, [r4, #8]
    i2c->intfl1 = i2c->intfl1;
10012ff8:	6923      	ldr	r3, [r4, #16]
10012ffa:	6123      	str	r3, [r4, #16]
    AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10012ffc:	e754      	b.n	10012ea8 <MXC_I2C_RevA_MasterAsyncHandler+0x1d0>
    mxc_i2c_reva_req_t *req =
10012ffe:	f8db 0004 	ldr.w	r0, [fp, #4]
    if (req->callback != NULL) {
10013002:	69c3      	ldr	r3, [r0, #28]
10013004:	2b00      	cmp	r3, #0
10013006:	f47f aefb 	bne.w	10012e00 <MXC_I2C_RevA_MasterAsyncHandler+0x128>
1001300a:	e7e9      	b.n	10012fe0 <MXC_I2C_RevA_MasterAsyncHandler+0x308>
1001300c:	4001f000 	.word	0x4001f000

10013010 <MXC_I2C_RevA_SlaveAsyncHandler>:

void MXC_I2C_RevA_SlaveAsyncHandler(mxc_i2c_reva_regs_t *i2c, mxc_i2c_reva_slave_handler_t callback,
                                    uint32_t *int_en, int *retVal)
{
10013010:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10013014:	4615      	mov	r5, r2
10013016:	460e      	mov	r6, r1
    // I2C_EVT_RX_THRESH
    // I2C_EVT_TX_THRESH
    // I2C_EVT_TRANS_COMP
    // I2C_EVT_UNDERFLOW
    // I2C_EVT_OVERFLOW
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
10013018:	6812      	ldr	r2, [r2, #0]
1001301a:	49b2      	ldr	r1, [pc, #712]	@ (100132e4 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d4>)
    uint32_t tFlags = i2c->intfl0;
1001301c:	f8d0 9008 	ldr.w	r9, [r0, #8]
    *retVal = E_NO_ERROR;
10013020:	2700      	movs	r7, #0
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
10013022:	4011      	ands	r1, r2
    *retVal = E_NO_ERROR;
10013024:	601f      	str	r7, [r3, #0]
{
10013026:	4604      	mov	r4, r0
    uint32_t readFlag = i2c->ctrl & MXC_F_I2C_REVA_CTRL_READ;
10013028:	6807      	ldr	r7, [r0, #0]
{
1001302a:	4698      	mov	r8, r3
    if (!(int_en[0] & (MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH | MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH |
1001302c:	2900      	cmp	r1, #0
1001302e:	d15a      	bne.n	100130e6 <MXC_I2C_RevA_SlaveAsyncHandler+0xd6>
                       MXC_F_I2C_REVA_INTFL0_ADDR_MATCH))) {
        // The STOPERR/STARTERR interrupt that's enabled here could fire before we are addressed
        // (fires anytime a stop/start is detected out of sequence).
        if (tFlags & MXC_I2C_REVA_ERROR) {
10013030:	f419 4ffe 	tst.w	r9, #32512	@ 0x7f00
10013034:	f040 80cf 	bne.w	100131d6 <MXC_I2C_RevA_SlaveAsyncHandler+0x1c6>
            int_en[0] = 0;
            int_en[1] = 0;
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
        }

        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013038:	06d3      	lsls	r3, r2, #27
1001303a:	f140 81a4 	bpl.w	10013386 <MXC_I2C_RevA_SlaveAsyncHandler+0x376>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_RX_THD) {
1001303e:	f019 0f10 	tst.w	r9, #16
10013042:	f000 8148 	beq.w	100132d6 <MXC_I2C_RevA_SlaveAsyncHandler+0x2c6>
                if (callback != NULL) {
10013046:	2e00      	cmp	r6, #0
10013048:	f000 815c 	beq.w	10013304 <MXC_I2C_RevA_SlaveAsyncHandler+0x2f4>
                    callback(i2c, MXC_I2C_REVA_EVT_RX_THRESH, NULL);
1001304c:	2200      	movs	r2, #0
1001304e:	2102      	movs	r1, #2
10013050:	4620      	mov	r0, r4
10013052:	47b0      	blx	r6
                }

                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10013054:	2310      	movs	r3, #16
10013056:	60a3      	str	r3, [r4, #8]
            }

            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013058:	6923      	ldr	r3, [r4, #16]
1001305a:	07da      	lsls	r2, r3, #31
1001305c:	d505      	bpl.n	1001306a <MXC_I2C_RevA_SlaveAsyncHandler+0x5a>
                if (callback != NULL) {
                    callback(i2c, MXC_I2C_REVA_EVT_OVERFLOW, NULL);
1001305e:	2200      	movs	r2, #0
10013060:	2106      	movs	r1, #6
10013062:	4620      	mov	r0, r4
10013064:	47b0      	blx	r6
                }

                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_RX_OV;
10013066:	2301      	movs	r3, #1
10013068:	6123      	str	r3, [r4, #16]
1001306a:	682a      	ldr	r2, [r5, #0]
            }
        }

        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
1001306c:	f248 0320 	movw	r3, #32800	@ 0x8020
10013070:	4213      	tst	r3, r2
10013072:	f000 80df 	beq.w	10013234 <MXC_I2C_RevA_SlaveAsyncHandler+0x224>
            int_en[1] & MXC_F_I2C_REVA_INTFL1_TX_UN) {
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_THD) {
10013076:	f019 0f20 	tst.w	r9, #32
                }

                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
            }

            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
1001307a:	f409 4a00 	and.w	sl, r9, #32768	@ 0x8000
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_THD) {
1001307e:	f000 80fc 	beq.w	1001327a <MXC_I2C_RevA_SlaveAsyncHandler+0x26a>
                if (callback != NULL) {
10013082:	2e00      	cmp	r6, #0
10013084:	f000 8145 	beq.w	10013312 <MXC_I2C_RevA_SlaveAsyncHandler+0x302>
                    callback(i2c, MXC_I2C_REVA_EVT_TX_THRESH, NULL);
10013088:	2103      	movs	r1, #3
1001308a:	2200      	movs	r2, #0
1001308c:	4620      	mov	r0, r4
1001308e:	47b0      	blx	r6
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10013090:	2320      	movs	r3, #32
10013092:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10013094:	6923      	ldr	r3, [r4, #16]
10013096:	0799      	lsls	r1, r3, #30
10013098:	f100 80f5 	bmi.w	10013286 <MXC_I2C_RevA_SlaveAsyncHandler+0x276>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
1001309c:	f1ba 0f00 	cmp.w	sl, #0
100130a0:	f040 80fa 	bne.w	10013298 <MXC_I2C_RevA_SlaveAsyncHandler+0x288>
                int_en[1] = 0;
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
            }
        }

        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
100130a4:	f019 0f40 	tst.w	r9, #64	@ 0x40
100130a8:	f000 8168 	beq.w	1001337c <MXC_I2C_RevA_SlaveAsyncHandler+0x36c>
            *retVal = E_NO_ERROR;
100130ac:	f8c8 a000 	str.w	sl, [r8]

            if (callback != NULL) {
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100130b0:	4642      	mov	r2, r8
100130b2:	2104      	movs	r1, #4
100130b4:	4620      	mov	r0, r4
100130b6:	47b0      	blx	r6
            }

            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
            int_en[0] = 0;
            int_en[1] = 0;
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100130b8:	4a8b      	ldr	r2, [pc, #556]	@ (100132e8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
            int_en[0] = 0;
100130ba:	2300      	movs	r3, #0
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
100130bc:	2140      	movs	r1, #64	@ 0x40
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100130be:	4294      	cmp	r4, r2
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_STOP;
100130c0:	60a1      	str	r1, [r4, #8]
            int_en[0] = 0;
100130c2:	602b      	str	r3, [r5, #0]
100130c4:	606b      	str	r3, [r5, #4]
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100130c6:	d00a      	beq.n	100130de <MXC_I2C_RevA_SlaveAsyncHandler+0xce>
100130c8:	4b88      	ldr	r3, [pc, #544]	@ (100132ec <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
100130ca:	429c      	cmp	r4, r3
100130cc:	f000 8131 	beq.w	10013332 <MXC_I2C_RevA_SlaveAsyncHandler+0x322>
100130d0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100130d4:	429c      	cmp	r4, r3
100130d6:	bf0c      	ite	eq
100130d8:	2302      	moveq	r3, #2
100130da:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
100130de:	4a84      	ldr	r2, [pc, #528]	@ (100132f0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
100130e0:	2100      	movs	r1, #0
100130e2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        }
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
100130e6:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
100130ea:	d011      	beq.n	10013110 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
        if (callback != NULL) {
100130ec:	b11e      	cbz	r6, 100130f6 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
            callback(i2c, MXC_I2C_REVA_EVT_MASTER_WR, NULL);
100130ee:	2200      	movs	r2, #0
100130f0:	4611      	mov	r1, r2
100130f2:	4620      	mov	r0, r4
100130f4:	47b0      	blx	r6
        }

        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
100130f6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
100130fa:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
100130fc:	2308      	movs	r3, #8
100130fe:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10013100:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
10013104:	60a3      	str	r3, [r4, #8]

        int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE | MXC_I2C_REVA_ERROR;
10013106:	f647 7311 	movw	r3, #32529	@ 0x7f11
1001310a:	602b      	str	r3, [r5, #0]
1001310c:	2301      	movs	r3, #1
1001310e:	606b      	str	r3, [r5, #4]
        int_en[1] = MXC_F_I2C_REVA_INTFL1_RX_OV;
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH) {
10013110:	f419 0f00 	tst.w	r9, #8388608	@ 0x800000
10013114:	d00e      	beq.n	10013134 <MXC_I2C_RevA_SlaveAsyncHandler+0x124>
        if (callback != NULL) {
10013116:	b11e      	cbz	r6, 10013120 <MXC_I2C_RevA_SlaveAsyncHandler+0x110>
            callback(i2c, MXC_I2C_REVA_EVT_MASTER_RD, NULL);
10013118:	2200      	movs	r2, #0
1001311a:	2101      	movs	r1, #1
1001311c:	4620      	mov	r0, r4
1001311e:	47b0      	blx	r6
        }

        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH;
10013120:	f44f 0300 	mov.w	r3, #8388608	@ 0x800000
10013124:	60a3      	str	r3, [r4, #8]
        i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10013126:	2308      	movs	r3, #8
10013128:	60a3      	str	r3, [r4, #8]
        int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
1001312a:	f64f 7320 	movw	r3, #65312	@ 0xff20
1001312e:	602b      	str	r3, [r5, #0]
10013130:	2302      	movs	r3, #2
10013132:	606b      	str	r3, [r5, #4]
                    MXC_I2C_REVA_ERROR;
        int_en[1] = MXC_F_I2C_REVA_INTFL1_TX_UN;
    }

    if (tFlags & MXC_F_I2C_REVA_INTFL0_ADDR_MATCH) {
10013134:	f019 0f08 	tst.w	r9, #8
10013138:	d017      	beq.n	1001316a <MXC_I2C_RevA_SlaveAsyncHandler+0x15a>
        if (readFlag & MXC_F_I2C_REVA_CTRL_READ) {
1001313a:	f417 6200 	ands.w	r2, r7, #2048	@ 0x800
1001313e:	f000 808c 	beq.w	1001325a <MXC_I2C_RevA_SlaveAsyncHandler+0x24a>
            if (callback != NULL) {
10013142:	b11e      	cbz	r6, 1001314c <MXC_I2C_RevA_SlaveAsyncHandler+0x13c>
                callback(i2c, MXC_I2C_REVA_EVT_MASTER_RD, NULL);
10013144:	2200      	movs	r2, #0
10013146:	2101      	movs	r1, #1
10013148:	4620      	mov	r0, r4
1001314a:	47b0      	blx	r6
            }

            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
1001314c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10013150:	2308      	movs	r3, #8
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH;
10013152:	60a2      	str	r2, [r4, #8]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10013154:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10013158:	60a3      	str	r3, [r4, #8]

            int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
1001315a:	f64f 7220 	movw	r2, #65312	@ 0xff20
1001315e:	2302      	movs	r3, #2
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
10013160:	60a1      	str	r1, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT |
10013162:	602a      	str	r2, [r5, #0]
10013164:	606b      	str	r3, [r5, #4]
        MXC_I2C_RevA_ClearRXFIFO(i2c);
        int_en[0] = 0;
        int_en[1] = 0;
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
    }
}
10013166:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    } else if (tFlags & MXC_I2C_REVA_ERROR) {
1001316a:	f419 4ffe 	tst.w	r9, #32512	@ 0x7f00
1001316e:	d0fa      	beq.n	10013166 <MXC_I2C_RevA_SlaveAsyncHandler+0x156>
        *retVal = E_COMM_ERR;
10013170:	f06f 0308 	mvn.w	r3, #8
10013174:	f8c8 3000 	str.w	r3, [r8]
        if (callback != NULL) {
10013178:	b11e      	cbz	r6, 10013182 <MXC_I2C_RevA_SlaveAsyncHandler+0x172>
            callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
1001317a:	4642      	mov	r2, r8
1001317c:	2104      	movs	r1, #4
1001317e:	4620      	mov	r0, r4
10013180:	47b0      	blx	r6
    i2c->intfl1 = flags1;
10013182:	2307      	movs	r3, #7
    i2c->intfl0 = flags0;
10013184:	f06f 427f 	mvn.w	r2, #4278190080	@ 0xff000000
10013188:	60a2      	str	r2, [r4, #8]
    i2c->intfl1 = flags1;
1001318a:	6123      	str	r3, [r4, #16]
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
1001318c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
1001318e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10013192:	6263      	str	r3, [r4, #36]	@ 0x24
    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
10013194:	6a63      	ldr	r3, [r4, #36]	@ 0x24
10013196:	061b      	lsls	r3, r3, #24
10013198:	d4fc      	bmi.n	10013194 <MXC_I2C_RevA_SlaveAsyncHandler+0x184>
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
1001319a:	69e3      	ldr	r3, [r4, #28]
1001319c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
100131a0:	61e3      	str	r3, [r4, #28]
    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
100131a2:	69e3      	ldr	r3, [r4, #28]
100131a4:	f013 0380 	ands.w	r3, r3, #128	@ 0x80
100131a8:	d1fb      	bne.n	100131a2 <MXC_I2C_RevA_SlaveAsyncHandler+0x192>
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100131aa:	4a4f      	ldr	r2, [pc, #316]	@ (100132e8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
        int_en[0] = 0;
100131ac:	602b      	str	r3, [r5, #0]
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100131ae:	4294      	cmp	r4, r2
        int_en[0] = 0;
100131b0:	606b      	str	r3, [r5, #4]
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100131b2:	d00a      	beq.n	100131ca <MXC_I2C_RevA_SlaveAsyncHandler+0x1ba>
100131b4:	4b4d      	ldr	r3, [pc, #308]	@ (100132ec <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
100131b6:	429c      	cmp	r4, r3
100131b8:	f000 80bf 	beq.w	1001333a <MXC_I2C_RevA_SlaveAsyncHandler+0x32a>
100131bc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100131c0:	429c      	cmp	r4, r3
100131c2:	bf14      	ite	ne
100131c4:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
100131c8:	2302      	moveq	r3, #2
100131ca:	4a49      	ldr	r2, [pc, #292]	@ (100132f0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
100131cc:	2100      	movs	r1, #0
100131ce:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
100131d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            *retVal = E_COMM_ERR;
100131d6:	f06f 0308 	mvn.w	r3, #8
100131da:	f8c8 3000 	str.w	r3, [r8]
            if (callback != NULL) {
100131de:	b116      	cbz	r6, 100131e6 <MXC_I2C_RevA_SlaveAsyncHandler+0x1d6>
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
100131e0:	4642      	mov	r2, r8
100131e2:	2104      	movs	r1, #4
100131e4:	47b0      	blx	r6
            MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
100131e6:	2207      	movs	r2, #7
100131e8:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
100131ec:	4620      	mov	r0, r4
100131ee:	f7ff fab9 	bl	10012764 <MXC_I2C_ClearFlags>
            MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
100131f2:	4620      	mov	r0, r4
100131f4:	f7ff fab4 	bl	10012760 <MXC_I2C_ClearTXFIFO>
            MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
100131f8:	4620      	mov	r0, r4
100131fa:	f7ff faaf 	bl	1001275c <MXC_I2C_ClearRXFIFO>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100131fe:	4a3a      	ldr	r2, [pc, #232]	@ (100132e8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
            int_en[0] = 0;
10013200:	2300      	movs	r3, #0
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013202:	4294      	cmp	r4, r2
            int_en[0] = 0;
10013204:	602b      	str	r3, [r5, #0]
10013206:	606b      	str	r3, [r5, #4]
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013208:	d00a      	beq.n	10013220 <MXC_I2C_RevA_SlaveAsyncHandler+0x210>
1001320a:	4b38      	ldr	r3, [pc, #224]	@ (100132ec <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
1001320c:	429c      	cmp	r4, r3
1001320e:	f000 8092 	beq.w	10013336 <MXC_I2C_RevA_SlaveAsyncHandler+0x326>
10013212:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013216:	429c      	cmp	r4, r3
10013218:	bf0c      	ite	eq
1001321a:	2302      	moveq	r3, #2
1001321c:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
10013220:	4a33      	ldr	r2, [pc, #204]	@ (100132f0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
10013222:	2100      	movs	r1, #0
10013224:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013228:	682a      	ldr	r2, [r5, #0]
        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
1001322a:	f248 0320 	movw	r3, #32800	@ 0x8020
1001322e:	4213      	tst	r3, r2
10013230:	f47f af21 	bne.w	10013076 <MXC_I2C_RevA_SlaveAsyncHandler+0x66>
            int_en[1] & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10013234:	686b      	ldr	r3, [r5, #4]
        if (int_en[0] & (MXC_F_I2C_REVA_INTFL0_TX_THD | MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) ||
10013236:	0798      	lsls	r0, r3, #30
10013238:	f53f af1d 	bmi.w	10013076 <MXC_I2C_RevA_SlaveAsyncHandler+0x66>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
1001323c:	f019 0f40 	tst.w	r9, #64	@ 0x40
10013240:	f43f af51 	beq.w	100130e6 <MXC_I2C_RevA_SlaveAsyncHandler+0xd6>
            *retVal = E_NO_ERROR;
10013244:	2300      	movs	r3, #0
10013246:	f8c8 3000 	str.w	r3, [r8]
            if (callback != NULL) {
1001324a:	2e00      	cmp	r6, #0
1001324c:	f43f af34 	beq.w	100130b8 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
                callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
10013250:	4642      	mov	r2, r8
10013252:	2104      	movs	r1, #4
10013254:	4620      	mov	r0, r4
10013256:	47b0      	blx	r6
10013258:	e72e      	b.n	100130b8 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
            if (callback != NULL) {
1001325a:	b116      	cbz	r6, 10013262 <MXC_I2C_RevA_SlaveAsyncHandler+0x252>
                callback(i2c, MXC_I2C_REVA_EVT_MASTER_WR, NULL);
1001325c:	4611      	mov	r1, r2
1001325e:	4620      	mov	r0, r4
10013260:	47b0      	blx	r6
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
10013262:	2308      	movs	r3, #8
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH;
10013264:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
10013268:	60a1      	str	r1, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE |
1001326a:	f647 7211 	movw	r2, #32529	@ 0x7f11
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_ADDR_MATCH;
1001326e:	60a3      	str	r3, [r4, #8]
            int_en[0] = MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE |
10013270:	2301      	movs	r3, #1
10013272:	602a      	str	r2, [r5, #0]
10013274:	606b      	str	r3, [r5, #4]
}
10013276:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
1001327a:	6923      	ldr	r3, [r4, #16]
1001327c:	f013 0302 	ands.w	r3, r3, #2
10013280:	d038      	beq.n	100132f4 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e4>
                if (callback != NULL) {
10013282:	2e00      	cmp	r6, #0
10013284:	d05b      	beq.n	1001333e <MXC_I2C_RevA_SlaveAsyncHandler+0x32e>
                    callback(i2c, MXC_I2C_REVA_EVT_UNDERFLOW, NULL);
10013286:	2200      	movs	r2, #0
10013288:	2105      	movs	r1, #5
1001328a:	4620      	mov	r0, r4
1001328c:	47b0      	blx	r6
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
1001328e:	2302      	movs	r3, #2
10013290:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10013292:	f1ba 0f00 	cmp.w	sl, #0
10013296:	d0d1      	beq.n	1001323c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
                *retVal = E_NO_ERROR;
10013298:	2300      	movs	r3, #0
1001329a:	f8c8 3000 	str.w	r3, [r8]
                    callback(i2c, MXC_I2C_REVA_EVT_TRANS_COMP, retVal);
1001329e:	4642      	mov	r2, r8
100132a0:	2104      	movs	r1, #4
100132a2:	4620      	mov	r0, r4
100132a4:	47b0      	blx	r6
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100132a6:	4a10      	ldr	r2, [pc, #64]	@ (100132e8 <MXC_I2C_RevA_SlaveAsyncHandler+0x2d8>)
                int_en[0] = 0;
100132a8:	2300      	movs	r3, #0
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
100132aa:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100132ae:	4294      	cmp	r4, r2
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT;
100132b0:	60a1      	str	r1, [r4, #8]
                int_en[0] = 0;
100132b2:	602b      	str	r3, [r5, #0]
100132b4:	606b      	str	r3, [r5, #4]
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
100132b6:	d009      	beq.n	100132cc <MXC_I2C_RevA_SlaveAsyncHandler+0x2bc>
100132b8:	4b0c      	ldr	r3, [pc, #48]	@ (100132ec <MXC_I2C_RevA_SlaveAsyncHandler+0x2dc>)
100132ba:	429c      	cmp	r4, r3
100132bc:	d059      	beq.n	10013372 <MXC_I2C_RevA_SlaveAsyncHandler+0x362>
100132be:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100132c2:	429c      	cmp	r4, r3
100132c4:	bf0c      	ite	eq
100132c6:	2302      	moveq	r3, #2
100132c8:	f04f 33ff 	movne.w	r3, #4294967295	@ 0xffffffff
100132cc:	4a08      	ldr	r2, [pc, #32]	@ (100132f0 <MXC_I2C_RevA_SlaveAsyncHandler+0x2e0>)
100132ce:	2100      	movs	r1, #0
100132d0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
100132d4:	e7b2      	b.n	1001323c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
100132d6:	6923      	ldr	r3, [r4, #16]
100132d8:	07db      	lsls	r3, r3, #31
100132da:	d5a6      	bpl.n	1001322a <MXC_I2C_RevA_SlaveAsyncHandler+0x21a>
                if (callback != NULL) {
100132dc:	2e00      	cmp	r6, #0
100132de:	f47f aebe 	bne.w	1001305e <MXC_I2C_RevA_SlaveAsyncHandler+0x4e>
100132e2:	e6c0      	b.n	10013066 <MXC_I2C_RevA_SlaveAsyncHandler+0x56>
100132e4:	00c00008 	.word	0x00c00008
100132e8:	4001d000 	.word	0x4001d000
100132ec:	4001e000 	.word	0x4001e000
100132f0:	20000ff8 	.word	0x20000ff8
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
100132f4:	f1ba 0f00 	cmp.w	sl, #0
100132f8:	d0a0      	beq.n	1001323c <MXC_I2C_RevA_SlaveAsyncHandler+0x22c>
                *retVal = E_NO_ERROR;
100132fa:	f8c8 3000 	str.w	r3, [r8]
                if (callback != NULL) {
100132fe:	2e00      	cmp	r6, #0
10013300:	d0d1      	beq.n	100132a6 <MXC_I2C_RevA_SlaveAsyncHandler+0x296>
10013302:	e7cc      	b.n	1001329e <MXC_I2C_RevA_SlaveAsyncHandler+0x28e>
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
10013304:	2310      	movs	r3, #16
10013306:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013308:	6923      	ldr	r3, [r4, #16]
1001330a:	07d9      	lsls	r1, r3, #31
1001330c:	f53f aeab 	bmi.w	10013066 <MXC_I2C_RevA_SlaveAsyncHandler+0x56>
10013310:	e6ab      	b.n	1001306a <MXC_I2C_RevA_SlaveAsyncHandler+0x5a>
                i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
10013312:	2320      	movs	r3, #32
10013314:	60a3      	str	r3, [r4, #8]
            if (i2c->intfl1 & MXC_F_I2C_REVA_INTFL1_TX_UN) {
10013316:	6923      	ldr	r3, [r4, #16]
10013318:	079a      	lsls	r2, r3, #30
1001331a:	d421      	bmi.n	10013360 <MXC_I2C_RevA_SlaveAsyncHandler+0x350>
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
1001331c:	f1ba 0f00 	cmp.w	sl, #0
10013320:	d123      	bne.n	1001336a <MXC_I2C_RevA_SlaveAsyncHandler+0x35a>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10013322:	f019 0f40 	tst.w	r9, #64	@ 0x40
10013326:	d126      	bne.n	10013376 <MXC_I2C_RevA_SlaveAsyncHandler+0x366>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
10013328:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
1001332c:	f47f aee3 	bne.w	100130f6 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
10013330:	e6ee      	b.n	10013110 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013332:	2301      	movs	r3, #1
10013334:	e6d3      	b.n	100130de <MXC_I2C_RevA_SlaveAsyncHandler+0xce>
            AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013336:	2301      	movs	r3, #1
10013338:	e772      	b.n	10013220 <MXC_I2C_RevA_SlaveAsyncHandler+0x210>
        AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
1001333a:	2301      	movs	r3, #1
1001333c:	e745      	b.n	100131ca <MXC_I2C_RevA_SlaveAsyncHandler+0x1ba>
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
1001333e:	2302      	movs	r3, #2
10013340:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10013342:	f1ba 0f00 	cmp.w	sl, #0
10013346:	d110      	bne.n	1001336a <MXC_I2C_RevA_SlaveAsyncHandler+0x35a>
        if (tFlags & MXC_F_I2C_REVA_INTFL0_STOP) {
10013348:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001334c:	d113      	bne.n	10013376 <MXC_I2C_RevA_SlaveAsyncHandler+0x366>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
1001334e:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
10013352:	f47f aed0 	bne.w	100130f6 <MXC_I2C_RevA_SlaveAsyncHandler+0xe6>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_WR_ADDR_MATCH) {
10013356:	f419 0f00 	tst.w	r9, #8388608	@ 0x800000
1001335a:	f47f aee1 	bne.w	10013120 <MXC_I2C_RevA_SlaveAsyncHandler+0x110>
1001335e:	e6e9      	b.n	10013134 <MXC_I2C_RevA_SlaveAsyncHandler+0x124>
                i2c->intfl1 = MXC_F_I2C_REVA_INTFL1_TX_UN;
10013360:	2302      	movs	r3, #2
10013362:	6123      	str	r3, [r4, #16]
            if (tFlags & MXC_F_I2C_REVA_INTFL0_TX_LOCKOUT) {
10013364:	f1ba 0f00 	cmp.w	sl, #0
10013368:	d0db      	beq.n	10013322 <MXC_I2C_RevA_SlaveAsyncHandler+0x312>
                *retVal = E_NO_ERROR;
1001336a:	2300      	movs	r3, #0
1001336c:	f8c8 3000 	str.w	r3, [r8]
                if (callback != NULL) {
10013370:	e799      	b.n	100132a6 <MXC_I2C_RevA_SlaveAsyncHandler+0x296>
                AsyncRequests[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)] = NULL;
10013372:	2301      	movs	r3, #1
10013374:	e7aa      	b.n	100132cc <MXC_I2C_RevA_SlaveAsyncHandler+0x2bc>
            *retVal = E_NO_ERROR;
10013376:	f8c8 6000 	str.w	r6, [r8]
            if (callback != NULL) {
1001337a:	e69d      	b.n	100130b8 <MXC_I2C_RevA_SlaveAsyncHandler+0xa8>
    if (tFlags & MXC_F_I2C_REVA_INTFL0_RD_ADDR_MATCH) {
1001337c:	f419 0f80 	tst.w	r9, #4194304	@ 0x400000
10013380:	f47f aeb5 	bne.w	100130ee <MXC_I2C_RevA_SlaveAsyncHandler+0xde>
10013384:	e6c4      	b.n	10013110 <MXC_I2C_RevA_SlaveAsyncHandler+0x100>
        if (int_en[0] & MXC_F_I2C_REVA_INTFL0_RX_THD || int_en[1] & MXC_F_I2C_REVA_INTFL1_RX_OV) {
10013386:	686b      	ldr	r3, [r5, #4]
10013388:	07d8      	lsls	r0, r3, #31
1001338a:	f53f ae58 	bmi.w	1001303e <MXC_I2C_RevA_SlaveAsyncHandler+0x2e>
1001338e:	e74c      	b.n	1001322a <MXC_I2C_RevA_SlaveAsyncHandler+0x21a>

10013390 <MXC_I2C_RevA_AsyncHandler>:

void MXC_I2C_RevA_AsyncHandler(mxc_i2c_reva_regs_t *i2c, uint32_t interruptCheck)
{
10013390:	b530      	push	{r4, r5, lr}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
10013392:	4b17      	ldr	r3, [pc, #92]	@ (100133f0 <MXC_I2C_RevA_AsyncHandler+0x60>)
10013394:	4298      	cmp	r0, r3
{
10013396:	b085      	sub	sp, #20
10013398:	4604      	mov	r4, r0
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
1001339a:	d024      	beq.n	100133e6 <MXC_I2C_RevA_AsyncHandler+0x56>
1001339c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100133a0:	4298      	cmp	r0, r3
100133a2:	d005      	beq.n	100133b0 <MXC_I2C_RevA_AsyncHandler+0x20>
100133a4:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100133a8:	4298      	cmp	r0, r3
100133aa:	d01e      	beq.n	100133ea <MXC_I2C_RevA_AsyncHandler+0x5a>
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);

        i2c->inten0 = int_en[0];
        i2c->inten1 = int_en[1];
    }
}
100133ac:	b005      	add	sp, #20
100133ae:	bd30      	pop	{r4, r5, pc}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
100133b0:	2001      	movs	r0, #1
    if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE) {
100133b2:	6823      	ldr	r3, [r4, #0]
100133b4:	079b      	lsls	r3, r3, #30
100133b6:	d504      	bpl.n	100133c2 <MXC_I2C_RevA_AsyncHandler+0x32>
}
100133b8:	b005      	add	sp, #20
100133ba:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        MXC_I2C_RevA_MasterAsyncHandler(i2cNum);
100133be:	f7ff bc8b 	b.w	10012cd8 <MXC_I2C_RevA_MasterAsyncHandler>
        int_en[0] = i2c->inten0;
100133c2:	68e5      	ldr	r5, [r4, #12]
        mxc_i2c_reva_slave_handler_t callback = (mxc_i2c_reva_slave_handler_t)AsyncRequests[i2cNum];
100133c4:	4b0b      	ldr	r3, [pc, #44]	@ (100133f4 <MXC_I2C_RevA_AsyncHandler+0x64>)
        int_en[1] = i2c->inten1;
100133c6:	6962      	ldr	r2, [r4, #20]
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);
100133c8:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
        int_en[1] = i2c->inten1;
100133cc:	e9cd 5202 	strd	r5, r2, [sp, #8]
        MXC_I2C_RevA_SlaveAsyncHandler(i2c, callback, int_en, &slaveRetVal);
100133d0:	ab01      	add	r3, sp, #4
100133d2:	aa02      	add	r2, sp, #8
100133d4:	4620      	mov	r0, r4
100133d6:	f7ff fe1b 	bl	10013010 <MXC_I2C_RevA_SlaveAsyncHandler>
        i2c->inten1 = int_en[1];
100133da:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        i2c->inten0 = int_en[0];
100133de:	60e2      	str	r2, [r4, #12]
        i2c->inten1 = int_en[1];
100133e0:	6163      	str	r3, [r4, #20]
}
100133e2:	b005      	add	sp, #20
100133e4:	bd30      	pop	{r4, r5, pc}
    int i2cNum = MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c);
100133e6:	2000      	movs	r0, #0
100133e8:	e7e3      	b.n	100133b2 <MXC_I2C_RevA_AsyncHandler+0x22>
100133ea:	2002      	movs	r0, #2
100133ec:	e7e1      	b.n	100133b2 <MXC_I2C_RevA_AsyncHandler+0x22>
100133ee:	bf00      	nop
100133f0:	4001d000 	.word	0x4001d000
100133f4:	20000ff8 	.word	0x20000ff8

100133f8 <MXC_ICC_Enable>:
    return MXC_ICC_RevA_ID((mxc_icc_reva_regs_t *)icc, cid);
}

void MXC_ICC_Enable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Enable((mxc_icc_reva_regs_t *)icc);
100133f8:	f000 b802 	b.w	10013400 <MXC_ICC_RevA_Enable>

100133fc <MXC_ICC_Disable>:
}

void MXC_ICC_Disable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Disable((mxc_icc_reva_regs_t *)icc);
100133fc:	f000 b818 	b.w	10013430 <MXC_ICC_RevA_Disable>

10013400 <MXC_ICC_RevA_Enable>:
}

void MXC_ICC_RevA_Enable(mxc_icc_reva_regs_t *icc)
{
    // Invalidate cache and wait until ready
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10013400:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
10013404:	2201      	movs	r2, #1
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10013406:	f023 0301 	bic.w	r3, r3, #1
1001340a:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
1001340e:	f8c0 2700 	str.w	r2, [r0, #1792]	@ 0x700
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10013412:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100

    while (!(MXC_ICC_Ready(icc))) {}
10013416:	03da      	lsls	r2, r3, #15
10013418:	d5fb      	bpl.n	10013412 <MXC_ICC_RevA_Enable+0x12>

    // Enable Cache
    icc->ctrl |= MXC_F_ICC_REVA_CTRL_EN;
1001341a:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
1001341e:	f043 0301 	orr.w	r3, r3, #1
10013422:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10013426:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    while (!(MXC_ICC_Ready(icc))) {}
1001342a:	03db      	lsls	r3, r3, #15
1001342c:	d5fb      	bpl.n	10013426 <MXC_ICC_RevA_Enable+0x26>
}
1001342e:	4770      	bx	lr

10013430 <MXC_ICC_RevA_Disable>:

void MXC_ICC_RevA_Disable(mxc_icc_reva_regs_t *icc)
{
    // Disable Cache
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10013430:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
10013434:	f023 0301 	bic.w	r3, r3, #1
10013438:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
}
1001343c:	4770      	bx	lr
1001343e:	bf00      	nop

10013440 <MXC_UART_Shutdown>:

    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
}

int MXC_UART_Shutdown(mxc_uart_regs_t *uart)
{
10013440:	b508      	push	{r3, lr}
    switch (MXC_UART_GET_IDX(uart)) {
10013442:	4b16      	ldr	r3, [pc, #88]	@ (1001349c <MXC_UART_Shutdown+0x5c>)
10013444:	4298      	cmp	r0, r3
10013446:	d010      	beq.n	1001346a <MXC_UART_Shutdown+0x2a>
10013448:	4b15      	ldr	r3, [pc, #84]	@ (100134a0 <MXC_UART_Shutdown+0x60>)
1001344a:	4298      	cmp	r0, r3
1001344c:	d014      	beq.n	10013478 <MXC_UART_Shutdown+0x38>
1001344e:	4b15      	ldr	r3, [pc, #84]	@ (100134a4 <MXC_UART_Shutdown+0x64>)
10013450:	4298      	cmp	r0, r3
10013452:	d018      	beq.n	10013486 <MXC_UART_Shutdown+0x46>
10013454:	4b14      	ldr	r3, [pc, #80]	@ (100134a8 <MXC_UART_Shutdown+0x68>)
10013456:	4298      	cmp	r0, r3
10013458:	d11c      	bne.n	10013494 <MXC_UART_Shutdown+0x54>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
        break;

    case 3:
        MXC_SYS_Reset_Periph(MXC_SYS_RESET_UART3);
1001345a:	2044      	movs	r0, #68	@ 0x44
1001345c:	f7fe fec0 	bl	100121e0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART3);
10013460:	2044      	movs	r0, #68	@ 0x44
10013462:	f7fe fe01 	bl	10012068 <MXC_SYS_ClockDisable>

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10013466:	2000      	movs	r0, #0
}
10013468:	bd08      	pop	{r3, pc}
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART0);
1001346a:	200b      	movs	r0, #11
1001346c:	f7fe feb8 	bl	100121e0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART0);
10013470:	2009      	movs	r0, #9
10013472:	f7fe fdf9 	bl	10012068 <MXC_SYS_ClockDisable>
        break;
10013476:	e7f6      	b.n	10013466 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART1);
10013478:	200c      	movs	r0, #12
1001347a:	f7fe feb1 	bl	100121e0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART1);
1001347e:	200a      	movs	r0, #10
10013480:	f7fe fdf2 	bl	10012068 <MXC_SYS_ClockDisable>
        break;
10013484:	e7ef      	b.n	10013466 <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
10013486:	201c      	movs	r0, #28
10013488:	f7fe feaa 	bl	100121e0 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
1001348c:	2021      	movs	r0, #33	@ 0x21
1001348e:	f7fe fdeb 	bl	10012068 <MXC_SYS_ClockDisable>
        break;
10013492:	e7e8      	b.n	10013466 <MXC_UART_Shutdown+0x26>
        return E_BAD_PARAM;
10013494:	f06f 0002 	mvn.w	r0, #2
}
10013498:	bd08      	pop	{r3, pc}
1001349a:	bf00      	nop
1001349c:	40042000 	.word	0x40042000
100134a0:	40043000 	.word	0x40043000
100134a4:	40044000 	.word	0x40044000
100134a8:	40081400 	.word	0x40081400

100134ac <MXC_UART_Init>:
{
100134ac:	b570      	push	{r4, r5, r6, lr}
100134ae:	4604      	mov	r4, r0
100134b0:	460e      	mov	r6, r1
100134b2:	4615      	mov	r5, r2
    retval = MXC_UART_Shutdown(uart);
100134b4:	f7ff ffc4 	bl	10013440 <MXC_UART_Shutdown>
    if (retval) {
100134b8:	bba8      	cbnz	r0, 10013526 <MXC_UART_Init+0x7a>
    switch (clock) {
100134ba:	2d02      	cmp	r5, #2
100134bc:	d02d      	beq.n	1001351a <MXC_UART_Init+0x6e>
100134be:	2d04      	cmp	r5, #4
100134c0:	d018      	beq.n	100134f4 <MXC_UART_Init+0x48>
    switch (MXC_UART_GET_IDX(uart)) {
100134c2:	4b20      	ldr	r3, [pc, #128]	@ (10013544 <MXC_UART_Init+0x98>)
100134c4:	429c      	cmp	r4, r3
100134c6:	d01b      	beq.n	10013500 <MXC_UART_Init+0x54>
100134c8:	4b1f      	ldr	r3, [pc, #124]	@ (10013548 <MXC_UART_Init+0x9c>)
100134ca:	429c      	cmp	r4, r3
100134cc:	d02c      	beq.n	10013528 <MXC_UART_Init+0x7c>
100134ce:	4b1f      	ldr	r3, [pc, #124]	@ (1001354c <MXC_UART_Init+0xa0>)
100134d0:	429c      	cmp	r4, r3
100134d2:	d030      	beq.n	10013536 <MXC_UART_Init+0x8a>
100134d4:	4b1e      	ldr	r3, [pc, #120]	@ (10013550 <MXC_UART_Init+0xa4>)
100134d6:	429c      	cmp	r4, r3
100134d8:	d123      	bne.n	10013522 <MXC_UART_Init+0x76>
        MXC_GPIO_Config(&gpio_cfg_uart3);
100134da:	481e      	ldr	r0, [pc, #120]	@ (10013554 <MXC_UART_Init+0xa8>)
100134dc:	f7fe ff1a 	bl	10012314 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART3);
100134e0:	2044      	movs	r0, #68	@ 0x44
100134e2:	f7fe fde1 	bl	100120a8 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
100134e6:	462a      	mov	r2, r5
100134e8:	4631      	mov	r1, r6
100134ea:	4620      	mov	r0, r4
}
100134ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
100134f0:	f000 b8f8 	b.w	100136e4 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_ERTCO);
100134f4:	2006      	movs	r0, #6
100134f6:	f7fe fdf9 	bl	100120ec <MXC_SYS_ClockSourceEnable>
    switch (MXC_UART_GET_IDX(uart)) {
100134fa:	4b12      	ldr	r3, [pc, #72]	@ (10013544 <MXC_UART_Init+0x98>)
100134fc:	429c      	cmp	r4, r3
100134fe:	d1e3      	bne.n	100134c8 <MXC_UART_Init+0x1c>
        MXC_GPIO_Config(&gpio_cfg_uart0);
10013500:	4815      	ldr	r0, [pc, #84]	@ (10013558 <MXC_UART_Init+0xac>)
10013502:	f7fe ff07 	bl	10012314 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART0);
10013506:	2009      	movs	r0, #9
10013508:	f7fe fdce 	bl	100120a8 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1001350c:	462a      	mov	r2, r5
1001350e:	4631      	mov	r1, r6
10013510:	4620      	mov	r0, r4
}
10013512:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10013516:	f000 b8e5 	b.w	100136e4 <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_IBRO);
1001351a:	2005      	movs	r0, #5
1001351c:	f7fe fde6 	bl	100120ec <MXC_SYS_ClockSourceEnable>
        break;
10013520:	e7cf      	b.n	100134c2 <MXC_UART_Init+0x16>
        return E_BAD_PARAM;
10013522:	f06f 0002 	mvn.w	r0, #2
}
10013526:	bd70      	pop	{r4, r5, r6, pc}
        MXC_GPIO_Config(&gpio_cfg_uart1);
10013528:	480c      	ldr	r0, [pc, #48]	@ (1001355c <MXC_UART_Init+0xb0>)
1001352a:	f7fe fef3 	bl	10012314 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART1);
1001352e:	200a      	movs	r0, #10
10013530:	f7fe fdba 	bl	100120a8 <MXC_SYS_ClockEnable>
        break;
10013534:	e7d7      	b.n	100134e6 <MXC_UART_Init+0x3a>
        MXC_GPIO_Config(&gpio_cfg_uart2);
10013536:	480a      	ldr	r0, [pc, #40]	@ (10013560 <MXC_UART_Init+0xb4>)
10013538:	f7fe feec 	bl	10012314 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART2);
1001353c:	2021      	movs	r0, #33	@ 0x21
1001353e:	f7fe fdb3 	bl	100120a8 <MXC_SYS_ClockEnable>
        break;
10013542:	e7d0      	b.n	100134e6 <MXC_UART_Init+0x3a>
10013544:	40042000 	.word	0x40042000
10013548:	40043000 	.word	0x40043000
1001354c:	40044000 	.word	0x40044000
10013550:	40081400 	.word	0x40081400
10013554:	10023768 	.word	0x10023768
10013558:	1002378c 	.word	0x1002378c
1001355c:	10023780 	.word	0x10023780
10013560:	10023774 	.word	0x10023774

10013564 <MXC_UART_SetFrequency>:
}

int MXC_UART_SetFrequency(mxc_uart_regs_t *uart, unsigned int baud, mxc_uart_clock_t clock)
{
    int frequency, clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX(uart) < 0) {
10013564:	4b31      	ldr	r3, [pc, #196]	@ (1001362c <MXC_UART_SetFrequency+0xc8>)
10013566:	4298      	cmp	r0, r3
{
10013568:	b510      	push	{r4, lr}
1001356a:	4604      	mov	r4, r0
    if (MXC_UART_GET_IDX(uart) < 0) {
1001356c:	d015      	beq.n	1001359a <MXC_UART_SetFrequency+0x36>
1001356e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013572:	4298      	cmp	r0, r3
10013574:	d011      	beq.n	1001359a <MXC_UART_SetFrequency+0x36>
10013576:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001357a:	4298      	cmp	r0, r3
1001357c:	d00d      	beq.n	1001359a <MXC_UART_SetFrequency+0x36>
1001357e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013582:	4298      	cmp	r0, r3
10013584:	d106      	bne.n	10013594 <MXC_UART_SetFrequency+0x30>
    }

    // check if the uart is LPUART
    if (uart == MXC_UART3) {
        // OSR default value
        uart->osr = 5;
10013586:	2305      	movs	r3, #5

        switch (clock) {
10013588:	2a02      	cmp	r2, #2
        uart->osr = 5;
1001358a:	6143      	str	r3, [r0, #20]
        switch (clock) {
1001358c:	d014      	beq.n	100135b8 <MXC_UART_SetFrequency+0x54>
1001358e:	2a04      	cmp	r2, #4
10013590:	d032      	beq.n	100135f8 <MXC_UART_SetFrequency+0x94>
10013592:	b18a      	cbz	r2, 100135b8 <MXC_UART_SetFrequency+0x54>
        return E_BAD_PARAM;
10013594:	f06f 0002 	mvn.w	r0, #2
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
    }

    return frequency;
}
10013598:	bd10      	pop	{r4, pc}
        if (clock == MXC_UART_ERTCO_CLK) {
1001359a:	2a04      	cmp	r2, #4
1001359c:	d0fa      	beq.n	10013594 <MXC_UART_SetFrequency+0x30>
        frequency = MXC_UART_RevB_SetFrequency((mxc_uart_revb_regs_t *)uart, baud, clock);
1001359e:	4620      	mov	r0, r4
100135a0:	f000 f8d8 	bl	10013754 <MXC_UART_RevB_SetFrequency>
    if (frequency > 0) {
100135a4:	2800      	cmp	r0, #0
100135a6:	ddf7      	ble.n	10013598 <MXC_UART_SetFrequency+0x34>
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
100135a8:	6823      	ldr	r3, [r4, #0]
100135aa:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
100135ae:	6023      	str	r3, [r4, #0]
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
100135b0:	6823      	ldr	r3, [r4, #0]
100135b2:	031b      	lsls	r3, r3, #12
100135b4:	d5fc      	bpl.n	100135b0 <MXC_UART_SetFrequency+0x4c>
}
100135b6:	bd10      	pop	{r4, pc}
            clkDiv = ((IBRO_FREQ) / baud);
100135b8:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
100135bc:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((IBRO_FREQ) % baud);
100135c0:	fb01 f203 	mul.w	r2, r1, r3
100135c4:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        if (!clkDiv || mod > (baud / 2)) {
100135c8:	b113      	cbz	r3, 100135d0 <MXC_UART_SetFrequency+0x6c>
100135ca:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
100135ce:	d900      	bls.n	100135d2 <MXC_UART_SetFrequency+0x6e>
            clkDiv++;
100135d0:	3301      	adds	r3, #1
        uart->clkdiv = clkDiv;
100135d2:	4a17      	ldr	r2, [pc, #92]	@ (10013630 <MXC_UART_SetFrequency+0xcc>)
100135d4:	6113      	str	r3, [r2, #16]
        return E_BAD_PARAM;
    }

    // check if UARt is LP UART
    if (uart == MXC_UART3) {
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
100135d6:	6810      	ldr	r0, [r2, #0]
100135d8:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
100135dc:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
100135e0:	d005      	beq.n	100135ee <MXC_UART_SetFrequency+0x8a>
            periphClock = ERTCO_FREQ * 2;
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
100135e2:	6813      	ldr	r3, [r2, #0]
100135e4:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
100135e8:	d1d4      	bne.n	10013594 <MXC_UART_SetFrequency+0x30>
100135ea:	f44f 00e1 	mov.w	r0, #7372800	@ 0x708000
                   MXC_S_UART_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
            periphClock = IBRO_FREQ;
        } else {
            return E_BAD_PARAM;
        }
        return (periphClock / uart->clkdiv);
100135ee:	4b10      	ldr	r3, [pc, #64]	@ (10013630 <MXC_UART_SetFrequency+0xcc>)
100135f0:	691b      	ldr	r3, [r3, #16]
100135f2:	fbb0 f0f3 	udiv	r0, r0, r3
100135f6:	e7d5      	b.n	100135a4 <MXC_UART_SetFrequency+0x40>
            uart->ctrl |= MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK;
100135f8:	6803      	ldr	r3, [r0, #0]
100135fa:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
100135fe:	6003      	str	r3, [r0, #0]
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
10013600:	6803      	ldr	r3, [r0, #0]
            if (baud > 2400) {
10013602:	f5b1 6f16 	cmp.w	r1, #2400	@ 0x960
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
10013606:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
1001360a:	6003      	str	r3, [r0, #0]
            if (baud > 2400) {
1001360c:	d90a      	bls.n	10013624 <MXC_UART_SetFrequency+0xc0>
                uart->osr = 0;
1001360e:	2300      	movs	r3, #0
10013610:	6143      	str	r3, [r0, #20]
            clkDiv = ((ERTCO_FREQ * 2) / baud);
10013612:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
10013616:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((ERTCO_FREQ * 2) % baud);
1001361a:	fb01 f203 	mul.w	r2, r1, r3
1001361e:	f5c2 3280 	rsb	r2, r2, #65536	@ 0x10000
10013622:	e7d1      	b.n	100135c8 <MXC_UART_SetFrequency+0x64>
                uart->osr = 1;
10013624:	2301      	movs	r3, #1
10013626:	6143      	str	r3, [r0, #20]
10013628:	e7f3      	b.n	10013612 <MXC_UART_SetFrequency+0xae>
1001362a:	bf00      	nop
1001362c:	40042000 	.word	0x40042000
10013630:	40081400 	.word	0x40081400

10013634 <MXC_UART_GetFrequency>:
    if (MXC_UART_GET_IDX(uart) < 0) {
10013634:	4b12      	ldr	r3, [pc, #72]	@ (10013680 <MXC_UART_GetFrequency+0x4c>)
10013636:	4298      	cmp	r0, r3
10013638:	d01c      	beq.n	10013674 <MXC_UART_GetFrequency+0x40>
1001363a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001363e:	4298      	cmp	r0, r3
10013640:	d018      	beq.n	10013674 <MXC_UART_GetFrequency+0x40>
10013642:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013646:	4298      	cmp	r0, r3
10013648:	d014      	beq.n	10013674 <MXC_UART_GetFrequency+0x40>
1001364a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1001364e:	4298      	cmp	r0, r3
10013650:	d112      	bne.n	10013678 <MXC_UART_GetFrequency+0x44>
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
10013652:	6803      	ldr	r3, [r0, #0]
10013654:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10013658:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
1001365c:	d005      	beq.n	1001366a <MXC_UART_GetFrequency+0x36>
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
1001365e:	6803      	ldr	r3, [r0, #0]
10013660:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10013664:	d108      	bne.n	10013678 <MXC_UART_GetFrequency+0x44>
10013666:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        return (periphClock / uart->clkdiv);
1001366a:	4a06      	ldr	r2, [pc, #24]	@ (10013684 <MXC_UART_GetFrequency+0x50>)
1001366c:	6910      	ldr	r0, [r2, #16]
1001366e:	fbb3 f0f0 	udiv	r0, r3, r0
10013672:	4770      	bx	lr
    } else {
        return MXC_UART_RevB_GetFrequency((mxc_uart_revb_regs_t *)uart);
10013674:	f000 b8ba 	b.w	100137ec <MXC_UART_RevB_GetFrequency>
        return E_BAD_PARAM;
10013678:	f06f 0002 	mvn.w	r0, #2
    }
}
1001367c:	4770      	bx	lr
1001367e:	bf00      	nop
10013680:	40042000 	.word	0x40042000
10013684:	40081400 	.word	0x40081400

10013688 <MXC_UART_SetDataSize>:

int MXC_UART_SetDataSize(mxc_uart_regs_t *uart, int dataSize)
{
    return MXC_UART_RevB_SetDataSize((mxc_uart_revb_regs_t *)uart, dataSize);
10013688:	f000 b8f0 	b.w	1001386c <MXC_UART_RevB_SetDataSize>

1001368c <MXC_UART_SetStopBits>:
}

int MXC_UART_SetStopBits(mxc_uart_regs_t *uart, mxc_uart_stop_t stopBits)
{
    return MXC_UART_RevB_SetStopBits((mxc_uart_revb_regs_t *)uart, stopBits);
1001368c:	f000 b90e 	b.w	100138ac <MXC_UART_RevB_SetStopBits>

10013690 <MXC_UART_SetParity>:
}

int MXC_UART_SetParity(mxc_uart_regs_t *uart, mxc_uart_parity_t parity)
{
    return MXC_UART_RevB_SetParity((mxc_uart_revb_regs_t *)uart, parity);
10013690:	f000 b930 	b.w	100138f4 <MXC_UART_RevB_SetParity>

10013694 <MXC_UART_ReadCharacterRaw>:
    return MXC_UART_RevB_AbortTransmission((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_ReadCharacterRaw(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_ReadCharacterRaw((mxc_uart_revb_regs_t *)uart);
10013694:	f000 b984 	b.w	100139a0 <MXC_UART_RevB_ReadCharacterRaw>

10013698 <MXC_UART_WriteCharacterRaw>:
}

int MXC_UART_WriteCharacterRaw(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_RevB_WriteCharacterRaw((mxc_uart_revb_regs_t *)uart, character);
10013698:	f000 b99e 	b.w	100139d8 <MXC_UART_RevB_WriteCharacterRaw>

1001369c <MXC_UART_ReadCharacter>:
}

int MXC_UART_ReadCharacter(mxc_uart_regs_t *uart)
{
    return MXC_UART_Common_ReadCharacter(uart);
1001369c:	f000 b808 	b.w	100136b0 <MXC_UART_Common_ReadCharacter>

100136a0 <MXC_UART_WriteCharacter>:
}

int MXC_UART_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_Common_WriteCharacter(uart, character);
100136a0:	f000 b812 	b.w	100136c8 <MXC_UART_Common_WriteCharacter>

100136a4 <MXC_UART_GetRXFIFOAvailable>:
    return MXC_UART_RevB_ReadRXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetRXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetRXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
100136a4:	f000 b9b6 	b.w	10013a14 <MXC_UART_RevB_GetRXFIFOAvailable>

100136a8 <MXC_UART_GetTXFIFOAvailable>:
    return MXC_UART_RevB_WriteTXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetTXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetTXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
100136a8:	f000 b9b8 	b.w	10013a1c <MXC_UART_RevB_GetTXFIFOAvailable>

100136ac <MXC_UART_SetRXThreshold>:
    return MXC_UART_RevB_ClearTXFIFO((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_SetRXThreshold(mxc_uart_regs_t *uart, unsigned int numBytes)
{
    return MXC_UART_RevB_SetRXThreshold((mxc_uart_revb_regs_t *)uart, numBytes);
100136ac:	f000 b9bc 	b.w	10013a28 <MXC_UART_RevB_SetRXThreshold>

100136b0 <MXC_UART_Common_ReadCharacter>:

#include "uart_common.h"
#include "uart.h"

int MXC_UART_Common_ReadCharacter(mxc_uart_regs_t *uart)
{
100136b0:	b510      	push	{r4, lr}
100136b2:	4604      	mov	r4, r0
    // Wait until FIFO has a character ready.
    while (MXC_UART_GetRXFIFOAvailable(uart) < 1) {}
100136b4:	4620      	mov	r0, r4
100136b6:	f7ff fff5 	bl	100136a4 <MXC_UART_GetRXFIFOAvailable>
100136ba:	2800      	cmp	r0, #0
100136bc:	d0fa      	beq.n	100136b4 <MXC_UART_Common_ReadCharacter+0x4>

    // Read the character using the non-blocking function.
    return MXC_UART_ReadCharacterRaw(uart);
100136be:	4620      	mov	r0, r4
}
100136c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_UART_ReadCharacterRaw(uart);
100136c4:	f7ff bfe6 	b.w	10013694 <MXC_UART_ReadCharacterRaw>

100136c8 <MXC_UART_Common_WriteCharacter>:

int MXC_UART_Common_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
100136c8:	b538      	push	{r3, r4, r5, lr}
100136ca:	4604      	mov	r4, r0
100136cc:	460d      	mov	r5, r1
    // Wait until FIFO has space for the character.
    while (MXC_UART_GetTXFIFOAvailable(uart) < 1) {}
100136ce:	4620      	mov	r0, r4
100136d0:	f7ff ffea 	bl	100136a8 <MXC_UART_GetTXFIFOAvailable>
100136d4:	2800      	cmp	r0, #0
100136d6:	d0fa      	beq.n	100136ce <MXC_UART_Common_WriteCharacter+0x6>

    // Write the character using the non-blocking function.
    return MXC_UART_WriteCharacterRaw(uart, character);
100136d8:	4629      	mov	r1, r5
100136da:	4620      	mov	r0, r4
}
100136dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    return MXC_UART_WriteCharacterRaw(uart, character);
100136e0:	f7ff bfda 	b.w	10013698 <MXC_UART_WriteCharacterRaw>

100136e4 <MXC_UART_RevB_Init>:
/* ************************************************************************* */
int MXC_UART_RevB_Init(mxc_uart_revb_regs_t *uart, unsigned int baud, mxc_uart_revb_clock_t clock)
{
    int err;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100136e4:	4b1a      	ldr	r3, [pc, #104]	@ (10013750 <MXC_UART_RevB_Init+0x6c>)
100136e6:	4298      	cmp	r0, r3
{
100136e8:	b570      	push	{r4, r5, r6, lr}
100136ea:	4604      	mov	r4, r0
100136ec:	460d      	mov	r5, r1
100136ee:	4616      	mov	r6, r2
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100136f0:	d00b      	beq.n	1001370a <MXC_UART_RevB_Init+0x26>
100136f2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100136f6:	4298      	cmp	r0, r3
100136f8:	d007      	beq.n	1001370a <MXC_UART_RevB_Init+0x26>
100136fa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100136fe:	4298      	cmp	r0, r3
10013700:	d003      	beq.n	1001370a <MXC_UART_RevB_Init+0x26>
10013702:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013706:	4298      	cmp	r0, r3
10013708:	d11f      	bne.n	1001374a <MXC_UART_RevB_Init+0x66>
        return E_BAD_PARAM;
    }

    // Initialize UART
    if ((err = MXC_UART_SetRXThreshold((mxc_uart_regs_t *)uart, 1)) !=
1001370a:	2101      	movs	r1, #1
1001370c:	4620      	mov	r0, r4
1001370e:	f7ff ffcd 	bl	100136ac <MXC_UART_SetRXThreshold>
10013712:	b100      	cbz	r0, 10013716 <MXC_UART_RevB_Init+0x32>
        E_NO_ERROR) {
        return err;
    }

    return E_NO_ERROR;
}
10013714:	bd70      	pop	{r4, r5, r6, pc}
    if ((err = MXC_UART_SetDataSize((mxc_uart_regs_t *)uart, 8)) !=
10013716:	2108      	movs	r1, #8
10013718:	4620      	mov	r0, r4
1001371a:	f7ff ffb5 	bl	10013688 <MXC_UART_SetDataSize>
1001371e:	2800      	cmp	r0, #0
10013720:	d1f8      	bne.n	10013714 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetParity((mxc_uart_regs_t *)uart, MXC_UART_PARITY_DISABLE)) !=
10013722:	4601      	mov	r1, r0
10013724:	4620      	mov	r0, r4
10013726:	f7ff ffb3 	bl	10013690 <MXC_UART_SetParity>
1001372a:	2800      	cmp	r0, #0
1001372c:	d1f2      	bne.n	10013714 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetStopBits((mxc_uart_regs_t *)uart, MXC_UART_STOP_1)) != E_NO_ERROR) {
1001372e:	4601      	mov	r1, r0
10013730:	4620      	mov	r0, r4
10013732:	f7ff ffab 	bl	1001368c <MXC_UART_SetStopBits>
10013736:	2800      	cmp	r0, #0
10013738:	d1ec      	bne.n	10013714 <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetFrequency((mxc_uart_regs_t *)uart, baud, (mxc_uart_clock_t)clock)) <
1001373a:	4632      	mov	r2, r6
1001373c:	4629      	mov	r1, r5
1001373e:	4620      	mov	r0, r4
10013740:	f7ff ff10 	bl	10013564 <MXC_UART_SetFrequency>
10013744:	ea00 70e0 	and.w	r0, r0, r0, asr #31
}
10013748:	bd70      	pop	{r4, r5, r6, pc}
        return E_BAD_PARAM;
1001374a:	f06f 0002 	mvn.w	r0, #2
}
1001374e:	bd70      	pop	{r4, r5, r6, pc}
10013750:	40042000 	.word	0x40042000

10013754 <MXC_UART_RevB_SetFrequency>:

int MXC_UART_RevB_SetFrequency(mxc_uart_revb_regs_t *uart, unsigned int baud,
                               mxc_uart_revb_clock_t clock)
{
    unsigned clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013754:	4b22      	ldr	r3, [pc, #136]	@ (100137e0 <MXC_UART_RevB_SetFrequency+0x8c>)
10013756:	4298      	cmp	r0, r3
10013758:	d00b      	beq.n	10013772 <MXC_UART_RevB_SetFrequency+0x1e>
1001375a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001375e:	4298      	cmp	r0, r3
10013760:	d007      	beq.n	10013772 <MXC_UART_RevB_SetFrequency+0x1e>
10013762:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013766:	4298      	cmp	r0, r3
10013768:	d003      	beq.n	10013772 <MXC_UART_RevB_SetFrequency+0x1e>
1001376a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1001376e:	4298      	cmp	r0, r3
10013770:	d132      	bne.n	100137d8 <MXC_UART_RevB_SetFrequency+0x84>
        return E_BAD_PARAM;
    }

    // OSR default value
    uart->osr = 5;
10013772:	2305      	movs	r3, #5

    switch (clock) {
10013774:	2a01      	cmp	r2, #1
{
10013776:	b410      	push	{r4}
    uart->osr = 5;
10013778:	6143      	str	r3, [r0, #20]
    switch (clock) {
1001377a:	d023      	beq.n	100137c4 <MXC_UART_RevB_SetFrequency+0x70>
1001377c:	2a02      	cmp	r2, #2
1001377e:	d014      	beq.n	100137aa <MXC_UART_RevB_SetFrequency+0x56>
10013780:	b11a      	cbz	r2, 1001378a <MXC_UART_RevB_SetFrequency+0x36>
    if (!clkDiv || mod > (baud / 2)) {
        clkDiv++;
    }
    uart->clkdiv = clkDiv;
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
}
10013782:	f06f 0002 	mvn.w	r0, #2
10013786:	bc10      	pop	{r4}
10013788:	4770      	bx	lr
        clkDiv = (PeripheralClock / baud);
1001378a:	4b16      	ldr	r3, [pc, #88]	@ (100137e4 <MXC_UART_RevB_SetFrequency+0x90>)
1001378c:	681a      	ldr	r2, [r3, #0]
1001378e:	0852      	lsrs	r2, r2, #1
10013790:	fbb2 f3f1 	udiv	r3, r2, r1
        mod = (PeripheralClock % baud);
10013794:	fb01 2213 	mls	r2, r1, r3, r2
    if (!clkDiv || mod > (baud / 2)) {
10013798:	b113      	cbz	r3, 100137a0 <MXC_UART_RevB_SetFrequency+0x4c>
1001379a:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1001379e:	d900      	bls.n	100137a2 <MXC_UART_RevB_SetFrequency+0x4e>
        clkDiv++;
100137a0:	3301      	adds	r3, #1
}
100137a2:	bc10      	pop	{r4}
    uart->clkdiv = clkDiv;
100137a4:	6103      	str	r3, [r0, #16]
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
100137a6:	f7ff bf45 	b.w	10013634 <MXC_UART_GetFrequency>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
100137aa:	6804      	ldr	r4, [r0, #0]
        clkDiv = (IBRO_FREQ / baud);
100137ac:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
100137b0:	f444 3400 	orr.w	r4, r4, #131072	@ 0x20000
        clkDiv = (IBRO_FREQ / baud);
100137b4:	fbb3 f3f1 	udiv	r3, r3, r1
        mod = (IBRO_FREQ % baud);
100137b8:	fb01 f203 	mul.w	r2, r1, r3
100137bc:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
100137c0:	6004      	str	r4, [r0, #0]
        break;
100137c2:	e7e9      	b.n	10013798 <MXC_UART_RevB_SetFrequency+0x44>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
100137c4:	6804      	ldr	r4, [r0, #0]
        clkDiv = UART_EXTCLK_FREQ / baud;
100137c6:	4a08      	ldr	r2, [pc, #32]	@ (100137e8 <MXC_UART_RevB_SetFrequency+0x94>)
100137c8:	fbb2 f3f1 	udiv	r3, r2, r1
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
100137cc:	f444 3480 	orr.w	r4, r4, #65536	@ 0x10000
100137d0:	6004      	str	r4, [r0, #0]
        mod = UART_EXTCLK_FREQ % baud;
100137d2:	fb01 2213 	mls	r2, r1, r3, r2
        break;
100137d6:	e7df      	b.n	10013798 <MXC_UART_RevB_SetFrequency+0x44>
}
100137d8:	f06f 0002 	mvn.w	r0, #2
100137dc:	4770      	bx	lr
100137de:	bf00      	nop
100137e0:	40042000 	.word	0x40042000
100137e4:	20001768 	.word	0x20001768
100137e8:	047868c0 	.word	0x047868c0

100137ec <MXC_UART_RevB_GetFrequency>:

int MXC_UART_RevB_GetFrequency(mxc_uart_revb_regs_t *uart)
{
    int periphClock = 0;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100137ec:	4b1c      	ldr	r3, [pc, #112]	@ (10013860 <MXC_UART_RevB_GetFrequency+0x74>)
100137ee:	4298      	cmp	r0, r3
100137f0:	d00b      	beq.n	1001380a <MXC_UART_RevB_GetFrequency+0x1e>
100137f2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100137f6:	4298      	cmp	r0, r3
100137f8:	d007      	beq.n	1001380a <MXC_UART_RevB_GetFrequency+0x1e>
100137fa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100137fe:	4298      	cmp	r0, r3
10013800:	d003      	beq.n	1001380a <MXC_UART_RevB_GetFrequency+0x1e>
10013802:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10013806:	4298      	cmp	r0, r3
10013808:	d122      	bne.n	10013850 <MXC_UART_RevB_GetFrequency+0x64>
        return E_BAD_PARAM;
    }

    if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
1001380a:	6803      	ldr	r3, [r0, #0]
1001380c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10013810:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
10013814:	d017      	beq.n	10013846 <MXC_UART_RevB_GetFrequency+0x5a>
        MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
        periphClock = UART_EXTCLK_FREQ;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10013816:	6803      	ldr	r3, [r0, #0]
10013818:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1001381c:	d00c      	beq.n	10013838 <MXC_UART_RevB_GetFrequency+0x4c>
               MXC_S_UART_REVB_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
        periphClock = PeripheralClock;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2) {
1001381e:	6803      	ldr	r3, [r0, #0]
10013820:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10013824:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
10013828:	bf08      	it	eq
1001382a:	f44f 03e1 	moveq.w	r3, #7372800	@ 0x708000
1001382e:	d112      	bne.n	10013856 <MXC_UART_RevB_GetFrequency+0x6a>
#endif
    } else {
        return E_BAD_PARAM;
    }

    return (periphClock / uart->clkdiv);
10013830:	6900      	ldr	r0, [r0, #16]
10013832:	fbb3 f0f0 	udiv	r0, r3, r0
10013836:	4770      	bx	lr
        periphClock = PeripheralClock;
10013838:	4b0a      	ldr	r3, [pc, #40]	@ (10013864 <MXC_UART_RevB_GetFrequency+0x78>)
    return (periphClock / uart->clkdiv);
1001383a:	6900      	ldr	r0, [r0, #16]
        periphClock = PeripheralClock;
1001383c:	681b      	ldr	r3, [r3, #0]
1001383e:	085b      	lsrs	r3, r3, #1
    return (periphClock / uart->clkdiv);
10013840:	fbb3 f0f0 	udiv	r0, r3, r0
10013844:	4770      	bx	lr
10013846:	4b08      	ldr	r3, [pc, #32]	@ (10013868 <MXC_UART_RevB_GetFrequency+0x7c>)
10013848:	6900      	ldr	r0, [r0, #16]
1001384a:	fbb3 f0f0 	udiv	r0, r3, r0
1001384e:	4770      	bx	lr
        return E_BAD_PARAM;
10013850:	f06f 0002 	mvn.w	r0, #2
}
10013854:	4770      	bx	lr
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK3) {
10013856:	6803      	ldr	r3, [r0, #0]
        return E_BAD_PARAM;
10013858:	f06f 0002 	mvn.w	r0, #2
        return E_BAD_PARAM;
1001385c:	4770      	bx	lr
1001385e:	bf00      	nop
10013860:	40042000 	.word	0x40042000
10013864:	20001768 	.word	0x20001768
10013868:	047868c0 	.word	0x047868c0

1001386c <MXC_UART_RevB_SetDataSize>:

int MXC_UART_RevB_SetDataSize(mxc_uart_revb_regs_t *uart, int dataSize)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1001386c:	4a0e      	ldr	r2, [pc, #56]	@ (100138a8 <MXC_UART_RevB_SetDataSize+0x3c>)
1001386e:	4290      	cmp	r0, r2
{
10013870:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013872:	d00b      	beq.n	1001388c <MXC_UART_RevB_SetDataSize+0x20>
10013874:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013878:	4290      	cmp	r0, r2
1001387a:	d007      	beq.n	1001388c <MXC_UART_RevB_SetDataSize+0x20>
1001387c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013880:	4290      	cmp	r0, r2
10013882:	d003      	beq.n	1001388c <MXC_UART_RevB_SetDataSize+0x20>
10013884:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10013888:	4290      	cmp	r0, r2
1001388a:	d10a      	bne.n	100138a2 <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    if (dataSize < 5 || dataSize > 8) {
1001388c:	3905      	subs	r1, #5
1001388e:	2903      	cmp	r1, #3
10013890:	d807      	bhi.n	100138a2 <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    dataSize = (dataSize - 5) << MXC_F_UART_REVB_CTRL_CHAR_SIZE_POS;

    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
10013892:	681a      	ldr	r2, [r3, #0]
10013894:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
10013898:	ea42 2281 	orr.w	r2, r2, r1, lsl #10

    return E_NO_ERROR;
1001389c:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
1001389e:	601a      	str	r2, [r3, #0]
    return E_NO_ERROR;
100138a0:	4770      	bx	lr
        return E_BAD_PARAM;
100138a2:	f06f 0002 	mvn.w	r0, #2
}
100138a6:	4770      	bx	lr
100138a8:	40042000 	.word	0x40042000

100138ac <MXC_UART_RevB_SetStopBits>:

int MXC_UART_RevB_SetStopBits(mxc_uart_revb_regs_t *uart, mxc_uart_stop_t stopBits)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100138ac:	4b10      	ldr	r3, [pc, #64]	@ (100138f0 <MXC_UART_RevB_SetStopBits+0x44>)
100138ae:	4298      	cmp	r0, r3
100138b0:	d00b      	beq.n	100138ca <MXC_UART_RevB_SetStopBits+0x1e>
100138b2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100138b6:	4298      	cmp	r0, r3
100138b8:	d007      	beq.n	100138ca <MXC_UART_RevB_SetStopBits+0x1e>
100138ba:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100138be:	4298      	cmp	r0, r3
100138c0:	d003      	beq.n	100138ca <MXC_UART_RevB_SetStopBits+0x1e>
100138c2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
100138c6:	4298      	cmp	r0, r3
100138c8:	d108      	bne.n	100138dc <MXC_UART_RevB_SetStopBits+0x30>
        return E_BAD_PARAM;
    }

    switch (stopBits) {
100138ca:	b151      	cbz	r1, 100138e2 <MXC_UART_RevB_SetStopBits+0x36>
100138cc:	2901      	cmp	r1, #1
100138ce:	d105      	bne.n	100138dc <MXC_UART_RevB_SetStopBits+0x30>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
                     0 << MXC_F_UART_REVB_CTRL_STOPBITS_POS);
        break;

    case MXC_UART_STOP_2:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
100138d0:	6803      	ldr	r3, [r0, #0]
100138d2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
100138d6:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
100138d8:	2000      	movs	r0, #0
100138da:	4770      	bx	lr
100138dc:	f06f 0002 	mvn.w	r0, #2
}
100138e0:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
100138e2:	6803      	ldr	r3, [r0, #0]
100138e4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
100138e8:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
100138ea:	2000      	movs	r0, #0
100138ec:	4770      	bx	lr
100138ee:	bf00      	nop
100138f0:	40042000 	.word	0x40042000

100138f4 <MXC_UART_RevB_SetParity>:

int MXC_UART_RevB_SetParity(mxc_uart_revb_regs_t *uart, mxc_uart_parity_t parity)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100138f4:	4b29      	ldr	r3, [pc, #164]	@ (1001399c <MXC_UART_RevB_SetParity+0xa8>)
100138f6:	4298      	cmp	r0, r3
100138f8:	d00b      	beq.n	10013912 <MXC_UART_RevB_SetParity+0x1e>
100138fa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100138fe:	4298      	cmp	r0, r3
10013900:	d007      	beq.n	10013912 <MXC_UART_RevB_SetParity+0x1e>
10013902:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10013906:	4298      	cmp	r0, r3
10013908:	d003      	beq.n	10013912 <MXC_UART_RevB_SetParity+0x1e>
1001390a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1001390e:	4298      	cmp	r0, r3
10013910:	d141      	bne.n	10013996 <MXC_UART_RevB_SetParity+0xa2>
        return E_BAD_PARAM;
    }

    switch (parity) {
10013912:	2904      	cmp	r1, #4
10013914:	d83f      	bhi.n	10013996 <MXC_UART_RevB_SetParity+0xa2>
10013916:	e8df f001 	tbb	[pc, r1]
1001391a:	1711      	.short	0x1711
1001391c:	3124      	.short	0x3124
1001391e:	03          	.byte	0x03
1001391f:	00          	.byte	0x00
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
        break;

    case MXC_UART_PARITY_ODD_1:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10013920:	6803      	ldr	r3, [r0, #0]
10013922:	f043 0310 	orr.w	r3, r3, #16
10013926:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10013928:	6803      	ldr	r3, [r0, #0]
1001392a:	f043 0320 	orr.w	r3, r3, #32
1001392e:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10013930:	6803      	ldr	r3, [r0, #0]
10013932:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013936:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10013938:	2000      	movs	r0, #0
1001393a:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 0 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1001393c:	6803      	ldr	r3, [r0, #0]
1001393e:	f023 0310 	bic.w	r3, r3, #16
10013942:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
10013944:	2000      	movs	r0, #0
10013946:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10013948:	6803      	ldr	r3, [r0, #0]
1001394a:	f043 0310 	orr.w	r3, r3, #16
1001394e:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10013950:	6803      	ldr	r3, [r0, #0]
10013952:	f023 0320 	bic.w	r3, r3, #32
10013956:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10013958:	6803      	ldr	r3, [r0, #0]
1001395a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1001395e:	6003      	str	r3, [r0, #0]
        break;
10013960:	e7ea      	b.n	10013938 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10013962:	6803      	ldr	r3, [r0, #0]
10013964:	f043 0310 	orr.w	r3, r3, #16
10013968:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1001396a:	6803      	ldr	r3, [r0, #0]
1001396c:	f023 0320 	bic.w	r3, r3, #32
10013970:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10013972:	6803      	ldr	r3, [r0, #0]
10013974:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013978:	6003      	str	r3, [r0, #0]
        break;
1001397a:	e7dd      	b.n	10013938 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1001397c:	6803      	ldr	r3, [r0, #0]
1001397e:	f043 0310 	orr.w	r3, r3, #16
10013982:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10013984:	6803      	ldr	r3, [r0, #0]
10013986:	f043 0320 	orr.w	r3, r3, #32
1001398a:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1001398c:	6803      	ldr	r3, [r0, #0]
1001398e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10013992:	6003      	str	r3, [r0, #0]
        break;
10013994:	e7d0      	b.n	10013938 <MXC_UART_RevB_SetParity+0x44>
    switch (parity) {
10013996:	f06f 0002 	mvn.w	r0, #2
}
1001399a:	4770      	bx	lr
1001399c:	40042000 	.word	0x40042000

100139a0 <MXC_UART_RevB_ReadCharacterRaw>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_ReadCharacterRaw(mxc_uart_revb_regs_t *uart)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100139a0:	4b0c      	ldr	r3, [pc, #48]	@ (100139d4 <MXC_UART_RevB_ReadCharacterRaw+0x34>)
100139a2:	4298      	cmp	r0, r3
100139a4:	d00b      	beq.n	100139be <MXC_UART_RevB_ReadCharacterRaw+0x1e>
100139a6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100139aa:	4298      	cmp	r0, r3
100139ac:	d007      	beq.n	100139be <MXC_UART_RevB_ReadCharacterRaw+0x1e>
100139ae:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
100139b2:	4298      	cmp	r0, r3
100139b4:	d003      	beq.n	100139be <MXC_UART_RevB_ReadCharacterRaw+0x1e>
100139b6:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
100139ba:	4298      	cmp	r0, r3
100139bc:	d104      	bne.n	100139c8 <MXC_UART_RevB_ReadCharacterRaw+0x28>
        return E_BAD_PARAM;
    }

    if (uart->status & MXC_F_UART_REVB_STATUS_RX_EM) {
100139be:	6843      	ldr	r3, [r0, #4]
100139c0:	06db      	lsls	r3, r3, #27
100139c2:	d404      	bmi.n	100139ce <MXC_UART_RevB_ReadCharacterRaw+0x2e>
        return E_UNDERFLOW;
    }

    return uart->fifo;
100139c4:	6a00      	ldr	r0, [r0, #32]
100139c6:	4770      	bx	lr
        return E_BAD_PARAM;
100139c8:	f06f 0002 	mvn.w	r0, #2
100139cc:	4770      	bx	lr
        return E_UNDERFLOW;
100139ce:	f06f 000c 	mvn.w	r0, #12
}
100139d2:	4770      	bx	lr
100139d4:	40042000 	.word	0x40042000

100139d8 <MXC_UART_RevB_WriteCharacterRaw>:

int MXC_UART_RevB_WriteCharacterRaw(mxc_uart_revb_regs_t *uart, uint8_t character)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100139d8:	4a0d      	ldr	r2, [pc, #52]	@ (10013a10 <MXC_UART_RevB_WriteCharacterRaw+0x38>)
100139da:	4290      	cmp	r0, r2
{
100139dc:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
100139de:	d00b      	beq.n	100139f8 <MXC_UART_RevB_WriteCharacterRaw+0x20>
100139e0:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100139e4:	4290      	cmp	r0, r2
100139e6:	d007      	beq.n	100139f8 <MXC_UART_RevB_WriteCharacterRaw+0x20>
100139e8:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100139ec:	4290      	cmp	r0, r2
100139ee:	d003      	beq.n	100139f8 <MXC_UART_RevB_WriteCharacterRaw+0x20>
100139f0:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
100139f4:	4290      	cmp	r0, r2
100139f6:	d105      	bne.n	10013a04 <MXC_UART_RevB_WriteCharacterRaw+0x2c>
        return E_BAD_PARAM;
    }

    // Require the TX FIFO to be empty, so that we write out the expected character
    // Return error if the FIFO is full
    if (uart->status & MXC_F_UART_REVB_STATUS_TX_FULL) {
100139f8:	6858      	ldr	r0, [r3, #4]
100139fa:	f010 0080 	ands.w	r0, r0, #128	@ 0x80
100139fe:	d104      	bne.n	10013a0a <MXC_UART_RevB_WriteCharacterRaw+0x32>
        return E_OVERFLOW;
    }

    uart->fifo = character;
10013a00:	6219      	str	r1, [r3, #32]

    return E_NO_ERROR;
10013a02:	4770      	bx	lr
        return E_BAD_PARAM;
10013a04:	f06f 0002 	mvn.w	r0, #2
10013a08:	4770      	bx	lr
        return E_OVERFLOW;
10013a0a:	f06f 000b 	mvn.w	r0, #11
}
10013a0e:	4770      	bx	lr
10013a10:	40042000 	.word	0x40042000

10013a14 <MXC_UART_RevB_GetRXFIFOAvailable>:
    return read;
}

unsigned int MXC_UART_RevB_GetRXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    return (uart->status & MXC_F_UART_REVB_STATUS_RX_LVL) >> MXC_F_UART_REVB_STATUS_RX_LVL_POS;
10013a14:	6840      	ldr	r0, [r0, #4]
}
10013a16:	f3c0 2003 	ubfx	r0, r0, #8, #4
10013a1a:	4770      	bx	lr

10013a1c <MXC_UART_RevB_GetTXFIFOAvailable>:
    return written;
}

unsigned int MXC_UART_RevB_GetTXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    int txCnt = (uart->status & MXC_F_UART_REVB_STATUS_TX_LVL) >> MXC_F_UART_REVB_STATUS_TX_LVL_POS;
10013a1c:	6840      	ldr	r0, [r0, #4]
10013a1e:	f3c0 3003 	ubfx	r0, r0, #12, #4
    return MXC_UART_FIFO_DEPTH - txCnt;
}
10013a22:	f1c0 0008 	rsb	r0, r0, #8
10013a26:	4770      	bx	lr

10013a28 <MXC_UART_RevB_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_SetRXThreshold(mxc_uart_revb_regs_t *uart, unsigned int numBytes)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013a28:	4a0e      	ldr	r2, [pc, #56]	@ (10013a64 <MXC_UART_RevB_SetRXThreshold+0x3c>)
10013a2a:	4290      	cmp	r0, r2
{
10013a2c:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10013a2e:	d00b      	beq.n	10013a48 <MXC_UART_RevB_SetRXThreshold+0x20>
10013a30:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013a34:	4290      	cmp	r0, r2
10013a36:	d007      	beq.n	10013a48 <MXC_UART_RevB_SetRXThreshold+0x20>
10013a38:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10013a3c:	4290      	cmp	r0, r2
10013a3e:	d003      	beq.n	10013a48 <MXC_UART_RevB_SetRXThreshold+0x20>
10013a40:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10013a44:	4290      	cmp	r0, r2
10013a46:	d109      	bne.n	10013a5c <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    if (numBytes < 1 || numBytes > MXC_UART_FIFO_DEPTH) {
10013a48:	1e4a      	subs	r2, r1, #1
10013a4a:	2a07      	cmp	r2, #7
10013a4c:	d806      	bhi.n	10013a5c <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    numBytes <<= MXC_F_UART_REVB_CTRL_RX_THD_VAL_POS;
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
10013a4e:	681a      	ldr	r2, [r3, #0]
10013a50:	f022 020f 	bic.w	r2, r2, #15
10013a54:	4311      	orrs	r1, r2

    return E_NO_ERROR;
10013a56:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
10013a58:	6019      	str	r1, [r3, #0]
    return E_NO_ERROR;
10013a5a:	4770      	bx	lr
        return E_BAD_PARAM;
10013a5c:	f06f 0002 	mvn.w	r0, #2
}
10013a60:	4770      	bx	lr
10013a62:	bf00      	nop
10013a64:	40042000 	.word	0x40042000

10013a68 <MXC_GPIO_Common_Init>:
static void *cbparam[MXC_CFG_GPIO_INSTANCES][MXC_CFG_GPIO_PINS_PORT];
static uint8_t initialized = 0;

/* **** Functions **** */
int MXC_GPIO_Common_Init(uint32_t portmask)
{
10013a68:	b510      	push	{r4, lr}
    if (!initialized) {
10013a6a:	4c06      	ldr	r4, [pc, #24]	@ (10013a84 <MXC_GPIO_Common_Init+0x1c>)
10013a6c:	7821      	ldrb	r1, [r4, #0]
10013a6e:	b931      	cbnz	r1, 10013a7e <MXC_GPIO_Common_Init+0x16>
        int i, j;

        for (i = 0; i < MXC_CFG_GPIO_INSTANCES; i++) {
            // Initialize call back arrays
            for (j = 0; j < MXC_CFG_GPIO_PINS_PORT; j++) {
                callback[i][j] = NULL;
10013a70:	4805      	ldr	r0, [pc, #20]	@ (10013a88 <MXC_GPIO_Common_Init+0x20>)
10013a72:	f44f 7200 	mov.w	r2, #512	@ 0x200
10013a76:	f004 f9fb 	bl	10017e70 <memset>
            }
        }

        initialized = 1;
10013a7a:	2301      	movs	r3, #1
10013a7c:	7023      	strb	r3, [r4, #0]
    }

    return E_NO_ERROR;
}
10013a7e:	2000      	movs	r0, #0
10013a80:	bd10      	pop	{r4, pc}
10013a82:	bf00      	nop
10013a84:	20001050 	.word	0x20001050
10013a88:	20001254 	.word	0x20001254

10013a8c <MXC_GPIO_Common_Handler>:
void MXC_GPIO_Common_Handler(unsigned int port)
{
    uint32_t stat;
    unsigned int pin;

    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10013a8c:	2803      	cmp	r0, #3
{
10013a8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10013a90:	4607      	mov	r7, r0
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10013a92:	d81d      	bhi.n	10013ad0 <MXC_GPIO_Common_Handler+0x44>

    mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(port);
10013a94:	bb18      	cbnz	r0, 10013ade <MXC_GPIO_Common_Handler+0x52>
10013a96:	4d14      	ldr	r5, [pc, #80]	@ (10013ae8 <MXC_GPIO_Common_Handler+0x5c>)

    stat = MXC_GPIO_GetFlags(gpio);
10013a98:	4628      	mov	r0, r5
10013a9a:	f7fe fd7d 	bl	10012598 <MXC_GPIO_GetFlags>
10013a9e:	4604      	mov	r4, r0
    MXC_GPIO_ClearFlags(gpio, stat);
10013aa0:	4601      	mov	r1, r0
10013aa2:	4628      	mov	r0, r5
10013aa4:	f7fe fd6c 	bl	10012580 <MXC_GPIO_ClearFlags>

    pin = 0;

    while (stat) {
10013aa8:	b18c      	cbz	r4, 10013ace <MXC_GPIO_Common_Handler+0x42>
10013aaa:	4e10      	ldr	r6, [pc, #64]	@ (10013aec <MXC_GPIO_Common_Handler+0x60>)
10013aac:	4d10      	ldr	r5, [pc, #64]	@ (10013af0 <MXC_GPIO_Common_Handler+0x64>)
10013aae:	eb06 16c7 	add.w	r6, r6, r7, lsl #7
10013ab2:	eb05 15c7 	add.w	r5, r5, r7, lsl #7
        if (stat & 1) {
10013ab6:	07e3      	lsls	r3, r4, #31
10013ab8:	d503      	bpl.n	10013ac2 <MXC_GPIO_Common_Handler+0x36>
            if (callback[port][pin]) {
10013aba:	682b      	ldr	r3, [r5, #0]
10013abc:	b10b      	cbz	r3, 10013ac2 <MXC_GPIO_Common_Handler+0x36>
                callback[port][pin](cbparam[port][pin]);
10013abe:	6830      	ldr	r0, [r6, #0]
10013ac0:	4798      	blx	r3
    while (stat) {
10013ac2:	0864      	lsrs	r4, r4, #1
10013ac4:	f106 0604 	add.w	r6, r6, #4
10013ac8:	f105 0504 	add.w	r5, r5, #4
10013acc:	d1f3      	bne.n	10013ab6 <MXC_GPIO_Common_Handler+0x2a>
        }

        pin++;
        stat >>= 1;
    }
}
10013ace:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10013ad0:	4908      	ldr	r1, [pc, #32]	@ (10013af4 <MXC_GPIO_Common_Handler+0x68>)
10013ad2:	4809      	ldr	r0, [pc, #36]	@ (10013af8 <MXC_GPIO_Common_Handler+0x6c>)
10013ad4:	225a      	movs	r2, #90	@ 0x5a
10013ad6:	f7fd ff77 	bl	100119c8 <mxc_assert>
10013ada:	2500      	movs	r5, #0
10013adc:	e7dc      	b.n	10013a98 <MXC_GPIO_Common_Handler+0xc>
10013ade:	4b07      	ldr	r3, [pc, #28]	@ (10013afc <MXC_GPIO_Common_Handler+0x70>)
10013ae0:	1e42      	subs	r2, r0, #1
10013ae2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
10013ae6:	e7d7      	b.n	10013a98 <MXC_GPIO_Common_Handler+0xc>
10013ae8:	40008000 	.word	0x40008000
10013aec:	20001054 	.word	0x20001054
10013af0:	20001254 	.word	0x20001254
10013af4:	100237c8 	.word	0x100237c8
10013af8:	10023838 	.word	0x10023838
10013afc:	10023858 	.word	0x10023858

10013b00 <malloc>:
10013b00:	4b02      	ldr	r3, [pc, #8]	@ (10013b0c <malloc+0xc>)
10013b02:	4601      	mov	r1, r0
10013b04:	6818      	ldr	r0, [r3, #0]
10013b06:	f000 b80b 	b.w	10013b20 <_malloc_r>
10013b0a:	bf00      	nop
10013b0c:	20000598 	.word	0x20000598

10013b10 <free>:
10013b10:	4b02      	ldr	r3, [pc, #8]	@ (10013b1c <free+0xc>)
10013b12:	4601      	mov	r1, r0
10013b14:	6818      	ldr	r0, [r3, #0]
10013b16:	f005 be93 	b.w	10019840 <_free_r>
10013b1a:	bf00      	nop
10013b1c:	20000598 	.word	0x20000598

10013b20 <_malloc_r>:
10013b20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10013b24:	f101 050b 	add.w	r5, r1, #11
10013b28:	2d16      	cmp	r5, #22
10013b2a:	b085      	sub	sp, #20
10013b2c:	4606      	mov	r6, r0
10013b2e:	d824      	bhi.n	10013b7a <_malloc_r+0x5a>
10013b30:	2910      	cmp	r1, #16
10013b32:	f200 80b1 	bhi.w	10013c98 <_malloc_r+0x178>
10013b36:	f003 f989 	bl	10016e4c <__malloc_lock>
10013b3a:	2510      	movs	r5, #16
10013b3c:	2318      	movs	r3, #24
10013b3e:	f04f 0c02 	mov.w	ip, #2
10013b42:	4fba      	ldr	r7, [pc, #744]	@ (10013e2c <_malloc_r+0x30c>)
10013b44:	443b      	add	r3, r7
10013b46:	f1a3 0208 	sub.w	r2, r3, #8
10013b4a:	685c      	ldr	r4, [r3, #4]
10013b4c:	4294      	cmp	r4, r2
10013b4e:	f000 8122 	beq.w	10013d96 <_malloc_r+0x276>
10013b52:	6863      	ldr	r3, [r4, #4]
10013b54:	68e2      	ldr	r2, [r4, #12]
10013b56:	68a1      	ldr	r1, [r4, #8]
10013b58:	f023 0303 	bic.w	r3, r3, #3
10013b5c:	60ca      	str	r2, [r1, #12]
10013b5e:	4423      	add	r3, r4
10013b60:	4630      	mov	r0, r6
10013b62:	6091      	str	r1, [r2, #8]
10013b64:	685a      	ldr	r2, [r3, #4]
10013b66:	f042 0201 	orr.w	r2, r2, #1
10013b6a:	605a      	str	r2, [r3, #4]
10013b6c:	3408      	adds	r4, #8
10013b6e:	f003 f973 	bl	10016e58 <__malloc_unlock>
10013b72:	4620      	mov	r0, r4
10013b74:	b005      	add	sp, #20
10013b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013b7a:	f035 0507 	bics.w	r5, r5, #7
10013b7e:	f100 808b 	bmi.w	10013c98 <_malloc_r+0x178>
10013b82:	42a9      	cmp	r1, r5
10013b84:	f200 8088 	bhi.w	10013c98 <_malloc_r+0x178>
10013b88:	f003 f960 	bl	10016e4c <__malloc_lock>
10013b8c:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
10013b90:	f0c0 8173 	bcc.w	10013e7a <_malloc_r+0x35a>
10013b94:	0a6b      	lsrs	r3, r5, #9
10013b96:	f000 8083 	beq.w	10013ca0 <_malloc_r+0x180>
10013b9a:	2b04      	cmp	r3, #4
10013b9c:	f200 8122 	bhi.w	10013de4 <_malloc_r+0x2c4>
10013ba0:	09ab      	lsrs	r3, r5, #6
10013ba2:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
10013ba6:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
10013baa:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10013bae:	4f9f      	ldr	r7, [pc, #636]	@ (10013e2c <_malloc_r+0x30c>)
10013bb0:	443b      	add	r3, r7
10013bb2:	f1a3 0008 	sub.w	r0, r3, #8
10013bb6:	685c      	ldr	r4, [r3, #4]
10013bb8:	42a0      	cmp	r0, r4
10013bba:	d107      	bne.n	10013bcc <_malloc_r+0xac>
10013bbc:	e00d      	b.n	10013bda <_malloc_r+0xba>
10013bbe:	2a00      	cmp	r2, #0
10013bc0:	68e1      	ldr	r1, [r4, #12]
10013bc2:	f280 80e2 	bge.w	10013d8a <_malloc_r+0x26a>
10013bc6:	4288      	cmp	r0, r1
10013bc8:	d007      	beq.n	10013bda <_malloc_r+0xba>
10013bca:	460c      	mov	r4, r1
10013bcc:	6863      	ldr	r3, [r4, #4]
10013bce:	f023 0303 	bic.w	r3, r3, #3
10013bd2:	1b5a      	subs	r2, r3, r5
10013bd4:	2a0f      	cmp	r2, #15
10013bd6:	ddf2      	ble.n	10013bbe <_malloc_r+0x9e>
10013bd8:	46f4      	mov	ip, lr
10013bda:	f8df 8254 	ldr.w	r8, [pc, #596]	@ 10013e30 <_malloc_r+0x310>
10013bde:	693c      	ldr	r4, [r7, #16]
10013be0:	4544      	cmp	r4, r8
10013be2:	f000 80bf 	beq.w	10013d64 <_malloc_r+0x244>
10013be6:	6863      	ldr	r3, [r4, #4]
10013be8:	f023 0903 	bic.w	r9, r3, #3
10013bec:	eba9 0305 	sub.w	r3, r9, r5
10013bf0:	2b0f      	cmp	r3, #15
10013bf2:	f300 8147 	bgt.w	10013e84 <_malloc_r+0x364>
10013bf6:	2b00      	cmp	r3, #0
10013bf8:	e9c7 8804 	strd	r8, r8, [r7, #16]
10013bfc:	f280 8131 	bge.w	10013e62 <_malloc_r+0x342>
10013c00:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
10013c04:	f8d7 e004 	ldr.w	lr, [r7, #4]
10013c08:	f080 80cc 	bcs.w	10013da4 <_malloc_r+0x284>
10013c0c:	ea4f 01d9 	mov.w	r1, r9, lsr #3
10013c10:	3101      	adds	r1, #1
10013c12:	ea4f 1959 	mov.w	r9, r9, lsr #5
10013c16:	2301      	movs	r3, #1
10013c18:	fa03 f309 	lsl.w	r3, r3, r9
10013c1c:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
10013c20:	60a2      	str	r2, [r4, #8]
10013c22:	ea4e 0e03 	orr.w	lr, lr, r3
10013c26:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
10013c2a:	3b08      	subs	r3, #8
10013c2c:	60e3      	str	r3, [r4, #12]
10013c2e:	f8c7 e004 	str.w	lr, [r7, #4]
10013c32:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
10013c36:	60d4      	str	r4, [r2, #12]
10013c38:	ea4f 03ac 	mov.w	r3, ip, asr #2
10013c3c:	2001      	movs	r0, #1
10013c3e:	4098      	lsls	r0, r3
10013c40:	4570      	cmp	r0, lr
10013c42:	d834      	bhi.n	10013cae <_malloc_r+0x18e>
10013c44:	ea10 0f0e 	tst.w	r0, lr
10013c48:	d107      	bne.n	10013c5a <_malloc_r+0x13a>
10013c4a:	f02c 0c03 	bic.w	ip, ip, #3
10013c4e:	0040      	lsls	r0, r0, #1
10013c50:	ea10 0f0e 	tst.w	r0, lr
10013c54:	f10c 0c04 	add.w	ip, ip, #4
10013c58:	d0f9      	beq.n	10013c4e <_malloc_r+0x12e>
10013c5a:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
10013c5e:	4652      	mov	r2, sl
10013c60:	46e1      	mov	r9, ip
10013c62:	68d1      	ldr	r1, [r2, #12]
10013c64:	e00e      	b.n	10013c84 <_malloc_r+0x164>
10013c66:	684b      	ldr	r3, [r1, #4]
10013c68:	f023 0303 	bic.w	r3, r3, #3
10013c6c:	eba3 0e05 	sub.w	lr, r3, r5
10013c70:	f1be 0f0f 	cmp.w	lr, #15
10013c74:	460c      	mov	r4, r1
10013c76:	68c9      	ldr	r1, [r1, #12]
10013c78:	f300 80c1 	bgt.w	10013dfe <_malloc_r+0x2de>
10013c7c:	f1be 0f00 	cmp.w	lr, #0
10013c80:	f280 80e2 	bge.w	10013e48 <_malloc_r+0x328>
10013c84:	428a      	cmp	r2, r1
10013c86:	d1ee      	bne.n	10013c66 <_malloc_r+0x146>
10013c88:	f109 0901 	add.w	r9, r9, #1
10013c8c:	f019 0f03 	tst.w	r9, #3
10013c90:	f102 0208 	add.w	r2, r2, #8
10013c94:	d1e5      	bne.n	10013c62 <_malloc_r+0x142>
10013c96:	e121      	b.n	10013edc <_malloc_r+0x3bc>
10013c98:	230c      	movs	r3, #12
10013c9a:	6033      	str	r3, [r6, #0]
10013c9c:	2400      	movs	r4, #0
10013c9e:	e768      	b.n	10013b72 <_malloc_r+0x52>
10013ca0:	f44f 7300 	mov.w	r3, #512	@ 0x200
10013ca4:	f04f 0c40 	mov.w	ip, #64	@ 0x40
10013ca8:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
10013cac:	e77f      	b.n	10013bae <_malloc_r+0x8e>
10013cae:	68bc      	ldr	r4, [r7, #8]
10013cb0:	6863      	ldr	r3, [r4, #4]
10013cb2:	f023 0903 	bic.w	r9, r3, #3
10013cb6:	45a9      	cmp	r9, r5
10013cb8:	d303      	bcc.n	10013cc2 <_malloc_r+0x1a2>
10013cba:	eba9 0305 	sub.w	r3, r9, r5
10013cbe:	2b0f      	cmp	r3, #15
10013cc0:	dc53      	bgt.n	10013d6a <_malloc_r+0x24a>
10013cc2:	4b5c      	ldr	r3, [pc, #368]	@ (10013e34 <_malloc_r+0x314>)
10013cc4:	f8df b170 	ldr.w	fp, [pc, #368]	@ 10013e38 <_malloc_r+0x318>
10013cc8:	681b      	ldr	r3, [r3, #0]
10013cca:	2008      	movs	r0, #8
10013ccc:	f103 0810 	add.w	r8, r3, #16
10013cd0:	f004 fa02 	bl	100180d8 <sysconf>
10013cd4:	f8db 3000 	ldr.w	r3, [fp]
10013cd8:	9001      	str	r0, [sp, #4]
10013cda:	3301      	adds	r3, #1
10013cdc:	44a8      	add	r8, r5
10013cde:	eb04 0209 	add.w	r2, r4, r9
10013ce2:	d005      	beq.n	10013cf0 <_malloc_r+0x1d0>
10013ce4:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
10013ce8:	4480      	add	r8, r0
10013cea:	4243      	negs	r3, r0
10013cec:	ea03 0808 	and.w	r8, r3, r8
10013cf0:	4641      	mov	r1, r8
10013cf2:	4630      	mov	r0, r6
10013cf4:	9202      	str	r2, [sp, #8]
10013cf6:	f004 f9c1 	bl	1001807c <_sbrk_r>
10013cfa:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10013cfe:	9a02      	ldr	r2, [sp, #8]
10013d00:	4682      	mov	sl, r0
10013d02:	f000 80dc 	beq.w	10013ebe <_malloc_r+0x39e>
10013d06:	4282      	cmp	r2, r0
10013d08:	f200 80d7 	bhi.w	10013eba <_malloc_r+0x39a>
10013d0c:	4b4b      	ldr	r3, [pc, #300]	@ (10013e3c <_malloc_r+0x31c>)
10013d0e:	9901      	ldr	r1, [sp, #4]
10013d10:	6818      	ldr	r0, [r3, #0]
10013d12:	4440      	add	r0, r8
10013d14:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
10013d18:	6018      	str	r0, [r3, #0]
10013d1a:	4684      	mov	ip, r0
10013d1c:	f040 80fc 	bne.w	10013f18 <_malloc_r+0x3f8>
10013d20:	ea1a 0f01 	tst.w	sl, r1
10013d24:	f040 80f8 	bne.w	10013f18 <_malloc_r+0x3f8>
10013d28:	f8d7 a008 	ldr.w	sl, [r7, #8]
10013d2c:	44c8      	add	r8, r9
10013d2e:	f048 0201 	orr.w	r2, r8, #1
10013d32:	f8ca 2004 	str.w	r2, [sl, #4]
10013d36:	4b42      	ldr	r3, [pc, #264]	@ (10013e40 <_malloc_r+0x320>)
10013d38:	6819      	ldr	r1, [r3, #0]
10013d3a:	4281      	cmp	r1, r0
10013d3c:	bf38      	it	cc
10013d3e:	6018      	strcc	r0, [r3, #0]
10013d40:	4b40      	ldr	r3, [pc, #256]	@ (10013e44 <_malloc_r+0x324>)
10013d42:	6819      	ldr	r1, [r3, #0]
10013d44:	4281      	cmp	r1, r0
10013d46:	bf38      	it	cc
10013d48:	6018      	strcc	r0, [r3, #0]
10013d4a:	4654      	mov	r4, sl
10013d4c:	f022 0803 	bic.w	r8, r2, #3
10013d50:	45a8      	cmp	r8, r5
10013d52:	eba8 0305 	sub.w	r3, r8, r5
10013d56:	d301      	bcc.n	10013d5c <_malloc_r+0x23c>
10013d58:	2b0f      	cmp	r3, #15
10013d5a:	dc06      	bgt.n	10013d6a <_malloc_r+0x24a>
10013d5c:	4630      	mov	r0, r6
10013d5e:	f003 f87b 	bl	10016e58 <__malloc_unlock>
10013d62:	e79b      	b.n	10013c9c <_malloc_r+0x17c>
10013d64:	f8d7 e004 	ldr.w	lr, [r7, #4]
10013d68:	e766      	b.n	10013c38 <_malloc_r+0x118>
10013d6a:	1962      	adds	r2, r4, r5
10013d6c:	f043 0301 	orr.w	r3, r3, #1
10013d70:	f045 0501 	orr.w	r5, r5, #1
10013d74:	6065      	str	r5, [r4, #4]
10013d76:	4630      	mov	r0, r6
10013d78:	60ba      	str	r2, [r7, #8]
10013d7a:	6053      	str	r3, [r2, #4]
10013d7c:	f003 f86c 	bl	10016e58 <__malloc_unlock>
10013d80:	3408      	adds	r4, #8
10013d82:	4620      	mov	r0, r4
10013d84:	b005      	add	sp, #20
10013d86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013d8a:	68a2      	ldr	r2, [r4, #8]
10013d8c:	4423      	add	r3, r4
10013d8e:	60d1      	str	r1, [r2, #12]
10013d90:	4630      	mov	r0, r6
10013d92:	608a      	str	r2, [r1, #8]
10013d94:	e6e6      	b.n	10013b64 <_malloc_r+0x44>
10013d96:	68dc      	ldr	r4, [r3, #12]
10013d98:	42a3      	cmp	r3, r4
10013d9a:	f47f aeda 	bne.w	10013b52 <_malloc_r+0x32>
10013d9e:	f10c 0c02 	add.w	ip, ip, #2
10013da2:	e71a      	b.n	10013bda <_malloc_r+0xba>
10013da4:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
10013da8:	ea4f 2259 	mov.w	r2, r9, lsr #9
10013dac:	d37e      	bcc.n	10013eac <_malloc_r+0x38c>
10013dae:	2a14      	cmp	r2, #20
10013db0:	f200 8115 	bhi.w	10013fde <_malloc_r+0x4be>
10013db4:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
10013db8:	00db      	lsls	r3, r3, #3
10013dba:	325b      	adds	r2, #91	@ 0x5b
10013dbc:	18f9      	adds	r1, r7, r3
10013dbe:	58fb      	ldr	r3, [r7, r3]
10013dc0:	3908      	subs	r1, #8
10013dc2:	4299      	cmp	r1, r3
10013dc4:	d103      	bne.n	10013dce <_malloc_r+0x2ae>
10013dc6:	e0f0      	b.n	10013faa <_malloc_r+0x48a>
10013dc8:	689b      	ldr	r3, [r3, #8]
10013dca:	4299      	cmp	r1, r3
10013dcc:	d004      	beq.n	10013dd8 <_malloc_r+0x2b8>
10013dce:	685a      	ldr	r2, [r3, #4]
10013dd0:	f022 0203 	bic.w	r2, r2, #3
10013dd4:	454a      	cmp	r2, r9
10013dd6:	d8f7      	bhi.n	10013dc8 <_malloc_r+0x2a8>
10013dd8:	68d9      	ldr	r1, [r3, #12]
10013dda:	e9c4 3102 	strd	r3, r1, [r4, #8]
10013dde:	608c      	str	r4, [r1, #8]
10013de0:	60dc      	str	r4, [r3, #12]
10013de2:	e729      	b.n	10013c38 <_malloc_r+0x118>
10013de4:	2b14      	cmp	r3, #20
10013de6:	d96d      	bls.n	10013ec4 <_malloc_r+0x3a4>
10013de8:	2b54      	cmp	r3, #84	@ 0x54
10013dea:	f200 8101 	bhi.w	10013ff0 <_malloc_r+0x4d0>
10013dee:	0b2b      	lsrs	r3, r5, #12
10013df0:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
10013df4:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
10013df8:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10013dfc:	e6d7      	b.n	10013bae <_malloc_r+0x8e>
10013dfe:	4630      	mov	r0, r6
10013e00:	68a6      	ldr	r6, [r4, #8]
10013e02:	1962      	adds	r2, r4, r5
10013e04:	f045 0501 	orr.w	r5, r5, #1
10013e08:	6065      	str	r5, [r4, #4]
10013e0a:	60f1      	str	r1, [r6, #12]
10013e0c:	608e      	str	r6, [r1, #8]
10013e0e:	f04e 0101 	orr.w	r1, lr, #1
10013e12:	e9c7 2204 	strd	r2, r2, [r7, #16]
10013e16:	f8c2 8008 	str.w	r8, [r2, #8]
10013e1a:	f8c2 800c 	str.w	r8, [r2, #12]
10013e1e:	6051      	str	r1, [r2, #4]
10013e20:	f844 e003 	str.w	lr, [r4, r3]
10013e24:	f003 f818 	bl	10016e58 <__malloc_unlock>
10013e28:	3408      	adds	r4, #8
10013e2a:	e6a2      	b.n	10013b72 <_malloc_r+0x52>
10013e2c:	20000018 	.word	0x20000018
10013e30:	20000020 	.word	0x20000020
10013e34:	20001484 	.word	0x20001484
10013e38:	20000010 	.word	0x20000010
10013e3c:	20001454 	.word	0x20001454
10013e40:	20001480 	.word	0x20001480
10013e44:	2000147c 	.word	0x2000147c
10013e48:	4423      	add	r3, r4
10013e4a:	4630      	mov	r0, r6
10013e4c:	685a      	ldr	r2, [r3, #4]
10013e4e:	f042 0201 	orr.w	r2, r2, #1
10013e52:	605a      	str	r2, [r3, #4]
10013e54:	f854 3f08 	ldr.w	r3, [r4, #8]!
10013e58:	60d9      	str	r1, [r3, #12]
10013e5a:	608b      	str	r3, [r1, #8]
10013e5c:	f002 fffc 	bl	10016e58 <__malloc_unlock>
10013e60:	e687      	b.n	10013b72 <_malloc_r+0x52>
10013e62:	44a1      	add	r9, r4
10013e64:	4630      	mov	r0, r6
10013e66:	f8d9 3004 	ldr.w	r3, [r9, #4]
10013e6a:	f043 0301 	orr.w	r3, r3, #1
10013e6e:	f8c9 3004 	str.w	r3, [r9, #4]
10013e72:	3408      	adds	r4, #8
10013e74:	f002 fff0 	bl	10016e58 <__malloc_unlock>
10013e78:	e67b      	b.n	10013b72 <_malloc_r+0x52>
10013e7a:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
10013e7e:	f105 0308 	add.w	r3, r5, #8
10013e82:	e65e      	b.n	10013b42 <_malloc_r+0x22>
10013e84:	1962      	adds	r2, r4, r5
10013e86:	f043 0101 	orr.w	r1, r3, #1
10013e8a:	f045 0501 	orr.w	r5, r5, #1
10013e8e:	6065      	str	r5, [r4, #4]
10013e90:	4630      	mov	r0, r6
10013e92:	e9c7 2204 	strd	r2, r2, [r7, #16]
10013e96:	f8c2 8008 	str.w	r8, [r2, #8]
10013e9a:	f8c2 800c 	str.w	r8, [r2, #12]
10013e9e:	6051      	str	r1, [r2, #4]
10013ea0:	f844 3009 	str.w	r3, [r4, r9]
10013ea4:	f002 ffd8 	bl	10016e58 <__malloc_unlock>
10013ea8:	3408      	adds	r4, #8
10013eaa:	e662      	b.n	10013b72 <_malloc_r+0x52>
10013eac:	ea4f 1299 	mov.w	r2, r9, lsr #6
10013eb0:	f102 0339 	add.w	r3, r2, #57	@ 0x39
10013eb4:	00db      	lsls	r3, r3, #3
10013eb6:	3238      	adds	r2, #56	@ 0x38
10013eb8:	e780      	b.n	10013dbc <_malloc_r+0x29c>
10013eba:	42bc      	cmp	r4, r7
10013ebc:	d024      	beq.n	10013f08 <_malloc_r+0x3e8>
10013ebe:	68bc      	ldr	r4, [r7, #8]
10013ec0:	6862      	ldr	r2, [r4, #4]
10013ec2:	e743      	b.n	10013d4c <_malloc_r+0x22c>
10013ec4:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
10013ec8:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
10013ecc:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10013ed0:	e66d      	b.n	10013bae <_malloc_r+0x8e>
10013ed2:	f85a 3908 	ldr.w	r3, [sl], #-8
10013ed6:	4553      	cmp	r3, sl
10013ed8:	f040 80d8 	bne.w	1001408c <_malloc_r+0x56c>
10013edc:	f01c 0f03 	tst.w	ip, #3
10013ee0:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
10013ee4:	d1f5      	bne.n	10013ed2 <_malloc_r+0x3b2>
10013ee6:	687b      	ldr	r3, [r7, #4]
10013ee8:	ea23 0300 	bic.w	r3, r3, r0
10013eec:	607b      	str	r3, [r7, #4]
10013eee:	0040      	lsls	r0, r0, #1
10013ef0:	4298      	cmp	r0, r3
10013ef2:	f63f aedc 	bhi.w	10013cae <_malloc_r+0x18e>
10013ef6:	b918      	cbnz	r0, 10013f00 <_malloc_r+0x3e0>
10013ef8:	e6d9      	b.n	10013cae <_malloc_r+0x18e>
10013efa:	0040      	lsls	r0, r0, #1
10013efc:	f109 0904 	add.w	r9, r9, #4
10013f00:	4218      	tst	r0, r3
10013f02:	d0fa      	beq.n	10013efa <_malloc_r+0x3da>
10013f04:	46cc      	mov	ip, r9
10013f06:	e6a8      	b.n	10013c5a <_malloc_r+0x13a>
10013f08:	4b61      	ldr	r3, [pc, #388]	@ (10014090 <_malloc_r+0x570>)
10013f0a:	9901      	ldr	r1, [sp, #4]
10013f0c:	6818      	ldr	r0, [r3, #0]
10013f0e:	eb08 0c00 	add.w	ip, r8, r0
10013f12:	3901      	subs	r1, #1
10013f14:	f8c3 c000 	str.w	ip, [r3]
10013f18:	f8db 0000 	ldr.w	r0, [fp]
10013f1c:	3001      	adds	r0, #1
10013f1e:	bf1b      	ittet	ne
10013f20:	ebaa 0202 	subne.w	r2, sl, r2
10013f24:	4462      	addne	r2, ip
10013f26:	f8cb a000 	streq.w	sl, [fp]
10013f2a:	601a      	strne	r2, [r3, #0]
10013f2c:	f01a 0207 	ands.w	r2, sl, #7
10013f30:	e9cd 2302 	strd	r2, r3, [sp, #8]
10013f34:	d042      	beq.n	10013fbc <_malloc_r+0x49c>
10013f36:	f1c2 0208 	rsb	r2, r2, #8
10013f3a:	9b01      	ldr	r3, [sp, #4]
10013f3c:	4492      	add	sl, r2
10013f3e:	44d0      	add	r8, sl
10013f40:	4413      	add	r3, r2
10013f42:	ea08 0001 	and.w	r0, r8, r1
10013f46:	1a1a      	subs	r2, r3, r0
10013f48:	ea02 0b01 	and.w	fp, r2, r1
10013f4c:	4659      	mov	r1, fp
10013f4e:	4630      	mov	r0, r6
10013f50:	f004 f894 	bl	1001807c <_sbrk_r>
10013f54:	1c42      	adds	r2, r0, #1
10013f56:	9b03      	ldr	r3, [sp, #12]
10013f58:	d07a      	beq.n	10014050 <_malloc_r+0x530>
10013f5a:	eba0 000a 	sub.w	r0, r0, sl
10013f5e:	eb00 080b 	add.w	r8, r0, fp
10013f62:	6818      	ldr	r0, [r3, #0]
10013f64:	f8c7 a008 	str.w	sl, [r7, #8]
10013f68:	f048 0201 	orr.w	r2, r8, #1
10013f6c:	4458      	add	r0, fp
10013f6e:	42bc      	cmp	r4, r7
10013f70:	f8ca 2004 	str.w	r2, [sl, #4]
10013f74:	6018      	str	r0, [r3, #0]
10013f76:	f43f aede 	beq.w	10013d36 <_malloc_r+0x216>
10013f7a:	f1b9 0f0f 	cmp.w	r9, #15
10013f7e:	d942      	bls.n	10014006 <_malloc_r+0x4e6>
10013f80:	6861      	ldr	r1, [r4, #4]
10013f82:	f1a9 020c 	sub.w	r2, r9, #12
10013f86:	f022 0207 	bic.w	r2, r2, #7
10013f8a:	f001 0101 	and.w	r1, r1, #1
10013f8e:	4311      	orrs	r1, r2
10013f90:	6061      	str	r1, [r4, #4]
10013f92:	18a1      	adds	r1, r4, r2
10013f94:	f04f 0c05 	mov.w	ip, #5
10013f98:	2a0f      	cmp	r2, #15
10013f9a:	f8c1 c004 	str.w	ip, [r1, #4]
10013f9e:	f8c1 c008 	str.w	ip, [r1, #8]
10013fa2:	d84a      	bhi.n	1001403a <_malloc_r+0x51a>
10013fa4:	f8da 2004 	ldr.w	r2, [sl, #4]
10013fa8:	e6c5      	b.n	10013d36 <_malloc_r+0x216>
10013faa:	1092      	asrs	r2, r2, #2
10013fac:	2001      	movs	r0, #1
10013fae:	fa00 f202 	lsl.w	r2, r0, r2
10013fb2:	ea4e 0e02 	orr.w	lr, lr, r2
10013fb6:	f8c7 e004 	str.w	lr, [r7, #4]
10013fba:	e70e      	b.n	10013dda <_malloc_r+0x2ba>
10013fbc:	9b01      	ldr	r3, [sp, #4]
10013fbe:	eb0a 0208 	add.w	r2, sl, r8
10013fc2:	400a      	ands	r2, r1
10013fc4:	1a9a      	subs	r2, r3, r2
10013fc6:	ea02 0b01 	and.w	fp, r2, r1
10013fca:	4659      	mov	r1, fp
10013fcc:	4630      	mov	r0, r6
10013fce:	f004 f855 	bl	1001807c <_sbrk_r>
10013fd2:	1c43      	adds	r3, r0, #1
10013fd4:	9b03      	ldr	r3, [sp, #12]
10013fd6:	d1c0      	bne.n	10013f5a <_malloc_r+0x43a>
10013fd8:	f8dd b008 	ldr.w	fp, [sp, #8]
10013fdc:	e7c1      	b.n	10013f62 <_malloc_r+0x442>
10013fde:	2a54      	cmp	r2, #84	@ 0x54
10013fe0:	d815      	bhi.n	1001400e <_malloc_r+0x4ee>
10013fe2:	ea4f 3219 	mov.w	r2, r9, lsr #12
10013fe6:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
10013fea:	00db      	lsls	r3, r3, #3
10013fec:	326e      	adds	r2, #110	@ 0x6e
10013fee:	e6e5      	b.n	10013dbc <_malloc_r+0x29c>
10013ff0:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10013ff4:	d815      	bhi.n	10014022 <_malloc_r+0x502>
10013ff6:	0beb      	lsrs	r3, r5, #15
10013ff8:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
10013ffc:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
10014000:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014004:	e5d3      	b.n	10013bae <_malloc_r+0x8e>
10014006:	2301      	movs	r3, #1
10014008:	f8ca 3004 	str.w	r3, [sl, #4]
1001400c:	e6a6      	b.n	10013d5c <_malloc_r+0x23c>
1001400e:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
10014012:	d825      	bhi.n	10014060 <_malloc_r+0x540>
10014014:	ea4f 32d9 	mov.w	r2, r9, lsr #15
10014018:	f102 0378 	add.w	r3, r2, #120	@ 0x78
1001401c:	00db      	lsls	r3, r3, #3
1001401e:	3277      	adds	r2, #119	@ 0x77
10014020:	e6cc      	b.n	10013dbc <_malloc_r+0x29c>
10014022:	f240 5254 	movw	r2, #1364	@ 0x554
10014026:	4293      	cmp	r3, r2
10014028:	d825      	bhi.n	10014076 <_malloc_r+0x556>
1001402a:	0cab      	lsrs	r3, r5, #18
1001402c:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
10014030:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
10014034:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10014038:	e5b9      	b.n	10013bae <_malloc_r+0x8e>
1001403a:	4630      	mov	r0, r6
1001403c:	f104 0108 	add.w	r1, r4, #8
10014040:	9301      	str	r3, [sp, #4]
10014042:	f005 fbfd 	bl	10019840 <_free_r>
10014046:	9b01      	ldr	r3, [sp, #4]
10014048:	f8d7 a008 	ldr.w	sl, [r7, #8]
1001404c:	6818      	ldr	r0, [r3, #0]
1001404e:	e7a9      	b.n	10013fa4 <_malloc_r+0x484>
10014050:	9a02      	ldr	r2, [sp, #8]
10014052:	3a08      	subs	r2, #8
10014054:	4490      	add	r8, r2
10014056:	eba8 080a 	sub.w	r8, r8, sl
1001405a:	f04f 0b00 	mov.w	fp, #0
1001405e:	e780      	b.n	10013f62 <_malloc_r+0x442>
10014060:	f240 5354 	movw	r3, #1364	@ 0x554
10014064:	429a      	cmp	r2, r3
10014066:	d80d      	bhi.n	10014084 <_malloc_r+0x564>
10014068:	ea4f 4299 	mov.w	r2, r9, lsr #18
1001406c:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
10014070:	00db      	lsls	r3, r3, #3
10014072:	327c      	adds	r2, #124	@ 0x7c
10014074:	e6a2      	b.n	10013dbc <_malloc_r+0x29c>
10014076:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
1001407a:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
1001407e:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
10014082:	e594      	b.n	10013bae <_malloc_r+0x8e>
10014084:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10014088:	227e      	movs	r2, #126	@ 0x7e
1001408a:	e697      	b.n	10013dbc <_malloc_r+0x29c>
1001408c:	687b      	ldr	r3, [r7, #4]
1001408e:	e72e      	b.n	10013eee <_malloc_r+0x3ce>
10014090:	20001454 	.word	0x20001454

10014094 <printf>:
10014094:	b40f      	push	{r0, r1, r2, r3}
10014096:	b500      	push	{lr}
10014098:	4907      	ldr	r1, [pc, #28]	@ (100140b8 <printf+0x24>)
1001409a:	b083      	sub	sp, #12
1001409c:	ab04      	add	r3, sp, #16
1001409e:	6808      	ldr	r0, [r1, #0]
100140a0:	f853 2b04 	ldr.w	r2, [r3], #4
100140a4:	6881      	ldr	r1, [r0, #8]
100140a6:	9301      	str	r3, [sp, #4]
100140a8:	f000 f808 	bl	100140bc <_vfprintf_r>
100140ac:	b003      	add	sp, #12
100140ae:	f85d eb04 	ldr.w	lr, [sp], #4
100140b2:	b004      	add	sp, #16
100140b4:	4770      	bx	lr
100140b6:	bf00      	nop
100140b8:	20000598 	.word	0x20000598

100140bc <_vfprintf_r>:
100140bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100140c0:	b0df      	sub	sp, #380	@ 0x17c
100140c2:	461c      	mov	r4, r3
100140c4:	9107      	str	r1, [sp, #28]
100140c6:	4691      	mov	r9, r2
100140c8:	4683      	mov	fp, r0
100140ca:	f003 ff7f 	bl	10017fcc <_localeconv_r>
100140ce:	6803      	ldr	r3, [r0, #0]
100140d0:	9319      	str	r3, [sp, #100]	@ 0x64
100140d2:	4618      	mov	r0, r3
100140d4:	f004 fab4 	bl	10018640 <strlen>
100140d8:	2208      	movs	r2, #8
100140da:	9018      	str	r0, [sp, #96]	@ 0x60
100140dc:	2100      	movs	r1, #0
100140de:	a82e      	add	r0, sp, #184	@ 0xb8
100140e0:	940d      	str	r4, [sp, #52]	@ 0x34
100140e2:	f003 fec5 	bl	10017e70 <memset>
100140e6:	f1bb 0f00 	cmp.w	fp, #0
100140ea:	d004      	beq.n	100140f6 <_vfprintf_r+0x3a>
100140ec:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
100140f0:	2b00      	cmp	r3, #0
100140f2:	f001 807f 	beq.w	100151f4 <_vfprintf_r+0x1138>
100140f6:	9b07      	ldr	r3, [sp, #28]
100140f8:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
100140fa:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100140fe:	07d5      	lsls	r5, r2, #31
10014100:	d402      	bmi.n	10014108 <_vfprintf_r+0x4c>
10014102:	0598      	lsls	r0, r3, #22
10014104:	f140 869f 	bpl.w	10014e46 <_vfprintf_r+0xd8a>
10014108:	0499      	lsls	r1, r3, #18
1001410a:	d407      	bmi.n	1001411c <_vfprintf_r+0x60>
1001410c:	9907      	ldr	r1, [sp, #28]
1001410e:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
10014110:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10014114:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10014118:	818b      	strh	r3, [r1, #12]
1001411a:	664a      	str	r2, [r1, #100]	@ 0x64
1001411c:	071a      	lsls	r2, r3, #28
1001411e:	f140 80cc 	bpl.w	100142ba <_vfprintf_r+0x1fe>
10014122:	9a07      	ldr	r2, [sp, #28]
10014124:	6912      	ldr	r2, [r2, #16]
10014126:	2a00      	cmp	r2, #0
10014128:	f000 80c7 	beq.w	100142ba <_vfprintf_r+0x1fe>
1001412c:	f003 021a 	and.w	r2, r3, #26
10014130:	2a0a      	cmp	r2, #10
10014132:	f000 80d1 	beq.w	100142d8 <_vfprintf_r+0x21c>
10014136:	2300      	movs	r3, #0
10014138:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
1001413c:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10014140:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
10014144:	9313      	str	r3, [sp, #76]	@ 0x4c
10014146:	931a      	str	r3, [sp, #104]	@ 0x68
10014148:	930a      	str	r3, [sp, #40]	@ 0x28
1001414a:	2400      	movs	r4, #0
1001414c:	2300      	movs	r3, #0
1001414e:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
10014152:	aa35      	add	r2, sp, #212	@ 0xd4
10014154:	9232      	str	r2, [sp, #200]	@ 0xc8
10014156:	4690      	mov	r8, r2
10014158:	f8cd b020 	str.w	fp, [sp, #32]
1001415c:	464d      	mov	r5, r9
1001415e:	9f08      	ldr	r7, [sp, #32]
10014160:	462e      	mov	r6, r5
10014162:	4b8d      	ldr	r3, [pc, #564]	@ (10014398 <_vfprintf_r+0x2dc>)
10014164:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10014168:	f003 ff2a 	bl	10017fc0 <__locale_mb_cur_max>
1001416c:	4603      	mov	r3, r0
1001416e:	a82e      	add	r0, sp, #184	@ 0xb8
10014170:	9000      	str	r0, [sp, #0]
10014172:	4632      	mov	r2, r6
10014174:	a92a      	add	r1, sp, #168	@ 0xa8
10014176:	4638      	mov	r0, r7
10014178:	47a0      	blx	r4
1001417a:	2800      	cmp	r0, #0
1001417c:	f000 80cb 	beq.w	10014316 <_vfprintf_r+0x25a>
10014180:	f2c0 80c1 	blt.w	10014306 <_vfprintf_r+0x24a>
10014184:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10014186:	2a25      	cmp	r2, #37	@ 0x25
10014188:	4603      	mov	r3, r0
1001418a:	d001      	beq.n	10014190 <_vfprintf_r+0xd4>
1001418c:	441e      	add	r6, r3
1001418e:	e7e8      	b.n	10014162 <_vfprintf_r+0xa6>
10014190:	1b77      	subs	r7, r6, r5
10014192:	4604      	mov	r4, r0
10014194:	f040 80c2 	bne.w	1001431c <_vfprintf_r+0x260>
10014198:	2300      	movs	r3, #0
1001419a:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001419e:	4699      	mov	r9, r3
100141a0:	930b      	str	r3, [sp, #44]	@ 0x2c
100141a2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100141a6:	7873      	ldrb	r3, [r6, #1]
100141a8:	9209      	str	r2, [sp, #36]	@ 0x24
100141aa:	1c74      	adds	r4, r6, #1
100141ac:	3401      	adds	r4, #1
100141ae:	f1a3 0220 	sub.w	r2, r3, #32
100141b2:	2a5a      	cmp	r2, #90	@ 0x5a
100141b4:	f200 80f2 	bhi.w	1001439c <_vfprintf_r+0x2e0>
100141b8:	e8df f012 	tbh	[pc, r2, lsl #1]
100141bc:	00f002c7 	.word	0x00f002c7
100141c0:	02c300f0 	.word	0x02c300f0
100141c4:	00f000f0 	.word	0x00f000f0
100141c8:	006a00f0 	.word	0x006a00f0
100141cc:	00f000f0 	.word	0x00f000f0
100141d0:	02a0027d 	.word	0x02a0027d
100141d4:	028800f0 	.word	0x028800f0
100141d8:	00f002a9 	.word	0x00f002a9
100141dc:	005b02a5 	.word	0x005b02a5
100141e0:	005b005b 	.word	0x005b005b
100141e4:	005b005b 	.word	0x005b005b
100141e8:	005b005b 	.word	0x005b005b
100141ec:	005b005b 	.word	0x005b005b
100141f0:	00f000f0 	.word	0x00f000f0
100141f4:	00f000f0 	.word	0x00f000f0
100141f8:	00f000f0 	.word	0x00f000f0
100141fc:	017100f0 	.word	0x017100f0
10014200:	020800f0 	.word	0x020800f0
10014204:	01710322 	.word	0x01710322
10014208:	01710171 	.word	0x01710171
1001420c:	00f000f0 	.word	0x00f000f0
10014210:	00f000f0 	.word	0x00f000f0
10014214:	00f0031e 	.word	0x00f0031e
10014218:	02da00f0 	.word	0x02da00f0
1001421c:	00f000f0 	.word	0x00f000f0
10014220:	022600f0 	.word	0x022600f0
10014224:	030b00f0 	.word	0x030b00f0
10014228:	00f000f0 	.word	0x00f000f0
1001422c:	00f00717 	.word	0x00f00717
10014230:	00f000f0 	.word	0x00f000f0
10014234:	00f000f0 	.word	0x00f000f0
10014238:	00f000f0 	.word	0x00f000f0
1001423c:	017100f0 	.word	0x017100f0
10014240:	020800f0 	.word	0x020800f0
10014244:	01710258 	.word	0x01710258
10014248:	01710171 	.word	0x01710171
1001424c:	02580296 	.word	0x02580296
10014250:	00f00204 	.word	0x00f00204
10014254:	00f0028c 	.word	0x00f0028c
10014258:	073f034d 	.word	0x073f034d
1001425c:	0204033b 	.word	0x0204033b
10014260:	022600f0 	.word	0x022600f0
10014264:	073a007d 	.word	0x073a007d
10014268:	00f000f0 	.word	0x00f000f0
1001426c:	00f00743 	.word	0x00f00743
10014270:	007d      	.short	0x007d
10014272:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10014276:	2100      	movs	r1, #0
10014278:	f814 3b01 	ldrb.w	r3, [r4], #1
1001427c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10014280:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10014284:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10014288:	2a09      	cmp	r2, #9
1001428a:	d9f5      	bls.n	10014278 <_vfprintf_r+0x1bc>
1001428c:	910b      	str	r1, [sp, #44]	@ 0x2c
1001428e:	e78e      	b.n	100141ae <_vfprintf_r+0xf2>
10014290:	9f08      	ldr	r7, [sp, #32]
10014292:	4638      	mov	r0, r7
10014294:	f003 fe9a 	bl	10017fcc <_localeconv_r>
10014298:	6843      	ldr	r3, [r0, #4]
1001429a:	931d      	str	r3, [sp, #116]	@ 0x74
1001429c:	4618      	mov	r0, r3
1001429e:	f004 f9cf 	bl	10018640 <strlen>
100142a2:	901e      	str	r0, [sp, #120]	@ 0x78
100142a4:	4606      	mov	r6, r0
100142a6:	4638      	mov	r0, r7
100142a8:	f003 fe90 	bl	10017fcc <_localeconv_r>
100142ac:	6883      	ldr	r3, [r0, #8]
100142ae:	931b      	str	r3, [sp, #108]	@ 0x6c
100142b0:	2e00      	cmp	r6, #0
100142b2:	f040 8621 	bne.w	10014ef8 <_vfprintf_r+0xe3c>
100142b6:	7823      	ldrb	r3, [r4, #0]
100142b8:	e778      	b.n	100141ac <_vfprintf_r+0xf0>
100142ba:	9d07      	ldr	r5, [sp, #28]
100142bc:	4658      	mov	r0, fp
100142be:	4629      	mov	r1, r5
100142c0:	f003 fc88 	bl	10017bd4 <__swsetup_r>
100142c4:	2800      	cmp	r0, #0
100142c6:	f041 83a6 	bne.w	10015a16 <_vfprintf_r+0x195a>
100142ca:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
100142ce:	f003 021a 	and.w	r2, r3, #26
100142d2:	2a0a      	cmp	r2, #10
100142d4:	f47f af2f 	bne.w	10014136 <_vfprintf_r+0x7a>
100142d8:	9907      	ldr	r1, [sp, #28]
100142da:	f9b1 200e 	ldrsh.w	r2, [r1, #14]
100142de:	2a00      	cmp	r2, #0
100142e0:	f6ff af29 	blt.w	10014136 <_vfprintf_r+0x7a>
100142e4:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
100142e6:	07d5      	lsls	r5, r2, #31
100142e8:	d402      	bmi.n	100142f0 <_vfprintf_r+0x234>
100142ea:	0598      	lsls	r0, r3, #22
100142ec:	f141 81bf 	bpl.w	1001566e <_vfprintf_r+0x15b2>
100142f0:	9907      	ldr	r1, [sp, #28]
100142f2:	4623      	mov	r3, r4
100142f4:	464a      	mov	r2, r9
100142f6:	4658      	mov	r0, fp
100142f8:	f001 fd04 	bl	10015d04 <__sbprintf>
100142fc:	900a      	str	r0, [sp, #40]	@ 0x28
100142fe:	980a      	ldr	r0, [sp, #40]	@ 0x28
10014300:	b05f      	add	sp, #380	@ 0x17c
10014302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014306:	2208      	movs	r2, #8
10014308:	2100      	movs	r1, #0
1001430a:	a82e      	add	r0, sp, #184	@ 0xb8
1001430c:	f003 fdb0 	bl	10017e70 <memset>
10014310:	2301      	movs	r3, #1
10014312:	441e      	add	r6, r3
10014314:	e725      	b.n	10014162 <_vfprintf_r+0xa6>
10014316:	1b77      	subs	r7, r6, r5
10014318:	4604      	mov	r4, r0
1001431a:	d011      	beq.n	10014340 <_vfprintf_r+0x284>
1001431c:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
1001431e:	443b      	add	r3, r7
10014320:	9334      	str	r3, [sp, #208]	@ 0xd0
10014322:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014324:	3301      	adds	r3, #1
10014326:	2b07      	cmp	r3, #7
10014328:	e9c8 5700 	strd	r5, r7, [r8]
1001432c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001432e:	dc13      	bgt.n	10014358 <_vfprintf_r+0x29c>
10014330:	f108 0808 	add.w	r8, r8, #8
10014334:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10014336:	443b      	add	r3, r7
10014338:	930a      	str	r3, [sp, #40]	@ 0x28
1001433a:	2c00      	cmp	r4, #0
1001433c:	f47f af2c 	bne.w	10014198 <_vfprintf_r+0xdc>
10014340:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10014342:	f8dd b020 	ldr.w	fp, [sp, #32]
10014346:	2b00      	cmp	r3, #0
10014348:	f041 80d6 	bne.w	100154f8 <_vfprintf_r+0x143c>
1001434c:	9b07      	ldr	r3, [sp, #28]
1001434e:	2200      	movs	r2, #0
10014350:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10014354:	9233      	str	r2, [sp, #204]	@ 0xcc
10014356:	e012      	b.n	1001437e <_vfprintf_r+0x2c2>
10014358:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001435c:	aa32      	add	r2, sp, #200	@ 0xc8
1001435e:	f001 fd4d 	bl	10015dfc <__sprint_r>
10014362:	b948      	cbnz	r0, 10014378 <_vfprintf_r+0x2bc>
10014364:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014368:	e7e4      	b.n	10014334 <_vfprintf_r+0x278>
1001436a:	46bb      	mov	fp, r7
1001436c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001436e:	b11b      	cbz	r3, 10014378 <_vfprintf_r+0x2bc>
10014370:	990c      	ldr	r1, [sp, #48]	@ 0x30
10014372:	4658      	mov	r0, fp
10014374:	f005 fa64 	bl	10019840 <_free_r>
10014378:	9b07      	ldr	r3, [sp, #28]
1001437a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001437e:	9a07      	ldr	r2, [sp, #28]
10014380:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10014382:	07d4      	lsls	r4, r2, #31
10014384:	f140 8114 	bpl.w	100145b0 <_vfprintf_r+0x4f4>
10014388:	0659      	lsls	r1, r3, #25
1001438a:	f101 8350 	bmi.w	10015a2e <_vfprintf_r+0x1972>
1001438e:	980a      	ldr	r0, [sp, #40]	@ 0x28
10014390:	b05f      	add	sp, #380	@ 0x17c
10014392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014396:	bf00      	nop
10014398:	2000042c 	.word	0x2000042c
1001439c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100143a0:	2b00      	cmp	r3, #0
100143a2:	d0cd      	beq.n	10014340 <_vfprintf_r+0x284>
100143a4:	2200      	movs	r2, #0
100143a6:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
100143aa:	2301      	movs	r3, #1
100143ac:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100143b0:	9306      	str	r3, [sp, #24]
100143b2:	920c      	str	r2, [sp, #48]	@ 0x30
100143b4:	469b      	mov	fp, r3
100143b6:	9209      	str	r2, [sp, #36]	@ 0x24
100143b8:	9214      	str	r2, [sp, #80]	@ 0x50
100143ba:	9210      	str	r2, [sp, #64]	@ 0x40
100143bc:	9212      	str	r2, [sp, #72]	@ 0x48
100143be:	ad45      	add	r5, sp, #276	@ 0x114
100143c0:	f019 0302 	ands.w	r3, r9, #2
100143c4:	d002      	beq.n	100143cc <_vfprintf_r+0x310>
100143c6:	9906      	ldr	r1, [sp, #24]
100143c8:	3102      	adds	r1, #2
100143ca:	9106      	str	r1, [sp, #24]
100143cc:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
100143d0:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100143d2:	d105      	bne.n	100143e0 <_vfprintf_r+0x324>
100143d4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
100143d6:	9806      	ldr	r0, [sp, #24]
100143d8:	1a0e      	subs	r6, r1, r0
100143da:	2e00      	cmp	r6, #0
100143dc:	f300 80a7 	bgt.w	1001452e <_vfprintf_r+0x472>
100143e0:	b182      	cbz	r2, 10014404 <_vfprintf_r+0x348>
100143e2:	2201      	movs	r2, #1
100143e4:	f8c8 2004 	str.w	r2, [r8, #4]
100143e8:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100143ea:	3201      	adds	r2, #1
100143ec:	3401      	adds	r4, #1
100143ee:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
100143f2:	2a07      	cmp	r2, #7
100143f4:	9434      	str	r4, [sp, #208]	@ 0xd0
100143f6:	9233      	str	r2, [sp, #204]	@ 0xcc
100143f8:	f8c8 1000 	str.w	r1, [r8]
100143fc:	f300 83e1 	bgt.w	10014bc2 <_vfprintf_r+0xb06>
10014400:	f108 0808 	add.w	r8, r8, #8
10014404:	b183      	cbz	r3, 10014428 <_vfprintf_r+0x36c>
10014406:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014408:	aa28      	add	r2, sp, #160	@ 0xa0
1001440a:	3301      	adds	r3, #1
1001440c:	3402      	adds	r4, #2
1001440e:	f8c8 2000 	str.w	r2, [r8]
10014412:	2b07      	cmp	r3, #7
10014414:	f04f 0202 	mov.w	r2, #2
10014418:	9434      	str	r4, [sp, #208]	@ 0xd0
1001441a:	9333      	str	r3, [sp, #204]	@ 0xcc
1001441c:	f8c8 2004 	str.w	r2, [r8, #4]
10014420:	f300 83dd 	bgt.w	10014bde <_vfprintf_r+0xb22>
10014424:	f108 0808 	add.w	r8, r8, #8
10014428:	2f80      	cmp	r7, #128	@ 0x80
1001442a:	f000 82be 	beq.w	100149aa <_vfprintf_r+0x8ee>
1001442e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014430:	eba3 060b 	sub.w	r6, r3, fp
10014434:	2e00      	cmp	r6, #0
10014436:	f300 82fd 	bgt.w	10014a34 <_vfprintf_r+0x978>
1001443a:	f419 7f80 	tst.w	r9, #256	@ 0x100
1001443e:	f040 8219 	bne.w	10014874 <_vfprintf_r+0x7b8>
10014442:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014444:	f8c8 5000 	str.w	r5, [r8]
10014448:	3301      	adds	r3, #1
1001444a:	445c      	add	r4, fp
1001444c:	2b07      	cmp	r3, #7
1001444e:	f8c8 b004 	str.w	fp, [r8, #4]
10014452:	9434      	str	r4, [sp, #208]	@ 0xd0
10014454:	9333      	str	r3, [sp, #204]	@ 0xcc
10014456:	f300 834d 	bgt.w	10014af4 <_vfprintf_r+0xa38>
1001445a:	f108 0808 	add.w	r8, r8, #8
1001445e:	f019 0f04 	tst.w	r9, #4
10014462:	d005      	beq.n	10014470 <_vfprintf_r+0x3b4>
10014464:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10014466:	9a06      	ldr	r2, [sp, #24]
10014468:	1a9d      	subs	r5, r3, r2
1001446a:	2d00      	cmp	r5, #0
1001446c:	f300 83c3 	bgt.w	10014bf6 <_vfprintf_r+0xb3a>
10014470:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10014474:	9906      	ldr	r1, [sp, #24]
10014476:	428a      	cmp	r2, r1
10014478:	bfac      	ite	ge
1001447a:	189b      	addge	r3, r3, r2
1001447c:	185b      	addlt	r3, r3, r1
1001447e:	930a      	str	r3, [sp, #40]	@ 0x28
10014480:	2c00      	cmp	r4, #0
10014482:	f040 830f 	bne.w	10014aa4 <_vfprintf_r+0x9e8>
10014486:	2300      	movs	r3, #0
10014488:	9333      	str	r3, [sp, #204]	@ 0xcc
1001448a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001448c:	b11b      	cbz	r3, 10014496 <_vfprintf_r+0x3da>
1001448e:	990c      	ldr	r1, [sp, #48]	@ 0x30
10014490:	9808      	ldr	r0, [sp, #32]
10014492:	f005 f9d5 	bl	10019840 <_free_r>
10014496:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001449a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001449c:	e65f      	b.n	1001415e <_vfprintf_r+0xa2>
1001449e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100144a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100144a4:	3307      	adds	r3, #7
100144a6:	f023 0307 	bic.w	r3, r3, #7
100144aa:	e8f3 6702 	ldrd	r6, r7, [r3], #8
100144ae:	930d      	str	r3, [sp, #52]	@ 0x34
100144b0:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
100144b4:	9323      	str	r3, [sp, #140]	@ 0x8c
100144b6:	9622      	str	r6, [sp, #136]	@ 0x88
100144b8:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
100144bc:	4ba8      	ldr	r3, [pc, #672]	@ (10014760 <_vfprintf_r+0x6a4>)
100144be:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100144c2:	4650      	mov	r0, sl
100144c4:	4659      	mov	r1, fp
100144c6:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
100144ca:	f00c fbff 	bl	10020ccc <__aeabi_dcmpun>
100144ce:	2800      	cmp	r0, #0
100144d0:	f040 8530 	bne.w	10014f34 <_vfprintf_r+0xe78>
100144d4:	4ba2      	ldr	r3, [pc, #648]	@ (10014760 <_vfprintf_r+0x6a4>)
100144d6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100144da:	4650      	mov	r0, sl
100144dc:	4659      	mov	r1, fp
100144de:	f00c fbd7 	bl	10020c90 <__aeabi_dcmple>
100144e2:	2800      	cmp	r0, #0
100144e4:	f040 8526 	bne.w	10014f34 <_vfprintf_r+0xe78>
100144e8:	2200      	movs	r2, #0
100144ea:	2300      	movs	r3, #0
100144ec:	4630      	mov	r0, r6
100144ee:	4639      	mov	r1, r7
100144f0:	f00c fbc4 	bl	10020c7c <__aeabi_dcmplt>
100144f4:	2800      	cmp	r0, #0
100144f6:	f041 810f 	bne.w	10015718 <_vfprintf_r+0x165c>
100144fa:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100144fe:	4d99      	ldr	r5, [pc, #612]	@ (10014764 <_vfprintf_r+0x6a8>)
10014500:	4b99      	ldr	r3, [pc, #612]	@ (10014768 <_vfprintf_r+0x6ac>)
10014502:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10014506:	990e      	ldr	r1, [sp, #56]	@ 0x38
10014508:	2947      	cmp	r1, #71	@ 0x47
1001450a:	bfc8      	it	gt
1001450c:	461d      	movgt	r5, r3
1001450e:	2300      	movs	r3, #0
10014510:	2103      	movs	r1, #3
10014512:	930c      	str	r3, [sp, #48]	@ 0x30
10014514:	9106      	str	r1, [sp, #24]
10014516:	468b      	mov	fp, r1
10014518:	9309      	str	r3, [sp, #36]	@ 0x24
1001451a:	9314      	str	r3, [sp, #80]	@ 0x50
1001451c:	9310      	str	r3, [sp, #64]	@ 0x40
1001451e:	9312      	str	r3, [sp, #72]	@ 0x48
10014520:	2a00      	cmp	r2, #0
10014522:	f43f af4d 	beq.w	100143c0 <_vfprintf_r+0x304>
10014526:	9b06      	ldr	r3, [sp, #24]
10014528:	3301      	adds	r3, #1
1001452a:	9306      	str	r3, [sp, #24]
1001452c:	e748      	b.n	100143c0 <_vfprintf_r+0x304>
1001452e:	2e10      	cmp	r6, #16
10014530:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10014532:	f341 823d 	ble.w	100159b0 <_vfprintf_r+0x18f4>
10014536:	488d      	ldr	r0, [pc, #564]	@ (1001476c <_vfprintf_r+0x6b0>)
10014538:	9521      	str	r5, [sp, #132]	@ 0x84
1001453a:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
1001453e:	4621      	mov	r1, r4
10014540:	9d07      	ldr	r5, [sp, #28]
10014542:	9c08      	ldr	r4, [sp, #32]
10014544:	9015      	str	r0, [sp, #84]	@ 0x54
10014546:	f04f 0a10 	mov.w	sl, #16
1001454a:	4607      	mov	r7, r0
1001454c:	e004      	b.n	10014558 <_vfprintf_r+0x49c>
1001454e:	3e10      	subs	r6, #16
10014550:	2e10      	cmp	r6, #16
10014552:	f108 0808 	add.w	r8, r8, #8
10014556:	dd16      	ble.n	10014586 <_vfprintf_r+0x4ca>
10014558:	3201      	adds	r2, #1
1001455a:	3110      	adds	r1, #16
1001455c:	2a07      	cmp	r2, #7
1001455e:	e9c8 7a00 	strd	r7, sl, [r8]
10014562:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10014566:	ddf2      	ble.n	1001454e <_vfprintf_r+0x492>
10014568:	aa32      	add	r2, sp, #200	@ 0xc8
1001456a:	4629      	mov	r1, r5
1001456c:	4620      	mov	r0, r4
1001456e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014572:	f001 fc43 	bl	10015dfc <__sprint_r>
10014576:	2800      	cmp	r0, #0
10014578:	f040 8636 	bne.w	100151e8 <_vfprintf_r+0x112c>
1001457c:	3e10      	subs	r6, #16
1001457e:	2e10      	cmp	r6, #16
10014580:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10014584:	dce8      	bgt.n	10014558 <_vfprintf_r+0x49c>
10014586:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
1001458a:	9d21      	ldr	r5, [sp, #132]	@ 0x84
1001458c:	460c      	mov	r4, r1
1001458e:	3201      	adds	r2, #1
10014590:	9915      	ldr	r1, [sp, #84]	@ 0x54
10014592:	f8c8 1000 	str.w	r1, [r8]
10014596:	4434      	add	r4, r6
10014598:	2a07      	cmp	r2, #7
1001459a:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
1001459e:	f8c8 6004 	str.w	r6, [r8, #4]
100145a2:	f300 8610 	bgt.w	100151c6 <_vfprintf_r+0x110a>
100145a6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100145aa:	f108 0808 	add.w	r8, r8, #8
100145ae:	e717      	b.n	100143e0 <_vfprintf_r+0x324>
100145b0:	0598      	lsls	r0, r3, #22
100145b2:	f53f aee9 	bmi.w	10014388 <_vfprintf_r+0x2cc>
100145b6:	9c07      	ldr	r4, [sp, #28]
100145b8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100145ba:	f003 ff3f 	bl	1001843c <__retarget_lock_release_recursive>
100145be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100145c2:	e6e1      	b.n	10014388 <_vfprintf_r+0x2cc>
100145c4:	7823      	ldrb	r3, [r4, #0]
100145c6:	f049 0920 	orr.w	r9, r9, #32
100145ca:	e5ef      	b.n	100141ac <_vfprintf_r+0xf0>
100145cc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100145ce:	2b43      	cmp	r3, #67	@ 0x43
100145d0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100145d4:	f102 0404 	add.w	r4, r2, #4
100145d8:	f000 8562 	beq.w	100150a0 <_vfprintf_r+0xfe4>
100145dc:	f019 0f10 	tst.w	r9, #16
100145e0:	f040 855e 	bne.w	100150a0 <_vfprintf_r+0xfe4>
100145e4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100145e6:	681b      	ldr	r3, [r3, #0]
100145e8:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
100145ec:	2301      	movs	r3, #1
100145ee:	9306      	str	r3, [sp, #24]
100145f0:	469b      	mov	fp, r3
100145f2:	ad45      	add	r5, sp, #276	@ 0x114
100145f4:	2200      	movs	r2, #0
100145f6:	940d      	str	r4, [sp, #52]	@ 0x34
100145f8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100145fc:	920c      	str	r2, [sp, #48]	@ 0x30
100145fe:	9209      	str	r2, [sp, #36]	@ 0x24
10014600:	9214      	str	r2, [sp, #80]	@ 0x50
10014602:	9210      	str	r2, [sp, #64]	@ 0x40
10014604:	9212      	str	r2, [sp, #72]	@ 0x48
10014606:	e6db      	b.n	100143c0 <_vfprintf_r+0x304>
10014608:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1001460a:	f856 5b04 	ldr.w	r5, [r6], #4
1001460e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014612:	2300      	movs	r3, #0
10014614:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10014618:	2d00      	cmp	r5, #0
1001461a:	f000 8530 	beq.w	1001507e <_vfprintf_r+0xfc2>
1001461e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014620:	2b53      	cmp	r3, #83	@ 0x53
10014622:	f000 8601 	beq.w	10015228 <_vfprintf_r+0x116c>
10014626:	f019 0310 	ands.w	r3, r9, #16
1001462a:	9312      	str	r3, [sp, #72]	@ 0x48
1001462c:	f040 85fc 	bne.w	10015228 <_vfprintf_r+0x116c>
10014630:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014632:	1c5a      	adds	r2, r3, #1
10014634:	f000 876a 	beq.w	1001550c <_vfprintf_r+0x1450>
10014638:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001463a:	461a      	mov	r2, r3
1001463c:	4628      	mov	r0, r5
1001463e:	f003 feff 	bl	10018440 <memchr>
10014642:	900c      	str	r0, [sp, #48]	@ 0x30
10014644:	2800      	cmp	r0, #0
10014646:	f001 82c5 	beq.w	10015bd4 <_vfprintf_r+0x1b18>
1001464a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001464c:	960d      	str	r6, [sp, #52]	@ 0x34
1001464e:	eba3 0b05 	sub.w	fp, r3, r5
10014652:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10014654:	9309      	str	r3, [sp, #36]	@ 0x24
10014656:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
1001465a:	9314      	str	r3, [sp, #80]	@ 0x50
1001465c:	9310      	str	r3, [sp, #64]	@ 0x40
1001465e:	930c      	str	r3, [sp, #48]	@ 0x30
10014660:	2373      	movs	r3, #115	@ 0x73
10014662:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10014666:	9106      	str	r1, [sp, #24]
10014668:	930e      	str	r3, [sp, #56]	@ 0x38
1001466a:	e759      	b.n	10014520 <_vfprintf_r+0x464>
1001466c:	f019 0f20 	tst.w	r9, #32
10014670:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014674:	f000 80cc 	beq.w	10014810 <_vfprintf_r+0x754>
10014678:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001467a:	3307      	adds	r3, #7
1001467c:	f023 0307 	bic.w	r3, r3, #7
10014680:	461a      	mov	r2, r3
10014682:	6859      	ldr	r1, [r3, #4]
10014684:	f852 3b08 	ldr.w	r3, [r2], #8
10014688:	920d      	str	r2, [sp, #52]	@ 0x34
1001468a:	460a      	mov	r2, r1
1001468c:	2900      	cmp	r1, #0
1001468e:	f2c0 8425 	blt.w	10014edc <_vfprintf_r+0xe20>
10014692:	9909      	ldr	r1, [sp, #36]	@ 0x24
10014694:	3101      	adds	r1, #1
10014696:	f000 8285 	beq.w	10014ba4 <_vfprintf_r+0xae8>
1001469a:	ea53 0102 	orrs.w	r1, r3, r2
1001469e:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
100146a2:	f040 8280 	bne.w	10014ba6 <_vfprintf_r+0xaea>
100146a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100146a8:	2a00      	cmp	r2, #0
100146aa:	f040 8281 	bne.w	10014bb0 <_vfprintf_r+0xaf4>
100146ae:	46a1      	mov	r9, r4
100146b0:	4693      	mov	fp, r2
100146b2:	ad5e      	add	r5, sp, #376	@ 0x178
100146b4:	e150      	b.n	10014958 <_vfprintf_r+0x89c>
100146b6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100146b8:	f853 2b04 	ldr.w	r2, [r3], #4
100146bc:	920b      	str	r2, [sp, #44]	@ 0x2c
100146be:	2a00      	cmp	r2, #0
100146c0:	f280 83ce 	bge.w	10014e60 <_vfprintf_r+0xda4>
100146c4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100146c6:	930d      	str	r3, [sp, #52]	@ 0x34
100146c8:	4252      	negs	r2, r2
100146ca:	920b      	str	r2, [sp, #44]	@ 0x2c
100146cc:	7823      	ldrb	r3, [r4, #0]
100146ce:	f049 0904 	orr.w	r9, r9, #4
100146d2:	e56b      	b.n	100141ac <_vfprintf_r+0xf0>
100146d4:	7823      	ldrb	r3, [r4, #0]
100146d6:	2b6c      	cmp	r3, #108	@ 0x6c
100146d8:	bf03      	ittte	eq
100146da:	7863      	ldrbeq	r3, [r4, #1]
100146dc:	f049 0920 	orreq.w	r9, r9, #32
100146e0:	3401      	addeq	r4, #1
100146e2:	f049 0910 	orrne.w	r9, r9, #16
100146e6:	e561      	b.n	100141ac <_vfprintf_r+0xf0>
100146e8:	7823      	ldrb	r3, [r4, #0]
100146ea:	2b68      	cmp	r3, #104	@ 0x68
100146ec:	bf03      	ittte	eq
100146ee:	7863      	ldrbeq	r3, [r4, #1]
100146f0:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
100146f4:	3401      	addeq	r4, #1
100146f6:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
100146fa:	e557      	b.n	100141ac <_vfprintf_r+0xf0>
100146fc:	232b      	movs	r3, #43	@ 0x2b
100146fe:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10014702:	7823      	ldrb	r3, [r4, #0]
10014704:	e552      	b.n	100141ac <_vfprintf_r+0xf0>
10014706:	7823      	ldrb	r3, [r4, #0]
10014708:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
1001470c:	e54e      	b.n	100141ac <_vfprintf_r+0xf0>
1001470e:	4621      	mov	r1, r4
10014710:	f811 3b01 	ldrb.w	r3, [r1], #1
10014714:	2b2a      	cmp	r3, #42	@ 0x2a
10014716:	f001 82db 	beq.w	10015cd0 <_vfprintf_r+0x1c14>
1001471a:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001471e:	2a09      	cmp	r2, #9
10014720:	460c      	mov	r4, r1
10014722:	bf98      	it	ls
10014724:	2100      	movls	r1, #0
10014726:	f201 8172 	bhi.w	10015a0e <_vfprintf_r+0x1952>
1001472a:	f814 3b01 	ldrb.w	r3, [r4], #1
1001472e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10014732:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10014736:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001473a:	2a09      	cmp	r2, #9
1001473c:	d9f5      	bls.n	1001472a <_vfprintf_r+0x66e>
1001473e:	9109      	str	r1, [sp, #36]	@ 0x24
10014740:	e535      	b.n	100141ae <_vfprintf_r+0xf2>
10014742:	7823      	ldrb	r3, [r4, #0]
10014744:	f049 0901 	orr.w	r9, r9, #1
10014748:	e530      	b.n	100141ac <_vfprintf_r+0xf0>
1001474a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001474e:	7823      	ldrb	r3, [r4, #0]
10014750:	2a00      	cmp	r2, #0
10014752:	f47f ad2b 	bne.w	100141ac <_vfprintf_r+0xf0>
10014756:	2220      	movs	r2, #32
10014758:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001475c:	e526      	b.n	100141ac <_vfprintf_r+0xf0>
1001475e:	bf00      	nop
10014760:	7fefffff 	.word	0x7fefffff
10014764:	10023864 	.word	0x10023864
10014768:	10023868 	.word	0x10023868
1001476c:	100238a4 	.word	0x100238a4
10014770:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014774:	f049 0910 	orr.w	r9, r9, #16
10014778:	f019 0220 	ands.w	r2, r9, #32
1001477c:	f000 8354 	beq.w	10014e28 <_vfprintf_r+0xd6c>
10014780:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014782:	3307      	adds	r3, #7
10014784:	f023 0307 	bic.w	r3, r3, #7
10014788:	4619      	mov	r1, r3
1001478a:	685a      	ldr	r2, [r3, #4]
1001478c:	f851 3b08 	ldr.w	r3, [r1], #8
10014790:	910d      	str	r1, [sp, #52]	@ 0x34
10014792:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10014796:	2100      	movs	r1, #0
10014798:	2000      	movs	r0, #0
1001479a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1001479c:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
100147a0:	1c6f      	adds	r7, r5, #1
100147a2:	f000 80c2 	beq.w	1001492a <_vfprintf_r+0x86e>
100147a6:	ea53 0002 	orrs.w	r0, r3, r2
100147aa:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
100147ae:	f040 80bb 	bne.w	10014928 <_vfprintf_r+0x86c>
100147b2:	2d00      	cmp	r5, #0
100147b4:	f040 8523 	bne.w	100151fe <_vfprintf_r+0x1142>
100147b8:	2900      	cmp	r1, #0
100147ba:	f040 8496 	bne.w	100150ea <_vfprintf_r+0x102e>
100147be:	f014 0b01 	ands.w	fp, r4, #1
100147c2:	f000 8351 	beq.w	10014e68 <_vfprintf_r+0xdac>
100147c6:	2330      	movs	r3, #48	@ 0x30
100147c8:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
100147cc:	f20d 1577 	addw	r5, sp, #375	@ 0x177
100147d0:	e0c2      	b.n	10014958 <_vfprintf_r+0x89c>
100147d2:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100147d6:	f049 0410 	orr.w	r4, r9, #16
100147da:	f014 0220 	ands.w	r2, r4, #32
100147de:	f000 8315 	beq.w	10014e0c <_vfprintf_r+0xd50>
100147e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100147e4:	3307      	adds	r3, #7
100147e6:	f023 0307 	bic.w	r3, r3, #7
100147ea:	4619      	mov	r1, r3
100147ec:	685a      	ldr	r2, [r3, #4]
100147ee:	f851 3b08 	ldr.w	r3, [r1], #8
100147f2:	910d      	str	r1, [sp, #52]	@ 0x34
100147f4:	2101      	movs	r1, #1
100147f6:	e7cf      	b.n	10014798 <_vfprintf_r+0x6dc>
100147f8:	7823      	ldrb	r3, [r4, #0]
100147fa:	f049 0908 	orr.w	r9, r9, #8
100147fe:	e4d5      	b.n	100141ac <_vfprintf_r+0xf0>
10014800:	f049 0910 	orr.w	r9, r9, #16
10014804:	f019 0f20 	tst.w	r9, #32
10014808:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001480c:	f47f af34 	bne.w	10014678 <_vfprintf_r+0x5bc>
10014810:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10014812:	f019 0f10 	tst.w	r9, #16
10014816:	f852 3b04 	ldr.w	r3, [r2], #4
1001481a:	920d      	str	r2, [sp, #52]	@ 0x34
1001481c:	f040 8359 	bne.w	10014ed2 <_vfprintf_r+0xe16>
10014820:	f019 0f40 	tst.w	r9, #64	@ 0x40
10014824:	f000 8351 	beq.w	10014eca <_vfprintf_r+0xe0e>
10014828:	f343 32c0 	sbfx	r2, r3, #15, #1
1001482c:	4611      	mov	r1, r2
1001482e:	b21b      	sxth	r3, r3
10014830:	e72c      	b.n	1001468c <_vfprintf_r+0x5d0>
10014832:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10014834:	940f      	str	r4, [sp, #60]	@ 0x3c
10014836:	f852 3b04 	ldr.w	r3, [r2], #4
1001483a:	920d      	str	r2, [sp, #52]	@ 0x34
1001483c:	f647 0230 	movw	r2, #30768	@ 0x7830
10014840:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10014844:	2078      	movs	r0, #120	@ 0x78
10014846:	4ab1      	ldr	r2, [pc, #708]	@ (10014b0c <_vfprintf_r+0xa50>)
10014848:	921a      	str	r2, [sp, #104]	@ 0x68
1001484a:	f049 0402 	orr.w	r4, r9, #2
1001484e:	2200      	movs	r2, #0
10014850:	2102      	movs	r1, #2
10014852:	900e      	str	r0, [sp, #56]	@ 0x38
10014854:	e7a0      	b.n	10014798 <_vfprintf_r+0x6dc>
10014856:	f019 0f20 	tst.w	r9, #32
1001485a:	940f      	str	r4, [sp, #60]	@ 0x3c
1001485c:	f000 8359 	beq.w	10014f12 <_vfprintf_r+0xe56>
10014860:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014862:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014864:	681b      	ldr	r3, [r3, #0]
10014866:	601a      	str	r2, [r3, #0]
10014868:	17d2      	asrs	r2, r2, #31
1001486a:	605a      	str	r2, [r3, #4]
1001486c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001486e:	3304      	adds	r3, #4
10014870:	930d      	str	r3, [sp, #52]	@ 0x34
10014872:	e612      	b.n	1001449a <_vfprintf_r+0x3de>
10014874:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014876:	2b65      	cmp	r3, #101	@ 0x65
10014878:	f340 814e 	ble.w	10014b18 <_vfprintf_r+0xa5c>
1001487c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10014880:	2200      	movs	r2, #0
10014882:	2300      	movs	r3, #0
10014884:	f00c f9f0 	bl	10020c68 <__aeabi_dcmpeq>
10014888:	2800      	cmp	r0, #0
1001488a:	f000 81ee 	beq.w	10014c6a <_vfprintf_r+0xbae>
1001488e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014890:	4a9f      	ldr	r2, [pc, #636]	@ (10014b10 <_vfprintf_r+0xa54>)
10014892:	f8c8 2000 	str.w	r2, [r8]
10014896:	3301      	adds	r3, #1
10014898:	3401      	adds	r4, #1
1001489a:	2201      	movs	r2, #1
1001489c:	2b07      	cmp	r3, #7
1001489e:	9434      	str	r4, [sp, #208]	@ 0xd0
100148a0:	9333      	str	r3, [sp, #204]	@ 0xcc
100148a2:	f8c8 2004 	str.w	r2, [r8, #4]
100148a6:	f300 84af 	bgt.w	10015208 <_vfprintf_r+0x114c>
100148aa:	f108 0808 	add.w	r8, r8, #8
100148ae:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
100148b0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100148b2:	4293      	cmp	r3, r2
100148b4:	f280 82cf 	bge.w	10014e56 <_vfprintf_r+0xd9a>
100148b8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100148ba:	9a19      	ldr	r2, [sp, #100]	@ 0x64
100148bc:	441c      	add	r4, r3
100148be:	e9c8 2300 	strd	r2, r3, [r8]
100148c2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100148c4:	9434      	str	r4, [sp, #208]	@ 0xd0
100148c6:	3301      	adds	r3, #1
100148c8:	2b07      	cmp	r3, #7
100148ca:	9333      	str	r3, [sp, #204]	@ 0xcc
100148cc:	f300 83cb 	bgt.w	10015066 <_vfprintf_r+0xfaa>
100148d0:	f108 0808 	add.w	r8, r8, #8
100148d4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100148d6:	1e5d      	subs	r5, r3, #1
100148d8:	2d00      	cmp	r5, #0
100148da:	f77f adc0 	ble.w	1001445e <_vfprintf_r+0x3a2>
100148de:	2d10      	cmp	r5, #16
100148e0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100148e2:	f340 84fa 	ble.w	100152da <_vfprintf_r+0x121e>
100148e6:	4f8b      	ldr	r7, [pc, #556]	@ (10014b14 <_vfprintf_r+0xa58>)
100148e8:	9715      	str	r7, [sp, #84]	@ 0x54
100148ea:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
100148ee:	2610      	movs	r6, #16
100148f0:	e005      	b.n	100148fe <_vfprintf_r+0x842>
100148f2:	f108 0808 	add.w	r8, r8, #8
100148f6:	3d10      	subs	r5, #16
100148f8:	2d10      	cmp	r5, #16
100148fa:	f340 84f0 	ble.w	100152de <_vfprintf_r+0x1222>
100148fe:	3301      	adds	r3, #1
10014900:	3410      	adds	r4, #16
10014902:	2b07      	cmp	r3, #7
10014904:	e9c8 7600 	strd	r7, r6, [r8]
10014908:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001490c:	ddf1      	ble.n	100148f2 <_vfprintf_r+0x836>
1001490e:	aa32      	add	r2, sp, #200	@ 0xc8
10014910:	4651      	mov	r1, sl
10014912:	4658      	mov	r0, fp
10014914:	f001 fa72 	bl	10015dfc <__sprint_r>
10014918:	2800      	cmp	r0, #0
1001491a:	f47f ad27 	bne.w	1001436c <_vfprintf_r+0x2b0>
1001491e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10014922:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014926:	e7e6      	b.n	100148f6 <_vfprintf_r+0x83a>
10014928:	464c      	mov	r4, r9
1001492a:	2901      	cmp	r1, #1
1001492c:	f000 813b 	beq.w	10014ba6 <_vfprintf_r+0xaea>
10014930:	2902      	cmp	r1, #2
10014932:	ad5e      	add	r5, sp, #376	@ 0x178
10014934:	d11e      	bne.n	10014974 <_vfprintf_r+0x8b8>
10014936:	981a      	ldr	r0, [sp, #104]	@ 0x68
10014938:	f003 010f 	and.w	r1, r3, #15
1001493c:	091b      	lsrs	r3, r3, #4
1001493e:	5c41      	ldrb	r1, [r0, r1]
10014940:	f805 1d01 	strb.w	r1, [r5, #-1]!
10014944:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10014948:	0912      	lsrs	r2, r2, #4
1001494a:	ea53 0102 	orrs.w	r1, r3, r2
1001494e:	d1f3      	bne.n	10014938 <_vfprintf_r+0x87c>
10014950:	ab5e      	add	r3, sp, #376	@ 0x178
10014952:	46a1      	mov	r9, r4
10014954:	eba3 0b05 	sub.w	fp, r3, r5
10014958:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001495a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001495e:	4559      	cmp	r1, fp
10014960:	f04f 0300 	mov.w	r3, #0
10014964:	bfb8      	it	lt
10014966:	4659      	movlt	r1, fp
10014968:	930c      	str	r3, [sp, #48]	@ 0x30
1001496a:	9106      	str	r1, [sp, #24]
1001496c:	9314      	str	r3, [sp, #80]	@ 0x50
1001496e:	9310      	str	r3, [sp, #64]	@ 0x40
10014970:	9312      	str	r3, [sp, #72]	@ 0x48
10014972:	e5d5      	b.n	10014520 <_vfprintf_r+0x464>
10014974:	f003 0107 	and.w	r1, r3, #7
10014978:	08db      	lsrs	r3, r3, #3
1001497a:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
1001497e:	08d2      	lsrs	r2, r2, #3
10014980:	3130      	adds	r1, #48	@ 0x30
10014982:	ea53 0602 	orrs.w	r6, r3, r2
10014986:	4628      	mov	r0, r5
10014988:	f805 1d01 	strb.w	r1, [r5, #-1]!
1001498c:	d1f2      	bne.n	10014974 <_vfprintf_r+0x8b8>
1001498e:	07e6      	lsls	r6, r4, #31
10014990:	d5de      	bpl.n	10014950 <_vfprintf_r+0x894>
10014992:	2930      	cmp	r1, #48	@ 0x30
10014994:	d0dc      	beq.n	10014950 <_vfprintf_r+0x894>
10014996:	2330      	movs	r3, #48	@ 0x30
10014998:	3802      	subs	r0, #2
1001499a:	f805 3c01 	strb.w	r3, [r5, #-1]
1001499e:	ab5e      	add	r3, sp, #376	@ 0x178
100149a0:	46a1      	mov	r9, r4
100149a2:	eba3 0b00 	sub.w	fp, r3, r0
100149a6:	4605      	mov	r5, r0
100149a8:	e7d6      	b.n	10014958 <_vfprintf_r+0x89c>
100149aa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100149ac:	9a06      	ldr	r2, [sp, #24]
100149ae:	1a9e      	subs	r6, r3, r2
100149b0:	2e00      	cmp	r6, #0
100149b2:	f77f ad3c 	ble.w	1001442e <_vfprintf_r+0x372>
100149b6:	2e10      	cmp	r6, #16
100149b8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100149ba:	f341 80ad 	ble.w	10015b18 <_vfprintf_r+0x1a5c>
100149be:	4855      	ldr	r0, [pc, #340]	@ (10014b14 <_vfprintf_r+0xa58>)
100149c0:	f8dd a020 	ldr.w	sl, [sp, #32]
100149c4:	9015      	str	r0, [sp, #84]	@ 0x54
100149c6:	4621      	mov	r1, r4
100149c8:	2710      	movs	r7, #16
100149ca:	461a      	mov	r2, r3
100149cc:	4604      	mov	r4, r0
100149ce:	e004      	b.n	100149da <_vfprintf_r+0x91e>
100149d0:	3e10      	subs	r6, #16
100149d2:	2e10      	cmp	r6, #16
100149d4:	f108 0808 	add.w	r8, r8, #8
100149d8:	dd16      	ble.n	10014a08 <_vfprintf_r+0x94c>
100149da:	3201      	adds	r2, #1
100149dc:	3110      	adds	r1, #16
100149de:	2a07      	cmp	r2, #7
100149e0:	e9c8 4700 	strd	r4, r7, [r8]
100149e4:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
100149e8:	ddf2      	ble.n	100149d0 <_vfprintf_r+0x914>
100149ea:	9907      	ldr	r1, [sp, #28]
100149ec:	aa32      	add	r2, sp, #200	@ 0xc8
100149ee:	4650      	mov	r0, sl
100149f0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100149f4:	f001 fa02 	bl	10015dfc <__sprint_r>
100149f8:	2800      	cmp	r0, #0
100149fa:	f040 83f8 	bne.w	100151ee <_vfprintf_r+0x1132>
100149fe:	3e10      	subs	r6, #16
10014a00:	2e10      	cmp	r6, #16
10014a02:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10014a06:	dce8      	bgt.n	100149da <_vfprintf_r+0x91e>
10014a08:	460c      	mov	r4, r1
10014a0a:	4613      	mov	r3, r2
10014a0c:	3301      	adds	r3, #1
10014a0e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10014a10:	f8c8 2000 	str.w	r2, [r8]
10014a14:	4434      	add	r4, r6
10014a16:	2b07      	cmp	r3, #7
10014a18:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014a1c:	f8c8 6004 	str.w	r6, [r8, #4]
10014a20:	f300 8314 	bgt.w	1001504c <_vfprintf_r+0xf90>
10014a24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014a26:	eba3 060b 	sub.w	r6, r3, fp
10014a2a:	2e00      	cmp	r6, #0
10014a2c:	f108 0808 	add.w	r8, r8, #8
10014a30:	f77f ad03 	ble.w	1001443a <_vfprintf_r+0x37e>
10014a34:	4a37      	ldr	r2, [pc, #220]	@ (10014b14 <_vfprintf_r+0xa58>)
10014a36:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014a38:	9215      	str	r2, [sp, #84]	@ 0x54
10014a3a:	2e10      	cmp	r6, #16
10014a3c:	dd23      	ble.n	10014a86 <_vfprintf_r+0x9ca>
10014a3e:	4622      	mov	r2, r4
10014a40:	f04f 0a10 	mov.w	sl, #16
10014a44:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
10014a48:	e004      	b.n	10014a54 <_vfprintf_r+0x998>
10014a4a:	3e10      	subs	r6, #16
10014a4c:	2e10      	cmp	r6, #16
10014a4e:	f108 0808 	add.w	r8, r8, #8
10014a52:	dd17      	ble.n	10014a84 <_vfprintf_r+0x9c8>
10014a54:	3301      	adds	r3, #1
10014a56:	492f      	ldr	r1, [pc, #188]	@ (10014b14 <_vfprintf_r+0xa58>)
10014a58:	3210      	adds	r2, #16
10014a5a:	2b07      	cmp	r3, #7
10014a5c:	e9c8 1a00 	strd	r1, sl, [r8]
10014a60:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
10014a64:	ddf1      	ble.n	10014a4a <_vfprintf_r+0x98e>
10014a66:	aa32      	add	r2, sp, #200	@ 0xc8
10014a68:	4621      	mov	r1, r4
10014a6a:	4638      	mov	r0, r7
10014a6c:	f001 f9c6 	bl	10015dfc <__sprint_r>
10014a70:	2800      	cmp	r0, #0
10014a72:	f47f ac7a 	bne.w	1001436a <_vfprintf_r+0x2ae>
10014a76:	3e10      	subs	r6, #16
10014a78:	2e10      	cmp	r6, #16
10014a7a:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
10014a7e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014a82:	dce7      	bgt.n	10014a54 <_vfprintf_r+0x998>
10014a84:	4614      	mov	r4, r2
10014a86:	3301      	adds	r3, #1
10014a88:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10014a8a:	f8c8 2000 	str.w	r2, [r8]
10014a8e:	4434      	add	r4, r6
10014a90:	2b07      	cmp	r3, #7
10014a92:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014a96:	f8c8 6004 	str.w	r6, [r8, #4]
10014a9a:	f300 81aa 	bgt.w	10014df2 <_vfprintf_r+0xd36>
10014a9e:	f108 0808 	add.w	r8, r8, #8
10014aa2:	e4ca      	b.n	1001443a <_vfprintf_r+0x37e>
10014aa4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014aa8:	aa32      	add	r2, sp, #200	@ 0xc8
10014aaa:	f001 f9a7 	bl	10015dfc <__sprint_r>
10014aae:	2800      	cmp	r0, #0
10014ab0:	f43f ace9 	beq.w	10014486 <_vfprintf_r+0x3ca>
10014ab4:	f8dd b020 	ldr.w	fp, [sp, #32]
10014ab8:	e458      	b.n	1001436c <_vfprintf_r+0x2b0>
10014aba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014abc:	9919      	ldr	r1, [sp, #100]	@ 0x64
10014abe:	441c      	add	r4, r3
10014ac0:	e9c8 1300 	strd	r1, r3, [r8]
10014ac4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014ac6:	9434      	str	r4, [sp, #208]	@ 0xd0
10014ac8:	3301      	adds	r3, #1
10014aca:	2b07      	cmp	r3, #7
10014acc:	9333      	str	r3, [sp, #204]	@ 0xcc
10014ace:	f300 85bf 	bgt.w	10015650 <_vfprintf_r+0x1594>
10014ad2:	f108 0808 	add.w	r8, r8, #8
10014ad6:	2a00      	cmp	r2, #0
10014ad8:	f2c0 87ae 	blt.w	10015a38 <_vfprintf_r+0x197c>
10014adc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10014ade:	f8c8 5000 	str.w	r5, [r8]
10014ae2:	3301      	adds	r3, #1
10014ae4:	4414      	add	r4, r2
10014ae6:	2b07      	cmp	r3, #7
10014ae8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014aec:	f8c8 2004 	str.w	r2, [r8, #4]
10014af0:	f77f acb3 	ble.w	1001445a <_vfprintf_r+0x39e>
10014af4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014af8:	aa32      	add	r2, sp, #200	@ 0xc8
10014afa:	f001 f97f 	bl	10015dfc <__sprint_r>
10014afe:	2800      	cmp	r0, #0
10014b00:	d1d8      	bne.n	10014ab4 <_vfprintf_r+0x9f8>
10014b02:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014b04:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014b08:	e4a9      	b.n	1001445e <_vfprintf_r+0x3a2>
10014b0a:	bf00      	nop
10014b0c:	100213b0 	.word	0x100213b0
10014b10:	10023890 	.word	0x10023890
10014b14:	10023894 	.word	0x10023894
10014b18:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014b1a:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10014b1c:	2b01      	cmp	r3, #1
10014b1e:	f104 0401 	add.w	r4, r4, #1
10014b22:	f106 0601 	add.w	r6, r6, #1
10014b26:	f108 0708 	add.w	r7, r8, #8
10014b2a:	f340 811d 	ble.w	10014d68 <_vfprintf_r+0xcac>
10014b2e:	2301      	movs	r3, #1
10014b30:	2e07      	cmp	r6, #7
10014b32:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014b36:	f8c8 5000 	str.w	r5, [r8]
10014b3a:	f8c8 3004 	str.w	r3, [r8, #4]
10014b3e:	f300 82e4 	bgt.w	1001510a <_vfprintf_r+0x104e>
10014b42:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014b44:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10014b46:	3601      	adds	r6, #1
10014b48:	441c      	add	r4, r3
10014b4a:	2e07      	cmp	r6, #7
10014b4c:	e9c7 2300 	strd	r2, r3, [r7]
10014b50:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014b54:	f300 82cd 	bgt.w	100150f2 <_vfprintf_r+0x1036>
10014b58:	3708      	adds	r7, #8
10014b5a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014b5c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10014b60:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
10014b64:	2200      	movs	r2, #0
10014b66:	2300      	movs	r3, #0
10014b68:	f00c f87e 	bl	10020c68 <__aeabi_dcmpeq>
10014b6c:	2800      	cmp	r0, #0
10014b6e:	f040 8115 	bne.w	10014d9c <_vfprintf_r+0xce0>
10014b72:	3601      	adds	r6, #1
10014b74:	3501      	adds	r5, #1
10014b76:	4444      	add	r4, r8
10014b78:	2e07      	cmp	r6, #7
10014b7a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014b7e:	603d      	str	r5, [r7, #0]
10014b80:	f8c7 8004 	str.w	r8, [r7, #4]
10014b84:	f300 80fe 	bgt.w	10014d84 <_vfprintf_r+0xcc8>
10014b88:	3708      	adds	r7, #8
10014b8a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10014b8c:	607b      	str	r3, [r7, #4]
10014b8e:	3601      	adds	r6, #1
10014b90:	441c      	add	r4, r3
10014b92:	2e07      	cmp	r6, #7
10014b94:	ab2c      	add	r3, sp, #176	@ 0xb0
10014b96:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014b9a:	603b      	str	r3, [r7, #0]
10014b9c:	dcaa      	bgt.n	10014af4 <_vfprintf_r+0xa38>
10014b9e:	f107 0808 	add.w	r8, r7, #8
10014ba2:	e45c      	b.n	1001445e <_vfprintf_r+0x3a2>
10014ba4:	464c      	mov	r4, r9
10014ba6:	2b0a      	cmp	r3, #10
10014ba8:	f172 0100 	sbcs.w	r1, r2, #0
10014bac:	f080 82b9 	bcs.w	10015122 <_vfprintf_r+0x1066>
10014bb0:	3330      	adds	r3, #48	@ 0x30
10014bb2:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10014bb6:	46a1      	mov	r9, r4
10014bb8:	f04f 0b01 	mov.w	fp, #1
10014bbc:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10014bc0:	e6ca      	b.n	10014958 <_vfprintf_r+0x89c>
10014bc2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014bc6:	aa32      	add	r2, sp, #200	@ 0xc8
10014bc8:	9315      	str	r3, [sp, #84]	@ 0x54
10014bca:	f001 f917 	bl	10015dfc <__sprint_r>
10014bce:	2800      	cmp	r0, #0
10014bd0:	f47f af70 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10014bd4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014bd6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10014bd8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014bdc:	e412      	b.n	10014404 <_vfprintf_r+0x348>
10014bde:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014be2:	aa32      	add	r2, sp, #200	@ 0xc8
10014be4:	f001 f90a 	bl	10015dfc <__sprint_r>
10014be8:	2800      	cmp	r0, #0
10014bea:	f47f af63 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10014bee:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014bf0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014bf4:	e418      	b.n	10014428 <_vfprintf_r+0x36c>
10014bf6:	2d10      	cmp	r5, #16
10014bf8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014bfa:	f340 8752 	ble.w	10015aa2 <_vfprintf_r+0x19e6>
10014bfe:	4fbb      	ldr	r7, [pc, #748]	@ (10014eec <_vfprintf_r+0xe30>)
10014c00:	9715      	str	r7, [sp, #84]	@ 0x54
10014c02:	e9dd a907 	ldrd	sl, r9, [sp, #28]
10014c06:	2610      	movs	r6, #16
10014c08:	e004      	b.n	10014c14 <_vfprintf_r+0xb58>
10014c0a:	3d10      	subs	r5, #16
10014c0c:	2d10      	cmp	r5, #16
10014c0e:	f108 0808 	add.w	r8, r8, #8
10014c12:	dd16      	ble.n	10014c42 <_vfprintf_r+0xb86>
10014c14:	3301      	adds	r3, #1
10014c16:	3410      	adds	r4, #16
10014c18:	2b07      	cmp	r3, #7
10014c1a:	e9c8 7600 	strd	r7, r6, [r8]
10014c1e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014c22:	ddf2      	ble.n	10014c0a <_vfprintf_r+0xb4e>
10014c24:	aa32      	add	r2, sp, #200	@ 0xc8
10014c26:	4651      	mov	r1, sl
10014c28:	4648      	mov	r0, r9
10014c2a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014c2e:	f001 f8e5 	bl	10015dfc <__sprint_r>
10014c32:	2800      	cmp	r0, #0
10014c34:	f040 82f5 	bne.w	10015222 <_vfprintf_r+0x1166>
10014c38:	3d10      	subs	r5, #16
10014c3a:	2d10      	cmp	r5, #16
10014c3c:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10014c40:	dce8      	bgt.n	10014c14 <_vfprintf_r+0xb58>
10014c42:	3301      	adds	r3, #1
10014c44:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10014c46:	442c      	add	r4, r5
10014c48:	2b07      	cmp	r3, #7
10014c4a:	e9c8 2500 	strd	r2, r5, [r8]
10014c4e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014c52:	f77f ac0d 	ble.w	10014470 <_vfprintf_r+0x3b4>
10014c56:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014c5a:	aa32      	add	r2, sp, #200	@ 0xc8
10014c5c:	f001 f8ce 	bl	10015dfc <__sprint_r>
10014c60:	2800      	cmp	r0, #0
10014c62:	f47f af27 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10014c66:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014c68:	e402      	b.n	10014470 <_vfprintf_r+0x3b4>
10014c6a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10014c6c:	2a00      	cmp	r2, #0
10014c6e:	f340 80fd 	ble.w	10014e6c <_vfprintf_r+0xdb0>
10014c72:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10014c76:	429f      	cmp	r7, r3
10014c78:	bfa8      	it	ge
10014c7a:	461f      	movge	r7, r3
10014c7c:	2f00      	cmp	r7, #0
10014c7e:	eb05 0b03 	add.w	fp, r5, r3
10014c82:	dd0b      	ble.n	10014c9c <_vfprintf_r+0xbe0>
10014c84:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014c86:	3301      	adds	r3, #1
10014c88:	443c      	add	r4, r7
10014c8a:	2b07      	cmp	r3, #7
10014c8c:	e9c8 5700 	strd	r5, r7, [r8]
10014c90:	9434      	str	r4, [sp, #208]	@ 0xd0
10014c92:	9333      	str	r3, [sp, #204]	@ 0xcc
10014c94:	f300 866f 	bgt.w	10015976 <_vfprintf_r+0x18ba>
10014c98:	f108 0808 	add.w	r8, r8, #8
10014c9c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
10014c9e:	2f00      	cmp	r7, #0
10014ca0:	bfa8      	it	ge
10014ca2:	1bf6      	subge	r6, r6, r7
10014ca4:	2e00      	cmp	r6, #0
10014ca6:	f300 8347 	bgt.w	10015338 <_vfprintf_r+0x127c>
10014caa:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
10014cae:	f419 6f80 	tst.w	r9, #1024	@ 0x400
10014cb2:	44aa      	add	sl, r5
10014cb4:	f040 857a 	bne.w	100157ac <_vfprintf_r+0x16f0>
10014cb8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10014cba:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014cbc:	429d      	cmp	r5, r3
10014cbe:	db03      	blt.n	10014cc8 <_vfprintf_r+0xc0c>
10014cc0:	f019 0f01 	tst.w	r9, #1
10014cc4:	f000 8404 	beq.w	100154d0 <_vfprintf_r+0x1414>
10014cc8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014cca:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10014ccc:	441c      	add	r4, r3
10014cce:	e9c8 2300 	strd	r2, r3, [r8]
10014cd2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014cd4:	9434      	str	r4, [sp, #208]	@ 0xd0
10014cd6:	3301      	adds	r3, #1
10014cd8:	2b07      	cmp	r3, #7
10014cda:	9333      	str	r3, [sp, #204]	@ 0xcc
10014cdc:	f300 865a 	bgt.w	10015994 <_vfprintf_r+0x18d8>
10014ce0:	f108 0808 	add.w	r8, r8, #8
10014ce4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014ce6:	ebab 060a 	sub.w	r6, fp, sl
10014cea:	1b5d      	subs	r5, r3, r5
10014cec:	42ae      	cmp	r6, r5
10014cee:	bfa8      	it	ge
10014cf0:	462e      	movge	r6, r5
10014cf2:	2e00      	cmp	r6, #0
10014cf4:	dd0d      	ble.n	10014d12 <_vfprintf_r+0xc56>
10014cf6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014cf8:	f8c8 a000 	str.w	sl, [r8]
10014cfc:	3301      	adds	r3, #1
10014cfe:	4434      	add	r4, r6
10014d00:	2b07      	cmp	r3, #7
10014d02:	f8c8 6004 	str.w	r6, [r8, #4]
10014d06:	9434      	str	r4, [sp, #208]	@ 0xd0
10014d08:	9333      	str	r3, [sp, #204]	@ 0xcc
10014d0a:	f300 8655 	bgt.w	100159b8 <_vfprintf_r+0x18fc>
10014d0e:	f108 0808 	add.w	r8, r8, #8
10014d12:	2e00      	cmp	r6, #0
10014d14:	bfa8      	it	ge
10014d16:	1bad      	subge	r5, r5, r6
10014d18:	2d00      	cmp	r5, #0
10014d1a:	f77f aba0 	ble.w	1001445e <_vfprintf_r+0x3a2>
10014d1e:	2d10      	cmp	r5, #16
10014d20:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014d22:	f340 82da 	ble.w	100152da <_vfprintf_r+0x121e>
10014d26:	4f72      	ldr	r7, [pc, #456]	@ (10014ef0 <_vfprintf_r+0xe34>)
10014d28:	9715      	str	r7, [sp, #84]	@ 0x54
10014d2a:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
10014d2e:	2610      	movs	r6, #16
10014d30:	e005      	b.n	10014d3e <_vfprintf_r+0xc82>
10014d32:	f108 0808 	add.w	r8, r8, #8
10014d36:	3d10      	subs	r5, #16
10014d38:	2d10      	cmp	r5, #16
10014d3a:	f340 82d0 	ble.w	100152de <_vfprintf_r+0x1222>
10014d3e:	3301      	adds	r3, #1
10014d40:	3410      	adds	r4, #16
10014d42:	2b07      	cmp	r3, #7
10014d44:	e9c8 7600 	strd	r7, r6, [r8]
10014d48:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10014d4c:	ddf1      	ble.n	10014d32 <_vfprintf_r+0xc76>
10014d4e:	aa32      	add	r2, sp, #200	@ 0xc8
10014d50:	4651      	mov	r1, sl
10014d52:	4658      	mov	r0, fp
10014d54:	f001 f852 	bl	10015dfc <__sprint_r>
10014d58:	2800      	cmp	r0, #0
10014d5a:	f47f ab07 	bne.w	1001436c <_vfprintf_r+0x2b0>
10014d5e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10014d62:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014d66:	e7e6      	b.n	10014d36 <_vfprintf_r+0xc7a>
10014d68:	f019 0f01 	tst.w	r9, #1
10014d6c:	f47f aedf 	bne.w	10014b2e <_vfprintf_r+0xa72>
10014d70:	2301      	movs	r3, #1
10014d72:	2e07      	cmp	r6, #7
10014d74:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014d78:	f8c8 5000 	str.w	r5, [r8]
10014d7c:	f8c8 3004 	str.w	r3, [r8, #4]
10014d80:	f77f af03 	ble.w	10014b8a <_vfprintf_r+0xace>
10014d84:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014d88:	aa32      	add	r2, sp, #200	@ 0xc8
10014d8a:	f001 f837 	bl	10015dfc <__sprint_r>
10014d8e:	2800      	cmp	r0, #0
10014d90:	f47f ae90 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10014d94:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10014d98:	af35      	add	r7, sp, #212	@ 0xd4
10014d9a:	e6f6      	b.n	10014b8a <_vfprintf_r+0xace>
10014d9c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10014d9e:	2b01      	cmp	r3, #1
10014da0:	f77f aef3 	ble.w	10014b8a <_vfprintf_r+0xace>
10014da4:	2b11      	cmp	r3, #17
10014da6:	4b52      	ldr	r3, [pc, #328]	@ (10014ef0 <_vfprintf_r+0xe34>)
10014da8:	9315      	str	r3, [sp, #84]	@ 0x54
10014daa:	f340 82b9 	ble.w	10015320 <_vfprintf_r+0x1264>
10014dae:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
10014db2:	e9dd ba07 	ldrd	fp, sl, [sp, #28]
10014db6:	2510      	movs	r5, #16
10014db8:	4699      	mov	r9, r3
10014dba:	e006      	b.n	10014dca <_vfprintf_r+0xd0e>
10014dbc:	3708      	adds	r7, #8
10014dbe:	f1a8 0810 	sub.w	r8, r8, #16
10014dc2:	f1b8 0f10 	cmp.w	r8, #16
10014dc6:	f340 82a9 	ble.w	1001531c <_vfprintf_r+0x1260>
10014dca:	3601      	adds	r6, #1
10014dcc:	3410      	adds	r4, #16
10014dce:	2e07      	cmp	r6, #7
10014dd0:	e9c7 9500 	strd	r9, r5, [r7]
10014dd4:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10014dd8:	ddf0      	ble.n	10014dbc <_vfprintf_r+0xd00>
10014dda:	aa32      	add	r2, sp, #200	@ 0xc8
10014ddc:	4659      	mov	r1, fp
10014dde:	4650      	mov	r0, sl
10014de0:	f001 f80c 	bl	10015dfc <__sprint_r>
10014de4:	2800      	cmp	r0, #0
10014de6:	f040 8202 	bne.w	100151ee <_vfprintf_r+0x1132>
10014dea:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10014dee:	af35      	add	r7, sp, #212	@ 0xd4
10014df0:	e7e5      	b.n	10014dbe <_vfprintf_r+0xd02>
10014df2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10014df6:	aa32      	add	r2, sp, #200	@ 0xc8
10014df8:	f001 f800 	bl	10015dfc <__sprint_r>
10014dfc:	2800      	cmp	r0, #0
10014dfe:	f47f ae59 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10014e02:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10014e04:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10014e08:	f7ff bb17 	b.w	1001443a <_vfprintf_r+0x37e>
10014e0c:	990d      	ldr	r1, [sp, #52]	@ 0x34
10014e0e:	f851 3b04 	ldr.w	r3, [r1], #4
10014e12:	910d      	str	r1, [sp, #52]	@ 0x34
10014e14:	f014 0110 	ands.w	r1, r4, #16
10014e18:	d155      	bne.n	10014ec6 <_vfprintf_r+0xe0a>
10014e1a:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10014e1e:	d04d      	beq.n	10014ebc <_vfprintf_r+0xe00>
10014e20:	460a      	mov	r2, r1
10014e22:	b29b      	uxth	r3, r3
10014e24:	2101      	movs	r1, #1
10014e26:	e4b7      	b.n	10014798 <_vfprintf_r+0x6dc>
10014e28:	990d      	ldr	r1, [sp, #52]	@ 0x34
10014e2a:	f851 3b04 	ldr.w	r3, [r1], #4
10014e2e:	910d      	str	r1, [sp, #52]	@ 0x34
10014e30:	f019 0110 	ands.w	r1, r9, #16
10014e34:	f47f acad 	bne.w	10014792 <_vfprintf_r+0x6d6>
10014e38:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10014e3c:	f000 82a9 	beq.w	10015392 <_vfprintf_r+0x12d6>
10014e40:	b29b      	uxth	r3, r3
10014e42:	460a      	mov	r2, r1
10014e44:	e4a5      	b.n	10014792 <_vfprintf_r+0x6d6>
10014e46:	9d07      	ldr	r5, [sp, #28]
10014e48:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10014e4a:	f003 faf5 	bl	10018438 <__retarget_lock_acquire_recursive>
10014e4e:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
10014e52:	f7ff b959 	b.w	10014108 <_vfprintf_r+0x4c>
10014e56:	f019 0f01 	tst.w	r9, #1
10014e5a:	f43f ab00 	beq.w	1001445e <_vfprintf_r+0x3a2>
10014e5e:	e52b      	b.n	100148b8 <_vfprintf_r+0x7fc>
10014e60:	930d      	str	r3, [sp, #52]	@ 0x34
10014e62:	7823      	ldrb	r3, [r4, #0]
10014e64:	f7ff b9a2 	b.w	100141ac <_vfprintf_r+0xf0>
10014e68:	ad5e      	add	r5, sp, #376	@ 0x178
10014e6a:	e575      	b.n	10014958 <_vfprintf_r+0x89c>
10014e6c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014e6e:	4921      	ldr	r1, [pc, #132]	@ (10014ef4 <_vfprintf_r+0xe38>)
10014e70:	f8c8 1000 	str.w	r1, [r8]
10014e74:	3301      	adds	r3, #1
10014e76:	3401      	adds	r4, #1
10014e78:	2101      	movs	r1, #1
10014e7a:	2b07      	cmp	r3, #7
10014e7c:	9434      	str	r4, [sp, #208]	@ 0xd0
10014e7e:	9333      	str	r3, [sp, #204]	@ 0xcc
10014e80:	f8c8 1004 	str.w	r1, [r8, #4]
10014e84:	f300 8551 	bgt.w	1001592a <_vfprintf_r+0x186e>
10014e88:	f108 0808 	add.w	r8, r8, #8
10014e8c:	2a00      	cmp	r2, #0
10014e8e:	f47f ae14 	bne.w	10014aba <_vfprintf_r+0x9fe>
10014e92:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10014e94:	f009 0301 	and.w	r3, r9, #1
10014e98:	4313      	orrs	r3, r2
10014e9a:	f43f aae0 	beq.w	1001445e <_vfprintf_r+0x3a2>
10014e9e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014ea0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10014ea2:	441c      	add	r4, r3
10014ea4:	e9c8 2300 	strd	r2, r3, [r8]
10014ea8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10014eaa:	9434      	str	r4, [sp, #208]	@ 0xd0
10014eac:	3301      	adds	r3, #1
10014eae:	2b07      	cmp	r3, #7
10014eb0:	9333      	str	r3, [sp, #204]	@ 0xcc
10014eb2:	f300 83cd 	bgt.w	10015650 <_vfprintf_r+0x1594>
10014eb6:	f108 0808 	add.w	r8, r8, #8
10014eba:	e60f      	b.n	10014adc <_vfprintf_r+0xa20>
10014ebc:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
10014ec0:	bf1c      	itt	ne
10014ec2:	b2db      	uxtbne	r3, r3
10014ec4:	4602      	movne	r2, r0
10014ec6:	2101      	movs	r1, #1
10014ec8:	e466      	b.n	10014798 <_vfprintf_r+0x6dc>
10014eca:	f419 7f00 	tst.w	r9, #512	@ 0x200
10014ece:	f040 8307 	bne.w	100154e0 <_vfprintf_r+0x1424>
10014ed2:	17da      	asrs	r2, r3, #31
10014ed4:	4611      	mov	r1, r2
10014ed6:	2900      	cmp	r1, #0
10014ed8:	f6bf abdb 	bge.w	10014692 <_vfprintf_r+0x5d6>
10014edc:	425b      	negs	r3, r3
10014ede:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
10014ee2:	464c      	mov	r4, r9
10014ee4:	202d      	movs	r0, #45	@ 0x2d
10014ee6:	2101      	movs	r1, #1
10014ee8:	e457      	b.n	1001479a <_vfprintf_r+0x6de>
10014eea:	bf00      	nop
10014eec:	100238a4 	.word	0x100238a4
10014ef0:	10023894 	.word	0x10023894
10014ef4:	10023890 	.word	0x10023890
10014ef8:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
10014efa:	7823      	ldrb	r3, [r4, #0]
10014efc:	2a00      	cmp	r2, #0
10014efe:	f43f a955 	beq.w	100141ac <_vfprintf_r+0xf0>
10014f02:	7812      	ldrb	r2, [r2, #0]
10014f04:	2a00      	cmp	r2, #0
10014f06:	f43f a951 	beq.w	100141ac <_vfprintf_r+0xf0>
10014f0a:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
10014f0e:	f7ff b94d 	b.w	100141ac <_vfprintf_r+0xf0>
10014f12:	f019 0f10 	tst.w	r9, #16
10014f16:	f040 81fb 	bne.w	10015310 <_vfprintf_r+0x1254>
10014f1a:	f019 0f40 	tst.w	r9, #64	@ 0x40
10014f1e:	f040 82e5 	bne.w	100154ec <_vfprintf_r+0x1430>
10014f22:	f419 7f00 	tst.w	r9, #512	@ 0x200
10014f26:	f000 81f3 	beq.w	10015310 <_vfprintf_r+0x1254>
10014f2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014f2c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014f2e:	681b      	ldr	r3, [r3, #0]
10014f30:	701a      	strb	r2, [r3, #0]
10014f32:	e49b      	b.n	1001486c <_vfprintf_r+0x7b0>
10014f34:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10014f38:	4602      	mov	r2, r0
10014f3a:	460b      	mov	r3, r1
10014f3c:	f00b fec6 	bl	10020ccc <__aeabi_dcmpun>
10014f40:	2800      	cmp	r0, #0
10014f42:	f040 8638 	bne.w	10015bb6 <_vfprintf_r+0x1afa>
10014f46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014f48:	2b61      	cmp	r3, #97	@ 0x61
10014f4a:	f000 8521 	beq.w	10015990 <_vfprintf_r+0x18d4>
10014f4e:	2b41      	cmp	r3, #65	@ 0x41
10014f50:	f000 82e3 	beq.w	1001551a <_vfprintf_r+0x145e>
10014f54:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014f56:	3301      	adds	r3, #1
10014f58:	f000 8617 	beq.w	10015b8a <_vfprintf_r+0x1ace>
10014f5c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014f5e:	f023 0320 	bic.w	r3, r3, #32
10014f62:	2b47      	cmp	r3, #71	@ 0x47
10014f64:	d104      	bne.n	10014f70 <_vfprintf_r+0xeb4>
10014f66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014f68:	2b00      	cmp	r3, #0
10014f6a:	bf08      	it	eq
10014f6c:	2301      	moveq	r3, #1
10014f6e:	9309      	str	r3, [sp, #36]	@ 0x24
10014f70:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
10014f74:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
10014f78:	2a00      	cmp	r2, #0
10014f7a:	9015      	str	r0, [sp, #84]	@ 0x54
10014f7c:	f8cd 9018 	str.w	r9, [sp, #24]
10014f80:	f04f 0300 	mov.w	r3, #0
10014f84:	f2c0 84df 	blt.w	10015946 <_vfprintf_r+0x188a>
10014f88:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
10014f8c:	931f      	str	r3, [sp, #124]	@ 0x7c
10014f8e:	930c      	str	r3, [sp, #48]	@ 0x30
10014f90:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014f92:	3b41      	subs	r3, #65	@ 0x41
10014f94:	2b25      	cmp	r3, #37	@ 0x25
10014f96:	f200 8203 	bhi.w	100153a0 <_vfprintf_r+0x12e4>
10014f9a:	e8df f013 	tbh	[pc, r3, lsl #1]
10014f9e:	0374      	.short	0x0374
10014fa0:	02010201 	.word	0x02010201
10014fa4:	036d0201 	.word	0x036d0201
10014fa8:	02010371 	.word	0x02010371
10014fac:	02010201 	.word	0x02010201
10014fb0:	02010201 	.word	0x02010201
10014fb4:	02010201 	.word	0x02010201
10014fb8:	02010201 	.word	0x02010201
10014fbc:	02010201 	.word	0x02010201
10014fc0:	02010201 	.word	0x02010201
10014fc4:	02010201 	.word	0x02010201
10014fc8:	02010201 	.word	0x02010201
10014fcc:	02010201 	.word	0x02010201
10014fd0:	02010201 	.word	0x02010201
10014fd4:	02010201 	.word	0x02010201
10014fd8:	02010201 	.word	0x02010201
10014fdc:	02010201 	.word	0x02010201
10014fe0:	02010201 	.word	0x02010201
10014fe4:	036d0201 	.word	0x036d0201
10014fe8:	0371      	.short	0x0371
10014fea:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10014fee:	4bc3      	ldr	r3, [pc, #780]	@ (100152fc <_vfprintf_r+0x1240>)
10014ff0:	931a      	str	r3, [sp, #104]	@ 0x68
10014ff2:	f019 0220 	ands.w	r2, r9, #32
10014ff6:	d06a      	beq.n	100150ce <_vfprintf_r+0x1012>
10014ff8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014ffa:	3307      	adds	r3, #7
10014ffc:	f023 0307 	bic.w	r3, r3, #7
10015000:	4619      	mov	r1, r3
10015002:	685a      	ldr	r2, [r3, #4]
10015004:	f851 3b08 	ldr.w	r3, [r1], #8
10015008:	910d      	str	r1, [sp, #52]	@ 0x34
1001500a:	f019 0f01 	tst.w	r9, #1
1001500e:	d00a      	beq.n	10015026 <_vfprintf_r+0xf6a>
10015010:	ea53 0102 	orrs.w	r1, r3, r2
10015014:	d007      	beq.n	10015026 <_vfprintf_r+0xf6a>
10015016:	990e      	ldr	r1, [sp, #56]	@ 0x38
10015018:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
1001501c:	2130      	movs	r1, #48	@ 0x30
1001501e:	f049 0902 	orr.w	r9, r9, #2
10015022:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10015026:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001502a:	2102      	movs	r1, #2
1001502c:	f7ff bbb4 	b.w	10014798 <_vfprintf_r+0x6dc>
10015030:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015034:	464c      	mov	r4, r9
10015036:	f7ff bbd0 	b.w	100147da <_vfprintf_r+0x71e>
1001503a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001503e:	f7ff bb9b 	b.w	10014778 <_vfprintf_r+0x6bc>
10015042:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015046:	4bae      	ldr	r3, [pc, #696]	@ (10015300 <_vfprintf_r+0x1244>)
10015048:	931a      	str	r3, [sp, #104]	@ 0x68
1001504a:	e7d2      	b.n	10014ff2 <_vfprintf_r+0xf36>
1001504c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015050:	aa32      	add	r2, sp, #200	@ 0xc8
10015052:	f000 fed3 	bl	10015dfc <__sprint_r>
10015056:	2800      	cmp	r0, #0
10015058:	f47f ad2c 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
1001505c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001505e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015062:	f7ff b9e4 	b.w	1001442e <_vfprintf_r+0x372>
10015066:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001506a:	aa32      	add	r2, sp, #200	@ 0xc8
1001506c:	f000 fec6 	bl	10015dfc <__sprint_r>
10015070:	2800      	cmp	r0, #0
10015072:	f47f ad1f 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10015076:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015078:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001507c:	e42a      	b.n	100148d4 <_vfprintf_r+0x818>
1001507e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10015080:	950c      	str	r5, [sp, #48]	@ 0x30
10015082:	2b06      	cmp	r3, #6
10015084:	4629      	mov	r1, r5
10015086:	bf28      	it	cs
10015088:	2306      	movcs	r3, #6
1001508a:	9509      	str	r5, [sp, #36]	@ 0x24
1001508c:	462a      	mov	r2, r5
1001508e:	9306      	str	r3, [sp, #24]
10015090:	4d9c      	ldr	r5, [pc, #624]	@ (10015304 <_vfprintf_r+0x1248>)
10015092:	960d      	str	r6, [sp, #52]	@ 0x34
10015094:	469b      	mov	fp, r3
10015096:	9114      	str	r1, [sp, #80]	@ 0x50
10015098:	9110      	str	r1, [sp, #64]	@ 0x40
1001509a:	9112      	str	r1, [sp, #72]	@ 0x48
1001509c:	f7ff ba40 	b.w	10014520 <_vfprintf_r+0x464>
100150a0:	2208      	movs	r2, #8
100150a2:	2100      	movs	r1, #0
100150a4:	a830      	add	r0, sp, #192	@ 0xc0
100150a6:	f002 fee3 	bl	10017e70 <memset>
100150aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100150ac:	9808      	ldr	r0, [sp, #32]
100150ae:	681a      	ldr	r2, [r3, #0]
100150b0:	ad45      	add	r5, sp, #276	@ 0x114
100150b2:	ab30      	add	r3, sp, #192	@ 0xc0
100150b4:	4629      	mov	r1, r5
100150b6:	f003 fb2f 	bl	10018718 <_wcrtomb_r>
100150ba:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
100150be:	4683      	mov	fp, r0
100150c0:	f000 8544 	beq.w	10015b4c <_vfprintf_r+0x1a90>
100150c4:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
100150c8:	9306      	str	r3, [sp, #24]
100150ca:	f7ff ba93 	b.w	100145f4 <_vfprintf_r+0x538>
100150ce:	990d      	ldr	r1, [sp, #52]	@ 0x34
100150d0:	f851 3b04 	ldr.w	r3, [r1], #4
100150d4:	910d      	str	r1, [sp, #52]	@ 0x34
100150d6:	f019 0110 	ands.w	r1, r9, #16
100150da:	d196      	bne.n	1001500a <_vfprintf_r+0xf4e>
100150dc:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
100150e0:	f000 8151 	beq.w	10015386 <_vfprintf_r+0x12ca>
100150e4:	b29b      	uxth	r3, r3
100150e6:	460a      	mov	r2, r1
100150e8:	e78f      	b.n	1001500a <_vfprintf_r+0xf4e>
100150ea:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
100150ee:	ad5e      	add	r5, sp, #376	@ 0x178
100150f0:	e432      	b.n	10014958 <_vfprintf_r+0x89c>
100150f2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100150f6:	aa32      	add	r2, sp, #200	@ 0xc8
100150f8:	f000 fe80 	bl	10015dfc <__sprint_r>
100150fc:	2800      	cmp	r0, #0
100150fe:	f47f acd9 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10015102:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10015106:	af35      	add	r7, sp, #212	@ 0xd4
10015108:	e527      	b.n	10014b5a <_vfprintf_r+0xa9e>
1001510a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001510e:	aa32      	add	r2, sp, #200	@ 0xc8
10015110:	f000 fe74 	bl	10015dfc <__sprint_r>
10015114:	2800      	cmp	r0, #0
10015116:	f47f accd 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
1001511a:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001511e:	af35      	add	r7, sp, #212	@ 0xd4
10015120:	e50f      	b.n	10014b42 <_vfprintf_r+0xa86>
10015122:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10015126:	2100      	movs	r1, #0
10015128:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
1001512c:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 10015308 <_vfprintf_r+0x124c>
10015130:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10015134:	9406      	str	r4, [sp, #24]
10015136:	ad5e      	add	r5, sp, #376	@ 0x178
10015138:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
1001513c:	2705      	movs	r7, #5
1001513e:	468c      	mov	ip, r1
10015140:	465e      	mov	r6, fp
10015142:	e005      	b.n	10015150 <_vfprintf_r+0x1094>
10015144:	2b0a      	cmp	r3, #10
10015146:	f172 0200 	sbcs.w	r2, r2, #0
1001514a:	d333      	bcc.n	100151b4 <_vfprintf_r+0x10f8>
1001514c:	465b      	mov	r3, fp
1001514e:	4622      	mov	r2, r4
10015150:	1899      	adds	r1, r3, r2
10015152:	f141 0100 	adc.w	r1, r1, #0
10015156:	fba9 0401 	umull	r0, r4, r9, r1
1001515a:	f024 0003 	bic.w	r0, r4, #3
1001515e:	eb00 0094 	add.w	r0, r0, r4, lsr #2
10015162:	1a09      	subs	r1, r1, r0
10015164:	1a58      	subs	r0, r3, r1
10015166:	f162 0e00 	sbc.w	lr, r2, #0
1001516a:	fb0a f400 	mul.w	r4, sl, r0
1001516e:	fba0 b009 	umull	fp, r0, r0, r9
10015172:	fb09 440e 	mla	r4, r9, lr, r4
10015176:	f00b 0e01 	and.w	lr, fp, #1
1001517a:	4404      	add	r4, r0
1001517c:	fbae 0e07 	umull	r0, lr, lr, r7
10015180:	1840      	adds	r0, r0, r1
10015182:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
10015186:	3030      	adds	r0, #48	@ 0x30
10015188:	f805 0c01 	strb.w	r0, [r5, #-1]
1001518c:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
10015190:	f10c 0c01 	add.w	ip, ip, #1
10015194:	3d01      	subs	r5, #1
10015196:	0864      	lsrs	r4, r4, #1
10015198:	2e00      	cmp	r6, #0
1001519a:	d0d3      	beq.n	10015144 <_vfprintf_r+0x1088>
1001519c:	f898 1000 	ldrb.w	r1, [r8]
100151a0:	458c      	cmp	ip, r1
100151a2:	d1cf      	bne.n	10015144 <_vfprintf_r+0x1088>
100151a4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
100151a8:	d0cc      	beq.n	10015144 <_vfprintf_r+0x1088>
100151aa:	2b0a      	cmp	r3, #10
100151ac:	f172 0200 	sbcs.w	r2, r2, #0
100151b0:	f080 82c5 	bcs.w	1001573e <_vfprintf_r+0x1682>
100151b4:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
100151b8:	9c06      	ldr	r4, [sp, #24]
100151ba:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
100151be:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
100151c2:	f7ff bbc5 	b.w	10014950 <_vfprintf_r+0x894>
100151c6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100151ca:	aa32      	add	r2, sp, #200	@ 0xc8
100151cc:	9315      	str	r3, [sp, #84]	@ 0x54
100151ce:	f000 fe15 	bl	10015dfc <__sprint_r>
100151d2:	2800      	cmp	r0, #0
100151d4:	f47f ac6e 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
100151d8:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100151dc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100151de:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100151e0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100151e4:	f7ff b8fc 	b.w	100143e0 <_vfprintf_r+0x324>
100151e8:	46a3      	mov	fp, r4
100151ea:	f7ff b8bf 	b.w	1001436c <_vfprintf_r+0x2b0>
100151ee:	46d3      	mov	fp, sl
100151f0:	f7ff b8bc 	b.w	1001436c <_vfprintf_r+0x2b0>
100151f4:	4658      	mov	r0, fp
100151f6:	f002 fb23 	bl	10017840 <__sinit>
100151fa:	f7fe bf7c 	b.w	100140f6 <_vfprintf_r+0x3a>
100151fe:	2901      	cmp	r1, #1
10015200:	464c      	mov	r4, r9
10015202:	f47f ab95 	bne.w	10014930 <_vfprintf_r+0x874>
10015206:	e4d3      	b.n	10014bb0 <_vfprintf_r+0xaf4>
10015208:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001520c:	aa32      	add	r2, sp, #200	@ 0xc8
1001520e:	f000 fdf5 	bl	10015dfc <__sprint_r>
10015212:	2800      	cmp	r0, #0
10015214:	f47f ac4e 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10015218:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001521a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001521e:	f7ff bb46 	b.w	100148ae <_vfprintf_r+0x7f2>
10015222:	46cb      	mov	fp, r9
10015224:	f7ff b8a2 	b.w	1001436c <_vfprintf_r+0x2b0>
10015228:	af30      	add	r7, sp, #192	@ 0xc0
1001522a:	2208      	movs	r2, #8
1001522c:	2100      	movs	r1, #0
1001522e:	4638      	mov	r0, r7
10015230:	952b      	str	r5, [sp, #172]	@ 0xac
10015232:	f002 fe1d 	bl	10017e70 <memset>
10015236:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001523a:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
1001523e:	f000 8270 	beq.w	10015722 <_vfprintf_r+0x1666>
10015242:	2400      	movs	r4, #0
10015244:	f8cd 9018 	str.w	r9, [sp, #24]
10015248:	46a3      	mov	fp, r4
1001524a:	f8dd 9020 	ldr.w	r9, [sp, #32]
1001524e:	e00c      	b.n	1001526a <_vfprintf_r+0x11ae>
10015250:	a945      	add	r1, sp, #276	@ 0x114
10015252:	4648      	mov	r0, r9
10015254:	f003 fa60 	bl	10018718 <_wcrtomb_r>
10015258:	1c41      	adds	r1, r0, #1
1001525a:	4458      	add	r0, fp
1001525c:	f000 8476 	beq.w	10015b4c <_vfprintf_r+0x1a90>
10015260:	4550      	cmp	r0, sl
10015262:	dc08      	bgt.n	10015276 <_vfprintf_r+0x11ba>
10015264:	f000 84c3 	beq.w	10015bee <_vfprintf_r+0x1b32>
10015268:	4683      	mov	fp, r0
1001526a:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
1001526c:	5912      	ldr	r2, [r2, r4]
1001526e:	463b      	mov	r3, r7
10015270:	3404      	adds	r4, #4
10015272:	2a00      	cmp	r2, #0
10015274:	d1ec      	bne.n	10015250 <_vfprintf_r+0x1194>
10015276:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001527a:	f1bb 0f00 	cmp.w	fp, #0
1001527e:	f000 8343 	beq.w	10015908 <_vfprintf_r+0x184c>
10015282:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
10015286:	f340 83fa 	ble.w	10015a7e <_vfprintf_r+0x19c2>
1001528a:	9808      	ldr	r0, [sp, #32]
1001528c:	f10b 0101 	add.w	r1, fp, #1
10015290:	f7fe fc46 	bl	10013b20 <_malloc_r>
10015294:	4605      	mov	r5, r0
10015296:	2800      	cmp	r0, #0
10015298:	f000 8458 	beq.w	10015b4c <_vfprintf_r+0x1a90>
1001529c:	900c      	str	r0, [sp, #48]	@ 0x30
1001529e:	2208      	movs	r2, #8
100152a0:	2100      	movs	r1, #0
100152a2:	4638      	mov	r0, r7
100152a4:	f002 fde4 	bl	10017e70 <memset>
100152a8:	9808      	ldr	r0, [sp, #32]
100152aa:	9700      	str	r7, [sp, #0]
100152ac:	465b      	mov	r3, fp
100152ae:	aa2b      	add	r2, sp, #172	@ 0xac
100152b0:	4629      	mov	r1, r5
100152b2:	f003 fa57 	bl	10018764 <_wcsrtombs_r>
100152b6:	4583      	cmp	fp, r0
100152b8:	f040 8519 	bne.w	10015cee <_vfprintf_r+0x1c32>
100152bc:	2300      	movs	r3, #0
100152be:	f805 300b 	strb.w	r3, [r5, fp]
100152c2:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
100152c6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100152ca:	960d      	str	r6, [sp, #52]	@ 0x34
100152cc:	9309      	str	r3, [sp, #36]	@ 0x24
100152ce:	9106      	str	r1, [sp, #24]
100152d0:	9314      	str	r3, [sp, #80]	@ 0x50
100152d2:	9310      	str	r3, [sp, #64]	@ 0x40
100152d4:	9312      	str	r3, [sp, #72]	@ 0x48
100152d6:	f7ff b923 	b.w	10014520 <_vfprintf_r+0x464>
100152da:	4a0c      	ldr	r2, [pc, #48]	@ (1001530c <_vfprintf_r+0x1250>)
100152dc:	9215      	str	r2, [sp, #84]	@ 0x54
100152de:	3301      	adds	r3, #1
100152e0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100152e2:	f8c8 2000 	str.w	r2, [r8]
100152e6:	442c      	add	r4, r5
100152e8:	2b07      	cmp	r3, #7
100152ea:	f8c8 5004 	str.w	r5, [r8, #4]
100152ee:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100152f2:	f77f a8b2 	ble.w	1001445a <_vfprintf_r+0x39e>
100152f6:	f7ff bbfd 	b.w	10014af4 <_vfprintf_r+0xa38>
100152fa:	bf00      	nop
100152fc:	10023874 	.word	0x10023874
10015300:	100213b0 	.word	0x100213b0
10015304:	10023888 	.word	0x10023888
10015308:	cccccccd 	.word	0xcccccccd
1001530c:	10023894 	.word	0x10023894
10015310:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015312:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10015314:	681b      	ldr	r3, [r3, #0]
10015316:	601a      	str	r2, [r3, #0]
10015318:	f7ff baa8 	b.w	1001486c <_vfprintf_r+0x7b0>
1001531c:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
10015320:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10015322:	603b      	str	r3, [r7, #0]
10015324:	3601      	adds	r6, #1
10015326:	4444      	add	r4, r8
10015328:	2e07      	cmp	r6, #7
1001532a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001532e:	f8c7 8004 	str.w	r8, [r7, #4]
10015332:	f77f ac29 	ble.w	10014b88 <_vfprintf_r+0xacc>
10015336:	e525      	b.n	10014d84 <_vfprintf_r+0xcc8>
10015338:	2e10      	cmp	r6, #16
1001533a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001533c:	f340 84ad 	ble.w	10015c9a <_vfprintf_r+0x1bde>
10015340:	4898      	ldr	r0, [pc, #608]	@ (100155a4 <_vfprintf_r+0x14e8>)
10015342:	9015      	str	r0, [sp, #84]	@ 0x54
10015344:	4642      	mov	r2, r8
10015346:	4621      	mov	r1, r4
10015348:	46a8      	mov	r8, r5
1001534a:	e9dd 4a07 	ldrd	r4, sl, [sp, #28]
1001534e:	2710      	movs	r7, #16
10015350:	4605      	mov	r5, r0
10015352:	e004      	b.n	1001535e <_vfprintf_r+0x12a2>
10015354:	3208      	adds	r2, #8
10015356:	3e10      	subs	r6, #16
10015358:	2e10      	cmp	r6, #16
1001535a:	f340 81ca 	ble.w	100156f2 <_vfprintf_r+0x1636>
1001535e:	3301      	adds	r3, #1
10015360:	3110      	adds	r1, #16
10015362:	2b07      	cmp	r3, #7
10015364:	e9c2 5700 	strd	r5, r7, [r2]
10015368:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
1001536c:	ddf2      	ble.n	10015354 <_vfprintf_r+0x1298>
1001536e:	aa32      	add	r2, sp, #200	@ 0xc8
10015370:	4621      	mov	r1, r4
10015372:	4650      	mov	r0, sl
10015374:	f000 fd42 	bl	10015dfc <__sprint_r>
10015378:	2800      	cmp	r0, #0
1001537a:	f47f af38 	bne.w	100151ee <_vfprintf_r+0x1132>
1001537e:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
10015382:	aa35      	add	r2, sp, #212	@ 0xd4
10015384:	e7e7      	b.n	10015356 <_vfprintf_r+0x129a>
10015386:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001538a:	bf1c      	itt	ne
1001538c:	b2db      	uxtbne	r3, r3
1001538e:	4602      	movne	r2, r0
10015390:	e63b      	b.n	1001500a <_vfprintf_r+0xf4e>
10015392:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10015396:	bf1c      	itt	ne
10015398:	b2db      	uxtbne	r3, r3
1001539a:	4602      	movne	r2, r0
1001539c:	f7ff b9f9 	b.w	10014792 <_vfprintf_r+0x6d6>
100153a0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
100153a2:	2302      	movs	r3, #2
100153a4:	e9cd 3600 	strd	r3, r6, [sp]
100153a8:	ab30      	add	r3, sp, #192	@ 0xc0
100153aa:	9304      	str	r3, [sp, #16]
100153ac:	ab2b      	add	r3, sp, #172	@ 0xac
100153ae:	9303      	str	r3, [sp, #12]
100153b0:	ab29      	add	r3, sp, #164	@ 0xa4
100153b2:	9302      	str	r3, [sp, #8]
100153b4:	9808      	ldr	r0, [sp, #32]
100153b6:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
100153ba:	f003 fac1 	bl	10018940 <_dtoa_r>
100153be:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100153c0:	2b67      	cmp	r3, #103	@ 0x67
100153c2:	4605      	mov	r5, r0
100153c4:	f000 8177 	beq.w	100156b6 <_vfprintf_r+0x15fa>
100153c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100153ca:	2b47      	cmp	r3, #71	@ 0x47
100153cc:	f000 8173 	beq.w	100156b6 <_vfprintf_r+0x15fa>
100153d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100153d2:	f023 0720 	bic.w	r7, r3, #32
100153d6:	2f46      	cmp	r7, #70	@ 0x46
100153d8:	eb00 0406 	add.w	r4, r0, r6
100153dc:	d105      	bne.n	100153ea <_vfprintf_r+0x132e>
100153de:	7803      	ldrb	r3, [r0, #0]
100153e0:	2b30      	cmp	r3, #48	@ 0x30
100153e2:	f000 83db 	beq.w	10015b9c <_vfprintf_r+0x1ae0>
100153e6:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
100153e8:	4434      	add	r4, r6
100153ea:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100153ee:	2200      	movs	r2, #0
100153f0:	2300      	movs	r3, #0
100153f2:	f00b fc39 	bl	10020c68 <__aeabi_dcmpeq>
100153f6:	2800      	cmp	r0, #0
100153f8:	f000 81cc 	beq.w	10015794 <_vfprintf_r+0x16d8>
100153fc:	4623      	mov	r3, r4
100153fe:	1b5b      	subs	r3, r3, r5
10015400:	9313      	str	r3, [sp, #76]	@ 0x4c
10015402:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10015404:	9212      	str	r2, [sp, #72]	@ 0x48
10015406:	2f47      	cmp	r7, #71	@ 0x47
10015408:	f000 815d 	beq.w	100156c6 <_vfprintf_r+0x160a>
1001540c:	2f46      	cmp	r7, #70	@ 0x46
1001540e:	f000 82e3 	beq.w	100159d8 <_vfprintf_r+0x191c>
10015412:	990e      	ldr	r1, [sp, #56]	@ 0x38
10015414:	1e53      	subs	r3, r2, #1
10015416:	2961      	cmp	r1, #97	@ 0x61
10015418:	9329      	str	r3, [sp, #164]	@ 0xa4
1001541a:	f000 8441 	beq.w	10015ca0 <_vfprintf_r+0x1be4>
1001541e:	2941      	cmp	r1, #65	@ 0x41
10015420:	f040 815c 	bne.w	100156dc <_vfprintf_r+0x1620>
10015424:	2150      	movs	r1, #80	@ 0x50
10015426:	2001      	movs	r0, #1
10015428:	2b00      	cmp	r3, #0
1001542a:	bfb6      	itet	lt
1001542c:	f1c2 0301 	rsblt	r3, r2, #1
10015430:	222b      	movge	r2, #43	@ 0x2b
10015432:	222d      	movlt	r2, #45	@ 0x2d
10015434:	2b09      	cmp	r3, #9
10015436:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
1001543a:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001543e:	f340 8377 	ble.w	10015b30 <_vfprintf_r+0x1a74>
10015442:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
10015446:	4e58      	ldr	r6, [pc, #352]	@ (100155a8 <_vfprintf_r+0x14ec>)
10015448:	4622      	mov	r2, r4
1001544a:	4610      	mov	r0, r2
1001544c:	fba6 1203 	umull	r1, r2, r6, r3
10015450:	08d2      	lsrs	r2, r2, #3
10015452:	eb02 0182 	add.w	r1, r2, r2, lsl #2
10015456:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
1001545a:	3130      	adds	r1, #48	@ 0x30
1001545c:	f800 1c01 	strb.w	r1, [r0, #-1]
10015460:	4619      	mov	r1, r3
10015462:	2963      	cmp	r1, #99	@ 0x63
10015464:	4613      	mov	r3, r2
10015466:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
1001546a:	dcee      	bgt.n	1001544a <_vfprintf_r+0x138e>
1001546c:	3330      	adds	r3, #48	@ 0x30
1001546e:	f802 3c01 	strb.w	r3, [r2, #-1]
10015472:	1e83      	subs	r3, r0, #2
10015474:	42a3      	cmp	r3, r4
10015476:	f080 840c 	bcs.w	10015c92 <_vfprintf_r+0x1bd6>
1001547a:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
1001547e:	f813 1b01 	ldrb.w	r1, [r3], #1
10015482:	f802 1f01 	strb.w	r1, [r2, #1]!
10015486:	42a3      	cmp	r3, r4
10015488:	d1f9      	bne.n	1001547e <_vfprintf_r+0x13c2>
1001548a:	ab5e      	add	r3, sp, #376	@ 0x178
1001548c:	1a18      	subs	r0, r3, r0
1001548e:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
10015492:	931c      	str	r3, [sp, #112]	@ 0x70
10015494:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10015496:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10015498:	2b01      	cmp	r3, #1
1001549a:	eb03 0b02 	add.w	fp, r3, r2
1001549e:	f340 8378 	ble.w	10015b92 <_vfprintf_r+0x1ad6>
100154a2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100154a4:	449b      	add	fp, r3
100154a6:	9b06      	ldr	r3, [sp, #24]
100154a8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
100154ac:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
100154b0:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
100154b4:	2300      	movs	r3, #0
100154b6:	9314      	str	r3, [sp, #80]	@ 0x50
100154b8:	9206      	str	r2, [sp, #24]
100154ba:	9310      	str	r3, [sp, #64]	@ 0x40
100154bc:	9312      	str	r3, [sp, #72]	@ 0x48
100154be:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
100154c0:	2b00      	cmp	r3, #0
100154c2:	f040 810f 	bne.w	100156e4 <_vfprintf_r+0x1628>
100154c6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100154ca:	9309      	str	r3, [sp, #36]	@ 0x24
100154cc:	f7ff b828 	b.w	10014520 <_vfprintf_r+0x464>
100154d0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100154d2:	ebab 060a 	sub.w	r6, fp, sl
100154d6:	1b5d      	subs	r5, r3, r5
100154d8:	42ae      	cmp	r6, r5
100154da:	bfa8      	it	ge
100154dc:	462e      	movge	r6, r5
100154de:	e418      	b.n	10014d12 <_vfprintf_r+0xc56>
100154e0:	f343 12c0 	sbfx	r2, r3, #7, #1
100154e4:	4611      	mov	r1, r2
100154e6:	b25b      	sxtb	r3, r3
100154e8:	f7ff b8d0 	b.w	1001468c <_vfprintf_r+0x5d0>
100154ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100154ee:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100154f0:	681b      	ldr	r3, [r3, #0]
100154f2:	801a      	strh	r2, [r3, #0]
100154f4:	f7ff b9ba 	b.w	1001486c <_vfprintf_r+0x7b0>
100154f8:	9907      	ldr	r1, [sp, #28]
100154fa:	aa32      	add	r2, sp, #200	@ 0xc8
100154fc:	4658      	mov	r0, fp
100154fe:	f000 fc7d 	bl	10015dfc <__sprint_r>
10015502:	2800      	cmp	r0, #0
10015504:	f43e af22 	beq.w	1001434c <_vfprintf_r+0x290>
10015508:	f7fe bf36 	b.w	10014378 <_vfprintf_r+0x2bc>
1001550c:	4628      	mov	r0, r5
1001550e:	960d      	str	r6, [sp, #52]	@ 0x34
10015510:	f003 f896 	bl	10018640 <strlen>
10015514:	4683      	mov	fp, r0
10015516:	f7ff b89c 	b.w	10014652 <_vfprintf_r+0x596>
1001551a:	2358      	movs	r3, #88	@ 0x58
1001551c:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
10015520:	2330      	movs	r3, #48	@ 0x30
10015522:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
10015526:	f049 0302 	orr.w	r3, r9, #2
1001552a:	9306      	str	r3, [sp, #24]
1001552c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001552e:	2b63      	cmp	r3, #99	@ 0x63
10015530:	f300 82f6 	bgt.w	10015b20 <_vfprintf_r+0x1a64>
10015534:	2300      	movs	r3, #0
10015536:	930c      	str	r3, [sp, #48]	@ 0x30
10015538:	ad45      	add	r5, sp, #276	@ 0x114
1001553a:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
1001553e:	9315      	str	r3, [sp, #84]	@ 0x54
10015540:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10015542:	2b00      	cmp	r3, #0
10015544:	f2c0 8200 	blt.w	10015948 <_vfprintf_r+0x188c>
10015548:	2300      	movs	r3, #0
1001554a:	931f      	str	r3, [sp, #124]	@ 0x7c
1001554c:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
10015550:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
10015554:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10015556:	2b61      	cmp	r3, #97	@ 0x61
10015558:	f47f ad1a 	bne.w	10014f90 <_vfprintf_r+0xed4>
1001555c:	aa29      	add	r2, sp, #164	@ 0xa4
1001555e:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10015562:	f003 f90d 	bl	10018780 <frexp>
10015566:	2200      	movs	r2, #0
10015568:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001556c:	f00b f914 	bl	10020798 <__aeabi_dmul>
10015570:	4602      	mov	r2, r0
10015572:	460b      	mov	r3, r1
10015574:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10015578:	2200      	movs	r2, #0
1001557a:	2300      	movs	r3, #0
1001557c:	f00b fb74 	bl	10020c68 <__aeabi_dcmpeq>
10015580:	2800      	cmp	r0, #0
10015582:	f040 82f8 	bne.w	10015b76 <_vfprintf_r+0x1aba>
10015586:	4b09      	ldr	r3, [pc, #36]	@ (100155ac <_vfprintf_r+0x14f0>)
10015588:	9312      	str	r3, [sp, #72]	@ 0x48
1001558a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001558c:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
10015590:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
10015594:	462e      	mov	r6, r5
10015596:	9514      	str	r5, [sp, #80]	@ 0x50
10015598:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001559c:	464d      	mov	r5, r9
1001559e:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
100155a2:	e00b      	b.n	100155bc <_vfprintf_r+0x1500>
100155a4:	10023894 	.word	0x10023894
100155a8:	cccccccd 	.word	0xcccccccd
100155ac:	100213b0 	.word	0x100213b0
100155b0:	2200      	movs	r2, #0
100155b2:	2300      	movs	r3, #0
100155b4:	f00b fb58 	bl	10020c68 <__aeabi_dcmpeq>
100155b8:	b9f0      	cbnz	r0, 100155f8 <_vfprintf_r+0x153c>
100155ba:	463d      	mov	r5, r7
100155bc:	4ba9      	ldr	r3, [pc, #676]	@ (10015864 <_vfprintf_r+0x17a8>)
100155be:	2200      	movs	r2, #0
100155c0:	4640      	mov	r0, r8
100155c2:	4649      	mov	r1, r9
100155c4:	f00b f8e8 	bl	10020798 <__aeabi_dmul>
100155c8:	4689      	mov	r9, r1
100155ca:	4680      	mov	r8, r0
100155cc:	f00b fb94 	bl	10020cf8 <__aeabi_d2iz>
100155d0:	4604      	mov	r4, r0
100155d2:	f00b f877 	bl	100206c4 <__aeabi_i2d>
100155d6:	4602      	mov	r2, r0
100155d8:	460b      	mov	r3, r1
100155da:	4640      	mov	r0, r8
100155dc:	4649      	mov	r1, r9
100155de:	f00a ff23 	bl	10020428 <__aeabi_dsub>
100155e2:	f81b 3004 	ldrb.w	r3, [fp, r4]
100155e6:	1c6a      	adds	r2, r5, #1
100155e8:	46b2      	mov	sl, r6
100155ea:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
100155ee:	f806 3b01 	strb.w	r3, [r6], #1
100155f2:	4680      	mov	r8, r0
100155f4:	4689      	mov	r9, r1
100155f6:	d1db      	bne.n	100155b0 <_vfprintf_r+0x14f4>
100155f8:	46cb      	mov	fp, r9
100155fa:	4657      	mov	r7, sl
100155fc:	46c2      	mov	sl, r8
100155fe:	4b9a      	ldr	r3, [pc, #616]	@ (10015868 <_vfprintf_r+0x17ac>)
10015600:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
10015604:	2200      	movs	r2, #0
10015606:	4650      	mov	r0, sl
10015608:	4659      	mov	r1, fp
1001560a:	46a9      	mov	r9, r5
1001560c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001560e:	f00b fb53 	bl	10020cb8 <__aeabi_dcmpgt>
10015612:	2800      	cmp	r0, #0
10015614:	f040 8264 	bne.w	10015ae0 <_vfprintf_r+0x1a24>
10015618:	4b93      	ldr	r3, [pc, #588]	@ (10015868 <_vfprintf_r+0x17ac>)
1001561a:	4650      	mov	r0, sl
1001561c:	4659      	mov	r1, fp
1001561e:	2200      	movs	r2, #0
10015620:	f00b fb22 	bl	10020c68 <__aeabi_dcmpeq>
10015624:	b110      	cbz	r0, 1001562c <_vfprintf_r+0x1570>
10015626:	07e3      	lsls	r3, r4, #31
10015628:	f100 825a 	bmi.w	10015ae0 <_vfprintf_r+0x1a24>
1001562c:	f1b9 0f00 	cmp.w	r9, #0
10015630:	f2c0 8270 	blt.w	10015b14 <_vfprintf_r+0x1a58>
10015634:	f109 0301 	add.w	r3, r9, #1
10015638:	4433      	add	r3, r6
1001563a:	2230      	movs	r2, #48	@ 0x30
1001563c:	f806 2b01 	strb.w	r2, [r6], #1
10015640:	42b3      	cmp	r3, r6
10015642:	d1fb      	bne.n	1001563c <_vfprintf_r+0x1580>
10015644:	1b5b      	subs	r3, r3, r5
10015646:	9313      	str	r3, [sp, #76]	@ 0x4c
10015648:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001564a:	f023 0720 	bic.w	r7, r3, #32
1001564e:	e6d8      	b.n	10015402 <_vfprintf_r+0x1346>
10015650:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015654:	aa32      	add	r2, sp, #200	@ 0xc8
10015656:	f000 fbd1 	bl	10015dfc <__sprint_r>
1001565a:	2800      	cmp	r0, #0
1001565c:	f47f aa2a 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10015660:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10015664:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10015666:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001566a:	f7ff ba34 	b.w	10014ad6 <_vfprintf_r+0xa1a>
1001566e:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10015670:	f002 fee4 	bl	1001843c <__retarget_lock_release_recursive>
10015674:	f7fe be3c 	b.w	100142f0 <_vfprintf_r+0x234>
10015678:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001567a:	1c5e      	adds	r6, r3, #1
1001567c:	2302      	movs	r3, #2
1001567e:	e691      	b.n	100153a4 <_vfprintf_r+0x12e8>
10015680:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10015682:	2303      	movs	r3, #3
10015684:	e68e      	b.n	100153a4 <_vfprintf_r+0x12e8>
10015686:	aa29      	add	r2, sp, #164	@ 0xa4
10015688:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001568c:	f003 f878 	bl	10018780 <frexp>
10015690:	2200      	movs	r2, #0
10015692:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10015696:	f00b f87f 	bl	10020798 <__aeabi_dmul>
1001569a:	4602      	mov	r2, r0
1001569c:	460b      	mov	r3, r1
1001569e:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
100156a2:	2200      	movs	r2, #0
100156a4:	2300      	movs	r3, #0
100156a6:	f00b fadf 	bl	10020c68 <__aeabi_dcmpeq>
100156aa:	2800      	cmp	r0, #0
100156ac:	f040 8263 	bne.w	10015b76 <_vfprintf_r+0x1aba>
100156b0:	4b6e      	ldr	r3, [pc, #440]	@ (1001586c <_vfprintf_r+0x17b0>)
100156b2:	9312      	str	r3, [sp, #72]	@ 0x48
100156b4:	e769      	b.n	1001558a <_vfprintf_r+0x14ce>
100156b6:	9b06      	ldr	r3, [sp, #24]
100156b8:	07df      	lsls	r7, r3, #31
100156ba:	f100 81e4 	bmi.w	10015a86 <_vfprintf_r+0x19ca>
100156be:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100156c0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100156c2:	1b5b      	subs	r3, r3, r5
100156c4:	9313      	str	r3, [sp, #76]	@ 0x4c
100156c6:	1cd3      	adds	r3, r2, #3
100156c8:	9212      	str	r2, [sp, #72]	@ 0x48
100156ca:	db02      	blt.n	100156d2 <_vfprintf_r+0x1616>
100156cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100156ce:	4293      	cmp	r3, r2
100156d0:	da44      	bge.n	1001575c <_vfprintf_r+0x16a0>
100156d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100156d4:	3b02      	subs	r3, #2
100156d6:	930e      	str	r3, [sp, #56]	@ 0x38
100156d8:	1e53      	subs	r3, r2, #1
100156da:	9329      	str	r3, [sp, #164]	@ 0xa4
100156dc:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
100156e0:	2000      	movs	r0, #0
100156e2:	e6a1      	b.n	10015428 <_vfprintf_r+0x136c>
100156e4:	222d      	movs	r2, #45	@ 0x2d
100156e6:	2300      	movs	r3, #0
100156e8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100156ec:	9309      	str	r3, [sp, #36]	@ 0x24
100156ee:	f7fe bf1a 	b.w	10014526 <_vfprintf_r+0x46a>
100156f2:	4645      	mov	r5, r8
100156f4:	460c      	mov	r4, r1
100156f6:	4690      	mov	r8, r2
100156f8:	3301      	adds	r3, #1
100156fa:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100156fc:	f8c8 2000 	str.w	r2, [r8]
10015700:	4434      	add	r4, r6
10015702:	2b07      	cmp	r3, #7
10015704:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10015708:	f8c8 6004 	str.w	r6, [r8, #4]
1001570c:	f300 8226 	bgt.w	10015b5c <_vfprintf_r+0x1aa0>
10015710:	f108 0808 	add.w	r8, r8, #8
10015714:	f7ff bac9 	b.w	10014caa <_vfprintf_r+0xbee>
10015718:	222d      	movs	r2, #45	@ 0x2d
1001571a:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001571e:	f7fe beee 	b.w	100144fe <_vfprintf_r+0x442>
10015722:	2300      	movs	r3, #0
10015724:	9808      	ldr	r0, [sp, #32]
10015726:	9700      	str	r7, [sp, #0]
10015728:	aa2b      	add	r2, sp, #172	@ 0xac
1001572a:	4619      	mov	r1, r3
1001572c:	f003 f81a 	bl	10018764 <_wcsrtombs_r>
10015730:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10015734:	4683      	mov	fp, r0
10015736:	f000 8209 	beq.w	10015b4c <_vfprintf_r+0x1a90>
1001573a:	952b      	str	r5, [sp, #172]	@ 0xac
1001573c:	e59d      	b.n	1001527a <_vfprintf_r+0x11be>
1001573e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10015740:	991d      	ldr	r1, [sp, #116]	@ 0x74
10015742:	1aed      	subs	r5, r5, r3
10015744:	461a      	mov	r2, r3
10015746:	4628      	mov	r0, r5
10015748:	f002 fc06 	bl	10017f58 <strncpy>
1001574c:	f898 3001 	ldrb.w	r3, [r8, #1]
10015750:	b10b      	cbz	r3, 10015756 <_vfprintf_r+0x169a>
10015752:	f108 0801 	add.w	r8, r8, #1
10015756:	f04f 0c00 	mov.w	ip, #0
1001575a:	e4f7      	b.n	1001514c <_vfprintf_r+0x1090>
1001575c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001575e:	4293      	cmp	r3, r2
10015760:	f300 8194 	bgt.w	10015a8c <_vfprintf_r+0x19d0>
10015764:	9b06      	ldr	r3, [sp, #24]
10015766:	07dc      	lsls	r4, r3, #31
10015768:	f140 824a 	bpl.w	10015c00 <_vfprintf_r+0x1b44>
1001576c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001576e:	eb02 0b03 	add.w	fp, r2, r3
10015772:	9b06      	ldr	r3, [sp, #24]
10015774:	0558      	lsls	r0, r3, #21
10015776:	d502      	bpl.n	1001577e <_vfprintf_r+0x16c2>
10015778:	2a00      	cmp	r2, #0
1001577a:	f300 824a 	bgt.w	10015c12 <_vfprintf_r+0x1b56>
1001577e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015782:	9306      	str	r3, [sp, #24]
10015784:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10015788:	2367      	movs	r3, #103	@ 0x67
1001578a:	930e      	str	r3, [sp, #56]	@ 0x38
1001578c:	2300      	movs	r3, #0
1001578e:	9314      	str	r3, [sp, #80]	@ 0x50
10015790:	9310      	str	r3, [sp, #64]	@ 0x40
10015792:	e694      	b.n	100154be <_vfprintf_r+0x1402>
10015794:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10015796:	42a3      	cmp	r3, r4
10015798:	f4bf ae31 	bcs.w	100153fe <_vfprintf_r+0x1342>
1001579c:	2130      	movs	r1, #48	@ 0x30
1001579e:	1c5a      	adds	r2, r3, #1
100157a0:	9230      	str	r2, [sp, #192]	@ 0xc0
100157a2:	7019      	strb	r1, [r3, #0]
100157a4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
100157a6:	429c      	cmp	r4, r3
100157a8:	d8f9      	bhi.n	1001579e <_vfprintf_r+0x16e2>
100157aa:	e628      	b.n	100153fe <_vfprintf_r+0x1342>
100157ac:	9b10      	ldr	r3, [sp, #64]	@ 0x40
100157ae:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
100157b2:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
100157b6:	4642      	mov	r2, r8
100157b8:	4621      	mov	r1, r4
100157ba:	4f2d      	ldr	r7, [pc, #180]	@ (10015870 <_vfprintf_r+0x17b4>)
100157bc:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
100157c0:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
100157c4:	f8dd b020 	ldr.w	fp, [sp, #32]
100157c8:	4654      	mov	r4, sl
100157ca:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
100157ce:	b37b      	cbz	r3, 10015830 <_vfprintf_r+0x1774>
100157d0:	f1b9 0f00 	cmp.w	r9, #0
100157d4:	f000 8085 	beq.w	100158e2 <_vfprintf_r+0x1826>
100157d8:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
100157dc:	9833      	ldr	r0, [sp, #204]	@ 0xcc
100157de:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
100157e0:	3001      	adds	r0, #1
100157e2:	4441      	add	r1, r8
100157e4:	2807      	cmp	r0, #7
100157e6:	e9c2 3800 	strd	r3, r8, [r2]
100157ea:	9134      	str	r1, [sp, #208]	@ 0xd0
100157ec:	9033      	str	r0, [sp, #204]	@ 0xcc
100157ee:	dc6d      	bgt.n	100158cc <_vfprintf_r+0x1810>
100157f0:	3208      	adds	r2, #8
100157f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100157f4:	f89a 0000 	ldrb.w	r0, [sl]
100157f8:	1b1e      	subs	r6, r3, r4
100157fa:	4286      	cmp	r6, r0
100157fc:	bfa8      	it	ge
100157fe:	4606      	movge	r6, r0
10015800:	2e00      	cmp	r6, #0
10015802:	dd0b      	ble.n	1001581c <_vfprintf_r+0x1760>
10015804:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10015806:	3001      	adds	r0, #1
10015808:	4431      	add	r1, r6
1001580a:	2807      	cmp	r0, #7
1001580c:	e9c2 4600 	strd	r4, r6, [r2]
10015810:	9134      	str	r1, [sp, #208]	@ 0xd0
10015812:	9033      	str	r0, [sp, #204]	@ 0xcc
10015814:	dc6b      	bgt.n	100158ee <_vfprintf_r+0x1832>
10015816:	f89a 0000 	ldrb.w	r0, [sl]
1001581a:	3208      	adds	r2, #8
1001581c:	2e00      	cmp	r6, #0
1001581e:	bfac      	ite	ge
10015820:	1b85      	subge	r5, r0, r6
10015822:	4605      	movlt	r5, r0
10015824:	2d00      	cmp	r5, #0
10015826:	dc14      	bgt.n	10015852 <_vfprintf_r+0x1796>
10015828:	4404      	add	r4, r0
1001582a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001582c:	2b00      	cmp	r3, #0
1001582e:	d1cf      	bne.n	100157d0 <_vfprintf_r+0x1714>
10015830:	f1b9 0f00 	cmp.w	r9, #0
10015834:	d1d0      	bne.n	100157d8 <_vfprintf_r+0x171c>
10015836:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001583a:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
1001583e:	46a2      	mov	sl, r4
10015840:	45da      	cmp	sl, fp
10015842:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
10015846:	4690      	mov	r8, r2
10015848:	460c      	mov	r4, r1
1001584a:	bf28      	it	cs
1001584c:	46da      	movcs	sl, fp
1001584e:	f7ff ba33 	b.w	10014cb8 <_vfprintf_r+0xbfc>
10015852:	2d10      	cmp	r5, #16
10015854:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10015856:	f340 821a 	ble.w	10015c8e <_vfprintf_r+0x1bd2>
1001585a:	4623      	mov	r3, r4
1001585c:	463e      	mov	r6, r7
1001585e:	462c      	mov	r4, r5
10015860:	461d      	mov	r5, r3
10015862:	e00c      	b.n	1001587e <_vfprintf_r+0x17c2>
10015864:	40300000 	.word	0x40300000
10015868:	3fe00000 	.word	0x3fe00000
1001586c:	10023874 	.word	0x10023874
10015870:	10023894 	.word	0x10023894
10015874:	3c10      	subs	r4, #16
10015876:	2c10      	cmp	r4, #16
10015878:	f102 0208 	add.w	r2, r2, #8
1001587c:	dd16      	ble.n	100158ac <_vfprintf_r+0x17f0>
1001587e:	3001      	adds	r0, #1
10015880:	3110      	adds	r1, #16
10015882:	2310      	movs	r3, #16
10015884:	2807      	cmp	r0, #7
10015886:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001588a:	6017      	str	r7, [r2, #0]
1001588c:	6053      	str	r3, [r2, #4]
1001588e:	ddf1      	ble.n	10015874 <_vfprintf_r+0x17b8>
10015890:	9907      	ldr	r1, [sp, #28]
10015892:	aa32      	add	r2, sp, #200	@ 0xc8
10015894:	4658      	mov	r0, fp
10015896:	f000 fab1 	bl	10015dfc <__sprint_r>
1001589a:	2800      	cmp	r0, #0
1001589c:	f47e ad66 	bne.w	1001436c <_vfprintf_r+0x2b0>
100158a0:	3c10      	subs	r4, #16
100158a2:	2c10      	cmp	r4, #16
100158a4:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
100158a8:	aa35      	add	r2, sp, #212	@ 0xd4
100158aa:	dce8      	bgt.n	1001587e <_vfprintf_r+0x17c2>
100158ac:	462b      	mov	r3, r5
100158ae:	4625      	mov	r5, r4
100158b0:	461c      	mov	r4, r3
100158b2:	3001      	adds	r0, #1
100158b4:	4429      	add	r1, r5
100158b6:	2807      	cmp	r0, #7
100158b8:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
100158bc:	6016      	str	r6, [r2, #0]
100158be:	6055      	str	r5, [r2, #4]
100158c0:	dc4b      	bgt.n	1001595a <_vfprintf_r+0x189e>
100158c2:	f89a 0000 	ldrb.w	r0, [sl]
100158c6:	3208      	adds	r2, #8
100158c8:	4404      	add	r4, r0
100158ca:	e7ae      	b.n	1001582a <_vfprintf_r+0x176e>
100158cc:	9907      	ldr	r1, [sp, #28]
100158ce:	aa32      	add	r2, sp, #200	@ 0xc8
100158d0:	4658      	mov	r0, fp
100158d2:	f000 fa93 	bl	10015dfc <__sprint_r>
100158d6:	2800      	cmp	r0, #0
100158d8:	f47e ad48 	bne.w	1001436c <_vfprintf_r+0x2b0>
100158dc:	9934      	ldr	r1, [sp, #208]	@ 0xd0
100158de:	aa35      	add	r2, sp, #212	@ 0xd4
100158e0:	e787      	b.n	100157f2 <_vfprintf_r+0x1736>
100158e2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
100158e4:	3b01      	subs	r3, #1
100158e6:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
100158ea:	9310      	str	r3, [sp, #64]	@ 0x40
100158ec:	e776      	b.n	100157dc <_vfprintf_r+0x1720>
100158ee:	9907      	ldr	r1, [sp, #28]
100158f0:	aa32      	add	r2, sp, #200	@ 0xc8
100158f2:	4658      	mov	r0, fp
100158f4:	f000 fa82 	bl	10015dfc <__sprint_r>
100158f8:	2800      	cmp	r0, #0
100158fa:	f47e ad37 	bne.w	1001436c <_vfprintf_r+0x2b0>
100158fe:	f89a 0000 	ldrb.w	r0, [sl]
10015902:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10015904:	aa35      	add	r2, sp, #212	@ 0xd4
10015906:	e789      	b.n	1001581c <_vfprintf_r+0x1760>
10015908:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001590c:	960d      	str	r6, [sp, #52]	@ 0x34
1001590e:	f8cd b018 	str.w	fp, [sp, #24]
10015912:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10015916:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
1001591a:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
1001591e:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
10015922:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10015926:	f7fe bdfb 	b.w	10014520 <_vfprintf_r+0x464>
1001592a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001592e:	aa32      	add	r2, sp, #200	@ 0xc8
10015930:	f000 fa64 	bl	10015dfc <__sprint_r>
10015934:	2800      	cmp	r0, #0
10015936:	f47f a8bd 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
1001593a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001593c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001593e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015942:	f7ff baa3 	b.w	10014e8c <_vfprintf_r+0xdd0>
10015946:	930c      	str	r3, [sp, #48]	@ 0x30
10015948:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001594c:	9324      	str	r3, [sp, #144]	@ 0x90
1001594e:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
10015952:	9325      	str	r3, [sp, #148]	@ 0x94
10015954:	232d      	movs	r3, #45	@ 0x2d
10015956:	931f      	str	r3, [sp, #124]	@ 0x7c
10015958:	e5fc      	b.n	10015554 <_vfprintf_r+0x1498>
1001595a:	9907      	ldr	r1, [sp, #28]
1001595c:	aa32      	add	r2, sp, #200	@ 0xc8
1001595e:	4658      	mov	r0, fp
10015960:	f000 fa4c 	bl	10015dfc <__sprint_r>
10015964:	2800      	cmp	r0, #0
10015966:	f47e ad01 	bne.w	1001436c <_vfprintf_r+0x2b0>
1001596a:	f89a 0000 	ldrb.w	r0, [sl]
1001596e:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10015970:	aa35      	add	r2, sp, #212	@ 0xd4
10015972:	4404      	add	r4, r0
10015974:	e759      	b.n	1001582a <_vfprintf_r+0x176e>
10015976:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001597a:	aa32      	add	r2, sp, #200	@ 0xc8
1001597c:	f000 fa3e 	bl	10015dfc <__sprint_r>
10015980:	2800      	cmp	r0, #0
10015982:	f47f a897 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10015986:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015988:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001598c:	f7ff b986 	b.w	10014c9c <_vfprintf_r+0xbe0>
10015990:	2378      	movs	r3, #120	@ 0x78
10015992:	e5c3      	b.n	1001551c <_vfprintf_r+0x1460>
10015994:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015998:	aa32      	add	r2, sp, #200	@ 0xc8
1001599a:	f000 fa2f 	bl	10015dfc <__sprint_r>
1001599e:	2800      	cmp	r0, #0
100159a0:	f47f a888 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
100159a4:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100159a6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100159a8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100159ac:	f7ff b99a 	b.w	10014ce4 <_vfprintf_r+0xc28>
100159b0:	49ab      	ldr	r1, [pc, #684]	@ (10015c60 <_vfprintf_r+0x1ba4>)
100159b2:	9115      	str	r1, [sp, #84]	@ 0x54
100159b4:	f7fe bdeb 	b.w	1001458e <_vfprintf_r+0x4d2>
100159b8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100159bc:	aa32      	add	r2, sp, #200	@ 0xc8
100159be:	f000 fa1d 	bl	10015dfc <__sprint_r>
100159c2:	2800      	cmp	r0, #0
100159c4:	f47f a876 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
100159c8:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100159ca:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100159cc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100159ce:	1b5d      	subs	r5, r3, r5
100159d0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100159d4:	f7ff b99d 	b.w	10014d12 <_vfprintf_r+0xc56>
100159d8:	9b06      	ldr	r3, [sp, #24]
100159da:	9912      	ldr	r1, [sp, #72]	@ 0x48
100159dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100159de:	f003 0301 	and.w	r3, r3, #1
100159e2:	2900      	cmp	r1, #0
100159e4:	ea43 0302 	orr.w	r3, r3, r2
100159e8:	f340 815d 	ble.w	10015ca6 <_vfprintf_r+0x1bea>
100159ec:	2b00      	cmp	r3, #0
100159ee:	f040 8109 	bne.w	10015c04 <_vfprintf_r+0x1b48>
100159f2:	2366      	movs	r3, #102	@ 0x66
100159f4:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
100159f8:	930e      	str	r3, [sp, #56]	@ 0x38
100159fa:	9b06      	ldr	r3, [sp, #24]
100159fc:	055a      	lsls	r2, r3, #21
100159fe:	f100 810a 	bmi.w	10015c16 <_vfprintf_r+0x1b5a>
10015a02:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015a06:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10015a0a:	9306      	str	r3, [sp, #24]
10015a0c:	e6be      	b.n	1001578c <_vfprintf_r+0x16d0>
10015a0e:	2200      	movs	r2, #0
10015a10:	9209      	str	r2, [sp, #36]	@ 0x24
10015a12:	f7fe bbcc 	b.w	100141ae <_vfprintf_r+0xf2>
10015a16:	9b07      	ldr	r3, [sp, #28]
10015a18:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10015a1a:	07df      	lsls	r7, r3, #31
10015a1c:	d407      	bmi.n	10015a2e <_vfprintf_r+0x1972>
10015a1e:	9b07      	ldr	r3, [sp, #28]
10015a20:	899b      	ldrh	r3, [r3, #12]
10015a22:	059e      	lsls	r6, r3, #22
10015a24:	d403      	bmi.n	10015a2e <_vfprintf_r+0x1972>
10015a26:	9b07      	ldr	r3, [sp, #28]
10015a28:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10015a2a:	f002 fd07 	bl	1001843c <__retarget_lock_release_recursive>
10015a2e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10015a32:	930a      	str	r3, [sp, #40]	@ 0x28
10015a34:	f7fe bcab 	b.w	1001438e <_vfprintf_r+0x2d2>
10015a38:	4256      	negs	r6, r2
10015a3a:	3210      	adds	r2, #16
10015a3c:	4a89      	ldr	r2, [pc, #548]	@ (10015c64 <_vfprintf_r+0x1ba8>)
10015a3e:	9215      	str	r2, [sp, #84]	@ 0x54
10015a40:	da34      	bge.n	10015aac <_vfprintf_r+0x19f0>
10015a42:	46aa      	mov	sl, r5
10015a44:	2710      	movs	r7, #16
10015a46:	4615      	mov	r5, r2
10015a48:	e004      	b.n	10015a54 <_vfprintf_r+0x1998>
10015a4a:	f108 0808 	add.w	r8, r8, #8
10015a4e:	3e10      	subs	r6, #16
10015a50:	2e10      	cmp	r6, #16
10015a52:	dd2a      	ble.n	10015aaa <_vfprintf_r+0x19ee>
10015a54:	3301      	adds	r3, #1
10015a56:	3410      	adds	r4, #16
10015a58:	2b07      	cmp	r3, #7
10015a5a:	e9c8 5700 	strd	r5, r7, [r8]
10015a5e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10015a62:	ddf2      	ble.n	10015a4a <_vfprintf_r+0x198e>
10015a64:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015a68:	aa32      	add	r2, sp, #200	@ 0xc8
10015a6a:	f000 f9c7 	bl	10015dfc <__sprint_r>
10015a6e:	2800      	cmp	r0, #0
10015a70:	f47f a820 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10015a74:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10015a78:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015a7c:	e7e7      	b.n	10015a4e <_vfprintf_r+0x1992>
10015a7e:	2300      	movs	r3, #0
10015a80:	930c      	str	r3, [sp, #48]	@ 0x30
10015a82:	ad45      	add	r5, sp, #276	@ 0x114
10015a84:	e40b      	b.n	1001529e <_vfprintf_r+0x11e2>
10015a86:	19ac      	adds	r4, r5, r6
10015a88:	2747      	movs	r7, #71	@ 0x47
10015a8a:	e4ae      	b.n	100153ea <_vfprintf_r+0x132e>
10015a8c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10015a8e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10015a90:	eb03 0b02 	add.w	fp, r3, r2
10015a94:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10015a96:	2b00      	cmp	r3, #0
10015a98:	f340 80ee 	ble.w	10015c78 <_vfprintf_r+0x1bbc>
10015a9c:	2367      	movs	r3, #103	@ 0x67
10015a9e:	930e      	str	r3, [sp, #56]	@ 0x38
10015aa0:	e7ab      	b.n	100159fa <_vfprintf_r+0x193e>
10015aa2:	4a6f      	ldr	r2, [pc, #444]	@ (10015c60 <_vfprintf_r+0x1ba4>)
10015aa4:	9215      	str	r2, [sp, #84]	@ 0x54
10015aa6:	f7ff b8cc 	b.w	10014c42 <_vfprintf_r+0xb86>
10015aaa:	4655      	mov	r5, sl
10015aac:	3301      	adds	r3, #1
10015aae:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10015ab0:	f8c8 2000 	str.w	r2, [r8]
10015ab4:	4434      	add	r4, r6
10015ab6:	2b07      	cmp	r3, #7
10015ab8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10015abc:	f8c8 6004 	str.w	r6, [r8, #4]
10015ac0:	f77f a9f9 	ble.w	10014eb6 <_vfprintf_r+0xdfa>
10015ac4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015ac8:	aa32      	add	r2, sp, #200	@ 0xc8
10015aca:	f000 f997 	bl	10015dfc <__sprint_r>
10015ace:	2800      	cmp	r0, #0
10015ad0:	f47e aff0 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10015ad4:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10015ad8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015adc:	f7fe bffe 	b.w	10014adc <_vfprintf_r+0xa20>
10015ae0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10015ae2:	9730      	str	r7, [sp, #192]	@ 0xc0
10015ae4:	7bd9      	ldrb	r1, [r3, #15]
10015ae6:	f816 2c01 	ldrb.w	r2, [r6, #-1]
10015aea:	428a      	cmp	r2, r1
10015aec:	4633      	mov	r3, r6
10015aee:	d109      	bne.n	10015b04 <_vfprintf_r+0x1a48>
10015af0:	2030      	movs	r0, #48	@ 0x30
10015af2:	f803 0c01 	strb.w	r0, [r3, #-1]
10015af6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10015af8:	1e5a      	subs	r2, r3, #1
10015afa:	9230      	str	r2, [sp, #192]	@ 0xc0
10015afc:	f813 2c01 	ldrb.w	r2, [r3, #-1]
10015b00:	4291      	cmp	r1, r2
10015b02:	d0f6      	beq.n	10015af2 <_vfprintf_r+0x1a36>
10015b04:	2a39      	cmp	r2, #57	@ 0x39
10015b06:	bf0b      	itete	eq
10015b08:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
10015b0a:	3201      	addne	r2, #1
10015b0c:	7a92      	ldrbeq	r2, [r2, #10]
10015b0e:	b2d2      	uxtbne	r2, r2
10015b10:	f803 2c01 	strb.w	r2, [r3, #-1]
10015b14:	4633      	mov	r3, r6
10015b16:	e595      	b.n	10015644 <_vfprintf_r+0x1588>
10015b18:	4a52      	ldr	r2, [pc, #328]	@ (10015c64 <_vfprintf_r+0x1ba8>)
10015b1a:	9215      	str	r2, [sp, #84]	@ 0x54
10015b1c:	f7fe bf76 	b.w	10014a0c <_vfprintf_r+0x950>
10015b20:	9808      	ldr	r0, [sp, #32]
10015b22:	1c59      	adds	r1, r3, #1
10015b24:	f7fd fffc 	bl	10013b20 <_malloc_r>
10015b28:	4605      	mov	r5, r0
10015b2a:	b178      	cbz	r0, 10015b4c <_vfprintf_r+0x1a90>
10015b2c:	900c      	str	r0, [sp, #48]	@ 0x30
10015b2e:	e504      	b.n	1001553a <_vfprintf_r+0x147e>
10015b30:	2800      	cmp	r0, #0
10015b32:	d162      	bne.n	10015bfa <_vfprintf_r+0x1b3e>
10015b34:	2230      	movs	r2, #48	@ 0x30
10015b36:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
10015b3a:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
10015b3e:	3330      	adds	r3, #48	@ 0x30
10015b40:	f802 3b01 	strb.w	r3, [r2], #1
10015b44:	ab2c      	add	r3, sp, #176	@ 0xb0
10015b46:	1ad3      	subs	r3, r2, r3
10015b48:	931c      	str	r3, [sp, #112]	@ 0x70
10015b4a:	e4a3      	b.n	10015494 <_vfprintf_r+0x13d8>
10015b4c:	9a07      	ldr	r2, [sp, #28]
10015b4e:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
10015b52:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015b56:	8193      	strh	r3, [r2, #12]
10015b58:	f7fe bc11 	b.w	1001437e <_vfprintf_r+0x2c2>
10015b5c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10015b60:	aa32      	add	r2, sp, #200	@ 0xc8
10015b62:	f000 f94b 	bl	10015dfc <__sprint_r>
10015b66:	2800      	cmp	r0, #0
10015b68:	f47e afa4 	bne.w	10014ab4 <_vfprintf_r+0x9f8>
10015b6c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015b6e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015b72:	f7ff b89a 	b.w	10014caa <_vfprintf_r+0xbee>
10015b76:	4b3c      	ldr	r3, [pc, #240]	@ (10015c68 <_vfprintf_r+0x1bac>)
10015b78:	4a3c      	ldr	r2, [pc, #240]	@ (10015c6c <_vfprintf_r+0x1bb0>)
10015b7a:	990e      	ldr	r1, [sp, #56]	@ 0x38
10015b7c:	2961      	cmp	r1, #97	@ 0x61
10015b7e:	bf18      	it	ne
10015b80:	461a      	movne	r2, r3
10015b82:	2301      	movs	r3, #1
10015b84:	9212      	str	r2, [sp, #72]	@ 0x48
10015b86:	9329      	str	r3, [sp, #164]	@ 0xa4
10015b88:	e4ff      	b.n	1001558a <_vfprintf_r+0x14ce>
10015b8a:	2306      	movs	r3, #6
10015b8c:	9309      	str	r3, [sp, #36]	@ 0x24
10015b8e:	f7ff b9ef 	b.w	10014f70 <_vfprintf_r+0xeb4>
10015b92:	9b06      	ldr	r3, [sp, #24]
10015b94:	07de      	lsls	r6, r3, #31
10015b96:	f57f ac86 	bpl.w	100154a6 <_vfprintf_r+0x13ea>
10015b9a:	e482      	b.n	100154a2 <_vfprintf_r+0x13e6>
10015b9c:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10015ba0:	2200      	movs	r2, #0
10015ba2:	2300      	movs	r3, #0
10015ba4:	f00b f860 	bl	10020c68 <__aeabi_dcmpeq>
10015ba8:	2800      	cmp	r0, #0
10015baa:	f47f ac1c 	bne.w	100153e6 <_vfprintf_r+0x132a>
10015bae:	f1c6 0601 	rsb	r6, r6, #1
10015bb2:	9629      	str	r6, [sp, #164]	@ 0xa4
10015bb4:	e418      	b.n	100153e8 <_vfprintf_r+0x132c>
10015bb6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10015bb8:	4d2d      	ldr	r5, [pc, #180]	@ (10015c70 <_vfprintf_r+0x1bb4>)
10015bba:	2b00      	cmp	r3, #0
10015bbc:	bfb4      	ite	lt
10015bbe:	222d      	movlt	r2, #45	@ 0x2d
10015bc0:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
10015bc4:	4b2b      	ldr	r3, [pc, #172]	@ (10015c74 <_vfprintf_r+0x1bb8>)
10015bc6:	bfb8      	it	lt
10015bc8:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
10015bcc:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10015bd0:	f7fe bc99 	b.w	10014506 <_vfprintf_r+0x44a>
10015bd4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10015bd6:	9306      	str	r3, [sp, #24]
10015bd8:	469b      	mov	fp, r3
10015bda:	2373      	movs	r3, #115	@ 0x73
10015bdc:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015be0:	960d      	str	r6, [sp, #52]	@ 0x34
10015be2:	9009      	str	r0, [sp, #36]	@ 0x24
10015be4:	9014      	str	r0, [sp, #80]	@ 0x50
10015be6:	9010      	str	r0, [sp, #64]	@ 0x40
10015be8:	930e      	str	r3, [sp, #56]	@ 0x38
10015bea:	f7fe bc99 	b.w	10014520 <_vfprintf_r+0x464>
10015bee:	f8dd 9018 	ldr.w	r9, [sp, #24]
10015bf2:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10015bf6:	f7ff bb40 	b.w	1001527a <_vfprintf_r+0x11be>
10015bfa:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10015bfe:	e79e      	b.n	10015b3e <_vfprintf_r+0x1a82>
10015c00:	4693      	mov	fp, r2
10015c02:	e5b6      	b.n	10015772 <_vfprintf_r+0x16b6>
10015c04:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10015c06:	18cf      	adds	r7, r1, r3
10015c08:	443a      	add	r2, r7
10015c0a:	2366      	movs	r3, #102	@ 0x66
10015c0c:	4693      	mov	fp, r2
10015c0e:	930e      	str	r3, [sp, #56]	@ 0x38
10015c10:	e6f3      	b.n	100159fa <_vfprintf_r+0x193e>
10015c12:	2367      	movs	r3, #103	@ 0x67
10015c14:	930e      	str	r3, [sp, #56]	@ 0x38
10015c16:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10015c18:	780b      	ldrb	r3, [r1, #0]
10015c1a:	2bff      	cmp	r3, #255	@ 0xff
10015c1c:	d063      	beq.n	10015ce6 <_vfprintf_r+0x1c2a>
10015c1e:	2400      	movs	r4, #0
10015c20:	9a12      	ldr	r2, [sp, #72]	@ 0x48
10015c22:	4620      	mov	r0, r4
10015c24:	e003      	b.n	10015c2e <_vfprintf_r+0x1b72>
10015c26:	3001      	adds	r0, #1
10015c28:	3101      	adds	r1, #1
10015c2a:	2bff      	cmp	r3, #255	@ 0xff
10015c2c:	d008      	beq.n	10015c40 <_vfprintf_r+0x1b84>
10015c2e:	4293      	cmp	r3, r2
10015c30:	da06      	bge.n	10015c40 <_vfprintf_r+0x1b84>
10015c32:	1ad2      	subs	r2, r2, r3
10015c34:	784b      	ldrb	r3, [r1, #1]
10015c36:	2b00      	cmp	r3, #0
10015c38:	d1f5      	bne.n	10015c26 <_vfprintf_r+0x1b6a>
10015c3a:	780b      	ldrb	r3, [r1, #0]
10015c3c:	3401      	adds	r4, #1
10015c3e:	e7f4      	b.n	10015c2a <_vfprintf_r+0x1b6e>
10015c40:	911b      	str	r1, [sp, #108]	@ 0x6c
10015c42:	9212      	str	r2, [sp, #72]	@ 0x48
10015c44:	9010      	str	r0, [sp, #64]	@ 0x40
10015c46:	9414      	str	r4, [sp, #80]	@ 0x50
10015c48:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
10015c4c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
10015c4e:	4413      	add	r3, r2
10015c50:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
10015c52:	fb02 bb03 	mla	fp, r2, r3, fp
10015c56:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015c5a:	9306      	str	r3, [sp, #24]
10015c5c:	e42f      	b.n	100154be <_vfprintf_r+0x1402>
10015c5e:	bf00      	nop
10015c60:	100238a4 	.word	0x100238a4
10015c64:	10023894 	.word	0x10023894
10015c68:	10023874 	.word	0x10023874
10015c6c:	100213b0 	.word	0x100213b0
10015c70:	1002386c 	.word	0x1002386c
10015c74:	10023870 	.word	0x10023870
10015c78:	f1c3 0301 	rsb	r3, r3, #1
10015c7c:	449b      	add	fp, r3
10015c7e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015c82:	9306      	str	r3, [sp, #24]
10015c84:	2367      	movs	r3, #103	@ 0x67
10015c86:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10015c8a:	930e      	str	r3, [sp, #56]	@ 0x38
10015c8c:	e57e      	b.n	1001578c <_vfprintf_r+0x16d0>
10015c8e:	4e1c      	ldr	r6, [pc, #112]	@ (10015d00 <_vfprintf_r+0x1c44>)
10015c90:	e60f      	b.n	100158b2 <_vfprintf_r+0x17f6>
10015c92:	2302      	movs	r3, #2
10015c94:	931c      	str	r3, [sp, #112]	@ 0x70
10015c96:	f7ff bbfd 	b.w	10015494 <_vfprintf_r+0x13d8>
10015c9a:	4a19      	ldr	r2, [pc, #100]	@ (10015d00 <_vfprintf_r+0x1c44>)
10015c9c:	9215      	str	r2, [sp, #84]	@ 0x54
10015c9e:	e52b      	b.n	100156f8 <_vfprintf_r+0x163c>
10015ca0:	2170      	movs	r1, #112	@ 0x70
10015ca2:	f7ff bbc0 	b.w	10015426 <_vfprintf_r+0x136a>
10015ca6:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10015caa:	b933      	cbnz	r3, 10015cba <_vfprintf_r+0x1bfe>
10015cac:	f04f 0b01 	mov.w	fp, #1
10015cb0:	2366      	movs	r3, #102	@ 0x66
10015cb2:	f8cd b018 	str.w	fp, [sp, #24]
10015cb6:	930e      	str	r3, [sp, #56]	@ 0x38
10015cb8:	e568      	b.n	1001578c <_vfprintf_r+0x16d0>
10015cba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10015cbc:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10015cc0:	1c5f      	adds	r7, r3, #1
10015cc2:	44bb      	add	fp, r7
10015cc4:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10015cc8:	9306      	str	r3, [sp, #24]
10015cca:	2366      	movs	r3, #102	@ 0x66
10015ccc:	930e      	str	r3, [sp, #56]	@ 0x38
10015cce:	e55d      	b.n	1001578c <_vfprintf_r+0x16d0>
10015cd0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10015cd2:	7863      	ldrb	r3, [r4, #1]
10015cd4:	460c      	mov	r4, r1
10015cd6:	f852 1b04 	ldr.w	r1, [r2], #4
10015cda:	920d      	str	r2, [sp, #52]	@ 0x34
10015cdc:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10015ce0:	9109      	str	r1, [sp, #36]	@ 0x24
10015ce2:	f7fe ba63 	b.w	100141ac <_vfprintf_r+0xf0>
10015ce6:	2300      	movs	r3, #0
10015ce8:	9314      	str	r3, [sp, #80]	@ 0x50
10015cea:	9310      	str	r3, [sp, #64]	@ 0x40
10015cec:	e7ac      	b.n	10015c48 <_vfprintf_r+0x1b8c>
10015cee:	e9dd 2b07 	ldrd	r2, fp, [sp, #28]
10015cf2:	8993      	ldrh	r3, [r2, #12]
10015cf4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015cf8:	8193      	strh	r3, [r2, #12]
10015cfa:	f7fe bb37 	b.w	1001436c <_vfprintf_r+0x2b0>
10015cfe:	bf00      	nop
10015d00:	10023894 	.word	0x10023894

10015d04 <__sbprintf>:
10015d04:	b5f0      	push	{r4, r5, r6, r7, lr}
10015d06:	461f      	mov	r7, r3
10015d08:	898b      	ldrh	r3, [r1, #12]
10015d0a:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
10015d0e:	f023 0302 	bic.w	r3, r3, #2
10015d12:	f8ad 300c 	strh.w	r3, [sp, #12]
10015d16:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10015d18:	9319      	str	r3, [sp, #100]	@ 0x64
10015d1a:	89cb      	ldrh	r3, [r1, #14]
10015d1c:	f8ad 300e 	strh.w	r3, [sp, #14]
10015d20:	69cb      	ldr	r3, [r1, #28]
10015d22:	9307      	str	r3, [sp, #28]
10015d24:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10015d26:	9309      	str	r3, [sp, #36]	@ 0x24
10015d28:	ab1a      	add	r3, sp, #104	@ 0x68
10015d2a:	9300      	str	r3, [sp, #0]
10015d2c:	9304      	str	r3, [sp, #16]
10015d2e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10015d32:	4615      	mov	r5, r2
10015d34:	4606      	mov	r6, r0
10015d36:	9302      	str	r3, [sp, #8]
10015d38:	9305      	str	r3, [sp, #20]
10015d3a:	a816      	add	r0, sp, #88	@ 0x58
10015d3c:	2300      	movs	r3, #0
10015d3e:	460c      	mov	r4, r1
10015d40:	9306      	str	r3, [sp, #24]
10015d42:	f002 fb75 	bl	10018430 <__retarget_lock_init_recursive>
10015d46:	462a      	mov	r2, r5
10015d48:	463b      	mov	r3, r7
10015d4a:	4669      	mov	r1, sp
10015d4c:	4630      	mov	r0, r6
10015d4e:	f7fe f9b5 	bl	100140bc <_vfprintf_r>
10015d52:	1e05      	subs	r5, r0, #0
10015d54:	db07      	blt.n	10015d66 <__sbprintf+0x62>
10015d56:	4669      	mov	r1, sp
10015d58:	4630      	mov	r0, r6
10015d5a:	f001 fb79 	bl	10017450 <_fflush_r>
10015d5e:	2800      	cmp	r0, #0
10015d60:	bf18      	it	ne
10015d62:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10015d66:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10015d6a:	065b      	lsls	r3, r3, #25
10015d6c:	d503      	bpl.n	10015d76 <__sbprintf+0x72>
10015d6e:	89a3      	ldrh	r3, [r4, #12]
10015d70:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015d74:	81a3      	strh	r3, [r4, #12]
10015d76:	9816      	ldr	r0, [sp, #88]	@ 0x58
10015d78:	f002 fb5c 	bl	10018434 <__retarget_lock_close_recursive>
10015d7c:	4628      	mov	r0, r5
10015d7e:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10015d82:	bdf0      	pop	{r4, r5, r6, r7, pc}

10015d84 <__sprint_r.part.0>:
10015d84:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015d88:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10015d8a:	049c      	lsls	r4, r3, #18
10015d8c:	4690      	mov	r8, r2
10015d8e:	d52e      	bpl.n	10015dee <__sprint_r.part.0+0x6a>
10015d90:	6893      	ldr	r3, [r2, #8]
10015d92:	6812      	ldr	r2, [r2, #0]
10015d94:	b34b      	cbz	r3, 10015dea <__sprint_r.part.0+0x66>
10015d96:	460d      	mov	r5, r1
10015d98:	4606      	mov	r6, r0
10015d9a:	f102 0908 	add.w	r9, r2, #8
10015d9e:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
10015da2:	ea5f 079a 	movs.w	r7, sl, lsr #2
10015da6:	d016      	beq.n	10015dd6 <__sprint_r.part.0+0x52>
10015da8:	f1a2 0b04 	sub.w	fp, r2, #4
10015dac:	2400      	movs	r4, #0
10015dae:	e001      	b.n	10015db4 <__sprint_r.part.0+0x30>
10015db0:	42a7      	cmp	r7, r4
10015db2:	d00e      	beq.n	10015dd2 <__sprint_r.part.0+0x4e>
10015db4:	f85b 1f04 	ldr.w	r1, [fp, #4]!
10015db8:	462a      	mov	r2, r5
10015dba:	4630      	mov	r0, r6
10015dbc:	f001 ffa8 	bl	10017d10 <_fputwc_r>
10015dc0:	1c43      	adds	r3, r0, #1
10015dc2:	f104 0401 	add.w	r4, r4, #1
10015dc6:	d1f3      	bne.n	10015db0 <__sprint_r.part.0+0x2c>
10015dc8:	2300      	movs	r3, #0
10015dca:	e9c8 3301 	strd	r3, r3, [r8, #4]
10015dce:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015dd2:	f8d8 3008 	ldr.w	r3, [r8, #8]
10015dd6:	f02a 0a03 	bic.w	sl, sl, #3
10015dda:	eba3 030a 	sub.w	r3, r3, sl
10015dde:	f8c8 3008 	str.w	r3, [r8, #8]
10015de2:	f109 0908 	add.w	r9, r9, #8
10015de6:	2b00      	cmp	r3, #0
10015de8:	d1d9      	bne.n	10015d9e <__sprint_r.part.0+0x1a>
10015dea:	2000      	movs	r0, #0
10015dec:	e7ec      	b.n	10015dc8 <__sprint_r.part.0+0x44>
10015dee:	f001 fd51 	bl	10017894 <__sfvwrite_r>
10015df2:	2300      	movs	r3, #0
10015df4:	e9c8 3301 	strd	r3, r3, [r8, #4]
10015df8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

10015dfc <__sprint_r>:
10015dfc:	b410      	push	{r4}
10015dfe:	6894      	ldr	r4, [r2, #8]
10015e00:	b114      	cbz	r4, 10015e08 <__sprint_r+0xc>
10015e02:	bc10      	pop	{r4}
10015e04:	f7ff bfbe 	b.w	10015d84 <__sprint_r.part.0>
10015e08:	4620      	mov	r0, r4
10015e0a:	6054      	str	r4, [r2, #4]
10015e0c:	bc10      	pop	{r4}
10015e0e:	4770      	bx	lr

10015e10 <_vfiprintf_r>:
10015e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015e14:	b0c7      	sub	sp, #284	@ 0x11c
10015e16:	af16      	add	r7, sp, #88	@ 0x58
10015e18:	4683      	mov	fp, r0
10015e1a:	9103      	str	r1, [sp, #12]
10015e1c:	9206      	str	r2, [sp, #24]
10015e1e:	2100      	movs	r1, #0
10015e20:	2208      	movs	r2, #8
10015e22:	4638      	mov	r0, r7
10015e24:	461c      	mov	r4, r3
10015e26:	930a      	str	r3, [sp, #40]	@ 0x28
10015e28:	f002 f822 	bl	10017e70 <memset>
10015e2c:	f1bb 0f00 	cmp.w	fp, #0
10015e30:	d004      	beq.n	10015e3c <_vfiprintf_r+0x2c>
10015e32:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
10015e36:	2b00      	cmp	r3, #0
10015e38:	f000 86bb 	beq.w	10016bb2 <_vfiprintf_r+0xda2>
10015e3c:	9a03      	ldr	r2, [sp, #12]
10015e3e:	6e53      	ldr	r3, [r2, #100]	@ 0x64
10015e40:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
10015e44:	07db      	lsls	r3, r3, #31
10015e46:	d402      	bmi.n	10015e4e <_vfiprintf_r+0x3e>
10015e48:	0596      	lsls	r6, r2, #22
10015e4a:	f140 859f 	bpl.w	1001698c <_vfiprintf_r+0xb7c>
10015e4e:	0495      	lsls	r5, r2, #18
10015e50:	d407      	bmi.n	10015e62 <_vfiprintf_r+0x52>
10015e52:	9903      	ldr	r1, [sp, #12]
10015e54:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10015e56:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10015e5a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
10015e5e:	818a      	strh	r2, [r1, #12]
10015e60:	664b      	str	r3, [r1, #100]	@ 0x64
10015e62:	0710      	lsls	r0, r2, #28
10015e64:	f140 80c9 	bpl.w	10015ffa <_vfiprintf_r+0x1ea>
10015e68:	9b03      	ldr	r3, [sp, #12]
10015e6a:	691b      	ldr	r3, [r3, #16]
10015e6c:	2b00      	cmp	r3, #0
10015e6e:	f000 80c4 	beq.w	10015ffa <_vfiprintf_r+0x1ea>
10015e72:	f002 031a 	and.w	r3, r2, #26
10015e76:	2b0a      	cmp	r3, #10
10015e78:	f000 80ce 	beq.w	10016018 <_vfiprintf_r+0x208>
10015e7c:	2300      	movs	r3, #0
10015e7e:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10015e82:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
10015e86:	aa1d      	add	r2, sp, #116	@ 0x74
10015e88:	f8df a260 	ldr.w	sl, [pc, #608]	@ 100160ec <_vfiprintf_r+0x2dc>
10015e8c:	930d      	str	r3, [sp, #52]	@ 0x34
10015e8e:	921a      	str	r2, [sp, #104]	@ 0x68
10015e90:	4691      	mov	r9, r2
10015e92:	9310      	str	r3, [sp, #64]	@ 0x40
10015e94:	9307      	str	r3, [sp, #28]
10015e96:	9d06      	ldr	r5, [sp, #24]
10015e98:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
10015e9c:	f002 f890 	bl	10017fc0 <__locale_mb_cur_max>
10015ea0:	462a      	mov	r2, r5
10015ea2:	4603      	mov	r3, r0
10015ea4:	a914      	add	r1, sp, #80	@ 0x50
10015ea6:	9700      	str	r7, [sp, #0]
10015ea8:	4658      	mov	r0, fp
10015eaa:	47a0      	blx	r4
10015eac:	2800      	cmp	r0, #0
10015eae:	f000 80d2 	beq.w	10016056 <_vfiprintf_r+0x246>
10015eb2:	f2c0 80c8 	blt.w	10016046 <_vfiprintf_r+0x236>
10015eb6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
10015eb8:	2a25      	cmp	r2, #37	@ 0x25
10015eba:	4603      	mov	r3, r0
10015ebc:	d001      	beq.n	10015ec2 <_vfiprintf_r+0xb2>
10015ebe:	441d      	add	r5, r3
10015ec0:	e7ea      	b.n	10015e98 <_vfiprintf_r+0x88>
10015ec2:	9b06      	ldr	r3, [sp, #24]
10015ec4:	1aee      	subs	r6, r5, r3
10015ec6:	4604      	mov	r4, r0
10015ec8:	f040 80c9 	bne.w	1001605e <_vfiprintf_r+0x24e>
10015ecc:	2300      	movs	r3, #0
10015ece:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10015ed2:	786a      	ldrb	r2, [r5, #1]
10015ed4:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10015ed8:	9308      	str	r3, [sp, #32]
10015eda:	1c6c      	adds	r4, r5, #1
10015edc:	9105      	str	r1, [sp, #20]
10015ede:	9302      	str	r3, [sp, #8]
10015ee0:	3401      	adds	r4, #1
10015ee2:	f1a2 0320 	sub.w	r3, r2, #32
10015ee6:	2b5a      	cmp	r3, #90	@ 0x5a
10015ee8:	f200 8102 	bhi.w	100160f0 <_vfiprintf_r+0x2e0>
10015eec:	e8df f013 	tbh	[pc, r3, lsl #1]
10015ef0:	01000303 	.word	0x01000303
10015ef4:	02fd0100 	.word	0x02fd0100
10015ef8:	01000100 	.word	0x01000100
10015efc:	006b0100 	.word	0x006b0100
10015f00:	01000100 	.word	0x01000100
10015f04:	032d0218 	.word	0x032d0218
10015f08:	02230100 	.word	0x02230100
10015f0c:	01000313 	.word	0x01000313
10015f10:	005b030d 	.word	0x005b030d
10015f14:	005b005b 	.word	0x005b005b
10015f18:	005b005b 	.word	0x005b005b
10015f1c:	005b005b 	.word	0x005b005b
10015f20:	005b005b 	.word	0x005b005b
10015f24:	01000100 	.word	0x01000100
10015f28:	01000100 	.word	0x01000100
10015f2c:	01000100 	.word	0x01000100
10015f30:	01000100 	.word	0x01000100
10015f34:	01ce0100 	.word	0x01ce0100
10015f38:	0100025d 	.word	0x0100025d
10015f3c:	01000100 	.word	0x01000100
10015f40:	01000100 	.word	0x01000100
10015f44:	01000100 	.word	0x01000100
10015f48:	01000100 	.word	0x01000100
10015f4c:	02290100 	.word	0x02290100
10015f50:	01000100 	.word	0x01000100
10015f54:	01a60100 	.word	0x01a60100
10015f58:	02760100 	.word	0x02760100
10015f5c:	01000100 	.word	0x01000100
10015f60:	0100058e 	.word	0x0100058e
10015f64:	01000100 	.word	0x01000100
10015f68:	01000100 	.word	0x01000100
10015f6c:	01000100 	.word	0x01000100
10015f70:	01000100 	.word	0x01000100
10015f74:	01ce0100 	.word	0x01ce0100
10015f78:	010001f3 	.word	0x010001f3
10015f7c:	01000100 	.word	0x01000100
10015f80:	01f302c4 	.word	0x01f302c4
10015f84:	0100007f 	.word	0x0100007f
10015f88:	01000332 	.word	0x01000332
10015f8c:	058b02ee 	.word	0x058b02ee
10015f90:	007f02cd 	.word	0x007f02cd
10015f94:	01a60100 	.word	0x01a60100
10015f98:	0588007d 	.word	0x0588007d
10015f9c:	01000100 	.word	0x01000100
10015fa0:	010005b1 	.word	0x010005b1
10015fa4:	007d      	.short	0x007d
10015fa6:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10015faa:	2200      	movs	r2, #0
10015fac:	4611      	mov	r1, r2
10015fae:	f814 2b01 	ldrb.w	r2, [r4], #1
10015fb2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10015fb6:	eb03 0141 	add.w	r1, r3, r1, lsl #1
10015fba:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10015fbe:	2b09      	cmp	r3, #9
10015fc0:	d9f5      	bls.n	10015fae <_vfiprintf_r+0x19e>
10015fc2:	9108      	str	r1, [sp, #32]
10015fc4:	e78d      	b.n	10015ee2 <_vfiprintf_r+0xd2>
10015fc6:	4658      	mov	r0, fp
10015fc8:	f002 f800 	bl	10017fcc <_localeconv_r>
10015fcc:	6843      	ldr	r3, [r0, #4]
10015fce:	9310      	str	r3, [sp, #64]	@ 0x40
10015fd0:	4618      	mov	r0, r3
10015fd2:	f002 fb35 	bl	10018640 <strlen>
10015fd6:	900f      	str	r0, [sp, #60]	@ 0x3c
10015fd8:	4605      	mov	r5, r0
10015fda:	4658      	mov	r0, fp
10015fdc:	f001 fff6 	bl	10017fcc <_localeconv_r>
10015fe0:	6883      	ldr	r3, [r0, #8]
10015fe2:	930e      	str	r3, [sp, #56]	@ 0x38
10015fe4:	2d00      	cmp	r5, #0
10015fe6:	f040 84e5 	bne.w	100169b4 <_vfiprintf_r+0xba4>
10015fea:	7822      	ldrb	r2, [r4, #0]
10015fec:	e778      	b.n	10015ee0 <_vfiprintf_r+0xd0>
10015fee:	9b02      	ldr	r3, [sp, #8]
10015ff0:	7822      	ldrb	r2, [r4, #0]
10015ff2:	f043 0320 	orr.w	r3, r3, #32
10015ff6:	9302      	str	r3, [sp, #8]
10015ff8:	e772      	b.n	10015ee0 <_vfiprintf_r+0xd0>
10015ffa:	9d03      	ldr	r5, [sp, #12]
10015ffc:	4658      	mov	r0, fp
10015ffe:	4629      	mov	r1, r5
10016000:	f001 fde8 	bl	10017bd4 <__swsetup_r>
10016004:	2800      	cmp	r0, #0
10016006:	f040 86a6 	bne.w	10016d56 <_vfiprintf_r+0xf46>
1001600a:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
1001600e:	f002 031a 	and.w	r3, r2, #26
10016012:	2b0a      	cmp	r3, #10
10016014:	f47f af32 	bne.w	10015e7c <_vfiprintf_r+0x6c>
10016018:	9903      	ldr	r1, [sp, #12]
1001601a:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
1001601e:	2b00      	cmp	r3, #0
10016020:	f6ff af2c 	blt.w	10015e7c <_vfiprintf_r+0x6c>
10016024:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10016026:	07db      	lsls	r3, r3, #31
10016028:	d402      	bmi.n	10016030 <_vfiprintf_r+0x220>
1001602a:	0597      	lsls	r7, r2, #22
1001602c:	f140 865e 	bpl.w	10016cec <_vfiprintf_r+0xedc>
10016030:	9a06      	ldr	r2, [sp, #24]
10016032:	9903      	ldr	r1, [sp, #12]
10016034:	4623      	mov	r3, r4
10016036:	4658      	mov	r0, fp
10016038:	f000 fec0 	bl	10016dbc <__sbprintf>
1001603c:	9007      	str	r0, [sp, #28]
1001603e:	9807      	ldr	r0, [sp, #28]
10016040:	b047      	add	sp, #284	@ 0x11c
10016042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016046:	2208      	movs	r2, #8
10016048:	2100      	movs	r1, #0
1001604a:	4638      	mov	r0, r7
1001604c:	f001 ff10 	bl	10017e70 <memset>
10016050:	2301      	movs	r3, #1
10016052:	441d      	add	r5, r3
10016054:	e720      	b.n	10015e98 <_vfiprintf_r+0x88>
10016056:	9b06      	ldr	r3, [sp, #24]
10016058:	1aee      	subs	r6, r5, r3
1001605a:	4604      	mov	r4, r0
1001605c:	d012      	beq.n	10016084 <_vfiprintf_r+0x274>
1001605e:	9b06      	ldr	r3, [sp, #24]
10016060:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10016062:	e9c9 3600 	strd	r3, r6, [r9]
10016066:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10016068:	3301      	adds	r3, #1
1001606a:	4432      	add	r2, r6
1001606c:	2b07      	cmp	r3, #7
1001606e:	921c      	str	r2, [sp, #112]	@ 0x70
10016070:	931b      	str	r3, [sp, #108]	@ 0x6c
10016072:	dc11      	bgt.n	10016098 <_vfiprintf_r+0x288>
10016074:	f109 0908 	add.w	r9, r9, #8
10016078:	9b07      	ldr	r3, [sp, #28]
1001607a:	4433      	add	r3, r6
1001607c:	9307      	str	r3, [sp, #28]
1001607e:	2c00      	cmp	r4, #0
10016080:	f47f af24 	bne.w	10015ecc <_vfiprintf_r+0xbc>
10016084:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10016086:	2b00      	cmp	r3, #0
10016088:	f040 8650 	bne.w	10016d2c <_vfiprintf_r+0xf1c>
1001608c:	9b03      	ldr	r3, [sp, #12]
1001608e:	2200      	movs	r2, #0
10016090:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10016094:	921b      	str	r2, [sp, #108]	@ 0x6c
10016096:	e01c      	b.n	100160d2 <_vfiprintf_r+0x2c2>
10016098:	2a00      	cmp	r2, #0
1001609a:	f000 842f 	beq.w	100168fc <_vfiprintf_r+0xaec>
1001609e:	9903      	ldr	r1, [sp, #12]
100160a0:	aa1a      	add	r2, sp, #104	@ 0x68
100160a2:	4658      	mov	r0, fp
100160a4:	f7ff fe6e 	bl	10015d84 <__sprint_r.part.0>
100160a8:	b980      	cbnz	r0, 100160cc <_vfiprintf_r+0x2bc>
100160aa:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100160ae:	e7e3      	b.n	10016078 <_vfiprintf_r+0x268>
100160b0:	9903      	ldr	r1, [sp, #12]
100160b2:	aa1a      	add	r2, sp, #104	@ 0x68
100160b4:	4658      	mov	r0, fp
100160b6:	f7ff fe65 	bl	10015d84 <__sprint_r.part.0>
100160ba:	2800      	cmp	r0, #0
100160bc:	f000 80a9 	beq.w	10016212 <_vfiprintf_r+0x402>
100160c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100160c2:	b11b      	cbz	r3, 100160cc <_vfiprintf_r+0x2bc>
100160c4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
100160c6:	4658      	mov	r0, fp
100160c8:	f003 fbba 	bl	10019840 <_free_r>
100160cc:	9b03      	ldr	r3, [sp, #12]
100160ce:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100160d2:	9a03      	ldr	r2, [sp, #12]
100160d4:	6e52      	ldr	r2, [r2, #100]	@ 0x64
100160d6:	07d1      	lsls	r1, r2, #31
100160d8:	f140 80a6 	bpl.w	10016228 <_vfiprintf_r+0x418>
100160dc:	065b      	lsls	r3, r3, #25
100160de:	f100 8646 	bmi.w	10016d6e <_vfiprintf_r+0xf5e>
100160e2:	9807      	ldr	r0, [sp, #28]
100160e4:	b047      	add	sp, #284	@ 0x11c
100160e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100160ea:	bf00      	nop
100160ec:	2000042c 	.word	0x2000042c
100160f0:	9406      	str	r4, [sp, #24]
100160f2:	2a00      	cmp	r2, #0
100160f4:	d0c6      	beq.n	10016084 <_vfiprintf_r+0x274>
100160f6:	2300      	movs	r3, #0
100160f8:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100160fc:	2301      	movs	r3, #1
100160fe:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
10016102:	9304      	str	r3, [sp, #16]
10016104:	9309      	str	r3, [sp, #36]	@ 0x24
10016106:	ac2d      	add	r4, sp, #180	@ 0xb4
10016108:	2300      	movs	r3, #0
1001610a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001610c:	9305      	str	r3, [sp, #20]
1001610e:	9b02      	ldr	r3, [sp, #8]
10016110:	f013 0302 	ands.w	r3, r3, #2
10016114:	d002      	beq.n	1001611c <_vfiprintf_r+0x30c>
10016116:	9a04      	ldr	r2, [sp, #16]
10016118:	3202      	adds	r2, #2
1001611a:	9204      	str	r2, [sp, #16]
1001611c:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10016120:	9d02      	ldr	r5, [sp, #8]
10016122:	1c50      	adds	r0, r2, #1
10016124:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
10016128:	4601      	mov	r1, r0
1001612a:	950c      	str	r5, [sp, #48]	@ 0x30
1001612c:	d105      	bne.n	1001613a <_vfiprintf_r+0x32a>
1001612e:	9d08      	ldr	r5, [sp, #32]
10016130:	9e04      	ldr	r6, [sp, #16]
10016132:	1bad      	subs	r5, r5, r6
10016134:	2d00      	cmp	r5, #0
10016136:	f300 8331 	bgt.w	1001679c <_vfiprintf_r+0x98c>
1001613a:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
1001613e:	b188      	cbz	r0, 10016164 <_vfiprintf_r+0x354>
10016140:	2201      	movs	r2, #1
10016142:	f10c 0c01 	add.w	ip, ip, #1
10016146:	f8c9 2004 	str.w	r2, [r9, #4]
1001614a:	2907      	cmp	r1, #7
1001614c:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
10016150:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10016154:	f8c9 2000 	str.w	r2, [r9]
10016158:	f300 82e1 	bgt.w	1001671e <_vfiprintf_r+0x90e>
1001615c:	460a      	mov	r2, r1
1001615e:	f109 0908 	add.w	r9, r9, #8
10016162:	3101      	adds	r1, #1
10016164:	b1eb      	cbz	r3, 100161a2 <_vfiprintf_r+0x392>
10016166:	ab13      	add	r3, sp, #76	@ 0x4c
10016168:	f10c 0c02 	add.w	ip, ip, #2
1001616c:	f8c9 3000 	str.w	r3, [r9]
10016170:	2907      	cmp	r1, #7
10016172:	f04f 0302 	mov.w	r3, #2
10016176:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001617a:	f8c9 3004 	str.w	r3, [r9, #4]
1001617e:	f340 82ec 	ble.w	1001675a <_vfiprintf_r+0x94a>
10016182:	f1bc 0f00 	cmp.w	ip, #0
10016186:	f000 83da 	beq.w	1001693e <_vfiprintf_r+0xb2e>
1001618a:	9903      	ldr	r1, [sp, #12]
1001618c:	aa1a      	add	r2, sp, #104	@ 0x68
1001618e:	4658      	mov	r0, fp
10016190:	f7ff fdf8 	bl	10015d84 <__sprint_r.part.0>
10016194:	2800      	cmp	r0, #0
10016196:	d193      	bne.n	100160c0 <_vfiprintf_r+0x2b0>
10016198:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001619c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100161a0:	1c51      	adds	r1, r2, #1
100161a2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100161a4:	2b80      	cmp	r3, #128	@ 0x80
100161a6:	f000 8213 	beq.w	100165d0 <_vfiprintf_r+0x7c0>
100161aa:	9b05      	ldr	r3, [sp, #20]
100161ac:	9809      	ldr	r0, [sp, #36]	@ 0x24
100161ae:	1a1d      	subs	r5, r3, r0
100161b0:	2d00      	cmp	r5, #0
100161b2:	f300 8268 	bgt.w	10016686 <_vfiprintf_r+0x876>
100161b6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100161b8:	f8c9 4000 	str.w	r4, [r9]
100161bc:	eb02 030c 	add.w	r3, r2, ip
100161c0:	2907      	cmp	r1, #7
100161c2:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
100161c6:	f8c9 2004 	str.w	r2, [r9, #4]
100161ca:	f340 81fe 	ble.w	100165ca <_vfiprintf_r+0x7ba>
100161ce:	2b00      	cmp	r3, #0
100161d0:	f000 832b 	beq.w	1001682a <_vfiprintf_r+0xa1a>
100161d4:	9903      	ldr	r1, [sp, #12]
100161d6:	aa1a      	add	r2, sp, #104	@ 0x68
100161d8:	4658      	mov	r0, fp
100161da:	f7ff fdd3 	bl	10015d84 <__sprint_r.part.0>
100161de:	2800      	cmp	r0, #0
100161e0:	f47f af6e 	bne.w	100160c0 <_vfiprintf_r+0x2b0>
100161e4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100161e6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100161ea:	9a02      	ldr	r2, [sp, #8]
100161ec:	0750      	lsls	r0, r2, #29
100161ee:	d505      	bpl.n	100161fc <_vfiprintf_r+0x3ec>
100161f0:	9a08      	ldr	r2, [sp, #32]
100161f2:	9904      	ldr	r1, [sp, #16]
100161f4:	1a54      	subs	r4, r2, r1
100161f6:	2c00      	cmp	r4, #0
100161f8:	f300 8322 	bgt.w	10016840 <_vfiprintf_r+0xa30>
100161fc:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
10016200:	9804      	ldr	r0, [sp, #16]
10016202:	4281      	cmp	r1, r0
10016204:	bfac      	ite	ge
10016206:	1852      	addge	r2, r2, r1
10016208:	1812      	addlt	r2, r2, r0
1001620a:	9207      	str	r2, [sp, #28]
1001620c:	2b00      	cmp	r3, #0
1001620e:	f47f af4f 	bne.w	100160b0 <_vfiprintf_r+0x2a0>
10016212:	2300      	movs	r3, #0
10016214:	931b      	str	r3, [sp, #108]	@ 0x6c
10016216:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016218:	b11b      	cbz	r3, 10016222 <_vfiprintf_r+0x412>
1001621a:	4619      	mov	r1, r3
1001621c:	4658      	mov	r0, fp
1001621e:	f003 fb0f 	bl	10019840 <_free_r>
10016222:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016226:	e636      	b.n	10015e96 <_vfiprintf_r+0x86>
10016228:	059a      	lsls	r2, r3, #22
1001622a:	f53f af57 	bmi.w	100160dc <_vfiprintf_r+0x2cc>
1001622e:	9c03      	ldr	r4, [sp, #12]
10016230:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016232:	f002 f903 	bl	1001843c <__retarget_lock_release_recursive>
10016236:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001623a:	e74f      	b.n	100160dc <_vfiprintf_r+0x2cc>
1001623c:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001623e:	9406      	str	r4, [sp, #24]
10016240:	f856 4b04 	ldr.w	r4, [r6], #4
10016244:	2300      	movs	r3, #0
10016246:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001624a:	2c00      	cmp	r4, #0
1001624c:	f000 84c9 	beq.w	10016be2 <_vfiprintf_r+0xdd2>
10016250:	2a53      	cmp	r2, #83	@ 0x53
10016252:	f000 8421 	beq.w	10016a98 <_vfiprintf_r+0xc88>
10016256:	9b02      	ldr	r3, [sp, #8]
10016258:	f013 0510 	ands.w	r5, r3, #16
1001625c:	f040 841c 	bne.w	10016a98 <_vfiprintf_r+0xc88>
10016260:	9b05      	ldr	r3, [sp, #20]
10016262:	1c5a      	adds	r2, r3, #1
10016264:	f000 854e 	beq.w	10016d04 <_vfiprintf_r+0xef4>
10016268:	461a      	mov	r2, r3
1001626a:	4629      	mov	r1, r5
1001626c:	4620      	mov	r0, r4
1001626e:	f002 f8e7 	bl	10018440 <memchr>
10016272:	900b      	str	r0, [sp, #44]	@ 0x2c
10016274:	2800      	cmp	r0, #0
10016276:	f000 853e 	beq.w	10016cf6 <_vfiprintf_r+0xee6>
1001627a:	1b03      	subs	r3, r0, r4
1001627c:	9309      	str	r3, [sp, #36]	@ 0x24
1001627e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10016282:	9505      	str	r5, [sp, #20]
10016284:	960a      	str	r6, [sp, #40]	@ 0x28
10016286:	9304      	str	r3, [sp, #16]
10016288:	950b      	str	r5, [sp, #44]	@ 0x2c
1001628a:	e18d      	b.n	100165a8 <_vfiprintf_r+0x798>
1001628c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001628e:	9406      	str	r4, [sp, #24]
10016290:	2a43      	cmp	r2, #67	@ 0x43
10016292:	f103 0504 	add.w	r5, r3, #4
10016296:	d003      	beq.n	100162a0 <_vfiprintf_r+0x490>
10016298:	9b02      	ldr	r3, [sp, #8]
1001629a:	06de      	lsls	r6, r3, #27
1001629c:	f140 83e4 	bpl.w	10016a68 <_vfiprintf_r+0xc58>
100162a0:	2208      	movs	r2, #8
100162a2:	2100      	movs	r1, #0
100162a4:	a818      	add	r0, sp, #96	@ 0x60
100162a6:	f001 fde3 	bl	10017e70 <memset>
100162aa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100162ac:	ac2d      	add	r4, sp, #180	@ 0xb4
100162ae:	681a      	ldr	r2, [r3, #0]
100162b0:	4621      	mov	r1, r4
100162b2:	ab18      	add	r3, sp, #96	@ 0x60
100162b4:	4658      	mov	r0, fp
100162b6:	f002 fa2f 	bl	10018718 <_wcrtomb_r>
100162ba:	4603      	mov	r3, r0
100162bc:	3301      	adds	r3, #1
100162be:	9009      	str	r0, [sp, #36]	@ 0x24
100162c0:	f000 8541 	beq.w	10016d46 <_vfiprintf_r+0xf36>
100162c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100162c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
100162ca:	9304      	str	r3, [sp, #16]
100162cc:	2300      	movs	r3, #0
100162ce:	950a      	str	r5, [sp, #40]	@ 0x28
100162d0:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100162d4:	e718      	b.n	10016108 <_vfiprintf_r+0x2f8>
100162d6:	9b02      	ldr	r3, [sp, #8]
100162d8:	9406      	str	r4, [sp, #24]
100162da:	069c      	lsls	r4, r3, #26
100162dc:	d56d      	bpl.n	100163ba <_vfiprintf_r+0x5aa>
100162de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100162e0:	3307      	adds	r3, #7
100162e2:	f023 0307 	bic.w	r3, r3, #7
100162e6:	4619      	mov	r1, r3
100162e8:	685a      	ldr	r2, [r3, #4]
100162ea:	f851 3b08 	ldr.w	r3, [r1], #8
100162ee:	910a      	str	r1, [sp, #40]	@ 0x28
100162f0:	4611      	mov	r1, r2
100162f2:	2a00      	cmp	r2, #0
100162f4:	f2c0 8137 	blt.w	10016566 <_vfiprintf_r+0x756>
100162f8:	9a05      	ldr	r2, [sp, #20]
100162fa:	3201      	adds	r2, #1
100162fc:	f000 8140 	beq.w	10016580 <_vfiprintf_r+0x770>
10016300:	9a02      	ldr	r2, [sp, #8]
10016302:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
10016306:	9202      	str	r2, [sp, #8]
10016308:	ea53 0201 	orrs.w	r2, r3, r1
1001630c:	f040 8138 	bne.w	10016580 <_vfiprintf_r+0x770>
10016310:	9b05      	ldr	r3, [sp, #20]
10016312:	2b00      	cmp	r3, #0
10016314:	f040 8508 	bne.w	10016d28 <_vfiprintf_r+0xf18>
10016318:	9304      	str	r3, [sp, #16]
1001631a:	9309      	str	r3, [sp, #36]	@ 0x24
1001631c:	ac46      	add	r4, sp, #280	@ 0x118
1001631e:	e141      	b.n	100165a4 <_vfiprintf_r+0x794>
10016320:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016322:	f853 2b04 	ldr.w	r2, [r3], #4
10016326:	9208      	str	r2, [sp, #32]
10016328:	2a00      	cmp	r2, #0
1001632a:	f280 8327 	bge.w	1001697c <_vfiprintf_r+0xb6c>
1001632e:	9a08      	ldr	r2, [sp, #32]
10016330:	930a      	str	r3, [sp, #40]	@ 0x28
10016332:	4252      	negs	r2, r2
10016334:	9208      	str	r2, [sp, #32]
10016336:	9b02      	ldr	r3, [sp, #8]
10016338:	7822      	ldrb	r2, [r4, #0]
1001633a:	f043 0304 	orr.w	r3, r3, #4
1001633e:	9302      	str	r3, [sp, #8]
10016340:	e5ce      	b.n	10015ee0 <_vfiprintf_r+0xd0>
10016342:	9b02      	ldr	r3, [sp, #8]
10016344:	9406      	str	r4, [sp, #24]
10016346:	f043 0210 	orr.w	r2, r3, #16
1001634a:	f012 0120 	ands.w	r1, r2, #32
1001634e:	f000 82e7 	beq.w	10016920 <_vfiprintf_r+0xb10>
10016352:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016354:	3307      	adds	r3, #7
10016356:	f023 0307 	bic.w	r3, r3, #7
1001635a:	4618      	mov	r0, r3
1001635c:	6859      	ldr	r1, [r3, #4]
1001635e:	f850 3b08 	ldr.w	r3, [r0], #8
10016362:	900a      	str	r0, [sp, #40]	@ 0x28
10016364:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
10016368:	9402      	str	r4, [sp, #8]
1001636a:	9c05      	ldr	r4, [sp, #20]
1001636c:	2000      	movs	r0, #0
1001636e:	3401      	adds	r4, #1
10016370:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
10016374:	d05d      	beq.n	10016432 <_vfiprintf_r+0x622>
10016376:	ea53 0401 	orrs.w	r4, r3, r1
1001637a:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
1001637e:	f040 8414 	bne.w	10016baa <_vfiprintf_r+0xd9a>
10016382:	9c02      	ldr	r4, [sp, #8]
10016384:	9202      	str	r2, [sp, #8]
10016386:	9b05      	ldr	r3, [sp, #20]
10016388:	2b00      	cmp	r3, #0
1001638a:	d14a      	bne.n	10016422 <_vfiprintf_r+0x612>
1001638c:	2800      	cmp	r0, #0
1001638e:	f040 82f0 	bne.w	10016972 <_vfiprintf_r+0xb62>
10016392:	f014 0201 	ands.w	r2, r4, #1
10016396:	9209      	str	r2, [sp, #36]	@ 0x24
10016398:	f000 82f4 	beq.w	10016984 <_vfiprintf_r+0xb74>
1001639c:	2330      	movs	r3, #48	@ 0x30
1001639e:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
100163a2:	9204      	str	r2, [sp, #16]
100163a4:	f20d 1417 	addw	r4, sp, #279	@ 0x117
100163a8:	e0fc      	b.n	100165a4 <_vfiprintf_r+0x794>
100163aa:	9b02      	ldr	r3, [sp, #8]
100163ac:	9406      	str	r4, [sp, #24]
100163ae:	f043 0310 	orr.w	r3, r3, #16
100163b2:	9302      	str	r3, [sp, #8]
100163b4:	9b02      	ldr	r3, [sp, #8]
100163b6:	069c      	lsls	r4, r3, #26
100163b8:	d491      	bmi.n	100162de <_vfiprintf_r+0x4ce>
100163ba:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100163bc:	f852 3b04 	ldr.w	r3, [r2], #4
100163c0:	920a      	str	r2, [sp, #40]	@ 0x28
100163c2:	9a02      	ldr	r2, [sp, #8]
100163c4:	06d0      	lsls	r0, r2, #27
100163c6:	f100 82f2 	bmi.w	100169ae <_vfiprintf_r+0xb9e>
100163ca:	9a02      	ldr	r2, [sp, #8]
100163cc:	0651      	lsls	r1, r2, #25
100163ce:	f140 82ea 	bpl.w	100169a6 <_vfiprintf_r+0xb96>
100163d2:	f343 31c0 	sbfx	r1, r3, #15, #1
100163d6:	460a      	mov	r2, r1
100163d8:	b21b      	sxth	r3, r3
100163da:	e78a      	b.n	100162f2 <_vfiprintf_r+0x4e2>
100163dc:	9b02      	ldr	r3, [sp, #8]
100163de:	9406      	str	r4, [sp, #24]
100163e0:	f043 0410 	orr.w	r4, r3, #16
100163e4:	f014 0120 	ands.w	r1, r4, #32
100163e8:	f000 828b 	beq.w	10016902 <_vfiprintf_r+0xaf2>
100163ec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100163ee:	3307      	adds	r3, #7
100163f0:	f023 0307 	bic.w	r3, r3, #7
100163f4:	461a      	mov	r2, r3
100163f6:	6859      	ldr	r1, [r3, #4]
100163f8:	f852 3b08 	ldr.w	r3, [r2], #8
100163fc:	920a      	str	r2, [sp, #40]	@ 0x28
100163fe:	2200      	movs	r2, #0
10016400:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
10016404:	9a05      	ldr	r2, [sp, #20]
10016406:	3201      	adds	r2, #1
10016408:	f000 83d1 	beq.w	10016bae <_vfiprintf_r+0xd9e>
1001640c:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
10016410:	9202      	str	r2, [sp, #8]
10016412:	ea53 0201 	orrs.w	r2, r3, r1
10016416:	f040 80b3 	bne.w	10016580 <_vfiprintf_r+0x770>
1001641a:	9b05      	ldr	r3, [sp, #20]
1001641c:	2001      	movs	r0, #1
1001641e:	2b00      	cmp	r3, #0
10016420:	d0b4      	beq.n	1001638c <_vfiprintf_r+0x57c>
10016422:	2801      	cmp	r0, #1
10016424:	f000 8480 	beq.w	10016d28 <_vfiprintf_r+0xf18>
10016428:	2300      	movs	r3, #0
1001642a:	2802      	cmp	r0, #2
1001642c:	4619      	mov	r1, r3
1001642e:	f000 8199 	beq.w	10016764 <_vfiprintf_r+0x954>
10016432:	ac46      	add	r4, sp, #280	@ 0x118
10016434:	f003 0207 	and.w	r2, r3, #7
10016438:	08db      	lsrs	r3, r3, #3
1001643a:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
1001643e:	08c9      	lsrs	r1, r1, #3
10016440:	3230      	adds	r2, #48	@ 0x30
10016442:	ea53 0501 	orrs.w	r5, r3, r1
10016446:	4620      	mov	r0, r4
10016448:	f804 2d01 	strb.w	r2, [r4, #-1]!
1001644c:	d1f2      	bne.n	10016434 <_vfiprintf_r+0x624>
1001644e:	9b02      	ldr	r3, [sp, #8]
10016450:	07dd      	lsls	r5, r3, #31
10016452:	f140 8195 	bpl.w	10016780 <_vfiprintf_r+0x970>
10016456:	2a30      	cmp	r2, #48	@ 0x30
10016458:	f000 8192 	beq.w	10016780 <_vfiprintf_r+0x970>
1001645c:	2330      	movs	r3, #48	@ 0x30
1001645e:	9a05      	ldr	r2, [sp, #20]
10016460:	f804 3c01 	strb.w	r3, [r4, #-1]
10016464:	3802      	subs	r0, #2
10016466:	ab46      	add	r3, sp, #280	@ 0x118
10016468:	1a1b      	subs	r3, r3, r0
1001646a:	429a      	cmp	r2, r3
1001646c:	bfb8      	it	lt
1001646e:	461a      	movlt	r2, r3
10016470:	9309      	str	r3, [sp, #36]	@ 0x24
10016472:	4604      	mov	r4, r0
10016474:	9204      	str	r2, [sp, #16]
10016476:	e095      	b.n	100165a4 <_vfiprintf_r+0x794>
10016478:	7822      	ldrb	r2, [r4, #0]
1001647a:	9b02      	ldr	r3, [sp, #8]
1001647c:	2a68      	cmp	r2, #104	@ 0x68
1001647e:	f000 839d 	beq.w	10016bbc <_vfiprintf_r+0xdac>
10016482:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016486:	9302      	str	r3, [sp, #8]
10016488:	e52a      	b.n	10015ee0 <_vfiprintf_r+0xd0>
1001648a:	9b02      	ldr	r3, [sp, #8]
1001648c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001648e:	9406      	str	r4, [sp, #24]
10016490:	f043 0302 	orr.w	r3, r3, #2
10016494:	9302      	str	r3, [sp, #8]
10016496:	f852 3b04 	ldr.w	r3, [r2], #4
1001649a:	920a      	str	r2, [sp, #40]	@ 0x28
1001649c:	f647 0230 	movw	r2, #30768	@ 0x7830
100164a0:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
100164a4:	4abb      	ldr	r2, [pc, #748]	@ (10016794 <_vfiprintf_r+0x984>)
100164a6:	920d      	str	r2, [sp, #52]	@ 0x34
100164a8:	2100      	movs	r1, #0
100164aa:	2200      	movs	r2, #0
100164ac:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
100164b0:	9a05      	ldr	r2, [sp, #20]
100164b2:	3201      	adds	r2, #1
100164b4:	f000 8156 	beq.w	10016764 <_vfiprintf_r+0x954>
100164b8:	9c02      	ldr	r4, [sp, #8]
100164ba:	ea53 0001 	orrs.w	r0, r3, r1
100164be:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
100164c2:	9202      	str	r2, [sp, #8]
100164c4:	f040 814e 	bne.w	10016764 <_vfiprintf_r+0x954>
100164c8:	2002      	movs	r0, #2
100164ca:	e75c      	b.n	10016386 <_vfiprintf_r+0x576>
100164cc:	9b02      	ldr	r3, [sp, #8]
100164ce:	9406      	str	r4, [sp, #24]
100164d0:	069e      	lsls	r6, r3, #26
100164d2:	f140 827e 	bpl.w	100169d2 <_vfiprintf_r+0xbc2>
100164d6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100164d8:	9a07      	ldr	r2, [sp, #28]
100164da:	681b      	ldr	r3, [r3, #0]
100164dc:	601a      	str	r2, [r3, #0]
100164de:	17d2      	asrs	r2, r2, #31
100164e0:	605a      	str	r2, [r3, #4]
100164e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100164e4:	3304      	adds	r3, #4
100164e6:	930a      	str	r3, [sp, #40]	@ 0x28
100164e8:	e4d5      	b.n	10015e96 <_vfiprintf_r+0x86>
100164ea:	9b02      	ldr	r3, [sp, #8]
100164ec:	7822      	ldrb	r2, [r4, #0]
100164ee:	f043 0301 	orr.w	r3, r3, #1
100164f2:	9302      	str	r3, [sp, #8]
100164f4:	e4f4      	b.n	10015ee0 <_vfiprintf_r+0xd0>
100164f6:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
100164fa:	7822      	ldrb	r2, [r4, #0]
100164fc:	2b00      	cmp	r3, #0
100164fe:	f47f acef 	bne.w	10015ee0 <_vfiprintf_r+0xd0>
10016502:	2320      	movs	r3, #32
10016504:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10016508:	e4ea      	b.n	10015ee0 <_vfiprintf_r+0xd0>
1001650a:	9b02      	ldr	r3, [sp, #8]
1001650c:	7822      	ldrb	r2, [r4, #0]
1001650e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10016512:	9302      	str	r3, [sp, #8]
10016514:	e4e4      	b.n	10015ee0 <_vfiprintf_r+0xd0>
10016516:	4621      	mov	r1, r4
10016518:	f811 2b01 	ldrb.w	r2, [r1], #1
1001651c:	2a2a      	cmp	r2, #42	@ 0x2a
1001651e:	f000 8433 	beq.w	10016d88 <_vfiprintf_r+0xf78>
10016522:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10016526:	2b09      	cmp	r3, #9
10016528:	460c      	mov	r4, r1
1001652a:	f200 83f6 	bhi.w	10016d1a <_vfiprintf_r+0xf0a>
1001652e:	2200      	movs	r2, #0
10016530:	4611      	mov	r1, r2
10016532:	f814 2b01 	ldrb.w	r2, [r4], #1
10016536:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001653a:	eb03 0141 	add.w	r1, r3, r1, lsl #1
1001653e:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10016542:	2b09      	cmp	r3, #9
10016544:	d9f5      	bls.n	10016532 <_vfiprintf_r+0x722>
10016546:	9105      	str	r1, [sp, #20]
10016548:	e4cb      	b.n	10015ee2 <_vfiprintf_r+0xd2>
1001654a:	232b      	movs	r3, #43	@ 0x2b
1001654c:	7822      	ldrb	r2, [r4, #0]
1001654e:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10016552:	e4c5      	b.n	10015ee0 <_vfiprintf_r+0xd0>
10016554:	7822      	ldrb	r2, [r4, #0]
10016556:	9b02      	ldr	r3, [sp, #8]
10016558:	2a6c      	cmp	r2, #108	@ 0x6c
1001655a:	f000 8336 	beq.w	10016bca <_vfiprintf_r+0xdba>
1001655e:	f043 0310 	orr.w	r3, r3, #16
10016562:	9302      	str	r3, [sp, #8]
10016564:	e4bc      	b.n	10015ee0 <_vfiprintf_r+0xd0>
10016566:	222d      	movs	r2, #45	@ 0x2d
10016568:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001656c:	9a05      	ldr	r2, [sp, #20]
1001656e:	425b      	negs	r3, r3
10016570:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10016574:	3201      	adds	r2, #1
10016576:	d003      	beq.n	10016580 <_vfiprintf_r+0x770>
10016578:	9a02      	ldr	r2, [sp, #8]
1001657a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
1001657e:	9202      	str	r2, [sp, #8]
10016580:	2b0a      	cmp	r3, #10
10016582:	f171 0200 	sbcs.w	r2, r1, #0
10016586:	f080 82bd 	bcs.w	10016b04 <_vfiprintf_r+0xcf4>
1001658a:	3330      	adds	r3, #48	@ 0x30
1001658c:	b2db      	uxtb	r3, r3
1001658e:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10016592:	9b05      	ldr	r3, [sp, #20]
10016594:	2b01      	cmp	r3, #1
10016596:	bfb8      	it	lt
10016598:	2301      	movlt	r3, #1
1001659a:	9304      	str	r3, [sp, #16]
1001659c:	2301      	movs	r3, #1
1001659e:	9309      	str	r3, [sp, #36]	@ 0x24
100165a0:	f20d 1417 	addw	r4, sp, #279	@ 0x117
100165a4:	2300      	movs	r3, #0
100165a6:	930b      	str	r3, [sp, #44]	@ 0x2c
100165a8:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
100165ac:	2b00      	cmp	r3, #0
100165ae:	f43f adae 	beq.w	1001610e <_vfiprintf_r+0x2fe>
100165b2:	9b04      	ldr	r3, [sp, #16]
100165b4:	3301      	adds	r3, #1
100165b6:	9304      	str	r3, [sp, #16]
100165b8:	e5a9      	b.n	1001610e <_vfiprintf_r+0x2fe>
100165ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100165bc:	941d      	str	r4, [sp, #116]	@ 0x74
100165be:	2201      	movs	r2, #1
100165c0:	931e      	str	r3, [sp, #120]	@ 0x78
100165c2:	931c      	str	r3, [sp, #112]	@ 0x70
100165c4:	921b      	str	r2, [sp, #108]	@ 0x6c
100165c6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100165ca:	f109 0908 	add.w	r9, r9, #8
100165ce:	e60c      	b.n	100161ea <_vfiprintf_r+0x3da>
100165d0:	9b08      	ldr	r3, [sp, #32]
100165d2:	9804      	ldr	r0, [sp, #16]
100165d4:	1a1d      	subs	r5, r3, r0
100165d6:	2d00      	cmp	r5, #0
100165d8:	f77f ade7 	ble.w	100161aa <_vfiprintf_r+0x39a>
100165dc:	2d10      	cmp	r5, #16
100165de:	f340 83cb 	ble.w	10016d78 <_vfiprintf_r+0xf68>
100165e2:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 10016798 <_vfiprintf_r+0x988>
100165e6:	4643      	mov	r3, r8
100165e8:	2610      	movs	r6, #16
100165ea:	46a0      	mov	r8, r4
100165ec:	4661      	mov	r1, ip
100165ee:	461c      	mov	r4, r3
100165f0:	e007      	b.n	10016602 <_vfiprintf_r+0x7f2>
100165f2:	f102 0c02 	add.w	ip, r2, #2
100165f6:	f109 0908 	add.w	r9, r9, #8
100165fa:	4602      	mov	r2, r0
100165fc:	3d10      	subs	r5, #16
100165fe:	2d10      	cmp	r5, #16
10016600:	dd1a      	ble.n	10016638 <_vfiprintf_r+0x828>
10016602:	1c50      	adds	r0, r2, #1
10016604:	3110      	adds	r1, #16
10016606:	2807      	cmp	r0, #7
10016608:	e9c9 4600 	strd	r4, r6, [r9]
1001660c:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
10016610:	ddef      	ble.n	100165f2 <_vfiprintf_r+0x7e2>
10016612:	aa1a      	add	r2, sp, #104	@ 0x68
10016614:	2900      	cmp	r1, #0
10016616:	d07c      	beq.n	10016712 <_vfiprintf_r+0x902>
10016618:	9903      	ldr	r1, [sp, #12]
1001661a:	4658      	mov	r0, fp
1001661c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016620:	f7ff fbb0 	bl	10015d84 <__sprint_r.part.0>
10016624:	2800      	cmp	r0, #0
10016626:	f47f ad4b 	bne.w	100160c0 <_vfiprintf_r+0x2b0>
1001662a:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
1001662e:	3d10      	subs	r5, #16
10016630:	2d10      	cmp	r5, #16
10016632:	f102 0c01 	add.w	ip, r2, #1
10016636:	dce4      	bgt.n	10016602 <_vfiprintf_r+0x7f2>
10016638:	4623      	mov	r3, r4
1001663a:	4660      	mov	r0, ip
1001663c:	4644      	mov	r4, r8
1001663e:	468c      	mov	ip, r1
10016640:	4698      	mov	r8, r3
10016642:	44ac      	add	ip, r5
10016644:	2807      	cmp	r0, #7
10016646:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
1001664a:	f8c9 8000 	str.w	r8, [r9]
1001664e:	f8c9 5004 	str.w	r5, [r9, #4]
10016652:	f340 81a3 	ble.w	1001699c <_vfiprintf_r+0xb8c>
10016656:	f1bc 0f00 	cmp.w	ip, #0
1001665a:	f000 8327 	beq.w	10016cac <_vfiprintf_r+0xe9c>
1001665e:	9903      	ldr	r1, [sp, #12]
10016660:	aa1a      	add	r2, sp, #104	@ 0x68
10016662:	4658      	mov	r0, fp
10016664:	f7ff fb8e 	bl	10015d84 <__sprint_r.part.0>
10016668:	2800      	cmp	r0, #0
1001666a:	f47f ad29 	bne.w	100160c0 <_vfiprintf_r+0x2b0>
1001666e:	9b05      	ldr	r3, [sp, #20]
10016670:	9809      	ldr	r0, [sp, #36]	@ 0x24
10016672:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10016676:	1a1d      	subs	r5, r3, r0
10016678:	2d00      	cmp	r5, #0
1001667a:	f102 0101 	add.w	r1, r2, #1
1001667e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016682:	f77f ad98 	ble.w	100161b6 <_vfiprintf_r+0x3a6>
10016686:	2d10      	cmp	r5, #16
10016688:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 10016798 <_vfiprintf_r+0x988>
1001668c:	dd2d      	ble.n	100166ea <_vfiprintf_r+0x8da>
1001668e:	462b      	mov	r3, r5
10016690:	2610      	movs	r6, #16
10016692:	4625      	mov	r5, r4
10016694:	4660      	mov	r0, ip
10016696:	461c      	mov	r4, r3
10016698:	e007      	b.n	100166aa <_vfiprintf_r+0x89a>
1001669a:	f102 0c02 	add.w	ip, r2, #2
1001669e:	f109 0908 	add.w	r9, r9, #8
100166a2:	460a      	mov	r2, r1
100166a4:	3c10      	subs	r4, #16
100166a6:	2c10      	cmp	r4, #16
100166a8:	dd1a      	ble.n	100166e0 <_vfiprintf_r+0x8d0>
100166aa:	1c51      	adds	r1, r2, #1
100166ac:	4b3a      	ldr	r3, [pc, #232]	@ (10016798 <_vfiprintf_r+0x988>)
100166ae:	3010      	adds	r0, #16
100166b0:	2907      	cmp	r1, #7
100166b2:	e9c9 3600 	strd	r3, r6, [r9]
100166b6:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
100166ba:	ddee      	ble.n	1001669a <_vfiprintf_r+0x88a>
100166bc:	aa1a      	add	r2, sp, #104	@ 0x68
100166be:	b310      	cbz	r0, 10016706 <_vfiprintf_r+0x8f6>
100166c0:	9903      	ldr	r1, [sp, #12]
100166c2:	4658      	mov	r0, fp
100166c4:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100166c8:	f7ff fb5c 	bl	10015d84 <__sprint_r.part.0>
100166cc:	2800      	cmp	r0, #0
100166ce:	f47f acf7 	bne.w	100160c0 <_vfiprintf_r+0x2b0>
100166d2:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
100166d6:	3c10      	subs	r4, #16
100166d8:	2c10      	cmp	r4, #16
100166da:	f102 0c01 	add.w	ip, r2, #1
100166de:	dce4      	bgt.n	100166aa <_vfiprintf_r+0x89a>
100166e0:	4623      	mov	r3, r4
100166e2:	4661      	mov	r1, ip
100166e4:	462c      	mov	r4, r5
100166e6:	4684      	mov	ip, r0
100166e8:	461d      	mov	r5, r3
100166ea:	44ac      	add	ip, r5
100166ec:	2907      	cmp	r1, #7
100166ee:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
100166f2:	f8c9 8000 	str.w	r8, [r9]
100166f6:	f8c9 5004 	str.w	r5, [r9, #4]
100166fa:	f300 80ec 	bgt.w	100168d6 <_vfiprintf_r+0xac6>
100166fe:	f109 0908 	add.w	r9, r9, #8
10016702:	3101      	adds	r1, #1
10016704:	e557      	b.n	100161b6 <_vfiprintf_r+0x3a6>
10016706:	f04f 0c01 	mov.w	ip, #1
1001670a:	4602      	mov	r2, r0
1001670c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016710:	e7c8      	b.n	100166a4 <_vfiprintf_r+0x894>
10016712:	f04f 0c01 	mov.w	ip, #1
10016716:	460a      	mov	r2, r1
10016718:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001671c:	e76e      	b.n	100165fc <_vfiprintf_r+0x7ec>
1001671e:	f1bc 0f00 	cmp.w	ip, #0
10016722:	d00f      	beq.n	10016744 <_vfiprintf_r+0x934>
10016724:	9903      	ldr	r1, [sp, #12]
10016726:	9311      	str	r3, [sp, #68]	@ 0x44
10016728:	aa1a      	add	r2, sp, #104	@ 0x68
1001672a:	4658      	mov	r0, fp
1001672c:	f7ff fb2a 	bl	10015d84 <__sprint_r.part.0>
10016730:	2800      	cmp	r0, #0
10016732:	f47f acc5 	bne.w	100160c0 <_vfiprintf_r+0x2b0>
10016736:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001673a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
1001673c:	1c51      	adds	r1, r2, #1
1001673e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016742:	e50f      	b.n	10016164 <_vfiprintf_r+0x354>
10016744:	2b00      	cmp	r3, #0
10016746:	f000 8155 	beq.w	100169f4 <_vfiprintf_r+0xbe4>
1001674a:	2302      	movs	r3, #2
1001674c:	931e      	str	r3, [sp, #120]	@ 0x78
1001674e:	469c      	mov	ip, r3
10016750:	ab13      	add	r3, sp, #76	@ 0x4c
10016752:	931d      	str	r3, [sp, #116]	@ 0x74
10016754:	2101      	movs	r1, #1
10016756:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001675a:	460a      	mov	r2, r1
1001675c:	f109 0908 	add.w	r9, r9, #8
10016760:	3101      	adds	r1, #1
10016762:	e51e      	b.n	100161a2 <_vfiprintf_r+0x392>
10016764:	980d      	ldr	r0, [sp, #52]	@ 0x34
10016766:	ac46      	add	r4, sp, #280	@ 0x118
10016768:	f003 020f 	and.w	r2, r3, #15
1001676c:	091b      	lsrs	r3, r3, #4
1001676e:	5c82      	ldrb	r2, [r0, r2]
10016770:	f804 2d01 	strb.w	r2, [r4, #-1]!
10016774:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
10016778:	0909      	lsrs	r1, r1, #4
1001677a:	ea53 0201 	orrs.w	r2, r3, r1
1001677e:	d1f3      	bne.n	10016768 <_vfiprintf_r+0x958>
10016780:	9a05      	ldr	r2, [sp, #20]
10016782:	ab46      	add	r3, sp, #280	@ 0x118
10016784:	1b1b      	subs	r3, r3, r4
10016786:	429a      	cmp	r2, r3
10016788:	bfb8      	it	lt
1001678a:	461a      	movlt	r2, r3
1001678c:	9309      	str	r3, [sp, #36]	@ 0x24
1001678e:	9204      	str	r2, [sp, #16]
10016790:	e708      	b.n	100165a4 <_vfiprintf_r+0x794>
10016792:	bf00      	nop
10016794:	100213b0 	.word	0x100213b0
10016798:	100238b4 	.word	0x100238b4
1001679c:	2d10      	cmp	r5, #16
1001679e:	f340 82c0 	ble.w	10016d22 <_vfiprintf_r+0xf12>
100167a2:	4eae      	ldr	r6, [pc, #696]	@ (10016a5c <_vfiprintf_r+0xc4c>)
100167a4:	9311      	str	r3, [sp, #68]	@ 0x44
100167a6:	4649      	mov	r1, r9
100167a8:	f04f 0810 	mov.w	r8, #16
100167ac:	46a1      	mov	r9, r4
100167ae:	4634      	mov	r4, r6
100167b0:	4666      	mov	r6, ip
100167b2:	e007      	b.n	100167c4 <_vfiprintf_r+0x9b4>
100167b4:	f102 0e02 	add.w	lr, r2, #2
100167b8:	3108      	adds	r1, #8
100167ba:	4602      	mov	r2, r0
100167bc:	3d10      	subs	r5, #16
100167be:	2d10      	cmp	r5, #16
100167c0:	dd18      	ble.n	100167f4 <_vfiprintf_r+0x9e4>
100167c2:	1c50      	adds	r0, r2, #1
100167c4:	3610      	adds	r6, #16
100167c6:	2807      	cmp	r0, #7
100167c8:	e9c1 4800 	strd	r4, r8, [r1]
100167cc:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
100167d0:	ddf0      	ble.n	100167b4 <_vfiprintf_r+0x9a4>
100167d2:	9903      	ldr	r1, [sp, #12]
100167d4:	aa1a      	add	r2, sp, #104	@ 0x68
100167d6:	4658      	mov	r0, fp
100167d8:	b316      	cbz	r6, 10016820 <_vfiprintf_r+0xa10>
100167da:	f7ff fad3 	bl	10015d84 <__sprint_r.part.0>
100167de:	2800      	cmp	r0, #0
100167e0:	f47f ac6e 	bne.w	100160c0 <_vfiprintf_r+0x2b0>
100167e4:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
100167e8:	3d10      	subs	r5, #16
100167ea:	2d10      	cmp	r5, #16
100167ec:	f102 0e01 	add.w	lr, r2, #1
100167f0:	a91d      	add	r1, sp, #116	@ 0x74
100167f2:	dce6      	bgt.n	100167c2 <_vfiprintf_r+0x9b2>
100167f4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
100167f6:	46b4      	mov	ip, r6
100167f8:	4626      	mov	r6, r4
100167fa:	464c      	mov	r4, r9
100167fc:	4689      	mov	r9, r1
100167fe:	44ac      	add	ip, r5
10016800:	f1be 0f07 	cmp.w	lr, #7
10016804:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
10016808:	f8c9 6000 	str.w	r6, [r9]
1001680c:	f8c9 5004 	str.w	r5, [r9, #4]
10016810:	f300 809a 	bgt.w	10016948 <_vfiprintf_r+0xb38>
10016814:	f109 0908 	add.w	r9, r9, #8
10016818:	f10e 0101 	add.w	r1, lr, #1
1001681c:	4672      	mov	r2, lr
1001681e:	e48c      	b.n	1001613a <_vfiprintf_r+0x32a>
10016820:	4632      	mov	r2, r6
10016822:	f04f 0e01 	mov.w	lr, #1
10016826:	a91d      	add	r1, sp, #116	@ 0x74
10016828:	e7c8      	b.n	100167bc <_vfiprintf_r+0x9ac>
1001682a:	9a02      	ldr	r2, [sp, #8]
1001682c:	931b      	str	r3, [sp, #108]	@ 0x6c
1001682e:	0754      	lsls	r4, r2, #29
10016830:	d548      	bpl.n	100168c4 <_vfiprintf_r+0xab4>
10016832:	9a08      	ldr	r2, [sp, #32]
10016834:	9904      	ldr	r1, [sp, #16]
10016836:	1a54      	subs	r4, r2, r1
10016838:	2c00      	cmp	r4, #0
1001683a:	dd43      	ble.n	100168c4 <_vfiprintf_r+0xab4>
1001683c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016840:	2c10      	cmp	r4, #16
10016842:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10016844:	f340 827c 	ble.w	10016d40 <_vfiprintf_r+0xf30>
10016848:	4e84      	ldr	r6, [pc, #528]	@ (10016a5c <_vfiprintf_r+0xc4c>)
1001684a:	f8dd 800c 	ldr.w	r8, [sp, #12]
1001684e:	2510      	movs	r5, #16
10016850:	e006      	b.n	10016860 <_vfiprintf_r+0xa50>
10016852:	1c88      	adds	r0, r1, #2
10016854:	f109 0908 	add.w	r9, r9, #8
10016858:	4611      	mov	r1, r2
1001685a:	3c10      	subs	r4, #16
1001685c:	2c10      	cmp	r4, #16
1001685e:	dd19      	ble.n	10016894 <_vfiprintf_r+0xa84>
10016860:	1c4a      	adds	r2, r1, #1
10016862:	3310      	adds	r3, #16
10016864:	2a07      	cmp	r2, #7
10016866:	e9c9 6500 	strd	r6, r5, [r9]
1001686a:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
1001686e:	ddf0      	ble.n	10016852 <_vfiprintf_r+0xa42>
10016870:	aa1a      	add	r2, sp, #104	@ 0x68
10016872:	b313      	cbz	r3, 100168ba <_vfiprintf_r+0xaaa>
10016874:	4641      	mov	r1, r8
10016876:	4658      	mov	r0, fp
10016878:	f7ff fa84 	bl	10015d84 <__sprint_r.part.0>
1001687c:	2800      	cmp	r0, #0
1001687e:	f47f ac1f 	bne.w	100160c0 <_vfiprintf_r+0x2b0>
10016882:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
10016886:	3c10      	subs	r4, #16
10016888:	2c10      	cmp	r4, #16
1001688a:	f101 0001 	add.w	r0, r1, #1
1001688e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016892:	dce5      	bgt.n	10016860 <_vfiprintf_r+0xa50>
10016894:	4423      	add	r3, r4
10016896:	2807      	cmp	r0, #7
10016898:	e9c9 6400 	strd	r6, r4, [r9]
1001689c:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
100168a0:	f77f acac 	ble.w	100161fc <_vfiprintf_r+0x3ec>
100168a4:	b173      	cbz	r3, 100168c4 <_vfiprintf_r+0xab4>
100168a6:	9903      	ldr	r1, [sp, #12]
100168a8:	aa1a      	add	r2, sp, #104	@ 0x68
100168aa:	4658      	mov	r0, fp
100168ac:	f7ff fa6a 	bl	10015d84 <__sprint_r.part.0>
100168b0:	2800      	cmp	r0, #0
100168b2:	f47f ac05 	bne.w	100160c0 <_vfiprintf_r+0x2b0>
100168b6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100168b8:	e4a0      	b.n	100161fc <_vfiprintf_r+0x3ec>
100168ba:	2001      	movs	r0, #1
100168bc:	4619      	mov	r1, r3
100168be:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100168c2:	e7ca      	b.n	1001685a <_vfiprintf_r+0xa4a>
100168c4:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
100168c8:	9904      	ldr	r1, [sp, #16]
100168ca:	428a      	cmp	r2, r1
100168cc:	bfac      	ite	ge
100168ce:	189b      	addge	r3, r3, r2
100168d0:	185b      	addlt	r3, r3, r1
100168d2:	9307      	str	r3, [sp, #28]
100168d4:	e49d      	b.n	10016212 <_vfiprintf_r+0x402>
100168d6:	f1bc 0f00 	cmp.w	ip, #0
100168da:	f43f ae6e 	beq.w	100165ba <_vfiprintf_r+0x7aa>
100168de:	9903      	ldr	r1, [sp, #12]
100168e0:	aa1a      	add	r2, sp, #104	@ 0x68
100168e2:	4658      	mov	r0, fp
100168e4:	f7ff fa4e 	bl	10015d84 <__sprint_r.part.0>
100168e8:	2800      	cmp	r0, #0
100168ea:	f47f abe9 	bne.w	100160c0 <_vfiprintf_r+0x2b0>
100168ee:	991b      	ldr	r1, [sp, #108]	@ 0x6c
100168f0:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
100168f4:	3101      	adds	r1, #1
100168f6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100168fa:	e45c      	b.n	100161b6 <_vfiprintf_r+0x3a6>
100168fc:	921b      	str	r2, [sp, #108]	@ 0x6c
100168fe:	f7ff bbd4 	b.w	100160aa <_vfiprintf_r+0x29a>
10016902:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016904:	f852 3b04 	ldr.w	r3, [r2], #4
10016908:	920a      	str	r2, [sp, #40]	@ 0x28
1001690a:	f014 0210 	ands.w	r2, r4, #16
1001690e:	f47f ad76 	bne.w	100163fe <_vfiprintf_r+0x5ee>
10016912:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10016916:	f000 816e 	beq.w	10016bf6 <_vfiprintf_r+0xde6>
1001691a:	b29b      	uxth	r3, r3
1001691c:	4611      	mov	r1, r2
1001691e:	e56e      	b.n	100163fe <_vfiprintf_r+0x5ee>
10016920:	980a      	ldr	r0, [sp, #40]	@ 0x28
10016922:	f850 3b04 	ldr.w	r3, [r0], #4
10016926:	900a      	str	r0, [sp, #40]	@ 0x28
10016928:	f012 0010 	ands.w	r0, r2, #16
1001692c:	f47f ad1a 	bne.w	10016364 <_vfiprintf_r+0x554>
10016930:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
10016934:	f000 8167 	beq.w	10016c06 <_vfiprintf_r+0xdf6>
10016938:	b29b      	uxth	r3, r3
1001693a:	4601      	mov	r1, r0
1001693c:	e512      	b.n	10016364 <_vfiprintf_r+0x554>
1001693e:	2101      	movs	r1, #1
10016940:	4662      	mov	r2, ip
10016942:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016946:	e42c      	b.n	100161a2 <_vfiprintf_r+0x392>
10016948:	f1bc 0f00 	cmp.w	ip, #0
1001694c:	f000 8095 	beq.w	10016a7a <_vfiprintf_r+0xc6a>
10016950:	9903      	ldr	r1, [sp, #12]
10016952:	9311      	str	r3, [sp, #68]	@ 0x44
10016954:	aa1a      	add	r2, sp, #104	@ 0x68
10016956:	4658      	mov	r0, fp
10016958:	f7ff fa14 	bl	10015d84 <__sprint_r.part.0>
1001695c:	2800      	cmp	r0, #0
1001695e:	f47f abaf 	bne.w	100160c0 <_vfiprintf_r+0x2b0>
10016962:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10016966:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10016968:	1c51      	adds	r1, r2, #1
1001696a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001696e:	f7ff bbe4 	b.w	1001613a <_vfiprintf_r+0x32a>
10016972:	9b05      	ldr	r3, [sp, #20]
10016974:	9304      	str	r3, [sp, #16]
10016976:	9309      	str	r3, [sp, #36]	@ 0x24
10016978:	ac46      	add	r4, sp, #280	@ 0x118
1001697a:	e613      	b.n	100165a4 <_vfiprintf_r+0x794>
1001697c:	7822      	ldrb	r2, [r4, #0]
1001697e:	930a      	str	r3, [sp, #40]	@ 0x28
10016980:	f7ff baae 	b.w	10015ee0 <_vfiprintf_r+0xd0>
10016984:	9b05      	ldr	r3, [sp, #20]
10016986:	9304      	str	r3, [sp, #16]
10016988:	ac46      	add	r4, sp, #280	@ 0x118
1001698a:	e60b      	b.n	100165a4 <_vfiprintf_r+0x794>
1001698c:	9d03      	ldr	r5, [sp, #12]
1001698e:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10016990:	f001 fd52 	bl	10018438 <__retarget_lock_acquire_recursive>
10016994:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
10016998:	f7ff ba59 	b.w	10015e4e <_vfiprintf_r+0x3e>
1001699c:	f109 0908 	add.w	r9, r9, #8
100169a0:	1c41      	adds	r1, r0, #1
100169a2:	4602      	mov	r2, r0
100169a4:	e401      	b.n	100161aa <_vfiprintf_r+0x39a>
100169a6:	9a02      	ldr	r2, [sp, #8]
100169a8:	0592      	lsls	r2, r2, #22
100169aa:	f100 8185 	bmi.w	10016cb8 <_vfiprintf_r+0xea8>
100169ae:	17d9      	asrs	r1, r3, #31
100169b0:	460a      	mov	r2, r1
100169b2:	e49e      	b.n	100162f2 <_vfiprintf_r+0x4e2>
100169b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100169b6:	7822      	ldrb	r2, [r4, #0]
100169b8:	2b00      	cmp	r3, #0
100169ba:	f43f aa91 	beq.w	10015ee0 <_vfiprintf_r+0xd0>
100169be:	781b      	ldrb	r3, [r3, #0]
100169c0:	2b00      	cmp	r3, #0
100169c2:	f43f aa8d 	beq.w	10015ee0 <_vfiprintf_r+0xd0>
100169c6:	9b02      	ldr	r3, [sp, #8]
100169c8:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
100169cc:	9302      	str	r3, [sp, #8]
100169ce:	f7ff ba87 	b.w	10015ee0 <_vfiprintf_r+0xd0>
100169d2:	9b02      	ldr	r3, [sp, #8]
100169d4:	06dd      	lsls	r5, r3, #27
100169d6:	f100 80ff 	bmi.w	10016bd8 <_vfiprintf_r+0xdc8>
100169da:	9b02      	ldr	r3, [sp, #8]
100169dc:	065c      	lsls	r4, r3, #25
100169de:	f100 8177 	bmi.w	10016cd0 <_vfiprintf_r+0xec0>
100169e2:	9b02      	ldr	r3, [sp, #8]
100169e4:	0598      	lsls	r0, r3, #22
100169e6:	f140 80f7 	bpl.w	10016bd8 <_vfiprintf_r+0xdc8>
100169ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100169ec:	9a07      	ldr	r2, [sp, #28]
100169ee:	681b      	ldr	r3, [r3, #0]
100169f0:	701a      	strb	r2, [r3, #0]
100169f2:	e576      	b.n	100164e2 <_vfiprintf_r+0x6d2>
100169f4:	4662      	mov	r2, ip
100169f6:	2101      	movs	r1, #1
100169f8:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100169fc:	f7ff bbd1 	b.w	100161a2 <_vfiprintf_r+0x392>
10016a00:	9406      	str	r4, [sp, #24]
10016a02:	9c02      	ldr	r4, [sp, #8]
10016a04:	e4ee      	b.n	100163e4 <_vfiprintf_r+0x5d4>
10016a06:	9a02      	ldr	r2, [sp, #8]
10016a08:	9406      	str	r4, [sp, #24]
10016a0a:	e49e      	b.n	1001634a <_vfiprintf_r+0x53a>
10016a0c:	4b14      	ldr	r3, [pc, #80]	@ (10016a60 <_vfiprintf_r+0xc50>)
10016a0e:	9406      	str	r4, [sp, #24]
10016a10:	930d      	str	r3, [sp, #52]	@ 0x34
10016a12:	9b02      	ldr	r3, [sp, #8]
10016a14:	f013 0120 	ands.w	r1, r3, #32
10016a18:	d064      	beq.n	10016ae4 <_vfiprintf_r+0xcd4>
10016a1a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016a1c:	3307      	adds	r3, #7
10016a1e:	f023 0307 	bic.w	r3, r3, #7
10016a22:	4618      	mov	r0, r3
10016a24:	6859      	ldr	r1, [r3, #4]
10016a26:	f850 3b08 	ldr.w	r3, [r0], #8
10016a2a:	900a      	str	r0, [sp, #40]	@ 0x28
10016a2c:	9c02      	ldr	r4, [sp, #8]
10016a2e:	07e6      	lsls	r6, r4, #31
10016a30:	d50a      	bpl.n	10016a48 <_vfiprintf_r+0xc38>
10016a32:	ea53 0001 	orrs.w	r0, r3, r1
10016a36:	d007      	beq.n	10016a48 <_vfiprintf_r+0xc38>
10016a38:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
10016a3c:	f044 0202 	orr.w	r2, r4, #2
10016a40:	9202      	str	r2, [sp, #8]
10016a42:	2230      	movs	r2, #48	@ 0x30
10016a44:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
10016a48:	9a02      	ldr	r2, [sp, #8]
10016a4a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
10016a4e:	9202      	str	r2, [sp, #8]
10016a50:	e52b      	b.n	100164aa <_vfiprintf_r+0x69a>
10016a52:	4b04      	ldr	r3, [pc, #16]	@ (10016a64 <_vfiprintf_r+0xc54>)
10016a54:	9406      	str	r4, [sp, #24]
10016a56:	930d      	str	r3, [sp, #52]	@ 0x34
10016a58:	e7db      	b.n	10016a12 <_vfiprintf_r+0xc02>
10016a5a:	bf00      	nop
10016a5c:	100238c4 	.word	0x100238c4
10016a60:	10023874 	.word	0x10023874
10016a64:	100213b0 	.word	0x100213b0
10016a68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016a6a:	681b      	ldr	r3, [r3, #0]
10016a6c:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
10016a70:	2301      	movs	r3, #1
10016a72:	9304      	str	r3, [sp, #16]
10016a74:	9309      	str	r3, [sp, #36]	@ 0x24
10016a76:	ac2d      	add	r4, sp, #180	@ 0xb4
10016a78:	e428      	b.n	100162cc <_vfiprintf_r+0x4bc>
10016a7a:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
10016a7e:	2a00      	cmp	r2, #0
10016a80:	f000 8120 	beq.w	10016cc4 <_vfiprintf_r+0xeb4>
10016a84:	2101      	movs	r1, #1
10016a86:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
10016a8a:	911e      	str	r1, [sp, #120]	@ 0x78
10016a8c:	921d      	str	r2, [sp, #116]	@ 0x74
10016a8e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016a92:	468c      	mov	ip, r1
10016a94:	f7ff bb62 	b.w	1001615c <_vfiprintf_r+0x34c>
10016a98:	2208      	movs	r2, #8
10016a9a:	2100      	movs	r1, #0
10016a9c:	a818      	add	r0, sp, #96	@ 0x60
10016a9e:	9415      	str	r4, [sp, #84]	@ 0x54
10016aa0:	f001 f9e6 	bl	10017e70 <memset>
10016aa4:	f8dd 8014 	ldr.w	r8, [sp, #20]
10016aa8:	f1b8 3fff 	cmp.w	r8, #4294967295	@ 0xffffffff
10016aac:	f000 80b9 	beq.w	10016c22 <_vfiprintf_r+0xe12>
10016ab0:	2500      	movs	r5, #0
10016ab2:	9404      	str	r4, [sp, #16]
10016ab4:	462c      	mov	r4, r5
10016ab6:	e00c      	b.n	10016ad2 <_vfiprintf_r+0xcc2>
10016ab8:	a92d      	add	r1, sp, #180	@ 0xb4
10016aba:	4658      	mov	r0, fp
10016abc:	f001 fe2c 	bl	10018718 <_wcrtomb_r>
10016ac0:	1c41      	adds	r1, r0, #1
10016ac2:	4420      	add	r0, r4
10016ac4:	f000 813f 	beq.w	10016d46 <_vfiprintf_r+0xf36>
10016ac8:	4540      	cmp	r0, r8
10016aca:	dc08      	bgt.n	10016ade <_vfiprintf_r+0xcce>
10016acc:	f000 8158 	beq.w	10016d80 <_vfiprintf_r+0xf70>
10016ad0:	4604      	mov	r4, r0
10016ad2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10016ad4:	5952      	ldr	r2, [r2, r5]
10016ad6:	ab18      	add	r3, sp, #96	@ 0x60
10016ad8:	3504      	adds	r5, #4
10016ada:	2a00      	cmp	r2, #0
10016adc:	d1ec      	bne.n	10016ab8 <_vfiprintf_r+0xca8>
10016ade:	9409      	str	r4, [sp, #36]	@ 0x24
10016ae0:	9c04      	ldr	r4, [sp, #16]
10016ae2:	e0ac      	b.n	10016c3e <_vfiprintf_r+0xe2e>
10016ae4:	980a      	ldr	r0, [sp, #40]	@ 0x28
10016ae6:	f850 3b04 	ldr.w	r3, [r0], #4
10016aea:	900a      	str	r0, [sp, #40]	@ 0x28
10016aec:	9802      	ldr	r0, [sp, #8]
10016aee:	f010 0010 	ands.w	r0, r0, #16
10016af2:	d19b      	bne.n	10016a2c <_vfiprintf_r+0xc1c>
10016af4:	9902      	ldr	r1, [sp, #8]
10016af6:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
10016afa:	f000 808b 	beq.w	10016c14 <_vfiprintf_r+0xe04>
10016afe:	b29b      	uxth	r3, r3
10016b00:	4601      	mov	r1, r0
10016b02:	e793      	b.n	10016a2c <_vfiprintf_r+0xc1c>
10016b04:	9a02      	ldr	r2, [sp, #8]
10016b06:	f8cd 9010 	str.w	r9, [sp, #16]
10016b0a:	ac46      	add	r4, sp, #280	@ 0x118
10016b0c:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
10016b10:	46a1      	mov	r9, r4
10016b12:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10016b16:	4ea5      	ldr	r6, [pc, #660]	@ (10016dac <_vfiprintf_r+0xf9c>)
10016b18:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
10016b1c:	f04f 0c00 	mov.w	ip, #0
10016b20:	4614      	mov	r4, r2
10016b22:	e005      	b.n	10016b30 <_vfiprintf_r+0xd20>
10016b24:	2b0a      	cmp	r3, #10
10016b26:	f171 0100 	sbcs.w	r1, r1, #0
10016b2a:	d336      	bcc.n	10016b9a <_vfiprintf_r+0xd8a>
10016b2c:	4643      	mov	r3, r8
10016b2e:	4629      	mov	r1, r5
10016b30:	185a      	adds	r2, r3, r1
10016b32:	f142 0200 	adc.w	r2, r2, #0
10016b36:	fba6 0502 	umull	r0, r5, r6, r2
10016b3a:	f025 0003 	bic.w	r0, r5, #3
10016b3e:	eb00 0095 	add.w	r0, r0, r5, lsr #2
10016b42:	1a12      	subs	r2, r2, r0
10016b44:	1a98      	subs	r0, r3, r2
10016b46:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
10016b4a:	f161 0e00 	sbc.w	lr, r1, #0
10016b4e:	fb05 f500 	mul.w	r5, r5, r0
10016b52:	fb06 550e 	mla	r5, r6, lr, r5
10016b56:	fba0 8006 	umull	r8, r0, r0, r6
10016b5a:	4405      	add	r5, r0
10016b5c:	f008 0e01 	and.w	lr, r8, #1
10016b60:	2005      	movs	r0, #5
10016b62:	fbae 0e00 	umull	r0, lr, lr, r0
10016b66:	1880      	adds	r0, r0, r2
10016b68:	ea4f 0858 	mov.w	r8, r8, lsr #1
10016b6c:	3030      	adds	r0, #48	@ 0x30
10016b6e:	f809 0c01 	strb.w	r0, [r9, #-1]
10016b72:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
10016b76:	f10c 0c01 	add.w	ip, ip, #1
10016b7a:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10016b7e:	086d      	lsrs	r5, r5, #1
10016b80:	2c00      	cmp	r4, #0
10016b82:	d0cf      	beq.n	10016b24 <_vfiprintf_r+0xd14>
10016b84:	f89b 2000 	ldrb.w	r2, [fp]
10016b88:	4562      	cmp	r2, ip
10016b8a:	d1cb      	bne.n	10016b24 <_vfiprintf_r+0xd14>
10016b8c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10016b90:	d0c8      	beq.n	10016b24 <_vfiprintf_r+0xd14>
10016b92:	2b0a      	cmp	r3, #10
10016b94:	f171 0100 	sbcs.w	r1, r1, #0
10016b98:	d272      	bcs.n	10016c80 <_vfiprintf_r+0xe70>
10016b9a:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10016b9e:	464c      	mov	r4, r9
10016ba0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10016ba4:	f8dd 9010 	ldr.w	r9, [sp, #16]
10016ba8:	e5ea      	b.n	10016780 <_vfiprintf_r+0x970>
10016baa:	9202      	str	r2, [sp, #8]
10016bac:	e441      	b.n	10016432 <_vfiprintf_r+0x622>
10016bae:	9402      	str	r4, [sp, #8]
10016bb0:	e4e6      	b.n	10016580 <_vfiprintf_r+0x770>
10016bb2:	4658      	mov	r0, fp
10016bb4:	f000 fe44 	bl	10017840 <__sinit>
10016bb8:	f7ff b940 	b.w	10015e3c <_vfiprintf_r+0x2c>
10016bbc:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
10016bc0:	7862      	ldrb	r2, [r4, #1]
10016bc2:	9302      	str	r3, [sp, #8]
10016bc4:	3401      	adds	r4, #1
10016bc6:	f7ff b98b 	b.w	10015ee0 <_vfiprintf_r+0xd0>
10016bca:	f043 0320 	orr.w	r3, r3, #32
10016bce:	7862      	ldrb	r2, [r4, #1]
10016bd0:	9302      	str	r3, [sp, #8]
10016bd2:	3401      	adds	r4, #1
10016bd4:	f7ff b984 	b.w	10015ee0 <_vfiprintf_r+0xd0>
10016bd8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016bda:	9a07      	ldr	r2, [sp, #28]
10016bdc:	681b      	ldr	r3, [r3, #0]
10016bde:	601a      	str	r2, [r3, #0]
10016be0:	e47f      	b.n	100164e2 <_vfiprintf_r+0x6d2>
10016be2:	9b05      	ldr	r3, [sp, #20]
10016be4:	4c72      	ldr	r4, [pc, #456]	@ (10016db0 <_vfiprintf_r+0xfa0>)
10016be6:	2b06      	cmp	r3, #6
10016be8:	bf28      	it	cs
10016bea:	2306      	movcs	r3, #6
10016bec:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
10016bf0:	9304      	str	r3, [sp, #16]
10016bf2:	f7ff ba89 	b.w	10016108 <_vfiprintf_r+0x2f8>
10016bf6:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
10016bfa:	f43f ac00 	beq.w	100163fe <_vfiprintf_r+0x5ee>
10016bfe:	b2db      	uxtb	r3, r3
10016c00:	4601      	mov	r1, r0
10016c02:	f7ff bbfc 	b.w	100163fe <_vfiprintf_r+0x5ee>
10016c06:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
10016c0a:	bf1c      	itt	ne
10016c0c:	b2db      	uxtbne	r3, r3
10016c0e:	4621      	movne	r1, r4
10016c10:	f7ff bba8 	b.w	10016364 <_vfiprintf_r+0x554>
10016c14:	9902      	ldr	r1, [sp, #8]
10016c16:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
10016c1a:	bf1c      	itt	ne
10016c1c:	b2db      	uxtbne	r3, r3
10016c1e:	4621      	movne	r1, r4
10016c20:	e704      	b.n	10016a2c <_vfiprintf_r+0xc1c>
10016c22:	ab18      	add	r3, sp, #96	@ 0x60
10016c24:	9300      	str	r3, [sp, #0]
10016c26:	2300      	movs	r3, #0
10016c28:	4619      	mov	r1, r3
10016c2a:	aa15      	add	r2, sp, #84	@ 0x54
10016c2c:	4658      	mov	r0, fp
10016c2e:	f001 fd99 	bl	10018764 <_wcsrtombs_r>
10016c32:	4603      	mov	r3, r0
10016c34:	3301      	adds	r3, #1
10016c36:	9009      	str	r0, [sp, #36]	@ 0x24
10016c38:	f000 8085 	beq.w	10016d46 <_vfiprintf_r+0xf36>
10016c3c:	9415      	str	r4, [sp, #84]	@ 0x54
10016c3e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10016c40:	b373      	cbz	r3, 10016ca0 <_vfiprintf_r+0xe90>
10016c42:	2b63      	cmp	r3, #99	@ 0x63
10016c44:	dc49      	bgt.n	10016cda <_vfiprintf_r+0xeca>
10016c46:	2300      	movs	r3, #0
10016c48:	930b      	str	r3, [sp, #44]	@ 0x2c
10016c4a:	ac2d      	add	r4, sp, #180	@ 0xb4
10016c4c:	2208      	movs	r2, #8
10016c4e:	2100      	movs	r1, #0
10016c50:	a818      	add	r0, sp, #96	@ 0x60
10016c52:	f001 f90d 	bl	10017e70 <memset>
10016c56:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10016c58:	ab18      	add	r3, sp, #96	@ 0x60
10016c5a:	9300      	str	r3, [sp, #0]
10016c5c:	aa15      	add	r2, sp, #84	@ 0x54
10016c5e:	462b      	mov	r3, r5
10016c60:	4621      	mov	r1, r4
10016c62:	4658      	mov	r0, fp
10016c64:	f001 fd7e 	bl	10018764 <_wcsrtombs_r>
10016c68:	4285      	cmp	r5, r0
10016c6a:	f040 8098 	bne.w	10016d9e <_vfiprintf_r+0xf8e>
10016c6e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10016c70:	960a      	str	r6, [sp, #40]	@ 0x28
10016c72:	2300      	movs	r3, #0
10016c74:	54a3      	strb	r3, [r4, r2]
10016c76:	9305      	str	r3, [sp, #20]
10016c78:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
10016c7c:	9304      	str	r3, [sp, #16]
10016c7e:	e493      	b.n	100165a8 <_vfiprintf_r+0x798>
10016c80:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10016c82:	9910      	ldr	r1, [sp, #64]	@ 0x40
10016c84:	eba9 0903 	sub.w	r9, r9, r3
10016c88:	461a      	mov	r2, r3
10016c8a:	4648      	mov	r0, r9
10016c8c:	f001 f964 	bl	10017f58 <strncpy>
10016c90:	f89b 3001 	ldrb.w	r3, [fp, #1]
10016c94:	b10b      	cbz	r3, 10016c9a <_vfiprintf_r+0xe8a>
10016c96:	f10b 0b01 	add.w	fp, fp, #1
10016c9a:	f04f 0c00 	mov.w	ip, #0
10016c9e:	e745      	b.n	10016b2c <_vfiprintf_r+0xd1c>
10016ca0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10016ca2:	960a      	str	r6, [sp, #40]	@ 0x28
10016ca4:	e9cd 3304 	strd	r3, r3, [sp, #16]
10016ca8:	930b      	str	r3, [sp, #44]	@ 0x2c
10016caa:	e47d      	b.n	100165a8 <_vfiprintf_r+0x798>
10016cac:	2101      	movs	r1, #1
10016cae:	4662      	mov	r2, ip
10016cb0:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016cb4:	f7ff ba79 	b.w	100161aa <_vfiprintf_r+0x39a>
10016cb8:	f343 11c0 	sbfx	r1, r3, #7, #1
10016cbc:	460a      	mov	r2, r1
10016cbe:	b25b      	sxtb	r3, r3
10016cc0:	f7ff bb17 	b.w	100162f2 <_vfiprintf_r+0x4e2>
10016cc4:	4662      	mov	r2, ip
10016cc6:	2101      	movs	r1, #1
10016cc8:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10016ccc:	f7ff ba4a 	b.w	10016164 <_vfiprintf_r+0x354>
10016cd0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016cd2:	9a07      	ldr	r2, [sp, #28]
10016cd4:	681b      	ldr	r3, [r3, #0]
10016cd6:	801a      	strh	r2, [r3, #0]
10016cd8:	e403      	b.n	100164e2 <_vfiprintf_r+0x6d2>
10016cda:	1c59      	adds	r1, r3, #1
10016cdc:	4658      	mov	r0, fp
10016cde:	f7fc ff1f 	bl	10013b20 <_malloc_r>
10016ce2:	4604      	mov	r4, r0
10016ce4:	2800      	cmp	r0, #0
10016ce6:	d02e      	beq.n	10016d46 <_vfiprintf_r+0xf36>
10016ce8:	900b      	str	r0, [sp, #44]	@ 0x2c
10016cea:	e7af      	b.n	10016c4c <_vfiprintf_r+0xe3c>
10016cec:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10016cee:	f001 fba5 	bl	1001843c <__retarget_lock_release_recursive>
10016cf2:	f7ff b99d 	b.w	10016030 <_vfiprintf_r+0x220>
10016cf6:	9b05      	ldr	r3, [sp, #20]
10016cf8:	9304      	str	r3, [sp, #16]
10016cfa:	9309      	str	r3, [sp, #36]	@ 0x24
10016cfc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016cfe:	960a      	str	r6, [sp, #40]	@ 0x28
10016d00:	9305      	str	r3, [sp, #20]
10016d02:	e451      	b.n	100165a8 <_vfiprintf_r+0x798>
10016d04:	4620      	mov	r0, r4
10016d06:	9505      	str	r5, [sp, #20]
10016d08:	960a      	str	r6, [sp, #40]	@ 0x28
10016d0a:	f001 fc99 	bl	10018640 <strlen>
10016d0e:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10016d12:	9009      	str	r0, [sp, #36]	@ 0x24
10016d14:	9304      	str	r3, [sp, #16]
10016d16:	950b      	str	r5, [sp, #44]	@ 0x2c
10016d18:	e446      	b.n	100165a8 <_vfiprintf_r+0x798>
10016d1a:	2300      	movs	r3, #0
10016d1c:	9305      	str	r3, [sp, #20]
10016d1e:	f7ff b8e0 	b.w	10015ee2 <_vfiprintf_r+0xd2>
10016d22:	4e24      	ldr	r6, [pc, #144]	@ (10016db4 <_vfiprintf_r+0xfa4>)
10016d24:	4686      	mov	lr, r0
10016d26:	e56a      	b.n	100167fe <_vfiprintf_r+0x9ee>
10016d28:	2330      	movs	r3, #48	@ 0x30
10016d2a:	e430      	b.n	1001658e <_vfiprintf_r+0x77e>
10016d2c:	9903      	ldr	r1, [sp, #12]
10016d2e:	aa1a      	add	r2, sp, #104	@ 0x68
10016d30:	4658      	mov	r0, fp
10016d32:	f7ff f827 	bl	10015d84 <__sprint_r.part.0>
10016d36:	2800      	cmp	r0, #0
10016d38:	f43f a9a8 	beq.w	1001608c <_vfiprintf_r+0x27c>
10016d3c:	f7ff b9c6 	b.w	100160cc <_vfiprintf_r+0x2bc>
10016d40:	4e1c      	ldr	r6, [pc, #112]	@ (10016db4 <_vfiprintf_r+0xfa4>)
10016d42:	1c48      	adds	r0, r1, #1
10016d44:	e5a6      	b.n	10016894 <_vfiprintf_r+0xa84>
10016d46:	9a03      	ldr	r2, [sp, #12]
10016d48:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
10016d4c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016d50:	8193      	strh	r3, [r2, #12]
10016d52:	f7ff b9be 	b.w	100160d2 <_vfiprintf_r+0x2c2>
10016d56:	9b03      	ldr	r3, [sp, #12]
10016d58:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10016d5a:	07d9      	lsls	r1, r3, #31
10016d5c:	d407      	bmi.n	10016d6e <_vfiprintf_r+0xf5e>
10016d5e:	9b03      	ldr	r3, [sp, #12]
10016d60:	899b      	ldrh	r3, [r3, #12]
10016d62:	059a      	lsls	r2, r3, #22
10016d64:	d403      	bmi.n	10016d6e <_vfiprintf_r+0xf5e>
10016d66:	9b03      	ldr	r3, [sp, #12]
10016d68:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10016d6a:	f001 fb67 	bl	1001843c <__retarget_lock_release_recursive>
10016d6e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10016d72:	9307      	str	r3, [sp, #28]
10016d74:	f7ff b9b5 	b.w	100160e2 <_vfiprintf_r+0x2d2>
10016d78:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 10016db8 <_vfiprintf_r+0xfa8>
10016d7c:	4608      	mov	r0, r1
10016d7e:	e460      	b.n	10016642 <_vfiprintf_r+0x832>
10016d80:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
10016d84:	9309      	str	r3, [sp, #36]	@ 0x24
10016d86:	e75a      	b.n	10016c3e <_vfiprintf_r+0xe2e>
10016d88:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016d8a:	7862      	ldrb	r2, [r4, #1]
10016d8c:	460c      	mov	r4, r1
10016d8e:	f853 1b04 	ldr.w	r1, [r3], #4
10016d92:	930a      	str	r3, [sp, #40]	@ 0x28
10016d94:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10016d98:	9105      	str	r1, [sp, #20]
10016d9a:	f7ff b8a1 	b.w	10015ee0 <_vfiprintf_r+0xd0>
10016d9e:	9a03      	ldr	r2, [sp, #12]
10016da0:	8993      	ldrh	r3, [r2, #12]
10016da2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016da6:	8193      	strh	r3, [r2, #12]
10016da8:	f7ff b98a 	b.w	100160c0 <_vfiprintf_r+0x2b0>
10016dac:	cccccccd 	.word	0xcccccccd
10016db0:	10023888 	.word	0x10023888
10016db4:	100238c4 	.word	0x100238c4
10016db8:	100238b4 	.word	0x100238b4

10016dbc <__sbprintf>:
10016dbc:	b5f0      	push	{r4, r5, r6, r7, lr}
10016dbe:	461f      	mov	r7, r3
10016dc0:	898b      	ldrh	r3, [r1, #12]
10016dc2:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
10016dc6:	f023 0302 	bic.w	r3, r3, #2
10016dca:	f8ad 300c 	strh.w	r3, [sp, #12]
10016dce:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10016dd0:	9319      	str	r3, [sp, #100]	@ 0x64
10016dd2:	89cb      	ldrh	r3, [r1, #14]
10016dd4:	f8ad 300e 	strh.w	r3, [sp, #14]
10016dd8:	69cb      	ldr	r3, [r1, #28]
10016dda:	9307      	str	r3, [sp, #28]
10016ddc:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10016dde:	9309      	str	r3, [sp, #36]	@ 0x24
10016de0:	ab1a      	add	r3, sp, #104	@ 0x68
10016de2:	9300      	str	r3, [sp, #0]
10016de4:	9304      	str	r3, [sp, #16]
10016de6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10016dea:	4615      	mov	r5, r2
10016dec:	4606      	mov	r6, r0
10016dee:	9302      	str	r3, [sp, #8]
10016df0:	9305      	str	r3, [sp, #20]
10016df2:	a816      	add	r0, sp, #88	@ 0x58
10016df4:	2300      	movs	r3, #0
10016df6:	460c      	mov	r4, r1
10016df8:	9306      	str	r3, [sp, #24]
10016dfa:	f001 fb19 	bl	10018430 <__retarget_lock_init_recursive>
10016dfe:	462a      	mov	r2, r5
10016e00:	463b      	mov	r3, r7
10016e02:	4669      	mov	r1, sp
10016e04:	4630      	mov	r0, r6
10016e06:	f7ff f803 	bl	10015e10 <_vfiprintf_r>
10016e0a:	1e05      	subs	r5, r0, #0
10016e0c:	db07      	blt.n	10016e1e <__sbprintf+0x62>
10016e0e:	4669      	mov	r1, sp
10016e10:	4630      	mov	r0, r6
10016e12:	f000 fb1d 	bl	10017450 <_fflush_r>
10016e16:	2800      	cmp	r0, #0
10016e18:	bf18      	it	ne
10016e1a:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10016e1e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10016e22:	065b      	lsls	r3, r3, #25
10016e24:	d503      	bpl.n	10016e2e <__sbprintf+0x72>
10016e26:	89a3      	ldrh	r3, [r4, #12]
10016e28:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10016e2c:	81a3      	strh	r3, [r4, #12]
10016e2e:	9816      	ldr	r0, [sp, #88]	@ 0x58
10016e30:	f001 fb00 	bl	10018434 <__retarget_lock_close_recursive>
10016e34:	4628      	mov	r0, r5
10016e36:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10016e3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10016e3c <putchar>:
10016e3c:	4b02      	ldr	r3, [pc, #8]	@ (10016e48 <putchar+0xc>)
10016e3e:	4601      	mov	r1, r0
10016e40:	6818      	ldr	r0, [r3, #0]
10016e42:	6882      	ldr	r2, [r0, #8]
10016e44:	f006 b88c 	b.w	1001cf60 <_putc_r>
10016e48:	20000598 	.word	0x20000598

10016e4c <__malloc_lock>:
10016e4c:	4801      	ldr	r0, [pc, #4]	@ (10016e54 <__malloc_lock+0x8>)
10016e4e:	f001 baf3 	b.w	10018438 <__retarget_lock_acquire_recursive>
10016e52:	bf00      	nop
10016e54:	200015c8 	.word	0x200015c8

10016e58 <__malloc_unlock>:
10016e58:	4801      	ldr	r0, [pc, #4]	@ (10016e60 <__malloc_unlock+0x8>)
10016e5a:	f001 baef 	b.w	1001843c <__retarget_lock_release_recursive>
10016e5e:	bf00      	nop
10016e60:	200015c8 	.word	0x200015c8

10016e64 <_puts_r>:
10016e64:	b570      	push	{r4, r5, r6, lr}
10016e66:	4605      	mov	r5, r0
10016e68:	b088      	sub	sp, #32
10016e6a:	4608      	mov	r0, r1
10016e6c:	460c      	mov	r4, r1
10016e6e:	f001 fbe7 	bl	10018640 <strlen>
10016e72:	4e21      	ldr	r6, [pc, #132]	@ (10016ef8 <_puts_r+0x94>)
10016e74:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
10016e76:	9005      	str	r0, [sp, #20]
10016e78:	2101      	movs	r1, #1
10016e7a:	1843      	adds	r3, r0, r1
10016e7c:	e9cd 6106 	strd	r6, r1, [sp, #24]
10016e80:	a804      	add	r0, sp, #16
10016e82:	2102      	movs	r1, #2
10016e84:	9404      	str	r4, [sp, #16]
10016e86:	9303      	str	r3, [sp, #12]
10016e88:	68ac      	ldr	r4, [r5, #8]
10016e8a:	9001      	str	r0, [sp, #4]
10016e8c:	9102      	str	r1, [sp, #8]
10016e8e:	2a00      	cmp	r2, #0
10016e90:	d02e      	beq.n	10016ef0 <_puts_r+0x8c>
10016e92:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10016e94:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016e98:	07d6      	lsls	r6, r2, #31
10016e9a:	d401      	bmi.n	10016ea0 <_puts_r+0x3c>
10016e9c:	0598      	lsls	r0, r3, #22
10016e9e:	d521      	bpl.n	10016ee4 <_puts_r+0x80>
10016ea0:	0499      	lsls	r1, r3, #18
10016ea2:	d406      	bmi.n	10016eb2 <_puts_r+0x4e>
10016ea4:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10016ea6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10016eaa:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10016eae:	81a3      	strh	r3, [r4, #12]
10016eb0:	6662      	str	r2, [r4, #100]	@ 0x64
10016eb2:	4628      	mov	r0, r5
10016eb4:	aa01      	add	r2, sp, #4
10016eb6:	4621      	mov	r1, r4
10016eb8:	f000 fcec 	bl	10017894 <__sfvwrite_r>
10016ebc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10016ebe:	2800      	cmp	r0, #0
10016ec0:	bf0c      	ite	eq
10016ec2:	250a      	moveq	r5, #10
10016ec4:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10016ec8:	07da      	lsls	r2, r3, #31
10016eca:	d402      	bmi.n	10016ed2 <_puts_r+0x6e>
10016ecc:	89a3      	ldrh	r3, [r4, #12]
10016ece:	059b      	lsls	r3, r3, #22
10016ed0:	d502      	bpl.n	10016ed8 <_puts_r+0x74>
10016ed2:	4628      	mov	r0, r5
10016ed4:	b008      	add	sp, #32
10016ed6:	bd70      	pop	{r4, r5, r6, pc}
10016ed8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016eda:	f001 faaf 	bl	1001843c <__retarget_lock_release_recursive>
10016ede:	4628      	mov	r0, r5
10016ee0:	b008      	add	sp, #32
10016ee2:	bd70      	pop	{r4, r5, r6, pc}
10016ee4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016ee6:	f001 faa7 	bl	10018438 <__retarget_lock_acquire_recursive>
10016eea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016eee:	e7d7      	b.n	10016ea0 <_puts_r+0x3c>
10016ef0:	4628      	mov	r0, r5
10016ef2:	f000 fca5 	bl	10017840 <__sinit>
10016ef6:	e7cc      	b.n	10016e92 <_puts_r+0x2e>
10016ef8:	10021230 	.word	0x10021230

10016efc <puts>:
10016efc:	4b02      	ldr	r3, [pc, #8]	@ (10016f08 <puts+0xc>)
10016efe:	4601      	mov	r1, r0
10016f00:	6818      	ldr	r0, [r3, #0]
10016f02:	f7ff bfaf 	b.w	10016e64 <_puts_r>
10016f06:	bf00      	nop
10016f08:	20000598 	.word	0x20000598

10016f0c <realloc>:
10016f0c:	b410      	push	{r4}
10016f0e:	4c04      	ldr	r4, [pc, #16]	@ (10016f20 <realloc+0x14>)
10016f10:	4603      	mov	r3, r0
10016f12:	460a      	mov	r2, r1
10016f14:	6820      	ldr	r0, [r4, #0]
10016f16:	bc10      	pop	{r4}
10016f18:	4619      	mov	r1, r3
10016f1a:	f000 b863 	b.w	10016fe4 <_realloc_r>
10016f1e:	bf00      	nop
10016f20:	20000598 	.word	0x20000598

10016f24 <_fclose_r>:
10016f24:	b570      	push	{r4, r5, r6, lr}
10016f26:	2900      	cmp	r1, #0
10016f28:	d03f      	beq.n	10016faa <_fclose_r+0x86>
10016f2a:	4605      	mov	r5, r0
10016f2c:	460c      	mov	r4, r1
10016f2e:	b110      	cbz	r0, 10016f36 <_fclose_r+0x12>
10016f30:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10016f32:	2b00      	cmp	r3, #0
10016f34:	d03c      	beq.n	10016fb0 <_fclose_r+0x8c>
10016f36:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10016f38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10016f3c:	07de      	lsls	r6, r3, #31
10016f3e:	d432      	bmi.n	10016fa6 <_fclose_r+0x82>
10016f40:	0590      	lsls	r0, r2, #22
10016f42:	d538      	bpl.n	10016fb6 <_fclose_r+0x92>
10016f44:	4621      	mov	r1, r4
10016f46:	4628      	mov	r0, r5
10016f48:	f000 f9ee 	bl	10017328 <__sflush_r>
10016f4c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
10016f4e:	4606      	mov	r6, r0
10016f50:	b133      	cbz	r3, 10016f60 <_fclose_r+0x3c>
10016f52:	69e1      	ldr	r1, [r4, #28]
10016f54:	4628      	mov	r0, r5
10016f56:	4798      	blx	r3
10016f58:	2800      	cmp	r0, #0
10016f5a:	bfb8      	it	lt
10016f5c:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
10016f60:	89a3      	ldrh	r3, [r4, #12]
10016f62:	061a      	lsls	r2, r3, #24
10016f64:	d439      	bmi.n	10016fda <_fclose_r+0xb6>
10016f66:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10016f68:	b141      	cbz	r1, 10016f7c <_fclose_r+0x58>
10016f6a:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10016f6e:	4299      	cmp	r1, r3
10016f70:	d002      	beq.n	10016f78 <_fclose_r+0x54>
10016f72:	4628      	mov	r0, r5
10016f74:	f002 fc64 	bl	10019840 <_free_r>
10016f78:	2300      	movs	r3, #0
10016f7a:	6323      	str	r3, [r4, #48]	@ 0x30
10016f7c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
10016f7e:	b121      	cbz	r1, 10016f8a <_fclose_r+0x66>
10016f80:	4628      	mov	r0, r5
10016f82:	f002 fc5d 	bl	10019840 <_free_r>
10016f86:	2300      	movs	r3, #0
10016f88:	6463      	str	r3, [r4, #68]	@ 0x44
10016f8a:	f000 fc77 	bl	1001787c <__sfp_lock_acquire>
10016f8e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10016f90:	2200      	movs	r2, #0
10016f92:	07db      	lsls	r3, r3, #31
10016f94:	81a2      	strh	r2, [r4, #12]
10016f96:	d51c      	bpl.n	10016fd2 <_fclose_r+0xae>
10016f98:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016f9a:	f001 fa4b 	bl	10018434 <__retarget_lock_close_recursive>
10016f9e:	f000 fc73 	bl	10017888 <__sfp_lock_release>
10016fa2:	4630      	mov	r0, r6
10016fa4:	bd70      	pop	{r4, r5, r6, pc}
10016fa6:	2a00      	cmp	r2, #0
10016fa8:	d1cc      	bne.n	10016f44 <_fclose_r+0x20>
10016faa:	2600      	movs	r6, #0
10016fac:	4630      	mov	r0, r6
10016fae:	bd70      	pop	{r4, r5, r6, pc}
10016fb0:	f000 fc46 	bl	10017840 <__sinit>
10016fb4:	e7bf      	b.n	10016f36 <_fclose_r+0x12>
10016fb6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016fb8:	f001 fa3e 	bl	10018438 <__retarget_lock_acquire_recursive>
10016fbc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10016fc0:	2b00      	cmp	r3, #0
10016fc2:	d1bf      	bne.n	10016f44 <_fclose_r+0x20>
10016fc4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10016fc6:	07d9      	lsls	r1, r3, #31
10016fc8:	d4ef      	bmi.n	10016faa <_fclose_r+0x86>
10016fca:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016fcc:	f001 fa36 	bl	1001843c <__retarget_lock_release_recursive>
10016fd0:	e7eb      	b.n	10016faa <_fclose_r+0x86>
10016fd2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10016fd4:	f001 fa32 	bl	1001843c <__retarget_lock_release_recursive>
10016fd8:	e7de      	b.n	10016f98 <_fclose_r+0x74>
10016fda:	6921      	ldr	r1, [r4, #16]
10016fdc:	4628      	mov	r0, r5
10016fde:	f002 fc2f 	bl	10019840 <_free_r>
10016fe2:	e7c0      	b.n	10016f66 <_fclose_r+0x42>

10016fe4 <_realloc_r>:
10016fe4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016fe8:	4616      	mov	r6, r2
10016fea:	2900      	cmp	r1, #0
10016fec:	f000 8096 	beq.w	1001711c <_realloc_r+0x138>
10016ff0:	460c      	mov	r4, r1
10016ff2:	4680      	mov	r8, r0
10016ff4:	f106 050b 	add.w	r5, r6, #11
10016ff8:	f7ff ff28 	bl	10016e4c <__malloc_lock>
10016ffc:	f854 1c04 	ldr.w	r1, [r4, #-4]
10017000:	2d16      	cmp	r5, #22
10017002:	f1a4 0908 	sub.w	r9, r4, #8
10017006:	f021 0703 	bic.w	r7, r1, #3
1001700a:	d858      	bhi.n	100170be <_realloc_r+0xda>
1001700c:	2510      	movs	r5, #16
1001700e:	42ae      	cmp	r6, r5
10017010:	d858      	bhi.n	100170c4 <_realloc_r+0xe0>
10017012:	42af      	cmp	r7, r5
10017014:	da60      	bge.n	100170d8 <_realloc_r+0xf4>
10017016:	4bbe      	ldr	r3, [pc, #760]	@ (10017310 <_realloc_r+0x32c>)
10017018:	689a      	ldr	r2, [r3, #8]
1001701a:	eb09 0c07 	add.w	ip, r9, r7
1001701e:	4562      	cmp	r2, ip
10017020:	f8dc 0004 	ldr.w	r0, [ip, #4]
10017024:	f000 8090 	beq.w	10017148 <_realloc_r+0x164>
10017028:	f020 0301 	bic.w	r3, r0, #1
1001702c:	4463      	add	r3, ip
1001702e:	685b      	ldr	r3, [r3, #4]
10017030:	07da      	lsls	r2, r3, #31
10017032:	d468      	bmi.n	10017106 <_realloc_r+0x122>
10017034:	f020 0003 	bic.w	r0, r0, #3
10017038:	183b      	adds	r3, r7, r0
1001703a:	429d      	cmp	r5, r3
1001703c:	dd47      	ble.n	100170ce <_realloc_r+0xea>
1001703e:	07cb      	lsls	r3, r1, #31
10017040:	d412      	bmi.n	10017068 <_realloc_r+0x84>
10017042:	f854 3c08 	ldr.w	r3, [r4, #-8]
10017046:	eba9 0b03 	sub.w	fp, r9, r3
1001704a:	f8db 3004 	ldr.w	r3, [fp, #4]
1001704e:	f023 0203 	bic.w	r2, r3, #3
10017052:	4410      	add	r0, r2
10017054:	eb00 0a07 	add.w	sl, r0, r7
10017058:	4555      	cmp	r5, sl
1001705a:	f340 80f6 	ble.w	1001724a <_realloc_r+0x266>
1001705e:	eb07 0a02 	add.w	sl, r7, r2
10017062:	4555      	cmp	r5, sl
10017064:	f340 80cc 	ble.w	10017200 <_realloc_r+0x21c>
10017068:	4631      	mov	r1, r6
1001706a:	4640      	mov	r0, r8
1001706c:	f7fc fd58 	bl	10013b20 <_malloc_r>
10017070:	4606      	mov	r6, r0
10017072:	2800      	cmp	r0, #0
10017074:	f000 8120 	beq.w	100172b8 <_realloc_r+0x2d4>
10017078:	f854 3c04 	ldr.w	r3, [r4, #-4]
1001707c:	f023 0301 	bic.w	r3, r3, #1
10017080:	444b      	add	r3, r9
10017082:	f1a0 0208 	sub.w	r2, r0, #8
10017086:	4293      	cmp	r3, r2
10017088:	f000 80b4 	beq.w	100171f4 <_realloc_r+0x210>
1001708c:	1f3a      	subs	r2, r7, #4
1001708e:	2a24      	cmp	r2, #36	@ 0x24
10017090:	f200 80d7 	bhi.w	10017242 <_realloc_r+0x25e>
10017094:	2a13      	cmp	r2, #19
10017096:	f200 80a2 	bhi.w	100171de <_realloc_r+0x1fa>
1001709a:	4603      	mov	r3, r0
1001709c:	4622      	mov	r2, r4
1001709e:	6811      	ldr	r1, [r2, #0]
100170a0:	6019      	str	r1, [r3, #0]
100170a2:	6851      	ldr	r1, [r2, #4]
100170a4:	6059      	str	r1, [r3, #4]
100170a6:	6892      	ldr	r2, [r2, #8]
100170a8:	609a      	str	r2, [r3, #8]
100170aa:	4621      	mov	r1, r4
100170ac:	4640      	mov	r0, r8
100170ae:	f002 fbc7 	bl	10019840 <_free_r>
100170b2:	4640      	mov	r0, r8
100170b4:	f7ff fed0 	bl	10016e58 <__malloc_unlock>
100170b8:	4630      	mov	r0, r6
100170ba:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
100170be:	f035 0507 	bics.w	r5, r5, #7
100170c2:	d5a4      	bpl.n	1001700e <_realloc_r+0x2a>
100170c4:	230c      	movs	r3, #12
100170c6:	f8c8 3000 	str.w	r3, [r8]
100170ca:	2600      	movs	r6, #0
100170cc:	e018      	b.n	10017100 <_realloc_r+0x11c>
100170ce:	461f      	mov	r7, r3
100170d0:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
100170d4:	60d3      	str	r3, [r2, #12]
100170d6:	609a      	str	r2, [r3, #8]
100170d8:	f8d9 3004 	ldr.w	r3, [r9, #4]
100170dc:	1b7a      	subs	r2, r7, r5
100170de:	2a0f      	cmp	r2, #15
100170e0:	f003 0301 	and.w	r3, r3, #1
100170e4:	eb09 0007 	add.w	r0, r9, r7
100170e8:	d81d      	bhi.n	10017126 <_realloc_r+0x142>
100170ea:	433b      	orrs	r3, r7
100170ec:	f8c9 3004 	str.w	r3, [r9, #4]
100170f0:	6843      	ldr	r3, [r0, #4]
100170f2:	f043 0301 	orr.w	r3, r3, #1
100170f6:	6043      	str	r3, [r0, #4]
100170f8:	4640      	mov	r0, r8
100170fa:	f7ff fead 	bl	10016e58 <__malloc_unlock>
100170fe:	4626      	mov	r6, r4
10017100:	4630      	mov	r0, r6
10017102:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017106:	07c9      	lsls	r1, r1, #31
10017108:	d4ae      	bmi.n	10017068 <_realloc_r+0x84>
1001710a:	f854 3c08 	ldr.w	r3, [r4, #-8]
1001710e:	eba9 0b03 	sub.w	fp, r9, r3
10017112:	f8db 3004 	ldr.w	r3, [fp, #4]
10017116:	f023 0203 	bic.w	r2, r3, #3
1001711a:	e7a0      	b.n	1001705e <_realloc_r+0x7a>
1001711c:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017120:	4611      	mov	r1, r2
10017122:	f7fc bcfd 	b.w	10013b20 <_malloc_r>
10017126:	eb09 0105 	add.w	r1, r9, r5
1001712a:	432b      	orrs	r3, r5
1001712c:	f042 0201 	orr.w	r2, r2, #1
10017130:	f8c9 3004 	str.w	r3, [r9, #4]
10017134:	604a      	str	r2, [r1, #4]
10017136:	6843      	ldr	r3, [r0, #4]
10017138:	f043 0301 	orr.w	r3, r3, #1
1001713c:	6043      	str	r3, [r0, #4]
1001713e:	3108      	adds	r1, #8
10017140:	4640      	mov	r0, r8
10017142:	f002 fb7d 	bl	10019840 <_free_r>
10017146:	e7d7      	b.n	100170f8 <_realloc_r+0x114>
10017148:	f020 0003 	bic.w	r0, r0, #3
1001714c:	19c2      	adds	r2, r0, r7
1001714e:	f105 0c10 	add.w	ip, r5, #16
10017152:	4562      	cmp	r2, ip
10017154:	f280 8091 	bge.w	1001727a <_realloc_r+0x296>
10017158:	07ca      	lsls	r2, r1, #31
1001715a:	d485      	bmi.n	10017068 <_realloc_r+0x84>
1001715c:	f854 2c08 	ldr.w	r2, [r4, #-8]
10017160:	eba9 0b02 	sub.w	fp, r9, r2
10017164:	f8db 2004 	ldr.w	r2, [fp, #4]
10017168:	f022 0203 	bic.w	r2, r2, #3
1001716c:	4410      	add	r0, r2
1001716e:	eb00 0a07 	add.w	sl, r0, r7
10017172:	45d4      	cmp	ip, sl
10017174:	f73f af73 	bgt.w	1001705e <_realloc_r+0x7a>
10017178:	465e      	mov	r6, fp
1001717a:	f8db 100c 	ldr.w	r1, [fp, #12]
1001717e:	f856 0f08 	ldr.w	r0, [r6, #8]!
10017182:	1f3a      	subs	r2, r7, #4
10017184:	2a24      	cmp	r2, #36	@ 0x24
10017186:	60c1      	str	r1, [r0, #12]
10017188:	6088      	str	r0, [r1, #8]
1001718a:	f200 80ae 	bhi.w	100172ea <_realloc_r+0x306>
1001718e:	2a13      	cmp	r2, #19
10017190:	f240 80a9 	bls.w	100172e6 <_realloc_r+0x302>
10017194:	6821      	ldr	r1, [r4, #0]
10017196:	f8cb 1008 	str.w	r1, [fp, #8]
1001719a:	6861      	ldr	r1, [r4, #4]
1001719c:	f8cb 100c 	str.w	r1, [fp, #12]
100171a0:	2a1b      	cmp	r2, #27
100171a2:	f200 80a8 	bhi.w	100172f6 <_realloc_r+0x312>
100171a6:	3408      	adds	r4, #8
100171a8:	f10b 0210 	add.w	r2, fp, #16
100171ac:	6821      	ldr	r1, [r4, #0]
100171ae:	6011      	str	r1, [r2, #0]
100171b0:	6861      	ldr	r1, [r4, #4]
100171b2:	6051      	str	r1, [r2, #4]
100171b4:	68a1      	ldr	r1, [r4, #8]
100171b6:	6091      	str	r1, [r2, #8]
100171b8:	eb0b 0105 	add.w	r1, fp, r5
100171bc:	ebaa 0205 	sub.w	r2, sl, r5
100171c0:	f042 0201 	orr.w	r2, r2, #1
100171c4:	6099      	str	r1, [r3, #8]
100171c6:	604a      	str	r2, [r1, #4]
100171c8:	f8db 3004 	ldr.w	r3, [fp, #4]
100171cc:	f003 0301 	and.w	r3, r3, #1
100171d0:	432b      	orrs	r3, r5
100171d2:	4640      	mov	r0, r8
100171d4:	f8cb 3004 	str.w	r3, [fp, #4]
100171d8:	f7ff fe3e 	bl	10016e58 <__malloc_unlock>
100171dc:	e790      	b.n	10017100 <_realloc_r+0x11c>
100171de:	6823      	ldr	r3, [r4, #0]
100171e0:	6003      	str	r3, [r0, #0]
100171e2:	6863      	ldr	r3, [r4, #4]
100171e4:	6043      	str	r3, [r0, #4]
100171e6:	2a1b      	cmp	r2, #27
100171e8:	d83c      	bhi.n	10017264 <_realloc_r+0x280>
100171ea:	f104 0208 	add.w	r2, r4, #8
100171ee:	f100 0308 	add.w	r3, r0, #8
100171f2:	e754      	b.n	1001709e <_realloc_r+0xba>
100171f4:	f850 3c04 	ldr.w	r3, [r0, #-4]
100171f8:	f023 0303 	bic.w	r3, r3, #3
100171fc:	441f      	add	r7, r3
100171fe:	e76b      	b.n	100170d8 <_realloc_r+0xf4>
10017200:	1f3a      	subs	r2, r7, #4
10017202:	465e      	mov	r6, fp
10017204:	f8db 300c 	ldr.w	r3, [fp, #12]
10017208:	f856 1f08 	ldr.w	r1, [r6, #8]!
1001720c:	2a24      	cmp	r2, #36	@ 0x24
1001720e:	60cb      	str	r3, [r1, #12]
10017210:	6099      	str	r1, [r3, #8]
10017212:	d822      	bhi.n	1001725a <_realloc_r+0x276>
10017214:	2a13      	cmp	r2, #19
10017216:	d91e      	bls.n	10017256 <_realloc_r+0x272>
10017218:	6823      	ldr	r3, [r4, #0]
1001721a:	f8cb 3008 	str.w	r3, [fp, #8]
1001721e:	6863      	ldr	r3, [r4, #4]
10017220:	f8cb 300c 	str.w	r3, [fp, #12]
10017224:	2a1b      	cmp	r2, #27
10017226:	d83b      	bhi.n	100172a0 <_realloc_r+0x2bc>
10017228:	3408      	adds	r4, #8
1001722a:	f10b 0310 	add.w	r3, fp, #16
1001722e:	6822      	ldr	r2, [r4, #0]
10017230:	601a      	str	r2, [r3, #0]
10017232:	6862      	ldr	r2, [r4, #4]
10017234:	605a      	str	r2, [r3, #4]
10017236:	68a2      	ldr	r2, [r4, #8]
10017238:	609a      	str	r2, [r3, #8]
1001723a:	4634      	mov	r4, r6
1001723c:	4657      	mov	r7, sl
1001723e:	46d9      	mov	r9, fp
10017240:	e74a      	b.n	100170d8 <_realloc_r+0xf4>
10017242:	4621      	mov	r1, r4
10017244:	f000 fd94 	bl	10017d70 <memmove>
10017248:	e72f      	b.n	100170aa <_realloc_r+0xc6>
1001724a:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
1001724e:	1f3a      	subs	r2, r7, #4
10017250:	60cb      	str	r3, [r1, #12]
10017252:	6099      	str	r1, [r3, #8]
10017254:	e7d5      	b.n	10017202 <_realloc_r+0x21e>
10017256:	4633      	mov	r3, r6
10017258:	e7e9      	b.n	1001722e <_realloc_r+0x24a>
1001725a:	4621      	mov	r1, r4
1001725c:	4630      	mov	r0, r6
1001725e:	f000 fd87 	bl	10017d70 <memmove>
10017262:	e7ea      	b.n	1001723a <_realloc_r+0x256>
10017264:	68a3      	ldr	r3, [r4, #8]
10017266:	6083      	str	r3, [r0, #8]
10017268:	68e3      	ldr	r3, [r4, #12]
1001726a:	60c3      	str	r3, [r0, #12]
1001726c:	2a24      	cmp	r2, #36	@ 0x24
1001726e:	d027      	beq.n	100172c0 <_realloc_r+0x2dc>
10017270:	f104 0210 	add.w	r2, r4, #16
10017274:	f100 0310 	add.w	r3, r0, #16
10017278:	e711      	b.n	1001709e <_realloc_r+0xba>
1001727a:	eb09 0105 	add.w	r1, r9, r5
1001727e:	6099      	str	r1, [r3, #8]
10017280:	1b53      	subs	r3, r2, r5
10017282:	f043 0301 	orr.w	r3, r3, #1
10017286:	604b      	str	r3, [r1, #4]
10017288:	f854 3c04 	ldr.w	r3, [r4, #-4]
1001728c:	f003 0301 	and.w	r3, r3, #1
10017290:	432b      	orrs	r3, r5
10017292:	4640      	mov	r0, r8
10017294:	f844 3c04 	str.w	r3, [r4, #-4]
10017298:	f7ff fdde 	bl	10016e58 <__malloc_unlock>
1001729c:	4626      	mov	r6, r4
1001729e:	e72f      	b.n	10017100 <_realloc_r+0x11c>
100172a0:	68a3      	ldr	r3, [r4, #8]
100172a2:	f8cb 3010 	str.w	r3, [fp, #16]
100172a6:	68e3      	ldr	r3, [r4, #12]
100172a8:	f8cb 3014 	str.w	r3, [fp, #20]
100172ac:	2a24      	cmp	r2, #36	@ 0x24
100172ae:	d010      	beq.n	100172d2 <_realloc_r+0x2ee>
100172b0:	3410      	adds	r4, #16
100172b2:	f10b 0318 	add.w	r3, fp, #24
100172b6:	e7ba      	b.n	1001722e <_realloc_r+0x24a>
100172b8:	4640      	mov	r0, r8
100172ba:	f7ff fdcd 	bl	10016e58 <__malloc_unlock>
100172be:	e704      	b.n	100170ca <_realloc_r+0xe6>
100172c0:	6923      	ldr	r3, [r4, #16]
100172c2:	6103      	str	r3, [r0, #16]
100172c4:	6961      	ldr	r1, [r4, #20]
100172c6:	6141      	str	r1, [r0, #20]
100172c8:	f104 0218 	add.w	r2, r4, #24
100172cc:	f100 0318 	add.w	r3, r0, #24
100172d0:	e6e5      	b.n	1001709e <_realloc_r+0xba>
100172d2:	6923      	ldr	r3, [r4, #16]
100172d4:	f8cb 3018 	str.w	r3, [fp, #24]
100172d8:	6963      	ldr	r3, [r4, #20]
100172da:	f8cb 301c 	str.w	r3, [fp, #28]
100172de:	3418      	adds	r4, #24
100172e0:	f10b 0320 	add.w	r3, fp, #32
100172e4:	e7a3      	b.n	1001722e <_realloc_r+0x24a>
100172e6:	4632      	mov	r2, r6
100172e8:	e760      	b.n	100171ac <_realloc_r+0x1c8>
100172ea:	4621      	mov	r1, r4
100172ec:	4630      	mov	r0, r6
100172ee:	f000 fd3f 	bl	10017d70 <memmove>
100172f2:	4b07      	ldr	r3, [pc, #28]	@ (10017310 <_realloc_r+0x32c>)
100172f4:	e760      	b.n	100171b8 <_realloc_r+0x1d4>
100172f6:	68a1      	ldr	r1, [r4, #8]
100172f8:	f8cb 1010 	str.w	r1, [fp, #16]
100172fc:	68e1      	ldr	r1, [r4, #12]
100172fe:	f8cb 1014 	str.w	r1, [fp, #20]
10017302:	2a24      	cmp	r2, #36	@ 0x24
10017304:	d006      	beq.n	10017314 <_realloc_r+0x330>
10017306:	3410      	adds	r4, #16
10017308:	f10b 0218 	add.w	r2, fp, #24
1001730c:	e74e      	b.n	100171ac <_realloc_r+0x1c8>
1001730e:	bf00      	nop
10017310:	20000018 	.word	0x20000018
10017314:	6922      	ldr	r2, [r4, #16]
10017316:	f8cb 2018 	str.w	r2, [fp, #24]
1001731a:	6962      	ldr	r2, [r4, #20]
1001731c:	f8cb 201c 	str.w	r2, [fp, #28]
10017320:	3418      	adds	r4, #24
10017322:	f10b 0220 	add.w	r2, fp, #32
10017326:	e741      	b.n	100171ac <_realloc_r+0x1c8>

10017328 <__sflush_r>:
10017328:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
1001732c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001732e:	4607      	mov	r7, r0
10017330:	0710      	lsls	r0, r2, #28
10017332:	460c      	mov	r4, r1
10017334:	d446      	bmi.n	100173c4 <__sflush_r+0x9c>
10017336:	6849      	ldr	r1, [r1, #4]
10017338:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
1001733c:	2900      	cmp	r1, #0
1001733e:	81a3      	strh	r3, [r4, #12]
10017340:	dd5c      	ble.n	100173fc <__sflush_r+0xd4>
10017342:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10017344:	2d00      	cmp	r5, #0
10017346:	d03b      	beq.n	100173c0 <__sflush_r+0x98>
10017348:	2100      	movs	r1, #0
1001734a:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
1001734e:	683e      	ldr	r6, [r7, #0]
10017350:	6039      	str	r1, [r7, #0]
10017352:	69e1      	ldr	r1, [r4, #28]
10017354:	d15e      	bne.n	10017414 <__sflush_r+0xec>
10017356:	2301      	movs	r3, #1
10017358:	4638      	mov	r0, r7
1001735a:	47a8      	blx	r5
1001735c:	1c41      	adds	r1, r0, #1
1001735e:	4602      	mov	r2, r0
10017360:	d068      	beq.n	10017434 <__sflush_r+0x10c>
10017362:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017366:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10017368:	69e1      	ldr	r1, [r4, #28]
1001736a:	075b      	lsls	r3, r3, #29
1001736c:	d505      	bpl.n	1001737a <__sflush_r+0x52>
1001736e:	6863      	ldr	r3, [r4, #4]
10017370:	1ad2      	subs	r2, r2, r3
10017372:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10017374:	b10b      	cbz	r3, 1001737a <__sflush_r+0x52>
10017376:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
10017378:	1ad2      	subs	r2, r2, r3
1001737a:	2300      	movs	r3, #0
1001737c:	4638      	mov	r0, r7
1001737e:	47a8      	blx	r5
10017380:	1c45      	adds	r5, r0, #1
10017382:	d149      	bne.n	10017418 <__sflush_r+0xf0>
10017384:	6839      	ldr	r1, [r7, #0]
10017386:	291d      	cmp	r1, #29
10017388:	d83c      	bhi.n	10017404 <__sflush_r+0xdc>
1001738a:	4a30      	ldr	r2, [pc, #192]	@ (1001744c <__sflush_r+0x124>)
1001738c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017390:	410a      	asrs	r2, r1
10017392:	f012 0201 	ands.w	r2, r2, #1
10017396:	d137      	bne.n	10017408 <__sflush_r+0xe0>
10017398:	6062      	str	r2, [r4, #4]
1001739a:	6922      	ldr	r2, [r4, #16]
1001739c:	6022      	str	r2, [r4, #0]
1001739e:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
100173a2:	81a2      	strh	r2, [r4, #12]
100173a4:	04da      	lsls	r2, r3, #19
100173a6:	d44e      	bmi.n	10017446 <__sflush_r+0x11e>
100173a8:	6b21      	ldr	r1, [r4, #48]	@ 0x30
100173aa:	603e      	str	r6, [r7, #0]
100173ac:	b141      	cbz	r1, 100173c0 <__sflush_r+0x98>
100173ae:	f104 0340 	add.w	r3, r4, #64	@ 0x40
100173b2:	4299      	cmp	r1, r3
100173b4:	d002      	beq.n	100173bc <__sflush_r+0x94>
100173b6:	4638      	mov	r0, r7
100173b8:	f002 fa42 	bl	10019840 <_free_r>
100173bc:	2300      	movs	r3, #0
100173be:	6323      	str	r3, [r4, #48]	@ 0x30
100173c0:	2000      	movs	r0, #0
100173c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100173c4:	690e      	ldr	r6, [r1, #16]
100173c6:	2e00      	cmp	r6, #0
100173c8:	d0fa      	beq.n	100173c0 <__sflush_r+0x98>
100173ca:	680d      	ldr	r5, [r1, #0]
100173cc:	600e      	str	r6, [r1, #0]
100173ce:	0791      	lsls	r1, r2, #30
100173d0:	bf0c      	ite	eq
100173d2:	6963      	ldreq	r3, [r4, #20]
100173d4:	2300      	movne	r3, #0
100173d6:	1bad      	subs	r5, r5, r6
100173d8:	60a3      	str	r3, [r4, #8]
100173da:	e00c      	b.n	100173f6 <__sflush_r+0xce>
100173dc:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
100173e0:	69e1      	ldr	r1, [r4, #28]
100173e2:	462b      	mov	r3, r5
100173e4:	4632      	mov	r2, r6
100173e6:	4638      	mov	r0, r7
100173e8:	47e0      	blx	ip
100173ea:	f1b0 0c00 	subs.w	ip, r0, #0
100173ee:	eba5 050c 	sub.w	r5, r5, ip
100173f2:	4466      	add	r6, ip
100173f4:	dd06      	ble.n	10017404 <__sflush_r+0xdc>
100173f6:	2d00      	cmp	r5, #0
100173f8:	dcf0      	bgt.n	100173dc <__sflush_r+0xb4>
100173fa:	e7e1      	b.n	100173c0 <__sflush_r+0x98>
100173fc:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
100173fe:	2900      	cmp	r1, #0
10017400:	dc9f      	bgt.n	10017342 <__sflush_r+0x1a>
10017402:	e7dd      	b.n	100173c0 <__sflush_r+0x98>
10017404:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017408:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001740c:	81a3      	strh	r3, [r4, #12]
1001740e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017412:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10017414:	6d22      	ldr	r2, [r4, #80]	@ 0x50
10017416:	e7a8      	b.n	1001736a <__sflush_r+0x42>
10017418:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001741c:	6922      	ldr	r2, [r4, #16]
1001741e:	6022      	str	r2, [r4, #0]
10017420:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10017424:	81a2      	strh	r2, [r4, #12]
10017426:	04db      	lsls	r3, r3, #19
10017428:	f04f 0200 	mov.w	r2, #0
1001742c:	6062      	str	r2, [r4, #4]
1001742e:	d5bb      	bpl.n	100173a8 <__sflush_r+0x80>
10017430:	6520      	str	r0, [r4, #80]	@ 0x50
10017432:	e7b9      	b.n	100173a8 <__sflush_r+0x80>
10017434:	683b      	ldr	r3, [r7, #0]
10017436:	2b00      	cmp	r3, #0
10017438:	d093      	beq.n	10017362 <__sflush_r+0x3a>
1001743a:	2b1d      	cmp	r3, #29
1001743c:	d001      	beq.n	10017442 <__sflush_r+0x11a>
1001743e:	2b16      	cmp	r3, #22
10017440:	d1e0      	bne.n	10017404 <__sflush_r+0xdc>
10017442:	603e      	str	r6, [r7, #0]
10017444:	e7bc      	b.n	100173c0 <__sflush_r+0x98>
10017446:	2900      	cmp	r1, #0
10017448:	d1ae      	bne.n	100173a8 <__sflush_r+0x80>
1001744a:	e7f1      	b.n	10017430 <__sflush_r+0x108>
1001744c:	dfbffffe 	.word	0xdfbffffe

10017450 <_fflush_r>:
10017450:	b538      	push	{r3, r4, r5, lr}
10017452:	460c      	mov	r4, r1
10017454:	4605      	mov	r5, r0
10017456:	b108      	cbz	r0, 1001745c <_fflush_r+0xc>
10017458:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001745a:	b303      	cbz	r3, 1001749e <_fflush_r+0x4e>
1001745c:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
10017460:	b188      	cbz	r0, 10017486 <_fflush_r+0x36>
10017462:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017464:	07db      	lsls	r3, r3, #31
10017466:	d401      	bmi.n	1001746c <_fflush_r+0x1c>
10017468:	0581      	lsls	r1, r0, #22
1001746a:	d50f      	bpl.n	1001748c <_fflush_r+0x3c>
1001746c:	4628      	mov	r0, r5
1001746e:	4621      	mov	r1, r4
10017470:	f7ff ff5a 	bl	10017328 <__sflush_r>
10017474:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017476:	07da      	lsls	r2, r3, #31
10017478:	4605      	mov	r5, r0
1001747a:	d402      	bmi.n	10017482 <_fflush_r+0x32>
1001747c:	89a3      	ldrh	r3, [r4, #12]
1001747e:	059b      	lsls	r3, r3, #22
10017480:	d508      	bpl.n	10017494 <_fflush_r+0x44>
10017482:	4628      	mov	r0, r5
10017484:	bd38      	pop	{r3, r4, r5, pc}
10017486:	4605      	mov	r5, r0
10017488:	4628      	mov	r0, r5
1001748a:	bd38      	pop	{r3, r4, r5, pc}
1001748c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001748e:	f000 ffd3 	bl	10018438 <__retarget_lock_acquire_recursive>
10017492:	e7eb      	b.n	1001746c <_fflush_r+0x1c>
10017494:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017496:	f000 ffd1 	bl	1001843c <__retarget_lock_release_recursive>
1001749a:	4628      	mov	r0, r5
1001749c:	bd38      	pop	{r3, r4, r5, pc}
1001749e:	f000 f9cf 	bl	10017840 <__sinit>
100174a2:	e7db      	b.n	1001745c <_fflush_r+0xc>

100174a4 <fflush>:
100174a4:	b350      	cbz	r0, 100174fc <fflush+0x58>
100174a6:	b538      	push	{r3, r4, r5, lr}
100174a8:	4b17      	ldr	r3, [pc, #92]	@ (10017508 <fflush+0x64>)
100174aa:	681d      	ldr	r5, [r3, #0]
100174ac:	4604      	mov	r4, r0
100174ae:	b10d      	cbz	r5, 100174b4 <fflush+0x10>
100174b0:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
100174b2:	b1bb      	cbz	r3, 100174e4 <fflush+0x40>
100174b4:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
100174b8:	b188      	cbz	r0, 100174de <fflush+0x3a>
100174ba:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100174bc:	07db      	lsls	r3, r3, #31
100174be:	d401      	bmi.n	100174c4 <fflush+0x20>
100174c0:	0581      	lsls	r1, r0, #22
100174c2:	d513      	bpl.n	100174ec <fflush+0x48>
100174c4:	4628      	mov	r0, r5
100174c6:	4621      	mov	r1, r4
100174c8:	f7ff ff2e 	bl	10017328 <__sflush_r>
100174cc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100174ce:	07da      	lsls	r2, r3, #31
100174d0:	4605      	mov	r5, r0
100174d2:	d402      	bmi.n	100174da <fflush+0x36>
100174d4:	89a3      	ldrh	r3, [r4, #12]
100174d6:	059b      	lsls	r3, r3, #22
100174d8:	d50c      	bpl.n	100174f4 <fflush+0x50>
100174da:	4628      	mov	r0, r5
100174dc:	bd38      	pop	{r3, r4, r5, pc}
100174de:	4605      	mov	r5, r0
100174e0:	4628      	mov	r0, r5
100174e2:	bd38      	pop	{r3, r4, r5, pc}
100174e4:	4628      	mov	r0, r5
100174e6:	f000 f9ab 	bl	10017840 <__sinit>
100174ea:	e7e3      	b.n	100174b4 <fflush+0x10>
100174ec:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100174ee:	f000 ffa3 	bl	10018438 <__retarget_lock_acquire_recursive>
100174f2:	e7e7      	b.n	100174c4 <fflush+0x20>
100174f4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100174f6:	f000 ffa1 	bl	1001843c <__retarget_lock_release_recursive>
100174fa:	e7ee      	b.n	100174da <fflush+0x36>
100174fc:	4a03      	ldr	r2, [pc, #12]	@ (1001750c <fflush+0x68>)
100174fe:	4904      	ldr	r1, [pc, #16]	@ (10017510 <fflush+0x6c>)
10017500:	4804      	ldr	r0, [pc, #16]	@ (10017514 <fflush+0x70>)
10017502:	f000 bb43 	b.w	10017b8c <_fwalk_sglue>
10017506:	bf00      	nop
10017508:	20000598 	.word	0x20000598
1001750c:	20000420 	.word	0x20000420
10017510:	10017451 	.word	0x10017451
10017514:	200005a0 	.word	0x200005a0

10017518 <_fgets_r>:
10017518:	2a01      	cmp	r2, #1
1001751a:	dd6b      	ble.n	100175f4 <_fgets_r+0xdc>
1001751c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10017520:	4616      	mov	r6, r2
10017522:	4680      	mov	r8, r0
10017524:	4689      	mov	r9, r1
10017526:	461c      	mov	r4, r3
10017528:	b110      	cbz	r0, 10017530 <_fgets_r+0x18>
1001752a:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001752c:	2b00      	cmp	r3, #0
1001752e:	d057      	beq.n	100175e0 <_fgets_r+0xc8>
10017530:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017532:	07db      	lsls	r3, r3, #31
10017534:	d53a      	bpl.n	100175ac <_fgets_r+0x94>
10017536:	3e01      	subs	r6, #1
10017538:	464f      	mov	r7, r9
1001753a:	e00b      	b.n	10017554 <_fgets_r+0x3c>
1001753c:	e9d4 3c00 	ldrd	r3, ip, [r4]
10017540:	ebac 0c05 	sub.w	ip, ip, r5
10017544:	442b      	add	r3, r5
10017546:	e9c4 3c00 	strd	r3, ip, [r4]
1001754a:	f000 ffc9 	bl	100184e0 <memcpy>
1001754e:	1b76      	subs	r6, r6, r5
10017550:	442f      	add	r7, r5
10017552:	d032      	beq.n	100175ba <_fgets_r+0xa2>
10017554:	6863      	ldr	r3, [r4, #4]
10017556:	4621      	mov	r1, r4
10017558:	4640      	mov	r0, r8
1001755a:	b923      	cbnz	r3, 10017566 <_fgets_r+0x4e>
1001755c:	f006 fa64 	bl	1001da28 <__srefill_r>
10017560:	2800      	cmp	r0, #0
10017562:	d136      	bne.n	100175d2 <_fgets_r+0xba>
10017564:	6863      	ldr	r3, [r4, #4]
10017566:	f8d4 a000 	ldr.w	sl, [r4]
1001756a:	42b3      	cmp	r3, r6
1001756c:	bf28      	it	cs
1001756e:	4633      	movcs	r3, r6
10017570:	461a      	mov	r2, r3
10017572:	210a      	movs	r1, #10
10017574:	4650      	mov	r0, sl
10017576:	461d      	mov	r5, r3
10017578:	f000 ff62 	bl	10018440 <memchr>
1001757c:	4603      	mov	r3, r0
1001757e:	462a      	mov	r2, r5
10017580:	4638      	mov	r0, r7
10017582:	4651      	mov	r1, sl
10017584:	2b00      	cmp	r3, #0
10017586:	d0d9      	beq.n	1001753c <_fgets_r+0x24>
10017588:	3301      	adds	r3, #1
1001758a:	eba3 050a 	sub.w	r5, r3, sl
1001758e:	6023      	str	r3, [r4, #0]
10017590:	6863      	ldr	r3, [r4, #4]
10017592:	1b5b      	subs	r3, r3, r5
10017594:	6063      	str	r3, [r4, #4]
10017596:	462a      	mov	r2, r5
10017598:	f000 ffa2 	bl	100184e0 <memcpy>
1001759c:	2300      	movs	r3, #0
1001759e:	557b      	strb	r3, [r7, r5]
100175a0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100175a2:	07d9      	lsls	r1, r3, #31
100175a4:	d50e      	bpl.n	100175c4 <_fgets_r+0xac>
100175a6:	4648      	mov	r0, r9
100175a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
100175ac:	89a3      	ldrh	r3, [r4, #12]
100175ae:	059f      	lsls	r7, r3, #22
100175b0:	d4c1      	bmi.n	10017536 <_fgets_r+0x1e>
100175b2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100175b4:	f000 ff40 	bl	10018438 <__retarget_lock_acquire_recursive>
100175b8:	e7bd      	b.n	10017536 <_fgets_r+0x1e>
100175ba:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100175bc:	2200      	movs	r2, #0
100175be:	703a      	strb	r2, [r7, #0]
100175c0:	07da      	lsls	r2, r3, #31
100175c2:	d4f0      	bmi.n	100175a6 <_fgets_r+0x8e>
100175c4:	89a3      	ldrh	r3, [r4, #12]
100175c6:	059b      	lsls	r3, r3, #22
100175c8:	d4ed      	bmi.n	100175a6 <_fgets_r+0x8e>
100175ca:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100175cc:	f000 ff36 	bl	1001843c <__retarget_lock_release_recursive>
100175d0:	e7e9      	b.n	100175a6 <_fgets_r+0x8e>
100175d2:	454f      	cmp	r7, r9
100175d4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100175d6:	d1f1      	bne.n	100175bc <_fgets_r+0xa4>
100175d8:	07dd      	lsls	r5, r3, #31
100175da:	d504      	bpl.n	100175e6 <_fgets_r+0xce>
100175dc:	2000      	movs	r0, #0
100175de:	e7e3      	b.n	100175a8 <_fgets_r+0x90>
100175e0:	f000 f92e 	bl	10017840 <__sinit>
100175e4:	e7a4      	b.n	10017530 <_fgets_r+0x18>
100175e6:	89a3      	ldrh	r3, [r4, #12]
100175e8:	0598      	lsls	r0, r3, #22
100175ea:	d4f7      	bmi.n	100175dc <_fgets_r+0xc4>
100175ec:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100175ee:	f000 ff25 	bl	1001843c <__retarget_lock_release_recursive>
100175f2:	e7f3      	b.n	100175dc <_fgets_r+0xc4>
100175f4:	2000      	movs	r0, #0
100175f6:	4770      	bx	lr

100175f8 <fgets>:
100175f8:	b410      	push	{r4}
100175fa:	4c04      	ldr	r4, [pc, #16]	@ (1001760c <fgets+0x14>)
100175fc:	4684      	mov	ip, r0
100175fe:	4613      	mov	r3, r2
10017600:	6820      	ldr	r0, [r4, #0]
10017602:	bc10      	pop	{r4}
10017604:	460a      	mov	r2, r1
10017606:	4661      	mov	r1, ip
10017608:	f7ff bf86 	b.w	10017518 <_fgets_r>
1001760c:	20000598 	.word	0x20000598

10017610 <sscanf>:
10017610:	b40e      	push	{r1, r2, r3}
10017612:	b530      	push	{r4, r5, lr}
10017614:	b09c      	sub	sp, #112	@ 0x70
10017616:	ac1f      	add	r4, sp, #124	@ 0x7c
10017618:	f44f 7201 	mov.w	r2, #516	@ 0x204
1001761c:	f854 5b04 	ldr.w	r5, [r4], #4
10017620:	f8ad 2014 	strh.w	r2, [sp, #20]
10017624:	9002      	str	r0, [sp, #8]
10017626:	9006      	str	r0, [sp, #24]
10017628:	f001 f80a 	bl	10018640 <strlen>
1001762c:	9003      	str	r0, [sp, #12]
1001762e:	9007      	str	r0, [sp, #28]
10017630:	480a      	ldr	r0, [pc, #40]	@ (1001765c <sscanf+0x4c>)
10017632:	490b      	ldr	r1, [pc, #44]	@ (10017660 <sscanf+0x50>)
10017634:	910a      	str	r1, [sp, #40]	@ 0x28
10017636:	2300      	movs	r3, #0
10017638:	f64f 7cff 	movw	ip, #65535	@ 0xffff
1001763c:	930e      	str	r3, [sp, #56]	@ 0x38
1001763e:	9313      	str	r3, [sp, #76]	@ 0x4c
10017640:	462a      	mov	r2, r5
10017642:	4623      	mov	r3, r4
10017644:	a902      	add	r1, sp, #8
10017646:	6800      	ldr	r0, [r0, #0]
10017648:	f8ad c016 	strh.w	ip, [sp, #22]
1001764c:	9401      	str	r4, [sp, #4]
1001764e:	f004 f845 	bl	1001b6dc <__ssvfscanf_r>
10017652:	b01c      	add	sp, #112	@ 0x70
10017654:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
10017658:	b003      	add	sp, #12
1001765a:	4770      	bx	lr
1001765c:	20000598 	.word	0x20000598
10017660:	10017689 	.word	0x10017689

10017664 <__sread>:
10017664:	b510      	push	{r4, lr}
10017666:	460c      	mov	r4, r1
10017668:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1001766c:	f000 fcf0 	bl	10018050 <_read_r>
10017670:	2800      	cmp	r0, #0
10017672:	db03      	blt.n	1001767c <__sread+0x18>
10017674:	6d23      	ldr	r3, [r4, #80]	@ 0x50
10017676:	4403      	add	r3, r0
10017678:	6523      	str	r3, [r4, #80]	@ 0x50
1001767a:	bd10      	pop	{r4, pc}
1001767c:	89a3      	ldrh	r3, [r4, #12]
1001767e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10017682:	81a3      	strh	r3, [r4, #12]
10017684:	bd10      	pop	{r4, pc}
10017686:	bf00      	nop

10017688 <__seofread>:
10017688:	2000      	movs	r0, #0
1001768a:	4770      	bx	lr

1001768c <__swrite>:
1001768c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10017690:	460c      	mov	r4, r1
10017692:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10017696:	461f      	mov	r7, r3
10017698:	05cb      	lsls	r3, r1, #23
1001769a:	4605      	mov	r5, r0
1001769c:	4616      	mov	r6, r2
1001769e:	d40b      	bmi.n	100176b8 <__swrite+0x2c>
100176a0:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
100176a4:	81a1      	strh	r1, [r4, #12]
100176a6:	463b      	mov	r3, r7
100176a8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
100176ac:	4632      	mov	r2, r6
100176ae:	4628      	mov	r0, r5
100176b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
100176b4:	f000 bcf4 	b.w	100180a0 <_write_r>
100176b8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
100176bc:	2302      	movs	r3, #2
100176be:	2200      	movs	r2, #0
100176c0:	f000 fcb0 	bl	10018024 <_lseek_r>
100176c4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
100176c8:	e7ea      	b.n	100176a0 <__swrite+0x14>
100176ca:	bf00      	nop

100176cc <__sseek>:
100176cc:	b510      	push	{r4, lr}
100176ce:	460c      	mov	r4, r1
100176d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
100176d4:	f000 fca6 	bl	10018024 <_lseek_r>
100176d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100176dc:	1c42      	adds	r2, r0, #1
100176de:	bf0e      	itee	eq
100176e0:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
100176e4:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
100176e8:	6520      	strne	r0, [r4, #80]	@ 0x50
100176ea:	81a3      	strh	r3, [r4, #12]
100176ec:	bd10      	pop	{r4, pc}
100176ee:	bf00      	nop

100176f0 <__sclose>:
100176f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
100176f4:	f000 bc6e 	b.w	10017fd4 <_close_r>

100176f8 <stdio_exit_handler>:
100176f8:	4a02      	ldr	r2, [pc, #8]	@ (10017704 <stdio_exit_handler+0xc>)
100176fa:	4903      	ldr	r1, [pc, #12]	@ (10017708 <stdio_exit_handler+0x10>)
100176fc:	4803      	ldr	r0, [pc, #12]	@ (1001770c <stdio_exit_handler+0x14>)
100176fe:	f000 ba45 	b.w	10017b8c <_fwalk_sglue>
10017702:	bf00      	nop
10017704:	20000420 	.word	0x20000420
10017708:	10016f25 	.word	0x10016f25
1001770c:	200005a0 	.word	0x200005a0

10017710 <cleanup_stdio>:
10017710:	4b0c      	ldr	r3, [pc, #48]	@ (10017744 <cleanup_stdio+0x34>)
10017712:	6841      	ldr	r1, [r0, #4]
10017714:	4299      	cmp	r1, r3
10017716:	b510      	push	{r4, lr}
10017718:	4604      	mov	r4, r0
1001771a:	d001      	beq.n	10017720 <cleanup_stdio+0x10>
1001771c:	f7ff fc02 	bl	10016f24 <_fclose_r>
10017720:	68a1      	ldr	r1, [r4, #8]
10017722:	4b09      	ldr	r3, [pc, #36]	@ (10017748 <cleanup_stdio+0x38>)
10017724:	4299      	cmp	r1, r3
10017726:	d002      	beq.n	1001772e <cleanup_stdio+0x1e>
10017728:	4620      	mov	r0, r4
1001772a:	f7ff fbfb 	bl	10016f24 <_fclose_r>
1001772e:	68e1      	ldr	r1, [r4, #12]
10017730:	4b06      	ldr	r3, [pc, #24]	@ (1001774c <cleanup_stdio+0x3c>)
10017732:	4299      	cmp	r1, r3
10017734:	d004      	beq.n	10017740 <cleanup_stdio+0x30>
10017736:	4620      	mov	r0, r4
10017738:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001773c:	f7ff bbf2 	b.w	10016f24 <_fclose_r>
10017740:	bd10      	pop	{r4, pc}
10017742:	bf00      	nop
10017744:	20001488 	.word	0x20001488
10017748:	200014f0 	.word	0x200014f0
1001774c:	20001558 	.word	0x20001558

10017750 <global_stdio_init.part.0>:
10017750:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10017754:	4c31      	ldr	r4, [pc, #196]	@ (1001781c <global_stdio_init.part.0+0xcc>)
10017756:	4b32      	ldr	r3, [pc, #200]	@ (10017820 <global_stdio_init.part.0+0xd0>)
10017758:	4832      	ldr	r0, [pc, #200]	@ (10017824 <global_stdio_init.part.0+0xd4>)
1001775a:	f8df 90cc 	ldr.w	r9, [pc, #204]	@ 10017828 <global_stdio_init.part.0+0xd8>
1001775e:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 1001782c <global_stdio_init.part.0+0xdc>
10017762:	4f33      	ldr	r7, [pc, #204]	@ (10017830 <global_stdio_init.part.0+0xe0>)
10017764:	6018      	str	r0, [r3, #0]
10017766:	2500      	movs	r5, #0
10017768:	4629      	mov	r1, r5
1001776a:	2304      	movs	r3, #4
1001776c:	2208      	movs	r2, #8
1001776e:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
10017772:	4e30      	ldr	r6, [pc, #192]	@ (10017834 <global_stdio_init.part.0+0xe4>)
10017774:	60e3      	str	r3, [r4, #12]
10017776:	e9c4 5500 	strd	r5, r5, [r4]
1001777a:	e9c4 5504 	strd	r5, r5, [r4, #16]
1001777e:	60a5      	str	r5, [r4, #8]
10017780:	6665      	str	r5, [r4, #100]	@ 0x64
10017782:	61a5      	str	r5, [r4, #24]
10017784:	f000 fb74 	bl	10017e70 <memset>
10017788:	f104 0058 	add.w	r0, r4, #88	@ 0x58
1001778c:	e9c4 4907 	strd	r4, r9, [r4, #28]
10017790:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
10017794:	62e6      	str	r6, [r4, #44]	@ 0x2c
10017796:	f000 fe4b 	bl	10018430 <__retarget_lock_init_recursive>
1001779a:	4629      	mov	r1, r5
1001779c:	4b26      	ldr	r3, [pc, #152]	@ (10017838 <global_stdio_init.part.0+0xe8>)
1001779e:	6763      	str	r3, [r4, #116]	@ 0x74
100177a0:	2208      	movs	r2, #8
100177a2:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
100177a6:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
100177aa:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
100177ae:	6725      	str	r5, [r4, #112]	@ 0x70
100177b0:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
100177b4:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
100177b8:	f000 fb5a 	bl	10017e70 <memset>
100177bc:	f104 0368 	add.w	r3, r4, #104	@ 0x68
100177c0:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
100177c4:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
100177c8:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
100177cc:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
100177d0:	f000 fe2e 	bl	10018430 <__retarget_lock_init_recursive>
100177d4:	4b19      	ldr	r3, [pc, #100]	@ (1001783c <global_stdio_init.part.0+0xec>)
100177d6:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
100177da:	4629      	mov	r1, r5
100177dc:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
100177e0:	2208      	movs	r2, #8
100177e2:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
100177e6:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
100177ea:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
100177ee:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
100177f2:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
100177f6:	f000 fb3b 	bl	10017e70 <memset>
100177fa:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
100177fe:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
10017802:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
10017806:	f504 7094 	add.w	r0, r4, #296	@ 0x128
1001780a:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
1001780e:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
10017812:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10017816:	f000 be0b 	b.w	10018430 <__retarget_lock_init_recursive>
1001781a:	bf00      	nop
1001781c:	20001488 	.word	0x20001488
10017820:	200015c0 	.word	0x200015c0
10017824:	100176f9 	.word	0x100176f9
10017828:	10017665 	.word	0x10017665
1001782c:	1001768d 	.word	0x1001768d
10017830:	100176cd 	.word	0x100176cd
10017834:	100176f1 	.word	0x100176f1
10017838:	00010009 	.word	0x00010009
1001783c:	00020012 	.word	0x00020012

10017840 <__sinit>:
10017840:	b510      	push	{r4, lr}
10017842:	4604      	mov	r4, r0
10017844:	480a      	ldr	r0, [pc, #40]	@ (10017870 <__sinit+0x30>)
10017846:	f000 fdf7 	bl	10018438 <__retarget_lock_acquire_recursive>
1001784a:	6b63      	ldr	r3, [r4, #52]	@ 0x34
1001784c:	b923      	cbnz	r3, 10017858 <__sinit+0x18>
1001784e:	4b09      	ldr	r3, [pc, #36]	@ (10017874 <__sinit+0x34>)
10017850:	4a09      	ldr	r2, [pc, #36]	@ (10017878 <__sinit+0x38>)
10017852:	681b      	ldr	r3, [r3, #0]
10017854:	6362      	str	r2, [r4, #52]	@ 0x34
10017856:	b123      	cbz	r3, 10017862 <__sinit+0x22>
10017858:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001785c:	4804      	ldr	r0, [pc, #16]	@ (10017870 <__sinit+0x30>)
1001785e:	f000 bded 	b.w	1001843c <__retarget_lock_release_recursive>
10017862:	f7ff ff75 	bl	10017750 <global_stdio_init.part.0>
10017866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001786a:	4801      	ldr	r0, [pc, #4]	@ (10017870 <__sinit+0x30>)
1001786c:	f000 bde6 	b.w	1001843c <__retarget_lock_release_recursive>
10017870:	200015d0 	.word	0x200015d0
10017874:	200015c0 	.word	0x200015c0
10017878:	10017711 	.word	0x10017711

1001787c <__sfp_lock_acquire>:
1001787c:	4801      	ldr	r0, [pc, #4]	@ (10017884 <__sfp_lock_acquire+0x8>)
1001787e:	f000 bddb 	b.w	10018438 <__retarget_lock_acquire_recursive>
10017882:	bf00      	nop
10017884:	200015d0 	.word	0x200015d0

10017888 <__sfp_lock_release>:
10017888:	4801      	ldr	r0, [pc, #4]	@ (10017890 <__sfp_lock_release+0x8>)
1001788a:	f000 bdd7 	b.w	1001843c <__retarget_lock_release_recursive>
1001788e:	bf00      	nop
10017890:	200015d0 	.word	0x200015d0

10017894 <__sfvwrite_r>:
10017894:	6893      	ldr	r3, [r2, #8]
10017896:	2b00      	cmp	r3, #0
10017898:	f000 80f6 	beq.w	10017a88 <__sfvwrite_r+0x1f4>
1001789c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100178a0:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
100178a4:	f01c 0f08 	tst.w	ip, #8
100178a8:	b083      	sub	sp, #12
100178aa:	4690      	mov	r8, r2
100178ac:	4681      	mov	r9, r0
100178ae:	460c      	mov	r4, r1
100178b0:	d031      	beq.n	10017916 <__sfvwrite_r+0x82>
100178b2:	690b      	ldr	r3, [r1, #16]
100178b4:	b37b      	cbz	r3, 10017916 <__sfvwrite_r+0x82>
100178b6:	f01c 0702 	ands.w	r7, ip, #2
100178ba:	f8d8 6000 	ldr.w	r6, [r8]
100178be:	d038      	beq.n	10017932 <__sfvwrite_r+0x9e>
100178c0:	2700      	movs	r7, #0
100178c2:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
100178c6:	69e1      	ldr	r1, [r4, #28]
100178c8:	f8df a2bc 	ldr.w	sl, [pc, #700]	@ 10017b88 <__sfvwrite_r+0x2f4>
100178cc:	463d      	mov	r5, r7
100178ce:	4555      	cmp	r5, sl
100178d0:	462b      	mov	r3, r5
100178d2:	463a      	mov	r2, r7
100178d4:	bf28      	it	cs
100178d6:	4653      	movcs	r3, sl
100178d8:	4648      	mov	r0, r9
100178da:	b1c5      	cbz	r5, 1001790e <__sfvwrite_r+0x7a>
100178dc:	47d8      	blx	fp
100178de:	2800      	cmp	r0, #0
100178e0:	f340 80c8 	ble.w	10017a74 <__sfvwrite_r+0x1e0>
100178e4:	f8d8 3008 	ldr.w	r3, [r8, #8]
100178e8:	1a1b      	subs	r3, r3, r0
100178ea:	4407      	add	r7, r0
100178ec:	1a2d      	subs	r5, r5, r0
100178ee:	f8c8 3008 	str.w	r3, [r8, #8]
100178f2:	2b00      	cmp	r3, #0
100178f4:	f000 80b4 	beq.w	10017a60 <__sfvwrite_r+0x1cc>
100178f8:	4555      	cmp	r5, sl
100178fa:	462b      	mov	r3, r5
100178fc:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10017900:	69e1      	ldr	r1, [r4, #28]
10017902:	bf28      	it	cs
10017904:	4653      	movcs	r3, sl
10017906:	463a      	mov	r2, r7
10017908:	4648      	mov	r0, r9
1001790a:	2d00      	cmp	r5, #0
1001790c:	d1e6      	bne.n	100178dc <__sfvwrite_r+0x48>
1001790e:	e9d6 7500 	ldrd	r7, r5, [r6]
10017912:	3608      	adds	r6, #8
10017914:	e7db      	b.n	100178ce <__sfvwrite_r+0x3a>
10017916:	4621      	mov	r1, r4
10017918:	4648      	mov	r0, r9
1001791a:	f000 f95b 	bl	10017bd4 <__swsetup_r>
1001791e:	2800      	cmp	r0, #0
10017920:	f040 80ad 	bne.w	10017a7e <__sfvwrite_r+0x1ea>
10017924:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10017928:	f8d8 6000 	ldr.w	r6, [r8]
1001792c:	f01c 0702 	ands.w	r7, ip, #2
10017930:	d1c6      	bne.n	100178c0 <__sfvwrite_r+0x2c>
10017932:	f01c 0a01 	ands.w	sl, ip, #1
10017936:	d163      	bne.n	10017a00 <__sfvwrite_r+0x16c>
10017938:	6823      	ldr	r3, [r4, #0]
1001793a:	68a1      	ldr	r1, [r4, #8]
1001793c:	4657      	mov	r7, sl
1001793e:	4618      	mov	r0, r3
10017940:	468b      	mov	fp, r1
10017942:	2f00      	cmp	r7, #0
10017944:	d058      	beq.n	100179f8 <__sfvwrite_r+0x164>
10017946:	f41c 7f00 	tst.w	ip, #512	@ 0x200
1001794a:	f000 80b1 	beq.w	10017ab0 <__sfvwrite_r+0x21c>
1001794e:	42b9      	cmp	r1, r7
10017950:	460a      	mov	r2, r1
10017952:	f200 80dd 	bhi.w	10017b10 <__sfvwrite_r+0x27c>
10017956:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
1001795a:	d02f      	beq.n	100179bc <__sfvwrite_r+0x128>
1001795c:	6921      	ldr	r1, [r4, #16]
1001795e:	6962      	ldr	r2, [r4, #20]
10017960:	1a5d      	subs	r5, r3, r1
10017962:	eb02 0242 	add.w	r2, r2, r2, lsl #1
10017966:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
1001796a:	1c6b      	adds	r3, r5, #1
1001796c:	1052      	asrs	r2, r2, #1
1001796e:	443b      	add	r3, r7
10017970:	4293      	cmp	r3, r2
10017972:	bf92      	itee	ls
10017974:	4693      	movls	fp, r2
10017976:	469b      	movhi	fp, r3
10017978:	461a      	movhi	r2, r3
1001797a:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
1001797e:	f000 80e6 	beq.w	10017b4e <__sfvwrite_r+0x2ba>
10017982:	4611      	mov	r1, r2
10017984:	4648      	mov	r0, r9
10017986:	f7fc f8cb 	bl	10013b20 <_malloc_r>
1001798a:	2800      	cmp	r0, #0
1001798c:	f000 80f5 	beq.w	10017b7a <__sfvwrite_r+0x2e6>
10017990:	462a      	mov	r2, r5
10017992:	6921      	ldr	r1, [r4, #16]
10017994:	9001      	str	r0, [sp, #4]
10017996:	f000 fda3 	bl	100184e0 <memcpy>
1001799a:	89a2      	ldrh	r2, [r4, #12]
1001799c:	9b01      	ldr	r3, [sp, #4]
1001799e:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
100179a2:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
100179a6:	81a2      	strh	r2, [r4, #12]
100179a8:	1958      	adds	r0, r3, r5
100179aa:	ebab 0505 	sub.w	r5, fp, r5
100179ae:	f8c4 b014 	str.w	fp, [r4, #20]
100179b2:	6123      	str	r3, [r4, #16]
100179b4:	60a5      	str	r5, [r4, #8]
100179b6:	6020      	str	r0, [r4, #0]
100179b8:	46bb      	mov	fp, r7
100179ba:	463a      	mov	r2, r7
100179bc:	4651      	mov	r1, sl
100179be:	9201      	str	r2, [sp, #4]
100179c0:	f000 f9d6 	bl	10017d70 <memmove>
100179c4:	68a1      	ldr	r1, [r4, #8]
100179c6:	6823      	ldr	r3, [r4, #0]
100179c8:	9a01      	ldr	r2, [sp, #4]
100179ca:	eba1 010b 	sub.w	r1, r1, fp
100179ce:	441a      	add	r2, r3
100179d0:	463d      	mov	r5, r7
100179d2:	60a1      	str	r1, [r4, #8]
100179d4:	6022      	str	r2, [r4, #0]
100179d6:	2700      	movs	r7, #0
100179d8:	f8d8 3008 	ldr.w	r3, [r8, #8]
100179dc:	1b5b      	subs	r3, r3, r5
100179de:	44aa      	add	sl, r5
100179e0:	f8c8 3008 	str.w	r3, [r8, #8]
100179e4:	2b00      	cmp	r3, #0
100179e6:	d03b      	beq.n	10017a60 <__sfvwrite_r+0x1cc>
100179e8:	6823      	ldr	r3, [r4, #0]
100179ea:	68a1      	ldr	r1, [r4, #8]
100179ec:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
100179f0:	4618      	mov	r0, r3
100179f2:	468b      	mov	fp, r1
100179f4:	2f00      	cmp	r7, #0
100179f6:	d1a6      	bne.n	10017946 <__sfvwrite_r+0xb2>
100179f8:	e9d6 a700 	ldrd	sl, r7, [r6]
100179fc:	3608      	adds	r6, #8
100179fe:	e79e      	b.n	1001793e <__sfvwrite_r+0xaa>
10017a00:	4638      	mov	r0, r7
10017a02:	46bb      	mov	fp, r7
10017a04:	463d      	mov	r5, r7
10017a06:	2d00      	cmp	r5, #0
10017a08:	d040      	beq.n	10017a8c <__sfvwrite_r+0x1f8>
10017a0a:	2800      	cmp	r0, #0
10017a0c:	d045      	beq.n	10017a9a <__sfvwrite_r+0x206>
10017a0e:	463a      	mov	r2, r7
10017a10:	e9d4 c304 	ldrd	ip, r3, [r4, #16]
10017a14:	6820      	ldr	r0, [r4, #0]
10017a16:	68a1      	ldr	r1, [r4, #8]
10017a18:	42aa      	cmp	r2, r5
10017a1a:	bf28      	it	cs
10017a1c:	462a      	movcs	r2, r5
10017a1e:	4560      	cmp	r0, ip
10017a20:	d904      	bls.n	10017a2c <__sfvwrite_r+0x198>
10017a22:	eb01 0a03 	add.w	sl, r1, r3
10017a26:	4552      	cmp	r2, sl
10017a28:	f300 8082 	bgt.w	10017b30 <__sfvwrite_r+0x29c>
10017a2c:	4293      	cmp	r3, r2
10017a2e:	dc72      	bgt.n	10017b16 <__sfvwrite_r+0x282>
10017a30:	69e1      	ldr	r1, [r4, #28]
10017a32:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
10017a36:	465a      	mov	r2, fp
10017a38:	4648      	mov	r0, r9
10017a3a:	47e0      	blx	ip
10017a3c:	f1b0 0a00 	subs.w	sl, r0, #0
10017a40:	dd18      	ble.n	10017a74 <__sfvwrite_r+0x1e0>
10017a42:	ebb7 070a 	subs.w	r7, r7, sl
10017a46:	d00f      	beq.n	10017a68 <__sfvwrite_r+0x1d4>
10017a48:	2001      	movs	r0, #1
10017a4a:	f8d8 3008 	ldr.w	r3, [r8, #8]
10017a4e:	eba3 030a 	sub.w	r3, r3, sl
10017a52:	44d3      	add	fp, sl
10017a54:	eba5 050a 	sub.w	r5, r5, sl
10017a58:	f8c8 3008 	str.w	r3, [r8, #8]
10017a5c:	2b00      	cmp	r3, #0
10017a5e:	d1d2      	bne.n	10017a06 <__sfvwrite_r+0x172>
10017a60:	2000      	movs	r0, #0
10017a62:	b003      	add	sp, #12
10017a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017a68:	4621      	mov	r1, r4
10017a6a:	4648      	mov	r0, r9
10017a6c:	f7ff fcf0 	bl	10017450 <_fflush_r>
10017a70:	2800      	cmp	r0, #0
10017a72:	d0ea      	beq.n	10017a4a <__sfvwrite_r+0x1b6>
10017a74:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017a78:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017a7c:	81a3      	strh	r3, [r4, #12]
10017a7e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017a82:	b003      	add	sp, #12
10017a84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017a88:	2000      	movs	r0, #0
10017a8a:	4770      	bx	lr
10017a8c:	6875      	ldr	r5, [r6, #4]
10017a8e:	4633      	mov	r3, r6
10017a90:	3608      	adds	r6, #8
10017a92:	2d00      	cmp	r5, #0
10017a94:	d0fa      	beq.n	10017a8c <__sfvwrite_r+0x1f8>
10017a96:	f8d3 b000 	ldr.w	fp, [r3]
10017a9a:	462a      	mov	r2, r5
10017a9c:	210a      	movs	r1, #10
10017a9e:	4658      	mov	r0, fp
10017aa0:	f000 fcce 	bl	10018440 <memchr>
10017aa4:	2800      	cmp	r0, #0
10017aa6:	d065      	beq.n	10017b74 <__sfvwrite_r+0x2e0>
10017aa8:	3001      	adds	r0, #1
10017aaa:	eba0 070b 	sub.w	r7, r0, fp
10017aae:	e7ae      	b.n	10017a0e <__sfvwrite_r+0x17a>
10017ab0:	6922      	ldr	r2, [r4, #16]
10017ab2:	429a      	cmp	r2, r3
10017ab4:	d314      	bcc.n	10017ae0 <__sfvwrite_r+0x24c>
10017ab6:	6962      	ldr	r2, [r4, #20]
10017ab8:	42ba      	cmp	r2, r7
10017aba:	d811      	bhi.n	10017ae0 <__sfvwrite_r+0x24c>
10017abc:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10017ac0:	42bb      	cmp	r3, r7
10017ac2:	bf28      	it	cs
10017ac4:	463b      	movcs	r3, r7
10017ac6:	6a65      	ldr	r5, [r4, #36]	@ 0x24
10017ac8:	fb93 f3f2 	sdiv	r3, r3, r2
10017acc:	69e1      	ldr	r1, [r4, #28]
10017ace:	fb02 f303 	mul.w	r3, r2, r3
10017ad2:	4648      	mov	r0, r9
10017ad4:	4652      	mov	r2, sl
10017ad6:	47a8      	blx	r5
10017ad8:	1e05      	subs	r5, r0, #0
10017ada:	ddcb      	ble.n	10017a74 <__sfvwrite_r+0x1e0>
10017adc:	1b7f      	subs	r7, r7, r5
10017ade:	e77b      	b.n	100179d8 <__sfvwrite_r+0x144>
10017ae0:	42b9      	cmp	r1, r7
10017ae2:	bf28      	it	cs
10017ae4:	4639      	movcs	r1, r7
10017ae6:	460d      	mov	r5, r1
10017ae8:	4618      	mov	r0, r3
10017aea:	460a      	mov	r2, r1
10017aec:	4651      	mov	r1, sl
10017aee:	f000 f93f 	bl	10017d70 <memmove>
10017af2:	68a1      	ldr	r1, [r4, #8]
10017af4:	6823      	ldr	r3, [r4, #0]
10017af6:	1b49      	subs	r1, r1, r5
10017af8:	442b      	add	r3, r5
10017afa:	60a1      	str	r1, [r4, #8]
10017afc:	6023      	str	r3, [r4, #0]
10017afe:	2900      	cmp	r1, #0
10017b00:	d1ec      	bne.n	10017adc <__sfvwrite_r+0x248>
10017b02:	4621      	mov	r1, r4
10017b04:	4648      	mov	r0, r9
10017b06:	f7ff fca3 	bl	10017450 <_fflush_r>
10017b0a:	2800      	cmp	r0, #0
10017b0c:	d0e6      	beq.n	10017adc <__sfvwrite_r+0x248>
10017b0e:	e7b1      	b.n	10017a74 <__sfvwrite_r+0x1e0>
10017b10:	46bb      	mov	fp, r7
10017b12:	463a      	mov	r2, r7
10017b14:	e752      	b.n	100179bc <__sfvwrite_r+0x128>
10017b16:	4659      	mov	r1, fp
10017b18:	9201      	str	r2, [sp, #4]
10017b1a:	f000 f929 	bl	10017d70 <memmove>
10017b1e:	9a01      	ldr	r2, [sp, #4]
10017b20:	68a3      	ldr	r3, [r4, #8]
10017b22:	1a9b      	subs	r3, r3, r2
10017b24:	60a3      	str	r3, [r4, #8]
10017b26:	6823      	ldr	r3, [r4, #0]
10017b28:	4413      	add	r3, r2
10017b2a:	6023      	str	r3, [r4, #0]
10017b2c:	4692      	mov	sl, r2
10017b2e:	e788      	b.n	10017a42 <__sfvwrite_r+0x1ae>
10017b30:	4659      	mov	r1, fp
10017b32:	4652      	mov	r2, sl
10017b34:	f000 f91c 	bl	10017d70 <memmove>
10017b38:	6823      	ldr	r3, [r4, #0]
10017b3a:	4453      	add	r3, sl
10017b3c:	6023      	str	r3, [r4, #0]
10017b3e:	4621      	mov	r1, r4
10017b40:	4648      	mov	r0, r9
10017b42:	f7ff fc85 	bl	10017450 <_fflush_r>
10017b46:	2800      	cmp	r0, #0
10017b48:	f43f af7b 	beq.w	10017a42 <__sfvwrite_r+0x1ae>
10017b4c:	e792      	b.n	10017a74 <__sfvwrite_r+0x1e0>
10017b4e:	4648      	mov	r0, r9
10017b50:	f7ff fa48 	bl	10016fe4 <_realloc_r>
10017b54:	4603      	mov	r3, r0
10017b56:	2800      	cmp	r0, #0
10017b58:	f47f af26 	bne.w	100179a8 <__sfvwrite_r+0x114>
10017b5c:	6921      	ldr	r1, [r4, #16]
10017b5e:	4648      	mov	r0, r9
10017b60:	f001 fe6e 	bl	10019840 <_free_r>
10017b64:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017b68:	220c      	movs	r2, #12
10017b6a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10017b6e:	f8c9 2000 	str.w	r2, [r9]
10017b72:	e781      	b.n	10017a78 <__sfvwrite_r+0x1e4>
10017b74:	1c6a      	adds	r2, r5, #1
10017b76:	4617      	mov	r7, r2
10017b78:	e74a      	b.n	10017a10 <__sfvwrite_r+0x17c>
10017b7a:	220c      	movs	r2, #12
10017b7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017b80:	f8c9 2000 	str.w	r2, [r9]
10017b84:	e778      	b.n	10017a78 <__sfvwrite_r+0x1e4>
10017b86:	bf00      	nop
10017b88:	7ffffc00 	.word	0x7ffffc00

10017b8c <_fwalk_sglue>:
10017b8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10017b90:	4680      	mov	r8, r0
10017b92:	460f      	mov	r7, r1
10017b94:	4616      	mov	r6, r2
10017b96:	f04f 0900 	mov.w	r9, #0
10017b9a:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
10017b9e:	3d01      	subs	r5, #1
10017ba0:	d411      	bmi.n	10017bc6 <_fwalk_sglue+0x3a>
10017ba2:	89a3      	ldrh	r3, [r4, #12]
10017ba4:	2b01      	cmp	r3, #1
10017ba6:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
10017baa:	d908      	bls.n	10017bbe <_fwalk_sglue+0x32>
10017bac:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
10017bb0:	3301      	adds	r3, #1
10017bb2:	4621      	mov	r1, r4
10017bb4:	d003      	beq.n	10017bbe <_fwalk_sglue+0x32>
10017bb6:	4640      	mov	r0, r8
10017bb8:	47b8      	blx	r7
10017bba:	ea49 0900 	orr.w	r9, r9, r0
10017bbe:	1c6b      	adds	r3, r5, #1
10017bc0:	f104 0468 	add.w	r4, r4, #104	@ 0x68
10017bc4:	d1ed      	bne.n	10017ba2 <_fwalk_sglue+0x16>
10017bc6:	6836      	ldr	r6, [r6, #0]
10017bc8:	2e00      	cmp	r6, #0
10017bca:	d1e6      	bne.n	10017b9a <_fwalk_sglue+0xe>
10017bcc:	4648      	mov	r0, r9
10017bce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10017bd2:	bf00      	nop

10017bd4 <__swsetup_r>:
10017bd4:	b538      	push	{r3, r4, r5, lr}
10017bd6:	4b2e      	ldr	r3, [pc, #184]	@ (10017c90 <__swsetup_r+0xbc>)
10017bd8:	681b      	ldr	r3, [r3, #0]
10017bda:	4605      	mov	r5, r0
10017bdc:	460c      	mov	r4, r1
10017bde:	b113      	cbz	r3, 10017be6 <__swsetup_r+0x12>
10017be0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
10017be2:	2a00      	cmp	r2, #0
10017be4:	d04b      	beq.n	10017c7e <__swsetup_r+0xaa>
10017be6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017bea:	0718      	lsls	r0, r3, #28
10017bec:	d51c      	bpl.n	10017c28 <__swsetup_r+0x54>
10017bee:	6922      	ldr	r2, [r4, #16]
10017bf0:	b322      	cbz	r2, 10017c3c <__swsetup_r+0x68>
10017bf2:	f013 0101 	ands.w	r1, r3, #1
10017bf6:	d007      	beq.n	10017c08 <__swsetup_r+0x34>
10017bf8:	6961      	ldr	r1, [r4, #20]
10017bfa:	2000      	movs	r0, #0
10017bfc:	4249      	negs	r1, r1
10017bfe:	60a0      	str	r0, [r4, #8]
10017c00:	61a1      	str	r1, [r4, #24]
10017c02:	b13a      	cbz	r2, 10017c14 <__swsetup_r+0x40>
10017c04:	2000      	movs	r0, #0
10017c06:	bd38      	pop	{r3, r4, r5, pc}
10017c08:	0798      	lsls	r0, r3, #30
10017c0a:	bf58      	it	pl
10017c0c:	6961      	ldrpl	r1, [r4, #20]
10017c0e:	60a1      	str	r1, [r4, #8]
10017c10:	2a00      	cmp	r2, #0
10017c12:	d1f7      	bne.n	10017c04 <__swsetup_r+0x30>
10017c14:	0619      	lsls	r1, r3, #24
10017c16:	bf58      	it	pl
10017c18:	4610      	movpl	r0, r2
10017c1a:	d5f4      	bpl.n	10017c06 <__swsetup_r+0x32>
10017c1c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017c20:	81a3      	strh	r3, [r4, #12]
10017c22:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017c26:	bd38      	pop	{r3, r4, r5, pc}
10017c28:	06d9      	lsls	r1, r3, #27
10017c2a:	d52c      	bpl.n	10017c86 <__swsetup_r+0xb2>
10017c2c:	075a      	lsls	r2, r3, #29
10017c2e:	d412      	bmi.n	10017c56 <__swsetup_r+0x82>
10017c30:	6922      	ldr	r2, [r4, #16]
10017c32:	f043 0308 	orr.w	r3, r3, #8
10017c36:	81a3      	strh	r3, [r4, #12]
10017c38:	2a00      	cmp	r2, #0
10017c3a:	d1da      	bne.n	10017bf2 <__swsetup_r+0x1e>
10017c3c:	f403 7120 	and.w	r1, r3, #640	@ 0x280
10017c40:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10017c44:	d0d5      	beq.n	10017bf2 <__swsetup_r+0x1e>
10017c46:	4621      	mov	r1, r4
10017c48:	4628      	mov	r0, r5
10017c4a:	f003 fcd9 	bl	1001b600 <__smakebuf_r>
10017c4e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017c52:	6922      	ldr	r2, [r4, #16]
10017c54:	e7cd      	b.n	10017bf2 <__swsetup_r+0x1e>
10017c56:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10017c58:	b151      	cbz	r1, 10017c70 <__swsetup_r+0x9c>
10017c5a:	f104 0240 	add.w	r2, r4, #64	@ 0x40
10017c5e:	4291      	cmp	r1, r2
10017c60:	d004      	beq.n	10017c6c <__swsetup_r+0x98>
10017c62:	4628      	mov	r0, r5
10017c64:	f001 fdec 	bl	10019840 <_free_r>
10017c68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017c6c:	2200      	movs	r2, #0
10017c6e:	6322      	str	r2, [r4, #48]	@ 0x30
10017c70:	6922      	ldr	r2, [r4, #16]
10017c72:	2100      	movs	r1, #0
10017c74:	e9c4 2100 	strd	r2, r1, [r4]
10017c78:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
10017c7c:	e7d9      	b.n	10017c32 <__swsetup_r+0x5e>
10017c7e:	4618      	mov	r0, r3
10017c80:	f7ff fdde 	bl	10017840 <__sinit>
10017c84:	e7af      	b.n	10017be6 <__swsetup_r+0x12>
10017c86:	2209      	movs	r2, #9
10017c88:	602a      	str	r2, [r5, #0]
10017c8a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017c8e:	e7c7      	b.n	10017c20 <__swsetup_r+0x4c>
10017c90:	20000598 	.word	0x20000598

10017c94 <__fputwc>:
10017c94:	b570      	push	{r4, r5, r6, lr}
10017c96:	b082      	sub	sp, #8
10017c98:	4606      	mov	r6, r0
10017c9a:	460d      	mov	r5, r1
10017c9c:	4614      	mov	r4, r2
10017c9e:	f000 f98f 	bl	10017fc0 <__locale_mb_cur_max>
10017ca2:	2801      	cmp	r0, #1
10017ca4:	d102      	bne.n	10017cac <__fputwc+0x18>
10017ca6:	1e6b      	subs	r3, r5, #1
10017ca8:	2bfe      	cmp	r3, #254	@ 0xfe
10017caa:	d926      	bls.n	10017cfa <__fputwc+0x66>
10017cac:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
10017cb0:	462a      	mov	r2, r5
10017cb2:	a901      	add	r1, sp, #4
10017cb4:	4630      	mov	r0, r6
10017cb6:	f000 fd2f 	bl	10018718 <_wcrtomb_r>
10017cba:	1c43      	adds	r3, r0, #1
10017cbc:	d020      	beq.n	10017d00 <__fputwc+0x6c>
10017cbe:	b178      	cbz	r0, 10017ce0 <__fputwc+0x4c>
10017cc0:	68a3      	ldr	r3, [r4, #8]
10017cc2:	f89d 1004 	ldrb.w	r1, [sp, #4]
10017cc6:	3b01      	subs	r3, #1
10017cc8:	2b00      	cmp	r3, #0
10017cca:	60a3      	str	r3, [r4, #8]
10017ccc:	da04      	bge.n	10017cd8 <__fputwc+0x44>
10017cce:	69a2      	ldr	r2, [r4, #24]
10017cd0:	4293      	cmp	r3, r2
10017cd2:	db08      	blt.n	10017ce6 <__fputwc+0x52>
10017cd4:	290a      	cmp	r1, #10
10017cd6:	d006      	beq.n	10017ce6 <__fputwc+0x52>
10017cd8:	6823      	ldr	r3, [r4, #0]
10017cda:	1c5a      	adds	r2, r3, #1
10017cdc:	6022      	str	r2, [r4, #0]
10017cde:	7019      	strb	r1, [r3, #0]
10017ce0:	4628      	mov	r0, r5
10017ce2:	b002      	add	sp, #8
10017ce4:	bd70      	pop	{r4, r5, r6, pc}
10017ce6:	4622      	mov	r2, r4
10017ce8:	4630      	mov	r0, r6
10017cea:	f007 f8bd 	bl	1001ee68 <__swbuf_r>
10017cee:	3001      	adds	r0, #1
10017cf0:	d1f6      	bne.n	10017ce0 <__fputwc+0x4c>
10017cf2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017cf6:	b002      	add	sp, #8
10017cf8:	bd70      	pop	{r4, r5, r6, pc}
10017cfa:	f88d 5004 	strb.w	r5, [sp, #4]
10017cfe:	e7df      	b.n	10017cc0 <__fputwc+0x2c>
10017d00:	89a3      	ldrh	r3, [r4, #12]
10017d02:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10017d06:	81a3      	strh	r3, [r4, #12]
10017d08:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017d0c:	e7f3      	b.n	10017cf6 <__fputwc+0x62>
10017d0e:	bf00      	nop

10017d10 <_fputwc_r>:
10017d10:	b530      	push	{r4, r5, lr}
10017d12:	4614      	mov	r4, r2
10017d14:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10017d16:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017d1a:	4605      	mov	r5, r0
10017d1c:	07d0      	lsls	r0, r2, #31
10017d1e:	b083      	sub	sp, #12
10017d20:	d401      	bmi.n	10017d26 <_fputwc_r+0x16>
10017d22:	059a      	lsls	r2, r3, #22
10017d24:	d51c      	bpl.n	10017d60 <_fputwc_r+0x50>
10017d26:	0498      	lsls	r0, r3, #18
10017d28:	d406      	bmi.n	10017d38 <_fputwc_r+0x28>
10017d2a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10017d2c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10017d30:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10017d34:	81a3      	strh	r3, [r4, #12]
10017d36:	6662      	str	r2, [r4, #100]	@ 0x64
10017d38:	4622      	mov	r2, r4
10017d3a:	4628      	mov	r0, r5
10017d3c:	f7ff ffaa 	bl	10017c94 <__fputwc>
10017d40:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10017d42:	07da      	lsls	r2, r3, #31
10017d44:	4605      	mov	r5, r0
10017d46:	d402      	bmi.n	10017d4e <_fputwc_r+0x3e>
10017d48:	89a3      	ldrh	r3, [r4, #12]
10017d4a:	059b      	lsls	r3, r3, #22
10017d4c:	d502      	bpl.n	10017d54 <_fputwc_r+0x44>
10017d4e:	4628      	mov	r0, r5
10017d50:	b003      	add	sp, #12
10017d52:	bd30      	pop	{r4, r5, pc}
10017d54:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017d56:	f000 fb71 	bl	1001843c <__retarget_lock_release_recursive>
10017d5a:	4628      	mov	r0, r5
10017d5c:	b003      	add	sp, #12
10017d5e:	bd30      	pop	{r4, r5, pc}
10017d60:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10017d62:	9101      	str	r1, [sp, #4]
10017d64:	f000 fb68 	bl	10018438 <__retarget_lock_acquire_recursive>
10017d68:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017d6c:	9901      	ldr	r1, [sp, #4]
10017d6e:	e7da      	b.n	10017d26 <_fputwc_r+0x16>

10017d70 <memmove>:
10017d70:	4288      	cmp	r0, r1
10017d72:	d90e      	bls.n	10017d92 <memmove+0x22>
10017d74:	188b      	adds	r3, r1, r2
10017d76:	4283      	cmp	r3, r0
10017d78:	d90b      	bls.n	10017d92 <memmove+0x22>
10017d7a:	eb00 0c02 	add.w	ip, r0, r2
10017d7e:	2a00      	cmp	r2, #0
10017d80:	d06e      	beq.n	10017e60 <memmove+0xf0>
10017d82:	4662      	mov	r2, ip
10017d84:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
10017d88:	f802 cd01 	strb.w	ip, [r2, #-1]!
10017d8c:	4299      	cmp	r1, r3
10017d8e:	d1f9      	bne.n	10017d84 <memmove+0x14>
10017d90:	4770      	bx	lr
10017d92:	2a0f      	cmp	r2, #15
10017d94:	d80f      	bhi.n	10017db6 <memmove+0x46>
10017d96:	4603      	mov	r3, r0
10017d98:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10017d9c:	2a00      	cmp	r2, #0
10017d9e:	d05f      	beq.n	10017e60 <memmove+0xf0>
10017da0:	f10c 0c01 	add.w	ip, ip, #1
10017da4:	3b01      	subs	r3, #1
10017da6:	448c      	add	ip, r1
10017da8:	f811 2b01 	ldrb.w	r2, [r1], #1
10017dac:	f803 2f01 	strb.w	r2, [r3, #1]!
10017db0:	4561      	cmp	r1, ip
10017db2:	d1f9      	bne.n	10017da8 <memmove+0x38>
10017db4:	4770      	bx	lr
10017db6:	ea40 0301 	orr.w	r3, r0, r1
10017dba:	079b      	lsls	r3, r3, #30
10017dbc:	d151      	bne.n	10017e62 <memmove+0xf2>
10017dbe:	f1a2 0310 	sub.w	r3, r2, #16
10017dc2:	b570      	push	{r4, r5, r6, lr}
10017dc4:	f101 0c20 	add.w	ip, r1, #32
10017dc8:	f023 050f 	bic.w	r5, r3, #15
10017dcc:	f101 0e10 	add.w	lr, r1, #16
10017dd0:	f100 0410 	add.w	r4, r0, #16
10017dd4:	44ac      	add	ip, r5
10017dd6:	091b      	lsrs	r3, r3, #4
10017dd8:	f85e 5c10 	ldr.w	r5, [lr, #-16]
10017ddc:	f844 5c10 	str.w	r5, [r4, #-16]
10017de0:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
10017de4:	f844 5c0c 	str.w	r5, [r4, #-12]
10017de8:	f85e 5c08 	ldr.w	r5, [lr, #-8]
10017dec:	f844 5c08 	str.w	r5, [r4, #-8]
10017df0:	f85e 5c04 	ldr.w	r5, [lr, #-4]
10017df4:	f844 5c04 	str.w	r5, [r4, #-4]
10017df8:	f10e 0e10 	add.w	lr, lr, #16
10017dfc:	45e6      	cmp	lr, ip
10017dfe:	f104 0410 	add.w	r4, r4, #16
10017e02:	d1e9      	bne.n	10017dd8 <memmove+0x68>
10017e04:	3301      	adds	r3, #1
10017e06:	f012 0f0c 	tst.w	r2, #12
10017e0a:	eb01 1103 	add.w	r1, r1, r3, lsl #4
10017e0e:	f002 040f 	and.w	r4, r2, #15
10017e12:	eb00 1303 	add.w	r3, r0, r3, lsl #4
10017e16:	d028      	beq.n	10017e6a <memmove+0xfa>
10017e18:	3c04      	subs	r4, #4
10017e1a:	f024 0603 	bic.w	r6, r4, #3
10017e1e:	ea4f 0c94 	mov.w	ip, r4, lsr #2
10017e22:	441e      	add	r6, r3
10017e24:	1f1c      	subs	r4, r3, #4
10017e26:	468e      	mov	lr, r1
10017e28:	f85e 5b04 	ldr.w	r5, [lr], #4
10017e2c:	f844 5f04 	str.w	r5, [r4, #4]!
10017e30:	42b4      	cmp	r4, r6
10017e32:	d1f9      	bne.n	10017e28 <memmove+0xb8>
10017e34:	f10c 0401 	add.w	r4, ip, #1
10017e38:	f002 0203 	and.w	r2, r2, #3
10017e3c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
10017e40:	eb01 0184 	add.w	r1, r1, r4, lsl #2
10017e44:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10017e48:	b14a      	cbz	r2, 10017e5e <memmove+0xee>
10017e4a:	f10c 0c01 	add.w	ip, ip, #1
10017e4e:	3b01      	subs	r3, #1
10017e50:	448c      	add	ip, r1
10017e52:	f811 2b01 	ldrb.w	r2, [r1], #1
10017e56:	f803 2f01 	strb.w	r2, [r3, #1]!
10017e5a:	4561      	cmp	r1, ip
10017e5c:	d1f9      	bne.n	10017e52 <memmove+0xe2>
10017e5e:	bd70      	pop	{r4, r5, r6, pc}
10017e60:	4770      	bx	lr
10017e62:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10017e66:	4603      	mov	r3, r0
10017e68:	e79a      	b.n	10017da0 <memmove+0x30>
10017e6a:	4622      	mov	r2, r4
10017e6c:	e7ea      	b.n	10017e44 <memmove+0xd4>
10017e6e:	bf00      	nop

10017e70 <memset>:
10017e70:	0783      	lsls	r3, r0, #30
10017e72:	b530      	push	{r4, r5, lr}
10017e74:	d047      	beq.n	10017f06 <memset+0x96>
10017e76:	1e54      	subs	r4, r2, #1
10017e78:	2a00      	cmp	r2, #0
10017e7a:	d03e      	beq.n	10017efa <memset+0x8a>
10017e7c:	b2ca      	uxtb	r2, r1
10017e7e:	4603      	mov	r3, r0
10017e80:	e001      	b.n	10017e86 <memset+0x16>
10017e82:	3c01      	subs	r4, #1
10017e84:	d339      	bcc.n	10017efa <memset+0x8a>
10017e86:	f803 2b01 	strb.w	r2, [r3], #1
10017e8a:	079d      	lsls	r5, r3, #30
10017e8c:	d1f9      	bne.n	10017e82 <memset+0x12>
10017e8e:	2c03      	cmp	r4, #3
10017e90:	d92c      	bls.n	10017eec <memset+0x7c>
10017e92:	b2cd      	uxtb	r5, r1
10017e94:	eb05 2505 	add.w	r5, r5, r5, lsl #8
10017e98:	2c0f      	cmp	r4, #15
10017e9a:	eb05 4505 	add.w	r5, r5, r5, lsl #16
10017e9e:	d935      	bls.n	10017f0c <memset+0x9c>
10017ea0:	f1a4 0210 	sub.w	r2, r4, #16
10017ea4:	f022 0c0f 	bic.w	ip, r2, #15
10017ea8:	f103 0e10 	add.w	lr, r3, #16
10017eac:	44e6      	add	lr, ip
10017eae:	ea4f 1c12 	mov.w	ip, r2, lsr #4
10017eb2:	461a      	mov	r2, r3
10017eb4:	6015      	str	r5, [r2, #0]
10017eb6:	6055      	str	r5, [r2, #4]
10017eb8:	6095      	str	r5, [r2, #8]
10017eba:	60d5      	str	r5, [r2, #12]
10017ebc:	3210      	adds	r2, #16
10017ebe:	4572      	cmp	r2, lr
10017ec0:	d1f8      	bne.n	10017eb4 <memset+0x44>
10017ec2:	f10c 0201 	add.w	r2, ip, #1
10017ec6:	f014 0f0c 	tst.w	r4, #12
10017eca:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10017ece:	f004 0c0f 	and.w	ip, r4, #15
10017ed2:	d013      	beq.n	10017efc <memset+0x8c>
10017ed4:	f1ac 0304 	sub.w	r3, ip, #4
10017ed8:	f023 0303 	bic.w	r3, r3, #3
10017edc:	3304      	adds	r3, #4
10017ede:	4413      	add	r3, r2
10017ee0:	f842 5b04 	str.w	r5, [r2], #4
10017ee4:	429a      	cmp	r2, r3
10017ee6:	d1fb      	bne.n	10017ee0 <memset+0x70>
10017ee8:	f00c 0403 	and.w	r4, ip, #3
10017eec:	b12c      	cbz	r4, 10017efa <memset+0x8a>
10017eee:	b2c9      	uxtb	r1, r1
10017ef0:	441c      	add	r4, r3
10017ef2:	f803 1b01 	strb.w	r1, [r3], #1
10017ef6:	429c      	cmp	r4, r3
10017ef8:	d1fb      	bne.n	10017ef2 <memset+0x82>
10017efa:	bd30      	pop	{r4, r5, pc}
10017efc:	4664      	mov	r4, ip
10017efe:	4613      	mov	r3, r2
10017f00:	2c00      	cmp	r4, #0
10017f02:	d1f4      	bne.n	10017eee <memset+0x7e>
10017f04:	e7f9      	b.n	10017efa <memset+0x8a>
10017f06:	4603      	mov	r3, r0
10017f08:	4614      	mov	r4, r2
10017f0a:	e7c0      	b.n	10017e8e <memset+0x1e>
10017f0c:	461a      	mov	r2, r3
10017f0e:	46a4      	mov	ip, r4
10017f10:	e7e0      	b.n	10017ed4 <memset+0x64>
10017f12:	bf00      	nop

10017f14 <strcspn>:
10017f14:	b510      	push	{r4, lr}
10017f16:	4686      	mov	lr, r0
10017f18:	7800      	ldrb	r0, [r0, #0]
10017f1a:	b160      	cbz	r0, 10017f36 <strcspn+0x22>
10017f1c:	780c      	ldrb	r4, [r1, #0]
10017f1e:	46f4      	mov	ip, lr
10017f20:	b18c      	cbz	r4, 10017f46 <strcspn+0x32>
10017f22:	460a      	mov	r2, r1
10017f24:	4623      	mov	r3, r4
10017f26:	e002      	b.n	10017f2e <strcspn+0x1a>
10017f28:	f812 3f01 	ldrb.w	r3, [r2, #1]!
10017f2c:	b123      	cbz	r3, 10017f38 <strcspn+0x24>
10017f2e:	4283      	cmp	r3, r0
10017f30:	d1fa      	bne.n	10017f28 <strcspn+0x14>
10017f32:	ebac 000e 	sub.w	r0, ip, lr
10017f36:	bd10      	pop	{r4, pc}
10017f38:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
10017f3c:	2800      	cmp	r0, #0
10017f3e:	d1f0      	bne.n	10017f22 <strcspn+0xe>
10017f40:	ebac 000e 	sub.w	r0, ip, lr
10017f44:	e7f7      	b.n	10017f36 <strcspn+0x22>
10017f46:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
10017f4a:	2800      	cmp	r0, #0
10017f4c:	d0f1      	beq.n	10017f32 <strcspn+0x1e>
10017f4e:	f81c 0f01 	ldrb.w	r0, [ip, #1]!
10017f52:	2800      	cmp	r0, #0
10017f54:	d1f7      	bne.n	10017f46 <strcspn+0x32>
10017f56:	e7ec      	b.n	10017f32 <strcspn+0x1e>

10017f58 <strncpy>:
10017f58:	ea40 0301 	orr.w	r3, r0, r1
10017f5c:	079b      	lsls	r3, r3, #30
10017f5e:	b510      	push	{r4, lr}
10017f60:	d101      	bne.n	10017f66 <strncpy+0xe>
10017f62:	2a03      	cmp	r2, #3
10017f64:	d817      	bhi.n	10017f96 <strncpy+0x3e>
10017f66:	4684      	mov	ip, r0
10017f68:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10017f6c:	e007      	b.n	10017f7e <strncpy+0x26>
10017f6e:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
10017f72:	f803 1b01 	strb.w	r1, [r3], #1
10017f76:	1e54      	subs	r4, r2, #1
10017f78:	b129      	cbz	r1, 10017f86 <strncpy+0x2e>
10017f7a:	469c      	mov	ip, r3
10017f7c:	4622      	mov	r2, r4
10017f7e:	4663      	mov	r3, ip
10017f80:	2a00      	cmp	r2, #0
10017f82:	d1f4      	bne.n	10017f6e <strncpy+0x16>
10017f84:	bd10      	pop	{r4, pc}
10017f86:	4494      	add	ip, r2
10017f88:	2c00      	cmp	r4, #0
10017f8a:	d0fb      	beq.n	10017f84 <strncpy+0x2c>
10017f8c:	f803 1b01 	strb.w	r1, [r3], #1
10017f90:	4563      	cmp	r3, ip
10017f92:	d1fb      	bne.n	10017f8c <strncpy+0x34>
10017f94:	bd10      	pop	{r4, pc}
10017f96:	468e      	mov	lr, r1
10017f98:	4684      	mov	ip, r0
10017f9a:	f8de 4000 	ldr.w	r4, [lr]
10017f9e:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
10017fa2:	ea23 0304 	bic.w	r3, r3, r4
10017fa6:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
10017faa:	4671      	mov	r1, lr
10017fac:	f10e 0e04 	add.w	lr, lr, #4
10017fb0:	d1da      	bne.n	10017f68 <strncpy+0x10>
10017fb2:	3a04      	subs	r2, #4
10017fb4:	2a03      	cmp	r2, #3
10017fb6:	f84c 4b04 	str.w	r4, [ip], #4
10017fba:	d8ee      	bhi.n	10017f9a <strncpy+0x42>
10017fbc:	4671      	mov	r1, lr
10017fbe:	e7d3      	b.n	10017f68 <strncpy+0x10>

10017fc0 <__locale_mb_cur_max>:
10017fc0:	4b01      	ldr	r3, [pc, #4]	@ (10017fc8 <__locale_mb_cur_max+0x8>)
10017fc2:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
10017fc6:	4770      	bx	lr
10017fc8:	2000042c 	.word	0x2000042c

10017fcc <_localeconv_r>:
10017fcc:	4800      	ldr	r0, [pc, #0]	@ (10017fd0 <_localeconv_r+0x4>)
10017fce:	4770      	bx	lr
10017fd0:	2000051c 	.word	0x2000051c

10017fd4 <_close_r>:
10017fd4:	b538      	push	{r3, r4, r5, lr}
10017fd6:	4d07      	ldr	r5, [pc, #28]	@ (10017ff4 <_close_r+0x20>)
10017fd8:	2200      	movs	r2, #0
10017fda:	4604      	mov	r4, r0
10017fdc:	4608      	mov	r0, r1
10017fde:	602a      	str	r2, [r5, #0]
10017fe0:	f7f9 fd3a 	bl	10011a58 <_close>
10017fe4:	1c43      	adds	r3, r0, #1
10017fe6:	d000      	beq.n	10017fea <_close_r+0x16>
10017fe8:	bd38      	pop	{r3, r4, r5, pc}
10017fea:	682b      	ldr	r3, [r5, #0]
10017fec:	2b00      	cmp	r3, #0
10017fee:	d0fb      	beq.n	10017fe8 <_close_r+0x14>
10017ff0:	6023      	str	r3, [r4, #0]
10017ff2:	bd38      	pop	{r3, r4, r5, pc}
10017ff4:	200015c4 	.word	0x200015c4

10017ff8 <_fstat_r>:
10017ff8:	b570      	push	{r4, r5, r6, lr}
10017ffa:	460c      	mov	r4, r1
10017ffc:	4d08      	ldr	r5, [pc, #32]	@ (10018020 <_fstat_r+0x28>)
10017ffe:	4603      	mov	r3, r0
10018000:	2600      	movs	r6, #0
10018002:	4620      	mov	r0, r4
10018004:	4611      	mov	r1, r2
10018006:	461c      	mov	r4, r3
10018008:	602e      	str	r6, [r5, #0]
1001800a:	f7f9 fd31 	bl	10011a70 <_fstat>
1001800e:	1c43      	adds	r3, r0, #1
10018010:	d000      	beq.n	10018014 <_fstat_r+0x1c>
10018012:	bd70      	pop	{r4, r5, r6, pc}
10018014:	682b      	ldr	r3, [r5, #0]
10018016:	2b00      	cmp	r3, #0
10018018:	d0fb      	beq.n	10018012 <_fstat_r+0x1a>
1001801a:	6023      	str	r3, [r4, #0]
1001801c:	bd70      	pop	{r4, r5, r6, pc}
1001801e:	bf00      	nop
10018020:	200015c4 	.word	0x200015c4

10018024 <_lseek_r>:
10018024:	b538      	push	{r3, r4, r5, lr}
10018026:	460c      	mov	r4, r1
10018028:	4d08      	ldr	r5, [pc, #32]	@ (1001804c <_lseek_r+0x28>)
1001802a:	4684      	mov	ip, r0
1001802c:	4611      	mov	r1, r2
1001802e:	4620      	mov	r0, r4
10018030:	461a      	mov	r2, r3
10018032:	2300      	movs	r3, #0
10018034:	602b      	str	r3, [r5, #0]
10018036:	4664      	mov	r4, ip
10018038:	f7f9 fd16 	bl	10011a68 <_lseek>
1001803c:	1c43      	adds	r3, r0, #1
1001803e:	d000      	beq.n	10018042 <_lseek_r+0x1e>
10018040:	bd38      	pop	{r3, r4, r5, pc}
10018042:	682b      	ldr	r3, [r5, #0]
10018044:	2b00      	cmp	r3, #0
10018046:	d0fb      	beq.n	10018040 <_lseek_r+0x1c>
10018048:	6023      	str	r3, [r4, #0]
1001804a:	bd38      	pop	{r3, r4, r5, pc}
1001804c:	200015c4 	.word	0x200015c4

10018050 <_read_r>:
10018050:	b538      	push	{r3, r4, r5, lr}
10018052:	460c      	mov	r4, r1
10018054:	4d08      	ldr	r5, [pc, #32]	@ (10018078 <_read_r+0x28>)
10018056:	4684      	mov	ip, r0
10018058:	4611      	mov	r1, r2
1001805a:	4620      	mov	r0, r4
1001805c:	461a      	mov	r2, r3
1001805e:	2300      	movs	r3, #0
10018060:	602b      	str	r3, [r5, #0]
10018062:	4664      	mov	r4, ip
10018064:	f7f9 fd08 	bl	10011a78 <_read>
10018068:	1c43      	adds	r3, r0, #1
1001806a:	d000      	beq.n	1001806e <_read_r+0x1e>
1001806c:	bd38      	pop	{r3, r4, r5, pc}
1001806e:	682b      	ldr	r3, [r5, #0]
10018070:	2b00      	cmp	r3, #0
10018072:	d0fb      	beq.n	1001806c <_read_r+0x1c>
10018074:	6023      	str	r3, [r4, #0]
10018076:	bd38      	pop	{r3, r4, r5, pc}
10018078:	200015c4 	.word	0x200015c4

1001807c <_sbrk_r>:
1001807c:	b538      	push	{r3, r4, r5, lr}
1001807e:	4d07      	ldr	r5, [pc, #28]	@ (1001809c <_sbrk_r+0x20>)
10018080:	2200      	movs	r2, #0
10018082:	4604      	mov	r4, r0
10018084:	4608      	mov	r0, r1
10018086:	602a      	str	r2, [r5, #0]
10018088:	f7f9 fe6e 	bl	10011d68 <_sbrk>
1001808c:	1c43      	adds	r3, r0, #1
1001808e:	d000      	beq.n	10018092 <_sbrk_r+0x16>
10018090:	bd38      	pop	{r3, r4, r5, pc}
10018092:	682b      	ldr	r3, [r5, #0]
10018094:	2b00      	cmp	r3, #0
10018096:	d0fb      	beq.n	10018090 <_sbrk_r+0x14>
10018098:	6023      	str	r3, [r4, #0]
1001809a:	bd38      	pop	{r3, r4, r5, pc}
1001809c:	200015c4 	.word	0x200015c4

100180a0 <_write_r>:
100180a0:	b538      	push	{r3, r4, r5, lr}
100180a2:	460c      	mov	r4, r1
100180a4:	4d08      	ldr	r5, [pc, #32]	@ (100180c8 <_write_r+0x28>)
100180a6:	4684      	mov	ip, r0
100180a8:	4611      	mov	r1, r2
100180aa:	4620      	mov	r0, r4
100180ac:	461a      	mov	r2, r3
100180ae:	2300      	movs	r3, #0
100180b0:	602b      	str	r3, [r5, #0]
100180b2:	4664      	mov	r4, ip
100180b4:	f7f9 fd08 	bl	10011ac8 <_write>
100180b8:	1c43      	adds	r3, r0, #1
100180ba:	d000      	beq.n	100180be <_write_r+0x1e>
100180bc:	bd38      	pop	{r3, r4, r5, pc}
100180be:	682b      	ldr	r3, [r5, #0]
100180c0:	2b00      	cmp	r3, #0
100180c2:	d0fb      	beq.n	100180bc <_write_r+0x1c>
100180c4:	6023      	str	r3, [r4, #0]
100180c6:	bd38      	pop	{r3, r4, r5, pc}
100180c8:	200015c4 	.word	0x200015c4

100180cc <__errno>:
100180cc:	4b01      	ldr	r3, [pc, #4]	@ (100180d4 <__errno+0x8>)
100180ce:	6818      	ldr	r0, [r3, #0]
100180d0:	4770      	bx	lr
100180d2:	bf00      	nop
100180d4:	20000598 	.word	0x20000598

100180d8 <sysconf>:
100180d8:	2808      	cmp	r0, #8
100180da:	d102      	bne.n	100180e2 <sysconf+0xa>
100180dc:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
100180e0:	4770      	bx	lr
100180e2:	b508      	push	{r3, lr}
100180e4:	f7ff fff2 	bl	100180cc <__errno>
100180e8:	2316      	movs	r3, #22
100180ea:	6003      	str	r3, [r0, #0]
100180ec:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100180f0:	bd08      	pop	{r3, pc}
100180f2:	bf00      	nop
	...

10018100 <strcmp>:
10018100:	7802      	ldrb	r2, [r0, #0]
10018102:	780b      	ldrb	r3, [r1, #0]
10018104:	2a01      	cmp	r2, #1
10018106:	bf28      	it	cs
10018108:	429a      	cmpcs	r2, r3
1001810a:	f040 80d8 	bne.w	100182be <strcmp+0x1be>
1001810e:	e96d 4504 	strd	r4, r5, [sp, #-16]!
10018112:	ea40 0401 	orr.w	r4, r0, r1
10018116:	e9cd 6702 	strd	r6, r7, [sp, #8]
1001811a:	f06f 0c00 	mvn.w	ip, #0
1001811e:	ea4f 7244 	mov.w	r2, r4, lsl #29
10018122:	b31a      	cbz	r2, 1001816c <strcmp+0x6c>
10018124:	ea80 0401 	eor.w	r4, r0, r1
10018128:	f014 0f07 	tst.w	r4, #7
1001812c:	d16b      	bne.n	10018206 <strcmp+0x106>
1001812e:	f000 0407 	and.w	r4, r0, #7
10018132:	f020 0007 	bic.w	r0, r0, #7
10018136:	f004 0503 	and.w	r5, r4, #3
1001813a:	f021 0107 	bic.w	r1, r1, #7
1001813e:	ea4f 05c5 	mov.w	r5, r5, lsl #3
10018142:	e8f0 2304 	ldrd	r2, r3, [r0], #16
10018146:	f014 0f04 	tst.w	r4, #4
1001814a:	e8f1 6704 	ldrd	r6, r7, [r1], #16
1001814e:	fa0c f405 	lsl.w	r4, ip, r5
10018152:	ea62 0204 	orn	r2, r2, r4
10018156:	ea66 0604 	orn	r6, r6, r4
1001815a:	d00b      	beq.n	10018174 <strcmp+0x74>
1001815c:	ea63 0304 	orn	r3, r3, r4
10018160:	4662      	mov	r2, ip
10018162:	ea67 0704 	orn	r7, r7, r4
10018166:	4666      	mov	r6, ip
10018168:	e004      	b.n	10018174 <strcmp+0x74>
1001816a:	bf00      	nop
1001816c:	e8f0 2304 	ldrd	r2, r3, [r0], #16
10018170:	e8f1 6704 	ldrd	r6, r7, [r1], #16
10018174:	fa82 f54c 	uadd8	r5, r2, ip
10018178:	ea82 0406 	eor.w	r4, r2, r6
1001817c:	faa4 f48c 	sel	r4, r4, ip
10018180:	bb6c      	cbnz	r4, 100181de <strcmp+0xde>
10018182:	fa83 f54c 	uadd8	r5, r3, ip
10018186:	ea83 0507 	eor.w	r5, r3, r7
1001818a:	faa5 f58c 	sel	r5, r5, ip
1001818e:	b995      	cbnz	r5, 100181b6 <strcmp+0xb6>
10018190:	e950 2302 	ldrd	r2, r3, [r0, #-8]
10018194:	e951 6702 	ldrd	r6, r7, [r1, #-8]
10018198:	fa82 f54c 	uadd8	r5, r2, ip
1001819c:	ea82 0406 	eor.w	r4, r2, r6
100181a0:	faa4 f48c 	sel	r4, r4, ip
100181a4:	fa83 f54c 	uadd8	r5, r3, ip
100181a8:	ea83 0507 	eor.w	r5, r3, r7
100181ac:	faa5 f58c 	sel	r5, r5, ip
100181b0:	4325      	orrs	r5, r4
100181b2:	d0db      	beq.n	1001816c <strcmp+0x6c>
100181b4:	b99c      	cbnz	r4, 100181de <strcmp+0xde>
100181b6:	ba2d      	rev	r5, r5
100181b8:	fab5 f485 	clz	r4, r5
100181bc:	f024 0407 	bic.w	r4, r4, #7
100181c0:	fa27 f104 	lsr.w	r1, r7, r4
100181c4:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
100181c8:	fa23 f304 	lsr.w	r3, r3, r4
100181cc:	f003 00ff 	and.w	r0, r3, #255	@ 0xff
100181d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
100181d4:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100181d8:	eba0 0001 	sub.w	r0, r0, r1
100181dc:	4770      	bx	lr
100181de:	ba24      	rev	r4, r4
100181e0:	fab4 f484 	clz	r4, r4
100181e4:	f024 0407 	bic.w	r4, r4, #7
100181e8:	fa26 f104 	lsr.w	r1, r6, r4
100181ec:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
100181f0:	fa22 f204 	lsr.w	r2, r2, r4
100181f4:	f002 00ff 	and.w	r0, r2, #255	@ 0xff
100181f8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
100181fc:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10018200:	eba0 0001 	sub.w	r0, r0, r1
10018204:	4770      	bx	lr
10018206:	f014 0f03 	tst.w	r4, #3
1001820a:	d13c      	bne.n	10018286 <strcmp+0x186>
1001820c:	f010 0403 	ands.w	r4, r0, #3
10018210:	d128      	bne.n	10018264 <strcmp+0x164>
10018212:	f850 2b08 	ldr.w	r2, [r0], #8
10018216:	f851 3b08 	ldr.w	r3, [r1], #8
1001821a:	fa82 f54c 	uadd8	r5, r2, ip
1001821e:	ea82 0503 	eor.w	r5, r2, r3
10018222:	faa5 f58c 	sel	r5, r5, ip
10018226:	b95d      	cbnz	r5, 10018240 <strcmp+0x140>
10018228:	f850 2c04 	ldr.w	r2, [r0, #-4]
1001822c:	f851 3c04 	ldr.w	r3, [r1, #-4]
10018230:	fa82 f54c 	uadd8	r5, r2, ip
10018234:	ea82 0503 	eor.w	r5, r2, r3
10018238:	faa5 f58c 	sel	r5, r5, ip
1001823c:	2d00      	cmp	r5, #0
1001823e:	d0e8      	beq.n	10018212 <strcmp+0x112>
10018240:	ba2d      	rev	r5, r5
10018242:	fab5 f485 	clz	r4, r5
10018246:	f024 0407 	bic.w	r4, r4, #7
1001824a:	fa23 f104 	lsr.w	r1, r3, r4
1001824e:	fa22 f204 	lsr.w	r2, r2, r4
10018252:	f002 00ff 	and.w	r0, r2, #255	@ 0xff
10018256:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001825a:	e8fd 4504 	ldrd	r4, r5, [sp], #16
1001825e:	eba0 0001 	sub.w	r0, r0, r1
10018262:	4770      	bx	lr
10018264:	ea4f 04c4 	mov.w	r4, r4, lsl #3
10018268:	f020 0003 	bic.w	r0, r0, #3
1001826c:	f850 2b08 	ldr.w	r2, [r0], #8
10018270:	f021 0103 	bic.w	r1, r1, #3
10018274:	f851 3b08 	ldr.w	r3, [r1], #8
10018278:	fa0c f404 	lsl.w	r4, ip, r4
1001827c:	ea62 0204 	orn	r2, r2, r4
10018280:	ea63 0304 	orn	r3, r3, r4
10018284:	e7c9      	b.n	1001821a <strcmp+0x11a>
10018286:	f010 0403 	ands.w	r4, r0, #3
1001828a:	d01d      	beq.n	100182c8 <strcmp+0x1c8>
1001828c:	eba1 0104 	sub.w	r1, r1, r4
10018290:	f020 0003 	bic.w	r0, r0, #3
10018294:	07e4      	lsls	r4, r4, #31
10018296:	f850 2b04 	ldr.w	r2, [r0], #4
1001829a:	d006      	beq.n	100182aa <strcmp+0x1aa>
1001829c:	d212      	bcs.n	100182c4 <strcmp+0x1c4>
1001829e:	788b      	ldrb	r3, [r1, #2]
100182a0:	fa5f f4a2 	uxtb.w	r4, r2, ror #16
100182a4:	1ae4      	subs	r4, r4, r3
100182a6:	d106      	bne.n	100182b6 <strcmp+0x1b6>
100182a8:	b12b      	cbz	r3, 100182b6 <strcmp+0x1b6>
100182aa:	78cb      	ldrb	r3, [r1, #3]
100182ac:	fa5f f4b2 	uxtb.w	r4, r2, ror #24
100182b0:	1ae4      	subs	r4, r4, r3
100182b2:	d100      	bne.n	100182b6 <strcmp+0x1b6>
100182b4:	b933      	cbnz	r3, 100182c4 <strcmp+0x1c4>
100182b6:	4620      	mov	r0, r4
100182b8:	f85d 4b10 	ldr.w	r4, [sp], #16
100182bc:	4770      	bx	lr
100182be:	eba2 0003 	sub.w	r0, r2, r3
100182c2:	4770      	bx	lr
100182c4:	f101 0104 	add.w	r1, r1, #4
100182c8:	f850 2b04 	ldr.w	r2, [r0], #4
100182cc:	07cc      	lsls	r4, r1, #31
100182ce:	f021 0103 	bic.w	r1, r1, #3
100182d2:	f851 3b04 	ldr.w	r3, [r1], #4
100182d6:	d848      	bhi.n	1001836a <strcmp+0x26a>
100182d8:	d224      	bcs.n	10018324 <strcmp+0x224>
100182da:	f022 447f 	bic.w	r4, r2, #4278190080	@ 0xff000000
100182de:	fa82 f54c 	uadd8	r5, r2, ip
100182e2:	ea94 2513 	eors.w	r5, r4, r3, lsr #8
100182e6:	faa5 f58c 	sel	r5, r5, ip
100182ea:	d10a      	bne.n	10018302 <strcmp+0x202>
100182ec:	b965      	cbnz	r5, 10018308 <strcmp+0x208>
100182ee:	f851 3b04 	ldr.w	r3, [r1], #4
100182f2:	ea84 0402 	eor.w	r4, r4, r2
100182f6:	ebb4 6f03 	cmp.w	r4, r3, lsl #24
100182fa:	d10e      	bne.n	1001831a <strcmp+0x21a>
100182fc:	f850 2b04 	ldr.w	r2, [r0], #4
10018300:	e7eb      	b.n	100182da <strcmp+0x1da>
10018302:	ea4f 2313 	mov.w	r3, r3, lsr #8
10018306:	e055      	b.n	100183b4 <strcmp+0x2b4>
10018308:	f035 457f 	bics.w	r5, r5, #4278190080	@ 0xff000000
1001830c:	d14d      	bne.n	100183aa <strcmp+0x2aa>
1001830e:	7808      	ldrb	r0, [r1, #0]
10018310:	e8fd 4504 	ldrd	r4, r5, [sp], #16
10018314:	f1c0 0000 	rsb	r0, r0, #0
10018318:	4770      	bx	lr
1001831a:	ea4f 6212 	mov.w	r2, r2, lsr #24
1001831e:	f003 03ff 	and.w	r3, r3, #255	@ 0xff
10018322:	e047      	b.n	100183b4 <strcmp+0x2b4>
10018324:	ea02 441c 	and.w	r4, r2, ip, lsr #16
10018328:	fa82 f54c 	uadd8	r5, r2, ip
1001832c:	ea94 4513 	eors.w	r5, r4, r3, lsr #16
10018330:	faa5 f58c 	sel	r5, r5, ip
10018334:	d10a      	bne.n	1001834c <strcmp+0x24c>
10018336:	b965      	cbnz	r5, 10018352 <strcmp+0x252>
10018338:	f851 3b04 	ldr.w	r3, [r1], #4
1001833c:	ea84 0402 	eor.w	r4, r4, r2
10018340:	ebb4 4f03 	cmp.w	r4, r3, lsl #16
10018344:	d10c      	bne.n	10018360 <strcmp+0x260>
10018346:	f850 2b04 	ldr.w	r2, [r0], #4
1001834a:	e7eb      	b.n	10018324 <strcmp+0x224>
1001834c:	ea4f 4313 	mov.w	r3, r3, lsr #16
10018350:	e030      	b.n	100183b4 <strcmp+0x2b4>
10018352:	ea15 451c 	ands.w	r5, r5, ip, lsr #16
10018356:	d128      	bne.n	100183aa <strcmp+0x2aa>
10018358:	880b      	ldrh	r3, [r1, #0]
1001835a:	ea4f 4212 	mov.w	r2, r2, lsr #16
1001835e:	e029      	b.n	100183b4 <strcmp+0x2b4>
10018360:	ea4f 4212 	mov.w	r2, r2, lsr #16
10018364:	ea03 431c 	and.w	r3, r3, ip, lsr #16
10018368:	e024      	b.n	100183b4 <strcmp+0x2b4>
1001836a:	f002 04ff 	and.w	r4, r2, #255	@ 0xff
1001836e:	fa82 f54c 	uadd8	r5, r2, ip
10018372:	ea94 6513 	eors.w	r5, r4, r3, lsr #24
10018376:	faa5 f58c 	sel	r5, r5, ip
1001837a:	d10a      	bne.n	10018392 <strcmp+0x292>
1001837c:	b965      	cbnz	r5, 10018398 <strcmp+0x298>
1001837e:	f851 3b04 	ldr.w	r3, [r1], #4
10018382:	ea84 0402 	eor.w	r4, r4, r2
10018386:	ebb4 2f03 	cmp.w	r4, r3, lsl #8
1001838a:	d109      	bne.n	100183a0 <strcmp+0x2a0>
1001838c:	f850 2b04 	ldr.w	r2, [r0], #4
10018390:	e7eb      	b.n	1001836a <strcmp+0x26a>
10018392:	ea4f 6313 	mov.w	r3, r3, lsr #24
10018396:	e00d      	b.n	100183b4 <strcmp+0x2b4>
10018398:	f015 0fff 	tst.w	r5, #255	@ 0xff
1001839c:	d105      	bne.n	100183aa <strcmp+0x2aa>
1001839e:	680b      	ldr	r3, [r1, #0]
100183a0:	ea4f 2212 	mov.w	r2, r2, lsr #8
100183a4:	f023 437f 	bic.w	r3, r3, #4278190080	@ 0xff000000
100183a8:	e004      	b.n	100183b4 <strcmp+0x2b4>
100183aa:	f04f 0000 	mov.w	r0, #0
100183ae:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100183b2:	4770      	bx	lr
100183b4:	ba12      	rev	r2, r2
100183b6:	ba1b      	rev	r3, r3
100183b8:	fa82 f44c 	uadd8	r4, r2, ip
100183bc:	ea82 0403 	eor.w	r4, r2, r3
100183c0:	faa4 f58c 	sel	r5, r4, ip
100183c4:	fab5 f485 	clz	r4, r5
100183c8:	fa02 f204 	lsl.w	r2, r2, r4
100183cc:	fa03 f304 	lsl.w	r3, r3, r4
100183d0:	ea4f 6012 	mov.w	r0, r2, lsr #24
100183d4:	e8fd 4504 	ldrd	r4, r5, [sp], #16
100183d8:	eba0 6013 	sub.w	r0, r0, r3, lsr #24
100183dc:	4770      	bx	lr
100183de:	bf00      	nop

100183e0 <__libc_init_array>:
100183e0:	b570      	push	{r4, r5, r6, lr}
100183e2:	4b0f      	ldr	r3, [pc, #60]	@ (10018420 <__libc_init_array+0x40>)
100183e4:	4d0f      	ldr	r5, [pc, #60]	@ (10018424 <__libc_init_array+0x44>)
100183e6:	42ab      	cmp	r3, r5
100183e8:	eba3 0605 	sub.w	r6, r3, r5
100183ec:	d007      	beq.n	100183fe <__libc_init_array+0x1e>
100183ee:	10b6      	asrs	r6, r6, #2
100183f0:	2400      	movs	r4, #0
100183f2:	f855 3b04 	ldr.w	r3, [r5], #4
100183f6:	3401      	adds	r4, #1
100183f8:	4798      	blx	r3
100183fa:	42a6      	cmp	r6, r4
100183fc:	d8f9      	bhi.n	100183f2 <__libc_init_array+0x12>
100183fe:	f012 fa8d 	bl	1002a91c <_init>
10018402:	4d09      	ldr	r5, [pc, #36]	@ (10018428 <__libc_init_array+0x48>)
10018404:	4b09      	ldr	r3, [pc, #36]	@ (1001842c <__libc_init_array+0x4c>)
10018406:	1b5e      	subs	r6, r3, r5
10018408:	42ab      	cmp	r3, r5
1001840a:	ea4f 06a6 	mov.w	r6, r6, asr #2
1001840e:	d006      	beq.n	1001841e <__libc_init_array+0x3e>
10018410:	2400      	movs	r4, #0
10018412:	f855 3b04 	ldr.w	r3, [r5], #4
10018416:	3401      	adds	r4, #1
10018418:	4798      	blx	r3
1001841a:	42a6      	cmp	r6, r4
1001841c:	d8f9      	bhi.n	10018412 <__libc_init_array+0x32>
1001841e:	bd70      	pop	{r4, r5, r6, pc}
10018420:	20000bc0 	.word	0x20000bc0
10018424:	20000bc0 	.word	0x20000bc0
10018428:	20000bc0 	.word	0x20000bc0
1001842c:	20000bc8 	.word	0x20000bc8

10018430 <__retarget_lock_init_recursive>:
10018430:	4770      	bx	lr
10018432:	bf00      	nop

10018434 <__retarget_lock_close_recursive>:
10018434:	4770      	bx	lr
10018436:	bf00      	nop

10018438 <__retarget_lock_acquire_recursive>:
10018438:	4770      	bx	lr
1001843a:	bf00      	nop

1001843c <__retarget_lock_release_recursive>:
1001843c:	4770      	bx	lr
1001843e:	bf00      	nop

10018440 <memchr>:
10018440:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10018444:	2a10      	cmp	r2, #16
10018446:	db2b      	blt.n	100184a0 <memchr+0x60>
10018448:	f010 0f07 	tst.w	r0, #7
1001844c:	d008      	beq.n	10018460 <memchr+0x20>
1001844e:	f810 3b01 	ldrb.w	r3, [r0], #1
10018452:	3a01      	subs	r2, #1
10018454:	428b      	cmp	r3, r1
10018456:	d02d      	beq.n	100184b4 <memchr+0x74>
10018458:	f010 0f07 	tst.w	r0, #7
1001845c:	b342      	cbz	r2, 100184b0 <memchr+0x70>
1001845e:	d1f6      	bne.n	1001844e <memchr+0xe>
10018460:	b4f0      	push	{r4, r5, r6, r7}
10018462:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
10018466:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1001846a:	f022 0407 	bic.w	r4, r2, #7
1001846e:	f07f 0700 	mvns.w	r7, #0
10018472:	2300      	movs	r3, #0
10018474:	e8f0 5602 	ldrd	r5, r6, [r0], #8
10018478:	3c08      	subs	r4, #8
1001847a:	ea85 0501 	eor.w	r5, r5, r1
1001847e:	ea86 0601 	eor.w	r6, r6, r1
10018482:	fa85 f547 	uadd8	r5, r5, r7
10018486:	faa3 f587 	sel	r5, r3, r7
1001848a:	fa86 f647 	uadd8	r6, r6, r7
1001848e:	faa5 f687 	sel	r6, r5, r7
10018492:	b98e      	cbnz	r6, 100184b8 <memchr+0x78>
10018494:	d1ee      	bne.n	10018474 <memchr+0x34>
10018496:	bcf0      	pop	{r4, r5, r6, r7}
10018498:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001849c:	f002 0207 	and.w	r2, r2, #7
100184a0:	b132      	cbz	r2, 100184b0 <memchr+0x70>
100184a2:	f810 3b01 	ldrb.w	r3, [r0], #1
100184a6:	3a01      	subs	r2, #1
100184a8:	ea83 0301 	eor.w	r3, r3, r1
100184ac:	b113      	cbz	r3, 100184b4 <memchr+0x74>
100184ae:	d1f8      	bne.n	100184a2 <memchr+0x62>
100184b0:	2000      	movs	r0, #0
100184b2:	4770      	bx	lr
100184b4:	3801      	subs	r0, #1
100184b6:	4770      	bx	lr
100184b8:	2d00      	cmp	r5, #0
100184ba:	bf06      	itte	eq
100184bc:	4635      	moveq	r5, r6
100184be:	3803      	subeq	r0, #3
100184c0:	3807      	subne	r0, #7
100184c2:	f015 0f01 	tst.w	r5, #1
100184c6:	d107      	bne.n	100184d8 <memchr+0x98>
100184c8:	3001      	adds	r0, #1
100184ca:	f415 7f80 	tst.w	r5, #256	@ 0x100
100184ce:	bf02      	ittt	eq
100184d0:	3001      	addeq	r0, #1
100184d2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
100184d6:	3001      	addeq	r0, #1
100184d8:	bcf0      	pop	{r4, r5, r6, r7}
100184da:	3801      	subs	r0, #1
100184dc:	4770      	bx	lr
100184de:	bf00      	nop

100184e0 <memcpy>:
100184e0:	4684      	mov	ip, r0
100184e2:	ea41 0300 	orr.w	r3, r1, r0
100184e6:	f013 0303 	ands.w	r3, r3, #3
100184ea:	d16d      	bne.n	100185c8 <memcpy+0xe8>
100184ec:	3a40      	subs	r2, #64	@ 0x40
100184ee:	d341      	bcc.n	10018574 <memcpy+0x94>
100184f0:	f851 3b04 	ldr.w	r3, [r1], #4
100184f4:	f840 3b04 	str.w	r3, [r0], #4
100184f8:	f851 3b04 	ldr.w	r3, [r1], #4
100184fc:	f840 3b04 	str.w	r3, [r0], #4
10018500:	f851 3b04 	ldr.w	r3, [r1], #4
10018504:	f840 3b04 	str.w	r3, [r0], #4
10018508:	f851 3b04 	ldr.w	r3, [r1], #4
1001850c:	f840 3b04 	str.w	r3, [r0], #4
10018510:	f851 3b04 	ldr.w	r3, [r1], #4
10018514:	f840 3b04 	str.w	r3, [r0], #4
10018518:	f851 3b04 	ldr.w	r3, [r1], #4
1001851c:	f840 3b04 	str.w	r3, [r0], #4
10018520:	f851 3b04 	ldr.w	r3, [r1], #4
10018524:	f840 3b04 	str.w	r3, [r0], #4
10018528:	f851 3b04 	ldr.w	r3, [r1], #4
1001852c:	f840 3b04 	str.w	r3, [r0], #4
10018530:	f851 3b04 	ldr.w	r3, [r1], #4
10018534:	f840 3b04 	str.w	r3, [r0], #4
10018538:	f851 3b04 	ldr.w	r3, [r1], #4
1001853c:	f840 3b04 	str.w	r3, [r0], #4
10018540:	f851 3b04 	ldr.w	r3, [r1], #4
10018544:	f840 3b04 	str.w	r3, [r0], #4
10018548:	f851 3b04 	ldr.w	r3, [r1], #4
1001854c:	f840 3b04 	str.w	r3, [r0], #4
10018550:	f851 3b04 	ldr.w	r3, [r1], #4
10018554:	f840 3b04 	str.w	r3, [r0], #4
10018558:	f851 3b04 	ldr.w	r3, [r1], #4
1001855c:	f840 3b04 	str.w	r3, [r0], #4
10018560:	f851 3b04 	ldr.w	r3, [r1], #4
10018564:	f840 3b04 	str.w	r3, [r0], #4
10018568:	f851 3b04 	ldr.w	r3, [r1], #4
1001856c:	f840 3b04 	str.w	r3, [r0], #4
10018570:	3a40      	subs	r2, #64	@ 0x40
10018572:	d2bd      	bcs.n	100184f0 <memcpy+0x10>
10018574:	3230      	adds	r2, #48	@ 0x30
10018576:	d311      	bcc.n	1001859c <memcpy+0xbc>
10018578:	f851 3b04 	ldr.w	r3, [r1], #4
1001857c:	f840 3b04 	str.w	r3, [r0], #4
10018580:	f851 3b04 	ldr.w	r3, [r1], #4
10018584:	f840 3b04 	str.w	r3, [r0], #4
10018588:	f851 3b04 	ldr.w	r3, [r1], #4
1001858c:	f840 3b04 	str.w	r3, [r0], #4
10018590:	f851 3b04 	ldr.w	r3, [r1], #4
10018594:	f840 3b04 	str.w	r3, [r0], #4
10018598:	3a10      	subs	r2, #16
1001859a:	d2ed      	bcs.n	10018578 <memcpy+0x98>
1001859c:	320c      	adds	r2, #12
1001859e:	d305      	bcc.n	100185ac <memcpy+0xcc>
100185a0:	f851 3b04 	ldr.w	r3, [r1], #4
100185a4:	f840 3b04 	str.w	r3, [r0], #4
100185a8:	3a04      	subs	r2, #4
100185aa:	d2f9      	bcs.n	100185a0 <memcpy+0xc0>
100185ac:	3204      	adds	r2, #4
100185ae:	d008      	beq.n	100185c2 <memcpy+0xe2>
100185b0:	07d2      	lsls	r2, r2, #31
100185b2:	bf1c      	itt	ne
100185b4:	f811 3b01 	ldrbne.w	r3, [r1], #1
100185b8:	f800 3b01 	strbne.w	r3, [r0], #1
100185bc:	d301      	bcc.n	100185c2 <memcpy+0xe2>
100185be:	880b      	ldrh	r3, [r1, #0]
100185c0:	8003      	strh	r3, [r0, #0]
100185c2:	4660      	mov	r0, ip
100185c4:	4770      	bx	lr
100185c6:	bf00      	nop
100185c8:	2a08      	cmp	r2, #8
100185ca:	d313      	bcc.n	100185f4 <memcpy+0x114>
100185cc:	078b      	lsls	r3, r1, #30
100185ce:	d08d      	beq.n	100184ec <memcpy+0xc>
100185d0:	f010 0303 	ands.w	r3, r0, #3
100185d4:	d08a      	beq.n	100184ec <memcpy+0xc>
100185d6:	f1c3 0304 	rsb	r3, r3, #4
100185da:	1ad2      	subs	r2, r2, r3
100185dc:	07db      	lsls	r3, r3, #31
100185de:	bf1c      	itt	ne
100185e0:	f811 3b01 	ldrbne.w	r3, [r1], #1
100185e4:	f800 3b01 	strbne.w	r3, [r0], #1
100185e8:	d380      	bcc.n	100184ec <memcpy+0xc>
100185ea:	f831 3b02 	ldrh.w	r3, [r1], #2
100185ee:	f820 3b02 	strh.w	r3, [r0], #2
100185f2:	e77b      	b.n	100184ec <memcpy+0xc>
100185f4:	3a04      	subs	r2, #4
100185f6:	d3d9      	bcc.n	100185ac <memcpy+0xcc>
100185f8:	3a01      	subs	r2, #1
100185fa:	f811 3b01 	ldrb.w	r3, [r1], #1
100185fe:	f800 3b01 	strb.w	r3, [r0], #1
10018602:	d2f9      	bcs.n	100185f8 <memcpy+0x118>
10018604:	780b      	ldrb	r3, [r1, #0]
10018606:	7003      	strb	r3, [r0, #0]
10018608:	784b      	ldrb	r3, [r1, #1]
1001860a:	7043      	strb	r3, [r0, #1]
1001860c:	788b      	ldrb	r3, [r1, #2]
1001860e:	7083      	strb	r3, [r0, #2]
10018610:	4660      	mov	r0, ip
10018612:	4770      	bx	lr
	...

10018640 <strlen>:
10018640:	b430      	push	{r4, r5}
10018642:	f890 f000 	pld	[r0]
10018646:	f020 0107 	bic.w	r1, r0, #7
1001864a:	f06f 0c00 	mvn.w	ip, #0
1001864e:	f010 0407 	ands.w	r4, r0, #7
10018652:	f891 f020 	pld	[r1, #32]
10018656:	f040 8048 	bne.w	100186ea <strlen+0xaa>
1001865a:	f04f 0400 	mov.w	r4, #0
1001865e:	f06f 0007 	mvn.w	r0, #7
10018662:	e9d1 2300 	ldrd	r2, r3, [r1]
10018666:	f891 f040 	pld	[r1, #64]	@ 0x40
1001866a:	f100 0008 	add.w	r0, r0, #8
1001866e:	fa82 f24c 	uadd8	r2, r2, ip
10018672:	faa4 f28c 	sel	r2, r4, ip
10018676:	fa83 f34c 	uadd8	r3, r3, ip
1001867a:	faa2 f38c 	sel	r3, r2, ip
1001867e:	bb4b      	cbnz	r3, 100186d4 <strlen+0x94>
10018680:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
10018684:	fa82 f24c 	uadd8	r2, r2, ip
10018688:	f100 0008 	add.w	r0, r0, #8
1001868c:	faa4 f28c 	sel	r2, r4, ip
10018690:	fa83 f34c 	uadd8	r3, r3, ip
10018694:	faa2 f38c 	sel	r3, r2, ip
10018698:	b9e3      	cbnz	r3, 100186d4 <strlen+0x94>
1001869a:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1001869e:	fa82 f24c 	uadd8	r2, r2, ip
100186a2:	f100 0008 	add.w	r0, r0, #8
100186a6:	faa4 f28c 	sel	r2, r4, ip
100186aa:	fa83 f34c 	uadd8	r3, r3, ip
100186ae:	faa2 f38c 	sel	r3, r2, ip
100186b2:	b97b      	cbnz	r3, 100186d4 <strlen+0x94>
100186b4:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
100186b8:	f101 0120 	add.w	r1, r1, #32
100186bc:	fa82 f24c 	uadd8	r2, r2, ip
100186c0:	f100 0008 	add.w	r0, r0, #8
100186c4:	faa4 f28c 	sel	r2, r4, ip
100186c8:	fa83 f34c 	uadd8	r3, r3, ip
100186cc:	faa2 f38c 	sel	r3, r2, ip
100186d0:	2b00      	cmp	r3, #0
100186d2:	d0c6      	beq.n	10018662 <strlen+0x22>
100186d4:	2a00      	cmp	r2, #0
100186d6:	bf04      	itt	eq
100186d8:	3004      	addeq	r0, #4
100186da:	461a      	moveq	r2, r3
100186dc:	ba12      	rev	r2, r2
100186de:	fab2 f282 	clz	r2, r2
100186e2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
100186e6:	bc30      	pop	{r4, r5}
100186e8:	4770      	bx	lr
100186ea:	e9d1 2300 	ldrd	r2, r3, [r1]
100186ee:	f004 0503 	and.w	r5, r4, #3
100186f2:	f1c4 0000 	rsb	r0, r4, #0
100186f6:	ea4f 05c5 	mov.w	r5, r5, lsl #3
100186fa:	f014 0f04 	tst.w	r4, #4
100186fe:	f891 f040 	pld	[r1, #64]	@ 0x40
10018702:	fa0c f505 	lsl.w	r5, ip, r5
10018706:	ea62 0205 	orn	r2, r2, r5
1001870a:	bf1c      	itt	ne
1001870c:	ea63 0305 	ornne	r3, r3, r5
10018710:	4662      	movne	r2, ip
10018712:	f04f 0400 	mov.w	r4, #0
10018716:	e7aa      	b.n	1001866e <strlen+0x2e>

10018718 <_wcrtomb_r>:
10018718:	b570      	push	{r4, r5, r6, lr}
1001871a:	4605      	mov	r5, r0
1001871c:	b084      	sub	sp, #16
1001871e:	b15b      	cbz	r3, 10018738 <_wcrtomb_r+0x20>
10018720:	461c      	mov	r4, r3
10018722:	4b0f      	ldr	r3, [pc, #60]	@ (10018760 <_wcrtomb_r+0x48>)
10018724:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10018728:	4623      	mov	r3, r4
1001872a:	b169      	cbz	r1, 10018748 <_wcrtomb_r+0x30>
1001872c:	4628      	mov	r0, r5
1001872e:	47b0      	blx	r6
10018730:	1c43      	adds	r3, r0, #1
10018732:	d00f      	beq.n	10018754 <_wcrtomb_r+0x3c>
10018734:	b004      	add	sp, #16
10018736:	bd70      	pop	{r4, r5, r6, pc}
10018738:	4b09      	ldr	r3, [pc, #36]	@ (10018760 <_wcrtomb_r+0x48>)
1001873a:	f500 7482 	add.w	r4, r0, #260	@ 0x104
1001873e:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10018742:	4623      	mov	r3, r4
10018744:	2900      	cmp	r1, #0
10018746:	d1f1      	bne.n	1001872c <_wcrtomb_r+0x14>
10018748:	460a      	mov	r2, r1
1001874a:	4628      	mov	r0, r5
1001874c:	a901      	add	r1, sp, #4
1001874e:	47b0      	blx	r6
10018750:	1c43      	adds	r3, r0, #1
10018752:	d1ef      	bne.n	10018734 <_wcrtomb_r+0x1c>
10018754:	2200      	movs	r2, #0
10018756:	238a      	movs	r3, #138	@ 0x8a
10018758:	6022      	str	r2, [r4, #0]
1001875a:	602b      	str	r3, [r5, #0]
1001875c:	b004      	add	sp, #16
1001875e:	bd70      	pop	{r4, r5, r6, pc}
10018760:	2000042c 	.word	0x2000042c

10018764 <_wcsrtombs_r>:
10018764:	b500      	push	{lr}
10018766:	b083      	sub	sp, #12
10018768:	f8dd c010 	ldr.w	ip, [sp, #16]
1001876c:	e9cd 3c00 	strd	r3, ip, [sp]
10018770:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10018774:	f006 fe9c 	bl	1001f4b0 <_wcsnrtombs_r>
10018778:	b003      	add	sp, #12
1001877a:	f85d fb04 	ldr.w	pc, [sp], #4
1001877e:	bf00      	nop

10018780 <frexp>:
10018780:	f8df c060 	ldr.w	ip, [pc, #96]	@ 100187e4 <frexp+0x64>
10018784:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10018786:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
1001878a:	2700      	movs	r7, #0
1001878c:	4563      	cmp	r3, ip
1001878e:	4604      	mov	r4, r0
10018790:	460d      	mov	r5, r1
10018792:	4616      	mov	r6, r2
10018794:	6017      	str	r7, [r2, #0]
10018796:	d822      	bhi.n	100187de <frexp+0x5e>
10018798:	4684      	mov	ip, r0
1001879a:	ea53 0c0c 	orrs.w	ip, r3, ip
1001879e:	d01e      	beq.n	100187de <frexp+0x5e>
100187a0:	f8df c044 	ldr.w	ip, [pc, #68]	@ 100187e8 <frexp+0x68>
100187a4:	ea01 0c0c 	and.w	ip, r1, ip
100187a8:	460a      	mov	r2, r1
100187aa:	f1bc 0f00 	cmp.w	ip, #0
100187ae:	d109      	bne.n	100187c4 <frexp+0x44>
100187b0:	4b0e      	ldr	r3, [pc, #56]	@ (100187ec <frexp+0x6c>)
100187b2:	2200      	movs	r2, #0
100187b4:	f007 fff0 	bl	10020798 <__aeabi_dmul>
100187b8:	f06f 0735 	mvn.w	r7, #53	@ 0x35
100187bc:	4604      	mov	r4, r0
100187be:	460a      	mov	r2, r1
100187c0:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
100187c4:	f022 42ff 	bic.w	r2, r2, #2139095040	@ 0x7f800000
100187c8:	151b      	asrs	r3, r3, #20
100187ca:	f422 02e0 	bic.w	r2, r2, #7340032	@ 0x700000
100187ce:	f2a3 33fe 	subw	r3, r3, #1022	@ 0x3fe
100187d2:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
100187d6:	443b      	add	r3, r7
100187d8:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
100187dc:	6033      	str	r3, [r6, #0]
100187de:	4620      	mov	r0, r4
100187e0:	4629      	mov	r1, r5
100187e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100187e4:	7fefffff 	.word	0x7fefffff
100187e8:	7ff00000 	.word	0x7ff00000
100187ec:	43500000 	.word	0x43500000

100187f0 <register_fini>:
100187f0:	4b02      	ldr	r3, [pc, #8]	@ (100187fc <register_fini+0xc>)
100187f2:	b113      	cbz	r3, 100187fa <register_fini+0xa>
100187f4:	4802      	ldr	r0, [pc, #8]	@ (10018800 <register_fini+0x10>)
100187f6:	f000 b805 	b.w	10018804 <atexit>
100187fa:	4770      	bx	lr
100187fc:	00000000 	.word	0x00000000
10018800:	1001f1b1 	.word	0x1001f1b1

10018804 <atexit>:
10018804:	2300      	movs	r3, #0
10018806:	4601      	mov	r1, r0
10018808:	461a      	mov	r2, r3
1001880a:	4618      	mov	r0, r3
1001880c:	f006 be7a 	b.w	1001f504 <__register_exitproc>

10018810 <quorem>:
10018810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018814:	6903      	ldr	r3, [r0, #16]
10018816:	690c      	ldr	r4, [r1, #16]
10018818:	42a3      	cmp	r3, r4
1001881a:	b083      	sub	sp, #12
1001881c:	f2c0 808a 	blt.w	10018934 <quorem+0x124>
10018820:	3c01      	subs	r4, #1
10018822:	f101 0514 	add.w	r5, r1, #20
10018826:	f100 0814 	add.w	r8, r0, #20
1001882a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
1001882e:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
10018832:	3301      	adds	r3, #1
10018834:	429a      	cmp	r2, r3
10018836:	468e      	mov	lr, r1
10018838:	4681      	mov	r9, r0
1001883a:	ea4f 0184 	mov.w	r1, r4, lsl #2
1001883e:	eb05 0784 	add.w	r7, r5, r4, lsl #2
10018842:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
10018846:	fbb2 f6f3 	udiv	r6, r2, r3
1001884a:	d33a      	bcc.n	100188c2 <quorem+0xb2>
1001884c:	e9cd 1500 	strd	r1, r5, [sp]
10018850:	2200      	movs	r2, #0
10018852:	46ac      	mov	ip, r5
10018854:	4640      	mov	r0, r8
10018856:	4613      	mov	r3, r2
10018858:	f85c 1b04 	ldr.w	r1, [ip], #4
1001885c:	6805      	ldr	r5, [r0, #0]
1001885e:	fa1f fb81 	uxth.w	fp, r1
10018862:	fb06 220b 	mla	r2, r6, fp, r2
10018866:	0c09      	lsrs	r1, r1, #16
10018868:	ea4f 4b12 	mov.w	fp, r2, lsr #16
1001886c:	fb06 bb01 	mla	fp, r6, r1, fp
10018870:	b292      	uxth	r2, r2
10018872:	b2a9      	uxth	r1, r5
10018874:	1a89      	subs	r1, r1, r2
10018876:	4419      	add	r1, r3
10018878:	fa1f f38b 	uxth.w	r3, fp
1001887c:	ebc3 4321 	rsb	r3, r3, r1, asr #16
10018880:	eb03 4315 	add.w	r3, r3, r5, lsr #16
10018884:	b289      	uxth	r1, r1
10018886:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1001888a:	4567      	cmp	r7, ip
1001888c:	f840 1b04 	str.w	r1, [r0], #4
10018890:	ea4f 421b 	mov.w	r2, fp, lsr #16
10018894:	ea4f 4323 	mov.w	r3, r3, asr #16
10018898:	d2de      	bcs.n	10018858 <quorem+0x48>
1001889a:	e9dd 1500 	ldrd	r1, r5, [sp]
1001889e:	f858 3001 	ldr.w	r3, [r8, r1]
100188a2:	b973      	cbnz	r3, 100188c2 <quorem+0xb2>
100188a4:	f1aa 0a04 	sub.w	sl, sl, #4
100188a8:	45d0      	cmp	r8, sl
100188aa:	d304      	bcc.n	100188b6 <quorem+0xa6>
100188ac:	e007      	b.n	100188be <quorem+0xae>
100188ae:	45d0      	cmp	r8, sl
100188b0:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
100188b4:	d203      	bcs.n	100188be <quorem+0xae>
100188b6:	f85a 3904 	ldr.w	r3, [sl], #-4
100188ba:	2b00      	cmp	r3, #0
100188bc:	d0f7      	beq.n	100188ae <quorem+0x9e>
100188be:	f8c9 4010 	str.w	r4, [r9, #16]
100188c2:	4671      	mov	r1, lr
100188c4:	4648      	mov	r0, r9
100188c6:	f004 fe67 	bl	1001d598 <__mcmp>
100188ca:	2800      	cmp	r0, #0
100188cc:	db2e      	blt.n	1001892c <quorem+0x11c>
100188ce:	4641      	mov	r1, r8
100188d0:	2200      	movs	r2, #0
100188d2:	f855 0b04 	ldr.w	r0, [r5], #4
100188d6:	f8d1 c000 	ldr.w	ip, [r1]
100188da:	fa1f fe80 	uxth.w	lr, r0
100188de:	fa1f f38c 	uxth.w	r3, ip
100188e2:	eba3 030e 	sub.w	r3, r3, lr
100188e6:	4413      	add	r3, r2
100188e8:	0c02      	lsrs	r2, r0, #16
100188ea:	ebc2 4223 	rsb	r2, r2, r3, asr #16
100188ee:	eb02 421c 	add.w	r2, r2, ip, lsr #16
100188f2:	b29b      	uxth	r3, r3
100188f4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
100188f8:	42af      	cmp	r7, r5
100188fa:	f841 3b04 	str.w	r3, [r1], #4
100188fe:	ea4f 4222 	mov.w	r2, r2, asr #16
10018902:	d2e6      	bcs.n	100188d2 <quorem+0xc2>
10018904:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
10018908:	eb08 0384 	add.w	r3, r8, r4, lsl #2
1001890c:	b96a      	cbnz	r2, 1001892a <quorem+0x11a>
1001890e:	3b04      	subs	r3, #4
10018910:	4598      	cmp	r8, r3
10018912:	d304      	bcc.n	1001891e <quorem+0x10e>
10018914:	e007      	b.n	10018926 <quorem+0x116>
10018916:	4598      	cmp	r8, r3
10018918:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
1001891c:	d203      	bcs.n	10018926 <quorem+0x116>
1001891e:	f853 2904 	ldr.w	r2, [r3], #-4
10018922:	2a00      	cmp	r2, #0
10018924:	d0f7      	beq.n	10018916 <quorem+0x106>
10018926:	f8c9 4010 	str.w	r4, [r9, #16]
1001892a:	3601      	adds	r6, #1
1001892c:	4630      	mov	r0, r6
1001892e:	b003      	add	sp, #12
10018930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018934:	2000      	movs	r0, #0
10018936:	b003      	add	sp, #12
10018938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001893c:	0000      	movs	r0, r0
	...

10018940 <_dtoa_r>:
10018940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018944:	6b81      	ldr	r1, [r0, #56]	@ 0x38
10018946:	b09f      	sub	sp, #124	@ 0x7c
10018948:	4616      	mov	r6, r2
1001894a:	461f      	mov	r7, r3
1001894c:	e9cd 6704 	strd	r6, r7, [sp, #16]
10018950:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
10018952:	9003      	str	r0, [sp, #12]
10018954:	b149      	cbz	r1, 1001896a <_dtoa_r+0x2a>
10018956:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
10018958:	604a      	str	r2, [r1, #4]
1001895a:	2301      	movs	r3, #1
1001895c:	4093      	lsls	r3, r2
1001895e:	4604      	mov	r4, r0
10018960:	608b      	str	r3, [r1, #8]
10018962:	f004 fb5f 	bl	1001d024 <_Bfree>
10018966:	2300      	movs	r3, #0
10018968:	63a3      	str	r3, [r4, #56]	@ 0x38
1001896a:	f1b7 0900 	subs.w	r9, r7, #0
1001896e:	bfb4      	ite	lt
10018970:	2301      	movlt	r3, #1
10018972:	2300      	movge	r3, #0
10018974:	602b      	str	r3, [r5, #0]
10018976:	4b76      	ldr	r3, [pc, #472]	@ (10018b50 <_dtoa_r+0x210>)
10018978:	bfbc      	itt	lt
1001897a:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
1001897e:	f8cd 9014 	strlt.w	r9, [sp, #20]
10018982:	ea33 0309 	bics.w	r3, r3, r9
10018986:	f000 80aa 	beq.w	10018ade <_dtoa_r+0x19e>
1001898a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
1001898e:	2200      	movs	r2, #0
10018990:	4618      	mov	r0, r3
10018992:	4621      	mov	r1, r4
10018994:	2300      	movs	r3, #0
10018996:	e9cd 0108 	strd	r0, r1, [sp, #32]
1001899a:	f008 f965 	bl	10020c68 <__aeabi_dcmpeq>
1001899e:	4680      	mov	r8, r0
100189a0:	b168      	cbz	r0, 100189be <_dtoa_r+0x7e>
100189a2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
100189a4:	2301      	movs	r3, #1
100189a6:	6013      	str	r3, [r2, #0]
100189a8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
100189aa:	b113      	cbz	r3, 100189b2 <_dtoa_r+0x72>
100189ac:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
100189ae:	4b69      	ldr	r3, [pc, #420]	@ (10018b54 <_dtoa_r+0x214>)
100189b0:	6013      	str	r3, [r2, #0]
100189b2:	4b69      	ldr	r3, [pc, #420]	@ (10018b58 <_dtoa_r+0x218>)
100189b4:	930a      	str	r3, [sp, #40]	@ 0x28
100189b6:	980a      	ldr	r0, [sp, #40]	@ 0x28
100189b8:	b01f      	add	sp, #124	@ 0x7c
100189ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100189be:	ab1c      	add	r3, sp, #112	@ 0x70
100189c0:	9301      	str	r3, [sp, #4]
100189c2:	ab1d      	add	r3, sp, #116	@ 0x74
100189c4:	9300      	str	r3, [sp, #0]
100189c6:	9803      	ldr	r0, [sp, #12]
100189c8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
100189cc:	f004 ff3c 	bl	1001d848 <__d2b>
100189d0:	ea5f 5519 	movs.w	r5, r9, lsr #20
100189d4:	4682      	mov	sl, r0
100189d6:	f040 8098 	bne.w	10018b0a <_dtoa_r+0x1ca>
100189da:	e9dd 851c 	ldrd	r8, r5, [sp, #112]	@ 0x70
100189de:	4445      	add	r5, r8
100189e0:	f205 4332 	addw	r3, r5, #1074	@ 0x432
100189e4:	2b20      	cmp	r3, #32
100189e6:	f340 8383 	ble.w	100190f0 <_dtoa_r+0x7b0>
100189ea:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
100189ee:	fa09 f903 	lsl.w	r9, r9, r3
100189f2:	f205 4312 	addw	r3, r5, #1042	@ 0x412
100189f6:	fa26 f303 	lsr.w	r3, r6, r3
100189fa:	ea49 0003 	orr.w	r0, r9, r3
100189fe:	f007 fe51 	bl	100206a4 <__aeabi_ui2d>
10018a02:	2301      	movs	r3, #1
10018a04:	3d01      	subs	r5, #1
10018a06:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
10018a0a:	9311      	str	r3, [sp, #68]	@ 0x44
10018a0c:	4b53      	ldr	r3, [pc, #332]	@ (10018b5c <_dtoa_r+0x21c>)
10018a0e:	2200      	movs	r2, #0
10018a10:	f007 fd0a 	bl	10020428 <__aeabi_dsub>
10018a14:	a348      	add	r3, pc, #288	@ (adr r3, 10018b38 <_dtoa_r+0x1f8>)
10018a16:	e9d3 2300 	ldrd	r2, r3, [r3]
10018a1a:	f007 febd 	bl	10020798 <__aeabi_dmul>
10018a1e:	a348      	add	r3, pc, #288	@ (adr r3, 10018b40 <_dtoa_r+0x200>)
10018a20:	e9d3 2300 	ldrd	r2, r3, [r3]
10018a24:	f007 fd02 	bl	1002042c <__adddf3>
10018a28:	4606      	mov	r6, r0
10018a2a:	4628      	mov	r0, r5
10018a2c:	460f      	mov	r7, r1
10018a2e:	f007 fe49 	bl	100206c4 <__aeabi_i2d>
10018a32:	a345      	add	r3, pc, #276	@ (adr r3, 10018b48 <_dtoa_r+0x208>)
10018a34:	e9d3 2300 	ldrd	r2, r3, [r3]
10018a38:	f007 feae 	bl	10020798 <__aeabi_dmul>
10018a3c:	4602      	mov	r2, r0
10018a3e:	460b      	mov	r3, r1
10018a40:	4630      	mov	r0, r6
10018a42:	4639      	mov	r1, r7
10018a44:	f007 fcf2 	bl	1002042c <__adddf3>
10018a48:	4606      	mov	r6, r0
10018a4a:	460f      	mov	r7, r1
10018a4c:	f008 f954 	bl	10020cf8 <__aeabi_d2iz>
10018a50:	2200      	movs	r2, #0
10018a52:	4683      	mov	fp, r0
10018a54:	2300      	movs	r3, #0
10018a56:	4630      	mov	r0, r6
10018a58:	4639      	mov	r1, r7
10018a5a:	f008 f90f 	bl	10020c7c <__aeabi_dcmplt>
10018a5e:	2800      	cmp	r0, #0
10018a60:	f040 831a 	bne.w	10019098 <_dtoa_r+0x758>
10018a64:	eba8 0805 	sub.w	r8, r8, r5
10018a68:	f1bb 0f16 	cmp.w	fp, #22
10018a6c:	f108 34ff 	add.w	r4, r8, #4294967295	@ 0xffffffff
10018a70:	f200 818b 	bhi.w	10018d8a <_dtoa_r+0x44a>
10018a74:	4d3a      	ldr	r5, [pc, #232]	@ (10018b60 <_dtoa_r+0x220>)
10018a76:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
10018a7a:	e9d5 2300 	ldrd	r2, r3, [r5]
10018a7e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10018a82:	f008 f8fb 	bl	10020c7c <__aeabi_dcmplt>
10018a86:	2800      	cmp	r0, #0
10018a88:	d070      	beq.n	10018b6c <_dtoa_r+0x22c>
10018a8a:	2300      	movs	r3, #0
10018a8c:	2c00      	cmp	r4, #0
10018a8e:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10018a92:	9310      	str	r3, [sp, #64]	@ 0x40
10018a94:	f2c0 817e 	blt.w	10018d94 <_dtoa_r+0x454>
10018a98:	2300      	movs	r3, #0
10018a9a:	930b      	str	r3, [sp, #44]	@ 0x2c
10018a9c:	f1bb 0f00 	cmp.w	fp, #0
10018aa0:	da6a      	bge.n	10018b78 <_dtoa_r+0x238>
10018aa2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10018aa4:	eba3 030b 	sub.w	r3, r3, fp
10018aa8:	930b      	str	r3, [sp, #44]	@ 0x2c
10018aaa:	f1cb 0300 	rsb	r3, fp, #0
10018aae:	e9cd b30e 	strd	fp, r3, [sp, #56]	@ 0x38
10018ab2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10018ab4:	2b09      	cmp	r3, #9
10018ab6:	f04f 0b00 	mov.w	fp, #0
10018aba:	d865      	bhi.n	10018b88 <_dtoa_r+0x248>
10018abc:	2b05      	cmp	r3, #5
10018abe:	f340 831c 	ble.w	100190fa <_dtoa_r+0x7ba>
10018ac2:	3b04      	subs	r3, #4
10018ac4:	9328      	str	r3, [sp, #160]	@ 0xa0
10018ac6:	2500      	movs	r5, #0
10018ac8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10018aca:	3b02      	subs	r3, #2
10018acc:	2b03      	cmp	r3, #3
10018ace:	f200 8623 	bhi.w	10019718 <_dtoa_r+0xdd8>
10018ad2:	e8df f013 	tbh	[pc, r3, lsl #1]
10018ad6:	0460      	.short	0x0460
10018ad8:	0454045d 	.word	0x0454045d
10018adc:	0438      	.short	0x0438
10018ade:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10018ae0:	f3c9 0913 	ubfx	r9, r9, #0, #20
10018ae4:	f242 730f 	movw	r3, #9999	@ 0x270f
10018ae8:	ea59 0906 	orrs.w	r9, r9, r6
10018aec:	6013      	str	r3, [r2, #0]
10018aee:	d11c      	bne.n	10018b2a <_dtoa_r+0x1ea>
10018af0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10018af2:	2b00      	cmp	r3, #0
10018af4:	f000 862b 	beq.w	1001974e <_dtoa_r+0xe0e>
10018af8:	4b1a      	ldr	r3, [pc, #104]	@ (10018b64 <_dtoa_r+0x224>)
10018afa:	930a      	str	r3, [sp, #40]	@ 0x28
10018afc:	3308      	adds	r3, #8
10018afe:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
10018b00:	980a      	ldr	r0, [sp, #40]	@ 0x28
10018b02:	6013      	str	r3, [r2, #0]
10018b04:	b01f      	add	sp, #124	@ 0x7c
10018b06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018b0a:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
10018b0e:	f3c2 0313 	ubfx	r3, r2, #0, #20
10018b12:	4608      	mov	r0, r1
10018b14:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
10018b18:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
10018b1c:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
10018b20:	f8dd 8070 	ldr.w	r8, [sp, #112]	@ 0x70
10018b24:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
10018b28:	e770      	b.n	10018a0c <_dtoa_r+0xcc>
10018b2a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10018b2c:	2b00      	cmp	r3, #0
10018b2e:	f040 83e7 	bne.w	10019300 <_dtoa_r+0x9c0>
10018b32:	4b0d      	ldr	r3, [pc, #52]	@ (10018b68 <_dtoa_r+0x228>)
10018b34:	930a      	str	r3, [sp, #40]	@ 0x28
10018b36:	e73e      	b.n	100189b6 <_dtoa_r+0x76>
10018b38:	636f4361 	.word	0x636f4361
10018b3c:	3fd287a7 	.word	0x3fd287a7
10018b40:	8b60c8b3 	.word	0x8b60c8b3
10018b44:	3fc68a28 	.word	0x3fc68a28
10018b48:	509f79fb 	.word	0x509f79fb
10018b4c:	3fd34413 	.word	0x3fd34413
10018b50:	7ff00000 	.word	0x7ff00000
10018b54:	10023891 	.word	0x10023891
10018b58:	10023890 	.word	0x10023890
10018b5c:	3ff80000 	.word	0x3ff80000
10018b60:	10023b88 	.word	0x10023b88
10018b64:	10023a1c 	.word	0x10023a1c
10018b68:	10023a28 	.word	0x10023a28
10018b6c:	f1b8 0f00 	cmp.w	r8, #0
10018b70:	f340 8460 	ble.w	10019434 <_dtoa_r+0xaf4>
10018b74:	9010      	str	r0, [sp, #64]	@ 0x40
10018b76:	900b      	str	r0, [sp, #44]	@ 0x2c
10018b78:	2300      	movs	r3, #0
10018b7a:	930f      	str	r3, [sp, #60]	@ 0x3c
10018b7c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10018b7e:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10018b82:	2b09      	cmp	r3, #9
10018b84:	445c      	add	r4, fp
10018b86:	d999      	bls.n	10018abc <_dtoa_r+0x17c>
10018b88:	2300      	movs	r3, #0
10018b8a:	e9cd 3328 	strd	r3, r3, [sp, #160]	@ 0xa0
10018b8e:	2501      	movs	r5, #1
10018b90:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10018b94:	950c      	str	r5, [sp, #48]	@ 0x30
10018b96:	9306      	str	r3, [sp, #24]
10018b98:	9b03      	ldr	r3, [sp, #12]
10018b9a:	2100      	movs	r1, #0
10018b9c:	63d9      	str	r1, [r3, #60]	@ 0x3c
10018b9e:	9b06      	ldr	r3, [sp, #24]
10018ba0:	9318      	str	r3, [sp, #96]	@ 0x60
10018ba2:	9803      	ldr	r0, [sp, #12]
10018ba4:	f004 fa18 	bl	1001cfd8 <_Balloc>
10018ba8:	900a      	str	r0, [sp, #40]	@ 0x28
10018baa:	2800      	cmp	r0, #0
10018bac:	f000 85bd 	beq.w	1001972a <_dtoa_r+0xdea>
10018bb0:	9b03      	ldr	r3, [sp, #12]
10018bb2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10018bb4:	639a      	str	r2, [r3, #56]	@ 0x38
10018bb6:	9b06      	ldr	r3, [sp, #24]
10018bb8:	2b0e      	cmp	r3, #14
10018bba:	f200 8115 	bhi.w	10018de8 <_dtoa_r+0x4a8>
10018bbe:	2d00      	cmp	r5, #0
10018bc0:	f000 8112 	beq.w	10018de8 <_dtoa_r+0x4a8>
10018bc4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10018bc6:	2a00      	cmp	r2, #0
10018bc8:	f340 843b 	ble.w	10019442 <_dtoa_r+0xb02>
10018bcc:	4db2      	ldr	r5, [pc, #712]	@ (10018e98 <_dtoa_r+0x558>)
10018bce:	f002 030f 	and.w	r3, r2, #15
10018bd2:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10018bd6:	e9d3 8900 	ldrd	r8, r9, [r3]
10018bda:	4613      	mov	r3, r2
10018bdc:	1115      	asrs	r5, r2, #4
10018bde:	05da      	lsls	r2, r3, #23
10018be0:	f140 83fa 	bpl.w	100193d8 <_dtoa_r+0xa98>
10018be4:	4bad      	ldr	r3, [pc, #692]	@ (10018e9c <_dtoa_r+0x55c>)
10018be6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10018bea:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
10018bee:	f007 fefd 	bl	100209ec <__aeabi_ddiv>
10018bf2:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
10018bf6:	f005 050f 	and.w	r5, r5, #15
10018bfa:	2703      	movs	r7, #3
10018bfc:	b17d      	cbz	r5, 10018c1e <_dtoa_r+0x2de>
10018bfe:	4ea7      	ldr	r6, [pc, #668]	@ (10018e9c <_dtoa_r+0x55c>)
10018c00:	07eb      	lsls	r3, r5, #31
10018c02:	d508      	bpl.n	10018c16 <_dtoa_r+0x2d6>
10018c04:	4640      	mov	r0, r8
10018c06:	4649      	mov	r1, r9
10018c08:	e9d6 2300 	ldrd	r2, r3, [r6]
10018c0c:	f007 fdc4 	bl	10020798 <__aeabi_dmul>
10018c10:	3701      	adds	r7, #1
10018c12:	4680      	mov	r8, r0
10018c14:	4689      	mov	r9, r1
10018c16:	106d      	asrs	r5, r5, #1
10018c18:	f106 0608 	add.w	r6, r6, #8
10018c1c:	d1f0      	bne.n	10018c00 <_dtoa_r+0x2c0>
10018c1e:	4642      	mov	r2, r8
10018c20:	464b      	mov	r3, r9
10018c22:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
10018c26:	f007 fee1 	bl	100209ec <__aeabi_ddiv>
10018c2a:	4680      	mov	r8, r0
10018c2c:	4689      	mov	r9, r1
10018c2e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10018c30:	b143      	cbz	r3, 10018c44 <_dtoa_r+0x304>
10018c32:	4b9b      	ldr	r3, [pc, #620]	@ (10018ea0 <_dtoa_r+0x560>)
10018c34:	2200      	movs	r2, #0
10018c36:	4640      	mov	r0, r8
10018c38:	4649      	mov	r1, r9
10018c3a:	f008 f81f 	bl	10020c7c <__aeabi_dcmplt>
10018c3e:	2800      	cmp	r0, #0
10018c40:	f040 84f1 	bne.w	10019626 <_dtoa_r+0xce6>
10018c44:	4638      	mov	r0, r7
10018c46:	f007 fd3d 	bl	100206c4 <__aeabi_i2d>
10018c4a:	4642      	mov	r2, r8
10018c4c:	464b      	mov	r3, r9
10018c4e:	f007 fda3 	bl	10020798 <__aeabi_dmul>
10018c52:	4b94      	ldr	r3, [pc, #592]	@ (10018ea4 <_dtoa_r+0x564>)
10018c54:	2200      	movs	r2, #0
10018c56:	f007 fbe9 	bl	1002042c <__adddf3>
10018c5a:	9b06      	ldr	r3, [sp, #24]
10018c5c:	4606      	mov	r6, r0
10018c5e:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10018c62:	2b00      	cmp	r3, #0
10018c64:	f000 80a9 	beq.w	10018dba <_dtoa_r+0x47a>
10018c68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018c6a:	9319      	str	r3, [sp, #100]	@ 0x64
10018c6c:	9b06      	ldr	r3, [sp, #24]
10018c6e:	9312      	str	r3, [sp, #72]	@ 0x48
10018c70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10018c72:	4d89      	ldr	r5, [pc, #548]	@ (10018e98 <_dtoa_r+0x558>)
10018c74:	4649      	mov	r1, r9
10018c76:	4640      	mov	r0, r8
10018c78:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
10018c7c:	1c5e      	adds	r6, r3, #1
10018c7e:	f008 f83b 	bl	10020cf8 <__aeabi_d2iz>
10018c82:	9912      	ldr	r1, [sp, #72]	@ 0x48
10018c84:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
10018c88:	e953 1202 	ldrd	r1, r2, [r3, #-8]
10018c8c:	4607      	mov	r7, r0
10018c8e:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
10018c92:	f007 fd17 	bl	100206c4 <__aeabi_i2d>
10018c96:	4602      	mov	r2, r0
10018c98:	460b      	mov	r3, r1
10018c9a:	4640      	mov	r0, r8
10018c9c:	4649      	mov	r1, r9
10018c9e:	f007 fbc3 	bl	10020428 <__aeabi_dsub>
10018ca2:	4689      	mov	r9, r1
10018ca4:	990c      	ldr	r1, [sp, #48]	@ 0x30
10018ca6:	3730      	adds	r7, #48	@ 0x30
10018ca8:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	@ 0x58
10018cac:	4680      	mov	r8, r0
10018cae:	b2ff      	uxtb	r7, r7
10018cb0:	2900      	cmp	r1, #0
10018cb2:	f000 8453 	beq.w	1001955c <_dtoa_r+0xc1c>
10018cb6:	497c      	ldr	r1, [pc, #496]	@ (10018ea8 <_dtoa_r+0x568>)
10018cb8:	2000      	movs	r0, #0
10018cba:	f007 fe97 	bl	100209ec <__aeabi_ddiv>
10018cbe:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
10018cc2:	f007 fbb1 	bl	10020428 <__aeabi_dsub>
10018cc6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
10018cc8:	4602      	mov	r2, r0
10018cca:	460b      	mov	r3, r1
10018ccc:	e9cd 2314 	strd	r2, r3, [sp, #80]	@ 0x50
10018cd0:	702f      	strb	r7, [r5, #0]
10018cd2:	4642      	mov	r2, r8
10018cd4:	464b      	mov	r3, r9
10018cd6:	f007 ffef 	bl	10020cb8 <__aeabi_dcmpgt>
10018cda:	2800      	cmp	r0, #0
10018cdc:	f040 8497 	bne.w	1001960e <_dtoa_r+0xcce>
10018ce0:	e9cd b41a 	strd	fp, r4, [sp, #104]	@ 0x68
10018ce4:	f8cd a058 	str.w	sl, [sp, #88]	@ 0x58
10018ce8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
10018cea:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	@ 0x50
10018cee:	2700      	movs	r7, #0
10018cf0:	e02a      	b.n	10018d48 <_dtoa_r+0x408>
10018cf2:	3701      	adds	r7, #1
10018cf4:	42af      	cmp	r7, r5
10018cf6:	f280 84de 	bge.w	100196b6 <_dtoa_r+0xd76>
10018cfa:	4b6c      	ldr	r3, [pc, #432]	@ (10018eac <_dtoa_r+0x56c>)
10018cfc:	4650      	mov	r0, sl
10018cfe:	4659      	mov	r1, fp
10018d00:	2200      	movs	r2, #0
10018d02:	f007 fd49 	bl	10020798 <__aeabi_dmul>
10018d06:	4b69      	ldr	r3, [pc, #420]	@ (10018eac <_dtoa_r+0x56c>)
10018d08:	2200      	movs	r2, #0
10018d0a:	4682      	mov	sl, r0
10018d0c:	468b      	mov	fp, r1
10018d0e:	4640      	mov	r0, r8
10018d10:	4649      	mov	r1, r9
10018d12:	f007 fd41 	bl	10020798 <__aeabi_dmul>
10018d16:	4689      	mov	r9, r1
10018d18:	4680      	mov	r8, r0
10018d1a:	f007 ffed 	bl	10020cf8 <__aeabi_d2iz>
10018d1e:	4604      	mov	r4, r0
10018d20:	f007 fcd0 	bl	100206c4 <__aeabi_i2d>
10018d24:	4602      	mov	r2, r0
10018d26:	460b      	mov	r3, r1
10018d28:	4640      	mov	r0, r8
10018d2a:	4649      	mov	r1, r9
10018d2c:	f007 fb7c 	bl	10020428 <__aeabi_dsub>
10018d30:	3430      	adds	r4, #48	@ 0x30
10018d32:	f806 4b01 	strb.w	r4, [r6], #1
10018d36:	4652      	mov	r2, sl
10018d38:	465b      	mov	r3, fp
10018d3a:	4680      	mov	r8, r0
10018d3c:	4689      	mov	r9, r1
10018d3e:	f007 ff9d 	bl	10020c7c <__aeabi_dcmplt>
10018d42:	2800      	cmp	r0, #0
10018d44:	f040 84b4 	bne.w	100196b0 <_dtoa_r+0xd70>
10018d48:	4642      	mov	r2, r8
10018d4a:	464b      	mov	r3, r9
10018d4c:	4954      	ldr	r1, [pc, #336]	@ (10018ea0 <_dtoa_r+0x560>)
10018d4e:	2000      	movs	r0, #0
10018d50:	f007 fb6a 	bl	10020428 <__aeabi_dsub>
10018d54:	4652      	mov	r2, sl
10018d56:	465b      	mov	r3, fp
10018d58:	f007 ff90 	bl	10020c7c <__aeabi_dcmplt>
10018d5c:	2800      	cmp	r0, #0
10018d5e:	d0c8      	beq.n	10018cf2 <_dtoa_r+0x3b2>
10018d60:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10018d62:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
10018d66:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10018d68:	4637      	mov	r7, r6
10018d6a:	f103 0801 	add.w	r8, r3, #1
10018d6e:	e002      	b.n	10018d76 <_dtoa_r+0x436>
10018d70:	4297      	cmp	r7, r2
10018d72:	f000 847c 	beq.w	1001966e <_dtoa_r+0xd2e>
10018d76:	463e      	mov	r6, r7
10018d78:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
10018d7c:	2b39      	cmp	r3, #57	@ 0x39
10018d7e:	d0f7      	beq.n	10018d70 <_dtoa_r+0x430>
10018d80:	3301      	adds	r3, #1
10018d82:	b2db      	uxtb	r3, r3
10018d84:	703b      	strb	r3, [r7, #0]
10018d86:	4645      	mov	r5, r8
10018d88:	e175      	b.n	10019076 <_dtoa_r+0x736>
10018d8a:	2301      	movs	r3, #1
10018d8c:	2c00      	cmp	r4, #0
10018d8e:	9310      	str	r3, [sp, #64]	@ 0x40
10018d90:	f6bf ae82 	bge.w	10018a98 <_dtoa_r+0x158>
10018d94:	f1c8 0301 	rsb	r3, r8, #1
10018d98:	930b      	str	r3, [sp, #44]	@ 0x2c
10018d9a:	2400      	movs	r4, #0
10018d9c:	e67e      	b.n	10018a9c <_dtoa_r+0x15c>
10018d9e:	4638      	mov	r0, r7
10018da0:	f007 fc90 	bl	100206c4 <__aeabi_i2d>
10018da4:	4642      	mov	r2, r8
10018da6:	464b      	mov	r3, r9
10018da8:	f007 fcf6 	bl	10020798 <__aeabi_dmul>
10018dac:	4b3d      	ldr	r3, [pc, #244]	@ (10018ea4 <_dtoa_r+0x564>)
10018dae:	2200      	movs	r2, #0
10018db0:	f007 fb3c 	bl	1002042c <__adddf3>
10018db4:	4606      	mov	r6, r0
10018db6:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10018dba:	4b3d      	ldr	r3, [pc, #244]	@ (10018eb0 <_dtoa_r+0x570>)
10018dbc:	4640      	mov	r0, r8
10018dbe:	4649      	mov	r1, r9
10018dc0:	2200      	movs	r2, #0
10018dc2:	f007 fb31 	bl	10020428 <__aeabi_dsub>
10018dc6:	4632      	mov	r2, r6
10018dc8:	463b      	mov	r3, r7
10018dca:	4680      	mov	r8, r0
10018dcc:	4689      	mov	r9, r1
10018dce:	f007 ff73 	bl	10020cb8 <__aeabi_dcmpgt>
10018dd2:	2800      	cmp	r0, #0
10018dd4:	f040 845a 	bne.w	1001968c <_dtoa_r+0xd4c>
10018dd8:	4640      	mov	r0, r8
10018dda:	4649      	mov	r1, r9
10018ddc:	4632      	mov	r2, r6
10018dde:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
10018de2:	f007 ff4b 	bl	10020c7c <__aeabi_dcmplt>
10018de6:	bb28      	cbnz	r0, 10018e34 <_dtoa_r+0x4f4>
10018de8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10018dea:	2b00      	cmp	r3, #0
10018dec:	f2c0 8092 	blt.w	10018f14 <_dtoa_r+0x5d4>
10018df0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10018df2:	2a0e      	cmp	r2, #14
10018df4:	f300 808e 	bgt.w	10018f14 <_dtoa_r+0x5d4>
10018df8:	4d27      	ldr	r5, [pc, #156]	@ (10018e98 <_dtoa_r+0x558>)
10018dfa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018dfc:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
10018e00:	e9d5 3400 	ldrd	r3, r4, [r5]
10018e04:	e9cd 3404 	strd	r3, r4, [sp, #16]
10018e08:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10018e0a:	2b00      	cmp	r3, #0
10018e0c:	da19      	bge.n	10018e42 <_dtoa_r+0x502>
10018e0e:	9b06      	ldr	r3, [sp, #24]
10018e10:	2b00      	cmp	r3, #0
10018e12:	dc16      	bgt.n	10018e42 <_dtoa_r+0x502>
10018e14:	d10e      	bne.n	10018e34 <_dtoa_r+0x4f4>
10018e16:	4b26      	ldr	r3, [pc, #152]	@ (10018eb0 <_dtoa_r+0x570>)
10018e18:	2200      	movs	r2, #0
10018e1a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10018e1e:	f007 fcbb 	bl	10020798 <__aeabi_dmul>
10018e22:	4602      	mov	r2, r0
10018e24:	460b      	mov	r3, r1
10018e26:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10018e2a:	f007 ff31 	bl	10020c90 <__aeabi_dcmple>
10018e2e:	2800      	cmp	r0, #0
10018e30:	f000 842c 	beq.w	1001968c <_dtoa_r+0xd4c>
10018e34:	f04f 0900 	mov.w	r9, #0
10018e38:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10018e3a:	464f      	mov	r7, r9
10018e3c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10018e3e:	43dd      	mvns	r5, r3
10018e40:	e225      	b.n	1001928e <_dtoa_r+0x94e>
10018e42:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
10018e46:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
10018e4a:	4622      	mov	r2, r4
10018e4c:	462b      	mov	r3, r5
10018e4e:	4640      	mov	r0, r8
10018e50:	4649      	mov	r1, r9
10018e52:	f007 fdcb 	bl	100209ec <__aeabi_ddiv>
10018e56:	f007 ff4f 	bl	10020cf8 <__aeabi_d2iz>
10018e5a:	4606      	mov	r6, r0
10018e5c:	f007 fc32 	bl	100206c4 <__aeabi_i2d>
10018e60:	4622      	mov	r2, r4
10018e62:	462b      	mov	r3, r5
10018e64:	f007 fc98 	bl	10020798 <__aeabi_dmul>
10018e68:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
10018e6a:	460b      	mov	r3, r1
10018e6c:	4602      	mov	r2, r0
10018e6e:	4649      	mov	r1, r9
10018e70:	4640      	mov	r0, r8
10018e72:	f007 fad9 	bl	10020428 <__aeabi_dsub>
10018e76:	f106 0330 	add.w	r3, r6, #48	@ 0x30
10018e7a:	f807 3b01 	strb.w	r3, [r7], #1
10018e7e:	9b06      	ldr	r3, [sp, #24]
10018e80:	2b01      	cmp	r3, #1
10018e82:	f000 8312 	beq.w	100194aa <_dtoa_r+0xb6a>
10018e86:	2501      	movs	r5, #1
10018e88:	f8cd a018 	str.w	sl, [sp, #24]
10018e8c:	4699      	mov	r9, r3
10018e8e:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
10018e92:	46a8      	mov	r8, r5
10018e94:	e02c      	b.n	10018ef0 <_dtoa_r+0x5b0>
10018e96:	bf00      	nop
10018e98:	10023b88 	.word	0x10023b88
10018e9c:	10023b60 	.word	0x10023b60
10018ea0:	3ff00000 	.word	0x3ff00000
10018ea4:	401c0000 	.word	0x401c0000
10018ea8:	3fe00000 	.word	0x3fe00000
10018eac:	40240000 	.word	0x40240000
10018eb0:	40140000 	.word	0x40140000
10018eb4:	4652      	mov	r2, sl
10018eb6:	465b      	mov	r3, fp
10018eb8:	4620      	mov	r0, r4
10018eba:	4629      	mov	r1, r5
10018ebc:	f007 fd96 	bl	100209ec <__aeabi_ddiv>
10018ec0:	f007 ff1a 	bl	10020cf8 <__aeabi_d2iz>
10018ec4:	4606      	mov	r6, r0
10018ec6:	f007 fbfd 	bl	100206c4 <__aeabi_i2d>
10018eca:	4652      	mov	r2, sl
10018ecc:	465b      	mov	r3, fp
10018ece:	f007 fc63 	bl	10020798 <__aeabi_dmul>
10018ed2:	f108 0801 	add.w	r8, r8, #1
10018ed6:	460b      	mov	r3, r1
10018ed8:	4602      	mov	r2, r0
10018eda:	4629      	mov	r1, r5
10018edc:	4620      	mov	r0, r4
10018ede:	f007 faa3 	bl	10020428 <__aeabi_dsub>
10018ee2:	f106 0330 	add.w	r3, r6, #48	@ 0x30
10018ee6:	45c8      	cmp	r8, r9
10018ee8:	f807 3b01 	strb.w	r3, [r7], #1
10018eec:	f000 82db 	beq.w	100194a6 <_dtoa_r+0xb66>
10018ef0:	4bb9      	ldr	r3, [pc, #740]	@ (100191d8 <_dtoa_r+0x898>)
10018ef2:	2200      	movs	r2, #0
10018ef4:	f007 fc50 	bl	10020798 <__aeabi_dmul>
10018ef8:	2200      	movs	r2, #0
10018efa:	2300      	movs	r3, #0
10018efc:	4604      	mov	r4, r0
10018efe:	460d      	mov	r5, r1
10018f00:	f007 feb2 	bl	10020c68 <__aeabi_dcmpeq>
10018f04:	2800      	cmp	r0, #0
10018f06:	d0d5      	beq.n	10018eb4 <_dtoa_r+0x574>
10018f08:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10018f0a:	f8dd a018 	ldr.w	sl, [sp, #24]
10018f0e:	3501      	adds	r5, #1
10018f10:	463e      	mov	r6, r7
10018f12:	e0b0      	b.n	10019076 <_dtoa_r+0x736>
10018f14:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10018f16:	2a00      	cmp	r2, #0
10018f18:	f040 80d2 	bne.w	100190c0 <_dtoa_r+0x780>
10018f1c:	2300      	movs	r3, #0
10018f1e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10018f20:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
10018f22:	930c      	str	r3, [sp, #48]	@ 0x30
10018f24:	461f      	mov	r7, r3
10018f26:	b156      	cbz	r6, 10018f3e <_dtoa_r+0x5fe>
10018f28:	2c00      	cmp	r4, #0
10018f2a:	dd08      	ble.n	10018f3e <_dtoa_r+0x5fe>
10018f2c:	42a6      	cmp	r6, r4
10018f2e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10018f30:	4633      	mov	r3, r6
10018f32:	bfa8      	it	ge
10018f34:	4623      	movge	r3, r4
10018f36:	1ad2      	subs	r2, r2, r3
10018f38:	920b      	str	r2, [sp, #44]	@ 0x2c
10018f3a:	1af6      	subs	r6, r6, r3
10018f3c:	1ae4      	subs	r4, r4, r3
10018f3e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10018f40:	b153      	cbz	r3, 10018f58 <_dtoa_r+0x618>
10018f42:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10018f44:	b113      	cbz	r3, 10018f4c <_dtoa_r+0x60c>
10018f46:	2d00      	cmp	r5, #0
10018f48:	f040 82e8 	bne.w	1001951c <_dtoa_r+0xbdc>
10018f4c:	4651      	mov	r1, sl
10018f4e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10018f50:	9803      	ldr	r0, [sp, #12]
10018f52:	f004 fa4f 	bl	1001d3f4 <__pow5mult>
10018f56:	4682      	mov	sl, r0
10018f58:	9803      	ldr	r0, [sp, #12]
10018f5a:	2101      	movs	r1, #1
10018f5c:	f004 f966 	bl	1001d22c <__i2b>
10018f60:	4681      	mov	r9, r0
10018f62:	f1bb 0f00 	cmp.w	fp, #0
10018f66:	f040 81b6 	bne.w	100192d6 <_dtoa_r+0x996>
10018f6a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10018f6c:	2b01      	cmp	r3, #1
10018f6e:	f340 81cc 	ble.w	1001930a <_dtoa_r+0x9ca>
10018f72:	2001      	movs	r0, #1
10018f74:	4420      	add	r0, r4
10018f76:	f010 001f 	ands.w	r0, r0, #31
10018f7a:	f000 809a 	beq.w	100190b2 <_dtoa_r+0x772>
10018f7e:	f1c0 0320 	rsb	r3, r0, #32
10018f82:	2b04      	cmp	r3, #4
10018f84:	f340 81da 	ble.w	1001933c <_dtoa_r+0x9fc>
10018f88:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10018f8a:	f1c0 001c 	rsb	r0, r0, #28
10018f8e:	4403      	add	r3, r0
10018f90:	930b      	str	r3, [sp, #44]	@ 0x2c
10018f92:	4406      	add	r6, r0
10018f94:	4404      	add	r4, r0
10018f96:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10018f98:	2b00      	cmp	r3, #0
10018f9a:	dd05      	ble.n	10018fa8 <_dtoa_r+0x668>
10018f9c:	4651      	mov	r1, sl
10018f9e:	9803      	ldr	r0, [sp, #12]
10018fa0:	461a      	mov	r2, r3
10018fa2:	f004 fa81 	bl	1001d4a8 <__lshift>
10018fa6:	4682      	mov	sl, r0
10018fa8:	2c00      	cmp	r4, #0
10018faa:	dd05      	ble.n	10018fb8 <_dtoa_r+0x678>
10018fac:	4649      	mov	r1, r9
10018fae:	9803      	ldr	r0, [sp, #12]
10018fb0:	4622      	mov	r2, r4
10018fb2:	f004 fa79 	bl	1001d4a8 <__lshift>
10018fb6:	4681      	mov	r9, r0
10018fb8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10018fba:	2b00      	cmp	r3, #0
10018fbc:	f040 8170 	bne.w	100192a0 <_dtoa_r+0x960>
10018fc0:	9b06      	ldr	r3, [sp, #24]
10018fc2:	2b00      	cmp	r3, #0
10018fc4:	f340 8148 	ble.w	10019258 <_dtoa_r+0x918>
10018fc8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10018fca:	2b00      	cmp	r3, #0
10018fcc:	f040 80a4 	bne.w	10019118 <_dtoa_r+0x7d8>
10018fd0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10018fd2:	3501      	adds	r5, #1
10018fd4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
10018fd8:	9c06      	ldr	r4, [sp, #24]
10018fda:	f8dd b00c 	ldr.w	fp, [sp, #12]
10018fde:	2601      	movs	r6, #1
10018fe0:	e007      	b.n	10018ff2 <_dtoa_r+0x6b2>
10018fe2:	4651      	mov	r1, sl
10018fe4:	2300      	movs	r3, #0
10018fe6:	220a      	movs	r2, #10
10018fe8:	4658      	mov	r0, fp
10018fea:	f004 f825 	bl	1001d038 <__multadd>
10018fee:	3601      	adds	r6, #1
10018ff0:	4682      	mov	sl, r0
10018ff2:	4649      	mov	r1, r9
10018ff4:	4650      	mov	r0, sl
10018ff6:	f7ff fc0b 	bl	10018810 <quorem>
10018ffa:	42a6      	cmp	r6, r4
10018ffc:	f100 0330 	add.w	r3, r0, #48	@ 0x30
10019000:	f808 3b01 	strb.w	r3, [r8], #1
10019004:	dbed      	blt.n	10018fe2 <_dtoa_r+0x6a2>
10019006:	9a06      	ldr	r2, [sp, #24]
10019008:	2a00      	cmp	r2, #0
1001900a:	bfc8      	it	gt
1001900c:	4616      	movgt	r6, r2
1001900e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10019010:	bfd8      	it	le
10019012:	2601      	movle	r6, #1
10019014:	eb02 0b06 	add.w	fp, r2, r6
10019018:	2400      	movs	r4, #0
1001901a:	4651      	mov	r1, sl
1001901c:	2201      	movs	r2, #1
1001901e:	9803      	ldr	r0, [sp, #12]
10019020:	9304      	str	r3, [sp, #16]
10019022:	f004 fa41 	bl	1001d4a8 <__lshift>
10019026:	4649      	mov	r1, r9
10019028:	4682      	mov	sl, r0
1001902a:	f004 fab5 	bl	1001d598 <__mcmp>
1001902e:	2800      	cmp	r0, #0
10019030:	f340 81e3 	ble.w	100193fa <_dtoa_r+0xaba>
10019034:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10019036:	e002      	b.n	1001903e <_dtoa_r+0x6fe>
10019038:	455a      	cmp	r2, fp
1001903a:	f000 81e9 	beq.w	10019410 <_dtoa_r+0xad0>
1001903e:	465e      	mov	r6, fp
10019040:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10019044:	f816 3c01 	ldrb.w	r3, [r6, #-1]
10019048:	2b39      	cmp	r3, #57	@ 0x39
1001904a:	d0f5      	beq.n	10019038 <_dtoa_r+0x6f8>
1001904c:	3301      	adds	r3, #1
1001904e:	f88b 3000 	strb.w	r3, [fp]
10019052:	f8dd 800c 	ldr.w	r8, [sp, #12]
10019056:	4649      	mov	r1, r9
10019058:	4640      	mov	r0, r8
1001905a:	f003 ffe3 	bl	1001d024 <_Bfree>
1001905e:	b157      	cbz	r7, 10019076 <_dtoa_r+0x736>
10019060:	b12c      	cbz	r4, 1001906e <_dtoa_r+0x72e>
10019062:	42bc      	cmp	r4, r7
10019064:	d003      	beq.n	1001906e <_dtoa_r+0x72e>
10019066:	4621      	mov	r1, r4
10019068:	4640      	mov	r0, r8
1001906a:	f003 ffdb 	bl	1001d024 <_Bfree>
1001906e:	9803      	ldr	r0, [sp, #12]
10019070:	4639      	mov	r1, r7
10019072:	f003 ffd7 	bl	1001d024 <_Bfree>
10019076:	9803      	ldr	r0, [sp, #12]
10019078:	4651      	mov	r1, sl
1001907a:	f003 ffd3 	bl	1001d024 <_Bfree>
1001907e:	2300      	movs	r3, #0
10019080:	7033      	strb	r3, [r6, #0]
10019082:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10019084:	601d      	str	r5, [r3, #0]
10019086:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10019088:	2b00      	cmp	r3, #0
1001908a:	f43f ac94 	beq.w	100189b6 <_dtoa_r+0x76>
1001908e:	980a      	ldr	r0, [sp, #40]	@ 0x28
10019090:	601e      	str	r6, [r3, #0]
10019092:	b01f      	add	sp, #124	@ 0x7c
10019094:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10019098:	4658      	mov	r0, fp
1001909a:	f007 fb13 	bl	100206c4 <__aeabi_i2d>
1001909e:	4632      	mov	r2, r6
100190a0:	463b      	mov	r3, r7
100190a2:	f007 fde1 	bl	10020c68 <__aeabi_dcmpeq>
100190a6:	2800      	cmp	r0, #0
100190a8:	f47f acdc 	bne.w	10018a64 <_dtoa_r+0x124>
100190ac:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
100190b0:	e4d8      	b.n	10018a64 <_dtoa_r+0x124>
100190b2:	231c      	movs	r3, #28
100190b4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100190b6:	441a      	add	r2, r3
100190b8:	920b      	str	r2, [sp, #44]	@ 0x2c
100190ba:	441e      	add	r6, r3
100190bc:	441c      	add	r4, r3
100190be:	e76a      	b.n	10018f96 <_dtoa_r+0x656>
100190c0:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
100190c2:	2a01      	cmp	r2, #1
100190c4:	f340 81a9 	ble.w	1001941a <_dtoa_r+0xada>
100190c8:	9a06      	ldr	r2, [sp, #24]
100190ca:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100190cc:	1e55      	subs	r5, r2, #1
100190ce:	42ab      	cmp	r3, r5
100190d0:	f2c0 816b 	blt.w	100193aa <_dtoa_r+0xa6a>
100190d4:	2a00      	cmp	r2, #0
100190d6:	eba3 0505 	sub.w	r5, r3, r5
100190da:	f280 82dd 	bge.w	10019698 <_dtoa_r+0xd58>
100190de:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100190e0:	9a06      	ldr	r2, [sp, #24]
100190e2:	1a9e      	subs	r6, r3, r2
100190e4:	9803      	ldr	r0, [sp, #12]
100190e6:	2101      	movs	r1, #1
100190e8:	f004 f8a0 	bl	1001d22c <__i2b>
100190ec:	4607      	mov	r7, r0
100190ee:	e71a      	b.n	10018f26 <_dtoa_r+0x5e6>
100190f0:	f1c3 0320 	rsb	r3, r3, #32
100190f4:	fa06 f003 	lsl.w	r0, r6, r3
100190f8:	e481      	b.n	100189fe <_dtoa_r+0xbe>
100190fa:	2501      	movs	r5, #1
100190fc:	e4e4      	b.n	10018ac8 <_dtoa_r+0x188>
100190fe:	4639      	mov	r1, r7
10019100:	2300      	movs	r3, #0
10019102:	9803      	ldr	r0, [sp, #12]
10019104:	220a      	movs	r2, #10
10019106:	f003 ff97 	bl	1001d038 <__multadd>
1001910a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001910c:	2b00      	cmp	r3, #0
1001910e:	4607      	mov	r7, r0
10019110:	f340 82ef 	ble.w	100196f2 <_dtoa_r+0xdb2>
10019114:	950e      	str	r5, [sp, #56]	@ 0x38
10019116:	9306      	str	r3, [sp, #24]
10019118:	2e00      	cmp	r6, #0
1001911a:	f300 813f 	bgt.w	1001939c <_dtoa_r+0xa5c>
1001911e:	f1bb 0f00 	cmp.w	fp, #0
10019122:	f040 81df 	bne.w	100194e4 <_dtoa_r+0xba4>
10019126:	46b8      	mov	r8, r7
10019128:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001912a:	9c06      	ldr	r4, [sp, #24]
1001912c:	1e73      	subs	r3, r6, #1
1001912e:	441c      	add	r4, r3
10019130:	9b04      	ldr	r3, [sp, #16]
10019132:	940c      	str	r4, [sp, #48]	@ 0x30
10019134:	f003 0301 	and.w	r3, r3, #1
10019138:	9c03      	ldr	r4, [sp, #12]
1001913a:	930f      	str	r3, [sp, #60]	@ 0x3c
1001913c:	4649      	mov	r1, r9
1001913e:	4650      	mov	r0, sl
10019140:	f7ff fb66 	bl	10018810 <quorem>
10019144:	4639      	mov	r1, r7
10019146:	4683      	mov	fp, r0
10019148:	4650      	mov	r0, sl
1001914a:	f004 fa25 	bl	1001d598 <__mcmp>
1001914e:	4642      	mov	r2, r8
10019150:	4649      	mov	r1, r9
10019152:	4605      	mov	r5, r0
10019154:	4620      	mov	r0, r4
10019156:	f004 fa3f 	bl	1001d5d8 <__mdiff>
1001915a:	68c2      	ldr	r2, [r0, #12]
1001915c:	4601      	mov	r1, r0
1001915e:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
10019162:	2a00      	cmp	r2, #0
10019164:	d13a      	bne.n	100191dc <_dtoa_r+0x89c>
10019166:	9008      	str	r0, [sp, #32]
10019168:	4650      	mov	r0, sl
1001916a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001916c:	f004 fa14 	bl	1001d598 <__mcmp>
10019170:	9908      	ldr	r1, [sp, #32]
10019172:	9006      	str	r0, [sp, #24]
10019174:	4620      	mov	r0, r4
10019176:	f003 ff55 	bl	1001d024 <_Bfree>
1001917a:	9a06      	ldr	r2, [sp, #24]
1001917c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001917e:	2a00      	cmp	r2, #0
10019180:	d15a      	bne.n	10019238 <_dtoa_r+0x8f8>
10019182:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10019184:	b91a      	cbnz	r2, 1001918e <_dtoa_r+0x84e>
10019186:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10019188:	2a00      	cmp	r2, #0
1001918a:	f000 829a 	beq.w	100196c2 <_dtoa_r+0xd82>
1001918e:	2d00      	cmp	r5, #0
10019190:	db45      	blt.n	1001921e <_dtoa_r+0x8de>
10019192:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10019194:	46b3      	mov	fp, r6
10019196:	42b2      	cmp	r2, r6
10019198:	f80b 3b01 	strb.w	r3, [fp], #1
1001919c:	f000 81b9 	beq.w	10019512 <_dtoa_r+0xbd2>
100191a0:	4651      	mov	r1, sl
100191a2:	2300      	movs	r3, #0
100191a4:	220a      	movs	r2, #10
100191a6:	4620      	mov	r0, r4
100191a8:	f003 ff46 	bl	1001d038 <__multadd>
100191ac:	4547      	cmp	r7, r8
100191ae:	4682      	mov	sl, r0
100191b0:	4639      	mov	r1, r7
100191b2:	f04f 0300 	mov.w	r3, #0
100191b6:	f04f 020a 	mov.w	r2, #10
100191ba:	4620      	mov	r0, r4
100191bc:	d036      	beq.n	1001922c <_dtoa_r+0x8ec>
100191be:	f003 ff3b 	bl	1001d038 <__multadd>
100191c2:	4641      	mov	r1, r8
100191c4:	4607      	mov	r7, r0
100191c6:	2300      	movs	r3, #0
100191c8:	220a      	movs	r2, #10
100191ca:	4620      	mov	r0, r4
100191cc:	f003 ff34 	bl	1001d038 <__multadd>
100191d0:	465e      	mov	r6, fp
100191d2:	4680      	mov	r8, r0
100191d4:	e7b2      	b.n	1001913c <_dtoa_r+0x7fc>
100191d6:	bf00      	nop
100191d8:	40240000 	.word	0x40240000
100191dc:	9803      	ldr	r0, [sp, #12]
100191de:	9306      	str	r3, [sp, #24]
100191e0:	f003 ff20 	bl	1001d024 <_Bfree>
100191e4:	2d00      	cmp	r5, #0
100191e6:	9b06      	ldr	r3, [sp, #24]
100191e8:	db06      	blt.n	100191f8 <_dtoa_r+0x8b8>
100191ea:	9a04      	ldr	r2, [sp, #16]
100191ec:	9928      	ldr	r1, [sp, #160]	@ 0xa0
100191ee:	f002 0201 	and.w	r2, r2, #1
100191f2:	430d      	orrs	r5, r1
100191f4:	432a      	orrs	r2, r5
100191f6:	d12a      	bne.n	1001924e <_dtoa_r+0x90e>
100191f8:	4651      	mov	r1, sl
100191fa:	2201      	movs	r2, #1
100191fc:	9803      	ldr	r0, [sp, #12]
100191fe:	9304      	str	r3, [sp, #16]
10019200:	f004 f952 	bl	1001d4a8 <__lshift>
10019204:	4649      	mov	r1, r9
10019206:	4682      	mov	sl, r0
10019208:	f004 f9c6 	bl	1001d598 <__mcmp>
1001920c:	2800      	cmp	r0, #0
1001920e:	9b04      	ldr	r3, [sp, #16]
10019210:	f340 80e8 	ble.w	100193e4 <_dtoa_r+0xaa4>
10019214:	2b39      	cmp	r3, #57	@ 0x39
10019216:	f000 822f 	beq.w	10019678 <_dtoa_r+0xd38>
1001921a:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
1001921e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10019220:	f806 3b01 	strb.w	r3, [r6], #1
10019224:	463c      	mov	r4, r7
10019226:	3501      	adds	r5, #1
10019228:	4647      	mov	r7, r8
1001922a:	e712      	b.n	10019052 <_dtoa_r+0x712>
1001922c:	f003 ff04 	bl	1001d038 <__multadd>
10019230:	465e      	mov	r6, fp
10019232:	4607      	mov	r7, r0
10019234:	4680      	mov	r8, r0
10019236:	e781      	b.n	1001913c <_dtoa_r+0x7fc>
10019238:	2d00      	cmp	r5, #0
1001923a:	f2c0 827d 	blt.w	10019738 <_dtoa_r+0xdf8>
1001923e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
10019240:	430d      	orrs	r5, r1
10019242:	990f      	ldr	r1, [sp, #60]	@ 0x3c
10019244:	430d      	orrs	r5, r1
10019246:	f000 8277 	beq.w	10019738 <_dtoa_r+0xdf8>
1001924a:	2a00      	cmp	r2, #0
1001924c:	dda1      	ble.n	10019192 <_dtoa_r+0x852>
1001924e:	2b39      	cmp	r3, #57	@ 0x39
10019250:	f000 8212 	beq.w	10019678 <_dtoa_r+0xd38>
10019254:	3301      	adds	r3, #1
10019256:	e7e2      	b.n	1001921e <_dtoa_r+0x8de>
10019258:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001925a:	2b02      	cmp	r3, #2
1001925c:	f77f aeb4 	ble.w	10018fc8 <_dtoa_r+0x688>
10019260:	9b06      	ldr	r3, [sp, #24]
10019262:	2b00      	cmp	r3, #0
10019264:	f040 811d 	bne.w	100194a2 <_dtoa_r+0xb62>
10019268:	4649      	mov	r1, r9
1001926a:	2205      	movs	r2, #5
1001926c:	9803      	ldr	r0, [sp, #12]
1001926e:	f003 fee3 	bl	1001d038 <__multadd>
10019272:	4601      	mov	r1, r0
10019274:	4681      	mov	r9, r0
10019276:	4650      	mov	r0, sl
10019278:	f004 f98e 	bl	1001d598 <__mcmp>
1001927c:	2800      	cmp	r0, #0
1001927e:	f340 8110 	ble.w	100194a2 <_dtoa_r+0xb62>
10019282:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10019284:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10019286:	2331      	movs	r3, #49	@ 0x31
10019288:	f806 3b01 	strb.w	r3, [r6], #1
1001928c:	3501      	adds	r5, #1
1001928e:	9803      	ldr	r0, [sp, #12]
10019290:	4649      	mov	r1, r9
10019292:	3501      	adds	r5, #1
10019294:	f003 fec6 	bl	1001d024 <_Bfree>
10019298:	2f00      	cmp	r7, #0
1001929a:	f47f aee8 	bne.w	1001906e <_dtoa_r+0x72e>
1001929e:	e6ea      	b.n	10019076 <_dtoa_r+0x736>
100192a0:	4649      	mov	r1, r9
100192a2:	4650      	mov	r0, sl
100192a4:	f004 f978 	bl	1001d598 <__mcmp>
100192a8:	2800      	cmp	r0, #0
100192aa:	f6bf ae89 	bge.w	10018fc0 <_dtoa_r+0x680>
100192ae:	4651      	mov	r1, sl
100192b0:	2300      	movs	r3, #0
100192b2:	9803      	ldr	r0, [sp, #12]
100192b4:	220a      	movs	r2, #10
100192b6:	f003 febf 	bl	1001d038 <__multadd>
100192ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100192bc:	1e5d      	subs	r5, r3, #1
100192be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100192c0:	4682      	mov	sl, r0
100192c2:	2b00      	cmp	r3, #0
100192c4:	f47f af1b 	bne.w	100190fe <_dtoa_r+0x7be>
100192c8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100192ca:	2b00      	cmp	r3, #0
100192cc:	f340 81ff 	ble.w	100196ce <_dtoa_r+0xd8e>
100192d0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100192d2:	9306      	str	r3, [sp, #24]
100192d4:	e67e      	b.n	10018fd4 <_dtoa_r+0x694>
100192d6:	4601      	mov	r1, r0
100192d8:	465a      	mov	r2, fp
100192da:	9803      	ldr	r0, [sp, #12]
100192dc:	f004 f88a 	bl	1001d3f4 <__pow5mult>
100192e0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
100192e2:	2b01      	cmp	r3, #1
100192e4:	4681      	mov	r9, r0
100192e6:	dd6c      	ble.n	100193c2 <_dtoa_r+0xa82>
100192e8:	f04f 0b00 	mov.w	fp, #0
100192ec:	f8d9 3010 	ldr.w	r3, [r9, #16]
100192f0:	eb09 0383 	add.w	r3, r9, r3, lsl #2
100192f4:	6918      	ldr	r0, [r3, #16]
100192f6:	f003 ff47 	bl	1001d188 <__hi0bits>
100192fa:	f1c0 0020 	rsb	r0, r0, #32
100192fe:	e639      	b.n	10018f74 <_dtoa_r+0x634>
10019300:	4b92      	ldr	r3, [pc, #584]	@ (1001954c <_dtoa_r+0xc0c>)
10019302:	930a      	str	r3, [sp, #40]	@ 0x28
10019304:	3303      	adds	r3, #3
10019306:	f7ff bbfa 	b.w	10018afe <_dtoa_r+0x1be>
1001930a:	9b04      	ldr	r3, [sp, #16]
1001930c:	2b00      	cmp	r3, #0
1001930e:	f47f ae30 	bne.w	10018f72 <_dtoa_r+0x632>
10019312:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
10019316:	f3c2 0313 	ubfx	r3, r2, #0, #20
1001931a:	2b00      	cmp	r3, #0
1001931c:	f47f ae29 	bne.w	10018f72 <_dtoa_r+0x632>
10019320:	4b8b      	ldr	r3, [pc, #556]	@ (10019550 <_dtoa_r+0xc10>)
10019322:	4013      	ands	r3, r2
10019324:	b123      	cbz	r3, 10019330 <_dtoa_r+0x9f0>
10019326:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10019328:	3301      	adds	r3, #1
1001932a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001932c:	3401      	adds	r4, #1
1001932e:	2301      	movs	r3, #1
10019330:	f1bb 0f00 	cmp.w	fp, #0
10019334:	f040 81ae 	bne.w	10019694 <_dtoa_r+0xd54>
10019338:	469b      	mov	fp, r3
1001933a:	e61a      	b.n	10018f72 <_dtoa_r+0x632>
1001933c:	f43f ae2b 	beq.w	10018f96 <_dtoa_r+0x656>
10019340:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
10019344:	e6b6      	b.n	100190b4 <_dtoa_r+0x774>
10019346:	2301      	movs	r3, #1
10019348:	930c      	str	r3, [sp, #48]	@ 0x30
1001934a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001934c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001934e:	4413      	add	r3, r2
10019350:	9318      	str	r3, [sp, #96]	@ 0x60
10019352:	3301      	adds	r3, #1
10019354:	2b01      	cmp	r3, #1
10019356:	461e      	mov	r6, r3
10019358:	9306      	str	r3, [sp, #24]
1001935a:	bfb8      	it	lt
1001935c:	2601      	movlt	r6, #1
1001935e:	2e17      	cmp	r6, #23
10019360:	f340 81d5 	ble.w	1001970e <_dtoa_r+0xdce>
10019364:	2201      	movs	r2, #1
10019366:	2304      	movs	r3, #4
10019368:	005b      	lsls	r3, r3, #1
1001936a:	f103 0014 	add.w	r0, r3, #20
1001936e:	42b0      	cmp	r0, r6
10019370:	4611      	mov	r1, r2
10019372:	f102 0201 	add.w	r2, r2, #1
10019376:	d9f7      	bls.n	10019368 <_dtoa_r+0xa28>
10019378:	9b03      	ldr	r3, [sp, #12]
1001937a:	63d9      	str	r1, [r3, #60]	@ 0x3c
1001937c:	e411      	b.n	10018ba2 <_dtoa_r+0x262>
1001937e:	2301      	movs	r3, #1
10019380:	930c      	str	r3, [sp, #48]	@ 0x30
10019382:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10019384:	2b00      	cmp	r3, #0
10019386:	dd33      	ble.n	100193f0 <_dtoa_r+0xab0>
10019388:	9318      	str	r3, [sp, #96]	@ 0x60
1001938a:	9306      	str	r3, [sp, #24]
1001938c:	461e      	mov	r6, r3
1001938e:	e7e6      	b.n	1001935e <_dtoa_r+0xa1e>
10019390:	2300      	movs	r3, #0
10019392:	930c      	str	r3, [sp, #48]	@ 0x30
10019394:	e7d9      	b.n	1001934a <_dtoa_r+0xa0a>
10019396:	2300      	movs	r3, #0
10019398:	930c      	str	r3, [sp, #48]	@ 0x30
1001939a:	e7f2      	b.n	10019382 <_dtoa_r+0xa42>
1001939c:	4639      	mov	r1, r7
1001939e:	9803      	ldr	r0, [sp, #12]
100193a0:	4632      	mov	r2, r6
100193a2:	f004 f881 	bl	1001d4a8 <__lshift>
100193a6:	4607      	mov	r7, r0
100193a8:	e6b9      	b.n	1001911e <_dtoa_r+0x7de>
100193aa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100193ac:	9a06      	ldr	r2, [sp, #24]
100193ae:	950f      	str	r5, [sp, #60]	@ 0x3c
100193b0:	1aeb      	subs	r3, r5, r3
100193b2:	449b      	add	fp, r3
100193b4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100193b6:	461e      	mov	r6, r3
100193b8:	4413      	add	r3, r2
100193ba:	4414      	add	r4, r2
100193bc:	930b      	str	r3, [sp, #44]	@ 0x2c
100193be:	2500      	movs	r5, #0
100193c0:	e690      	b.n	100190e4 <_dtoa_r+0x7a4>
100193c2:	9b04      	ldr	r3, [sp, #16]
100193c4:	2b00      	cmp	r3, #0
100193c6:	d18f      	bne.n	100192e8 <_dtoa_r+0x9a8>
100193c8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
100193cc:	f3c1 0313 	ubfx	r3, r1, #0, #20
100193d0:	460a      	mov	r2, r1
100193d2:	2b00      	cmp	r3, #0
100193d4:	d188      	bne.n	100192e8 <_dtoa_r+0x9a8>
100193d6:	e7a3      	b.n	10019320 <_dtoa_r+0x9e0>
100193d8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
100193dc:	2702      	movs	r7, #2
100193de:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
100193e2:	e40b      	b.n	10018bfc <_dtoa_r+0x2bc>
100193e4:	f47f af1b 	bne.w	1001921e <_dtoa_r+0x8de>
100193e8:	07da      	lsls	r2, r3, #31
100193ea:	f57f af18 	bpl.w	1001921e <_dtoa_r+0x8de>
100193ee:	e711      	b.n	10019214 <_dtoa_r+0x8d4>
100193f0:	2301      	movs	r3, #1
100193f2:	9329      	str	r3, [sp, #164]	@ 0xa4
100193f4:	9306      	str	r3, [sp, #24]
100193f6:	f7ff bbcf 	b.w	10018b98 <_dtoa_r+0x258>
100193fa:	d103      	bne.n	10019404 <_dtoa_r+0xac4>
100193fc:	9b04      	ldr	r3, [sp, #16]
100193fe:	07db      	lsls	r3, r3, #31
10019400:	f53f ae18 	bmi.w	10019034 <_dtoa_r+0x6f4>
10019404:	465e      	mov	r6, fp
10019406:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
1001940a:	2b30      	cmp	r3, #48	@ 0x30
1001940c:	d0fa      	beq.n	10019404 <_dtoa_r+0xac4>
1001940e:	e620      	b.n	10019052 <_dtoa_r+0x712>
10019410:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10019412:	2331      	movs	r3, #49	@ 0x31
10019414:	3501      	adds	r5, #1
10019416:	7013      	strb	r3, [r2, #0]
10019418:	e61b      	b.n	10019052 <_dtoa_r+0x712>
1001941a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
1001941c:	2a00      	cmp	r2, #0
1001941e:	f000 80f9 	beq.w	10019614 <_dtoa_r+0xcd4>
10019422:	f203 4333 	addw	r3, r3, #1075	@ 0x433
10019426:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10019428:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001942a:	4616      	mov	r6, r2
1001942c:	441a      	add	r2, r3
1001942e:	441c      	add	r4, r3
10019430:	920b      	str	r2, [sp, #44]	@ 0x2c
10019432:	e657      	b.n	100190e4 <_dtoa_r+0x7a4>
10019434:	f1c8 0301 	rsb	r3, r8, #1
10019438:	4604      	mov	r4, r0
1001943a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001943c:	9010      	str	r0, [sp, #64]	@ 0x40
1001943e:	f7ff bb9b 	b.w	10018b78 <_dtoa_r+0x238>
10019442:	f000 80eb 	beq.w	1001961c <_dtoa_r+0xcdc>
10019446:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019448:	4d42      	ldr	r5, [pc, #264]	@ (10019554 <_dtoa_r+0xc14>)
1001944a:	425e      	negs	r6, r3
1001944c:	f006 030f 	and.w	r3, r6, #15
10019450:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10019454:	e9d3 2300 	ldrd	r2, r3, [r3]
10019458:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001945c:	f007 f99c 	bl	10020798 <__aeabi_dmul>
10019460:	1135      	asrs	r5, r6, #4
10019462:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
10019466:	f000 814d 	beq.w	10019704 <_dtoa_r+0xdc4>
1001946a:	4e3b      	ldr	r6, [pc, #236]	@ (10019558 <_dtoa_r+0xc18>)
1001946c:	2300      	movs	r3, #0
1001946e:	2702      	movs	r7, #2
10019470:	4680      	mov	r8, r0
10019472:	4689      	mov	r9, r1
10019474:	07e8      	lsls	r0, r5, #31
10019476:	d509      	bpl.n	1001948c <_dtoa_r+0xb4c>
10019478:	e9d6 2300 	ldrd	r2, r3, [r6]
1001947c:	4640      	mov	r0, r8
1001947e:	4649      	mov	r1, r9
10019480:	f007 f98a 	bl	10020798 <__aeabi_dmul>
10019484:	3701      	adds	r7, #1
10019486:	4680      	mov	r8, r0
10019488:	4689      	mov	r9, r1
1001948a:	2301      	movs	r3, #1
1001948c:	106d      	asrs	r5, r5, #1
1001948e:	f106 0608 	add.w	r6, r6, #8
10019492:	d1ef      	bne.n	10019474 <_dtoa_r+0xb34>
10019494:	2b00      	cmp	r3, #0
10019496:	f47f abca 	bne.w	10018c2e <_dtoa_r+0x2ee>
1001949a:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
1001949e:	f7ff bbc6 	b.w	10018c2e <_dtoa_r+0x2ee>
100194a2:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
100194a4:	e4ca      	b.n	10018e3c <_dtoa_r+0x4fc>
100194a6:	f8dd a018 	ldr.w	sl, [sp, #24]
100194aa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100194ac:	4602      	mov	r2, r0
100194ae:	460b      	mov	r3, r1
100194b0:	f006 ffbc 	bl	1002042c <__adddf3>
100194b4:	4602      	mov	r2, r0
100194b6:	460b      	mov	r3, r1
100194b8:	e9cd 2306 	strd	r2, r3, [sp, #24]
100194bc:	3501      	adds	r5, #1
100194be:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
100194c2:	46a8      	mov	r8, r5
100194c4:	f007 fbf8 	bl	10020cb8 <__aeabi_dcmpgt>
100194c8:	b940      	cbnz	r0, 100194dc <_dtoa_r+0xb9c>
100194ca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
100194ce:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
100194d2:	f007 fbc9 	bl	10020c68 <__aeabi_dcmpeq>
100194d6:	b118      	cbz	r0, 100194e0 <_dtoa_r+0xba0>
100194d8:	07f1      	lsls	r1, r6, #31
100194da:	d501      	bpl.n	100194e0 <_dtoa_r+0xba0>
100194dc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100194de:	e44a      	b.n	10018d76 <_dtoa_r+0x436>
100194e0:	463e      	mov	r6, r7
100194e2:	e5c8      	b.n	10019076 <_dtoa_r+0x736>
100194e4:	6879      	ldr	r1, [r7, #4]
100194e6:	9803      	ldr	r0, [sp, #12]
100194e8:	f003 fd76 	bl	1001cfd8 <_Balloc>
100194ec:	4605      	mov	r5, r0
100194ee:	2800      	cmp	r0, #0
100194f0:	f000 8126 	beq.w	10019740 <_dtoa_r+0xe00>
100194f4:	693b      	ldr	r3, [r7, #16]
100194f6:	3302      	adds	r3, #2
100194f8:	009a      	lsls	r2, r3, #2
100194fa:	f107 010c 	add.w	r1, r7, #12
100194fe:	300c      	adds	r0, #12
10019500:	f7fe ffee 	bl	100184e0 <memcpy>
10019504:	9803      	ldr	r0, [sp, #12]
10019506:	4629      	mov	r1, r5
10019508:	2201      	movs	r2, #1
1001950a:	f003 ffcd 	bl	1001d4a8 <__lshift>
1001950e:	4680      	mov	r8, r0
10019510:	e60a      	b.n	10019128 <_dtoa_r+0x7e8>
10019512:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10019514:	463c      	mov	r4, r7
10019516:	3501      	adds	r5, #1
10019518:	4647      	mov	r7, r8
1001951a:	e57e      	b.n	1001901a <_dtoa_r+0x6da>
1001951c:	f8dd 800c 	ldr.w	r8, [sp, #12]
10019520:	4639      	mov	r1, r7
10019522:	462a      	mov	r2, r5
10019524:	4640      	mov	r0, r8
10019526:	f003 ff65 	bl	1001d3f4 <__pow5mult>
1001952a:	4652      	mov	r2, sl
1001952c:	4601      	mov	r1, r0
1001952e:	4607      	mov	r7, r0
10019530:	4640      	mov	r0, r8
10019532:	f003 fea9 	bl	1001d288 <__multiply>
10019536:	4651      	mov	r1, sl
10019538:	4682      	mov	sl, r0
1001953a:	4640      	mov	r0, r8
1001953c:	f003 fd72 	bl	1001d024 <_Bfree>
10019540:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10019542:	1b5b      	subs	r3, r3, r5
10019544:	930f      	str	r3, [sp, #60]	@ 0x3c
10019546:	f43f ad07 	beq.w	10018f58 <_dtoa_r+0x618>
1001954a:	e4ff      	b.n	10018f4c <_dtoa_r+0x60c>
1001954c:	10023a28 	.word	0x10023a28
10019550:	7ff00000 	.word	0x7ff00000
10019554:	10023b88 	.word	0x10023b88
10019558:	10023b60 	.word	0x10023b60
1001955c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
10019560:	f007 f91a 	bl	10020798 <__aeabi_dmul>
10019564:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10019566:	701f      	strb	r7, [r3, #0]
10019568:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001956a:	2b01      	cmp	r3, #1
1001956c:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
10019570:	f000 80c6 	beq.w	10019700 <_dtoa_r+0xdc0>
10019574:	9f12      	ldr	r7, [sp, #72]	@ 0x48
10019576:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10019578:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
1001957c:	441f      	add	r7, r3
1001957e:	4b7c      	ldr	r3, [pc, #496]	@ (10019770 <_dtoa_r+0xe30>)
10019580:	2200      	movs	r2, #0
10019582:	4640      	mov	r0, r8
10019584:	4649      	mov	r1, r9
10019586:	f007 f907 	bl	10020798 <__aeabi_dmul>
1001958a:	4689      	mov	r9, r1
1001958c:	4680      	mov	r8, r0
1001958e:	f007 fbb3 	bl	10020cf8 <__aeabi_d2iz>
10019592:	4683      	mov	fp, r0
10019594:	f007 f896 	bl	100206c4 <__aeabi_i2d>
10019598:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
1001959c:	4602      	mov	r2, r0
1001959e:	460b      	mov	r3, r1
100195a0:	4640      	mov	r0, r8
100195a2:	4649      	mov	r1, r9
100195a4:	f006 ff40 	bl	10020428 <__aeabi_dsub>
100195a8:	f806 bb01 	strb.w	fp, [r6], #1
100195ac:	42b7      	cmp	r7, r6
100195ae:	4680      	mov	r8, r0
100195b0:	4689      	mov	r9, r1
100195b2:	d1e4      	bne.n	1001957e <_dtoa_r+0xc3e>
100195b4:	f8dd b044 	ldr.w	fp, [sp, #68]	@ 0x44
100195b8:	4b6e      	ldr	r3, [pc, #440]	@ (10019774 <_dtoa_r+0xe34>)
100195ba:	2200      	movs	r2, #0
100195bc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
100195c0:	f006 ff34 	bl	1002042c <__adddf3>
100195c4:	4602      	mov	r2, r0
100195c6:	460b      	mov	r3, r1
100195c8:	4640      	mov	r0, r8
100195ca:	4649      	mov	r1, r9
100195cc:	f007 fb74 	bl	10020cb8 <__aeabi_dcmpgt>
100195d0:	2800      	cmp	r0, #0
100195d2:	d167      	bne.n	100196a4 <_dtoa_r+0xd64>
100195d4:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
100195d8:	4966      	ldr	r1, [pc, #408]	@ (10019774 <_dtoa_r+0xe34>)
100195da:	2000      	movs	r0, #0
100195dc:	f006 ff24 	bl	10020428 <__aeabi_dsub>
100195e0:	4602      	mov	r2, r0
100195e2:	460b      	mov	r3, r1
100195e4:	4640      	mov	r0, r8
100195e6:	4649      	mov	r1, r9
100195e8:	f007 fb48 	bl	10020c7c <__aeabi_dcmplt>
100195ec:	b948      	cbnz	r0, 10019602 <_dtoa_r+0xcc2>
100195ee:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
100195f0:	2b00      	cmp	r3, #0
100195f2:	f6ff ac93 	blt.w	10018f1c <_dtoa_r+0x5dc>
100195f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100195f8:	2b0e      	cmp	r3, #14
100195fa:	f73f ac8f 	bgt.w	10018f1c <_dtoa_r+0x5dc>
100195fe:	f7ff bbfc 	b.w	10018dfa <_dtoa_r+0x4ba>
10019602:	463e      	mov	r6, r7
10019604:	3f01      	subs	r7, #1
10019606:	f816 3c01 	ldrb.w	r3, [r6, #-1]
1001960a:	2b30      	cmp	r3, #48	@ 0x30
1001960c:	d0f9      	beq.n	10019602 <_dtoa_r+0xcc2>
1001960e:	9d19      	ldr	r5, [sp, #100]	@ 0x64
10019610:	3501      	adds	r5, #1
10019612:	e530      	b.n	10019076 <_dtoa_r+0x736>
10019614:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10019616:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
1001961a:	e704      	b.n	10019426 <_dtoa_r+0xae6>
1001961c:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
10019620:	2702      	movs	r7, #2
10019622:	f7ff bb04 	b.w	10018c2e <_dtoa_r+0x2ee>
10019626:	9b06      	ldr	r3, [sp, #24]
10019628:	2b00      	cmp	r3, #0
1001962a:	f43f abb8 	beq.w	10018d9e <_dtoa_r+0x45e>
1001962e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10019630:	2b00      	cmp	r3, #0
10019632:	f77f abd9 	ble.w	10018de8 <_dtoa_r+0x4a8>
10019636:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10019638:	9312      	str	r3, [sp, #72]	@ 0x48
1001963a:	3a01      	subs	r2, #1
1001963c:	4b4c      	ldr	r3, [pc, #304]	@ (10019770 <_dtoa_r+0xe30>)
1001963e:	9219      	str	r2, [sp, #100]	@ 0x64
10019640:	4640      	mov	r0, r8
10019642:	2200      	movs	r2, #0
10019644:	4649      	mov	r1, r9
10019646:	f007 f8a7 	bl	10020798 <__aeabi_dmul>
1001964a:	4680      	mov	r8, r0
1001964c:	4689      	mov	r9, r1
1001964e:	1c78      	adds	r0, r7, #1
10019650:	f007 f838 	bl	100206c4 <__aeabi_i2d>
10019654:	4642      	mov	r2, r8
10019656:	464b      	mov	r3, r9
10019658:	f007 f89e 	bl	10020798 <__aeabi_dmul>
1001965c:	4b46      	ldr	r3, [pc, #280]	@ (10019778 <_dtoa_r+0xe38>)
1001965e:	2200      	movs	r2, #0
10019660:	f006 fee4 	bl	1002042c <__adddf3>
10019664:	4606      	mov	r6, r0
10019666:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001966a:	f7ff bb01 	b.w	10018c70 <_dtoa_r+0x330>
1001966e:	f108 0801 	add.w	r8, r8, #1
10019672:	2331      	movs	r3, #49	@ 0x31
10019674:	f7ff bb86 	b.w	10018d84 <_dtoa_r+0x444>
10019678:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1001967a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001967c:	46b3      	mov	fp, r6
1001967e:	2339      	movs	r3, #57	@ 0x39
10019680:	463c      	mov	r4, r7
10019682:	f80b 3b01 	strb.w	r3, [fp], #1
10019686:	3501      	adds	r5, #1
10019688:	4647      	mov	r7, r8
1001968a:	e4d8      	b.n	1001903e <_dtoa_r+0x6fe>
1001968c:	f04f 0900 	mov.w	r9, #0
10019690:	464f      	mov	r7, r9
10019692:	e5f6      	b.n	10019282 <_dtoa_r+0x942>
10019694:	469b      	mov	fp, r3
10019696:	e629      	b.n	100192ec <_dtoa_r+0x9ac>
10019698:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001969a:	461e      	mov	r6, r3
1001969c:	4413      	add	r3, r2
1001969e:	4414      	add	r4, r2
100196a0:	930b      	str	r3, [sp, #44]	@ 0x2c
100196a2:	e51f      	b.n	100190e4 <_dtoa_r+0x7a4>
100196a4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
100196a6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100196a8:	f103 0801 	add.w	r8, r3, #1
100196ac:	f7ff bb63 	b.w	10018d76 <_dtoa_r+0x436>
100196b0:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
100196b4:	e7ab      	b.n	1001960e <_dtoa_r+0xcce>
100196b6:	e9dd b41a 	ldrd	fp, r4, [sp, #104]	@ 0x68
100196ba:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
100196be:	f7ff bb93 	b.w	10018de8 <_dtoa_r+0x4a8>
100196c2:	2b39      	cmp	r3, #57	@ 0x39
100196c4:	d0d8      	beq.n	10019678 <_dtoa_r+0xd38>
100196c6:	2d00      	cmp	r5, #0
100196c8:	f73f ada7 	bgt.w	1001921a <_dtoa_r+0x8da>
100196cc:	e5a7      	b.n	1001921e <_dtoa_r+0x8de>
100196ce:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
100196d0:	2b02      	cmp	r3, #2
100196d2:	dc0a      	bgt.n	100196ea <_dtoa_r+0xdaa>
100196d4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100196d6:	9306      	str	r3, [sp, #24]
100196d8:	4649      	mov	r1, r9
100196da:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100196dc:	f7ff f898 	bl	10018810 <quorem>
100196e0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100196e2:	f100 0330 	add.w	r3, r0, #48	@ 0x30
100196e6:	7013      	strb	r3, [r2, #0]
100196e8:	e48d      	b.n	10019006 <_dtoa_r+0x6c6>
100196ea:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100196ec:	9306      	str	r3, [sp, #24]
100196ee:	950e      	str	r5, [sp, #56]	@ 0x38
100196f0:	e5b6      	b.n	10019260 <_dtoa_r+0x920>
100196f2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
100196f4:	2b02      	cmp	r3, #2
100196f6:	dcf8      	bgt.n	100196ea <_dtoa_r+0xdaa>
100196f8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100196fa:	950e      	str	r5, [sp, #56]	@ 0x38
100196fc:	9306      	str	r3, [sp, #24]
100196fe:	e50b      	b.n	10019118 <_dtoa_r+0x7d8>
10019700:	4637      	mov	r7, r6
10019702:	e759      	b.n	100195b8 <_dtoa_r+0xc78>
10019704:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
10019708:	2702      	movs	r7, #2
1001970a:	f7ff ba90 	b.w	10018c2e <_dtoa_r+0x2ee>
1001970e:	9b03      	ldr	r3, [sp, #12]
10019710:	2100      	movs	r1, #0
10019712:	63d9      	str	r1, [r3, #60]	@ 0x3c
10019714:	f7ff ba45 	b.w	10018ba2 <_dtoa_r+0x262>
10019718:	9b03      	ldr	r3, [sp, #12]
1001971a:	2500      	movs	r5, #0
1001971c:	63dd      	str	r5, [r3, #60]	@ 0x3c
1001971e:	4629      	mov	r1, r5
10019720:	4618      	mov	r0, r3
10019722:	f003 fc59 	bl	1001cfd8 <_Balloc>
10019726:	900a      	str	r0, [sp, #40]	@ 0x28
10019728:	b9a8      	cbnz	r0, 10019756 <_dtoa_r+0xe16>
1001972a:	4b14      	ldr	r3, [pc, #80]	@ (1001977c <_dtoa_r+0xe3c>)
1001972c:	4814      	ldr	r0, [pc, #80]	@ (10019780 <_dtoa_r+0xe40>)
1001972e:	2200      	movs	r2, #0
10019730:	f240 11af 	movw	r1, #431	@ 0x1af
10019734:	f005 ff30 	bl	1001f598 <__assert_func>
10019738:	2a00      	cmp	r2, #0
1001973a:	f77f ad70 	ble.w	1001921e <_dtoa_r+0x8de>
1001973e:	e55b      	b.n	100191f8 <_dtoa_r+0x8b8>
10019740:	4b0e      	ldr	r3, [pc, #56]	@ (1001977c <_dtoa_r+0xe3c>)
10019742:	480f      	ldr	r0, [pc, #60]	@ (10019780 <_dtoa_r+0xe40>)
10019744:	462a      	mov	r2, r5
10019746:	f240 21ef 	movw	r1, #751	@ 0x2ef
1001974a:	f005 ff25 	bl	1001f598 <__assert_func>
1001974e:	4b0d      	ldr	r3, [pc, #52]	@ (10019784 <_dtoa_r+0xe44>)
10019750:	930a      	str	r3, [sp, #40]	@ 0x28
10019752:	f7ff b930 	b.w	100189b6 <_dtoa_r+0x76>
10019756:	9b03      	ldr	r3, [sp, #12]
10019758:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001975a:	639a      	str	r2, [r3, #56]	@ 0x38
1001975c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10019760:	2201      	movs	r2, #1
10019762:	9529      	str	r5, [sp, #164]	@ 0xa4
10019764:	9318      	str	r3, [sp, #96]	@ 0x60
10019766:	920c      	str	r2, [sp, #48]	@ 0x30
10019768:	9306      	str	r3, [sp, #24]
1001976a:	f7ff bb3d 	b.w	10018de8 <_dtoa_r+0x4a8>
1001976e:	bf00      	nop
10019770:	40240000 	.word	0x40240000
10019774:	3fe00000 	.word	0x3fe00000
10019778:	401c0000 	.word	0x401c0000
1001977c:	10023a2c 	.word	0x10023a2c
10019780:	10023a40 	.word	0x10023a40
10019784:	10023a1c 	.word	0x10023a1c

10019788 <_malloc_trim_r>:
10019788:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001978c:	4606      	mov	r6, r0
1001978e:	2008      	movs	r0, #8
10019790:	4689      	mov	r9, r1
10019792:	f7fe fca1 	bl	100180d8 <sysconf>
10019796:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 10019834 <_malloc_trim_r+0xac>
1001979a:	4605      	mov	r5, r0
1001979c:	4630      	mov	r0, r6
1001979e:	f7fd fb55 	bl	10016e4c <__malloc_lock>
100197a2:	f8d8 3008 	ldr.w	r3, [r8, #8]
100197a6:	685f      	ldr	r7, [r3, #4]
100197a8:	f027 0703 	bic.w	r7, r7, #3
100197ac:	f1a7 0411 	sub.w	r4, r7, #17
100197b0:	eba4 0409 	sub.w	r4, r4, r9
100197b4:	442c      	add	r4, r5
100197b6:	fbb4 f4f5 	udiv	r4, r4, r5
100197ba:	3c01      	subs	r4, #1
100197bc:	fb05 f404 	mul.w	r4, r5, r4
100197c0:	42a5      	cmp	r5, r4
100197c2:	dc08      	bgt.n	100197d6 <_malloc_trim_r+0x4e>
100197c4:	2100      	movs	r1, #0
100197c6:	4630      	mov	r0, r6
100197c8:	f7fe fc58 	bl	1001807c <_sbrk_r>
100197cc:	f8d8 3008 	ldr.w	r3, [r8, #8]
100197d0:	443b      	add	r3, r7
100197d2:	4298      	cmp	r0, r3
100197d4:	d005      	beq.n	100197e2 <_malloc_trim_r+0x5a>
100197d6:	4630      	mov	r0, r6
100197d8:	f7fd fb3e 	bl	10016e58 <__malloc_unlock>
100197dc:	2000      	movs	r0, #0
100197de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
100197e2:	4261      	negs	r1, r4
100197e4:	4630      	mov	r0, r6
100197e6:	f7fe fc49 	bl	1001807c <_sbrk_r>
100197ea:	3001      	adds	r0, #1
100197ec:	d00f      	beq.n	1001980e <_malloc_trim_r+0x86>
100197ee:	4a12      	ldr	r2, [pc, #72]	@ (10019838 <_malloc_trim_r+0xb0>)
100197f0:	f8d8 3008 	ldr.w	r3, [r8, #8]
100197f4:	1b3f      	subs	r7, r7, r4
100197f6:	f047 0701 	orr.w	r7, r7, #1
100197fa:	605f      	str	r7, [r3, #4]
100197fc:	6813      	ldr	r3, [r2, #0]
100197fe:	4630      	mov	r0, r6
10019800:	1b1b      	subs	r3, r3, r4
10019802:	6013      	str	r3, [r2, #0]
10019804:	f7fd fb28 	bl	10016e58 <__malloc_unlock>
10019808:	2001      	movs	r0, #1
1001980a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001980e:	2100      	movs	r1, #0
10019810:	4630      	mov	r0, r6
10019812:	f7fe fc33 	bl	1001807c <_sbrk_r>
10019816:	f8d8 2008 	ldr.w	r2, [r8, #8]
1001981a:	1a83      	subs	r3, r0, r2
1001981c:	2b0f      	cmp	r3, #15
1001981e:	ddda      	ble.n	100197d6 <_malloc_trim_r+0x4e>
10019820:	f043 0301 	orr.w	r3, r3, #1
10019824:	6053      	str	r3, [r2, #4]
10019826:	4b05      	ldr	r3, [pc, #20]	@ (1001983c <_malloc_trim_r+0xb4>)
10019828:	4903      	ldr	r1, [pc, #12]	@ (10019838 <_malloc_trim_r+0xb0>)
1001982a:	681b      	ldr	r3, [r3, #0]
1001982c:	1ac0      	subs	r0, r0, r3
1001982e:	6008      	str	r0, [r1, #0]
10019830:	e7d1      	b.n	100197d6 <_malloc_trim_r+0x4e>
10019832:	bf00      	nop
10019834:	20000018 	.word	0x20000018
10019838:	20001454 	.word	0x20001454
1001983c:	20000010 	.word	0x20000010

10019840 <_free_r>:
10019840:	2900      	cmp	r1, #0
10019842:	d07c      	beq.n	1001993e <_free_r+0xfe>
10019844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10019846:	460c      	mov	r4, r1
10019848:	4606      	mov	r6, r0
1001984a:	f7fd faff 	bl	10016e4c <__malloc_lock>
1001984e:	f854 3c04 	ldr.w	r3, [r4, #-4]
10019852:	4f77      	ldr	r7, [pc, #476]	@ (10019a30 <_free_r+0x1f0>)
10019854:	f1a4 0508 	sub.w	r5, r4, #8
10019858:	f023 0101 	bic.w	r1, r3, #1
1001985c:	1868      	adds	r0, r5, r1
1001985e:	f8d7 c008 	ldr.w	ip, [r7, #8]
10019862:	6842      	ldr	r2, [r0, #4]
10019864:	4584      	cmp	ip, r0
10019866:	f022 0203 	bic.w	r2, r2, #3
1001986a:	f000 8083 	beq.w	10019974 <_free_r+0x134>
1001986e:	07db      	lsls	r3, r3, #31
10019870:	6042      	str	r2, [r0, #4]
10019872:	eb00 0c02 	add.w	ip, r0, r2
10019876:	d433      	bmi.n	100198e0 <_free_r+0xa0>
10019878:	f854 4c08 	ldr.w	r4, [r4, #-8]
1001987c:	f8dc 3004 	ldr.w	r3, [ip, #4]
10019880:	1b2d      	subs	r5, r5, r4
10019882:	4421      	add	r1, r4
10019884:	68ac      	ldr	r4, [r5, #8]
10019886:	f107 0c08 	add.w	ip, r7, #8
1001988a:	4564      	cmp	r4, ip
1001988c:	f003 0301 	and.w	r3, r3, #1
10019890:	d064      	beq.n	1001995c <_free_r+0x11c>
10019892:	f8d5 e00c 	ldr.w	lr, [r5, #12]
10019896:	f8c4 e00c 	str.w	lr, [r4, #12]
1001989a:	f8ce 4008 	str.w	r4, [lr, #8]
1001989e:	2b00      	cmp	r3, #0
100198a0:	f000 8081 	beq.w	100199a6 <_free_r+0x166>
100198a4:	f041 0301 	orr.w	r3, r1, #1
100198a8:	606b      	str	r3, [r5, #4]
100198aa:	6001      	str	r1, [r0, #0]
100198ac:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
100198b0:	d222      	bcs.n	100198f8 <_free_r+0xb8>
100198b2:	6878      	ldr	r0, [r7, #4]
100198b4:	08cb      	lsrs	r3, r1, #3
100198b6:	2201      	movs	r2, #1
100198b8:	0949      	lsrs	r1, r1, #5
100198ba:	3301      	adds	r3, #1
100198bc:	408a      	lsls	r2, r1
100198be:	4302      	orrs	r2, r0
100198c0:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
100198c4:	607a      	str	r2, [r7, #4]
100198c6:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
100198ca:	3a08      	subs	r2, #8
100198cc:	e9c5 1202 	strd	r1, r2, [r5, #8]
100198d0:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
100198d4:	60cd      	str	r5, [r1, #12]
100198d6:	4630      	mov	r0, r6
100198d8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
100198dc:	f7fd babc 	b.w	10016e58 <__malloc_unlock>
100198e0:	f8dc 3004 	ldr.w	r3, [ip, #4]
100198e4:	07db      	lsls	r3, r3, #31
100198e6:	d52b      	bpl.n	10019940 <_free_r+0x100>
100198e8:	f041 0301 	orr.w	r3, r1, #1
100198ec:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
100198f0:	f844 3c04 	str.w	r3, [r4, #-4]
100198f4:	6001      	str	r1, [r0, #0]
100198f6:	d3dc      	bcc.n	100198b2 <_free_r+0x72>
100198f8:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
100198fc:	ea4f 2351 	mov.w	r3, r1, lsr #9
10019900:	d253      	bcs.n	100199aa <_free_r+0x16a>
10019902:	098b      	lsrs	r3, r1, #6
10019904:	f103 0039 	add.w	r0, r3, #57	@ 0x39
10019908:	f103 0238 	add.w	r2, r3, #56	@ 0x38
1001990c:	00c3      	lsls	r3, r0, #3
1001990e:	18f8      	adds	r0, r7, r3
10019910:	58fb      	ldr	r3, [r7, r3]
10019912:	3808      	subs	r0, #8
10019914:	4298      	cmp	r0, r3
10019916:	d103      	bne.n	10019920 <_free_r+0xe0>
10019918:	e063      	b.n	100199e2 <_free_r+0x1a2>
1001991a:	689b      	ldr	r3, [r3, #8]
1001991c:	4298      	cmp	r0, r3
1001991e:	d004      	beq.n	1001992a <_free_r+0xea>
10019920:	685a      	ldr	r2, [r3, #4]
10019922:	f022 0203 	bic.w	r2, r2, #3
10019926:	428a      	cmp	r2, r1
10019928:	d8f7      	bhi.n	1001991a <_free_r+0xda>
1001992a:	68d8      	ldr	r0, [r3, #12]
1001992c:	e9c5 3002 	strd	r3, r0, [r5, #8]
10019930:	6085      	str	r5, [r0, #8]
10019932:	60dd      	str	r5, [r3, #12]
10019934:	4630      	mov	r0, r6
10019936:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
1001993a:	f7fd ba8d 	b.w	10016e58 <__malloc_unlock>
1001993e:	4770      	bx	lr
10019940:	4411      	add	r1, r2
10019942:	f107 0c08 	add.w	ip, r7, #8
10019946:	6883      	ldr	r3, [r0, #8]
10019948:	4563      	cmp	r3, ip
1001994a:	d03f      	beq.n	100199cc <_free_r+0x18c>
1001994c:	68c2      	ldr	r2, [r0, #12]
1001994e:	60da      	str	r2, [r3, #12]
10019950:	6093      	str	r3, [r2, #8]
10019952:	f041 0301 	orr.w	r3, r1, #1
10019956:	606b      	str	r3, [r5, #4]
10019958:	5069      	str	r1, [r5, r1]
1001995a:	e7a7      	b.n	100198ac <_free_r+0x6c>
1001995c:	2b00      	cmp	r3, #0
1001995e:	d161      	bne.n	10019a24 <_free_r+0x1e4>
10019960:	440a      	add	r2, r1
10019962:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
10019966:	60cb      	str	r3, [r1, #12]
10019968:	6099      	str	r1, [r3, #8]
1001996a:	f042 0301 	orr.w	r3, r2, #1
1001996e:	606b      	str	r3, [r5, #4]
10019970:	50aa      	str	r2, [r5, r2]
10019972:	e7b0      	b.n	100198d6 <_free_r+0x96>
10019974:	440a      	add	r2, r1
10019976:	07d9      	lsls	r1, r3, #31
10019978:	d407      	bmi.n	1001998a <_free_r+0x14a>
1001997a:	f854 3c08 	ldr.w	r3, [r4, #-8]
1001997e:	1aed      	subs	r5, r5, r3
10019980:	441a      	add	r2, r3
10019982:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
10019986:	60cb      	str	r3, [r1, #12]
10019988:	6099      	str	r1, [r3, #8]
1001998a:	f042 0301 	orr.w	r3, r2, #1
1001998e:	606b      	str	r3, [r5, #4]
10019990:	4b28      	ldr	r3, [pc, #160]	@ (10019a34 <_free_r+0x1f4>)
10019992:	60bd      	str	r5, [r7, #8]
10019994:	681b      	ldr	r3, [r3, #0]
10019996:	4293      	cmp	r3, r2
10019998:	d89d      	bhi.n	100198d6 <_free_r+0x96>
1001999a:	4b27      	ldr	r3, [pc, #156]	@ (10019a38 <_free_r+0x1f8>)
1001999c:	4630      	mov	r0, r6
1001999e:	6819      	ldr	r1, [r3, #0]
100199a0:	f7ff fef2 	bl	10019788 <_malloc_trim_r>
100199a4:	e797      	b.n	100198d6 <_free_r+0x96>
100199a6:	4411      	add	r1, r2
100199a8:	e7cd      	b.n	10019946 <_free_r+0x106>
100199aa:	2b14      	cmp	r3, #20
100199ac:	d908      	bls.n	100199c0 <_free_r+0x180>
100199ae:	2b54      	cmp	r3, #84	@ 0x54
100199b0:	d81f      	bhi.n	100199f2 <_free_r+0x1b2>
100199b2:	0b0b      	lsrs	r3, r1, #12
100199b4:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
100199b8:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
100199bc:	00c3      	lsls	r3, r0, #3
100199be:	e7a6      	b.n	1001990e <_free_r+0xce>
100199c0:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
100199c4:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
100199c8:	00c3      	lsls	r3, r0, #3
100199ca:	e7a0      	b.n	1001990e <_free_r+0xce>
100199cc:	f041 0301 	orr.w	r3, r1, #1
100199d0:	613d      	str	r5, [r7, #16]
100199d2:	617d      	str	r5, [r7, #20]
100199d4:	f8c5 c008 	str.w	ip, [r5, #8]
100199d8:	f8c5 c00c 	str.w	ip, [r5, #12]
100199dc:	606b      	str	r3, [r5, #4]
100199de:	5069      	str	r1, [r5, r1]
100199e0:	e779      	b.n	100198d6 <_free_r+0x96>
100199e2:	6879      	ldr	r1, [r7, #4]
100199e4:	1092      	asrs	r2, r2, #2
100199e6:	2401      	movs	r4, #1
100199e8:	fa04 f202 	lsl.w	r2, r4, r2
100199ec:	430a      	orrs	r2, r1
100199ee:	607a      	str	r2, [r7, #4]
100199f0:	e79c      	b.n	1001992c <_free_r+0xec>
100199f2:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
100199f6:	d806      	bhi.n	10019a06 <_free_r+0x1c6>
100199f8:	0bcb      	lsrs	r3, r1, #15
100199fa:	f103 0078 	add.w	r0, r3, #120	@ 0x78
100199fe:	f103 0277 	add.w	r2, r3, #119	@ 0x77
10019a02:	00c3      	lsls	r3, r0, #3
10019a04:	e783      	b.n	1001990e <_free_r+0xce>
10019a06:	f240 5254 	movw	r2, #1364	@ 0x554
10019a0a:	4293      	cmp	r3, r2
10019a0c:	d806      	bhi.n	10019a1c <_free_r+0x1dc>
10019a0e:	0c8b      	lsrs	r3, r1, #18
10019a10:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
10019a14:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
10019a18:	00c3      	lsls	r3, r0, #3
10019a1a:	e778      	b.n	1001990e <_free_r+0xce>
10019a1c:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10019a20:	227e      	movs	r2, #126	@ 0x7e
10019a22:	e774      	b.n	1001990e <_free_r+0xce>
10019a24:	f041 0301 	orr.w	r3, r1, #1
10019a28:	606b      	str	r3, [r5, #4]
10019a2a:	6001      	str	r1, [r0, #0]
10019a2c:	e753      	b.n	100198d6 <_free_r+0x96>
10019a2e:	bf00      	nop
10019a30:	20000018 	.word	0x20000018
10019a34:	20000014 	.word	0x20000014
10019a38:	20001484 	.word	0x20001484

10019a3c <__ascii_mbtowc>:
10019a3c:	b082      	sub	sp, #8
10019a3e:	b149      	cbz	r1, 10019a54 <__ascii_mbtowc+0x18>
10019a40:	b15a      	cbz	r2, 10019a5a <__ascii_mbtowc+0x1e>
10019a42:	b16b      	cbz	r3, 10019a60 <__ascii_mbtowc+0x24>
10019a44:	7813      	ldrb	r3, [r2, #0]
10019a46:	600b      	str	r3, [r1, #0]
10019a48:	7812      	ldrb	r2, [r2, #0]
10019a4a:	1e10      	subs	r0, r2, #0
10019a4c:	bf18      	it	ne
10019a4e:	2001      	movne	r0, #1
10019a50:	b002      	add	sp, #8
10019a52:	4770      	bx	lr
10019a54:	a901      	add	r1, sp, #4
10019a56:	2a00      	cmp	r2, #0
10019a58:	d1f3      	bne.n	10019a42 <__ascii_mbtowc+0x6>
10019a5a:	4610      	mov	r0, r2
10019a5c:	b002      	add	sp, #8
10019a5e:	4770      	bx	lr
10019a60:	f06f 0001 	mvn.w	r0, #1
10019a64:	e7f4      	b.n	10019a50 <__ascii_mbtowc+0x14>
10019a66:	bf00      	nop

10019a68 <_svfprintf_r>:
10019a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10019a6c:	b0df      	sub	sp, #380	@ 0x17c
10019a6e:	460c      	mov	r4, r1
10019a70:	9109      	str	r1, [sp, #36]	@ 0x24
10019a72:	4691      	mov	r9, r2
10019a74:	930d      	str	r3, [sp, #52]	@ 0x34
10019a76:	4683      	mov	fp, r0
10019a78:	f7fe faa8 	bl	10017fcc <_localeconv_r>
10019a7c:	6803      	ldr	r3, [r0, #0]
10019a7e:	931a      	str	r3, [sp, #104]	@ 0x68
10019a80:	4618      	mov	r0, r3
10019a82:	f7fe fddd 	bl	10018640 <strlen>
10019a86:	2100      	movs	r1, #0
10019a88:	9018      	str	r0, [sp, #96]	@ 0x60
10019a8a:	2208      	movs	r2, #8
10019a8c:	a82e      	add	r0, sp, #184	@ 0xb8
10019a8e:	f7fe f9ef 	bl	10017e70 <memset>
10019a92:	89a3      	ldrh	r3, [r4, #12]
10019a94:	0619      	lsls	r1, r3, #24
10019a96:	d503      	bpl.n	10019aa0 <_svfprintf_r+0x38>
10019a98:	6923      	ldr	r3, [r4, #16]
10019a9a:	2b00      	cmp	r3, #0
10019a9c:	f000 8788 	beq.w	1001a9b0 <_svfprintf_r+0xf48>
10019aa0:	2300      	movs	r3, #0
10019aa2:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10019aa6:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10019aaa:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
10019aae:	9313      	str	r3, [sp, #76]	@ 0x4c
10019ab0:	9319      	str	r3, [sp, #100]	@ 0x64
10019ab2:	930a      	str	r3, [sp, #40]	@ 0x28
10019ab4:	2400      	movs	r4, #0
10019ab6:	2300      	movs	r3, #0
10019ab8:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
10019abc:	aa35      	add	r2, sp, #212	@ 0xd4
10019abe:	9232      	str	r2, [sp, #200]	@ 0xc8
10019ac0:	4690      	mov	r8, r2
10019ac2:	f8cd b01c 	str.w	fp, [sp, #28]
10019ac6:	464d      	mov	r5, r9
10019ac8:	9f07      	ldr	r7, [sp, #28]
10019aca:	462e      	mov	r6, r5
10019acc:	4b73      	ldr	r3, [pc, #460]	@ (10019c9c <_svfprintf_r+0x234>)
10019ace:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10019ad2:	f7fe fa75 	bl	10017fc0 <__locale_mb_cur_max>
10019ad6:	4603      	mov	r3, r0
10019ad8:	a82e      	add	r0, sp, #184	@ 0xb8
10019ada:	9000      	str	r0, [sp, #0]
10019adc:	4632      	mov	r2, r6
10019ade:	a92a      	add	r1, sp, #168	@ 0xa8
10019ae0:	4638      	mov	r0, r7
10019ae2:	47a0      	blx	r4
10019ae4:	2800      	cmp	r0, #0
10019ae6:	f000 80a9 	beq.w	10019c3c <_svfprintf_r+0x1d4>
10019aea:	f2c0 809f 	blt.w	10019c2c <_svfprintf_r+0x1c4>
10019aee:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10019af0:	2a25      	cmp	r2, #37	@ 0x25
10019af2:	4603      	mov	r3, r0
10019af4:	d001      	beq.n	10019afa <_svfprintf_r+0x92>
10019af6:	441e      	add	r6, r3
10019af8:	e7e8      	b.n	10019acc <_svfprintf_r+0x64>
10019afa:	1b77      	subs	r7, r6, r5
10019afc:	4604      	mov	r4, r0
10019afe:	f040 80a0 	bne.w	10019c42 <_svfprintf_r+0x1da>
10019b02:	2300      	movs	r3, #0
10019b04:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10019b08:	4699      	mov	r9, r3
10019b0a:	930b      	str	r3, [sp, #44]	@ 0x2c
10019b0c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10019b10:	7873      	ldrb	r3, [r6, #1]
10019b12:	9208      	str	r2, [sp, #32]
10019b14:	1c74      	adds	r4, r6, #1
10019b16:	3401      	adds	r4, #1
10019b18:	f1a3 0220 	sub.w	r2, r3, #32
10019b1c:	2a5a      	cmp	r2, #90	@ 0x5a
10019b1e:	f200 80bf 	bhi.w	10019ca0 <_svfprintf_r+0x238>
10019b22:	e8df f012 	tbh	[pc, r2, lsl #1]
10019b26:	02e6      	.short	0x02e6
10019b28:	00bd00bd 	.word	0x00bd00bd
10019b2c:	00bd02e2 	.word	0x00bd02e2
10019b30:	00bd00bd 	.word	0x00bd00bd
10019b34:	00bd006a 	.word	0x00bd006a
10019b38:	024800bd 	.word	0x024800bd
10019b3c:	00bd0257 	.word	0x00bd0257
10019b40:	02f40253 	.word	0x02f40253
10019b44:	02f000bd 	.word	0x02f000bd
10019b48:	005b005b 	.word	0x005b005b
10019b4c:	005b005b 	.word	0x005b005b
10019b50:	005b005b 	.word	0x005b005b
10019b54:	005b005b 	.word	0x005b005b
10019b58:	00bd005b 	.word	0x00bd005b
10019b5c:	00bd00bd 	.word	0x00bd00bd
10019b60:	00bd00bd 	.word	0x00bd00bd
10019b64:	00bd00bd 	.word	0x00bd00bd
10019b68:	00bd013e 	.word	0x00bd013e
10019b6c:	030e01c7 	.word	0x030e01c7
10019b70:	013e013e 	.word	0x013e013e
10019b74:	00bd013e 	.word	0x00bd013e
10019b78:	00bd00bd 	.word	0x00bd00bd
10019b7c:	02de00bd 	.word	0x02de00bd
10019b80:	00bd00bd 	.word	0x00bd00bd
10019b84:	00bd025c 	.word	0x00bd025c
10019b88:	00bd00bd 	.word	0x00bd00bd
10019b8c:	00bd01f1 	.word	0x00bd01f1
10019b90:	00bd02cb 	.word	0x00bd02cb
10019b94:	070600bd 	.word	0x070600bd
10019b98:	00bd00bd 	.word	0x00bd00bd
10019b9c:	00bd00bd 	.word	0x00bd00bd
10019ba0:	00bd00bd 	.word	0x00bd00bd
10019ba4:	00bd00bd 	.word	0x00bd00bd
10019ba8:	00bd013e 	.word	0x00bd013e
10019bac:	022301c7 	.word	0x022301c7
10019bb0:	013e013e 	.word	0x013e013e
10019bb4:	028d013e 	.word	0x028d013e
10019bb8:	007f0223 	.word	0x007f0223
10019bbc:	02a600bd 	.word	0x02a600bd
10019bc0:	029700bd 	.word	0x029700bd
10019bc4:	02b906fb 	.word	0x02b906fb
10019bc8:	00bd007f 	.word	0x00bd007f
10019bcc:	007d01f1 	.word	0x007d01f1
10019bd0:	00bd0701 	.word	0x00bd0701
10019bd4:	072a00bd 	.word	0x072a00bd
10019bd8:	007d00bd 	.word	0x007d00bd
10019bdc:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10019be0:	2100      	movs	r1, #0
10019be2:	f814 3b01 	ldrb.w	r3, [r4], #1
10019be6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10019bea:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10019bee:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10019bf2:	2a09      	cmp	r2, #9
10019bf4:	d9f5      	bls.n	10019be2 <_svfprintf_r+0x17a>
10019bf6:	910b      	str	r1, [sp, #44]	@ 0x2c
10019bf8:	e78e      	b.n	10019b18 <_svfprintf_r+0xb0>
10019bfa:	9f07      	ldr	r7, [sp, #28]
10019bfc:	4638      	mov	r0, r7
10019bfe:	f7fe f9e5 	bl	10017fcc <_localeconv_r>
10019c02:	6843      	ldr	r3, [r0, #4]
10019c04:	931d      	str	r3, [sp, #116]	@ 0x74
10019c06:	4618      	mov	r0, r3
10019c08:	f7fe fd1a 	bl	10018640 <strlen>
10019c0c:	901e      	str	r0, [sp, #120]	@ 0x78
10019c0e:	4606      	mov	r6, r0
10019c10:	4638      	mov	r0, r7
10019c12:	f7fe f9db 	bl	10017fcc <_localeconv_r>
10019c16:	6883      	ldr	r3, [r0, #8]
10019c18:	931b      	str	r3, [sp, #108]	@ 0x6c
10019c1a:	2e00      	cmp	r6, #0
10019c1c:	f040 8616 	bne.w	1001a84c <_svfprintf_r+0xde4>
10019c20:	7823      	ldrb	r3, [r4, #0]
10019c22:	e778      	b.n	10019b16 <_svfprintf_r+0xae>
10019c24:	7823      	ldrb	r3, [r4, #0]
10019c26:	f049 0920 	orr.w	r9, r9, #32
10019c2a:	e774      	b.n	10019b16 <_svfprintf_r+0xae>
10019c2c:	2208      	movs	r2, #8
10019c2e:	2100      	movs	r1, #0
10019c30:	a82e      	add	r0, sp, #184	@ 0xb8
10019c32:	f7fe f91d 	bl	10017e70 <memset>
10019c36:	2301      	movs	r3, #1
10019c38:	441e      	add	r6, r3
10019c3a:	e747      	b.n	10019acc <_svfprintf_r+0x64>
10019c3c:	1b77      	subs	r7, r6, r5
10019c3e:	4604      	mov	r4, r0
10019c40:	d011      	beq.n	10019c66 <_svfprintf_r+0x1fe>
10019c42:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10019c44:	443b      	add	r3, r7
10019c46:	9334      	str	r3, [sp, #208]	@ 0xd0
10019c48:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019c4a:	3301      	adds	r3, #1
10019c4c:	2b07      	cmp	r3, #7
10019c4e:	e9c8 5700 	strd	r5, r7, [r8]
10019c52:	9333      	str	r3, [sp, #204]	@ 0xcc
10019c54:	dc18      	bgt.n	10019c88 <_svfprintf_r+0x220>
10019c56:	f108 0808 	add.w	r8, r8, #8
10019c5a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10019c5c:	443b      	add	r3, r7
10019c5e:	930a      	str	r3, [sp, #40]	@ 0x28
10019c60:	2c00      	cmp	r4, #0
10019c62:	f47f af4e 	bne.w	10019b02 <_svfprintf_r+0x9a>
10019c66:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10019c68:	f8dd b01c 	ldr.w	fp, [sp, #28]
10019c6c:	2b00      	cmp	r3, #0
10019c6e:	f041 81ed 	bne.w	1001b04c <_svfprintf_r+0x15e4>
10019c72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10019c74:	899b      	ldrh	r3, [r3, #12]
10019c76:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10019c7a:	2b00      	cmp	r3, #0
10019c7c:	f041 83bd 	bne.w	1001b3fa <_svfprintf_r+0x1992>
10019c80:	980a      	ldr	r0, [sp, #40]	@ 0x28
10019c82:	b05f      	add	sp, #380	@ 0x17c
10019c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10019c88:	9909      	ldr	r1, [sp, #36]	@ 0x24
10019c8a:	9807      	ldr	r0, [sp, #28]
10019c8c:	aa32      	add	r2, sp, #200	@ 0xc8
10019c8e:	f006 f9f1 	bl	10020074 <__ssprint_r>
10019c92:	2800      	cmp	r0, #0
10019c94:	d1ed      	bne.n	10019c72 <_svfprintf_r+0x20a>
10019c96:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019c9a:	e7de      	b.n	10019c5a <_svfprintf_r+0x1f2>
10019c9c:	2000042c 	.word	0x2000042c
10019ca0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019ca4:	2b00      	cmp	r3, #0
10019ca6:	d0de      	beq.n	10019c66 <_svfprintf_r+0x1fe>
10019ca8:	2200      	movs	r2, #0
10019caa:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10019cae:	2301      	movs	r3, #1
10019cb0:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10019cb4:	9306      	str	r3, [sp, #24]
10019cb6:	920c      	str	r2, [sp, #48]	@ 0x30
10019cb8:	469b      	mov	fp, r3
10019cba:	9208      	str	r2, [sp, #32]
10019cbc:	9214      	str	r2, [sp, #80]	@ 0x50
10019cbe:	9210      	str	r2, [sp, #64]	@ 0x40
10019cc0:	9212      	str	r2, [sp, #72]	@ 0x48
10019cc2:	ad45      	add	r5, sp, #276	@ 0x114
10019cc4:	f019 0302 	ands.w	r3, r9, #2
10019cc8:	d002      	beq.n	10019cd0 <_svfprintf_r+0x268>
10019cca:	9906      	ldr	r1, [sp, #24]
10019ccc:	3102      	adds	r1, #2
10019cce:	9106      	str	r1, [sp, #24]
10019cd0:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10019cd4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10019cd6:	d105      	bne.n	10019ce4 <_svfprintf_r+0x27c>
10019cd8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10019cda:	9806      	ldr	r0, [sp, #24]
10019cdc:	1a0e      	subs	r6, r1, r0
10019cde:	2e00      	cmp	r6, #0
10019ce0:	f300 80a7 	bgt.w	10019e32 <_svfprintf_r+0x3ca>
10019ce4:	b182      	cbz	r2, 10019d08 <_svfprintf_r+0x2a0>
10019ce6:	2201      	movs	r2, #1
10019ce8:	f8c8 2004 	str.w	r2, [r8, #4]
10019cec:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10019cee:	3201      	adds	r2, #1
10019cf0:	3401      	adds	r4, #1
10019cf2:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
10019cf6:	2a07      	cmp	r2, #7
10019cf8:	9434      	str	r4, [sp, #208]	@ 0xd0
10019cfa:	9233      	str	r2, [sp, #204]	@ 0xcc
10019cfc:	f8c8 1000 	str.w	r1, [r8]
10019d00:	f300 8403 	bgt.w	1001a50a <_svfprintf_r+0xaa2>
10019d04:	f108 0808 	add.w	r8, r8, #8
10019d08:	b183      	cbz	r3, 10019d2c <_svfprintf_r+0x2c4>
10019d0a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019d0c:	aa28      	add	r2, sp, #160	@ 0xa0
10019d0e:	3301      	adds	r3, #1
10019d10:	3402      	adds	r4, #2
10019d12:	f8c8 2000 	str.w	r2, [r8]
10019d16:	2b07      	cmp	r3, #7
10019d18:	f04f 0202 	mov.w	r2, #2
10019d1c:	9434      	str	r4, [sp, #208]	@ 0xd0
10019d1e:	9333      	str	r3, [sp, #204]	@ 0xcc
10019d20:	f8c8 2004 	str.w	r2, [r8, #4]
10019d24:	f300 83e5 	bgt.w	1001a4f2 <_svfprintf_r+0xa8a>
10019d28:	f108 0808 	add.w	r8, r8, #8
10019d2c:	2f80      	cmp	r7, #128	@ 0x80
10019d2e:	f000 82be 	beq.w	1001a2ae <_svfprintf_r+0x846>
10019d32:	9b08      	ldr	r3, [sp, #32]
10019d34:	eba3 060b 	sub.w	r6, r3, fp
10019d38:	2e00      	cmp	r6, #0
10019d3a:	f300 82fd 	bgt.w	1001a338 <_svfprintf_r+0x8d0>
10019d3e:	f419 7f80 	tst.w	r9, #256	@ 0x100
10019d42:	f040 8217 	bne.w	1001a174 <_svfprintf_r+0x70c>
10019d46:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10019d48:	f8c8 5000 	str.w	r5, [r8]
10019d4c:	3301      	adds	r3, #1
10019d4e:	445c      	add	r4, fp
10019d50:	2b07      	cmp	r3, #7
10019d52:	f8c8 b004 	str.w	fp, [r8, #4]
10019d56:	9434      	str	r4, [sp, #208]	@ 0xd0
10019d58:	9333      	str	r3, [sp, #204]	@ 0xcc
10019d5a:	f300 836a 	bgt.w	1001a432 <_svfprintf_r+0x9ca>
10019d5e:	f108 0808 	add.w	r8, r8, #8
10019d62:	f019 0f04 	tst.w	r9, #4
10019d66:	d005      	beq.n	10019d74 <_svfprintf_r+0x30c>
10019d68:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10019d6a:	9a06      	ldr	r2, [sp, #24]
10019d6c:	1a9d      	subs	r5, r3, r2
10019d6e:	2d00      	cmp	r5, #0
10019d70:	f300 83da 	bgt.w	1001a528 <_svfprintf_r+0xac0>
10019d74:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10019d78:	9906      	ldr	r1, [sp, #24]
10019d7a:	428a      	cmp	r2, r1
10019d7c:	bfac      	ite	ge
10019d7e:	189b      	addge	r3, r3, r2
10019d80:	185b      	addlt	r3, r3, r1
10019d82:	930a      	str	r3, [sp, #40]	@ 0x28
10019d84:	2c00      	cmp	r4, #0
10019d86:	f040 8316 	bne.w	1001a3b6 <_svfprintf_r+0x94e>
10019d8a:	2300      	movs	r3, #0
10019d8c:	9333      	str	r3, [sp, #204]	@ 0xcc
10019d8e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10019d90:	b11b      	cbz	r3, 10019d9a <_svfprintf_r+0x332>
10019d92:	990c      	ldr	r1, [sp, #48]	@ 0x30
10019d94:	9807      	ldr	r0, [sp, #28]
10019d96:	f7ff fd53 	bl	10019840 <_free_r>
10019d9a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019d9e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10019da0:	e692      	b.n	10019ac8 <_svfprintf_r+0x60>
10019da2:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019da6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019da8:	3307      	adds	r3, #7
10019daa:	f023 0307 	bic.w	r3, r3, #7
10019dae:	e8f3 6702 	ldrd	r6, r7, [r3], #8
10019db2:	930d      	str	r3, [sp, #52]	@ 0x34
10019db4:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10019db8:	9323      	str	r3, [sp, #140]	@ 0x8c
10019dba:	9622      	str	r6, [sp, #136]	@ 0x88
10019dbc:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
10019dc0:	4bb1      	ldr	r3, [pc, #708]	@ (1001a088 <_svfprintf_r+0x620>)
10019dc2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10019dc6:	4650      	mov	r0, sl
10019dc8:	4659      	mov	r1, fp
10019dca:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
10019dce:	f006 ff7d 	bl	10020ccc <__aeabi_dcmpun>
10019dd2:	2800      	cmp	r0, #0
10019dd4:	f040 8547 	bne.w	1001a866 <_svfprintf_r+0xdfe>
10019dd8:	4bab      	ldr	r3, [pc, #684]	@ (1001a088 <_svfprintf_r+0x620>)
10019dda:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10019dde:	4650      	mov	r0, sl
10019de0:	4659      	mov	r1, fp
10019de2:	f006 ff55 	bl	10020c90 <__aeabi_dcmple>
10019de6:	2800      	cmp	r0, #0
10019de8:	f040 853d 	bne.w	1001a866 <_svfprintf_r+0xdfe>
10019dec:	2200      	movs	r2, #0
10019dee:	2300      	movs	r3, #0
10019df0:	4630      	mov	r0, r6
10019df2:	4639      	mov	r1, r7
10019df4:	f006 ff42 	bl	10020c7c <__aeabi_dcmplt>
10019df8:	2800      	cmp	r0, #0
10019dfa:	f041 8053 	bne.w	1001aea4 <_svfprintf_r+0x143c>
10019dfe:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019e02:	4da2      	ldr	r5, [pc, #648]	@ (1001a08c <_svfprintf_r+0x624>)
10019e04:	4ba2      	ldr	r3, [pc, #648]	@ (1001a090 <_svfprintf_r+0x628>)
10019e06:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10019e0a:	990e      	ldr	r1, [sp, #56]	@ 0x38
10019e0c:	2947      	cmp	r1, #71	@ 0x47
10019e0e:	bfc8      	it	gt
10019e10:	461d      	movgt	r5, r3
10019e12:	2300      	movs	r3, #0
10019e14:	2103      	movs	r1, #3
10019e16:	930c      	str	r3, [sp, #48]	@ 0x30
10019e18:	9106      	str	r1, [sp, #24]
10019e1a:	468b      	mov	fp, r1
10019e1c:	9308      	str	r3, [sp, #32]
10019e1e:	9314      	str	r3, [sp, #80]	@ 0x50
10019e20:	9310      	str	r3, [sp, #64]	@ 0x40
10019e22:	9312      	str	r3, [sp, #72]	@ 0x48
10019e24:	2a00      	cmp	r2, #0
10019e26:	f43f af4d 	beq.w	10019cc4 <_svfprintf_r+0x25c>
10019e2a:	9b06      	ldr	r3, [sp, #24]
10019e2c:	3301      	adds	r3, #1
10019e2e:	9306      	str	r3, [sp, #24]
10019e30:	e748      	b.n	10019cc4 <_svfprintf_r+0x25c>
10019e32:	2e10      	cmp	r6, #16
10019e34:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10019e36:	f341 8279 	ble.w	1001b32c <_svfprintf_r+0x18c4>
10019e3a:	4896      	ldr	r0, [pc, #600]	@ (1001a094 <_svfprintf_r+0x62c>)
10019e3c:	9521      	str	r5, [sp, #132]	@ 0x84
10019e3e:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
10019e42:	4621      	mov	r1, r4
10019e44:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10019e46:	9c07      	ldr	r4, [sp, #28]
10019e48:	9015      	str	r0, [sp, #84]	@ 0x54
10019e4a:	f04f 0a10 	mov.w	sl, #16
10019e4e:	4607      	mov	r7, r0
10019e50:	e004      	b.n	10019e5c <_svfprintf_r+0x3f4>
10019e52:	3e10      	subs	r6, #16
10019e54:	2e10      	cmp	r6, #16
10019e56:	f108 0808 	add.w	r8, r8, #8
10019e5a:	dd16      	ble.n	10019e8a <_svfprintf_r+0x422>
10019e5c:	3201      	adds	r2, #1
10019e5e:	3110      	adds	r1, #16
10019e60:	2a07      	cmp	r2, #7
10019e62:	e9c8 7a00 	strd	r7, sl, [r8]
10019e66:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10019e6a:	ddf2      	ble.n	10019e52 <_svfprintf_r+0x3ea>
10019e6c:	aa32      	add	r2, sp, #200	@ 0xc8
10019e6e:	4629      	mov	r1, r5
10019e70:	4620      	mov	r0, r4
10019e72:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10019e76:	f006 f8fd 	bl	10020074 <__ssprint_r>
10019e7a:	2800      	cmp	r0, #0
10019e7c:	f040 86f1 	bne.w	1001ac62 <_svfprintf_r+0x11fa>
10019e80:	3e10      	subs	r6, #16
10019e82:	2e10      	cmp	r6, #16
10019e84:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10019e88:	dce8      	bgt.n	10019e5c <_svfprintf_r+0x3f4>
10019e8a:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10019e8e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
10019e90:	460c      	mov	r4, r1
10019e92:	3201      	adds	r2, #1
10019e94:	9915      	ldr	r1, [sp, #84]	@ 0x54
10019e96:	f8c8 1000 	str.w	r1, [r8]
10019e9a:	4434      	add	r4, r6
10019e9c:	2a07      	cmp	r2, #7
10019e9e:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
10019ea2:	f8c8 6004 	str.w	r6, [r8, #4]
10019ea6:	f300 86cb 	bgt.w	1001ac40 <_svfprintf_r+0x11d8>
10019eaa:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019eae:	f108 0808 	add.w	r8, r8, #8
10019eb2:	e717      	b.n	10019ce4 <_svfprintf_r+0x27c>
10019eb4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10019eb6:	2b43      	cmp	r3, #67	@ 0x43
10019eb8:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019ebc:	f102 0404 	add.w	r4, r2, #4
10019ec0:	d003      	beq.n	10019eca <_svfprintf_r+0x462>
10019ec2:	f019 0f10 	tst.w	r9, #16
10019ec6:	f000 855d 	beq.w	1001a984 <_svfprintf_r+0xf1c>
10019eca:	2208      	movs	r2, #8
10019ecc:	2100      	movs	r1, #0
10019ece:	a830      	add	r0, sp, #192	@ 0xc0
10019ed0:	f7fd ffce 	bl	10017e70 <memset>
10019ed4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019ed6:	9807      	ldr	r0, [sp, #28]
10019ed8:	681a      	ldr	r2, [r3, #0]
10019eda:	ad45      	add	r5, sp, #276	@ 0x114
10019edc:	ab30      	add	r3, sp, #192	@ 0xc0
10019ede:	4629      	mov	r1, r5
10019ee0:	f7fe fc1a 	bl	10018718 <_wcrtomb_r>
10019ee4:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10019ee8:	4683      	mov	fp, r0
10019eea:	f001 8281 	beq.w	1001b3f0 <_svfprintf_r+0x1988>
10019eee:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10019ef2:	9306      	str	r3, [sp, #24]
10019ef4:	2200      	movs	r2, #0
10019ef6:	940d      	str	r4, [sp, #52]	@ 0x34
10019ef8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10019efc:	920c      	str	r2, [sp, #48]	@ 0x30
10019efe:	9208      	str	r2, [sp, #32]
10019f00:	9214      	str	r2, [sp, #80]	@ 0x50
10019f02:	9210      	str	r2, [sp, #64]	@ 0x40
10019f04:	9212      	str	r2, [sp, #72]	@ 0x48
10019f06:	e6dd      	b.n	10019cc4 <_svfprintf_r+0x25c>
10019f08:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10019f0a:	f856 5b04 	ldr.w	r5, [r6], #4
10019f0e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019f12:	2300      	movs	r3, #0
10019f14:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10019f18:	2d00      	cmp	r5, #0
10019f1a:	f000 8558 	beq.w	1001a9ce <_svfprintf_r+0xf66>
10019f1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10019f20:	2b53      	cmp	r3, #83	@ 0x53
10019f22:	f000 86ba 	beq.w	1001ac9a <_svfprintf_r+0x1232>
10019f26:	f019 0310 	ands.w	r3, r9, #16
10019f2a:	9312      	str	r3, [sp, #72]	@ 0x48
10019f2c:	f040 86b5 	bne.w	1001ac9a <_svfprintf_r+0x1232>
10019f30:	9b08      	ldr	r3, [sp, #32]
10019f32:	1c5a      	adds	r2, r3, #1
10019f34:	f001 8095 	beq.w	1001b062 <_svfprintf_r+0x15fa>
10019f38:	9912      	ldr	r1, [sp, #72]	@ 0x48
10019f3a:	461a      	mov	r2, r3
10019f3c:	4628      	mov	r0, r5
10019f3e:	f7fe fa7f 	bl	10018440 <memchr>
10019f42:	900c      	str	r0, [sp, #48]	@ 0x30
10019f44:	2800      	cmp	r0, #0
10019f46:	f001 82f0 	beq.w	1001b52a <_svfprintf_r+0x1ac2>
10019f4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10019f4c:	960d      	str	r6, [sp, #52]	@ 0x34
10019f4e:	eba3 0b05 	sub.w	fp, r3, r5
10019f52:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10019f54:	9308      	str	r3, [sp, #32]
10019f56:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10019f5a:	9314      	str	r3, [sp, #80]	@ 0x50
10019f5c:	9310      	str	r3, [sp, #64]	@ 0x40
10019f5e:	930c      	str	r3, [sp, #48]	@ 0x30
10019f60:	2373      	movs	r3, #115	@ 0x73
10019f62:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10019f66:	9106      	str	r1, [sp, #24]
10019f68:	930e      	str	r3, [sp, #56]	@ 0x38
10019f6a:	e75b      	b.n	10019e24 <_svfprintf_r+0x3bc>
10019f6c:	f019 0f20 	tst.w	r9, #32
10019f70:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019f74:	f000 80ed 	beq.w	1001a152 <_svfprintf_r+0x6ea>
10019f78:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019f7a:	3307      	adds	r3, #7
10019f7c:	f023 0307 	bic.w	r3, r3, #7
10019f80:	461a      	mov	r2, r3
10019f82:	6859      	ldr	r1, [r3, #4]
10019f84:	f852 3b08 	ldr.w	r3, [r2], #8
10019f88:	920d      	str	r2, [sp, #52]	@ 0x34
10019f8a:	460a      	mov	r2, r1
10019f8c:	2900      	cmp	r1, #0
10019f8e:	f2c0 841a 	blt.w	1001a7c6 <_svfprintf_r+0xd5e>
10019f92:	9908      	ldr	r1, [sp, #32]
10019f94:	3101      	adds	r1, #1
10019f96:	f000 829d 	beq.w	1001a4d4 <_svfprintf_r+0xa6c>
10019f9a:	ea53 0102 	orrs.w	r1, r3, r2
10019f9e:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10019fa2:	f040 8298 	bne.w	1001a4d6 <_svfprintf_r+0xa6e>
10019fa6:	9a08      	ldr	r2, [sp, #32]
10019fa8:	2a00      	cmp	r2, #0
10019faa:	f040 8299 	bne.w	1001a4e0 <_svfprintf_r+0xa78>
10019fae:	46a1      	mov	r9, r4
10019fb0:	4693      	mov	fp, r2
10019fb2:	ad5e      	add	r5, sp, #376	@ 0x178
10019fb4:	e152      	b.n	1001a25c <_svfprintf_r+0x7f4>
10019fb6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019fb8:	f853 2b04 	ldr.w	r2, [r3], #4
10019fbc:	920b      	str	r2, [sp, #44]	@ 0x2c
10019fbe:	2a00      	cmp	r2, #0
10019fc0:	f280 8425 	bge.w	1001a80e <_svfprintf_r+0xda6>
10019fc4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10019fc6:	930d      	str	r3, [sp, #52]	@ 0x34
10019fc8:	4252      	negs	r2, r2
10019fca:	920b      	str	r2, [sp, #44]	@ 0x2c
10019fcc:	7823      	ldrb	r3, [r4, #0]
10019fce:	f049 0904 	orr.w	r9, r9, #4
10019fd2:	e5a0      	b.n	10019b16 <_svfprintf_r+0xae>
10019fd4:	232b      	movs	r3, #43	@ 0x2b
10019fd6:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10019fda:	7823      	ldrb	r3, [r4, #0]
10019fdc:	e59b      	b.n	10019b16 <_svfprintf_r+0xae>
10019fde:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10019fe2:	f049 0910 	orr.w	r9, r9, #16
10019fe6:	f019 0220 	ands.w	r2, r9, #32
10019fea:	f000 83b5 	beq.w	1001a758 <_svfprintf_r+0xcf0>
10019fee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10019ff0:	3307      	adds	r3, #7
10019ff2:	f023 0307 	bic.w	r3, r3, #7
10019ff6:	4619      	mov	r1, r3
10019ff8:	685a      	ldr	r2, [r3, #4]
10019ffa:	f851 3b08 	ldr.w	r3, [r1], #8
10019ffe:	910d      	str	r1, [sp, #52]	@ 0x34
1001a000:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001a004:	2100      	movs	r1, #0
1001a006:	2000      	movs	r0, #0
1001a008:	9d08      	ldr	r5, [sp, #32]
1001a00a:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
1001a00e:	1c6f      	adds	r7, r5, #1
1001a010:	f000 810d 	beq.w	1001a22e <_svfprintf_r+0x7c6>
1001a014:	ea53 0002 	orrs.w	r0, r3, r2
1001a018:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
1001a01c:	f040 8106 	bne.w	1001a22c <_svfprintf_r+0x7c4>
1001a020:	2d00      	cmp	r5, #0
1001a022:	f040 8628 	bne.w	1001ac76 <_svfprintf_r+0x120e>
1001a026:	2900      	cmp	r1, #0
1001a028:	f040 83c9 	bne.w	1001a7be <_svfprintf_r+0xd56>
1001a02c:	f014 0b01 	ands.w	fp, r4, #1
1001a030:	f000 83f1 	beq.w	1001a816 <_svfprintf_r+0xdae>
1001a034:	2330      	movs	r3, #48	@ 0x30
1001a036:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001a03a:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001a03e:	e10d      	b.n	1001a25c <_svfprintf_r+0x7f4>
1001a040:	7823      	ldrb	r3, [r4, #0]
1001a042:	2b68      	cmp	r3, #104	@ 0x68
1001a044:	bf03      	ittte	eq
1001a046:	7863      	ldrbeq	r3, [r4, #1]
1001a048:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
1001a04c:	3401      	addeq	r4, #1
1001a04e:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
1001a052:	e560      	b.n	10019b16 <_svfprintf_r+0xae>
1001a054:	f019 0f20 	tst.w	r9, #32
1001a058:	940f      	str	r4, [sp, #60]	@ 0x3c
1001a05a:	f000 83e6 	beq.w	1001a82a <_svfprintf_r+0xdc2>
1001a05e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a060:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001a062:	681b      	ldr	r3, [r3, #0]
1001a064:	601a      	str	r2, [r3, #0]
1001a066:	17d2      	asrs	r2, r2, #31
1001a068:	605a      	str	r2, [r3, #4]
1001a06a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a06c:	3304      	adds	r3, #4
1001a06e:	930d      	str	r3, [sp, #52]	@ 0x34
1001a070:	e695      	b.n	10019d9e <_svfprintf_r+0x336>
1001a072:	7823      	ldrb	r3, [r4, #0]
1001a074:	2b6c      	cmp	r3, #108	@ 0x6c
1001a076:	bf03      	ittte	eq
1001a078:	7863      	ldrbeq	r3, [r4, #1]
1001a07a:	f049 0920 	orreq.w	r9, r9, #32
1001a07e:	3401      	addeq	r4, #1
1001a080:	f049 0910 	orrne.w	r9, r9, #16
1001a084:	e547      	b.n	10019b16 <_svfprintf_r+0xae>
1001a086:	bf00      	nop
1001a088:	7fefffff 	.word	0x7fefffff
1001a08c:	10023864 	.word	0x10023864
1001a090:	10023868 	.word	0x10023868
1001a094:	10023ab4 	.word	0x10023ab4
1001a098:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001a09a:	940f      	str	r4, [sp, #60]	@ 0x3c
1001a09c:	f852 3b04 	ldr.w	r3, [r2], #4
1001a0a0:	920d      	str	r2, [sp, #52]	@ 0x34
1001a0a2:	f647 0230 	movw	r2, #30768	@ 0x7830
1001a0a6:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
1001a0aa:	2078      	movs	r0, #120	@ 0x78
1001a0ac:	4aa8      	ldr	r2, [pc, #672]	@ (1001a350 <_svfprintf_r+0x8e8>)
1001a0ae:	9219      	str	r2, [sp, #100]	@ 0x64
1001a0b0:	f049 0402 	orr.w	r4, r9, #2
1001a0b4:	2200      	movs	r2, #0
1001a0b6:	2102      	movs	r1, #2
1001a0b8:	900e      	str	r0, [sp, #56]	@ 0x38
1001a0ba:	e7a4      	b.n	1001a006 <_svfprintf_r+0x59e>
1001a0bc:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a0c0:	f049 0410 	orr.w	r4, r9, #16
1001a0c4:	f014 0220 	ands.w	r2, r4, #32
1001a0c8:	f000 8355 	beq.w	1001a776 <_svfprintf_r+0xd0e>
1001a0cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a0ce:	3307      	adds	r3, #7
1001a0d0:	f023 0307 	bic.w	r3, r3, #7
1001a0d4:	4619      	mov	r1, r3
1001a0d6:	685a      	ldr	r2, [r3, #4]
1001a0d8:	f851 3b08 	ldr.w	r3, [r1], #8
1001a0dc:	910d      	str	r1, [sp, #52]	@ 0x34
1001a0de:	2101      	movs	r1, #1
1001a0e0:	e791      	b.n	1001a006 <_svfprintf_r+0x59e>
1001a0e2:	7823      	ldrb	r3, [r4, #0]
1001a0e4:	f049 0908 	orr.w	r9, r9, #8
1001a0e8:	e515      	b.n	10019b16 <_svfprintf_r+0xae>
1001a0ea:	7823      	ldrb	r3, [r4, #0]
1001a0ec:	f049 0901 	orr.w	r9, r9, #1
1001a0f0:	e511      	b.n	10019b16 <_svfprintf_r+0xae>
1001a0f2:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001a0f6:	7823      	ldrb	r3, [r4, #0]
1001a0f8:	2a00      	cmp	r2, #0
1001a0fa:	f47f ad0c 	bne.w	10019b16 <_svfprintf_r+0xae>
1001a0fe:	2220      	movs	r2, #32
1001a100:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001a104:	e507      	b.n	10019b16 <_svfprintf_r+0xae>
1001a106:	7823      	ldrb	r3, [r4, #0]
1001a108:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
1001a10c:	e503      	b.n	10019b16 <_svfprintf_r+0xae>
1001a10e:	4621      	mov	r1, r4
1001a110:	f811 3b01 	ldrb.w	r3, [r1], #1
1001a114:	2b2a      	cmp	r3, #42	@ 0x2a
1001a116:	f001 822b 	beq.w	1001b570 <_svfprintf_r+0x1b08>
1001a11a:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001a11e:	2a09      	cmp	r2, #9
1001a120:	460c      	mov	r4, r1
1001a122:	bf98      	it	ls
1001a124:	2100      	movls	r1, #0
1001a126:	f201 8132 	bhi.w	1001b38e <_svfprintf_r+0x1926>
1001a12a:	f814 3b01 	ldrb.w	r3, [r4], #1
1001a12e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001a132:	eb02 0141 	add.w	r1, r2, r1, lsl #1
1001a136:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001a13a:	2a09      	cmp	r2, #9
1001a13c:	d9f5      	bls.n	1001a12a <_svfprintf_r+0x6c2>
1001a13e:	9108      	str	r1, [sp, #32]
1001a140:	e4ea      	b.n	10019b18 <_svfprintf_r+0xb0>
1001a142:	f049 0910 	orr.w	r9, r9, #16
1001a146:	f019 0f20 	tst.w	r9, #32
1001a14a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a14e:	f47f af13 	bne.w	10019f78 <_svfprintf_r+0x510>
1001a152:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001a154:	f019 0f10 	tst.w	r9, #16
1001a158:	f852 3b04 	ldr.w	r3, [r2], #4
1001a15c:	920d      	str	r2, [sp, #52]	@ 0x34
1001a15e:	f040 8360 	bne.w	1001a822 <_svfprintf_r+0xdba>
1001a162:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001a166:	f000 8358 	beq.w	1001a81a <_svfprintf_r+0xdb2>
1001a16a:	f343 32c0 	sbfx	r2, r3, #15, #1
1001a16e:	4611      	mov	r1, r2
1001a170:	b21b      	sxth	r3, r3
1001a172:	e70b      	b.n	10019f8c <_svfprintf_r+0x524>
1001a174:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a176:	2b65      	cmp	r3, #101	@ 0x65
1001a178:	f340 8166 	ble.w	1001a448 <_svfprintf_r+0x9e0>
1001a17c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001a180:	2200      	movs	r2, #0
1001a182:	2300      	movs	r3, #0
1001a184:	f006 fd70 	bl	10020c68 <__aeabi_dcmpeq>
1001a188:	2800      	cmp	r0, #0
1001a18a:	f000 8211 	beq.w	1001a5b0 <_svfprintf_r+0xb48>
1001a18e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a190:	4a70      	ldr	r2, [pc, #448]	@ (1001a354 <_svfprintf_r+0x8ec>)
1001a192:	f8c8 2000 	str.w	r2, [r8]
1001a196:	3301      	adds	r3, #1
1001a198:	3401      	adds	r4, #1
1001a19a:	2201      	movs	r2, #1
1001a19c:	2b07      	cmp	r3, #7
1001a19e:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a1a0:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a1a2:	f8c8 2004 	str.w	r2, [r8, #4]
1001a1a6:	f300 856b 	bgt.w	1001ac80 <_svfprintf_r+0x1218>
1001a1aa:	f108 0808 	add.w	r8, r8, #8
1001a1ae:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001a1b0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001a1b2:	4293      	cmp	r3, r2
1001a1b4:	f280 8326 	bge.w	1001a804 <_svfprintf_r+0xd9c>
1001a1b8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a1ba:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a1bc:	441c      	add	r4, r3
1001a1be:	e9c8 2300 	strd	r2, r3, [r8]
1001a1c2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a1c4:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a1c6:	3301      	adds	r3, #1
1001a1c8:	2b07      	cmp	r3, #7
1001a1ca:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a1cc:	f300 83e4 	bgt.w	1001a998 <_svfprintf_r+0xf30>
1001a1d0:	f108 0808 	add.w	r8, r8, #8
1001a1d4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a1d6:	1e5d      	subs	r5, r3, #1
1001a1d8:	2d00      	cmp	r5, #0
1001a1da:	f77f adc2 	ble.w	10019d62 <_svfprintf_r+0x2fa>
1001a1de:	2d10      	cmp	r5, #16
1001a1e0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a1e2:	f340 85ae 	ble.w	1001ad42 <_svfprintf_r+0x12da>
1001a1e6:	4f5c      	ldr	r7, [pc, #368]	@ (1001a358 <_svfprintf_r+0x8f0>)
1001a1e8:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001a1ec:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001a1f0:	9715      	str	r7, [sp, #84]	@ 0x54
1001a1f2:	2610      	movs	r6, #16
1001a1f4:	e005      	b.n	1001a202 <_svfprintf_r+0x79a>
1001a1f6:	f108 0808 	add.w	r8, r8, #8
1001a1fa:	3d10      	subs	r5, #16
1001a1fc:	2d10      	cmp	r5, #16
1001a1fe:	f340 85a2 	ble.w	1001ad46 <_svfprintf_r+0x12de>
1001a202:	3301      	adds	r3, #1
1001a204:	3410      	adds	r4, #16
1001a206:	2b07      	cmp	r3, #7
1001a208:	e9c8 7600 	strd	r7, r6, [r8]
1001a20c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a210:	ddf1      	ble.n	1001a1f6 <_svfprintf_r+0x78e>
1001a212:	aa32      	add	r2, sp, #200	@ 0xc8
1001a214:	4651      	mov	r1, sl
1001a216:	4658      	mov	r0, fp
1001a218:	f005 ff2c 	bl	10020074 <__ssprint_r>
1001a21c:	2800      	cmp	r0, #0
1001a21e:	f040 82c0 	bne.w	1001a7a2 <_svfprintf_r+0xd3a>
1001a222:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001a226:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a22a:	e7e6      	b.n	1001a1fa <_svfprintf_r+0x792>
1001a22c:	464c      	mov	r4, r9
1001a22e:	2901      	cmp	r1, #1
1001a230:	f000 8151 	beq.w	1001a4d6 <_svfprintf_r+0xa6e>
1001a234:	2902      	cmp	r1, #2
1001a236:	ad5e      	add	r5, sp, #376	@ 0x178
1001a238:	d11e      	bne.n	1001a278 <_svfprintf_r+0x810>
1001a23a:	9819      	ldr	r0, [sp, #100]	@ 0x64
1001a23c:	f003 010f 	and.w	r1, r3, #15
1001a240:	091b      	lsrs	r3, r3, #4
1001a242:	5c41      	ldrb	r1, [r0, r1]
1001a244:	f805 1d01 	strb.w	r1, [r5, #-1]!
1001a248:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
1001a24c:	0912      	lsrs	r2, r2, #4
1001a24e:	ea53 0102 	orrs.w	r1, r3, r2
1001a252:	d1f3      	bne.n	1001a23c <_svfprintf_r+0x7d4>
1001a254:	ab5e      	add	r3, sp, #376	@ 0x178
1001a256:	46a1      	mov	r9, r4
1001a258:	eba3 0b05 	sub.w	fp, r3, r5
1001a25c:	9908      	ldr	r1, [sp, #32]
1001a25e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001a262:	4559      	cmp	r1, fp
1001a264:	f04f 0300 	mov.w	r3, #0
1001a268:	bfb8      	it	lt
1001a26a:	4659      	movlt	r1, fp
1001a26c:	930c      	str	r3, [sp, #48]	@ 0x30
1001a26e:	9106      	str	r1, [sp, #24]
1001a270:	9314      	str	r3, [sp, #80]	@ 0x50
1001a272:	9310      	str	r3, [sp, #64]	@ 0x40
1001a274:	9312      	str	r3, [sp, #72]	@ 0x48
1001a276:	e5d5      	b.n	10019e24 <_svfprintf_r+0x3bc>
1001a278:	f003 0107 	and.w	r1, r3, #7
1001a27c:	08db      	lsrs	r3, r3, #3
1001a27e:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
1001a282:	08d2      	lsrs	r2, r2, #3
1001a284:	3130      	adds	r1, #48	@ 0x30
1001a286:	ea53 0602 	orrs.w	r6, r3, r2
1001a28a:	4628      	mov	r0, r5
1001a28c:	f805 1d01 	strb.w	r1, [r5, #-1]!
1001a290:	d1f2      	bne.n	1001a278 <_svfprintf_r+0x810>
1001a292:	07e6      	lsls	r6, r4, #31
1001a294:	d5de      	bpl.n	1001a254 <_svfprintf_r+0x7ec>
1001a296:	2930      	cmp	r1, #48	@ 0x30
1001a298:	d0dc      	beq.n	1001a254 <_svfprintf_r+0x7ec>
1001a29a:	2330      	movs	r3, #48	@ 0x30
1001a29c:	3802      	subs	r0, #2
1001a29e:	f805 3c01 	strb.w	r3, [r5, #-1]
1001a2a2:	ab5e      	add	r3, sp, #376	@ 0x178
1001a2a4:	46a1      	mov	r9, r4
1001a2a6:	eba3 0b00 	sub.w	fp, r3, r0
1001a2aa:	4605      	mov	r5, r0
1001a2ac:	e7d6      	b.n	1001a25c <_svfprintf_r+0x7f4>
1001a2ae:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001a2b0:	9a06      	ldr	r2, [sp, #24]
1001a2b2:	1a9e      	subs	r6, r3, r2
1001a2b4:	2e00      	cmp	r6, #0
1001a2b6:	f77f ad3c 	ble.w	10019d32 <_svfprintf_r+0x2ca>
1001a2ba:	2e10      	cmp	r6, #16
1001a2bc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a2be:	f341 80a1 	ble.w	1001b404 <_svfprintf_r+0x199c>
1001a2c2:	4825      	ldr	r0, [pc, #148]	@ (1001a358 <_svfprintf_r+0x8f0>)
1001a2c4:	f8dd a01c 	ldr.w	sl, [sp, #28]
1001a2c8:	9015      	str	r0, [sp, #84]	@ 0x54
1001a2ca:	4621      	mov	r1, r4
1001a2cc:	2710      	movs	r7, #16
1001a2ce:	461a      	mov	r2, r3
1001a2d0:	4604      	mov	r4, r0
1001a2d2:	e004      	b.n	1001a2de <_svfprintf_r+0x876>
1001a2d4:	3e10      	subs	r6, #16
1001a2d6:	2e10      	cmp	r6, #16
1001a2d8:	f108 0808 	add.w	r8, r8, #8
1001a2dc:	dd16      	ble.n	1001a30c <_svfprintf_r+0x8a4>
1001a2de:	3201      	adds	r2, #1
1001a2e0:	3110      	adds	r1, #16
1001a2e2:	2a07      	cmp	r2, #7
1001a2e4:	e9c8 4700 	strd	r4, r7, [r8]
1001a2e8:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
1001a2ec:	ddf2      	ble.n	1001a2d4 <_svfprintf_r+0x86c>
1001a2ee:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a2f0:	aa32      	add	r2, sp, #200	@ 0xc8
1001a2f2:	4650      	mov	r0, sl
1001a2f4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a2f8:	f005 febc 	bl	10020074 <__ssprint_r>
1001a2fc:	2800      	cmp	r0, #0
1001a2fe:	f040 84b2 	bne.w	1001ac66 <_svfprintf_r+0x11fe>
1001a302:	3e10      	subs	r6, #16
1001a304:	2e10      	cmp	r6, #16
1001a306:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
1001a30a:	dce8      	bgt.n	1001a2de <_svfprintf_r+0x876>
1001a30c:	460c      	mov	r4, r1
1001a30e:	4613      	mov	r3, r2
1001a310:	3301      	adds	r3, #1
1001a312:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001a314:	f8c8 2000 	str.w	r2, [r8]
1001a318:	4434      	add	r4, r6
1001a31a:	2b07      	cmp	r3, #7
1001a31c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a320:	f8c8 6004 	str.w	r6, [r8, #4]
1001a324:	f300 851d 	bgt.w	1001ad62 <_svfprintf_r+0x12fa>
1001a328:	9b08      	ldr	r3, [sp, #32]
1001a32a:	eba3 060b 	sub.w	r6, r3, fp
1001a32e:	2e00      	cmp	r6, #0
1001a330:	f108 0808 	add.w	r8, r8, #8
1001a334:	f77f ad03 	ble.w	10019d3e <_svfprintf_r+0x2d6>
1001a338:	4a07      	ldr	r2, [pc, #28]	@ (1001a358 <_svfprintf_r+0x8f0>)
1001a33a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a33c:	9215      	str	r2, [sp, #84]	@ 0x54
1001a33e:	2e10      	cmp	r6, #16
1001a340:	dd2a      	ble.n	1001a398 <_svfprintf_r+0x930>
1001a342:	4622      	mov	r2, r4
1001a344:	9f07      	ldr	r7, [sp, #28]
1001a346:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1001a348:	f04f 0a10 	mov.w	sl, #16
1001a34c:	e00b      	b.n	1001a366 <_svfprintf_r+0x8fe>
1001a34e:	bf00      	nop
1001a350:	100213b0 	.word	0x100213b0
1001a354:	10023890 	.word	0x10023890
1001a358:	10023aa4 	.word	0x10023aa4
1001a35c:	3e10      	subs	r6, #16
1001a35e:	2e10      	cmp	r6, #16
1001a360:	f108 0808 	add.w	r8, r8, #8
1001a364:	dd17      	ble.n	1001a396 <_svfprintf_r+0x92e>
1001a366:	3301      	adds	r3, #1
1001a368:	498e      	ldr	r1, [pc, #568]	@ (1001a5a4 <_svfprintf_r+0xb3c>)
1001a36a:	3210      	adds	r2, #16
1001a36c:	2b07      	cmp	r3, #7
1001a36e:	e9c8 1a00 	strd	r1, sl, [r8]
1001a372:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
1001a376:	ddf1      	ble.n	1001a35c <_svfprintf_r+0x8f4>
1001a378:	aa32      	add	r2, sp, #200	@ 0xc8
1001a37a:	4621      	mov	r1, r4
1001a37c:	4638      	mov	r0, r7
1001a37e:	f005 fe79 	bl	10020074 <__ssprint_r>
1001a382:	2800      	cmp	r0, #0
1001a384:	f040 820c 	bne.w	1001a7a0 <_svfprintf_r+0xd38>
1001a388:	3e10      	subs	r6, #16
1001a38a:	2e10      	cmp	r6, #16
1001a38c:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
1001a390:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a394:	dce7      	bgt.n	1001a366 <_svfprintf_r+0x8fe>
1001a396:	4614      	mov	r4, r2
1001a398:	3301      	adds	r3, #1
1001a39a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001a39c:	f8c8 2000 	str.w	r2, [r8]
1001a3a0:	4434      	add	r4, r6
1001a3a2:	2b07      	cmp	r3, #7
1001a3a4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a3a8:	f8c8 6004 	str.w	r6, [r8, #4]
1001a3ac:	f300 81c7 	bgt.w	1001a73e <_svfprintf_r+0xcd6>
1001a3b0:	f108 0808 	add.w	r8, r8, #8
1001a3b4:	e4c3      	b.n	10019d3e <_svfprintf_r+0x2d6>
1001a3b6:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a3b8:	9807      	ldr	r0, [sp, #28]
1001a3ba:	aa32      	add	r2, sp, #200	@ 0xc8
1001a3bc:	f005 fe5a 	bl	10020074 <__ssprint_r>
1001a3c0:	2800      	cmp	r0, #0
1001a3c2:	f43f ace2 	beq.w	10019d8a <_svfprintf_r+0x322>
1001a3c6:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001a3ca:	e1ea      	b.n	1001a7a2 <_svfprintf_r+0xd3a>
1001a3cc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a3ce:	4976      	ldr	r1, [pc, #472]	@ (1001a5a8 <_svfprintf_r+0xb40>)
1001a3d0:	f8c8 1000 	str.w	r1, [r8]
1001a3d4:	3301      	adds	r3, #1
1001a3d6:	3401      	adds	r4, #1
1001a3d8:	2101      	movs	r1, #1
1001a3da:	2b07      	cmp	r3, #7
1001a3dc:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a3de:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a3e0:	f8c8 1004 	str.w	r1, [r8, #4]
1001a3e4:	f300 8574 	bgt.w	1001aed0 <_svfprintf_r+0x1468>
1001a3e8:	f108 0808 	add.w	r8, r8, #8
1001a3ec:	2a00      	cmp	r2, #0
1001a3ee:	f040 84e6 	bne.w	1001adbe <_svfprintf_r+0x1356>
1001a3f2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001a3f4:	f009 0301 	and.w	r3, r9, #1
1001a3f8:	4313      	orrs	r3, r2
1001a3fa:	f43f acb2 	beq.w	10019d62 <_svfprintf_r+0x2fa>
1001a3fe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a400:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a402:	441c      	add	r4, r3
1001a404:	e9c8 2300 	strd	r2, r3, [r8]
1001a408:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a40a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a40c:	3301      	adds	r3, #1
1001a40e:	2b07      	cmp	r3, #7
1001a410:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a412:	f300 8645 	bgt.w	1001b0a0 <_svfprintf_r+0x1638>
1001a416:	f108 0808 	add.w	r8, r8, #8
1001a41a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001a41c:	f8c8 5000 	str.w	r5, [r8]
1001a420:	3301      	adds	r3, #1
1001a422:	4414      	add	r4, r2
1001a424:	2b07      	cmp	r3, #7
1001a426:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a42a:	f8c8 2004 	str.w	r2, [r8, #4]
1001a42e:	f77f ac96 	ble.w	10019d5e <_svfprintf_r+0x2f6>
1001a432:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a434:	9807      	ldr	r0, [sp, #28]
1001a436:	aa32      	add	r2, sp, #200	@ 0xc8
1001a438:	f005 fe1c 	bl	10020074 <__ssprint_r>
1001a43c:	2800      	cmp	r0, #0
1001a43e:	d1c2      	bne.n	1001a3c6 <_svfprintf_r+0x95e>
1001a440:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a442:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a446:	e48c      	b.n	10019d62 <_svfprintf_r+0x2fa>
1001a448:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a44a:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
1001a44c:	2b01      	cmp	r3, #1
1001a44e:	f104 0401 	add.w	r4, r4, #1
1001a452:	f106 0601 	add.w	r6, r6, #1
1001a456:	f108 0708 	add.w	r7, r8, #8
1001a45a:	f340 8129 	ble.w	1001a6b0 <_svfprintf_r+0xc48>
1001a45e:	2301      	movs	r3, #1
1001a460:	2e07      	cmp	r6, #7
1001a462:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a466:	f8c8 5000 	str.w	r5, [r8]
1001a46a:	f8c8 3004 	str.w	r3, [r8, #4]
1001a46e:	f300 81b1 	bgt.w	1001a7d4 <_svfprintf_r+0xd6c>
1001a472:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a474:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a476:	3601      	adds	r6, #1
1001a478:	441c      	add	r4, r3
1001a47a:	2e07      	cmp	r6, #7
1001a47c:	e9c7 2300 	strd	r2, r3, [r7]
1001a480:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a484:	f300 81b2 	bgt.w	1001a7ec <_svfprintf_r+0xd84>
1001a488:	3708      	adds	r7, #8
1001a48a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a48c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001a490:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
1001a494:	2200      	movs	r2, #0
1001a496:	2300      	movs	r3, #0
1001a498:	f006 fbe6 	bl	10020c68 <__aeabi_dcmpeq>
1001a49c:	2800      	cmp	r0, #0
1001a49e:	f040 8121 	bne.w	1001a6e4 <_svfprintf_r+0xc7c>
1001a4a2:	3601      	adds	r6, #1
1001a4a4:	3501      	adds	r5, #1
1001a4a6:	4444      	add	r4, r8
1001a4a8:	2e07      	cmp	r6, #7
1001a4aa:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a4ae:	603d      	str	r5, [r7, #0]
1001a4b0:	f8c7 8004 	str.w	r8, [r7, #4]
1001a4b4:	f300 810a 	bgt.w	1001a6cc <_svfprintf_r+0xc64>
1001a4b8:	3708      	adds	r7, #8
1001a4ba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001a4bc:	607b      	str	r3, [r7, #4]
1001a4be:	3601      	adds	r6, #1
1001a4c0:	441c      	add	r4, r3
1001a4c2:	2e07      	cmp	r6, #7
1001a4c4:	ab2c      	add	r3, sp, #176	@ 0xb0
1001a4c6:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a4ca:	603b      	str	r3, [r7, #0]
1001a4cc:	dcb1      	bgt.n	1001a432 <_svfprintf_r+0x9ca>
1001a4ce:	f107 0808 	add.w	r8, r7, #8
1001a4d2:	e446      	b.n	10019d62 <_svfprintf_r+0x2fa>
1001a4d4:	464c      	mov	r4, r9
1001a4d6:	2b0a      	cmp	r3, #10
1001a4d8:	f172 0100 	sbcs.w	r1, r2, #0
1001a4dc:	f080 8353 	bcs.w	1001ab86 <_svfprintf_r+0x111e>
1001a4e0:	3330      	adds	r3, #48	@ 0x30
1001a4e2:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001a4e6:	46a1      	mov	r9, r4
1001a4e8:	f04f 0b01 	mov.w	fp, #1
1001a4ec:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001a4f0:	e6b4      	b.n	1001a25c <_svfprintf_r+0x7f4>
1001a4f2:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a4f4:	9807      	ldr	r0, [sp, #28]
1001a4f6:	aa32      	add	r2, sp, #200	@ 0xc8
1001a4f8:	f005 fdbc 	bl	10020074 <__ssprint_r>
1001a4fc:	2800      	cmp	r0, #0
1001a4fe:	f47f af62 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001a502:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a504:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a508:	e410      	b.n	10019d2c <_svfprintf_r+0x2c4>
1001a50a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a50c:	9807      	ldr	r0, [sp, #28]
1001a50e:	9315      	str	r3, [sp, #84]	@ 0x54
1001a510:	aa32      	add	r2, sp, #200	@ 0xc8
1001a512:	f005 fdaf 	bl	10020074 <__ssprint_r>
1001a516:	2800      	cmp	r0, #0
1001a518:	f47f af55 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001a51c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a51e:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001a520:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a524:	f7ff bbf0 	b.w	10019d08 <_svfprintf_r+0x2a0>
1001a528:	2d10      	cmp	r5, #16
1001a52a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a52c:	f340 8733 	ble.w	1001b396 <_svfprintf_r+0x192e>
1001a530:	4f1e      	ldr	r7, [pc, #120]	@ (1001a5ac <_svfprintf_r+0xb44>)
1001a532:	f8dd 901c 	ldr.w	r9, [sp, #28]
1001a536:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001a53a:	9715      	str	r7, [sp, #84]	@ 0x54
1001a53c:	2610      	movs	r6, #16
1001a53e:	e004      	b.n	1001a54a <_svfprintf_r+0xae2>
1001a540:	3d10      	subs	r5, #16
1001a542:	2d10      	cmp	r5, #16
1001a544:	f108 0808 	add.w	r8, r8, #8
1001a548:	dd16      	ble.n	1001a578 <_svfprintf_r+0xb10>
1001a54a:	3301      	adds	r3, #1
1001a54c:	3410      	adds	r4, #16
1001a54e:	2b07      	cmp	r3, #7
1001a550:	e9c8 7600 	strd	r7, r6, [r8]
1001a554:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a558:	ddf2      	ble.n	1001a540 <_svfprintf_r+0xad8>
1001a55a:	aa32      	add	r2, sp, #200	@ 0xc8
1001a55c:	4651      	mov	r1, sl
1001a55e:	4648      	mov	r0, r9
1001a560:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a564:	f005 fd86 	bl	10020074 <__ssprint_r>
1001a568:	2800      	cmp	r0, #0
1001a56a:	f040 83e8 	bne.w	1001ad3e <_svfprintf_r+0x12d6>
1001a56e:	3d10      	subs	r5, #16
1001a570:	2d10      	cmp	r5, #16
1001a572:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001a576:	dce8      	bgt.n	1001a54a <_svfprintf_r+0xae2>
1001a578:	3301      	adds	r3, #1
1001a57a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001a57c:	442c      	add	r4, r5
1001a57e:	2b07      	cmp	r3, #7
1001a580:	e9c8 2500 	strd	r2, r5, [r8]
1001a584:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a588:	f77f abf4 	ble.w	10019d74 <_svfprintf_r+0x30c>
1001a58c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a58e:	9807      	ldr	r0, [sp, #28]
1001a590:	aa32      	add	r2, sp, #200	@ 0xc8
1001a592:	f005 fd6f 	bl	10020074 <__ssprint_r>
1001a596:	2800      	cmp	r0, #0
1001a598:	f47f af15 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001a59c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a59e:	f7ff bbe9 	b.w	10019d74 <_svfprintf_r+0x30c>
1001a5a2:	bf00      	nop
1001a5a4:	10023aa4 	.word	0x10023aa4
1001a5a8:	10023890 	.word	0x10023890
1001a5ac:	10023ab4 	.word	0x10023ab4
1001a5b0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001a5b2:	2a00      	cmp	r2, #0
1001a5b4:	f77f af0a 	ble.w	1001a3cc <_svfprintf_r+0x964>
1001a5b8:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
1001a5bc:	429f      	cmp	r7, r3
1001a5be:	bfa8      	it	ge
1001a5c0:	461f      	movge	r7, r3
1001a5c2:	2f00      	cmp	r7, #0
1001a5c4:	eb05 0b03 	add.w	fp, r5, r3
1001a5c8:	dd0b      	ble.n	1001a5e2 <_svfprintf_r+0xb7a>
1001a5ca:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a5cc:	3301      	adds	r3, #1
1001a5ce:	443c      	add	r4, r7
1001a5d0:	2b07      	cmp	r3, #7
1001a5d2:	e9c8 5700 	strd	r5, r7, [r8]
1001a5d6:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a5d8:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a5da:	f300 8642 	bgt.w	1001b262 <_svfprintf_r+0x17fa>
1001a5de:	f108 0808 	add.w	r8, r8, #8
1001a5e2:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001a5e4:	2f00      	cmp	r7, #0
1001a5e6:	bfa8      	it	ge
1001a5e8:	1bf6      	subge	r6, r6, r7
1001a5ea:	2e00      	cmp	r6, #0
1001a5ec:	f300 8200 	bgt.w	1001a9f0 <_svfprintf_r+0xf88>
1001a5f0:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
1001a5f4:	f419 6f80 	tst.w	r9, #1024	@ 0x400
1001a5f8:	44aa      	add	sl, r5
1001a5fa:	f040 8221 	bne.w	1001aa40 <_svfprintf_r+0xfd8>
1001a5fe:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001a600:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a602:	429d      	cmp	r5, r3
1001a604:	db03      	blt.n	1001a60e <_svfprintf_r+0xba6>
1001a606:	f019 0f01 	tst.w	r9, #1
1001a60a:	f000 846f 	beq.w	1001aeec <_svfprintf_r+0x1484>
1001a60e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001a610:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001a612:	441c      	add	r4, r3
1001a614:	e9c8 2300 	strd	r2, r3, [r8]
1001a618:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a61a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a61c:	3301      	adds	r3, #1
1001a61e:	2b07      	cmp	r3, #7
1001a620:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a622:	f300 8675 	bgt.w	1001b310 <_svfprintf_r+0x18a8>
1001a626:	f108 0808 	add.w	r8, r8, #8
1001a62a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a62c:	ebab 060a 	sub.w	r6, fp, sl
1001a630:	1b5d      	subs	r5, r3, r5
1001a632:	42ae      	cmp	r6, r5
1001a634:	bfa8      	it	ge
1001a636:	462e      	movge	r6, r5
1001a638:	2e00      	cmp	r6, #0
1001a63a:	dd0d      	ble.n	1001a658 <_svfprintf_r+0xbf0>
1001a63c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a63e:	f8c8 a000 	str.w	sl, [r8]
1001a642:	3301      	adds	r3, #1
1001a644:	4434      	add	r4, r6
1001a646:	2b07      	cmp	r3, #7
1001a648:	f8c8 6004 	str.w	r6, [r8, #4]
1001a64c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001a64e:	9333      	str	r3, [sp, #204]	@ 0xcc
1001a650:	f300 8670 	bgt.w	1001b334 <_svfprintf_r+0x18cc>
1001a654:	f108 0808 	add.w	r8, r8, #8
1001a658:	2e00      	cmp	r6, #0
1001a65a:	bfa8      	it	ge
1001a65c:	1bad      	subge	r5, r5, r6
1001a65e:	2d00      	cmp	r5, #0
1001a660:	f77f ab7f 	ble.w	10019d62 <_svfprintf_r+0x2fa>
1001a664:	2d10      	cmp	r5, #16
1001a666:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a668:	f340 836b 	ble.w	1001ad42 <_svfprintf_r+0x12da>
1001a66c:	4fad      	ldr	r7, [pc, #692]	@ (1001a924 <_svfprintf_r+0xebc>)
1001a66e:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001a672:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001a676:	9715      	str	r7, [sp, #84]	@ 0x54
1001a678:	2610      	movs	r6, #16
1001a67a:	e005      	b.n	1001a688 <_svfprintf_r+0xc20>
1001a67c:	f108 0808 	add.w	r8, r8, #8
1001a680:	3d10      	subs	r5, #16
1001a682:	2d10      	cmp	r5, #16
1001a684:	f340 835f 	ble.w	1001ad46 <_svfprintf_r+0x12de>
1001a688:	3301      	adds	r3, #1
1001a68a:	3410      	adds	r4, #16
1001a68c:	2b07      	cmp	r3, #7
1001a68e:	e9c8 7600 	strd	r7, r6, [r8]
1001a692:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001a696:	ddf1      	ble.n	1001a67c <_svfprintf_r+0xc14>
1001a698:	aa32      	add	r2, sp, #200	@ 0xc8
1001a69a:	4651      	mov	r1, sl
1001a69c:	4658      	mov	r0, fp
1001a69e:	f005 fce9 	bl	10020074 <__ssprint_r>
1001a6a2:	2800      	cmp	r0, #0
1001a6a4:	d17d      	bne.n	1001a7a2 <_svfprintf_r+0xd3a>
1001a6a6:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001a6aa:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a6ae:	e7e7      	b.n	1001a680 <_svfprintf_r+0xc18>
1001a6b0:	f019 0f01 	tst.w	r9, #1
1001a6b4:	f47f aed3 	bne.w	1001a45e <_svfprintf_r+0x9f6>
1001a6b8:	2301      	movs	r3, #1
1001a6ba:	2e07      	cmp	r6, #7
1001a6bc:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a6c0:	f8c8 5000 	str.w	r5, [r8]
1001a6c4:	f8c8 3004 	str.w	r3, [r8, #4]
1001a6c8:	f77f aef7 	ble.w	1001a4ba <_svfprintf_r+0xa52>
1001a6cc:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a6ce:	9807      	ldr	r0, [sp, #28]
1001a6d0:	aa32      	add	r2, sp, #200	@ 0xc8
1001a6d2:	f005 fccf 	bl	10020074 <__ssprint_r>
1001a6d6:	2800      	cmp	r0, #0
1001a6d8:	f47f ae75 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001a6dc:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a6e0:	af35      	add	r7, sp, #212	@ 0xd4
1001a6e2:	e6ea      	b.n	1001a4ba <_svfprintf_r+0xa52>
1001a6e4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001a6e6:	2b01      	cmp	r3, #1
1001a6e8:	f77f aee7 	ble.w	1001a4ba <_svfprintf_r+0xa52>
1001a6ec:	2b11      	cmp	r3, #17
1001a6ee:	4b8d      	ldr	r3, [pc, #564]	@ (1001a924 <_svfprintf_r+0xebc>)
1001a6f0:	9315      	str	r3, [sp, #84]	@ 0x54
1001a6f2:	f340 8358 	ble.w	1001ada6 <_svfprintf_r+0x133e>
1001a6f6:	f8cd 9020 	str.w	r9, [sp, #32]
1001a6fa:	f8dd a01c 	ldr.w	sl, [sp, #28]
1001a6fe:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001a702:	2510      	movs	r5, #16
1001a704:	4699      	mov	r9, r3
1001a706:	e006      	b.n	1001a716 <_svfprintf_r+0xcae>
1001a708:	3708      	adds	r7, #8
1001a70a:	f1a8 0810 	sub.w	r8, r8, #16
1001a70e:	f1b8 0f10 	cmp.w	r8, #16
1001a712:	f340 8346 	ble.w	1001ada2 <_svfprintf_r+0x133a>
1001a716:	3601      	adds	r6, #1
1001a718:	3410      	adds	r4, #16
1001a71a:	2e07      	cmp	r6, #7
1001a71c:	e9c7 9500 	strd	r9, r5, [r7]
1001a720:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001a724:	ddf0      	ble.n	1001a708 <_svfprintf_r+0xca0>
1001a726:	aa32      	add	r2, sp, #200	@ 0xc8
1001a728:	4659      	mov	r1, fp
1001a72a:	4650      	mov	r0, sl
1001a72c:	f005 fca2 	bl	10020074 <__ssprint_r>
1001a730:	2800      	cmp	r0, #0
1001a732:	f040 8298 	bne.w	1001ac66 <_svfprintf_r+0x11fe>
1001a736:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a73a:	af35      	add	r7, sp, #212	@ 0xd4
1001a73c:	e7e5      	b.n	1001a70a <_svfprintf_r+0xca2>
1001a73e:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a740:	9807      	ldr	r0, [sp, #28]
1001a742:	aa32      	add	r2, sp, #200	@ 0xc8
1001a744:	f005 fc96 	bl	10020074 <__ssprint_r>
1001a748:	2800      	cmp	r0, #0
1001a74a:	f47f ae3c 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001a74e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a750:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a754:	f7ff baf3 	b.w	10019d3e <_svfprintf_r+0x2d6>
1001a758:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001a75a:	f851 3b04 	ldr.w	r3, [r1], #4
1001a75e:	910d      	str	r1, [sp, #52]	@ 0x34
1001a760:	f019 0110 	ands.w	r1, r9, #16
1001a764:	f47f ac4c 	bne.w	1001a000 <_svfprintf_r+0x598>
1001a768:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001a76c:	f000 8363 	beq.w	1001ae36 <_svfprintf_r+0x13ce>
1001a770:	b29b      	uxth	r3, r3
1001a772:	460a      	mov	r2, r1
1001a774:	e444      	b.n	1001a000 <_svfprintf_r+0x598>
1001a776:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001a778:	f851 3b04 	ldr.w	r3, [r1], #4
1001a77c:	910d      	str	r1, [sp, #52]	@ 0x34
1001a77e:	f014 0110 	ands.w	r1, r4, #16
1001a782:	d10b      	bne.n	1001a79c <_svfprintf_r+0xd34>
1001a784:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
1001a788:	d003      	beq.n	1001a792 <_svfprintf_r+0xd2a>
1001a78a:	460a      	mov	r2, r1
1001a78c:	b29b      	uxth	r3, r3
1001a78e:	2101      	movs	r1, #1
1001a790:	e439      	b.n	1001a006 <_svfprintf_r+0x59e>
1001a792:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
1001a796:	bf1c      	itt	ne
1001a798:	b2db      	uxtbne	r3, r3
1001a79a:	4602      	movne	r2, r0
1001a79c:	2101      	movs	r1, #1
1001a79e:	e432      	b.n	1001a006 <_svfprintf_r+0x59e>
1001a7a0:	46bb      	mov	fp, r7
1001a7a2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001a7a4:	2b00      	cmp	r3, #0
1001a7a6:	f43f aa64 	beq.w	10019c72 <_svfprintf_r+0x20a>
1001a7aa:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001a7ac:	4658      	mov	r0, fp
1001a7ae:	f7ff f847 	bl	10019840 <_free_r>
1001a7b2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001a7b4:	899b      	ldrh	r3, [r3, #12]
1001a7b6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
1001a7ba:	f7ff ba5e 	b.w	10019c7a <_svfprintf_r+0x212>
1001a7be:	f8dd b020 	ldr.w	fp, [sp, #32]
1001a7c2:	ad5e      	add	r5, sp, #376	@ 0x178
1001a7c4:	e54a      	b.n	1001a25c <_svfprintf_r+0x7f4>
1001a7c6:	425b      	negs	r3, r3
1001a7c8:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
1001a7cc:	464c      	mov	r4, r9
1001a7ce:	202d      	movs	r0, #45	@ 0x2d
1001a7d0:	2101      	movs	r1, #1
1001a7d2:	e419      	b.n	1001a008 <_svfprintf_r+0x5a0>
1001a7d4:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a7d6:	9807      	ldr	r0, [sp, #28]
1001a7d8:	aa32      	add	r2, sp, #200	@ 0xc8
1001a7da:	f005 fc4b 	bl	10020074 <__ssprint_r>
1001a7de:	2800      	cmp	r0, #0
1001a7e0:	f47f adf1 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001a7e4:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a7e8:	af35      	add	r7, sp, #212	@ 0xd4
1001a7ea:	e642      	b.n	1001a472 <_svfprintf_r+0xa0a>
1001a7ec:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a7ee:	9807      	ldr	r0, [sp, #28]
1001a7f0:	aa32      	add	r2, sp, #200	@ 0xc8
1001a7f2:	f005 fc3f 	bl	10020074 <__ssprint_r>
1001a7f6:	2800      	cmp	r0, #0
1001a7f8:	f47f ade5 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001a7fc:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001a800:	af35      	add	r7, sp, #212	@ 0xd4
1001a802:	e642      	b.n	1001a48a <_svfprintf_r+0xa22>
1001a804:	f019 0f01 	tst.w	r9, #1
1001a808:	f43f aaab 	beq.w	10019d62 <_svfprintf_r+0x2fa>
1001a80c:	e4d4      	b.n	1001a1b8 <_svfprintf_r+0x750>
1001a80e:	930d      	str	r3, [sp, #52]	@ 0x34
1001a810:	7823      	ldrb	r3, [r4, #0]
1001a812:	f7ff b980 	b.w	10019b16 <_svfprintf_r+0xae>
1001a816:	ad5e      	add	r5, sp, #376	@ 0x178
1001a818:	e520      	b.n	1001a25c <_svfprintf_r+0x7f4>
1001a81a:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001a81e:	f040 8374 	bne.w	1001af0a <_svfprintf_r+0x14a2>
1001a822:	17da      	asrs	r2, r3, #31
1001a824:	4611      	mov	r1, r2
1001a826:	f7ff bbb1 	b.w	10019f8c <_svfprintf_r+0x524>
1001a82a:	f019 0f10 	tst.w	r9, #16
1001a82e:	f040 82b2 	bne.w	1001ad96 <_svfprintf_r+0x132e>
1001a832:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001a836:	f040 8362 	bne.w	1001aefe <_svfprintf_r+0x1496>
1001a83a:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001a83e:	f000 82aa 	beq.w	1001ad96 <_svfprintf_r+0x132e>
1001a842:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a844:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001a846:	681b      	ldr	r3, [r3, #0]
1001a848:	701a      	strb	r2, [r3, #0]
1001a84a:	e40e      	b.n	1001a06a <_svfprintf_r+0x602>
1001a84c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
1001a84e:	7823      	ldrb	r3, [r4, #0]
1001a850:	2a00      	cmp	r2, #0
1001a852:	f43f a960 	beq.w	10019b16 <_svfprintf_r+0xae>
1001a856:	7812      	ldrb	r2, [r2, #0]
1001a858:	2a00      	cmp	r2, #0
1001a85a:	f43f a95c 	beq.w	10019b16 <_svfprintf_r+0xae>
1001a85e:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
1001a862:	f7ff b958 	b.w	10019b16 <_svfprintf_r+0xae>
1001a866:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001a86a:	4602      	mov	r2, r0
1001a86c:	460b      	mov	r3, r1
1001a86e:	f006 fa2d 	bl	10020ccc <__aeabi_dcmpun>
1001a872:	2800      	cmp	r0, #0
1001a874:	f040 860f 	bne.w	1001b496 <_svfprintf_r+0x1a2e>
1001a878:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a87a:	2b61      	cmp	r3, #97	@ 0x61
1001a87c:	f000 8506 	beq.w	1001b28c <_svfprintf_r+0x1824>
1001a880:	2b41      	cmp	r3, #65	@ 0x41
1001a882:	f000 8582 	beq.w	1001b38a <_svfprintf_r+0x1922>
1001a886:	9b08      	ldr	r3, [sp, #32]
1001a888:	3301      	adds	r3, #1
1001a88a:	f000 8417 	beq.w	1001b0bc <_svfprintf_r+0x1654>
1001a88e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a890:	f023 0320 	bic.w	r3, r3, #32
1001a894:	2b47      	cmp	r3, #71	@ 0x47
1001a896:	d104      	bne.n	1001a8a2 <_svfprintf_r+0xe3a>
1001a898:	9b08      	ldr	r3, [sp, #32]
1001a89a:	2b00      	cmp	r3, #0
1001a89c:	bf08      	it	eq
1001a89e:	2301      	moveq	r3, #1
1001a8a0:	9308      	str	r3, [sp, #32]
1001a8a2:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
1001a8a6:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
1001a8aa:	2a00      	cmp	r2, #0
1001a8ac:	9015      	str	r0, [sp, #84]	@ 0x54
1001a8ae:	f8cd 9018 	str.w	r9, [sp, #24]
1001a8b2:	f04f 0300 	mov.w	r3, #0
1001a8b6:	f2c0 8521 	blt.w	1001b2fc <_svfprintf_r+0x1894>
1001a8ba:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
1001a8be:	931f      	str	r3, [sp, #124]	@ 0x7c
1001a8c0:	930c      	str	r3, [sp, #48]	@ 0x30
1001a8c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001a8c4:	3b41      	subs	r3, #65	@ 0x41
1001a8c6:	2b25      	cmp	r3, #37	@ 0x25
1001a8c8:	f200 8328 	bhi.w	1001af1c <_svfprintf_r+0x14b4>
1001a8cc:	e8df f013 	tbh	[pc, r3, lsl #1]
1001a8d0:	03260401 	.word	0x03260401
1001a8d4:	03260326 	.word	0x03260326
1001a8d8:	03fe03fa 	.word	0x03fe03fa
1001a8dc:	03260326 	.word	0x03260326
1001a8e0:	03260326 	.word	0x03260326
1001a8e4:	03260326 	.word	0x03260326
1001a8e8:	03260326 	.word	0x03260326
1001a8ec:	03260326 	.word	0x03260326
1001a8f0:	03260326 	.word	0x03260326
1001a8f4:	03260326 	.word	0x03260326
1001a8f8:	03260326 	.word	0x03260326
1001a8fc:	03260326 	.word	0x03260326
1001a900:	03260326 	.word	0x03260326
1001a904:	03260326 	.word	0x03260326
1001a908:	03260326 	.word	0x03260326
1001a90c:	03260326 	.word	0x03260326
1001a910:	03260326 	.word	0x03260326
1001a914:	03260326 	.word	0x03260326
1001a918:	03fe03fa 	.word	0x03fe03fa
1001a91c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a920:	f7ff bb61 	b.w	10019fe6 <_svfprintf_r+0x57e>
1001a924:	10023aa4 	.word	0x10023aa4
1001a928:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a92c:	464c      	mov	r4, r9
1001a92e:	f7ff bbc9 	b.w	1001a0c4 <_svfprintf_r+0x65c>
1001a932:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a936:	4bbd      	ldr	r3, [pc, #756]	@ (1001ac2c <_svfprintf_r+0x11c4>)
1001a938:	9319      	str	r3, [sp, #100]	@ 0x64
1001a93a:	f019 0220 	ands.w	r2, r9, #32
1001a93e:	f000 8108 	beq.w	1001ab52 <_svfprintf_r+0x10ea>
1001a942:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a944:	3307      	adds	r3, #7
1001a946:	f023 0307 	bic.w	r3, r3, #7
1001a94a:	4619      	mov	r1, r3
1001a94c:	685a      	ldr	r2, [r3, #4]
1001a94e:	f851 3b08 	ldr.w	r3, [r1], #8
1001a952:	910d      	str	r1, [sp, #52]	@ 0x34
1001a954:	f019 0f01 	tst.w	r9, #1
1001a958:	d00a      	beq.n	1001a970 <_svfprintf_r+0xf08>
1001a95a:	ea53 0102 	orrs.w	r1, r3, r2
1001a95e:	d007      	beq.n	1001a970 <_svfprintf_r+0xf08>
1001a960:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001a962:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
1001a966:	2130      	movs	r1, #48	@ 0x30
1001a968:	f049 0902 	orr.w	r9, r9, #2
1001a96c:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
1001a970:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001a974:	2102      	movs	r1, #2
1001a976:	f7ff bb46 	b.w	1001a006 <_svfprintf_r+0x59e>
1001a97a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001a97e:	4bac      	ldr	r3, [pc, #688]	@ (1001ac30 <_svfprintf_r+0x11c8>)
1001a980:	9319      	str	r3, [sp, #100]	@ 0x64
1001a982:	e7da      	b.n	1001a93a <_svfprintf_r+0xed2>
1001a984:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001a986:	681b      	ldr	r3, [r3, #0]
1001a988:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001a98c:	2301      	movs	r3, #1
1001a98e:	9306      	str	r3, [sp, #24]
1001a990:	469b      	mov	fp, r3
1001a992:	ad45      	add	r5, sp, #276	@ 0x114
1001a994:	f7ff baae 	b.w	10019ef4 <_svfprintf_r+0x48c>
1001a998:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001a99a:	9807      	ldr	r0, [sp, #28]
1001a99c:	aa32      	add	r2, sp, #200	@ 0xc8
1001a99e:	f005 fb69 	bl	10020074 <__ssprint_r>
1001a9a2:	2800      	cmp	r0, #0
1001a9a4:	f47f ad0f 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001a9a8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001a9aa:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001a9ae:	e411      	b.n	1001a1d4 <_svfprintf_r+0x76c>
1001a9b0:	2140      	movs	r1, #64	@ 0x40
1001a9b2:	4658      	mov	r0, fp
1001a9b4:	f7f9 f8b4 	bl	10013b20 <_malloc_r>
1001a9b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001a9ba:	6018      	str	r0, [r3, #0]
1001a9bc:	6118      	str	r0, [r3, #16]
1001a9be:	2800      	cmp	r0, #0
1001a9c0:	f000 8614 	beq.w	1001b5ec <_svfprintf_r+0x1b84>
1001a9c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001a9c6:	2340      	movs	r3, #64	@ 0x40
1001a9c8:	6153      	str	r3, [r2, #20]
1001a9ca:	f7ff b869 	b.w	10019aa0 <_svfprintf_r+0x38>
1001a9ce:	9b08      	ldr	r3, [sp, #32]
1001a9d0:	950c      	str	r5, [sp, #48]	@ 0x30
1001a9d2:	2b06      	cmp	r3, #6
1001a9d4:	4629      	mov	r1, r5
1001a9d6:	bf28      	it	cs
1001a9d8:	2306      	movcs	r3, #6
1001a9da:	9508      	str	r5, [sp, #32]
1001a9dc:	462a      	mov	r2, r5
1001a9de:	9306      	str	r3, [sp, #24]
1001a9e0:	4d94      	ldr	r5, [pc, #592]	@ (1001ac34 <_svfprintf_r+0x11cc>)
1001a9e2:	960d      	str	r6, [sp, #52]	@ 0x34
1001a9e4:	469b      	mov	fp, r3
1001a9e6:	9114      	str	r1, [sp, #80]	@ 0x50
1001a9e8:	9110      	str	r1, [sp, #64]	@ 0x40
1001a9ea:	9112      	str	r1, [sp, #72]	@ 0x48
1001a9ec:	f7ff ba1a 	b.w	10019e24 <_svfprintf_r+0x3bc>
1001a9f0:	2e10      	cmp	r6, #16
1001a9f2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001a9f4:	f340 85eb 	ble.w	1001b5ce <_svfprintf_r+0x1b66>
1001a9f8:	488f      	ldr	r0, [pc, #572]	@ (1001ac38 <_svfprintf_r+0x11d0>)
1001a9fa:	f8dd a01c 	ldr.w	sl, [sp, #28]
1001a9fe:	9015      	str	r0, [sp, #84]	@ 0x54
1001aa00:	4642      	mov	r2, r8
1001aa02:	4621      	mov	r1, r4
1001aa04:	46a8      	mov	r8, r5
1001aa06:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1001aa08:	2710      	movs	r7, #16
1001aa0a:	4605      	mov	r5, r0
1001aa0c:	e004      	b.n	1001aa18 <_svfprintf_r+0xfb0>
1001aa0e:	3208      	adds	r2, #8
1001aa10:	3e10      	subs	r6, #16
1001aa12:	2e10      	cmp	r6, #16
1001aa14:	f340 8224 	ble.w	1001ae60 <_svfprintf_r+0x13f8>
1001aa18:	3301      	adds	r3, #1
1001aa1a:	3110      	adds	r1, #16
1001aa1c:	2b07      	cmp	r3, #7
1001aa1e:	e9c2 5700 	strd	r5, r7, [r2]
1001aa22:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
1001aa26:	ddf2      	ble.n	1001aa0e <_svfprintf_r+0xfa6>
1001aa28:	aa32      	add	r2, sp, #200	@ 0xc8
1001aa2a:	4621      	mov	r1, r4
1001aa2c:	4650      	mov	r0, sl
1001aa2e:	f005 fb21 	bl	10020074 <__ssprint_r>
1001aa32:	2800      	cmp	r0, #0
1001aa34:	f040 8117 	bne.w	1001ac66 <_svfprintf_r+0x11fe>
1001aa38:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
1001aa3c:	aa35      	add	r2, sp, #212	@ 0xd4
1001aa3e:	e7e7      	b.n	1001aa10 <_svfprintf_r+0xfa8>
1001aa40:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001aa42:	f8cd b020 	str.w	fp, [sp, #32]
1001aa46:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
1001aa4a:	4642      	mov	r2, r8
1001aa4c:	4621      	mov	r1, r4
1001aa4e:	4f7a      	ldr	r7, [pc, #488]	@ (1001ac38 <_svfprintf_r+0x11d0>)
1001aa50:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
1001aa54:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
1001aa58:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001aa5c:	4654      	mov	r4, sl
1001aa5e:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
1001aa62:	b383      	cbz	r3, 1001aac6 <_svfprintf_r+0x105e>
1001aa64:	f1b9 0f00 	cmp.w	r9, #0
1001aa68:	f000 80ff 	beq.w	1001ac6a <_svfprintf_r+0x1202>
1001aa6c:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001aa70:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001aa72:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001aa74:	3001      	adds	r0, #1
1001aa76:	4441      	add	r1, r8
1001aa78:	2807      	cmp	r0, #7
1001aa7a:	e9c2 3800 	strd	r3, r8, [r2]
1001aa7e:	9134      	str	r1, [sp, #208]	@ 0xd0
1001aa80:	9033      	str	r0, [sp, #204]	@ 0xcc
1001aa82:	dc75      	bgt.n	1001ab70 <_svfprintf_r+0x1108>
1001aa84:	3208      	adds	r2, #8
1001aa86:	9b08      	ldr	r3, [sp, #32]
1001aa88:	f89a 0000 	ldrb.w	r0, [sl]
1001aa8c:	1b1e      	subs	r6, r3, r4
1001aa8e:	4286      	cmp	r6, r0
1001aa90:	bfa8      	it	ge
1001aa92:	4606      	movge	r6, r0
1001aa94:	2e00      	cmp	r6, #0
1001aa96:	dd0c      	ble.n	1001aab2 <_svfprintf_r+0x104a>
1001aa98:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001aa9a:	3001      	adds	r0, #1
1001aa9c:	4431      	add	r1, r6
1001aa9e:	2807      	cmp	r0, #7
1001aaa0:	e9c2 4600 	strd	r4, r6, [r2]
1001aaa4:	9134      	str	r1, [sp, #208]	@ 0xd0
1001aaa6:	9033      	str	r0, [sp, #204]	@ 0xcc
1001aaa8:	f300 8168 	bgt.w	1001ad7c <_svfprintf_r+0x1314>
1001aaac:	f89a 0000 	ldrb.w	r0, [sl]
1001aab0:	3208      	adds	r2, #8
1001aab2:	2e00      	cmp	r6, #0
1001aab4:	bfac      	ite	ge
1001aab6:	1b85      	subge	r5, r0, r6
1001aab8:	4605      	movlt	r5, r0
1001aaba:	2d00      	cmp	r5, #0
1001aabc:	dc13      	bgt.n	1001aae6 <_svfprintf_r+0x107e>
1001aabe:	4404      	add	r4, r0
1001aac0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001aac2:	2b00      	cmp	r3, #0
1001aac4:	d1ce      	bne.n	1001aa64 <_svfprintf_r+0xffc>
1001aac6:	f1b9 0f00 	cmp.w	r9, #0
1001aaca:	d1cf      	bne.n	1001aa6c <_svfprintf_r+0x1004>
1001aacc:	f8dd b020 	ldr.w	fp, [sp, #32]
1001aad0:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
1001aad4:	46a2      	mov	sl, r4
1001aad6:	45da      	cmp	sl, fp
1001aad8:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
1001aadc:	4690      	mov	r8, r2
1001aade:	460c      	mov	r4, r1
1001aae0:	bf28      	it	cs
1001aae2:	46da      	movcs	sl, fp
1001aae4:	e58b      	b.n	1001a5fe <_svfprintf_r+0xb96>
1001aae6:	2d10      	cmp	r5, #16
1001aae8:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001aaea:	f340 853e 	ble.w	1001b56a <_svfprintf_r+0x1b02>
1001aaee:	4623      	mov	r3, r4
1001aaf0:	463e      	mov	r6, r7
1001aaf2:	462c      	mov	r4, r5
1001aaf4:	461d      	mov	r5, r3
1001aaf6:	e004      	b.n	1001ab02 <_svfprintf_r+0x109a>
1001aaf8:	3c10      	subs	r4, #16
1001aafa:	2c10      	cmp	r4, #16
1001aafc:	f102 0208 	add.w	r2, r2, #8
1001ab00:	dd16      	ble.n	1001ab30 <_svfprintf_r+0x10c8>
1001ab02:	3001      	adds	r0, #1
1001ab04:	3110      	adds	r1, #16
1001ab06:	2310      	movs	r3, #16
1001ab08:	2807      	cmp	r0, #7
1001ab0a:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001ab0e:	6017      	str	r7, [r2, #0]
1001ab10:	6053      	str	r3, [r2, #4]
1001ab12:	ddf1      	ble.n	1001aaf8 <_svfprintf_r+0x1090>
1001ab14:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ab16:	aa32      	add	r2, sp, #200	@ 0xc8
1001ab18:	4658      	mov	r0, fp
1001ab1a:	f005 faab 	bl	10020074 <__ssprint_r>
1001ab1e:	2800      	cmp	r0, #0
1001ab20:	f47f ae3f 	bne.w	1001a7a2 <_svfprintf_r+0xd3a>
1001ab24:	3c10      	subs	r4, #16
1001ab26:	2c10      	cmp	r4, #16
1001ab28:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
1001ab2c:	aa35      	add	r2, sp, #212	@ 0xd4
1001ab2e:	dce8      	bgt.n	1001ab02 <_svfprintf_r+0x109a>
1001ab30:	462b      	mov	r3, r5
1001ab32:	4625      	mov	r5, r4
1001ab34:	461c      	mov	r4, r3
1001ab36:	3001      	adds	r0, #1
1001ab38:	4429      	add	r1, r5
1001ab3a:	2807      	cmp	r0, #7
1001ab3c:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001ab40:	6016      	str	r6, [r2, #0]
1001ab42:	6055      	str	r5, [r2, #4]
1001ab44:	f300 837f 	bgt.w	1001b246 <_svfprintf_r+0x17de>
1001ab48:	f89a 0000 	ldrb.w	r0, [sl]
1001ab4c:	3208      	adds	r2, #8
1001ab4e:	4404      	add	r4, r0
1001ab50:	e7b6      	b.n	1001aac0 <_svfprintf_r+0x1058>
1001ab52:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001ab54:	f851 3b04 	ldr.w	r3, [r1], #4
1001ab58:	910d      	str	r1, [sp, #52]	@ 0x34
1001ab5a:	f019 0110 	ands.w	r1, r9, #16
1001ab5e:	f47f aef9 	bne.w	1001a954 <_svfprintf_r+0xeec>
1001ab62:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001ab66:	f000 8160 	beq.w	1001ae2a <_svfprintf_r+0x13c2>
1001ab6a:	b29b      	uxth	r3, r3
1001ab6c:	460a      	mov	r2, r1
1001ab6e:	e6f1      	b.n	1001a954 <_svfprintf_r+0xeec>
1001ab70:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ab72:	aa32      	add	r2, sp, #200	@ 0xc8
1001ab74:	4658      	mov	r0, fp
1001ab76:	f005 fa7d 	bl	10020074 <__ssprint_r>
1001ab7a:	2800      	cmp	r0, #0
1001ab7c:	f47f ae11 	bne.w	1001a7a2 <_svfprintf_r+0xd3a>
1001ab80:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001ab82:	aa35      	add	r2, sp, #212	@ 0xd4
1001ab84:	e77f      	b.n	1001aa86 <_svfprintf_r+0x101e>
1001ab86:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
1001ab8a:	2100      	movs	r1, #0
1001ab8c:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
1001ab90:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 1001ac3c <_svfprintf_r+0x11d4>
1001ab94:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
1001ab98:	9406      	str	r4, [sp, #24]
1001ab9a:	ad5e      	add	r5, sp, #376	@ 0x178
1001ab9c:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
1001aba0:	2705      	movs	r7, #5
1001aba2:	468c      	mov	ip, r1
1001aba4:	465e      	mov	r6, fp
1001aba6:	e005      	b.n	1001abb4 <_svfprintf_r+0x114c>
1001aba8:	2b0a      	cmp	r3, #10
1001abaa:	f172 0200 	sbcs.w	r2, r2, #0
1001abae:	d333      	bcc.n	1001ac18 <_svfprintf_r+0x11b0>
1001abb0:	465b      	mov	r3, fp
1001abb2:	4622      	mov	r2, r4
1001abb4:	1899      	adds	r1, r3, r2
1001abb6:	f141 0100 	adc.w	r1, r1, #0
1001abba:	fba9 0401 	umull	r0, r4, r9, r1
1001abbe:	f024 0003 	bic.w	r0, r4, #3
1001abc2:	eb00 0094 	add.w	r0, r0, r4, lsr #2
1001abc6:	1a09      	subs	r1, r1, r0
1001abc8:	1a58      	subs	r0, r3, r1
1001abca:	f162 0e00 	sbc.w	lr, r2, #0
1001abce:	fb0a f400 	mul.w	r4, sl, r0
1001abd2:	fba0 b009 	umull	fp, r0, r0, r9
1001abd6:	fb09 440e 	mla	r4, r9, lr, r4
1001abda:	f00b 0e01 	and.w	lr, fp, #1
1001abde:	4404      	add	r4, r0
1001abe0:	fbae 0e07 	umull	r0, lr, lr, r7
1001abe4:	1840      	adds	r0, r0, r1
1001abe6:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
1001abea:	3030      	adds	r0, #48	@ 0x30
1001abec:	f805 0c01 	strb.w	r0, [r5, #-1]
1001abf0:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
1001abf4:	f10c 0c01 	add.w	ip, ip, #1
1001abf8:	3d01      	subs	r5, #1
1001abfa:	0864      	lsrs	r4, r4, #1
1001abfc:	2e00      	cmp	r6, #0
1001abfe:	d0d3      	beq.n	1001aba8 <_svfprintf_r+0x1140>
1001ac00:	f898 1000 	ldrb.w	r1, [r8]
1001ac04:	458c      	cmp	ip, r1
1001ac06:	d1cf      	bne.n	1001aba8 <_svfprintf_r+0x1140>
1001ac08:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
1001ac0c:	d0cc      	beq.n	1001aba8 <_svfprintf_r+0x1140>
1001ac0e:	2b0a      	cmp	r3, #10
1001ac10:	f172 0200 	sbcs.w	r2, r2, #0
1001ac14:	f080 8137 	bcs.w	1001ae86 <_svfprintf_r+0x141e>
1001ac18:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
1001ac1c:	9c06      	ldr	r4, [sp, #24]
1001ac1e:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
1001ac22:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
1001ac26:	f7ff bb15 	b.w	1001a254 <_svfprintf_r+0x7ec>
1001ac2a:	bf00      	nop
1001ac2c:	10023874 	.word	0x10023874
1001ac30:	100213b0 	.word	0x100213b0
1001ac34:	10023888 	.word	0x10023888
1001ac38:	10023aa4 	.word	0x10023aa4
1001ac3c:	cccccccd 	.word	0xcccccccd
1001ac40:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ac42:	9807      	ldr	r0, [sp, #28]
1001ac44:	9315      	str	r3, [sp, #84]	@ 0x54
1001ac46:	aa32      	add	r2, sp, #200	@ 0xc8
1001ac48:	f005 fa14 	bl	10020074 <__ssprint_r>
1001ac4c:	2800      	cmp	r0, #0
1001ac4e:	f47f abba 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001ac52:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001ac56:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001ac58:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001ac5a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ac5e:	f7ff b841 	b.w	10019ce4 <_svfprintf_r+0x27c>
1001ac62:	46a3      	mov	fp, r4
1001ac64:	e59d      	b.n	1001a7a2 <_svfprintf_r+0xd3a>
1001ac66:	46d3      	mov	fp, sl
1001ac68:	e59b      	b.n	1001a7a2 <_svfprintf_r+0xd3a>
1001ac6a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001ac6c:	3b01      	subs	r3, #1
1001ac6e:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
1001ac72:	9310      	str	r3, [sp, #64]	@ 0x40
1001ac74:	e6fc      	b.n	1001aa70 <_svfprintf_r+0x1008>
1001ac76:	2901      	cmp	r1, #1
1001ac78:	464c      	mov	r4, r9
1001ac7a:	f47f aadb 	bne.w	1001a234 <_svfprintf_r+0x7cc>
1001ac7e:	e42f      	b.n	1001a4e0 <_svfprintf_r+0xa78>
1001ac80:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ac82:	9807      	ldr	r0, [sp, #28]
1001ac84:	aa32      	add	r2, sp, #200	@ 0xc8
1001ac86:	f005 f9f5 	bl	10020074 <__ssprint_r>
1001ac8a:	2800      	cmp	r0, #0
1001ac8c:	f47f ab9b 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001ac90:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001ac92:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ac96:	f7ff ba8a 	b.w	1001a1ae <_svfprintf_r+0x746>
1001ac9a:	af30      	add	r7, sp, #192	@ 0xc0
1001ac9c:	2208      	movs	r2, #8
1001ac9e:	2100      	movs	r1, #0
1001aca0:	4638      	mov	r0, r7
1001aca2:	952b      	str	r5, [sp, #172]	@ 0xac
1001aca4:	f7fd f8e4 	bl	10017e70 <memset>
1001aca8:	f8dd a020 	ldr.w	sl, [sp, #32]
1001acac:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
1001acb0:	f000 80c8 	beq.w	1001ae44 <_svfprintf_r+0x13dc>
1001acb4:	2400      	movs	r4, #0
1001acb6:	f8cd 9018 	str.w	r9, [sp, #24]
1001acba:	46a3      	mov	fp, r4
1001acbc:	f8dd 901c 	ldr.w	r9, [sp, #28]
1001acc0:	e00c      	b.n	1001acdc <_svfprintf_r+0x1274>
1001acc2:	a945      	add	r1, sp, #276	@ 0x114
1001acc4:	4648      	mov	r0, r9
1001acc6:	f7fd fd27 	bl	10018718 <_wcrtomb_r>
1001acca:	1c41      	adds	r1, r0, #1
1001accc:	4458      	add	r0, fp
1001acce:	f000 838f 	beq.w	1001b3f0 <_svfprintf_r+0x1988>
1001acd2:	4550      	cmp	r0, sl
1001acd4:	dc08      	bgt.n	1001ace8 <_svfprintf_r+0x1280>
1001acd6:	f000 8442 	beq.w	1001b55e <_svfprintf_r+0x1af6>
1001acda:	4683      	mov	fp, r0
1001acdc:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
1001acde:	5912      	ldr	r2, [r2, r4]
1001ace0:	463b      	mov	r3, r7
1001ace2:	3404      	adds	r4, #4
1001ace4:	2a00      	cmp	r2, #0
1001ace6:	d1ec      	bne.n	1001acc2 <_svfprintf_r+0x125a>
1001ace8:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001acec:	f1bb 0f00 	cmp.w	fp, #0
1001acf0:	f000 80dd 	beq.w	1001aeae <_svfprintf_r+0x1446>
1001acf4:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
1001acf8:	f300 81ba 	bgt.w	1001b070 <_svfprintf_r+0x1608>
1001acfc:	2300      	movs	r3, #0
1001acfe:	930c      	str	r3, [sp, #48]	@ 0x30
1001ad00:	ad45      	add	r5, sp, #276	@ 0x114
1001ad02:	2208      	movs	r2, #8
1001ad04:	2100      	movs	r1, #0
1001ad06:	4638      	mov	r0, r7
1001ad08:	f7fd f8b2 	bl	10017e70 <memset>
1001ad0c:	9807      	ldr	r0, [sp, #28]
1001ad0e:	9700      	str	r7, [sp, #0]
1001ad10:	465b      	mov	r3, fp
1001ad12:	aa2b      	add	r2, sp, #172	@ 0xac
1001ad14:	4629      	mov	r1, r5
1001ad16:	f7fd fd25 	bl	10018764 <_wcsrtombs_r>
1001ad1a:	4583      	cmp	fp, r0
1001ad1c:	f040 845d 	bne.w	1001b5da <_svfprintf_r+0x1b72>
1001ad20:	2300      	movs	r3, #0
1001ad22:	f805 300b 	strb.w	r3, [r5, fp]
1001ad26:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
1001ad2a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001ad2e:	960d      	str	r6, [sp, #52]	@ 0x34
1001ad30:	9308      	str	r3, [sp, #32]
1001ad32:	9106      	str	r1, [sp, #24]
1001ad34:	9314      	str	r3, [sp, #80]	@ 0x50
1001ad36:	9310      	str	r3, [sp, #64]	@ 0x40
1001ad38:	9312      	str	r3, [sp, #72]	@ 0x48
1001ad3a:	f7ff b873 	b.w	10019e24 <_svfprintf_r+0x3bc>
1001ad3e:	46cb      	mov	fp, r9
1001ad40:	e52f      	b.n	1001a7a2 <_svfprintf_r+0xd3a>
1001ad42:	4a75      	ldr	r2, [pc, #468]	@ (1001af18 <_svfprintf_r+0x14b0>)
1001ad44:	9215      	str	r2, [sp, #84]	@ 0x54
1001ad46:	3301      	adds	r3, #1
1001ad48:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001ad4a:	f8c8 2000 	str.w	r2, [r8]
1001ad4e:	442c      	add	r4, r5
1001ad50:	2b07      	cmp	r3, #7
1001ad52:	f8c8 5004 	str.w	r5, [r8, #4]
1001ad56:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001ad5a:	f77f a800 	ble.w	10019d5e <_svfprintf_r+0x2f6>
1001ad5e:	f7ff bb68 	b.w	1001a432 <_svfprintf_r+0x9ca>
1001ad62:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ad64:	9807      	ldr	r0, [sp, #28]
1001ad66:	aa32      	add	r2, sp, #200	@ 0xc8
1001ad68:	f005 f984 	bl	10020074 <__ssprint_r>
1001ad6c:	2800      	cmp	r0, #0
1001ad6e:	f47f ab2a 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001ad72:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001ad74:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ad78:	f7fe bfdb 	b.w	10019d32 <_svfprintf_r+0x2ca>
1001ad7c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ad7e:	aa32      	add	r2, sp, #200	@ 0xc8
1001ad80:	4658      	mov	r0, fp
1001ad82:	f005 f977 	bl	10020074 <__ssprint_r>
1001ad86:	2800      	cmp	r0, #0
1001ad88:	f47f ad0b 	bne.w	1001a7a2 <_svfprintf_r+0xd3a>
1001ad8c:	f89a 0000 	ldrb.w	r0, [sl]
1001ad90:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001ad92:	aa35      	add	r2, sp, #212	@ 0xd4
1001ad94:	e68d      	b.n	1001aab2 <_svfprintf_r+0x104a>
1001ad96:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001ad98:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001ad9a:	681b      	ldr	r3, [r3, #0]
1001ad9c:	601a      	str	r2, [r3, #0]
1001ad9e:	f7ff b964 	b.w	1001a06a <_svfprintf_r+0x602>
1001ada2:	f8dd 9020 	ldr.w	r9, [sp, #32]
1001ada6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001ada8:	603b      	str	r3, [r7, #0]
1001adaa:	3601      	adds	r6, #1
1001adac:	4444      	add	r4, r8
1001adae:	2e07      	cmp	r6, #7
1001adb0:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001adb4:	f8c7 8004 	str.w	r8, [r7, #4]
1001adb8:	f77f ab7e 	ble.w	1001a4b8 <_svfprintf_r+0xa50>
1001adbc:	e486      	b.n	1001a6cc <_svfprintf_r+0xc64>
1001adbe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001adc0:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001adc2:	441c      	add	r4, r3
1001adc4:	e9c8 1300 	strd	r1, r3, [r8]
1001adc8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001adca:	9434      	str	r4, [sp, #208]	@ 0xd0
1001adcc:	3301      	adds	r3, #1
1001adce:	2b07      	cmp	r3, #7
1001add0:	9333      	str	r3, [sp, #204]	@ 0xcc
1001add2:	f300 8165 	bgt.w	1001b0a0 <_svfprintf_r+0x1638>
1001add6:	f108 0808 	add.w	r8, r8, #8
1001adda:	2a00      	cmp	r2, #0
1001addc:	f6bf ab1d 	bge.w	1001a41a <_svfprintf_r+0x9b2>
1001ade0:	4256      	negs	r6, r2
1001ade2:	3210      	adds	r2, #16
1001ade4:	4a4c      	ldr	r2, [pc, #304]	@ (1001af18 <_svfprintf_r+0x14b0>)
1001ade6:	9215      	str	r2, [sp, #84]	@ 0x54
1001ade8:	f280 82e8 	bge.w	1001b3bc <_svfprintf_r+0x1954>
1001adec:	46aa      	mov	sl, r5
1001adee:	2710      	movs	r7, #16
1001adf0:	4615      	mov	r5, r2
1001adf2:	e005      	b.n	1001ae00 <_svfprintf_r+0x1398>
1001adf4:	f108 0808 	add.w	r8, r8, #8
1001adf8:	3e10      	subs	r6, #16
1001adfa:	2e10      	cmp	r6, #16
1001adfc:	f340 82dd 	ble.w	1001b3ba <_svfprintf_r+0x1952>
1001ae00:	3301      	adds	r3, #1
1001ae02:	3410      	adds	r4, #16
1001ae04:	2b07      	cmp	r3, #7
1001ae06:	e9c8 5700 	strd	r5, r7, [r8]
1001ae0a:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001ae0e:	ddf1      	ble.n	1001adf4 <_svfprintf_r+0x138c>
1001ae10:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001ae12:	9807      	ldr	r0, [sp, #28]
1001ae14:	aa32      	add	r2, sp, #200	@ 0xc8
1001ae16:	f005 f92d 	bl	10020074 <__ssprint_r>
1001ae1a:	2800      	cmp	r0, #0
1001ae1c:	f47f aad3 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001ae20:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001ae24:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001ae28:	e7e6      	b.n	1001adf8 <_svfprintf_r+0x1390>
1001ae2a:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001ae2e:	bf1c      	itt	ne
1001ae30:	b2db      	uxtbne	r3, r3
1001ae32:	4602      	movne	r2, r0
1001ae34:	e58e      	b.n	1001a954 <_svfprintf_r+0xeec>
1001ae36:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001ae3a:	bf1c      	itt	ne
1001ae3c:	b2db      	uxtbne	r3, r3
1001ae3e:	4602      	movne	r2, r0
1001ae40:	f7ff b8de 	b.w	1001a000 <_svfprintf_r+0x598>
1001ae44:	2300      	movs	r3, #0
1001ae46:	9807      	ldr	r0, [sp, #28]
1001ae48:	9700      	str	r7, [sp, #0]
1001ae4a:	aa2b      	add	r2, sp, #172	@ 0xac
1001ae4c:	4619      	mov	r1, r3
1001ae4e:	f7fd fc89 	bl	10018764 <_wcsrtombs_r>
1001ae52:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001ae56:	4683      	mov	fp, r0
1001ae58:	f000 82ca 	beq.w	1001b3f0 <_svfprintf_r+0x1988>
1001ae5c:	952b      	str	r5, [sp, #172]	@ 0xac
1001ae5e:	e745      	b.n	1001acec <_svfprintf_r+0x1284>
1001ae60:	4645      	mov	r5, r8
1001ae62:	460c      	mov	r4, r1
1001ae64:	4690      	mov	r8, r2
1001ae66:	3301      	adds	r3, #1
1001ae68:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001ae6a:	f8c8 2000 	str.w	r2, [r8]
1001ae6e:	4434      	add	r4, r6
1001ae70:	2b07      	cmp	r3, #7
1001ae72:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001ae76:	f8c8 6004 	str.w	r6, [r8, #4]
1001ae7a:	f300 8104 	bgt.w	1001b086 <_svfprintf_r+0x161e>
1001ae7e:	f108 0808 	add.w	r8, r8, #8
1001ae82:	f7ff bbb5 	b.w	1001a5f0 <_svfprintf_r+0xb88>
1001ae86:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
1001ae88:	991d      	ldr	r1, [sp, #116]	@ 0x74
1001ae8a:	1aed      	subs	r5, r5, r3
1001ae8c:	461a      	mov	r2, r3
1001ae8e:	4628      	mov	r0, r5
1001ae90:	f7fd f862 	bl	10017f58 <strncpy>
1001ae94:	f898 3001 	ldrb.w	r3, [r8, #1]
1001ae98:	b10b      	cbz	r3, 1001ae9e <_svfprintf_r+0x1436>
1001ae9a:	f108 0801 	add.w	r8, r8, #1
1001ae9e:	f04f 0c00 	mov.w	ip, #0
1001aea2:	e685      	b.n	1001abb0 <_svfprintf_r+0x1148>
1001aea4:	222d      	movs	r2, #45	@ 0x2d
1001aea6:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001aeaa:	f7fe bfaa 	b.w	10019e02 <_svfprintf_r+0x39a>
1001aeae:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001aeb2:	960d      	str	r6, [sp, #52]	@ 0x34
1001aeb4:	f8cd b018 	str.w	fp, [sp, #24]
1001aeb8:	f8cd b020 	str.w	fp, [sp, #32]
1001aebc:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
1001aec0:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
1001aec4:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
1001aec8:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
1001aecc:	f7fe bfaa 	b.w	10019e24 <_svfprintf_r+0x3bc>
1001aed0:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001aed2:	9807      	ldr	r0, [sp, #28]
1001aed4:	aa32      	add	r2, sp, #200	@ 0xc8
1001aed6:	f005 f8cd 	bl	10020074 <__ssprint_r>
1001aeda:	2800      	cmp	r0, #0
1001aedc:	f47f aa73 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001aee0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001aee2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001aee4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001aee8:	f7ff ba80 	b.w	1001a3ec <_svfprintf_r+0x984>
1001aeec:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001aeee:	ebab 060a 	sub.w	r6, fp, sl
1001aef2:	1b5d      	subs	r5, r3, r5
1001aef4:	42ae      	cmp	r6, r5
1001aef6:	bfa8      	it	ge
1001aef8:	462e      	movge	r6, r5
1001aefa:	f7ff bbad 	b.w	1001a658 <_svfprintf_r+0xbf0>
1001aefe:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001af00:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001af02:	681b      	ldr	r3, [r3, #0]
1001af04:	801a      	strh	r2, [r3, #0]
1001af06:	f7ff b8b0 	b.w	1001a06a <_svfprintf_r+0x602>
1001af0a:	f343 12c0 	sbfx	r2, r3, #7, #1
1001af0e:	4611      	mov	r1, r2
1001af10:	b25b      	sxtb	r3, r3
1001af12:	f7ff b83b 	b.w	10019f8c <_svfprintf_r+0x524>
1001af16:	bf00      	nop
1001af18:	10023aa4 	.word	0x10023aa4
1001af1c:	9e08      	ldr	r6, [sp, #32]
1001af1e:	2302      	movs	r3, #2
1001af20:	e9cd 3600 	strd	r3, r6, [sp]
1001af24:	ab30      	add	r3, sp, #192	@ 0xc0
1001af26:	9304      	str	r3, [sp, #16]
1001af28:	ab2b      	add	r3, sp, #172	@ 0xac
1001af2a:	9303      	str	r3, [sp, #12]
1001af2c:	ab29      	add	r3, sp, #164	@ 0xa4
1001af2e:	9302      	str	r3, [sp, #8]
1001af30:	9807      	ldr	r0, [sp, #28]
1001af32:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
1001af36:	f7fd fd03 	bl	10018940 <_dtoa_r>
1001af3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001af3c:	2b67      	cmp	r3, #103	@ 0x67
1001af3e:	4605      	mov	r5, r0
1001af40:	f000 813b 	beq.w	1001b1ba <_svfprintf_r+0x1752>
1001af44:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001af46:	2b47      	cmp	r3, #71	@ 0x47
1001af48:	f000 8137 	beq.w	1001b1ba <_svfprintf_r+0x1752>
1001af4c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001af4e:	f023 0720 	bic.w	r7, r3, #32
1001af52:	2f46      	cmp	r7, #70	@ 0x46
1001af54:	eb00 0406 	add.w	r4, r0, r6
1001af58:	d105      	bne.n	1001af66 <_svfprintf_r+0x14fe>
1001af5a:	7803      	ldrb	r3, [r0, #0]
1001af5c:	2b30      	cmp	r3, #48	@ 0x30
1001af5e:	f000 82f1 	beq.w	1001b544 <_svfprintf_r+0x1adc>
1001af62:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
1001af64:	4434      	add	r4, r6
1001af66:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001af6a:	2200      	movs	r2, #0
1001af6c:	2300      	movs	r3, #0
1001af6e:	f005 fe7b 	bl	10020c68 <__aeabi_dcmpeq>
1001af72:	2800      	cmp	r0, #0
1001af74:	f000 813f 	beq.w	1001b1f6 <_svfprintf_r+0x178e>
1001af78:	4623      	mov	r3, r4
1001af7a:	1b5b      	subs	r3, r3, r5
1001af7c:	9313      	str	r3, [sp, #76]	@ 0x4c
1001af7e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001af80:	9212      	str	r2, [sp, #72]	@ 0x48
1001af82:	2f47      	cmp	r7, #71	@ 0x47
1001af84:	f000 8121 	beq.w	1001b1ca <_svfprintf_r+0x1762>
1001af88:	2f46      	cmp	r7, #70	@ 0x46
1001af8a:	f000 81e3 	beq.w	1001b354 <_svfprintf_r+0x18ec>
1001af8e:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001af90:	1e53      	subs	r3, r2, #1
1001af92:	2961      	cmp	r1, #97	@ 0x61
1001af94:	9329      	str	r3, [sp, #164]	@ 0xa4
1001af96:	f000 8318 	beq.w	1001b5ca <_svfprintf_r+0x1b62>
1001af9a:	2941      	cmp	r1, #65	@ 0x41
1001af9c:	f040 8120 	bne.w	1001b1e0 <_svfprintf_r+0x1778>
1001afa0:	2150      	movs	r1, #80	@ 0x50
1001afa2:	2001      	movs	r0, #1
1001afa4:	2b00      	cmp	r3, #0
1001afa6:	bfb6      	itet	lt
1001afa8:	f1c2 0301 	rsblt	r3, r2, #1
1001afac:	222b      	movge	r2, #43	@ 0x2b
1001afae:	222d      	movlt	r2, #45	@ 0x2d
1001afb0:	2b09      	cmp	r3, #9
1001afb2:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
1001afb6:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
1001afba:	f340 8227 	ble.w	1001b40c <_svfprintf_r+0x19a4>
1001afbe:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
1001afc2:	4eae      	ldr	r6, [pc, #696]	@ (1001b27c <_svfprintf_r+0x1814>)
1001afc4:	4622      	mov	r2, r4
1001afc6:	4610      	mov	r0, r2
1001afc8:	fba6 1203 	umull	r1, r2, r6, r3
1001afcc:	08d2      	lsrs	r2, r2, #3
1001afce:	eb02 0182 	add.w	r1, r2, r2, lsl #2
1001afd2:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
1001afd6:	3130      	adds	r1, #48	@ 0x30
1001afd8:	f800 1c01 	strb.w	r1, [r0, #-1]
1001afdc:	4619      	mov	r1, r3
1001afde:	2963      	cmp	r1, #99	@ 0x63
1001afe0:	4613      	mov	r3, r2
1001afe2:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
1001afe6:	dcee      	bgt.n	1001afc6 <_svfprintf_r+0x155e>
1001afe8:	3330      	adds	r3, #48	@ 0x30
1001afea:	f802 3c01 	strb.w	r3, [r2, #-1]
1001afee:	1e83      	subs	r3, r0, #2
1001aff0:	42a3      	cmp	r3, r4
1001aff2:	f080 82ef 	bcs.w	1001b5d4 <_svfprintf_r+0x1b6c>
1001aff6:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
1001affa:	f813 1b01 	ldrb.w	r1, [r3], #1
1001affe:	f802 1f01 	strb.w	r1, [r2, #1]!
1001b002:	42a3      	cmp	r3, r4
1001b004:	d1f9      	bne.n	1001affa <_svfprintf_r+0x1592>
1001b006:	ab5e      	add	r3, sp, #376	@ 0x178
1001b008:	1a18      	subs	r0, r3, r0
1001b00a:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
1001b00e:	931c      	str	r3, [sp, #112]	@ 0x70
1001b010:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b012:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001b014:	2b01      	cmp	r3, #1
1001b016:	eb03 0b02 	add.w	fp, r3, r2
1001b01a:	f340 822a 	ble.w	1001b472 <_svfprintf_r+0x1a0a>
1001b01e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b020:	449b      	add	fp, r3
1001b022:	9b06      	ldr	r3, [sp, #24]
1001b024:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1001b028:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
1001b02c:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
1001b030:	2300      	movs	r3, #0
1001b032:	9314      	str	r3, [sp, #80]	@ 0x50
1001b034:	9206      	str	r2, [sp, #24]
1001b036:	9310      	str	r3, [sp, #64]	@ 0x40
1001b038:	9312      	str	r3, [sp, #72]	@ 0x48
1001b03a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
1001b03c:	2b00      	cmp	r3, #0
1001b03e:	f040 80d3 	bne.w	1001b1e8 <_svfprintf_r+0x1780>
1001b042:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b046:	9308      	str	r3, [sp, #32]
1001b048:	f7fe beec 	b.w	10019e24 <_svfprintf_r+0x3bc>
1001b04c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1001b04e:	aa32      	add	r2, sp, #200	@ 0xc8
1001b050:	4621      	mov	r1, r4
1001b052:	4658      	mov	r0, fp
1001b054:	f005 f80e 	bl	10020074 <__ssprint_r>
1001b058:	89a3      	ldrh	r3, [r4, #12]
1001b05a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
1001b05e:	f7fe be0c 	b.w	10019c7a <_svfprintf_r+0x212>
1001b062:	4628      	mov	r0, r5
1001b064:	960d      	str	r6, [sp, #52]	@ 0x34
1001b066:	f7fd faeb 	bl	10018640 <strlen>
1001b06a:	4683      	mov	fp, r0
1001b06c:	f7fe bf71 	b.w	10019f52 <_svfprintf_r+0x4ea>
1001b070:	9807      	ldr	r0, [sp, #28]
1001b072:	f10b 0101 	add.w	r1, fp, #1
1001b076:	f7f8 fd53 	bl	10013b20 <_malloc_r>
1001b07a:	4605      	mov	r5, r0
1001b07c:	2800      	cmp	r0, #0
1001b07e:	f000 81b7 	beq.w	1001b3f0 <_svfprintf_r+0x1988>
1001b082:	900c      	str	r0, [sp, #48]	@ 0x30
1001b084:	e63d      	b.n	1001ad02 <_svfprintf_r+0x129a>
1001b086:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b088:	9807      	ldr	r0, [sp, #28]
1001b08a:	aa32      	add	r2, sp, #200	@ 0xc8
1001b08c:	f004 fff2 	bl	10020074 <__ssprint_r>
1001b090:	2800      	cmp	r0, #0
1001b092:	f47f a998 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001b096:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b098:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b09c:	f7ff baa8 	b.w	1001a5f0 <_svfprintf_r+0xb88>
1001b0a0:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b0a2:	9807      	ldr	r0, [sp, #28]
1001b0a4:	aa32      	add	r2, sp, #200	@ 0xc8
1001b0a6:	f004 ffe5 	bl	10020074 <__ssprint_r>
1001b0aa:	2800      	cmp	r0, #0
1001b0ac:	f47f a98b 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001b0b0:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001b0b4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001b0b6:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b0ba:	e68e      	b.n	1001adda <_svfprintf_r+0x1372>
1001b0bc:	2306      	movs	r3, #6
1001b0be:	9308      	str	r3, [sp, #32]
1001b0c0:	f7ff bbef 	b.w	1001a8a2 <_svfprintf_r+0xe3a>
1001b0c4:	9b08      	ldr	r3, [sp, #32]
1001b0c6:	1c5e      	adds	r6, r3, #1
1001b0c8:	2302      	movs	r3, #2
1001b0ca:	e729      	b.n	1001af20 <_svfprintf_r+0x14b8>
1001b0cc:	9e08      	ldr	r6, [sp, #32]
1001b0ce:	2303      	movs	r3, #3
1001b0d0:	e726      	b.n	1001af20 <_svfprintf_r+0x14b8>
1001b0d2:	aa29      	add	r2, sp, #164	@ 0xa4
1001b0d4:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001b0d8:	f7fd fb52 	bl	10018780 <frexp>
1001b0dc:	2200      	movs	r2, #0
1001b0de:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001b0e2:	f005 fb59 	bl	10020798 <__aeabi_dmul>
1001b0e6:	4602      	mov	r2, r0
1001b0e8:	460b      	mov	r3, r1
1001b0ea:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001b0ee:	2200      	movs	r2, #0
1001b0f0:	2300      	movs	r3, #0
1001b0f2:	f005 fdb9 	bl	10020c68 <__aeabi_dcmpeq>
1001b0f6:	2800      	cmp	r0, #0
1001b0f8:	f040 81c0 	bne.w	1001b47c <_svfprintf_r+0x1a14>
1001b0fc:	4b60      	ldr	r3, [pc, #384]	@ (1001b280 <_svfprintf_r+0x1818>)
1001b0fe:	9312      	str	r3, [sp, #72]	@ 0x48
1001b100:	9b08      	ldr	r3, [sp, #32]
1001b102:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
1001b106:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
1001b10a:	462e      	mov	r6, r5
1001b10c:	9514      	str	r5, [sp, #80]	@ 0x50
1001b10e:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001b112:	464d      	mov	r5, r9
1001b114:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001b118:	e005      	b.n	1001b126 <_svfprintf_r+0x16be>
1001b11a:	2200      	movs	r2, #0
1001b11c:	2300      	movs	r3, #0
1001b11e:	f005 fda3 	bl	10020c68 <__aeabi_dcmpeq>
1001b122:	b9f0      	cbnz	r0, 1001b162 <_svfprintf_r+0x16fa>
1001b124:	463d      	mov	r5, r7
1001b126:	4b57      	ldr	r3, [pc, #348]	@ (1001b284 <_svfprintf_r+0x181c>)
1001b128:	2200      	movs	r2, #0
1001b12a:	4640      	mov	r0, r8
1001b12c:	4649      	mov	r1, r9
1001b12e:	f005 fb33 	bl	10020798 <__aeabi_dmul>
1001b132:	4689      	mov	r9, r1
1001b134:	4680      	mov	r8, r0
1001b136:	f005 fddf 	bl	10020cf8 <__aeabi_d2iz>
1001b13a:	4604      	mov	r4, r0
1001b13c:	f005 fac2 	bl	100206c4 <__aeabi_i2d>
1001b140:	4602      	mov	r2, r0
1001b142:	460b      	mov	r3, r1
1001b144:	4640      	mov	r0, r8
1001b146:	4649      	mov	r1, r9
1001b148:	f005 f96e 	bl	10020428 <__aeabi_dsub>
1001b14c:	f81b 3004 	ldrb.w	r3, [fp, r4]
1001b150:	1c6a      	adds	r2, r5, #1
1001b152:	46b2      	mov	sl, r6
1001b154:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
1001b158:	f806 3b01 	strb.w	r3, [r6], #1
1001b15c:	4680      	mov	r8, r0
1001b15e:	4689      	mov	r9, r1
1001b160:	d1db      	bne.n	1001b11a <_svfprintf_r+0x16b2>
1001b162:	46cb      	mov	fp, r9
1001b164:	4657      	mov	r7, sl
1001b166:	46c2      	mov	sl, r8
1001b168:	4b47      	ldr	r3, [pc, #284]	@ (1001b288 <_svfprintf_r+0x1820>)
1001b16a:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
1001b16e:	2200      	movs	r2, #0
1001b170:	4650      	mov	r0, sl
1001b172:	4659      	mov	r1, fp
1001b174:	46a9      	mov	r9, r5
1001b176:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001b178:	f005 fd9e 	bl	10020cb8 <__aeabi_dcmpgt>
1001b17c:	2800      	cmp	r0, #0
1001b17e:	f040 8153 	bne.w	1001b428 <_svfprintf_r+0x19c0>
1001b182:	4b41      	ldr	r3, [pc, #260]	@ (1001b288 <_svfprintf_r+0x1820>)
1001b184:	4650      	mov	r0, sl
1001b186:	4659      	mov	r1, fp
1001b188:	2200      	movs	r2, #0
1001b18a:	f005 fd6d 	bl	10020c68 <__aeabi_dcmpeq>
1001b18e:	b110      	cbz	r0, 1001b196 <_svfprintf_r+0x172e>
1001b190:	07e3      	lsls	r3, r4, #31
1001b192:	f100 8149 	bmi.w	1001b428 <_svfprintf_r+0x19c0>
1001b196:	f1b9 0f00 	cmp.w	r9, #0
1001b19a:	f2c0 815f 	blt.w	1001b45c <_svfprintf_r+0x19f4>
1001b19e:	f109 0301 	add.w	r3, r9, #1
1001b1a2:	4433      	add	r3, r6
1001b1a4:	2230      	movs	r2, #48	@ 0x30
1001b1a6:	f806 2b01 	strb.w	r2, [r6], #1
1001b1aa:	42b3      	cmp	r3, r6
1001b1ac:	d1fb      	bne.n	1001b1a6 <_svfprintf_r+0x173e>
1001b1ae:	1b5b      	subs	r3, r3, r5
1001b1b0:	9313      	str	r3, [sp, #76]	@ 0x4c
1001b1b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b1b4:	f023 0720 	bic.w	r7, r3, #32
1001b1b8:	e6e1      	b.n	1001af7e <_svfprintf_r+0x1516>
1001b1ba:	9b06      	ldr	r3, [sp, #24]
1001b1bc:	07df      	lsls	r7, r3, #31
1001b1be:	f100 80f9 	bmi.w	1001b3b4 <_svfprintf_r+0x194c>
1001b1c2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001b1c4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001b1c6:	1b5b      	subs	r3, r3, r5
1001b1c8:	9313      	str	r3, [sp, #76]	@ 0x4c
1001b1ca:	1cd3      	adds	r3, r2, #3
1001b1cc:	9212      	str	r2, [sp, #72]	@ 0x48
1001b1ce:	db02      	blt.n	1001b1d6 <_svfprintf_r+0x176e>
1001b1d0:	9b08      	ldr	r3, [sp, #32]
1001b1d2:	4293      	cmp	r3, r2
1001b1d4:	da1b      	bge.n	1001b20e <_svfprintf_r+0x17a6>
1001b1d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b1d8:	3b02      	subs	r3, #2
1001b1da:	930e      	str	r3, [sp, #56]	@ 0x38
1001b1dc:	1e53      	subs	r3, r2, #1
1001b1de:	9329      	str	r3, [sp, #164]	@ 0xa4
1001b1e0:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
1001b1e4:	2000      	movs	r0, #0
1001b1e6:	e6dd      	b.n	1001afa4 <_svfprintf_r+0x153c>
1001b1e8:	222d      	movs	r2, #45	@ 0x2d
1001b1ea:	2300      	movs	r3, #0
1001b1ec:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001b1f0:	9308      	str	r3, [sp, #32]
1001b1f2:	f7fe be1a 	b.w	10019e2a <_svfprintf_r+0x3c2>
1001b1f6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001b1f8:	42a3      	cmp	r3, r4
1001b1fa:	f4bf aebe 	bcs.w	1001af7a <_svfprintf_r+0x1512>
1001b1fe:	2130      	movs	r1, #48	@ 0x30
1001b200:	1c5a      	adds	r2, r3, #1
1001b202:	9230      	str	r2, [sp, #192]	@ 0xc0
1001b204:	7019      	strb	r1, [r3, #0]
1001b206:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001b208:	429c      	cmp	r4, r3
1001b20a:	d8f9      	bhi.n	1001b200 <_svfprintf_r+0x1798>
1001b20c:	e6b5      	b.n	1001af7a <_svfprintf_r+0x1512>
1001b20e:	9913      	ldr	r1, [sp, #76]	@ 0x4c
1001b210:	428a      	cmp	r2, r1
1001b212:	f2c0 80c4 	blt.w	1001b39e <_svfprintf_r+0x1936>
1001b216:	9b06      	ldr	r3, [sp, #24]
1001b218:	07dc      	lsls	r4, r3, #31
1001b21a:	f140 8184 	bpl.w	1001b526 <_svfprintf_r+0x1abe>
1001b21e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b220:	eb02 0b03 	add.w	fp, r2, r3
1001b224:	9b06      	ldr	r3, [sp, #24]
1001b226:	0558      	lsls	r0, r3, #21
1001b228:	d502      	bpl.n	1001b230 <_svfprintf_r+0x17c8>
1001b22a:	2a00      	cmp	r2, #0
1001b22c:	f300 814d 	bgt.w	1001b4ca <_svfprintf_r+0x1a62>
1001b230:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b234:	9306      	str	r3, [sp, #24]
1001b236:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b23a:	2367      	movs	r3, #103	@ 0x67
1001b23c:	930e      	str	r3, [sp, #56]	@ 0x38
1001b23e:	2300      	movs	r3, #0
1001b240:	9314      	str	r3, [sp, #80]	@ 0x50
1001b242:	9310      	str	r3, [sp, #64]	@ 0x40
1001b244:	e6f9      	b.n	1001b03a <_svfprintf_r+0x15d2>
1001b246:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b248:	aa32      	add	r2, sp, #200	@ 0xc8
1001b24a:	4658      	mov	r0, fp
1001b24c:	f004 ff12 	bl	10020074 <__ssprint_r>
1001b250:	2800      	cmp	r0, #0
1001b252:	f47f aaa6 	bne.w	1001a7a2 <_svfprintf_r+0xd3a>
1001b256:	f89a 0000 	ldrb.w	r0, [sl]
1001b25a:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001b25c:	aa35      	add	r2, sp, #212	@ 0xd4
1001b25e:	4404      	add	r4, r0
1001b260:	e42e      	b.n	1001aac0 <_svfprintf_r+0x1058>
1001b262:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b264:	9807      	ldr	r0, [sp, #28]
1001b266:	aa32      	add	r2, sp, #200	@ 0xc8
1001b268:	f004 ff04 	bl	10020074 <__ssprint_r>
1001b26c:	2800      	cmp	r0, #0
1001b26e:	f47f a8aa 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001b272:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b274:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b278:	f7ff b9b3 	b.w	1001a5e2 <_svfprintf_r+0xb7a>
1001b27c:	cccccccd 	.word	0xcccccccd
1001b280:	10023874 	.word	0x10023874
1001b284:	40300000 	.word	0x40300000
1001b288:	3fe00000 	.word	0x3fe00000
1001b28c:	2378      	movs	r3, #120	@ 0x78
1001b28e:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
1001b292:	2330      	movs	r3, #48	@ 0x30
1001b294:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
1001b298:	f049 0302 	orr.w	r3, r9, #2
1001b29c:	9306      	str	r3, [sp, #24]
1001b29e:	9b08      	ldr	r3, [sp, #32]
1001b2a0:	2b63      	cmp	r3, #99	@ 0x63
1001b2a2:	f300 80dd 	bgt.w	1001b460 <_svfprintf_r+0x19f8>
1001b2a6:	2300      	movs	r3, #0
1001b2a8:	930c      	str	r3, [sp, #48]	@ 0x30
1001b2aa:	ad45      	add	r5, sp, #276	@ 0x114
1001b2ac:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
1001b2b0:	9315      	str	r3, [sp, #84]	@ 0x54
1001b2b2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001b2b4:	2b00      	cmp	r3, #0
1001b2b6:	db22      	blt.n	1001b2fe <_svfprintf_r+0x1896>
1001b2b8:	2300      	movs	r3, #0
1001b2ba:	931f      	str	r3, [sp, #124]	@ 0x7c
1001b2bc:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001b2c0:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
1001b2c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001b2c6:	2b61      	cmp	r3, #97	@ 0x61
1001b2c8:	f47f aafb 	bne.w	1001a8c2 <_svfprintf_r+0xe5a>
1001b2cc:	aa29      	add	r2, sp, #164	@ 0xa4
1001b2ce:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001b2d2:	f7fd fa55 	bl	10018780 <frexp>
1001b2d6:	2200      	movs	r2, #0
1001b2d8:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
1001b2dc:	f005 fa5c 	bl	10020798 <__aeabi_dmul>
1001b2e0:	4602      	mov	r2, r0
1001b2e2:	460b      	mov	r3, r1
1001b2e4:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001b2e8:	2200      	movs	r2, #0
1001b2ea:	2300      	movs	r3, #0
1001b2ec:	f005 fcbc 	bl	10020c68 <__aeabi_dcmpeq>
1001b2f0:	2800      	cmp	r0, #0
1001b2f2:	f040 80c3 	bne.w	1001b47c <_svfprintf_r+0x1a14>
1001b2f6:	4ba9      	ldr	r3, [pc, #676]	@ (1001b59c <_svfprintf_r+0x1b34>)
1001b2f8:	9312      	str	r3, [sp, #72]	@ 0x48
1001b2fa:	e701      	b.n	1001b100 <_svfprintf_r+0x1698>
1001b2fc:	930c      	str	r3, [sp, #48]	@ 0x30
1001b2fe:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
1001b302:	9324      	str	r3, [sp, #144]	@ 0x90
1001b304:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
1001b308:	9325      	str	r3, [sp, #148]	@ 0x94
1001b30a:	232d      	movs	r3, #45	@ 0x2d
1001b30c:	931f      	str	r3, [sp, #124]	@ 0x7c
1001b30e:	e7d9      	b.n	1001b2c4 <_svfprintf_r+0x185c>
1001b310:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b312:	9807      	ldr	r0, [sp, #28]
1001b314:	aa32      	add	r2, sp, #200	@ 0xc8
1001b316:	f004 fead 	bl	10020074 <__ssprint_r>
1001b31a:	2800      	cmp	r0, #0
1001b31c:	f47f a853 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001b320:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001b322:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b324:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b328:	f7ff b97f 	b.w	1001a62a <_svfprintf_r+0xbc2>
1001b32c:	499c      	ldr	r1, [pc, #624]	@ (1001b5a0 <_svfprintf_r+0x1b38>)
1001b32e:	9115      	str	r1, [sp, #84]	@ 0x54
1001b330:	f7fe bdaf 	b.w	10019e92 <_svfprintf_r+0x42a>
1001b334:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b336:	9807      	ldr	r0, [sp, #28]
1001b338:	aa32      	add	r2, sp, #200	@ 0xc8
1001b33a:	f004 fe9b 	bl	10020074 <__ssprint_r>
1001b33e:	2800      	cmp	r0, #0
1001b340:	f47f a841 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001b344:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001b346:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b348:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001b34a:	1b5d      	subs	r5, r3, r5
1001b34c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b350:	f7ff b982 	b.w	1001a658 <_svfprintf_r+0xbf0>
1001b354:	9b06      	ldr	r3, [sp, #24]
1001b356:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001b358:	9a08      	ldr	r2, [sp, #32]
1001b35a:	f003 0301 	and.w	r3, r3, #1
1001b35e:	2900      	cmp	r1, #0
1001b360:	ea43 0302 	orr.w	r3, r3, r2
1001b364:	f340 810f 	ble.w	1001b586 <_svfprintf_r+0x1b1e>
1001b368:	2b00      	cmp	r3, #0
1001b36a:	f040 80d5 	bne.w	1001b518 <_svfprintf_r+0x1ab0>
1001b36e:	2366      	movs	r3, #102	@ 0x66
1001b370:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001b374:	930e      	str	r3, [sp, #56]	@ 0x38
1001b376:	9b06      	ldr	r3, [sp, #24]
1001b378:	055a      	lsls	r2, r3, #21
1001b37a:	f100 80a8 	bmi.w	1001b4ce <_svfprintf_r+0x1a66>
1001b37e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b382:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b386:	9306      	str	r3, [sp, #24]
1001b388:	e759      	b.n	1001b23e <_svfprintf_r+0x17d6>
1001b38a:	2358      	movs	r3, #88	@ 0x58
1001b38c:	e77f      	b.n	1001b28e <_svfprintf_r+0x1826>
1001b38e:	2200      	movs	r2, #0
1001b390:	9208      	str	r2, [sp, #32]
1001b392:	f7fe bbc1 	b.w	10019b18 <_svfprintf_r+0xb0>
1001b396:	4a82      	ldr	r2, [pc, #520]	@ (1001b5a0 <_svfprintf_r+0x1b38>)
1001b398:	9215      	str	r2, [sp, #84]	@ 0x54
1001b39a:	f7ff b8ed 	b.w	1001a578 <_svfprintf_r+0xb10>
1001b39e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001b3a0:	9a18      	ldr	r2, [sp, #96]	@ 0x60
1001b3a2:	eb03 0b02 	add.w	fp, r3, r2
1001b3a6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001b3a8:	2b00      	cmp	r3, #0
1001b3aa:	f340 8083 	ble.w	1001b4b4 <_svfprintf_r+0x1a4c>
1001b3ae:	2367      	movs	r3, #103	@ 0x67
1001b3b0:	930e      	str	r3, [sp, #56]	@ 0x38
1001b3b2:	e7e0      	b.n	1001b376 <_svfprintf_r+0x190e>
1001b3b4:	19ac      	adds	r4, r5, r6
1001b3b6:	2747      	movs	r7, #71	@ 0x47
1001b3b8:	e5d5      	b.n	1001af66 <_svfprintf_r+0x14fe>
1001b3ba:	4655      	mov	r5, sl
1001b3bc:	3301      	adds	r3, #1
1001b3be:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001b3c0:	f8c8 2000 	str.w	r2, [r8]
1001b3c4:	4434      	add	r4, r6
1001b3c6:	2b07      	cmp	r3, #7
1001b3c8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001b3cc:	f8c8 6004 	str.w	r6, [r8, #4]
1001b3d0:	f77f a821 	ble.w	1001a416 <_svfprintf_r+0x9ae>
1001b3d4:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001b3d6:	9807      	ldr	r0, [sp, #28]
1001b3d8:	aa32      	add	r2, sp, #200	@ 0xc8
1001b3da:	f004 fe4b 	bl	10020074 <__ssprint_r>
1001b3de:	2800      	cmp	r0, #0
1001b3e0:	f47e aff1 	bne.w	1001a3c6 <_svfprintf_r+0x95e>
1001b3e4:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001b3e8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001b3ec:	f7ff b815 	b.w	1001a41a <_svfprintf_r+0x9b2>
1001b3f0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001b3f2:	8993      	ldrh	r3, [r2, #12]
1001b3f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001b3f8:	8193      	strh	r3, [r2, #12]
1001b3fa:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001b3fe:	930a      	str	r3, [sp, #40]	@ 0x28
1001b400:	f7fe bc3e 	b.w	10019c80 <_svfprintf_r+0x218>
1001b404:	4a67      	ldr	r2, [pc, #412]	@ (1001b5a4 <_svfprintf_r+0x1b3c>)
1001b406:	9215      	str	r2, [sp, #84]	@ 0x54
1001b408:	f7fe bf82 	b.w	1001a310 <_svfprintf_r+0x8a8>
1001b40c:	2800      	cmp	r0, #0
1001b40e:	d13f      	bne.n	1001b490 <_svfprintf_r+0x1a28>
1001b410:	2230      	movs	r2, #48	@ 0x30
1001b412:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
1001b416:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
1001b41a:	3330      	adds	r3, #48	@ 0x30
1001b41c:	f802 3b01 	strb.w	r3, [r2], #1
1001b420:	ab2c      	add	r3, sp, #176	@ 0xb0
1001b422:	1ad3      	subs	r3, r2, r3
1001b424:	931c      	str	r3, [sp, #112]	@ 0x70
1001b426:	e5f3      	b.n	1001b010 <_svfprintf_r+0x15a8>
1001b428:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001b42a:	9730      	str	r7, [sp, #192]	@ 0xc0
1001b42c:	7bd9      	ldrb	r1, [r3, #15]
1001b42e:	f816 2c01 	ldrb.w	r2, [r6, #-1]
1001b432:	428a      	cmp	r2, r1
1001b434:	4633      	mov	r3, r6
1001b436:	d109      	bne.n	1001b44c <_svfprintf_r+0x19e4>
1001b438:	2030      	movs	r0, #48	@ 0x30
1001b43a:	f803 0c01 	strb.w	r0, [r3, #-1]
1001b43e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001b440:	1e5a      	subs	r2, r3, #1
1001b442:	9230      	str	r2, [sp, #192]	@ 0xc0
1001b444:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1001b448:	4291      	cmp	r1, r2
1001b44a:	d0f6      	beq.n	1001b43a <_svfprintf_r+0x19d2>
1001b44c:	2a39      	cmp	r2, #57	@ 0x39
1001b44e:	bf0b      	itete	eq
1001b450:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
1001b452:	3201      	addne	r2, #1
1001b454:	7a92      	ldrbeq	r2, [r2, #10]
1001b456:	b2d2      	uxtbne	r2, r2
1001b458:	f803 2c01 	strb.w	r2, [r3, #-1]
1001b45c:	4633      	mov	r3, r6
1001b45e:	e6a6      	b.n	1001b1ae <_svfprintf_r+0x1746>
1001b460:	9807      	ldr	r0, [sp, #28]
1001b462:	1c59      	adds	r1, r3, #1
1001b464:	f7f8 fb5c 	bl	10013b20 <_malloc_r>
1001b468:	4605      	mov	r5, r0
1001b46a:	2800      	cmp	r0, #0
1001b46c:	d0c0      	beq.n	1001b3f0 <_svfprintf_r+0x1988>
1001b46e:	900c      	str	r0, [sp, #48]	@ 0x30
1001b470:	e71c      	b.n	1001b2ac <_svfprintf_r+0x1844>
1001b472:	9b06      	ldr	r3, [sp, #24]
1001b474:	07de      	lsls	r6, r3, #31
1001b476:	f57f add4 	bpl.w	1001b022 <_svfprintf_r+0x15ba>
1001b47a:	e5d0      	b.n	1001b01e <_svfprintf_r+0x15b6>
1001b47c:	4b4a      	ldr	r3, [pc, #296]	@ (1001b5a8 <_svfprintf_r+0x1b40>)
1001b47e:	4a47      	ldr	r2, [pc, #284]	@ (1001b59c <_svfprintf_r+0x1b34>)
1001b480:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001b482:	2961      	cmp	r1, #97	@ 0x61
1001b484:	bf18      	it	ne
1001b486:	461a      	movne	r2, r3
1001b488:	2301      	movs	r3, #1
1001b48a:	9212      	str	r2, [sp, #72]	@ 0x48
1001b48c:	9329      	str	r3, [sp, #164]	@ 0xa4
1001b48e:	e637      	b.n	1001b100 <_svfprintf_r+0x1698>
1001b490:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
1001b494:	e7c1      	b.n	1001b41a <_svfprintf_r+0x19b2>
1001b496:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001b498:	4d44      	ldr	r5, [pc, #272]	@ (1001b5ac <_svfprintf_r+0x1b44>)
1001b49a:	2b00      	cmp	r3, #0
1001b49c:	bfb4      	ite	lt
1001b49e:	222d      	movlt	r2, #45	@ 0x2d
1001b4a0:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
1001b4a4:	4b42      	ldr	r3, [pc, #264]	@ (1001b5b0 <_svfprintf_r+0x1b48>)
1001b4a6:	bfb8      	it	lt
1001b4a8:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
1001b4ac:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
1001b4b0:	f7fe bcab 	b.w	10019e0a <_svfprintf_r+0x3a2>
1001b4b4:	f1c3 0301 	rsb	r3, r3, #1
1001b4b8:	449b      	add	fp, r3
1001b4ba:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b4be:	9306      	str	r3, [sp, #24]
1001b4c0:	2367      	movs	r3, #103	@ 0x67
1001b4c2:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b4c6:	930e      	str	r3, [sp, #56]	@ 0x38
1001b4c8:	e6b9      	b.n	1001b23e <_svfprintf_r+0x17d6>
1001b4ca:	2367      	movs	r3, #103	@ 0x67
1001b4cc:	930e      	str	r3, [sp, #56]	@ 0x38
1001b4ce:	991b      	ldr	r1, [sp, #108]	@ 0x6c
1001b4d0:	780b      	ldrb	r3, [r1, #0]
1001b4d2:	2bff      	cmp	r3, #255	@ 0xff
1001b4d4:	f000 808e 	beq.w	1001b5f4 <_svfprintf_r+0x1b8c>
1001b4d8:	2400      	movs	r4, #0
1001b4da:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1001b4dc:	4620      	mov	r0, r4
1001b4de:	e003      	b.n	1001b4e8 <_svfprintf_r+0x1a80>
1001b4e0:	3001      	adds	r0, #1
1001b4e2:	3101      	adds	r1, #1
1001b4e4:	2bff      	cmp	r3, #255	@ 0xff
1001b4e6:	d008      	beq.n	1001b4fa <_svfprintf_r+0x1a92>
1001b4e8:	4293      	cmp	r3, r2
1001b4ea:	da06      	bge.n	1001b4fa <_svfprintf_r+0x1a92>
1001b4ec:	1ad2      	subs	r2, r2, r3
1001b4ee:	784b      	ldrb	r3, [r1, #1]
1001b4f0:	2b00      	cmp	r3, #0
1001b4f2:	d1f5      	bne.n	1001b4e0 <_svfprintf_r+0x1a78>
1001b4f4:	780b      	ldrb	r3, [r1, #0]
1001b4f6:	3401      	adds	r4, #1
1001b4f8:	e7f4      	b.n	1001b4e4 <_svfprintf_r+0x1a7c>
1001b4fa:	911b      	str	r1, [sp, #108]	@ 0x6c
1001b4fc:	9010      	str	r0, [sp, #64]	@ 0x40
1001b4fe:	9414      	str	r4, [sp, #80]	@ 0x50
1001b500:	9212      	str	r2, [sp, #72]	@ 0x48
1001b502:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
1001b506:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1001b508:	4413      	add	r3, r2
1001b50a:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
1001b50c:	fb02 bb03 	mla	fp, r2, r3, fp
1001b510:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b514:	9306      	str	r3, [sp, #24]
1001b516:	e590      	b.n	1001b03a <_svfprintf_r+0x15d2>
1001b518:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b51a:	18cf      	adds	r7, r1, r3
1001b51c:	443a      	add	r2, r7
1001b51e:	2366      	movs	r3, #102	@ 0x66
1001b520:	4693      	mov	fp, r2
1001b522:	930e      	str	r3, [sp, #56]	@ 0x38
1001b524:	e727      	b.n	1001b376 <_svfprintf_r+0x190e>
1001b526:	4693      	mov	fp, r2
1001b528:	e67c      	b.n	1001b224 <_svfprintf_r+0x17bc>
1001b52a:	9b08      	ldr	r3, [sp, #32]
1001b52c:	9306      	str	r3, [sp, #24]
1001b52e:	469b      	mov	fp, r3
1001b530:	2373      	movs	r3, #115	@ 0x73
1001b532:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001b536:	960d      	str	r6, [sp, #52]	@ 0x34
1001b538:	9008      	str	r0, [sp, #32]
1001b53a:	9014      	str	r0, [sp, #80]	@ 0x50
1001b53c:	9010      	str	r0, [sp, #64]	@ 0x40
1001b53e:	930e      	str	r3, [sp, #56]	@ 0x38
1001b540:	f7fe bc70 	b.w	10019e24 <_svfprintf_r+0x3bc>
1001b544:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001b548:	2200      	movs	r2, #0
1001b54a:	2300      	movs	r3, #0
1001b54c:	f005 fb8c 	bl	10020c68 <__aeabi_dcmpeq>
1001b550:	2800      	cmp	r0, #0
1001b552:	f47f ad06 	bne.w	1001af62 <_svfprintf_r+0x14fa>
1001b556:	f1c6 0601 	rsb	r6, r6, #1
1001b55a:	9629      	str	r6, [sp, #164]	@ 0xa4
1001b55c:	e502      	b.n	1001af64 <_svfprintf_r+0x14fc>
1001b55e:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001b562:	f8dd b020 	ldr.w	fp, [sp, #32]
1001b566:	f7ff bbc1 	b.w	1001acec <_svfprintf_r+0x1284>
1001b56a:	4e0e      	ldr	r6, [pc, #56]	@ (1001b5a4 <_svfprintf_r+0x1b3c>)
1001b56c:	f7ff bae3 	b.w	1001ab36 <_svfprintf_r+0x10ce>
1001b570:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001b572:	7863      	ldrb	r3, [r4, #1]
1001b574:	460c      	mov	r4, r1
1001b576:	f852 1b04 	ldr.w	r1, [r2], #4
1001b57a:	920d      	str	r2, [sp, #52]	@ 0x34
1001b57c:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
1001b580:	9108      	str	r1, [sp, #32]
1001b582:	f7fe bac8 	b.w	10019b16 <_svfprintf_r+0xae>
1001b586:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001b58a:	b99b      	cbnz	r3, 1001b5b4 <_svfprintf_r+0x1b4c>
1001b58c:	f04f 0b01 	mov.w	fp, #1
1001b590:	2366      	movs	r3, #102	@ 0x66
1001b592:	f8cd b018 	str.w	fp, [sp, #24]
1001b596:	930e      	str	r3, [sp, #56]	@ 0x38
1001b598:	e651      	b.n	1001b23e <_svfprintf_r+0x17d6>
1001b59a:	bf00      	nop
1001b59c:	100213b0 	.word	0x100213b0
1001b5a0:	10023ab4 	.word	0x10023ab4
1001b5a4:	10023aa4 	.word	0x10023aa4
1001b5a8:	10023874 	.word	0x10023874
1001b5ac:	1002386c 	.word	0x1002386c
1001b5b0:	10023870 	.word	0x10023870
1001b5b4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001b5b6:	f8dd b020 	ldr.w	fp, [sp, #32]
1001b5ba:	1c5f      	adds	r7, r3, #1
1001b5bc:	44bb      	add	fp, r7
1001b5be:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001b5c2:	9306      	str	r3, [sp, #24]
1001b5c4:	2366      	movs	r3, #102	@ 0x66
1001b5c6:	930e      	str	r3, [sp, #56]	@ 0x38
1001b5c8:	e639      	b.n	1001b23e <_svfprintf_r+0x17d6>
1001b5ca:	2170      	movs	r1, #112	@ 0x70
1001b5cc:	e4e9      	b.n	1001afa2 <_svfprintf_r+0x153a>
1001b5ce:	4a0b      	ldr	r2, [pc, #44]	@ (1001b5fc <_svfprintf_r+0x1b94>)
1001b5d0:	9215      	str	r2, [sp, #84]	@ 0x54
1001b5d2:	e448      	b.n	1001ae66 <_svfprintf_r+0x13fe>
1001b5d4:	2302      	movs	r3, #2
1001b5d6:	931c      	str	r3, [sp, #112]	@ 0x70
1001b5d8:	e51a      	b.n	1001b010 <_svfprintf_r+0x15a8>
1001b5da:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001b5dc:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001b5e0:	8993      	ldrh	r3, [r2, #12]
1001b5e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001b5e6:	8193      	strh	r3, [r2, #12]
1001b5e8:	f7ff b8db 	b.w	1001a7a2 <_svfprintf_r+0xd3a>
1001b5ec:	230c      	movs	r3, #12
1001b5ee:	f8cb 3000 	str.w	r3, [fp]
1001b5f2:	e702      	b.n	1001b3fa <_svfprintf_r+0x1992>
1001b5f4:	2300      	movs	r3, #0
1001b5f6:	9314      	str	r3, [sp, #80]	@ 0x50
1001b5f8:	9310      	str	r3, [sp, #64]	@ 0x40
1001b5fa:	e782      	b.n	1001b502 <_svfprintf_r+0x1a9a>
1001b5fc:	10023aa4 	.word	0x10023aa4

1001b600 <__smakebuf_r>:
1001b600:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001b604:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
1001b608:	460c      	mov	r4, r1
1001b60a:	0799      	lsls	r1, r3, #30
1001b60c:	b096      	sub	sp, #88	@ 0x58
1001b60e:	d508      	bpl.n	1001b622 <__smakebuf_r+0x22>
1001b610:	f104 0343 	add.w	r3, r4, #67	@ 0x43
1001b614:	2201      	movs	r2, #1
1001b616:	e9c4 3204 	strd	r3, r2, [r4, #16]
1001b61a:	6023      	str	r3, [r4, #0]
1001b61c:	b016      	add	sp, #88	@ 0x58
1001b61e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001b622:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1001b626:	2900      	cmp	r1, #0
1001b628:	4606      	mov	r6, r0
1001b62a:	db26      	blt.n	1001b67a <__smakebuf_r+0x7a>
1001b62c:	466a      	mov	r2, sp
1001b62e:	f7fc fce3 	bl	10017ff8 <_fstat_r>
1001b632:	2800      	cmp	r0, #0
1001b634:	db1f      	blt.n	1001b676 <__smakebuf_r+0x76>
1001b636:	9d01      	ldr	r5, [sp, #4]
1001b638:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
1001b63c:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
1001b640:	fab5 f585 	clz	r5, r5
1001b644:	f44f 6880 	mov.w	r8, #1024	@ 0x400
1001b648:	096d      	lsrs	r5, r5, #5
1001b64a:	f44f 6700 	mov.w	r7, #2048	@ 0x800
1001b64e:	4641      	mov	r1, r8
1001b650:	4630      	mov	r0, r6
1001b652:	f7f8 fa65 	bl	10013b20 <_malloc_r>
1001b656:	b1e8      	cbz	r0, 1001b694 <__smakebuf_r+0x94>
1001b658:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001b65c:	f8c4 8014 	str.w	r8, [r4, #20]
1001b660:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1001b664:	6020      	str	r0, [r4, #0]
1001b666:	6120      	str	r0, [r4, #16]
1001b668:	81a3      	strh	r3, [r4, #12]
1001b66a:	bb3d      	cbnz	r5, 1001b6bc <__smakebuf_r+0xbc>
1001b66c:	433b      	orrs	r3, r7
1001b66e:	81a3      	strh	r3, [r4, #12]
1001b670:	b016      	add	sp, #88	@ 0x58
1001b672:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001b676:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001b67a:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
1001b67e:	d019      	beq.n	1001b6b4 <__smakebuf_r+0xb4>
1001b680:	f04f 0840 	mov.w	r8, #64	@ 0x40
1001b684:	2500      	movs	r5, #0
1001b686:	4641      	mov	r1, r8
1001b688:	4630      	mov	r0, r6
1001b68a:	462f      	mov	r7, r5
1001b68c:	f7f8 fa48 	bl	10013b20 <_malloc_r>
1001b690:	2800      	cmp	r0, #0
1001b692:	d1e1      	bne.n	1001b658 <__smakebuf_r+0x58>
1001b694:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001b698:	059a      	lsls	r2, r3, #22
1001b69a:	d4bf      	bmi.n	1001b61c <__smakebuf_r+0x1c>
1001b69c:	f023 0303 	bic.w	r3, r3, #3
1001b6a0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
1001b6a4:	f043 0302 	orr.w	r3, r3, #2
1001b6a8:	2101      	movs	r1, #1
1001b6aa:	e9c4 2104 	strd	r2, r1, [r4, #16]
1001b6ae:	81a3      	strh	r3, [r4, #12]
1001b6b0:	6022      	str	r2, [r4, #0]
1001b6b2:	e7b3      	b.n	1001b61c <__smakebuf_r+0x1c>
1001b6b4:	f44f 6880 	mov.w	r8, #1024	@ 0x400
1001b6b8:	462f      	mov	r7, r5
1001b6ba:	e7c8      	b.n	1001b64e <__smakebuf_r+0x4e>
1001b6bc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
1001b6c0:	4630      	mov	r0, r6
1001b6c2:	f003 fca3 	bl	1001f00c <_isatty_r>
1001b6c6:	b910      	cbnz	r0, 1001b6ce <__smakebuf_r+0xce>
1001b6c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001b6cc:	e7ce      	b.n	1001b66c <__smakebuf_r+0x6c>
1001b6ce:	89a3      	ldrh	r3, [r4, #12]
1001b6d0:	f023 0303 	bic.w	r3, r3, #3
1001b6d4:	f043 0301 	orr.w	r3, r3, #1
1001b6d8:	b21b      	sxth	r3, r3
1001b6da:	e7c7      	b.n	1001b66c <__smakebuf_r+0x6c>

1001b6dc <__ssvfscanf_r>:
1001b6dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001b6e0:	f5ad 7d37 	sub.w	sp, sp, #732	@ 0x2dc
1001b6e4:	468a      	mov	sl, r1
1001b6e6:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
1001b6ea:	af02      	add	r7, sp, #8
1001b6ec:	048c      	lsls	r4, r1, #18
1001b6ee:	64f8      	str	r0, [r7, #76]	@ 0x4c
1001b6f0:	4615      	mov	r5, r2
1001b6f2:	637b      	str	r3, [r7, #52]	@ 0x34
1001b6f4:	d409      	bmi.n	1001b70a <__ssvfscanf_r+0x2e>
1001b6f6:	f8da 3064 	ldr.w	r3, [sl, #100]	@ 0x64
1001b6fa:	f441 5100 	orr.w	r1, r1, #8192	@ 0x2000
1001b6fe:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
1001b702:	f8aa 100c 	strh.w	r1, [sl, #12]
1001b706:	f8ca 3064 	str.w	r3, [sl, #100]	@ 0x64
1001b70a:	2300      	movs	r3, #0
1001b70c:	461c      	mov	r4, r3
1001b70e:	2208      	movs	r2, #8
1001b710:	4619      	mov	r1, r3
1001b712:	f107 0058 	add.w	r0, r7, #88	@ 0x58
1001b716:	62bb      	str	r3, [r7, #40]	@ 0x28
1001b718:	46a1      	mov	r9, r4
1001b71a:	f7fc fba9 	bl	10017e70 <memset>
1001b71e:	46a8      	mov	r8, r5
1001b720:	63fc      	str	r4, [r7, #60]	@ 0x3c
1001b722:	627c      	str	r4, [r7, #36]	@ 0x24
1001b724:	63bc      	str	r4, [r7, #56]	@ 0x38
1001b726:	643c      	str	r4, [r7, #64]	@ 0x40
1001b728:	4b83      	ldr	r3, [pc, #524]	@ (1001b938 <__ssvfscanf_r+0x25c>)
1001b72a:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
1001b72e:	f7fc fc47 	bl	10017fc0 <__locale_mb_cur_max>
1001b732:	f107 0258 	add.w	r2, r7, #88	@ 0x58
1001b736:	9200      	str	r2, [sp, #0]
1001b738:	4603      	mov	r3, r0
1001b73a:	4642      	mov	r2, r8
1001b73c:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001b73e:	f107 0154 	add.w	r1, r7, #84	@ 0x54
1001b742:	47a0      	blx	r4
1001b744:	2800      	cmp	r0, #0
1001b746:	db4c      	blt.n	1001b7e2 <__ssvfscanf_r+0x106>
1001b748:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
1001b74a:	4480      	add	r8, r0
1001b74c:	4606      	mov	r6, r0
1001b74e:	2b00      	cmp	r3, #0
1001b750:	f000 85a8 	beq.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001b754:	2801      	cmp	r0, #1
1001b756:	d053      	beq.n	1001b800 <__ssvfscanf_r+0x124>
1001b758:	2b25      	cmp	r3, #37	@ 0x25
1001b75a:	d05a      	beq.n	1001b812 <__ssvfscanf_r+0x136>
1001b75c:	2800      	cmp	r0, #0
1001b75e:	d0e3      	beq.n	1001b728 <__ssvfscanf_r+0x4c>
1001b760:	f8da 3004 	ldr.w	r3, [sl, #4]
1001b764:	461a      	mov	r2, r3
1001b766:	eba8 0606 	sub.w	r6, r8, r6
1001b76a:	3801      	subs	r0, #1
1001b76c:	2a00      	cmp	r2, #0
1001b76e:	eb06 0400 	add.w	r4, r6, r0
1001b772:	f106 35ff 	add.w	r5, r6, #4294967295	@ 0xffffffff
1001b776:	dd17      	ble.n	1001b7a8 <__ssvfscanf_r+0xcc>
1001b778:	f8da 3000 	ldr.w	r3, [sl]
1001b77c:	786a      	ldrb	r2, [r5, #1]
1001b77e:	7818      	ldrb	r0, [r3, #0]
1001b780:	4290      	cmp	r0, r2
1001b782:	f103 0301 	add.w	r3, r3, #1
1001b786:	f105 0101 	add.w	r1, r5, #1
1001b78a:	f040 858b 	bne.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001b78e:	f8da 2004 	ldr.w	r2, [sl, #4]
1001b792:	f8ca 3000 	str.w	r3, [sl]
1001b796:	3a01      	subs	r2, #1
1001b798:	428c      	cmp	r4, r1
1001b79a:	f8ca 2004 	str.w	r2, [sl, #4]
1001b79e:	f000 809b 	beq.w	1001b8d8 <__ssvfscanf_r+0x1fc>
1001b7a2:	2a00      	cmp	r2, #0
1001b7a4:	460d      	mov	r5, r1
1001b7a6:	dce7      	bgt.n	1001b778 <__ssvfscanf_r+0x9c>
1001b7a8:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001b7aa:	4651      	mov	r1, sl
1001b7ac:	f004 fd22 	bl	100201f4 <__ssrefill_r>
1001b7b0:	2800      	cmp	r0, #0
1001b7b2:	d0e1      	beq.n	1001b778 <__ssvfscanf_r+0x9c>
1001b7b4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001b7b6:	2b00      	cmp	r3, #0
1001b7b8:	f001 81e3 	beq.w	1001cb82 <__ssvfscanf_r+0x14a6>
1001b7bc:	f8ba 300c 	ldrh.w	r3, [sl, #12]
1001b7c0:	f013 0f40 	tst.w	r3, #64	@ 0x40
1001b7c4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001b7c6:	f041 81dd 	bne.w	1001cb84 <__ssvfscanf_r+0x14a8>
1001b7ca:	b123      	cbz	r3, 1001b7d6 <__ssvfscanf_r+0xfa>
1001b7cc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001b7ce:	6818      	ldr	r0, [r3, #0]
1001b7d0:	b108      	cbz	r0, 1001b7d6 <__ssvfscanf_r+0xfa>
1001b7d2:	f7f8 f99d 	bl	10013b10 <free>
1001b7d6:	6c38      	ldr	r0, [r7, #64]	@ 0x40
1001b7d8:	f507 7735 	add.w	r7, r7, #724	@ 0x2d4
1001b7dc:	46bd      	mov	sp, r7
1001b7de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001b7e2:	f64f 73fd 	movw	r3, #65533	@ 0xfffd
1001b7e6:	2208      	movs	r2, #8
1001b7e8:	2100      	movs	r1, #0
1001b7ea:	f107 0058 	add.w	r0, r7, #88	@ 0x58
1001b7ee:	657b      	str	r3, [r7, #84]	@ 0x54
1001b7f0:	f7fc fb3e 	bl	10017e70 <memset>
1001b7f4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
1001b7f6:	f108 0801 	add.w	r8, r8, #1
1001b7fa:	2b00      	cmp	r3, #0
1001b7fc:	f000 8552 	beq.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001b800:	4a4e      	ldr	r2, [pc, #312]	@ (1001b93c <__ssvfscanf_r+0x260>)
1001b802:	5cd2      	ldrb	r2, [r2, r3]
1001b804:	0710      	lsls	r0, r2, #28
1001b806:	f100 855b 	bmi.w	1001c2c0 <__ssvfscanf_r+0xbe4>
1001b80a:	2601      	movs	r6, #1
1001b80c:	2b25      	cmp	r3, #37	@ 0x25
1001b80e:	4630      	mov	r0, r6
1001b810:	d1a6      	bne.n	1001b760 <__ssvfscanf_r+0x84>
1001b812:	2400      	movs	r4, #0
1001b814:	f898 2000 	ldrb.w	r2, [r8]
1001b818:	4625      	mov	r5, r4
1001b81a:	f1a2 0325 	sub.w	r3, r2, #37	@ 0x25
1001b81e:	f108 0101 	add.w	r1, r8, #1
1001b822:	2b55      	cmp	r3, #85	@ 0x55
1001b824:	f200 8649 	bhi.w	1001c4ba <__ssvfscanf_r+0xdde>
1001b828:	e8df f013 	tbh	[pc, r3, lsl #1]
1001b82c:	0647073d 	.word	0x0647073d
1001b830:	06470647 	.word	0x06470647
1001b834:	07340647 	.word	0x07340647
1001b838:	06470647 	.word	0x06470647
1001b83c:	06470647 	.word	0x06470647
1001b840:	064d0647 	.word	0x064d0647
1001b844:	064d064d 	.word	0x064d064d
1001b848:	064d064d 	.word	0x064d064d
1001b84c:	064d064d 	.word	0x064d064d
1001b850:	064d064d 	.word	0x064d064d
1001b854:	0647064d 	.word	0x0647064d
1001b858:	06470647 	.word	0x06470647
1001b85c:	06470647 	.word	0x06470647
1001b860:	06470647 	.word	0x06470647
1001b864:	06470658 	.word	0x06470658
1001b868:	04f4006b 	.word	0x04f4006b
1001b86c:	06580658 	.word	0x06580658
1001b870:	06470658 	.word	0x06470658
1001b874:	06470647 	.word	0x06470647
1001b878:	00620647 	.word	0x00620647
1001b87c:	06470647 	.word	0x06470647
1001b880:	064704ff 	.word	0x064704ff
1001b884:	06470647 	.word	0x06470647
1001b888:	064704b5 	.word	0x064704b5
1001b88c:	06470647 	.word	0x06470647
1001b890:	06980647 	.word	0x06980647
1001b894:	06470647 	.word	0x06470647
1001b898:	064706d9 	.word	0x064706d9
1001b89c:	06470647 	.word	0x06470647
1001b8a0:	06470647 	.word	0x06470647
1001b8a4:	06470658 	.word	0x06470658
1001b8a8:	04f6006d 	.word	0x04f6006d
1001b8ac:	06580658 	.word	0x06580658
1001b8b0:	06ed0658 	.word	0x06ed0658
1001b8b4:	006206e4 	.word	0x006206e4
1001b8b8:	071e0647 	.word	0x071e0647
1001b8bc:	06fd070f 	.word	0x06fd070f
1001b8c0:	06fa0501 	.word	0x06fa0501
1001b8c4:	06470647 	.word	0x06470647
1001b8c8:	005b04b7 	.word	0x005b04b7
1001b8cc:	0647072b 	.word	0x0647072b
1001b8d0:	06980647 	.word	0x06980647
1001b8d4:	005b0647 	.word	0x005b0647
1001b8d8:	3502      	adds	r5, #2
1001b8da:	444d      	add	r5, r9
1001b8dc:	eba5 0906 	sub.w	r9, r5, r6
1001b8e0:	e722      	b.n	1001b728 <__ssvfscanf_r+0x4c>
1001b8e2:	0723      	lsls	r3, r4, #28
1001b8e4:	f040 84de 	bne.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001b8e8:	f898 2001 	ldrb.w	r2, [r8, #1]
1001b8ec:	4688      	mov	r8, r1
1001b8ee:	e794      	b.n	1001b81a <__ssvfscanf_r+0x13e>
1001b8f0:	0722      	lsls	r2, r4, #28
1001b8f2:	f040 84d7 	bne.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001b8f6:	f898 2001 	ldrb.w	r2, [r8, #1]
1001b8fa:	f044 0402 	orr.w	r4, r4, #2
1001b8fe:	4688      	mov	r8, r1
1001b900:	e78b      	b.n	1001b81a <__ssvfscanf_r+0x13e>
1001b902:	f044 0401 	orr.w	r4, r4, #1
1001b906:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
1001b90a:	4688      	mov	r8, r1
1001b90c:	f04f 0b00 	mov.w	fp, #0
1001b910:	f8da 3004 	ldr.w	r3, [sl, #4]
1001b914:	2b00      	cmp	r3, #0
1001b916:	f340 8448 	ble.w	1001c1aa <__ssvfscanf_r+0xace>
1001b91a:	0660      	lsls	r0, r4, #25
1001b91c:	f140 844f 	bpl.w	1001c1be <__ssvfscanf_r+0xae2>
1001b920:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
1001b924:	2b03      	cmp	r3, #3
1001b926:	f200 8793 	bhi.w	1001c850 <__ssvfscanf_r+0x1174>
1001b92a:	e8df f013 	tbh	[pc, r3, lsl #1]
1001b92e:	02b1      	.short	0x02b1
1001b930:	014801f4 	.word	0x014801f4
1001b934:	0009      	.short	0x0009
1001b936:	bf00      	nop
1001b938:	2000042c 	.word	0x2000042c
1001b93c:	10023919 	.word	0x10023919
1001b940:	f444 63f0 	orr.w	r3, r4, #1920	@ 0x780
1001b944:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001b946:	64bb      	str	r3, [r7, #72]	@ 0x48
1001b948:	f7fc fb40 	bl	10017fcc <_localeconv_r>
1001b94c:	6803      	ldr	r3, [r0, #0]
1001b94e:	61fb      	str	r3, [r7, #28]
1001b950:	1e6b      	subs	r3, r5, #1
1001b952:	f5b3 7fae 	cmp.w	r3, #348	@ 0x15c
1001b956:	f04f 0400 	mov.w	r4, #0
1001b95a:	bf88      	it	hi
1001b95c:	f46f 70ae 	mvnhi.w	r0, #348	@ 0x15c
1001b960:	e9c7 4404 	strd	r4, r4, [r7, #16]
1001b964:	bf88      	it	hi
1001b966:	eb05 0c00 	addhi.w	ip, r5, r0
1001b96a:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
1001b96e:	bf94      	ite	ls
1001b970:	f04f 0c00 	movls.w	ip, #0
1001b974:	f240 155d 	movwhi	r5, #349	@ 0x15d
1001b978:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001b97a:	647c      	str	r4, [r7, #68]	@ 0x44
1001b97c:	633c      	str	r4, [r7, #48]	@ 0x30
1001b97e:	61bc      	str	r4, [r7, #24]
1001b980:	469b      	mov	fp, r3
1001b982:	f8c7 c00c 	str.w	ip, [r7, #12]
1001b986:	f8c7 8020 	str.w	r8, [r7, #32]
1001b98a:	f8da 1000 	ldr.w	r1, [sl]
1001b98e:	780a      	ldrb	r2, [r1, #0]
1001b990:	f1a2 032b 	sub.w	r3, r2, #43	@ 0x2b
1001b994:	2b4e      	cmp	r3, #78	@ 0x4e
1001b996:	d850      	bhi.n	1001ba3a <__ssvfscanf_r+0x35e>
1001b998:	e8df f013 	tbh	[pc, r3, lsl #1]
1001b99c:	004f03b7 	.word	0x004f03b7
1001b9a0:	004f03b7 	.word	0x004f03b7
1001b9a4:	0099004f 	.word	0x0099004f
1001b9a8:	009d009d 	.word	0x009d009d
1001b9ac:	009d009d 	.word	0x009d009d
1001b9b0:	009d009d 	.word	0x009d009d
1001b9b4:	009d009d 	.word	0x009d009d
1001b9b8:	004f009d 	.word	0x004f009d
1001b9bc:	004f004f 	.word	0x004f004f
1001b9c0:	004f004f 	.word	0x004f004f
1001b9c4:	004f004f 	.word	0x004f004f
1001b9c8:	033b03ac 	.word	0x033b03ac
1001b9cc:	033b033b 	.word	0x033b033b
1001b9d0:	03d003d9 	.word	0x03d003d9
1001b9d4:	004f004f 	.word	0x004f004f
1001b9d8:	004f03bf 	.word	0x004f03bf
1001b9dc:	004f004f 	.word	0x004f004f
1001b9e0:	0393004f 	.word	0x0393004f
1001b9e4:	0372004f 	.word	0x0372004f
1001b9e8:	004f004f 	.word	0x004f004f
1001b9ec:	036d004f 	.word	0x036d004f
1001b9f0:	004f004f 	.word	0x004f004f
1001b9f4:	0356004f 	.word	0x0356004f
1001b9f8:	004f03a7 	.word	0x004f03a7
1001b9fc:	004f004f 	.word	0x004f004f
1001ba00:	004f004f 	.word	0x004f004f
1001ba04:	004f004f 	.word	0x004f004f
1001ba08:	033b03ac 	.word	0x033b03ac
1001ba0c:	033b033b 	.word	0x033b033b
1001ba10:	03d003d9 	.word	0x03d003d9
1001ba14:	004f004f 	.word	0x004f004f
1001ba18:	004f03bf 	.word	0x004f03bf
1001ba1c:	004f004f 	.word	0x004f004f
1001ba20:	0393004f 	.word	0x0393004f
1001ba24:	0372004f 	.word	0x0372004f
1001ba28:	004f004f 	.word	0x004f004f
1001ba2c:	036d004f 	.word	0x036d004f
1001ba30:	004f004f 	.word	0x004f004f
1001ba34:	0356004f 	.word	0x0356004f
1001ba38:	03a7      	.short	0x03a7
1001ba3a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001ba3c:	059e      	lsls	r6, r3, #22
1001ba3e:	d568      	bpl.n	1001bb12 <__ssvfscanf_r+0x436>
1001ba40:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001ba44:	f898 3000 	ldrb.w	r3, [r8]
1001ba48:	4293      	cmp	r3, r2
1001ba4a:	d162      	bne.n	1001bb12 <__ssvfscanf_r+0x436>
1001ba4c:	e9c7 5401 	strd	r5, r4, [r7, #4]
1001ba50:	2600      	movs	r6, #0
1001ba52:	4655      	mov	r5, sl
1001ba54:	e006      	b.n	1001ba64 <__ssvfscanf_r+0x388>
1001ba56:	6029      	str	r1, [r5, #0]
1001ba58:	f891 e000 	ldrb.w	lr, [r1]
1001ba5c:	f898 0000 	ldrb.w	r0, [r8]
1001ba60:	4586      	cmp	lr, r0
1001ba62:	d11b      	bne.n	1001ba9c <__ssvfscanf_r+0x3c0>
1001ba64:	f818 0f01 	ldrb.w	r0, [r8, #1]!
1001ba68:	46b2      	mov	sl, r6
1001ba6a:	464c      	mov	r4, r9
1001ba6c:	3101      	adds	r1, #1
1001ba6e:	3601      	adds	r6, #1
1001ba70:	f109 0901 	add.w	r9, r9, #1
1001ba74:	2800      	cmp	r0, #0
1001ba76:	f000 8693 	beq.w	1001c7a0 <__ssvfscanf_r+0x10c4>
1001ba7a:	6868      	ldr	r0, [r5, #4]
1001ba7c:	3801      	subs	r0, #1
1001ba7e:	2800      	cmp	r0, #0
1001ba80:	6068      	str	r0, [r5, #4]
1001ba82:	dce8      	bgt.n	1001ba56 <__ssvfscanf_r+0x37a>
1001ba84:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001ba86:	4629      	mov	r1, r5
1001ba88:	f004 fbb4 	bl	100201f4 <__ssrefill_r>
1001ba8c:	b930      	cbnz	r0, 1001ba9c <__ssvfscanf_r+0x3c0>
1001ba8e:	6829      	ldr	r1, [r5, #0]
1001ba90:	f898 0000 	ldrb.w	r0, [r8]
1001ba94:	f891 e000 	ldrb.w	lr, [r1]
1001ba98:	4586      	cmp	lr, r0
1001ba9a:	d0e3      	beq.n	1001ba64 <__ssvfscanf_r+0x388>
1001ba9c:	4652      	mov	r2, sl
1001ba9e:	46aa      	mov	sl, r5
1001baa0:	e9d7 5807 	ldrd	r5, r8, [r7, #28]
1001baa4:	4623      	mov	r3, r4
1001baa6:	442e      	add	r6, r5
1001baa8:	68bc      	ldr	r4, [r7, #8]
1001baaa:	623c      	str	r4, [r7, #32]
1001baac:	4634      	mov	r4, r6
1001baae:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
1001bab0:	61fa      	str	r2, [r7, #28]
1001bab2:	4699      	mov	r9, r3
1001bab4:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
1001bab8:	4652      	mov	r2, sl
1001baba:	4630      	mov	r0, r6
1001babc:	f004 fb5e 	bl	1002017c <_sungetc_r>
1001bac0:	42ac      	cmp	r4, r5
1001bac2:	d1f7      	bne.n	1001bab4 <__ssvfscanf_r+0x3d8>
1001bac4:	69fa      	ldr	r2, [r7, #28]
1001bac6:	6a3c      	ldr	r4, [r7, #32]
1001bac8:	eba9 0902 	sub.w	r9, r9, r2
1001bacc:	e023      	b.n	1001bb16 <__ssvfscanf_r+0x43a>
1001bace:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bad0:	05d9      	lsls	r1, r3, #23
1001bad2:	f100 854e 	bmi.w	1001c572 <__ssvfscanf_r+0xe96>
1001bad6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001bad8:	191b      	adds	r3, r3, r4
1001bada:	d11a      	bne.n	1001bb12 <__ssvfscanf_r+0x436>
1001badc:	461c      	mov	r4, r3
1001bade:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bae0:	f423 73c0 	bic.w	r3, r3, #384	@ 0x180
1001bae4:	e9c7 4311 	strd	r4, r3, [r7, #68]	@ 0x44
1001bae8:	f80b 2b01 	strb.w	r2, [fp], #1
1001baec:	3d01      	subs	r5, #1
1001baee:	f8da 3004 	ldr.w	r3, [sl, #4]
1001baf2:	3b01      	subs	r3, #1
1001baf4:	2b00      	cmp	r3, #0
1001baf6:	f109 0901 	add.w	r9, r9, #1
1001bafa:	f8ca 3004 	str.w	r3, [sl, #4]
1001bafe:	f340 83d4 	ble.w	1001c2aa <__ssvfscanf_r+0xbce>
1001bb02:	f8da 3000 	ldr.w	r3, [sl]
1001bb06:	3301      	adds	r3, #1
1001bb08:	f8ca 3000 	str.w	r3, [sl]
1001bb0c:	2d00      	cmp	r5, #0
1001bb0e:	f47f af3c 	bne.w	1001b98a <__ssvfscanf_r+0x2ae>
1001bb12:	f8d7 8020 	ldr.w	r8, [r7, #32]
1001bb16:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001bb18:	2b00      	cmp	r3, #0
1001bb1a:	f040 8337 	bne.w	1001c18c <__ssvfscanf_r+0xab0>
1001bb1e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001bb20:	3b01      	subs	r3, #1
1001bb22:	2b01      	cmp	r3, #1
1001bb24:	f240 83b1 	bls.w	1001c28a <__ssvfscanf_r+0xbae>
1001bb28:	1e63      	subs	r3, r4, #1
1001bb2a:	2b06      	cmp	r3, #6
1001bb2c:	f240 864f 	bls.w	1001c7ce <__ssvfscanf_r+0x10f2>
1001bb30:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bb32:	05d8      	lsls	r0, r3, #23
1001bb34:	d51c      	bpl.n	1001bb70 <__ssvfscanf_r+0x494>
1001bb36:	0559      	lsls	r1, r3, #21
1001bb38:	f101 8127 	bmi.w	1001cd8a <__ssvfscanf_r+0x16ae>
1001bb3c:	f81b 1c01 	ldrb.w	r1, [fp, #-1]
1001bb40:	2965      	cmp	r1, #101	@ 0x65
1001bb42:	f10b 33ff 	add.w	r3, fp, #4294967295	@ 0xffffffff
1001bb46:	f109 34ff 	add.w	r4, r9, #4294967295	@ 0xffffffff
1001bb4a:	d00b      	beq.n	1001bb64 <__ssvfscanf_r+0x488>
1001bb4c:	2945      	cmp	r1, #69	@ 0x45
1001bb4e:	d009      	beq.n	1001bb64 <__ssvfscanf_r+0x488>
1001bb50:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bb52:	4652      	mov	r2, sl
1001bb54:	f004 fb12 	bl	1002017c <_sungetc_r>
1001bb58:	f81b 1c02 	ldrb.w	r1, [fp, #-2]
1001bb5c:	f1a9 0402 	sub.w	r4, r9, #2
1001bb60:	f1ab 0302 	sub.w	r3, fp, #2
1001bb64:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bb66:	4652      	mov	r2, sl
1001bb68:	46a1      	mov	r9, r4
1001bb6a:	469b      	mov	fp, r3
1001bb6c:	f004 fb06 	bl	1002017c <_sungetc_r>
1001bb70:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bb72:	f013 0210 	ands.w	r2, r3, #16
1001bb76:	f47f add7 	bne.w	1001b728 <__ssvfscanf_r+0x4c>
1001bb7a:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
1001bb7e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
1001bb82:	f88b 2000 	strb.w	r2, [fp]
1001bb86:	f000 850f 	beq.w	1001c5a8 <__ssvfscanf_r+0xecc>
1001bb8a:	697b      	ldr	r3, [r7, #20]
1001bb8c:	2b00      	cmp	r3, #0
1001bb8e:	f041 8023 	bne.w	1001cbd8 <__ssvfscanf_r+0x14fc>
1001bb92:	2200      	movs	r2, #0
1001bb94:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
1001bb96:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bb98:	f002 fff8 	bl	1001eb8c <_strtod_r>
1001bb9c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001bb9e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001bba0:	07d2      	lsls	r2, r2, #31
1001bba2:	4605      	mov	r5, r0
1001bba4:	460e      	mov	r6, r1
1001bba6:	f103 0404 	add.w	r4, r3, #4
1001bbaa:	f140 8629 	bpl.w	1001c800 <__ssvfscanf_r+0x1124>
1001bbae:	681b      	ldr	r3, [r3, #0]
1001bbb0:	e9c3 5600 	strd	r5, r6, [r3]
1001bbb4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001bbb6:	637c      	str	r4, [r7, #52]	@ 0x34
1001bbb8:	3301      	adds	r3, #1
1001bbba:	643b      	str	r3, [r7, #64]	@ 0x40
1001bbbc:	e5b4      	b.n	1001b728 <__ssvfscanf_r+0x4c>
1001bbbe:	1e6b      	subs	r3, r5, #1
1001bbc0:	f5b3 7fae 	cmp.w	r3, #348	@ 0x15c
1001bbc4:	bf88      	it	hi
1001bbc6:	f46f 72ae 	mvnhi.w	r2, #348	@ 0x15c
1001bbca:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
1001bbce:	bf8c      	ite	hi
1001bbd0:	18a9      	addhi	r1, r5, r2
1001bbd2:	2100      	movls	r1, #0
1001bbd4:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001bbd6:	461e      	mov	r6, r3
1001bbd8:	6bba      	ldr	r2, [r7, #56]	@ 0x38
1001bbda:	6479      	str	r1, [r7, #68]	@ 0x44
1001bbdc:	4653      	mov	r3, sl
1001bbde:	f444 6458 	orr.w	r4, r4, #3456	@ 0xd80
1001bbe2:	46ca      	mov	sl, r9
1001bbe4:	bf88      	it	hi
1001bbe6:	f240 155d 	movwhi	r5, #349	@ 0x15d
1001bbea:	f04f 0b00 	mov.w	fp, #0
1001bbee:	4699      	mov	r9, r3
1001bbf0:	f8d9 0000 	ldr.w	r0, [r9]
1001bbf4:	f890 c000 	ldrb.w	ip, [r0]
1001bbf8:	f1ac 032b 	sub.w	r3, ip, #43	@ 0x2b
1001bbfc:	2b4d      	cmp	r3, #77	@ 0x4d
1001bbfe:	d862      	bhi.n	1001bcc6 <__ssvfscanf_r+0x5ea>
1001bc00:	e8df f013 	tbh	[pc, r3, lsl #1]
1001bc04:	006102b5 	.word	0x006102b5
1001bc08:	006102b5 	.word	0x006102b5
1001bc0c:	031e0061 	.word	0x031e0061
1001bc10:	02150215 	.word	0x02150215
1001bc14:	02150215 	.word	0x02150215
1001bc18:	02150215 	.word	0x02150215
1001bc1c:	02bb0215 	.word	0x02bb0215
1001bc20:	006102bb 	.word	0x006102bb
1001bc24:	00610061 	.word	0x00610061
1001bc28:	00610061 	.word	0x00610061
1001bc2c:	00610061 	.word	0x00610061
1001bc30:	004e004e 	.word	0x004e004e
1001bc34:	004e004e 	.word	0x004e004e
1001bc38:	004e004e 	.word	0x004e004e
1001bc3c:	00610061 	.word	0x00610061
1001bc40:	00610061 	.word	0x00610061
1001bc44:	00610061 	.word	0x00610061
1001bc48:	00610061 	.word	0x00610061
1001bc4c:	00610061 	.word	0x00610061
1001bc50:	00610061 	.word	0x00610061
1001bc54:	00610061 	.word	0x00610061
1001bc58:	00610061 	.word	0x00610061
1001bc5c:	02a90061 	.word	0x02a90061
1001bc60:	00610061 	.word	0x00610061
1001bc64:	00610061 	.word	0x00610061
1001bc68:	00610061 	.word	0x00610061
1001bc6c:	00610061 	.word	0x00610061
1001bc70:	004e004e 	.word	0x004e004e
1001bc74:	004e004e 	.word	0x004e004e
1001bc78:	004e004e 	.word	0x004e004e
1001bc7c:	00610061 	.word	0x00610061
1001bc80:	00610061 	.word	0x00610061
1001bc84:	00610061 	.word	0x00610061
1001bc88:	00610061 	.word	0x00610061
1001bc8c:	00610061 	.word	0x00610061
1001bc90:	00610061 	.word	0x00610061
1001bc94:	00610061 	.word	0x00610061
1001bc98:	00610061 	.word	0x00610061
1001bc9c:	02a90061 	.word	0x02a90061
1001bca0:	2a0a      	cmp	r2, #10
1001bca2:	dd10      	ble.n	1001bcc6 <__ssvfscanf_r+0x5ea>
1001bca4:	f424 6438 	bic.w	r4, r4, #2944	@ 0xb80
1001bca8:	f806 cb01 	strb.w	ip, [r6], #1
1001bcac:	f8d9 3004 	ldr.w	r3, [r9, #4]
1001bcb0:	3b01      	subs	r3, #1
1001bcb2:	2b00      	cmp	r3, #0
1001bcb4:	f8c9 3004 	str.w	r3, [r9, #4]
1001bcb8:	f340 82dd 	ble.w	1001c276 <__ssvfscanf_r+0xb9a>
1001bcbc:	3001      	adds	r0, #1
1001bcbe:	f8c9 0000 	str.w	r0, [r9]
1001bcc2:	3d01      	subs	r5, #1
1001bcc4:	d194      	bne.n	1001bbf0 <__ssvfscanf_r+0x514>
1001bcc6:	464b      	mov	r3, r9
1001bcc8:	05e0      	lsls	r0, r4, #23
1001bcca:	46d1      	mov	r9, sl
1001bccc:	63ba      	str	r2, [r7, #56]	@ 0x38
1001bcce:	469a      	mov	sl, r3
1001bcd0:	d507      	bpl.n	1001bce2 <__ssvfscanf_r+0x606>
1001bcd2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001bcd4:	429e      	cmp	r6, r3
1001bcd6:	f200 8479 	bhi.w	1001c5cc <__ssvfscanf_r+0xef0>
1001bcda:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001bcdc:	429e      	cmp	r6, r3
1001bcde:	f000 82e1 	beq.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001bce2:	f014 0210 	ands.w	r2, r4, #16
1001bce6:	d111      	bne.n	1001bd0c <__ssvfscanf_r+0x630>
1001bce8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
1001bcea:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
1001bcec:	6abd      	ldr	r5, [r7, #40]	@ 0x28
1001bcee:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bcf0:	7032      	strb	r2, [r6, #0]
1001bcf2:	47a8      	blx	r5
1001bcf4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001bcf6:	06a1      	lsls	r1, r4, #26
1001bcf8:	f103 0504 	add.w	r5, r3, #4
1001bcfc:	f140 844c 	bpl.w	1001c598 <__ssvfscanf_r+0xebc>
1001bd00:	681b      	ldr	r3, [r3, #0]
1001bd02:	6018      	str	r0, [r3, #0]
1001bd04:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001bd06:	637d      	str	r5, [r7, #52]	@ 0x34
1001bd08:	3301      	adds	r3, #1
1001bd0a:	643b      	str	r3, [r7, #64]	@ 0x40
1001bd0c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001bd0e:	1af6      	subs	r6, r6, r3
1001bd10:	445e      	add	r6, fp
1001bd12:	44b1      	add	r9, r6
1001bd14:	e508      	b.n	1001b728 <__ssvfscanf_r+0x4c>
1001bd16:	2d00      	cmp	r5, #0
1001bd18:	bf08      	it	eq
1001bd1a:	f04f 35ff 	moveq.w	r5, #4294967295	@ 0xffffffff
1001bd1e:	07e0      	lsls	r0, r4, #31
1001bd20:	f004 0310 	and.w	r3, r4, #16
1001bd24:	f140 82eb 	bpl.w	1001c2fe <__ssvfscanf_r+0xc22>
1001bd28:	2b00      	cmp	r3, #0
1001bd2a:	f040 84bf 	bne.w	1001c6ac <__ssvfscanf_r+0xfd0>
1001bd2e:	6b7e      	ldr	r6, [r7, #52]	@ 0x34
1001bd30:	0621      	lsls	r1, r4, #24
1001bd32:	f856 2b04 	ldr.w	r2, [r6], #4
1001bd36:	64ba      	str	r2, [r7, #72]	@ 0x48
1001bd38:	f140 875d 	bpl.w	1001cbf6 <__ssvfscanf_r+0x151a>
1001bd3c:	647b      	str	r3, [r7, #68]	@ 0x44
1001bd3e:	2a00      	cmp	r2, #0
1001bd40:	f000 82b0 	beq.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001bd44:	2080      	movs	r0, #128	@ 0x80
1001bd46:	f7f7 fedb 	bl	10013b00 <malloc>
1001bd4a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001bd4c:	4602      	mov	r2, r0
1001bd4e:	2800      	cmp	r0, #0
1001bd50:	f000 8717 	beq.w	1001cb82 <__ssvfscanf_r+0x14a6>
1001bd54:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001bd56:	6008      	str	r0, [r1, #0]
1001bd58:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
1001bd5a:	88c4      	ldrh	r4, [r0, #6]
1001bd5c:	8881      	ldrh	r1, [r0, #4]
1001bd5e:	428c      	cmp	r4, r1
1001bd60:	f080 8607 	bcs.w	1001c972 <__ssvfscanf_r+0x1296>
1001bd64:	6800      	ldr	r0, [r0, #0]
1001bd66:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001bd68:	f840 1024 	str.w	r1, [r0, r4, lsl #2]
1001bd6c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
1001bd6e:	637e      	str	r6, [r7, #52]	@ 0x34
1001bd70:	3401      	adds	r4, #1
1001bd72:	80cc      	strh	r4, [r1, #6]
1001bd74:	4696      	mov	lr, r2
1001bd76:	f04f 0c20 	mov.w	ip, #32
1001bd7a:	f8da 1000 	ldr.w	r1, [sl]
1001bd7e:	4eaf      	ldr	r6, [pc, #700]	@ (1001c03c <__ssvfscanf_r+0x960>)
1001bd80:	7809      	ldrb	r1, [r1, #0]
1001bd82:	f816 b001 	ldrb.w	fp, [r6, r1]
1001bd86:	f01b 0b08 	ands.w	fp, fp, #8
1001bd8a:	d170      	bne.n	1001be6e <__ssvfscanf_r+0x792>
1001bd8c:	f8c7 801c 	str.w	r8, [r7, #28]
1001bd90:	623e      	str	r6, [r7, #32]
1001bd92:	f8c7 e030 	str.w	lr, [r7, #48]	@ 0x30
1001bd96:	462e      	mov	r6, r5
1001bd98:	f8c7 c044 	str.w	ip, [r7, #68]	@ 0x44
1001bd9c:	4698      	mov	r8, r3
1001bd9e:	4615      	mov	r5, r2
1001bda0:	f7fc f90e 	bl	10017fc0 <__locale_mb_cur_max>
1001bda4:	4558      	cmp	r0, fp
1001bda6:	f43f ad05 	beq.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001bdaa:	e9da 3200 	ldrd	r3, r2, [sl]
1001bdae:	f507 71b8 	add.w	r1, r7, #368	@ 0x170
1001bdb2:	4608      	mov	r0, r1
1001bdb4:	62f9      	str	r1, [r7, #44]	@ 0x2c
1001bdb6:	f813 1b01 	ldrb.w	r1, [r3], #1
1001bdba:	f800 100b 	strb.w	r1, [r0, fp]
1001bdbe:	3a01      	subs	r2, #1
1001bdc0:	e9ca 3200 	strd	r3, r2, [sl]
1001bdc4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1001bdc6:	2b03      	cmp	r3, #3
1001bdc8:	f10b 0b01 	add.w	fp, fp, #1
1001bdcc:	f107 0468 	add.w	r4, r7, #104	@ 0x68
1001bdd0:	d102      	bne.n	1001bdd8 <__ssvfscanf_r+0x6fc>
1001bdd2:	6823      	ldr	r3, [r4, #0]
1001bdd4:	2b04      	cmp	r3, #4
1001bdd6:	d004      	beq.n	1001bde2 <__ssvfscanf_r+0x706>
1001bdd8:	2208      	movs	r2, #8
1001bdda:	2100      	movs	r1, #0
1001bddc:	4620      	mov	r0, r4
1001bdde:	f7fc f847 	bl	10017e70 <memset>
1001bde2:	9400      	str	r4, [sp, #0]
1001bde4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
1001bde6:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bde8:	465b      	mov	r3, fp
1001bdea:	4629      	mov	r1, r5
1001bdec:	f003 fac0 	bl	1001f370 <_mbrtowc_r>
1001bdf0:	1c42      	adds	r2, r0, #1
1001bdf2:	6278      	str	r0, [r7, #36]	@ 0x24
1001bdf4:	f43f acde 	beq.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001bdf8:	2800      	cmp	r0, #0
1001bdfa:	f000 860c 	beq.w	1001ca16 <__ssvfscanf_r+0x133a>
1001bdfe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1001be00:	3302      	adds	r3, #2
1001be02:	d01e      	beq.n	1001be42 <__ssvfscanf_r+0x766>
1001be04:	6828      	ldr	r0, [r5, #0]
1001be06:	f003 fb65 	bl	1001f4d4 <iswspace>
1001be0a:	2800      	cmp	r0, #0
1001be0c:	f040 877a 	bne.w	1001cd04 <__ssvfscanf_r+0x1628>
1001be10:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1001be12:	2b03      	cmp	r3, #3
1001be14:	44d9      	add	r9, fp
1001be16:	d102      	bne.n	1001be1e <__ssvfscanf_r+0x742>
1001be18:	6823      	ldr	r3, [r4, #0]
1001be1a:	2b04      	cmp	r3, #4
1001be1c:	d000      	beq.n	1001be20 <__ssvfscanf_r+0x744>
1001be1e:	3e01      	subs	r6, #1
1001be20:	f1b8 0f00 	cmp.w	r8, #0
1001be24:	f040 86e3 	bne.w	1001cbee <__ssvfscanf_r+0x1512>
1001be28:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001be2a:	3504      	adds	r5, #4
1001be2c:	2b00      	cmp	r3, #0
1001be2e:	f000 86de 	beq.w	1001cbee <__ssvfscanf_r+0x1512>
1001be32:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001be34:	1aec      	subs	r4, r5, r3
1001be36:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001be38:	ebb3 0fa4 	cmp.w	r3, r4, asr #2
1001be3c:	f240 8794 	bls.w	1001cd68 <__ssvfscanf_r+0x168c>
1001be40:	46c3      	mov	fp, r8
1001be42:	f8da 3004 	ldr.w	r3, [sl, #4]
1001be46:	2b00      	cmp	r3, #0
1001be48:	f340 8728 	ble.w	1001cc9c <__ssvfscanf_r+0x15c0>
1001be4c:	f8da 3000 	ldr.w	r3, [sl]
1001be50:	6a3a      	ldr	r2, [r7, #32]
1001be52:	781b      	ldrb	r3, [r3, #0]
1001be54:	5cd3      	ldrb	r3, [r2, r3]
1001be56:	0718      	lsls	r0, r3, #28
1001be58:	d401      	bmi.n	1001be5e <__ssvfscanf_r+0x782>
1001be5a:	2e00      	cmp	r6, #0
1001be5c:	d1a0      	bne.n	1001bda0 <__ssvfscanf_r+0x6c4>
1001be5e:	4643      	mov	r3, r8
1001be60:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
1001be64:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
1001be68:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001be6c:	462a      	mov	r2, r5
1001be6e:	2b00      	cmp	r3, #0
1001be70:	f47f ac5a 	bne.w	1001b728 <__ssvfscanf_r+0x4c>
1001be74:	6013      	str	r3, [r2, #0]
1001be76:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001be78:	b133      	cbz	r3, 1001be88 <__ssvfscanf_r+0x7ac>
1001be7a:	eba2 020e 	sub.w	r2, r2, lr
1001be7e:	1093      	asrs	r3, r2, #2
1001be80:	3301      	adds	r3, #1
1001be82:	459c      	cmp	ip, r3
1001be84:	f200 8611 	bhi.w	1001caaa <__ssvfscanf_r+0x13ce>
1001be88:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001be8a:	3301      	adds	r3, #1
1001be8c:	643b      	str	r3, [r7, #64]	@ 0x40
1001be8e:	e44b      	b.n	1001b728 <__ssvfscanf_r+0x4c>
1001be90:	2d00      	cmp	r5, #0
1001be92:	bf08      	it	eq
1001be94:	f04f 35ff 	moveq.w	r5, #4294967295	@ 0xffffffff
1001be98:	07e6      	lsls	r6, r4, #31
1001be9a:	f004 0210 	and.w	r2, r4, #16
1001be9e:	f140 829d 	bpl.w	1001c3dc <__ssvfscanf_r+0xd00>
1001bea2:	2a00      	cmp	r2, #0
1001bea4:	f040 843e 	bne.w	1001c724 <__ssvfscanf_r+0x1048>
1001bea8:	6b79      	ldr	r1, [r7, #52]	@ 0x34
1001beaa:	0624      	lsls	r4, r4, #24
1001beac:	f851 3b04 	ldr.w	r3, [r1], #4
1001beb0:	637b      	str	r3, [r7, #52]	@ 0x34
1001beb2:	6239      	str	r1, [r7, #32]
1001beb4:	f140 86aa 	bpl.w	1001cc0c <__ssvfscanf_r+0x1530>
1001beb8:	64ba      	str	r2, [r7, #72]	@ 0x48
1001beba:	2b00      	cmp	r3, #0
1001bebc:	f000 81f2 	beq.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001bec0:	2080      	movs	r0, #128	@ 0x80
1001bec2:	f7f7 fe1d 	bl	10013b00 <malloc>
1001bec6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001bec8:	4683      	mov	fp, r0
1001beca:	2800      	cmp	r0, #0
1001becc:	f000 8659 	beq.w	1001cb82 <__ssvfscanf_r+0x14a6>
1001bed0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001bed2:	6018      	str	r0, [r3, #0]
1001bed4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001bed6:	88dc      	ldrh	r4, [r3, #6]
1001bed8:	8899      	ldrh	r1, [r3, #4]
1001beda:	428c      	cmp	r4, r1
1001bedc:	f080 8535 	bcs.w	1001c94a <__ssvfscanf_r+0x126e>
1001bee0:	6818      	ldr	r0, [r3, #0]
1001bee2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001bee4:	f840 3024 	str.w	r3, [r0, r4, lsl #2]
1001bee8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001beea:	f8c7 b030 	str.w	fp, [r7, #48]	@ 0x30
1001beee:	3401      	adds	r4, #1
1001bef0:	80dc      	strh	r4, [r3, #6]
1001bef2:	2320      	movs	r3, #32
1001bef4:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001bef6:	6a7c      	ldr	r4, [r7, #36]	@ 0x24
1001bef8:	f8c7 801c 	str.w	r8, [r7, #28]
1001befc:	2600      	movs	r6, #0
1001befe:	647a      	str	r2, [r7, #68]	@ 0x44
1001bf00:	46a8      	mov	r8, r5
1001bf02:	f7fc f85d 	bl	10017fc0 <__locale_mb_cur_max>
1001bf06:	42b0      	cmp	r0, r6
1001bf08:	f43f ac54 	beq.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001bf0c:	e9da 3200 	ldrd	r3, r2, [sl]
1001bf10:	f507 70b8 	add.w	r0, r7, #368	@ 0x170
1001bf14:	f813 1b01 	ldrb.w	r1, [r3], #1
1001bf18:	5581      	strb	r1, [r0, r6]
1001bf1a:	3a01      	subs	r2, #1
1001bf1c:	2c03      	cmp	r4, #3
1001bf1e:	e9ca 3200 	strd	r3, r2, [sl]
1001bf22:	f106 0601 	add.w	r6, r6, #1
1001bf26:	f107 0560 	add.w	r5, r7, #96	@ 0x60
1001bf2a:	d102      	bne.n	1001bf32 <__ssvfscanf_r+0x856>
1001bf2c:	682b      	ldr	r3, [r5, #0]
1001bf2e:	2b04      	cmp	r3, #4
1001bf30:	d004      	beq.n	1001bf3c <__ssvfscanf_r+0x860>
1001bf32:	2208      	movs	r2, #8
1001bf34:	2100      	movs	r1, #0
1001bf36:	4628      	mov	r0, r5
1001bf38:	f7fb ff9a 	bl	10017e70 <memset>
1001bf3c:	9500      	str	r5, [sp, #0]
1001bf3e:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001bf40:	4633      	mov	r3, r6
1001bf42:	f507 72b8 	add.w	r2, r7, #368	@ 0x170
1001bf46:	4659      	mov	r1, fp
1001bf48:	f003 fa12 	bl	1001f370 <_mbrtowc_r>
1001bf4c:	4604      	mov	r4, r0
1001bf4e:	1c60      	adds	r0, r4, #1
1001bf50:	f43f ac30 	beq.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001bf54:	2c00      	cmp	r4, #0
1001bf56:	f040 83f2 	bne.w	1001c73e <__ssvfscanf_r+0x1062>
1001bf5a:	f8cb 4000 	str.w	r4, [fp]
1001bf5e:	4623      	mov	r3, r4
1001bf60:	2208      	movs	r2, #8
1001bf62:	2100      	movs	r1, #0
1001bf64:	f107 0068 	add.w	r0, r7, #104	@ 0x68
1001bf68:	64bb      	str	r3, [r7, #72]	@ 0x48
1001bf6a:	f7fb ff81 	bl	10017e70 <memset>
1001bf6e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001bf70:	461a      	mov	r2, r3
1001bf72:	4b33      	ldr	r3, [pc, #204]	@ (1001c040 <__ssvfscanf_r+0x964>)
1001bf74:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
1001bf78:	64bb      	str	r3, [r7, #72]	@ 0x48
1001bf7a:	e9d7 c012 	ldrd	ip, r0, [r7, #72]	@ 0x48
1001bf7e:	f107 0368 	add.w	r3, r7, #104	@ 0x68
1001bf82:	f107 0150 	add.w	r1, r7, #80	@ 0x50
1001bf86:	47e0      	blx	ip
1001bf88:	2801      	cmp	r0, #1
1001bf8a:	bf0c      	ite	eq
1001bf8c:	f897 3050 	ldrbeq.w	r3, [r7, #80]	@ 0x50
1001bf90:	2300      	movne	r3, #0
1001bf92:	f107 0270 	add.w	r2, r7, #112	@ 0x70
1001bf96:	5cd3      	ldrb	r3, [r2, r3]
1001bf98:	2b00      	cmp	r3, #0
1001bf9a:	f000 863e 	beq.w	1001cc1a <__ssvfscanf_r+0x153e>
1001bf9e:	2c03      	cmp	r4, #3
1001bfa0:	44b1      	add	r9, r6
1001bfa2:	f000 83d5 	beq.w	1001c750 <__ssvfscanf_r+0x1074>
1001bfa6:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
1001bfaa:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001bfac:	2b00      	cmp	r3, #0
1001bfae:	f040 83c4 	bne.w	1001c73a <__ssvfscanf_r+0x105e>
1001bfb2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001bfb4:	f10b 0b04 	add.w	fp, fp, #4
1001bfb8:	2b00      	cmp	r3, #0
1001bfba:	f000 83be 	beq.w	1001c73a <__ssvfscanf_r+0x105e>
1001bfbe:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001bfc0:	ebab 0503 	sub.w	r5, fp, r3
1001bfc4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001bfc6:	ebb3 0fa5 	cmp.w	r3, r5, asr #2
1001bfca:	f240 83d8 	bls.w	1001c77e <__ssvfscanf_r+0x10a2>
1001bfce:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
1001bfd0:	f8da 3004 	ldr.w	r3, [sl, #4]
1001bfd4:	2b00      	cmp	r3, #0
1001bfd6:	f340 82a3 	ble.w	1001c520 <__ssvfscanf_r+0xe44>
1001bfda:	f1b8 0f00 	cmp.w	r8, #0
1001bfde:	d190      	bne.n	1001bf02 <__ssvfscanf_r+0x826>
1001bfe0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001bfe2:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001bfe6:	627c      	str	r4, [r7, #36]	@ 0x24
1001bfe8:	b97a      	cbnz	r2, 1001c00a <__ssvfscanf_r+0x92e>
1001bfea:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001bfec:	f8cb 2000 	str.w	r2, [fp]
1001bff0:	b143      	cbz	r3, 1001c004 <__ssvfscanf_r+0x928>
1001bff2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001bff4:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
1001bff6:	ebab 0303 	sub.w	r3, fp, r3
1001bffa:	109a      	asrs	r2, r3, #2
1001bffc:	3201      	adds	r2, #1
1001bffe:	4291      	cmp	r1, r2
1001c000:	f200 86a7 	bhi.w	1001cd52 <__ssvfscanf_r+0x1676>
1001c004:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001c006:	3301      	adds	r3, #1
1001c008:	643b      	str	r3, [r7, #64]	@ 0x40
1001c00a:	6a3b      	ldr	r3, [r7, #32]
1001c00c:	637b      	str	r3, [r7, #52]	@ 0x34
1001c00e:	f7ff bb8b 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001c012:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c014:	050e      	lsls	r6, r1, #20
1001c016:	f57f ad7c 	bpl.w	1001bb12 <__ssvfscanf_r+0x436>
1001c01a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c01c:	191b      	adds	r3, r3, r4
1001c01e:	f47f ad78 	bne.w	1001bb12 <__ssvfscanf_r+0x436>
1001c022:	461c      	mov	r4, r3
1001c024:	f421 73c0 	bic.w	r3, r1, #384	@ 0x180
1001c028:	e9c7 4311 	strd	r4, r3, [r7, #68]	@ 0x44
1001c02c:	e55c      	b.n	1001bae8 <__ssvfscanf_r+0x40c>
1001c02e:	4b05      	ldr	r3, [pc, #20]	@ (1001c044 <__ssvfscanf_r+0x968>)
1001c030:	f424 6438 	bic.w	r4, r4, #2944	@ 0xb80
1001c034:	f933 2012 	ldrsh.w	r2, [r3, r2, lsl #1]
1001c038:	e636      	b.n	1001bca8 <__ssvfscanf_r+0x5cc>
1001c03a:	bf00      	nop
1001c03c:	10023919 	.word	0x10023919
1001c040:	2000042c 	.word	0x2000042c
1001c044:	10023acc 	.word	0x10023acc
1001c048:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c04a:	f401 6318 	and.w	r3, r1, #2432	@ 0x980
1001c04e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
1001c052:	f47f ad5e 	bne.w	1001bb12 <__ssvfscanf_r+0x436>
1001c056:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c058:	2b01      	cmp	r3, #1
1001c05a:	f47f ad5a 	bne.w	1001bb12 <__ssvfscanf_r+0x436>
1001c05e:	f421 7380 	bic.w	r3, r1, #256	@ 0x100
1001c062:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
1001c066:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c068:	2330      	movs	r3, #48	@ 0x30
1001c06a:	f80b 3b01 	strb.w	r3, [fp], #1
1001c06e:	2300      	movs	r3, #0
1001c070:	3d01      	subs	r5, #1
1001c072:	633b      	str	r3, [r7, #48]	@ 0x30
1001c074:	e538      	b.n	1001bae8 <__ssvfscanf_r+0x40c>
1001c076:	2c06      	cmp	r4, #6
1001c078:	f47f ad4b 	bne.w	1001bb12 <__ssvfscanf_r+0x436>
1001c07c:	2407      	movs	r4, #7
1001c07e:	e533      	b.n	1001bae8 <__ssvfscanf_r+0x40c>
1001c080:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c082:	051e      	lsls	r6, r3, #20
1001c084:	f57f ad45 	bpl.w	1001bb12 <__ssvfscanf_r+0x436>
1001c088:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c08a:	f401 63a0 	and.w	r3, r1, #1280	@ 0x500
1001c08e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
1001c092:	d005      	beq.n	1001c0a0 <__ssvfscanf_r+0x9c4>
1001c094:	0549      	lsls	r1, r1, #21
1001c096:	f57f ad3c 	bpl.w	1001bb12 <__ssvfscanf_r+0x436>
1001c09a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c09c:	2b00      	cmp	r3, #0
1001c09e:	d048      	beq.n	1001c132 <__ssvfscanf_r+0xa56>
1001c0a0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c0a2:	059b      	lsls	r3, r3, #22
1001c0a4:	d404      	bmi.n	1001c0b0 <__ssvfscanf_r+0x9d4>
1001c0a6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c0a8:	69b9      	ldr	r1, [r7, #24]
1001c0aa:	1a5b      	subs	r3, r3, r1
1001c0ac:	e9c7 b304 	strd	fp, r3, [r7, #16]
1001c0b0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c0b2:	f423 6378 	bic.w	r3, r3, #3968	@ 0xf80
1001c0b6:	f443 73c0 	orr.w	r3, r3, #384	@ 0x180
1001c0ba:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c0bc:	2300      	movs	r3, #0
1001c0be:	633b      	str	r3, [r7, #48]	@ 0x30
1001c0c0:	e512      	b.n	1001bae8 <__ssvfscanf_r+0x40c>
1001c0c2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c0c4:	2b00      	cmp	r3, #0
1001c0c6:	f040 821d 	bne.w	1001c504 <__ssvfscanf_r+0xe28>
1001c0ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c0cc:	b933      	cbnz	r3, 1001c0dc <__ssvfscanf_r+0xa00>
1001c0ce:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c0d0:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
1001c0d4:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
1001c0d8:	f000 8606 	beq.w	1001cce8 <__ssvfscanf_r+0x160c>
1001c0dc:	2c01      	cmp	r4, #1
1001c0de:	f000 820d 	beq.w	1001c4fc <__ssvfscanf_r+0xe20>
1001c0e2:	2c04      	cmp	r4, #4
1001c0e4:	f000 820a 	beq.w	1001c4fc <__ssvfscanf_r+0xe20>
1001c0e8:	e513      	b.n	1001bb12 <__ssvfscanf_r+0x436>
1001c0ea:	2c07      	cmp	r4, #7
1001c0ec:	f47f ad11 	bne.w	1001bb12 <__ssvfscanf_r+0x436>
1001c0f0:	2408      	movs	r4, #8
1001c0f2:	e4f9      	b.n	1001bae8 <__ssvfscanf_r+0x40c>
1001c0f4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c0f6:	0519      	lsls	r1, r3, #20
1001c0f8:	f100 820c 	bmi.w	1001c514 <__ssvfscanf_r+0xe38>
1001c0fc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c0fe:	2b01      	cmp	r3, #1
1001c100:	f47f ad07 	bne.w	1001bb12 <__ssvfscanf_r+0x436>
1001c104:	2302      	movs	r3, #2
1001c106:	647b      	str	r3, [r7, #68]	@ 0x44
1001c108:	e4ee      	b.n	1001bae8 <__ssvfscanf_r+0x40c>
1001c10a:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c10c:	0618      	lsls	r0, r3, #24
1001c10e:	f57f ad00 	bpl.w	1001bb12 <__ssvfscanf_r+0x436>
1001c112:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
1001c116:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c118:	e4e6      	b.n	1001bae8 <__ssvfscanf_r+0x40c>
1001c11a:	2c00      	cmp	r4, #0
1001c11c:	f040 81e9 	bne.w	1001c4f2 <__ssvfscanf_r+0xe16>
1001c120:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c122:	bb8b      	cbnz	r3, 1001c188 <__ssvfscanf_r+0xaac>
1001c124:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c126:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
1001c12a:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
1001c12e:	f000 85cd 	beq.w	1001cccc <__ssvfscanf_r+0x15f0>
1001c132:	2300      	movs	r3, #0
1001c134:	f8d7 8020 	ldr.w	r8, [r7, #32]
1001c138:	633b      	str	r3, [r7, #48]	@ 0x30
1001c13a:	e4f0      	b.n	1001bb1e <__ssvfscanf_r+0x442>
1001c13c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c13e:	051b      	lsls	r3, r3, #20
1001c140:	f100 81d1 	bmi.w	1001c4e6 <__ssvfscanf_r+0xe0a>
1001c144:	2c02      	cmp	r4, #2
1001c146:	f47f ace4 	bne.w	1001bb12 <__ssvfscanf_r+0x436>
1001c14a:	2403      	movs	r4, #3
1001c14c:	e4cc      	b.n	1001bae8 <__ssvfscanf_r+0x40c>
1001c14e:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c150:	0508      	lsls	r0, r1, #20
1001c152:	d599      	bpl.n	1001c088 <__ssvfscanf_r+0x9ac>
1001c154:	e761      	b.n	1001c01a <__ssvfscanf_r+0x93e>
1001c156:	f404 63c0 	and.w	r3, r4, #1536	@ 0x600
1001c15a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
1001c15e:	f47f adb2 	bne.w	1001bcc6 <__ssvfscanf_r+0x5ea>
1001c162:	f424 7400 	bic.w	r4, r4, #512	@ 0x200
1001c166:	f444 64a0 	orr.w	r4, r4, #1280	@ 0x500
1001c16a:	2210      	movs	r2, #16
1001c16c:	e59c      	b.n	1001bca8 <__ssvfscanf_r+0x5cc>
1001c16e:	0623      	lsls	r3, r4, #24
1001c170:	f57f ada9 	bpl.w	1001bcc6 <__ssvfscanf_r+0x5ea>
1001c174:	f024 0480 	bic.w	r4, r4, #128	@ 0x80
1001c178:	e596      	b.n	1001bca8 <__ssvfscanf_r+0x5cc>
1001c17a:	4b94      	ldr	r3, [pc, #592]	@ (1001c3cc <__ssvfscanf_r+0xcf0>)
1001c17c:	f933 2012 	ldrsh.w	r2, [r3, r2, lsl #1]
1001c180:	2a08      	cmp	r2, #8
1001c182:	f73f ad8f 	bgt.w	1001bca4 <__ssvfscanf_r+0x5c8>
1001c186:	e59e      	b.n	1001bcc6 <__ssvfscanf_r+0x5ea>
1001c188:	f8d7 8020 	ldr.w	r8, [r7, #32]
1001c18c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c18e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
1001c192:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c194:	e4c3      	b.n	1001bb1e <__ssvfscanf_r+0x442>
1001c196:	f044 0401 	orr.w	r4, r4, #1
1001c19a:	f8da 3004 	ldr.w	r3, [sl, #4]
1001c19e:	2b00      	cmp	r3, #0
1001c1a0:	4688      	mov	r8, r1
1001c1a2:	f04f 0b02 	mov.w	fp, #2
1001c1a6:	f73f abb8 	bgt.w	1001b91a <__ssvfscanf_r+0x23e>
1001c1aa:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c1ac:	4651      	mov	r1, sl
1001c1ae:	f004 f821 	bl	100201f4 <__ssrefill_r>
1001c1b2:	2800      	cmp	r0, #0
1001c1b4:	f47f aafe 	bne.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001c1b8:	0660      	lsls	r0, r4, #25
1001c1ba:	f53f abb1 	bmi.w	1001b920 <__ssvfscanf_r+0x244>
1001c1be:	f8da 2000 	ldr.w	r2, [sl]
1001c1c2:	4e83      	ldr	r6, [pc, #524]	@ (1001c3d0 <__ssvfscanf_r+0xcf4>)
1001c1c4:	7813      	ldrb	r3, [r2, #0]
1001c1c6:	5cf3      	ldrb	r3, [r6, r3]
1001c1c8:	0719      	lsls	r1, r3, #28
1001c1ca:	f57f aba9 	bpl.w	1001b920 <__ssvfscanf_r+0x244>
1001c1ce:	4633      	mov	r3, r6
1001c1d0:	4656      	mov	r6, sl
1001c1d2:	469a      	mov	sl, r3
1001c1d4:	e005      	b.n	1001c1e2 <__ssvfscanf_r+0xb06>
1001c1d6:	6032      	str	r2, [r6, #0]
1001c1d8:	7813      	ldrb	r3, [r2, #0]
1001c1da:	f81a 3003 	ldrb.w	r3, [sl, r3]
1001c1de:	071b      	lsls	r3, r3, #28
1001c1e0:	d515      	bpl.n	1001c20e <__ssvfscanf_r+0xb32>
1001c1e2:	6873      	ldr	r3, [r6, #4]
1001c1e4:	3b01      	subs	r3, #1
1001c1e6:	2b00      	cmp	r3, #0
1001c1e8:	f109 0901 	add.w	r9, r9, #1
1001c1ec:	6073      	str	r3, [r6, #4]
1001c1ee:	f102 0201 	add.w	r2, r2, #1
1001c1f2:	dcf0      	bgt.n	1001c1d6 <__ssvfscanf_r+0xafa>
1001c1f4:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c1f6:	4631      	mov	r1, r6
1001c1f8:	f003 fffc 	bl	100201f4 <__ssrefill_r>
1001c1fc:	2800      	cmp	r0, #0
1001c1fe:	f040 82e3 	bne.w	1001c7c8 <__ssvfscanf_r+0x10ec>
1001c202:	6832      	ldr	r2, [r6, #0]
1001c204:	7813      	ldrb	r3, [r2, #0]
1001c206:	f81a 3003 	ldrb.w	r3, [sl, r3]
1001c20a:	071b      	lsls	r3, r3, #28
1001c20c:	d4e9      	bmi.n	1001c1e2 <__ssvfscanf_r+0xb06>
1001c20e:	46b2      	mov	sl, r6
1001c210:	f7ff bb86 	b.w	1001b920 <__ssvfscanf_r+0x244>
1001c214:	f044 0401 	orr.w	r4, r4, #1
1001c218:	4b6e      	ldr	r3, [pc, #440]	@ (1001c3d4 <__ssvfscanf_r+0xcf8>)
1001c21a:	62bb      	str	r3, [r7, #40]	@ 0x28
1001c21c:	230a      	movs	r3, #10
1001c21e:	4688      	mov	r8, r1
1001c220:	63bb      	str	r3, [r7, #56]	@ 0x38
1001c222:	f04f 0b03 	mov.w	fp, #3
1001c226:	f7ff bb73 	b.w	1001b910 <__ssvfscanf_r+0x234>
1001c22a:	f044 0401 	orr.w	r4, r4, #1
1001c22e:	4b6a      	ldr	r3, [pc, #424]	@ (1001c3d8 <__ssvfscanf_r+0xcfc>)
1001c230:	62bb      	str	r3, [r7, #40]	@ 0x28
1001c232:	2308      	movs	r3, #8
1001c234:	4688      	mov	r8, r1
1001c236:	63bb      	str	r3, [r7, #56]	@ 0x38
1001c238:	f04f 0b03 	mov.w	fp, #3
1001c23c:	f7ff bb68 	b.w	1001b910 <__ssvfscanf_r+0x234>
1001c240:	0523      	lsls	r3, r4, #20
1001c242:	f57f ad31 	bpl.w	1001bca8 <__ssvfscanf_r+0x5cc>
1001c246:	b912      	cbnz	r2, 1001c24e <__ssvfscanf_r+0xb72>
1001c248:	f444 7400 	orr.w	r4, r4, #512	@ 0x200
1001c24c:	2208      	movs	r2, #8
1001c24e:	0561      	lsls	r1, r4, #21
1001c250:	f100 819e 	bmi.w	1001c590 <__ssvfscanf_r+0xeb4>
1001c254:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c256:	f424 7460 	bic.w	r4, r4, #896	@ 0x380
1001c25a:	b113      	cbz	r3, 1001c262 <__ssvfscanf_r+0xb86>
1001c25c:	3b01      	subs	r3, #1
1001c25e:	647b      	str	r3, [r7, #68]	@ 0x44
1001c260:	3501      	adds	r5, #1
1001c262:	f8d9 3004 	ldr.w	r3, [r9, #4]
1001c266:	3b01      	subs	r3, #1
1001c268:	2b00      	cmp	r3, #0
1001c26a:	f10b 0b01 	add.w	fp, fp, #1
1001c26e:	f8c9 3004 	str.w	r3, [r9, #4]
1001c272:	f73f ad23 	bgt.w	1001bcbc <__ssvfscanf_r+0x5e0>
1001c276:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c278:	64ba      	str	r2, [r7, #72]	@ 0x48
1001c27a:	4649      	mov	r1, r9
1001c27c:	f003 ffba 	bl	100201f4 <__ssrefill_r>
1001c280:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001c282:	2800      	cmp	r0, #0
1001c284:	f43f ad1d 	beq.w	1001bcc2 <__ssvfscanf_r+0x5e6>
1001c288:	e51d      	b.n	1001bcc6 <__ssvfscanf_r+0x5ea>
1001c28a:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
1001c28c:	45ab      	cmp	fp, r5
1001c28e:	f240 8114 	bls.w	1001c4ba <__ssvfscanf_r+0xdde>
1001c292:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001c294:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001c298:	4652      	mov	r2, sl
1001c29a:	4620      	mov	r0, r4
1001c29c:	f003 ff6e 	bl	1002017c <_sungetc_r>
1001c2a0:	45ab      	cmp	fp, r5
1001c2a2:	d1f7      	bne.n	1001c294 <__ssvfscanf_r+0xbb8>
1001c2a4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c2a6:	f7ff ba90 	b.w	1001b7ca <__ssvfscanf_r+0xee>
1001c2aa:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c2ac:	4651      	mov	r1, sl
1001c2ae:	f003 ffa1 	bl	100201f4 <__ssrefill_r>
1001c2b2:	2800      	cmp	r0, #0
1001c2b4:	f47f ac2d 	bne.w	1001bb12 <__ssvfscanf_r+0x436>
1001c2b8:	2d00      	cmp	r5, #0
1001c2ba:	f47f ab66 	bne.w	1001b98a <__ssvfscanf_r+0x2ae>
1001c2be:	e428      	b.n	1001bb12 <__ssvfscanf_r+0x436>
1001c2c0:	f8da 2004 	ldr.w	r2, [sl, #4]
1001c2c4:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001c2c6:	e010      	b.n	1001c2ea <__ssvfscanf_r+0xc0e>
1001c2c8:	f8da 3000 	ldr.w	r3, [sl]
1001c2cc:	4940      	ldr	r1, [pc, #256]	@ (1001c3d0 <__ssvfscanf_r+0xcf4>)
1001c2ce:	781a      	ldrb	r2, [r3, #0]
1001c2d0:	5c8a      	ldrb	r2, [r1, r2]
1001c2d2:	0711      	lsls	r1, r2, #28
1001c2d4:	f103 0301 	add.w	r3, r3, #1
1001c2d8:	f57f aa26 	bpl.w	1001b728 <__ssvfscanf_r+0x4c>
1001c2dc:	f8da 2004 	ldr.w	r2, [sl, #4]
1001c2e0:	3a01      	subs	r2, #1
1001c2e2:	e9ca 3200 	strd	r3, r2, [sl]
1001c2e6:	f109 0901 	add.w	r9, r9, #1
1001c2ea:	2a00      	cmp	r2, #0
1001c2ec:	dcec      	bgt.n	1001c2c8 <__ssvfscanf_r+0xbec>
1001c2ee:	4651      	mov	r1, sl
1001c2f0:	4620      	mov	r0, r4
1001c2f2:	f003 ff7f 	bl	100201f4 <__ssrefill_r>
1001c2f6:	2800      	cmp	r0, #0
1001c2f8:	d0e6      	beq.n	1001c2c8 <__ssvfscanf_r+0xbec>
1001c2fa:	f7ff ba15 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001c2fe:	2b00      	cmp	r3, #0
1001c300:	f040 8395 	bne.w	1001ca2e <__ssvfscanf_r+0x1352>
1001c304:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
1001c308:	f014 0280 	ands.w	r2, r4, #128	@ 0x80
1001c30c:	f85b 6b04 	ldr.w	r6, [fp], #4
1001c310:	64be      	str	r6, [r7, #72]	@ 0x48
1001c312:	f000 8446 	beq.w	1001cba2 <__ssvfscanf_r+0x14c6>
1001c316:	2e00      	cmp	r6, #0
1001c318:	d0c4      	beq.n	1001c2a4 <__ssvfscanf_r+0xbc8>
1001c31a:	2020      	movs	r0, #32
1001c31c:	f7f7 fbf0 	bl	10013b00 <malloc>
1001c320:	4604      	mov	r4, r0
1001c322:	2800      	cmp	r0, #0
1001c324:	f000 842d 	beq.w	1001cb82 <__ssvfscanf_r+0x14a6>
1001c328:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c32a:	6030      	str	r0, [r6, #0]
1001c32c:	889a      	ldrh	r2, [r3, #4]
1001c32e:	88de      	ldrh	r6, [r3, #6]
1001c330:	4296      	cmp	r6, r2
1001c332:	f080 8273 	bcs.w	1001c81c <__ssvfscanf_r+0x1140>
1001c336:	6818      	ldr	r0, [r3, #0]
1001c338:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c33a:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
1001c33e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c340:	3601      	adds	r6, #1
1001c342:	80de      	strh	r6, [r3, #6]
1001c344:	2320      	movs	r3, #32
1001c346:	647b      	str	r3, [r7, #68]	@ 0x44
1001c348:	f8da 0000 	ldr.w	r0, [sl]
1001c34c:	4e20      	ldr	r6, [pc, #128]	@ (1001c3d0 <__ssvfscanf_r+0xcf4>)
1001c34e:	7802      	ldrb	r2, [r0, #0]
1001c350:	5cb2      	ldrb	r2, [r6, r2]
1001c352:	0713      	lsls	r3, r2, #28
1001c354:	f100 82e4 	bmi.w	1001c920 <__ssvfscanf_r+0x1244>
1001c358:	4643      	mov	r3, r8
1001c35a:	4622      	mov	r2, r4
1001c35c:	46b0      	mov	r8, r6
1001c35e:	4626      	mov	r6, r4
1001c360:	f8da 1004 	ldr.w	r1, [sl, #4]
1001c364:	3901      	subs	r1, #1
1001c366:	f8ca 1004 	str.w	r1, [sl, #4]
1001c36a:	1c41      	adds	r1, r0, #1
1001c36c:	f8ca 1000 	str.w	r1, [sl]
1001c370:	4634      	mov	r4, r6
1001c372:	7801      	ldrb	r1, [r0, #0]
1001c374:	f804 1b01 	strb.w	r1, [r4], #1
1001c378:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c37a:	b121      	cbz	r1, 1001c386 <__ssvfscanf_r+0xcaa>
1001c37c:	6c79      	ldr	r1, [r7, #68]	@ 0x44
1001c37e:	1aa6      	subs	r6, r4, r2
1001c380:	428e      	cmp	r6, r1
1001c382:	f080 8419 	bcs.w	1001cbb8 <__ssvfscanf_r+0x14dc>
1001c386:	3d01      	subs	r5, #1
1001c388:	d00c      	beq.n	1001c3a4 <__ssvfscanf_r+0xcc8>
1001c38a:	f8da 1004 	ldr.w	r1, [sl, #4]
1001c38e:	2900      	cmp	r1, #0
1001c390:	4626      	mov	r6, r4
1001c392:	f340 8462 	ble.w	1001cc5a <__ssvfscanf_r+0x157e>
1001c396:	f8da 0000 	ldr.w	r0, [sl]
1001c39a:	7801      	ldrb	r1, [r0, #0]
1001c39c:	f818 1001 	ldrb.w	r1, [r8, r1]
1001c3a0:	0709      	lsls	r1, r1, #28
1001c3a2:	d5dd      	bpl.n	1001c360 <__ssvfscanf_r+0xc84>
1001c3a4:	1aa2      	subs	r2, r4, r2
1001c3a6:	4698      	mov	r8, r3
1001c3a8:	4491      	add	r9, r2
1001c3aa:	1c51      	adds	r1, r2, #1
1001c3ac:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c3ae:	2200      	movs	r2, #0
1001c3b0:	7022      	strb	r2, [r4, #0]
1001c3b2:	b11b      	cbz	r3, 1001c3bc <__ssvfscanf_r+0xce0>
1001c3b4:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c3b6:	428b      	cmp	r3, r1
1001c3b8:	f200 8445 	bhi.w	1001cc46 <__ssvfscanf_r+0x156a>
1001c3bc:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001c3be:	f8c7 b034 	str.w	fp, [r7, #52]	@ 0x34
1001c3c2:	3301      	adds	r3, #1
1001c3c4:	643b      	str	r3, [r7, #64]	@ 0x40
1001c3c6:	f7ff b9af 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001c3ca:	bf00      	nop
1001c3cc:	10023acc 	.word	0x10023acc
1001c3d0:	10023919 	.word	0x10023919
1001c3d4:	1001ecd1 	.word	0x1001ecd1
1001c3d8:	1001ee09 	.word	0x1001ee09
1001c3dc:	2a00      	cmp	r2, #0
1001c3de:	f040 816e 	bne.w	1001c6be <__ssvfscanf_r+0xfe2>
1001c3e2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c3e4:	f014 0480 	ands.w	r4, r4, #128	@ 0x80
1001c3e8:	f853 bb04 	ldr.w	fp, [r3], #4
1001c3ec:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c3ee:	f000 8409 	beq.w	1001cc04 <__ssvfscanf_r+0x1528>
1001c3f2:	f1bb 0f00 	cmp.w	fp, #0
1001c3f6:	f43f af55 	beq.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001c3fa:	2020      	movs	r0, #32
1001c3fc:	f7f7 fb80 	bl	10013b00 <malloc>
1001c400:	4606      	mov	r6, r0
1001c402:	2800      	cmp	r0, #0
1001c404:	f000 83bd 	beq.w	1001cb82 <__ssvfscanf_r+0x14a6>
1001c408:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001c40a:	f8cb 0000 	str.w	r0, [fp]
1001c40e:	88d4      	ldrh	r4, [r2, #6]
1001c410:	8893      	ldrh	r3, [r2, #4]
1001c412:	429c      	cmp	r4, r3
1001c414:	f080 8286 	bcs.w	1001c924 <__ssvfscanf_r+0x1248>
1001c418:	6810      	ldr	r0, [r2, #0]
1001c41a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c41c:	f840 b024 	str.w	fp, [r0, r4, lsl #2]
1001c420:	3401      	adds	r4, #1
1001c422:	80dc      	strh	r4, [r3, #6]
1001c424:	2320      	movs	r3, #32
1001c426:	f8da 1000 	ldr.w	r1, [sl]
1001c42a:	f107 0270 	add.w	r2, r7, #112	@ 0x70
1001c42e:	7808      	ldrb	r0, [r1, #0]
1001c430:	5c10      	ldrb	r0, [r2, r0]
1001c432:	2800      	cmp	r0, #0
1001c434:	f43f af36 	beq.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001c438:	f8c7 9044 	str.w	r9, [r7, #68]	@ 0x44
1001c43c:	f8c7 8034 	str.w	r8, [r7, #52]	@ 0x34
1001c440:	46d9      	mov	r9, fp
1001c442:	4634      	mov	r4, r6
1001c444:	4698      	mov	r8, r3
1001c446:	4693      	mov	fp, r2
1001c448:	f8da 0004 	ldr.w	r0, [sl, #4]
1001c44c:	1c4b      	adds	r3, r1, #1
1001c44e:	3801      	subs	r0, #1
1001c450:	e9ca 3000 	strd	r3, r0, [sl]
1001c454:	4630      	mov	r0, r6
1001c456:	7809      	ldrb	r1, [r1, #0]
1001c458:	f800 1b01 	strb.w	r1, [r0], #1
1001c45c:	f1b9 0f00 	cmp.w	r9, #0
1001c460:	d002      	beq.n	1001c468 <__ssvfscanf_r+0xd8c>
1001c462:	1b06      	subs	r6, r0, r4
1001c464:	4546      	cmp	r6, r8
1001c466:	d26b      	bcs.n	1001c540 <__ssvfscanf_r+0xe64>
1001c468:	4606      	mov	r6, r0
1001c46a:	3d01      	subs	r5, #1
1001c46c:	d00b      	beq.n	1001c486 <__ssvfscanf_r+0xdaa>
1001c46e:	f8da 1004 	ldr.w	r1, [sl, #4]
1001c472:	2900      	cmp	r1, #0
1001c474:	f340 8171 	ble.w	1001c75a <__ssvfscanf_r+0x107e>
1001c478:	f8da 1000 	ldr.w	r1, [sl]
1001c47c:	7808      	ldrb	r0, [r1, #0]
1001c47e:	f81b 0000 	ldrb.w	r0, [fp, r0]
1001c482:	2800      	cmp	r0, #0
1001c484:	d1e0      	bne.n	1001c448 <__ssvfscanf_r+0xd6c>
1001c486:	1b34      	subs	r4, r6, r4
1001c488:	46cb      	mov	fp, r9
1001c48a:	4643      	mov	r3, r8
1001c48c:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
1001c490:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
1001c494:	f43f af06 	beq.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001c498:	2200      	movs	r2, #0
1001c49a:	7032      	strb	r2, [r6, #0]
1001c49c:	f1bb 0f00 	cmp.w	fp, #0
1001c4a0:	d003      	beq.n	1001c4aa <__ssvfscanf_r+0xdce>
1001c4a2:	1c61      	adds	r1, r4, #1
1001c4a4:	428b      	cmp	r3, r1
1001c4a6:	f200 83e5 	bhi.w	1001cc74 <__ssvfscanf_r+0x1598>
1001c4aa:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001c4ac:	3301      	adds	r3, #1
1001c4ae:	643b      	str	r3, [r7, #64]	@ 0x40
1001c4b0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c4b2:	637b      	str	r3, [r7, #52]	@ 0x34
1001c4b4:	44a1      	add	r9, r4
1001c4b6:	f7ff b937 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001c4ba:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c4bc:	2b00      	cmp	r3, #0
1001c4be:	f47f a986 	bne.w	1001b7ce <__ssvfscanf_r+0xf2>
1001c4c2:	f7ff b988 	b.w	1001b7d6 <__ssvfscanf_r+0xfa>
1001c4c6:	f014 0f8f 	tst.w	r4, #143	@ 0x8f
1001c4ca:	f47f aeeb 	bne.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001c4ce:	eb05 0585 	add.w	r5, r5, r5, lsl #2
1001c4d2:	eb02 0545 	add.w	r5, r2, r5, lsl #1
1001c4d6:	3d30      	subs	r5, #48	@ 0x30
1001c4d8:	f7ff ba06 	b.w	1001b8e8 <__ssvfscanf_r+0x20c>
1001c4dc:	4688      	mov	r8, r1
1001c4de:	f04f 0b04 	mov.w	fp, #4
1001c4e2:	f7ff ba15 	b.w	1001b910 <__ssvfscanf_r+0x234>
1001c4e6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c4e8:	191b      	adds	r3, r3, r4
1001c4ea:	f47f ae2b 	bne.w	1001c144 <__ssvfscanf_r+0xa68>
1001c4ee:	f7ff baf5 	b.w	1001badc <__ssvfscanf_r+0x400>
1001c4f2:	2c03      	cmp	r4, #3
1001c4f4:	d002      	beq.n	1001c4fc <__ssvfscanf_r+0xe20>
1001c4f6:	2c05      	cmp	r4, #5
1001c4f8:	f47f ab0b 	bne.w	1001bb12 <__ssvfscanf_r+0x436>
1001c4fc:	3401      	adds	r4, #1
1001c4fe:	b2e4      	uxtb	r4, r4
1001c500:	f7ff baf2 	b.w	1001bae8 <__ssvfscanf_r+0x40c>
1001c504:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c506:	2b02      	cmp	r3, #2
1001c508:	f47f ade8 	bne.w	1001c0dc <__ssvfscanf_r+0xa00>
1001c50c:	2303      	movs	r3, #3
1001c50e:	647b      	str	r3, [r7, #68]	@ 0x44
1001c510:	f7ff baea 	b.w	1001bae8 <__ssvfscanf_r+0x40c>
1001c514:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c516:	191b      	adds	r3, r3, r4
1001c518:	f47f adf0 	bne.w	1001c0fc <__ssvfscanf_r+0xa20>
1001c51c:	f7ff bade 	b.w	1001badc <__ssvfscanf_r+0x400>
1001c520:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c522:	4651      	mov	r1, sl
1001c524:	f003 fe66 	bl	100201f4 <__ssrefill_r>
1001c528:	2800      	cmp	r0, #0
1001c52a:	f43f ad56 	beq.w	1001bfda <__ssvfscanf_r+0x8fe>
1001c52e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001c530:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001c534:	627c      	str	r4, [r7, #36]	@ 0x24
1001c536:	2e00      	cmp	r6, #0
1001c538:	f43f ad56 	beq.w	1001bfe8 <__ssvfscanf_r+0x90c>
1001c53c:	f7ff b93a 	b.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001c540:	ea4f 0848 	mov.w	r8, r8, lsl #1
1001c544:	4620      	mov	r0, r4
1001c546:	4641      	mov	r1, r8
1001c548:	f7fa fce0 	bl	10016f0c <realloc>
1001c54c:	4604      	mov	r4, r0
1001c54e:	2800      	cmp	r0, #0
1001c550:	f000 8317 	beq.w	1001cb82 <__ssvfscanf_r+0x14a6>
1001c554:	4406      	add	r6, r0
1001c556:	f8c9 0000 	str.w	r0, [r9]
1001c55a:	e786      	b.n	1001c46a <__ssvfscanf_r+0xd8e>
1001c55c:	f444 7400 	orr.w	r4, r4, #512	@ 0x200
1001c560:	4bb8      	ldr	r3, [pc, #736]	@ (1001c844 <__ssvfscanf_r+0x1168>)
1001c562:	62bb      	str	r3, [r7, #40]	@ 0x28
1001c564:	2310      	movs	r3, #16
1001c566:	4688      	mov	r8, r1
1001c568:	63bb      	str	r3, [r7, #56]	@ 0x38
1001c56a:	f04f 0b03 	mov.w	fp, #3
1001c56e:	f7ff b9cf 	b.w	1001b910 <__ssvfscanf_r+0x234>
1001c572:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
1001c576:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c578:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c57a:	3301      	adds	r3, #1
1001c57c:	633b      	str	r3, [r7, #48]	@ 0x30
1001c57e:	68fb      	ldr	r3, [r7, #12]
1001c580:	2b00      	cmp	r3, #0
1001c582:	f43f aab3 	beq.w	1001baec <__ssvfscanf_r+0x410>
1001c586:	68fb      	ldr	r3, [r7, #12]
1001c588:	3b01      	subs	r3, #1
1001c58a:	60fb      	str	r3, [r7, #12]
1001c58c:	f7ff baaf 	b.w	1001baee <__ssvfscanf_r+0x412>
1001c590:	f424 64b0 	bic.w	r4, r4, #1408	@ 0x580
1001c594:	f7ff bb88 	b.w	1001bca8 <__ssvfscanf_r+0x5cc>
1001c598:	0722      	lsls	r2, r4, #28
1001c59a:	f140 8213 	bpl.w	1001c9c4 <__ssvfscanf_r+0x12e8>
1001c59e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c5a0:	681b      	ldr	r3, [r3, #0]
1001c5a2:	7018      	strb	r0, [r3, #0]
1001c5a4:	f7ff bbae 	b.w	1001bd04 <__ssvfscanf_r+0x628>
1001c5a8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1001c5aa:	69bb      	ldr	r3, [r7, #24]
1001c5ac:	429a      	cmp	r2, r3
1001c5ae:	f43f aaf0 	beq.w	1001bb92 <__ssvfscanf_r+0x4b6>
1001c5b2:	1a9a      	subs	r2, r3, r2
1001c5b4:	f207 23c3 	addw	r3, r7, #707	@ 0x2c3
1001c5b8:	459b      	cmp	fp, r3
1001c5ba:	bf28      	it	cs
1001c5bc:	f207 2bc2 	addwcs	fp, r7, #706	@ 0x2c2
1001c5c0:	49a1      	ldr	r1, [pc, #644]	@ (1001c848 <__ssvfscanf_r+0x116c>)
1001c5c2:	4658      	mov	r0, fp
1001c5c4:	f002 fc22 	bl	1001ee0c <sprintf>
1001c5c8:	f7ff bae3 	b.w	1001bb92 <__ssvfscanf_r+0x4b6>
1001c5cc:	f816 1c01 	ldrb.w	r1, [r6, #-1]
1001c5d0:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c5d2:	4652      	mov	r2, sl
1001c5d4:	3e01      	subs	r6, #1
1001c5d6:	f003 fdd1 	bl	1002017c <_sungetc_r>
1001c5da:	f7ff bb7e 	b.w	1001bcda <__ssvfscanf_r+0x5fe>
1001c5de:	f107 0070 	add.w	r0, r7, #112	@ 0x70
1001c5e2:	f001 faa5 	bl	1001db30 <__sccl>
1001c5e6:	f044 0440 	orr.w	r4, r4, #64	@ 0x40
1001c5ea:	4680      	mov	r8, r0
1001c5ec:	f04f 0b01 	mov.w	fp, #1
1001c5f0:	f7ff b98e 	b.w	1001b910 <__ssvfscanf_r+0x234>
1001c5f4:	4b95      	ldr	r3, [pc, #596]	@ (1001c84c <__ssvfscanf_r+0x1170>)
1001c5f6:	62bb      	str	r3, [r7, #40]	@ 0x28
1001c5f8:	2300      	movs	r3, #0
1001c5fa:	4688      	mov	r8, r1
1001c5fc:	63bb      	str	r3, [r7, #56]	@ 0x38
1001c5fe:	f04f 0b03 	mov.w	fp, #3
1001c602:	f7ff b985 	b.w	1001b910 <__ssvfscanf_r+0x234>
1001c606:	0723      	lsls	r3, r4, #28
1001c608:	f47f ae4c 	bne.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001c60c:	f898 2001 	ldrb.w	r2, [r8, #1]
1001c610:	2a68      	cmp	r2, #104	@ 0x68
1001c612:	f000 81cf 	beq.w	1001c9b4 <__ssvfscanf_r+0x12d8>
1001c616:	f044 0404 	orr.w	r4, r4, #4
1001c61a:	4688      	mov	r8, r1
1001c61c:	f7ff b8fd 	b.w	1001b81a <__ssvfscanf_r+0x13e>
1001c620:	f444 7408 	orr.w	r4, r4, #544	@ 0x220
1001c624:	e79c      	b.n	1001c560 <__ssvfscanf_r+0xe84>
1001c626:	06e5      	lsls	r5, r4, #27
1001c628:	f100 80f5 	bmi.w	1001c816 <__ssvfscanf_r+0x113a>
1001c62c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c62e:	0720      	lsls	r0, r4, #28
1001c630:	f853 2b04 	ldr.w	r2, [r3], #4
1001c634:	f100 81f8 	bmi.w	1001ca28 <__ssvfscanf_r+0x134c>
1001c638:	0766      	lsls	r6, r4, #29
1001c63a:	f140 8325 	bpl.w	1001cc88 <__ssvfscanf_r+0x15ac>
1001c63e:	f8a2 9000 	strh.w	r9, [r2]
1001c642:	637b      	str	r3, [r7, #52]	@ 0x34
1001c644:	4688      	mov	r8, r1
1001c646:	f7ff b86f 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001c64a:	f014 038f 	ands.w	r3, r4, #143	@ 0x8f
1001c64e:	f47f ae29 	bne.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001c652:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001c654:	2a00      	cmp	r2, #0
1001c656:	f000 82a9 	beq.w	1001cbac <__ssvfscanf_r+0x14d0>
1001c65a:	f898 2001 	ldrb.w	r2, [r8, #1]
1001c65e:	f044 0480 	orr.w	r4, r4, #128	@ 0x80
1001c662:	4688      	mov	r8, r1
1001c664:	f7ff b8d9 	b.w	1001b81a <__ssvfscanf_r+0x13e>
1001c668:	0722      	lsls	r2, r4, #28
1001c66a:	f47f ae1b 	bne.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001c66e:	f898 2001 	ldrb.w	r2, [r8, #1]
1001c672:	2a6c      	cmp	r2, #108	@ 0x6c
1001c674:	f000 8196 	beq.w	1001c9a4 <__ssvfscanf_r+0x12c8>
1001c678:	f044 0401 	orr.w	r4, r4, #1
1001c67c:	4688      	mov	r8, r1
1001c67e:	f7ff b8cc 	b.w	1001b81a <__ssvfscanf_r+0x13e>
1001c682:	4b70      	ldr	r3, [pc, #448]	@ (1001c844 <__ssvfscanf_r+0x1168>)
1001c684:	62bb      	str	r3, [r7, #40]	@ 0x28
1001c686:	230a      	movs	r3, #10
1001c688:	4688      	mov	r8, r1
1001c68a:	63bb      	str	r3, [r7, #56]	@ 0x38
1001c68c:	f04f 0b03 	mov.w	fp, #3
1001c690:	f7ff b93e 	b.w	1001b910 <__ssvfscanf_r+0x234>
1001c694:	4325      	orrs	r5, r4
1001c696:	f47f ae05 	bne.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001c69a:	f898 2001 	ldrb.w	r2, [r8, #1]
1001c69e:	2410      	movs	r4, #16
1001c6a0:	4688      	mov	r8, r1
1001c6a2:	f7ff b8ba 	b.w	1001b81a <__ssvfscanf_r+0x13e>
1001c6a6:	4688      	mov	r8, r1
1001c6a8:	f7ff b858 	b.w	1001b75c <__ssvfscanf_r+0x80>
1001c6ac:	f04f 0c00 	mov.w	ip, #0
1001c6b0:	46e6      	mov	lr, ip
1001c6b2:	f8c7 c048 	str.w	ip, [r7, #72]	@ 0x48
1001c6b6:	f107 0254 	add.w	r2, r7, #84	@ 0x54
1001c6ba:	f7ff bb5e 	b.w	1001bd7a <__ssvfscanf_r+0x69e>
1001c6be:	f8da 3000 	ldr.w	r3, [sl]
1001c6c2:	f107 0270 	add.w	r2, r7, #112	@ 0x70
1001c6c6:	7819      	ldrb	r1, [r3, #0]
1001c6c8:	5c51      	ldrb	r1, [r2, r1]
1001c6ca:	2900      	cmp	r1, #0
1001c6cc:	f43f aef5 	beq.w	1001c4ba <__ssvfscanf_r+0xdde>
1001c6d0:	3301      	adds	r3, #1
1001c6d2:	f8ca 3000 	str.w	r3, [sl]
1001c6d6:	f8da 3004 	ldr.w	r3, [sl, #4]
1001c6da:	2d01      	cmp	r5, #1
1001c6dc:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
1001c6e0:	f8ca 3004 	str.w	r3, [sl, #4]
1001c6e4:	d01b      	beq.n	1001c71e <__ssvfscanf_r+0x1042>
1001c6e6:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001c6e8:	4616      	mov	r6, r2
1001c6ea:	e010      	b.n	1001c70e <__ssvfscanf_r+0x1032>
1001c6ec:	f8da 3000 	ldr.w	r3, [sl]
1001c6f0:	781a      	ldrb	r2, [r3, #0]
1001c6f2:	5cb2      	ldrb	r2, [r6, r2]
1001c6f4:	3301      	adds	r3, #1
1001c6f6:	b192      	cbz	r2, 1001c71e <__ssvfscanf_r+0x1042>
1001c6f8:	f8ca 3000 	str.w	r3, [sl]
1001c6fc:	f8da 3004 	ldr.w	r3, [sl, #4]
1001c700:	f10b 0b01 	add.w	fp, fp, #1
1001c704:	3b01      	subs	r3, #1
1001c706:	455d      	cmp	r5, fp
1001c708:	f8ca 3004 	str.w	r3, [sl, #4]
1001c70c:	d007      	beq.n	1001c71e <__ssvfscanf_r+0x1042>
1001c70e:	2b00      	cmp	r3, #0
1001c710:	dcec      	bgt.n	1001c6ec <__ssvfscanf_r+0x1010>
1001c712:	4651      	mov	r1, sl
1001c714:	4620      	mov	r0, r4
1001c716:	f003 fd6d 	bl	100201f4 <__ssrefill_r>
1001c71a:	2800      	cmp	r0, #0
1001c71c:	d0e6      	beq.n	1001c6ec <__ssvfscanf_r+0x1010>
1001c71e:	44d9      	add	r9, fp
1001c720:	f7ff b802 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001c724:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c726:	623b      	str	r3, [r7, #32]
1001c728:	2300      	movs	r3, #0
1001c72a:	e9c7 330b 	strd	r3, r3, [r7, #44]	@ 0x2c
1001c72e:	637b      	str	r3, [r7, #52]	@ 0x34
1001c730:	f107 0354 	add.w	r3, r7, #84	@ 0x54
1001c734:	469b      	mov	fp, r3
1001c736:	f7ff bbde 	b.w	1001bef6 <__ssvfscanf_r+0x81a>
1001c73a:	2600      	movs	r6, #0
1001c73c:	e448      	b.n	1001bfd0 <__ssvfscanf_r+0x8f4>
1001c73e:	1ca1      	adds	r1, r4, #2
1001c740:	f43f ac46 	beq.w	1001bfd0 <__ssvfscanf_r+0x8f4>
1001c744:	f8db 3000 	ldr.w	r3, [fp]
1001c748:	1c5a      	adds	r2, r3, #1
1001c74a:	f47f ac09 	bne.w	1001bf60 <__ssvfscanf_r+0x884>
1001c74e:	e420      	b.n	1001bf92 <__ssvfscanf_r+0x8b6>
1001c750:	682b      	ldr	r3, [r5, #0]
1001c752:	2b04      	cmp	r3, #4
1001c754:	f47f ac27 	bne.w	1001bfa6 <__ssvfscanf_r+0x8ca>
1001c758:	e427      	b.n	1001bfaa <__ssvfscanf_r+0x8ce>
1001c75a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c75c:	4651      	mov	r1, sl
1001c75e:	f003 fd49 	bl	100201f4 <__ssrefill_r>
1001c762:	2800      	cmp	r0, #0
1001c764:	f43f ae88 	beq.w	1001c478 <__ssvfscanf_r+0xd9c>
1001c768:	42a6      	cmp	r6, r4
1001c76a:	46cb      	mov	fp, r9
1001c76c:	4643      	mov	r3, r8
1001c76e:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
1001c772:	f8d7 8034 	ldr.w	r8, [r7, #52]	@ 0x34
1001c776:	f43f a81d 	beq.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001c77a:	1b34      	subs	r4, r6, r4
1001c77c:	e68c      	b.n	1001c498 <__ssvfscanf_r+0xdbc>
1001c77e:	6b38      	ldr	r0, [r7, #48]	@ 0x30
1001c780:	00d9      	lsls	r1, r3, #3
1001c782:	461e      	mov	r6, r3
1001c784:	f7fa fbc2 	bl	10016f0c <realloc>
1001c788:	6338      	str	r0, [r7, #48]	@ 0x30
1001c78a:	2800      	cmp	r0, #0
1001c78c:	f000 81f9 	beq.w	1001cb82 <__ssvfscanf_r+0x14a6>
1001c790:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
1001c792:	0073      	lsls	r3, r6, #1
1001c794:	eb00 0b05 	add.w	fp, r0, r5
1001c798:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
1001c79a:	6010      	str	r0, [r2, #0]
1001c79c:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001c79e:	e417      	b.n	1001bfd0 <__ssvfscanf_r+0x8f4>
1001c7a0:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1001c7a2:	f421 7120 	bic.w	r1, r1, #640	@ 0x280
1001c7a6:	4623      	mov	r3, r4
1001c7a8:	4658      	mov	r0, fp
1001c7aa:	64b9      	str	r1, [r7, #72]	@ 0x48
1001c7ac:	4632      	mov	r2, r6
1001c7ae:	69f9      	ldr	r1, [r7, #28]
1001c7b0:	68bc      	ldr	r4, [r7, #8]
1001c7b2:	4699      	mov	r9, r3
1001c7b4:	46aa      	mov	sl, r5
1001c7b6:	687d      	ldr	r5, [r7, #4]
1001c7b8:	f002 fbee 	bl	1001ef98 <stpncpy>
1001c7bc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1001c7be:	61bb      	str	r3, [r7, #24]
1001c7c0:	3d01      	subs	r5, #1
1001c7c2:	4683      	mov	fp, r0
1001c7c4:	f7ff b993 	b.w	1001baee <__ssvfscanf_r+0x412>
1001c7c8:	46b2      	mov	sl, r6
1001c7ca:	f7fe bff3 	b.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001c7ce:	2c02      	cmp	r4, #2
1001c7d0:	f240 82ea 	bls.w	1001cda8 <__ssvfscanf_r+0x16cc>
1001c7d4:	2c03      	cmp	r4, #3
1001c7d6:	f43f a9ab 	beq.w	1001bb30 <__ssvfscanf_r+0x454>
1001c7da:	3c04      	subs	r4, #4
1001c7dc:	b2e5      	uxtb	r5, r4
1001c7de:	43ec      	mvns	r4, r5
1001c7e0:	6cfe      	ldr	r6, [r7, #76]	@ 0x4c
1001c7e2:	445c      	add	r4, fp
1001c7e4:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001c7e8:	4652      	mov	r2, sl
1001c7ea:	4630      	mov	r0, r6
1001c7ec:	f003 fcc6 	bl	1002017c <_sungetc_r>
1001c7f0:	455c      	cmp	r4, fp
1001c7f2:	d1f7      	bne.n	1001c7e4 <__ssvfscanf_r+0x1108>
1001c7f4:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001c7f8:	eba9 0905 	sub.w	r9, r9, r5
1001c7fc:	f7ff b998 	b.w	1001bb30 <__ssvfscanf_r+0x454>
1001c800:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c802:	f8d3 b000 	ldr.w	fp, [r3]
1001c806:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001c808:	079a      	lsls	r2, r3, #30
1001c80a:	f140 80f5 	bpl.w	1001c9f8 <__ssvfscanf_r+0x131c>
1001c80e:	e9cb 5600 	strd	r5, r6, [fp]
1001c812:	f7ff b9cf 	b.w	1001bbb4 <__ssvfscanf_r+0x4d8>
1001c816:	4688      	mov	r8, r1
1001c818:	f7fe bf86 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001c81c:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
1001c820:	428a      	cmp	r2, r1
1001c822:	d864      	bhi.n	1001c8ee <__ssvfscanf_r+0x1212>
1001c824:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c826:	3208      	adds	r2, #8
1001c828:	b292      	uxth	r2, r2
1001c82a:	6818      	ldr	r0, [r3, #0]
1001c82c:	647a      	str	r2, [r7, #68]	@ 0x44
1001c82e:	0091      	lsls	r1, r2, #2
1001c830:	f7fa fb6c 	bl	10016f0c <realloc>
1001c834:	2800      	cmp	r0, #0
1001c836:	d05a      	beq.n	1001c8ee <__ssvfscanf_r+0x1212>
1001c838:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c83a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001c83c:	809a      	strh	r2, [r3, #4]
1001c83e:	6018      	str	r0, [r3, #0]
1001c840:	e57a      	b.n	1001c338 <__ssvfscanf_r+0xc5c>
1001c842:	bf00      	nop
1001c844:	1001ee09 	.word	0x1001ee09
1001c848:	10023ac4 	.word	0x10023ac4
1001c84c:	1001ecd1 	.word	0x1001ecd1
1001c850:	f004 0310 	and.w	r3, r4, #16
1001c854:	2d01      	cmp	r5, #1
1001c856:	bf38      	it	cc
1001c858:	2501      	movcc	r5, #1
1001c85a:	461a      	mov	r2, r3
1001c85c:	64bb      	str	r3, [r7, #72]	@ 0x48
1001c85e:	f014 0301 	ands.w	r3, r4, #1
1001c862:	f040 812d 	bne.w	1001cac0 <__ssvfscanf_r+0x13e4>
1001c866:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001c868:	2a00      	cmp	r2, #0
1001c86a:	f040 82b5 	bne.w	1001cdd8 <__ssvfscanf_r+0x16fc>
1001c86e:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
1001c872:	0623      	lsls	r3, r4, #24
1001c874:	f85b 6b04 	ldr.w	r6, [fp], #4
1001c878:	f140 82c5 	bpl.w	1001ce06 <__ssvfscanf_r+0x172a>
1001c87c:	2e00      	cmp	r6, #0
1001c87e:	f43f ad11 	beq.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001c882:	4628      	mov	r0, r5
1001c884:	f7f7 f93c 	bl	10013b00 <malloc>
1001c888:	4604      	mov	r4, r0
1001c88a:	2800      	cmp	r0, #0
1001c88c:	f000 8179 	beq.w	1001cb82 <__ssvfscanf_r+0x14a6>
1001c890:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
1001c892:	6030      	str	r0, [r6, #0]
1001c894:	88cb      	ldrh	r3, [r1, #6]
1001c896:	888a      	ldrh	r2, [r1, #4]
1001c898:	4293      	cmp	r3, r2
1001c89a:	f0c0 8300 	bcc.w	1001ce9e <__ssvfscanf_r+0x17c2>
1001c89e:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
1001c8a2:	428a      	cmp	r2, r1
1001c8a4:	647b      	str	r3, [r7, #68]	@ 0x44
1001c8a6:	d822      	bhi.n	1001c8ee <__ssvfscanf_r+0x1212>
1001c8a8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c8aa:	3208      	adds	r2, #8
1001c8ac:	b292      	uxth	r2, r2
1001c8ae:	6818      	ldr	r0, [r3, #0]
1001c8b0:	64ba      	str	r2, [r7, #72]	@ 0x48
1001c8b2:	0091      	lsls	r1, r2, #2
1001c8b4:	f7fa fb2a 	bl	10016f0c <realloc>
1001c8b8:	b1c8      	cbz	r0, 1001c8ee <__ssvfscanf_r+0x1212>
1001c8ba:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c8bc:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001c8be:	809a      	strh	r2, [r3, #4]
1001c8c0:	6018      	str	r0, [r3, #0]
1001c8c2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c8c4:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001c8c6:	f840 6023 	str.w	r6, [r0, r3, lsl #2]
1001c8ca:	3301      	adds	r3, #1
1001c8cc:	80d3      	strh	r3, [r2, #6]
1001c8ce:	f8cd a000 	str.w	sl, [sp]
1001c8d2:	4621      	mov	r1, r4
1001c8d4:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c8d6:	462b      	mov	r3, r5
1001c8d8:	2201      	movs	r2, #1
1001c8da:	f003 fca7 	bl	1002022c <_sfread_r>
1001c8de:	4604      	mov	r4, r0
1001c8e0:	2800      	cmp	r0, #0
1001c8e2:	f040 82de 	bne.w	1001cea2 <__ssvfscanf_r+0x17c6>
1001c8e6:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001c8e8:	2b00      	cmp	r3, #0
1001c8ea:	f040 82e4 	bne.w	1001ceb6 <__ssvfscanf_r+0x17da>
1001c8ee:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c8f0:	88de      	ldrh	r6, [r3, #6]
1001c8f2:	6818      	ldr	r0, [r3, #0]
1001c8f4:	b17e      	cbz	r6, 1001c916 <__ssvfscanf_r+0x123a>
1001c8f6:	2400      	movs	r4, #0
1001c8f8:	1f05      	subs	r5, r0, #4
1001c8fa:	46a0      	mov	r8, r4
1001c8fc:	4681      	mov	r9, r0
1001c8fe:	f855 3f04 	ldr.w	r3, [r5, #4]!
1001c902:	6818      	ldr	r0, [r3, #0]
1001c904:	f7f7 f904 	bl	10013b10 <free>
1001c908:	3401      	adds	r4, #1
1001c90a:	682b      	ldr	r3, [r5, #0]
1001c90c:	42a6      	cmp	r6, r4
1001c90e:	f8c3 8000 	str.w	r8, [r3]
1001c912:	d1f4      	bne.n	1001c8fe <__ssvfscanf_r+0x1222>
1001c914:	4648      	mov	r0, r9
1001c916:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001c91a:	643b      	str	r3, [r7, #64]	@ 0x40
1001c91c:	f7fe bf58 	b.w	1001b7d0 <__ssvfscanf_r+0xf4>
1001c920:	2101      	movs	r1, #1
1001c922:	e543      	b.n	1001c3ac <__ssvfscanf_r+0xcd0>
1001c924:	f64f 72f6 	movw	r2, #65526	@ 0xfff6
1001c928:	4293      	cmp	r3, r2
1001c92a:	d8e0      	bhi.n	1001c8ee <__ssvfscanf_r+0x1212>
1001c92c:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001c92e:	3308      	adds	r3, #8
1001c930:	b29b      	uxth	r3, r3
1001c932:	6810      	ldr	r0, [r2, #0]
1001c934:	647b      	str	r3, [r7, #68]	@ 0x44
1001c936:	0099      	lsls	r1, r3, #2
1001c938:	f7fa fae8 	bl	10016f0c <realloc>
1001c93c:	2800      	cmp	r0, #0
1001c93e:	d0d6      	beq.n	1001c8ee <__ssvfscanf_r+0x1212>
1001c940:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001c942:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001c944:	8093      	strh	r3, [r2, #4]
1001c946:	6010      	str	r0, [r2, #0]
1001c948:	e567      	b.n	1001c41a <__ssvfscanf_r+0xd3e>
1001c94a:	f64f 70f6 	movw	r0, #65526	@ 0xfff6
1001c94e:	4281      	cmp	r1, r0
1001c950:	64ba      	str	r2, [r7, #72]	@ 0x48
1001c952:	d8cc      	bhi.n	1001c8ee <__ssvfscanf_r+0x1212>
1001c954:	3108      	adds	r1, #8
1001c956:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c958:	b28e      	uxth	r6, r1
1001c95a:	6818      	ldr	r0, [r3, #0]
1001c95c:	00b1      	lsls	r1, r6, #2
1001c95e:	f7fa fad5 	bl	10016f0c <realloc>
1001c962:	2800      	cmp	r0, #0
1001c964:	d0c3      	beq.n	1001c8ee <__ssvfscanf_r+0x1212>
1001c966:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c968:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001c96a:	809e      	strh	r6, [r3, #4]
1001c96c:	6018      	str	r0, [r3, #0]
1001c96e:	f7ff bab8 	b.w	1001bee2 <__ssvfscanf_r+0x806>
1001c972:	f64f 70f6 	movw	r0, #65526	@ 0xfff6
1001c976:	4281      	cmp	r1, r0
1001c978:	637b      	str	r3, [r7, #52]	@ 0x34
1001c97a:	647a      	str	r2, [r7, #68]	@ 0x44
1001c97c:	d8b7      	bhi.n	1001c8ee <__ssvfscanf_r+0x1212>
1001c97e:	3108      	adds	r1, #8
1001c980:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c982:	fa1f fb81 	uxth.w	fp, r1
1001c986:	6818      	ldr	r0, [r3, #0]
1001c988:	ea4f 018b 	mov.w	r1, fp, lsl #2
1001c98c:	f7fa fabe 	bl	10016f0c <realloc>
1001c990:	2800      	cmp	r0, #0
1001c992:	d0ac      	beq.n	1001c8ee <__ssvfscanf_r+0x1212>
1001c994:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001c996:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001c998:	f8a3 b004 	strh.w	fp, [r3, #4]
1001c99c:	6018      	str	r0, [r3, #0]
1001c99e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001c9a0:	f7ff b9e1 	b.w	1001bd66 <__ssvfscanf_r+0x68a>
1001c9a4:	f898 2002 	ldrb.w	r2, [r8, #2]
1001c9a8:	f044 0402 	orr.w	r4, r4, #2
1001c9ac:	f108 0802 	add.w	r8, r8, #2
1001c9b0:	f7fe bf33 	b.w	1001b81a <__ssvfscanf_r+0x13e>
1001c9b4:	f898 2002 	ldrb.w	r2, [r8, #2]
1001c9b8:	f044 0408 	orr.w	r4, r4, #8
1001c9bc:	f108 0802 	add.w	r8, r8, #2
1001c9c0:	f7fe bf2b 	b.w	1001b81a <__ssvfscanf_r+0x13e>
1001c9c4:	0763      	lsls	r3, r4, #29
1001c9c6:	d46b      	bmi.n	1001caa0 <__ssvfscanf_r+0x13c4>
1001c9c8:	f014 0201 	ands.w	r2, r4, #1
1001c9cc:	f040 817b 	bne.w	1001ccc6 <__ssvfscanf_r+0x15ea>
1001c9d0:	07a4      	lsls	r4, r4, #30
1001c9d2:	f140 8178 	bpl.w	1001ccc6 <__ssvfscanf_r+0x15ea>
1001c9d6:	4bc1      	ldr	r3, [pc, #772]	@ (1001ccdc <__ssvfscanf_r+0x1600>)
1001c9d8:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
1001c9da:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001c9dc:	4299      	cmp	r1, r3
1001c9de:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
1001c9e0:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
1001c9e2:	f000 81f0 	beq.w	1001cdc6 <__ssvfscanf_r+0x16ea>
1001c9e6:	f002 fbe1 	bl	1001f1ac <_strtoll_r>
1001c9ea:	460b      	mov	r3, r1
1001c9ec:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
1001c9ee:	6811      	ldr	r1, [r2, #0]
1001c9f0:	e9c1 0300 	strd	r0, r3, [r1]
1001c9f4:	f7ff b986 	b.w	1001bd04 <__ssvfscanf_r+0x628>
1001c9f8:	4602      	mov	r2, r0
1001c9fa:	460b      	mov	r3, r1
1001c9fc:	f004 f966 	bl	10020ccc <__aeabi_dcmpun>
1001ca00:	2800      	cmp	r0, #0
1001ca02:	f040 80c7 	bne.w	1001cb94 <__ssvfscanf_r+0x14b8>
1001ca06:	4628      	mov	r0, r5
1001ca08:	4631      	mov	r1, r6
1001ca0a:	f004 f9bd 	bl	10020d88 <__aeabi_d2f>
1001ca0e:	f8cb 0000 	str.w	r0, [fp]
1001ca12:	f7ff b8cf 	b.w	1001bbb4 <__ssvfscanf_r+0x4d8>
1001ca16:	6028      	str	r0, [r5, #0]
1001ca18:	f002 fd5c 	bl	1001f4d4 <iswspace>
1001ca1c:	2800      	cmp	r0, #0
1001ca1e:	f040 8171 	bne.w	1001cd04 <__ssvfscanf_r+0x1628>
1001ca22:	44d9      	add	r9, fp
1001ca24:	f7ff b9fb 	b.w	1001be1e <__ssvfscanf_r+0x742>
1001ca28:	f882 9000 	strb.w	r9, [r2]
1001ca2c:	e609      	b.n	1001c642 <__ssvfscanf_r+0xf66>
1001ca2e:	f8da 3000 	ldr.w	r3, [sl]
1001ca32:	4eab      	ldr	r6, [pc, #684]	@ (1001cce0 <__ssvfscanf_r+0x1604>)
1001ca34:	781a      	ldrb	r2, [r3, #0]
1001ca36:	5cb2      	ldrb	r2, [r6, r2]
1001ca38:	0711      	lsls	r1, r2, #28
1001ca3a:	f53e ae75 	bmi.w	1001b728 <__ssvfscanf_r+0x4c>
1001ca3e:	3301      	adds	r3, #1
1001ca40:	f8ca 3000 	str.w	r3, [sl]
1001ca44:	f8da 3004 	ldr.w	r3, [sl, #4]
1001ca48:	2d01      	cmp	r5, #1
1001ca4a:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
1001ca4e:	f8ca 3004 	str.w	r3, [sl, #4]
1001ca52:	bf08      	it	eq
1001ca54:	f109 0901 	addeq.w	r9, r9, #1
1001ca58:	f43e ae66 	beq.w	1001b728 <__ssvfscanf_r+0x4c>
1001ca5c:	f8d7 b04c 	ldr.w	fp, [r7, #76]	@ 0x4c
1001ca60:	2401      	movs	r4, #1
1001ca62:	e012      	b.n	1001ca8a <__ssvfscanf_r+0x13ae>
1001ca64:	f8da 3000 	ldr.w	r3, [sl]
1001ca68:	781a      	ldrb	r2, [r3, #0]
1001ca6a:	5cb2      	ldrb	r2, [r6, r2]
1001ca6c:	0712      	lsls	r2, r2, #28
1001ca6e:	f103 0301 	add.w	r3, r3, #1
1001ca72:	d412      	bmi.n	1001ca9a <__ssvfscanf_r+0x13be>
1001ca74:	f8ca 3000 	str.w	r3, [sl]
1001ca78:	f8da 3004 	ldr.w	r3, [sl, #4]
1001ca7c:	3401      	adds	r4, #1
1001ca7e:	3b01      	subs	r3, #1
1001ca80:	42a5      	cmp	r5, r4
1001ca82:	f8ca 3004 	str.w	r3, [sl, #4]
1001ca86:	f000 813a 	beq.w	1001ccfe <__ssvfscanf_r+0x1622>
1001ca8a:	2b00      	cmp	r3, #0
1001ca8c:	dcea      	bgt.n	1001ca64 <__ssvfscanf_r+0x1388>
1001ca8e:	4651      	mov	r1, sl
1001ca90:	4658      	mov	r0, fp
1001ca92:	f003 fbaf 	bl	100201f4 <__ssrefill_r>
1001ca96:	2800      	cmp	r0, #0
1001ca98:	d0e4      	beq.n	1001ca64 <__ssvfscanf_r+0x1388>
1001ca9a:	44a1      	add	r9, r4
1001ca9c:	f7fe be44 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001caa0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001caa2:	681b      	ldr	r3, [r3, #0]
1001caa4:	8018      	strh	r0, [r3, #0]
1001caa6:	f7ff b92d 	b.w	1001bd04 <__ssvfscanf_r+0x628>
1001caaa:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
1001caac:	1d11      	adds	r1, r2, #4
1001caae:	6820      	ldr	r0, [r4, #0]
1001cab0:	f7fa fa2c 	bl	10016f0c <realloc>
1001cab4:	2800      	cmp	r0, #0
1001cab6:	f43f a9e7 	beq.w	1001be88 <__ssvfscanf_r+0x7ac>
1001caba:	6020      	str	r0, [r4, #0]
1001cabc:	f7ff b9e4 	b.w	1001be88 <__ssvfscanf_r+0x7ac>
1001cac0:	2a00      	cmp	r2, #0
1001cac2:	f040 8184 	bne.w	1001cdce <__ssvfscanf_r+0x16f2>
1001cac6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001cac8:	461a      	mov	r2, r3
1001caca:	0624      	lsls	r4, r4, #24
1001cacc:	f852 3b04 	ldr.w	r3, [r2], #4
1001cad0:	637a      	str	r2, [r7, #52]	@ 0x34
1001cad2:	f100 81ac 	bmi.w	1001ce2e <__ssvfscanf_r+0x1752>
1001cad6:	469b      	mov	fp, r3
1001cad8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cada:	461a      	mov	r2, r3
1001cadc:	469c      	mov	ip, r3
1001cade:	f8c7 8030 	str.w	r8, [r7, #48]	@ 0x30
1001cae2:	2600      	movs	r6, #0
1001cae4:	4664      	mov	r4, ip
1001cae6:	647b      	str	r3, [r7, #68]	@ 0x44
1001cae8:	4690      	mov	r8, r2
1001caea:	f7fb fa69 	bl	10017fc0 <__locale_mb_cur_max>
1001caee:	42b0      	cmp	r0, r6
1001caf0:	f43e ae60 	beq.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001caf4:	e9da 3200 	ldrd	r3, r2, [sl]
1001caf8:	f813 1b01 	ldrb.w	r1, [r3], #1
1001cafc:	3a01      	subs	r2, #1
1001cafe:	e9ca 3200 	strd	r3, r2, [sl]
1001cb02:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
1001cb04:	f507 70b8 	add.w	r0, r7, #368	@ 0x170
1001cb08:	2a03      	cmp	r2, #3
1001cb0a:	5581      	strb	r1, [r0, r6]
1001cb0c:	f106 0301 	add.w	r3, r6, #1
1001cb10:	f107 0668 	add.w	r6, r7, #104	@ 0x68
1001cb14:	d102      	bne.n	1001cb1c <__ssvfscanf_r+0x1440>
1001cb16:	6832      	ldr	r2, [r6, #0]
1001cb18:	2a04      	cmp	r2, #4
1001cb1a:	d006      	beq.n	1001cb2a <__ssvfscanf_r+0x144e>
1001cb1c:	2208      	movs	r2, #8
1001cb1e:	2100      	movs	r1, #0
1001cb20:	4630      	mov	r0, r6
1001cb22:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001cb24:	f7fb f9a4 	bl	10017e70 <memset>
1001cb28:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001cb2a:	9600      	str	r6, [sp, #0]
1001cb2c:	f507 72b8 	add.w	r2, r7, #368	@ 0x170
1001cb30:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cb32:	62fb      	str	r3, [r7, #44]	@ 0x2c
1001cb34:	4659      	mov	r1, fp
1001cb36:	f002 fc1b 	bl	1001f370 <_mbrtowc_r>
1001cb3a:	4602      	mov	r2, r0
1001cb3c:	6278      	str	r0, [r7, #36]	@ 0x24
1001cb3e:	1c50      	adds	r0, r2, #1
1001cb40:	f43e ae38 	beq.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001cb44:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001cb46:	2a00      	cmp	r2, #0
1001cb48:	f040 81bd 	bne.w	1001cec6 <__ssvfscanf_r+0x17ea>
1001cb4c:	4499      	add	r9, r3
1001cb4e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cb50:	3d01      	subs	r5, #1
1001cb52:	2b00      	cmp	r3, #0
1001cb54:	f040 81c5 	bne.w	1001cee2 <__ssvfscanf_r+0x1806>
1001cb58:	f8cb 3000 	str.w	r3, [fp]
1001cb5c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cb5e:	2b00      	cmp	r3, #0
1001cb60:	f000 81f1 	beq.w	1001cf46 <__ssvfscanf_r+0x186a>
1001cb64:	ebab 0604 	sub.w	r6, fp, r4
1001cb68:	ebb8 0fa6 	cmp.w	r8, r6, asr #2
1001cb6c:	f200 81eb 	bhi.w	1001cf46 <__ssvfscanf_r+0x186a>
1001cb70:	4620      	mov	r0, r4
1001cb72:	ea4f 01c8 	mov.w	r1, r8, lsl #3
1001cb76:	f7fa f9c9 	bl	10016f0c <realloc>
1001cb7a:	4604      	mov	r4, r0
1001cb7c:	2800      	cmp	r0, #0
1001cb7e:	f040 81dc 	bne.w	1001cf3a <__ssvfscanf_r+0x185e>
1001cb82:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001cb84:	2b00      	cmp	r3, #0
1001cb86:	f47f aeb2 	bne.w	1001c8ee <__ssvfscanf_r+0x1212>
1001cb8a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001cb8e:	643b      	str	r3, [r7, #64]	@ 0x40
1001cb90:	f7fe be21 	b.w	1001b7d6 <__ssvfscanf_r+0xfa>
1001cb94:	4853      	ldr	r0, [pc, #332]	@ (1001cce4 <__ssvfscanf_r+0x1608>)
1001cb96:	f002 fcfb 	bl	1001f590 <nanf>
1001cb9a:	f8cb 0000 	str.w	r0, [fp]
1001cb9e:	f7ff b809 	b.w	1001bbb4 <__ssvfscanf_r+0x4d8>
1001cba2:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
1001cba4:	e9c7 2211 	strd	r2, r2, [r7, #68]	@ 0x44
1001cba8:	f7ff bbce 	b.w	1001c348 <__ssvfscanf_r+0xc6c>
1001cbac:	b082      	sub	sp, #8
1001cbae:	e9cd 3302 	strd	r3, r3, [sp, #8]
1001cbb2:	ab02      	add	r3, sp, #8
1001cbb4:	63fb      	str	r3, [r7, #60]	@ 0x3c
1001cbb6:	e550      	b.n	1001c65a <__ssvfscanf_r+0xf7e>
1001cbb8:	637b      	str	r3, [r7, #52]	@ 0x34
1001cbba:	004b      	lsls	r3, r1, #1
1001cbbc:	4610      	mov	r0, r2
1001cbbe:	4619      	mov	r1, r3
1001cbc0:	647b      	str	r3, [r7, #68]	@ 0x44
1001cbc2:	f7fa f9a3 	bl	10016f0c <realloc>
1001cbc6:	4602      	mov	r2, r0
1001cbc8:	2800      	cmp	r0, #0
1001cbca:	d0da      	beq.n	1001cb82 <__ssvfscanf_r+0x14a6>
1001cbcc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cbce:	1984      	adds	r4, r0, r6
1001cbd0:	6018      	str	r0, [r3, #0]
1001cbd2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001cbd4:	f7ff bbd7 	b.w	1001c386 <__ssvfscanf_r+0xcaa>
1001cbd8:	6938      	ldr	r0, [r7, #16]
1001cbda:	4601      	mov	r1, r0
1001cbdc:	230a      	movs	r3, #10
1001cbde:	3101      	adds	r1, #1
1001cbe0:	4683      	mov	fp, r0
1001cbe2:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cbe4:	f002 f874 	bl	1001ecd0 <_strtol_r>
1001cbe8:	697b      	ldr	r3, [r7, #20]
1001cbea:	1ac2      	subs	r2, r0, r3
1001cbec:	e4e2      	b.n	1001c5b4 <__ssvfscanf_r+0xed8>
1001cbee:	f04f 0b00 	mov.w	fp, #0
1001cbf2:	f7ff b926 	b.w	1001be42 <__ssvfscanf_r+0x766>
1001cbf6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001cbf8:	637e      	str	r6, [r7, #52]	@ 0x34
1001cbfa:	469c      	mov	ip, r3
1001cbfc:	469e      	mov	lr, r3
1001cbfe:	64bb      	str	r3, [r7, #72]	@ 0x48
1001cc00:	f7ff b8bb 	b.w	1001bd7a <__ssvfscanf_r+0x69e>
1001cc04:	465e      	mov	r6, fp
1001cc06:	4623      	mov	r3, r4
1001cc08:	46a3      	mov	fp, r4
1001cc0a:	e40c      	b.n	1001c426 <__ssvfscanf_r+0xd4a>
1001cc0c:	f8d7 b034 	ldr.w	fp, [r7, #52]	@ 0x34
1001cc10:	637a      	str	r2, [r7, #52]	@ 0x34
1001cc12:	e9c7 220b 	strd	r2, r2, [r7, #44]	@ 0x2c
1001cc16:	f7ff b96e 	b.w	1001bef6 <__ssvfscanf_r+0x81a>
1001cc1a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1001cc1c:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001cc20:	627c      	str	r4, [r7, #36]	@ 0x24
1001cc22:	2e00      	cmp	r6, #0
1001cc24:	f43f a9e0 	beq.w	1001bfe8 <__ssvfscanf_r+0x90c>
1001cc28:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001cc2a:	4615      	mov	r5, r2
1001cc2c:	3e01      	subs	r6, #1
1001cc2e:	f507 73b8 	add.w	r3, r7, #368	@ 0x170
1001cc32:	4652      	mov	r2, sl
1001cc34:	5d99      	ldrb	r1, [r3, r6]
1001cc36:	4620      	mov	r0, r4
1001cc38:	f003 faa0 	bl	1002017c <_sungetc_r>
1001cc3c:	2e00      	cmp	r6, #0
1001cc3e:	d1f5      	bne.n	1001cc2c <__ssvfscanf_r+0x1550>
1001cc40:	462a      	mov	r2, r5
1001cc42:	f7ff b9d1 	b.w	1001bfe8 <__ssvfscanf_r+0x90c>
1001cc46:	6cbc      	ldr	r4, [r7, #72]	@ 0x48
1001cc48:	6820      	ldr	r0, [r4, #0]
1001cc4a:	f7fa f95f 	bl	10016f0c <realloc>
1001cc4e:	2800      	cmp	r0, #0
1001cc50:	f43f abb4 	beq.w	1001c3bc <__ssvfscanf_r+0xce0>
1001cc54:	6020      	str	r0, [r4, #0]
1001cc56:	f7ff bbb1 	b.w	1001c3bc <__ssvfscanf_r+0xce0>
1001cc5a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cc5c:	4651      	mov	r1, sl
1001cc5e:	e9c7 320c 	strd	r3, r2, [r7, #48]	@ 0x30
1001cc62:	f003 fac7 	bl	100201f4 <__ssrefill_r>
1001cc66:	e9d7 320c 	ldrd	r3, r2, [r7, #48]	@ 0x30
1001cc6a:	2800      	cmp	r0, #0
1001cc6c:	f43f ab93 	beq.w	1001c396 <__ssvfscanf_r+0xcba>
1001cc70:	f7ff bb98 	b.w	1001c3a4 <__ssvfscanf_r+0xcc8>
1001cc74:	f8db 0000 	ldr.w	r0, [fp]
1001cc78:	f7fa f948 	bl	10016f0c <realloc>
1001cc7c:	2800      	cmp	r0, #0
1001cc7e:	f43f ac14 	beq.w	1001c4aa <__ssvfscanf_r+0xdce>
1001cc82:	f8cb 0000 	str.w	r0, [fp]
1001cc86:	e410      	b.n	1001c4aa <__ssvfscanf_r+0xdce>
1001cc88:	07e5      	lsls	r5, r4, #31
1001cc8a:	d435      	bmi.n	1001ccf8 <__ssvfscanf_r+0x161c>
1001cc8c:	07a4      	lsls	r4, r4, #30
1001cc8e:	d533      	bpl.n	1001ccf8 <__ssvfscanf_r+0x161c>
1001cc90:	ea4f 70e9 	mov.w	r0, r9, asr #31
1001cc94:	f8c2 9000 	str.w	r9, [r2]
1001cc98:	6050      	str	r0, [r2, #4]
1001cc9a:	e4d2      	b.n	1001c642 <__ssvfscanf_r+0xf66>
1001cc9c:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cc9e:	4651      	mov	r1, sl
1001cca0:	f003 faa8 	bl	100201f4 <__ssrefill_r>
1001cca4:	2800      	cmp	r0, #0
1001cca6:	f43f a8d1 	beq.w	1001be4c <__ssvfscanf_r+0x770>
1001ccaa:	4643      	mov	r3, r8
1001ccac:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
1001ccb0:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
1001ccb4:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001ccb8:	462a      	mov	r2, r5
1001ccba:	f1bb 0f00 	cmp.w	fp, #0
1001ccbe:	f47e ad79 	bne.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001ccc2:	f7ff b8d4 	b.w	1001be6e <__ssvfscanf_r+0x792>
1001ccc6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1001ccc8:	f7ff b81a 	b.w	1001bd00 <__ssvfscanf_r+0x624>
1001cccc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001ccce:	f423 63f0 	bic.w	r3, r3, #1920	@ 0x780
1001ccd2:	64bb      	str	r3, [r7, #72]	@ 0x48
1001ccd4:	2401      	movs	r4, #1
1001ccd6:	f7fe bf07 	b.w	1001bae8 <__ssvfscanf_r+0x40c>
1001ccda:	bf00      	nop
1001ccdc:	1001ee09 	.word	0x1001ee09
1001cce0:	10023919 	.word	0x10023919
1001cce4:	10021468 	.word	0x10021468
1001cce8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001ccea:	f423 63f0 	bic.w	r3, r3, #1920	@ 0x780
1001ccee:	64bb      	str	r3, [r7, #72]	@ 0x48
1001ccf0:	2301      	movs	r3, #1
1001ccf2:	647b      	str	r3, [r7, #68]	@ 0x44
1001ccf4:	f7fe bef8 	b.w	1001bae8 <__ssvfscanf_r+0x40c>
1001ccf8:	f8c2 9000 	str.w	r9, [r2]
1001ccfc:	e4a1      	b.n	1001c642 <__ssvfscanf_r+0xf66>
1001ccfe:	44a9      	add	r9, r5
1001cd00:	f7fe bd12 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001cd04:	4643      	mov	r3, r8
1001cd06:	f8d7 e030 	ldr.w	lr, [r7, #48]	@ 0x30
1001cd0a:	f8d7 c044 	ldr.w	ip, [r7, #68]	@ 0x44
1001cd0e:	f8d7 801c 	ldr.w	r8, [r7, #28]
1001cd12:	462a      	mov	r2, r5
1001cd14:	f1bb 0f00 	cmp.w	fp, #0
1001cd18:	f43f a8a9 	beq.w	1001be6e <__ssvfscanf_r+0x792>
1001cd1c:	633d      	str	r5, [r7, #48]	@ 0x30
1001cd1e:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001cd20:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
1001cd22:	f8c7 9044 	str.w	r9, [r7, #68]	@ 0x44
1001cd26:	465e      	mov	r6, fp
1001cd28:	46f1      	mov	r9, lr
1001cd2a:	46c3      	mov	fp, r8
1001cd2c:	623b      	str	r3, [r7, #32]
1001cd2e:	46e0      	mov	r8, ip
1001cd30:	3e01      	subs	r6, #1
1001cd32:	4652      	mov	r2, sl
1001cd34:	5da9      	ldrb	r1, [r5, r6]
1001cd36:	4620      	mov	r0, r4
1001cd38:	f003 fa20 	bl	1002017c <_sungetc_r>
1001cd3c:	2e00      	cmp	r6, #0
1001cd3e:	d1f7      	bne.n	1001cd30 <__ssvfscanf_r+0x1654>
1001cd40:	46ce      	mov	lr, r9
1001cd42:	46c4      	mov	ip, r8
1001cd44:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1001cd46:	f8d7 9044 	ldr.w	r9, [r7, #68]	@ 0x44
1001cd4a:	6a3b      	ldr	r3, [r7, #32]
1001cd4c:	46d8      	mov	r8, fp
1001cd4e:	f7ff b88e 	b.w	1001be6e <__ssvfscanf_r+0x792>
1001cd52:	6b7c      	ldr	r4, [r7, #52]	@ 0x34
1001cd54:	1d19      	adds	r1, r3, #4
1001cd56:	6820      	ldr	r0, [r4, #0]
1001cd58:	f7fa f8d8 	bl	10016f0c <realloc>
1001cd5c:	2800      	cmp	r0, #0
1001cd5e:	f43f a951 	beq.w	1001c004 <__ssvfscanf_r+0x928>
1001cd62:	6020      	str	r0, [r4, #0]
1001cd64:	f7ff b94e 	b.w	1001c004 <__ssvfscanf_r+0x928>
1001cd68:	6b38      	ldr	r0, [r7, #48]	@ 0x30
1001cd6a:	00d9      	lsls	r1, r3, #3
1001cd6c:	f7fa f8ce 	bl	10016f0c <realloc>
1001cd70:	6338      	str	r0, [r7, #48]	@ 0x30
1001cd72:	2800      	cmp	r0, #0
1001cd74:	f43f af05 	beq.w	1001cb82 <__ssvfscanf_r+0x14a6>
1001cd78:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cd7a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1001cd7c:	005b      	lsls	r3, r3, #1
1001cd7e:	1905      	adds	r5, r0, r4
1001cd80:	6010      	str	r0, [r2, #0]
1001cd82:	647b      	str	r3, [r7, #68]	@ 0x44
1001cd84:	46c3      	mov	fp, r8
1001cd86:	f7ff b85c 	b.w	1001be42 <__ssvfscanf_r+0x766>
1001cd8a:	6afd      	ldr	r5, [r7, #44]	@ 0x2c
1001cd8c:	45ab      	cmp	fp, r5
1001cd8e:	f67f ab94 	bls.w	1001c4ba <__ssvfscanf_r+0xdde>
1001cd92:	6cfc      	ldr	r4, [r7, #76]	@ 0x4c
1001cd94:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001cd98:	4652      	mov	r2, sl
1001cd9a:	4620      	mov	r0, r4
1001cd9c:	f003 f9ee 	bl	1002017c <_sungetc_r>
1001cda0:	45ab      	cmp	fp, r5
1001cda2:	d1f7      	bne.n	1001cd94 <__ssvfscanf_r+0x16b8>
1001cda4:	f7ff ba7e 	b.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001cda8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1001cdaa:	459b      	cmp	fp, r3
1001cdac:	f67f ab85 	bls.w	1001c4ba <__ssvfscanf_r+0xdde>
1001cdb0:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
1001cdb2:	f81b 1d01 	ldrb.w	r1, [fp, #-1]!
1001cdb6:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cdb8:	4652      	mov	r2, sl
1001cdba:	f003 f9df 	bl	1002017c <_sungetc_r>
1001cdbe:	45a3      	cmp	fp, r4
1001cdc0:	d1f7      	bne.n	1001cdb2 <__ssvfscanf_r+0x16d6>
1001cdc2:	f7ff ba6f 	b.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001cdc6:	f002 fad1 	bl	1001f36c <_strtoull_r>
1001cdca:	460b      	mov	r3, r1
1001cdcc:	e60e      	b.n	1001c9ec <__ssvfscanf_r+0x1310>
1001cdce:	2200      	movs	r2, #0
1001cdd0:	4694      	mov	ip, r2
1001cdd2:	4613      	mov	r3, r2
1001cdd4:	4693      	mov	fp, r2
1001cdd6:	e682      	b.n	1001cade <__ssvfscanf_r+0x1402>
1001cdd8:	461c      	mov	r4, r3
1001cdda:	e9da 2300 	ldrd	r2, r3, [sl]
1001cdde:	429d      	cmp	r5, r3
1001cde0:	eb02 0103 	add.w	r1, r2, r3
1001cde4:	dd51      	ble.n	1001ce8a <__ssvfscanf_r+0x17ae>
1001cde6:	f8ca 1000 	str.w	r1, [sl]
1001cdea:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cdec:	4651      	mov	r1, sl
1001cdee:	441c      	add	r4, r3
1001cdf0:	1aed      	subs	r5, r5, r3
1001cdf2:	f003 f9ff 	bl	100201f4 <__ssrefill_r>
1001cdf6:	2800      	cmp	r0, #0
1001cdf8:	d0ef      	beq.n	1001cdda <__ssvfscanf_r+0x16fe>
1001cdfa:	2c00      	cmp	r4, #0
1001cdfc:	f43e acda 	beq.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001ce00:	44a1      	add	r9, r4
1001ce02:	f7fe bc91 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001ce06:	f8cd a000 	str.w	sl, [sp]
1001ce0a:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001ce0c:	462b      	mov	r3, r5
1001ce0e:	4631      	mov	r1, r6
1001ce10:	2201      	movs	r2, #1
1001ce12:	f003 fa0b 	bl	1002022c <_sfread_r>
1001ce16:	4604      	mov	r4, r0
1001ce18:	2800      	cmp	r0, #0
1001ce1a:	f43e accb 	beq.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001ce1e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
1001ce20:	f8c7 b034 	str.w	fp, [r7, #52]	@ 0x34
1001ce24:	3301      	adds	r3, #1
1001ce26:	44a1      	add	r9, r4
1001ce28:	643b      	str	r3, [r7, #64]	@ 0x40
1001ce2a:	f7fe bc7d 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001ce2e:	647b      	str	r3, [r7, #68]	@ 0x44
1001ce30:	2b00      	cmp	r3, #0
1001ce32:	f43f aa37 	beq.w	1001c2a4 <__ssvfscanf_r+0xbc8>
1001ce36:	2080      	movs	r0, #128	@ 0x80
1001ce38:	f7f6 fe62 	bl	10013b00 <malloc>
1001ce3c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001ce3e:	4683      	mov	fp, r0
1001ce40:	2800      	cmp	r0, #0
1001ce42:	f43f ae9e 	beq.w	1001cb82 <__ssvfscanf_r+0x14a6>
1001ce46:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
1001ce48:	6018      	str	r0, [r3, #0]
1001ce4a:	88ce      	ldrh	r6, [r1, #6]
1001ce4c:	888a      	ldrh	r2, [r1, #4]
1001ce4e:	4296      	cmp	r6, r2
1001ce50:	d337      	bcc.n	1001cec2 <__ssvfscanf_r+0x17e6>
1001ce52:	f64f 71f6 	movw	r1, #65526	@ 0xfff6
1001ce56:	428a      	cmp	r2, r1
1001ce58:	647b      	str	r3, [r7, #68]	@ 0x44
1001ce5a:	f63f ad48 	bhi.w	1001c8ee <__ssvfscanf_r+0x1212>
1001ce5e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001ce60:	3208      	adds	r2, #8
1001ce62:	b294      	uxth	r4, r2
1001ce64:	6818      	ldr	r0, [r3, #0]
1001ce66:	00a1      	lsls	r1, r4, #2
1001ce68:	f7fa f850 	bl	10016f0c <realloc>
1001ce6c:	2800      	cmp	r0, #0
1001ce6e:	f43f ad3e 	beq.w	1001c8ee <__ssvfscanf_r+0x1212>
1001ce72:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1001ce74:	809c      	strh	r4, [r3, #4]
1001ce76:	6018      	str	r0, [r3, #0]
1001ce78:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001ce7a:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1001ce7c:	f840 3026 	str.w	r3, [r0, r6, lsl #2]
1001ce80:	3601      	adds	r6, #1
1001ce82:	80d6      	strh	r6, [r2, #6]
1001ce84:	46dc      	mov	ip, fp
1001ce86:	2220      	movs	r2, #32
1001ce88:	e629      	b.n	1001cade <__ssvfscanf_r+0x1402>
1001ce8a:	1b5b      	subs	r3, r3, r5
1001ce8c:	442a      	add	r2, r5
1001ce8e:	442c      	add	r4, r5
1001ce90:	f8ca 3004 	str.w	r3, [sl, #4]
1001ce94:	f8ca 2000 	str.w	r2, [sl]
1001ce98:	44a1      	add	r9, r4
1001ce9a:	f7fe bc45 	b.w	1001b728 <__ssvfscanf_r+0x4c>
1001ce9e:	6808      	ldr	r0, [r1, #0]
1001cea0:	e510      	b.n	1001c8c4 <__ssvfscanf_r+0x11e8>
1001cea2:	4285      	cmp	r5, r0
1001cea4:	d9bb      	bls.n	1001ce1e <__ssvfscanf_r+0x1742>
1001cea6:	6830      	ldr	r0, [r6, #0]
1001cea8:	4621      	mov	r1, r4
1001ceaa:	f7fa f82f 	bl	10016f0c <realloc>
1001ceae:	2800      	cmp	r0, #0
1001ceb0:	d0b5      	beq.n	1001ce1e <__ssvfscanf_r+0x1742>
1001ceb2:	6030      	str	r0, [r6, #0]
1001ceb4:	e7b3      	b.n	1001ce1e <__ssvfscanf_r+0x1742>
1001ceb6:	f8ba 300c 	ldrh.w	r3, [sl, #12]
1001ceba:	065b      	lsls	r3, r3, #25
1001cebc:	f57e ac86 	bpl.w	1001b7cc <__ssvfscanf_r+0xf0>
1001cec0:	e515      	b.n	1001c8ee <__ssvfscanf_r+0x1212>
1001cec2:	6808      	ldr	r0, [r1, #0]
1001cec4:	e7d9      	b.n	1001ce7a <__ssvfscanf_r+0x179e>
1001cec6:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
1001cec8:	1c91      	adds	r1, r2, #2
1001ceca:	d034      	beq.n	1001cf36 <__ssvfscanf_r+0x185a>
1001cecc:	2a03      	cmp	r2, #3
1001cece:	4499      	add	r9, r3
1001ced0:	d102      	bne.n	1001ced8 <__ssvfscanf_r+0x17fc>
1001ced2:	6833      	ldr	r3, [r6, #0]
1001ced4:	2b04      	cmp	r3, #4
1001ced6:	d000      	beq.n	1001ceda <__ssvfscanf_r+0x17fe>
1001ced8:	3d01      	subs	r5, #1
1001ceda:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cedc:	2b00      	cmp	r3, #0
1001cede:	f43f ae3d 	beq.w	1001cb5c <__ssvfscanf_r+0x1480>
1001cee2:	2600      	movs	r6, #0
1001cee4:	f8da 3004 	ldr.w	r3, [sl, #4]
1001cee8:	2b00      	cmp	r3, #0
1001ceea:	dd13      	ble.n	1001cf14 <__ssvfscanf_r+0x1838>
1001ceec:	2d00      	cmp	r5, #0
1001ceee:	f47f adfc 	bne.w	1001caea <__ssvfscanf_r+0x140e>
1001cef2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cef4:	4642      	mov	r2, r8
1001cef6:	46a4      	mov	ip, r4
1001cef8:	f8d7 8030 	ldr.w	r8, [r7, #48]	@ 0x30
1001cefc:	b123      	cbz	r3, 1001cf08 <__ssvfscanf_r+0x182c>
1001cefe:	ebab 010c 	sub.w	r1, fp, ip
1001cf02:	ebb2 0fa1 	cmp.w	r2, r1, asr #2
1001cf06:	d821      	bhi.n	1001cf4c <__ssvfscanf_r+0x1870>
1001cf08:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
1001cf0a:	2b00      	cmp	r3, #0
1001cf0c:	f47e ac0c 	bne.w	1001b728 <__ssvfscanf_r+0x4c>
1001cf10:	f7fe bfba 	b.w	1001be88 <__ssvfscanf_r+0x7ac>
1001cf14:	6cf8      	ldr	r0, [r7, #76]	@ 0x4c
1001cf16:	4651      	mov	r1, sl
1001cf18:	f003 f96c 	bl	100201f4 <__ssrefill_r>
1001cf1c:	2800      	cmp	r0, #0
1001cf1e:	d0e5      	beq.n	1001ceec <__ssvfscanf_r+0x1810>
1001cf20:	4642      	mov	r2, r8
1001cf22:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cf24:	f8d7 8030 	ldr.w	r8, [r7, #48]	@ 0x30
1001cf28:	46a4      	mov	ip, r4
1001cf2a:	2e00      	cmp	r6, #0
1001cf2c:	f47e ac42 	bne.w	1001b7b4 <__ssvfscanf_r+0xd8>
1001cf30:	2b00      	cmp	r3, #0
1001cf32:	d1e4      	bne.n	1001cefe <__ssvfscanf_r+0x1822>
1001cf34:	e7e8      	b.n	1001cf08 <__ssvfscanf_r+0x182c>
1001cf36:	461e      	mov	r6, r3
1001cf38:	e7d4      	b.n	1001cee4 <__ssvfscanf_r+0x1808>
1001cf3a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cf3c:	eb00 0b06 	add.w	fp, r0, r6
1001cf40:	6018      	str	r0, [r3, #0]
1001cf42:	ea4f 0848 	mov.w	r8, r8, lsl #1
1001cf46:	f10b 0b04 	add.w	fp, fp, #4
1001cf4a:	e7ca      	b.n	1001cee2 <__ssvfscanf_r+0x1806>
1001cf4c:	6818      	ldr	r0, [r3, #0]
1001cf4e:	647b      	str	r3, [r7, #68]	@ 0x44
1001cf50:	f7f9 ffdc 	bl	10016f0c <realloc>
1001cf54:	2800      	cmp	r0, #0
1001cf56:	d0d7      	beq.n	1001cf08 <__ssvfscanf_r+0x182c>
1001cf58:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001cf5a:	6018      	str	r0, [r3, #0]
1001cf5c:	e7d4      	b.n	1001cf08 <__ssvfscanf_r+0x182c>
1001cf5e:	bf00      	nop

1001cf60 <_putc_r>:
1001cf60:	b570      	push	{r4, r5, r6, lr}
1001cf62:	460e      	mov	r6, r1
1001cf64:	4614      	mov	r4, r2
1001cf66:	4605      	mov	r5, r0
1001cf68:	b110      	cbz	r0, 1001cf70 <_putc_r+0x10>
1001cf6a:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001cf6c:	2b00      	cmp	r3, #0
1001cf6e:	d02f      	beq.n	1001cfd0 <_putc_r+0x70>
1001cf70:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001cf72:	07d8      	lsls	r0, r3, #31
1001cf74:	d402      	bmi.n	1001cf7c <_putc_r+0x1c>
1001cf76:	89a3      	ldrh	r3, [r4, #12]
1001cf78:	0599      	lsls	r1, r3, #22
1001cf7a:	d520      	bpl.n	1001cfbe <_putc_r+0x5e>
1001cf7c:	68a3      	ldr	r3, [r4, #8]
1001cf7e:	3b01      	subs	r3, #1
1001cf80:	2b00      	cmp	r3, #0
1001cf82:	60a3      	str	r3, [r4, #8]
1001cf84:	da19      	bge.n	1001cfba <_putc_r+0x5a>
1001cf86:	69a2      	ldr	r2, [r4, #24]
1001cf88:	4293      	cmp	r3, r2
1001cf8a:	db0f      	blt.n	1001cfac <_putc_r+0x4c>
1001cf8c:	b2f0      	uxtb	r0, r6
1001cf8e:	280a      	cmp	r0, #10
1001cf90:	d00c      	beq.n	1001cfac <_putc_r+0x4c>
1001cf92:	6823      	ldr	r3, [r4, #0]
1001cf94:	1c5a      	adds	r2, r3, #1
1001cf96:	6022      	str	r2, [r4, #0]
1001cf98:	4605      	mov	r5, r0
1001cf9a:	701e      	strb	r6, [r3, #0]
1001cf9c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001cf9e:	07da      	lsls	r2, r3, #31
1001cfa0:	d402      	bmi.n	1001cfa8 <_putc_r+0x48>
1001cfa2:	89a3      	ldrh	r3, [r4, #12]
1001cfa4:	059b      	lsls	r3, r3, #22
1001cfa6:	d50e      	bpl.n	1001cfc6 <_putc_r+0x66>
1001cfa8:	4628      	mov	r0, r5
1001cfaa:	bd70      	pop	{r4, r5, r6, pc}
1001cfac:	4628      	mov	r0, r5
1001cfae:	4622      	mov	r2, r4
1001cfb0:	4631      	mov	r1, r6
1001cfb2:	f001 ff59 	bl	1001ee68 <__swbuf_r>
1001cfb6:	4605      	mov	r5, r0
1001cfb8:	e7f0      	b.n	1001cf9c <_putc_r+0x3c>
1001cfba:	b2f0      	uxtb	r0, r6
1001cfbc:	e7e9      	b.n	1001cf92 <_putc_r+0x32>
1001cfbe:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001cfc0:	f7fb fa3a 	bl	10018438 <__retarget_lock_acquire_recursive>
1001cfc4:	e7da      	b.n	1001cf7c <_putc_r+0x1c>
1001cfc6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001cfc8:	f7fb fa38 	bl	1001843c <__retarget_lock_release_recursive>
1001cfcc:	4628      	mov	r0, r5
1001cfce:	bd70      	pop	{r4, r5, r6, pc}
1001cfd0:	f7fa fc36 	bl	10017840 <__sinit>
1001cfd4:	e7cc      	b.n	1001cf70 <_putc_r+0x10>
1001cfd6:	bf00      	nop

1001cfd8 <_Balloc>:
1001cfd8:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001cfda:	b570      	push	{r4, r5, r6, lr}
1001cfdc:	4605      	mov	r5, r0
1001cfde:	460c      	mov	r4, r1
1001cfe0:	b14b      	cbz	r3, 1001cff6 <_Balloc+0x1e>
1001cfe2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1001cfe6:	b180      	cbz	r0, 1001d00a <_Balloc+0x32>
1001cfe8:	6802      	ldr	r2, [r0, #0]
1001cfea:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
1001cfee:	2300      	movs	r3, #0
1001cff0:	60c3      	str	r3, [r0, #12]
1001cff2:	6103      	str	r3, [r0, #16]
1001cff4:	bd70      	pop	{r4, r5, r6, pc}
1001cff6:	2221      	movs	r2, #33	@ 0x21
1001cff8:	2104      	movs	r1, #4
1001cffa:	f002 fbb1 	bl	1001f760 <_calloc_r>
1001cffe:	4603      	mov	r3, r0
1001d000:	6468      	str	r0, [r5, #68]	@ 0x44
1001d002:	2800      	cmp	r0, #0
1001d004:	d1ed      	bne.n	1001cfe2 <_Balloc+0xa>
1001d006:	2000      	movs	r0, #0
1001d008:	bd70      	pop	{r4, r5, r6, pc}
1001d00a:	2101      	movs	r1, #1
1001d00c:	fa01 f604 	lsl.w	r6, r1, r4
1001d010:	1d72      	adds	r2, r6, #5
1001d012:	0092      	lsls	r2, r2, #2
1001d014:	4628      	mov	r0, r5
1001d016:	f002 fba3 	bl	1001f760 <_calloc_r>
1001d01a:	2800      	cmp	r0, #0
1001d01c:	d0f3      	beq.n	1001d006 <_Balloc+0x2e>
1001d01e:	e9c0 4601 	strd	r4, r6, [r0, #4]
1001d022:	e7e4      	b.n	1001cfee <_Balloc+0x16>

1001d024 <_Bfree>:
1001d024:	b131      	cbz	r1, 1001d034 <_Bfree+0x10>
1001d026:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001d028:	684a      	ldr	r2, [r1, #4]
1001d02a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1001d02e:	6008      	str	r0, [r1, #0]
1001d030:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
1001d034:	4770      	bx	lr
1001d036:	bf00      	nop

1001d038 <__multadd>:
1001d038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001d03c:	690d      	ldr	r5, [r1, #16]
1001d03e:	4607      	mov	r7, r0
1001d040:	460e      	mov	r6, r1
1001d042:	461c      	mov	r4, r3
1001d044:	f101 0e14 	add.w	lr, r1, #20
1001d048:	2000      	movs	r0, #0
1001d04a:	f8de 1000 	ldr.w	r1, [lr]
1001d04e:	b28b      	uxth	r3, r1
1001d050:	fb02 4303 	mla	r3, r2, r3, r4
1001d054:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001d058:	0c09      	lsrs	r1, r1, #16
1001d05a:	fb02 cc01 	mla	ip, r2, r1, ip
1001d05e:	3001      	adds	r0, #1
1001d060:	b29b      	uxth	r3, r3
1001d062:	eb03 430c 	add.w	r3, r3, ip, lsl #16
1001d066:	4285      	cmp	r5, r0
1001d068:	f84e 3b04 	str.w	r3, [lr], #4
1001d06c:	ea4f 441c 	mov.w	r4, ip, lsr #16
1001d070:	dceb      	bgt.n	1001d04a <__multadd+0x12>
1001d072:	b13c      	cbz	r4, 1001d084 <__multadd+0x4c>
1001d074:	68b3      	ldr	r3, [r6, #8]
1001d076:	42ab      	cmp	r3, r5
1001d078:	dd07      	ble.n	1001d08a <__multadd+0x52>
1001d07a:	eb06 0385 	add.w	r3, r6, r5, lsl #2
1001d07e:	3501      	adds	r5, #1
1001d080:	615c      	str	r4, [r3, #20]
1001d082:	6135      	str	r5, [r6, #16]
1001d084:	4630      	mov	r0, r6
1001d086:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d08a:	6871      	ldr	r1, [r6, #4]
1001d08c:	4638      	mov	r0, r7
1001d08e:	3101      	adds	r1, #1
1001d090:	f7ff ffa2 	bl	1001cfd8 <_Balloc>
1001d094:	4680      	mov	r8, r0
1001d096:	b1a8      	cbz	r0, 1001d0c4 <__multadd+0x8c>
1001d098:	6932      	ldr	r2, [r6, #16]
1001d09a:	3202      	adds	r2, #2
1001d09c:	f106 010c 	add.w	r1, r6, #12
1001d0a0:	0092      	lsls	r2, r2, #2
1001d0a2:	300c      	adds	r0, #12
1001d0a4:	f7fb fa1c 	bl	100184e0 <memcpy>
1001d0a8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001d0aa:	6872      	ldr	r2, [r6, #4]
1001d0ac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001d0b0:	6031      	str	r1, [r6, #0]
1001d0b2:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
1001d0b6:	4646      	mov	r6, r8
1001d0b8:	eb06 0385 	add.w	r3, r6, r5, lsl #2
1001d0bc:	3501      	adds	r5, #1
1001d0be:	615c      	str	r4, [r3, #20]
1001d0c0:	6135      	str	r5, [r6, #16]
1001d0c2:	e7df      	b.n	1001d084 <__multadd+0x4c>
1001d0c4:	4b02      	ldr	r3, [pc, #8]	@ (1001d0d0 <__multadd+0x98>)
1001d0c6:	4803      	ldr	r0, [pc, #12]	@ (1001d0d4 <__multadd+0x9c>)
1001d0c8:	4642      	mov	r2, r8
1001d0ca:	21ba      	movs	r1, #186	@ 0xba
1001d0cc:	f002 fa64 	bl	1001f598 <__assert_func>
1001d0d0:	10023a2c 	.word	0x10023a2c
1001d0d4:	10023af0 	.word	0x10023af0

1001d0d8 <__s2b>:
1001d0d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001d0dc:	4617      	mov	r7, r2
1001d0de:	4a27      	ldr	r2, [pc, #156]	@ (1001d17c <__s2b+0xa4>)
1001d0e0:	461e      	mov	r6, r3
1001d0e2:	3308      	adds	r3, #8
1001d0e4:	460c      	mov	r4, r1
1001d0e6:	2e09      	cmp	r6, #9
1001d0e8:	fb82 1203 	smull	r1, r2, r2, r3
1001d0ec:	ea4f 73e3 	mov.w	r3, r3, asr #31
1001d0f0:	4605      	mov	r5, r0
1001d0f2:	ebc3 0362 	rsb	r3, r3, r2, asr #1
1001d0f6:	dd39      	ble.n	1001d16c <__s2b+0x94>
1001d0f8:	f04f 0c01 	mov.w	ip, #1
1001d0fc:	2100      	movs	r1, #0
1001d0fe:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
1001d102:	4563      	cmp	r3, ip
1001d104:	f101 0101 	add.w	r1, r1, #1
1001d108:	dcf9      	bgt.n	1001d0fe <__s2b+0x26>
1001d10a:	4628      	mov	r0, r5
1001d10c:	f7ff ff64 	bl	1001cfd8 <_Balloc>
1001d110:	4601      	mov	r1, r0
1001d112:	b368      	cbz	r0, 1001d170 <__s2b+0x98>
1001d114:	9b08      	ldr	r3, [sp, #32]
1001d116:	6143      	str	r3, [r0, #20]
1001d118:	2f09      	cmp	r7, #9
1001d11a:	f04f 0301 	mov.w	r3, #1
1001d11e:	6103      	str	r3, [r0, #16]
1001d120:	dc12      	bgt.n	1001d148 <__s2b+0x70>
1001d122:	340a      	adds	r4, #10
1001d124:	2709      	movs	r7, #9
1001d126:	42be      	cmp	r6, r7
1001d128:	dd0b      	ble.n	1001d142 <__s2b+0x6a>
1001d12a:	1bf6      	subs	r6, r6, r7
1001d12c:	4426      	add	r6, r4
1001d12e:	f814 3b01 	ldrb.w	r3, [r4], #1
1001d132:	220a      	movs	r2, #10
1001d134:	3b30      	subs	r3, #48	@ 0x30
1001d136:	4628      	mov	r0, r5
1001d138:	f7ff ff7e 	bl	1001d038 <__multadd>
1001d13c:	42a6      	cmp	r6, r4
1001d13e:	4601      	mov	r1, r0
1001d140:	d1f5      	bne.n	1001d12e <__s2b+0x56>
1001d142:	4608      	mov	r0, r1
1001d144:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001d148:	f104 0909 	add.w	r9, r4, #9
1001d14c:	46c8      	mov	r8, r9
1001d14e:	443c      	add	r4, r7
1001d150:	f818 3b01 	ldrb.w	r3, [r8], #1
1001d154:	220a      	movs	r2, #10
1001d156:	3b30      	subs	r3, #48	@ 0x30
1001d158:	4628      	mov	r0, r5
1001d15a:	f7ff ff6d 	bl	1001d038 <__multadd>
1001d15e:	45a0      	cmp	r8, r4
1001d160:	4601      	mov	r1, r0
1001d162:	d1f5      	bne.n	1001d150 <__s2b+0x78>
1001d164:	f1a7 0408 	sub.w	r4, r7, #8
1001d168:	444c      	add	r4, r9
1001d16a:	e7dc      	b.n	1001d126 <__s2b+0x4e>
1001d16c:	2100      	movs	r1, #0
1001d16e:	e7cc      	b.n	1001d10a <__s2b+0x32>
1001d170:	460a      	mov	r2, r1
1001d172:	4b03      	ldr	r3, [pc, #12]	@ (1001d180 <__s2b+0xa8>)
1001d174:	4803      	ldr	r0, [pc, #12]	@ (1001d184 <__s2b+0xac>)
1001d176:	21d3      	movs	r1, #211	@ 0xd3
1001d178:	f002 fa0e 	bl	1001f598 <__assert_func>
1001d17c:	38e38e39 	.word	0x38e38e39
1001d180:	10023a2c 	.word	0x10023a2c
1001d184:	10023af0 	.word	0x10023af0

1001d188 <__hi0bits>:
1001d188:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
1001d18c:	4603      	mov	r3, r0
1001d18e:	bf36      	itet	cc
1001d190:	0403      	lslcc	r3, r0, #16
1001d192:	2000      	movcs	r0, #0
1001d194:	2010      	movcc	r0, #16
1001d196:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
1001d19a:	bf3c      	itt	cc
1001d19c:	021b      	lslcc	r3, r3, #8
1001d19e:	3008      	addcc	r0, #8
1001d1a0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
1001d1a4:	bf3c      	itt	cc
1001d1a6:	011b      	lslcc	r3, r3, #4
1001d1a8:	3004      	addcc	r0, #4
1001d1aa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
1001d1ae:	d303      	bcc.n	1001d1b8 <__hi0bits+0x30>
1001d1b0:	2b00      	cmp	r3, #0
1001d1b2:	db06      	blt.n	1001d1c2 <__hi0bits+0x3a>
1001d1b4:	3001      	adds	r0, #1
1001d1b6:	4770      	bx	lr
1001d1b8:	009b      	lsls	r3, r3, #2
1001d1ba:	d403      	bmi.n	1001d1c4 <__hi0bits+0x3c>
1001d1bc:	005b      	lsls	r3, r3, #1
1001d1be:	d403      	bmi.n	1001d1c8 <__hi0bits+0x40>
1001d1c0:	2020      	movs	r0, #32
1001d1c2:	4770      	bx	lr
1001d1c4:	3002      	adds	r0, #2
1001d1c6:	4770      	bx	lr
1001d1c8:	3003      	adds	r0, #3
1001d1ca:	4770      	bx	lr

1001d1cc <__lo0bits>:
1001d1cc:	6803      	ldr	r3, [r0, #0]
1001d1ce:	f013 0207 	ands.w	r2, r3, #7
1001d1d2:	4601      	mov	r1, r0
1001d1d4:	d007      	beq.n	1001d1e6 <__lo0bits+0x1a>
1001d1d6:	07da      	lsls	r2, r3, #31
1001d1d8:	d41f      	bmi.n	1001d21a <__lo0bits+0x4e>
1001d1da:	0798      	lsls	r0, r3, #30
1001d1dc:	d521      	bpl.n	1001d222 <__lo0bits+0x56>
1001d1de:	085b      	lsrs	r3, r3, #1
1001d1e0:	600b      	str	r3, [r1, #0]
1001d1e2:	2001      	movs	r0, #1
1001d1e4:	4770      	bx	lr
1001d1e6:	b298      	uxth	r0, r3
1001d1e8:	b1a0      	cbz	r0, 1001d214 <__lo0bits+0x48>
1001d1ea:	4610      	mov	r0, r2
1001d1ec:	b2da      	uxtb	r2, r3
1001d1ee:	b90a      	cbnz	r2, 1001d1f4 <__lo0bits+0x28>
1001d1f0:	3008      	adds	r0, #8
1001d1f2:	0a1b      	lsrs	r3, r3, #8
1001d1f4:	071a      	lsls	r2, r3, #28
1001d1f6:	bf04      	itt	eq
1001d1f8:	091b      	lsreq	r3, r3, #4
1001d1fa:	3004      	addeq	r0, #4
1001d1fc:	079a      	lsls	r2, r3, #30
1001d1fe:	bf04      	itt	eq
1001d200:	089b      	lsreq	r3, r3, #2
1001d202:	3002      	addeq	r0, #2
1001d204:	07da      	lsls	r2, r3, #31
1001d206:	d403      	bmi.n	1001d210 <__lo0bits+0x44>
1001d208:	085b      	lsrs	r3, r3, #1
1001d20a:	f100 0001 	add.w	r0, r0, #1
1001d20e:	d006      	beq.n	1001d21e <__lo0bits+0x52>
1001d210:	600b      	str	r3, [r1, #0]
1001d212:	4770      	bx	lr
1001d214:	0c1b      	lsrs	r3, r3, #16
1001d216:	2010      	movs	r0, #16
1001d218:	e7e8      	b.n	1001d1ec <__lo0bits+0x20>
1001d21a:	2000      	movs	r0, #0
1001d21c:	4770      	bx	lr
1001d21e:	2020      	movs	r0, #32
1001d220:	4770      	bx	lr
1001d222:	089b      	lsrs	r3, r3, #2
1001d224:	600b      	str	r3, [r1, #0]
1001d226:	2002      	movs	r0, #2
1001d228:	4770      	bx	lr
1001d22a:	bf00      	nop

1001d22c <__i2b>:
1001d22c:	b538      	push	{r3, r4, r5, lr}
1001d22e:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001d230:	4604      	mov	r4, r0
1001d232:	460d      	mov	r5, r1
1001d234:	b14b      	cbz	r3, 1001d24a <__i2b+0x1e>
1001d236:	6858      	ldr	r0, [r3, #4]
1001d238:	b1b0      	cbz	r0, 1001d268 <__i2b+0x3c>
1001d23a:	6802      	ldr	r2, [r0, #0]
1001d23c:	605a      	str	r2, [r3, #4]
1001d23e:	2200      	movs	r2, #0
1001d240:	2301      	movs	r3, #1
1001d242:	6145      	str	r5, [r0, #20]
1001d244:	60c2      	str	r2, [r0, #12]
1001d246:	6103      	str	r3, [r0, #16]
1001d248:	bd38      	pop	{r3, r4, r5, pc}
1001d24a:	2221      	movs	r2, #33	@ 0x21
1001d24c:	2104      	movs	r1, #4
1001d24e:	f002 fa87 	bl	1001f760 <_calloc_r>
1001d252:	4603      	mov	r3, r0
1001d254:	6460      	str	r0, [r4, #68]	@ 0x44
1001d256:	2800      	cmp	r0, #0
1001d258:	d1ed      	bne.n	1001d236 <__i2b+0xa>
1001d25a:	4b09      	ldr	r3, [pc, #36]	@ (1001d280 <__i2b+0x54>)
1001d25c:	4809      	ldr	r0, [pc, #36]	@ (1001d284 <__i2b+0x58>)
1001d25e:	2200      	movs	r2, #0
1001d260:	f240 1145 	movw	r1, #325	@ 0x145
1001d264:	f002 f998 	bl	1001f598 <__assert_func>
1001d268:	221c      	movs	r2, #28
1001d26a:	2101      	movs	r1, #1
1001d26c:	4620      	mov	r0, r4
1001d26e:	f002 fa77 	bl	1001f760 <_calloc_r>
1001d272:	2800      	cmp	r0, #0
1001d274:	d0f1      	beq.n	1001d25a <__i2b+0x2e>
1001d276:	2201      	movs	r2, #1
1001d278:	2302      	movs	r3, #2
1001d27a:	6042      	str	r2, [r0, #4]
1001d27c:	6083      	str	r3, [r0, #8]
1001d27e:	e7de      	b.n	1001d23e <__i2b+0x12>
1001d280:	10023a2c 	.word	0x10023a2c
1001d284:	10023af0 	.word	0x10023af0

1001d288 <__multiply>:
1001d288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001d28c:	f8d1 8010 	ldr.w	r8, [r1, #16]
1001d290:	6915      	ldr	r5, [r2, #16]
1001d292:	45a8      	cmp	r8, r5
1001d294:	b085      	sub	sp, #20
1001d296:	460e      	mov	r6, r1
1001d298:	4692      	mov	sl, r2
1001d29a:	db05      	blt.n	1001d2a8 <__multiply+0x20>
1001d29c:	462a      	mov	r2, r5
1001d29e:	4653      	mov	r3, sl
1001d2a0:	4645      	mov	r5, r8
1001d2a2:	468a      	mov	sl, r1
1001d2a4:	4690      	mov	r8, r2
1001d2a6:	461e      	mov	r6, r3
1001d2a8:	f8da 3008 	ldr.w	r3, [sl, #8]
1001d2ac:	f8da 1004 	ldr.w	r1, [sl, #4]
1001d2b0:	eb05 0408 	add.w	r4, r5, r8
1001d2b4:	42a3      	cmp	r3, r4
1001d2b6:	bfb8      	it	lt
1001d2b8:	3101      	addlt	r1, #1
1001d2ba:	f7ff fe8d 	bl	1001cfd8 <_Balloc>
1001d2be:	4684      	mov	ip, r0
1001d2c0:	2800      	cmp	r0, #0
1001d2c2:	f000 808b 	beq.w	1001d3dc <__multiply+0x154>
1001d2c6:	f100 0714 	add.w	r7, r0, #20
1001d2ca:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
1001d2ce:	4577      	cmp	r7, lr
1001d2d0:	d205      	bcs.n	1001d2de <__multiply+0x56>
1001d2d2:	463b      	mov	r3, r7
1001d2d4:	2200      	movs	r2, #0
1001d2d6:	f843 2b04 	str.w	r2, [r3], #4
1001d2da:	459e      	cmp	lr, r3
1001d2dc:	d8fb      	bhi.n	1001d2d6 <__multiply+0x4e>
1001d2de:	3614      	adds	r6, #20
1001d2e0:	eb06 0888 	add.w	r8, r6, r8, lsl #2
1001d2e4:	f10a 0914 	add.w	r9, sl, #20
1001d2e8:	4546      	cmp	r6, r8
1001d2ea:	eb09 0585 	add.w	r5, r9, r5, lsl #2
1001d2ee:	d266      	bcs.n	1001d3be <__multiply+0x136>
1001d2f0:	eba5 030a 	sub.w	r3, r5, sl
1001d2f4:	3b15      	subs	r3, #21
1001d2f6:	f023 0303 	bic.w	r3, r3, #3
1001d2fa:	f10a 0a15 	add.w	sl, sl, #21
1001d2fe:	3304      	adds	r3, #4
1001d300:	4555      	cmp	r5, sl
1001d302:	bf2c      	ite	cs
1001d304:	469b      	movcs	fp, r3
1001d306:	f04f 0b04 	movcc.w	fp, #4
1001d30a:	f8cd e008 	str.w	lr, [sp, #8]
1001d30e:	9403      	str	r4, [sp, #12]
1001d310:	46ae      	mov	lr, r5
1001d312:	46e2      	mov	sl, ip
1001d314:	e005      	b.n	1001d322 <__multiply+0x9a>
1001d316:	0c09      	lsrs	r1, r1, #16
1001d318:	d12a      	bne.n	1001d370 <__multiply+0xe8>
1001d31a:	45b0      	cmp	r8, r6
1001d31c:	f107 0704 	add.w	r7, r7, #4
1001d320:	d94a      	bls.n	1001d3b8 <__multiply+0x130>
1001d322:	f856 1b04 	ldr.w	r1, [r6], #4
1001d326:	b28d      	uxth	r5, r1
1001d328:	2d00      	cmp	r5, #0
1001d32a:	d0f4      	beq.n	1001d316 <__multiply+0x8e>
1001d32c:	46cc      	mov	ip, r9
1001d32e:	463c      	mov	r4, r7
1001d330:	2300      	movs	r3, #0
1001d332:	9601      	str	r6, [sp, #4]
1001d334:	f85c 0b04 	ldr.w	r0, [ip], #4
1001d338:	6821      	ldr	r1, [r4, #0]
1001d33a:	b286      	uxth	r6, r0
1001d33c:	b28a      	uxth	r2, r1
1001d33e:	0c00      	lsrs	r0, r0, #16
1001d340:	fb05 2206 	mla	r2, r5, r6, r2
1001d344:	0c09      	lsrs	r1, r1, #16
1001d346:	441a      	add	r2, r3
1001d348:	fb05 1100 	mla	r1, r5, r0, r1
1001d34c:	eb01 4112 	add.w	r1, r1, r2, lsr #16
1001d350:	b292      	uxth	r2, r2
1001d352:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
1001d356:	45e6      	cmp	lr, ip
1001d358:	f844 2b04 	str.w	r2, [r4], #4
1001d35c:	ea4f 4311 	mov.w	r3, r1, lsr #16
1001d360:	d8e8      	bhi.n	1001d334 <__multiply+0xac>
1001d362:	9e01      	ldr	r6, [sp, #4]
1001d364:	f847 300b 	str.w	r3, [r7, fp]
1001d368:	f856 1c04 	ldr.w	r1, [r6, #-4]
1001d36c:	0c09      	lsrs	r1, r1, #16
1001d36e:	d0d4      	beq.n	1001d31a <__multiply+0x92>
1001d370:	683b      	ldr	r3, [r7, #0]
1001d372:	2200      	movs	r2, #0
1001d374:	4648      	mov	r0, r9
1001d376:	461d      	mov	r5, r3
1001d378:	463c      	mov	r4, r7
1001d37a:	4694      	mov	ip, r2
1001d37c:	8802      	ldrh	r2, [r0, #0]
1001d37e:	fb01 c202 	mla	r2, r1, r2, ip
1001d382:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1001d386:	b29b      	uxth	r3, r3
1001d388:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
1001d38c:	f844 3b04 	str.w	r3, [r4], #4
1001d390:	f850 3b04 	ldr.w	r3, [r0], #4
1001d394:	6825      	ldr	r5, [r4, #0]
1001d396:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001d39a:	b2ab      	uxth	r3, r5
1001d39c:	fb01 330c 	mla	r3, r1, ip, r3
1001d3a0:	eb03 4312 	add.w	r3, r3, r2, lsr #16
1001d3a4:	4586      	cmp	lr, r0
1001d3a6:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001d3aa:	d8e7      	bhi.n	1001d37c <__multiply+0xf4>
1001d3ac:	45b0      	cmp	r8, r6
1001d3ae:	f847 300b 	str.w	r3, [r7, fp]
1001d3b2:	f107 0704 	add.w	r7, r7, #4
1001d3b6:	d8b4      	bhi.n	1001d322 <__multiply+0x9a>
1001d3b8:	e9dd e402 	ldrd	lr, r4, [sp, #8]
1001d3bc:	46d4      	mov	ip, sl
1001d3be:	2c00      	cmp	r4, #0
1001d3c0:	dc02      	bgt.n	1001d3c8 <__multiply+0x140>
1001d3c2:	e005      	b.n	1001d3d0 <__multiply+0x148>
1001d3c4:	3c01      	subs	r4, #1
1001d3c6:	d003      	beq.n	1001d3d0 <__multiply+0x148>
1001d3c8:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
1001d3cc:	2b00      	cmp	r3, #0
1001d3ce:	d0f9      	beq.n	1001d3c4 <__multiply+0x13c>
1001d3d0:	4660      	mov	r0, ip
1001d3d2:	f8cc 4010 	str.w	r4, [ip, #16]
1001d3d6:	b005      	add	sp, #20
1001d3d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d3dc:	4b03      	ldr	r3, [pc, #12]	@ (1001d3ec <__multiply+0x164>)
1001d3de:	4804      	ldr	r0, [pc, #16]	@ (1001d3f0 <__multiply+0x168>)
1001d3e0:	4662      	mov	r2, ip
1001d3e2:	f44f 71b1 	mov.w	r1, #354	@ 0x162
1001d3e6:	f002 f8d7 	bl	1001f598 <__assert_func>
1001d3ea:	bf00      	nop
1001d3ec:	10023a2c 	.word	0x10023a2c
1001d3f0:	10023af0 	.word	0x10023af0

1001d3f4 <__pow5mult>:
1001d3f4:	f012 0303 	ands.w	r3, r2, #3
1001d3f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001d3fc:	4614      	mov	r4, r2
1001d3fe:	4607      	mov	r7, r0
1001d400:	d12c      	bne.n	1001d45c <__pow5mult+0x68>
1001d402:	460d      	mov	r5, r1
1001d404:	10a4      	asrs	r4, r4, #2
1001d406:	d01c      	beq.n	1001d442 <__pow5mult+0x4e>
1001d408:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
1001d40a:	b386      	cbz	r6, 1001d46e <__pow5mult+0x7a>
1001d40c:	07e3      	lsls	r3, r4, #31
1001d40e:	f04f 0800 	mov.w	r8, #0
1001d412:	d406      	bmi.n	1001d422 <__pow5mult+0x2e>
1001d414:	1064      	asrs	r4, r4, #1
1001d416:	d014      	beq.n	1001d442 <__pow5mult+0x4e>
1001d418:	6830      	ldr	r0, [r6, #0]
1001d41a:	b1a8      	cbz	r0, 1001d448 <__pow5mult+0x54>
1001d41c:	4606      	mov	r6, r0
1001d41e:	07e3      	lsls	r3, r4, #31
1001d420:	d5f8      	bpl.n	1001d414 <__pow5mult+0x20>
1001d422:	4632      	mov	r2, r6
1001d424:	4629      	mov	r1, r5
1001d426:	4638      	mov	r0, r7
1001d428:	f7ff ff2e 	bl	1001d288 <__multiply>
1001d42c:	b135      	cbz	r5, 1001d43c <__pow5mult+0x48>
1001d42e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001d430:	6869      	ldr	r1, [r5, #4]
1001d432:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001d436:	602a      	str	r2, [r5, #0]
1001d438:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
1001d43c:	1064      	asrs	r4, r4, #1
1001d43e:	4605      	mov	r5, r0
1001d440:	d1ea      	bne.n	1001d418 <__pow5mult+0x24>
1001d442:	4628      	mov	r0, r5
1001d444:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d448:	4632      	mov	r2, r6
1001d44a:	4631      	mov	r1, r6
1001d44c:	4638      	mov	r0, r7
1001d44e:	f7ff ff1b 	bl	1001d288 <__multiply>
1001d452:	6030      	str	r0, [r6, #0]
1001d454:	f8c0 8000 	str.w	r8, [r0]
1001d458:	4606      	mov	r6, r0
1001d45a:	e7e0      	b.n	1001d41e <__pow5mult+0x2a>
1001d45c:	3b01      	subs	r3, #1
1001d45e:	4a0f      	ldr	r2, [pc, #60]	@ (1001d49c <__pow5mult+0xa8>)
1001d460:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001d464:	2300      	movs	r3, #0
1001d466:	f7ff fde7 	bl	1001d038 <__multadd>
1001d46a:	4605      	mov	r5, r0
1001d46c:	e7ca      	b.n	1001d404 <__pow5mult+0x10>
1001d46e:	2101      	movs	r1, #1
1001d470:	4638      	mov	r0, r7
1001d472:	f7ff fdb1 	bl	1001cfd8 <_Balloc>
1001d476:	4606      	mov	r6, r0
1001d478:	b140      	cbz	r0, 1001d48c <__pow5mult+0x98>
1001d47a:	2301      	movs	r3, #1
1001d47c:	f240 2271 	movw	r2, #625	@ 0x271
1001d480:	e9c0 3204 	strd	r3, r2, [r0, #16]
1001d484:	2300      	movs	r3, #0
1001d486:	6438      	str	r0, [r7, #64]	@ 0x40
1001d488:	6003      	str	r3, [r0, #0]
1001d48a:	e7bf      	b.n	1001d40c <__pow5mult+0x18>
1001d48c:	4b04      	ldr	r3, [pc, #16]	@ (1001d4a0 <__pow5mult+0xac>)
1001d48e:	4805      	ldr	r0, [pc, #20]	@ (1001d4a4 <__pow5mult+0xb0>)
1001d490:	4632      	mov	r2, r6
1001d492:	f240 1145 	movw	r1, #325	@ 0x145
1001d496:	f002 f87f 	bl	1001f598 <__assert_func>
1001d49a:	bf00      	nop
1001d49c:	10023b54 	.word	0x10023b54
1001d4a0:	10023a2c 	.word	0x10023a2c
1001d4a4:	10023af0 	.word	0x10023af0

1001d4a8 <__lshift>:
1001d4a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001d4ac:	460c      	mov	r4, r1
1001d4ae:	4690      	mov	r8, r2
1001d4b0:	6927      	ldr	r7, [r4, #16]
1001d4b2:	68a3      	ldr	r3, [r4, #8]
1001d4b4:	6849      	ldr	r1, [r1, #4]
1001d4b6:	eb07 1762 	add.w	r7, r7, r2, asr #5
1001d4ba:	1c7d      	adds	r5, r7, #1
1001d4bc:	429d      	cmp	r5, r3
1001d4be:	4606      	mov	r6, r0
1001d4c0:	ea4f 1962 	mov.w	r9, r2, asr #5
1001d4c4:	dd04      	ble.n	1001d4d0 <__lshift+0x28>
1001d4c6:	005b      	lsls	r3, r3, #1
1001d4c8:	429d      	cmp	r5, r3
1001d4ca:	f101 0101 	add.w	r1, r1, #1
1001d4ce:	dcfa      	bgt.n	1001d4c6 <__lshift+0x1e>
1001d4d0:	4630      	mov	r0, r6
1001d4d2:	f7ff fd81 	bl	1001cfd8 <_Balloc>
1001d4d6:	4684      	mov	ip, r0
1001d4d8:	2800      	cmp	r0, #0
1001d4da:	d051      	beq.n	1001d580 <__lshift+0xd8>
1001d4dc:	f1b9 0f00 	cmp.w	r9, #0
1001d4e0:	f100 0014 	add.w	r0, r0, #20
1001d4e4:	dd0e      	ble.n	1001d504 <__lshift+0x5c>
1001d4e6:	f109 0205 	add.w	r2, r9, #5
1001d4ea:	ea4f 0e82 	mov.w	lr, r2, lsl #2
1001d4ee:	4603      	mov	r3, r0
1001d4f0:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
1001d4f4:	2100      	movs	r1, #0
1001d4f6:	f843 1b04 	str.w	r1, [r3], #4
1001d4fa:	4293      	cmp	r3, r2
1001d4fc:	d1fb      	bne.n	1001d4f6 <__lshift+0x4e>
1001d4fe:	f1ae 0314 	sub.w	r3, lr, #20
1001d502:	4418      	add	r0, r3
1001d504:	6921      	ldr	r1, [r4, #16]
1001d506:	f104 0314 	add.w	r3, r4, #20
1001d50a:	f018 081f 	ands.w	r8, r8, #31
1001d50e:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001d512:	d02d      	beq.n	1001d570 <__lshift+0xc8>
1001d514:	f1c8 0920 	rsb	r9, r8, #32
1001d518:	4686      	mov	lr, r0
1001d51a:	f04f 0a00 	mov.w	sl, #0
1001d51e:	681a      	ldr	r2, [r3, #0]
1001d520:	fa02 f208 	lsl.w	r2, r2, r8
1001d524:	ea42 020a 	orr.w	r2, r2, sl
1001d528:	f84e 2b04 	str.w	r2, [lr], #4
1001d52c:	f853 2b04 	ldr.w	r2, [r3], #4
1001d530:	4299      	cmp	r1, r3
1001d532:	fa22 fa09 	lsr.w	sl, r2, r9
1001d536:	d8f2      	bhi.n	1001d51e <__lshift+0x76>
1001d538:	1b0b      	subs	r3, r1, r4
1001d53a:	3b15      	subs	r3, #21
1001d53c:	f023 0303 	bic.w	r3, r3, #3
1001d540:	3304      	adds	r3, #4
1001d542:	f104 0215 	add.w	r2, r4, #21
1001d546:	4291      	cmp	r1, r2
1001d548:	bf38      	it	cc
1001d54a:	2304      	movcc	r3, #4
1001d54c:	f840 a003 	str.w	sl, [r0, r3]
1001d550:	f1ba 0f00 	cmp.w	sl, #0
1001d554:	d100      	bne.n	1001d558 <__lshift+0xb0>
1001d556:	463d      	mov	r5, r7
1001d558:	6c73      	ldr	r3, [r6, #68]	@ 0x44
1001d55a:	6862      	ldr	r2, [r4, #4]
1001d55c:	f8cc 5010 	str.w	r5, [ip, #16]
1001d560:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1001d564:	6021      	str	r1, [r4, #0]
1001d566:	4660      	mov	r0, ip
1001d568:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
1001d56c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001d570:	3804      	subs	r0, #4
1001d572:	f853 2b04 	ldr.w	r2, [r3], #4
1001d576:	f840 2f04 	str.w	r2, [r0, #4]!
1001d57a:	4299      	cmp	r1, r3
1001d57c:	d8f9      	bhi.n	1001d572 <__lshift+0xca>
1001d57e:	e7ea      	b.n	1001d556 <__lshift+0xae>
1001d580:	4b03      	ldr	r3, [pc, #12]	@ (1001d590 <__lshift+0xe8>)
1001d582:	4804      	ldr	r0, [pc, #16]	@ (1001d594 <__lshift+0xec>)
1001d584:	4662      	mov	r2, ip
1001d586:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
1001d58a:	f002 f805 	bl	1001f598 <__assert_func>
1001d58e:	bf00      	nop
1001d590:	10023a2c 	.word	0x10023a2c
1001d594:	10023af0 	.word	0x10023af0

1001d598 <__mcmp>:
1001d598:	690b      	ldr	r3, [r1, #16]
1001d59a:	4684      	mov	ip, r0
1001d59c:	6900      	ldr	r0, [r0, #16]
1001d59e:	1ac0      	subs	r0, r0, r3
1001d5a0:	d115      	bne.n	1001d5ce <__mcmp+0x36>
1001d5a2:	f10c 0c14 	add.w	ip, ip, #20
1001d5a6:	3114      	adds	r1, #20
1001d5a8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
1001d5ac:	b410      	push	{r4}
1001d5ae:	eb01 0383 	add.w	r3, r1, r3, lsl #2
1001d5b2:	e001      	b.n	1001d5b8 <__mcmp+0x20>
1001d5b4:	4594      	cmp	ip, r2
1001d5b6:	d208      	bcs.n	1001d5ca <__mcmp+0x32>
1001d5b8:	f852 4d04 	ldr.w	r4, [r2, #-4]!
1001d5bc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
1001d5c0:	428c      	cmp	r4, r1
1001d5c2:	d0f7      	beq.n	1001d5b4 <__mcmp+0x1c>
1001d5c4:	d204      	bcs.n	1001d5d0 <__mcmp+0x38>
1001d5c6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001d5ca:	bc10      	pop	{r4}
1001d5cc:	4770      	bx	lr
1001d5ce:	4770      	bx	lr
1001d5d0:	2001      	movs	r0, #1
1001d5d2:	bc10      	pop	{r4}
1001d5d4:	4770      	bx	lr
1001d5d6:	bf00      	nop

1001d5d8 <__mdiff>:
1001d5d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001d5dc:	6913      	ldr	r3, [r2, #16]
1001d5de:	690f      	ldr	r7, [r1, #16]
1001d5e0:	1aff      	subs	r7, r7, r3
1001d5e2:	2f00      	cmp	r7, #0
1001d5e4:	b083      	sub	sp, #12
1001d5e6:	460d      	mov	r5, r1
1001d5e8:	4690      	mov	r8, r2
1001d5ea:	d115      	bne.n	1001d618 <__mdiff+0x40>
1001d5ec:	f101 0614 	add.w	r6, r1, #20
1001d5f0:	3214      	adds	r2, #20
1001d5f2:	eb02 0283 	add.w	r2, r2, r3, lsl #2
1001d5f6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
1001d5fa:	e001      	b.n	1001d600 <__mdiff+0x28>
1001d5fc:	429e      	cmp	r6, r3
1001d5fe:	d276      	bcs.n	1001d6ee <__mdiff+0x116>
1001d600:	f853 4d04 	ldr.w	r4, [r3, #-4]!
1001d604:	f852 1d04 	ldr.w	r1, [r2, #-4]!
1001d608:	428c      	cmp	r4, r1
1001d60a:	d0f7      	beq.n	1001d5fc <__mdiff+0x24>
1001d60c:	d206      	bcs.n	1001d61c <__mdiff+0x44>
1001d60e:	462b      	mov	r3, r5
1001d610:	2701      	movs	r7, #1
1001d612:	4645      	mov	r5, r8
1001d614:	4698      	mov	r8, r3
1001d616:	e001      	b.n	1001d61c <__mdiff+0x44>
1001d618:	dbf9      	blt.n	1001d60e <__mdiff+0x36>
1001d61a:	2700      	movs	r7, #0
1001d61c:	6869      	ldr	r1, [r5, #4]
1001d61e:	f7ff fcdb 	bl	1001cfd8 <_Balloc>
1001d622:	4681      	mov	r9, r0
1001d624:	2800      	cmp	r0, #0
1001d626:	d076      	beq.n	1001d716 <__mdiff+0x13e>
1001d628:	692e      	ldr	r6, [r5, #16]
1001d62a:	60c7      	str	r7, [r0, #12]
1001d62c:	f8d8 0010 	ldr.w	r0, [r8, #16]
1001d630:	f105 0b14 	add.w	fp, r5, #20
1001d634:	f108 0e14 	add.w	lr, r8, #20
1001d638:	f109 0a14 	add.w	sl, r9, #20
1001d63c:	f105 0110 	add.w	r1, r5, #16
1001d640:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
1001d644:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
1001d648:	4657      	mov	r7, sl
1001d64a:	f04f 0c00 	mov.w	ip, #0
1001d64e:	f8cd b004 	str.w	fp, [sp, #4]
1001d652:	f85e 4b04 	ldr.w	r4, [lr], #4
1001d656:	f851 5f04 	ldr.w	r5, [r1, #4]!
1001d65a:	fa1f fb84 	uxth.w	fp, r4
1001d65e:	b2ab      	uxth	r3, r5
1001d660:	eba3 030b 	sub.w	r3, r3, fp
1001d664:	0c24      	lsrs	r4, r4, #16
1001d666:	4463      	add	r3, ip
1001d668:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
1001d66c:	eb04 4423 	add.w	r4, r4, r3, asr #16
1001d670:	b29b      	uxth	r3, r3
1001d672:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001d676:	4570      	cmp	r0, lr
1001d678:	f847 3b04 	str.w	r3, [r7], #4
1001d67c:	ea4f 4c24 	mov.w	ip, r4, asr #16
1001d680:	d8e7      	bhi.n	1001d652 <__mdiff+0x7a>
1001d682:	eba0 0108 	sub.w	r1, r0, r8
1001d686:	3915      	subs	r1, #21
1001d688:	0889      	lsrs	r1, r1, #2
1001d68a:	1c4c      	adds	r4, r1, #1
1001d68c:	f8dd b004 	ldr.w	fp, [sp, #4]
1001d690:	f108 0815 	add.w	r8, r8, #21
1001d694:	00a4      	lsls	r4, r4, #2
1001d696:	4540      	cmp	r0, r8
1001d698:	bf38      	it	cc
1001d69a:	2404      	movcc	r4, #4
1001d69c:	eb0b 0504 	add.w	r5, fp, r4
1001d6a0:	42aa      	cmp	r2, r5
1001d6a2:	4454      	add	r4, sl
1001d6a4:	d930      	bls.n	1001d708 <__mdiff+0x130>
1001d6a6:	4627      	mov	r7, r4
1001d6a8:	4628      	mov	r0, r5
1001d6aa:	f850 3b04 	ldr.w	r3, [r0], #4
1001d6ae:	fa1c fe83 	uxtah	lr, ip, r3
1001d6b2:	0c19      	lsrs	r1, r3, #16
1001d6b4:	4463      	add	r3, ip
1001d6b6:	eb01 412e 	add.w	r1, r1, lr, asr #16
1001d6ba:	b29b      	uxth	r3, r3
1001d6bc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001d6c0:	4282      	cmp	r2, r0
1001d6c2:	f847 3b04 	str.w	r3, [r7], #4
1001d6c6:	ea4f 4c21 	mov.w	ip, r1, asr #16
1001d6ca:	d8ee      	bhi.n	1001d6aa <__mdiff+0xd2>
1001d6cc:	3a01      	subs	r2, #1
1001d6ce:	1b52      	subs	r2, r2, r5
1001d6d0:	f022 0203 	bic.w	r2, r2, #3
1001d6d4:	4414      	add	r4, r2
1001d6d6:	b923      	cbnz	r3, 1001d6e2 <__mdiff+0x10a>
1001d6d8:	f854 3d04 	ldr.w	r3, [r4, #-4]!
1001d6dc:	3e01      	subs	r6, #1
1001d6de:	2b00      	cmp	r3, #0
1001d6e0:	d0fa      	beq.n	1001d6d8 <__mdiff+0x100>
1001d6e2:	4648      	mov	r0, r9
1001d6e4:	f8c9 6010 	str.w	r6, [r9, #16]
1001d6e8:	b003      	add	sp, #12
1001d6ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d6ee:	2100      	movs	r1, #0
1001d6f0:	f7ff fc72 	bl	1001cfd8 <_Balloc>
1001d6f4:	4681      	mov	r9, r0
1001d6f6:	b1a8      	cbz	r0, 1001d724 <__mdiff+0x14c>
1001d6f8:	2201      	movs	r2, #1
1001d6fa:	2300      	movs	r3, #0
1001d6fc:	e9c0 2304 	strd	r2, r3, [r0, #16]
1001d700:	4648      	mov	r0, r9
1001d702:	b003      	add	sp, #12
1001d704:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001d708:	0089      	lsls	r1, r1, #2
1001d70a:	4540      	cmp	r0, r8
1001d70c:	bf38      	it	cc
1001d70e:	2100      	movcc	r1, #0
1001d710:	eb0a 0401 	add.w	r4, sl, r1
1001d714:	e7df      	b.n	1001d6d6 <__mdiff+0xfe>
1001d716:	4b07      	ldr	r3, [pc, #28]	@ (1001d734 <__mdiff+0x15c>)
1001d718:	4807      	ldr	r0, [pc, #28]	@ (1001d738 <__mdiff+0x160>)
1001d71a:	464a      	mov	r2, r9
1001d71c:	f240 2145 	movw	r1, #581	@ 0x245
1001d720:	f001 ff3a 	bl	1001f598 <__assert_func>
1001d724:	4b03      	ldr	r3, [pc, #12]	@ (1001d734 <__mdiff+0x15c>)
1001d726:	4804      	ldr	r0, [pc, #16]	@ (1001d738 <__mdiff+0x160>)
1001d728:	464a      	mov	r2, r9
1001d72a:	f240 2137 	movw	r1, #567	@ 0x237
1001d72e:	f001 ff33 	bl	1001f598 <__assert_func>
1001d732:	bf00      	nop
1001d734:	10023a2c 	.word	0x10023a2c
1001d738:	10023af0 	.word	0x10023af0

1001d73c <__ulp>:
1001d73c:	4b11      	ldr	r3, [pc, #68]	@ (1001d784 <__ulp+0x48>)
1001d73e:	400b      	ands	r3, r1
1001d740:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
1001d744:	2b00      	cmp	r3, #0
1001d746:	dd03      	ble.n	1001d750 <__ulp+0x14>
1001d748:	2200      	movs	r2, #0
1001d74a:	4619      	mov	r1, r3
1001d74c:	4610      	mov	r0, r2
1001d74e:	4770      	bx	lr
1001d750:	425b      	negs	r3, r3
1001d752:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
1001d756:	ea4f 5223 	mov.w	r2, r3, asr #20
1001d75a:	da06      	bge.n	1001d76a <__ulp+0x2e>
1001d75c:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
1001d760:	4113      	asrs	r3, r2
1001d762:	2200      	movs	r2, #0
1001d764:	4619      	mov	r1, r3
1001d766:	4610      	mov	r0, r2
1001d768:	4770      	bx	lr
1001d76a:	f1a2 0314 	sub.w	r3, r2, #20
1001d76e:	2b1e      	cmp	r3, #30
1001d770:	bfda      	itte	le
1001d772:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
1001d776:	40da      	lsrle	r2, r3
1001d778:	2201      	movgt	r2, #1
1001d77a:	2300      	movs	r3, #0
1001d77c:	4619      	mov	r1, r3
1001d77e:	4610      	mov	r0, r2
1001d780:	4770      	bx	lr
1001d782:	bf00      	nop
1001d784:	7ff00000 	.word	0x7ff00000

1001d788 <__b2d>:
1001d788:	6902      	ldr	r2, [r0, #16]
1001d78a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001d78e:	f100 0714 	add.w	r7, r0, #20
1001d792:	eb07 0282 	add.w	r2, r7, r2, lsl #2
1001d796:	f1a2 0804 	sub.w	r8, r2, #4
1001d79a:	f852 6c04 	ldr.w	r6, [r2, #-4]
1001d79e:	4630      	mov	r0, r6
1001d7a0:	f7ff fcf2 	bl	1001d188 <__hi0bits>
1001d7a4:	f1c0 0320 	rsb	r3, r0, #32
1001d7a8:	280a      	cmp	r0, #10
1001d7aa:	600b      	str	r3, [r1, #0]
1001d7ac:	dd33      	ble.n	1001d816 <__b2d+0x8e>
1001d7ae:	4547      	cmp	r7, r8
1001d7b0:	f1a0 010b 	sub.w	r1, r0, #11
1001d7b4:	d219      	bcs.n	1001d7ea <__b2d+0x62>
1001d7b6:	f852 3c08 	ldr.w	r3, [r2, #-8]
1001d7ba:	b321      	cbz	r1, 1001d806 <__b2d+0x7e>
1001d7bc:	f1c1 0020 	rsb	r0, r1, #32
1001d7c0:	408e      	lsls	r6, r1
1001d7c2:	fa23 f400 	lsr.w	r4, r3, r0
1001d7c6:	4326      	orrs	r6, r4
1001d7c8:	408b      	lsls	r3, r1
1001d7ca:	f1a2 0108 	sub.w	r1, r2, #8
1001d7ce:	f046 557f 	orr.w	r5, r6, #1069547520	@ 0x3fc00000
1001d7d2:	428f      	cmp	r7, r1
1001d7d4:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001d7d8:	d219      	bcs.n	1001d80e <__b2d+0x86>
1001d7da:	f852 2c0c 	ldr.w	r2, [r2, #-12]
1001d7de:	40c2      	lsrs	r2, r0
1001d7e0:	4313      	orrs	r3, r2
1001d7e2:	4618      	mov	r0, r3
1001d7e4:	4629      	mov	r1, r5
1001d7e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d7ea:	280b      	cmp	r0, #11
1001d7ec:	d00a      	beq.n	1001d804 <__b2d+0x7c>
1001d7ee:	fa06 f101 	lsl.w	r1, r6, r1
1001d7f2:	f041 557f 	orr.w	r5, r1, #1069547520	@ 0x3fc00000
1001d7f6:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001d7fa:	2300      	movs	r3, #0
1001d7fc:	4618      	mov	r0, r3
1001d7fe:	4629      	mov	r1, r5
1001d800:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d804:	2300      	movs	r3, #0
1001d806:	f046 557f 	orr.w	r5, r6, #1069547520	@ 0x3fc00000
1001d80a:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001d80e:	4618      	mov	r0, r3
1001d810:	4629      	mov	r1, r5
1001d812:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001d816:	4547      	cmp	r7, r8
1001d818:	bf38      	it	cc
1001d81a:	f852 2c08 	ldrcc.w	r2, [r2, #-8]
1001d81e:	f1c0 030b 	rsb	r3, r0, #11
1001d822:	fa26 f103 	lsr.w	r1, r6, r3
1001d826:	bf38      	it	cc
1001d828:	40da      	lsrcc	r2, r3
1001d82a:	f100 0315 	add.w	r3, r0, #21
1001d82e:	f041 557f 	orr.w	r5, r1, #1069547520	@ 0x3fc00000
1001d832:	bf28      	it	cs
1001d834:	2200      	movcs	r2, #0
1001d836:	fa06 f303 	lsl.w	r3, r6, r3
1001d83a:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
1001d83e:	4313      	orrs	r3, r2
1001d840:	4618      	mov	r0, r3
1001d842:	4629      	mov	r1, r5
1001d844:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

1001d848 <__d2b>:
1001d848:	b5f0      	push	{r4, r5, r6, r7, lr}
1001d84a:	2101      	movs	r1, #1
1001d84c:	b083      	sub	sp, #12
1001d84e:	4616      	mov	r6, r2
1001d850:	461f      	mov	r7, r3
1001d852:	f7ff fbc1 	bl	1001cfd8 <_Balloc>
1001d856:	4605      	mov	r5, r0
1001d858:	2800      	cmp	r0, #0
1001d85a:	d047      	beq.n	1001d8ec <__d2b+0xa4>
1001d85c:	f3c7 540a 	ubfx	r4, r7, #20, #11
1001d860:	f3c7 0313 	ubfx	r3, r7, #0, #20
1001d864:	b10c      	cbz	r4, 1001d86a <__d2b+0x22>
1001d866:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001d86a:	2e00      	cmp	r6, #0
1001d86c:	9301      	str	r3, [sp, #4]
1001d86e:	d114      	bne.n	1001d89a <__d2b+0x52>
1001d870:	a801      	add	r0, sp, #4
1001d872:	f7ff fcab 	bl	1001d1cc <__lo0bits>
1001d876:	9b01      	ldr	r3, [sp, #4]
1001d878:	616b      	str	r3, [r5, #20]
1001d87a:	2201      	movs	r2, #1
1001d87c:	3020      	adds	r0, #32
1001d87e:	612a      	str	r2, [r5, #16]
1001d880:	b314      	cbz	r4, 1001d8c8 <__d2b+0x80>
1001d882:	9b08      	ldr	r3, [sp, #32]
1001d884:	f2a4 4433 	subw	r4, r4, #1075	@ 0x433
1001d888:	4404      	add	r4, r0
1001d88a:	601c      	str	r4, [r3, #0]
1001d88c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001d88e:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
1001d892:	6018      	str	r0, [r3, #0]
1001d894:	4628      	mov	r0, r5
1001d896:	b003      	add	sp, #12
1001d898:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001d89a:	4668      	mov	r0, sp
1001d89c:	9600      	str	r6, [sp, #0]
1001d89e:	f7ff fc95 	bl	1001d1cc <__lo0bits>
1001d8a2:	9b01      	ldr	r3, [sp, #4]
1001d8a4:	b300      	cbz	r0, 1001d8e8 <__d2b+0xa0>
1001d8a6:	9900      	ldr	r1, [sp, #0]
1001d8a8:	f1c0 0220 	rsb	r2, r0, #32
1001d8ac:	fa03 f202 	lsl.w	r2, r3, r2
1001d8b0:	40c3      	lsrs	r3, r0
1001d8b2:	9301      	str	r3, [sp, #4]
1001d8b4:	430a      	orrs	r2, r1
1001d8b6:	2b00      	cmp	r3, #0
1001d8b8:	e9c5 2305 	strd	r2, r3, [r5, #20]
1001d8bc:	bf0c      	ite	eq
1001d8be:	2201      	moveq	r2, #1
1001d8c0:	2202      	movne	r2, #2
1001d8c2:	612a      	str	r2, [r5, #16]
1001d8c4:	2c00      	cmp	r4, #0
1001d8c6:	d1dc      	bne.n	1001d882 <__d2b+0x3a>
1001d8c8:	eb05 0182 	add.w	r1, r5, r2, lsl #2
1001d8cc:	f2a0 4332 	subw	r3, r0, #1074	@ 0x432
1001d8d0:	6908      	ldr	r0, [r1, #16]
1001d8d2:	9908      	ldr	r1, [sp, #32]
1001d8d4:	600b      	str	r3, [r1, #0]
1001d8d6:	f7ff fc57 	bl	1001d188 <__hi0bits>
1001d8da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001d8dc:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
1001d8e0:	6018      	str	r0, [r3, #0]
1001d8e2:	4628      	mov	r0, r5
1001d8e4:	b003      	add	sp, #12
1001d8e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001d8e8:	9a00      	ldr	r2, [sp, #0]
1001d8ea:	e7e4      	b.n	1001d8b6 <__d2b+0x6e>
1001d8ec:	4b03      	ldr	r3, [pc, #12]	@ (1001d8fc <__d2b+0xb4>)
1001d8ee:	4804      	ldr	r0, [pc, #16]	@ (1001d900 <__d2b+0xb8>)
1001d8f0:	462a      	mov	r2, r5
1001d8f2:	f240 310f 	movw	r1, #783	@ 0x30f
1001d8f6:	f001 fe4f 	bl	1001f598 <__assert_func>
1001d8fa:	bf00      	nop
1001d8fc:	10023a2c 	.word	0x10023a2c
1001d900:	10023af0 	.word	0x10023af0

1001d904 <__ratio>:
1001d904:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1001d908:	b083      	sub	sp, #12
1001d90a:	460e      	mov	r6, r1
1001d90c:	4669      	mov	r1, sp
1001d90e:	4607      	mov	r7, r0
1001d910:	f7ff ff3a 	bl	1001d788 <__b2d>
1001d914:	4604      	mov	r4, r0
1001d916:	460d      	mov	r5, r1
1001d918:	4630      	mov	r0, r6
1001d91a:	a901      	add	r1, sp, #4
1001d91c:	f7ff ff34 	bl	1001d788 <__b2d>
1001d920:	6933      	ldr	r3, [r6, #16]
1001d922:	693a      	ldr	r2, [r7, #16]
1001d924:	1ad2      	subs	r2, r2, r3
1001d926:	e9dd 3600 	ldrd	r3, r6, [sp]
1001d92a:	1b9b      	subs	r3, r3, r6
1001d92c:	eb03 1342 	add.w	r3, r3, r2, lsl #5
1001d930:	2b00      	cmp	r3, #0
1001d932:	dd0b      	ble.n	1001d94c <__ratio+0x48>
1001d934:	eb05 5903 	add.w	r9, r5, r3, lsl #20
1001d938:	464d      	mov	r5, r9
1001d93a:	4602      	mov	r2, r0
1001d93c:	460b      	mov	r3, r1
1001d93e:	4620      	mov	r0, r4
1001d940:	4629      	mov	r1, r5
1001d942:	f003 f853 	bl	100209ec <__aeabi_ddiv>
1001d946:	b003      	add	sp, #12
1001d948:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1001d94c:	ebc3 3303 	rsb	r3, r3, r3, lsl #12
1001d950:	eb01 5703 	add.w	r7, r1, r3, lsl #20
1001d954:	4639      	mov	r1, r7
1001d956:	e7f0      	b.n	1001d93a <__ratio+0x36>

1001d958 <__copybits>:
1001d958:	3901      	subs	r1, #1
1001d95a:	1149      	asrs	r1, r1, #5
1001d95c:	f101 0c01 	add.w	ip, r1, #1
1001d960:	6911      	ldr	r1, [r2, #16]
1001d962:	f102 0314 	add.w	r3, r2, #20
1001d966:	eb03 0181 	add.w	r1, r3, r1, lsl #2
1001d96a:	428b      	cmp	r3, r1
1001d96c:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
1001d970:	d216      	bcs.n	1001d9a0 <__copybits+0x48>
1001d972:	b510      	push	{r4, lr}
1001d974:	f1a0 0e04 	sub.w	lr, r0, #4
1001d978:	f853 4b04 	ldr.w	r4, [r3], #4
1001d97c:	f84e 4f04 	str.w	r4, [lr, #4]!
1001d980:	4299      	cmp	r1, r3
1001d982:	d8f9      	bhi.n	1001d978 <__copybits+0x20>
1001d984:	1a8b      	subs	r3, r1, r2
1001d986:	3b15      	subs	r3, #21
1001d988:	f023 0303 	bic.w	r3, r3, #3
1001d98c:	3304      	adds	r3, #4
1001d98e:	4418      	add	r0, r3
1001d990:	4584      	cmp	ip, r0
1001d992:	d904      	bls.n	1001d99e <__copybits+0x46>
1001d994:	2300      	movs	r3, #0
1001d996:	f840 3b04 	str.w	r3, [r0], #4
1001d99a:	4584      	cmp	ip, r0
1001d99c:	d8fb      	bhi.n	1001d996 <__copybits+0x3e>
1001d99e:	bd10      	pop	{r4, pc}
1001d9a0:	4584      	cmp	ip, r0
1001d9a2:	d905      	bls.n	1001d9b0 <__copybits+0x58>
1001d9a4:	2300      	movs	r3, #0
1001d9a6:	f840 3b04 	str.w	r3, [r0], #4
1001d9aa:	4584      	cmp	ip, r0
1001d9ac:	d8fb      	bhi.n	1001d9a6 <__copybits+0x4e>
1001d9ae:	4770      	bx	lr
1001d9b0:	4770      	bx	lr
1001d9b2:	bf00      	nop

1001d9b4 <__any_on>:
1001d9b4:	6903      	ldr	r3, [r0, #16]
1001d9b6:	114a      	asrs	r2, r1, #5
1001d9b8:	4293      	cmp	r3, r2
1001d9ba:	f100 0014 	add.w	r0, r0, #20
1001d9be:	da09      	bge.n	1001d9d4 <__any_on+0x20>
1001d9c0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
1001d9c4:	e002      	b.n	1001d9cc <__any_on+0x18>
1001d9c6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
1001d9ca:	b9a2      	cbnz	r2, 1001d9f6 <__any_on+0x42>
1001d9cc:	4283      	cmp	r3, r0
1001d9ce:	d8fa      	bhi.n	1001d9c6 <__any_on+0x12>
1001d9d0:	2000      	movs	r0, #0
1001d9d2:	4770      	bx	lr
1001d9d4:	eb00 0382 	add.w	r3, r0, r2, lsl #2
1001d9d8:	ddf8      	ble.n	1001d9cc <__any_on+0x18>
1001d9da:	f011 011f 	ands.w	r1, r1, #31
1001d9de:	d0f5      	beq.n	1001d9cc <__any_on+0x18>
1001d9e0:	b410      	push	{r4}
1001d9e2:	f850 4022 	ldr.w	r4, [r0, r2, lsl #2]
1001d9e6:	fa24 f201 	lsr.w	r2, r4, r1
1001d9ea:	408a      	lsls	r2, r1
1001d9ec:	4294      	cmp	r4, r2
1001d9ee:	d008      	beq.n	1001da02 <__any_on+0x4e>
1001d9f0:	2001      	movs	r0, #1
1001d9f2:	bc10      	pop	{r4}
1001d9f4:	4770      	bx	lr
1001d9f6:	2001      	movs	r0, #1
1001d9f8:	4770      	bx	lr
1001d9fa:	f853 2d04 	ldr.w	r2, [r3, #-4]!
1001d9fe:	2a00      	cmp	r2, #0
1001da00:	d1f6      	bne.n	1001d9f0 <__any_on+0x3c>
1001da02:	4283      	cmp	r3, r0
1001da04:	d8f9      	bhi.n	1001d9fa <__any_on+0x46>
1001da06:	2000      	movs	r0, #0
1001da08:	bc10      	pop	{r4}
1001da0a:	4770      	bx	lr

1001da0c <lflush>:
1001da0c:	898b      	ldrh	r3, [r1, #12]
1001da0e:	f003 0309 	and.w	r3, r3, #9
1001da12:	2b09      	cmp	r3, #9
1001da14:	d001      	beq.n	1001da1a <lflush+0xe>
1001da16:	2000      	movs	r0, #0
1001da18:	4770      	bx	lr
1001da1a:	4b02      	ldr	r3, [pc, #8]	@ (1001da24 <lflush+0x18>)
1001da1c:	6818      	ldr	r0, [r3, #0]
1001da1e:	f7f9 bd17 	b.w	10017450 <_fflush_r>
1001da22:	bf00      	nop
1001da24:	20000598 	.word	0x20000598

1001da28 <__srefill_r>:
1001da28:	b570      	push	{r4, r5, r6, lr}
1001da2a:	460c      	mov	r4, r1
1001da2c:	4605      	mov	r5, r0
1001da2e:	b110      	cbz	r0, 1001da36 <__srefill_r+0xe>
1001da30:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001da32:	2b00      	cmp	r3, #0
1001da34:	d05f      	beq.n	1001daf6 <__srefill_r+0xce>
1001da36:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001da3a:	049a      	lsls	r2, r3, #18
1001da3c:	d406      	bmi.n	1001da4c <__srefill_r+0x24>
1001da3e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001da40:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001da44:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001da48:	81a3      	strh	r3, [r4, #12]
1001da4a:	6662      	str	r2, [r4, #100]	@ 0x64
1001da4c:	2200      	movs	r2, #0
1001da4e:	069e      	lsls	r6, r3, #26
1001da50:	6062      	str	r2, [r4, #4]
1001da52:	d45d      	bmi.n	1001db10 <__srefill_r+0xe8>
1001da54:	0758      	lsls	r0, r3, #29
1001da56:	d419      	bmi.n	1001da8c <__srefill_r+0x64>
1001da58:	06d9      	lsls	r1, r3, #27
1001da5a:	d55c      	bpl.n	1001db16 <__srefill_r+0xee>
1001da5c:	071a      	lsls	r2, r3, #28
1001da5e:	d439      	bmi.n	1001dad4 <__srefill_r+0xac>
1001da60:	f043 0304 	orr.w	r3, r3, #4
1001da64:	81a3      	strh	r3, [r4, #12]
1001da66:	6923      	ldr	r3, [r4, #16]
1001da68:	2b00      	cmp	r3, #0
1001da6a:	d03f      	beq.n	1001daec <__srefill_r+0xc4>
1001da6c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
1001da70:	07b3      	lsls	r3, r6, #30
1001da72:	d11e      	bne.n	1001dab2 <__srefill_r+0x8a>
1001da74:	6922      	ldr	r2, [r4, #16]
1001da76:	6a26      	ldr	r6, [r4, #32]
1001da78:	6963      	ldr	r3, [r4, #20]
1001da7a:	69e1      	ldr	r1, [r4, #28]
1001da7c:	6022      	str	r2, [r4, #0]
1001da7e:	4628      	mov	r0, r5
1001da80:	47b0      	blx	r6
1001da82:	2800      	cmp	r0, #0
1001da84:	6060      	str	r0, [r4, #4]
1001da86:	dd39      	ble.n	1001dafc <__srefill_r+0xd4>
1001da88:	2000      	movs	r0, #0
1001da8a:	bd70      	pop	{r4, r5, r6, pc}
1001da8c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1001da8e:	2900      	cmp	r1, #0
1001da90:	d0e9      	beq.n	1001da66 <__srefill_r+0x3e>
1001da92:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001da96:	4299      	cmp	r1, r3
1001da98:	d002      	beq.n	1001daa0 <__srefill_r+0x78>
1001da9a:	4628      	mov	r0, r5
1001da9c:	f7fb fed0 	bl	10019840 <_free_r>
1001daa0:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
1001daa2:	6063      	str	r3, [r4, #4]
1001daa4:	2200      	movs	r2, #0
1001daa6:	6322      	str	r2, [r4, #48]	@ 0x30
1001daa8:	2b00      	cmp	r3, #0
1001daaa:	d0dc      	beq.n	1001da66 <__srefill_r+0x3e>
1001daac:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
1001daae:	6023      	str	r3, [r4, #0]
1001dab0:	e7ea      	b.n	1001da88 <__srefill_r+0x60>
1001dab2:	2301      	movs	r3, #1
1001dab4:	81a3      	strh	r3, [r4, #12]
1001dab6:	4a1b      	ldr	r2, [pc, #108]	@ (1001db24 <__srefill_r+0xfc>)
1001dab8:	491b      	ldr	r1, [pc, #108]	@ (1001db28 <__srefill_r+0x100>)
1001daba:	481c      	ldr	r0, [pc, #112]	@ (1001db2c <__srefill_r+0x104>)
1001dabc:	f7fa f866 	bl	10017b8c <_fwalk_sglue>
1001dac0:	f006 0309 	and.w	r3, r6, #9
1001dac4:	2b09      	cmp	r3, #9
1001dac6:	81a6      	strh	r6, [r4, #12]
1001dac8:	d1d4      	bne.n	1001da74 <__srefill_r+0x4c>
1001daca:	4621      	mov	r1, r4
1001dacc:	4628      	mov	r0, r5
1001dace:	f7f9 fc2b 	bl	10017328 <__sflush_r>
1001dad2:	e7cf      	b.n	1001da74 <__srefill_r+0x4c>
1001dad4:	4621      	mov	r1, r4
1001dad6:	4628      	mov	r0, r5
1001dad8:	f7f9 fcba 	bl	10017450 <_fflush_r>
1001dadc:	b9c0      	cbnz	r0, 1001db10 <__srefill_r+0xe8>
1001dade:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001dae2:	60a0      	str	r0, [r4, #8]
1001dae4:	f023 0308 	bic.w	r3, r3, #8
1001dae8:	61a0      	str	r0, [r4, #24]
1001daea:	e7b9      	b.n	1001da60 <__srefill_r+0x38>
1001daec:	4621      	mov	r1, r4
1001daee:	4628      	mov	r0, r5
1001daf0:	f7fd fd86 	bl	1001b600 <__smakebuf_r>
1001daf4:	e7ba      	b.n	1001da6c <__srefill_r+0x44>
1001daf6:	f7f9 fea3 	bl	10017840 <__sinit>
1001dafa:	e79c      	b.n	1001da36 <__srefill_r+0xe>
1001dafc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001db00:	bf17      	itett	ne
1001db02:	2200      	movne	r2, #0
1001db04:	f043 0320 	orreq.w	r3, r3, #32
1001db08:	f043 0340 	orrne.w	r3, r3, #64	@ 0x40
1001db0c:	6062      	strne	r2, [r4, #4]
1001db0e:	81a3      	strh	r3, [r4, #12]
1001db10:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001db14:	bd70      	pop	{r4, r5, r6, pc}
1001db16:	2209      	movs	r2, #9
1001db18:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001db1c:	602a      	str	r2, [r5, #0]
1001db1e:	81a3      	strh	r3, [r4, #12]
1001db20:	e7f6      	b.n	1001db10 <__srefill_r+0xe8>
1001db22:	bf00      	nop
1001db24:	20000420 	.word	0x20000420
1001db28:	1001da0d 	.word	0x1001da0d
1001db2c:	200005a0 	.word	0x200005a0

1001db30 <__sccl>:
1001db30:	b570      	push	{r4, r5, r6, lr}
1001db32:	780c      	ldrb	r4, [r1, #0]
1001db34:	2c5e      	cmp	r4, #94	@ 0x5e
1001db36:	4686      	mov	lr, r0
1001db38:	d026      	beq.n	1001db88 <__sccl+0x58>
1001db3a:	2300      	movs	r3, #0
1001db3c:	1c48      	adds	r0, r1, #1
1001db3e:	469c      	mov	ip, r3
1001db40:	2200      	movs	r2, #0
1001db42:	f363 0207 	bfi	r2, r3, #0, #8
1001db46:	f363 220f 	bfi	r2, r3, #8, #8
1001db4a:	f363 4217 	bfi	r2, r3, #16, #8
1001db4e:	f363 621f 	bfi	r2, r3, #24, #8
1001db52:	f50e 7180 	add.w	r1, lr, #256	@ 0x100
1001db56:	4673      	mov	r3, lr
1001db58:	f843 2b04 	str.w	r2, [r3], #4
1001db5c:	428b      	cmp	r3, r1
1001db5e:	d1fb      	bne.n	1001db58 <__sccl+0x28>
1001db60:	b184      	cbz	r4, 1001db84 <__sccl+0x54>
1001db62:	f08c 0101 	eor.w	r1, ip, #1
1001db66:	f80e 1004 	strb.w	r1, [lr, r4]
1001db6a:	1c45      	adds	r5, r0, #1
1001db6c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
1001db70:	2b2d      	cmp	r3, #45	@ 0x2d
1001db72:	d00e      	beq.n	1001db92 <__sccl+0x62>
1001db74:	2b5d      	cmp	r3, #93	@ 0x5d
1001db76:	d003      	beq.n	1001db80 <__sccl+0x50>
1001db78:	b11b      	cbz	r3, 1001db82 <__sccl+0x52>
1001db7a:	461c      	mov	r4, r3
1001db7c:	4628      	mov	r0, r5
1001db7e:	e7f2      	b.n	1001db66 <__sccl+0x36>
1001db80:	4628      	mov	r0, r5
1001db82:	bd70      	pop	{r4, r5, r6, pc}
1001db84:	3801      	subs	r0, #1
1001db86:	bd70      	pop	{r4, r5, r6, pc}
1001db88:	2301      	movs	r3, #1
1001db8a:	784c      	ldrb	r4, [r1, #1]
1001db8c:	1c88      	adds	r0, r1, #2
1001db8e:	469c      	mov	ip, r3
1001db90:	e7d6      	b.n	1001db40 <__sccl+0x10>
1001db92:	f890 c001 	ldrb.w	ip, [r0, #1]
1001db96:	f1bc 0f5d 	cmp.w	ip, #93	@ 0x5d
1001db9a:	d0ee      	beq.n	1001db7a <__sccl+0x4a>
1001db9c:	4564      	cmp	r4, ip
1001db9e:	dcec      	bgt.n	1001db7a <__sccl+0x4a>
1001dba0:	1c66      	adds	r6, r4, #1
1001dba2:	3002      	adds	r0, #2
1001dba4:	eb0e 0206 	add.w	r2, lr, r6
1001dba8:	f802 1b01 	strb.w	r1, [r2], #1
1001dbac:	eba2 030e 	sub.w	r3, r2, lr
1001dbb0:	3b01      	subs	r3, #1
1001dbb2:	459c      	cmp	ip, r3
1001dbb4:	dcf8      	bgt.n	1001dba8 <__sccl+0x78>
1001dbb6:	ebac 0304 	sub.w	r3, ip, r4
1001dbba:	3b01      	subs	r3, #1
1001dbbc:	4564      	cmp	r4, ip
1001dbbe:	bfa8      	it	ge
1001dbc0:	2300      	movge	r3, #0
1001dbc2:	3502      	adds	r5, #2
1001dbc4:	18f4      	adds	r4, r6, r3
1001dbc6:	e7d1      	b.n	1001db6c <__sccl+0x3c>

1001dbc8 <_strtod_l>:
1001dbc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001dbcc:	b09f      	sub	sp, #124	@ 0x7c
1001dbce:	460e      	mov	r6, r1
1001dbd0:	2100      	movs	r1, #0
1001dbd2:	9207      	str	r2, [sp, #28]
1001dbd4:	911a      	str	r1, [sp, #104]	@ 0x68
1001dbd6:	2200      	movs	r2, #0
1001dbd8:	2100      	movs	r1, #0
1001dbda:	e9cd 1204 	strd	r1, r2, [sp, #16]
1001dbde:	4683      	mov	fp, r0
1001dbe0:	4631      	mov	r1, r6
1001dbe2:	9119      	str	r1, [sp, #100]	@ 0x64
1001dbe4:	4688      	mov	r8, r1
1001dbe6:	f811 2b01 	ldrb.w	r2, [r1], #1
1001dbea:	2a2d      	cmp	r2, #45	@ 0x2d
1001dbec:	d85e      	bhi.n	1001dcac <_strtod_l+0xe4>
1001dbee:	a001      	add	r0, pc, #4	@ (adr r0, 1001dbf4 <_strtod_l+0x2c>)
1001dbf0:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
1001dbf4:	1001ddc5 	.word	0x1001ddc5
1001dbf8:	1001dcad 	.word	0x1001dcad
1001dbfc:	1001dcad 	.word	0x1001dcad
1001dc00:	1001dcad 	.word	0x1001dcad
1001dc04:	1001dcad 	.word	0x1001dcad
1001dc08:	1001dcad 	.word	0x1001dcad
1001dc0c:	1001dcad 	.word	0x1001dcad
1001dc10:	1001dcad 	.word	0x1001dcad
1001dc14:	1001dcad 	.word	0x1001dcad
1001dc18:	1001dbe3 	.word	0x1001dbe3
1001dc1c:	1001dbe3 	.word	0x1001dbe3
1001dc20:	1001dbe3 	.word	0x1001dbe3
1001dc24:	1001dbe3 	.word	0x1001dbe3
1001dc28:	1001dbe3 	.word	0x1001dbe3
1001dc2c:	1001dcad 	.word	0x1001dcad
1001dc30:	1001dcad 	.word	0x1001dcad
1001dc34:	1001dcad 	.word	0x1001dcad
1001dc38:	1001dcad 	.word	0x1001dcad
1001dc3c:	1001dcad 	.word	0x1001dcad
1001dc40:	1001dcad 	.word	0x1001dcad
1001dc44:	1001dcad 	.word	0x1001dcad
1001dc48:	1001dcad 	.word	0x1001dcad
1001dc4c:	1001dcad 	.word	0x1001dcad
1001dc50:	1001dcad 	.word	0x1001dcad
1001dc54:	1001dcad 	.word	0x1001dcad
1001dc58:	1001dcad 	.word	0x1001dcad
1001dc5c:	1001dcad 	.word	0x1001dcad
1001dc60:	1001dcad 	.word	0x1001dcad
1001dc64:	1001dcad 	.word	0x1001dcad
1001dc68:	1001dcad 	.word	0x1001dcad
1001dc6c:	1001dcad 	.word	0x1001dcad
1001dc70:	1001dcad 	.word	0x1001dcad
1001dc74:	1001dbe3 	.word	0x1001dbe3
1001dc78:	1001dcad 	.word	0x1001dcad
1001dc7c:	1001dcad 	.word	0x1001dcad
1001dc80:	1001dcad 	.word	0x1001dcad
1001dc84:	1001dcad 	.word	0x1001dcad
1001dc88:	1001dcad 	.word	0x1001dcad
1001dc8c:	1001dcad 	.word	0x1001dcad
1001dc90:	1001dcad 	.word	0x1001dcad
1001dc94:	1001dcad 	.word	0x1001dcad
1001dc98:	1001dcad 	.word	0x1001dcad
1001dc9c:	1001dcad 	.word	0x1001dcad
1001dca0:	1001e3c3 	.word	0x1001e3c3
1001dca4:	1001dcad 	.word	0x1001dcad
1001dca8:	1001e3db 	.word	0x1001e3db
1001dcac:	2100      	movs	r1, #0
1001dcae:	9108      	str	r1, [sp, #32]
1001dcb0:	2a30      	cmp	r2, #48	@ 0x30
1001dcb2:	f000 8093 	beq.w	1001dddc <_strtod_l+0x214>
1001dcb6:	2300      	movs	r3, #0
1001dcb8:	9309      	str	r3, [sp, #36]	@ 0x24
1001dcba:	2a2f      	cmp	r2, #47	@ 0x2f
1001dcbc:	4617      	mov	r7, r2
1001dcbe:	f240 84ee 	bls.w	1001e69e <_strtod_l+0xad6>
1001dcc2:	f04f 0900 	mov.w	r9, #0
1001dcc6:	4640      	mov	r0, r8
1001dcc8:	464d      	mov	r5, r9
1001dcca:	464c      	mov	r4, r9
1001dccc:	e013      	b.n	1001dcf6 <_strtod_l+0x12e>
1001dcce:	3001      	adds	r0, #1
1001dcd0:	2c08      	cmp	r4, #8
1001dcd2:	9019      	str	r0, [sp, #100]	@ 0x64
1001dcd4:	bfc8      	it	gt
1001dcd6:	eb09 0989 	addgt.w	r9, r9, r9, lsl #2
1001dcda:	7807      	ldrb	r7, [r0, #0]
1001dcdc:	bfc6      	itte	gt
1001dcde:	eb02 0249 	addgt.w	r2, r2, r9, lsl #1
1001dce2:	f1a2 0930 	subgt.w	r9, r2, #48	@ 0x30
1001dce6:	f1a3 0530 	suble.w	r5, r3, #48	@ 0x30
1001dcea:	2f2f      	cmp	r7, #47	@ 0x2f
1001dcec:	f104 0401 	add.w	r4, r4, #1
1001dcf0:	463a      	mov	r2, r7
1001dcf2:	f340 80b7 	ble.w	1001de64 <_strtod_l+0x29c>
1001dcf6:	eb05 0385 	add.w	r3, r5, r5, lsl #2
1001dcfa:	2f39      	cmp	r7, #57	@ 0x39
1001dcfc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
1001dd00:	dde5      	ble.n	1001dcce <_strtod_l+0x106>
1001dd02:	4974      	ldr	r1, [pc, #464]	@ (1001ded4 <_strtod_l+0x30c>)
1001dd04:	2201      	movs	r2, #1
1001dd06:	f001 f905 	bl	1001ef14 <strncmp>
1001dd0a:	2800      	cmp	r0, #0
1001dd0c:	d17b      	bne.n	1001de06 <_strtod_l+0x23e>
1001dd0e:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001dd10:	4613      	mov	r3, r2
1001dd12:	3201      	adds	r2, #1
1001dd14:	9219      	str	r2, [sp, #100]	@ 0x64
1001dd16:	785f      	ldrb	r7, [r3, #1]
1001dd18:	2c00      	cmp	r4, #0
1001dd1a:	f040 8587 	bne.w	1001e82c <_strtod_l+0xc64>
1001dd1e:	2f30      	cmp	r7, #48	@ 0x30
1001dd20:	f040 851f 	bne.w	1001e762 <_strtod_l+0xb9a>
1001dd24:	4613      	mov	r3, r2
1001dd26:	4618      	mov	r0, r3
1001dd28:	3301      	adds	r3, #1
1001dd2a:	9319      	str	r3, [sp, #100]	@ 0x64
1001dd2c:	781f      	ldrb	r7, [r3, #0]
1001dd2e:	2f30      	cmp	r7, #48	@ 0x30
1001dd30:	d0f9      	beq.n	1001dd26 <_strtod_l+0x15e>
1001dd32:	f1c2 0201 	rsb	r2, r2, #1
1001dd36:	4410      	add	r0, r2
1001dd38:	f1a7 0331 	sub.w	r3, r7, #49	@ 0x31
1001dd3c:	2b08      	cmp	r3, #8
1001dd3e:	d834      	bhi.n	1001ddaa <_strtod_l+0x1e2>
1001dd40:	f8dd 8064 	ldr.w	r8, [sp, #100]	@ 0x64
1001dd44:	1c43      	adds	r3, r0, #1
1001dd46:	f1a7 0e30 	sub.w	lr, r7, #48	@ 0x30
1001dd4a:	930e      	str	r3, [sp, #56]	@ 0x38
1001dd4c:	2401      	movs	r4, #1
1001dd4e:	4647      	mov	r7, r8
1001dd50:	f04f 0a00 	mov.w	sl, #0
1001dd54:	eb05 0585 	add.w	r5, r5, r5, lsl #2
1001dd58:	eb0e 0545 	add.w	r5, lr, r5, lsl #1
1001dd5c:	2000      	movs	r0, #0
1001dd5e:	1c7b      	adds	r3, r7, #1
1001dd60:	9319      	str	r3, [sp, #100]	@ 0x64
1001dd62:	787f      	ldrb	r7, [r7, #1]
1001dd64:	f1a7 0230 	sub.w	r2, r7, #48	@ 0x30
1001dd68:	2a09      	cmp	r2, #9
1001dd6a:	f200 8322 	bhi.w	1001e3b2 <_strtod_l+0x7ea>
1001dd6e:	9f19      	ldr	r7, [sp, #100]	@ 0x64
1001dd70:	3001      	adds	r0, #1
1001dd72:	4696      	mov	lr, r2
1001dd74:	2a00      	cmp	r2, #0
1001dd76:	d0f2      	beq.n	1001dd5e <_strtod_l+0x196>
1001dd78:	2801      	cmp	r0, #1
1001dd7a:	f000 86e5 	beq.w	1001eb48 <_strtod_l+0xf80>
1001dd7e:	eb00 0c04 	add.w	ip, r0, r4
1001dd82:	f10c 31ff 	add.w	r1, ip, #4294967295	@ 0xffffffff
1001dd86:	e003      	b.n	1001dd90 <_strtod_l+0x1c8>
1001dd88:	005d      	lsls	r5, r3, #1
1001dd8a:	428c      	cmp	r4, r1
1001dd8c:	f000 8477 	beq.w	1001e67e <_strtod_l+0xab6>
1001dd90:	2c08      	cmp	r4, #8
1001dd92:	eb05 0385 	add.w	r3, r5, r5, lsl #2
1001dd96:	f104 0401 	add.w	r4, r4, #1
1001dd9a:	d9f5      	bls.n	1001dd88 <_strtod_l+0x1c0>
1001dd9c:	2c10      	cmp	r4, #16
1001dd9e:	bfdc      	itt	le
1001dda0:	eb09 0989 	addle.w	r9, r9, r9, lsl #2
1001dda4:	ea4f 0949 	movle.w	r9, r9, lsl #1
1001dda8:	e7ef      	b.n	1001dd8a <_strtod_l+0x1c2>
1001ddaa:	2f65      	cmp	r7, #101	@ 0x65
1001ddac:	f040 8318 	bne.w	1001e3e0 <_strtod_l+0x818>
1001ddb0:	f04f 0a00 	mov.w	sl, #0
1001ddb4:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
1001ddb8:	f04f 0c01 	mov.w	ip, #1
1001ddbc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001ddbe:	4303      	orrs	r3, r0
1001ddc0:	f040 82fd 	bne.w	1001e3be <_strtod_l+0x7f6>
1001ddc4:	9b07      	ldr	r3, [sp, #28]
1001ddc6:	f04f 0800 	mov.w	r8, #0
1001ddca:	f04f 0900 	mov.w	r9, #0
1001ddce:	b103      	cbz	r3, 1001ddd2 <_strtod_l+0x20a>
1001ddd0:	601e      	str	r6, [r3, #0]
1001ddd2:	4640      	mov	r0, r8
1001ddd4:	4649      	mov	r1, r9
1001ddd6:	b01f      	add	sp, #124	@ 0x7c
1001ddd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001dddc:	f898 2001 	ldrb.w	r2, [r8, #1]
1001dde0:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001dde4:	2a58      	cmp	r2, #88	@ 0x58
1001dde6:	bf18      	it	ne
1001dde8:	4643      	movne	r3, r8
1001ddea:	f000 83fc 	beq.w	1001e5e6 <_strtod_l+0xa1e>
1001ddee:	3301      	adds	r3, #1
1001ddf0:	9319      	str	r3, [sp, #100]	@ 0x64
1001ddf2:	781a      	ldrb	r2, [r3, #0]
1001ddf4:	2a30      	cmp	r2, #48	@ 0x30
1001ddf6:	d0fa      	beq.n	1001ddee <_strtod_l+0x226>
1001ddf8:	4698      	mov	r8, r3
1001ddfa:	2a00      	cmp	r2, #0
1001ddfc:	f000 82bb 	beq.w	1001e376 <_strtod_l+0x7ae>
1001de00:	2301      	movs	r3, #1
1001de02:	9309      	str	r3, [sp, #36]	@ 0x24
1001de04:	e759      	b.n	1001dcba <_strtod_l+0xf2>
1001de06:	2000      	movs	r0, #0
1001de08:	46a2      	mov	sl, r4
1001de0a:	900e      	str	r0, [sp, #56]	@ 0x38
1001de0c:	4684      	mov	ip, r0
1001de0e:	2f65      	cmp	r7, #101	@ 0x65
1001de10:	d035      	beq.n	1001de7e <_strtod_l+0x2b6>
1001de12:	2f45      	cmp	r7, #69	@ 0x45
1001de14:	d033      	beq.n	1001de7e <_strtod_l+0x2b6>
1001de16:	2300      	movs	r3, #0
1001de18:	930f      	str	r3, [sp, #60]	@ 0x3c
1001de1a:	2c00      	cmp	r4, #0
1001de1c:	f040 8081 	bne.w	1001df22 <_strtod_l+0x35a>
1001de20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001de22:	4303      	orrs	r3, r0
1001de24:	f040 82a7 	bne.w	1001e376 <_strtod_l+0x7ae>
1001de28:	f1bc 0f00 	cmp.w	ip, #0
1001de2c:	d1ca      	bne.n	1001ddc4 <_strtod_l+0x1fc>
1001de2e:	2f69      	cmp	r7, #105	@ 0x69
1001de30:	f000 847e 	beq.w	1001e730 <_strtod_l+0xb68>
1001de34:	f300 83a3 	bgt.w	1001e57e <_strtod_l+0x9b6>
1001de38:	2f49      	cmp	r7, #73	@ 0x49
1001de3a:	f000 8479 	beq.w	1001e730 <_strtod_l+0xb68>
1001de3e:	2f4e      	cmp	r7, #78	@ 0x4e
1001de40:	d1c0      	bne.n	1001ddc4 <_strtod_l+0x1fc>
1001de42:	4925      	ldr	r1, [pc, #148]	@ (1001ded8 <_strtod_l+0x310>)
1001de44:	a819      	add	r0, sp, #100	@ 0x64
1001de46:	f002 f801 	bl	1001fe4c <__match>
1001de4a:	2800      	cmp	r0, #0
1001de4c:	d0ba      	beq.n	1001ddc4 <_strtod_l+0x1fc>
1001de4e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001de50:	781b      	ldrb	r3, [r3, #0]
1001de52:	2b28      	cmp	r3, #40	@ 0x28
1001de54:	f000 85a2 	beq.w	1001e99c <_strtod_l+0xdd4>
1001de58:	4820      	ldr	r0, [pc, #128]	@ (1001dedc <_strtod_l+0x314>)
1001de5a:	f001 fb93 	bl	1001f584 <nan>
1001de5e:	4680      	mov	r8, r0
1001de60:	4689      	mov	r9, r1
1001de62:	e28c      	b.n	1001e37e <_strtod_l+0x7b6>
1001de64:	491b      	ldr	r1, [pc, #108]	@ (1001ded4 <_strtod_l+0x30c>)
1001de66:	2201      	movs	r2, #1
1001de68:	f001 f854 	bl	1001ef14 <strncmp>
1001de6c:	2800      	cmp	r0, #0
1001de6e:	d1ca      	bne.n	1001de06 <_strtod_l+0x23e>
1001de70:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001de72:	900e      	str	r0, [sp, #56]	@ 0x38
1001de74:	1c5a      	adds	r2, r3, #1
1001de76:	9219      	str	r2, [sp, #100]	@ 0x64
1001de78:	785f      	ldrb	r7, [r3, #1]
1001de7a:	46a2      	mov	sl, r4
1001de7c:	e772      	b.n	1001dd64 <_strtod_l+0x19c>
1001de7e:	2c00      	cmp	r4, #0
1001de80:	d09c      	beq.n	1001ddbc <_strtod_l+0x1f4>
1001de82:	9e19      	ldr	r6, [sp, #100]	@ 0x64
1001de84:	1c73      	adds	r3, r6, #1
1001de86:	9319      	str	r3, [sp, #100]	@ 0x64
1001de88:	7877      	ldrb	r7, [r6, #1]
1001de8a:	2f2b      	cmp	r7, #43	@ 0x2b
1001de8c:	f000 8294 	beq.w	1001e3b8 <_strtod_l+0x7f0>
1001de90:	2f2d      	cmp	r7, #45	@ 0x2d
1001de92:	f000 8284 	beq.w	1001e39e <_strtod_l+0x7d6>
1001de96:	2300      	movs	r3, #0
1001de98:	930a      	str	r3, [sp, #40]	@ 0x28
1001de9a:	f1a7 0130 	sub.w	r1, r7, #48	@ 0x30
1001de9e:	2909      	cmp	r1, #9
1001dea0:	f200 8283 	bhi.w	1001e3aa <_strtod_l+0x7e2>
1001dea4:	2f30      	cmp	r7, #48	@ 0x30
1001dea6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001dea8:	d10a      	bne.n	1001dec0 <_strtod_l+0x2f8>
1001deaa:	3301      	adds	r3, #1
1001deac:	9319      	str	r3, [sp, #100]	@ 0x64
1001deae:	781f      	ldrb	r7, [r3, #0]
1001deb0:	2f30      	cmp	r7, #48	@ 0x30
1001deb2:	d0fa      	beq.n	1001deaa <_strtod_l+0x2e2>
1001deb4:	f1a7 0231 	sub.w	r2, r7, #49	@ 0x31
1001deb8:	2a08      	cmp	r2, #8
1001deba:	d8ac      	bhi.n	1001de16 <_strtod_l+0x24e>
1001debc:	f1a7 0130 	sub.w	r1, r7, #48	@ 0x30
1001dec0:	1c5a      	adds	r2, r3, #1
1001dec2:	9219      	str	r2, [sp, #100]	@ 0x64
1001dec4:	785f      	ldrb	r7, [r3, #1]
1001dec6:	2f2f      	cmp	r7, #47	@ 0x2f
1001dec8:	f340 83fc 	ble.w	1001e6c4 <_strtod_l+0xafc>
1001decc:	4696      	mov	lr, r2
1001dece:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
1001ded2:	e00e      	b.n	1001def2 <_strtod_l+0x32a>
1001ded4:	10021508 	.word	0x10021508
1001ded8:	10023c5c 	.word	0x10023c5c
1001dedc:	10021468 	.word	0x10021468
1001dee0:	3201      	adds	r2, #1
1001dee2:	9219      	str	r2, [sp, #100]	@ 0x64
1001dee4:	f89e 7001 	ldrb.w	r7, [lr, #1]
1001dee8:	2f2f      	cmp	r7, #47	@ 0x2f
1001deea:	f1a8 0130 	sub.w	r1, r8, #48	@ 0x30
1001deee:	dd06      	ble.n	1001defe <_strtod_l+0x336>
1001def0:	4696      	mov	lr, r2
1001def2:	eb01 0881 	add.w	r8, r1, r1, lsl #2
1001def6:	2f39      	cmp	r7, #57	@ 0x39
1001def8:	eb07 0848 	add.w	r8, r7, r8, lsl #1
1001defc:	ddf0      	ble.n	1001dee0 <_strtod_l+0x318>
1001defe:	1ad2      	subs	r2, r2, r3
1001df00:	2a08      	cmp	r2, #8
1001df02:	f8dd 802c 	ldr.w	r8, [sp, #44]	@ 0x2c
1001df06:	f340 83dd 	ble.w	1001e6c4 <_strtod_l+0xafc>
1001df0a:	f644 631f 	movw	r3, #19999	@ 0x4e1f
1001df0e:	930f      	str	r3, [sp, #60]	@ 0x3c
1001df10:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001df12:	2b00      	cmp	r3, #0
1001df14:	d081      	beq.n	1001de1a <_strtod_l+0x252>
1001df16:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001df18:	425b      	negs	r3, r3
1001df1a:	930f      	str	r3, [sp, #60]	@ 0x3c
1001df1c:	2c00      	cmp	r4, #0
1001df1e:	f43f af7f 	beq.w	1001de20 <_strtod_l+0x258>
1001df22:	4628      	mov	r0, r5
1001df24:	f002 fbbe 	bl	100206a4 <__aeabi_ui2d>
1001df28:	4602      	mov	r2, r0
1001df2a:	460b      	mov	r3, r1
1001df2c:	e9cd 2304 	strd	r2, r3, [sp, #16]
1001df30:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
1001df34:	f1ba 0f00 	cmp.w	sl, #0
1001df38:	bf08      	it	eq
1001df3a:	46a2      	moveq	sl, r4
1001df3c:	2c10      	cmp	r4, #16
1001df3e:	eba3 0302 	sub.w	r3, r3, r2
1001df42:	4626      	mov	r6, r4
1001df44:	bfa8      	it	ge
1001df46:	2610      	movge	r6, #16
1001df48:	2c09      	cmp	r4, #9
1001df4a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001df4c:	dd16      	ble.n	1001df7c <_strtod_l+0x3b4>
1001df4e:	4b4f      	ldr	r3, [pc, #316]	@ (1001e08c <_strtod_l+0x4c4>)
1001df50:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
1001df54:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
1001df58:	f002 fc1e 	bl	10020798 <__aeabi_dmul>
1001df5c:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001df60:	4648      	mov	r0, r9
1001df62:	f002 fb9f 	bl	100206a4 <__aeabi_ui2d>
1001df66:	4602      	mov	r2, r0
1001df68:	460b      	mov	r3, r1
1001df6a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001df6e:	f002 fa5d 	bl	1002042c <__adddf3>
1001df72:	2c0f      	cmp	r4, #15
1001df74:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001df78:	f300 81a7 	bgt.w	1001e2ca <_strtod_l+0x702>
1001df7c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001df7e:	2b00      	cmp	r3, #0
1001df80:	f000 8301 	beq.w	1001e586 <_strtod_l+0x9be>
1001df84:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001df86:	f340 8231 	ble.w	1001e3ec <_strtod_l+0x824>
1001df8a:	2b16      	cmp	r3, #22
1001df8c:	f340 83a1 	ble.w	1001e6d2 <_strtod_l+0xb0a>
1001df90:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001df92:	f1c4 0325 	rsb	r3, r4, #37	@ 0x25
1001df96:	4293      	cmp	r3, r2
1001df98:	f280 8432 	bge.w	1001e800 <_strtod_l+0xc38>
1001df9c:	1ba6      	subs	r6, r4, r6
1001df9e:	4416      	add	r6, r2
1001dfa0:	f016 000f 	ands.w	r0, r6, #15
1001dfa4:	d00a      	beq.n	1001dfbc <_strtod_l+0x3f4>
1001dfa6:	4939      	ldr	r1, [pc, #228]	@ (1001e08c <_strtod_l+0x4c4>)
1001dfa8:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
1001dfac:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001dfb0:	e9d1 0100 	ldrd	r0, r1, [r1]
1001dfb4:	f002 fbf0 	bl	10020798 <__aeabi_dmul>
1001dfb8:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001dfbc:	f036 030f 	bics.w	r3, r6, #15
1001dfc0:	d046      	beq.n	1001e050 <_strtod_l+0x488>
1001dfc2:	f5b3 7f9a 	cmp.w	r3, #308	@ 0x134
1001dfc6:	f300 834e 	bgt.w	1001e666 <_strtod_l+0xa9e>
1001dfca:	2b10      	cmp	r3, #16
1001dfcc:	4a30      	ldr	r2, [pc, #192]	@ (1001e090 <_strtod_l+0x4c8>)
1001dfce:	ea4f 1623 	mov.w	r6, r3, asr #4
1001dfd2:	f340 8539 	ble.w	1001ea48 <_strtod_l+0xe80>
1001dfd6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001dfda:	2300      	movs	r3, #0
1001dfdc:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
1001dfe0:	4617      	mov	r7, r2
1001dfe2:	4699      	mov	r9, r3
1001dfe4:	4690      	mov	r8, r2
1001dfe6:	f016 0f01 	tst.w	r6, #1
1001dfea:	f109 0901 	add.w	r9, r9, #1
1001dfee:	ea4f 0666 	mov.w	r6, r6, asr #1
1001dff2:	d004      	beq.n	1001dffe <_strtod_l+0x436>
1001dff4:	e9d7 2300 	ldrd	r2, r3, [r7]
1001dff8:	f002 fbce 	bl	10020798 <__aeabi_dmul>
1001dffc:	2301      	movs	r3, #1
1001dffe:	2e01      	cmp	r6, #1
1001e000:	f107 0708 	add.w	r7, r7, #8
1001e004:	d1ef      	bne.n	1001dfe6 <_strtod_l+0x41e>
1001e006:	4642      	mov	r2, r8
1001e008:	f8dd 8024 	ldr.w	r8, [sp, #36]	@ 0x24
1001e00c:	b10b      	cbz	r3, 1001e012 <_strtod_l+0x44a>
1001e00e:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e012:	9b05      	ldr	r3, [sp, #20]
1001e014:	f1a3 7354 	sub.w	r3, r3, #55574528	@ 0x3500000
1001e018:	eb02 01c9 	add.w	r1, r2, r9, lsl #3
1001e01c:	9305      	str	r3, [sp, #20]
1001e01e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001e022:	e9d1 0100 	ldrd	r0, r1, [r1]
1001e026:	f002 fbb7 	bl	10020798 <__aeabi_dmul>
1001e02a:	4b1a      	ldr	r3, [pc, #104]	@ (1001e094 <_strtod_l+0x4cc>)
1001e02c:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e030:	400b      	ands	r3, r1
1001e032:	460a      	mov	r2, r1
1001e034:	4918      	ldr	r1, [pc, #96]	@ (1001e098 <_strtod_l+0x4d0>)
1001e036:	428b      	cmp	r3, r1
1001e038:	f200 8315 	bhi.w	1001e666 <_strtod_l+0xa9e>
1001e03c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
1001e040:	428b      	cmp	r3, r1
1001e042:	f240 8454 	bls.w	1001e8ee <_strtod_l+0xd26>
1001e046:	4b15      	ldr	r3, [pc, #84]	@ (1001e09c <_strtod_l+0x4d4>)
1001e048:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001e04c:	e9cd 2304 	strd	r2, r3, [sp, #16]
1001e050:	2300      	movs	r3, #0
1001e052:	930a      	str	r3, [sp, #40]	@ 0x28
1001e054:	9500      	str	r5, [sp, #0]
1001e056:	4623      	mov	r3, r4
1001e058:	4652      	mov	r2, sl
1001e05a:	4641      	mov	r1, r8
1001e05c:	4658      	mov	r0, fp
1001e05e:	f7ff f83b 	bl	1001d0d8 <__s2b>
1001e062:	9014      	str	r0, [sp, #80]	@ 0x50
1001e064:	2800      	cmp	r0, #0
1001e066:	f000 82fe 	beq.w	1001e666 <_strtod_l+0xa9e>
1001e06a:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
1001e06e:	1a9b      	subs	r3, r3, r2
1001e070:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1001e072:	2a00      	cmp	r2, #0
1001e074:	bfa8      	it	ge
1001e076:	2300      	movge	r3, #0
1001e078:	930e      	str	r3, [sp, #56]	@ 0x38
1001e07a:	f04f 0a00 	mov.w	sl, #0
1001e07e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
1001e082:	f8cd a024 	str.w	sl, [sp, #36]	@ 0x24
1001e086:	9315      	str	r3, [sp, #84]	@ 0x54
1001e088:	e0df      	b.n	1001e24a <_strtod_l+0x682>
1001e08a:	bf00      	nop
1001e08c:	10023b88 	.word	0x10023b88
1001e090:	10023b60 	.word	0x10023b60
1001e094:	7ff00000 	.word	0x7ff00000
1001e098:	7ca00000 	.word	0x7ca00000
1001e09c:	7fefffff 	.word	0x7fefffff
1001e0a0:	1ad2      	subs	r2, r2, r3
1001e0a2:	2a1f      	cmp	r2, #31
1001e0a4:	eba4 0402 	sub.w	r4, r4, r2
1001e0a8:	f300 822e 	bgt.w	1001e508 <_strtod_l+0x940>
1001e0ac:	2301      	movs	r3, #1
1001e0ae:	4093      	lsls	r3, r2
1001e0b0:	4698      	mov	r8, r3
1001e0b2:	2500      	movs	r5, #0
1001e0b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e0b6:	4426      	add	r6, r4
1001e0b8:	443c      	add	r4, r7
1001e0ba:	42a7      	cmp	r7, r4
1001e0bc:	441e      	add	r6, r3
1001e0be:	463b      	mov	r3, r7
1001e0c0:	bfa8      	it	ge
1001e0c2:	4623      	movge	r3, r4
1001e0c4:	42b3      	cmp	r3, r6
1001e0c6:	bfa8      	it	ge
1001e0c8:	4633      	movge	r3, r6
1001e0ca:	2b00      	cmp	r3, #0
1001e0cc:	dd02      	ble.n	1001e0d4 <_strtod_l+0x50c>
1001e0ce:	1ae4      	subs	r4, r4, r3
1001e0d0:	1af6      	subs	r6, r6, r3
1001e0d2:	1aff      	subs	r7, r7, r3
1001e0d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001e0d6:	2b00      	cmp	r3, #0
1001e0d8:	f300 81bc 	bgt.w	1001e454 <_strtod_l+0x88c>
1001e0dc:	2c00      	cmp	r4, #0
1001e0de:	f300 81d2 	bgt.w	1001e486 <_strtod_l+0x8be>
1001e0e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001e0e4:	2b00      	cmp	r3, #0
1001e0e6:	f300 8205 	bgt.w	1001e4f4 <_strtod_l+0x92c>
1001e0ea:	2e00      	cmp	r6, #0
1001e0ec:	f300 81f6 	bgt.w	1001e4dc <_strtod_l+0x914>
1001e0f0:	2f00      	cmp	r7, #0
1001e0f2:	dd08      	ble.n	1001e106 <_strtod_l+0x53e>
1001e0f4:	4651      	mov	r1, sl
1001e0f6:	463a      	mov	r2, r7
1001e0f8:	4658      	mov	r0, fp
1001e0fa:	f7ff f9d5 	bl	1001d4a8 <__lshift>
1001e0fe:	4682      	mov	sl, r0
1001e100:	2800      	cmp	r0, #0
1001e102:	f000 81f4 	beq.w	1001e4ee <_strtod_l+0x926>
1001e106:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001e108:	464a      	mov	r2, r9
1001e10a:	4658      	mov	r0, fp
1001e10c:	f7ff fa64 	bl	1001d5d8 <__mdiff>
1001e110:	9009      	str	r0, [sp, #36]	@ 0x24
1001e112:	2800      	cmp	r0, #0
1001e114:	f000 81eb 	beq.w	1001e4ee <_strtod_l+0x926>
1001e118:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001e11a:	2300      	movs	r3, #0
1001e11c:	68d1      	ldr	r1, [r2, #12]
1001e11e:	910f      	str	r1, [sp, #60]	@ 0x3c
1001e120:	60d3      	str	r3, [r2, #12]
1001e122:	4651      	mov	r1, sl
1001e124:	f7ff fa38 	bl	1001d598 <__mcmp>
1001e128:	2800      	cmp	r0, #0
1001e12a:	f2c0 8402 	blt.w	1001e932 <_strtod_l+0xd6a>
1001e12e:	9f05      	ldr	r7, [sp, #20]
1001e130:	f000 8389 	beq.w	1001e846 <_strtod_l+0xc7e>
1001e134:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001e136:	4651      	mov	r1, sl
1001e138:	f7ff fbe4 	bl	1001d904 <__ratio>
1001e13c:	2200      	movs	r2, #0
1001e13e:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
1001e142:	4604      	mov	r4, r0
1001e144:	460d      	mov	r5, r1
1001e146:	f002 fda3 	bl	10020c90 <__aeabi_dcmple>
1001e14a:	2800      	cmp	r0, #0
1001e14c:	f000 8172 	beq.w	1001e434 <_strtod_l+0x86c>
1001e150:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e152:	2b00      	cmp	r3, #0
1001e154:	f040 81e4 	bne.w	1001e520 <_strtod_l+0x958>
1001e158:	9b04      	ldr	r3, [sp, #16]
1001e15a:	2b00      	cmp	r3, #0
1001e15c:	f040 8273 	bne.w	1001e646 <_strtod_l+0xa7e>
1001e160:	f3c7 0313 	ubfx	r3, r7, #0, #20
1001e164:	2b00      	cmp	r3, #0
1001e166:	f040 8211 	bne.w	1001e58c <_strtod_l+0x9c4>
1001e16a:	4bab      	ldr	r3, [pc, #684]	@ (1001e418 <_strtod_l+0x850>)
1001e16c:	2200      	movs	r2, #0
1001e16e:	4620      	mov	r0, r4
1001e170:	4629      	mov	r1, r5
1001e172:	f002 fd83 	bl	10020c7c <__aeabi_dcmplt>
1001e176:	2800      	cmp	r0, #0
1001e178:	f040 835c 	bne.w	1001e834 <_strtod_l+0xc6c>
1001e17c:	4ba7      	ldr	r3, [pc, #668]	@ (1001e41c <_strtod_l+0x854>)
1001e17e:	4620      	mov	r0, r4
1001e180:	4629      	mov	r1, r5
1001e182:	2200      	movs	r2, #0
1001e184:	f002 fb08 	bl	10020798 <__aeabi_dmul>
1001e188:	4603      	mov	r3, r0
1001e18a:	460c      	mov	r4, r1
1001e18c:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001e190:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
1001e194:	900c      	str	r0, [sp, #48]	@ 0x30
1001e196:	930d      	str	r3, [sp, #52]	@ 0x34
1001e198:	4ea1      	ldr	r6, [pc, #644]	@ (1001e420 <_strtod_l+0x858>)
1001e19a:	4ba2      	ldr	r3, [pc, #648]	@ (1001e424 <_strtod_l+0x85c>)
1001e19c:	403e      	ands	r6, r7
1001e19e:	429e      	cmp	r6, r3
1001e1a0:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	@ 0x30
1001e1a4:	f000 81c3 	beq.w	1001e52e <_strtod_l+0x966>
1001e1a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e1aa:	b323      	cbz	r3, 1001e1f6 <_strtod_l+0x62e>
1001e1ac:	f1b6 6fd4 	cmp.w	r6, #111149056	@ 0x6a00000
1001e1b0:	d821      	bhi.n	1001e1f6 <_strtod_l+0x62e>
1001e1b2:	e9dd 7812 	ldrd	r7, r8, [sp, #72]	@ 0x48
1001e1b6:	a396      	add	r3, pc, #600	@ (adr r3, 1001e410 <_strtod_l+0x848>)
1001e1b8:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e1bc:	4638      	mov	r0, r7
1001e1be:	4641      	mov	r1, r8
1001e1c0:	f002 fd66 	bl	10020c90 <__aeabi_dcmple>
1001e1c4:	b1a0      	cbz	r0, 1001e1f0 <_strtod_l+0x628>
1001e1c6:	4641      	mov	r1, r8
1001e1c8:	4638      	mov	r0, r7
1001e1ca:	f002 fdbd 	bl	10020d48 <__aeabi_d2uiz>
1001e1ce:	2801      	cmp	r0, #1
1001e1d0:	bf38      	it	cc
1001e1d2:	2001      	movcc	r0, #1
1001e1d4:	f002 fa66 	bl	100206a4 <__aeabi_ui2d>
1001e1d8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e1da:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001e1de:	2b00      	cmp	r3, #0
1001e1e0:	f040 82ba 	bne.w	1001e758 <_strtod_l+0xb90>
1001e1e4:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
1001e1e8:	9016      	str	r0, [sp, #88]	@ 0x58
1001e1ea:	9317      	str	r3, [sp, #92]	@ 0x5c
1001e1ec:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	@ 0x58
1001e1f0:	f105 63d6 	add.w	r3, r5, #112197632	@ 0x6b00000
1001e1f4:	1b9d      	subs	r5, r3, r6
1001e1f6:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	@ 0x40
1001e1fa:	4638      	mov	r0, r7
1001e1fc:	4641      	mov	r1, r8
1001e1fe:	f7ff fa9d 	bl	1001d73c <__ulp>
1001e202:	4602      	mov	r2, r0
1001e204:	460b      	mov	r3, r1
1001e206:	4620      	mov	r0, r4
1001e208:	4629      	mov	r1, r5
1001e20a:	f002 fac5 	bl	10020798 <__aeabi_dmul>
1001e20e:	463a      	mov	r2, r7
1001e210:	4643      	mov	r3, r8
1001e212:	f002 f90b 	bl	1002042c <__adddf3>
1001e216:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e21a:	460c      	mov	r4, r1
1001e21c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e21e:	b923      	cbnz	r3, 1001e22a <_strtod_l+0x662>
1001e220:	4b7f      	ldr	r3, [pc, #508]	@ (1001e420 <_strtod_l+0x858>)
1001e222:	4023      	ands	r3, r4
1001e224:	429e      	cmp	r6, r3
1001e226:	f000 81ba 	beq.w	1001e59e <_strtod_l+0x9d6>
1001e22a:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001e22c:	4658      	mov	r0, fp
1001e22e:	f7fe fef9 	bl	1001d024 <_Bfree>
1001e232:	4649      	mov	r1, r9
1001e234:	4658      	mov	r0, fp
1001e236:	f7fe fef5 	bl	1001d024 <_Bfree>
1001e23a:	4651      	mov	r1, sl
1001e23c:	4658      	mov	r0, fp
1001e23e:	f7fe fef1 	bl	1001d024 <_Bfree>
1001e242:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001e244:	4658      	mov	r0, fp
1001e246:	f7fe feed 	bl	1001d024 <_Bfree>
1001e24a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
1001e24c:	4658      	mov	r0, fp
1001e24e:	6861      	ldr	r1, [r4, #4]
1001e250:	f7fe fec2 	bl	1001cfd8 <_Balloc>
1001e254:	4681      	mov	r9, r0
1001e256:	2800      	cmp	r0, #0
1001e258:	f000 8149 	beq.w	1001e4ee <_strtod_l+0x926>
1001e25c:	6922      	ldr	r2, [r4, #16]
1001e25e:	3202      	adds	r2, #2
1001e260:	f104 010c 	add.w	r1, r4, #12
1001e264:	0092      	lsls	r2, r2, #2
1001e266:	300c      	adds	r0, #12
1001e268:	f7fa f93a 	bl	100184e0 <memcpy>
1001e26c:	ab1c      	add	r3, sp, #112	@ 0x70
1001e26e:	9301      	str	r3, [sp, #4]
1001e270:	ab1b      	add	r3, sp, #108	@ 0x6c
1001e272:	9300      	str	r3, [sp, #0]
1001e274:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
1001e278:	4658      	mov	r0, fp
1001e27a:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
1001e27e:	461a      	mov	r2, r3
1001e280:	4623      	mov	r3, r4
1001e282:	f7ff fae1 	bl	1001d848 <__d2b>
1001e286:	901a      	str	r0, [sp, #104]	@ 0x68
1001e288:	2800      	cmp	r0, #0
1001e28a:	f000 8105 	beq.w	1001e498 <_strtod_l+0x8d0>
1001e28e:	2101      	movs	r1, #1
1001e290:	4658      	mov	r0, fp
1001e292:	f7fe ffcb 	bl	1001d22c <__i2b>
1001e296:	4682      	mov	sl, r0
1001e298:	2800      	cmp	r0, #0
1001e29a:	f000 8128 	beq.w	1001e4ee <_strtod_l+0x926>
1001e29e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
1001e2a0:	2b00      	cmp	r3, #0
1001e2a2:	f2c0 8117 	blt.w	1001e4d4 <_strtod_l+0x90c>
1001e2a6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001e2a8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
1001e2aa:	189f      	adds	r7, r3, r2
1001e2ac:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001e2ae:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
1001e2b0:	1a9b      	subs	r3, r3, r2
1001e2b2:	4423      	add	r3, r4
1001e2b4:	4a5c      	ldr	r2, [pc, #368]	@ (1001e428 <_strtod_l+0x860>)
1001e2b6:	3b01      	subs	r3, #1
1001e2b8:	4293      	cmp	r3, r2
1001e2ba:	f1c4 0436 	rsb	r4, r4, #54	@ 0x36
1001e2be:	f6ff aeef 	blt.w	1001e0a0 <_strtod_l+0x4d8>
1001e2c2:	2301      	movs	r3, #1
1001e2c4:	2500      	movs	r5, #0
1001e2c6:	4698      	mov	r8, r3
1001e2c8:	e6f4      	b.n	1001e0b4 <_strtod_l+0x4ec>
1001e2ca:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001e2cc:	1ba6      	subs	r6, r4, r6
1001e2ce:	441e      	add	r6, r3
1001e2d0:	2e00      	cmp	r6, #0
1001e2d2:	f73f ae65 	bgt.w	1001dfa0 <_strtod_l+0x3d8>
1001e2d6:	f43f aebb 	beq.w	1001e050 <_strtod_l+0x488>
1001e2da:	4276      	negs	r6, r6
1001e2dc:	f016 020f 	ands.w	r2, r6, #15
1001e2e0:	d00a      	beq.n	1001e2f8 <_strtod_l+0x730>
1001e2e2:	4b52      	ldr	r3, [pc, #328]	@ (1001e42c <_strtod_l+0x864>)
1001e2e4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1001e2e8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e2ec:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e2f0:	f002 fb7c 	bl	100209ec <__aeabi_ddiv>
1001e2f4:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e2f8:	1136      	asrs	r6, r6, #4
1001e2fa:	f43f aea9 	beq.w	1001e050 <_strtod_l+0x488>
1001e2fe:	2e1f      	cmp	r6, #31
1001e300:	dc36      	bgt.n	1001e370 <_strtod_l+0x7a8>
1001e302:	f016 0310 	ands.w	r3, r6, #16
1001e306:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e30a:	bf18      	it	ne
1001e30c:	236a      	movne	r3, #106	@ 0x6a
1001e30e:	4f48      	ldr	r7, [pc, #288]	@ (1001e430 <_strtod_l+0x868>)
1001e310:	930a      	str	r3, [sp, #40]	@ 0x28
1001e312:	2300      	movs	r3, #0
1001e314:	07f2      	lsls	r2, r6, #31
1001e316:	d504      	bpl.n	1001e322 <_strtod_l+0x75a>
1001e318:	e9d7 2300 	ldrd	r2, r3, [r7]
1001e31c:	f002 fa3c 	bl	10020798 <__aeabi_dmul>
1001e320:	2301      	movs	r3, #1
1001e322:	1076      	asrs	r6, r6, #1
1001e324:	f107 0708 	add.w	r7, r7, #8
1001e328:	d1f4      	bne.n	1001e314 <_strtod_l+0x74c>
1001e32a:	b10b      	cbz	r3, 1001e330 <_strtod_l+0x768>
1001e32c:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e330:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e332:	b1a3      	cbz	r3, 1001e35e <_strtod_l+0x796>
1001e334:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e338:	f3c1 520a 	ubfx	r2, r1, #20, #11
1001e33c:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
1001e340:	2b00      	cmp	r3, #0
1001e342:	dd0a      	ble.n	1001e35a <_strtod_l+0x792>
1001e344:	2b1f      	cmp	r3, #31
1001e346:	f340 8398 	ble.w	1001ea7a <_strtod_l+0xeb2>
1001e34a:	2000      	movs	r0, #0
1001e34c:	2b34      	cmp	r3, #52	@ 0x34
1001e34e:	9004      	str	r0, [sp, #16]
1001e350:	f340 83ca 	ble.w	1001eae8 <_strtod_l+0xf20>
1001e354:	f04f 735c 	mov.w	r3, #57671680	@ 0x3700000
1001e358:	9305      	str	r3, [sp, #20]
1001e35a:	236a      	movs	r3, #106	@ 0x6a
1001e35c:	930a      	str	r3, [sp, #40]	@ 0x28
1001e35e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e362:	2200      	movs	r2, #0
1001e364:	2300      	movs	r3, #0
1001e366:	f002 fc7f 	bl	10020c68 <__aeabi_dcmpeq>
1001e36a:	2800      	cmp	r0, #0
1001e36c:	f43f ae72 	beq.w	1001e054 <_strtod_l+0x48c>
1001e370:	2322      	movs	r3, #34	@ 0x22
1001e372:	f8cb 3000 	str.w	r3, [fp]
1001e376:	f04f 0800 	mov.w	r8, #0
1001e37a:	f04f 0900 	mov.w	r9, #0
1001e37e:	9a07      	ldr	r2, [sp, #28]
1001e380:	b10a      	cbz	r2, 1001e386 <_strtod_l+0x7be>
1001e382:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001e384:	6013      	str	r3, [r2, #0]
1001e386:	9b08      	ldr	r3, [sp, #32]
1001e388:	2b00      	cmp	r3, #0
1001e38a:	f43f ad22 	beq.w	1001ddd2 <_strtod_l+0x20a>
1001e38e:	f109 4300 	add.w	r3, r9, #2147483648	@ 0x80000000
1001e392:	4699      	mov	r9, r3
1001e394:	4640      	mov	r0, r8
1001e396:	4649      	mov	r1, r9
1001e398:	b01f      	add	sp, #124	@ 0x7c
1001e39a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001e39e:	2301      	movs	r3, #1
1001e3a0:	930a      	str	r3, [sp, #40]	@ 0x28
1001e3a2:	1cb3      	adds	r3, r6, #2
1001e3a4:	9319      	str	r3, [sp, #100]	@ 0x64
1001e3a6:	78b7      	ldrb	r7, [r6, #2]
1001e3a8:	e577      	b.n	1001de9a <_strtod_l+0x2d2>
1001e3aa:	2300      	movs	r3, #0
1001e3ac:	9619      	str	r6, [sp, #100]	@ 0x64
1001e3ae:	930f      	str	r3, [sp, #60]	@ 0x3c
1001e3b0:	e533      	b.n	1001de1a <_strtod_l+0x252>
1001e3b2:	f04f 0c01 	mov.w	ip, #1
1001e3b6:	e52a      	b.n	1001de0e <_strtod_l+0x246>
1001e3b8:	2300      	movs	r3, #0
1001e3ba:	930a      	str	r3, [sp, #40]	@ 0x28
1001e3bc:	e7f1      	b.n	1001e3a2 <_strtod_l+0x7da>
1001e3be:	2400      	movs	r4, #0
1001e3c0:	e55f      	b.n	1001de82 <_strtod_l+0x2ba>
1001e3c2:	2200      	movs	r2, #0
1001e3c4:	9208      	str	r2, [sp, #32]
1001e3c6:	f108 0101 	add.w	r1, r8, #1
1001e3ca:	9119      	str	r1, [sp, #100]	@ 0x64
1001e3cc:	f898 2001 	ldrb.w	r2, [r8, #1]
1001e3d0:	2a00      	cmp	r2, #0
1001e3d2:	f43f acf7 	beq.w	1001ddc4 <_strtod_l+0x1fc>
1001e3d6:	4688      	mov	r8, r1
1001e3d8:	e46a      	b.n	1001dcb0 <_strtod_l+0xe8>
1001e3da:	2201      	movs	r2, #1
1001e3dc:	9208      	str	r2, [sp, #32]
1001e3de:	e7f2      	b.n	1001e3c6 <_strtod_l+0x7fe>
1001e3e0:	2f45      	cmp	r7, #69	@ 0x45
1001e3e2:	f43f ace5 	beq.w	1001ddb0 <_strtod_l+0x1e8>
1001e3e6:	f04f 0c01 	mov.w	ip, #1
1001e3ea:	e519      	b.n	1001de20 <_strtod_l+0x258>
1001e3ec:	3316      	adds	r3, #22
1001e3ee:	f6ff af6c 	blt.w	1001e2ca <_strtod_l+0x702>
1001e3f2:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	@ 0x38
1001e3f6:	1a9a      	subs	r2, r3, r2
1001e3f8:	4b0c      	ldr	r3, [pc, #48]	@ (1001e42c <_strtod_l+0x864>)
1001e3fa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
1001e3fe:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e402:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e406:	f002 faf1 	bl	100209ec <__aeabi_ddiv>
1001e40a:	4680      	mov	r8, r0
1001e40c:	4689      	mov	r9, r1
1001e40e:	e7b6      	b.n	1001e37e <_strtod_l+0x7b6>
1001e410:	ffc00000 	.word	0xffc00000
1001e414:	41dfffff 	.word	0x41dfffff
1001e418:	3ff00000 	.word	0x3ff00000
1001e41c:	3fe00000 	.word	0x3fe00000
1001e420:	7ff00000 	.word	0x7ff00000
1001e424:	7fe00000 	.word	0x7fe00000
1001e428:	fffffc02 	.word	0xfffffc02
1001e42c:	10023b88 	.word	0x10023b88
1001e430:	10023c88 	.word	0x10023c88
1001e434:	4bb4      	ldr	r3, [pc, #720]	@ (1001e708 <_strtod_l+0xb40>)
1001e436:	4620      	mov	r0, r4
1001e438:	4629      	mov	r1, r5
1001e43a:	2200      	movs	r2, #0
1001e43c:	f002 f9ac 	bl	10020798 <__aeabi_dmul>
1001e440:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e442:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
1001e446:	2b00      	cmp	r3, #0
1001e448:	d165      	bne.n	1001e516 <_strtod_l+0x94e>
1001e44a:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
1001e44e:	900c      	str	r0, [sp, #48]	@ 0x30
1001e450:	930d      	str	r3, [sp, #52]	@ 0x34
1001e452:	e6a1      	b.n	1001e198 <_strtod_l+0x5d0>
1001e454:	4651      	mov	r1, sl
1001e456:	461a      	mov	r2, r3
1001e458:	4658      	mov	r0, fp
1001e45a:	f7fe ffcb 	bl	1001d3f4 <__pow5mult>
1001e45e:	4682      	mov	sl, r0
1001e460:	2800      	cmp	r0, #0
1001e462:	d044      	beq.n	1001e4ee <_strtod_l+0x926>
1001e464:	4601      	mov	r1, r0
1001e466:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001e468:	4658      	mov	r0, fp
1001e46a:	f7fe ff0d 	bl	1001d288 <__multiply>
1001e46e:	2800      	cmp	r0, #0
1001e470:	d03d      	beq.n	1001e4ee <_strtod_l+0x926>
1001e472:	900f      	str	r0, [sp, #60]	@ 0x3c
1001e474:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001e476:	4658      	mov	r0, fp
1001e478:	f7fe fdd4 	bl	1001d024 <_Bfree>
1001e47c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e47e:	931a      	str	r3, [sp, #104]	@ 0x68
1001e480:	2c00      	cmp	r4, #0
1001e482:	f77f ae2e 	ble.w	1001e0e2 <_strtod_l+0x51a>
1001e486:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001e488:	4622      	mov	r2, r4
1001e48a:	4658      	mov	r0, fp
1001e48c:	f7ff f80c 	bl	1001d4a8 <__lshift>
1001e490:	901a      	str	r0, [sp, #104]	@ 0x68
1001e492:	2800      	cmp	r0, #0
1001e494:	f47f ae25 	bne.w	1001e0e2 <_strtod_l+0x51a>
1001e498:	464f      	mov	r7, r9
1001e49a:	4605      	mov	r5, r0
1001e49c:	2322      	movs	r3, #34	@ 0x22
1001e49e:	f8df 926c 	ldr.w	r9, [pc, #620]	@ 1001e70c <_strtod_l+0xb44>
1001e4a2:	f8cb 3000 	str.w	r3, [fp]
1001e4a6:	f04f 0800 	mov.w	r8, #0
1001e4aa:	4629      	mov	r1, r5
1001e4ac:	4658      	mov	r0, fp
1001e4ae:	f7fe fdb9 	bl	1001d024 <_Bfree>
1001e4b2:	4639      	mov	r1, r7
1001e4b4:	4658      	mov	r0, fp
1001e4b6:	f7fe fdb5 	bl	1001d024 <_Bfree>
1001e4ba:	4651      	mov	r1, sl
1001e4bc:	4658      	mov	r0, fp
1001e4be:	f7fe fdb1 	bl	1001d024 <_Bfree>
1001e4c2:	9914      	ldr	r1, [sp, #80]	@ 0x50
1001e4c4:	4658      	mov	r0, fp
1001e4c6:	f7fe fdad 	bl	1001d024 <_Bfree>
1001e4ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001e4cc:	4658      	mov	r0, fp
1001e4ce:	f7fe fda9 	bl	1001d024 <_Bfree>
1001e4d2:	e754      	b.n	1001e37e <_strtod_l+0x7b6>
1001e4d4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001e4d6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
1001e4d8:	1ad6      	subs	r6, r2, r3
1001e4da:	e6e7      	b.n	1001e2ac <_strtod_l+0x6e4>
1001e4dc:	4649      	mov	r1, r9
1001e4de:	4632      	mov	r2, r6
1001e4e0:	4658      	mov	r0, fp
1001e4e2:	f7fe ffe1 	bl	1001d4a8 <__lshift>
1001e4e6:	4681      	mov	r9, r0
1001e4e8:	2800      	cmp	r0, #0
1001e4ea:	f47f ae01 	bne.w	1001e0f0 <_strtod_l+0x528>
1001e4ee:	464f      	mov	r7, r9
1001e4f0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001e4f2:	e7d3      	b.n	1001e49c <_strtod_l+0x8d4>
1001e4f4:	4649      	mov	r1, r9
1001e4f6:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001e4f8:	4658      	mov	r0, fp
1001e4fa:	f7fe ff7b 	bl	1001d3f4 <__pow5mult>
1001e4fe:	4681      	mov	r9, r0
1001e500:	2800      	cmp	r0, #0
1001e502:	f47f adf2 	bne.w	1001e0ea <_strtod_l+0x522>
1001e506:	e7f2      	b.n	1001e4ee <_strtod_l+0x926>
1001e508:	4a81      	ldr	r2, [pc, #516]	@ (1001e710 <_strtod_l+0xb48>)
1001e50a:	1ad3      	subs	r3, r2, r3
1001e50c:	2201      	movs	r2, #1
1001e50e:	fa02 f503 	lsl.w	r5, r2, r3
1001e512:	4690      	mov	r8, r2
1001e514:	e5ce      	b.n	1001e0b4 <_strtod_l+0x4ec>
1001e516:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
1001e51a:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001e51e:	e63b      	b.n	1001e198 <_strtod_l+0x5d0>
1001e520:	4c7c      	ldr	r4, [pc, #496]	@ (1001e714 <_strtod_l+0xb4c>)
1001e522:	2300      	movs	r3, #0
1001e524:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001e528:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001e52c:	e634      	b.n	1001e198 <_strtod_l+0x5d0>
1001e52e:	f1a7 7354 	sub.w	r3, r7, #55574528	@ 0x3500000
1001e532:	9305      	str	r3, [sp, #20]
1001e534:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
1001e538:	4620      	mov	r0, r4
1001e53a:	4629      	mov	r1, r5
1001e53c:	f7ff f8fe 	bl	1001d73c <__ulp>
1001e540:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
1001e544:	f002 f928 	bl	10020798 <__aeabi_dmul>
1001e548:	462b      	mov	r3, r5
1001e54a:	4622      	mov	r2, r4
1001e54c:	f001 ff6e 	bl	1002042c <__adddf3>
1001e550:	4f6e      	ldr	r7, [pc, #440]	@ (1001e70c <_strtod_l+0xb44>)
1001e552:	4b71      	ldr	r3, [pc, #452]	@ (1001e718 <_strtod_l+0xb50>)
1001e554:	400f      	ands	r7, r1
1001e556:	429f      	cmp	r7, r3
1001e558:	e9cd 0104 	strd	r0, r1, [sp, #16]
1001e55c:	f240 808b 	bls.w	1001e676 <_strtod_l+0xaae>
1001e560:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
1001e564:	f103 7354 	add.w	r3, r3, #55574528	@ 0x3500000
1001e568:	4299      	cmp	r1, r3
1001e56a:	d102      	bne.n	1001e572 <_strtod_l+0x9aa>
1001e56c:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001e570:	d0bd      	beq.n	1001e4ee <_strtod_l+0x926>
1001e572:	4c6a      	ldr	r4, [pc, #424]	@ (1001e71c <_strtod_l+0xb54>)
1001e574:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001e578:	e9cd 3404 	strd	r3, r4, [sp, #16]
1001e57c:	e655      	b.n	1001e22a <_strtod_l+0x662>
1001e57e:	2f6e      	cmp	r7, #110	@ 0x6e
1001e580:	f43f ac5f 	beq.w	1001de42 <_strtod_l+0x27a>
1001e584:	e41e      	b.n	1001ddc4 <_strtod_l+0x1fc>
1001e586:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001e58a:	e6f8      	b.n	1001e37e <_strtod_l+0x7b6>
1001e58c:	4c64      	ldr	r4, [pc, #400]	@ (1001e720 <_strtod_l+0xb58>)
1001e58e:	2300      	movs	r3, #0
1001e590:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001e594:	4c5f      	ldr	r4, [pc, #380]	@ (1001e714 <_strtod_l+0xb4c>)
1001e596:	2300      	movs	r3, #0
1001e598:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001e59c:	e5fc      	b.n	1001e198 <_strtod_l+0x5d0>
1001e59e:	e9dd 5612 	ldrd	r5, r6, [sp, #72]	@ 0x48
1001e5a2:	4628      	mov	r0, r5
1001e5a4:	4631      	mov	r1, r6
1001e5a6:	f002 fc57 	bl	10020e58 <__aeabi_d2lz>
1001e5aa:	f002 f8c7 	bl	1002073c <__aeabi_l2d>
1001e5ae:	460b      	mov	r3, r1
1001e5b0:	4602      	mov	r2, r0
1001e5b2:	4631      	mov	r1, r6
1001e5b4:	4628      	mov	r0, r5
1001e5b6:	f001 ff37 	bl	10020428 <__aeabi_dsub>
1001e5ba:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001e5bc:	9b04      	ldr	r3, [sp, #16]
1001e5be:	f3c4 0413 	ubfx	r4, r4, #0, #20
1001e5c2:	431d      	orrs	r5, r3
1001e5c4:	432c      	orrs	r4, r5
1001e5c6:	4606      	mov	r6, r0
1001e5c8:	460f      	mov	r7, r1
1001e5ca:	d12a      	bne.n	1001e622 <_strtod_l+0xa5a>
1001e5cc:	a348      	add	r3, pc, #288	@ (adr r3, 1001e6f0 <_strtod_l+0xb28>)
1001e5ce:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e5d2:	f002 fb53 	bl	10020c7c <__aeabi_dcmplt>
1001e5d6:	2800      	cmp	r0, #0
1001e5d8:	f43f ae27 	beq.w	1001e22a <_strtod_l+0x662>
1001e5dc:	464f      	mov	r7, r9
1001e5de:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001e5e2:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001e5e4:	e761      	b.n	1001e4aa <_strtod_l+0x8e2>
1001e5e6:	9302      	str	r3, [sp, #8]
1001e5e8:	9b08      	ldr	r3, [sp, #32]
1001e5ea:	9301      	str	r3, [sp, #4]
1001e5ec:	ab1a      	add	r3, sp, #104	@ 0x68
1001e5ee:	9300      	str	r3, [sp, #0]
1001e5f0:	4a4c      	ldr	r2, [pc, #304]	@ (1001e724 <_strtod_l+0xb5c>)
1001e5f2:	ab1b      	add	r3, sp, #108	@ 0x6c
1001e5f4:	a919      	add	r1, sp, #100	@ 0x64
1001e5f6:	4658      	mov	r0, fp
1001e5f8:	f001 f96e 	bl	1001f8d8 <__gethex>
1001e5fc:	f010 050f 	ands.w	r5, r0, #15
1001e600:	4604      	mov	r4, r0
1001e602:	f43f aeb8 	beq.w	1001e376 <_strtod_l+0x7ae>
1001e606:	2d06      	cmp	r5, #6
1001e608:	f040 80ae 	bne.w	1001e768 <_strtod_l+0xba0>
1001e60c:	9a07      	ldr	r2, [sp, #28]
1001e60e:	b112      	cbz	r2, 1001e616 <_strtod_l+0xa4e>
1001e610:	f108 0301 	add.w	r3, r8, #1
1001e614:	6013      	str	r3, [r2, #0]
1001e616:	f04f 0800 	mov.w	r8, #0
1001e61a:	f04f 0900 	mov.w	r9, #0
1001e61e:	f7ff bbd8 	b.w	1001ddd2 <_strtod_l+0x20a>
1001e622:	a335      	add	r3, pc, #212	@ (adr r3, 1001e6f8 <_strtod_l+0xb30>)
1001e624:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e628:	f002 fb28 	bl	10020c7c <__aeabi_dcmplt>
1001e62c:	2800      	cmp	r0, #0
1001e62e:	d1d5      	bne.n	1001e5dc <_strtod_l+0xa14>
1001e630:	a333      	add	r3, pc, #204	@ (adr r3, 1001e700 <_strtod_l+0xb38>)
1001e632:	e9d3 2300 	ldrd	r2, r3, [r3]
1001e636:	4630      	mov	r0, r6
1001e638:	4639      	mov	r1, r7
1001e63a:	f002 fb3d 	bl	10020cb8 <__aeabi_dcmpgt>
1001e63e:	2800      	cmp	r0, #0
1001e640:	f43f adf3 	beq.w	1001e22a <_strtod_l+0x662>
1001e644:	e7ca      	b.n	1001e5dc <_strtod_l+0xa14>
1001e646:	9b04      	ldr	r3, [sp, #16]
1001e648:	2b01      	cmp	r3, #1
1001e64a:	d19f      	bne.n	1001e58c <_strtod_l+0x9c4>
1001e64c:	2f00      	cmp	r7, #0
1001e64e:	d19d      	bne.n	1001e58c <_strtod_l+0x9c4>
1001e650:	464f      	mov	r7, r9
1001e652:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
1001e654:	2322      	movs	r3, #34	@ 0x22
1001e656:	4625      	mov	r5, r4
1001e658:	f8cb 3000 	str.w	r3, [fp]
1001e65c:	f04f 0800 	mov.w	r8, #0
1001e660:	f04f 0900 	mov.w	r9, #0
1001e664:	e721      	b.n	1001e4aa <_strtod_l+0x8e2>
1001e666:	2322      	movs	r3, #34	@ 0x22
1001e668:	f8cb 3000 	str.w	r3, [fp]
1001e66c:	f8df 909c 	ldr.w	r9, [pc, #156]	@ 1001e70c <_strtod_l+0xb44>
1001e670:	f04f 0800 	mov.w	r8, #0
1001e674:	e683      	b.n	1001e37e <_strtod_l+0x7b6>
1001e676:	f101 7454 	add.w	r4, r1, #55574528	@ 0x3500000
1001e67a:	9405      	str	r4, [sp, #20]
1001e67c:	e5ce      	b.n	1001e21c <_strtod_l+0x654>
1001e67e:	4664      	mov	r4, ip
1001e680:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001e682:	2908      	cmp	r1, #8
1001e684:	4403      	add	r3, r0
1001e686:	930e      	str	r3, [sp, #56]	@ 0x38
1001e688:	f77f ab64 	ble.w	1001dd54 <_strtod_l+0x18c>
1001e68c:	2c10      	cmp	r4, #16
1001e68e:	bfdc      	itt	le
1001e690:	eb09 0989 	addle.w	r9, r9, r9, lsl #2
1001e694:	eb02 0949 	addle.w	r9, r2, r9, lsl #1
1001e698:	2000      	movs	r0, #0
1001e69a:	f7ff bb60 	b.w	1001dd5e <_strtod_l+0x196>
1001e69e:	4922      	ldr	r1, [pc, #136]	@ (1001e728 <_strtod_l+0xb60>)
1001e6a0:	2201      	movs	r2, #1
1001e6a2:	4640      	mov	r0, r8
1001e6a4:	f000 fc36 	bl	1001ef14 <strncmp>
1001e6a8:	2800      	cmp	r0, #0
1001e6aa:	f000 80a0 	beq.w	1001e7ee <_strtod_l+0xc26>
1001e6ae:	f04f 0a00 	mov.w	sl, #0
1001e6b2:	46d1      	mov	r9, sl
1001e6b4:	4655      	mov	r5, sl
1001e6b6:	4650      	mov	r0, sl
1001e6b8:	f8cd a038 	str.w	sl, [sp, #56]	@ 0x38
1001e6bc:	4654      	mov	r4, sl
1001e6be:	46d4      	mov	ip, sl
1001e6c0:	f7ff bba7 	b.w	1001de12 <_strtod_l+0x24a>
1001e6c4:	f644 631f 	movw	r3, #19999	@ 0x4e1f
1001e6c8:	4299      	cmp	r1, r3
1001e6ca:	bfa8      	it	ge
1001e6cc:	4619      	movge	r1, r3
1001e6ce:	910f      	str	r1, [sp, #60]	@ 0x3c
1001e6d0:	e41e      	b.n	1001df10 <_strtod_l+0x348>
1001e6d2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1001e6d4:	4915      	ldr	r1, [pc, #84]	@ (1001e72c <_strtod_l+0xb64>)
1001e6d6:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
1001e6da:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001e6de:	e9d1 0100 	ldrd	r0, r1, [r1]
1001e6e2:	f002 f859 	bl	10020798 <__aeabi_dmul>
1001e6e6:	4680      	mov	r8, r0
1001e6e8:	4689      	mov	r9, r1
1001e6ea:	e648      	b.n	1001e37e <_strtod_l+0x7b6>
1001e6ec:	f3af 8000 	nop.w
1001e6f0:	94a03595 	.word	0x94a03595
1001e6f4:	3fcfffff 	.word	0x3fcfffff
1001e6f8:	94a03595 	.word	0x94a03595
1001e6fc:	3fdfffff 	.word	0x3fdfffff
1001e700:	35afe535 	.word	0x35afe535
1001e704:	3fe00000 	.word	0x3fe00000
1001e708:	3fe00000 	.word	0x3fe00000
1001e70c:	7ff00000 	.word	0x7ff00000
1001e710:	fffffbe2 	.word	0xfffffbe2
1001e714:	3ff00000 	.word	0x3ff00000
1001e718:	7c9fffff 	.word	0x7c9fffff
1001e71c:	7fefffff 	.word	0x7fefffff
1001e720:	bff00000 	.word	0xbff00000
1001e724:	10023c74 	.word	0x10023c74
1001e728:	10021508 	.word	0x10021508
1001e72c:	10023b88 	.word	0x10023b88
1001e730:	49a4      	ldr	r1, [pc, #656]	@ (1001e9c4 <_strtod_l+0xdfc>)
1001e732:	a819      	add	r0, sp, #100	@ 0x64
1001e734:	f001 fb8a 	bl	1001fe4c <__match>
1001e738:	2800      	cmp	r0, #0
1001e73a:	f43f ab43 	beq.w	1001ddc4 <_strtod_l+0x1fc>
1001e73e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001e740:	49a1      	ldr	r1, [pc, #644]	@ (1001e9c8 <_strtod_l+0xe00>)
1001e742:	3b01      	subs	r3, #1
1001e744:	a819      	add	r0, sp, #100	@ 0x64
1001e746:	9319      	str	r3, [sp, #100]	@ 0x64
1001e748:	f001 fb80 	bl	1001fe4c <__match>
1001e74c:	2800      	cmp	r0, #0
1001e74e:	d18d      	bne.n	1001e66c <_strtod_l+0xaa4>
1001e750:	9b19      	ldr	r3, [sp, #100]	@ 0x64
1001e752:	3301      	adds	r3, #1
1001e754:	9319      	str	r3, [sp, #100]	@ 0x64
1001e756:	e789      	b.n	1001e66c <_strtod_l+0xaa4>
1001e758:	e9dd 3412 	ldrd	r3, r4, [sp, #72]	@ 0x48
1001e75c:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
1001e760:	e544      	b.n	1001e1ec <_strtod_l+0x624>
1001e762:	2000      	movs	r0, #0
1001e764:	f7ff bae8 	b.w	1001dd38 <_strtod_l+0x170>
1001e768:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001e76a:	b13a      	cbz	r2, 1001e77c <_strtod_l+0xbb4>
1001e76c:	2135      	movs	r1, #53	@ 0x35
1001e76e:	a81c      	add	r0, sp, #112	@ 0x70
1001e770:	f7ff f8f2 	bl	1001d958 <__copybits>
1001e774:	991a      	ldr	r1, [sp, #104]	@ 0x68
1001e776:	4658      	mov	r0, fp
1001e778:	f7fe fc54 	bl	1001d024 <_Bfree>
1001e77c:	3d01      	subs	r5, #1
1001e77e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
1001e780:	2d04      	cmp	r5, #4
1001e782:	f200 81fc 	bhi.w	1001eb7e <_strtod_l+0xfb6>
1001e786:	e8df f005 	tbb	[pc, r5]
1001e78a:	2c03      	.short	0x2c03
1001e78c:	1e29      	.short	0x1e29
1001e78e:	03          	.byte	0x03
1001e78f:	00          	.byte	0x00
1001e790:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001e792:	9204      	str	r2, [sp, #16]
1001e794:	f203 4233 	addw	r2, r3, #1075	@ 0x433
1001e798:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001e79a:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
1001e79e:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
1001e7a2:	9305      	str	r3, [sp, #20]
1001e7a4:	05e1      	lsls	r1, r4, #23
1001e7a6:	d502      	bpl.n	1001e7ae <_strtod_l+0xbe6>
1001e7a8:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
1001e7ac:	9305      	str	r3, [sp, #20]
1001e7ae:	4a87      	ldr	r2, [pc, #540]	@ (1001e9cc <_strtod_l+0xe04>)
1001e7b0:	401a      	ands	r2, r3
1001e7b2:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001e7b6:	2a00      	cmp	r2, #0
1001e7b8:	f47f ade1 	bne.w	1001e37e <_strtod_l+0x7b6>
1001e7bc:	f7f9 fc86 	bl	100180cc <__errno>
1001e7c0:	2322      	movs	r3, #34	@ 0x22
1001e7c2:	6003      	str	r3, [r0, #0]
1001e7c4:	e5db      	b.n	1001e37e <_strtod_l+0x7b6>
1001e7c6:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001e7ca:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
1001e7ce:	e9cd 2304 	strd	r2, r3, [sp, #16]
1001e7d2:	05e3      	lsls	r3, r4, #23
1001e7d4:	f57f aed7 	bpl.w	1001e586 <_strtod_l+0x9be>
1001e7d8:	9b05      	ldr	r3, [sp, #20]
1001e7da:	e7e5      	b.n	1001e7a8 <_strtod_l+0xbe0>
1001e7dc:	4b7b      	ldr	r3, [pc, #492]	@ (1001e9cc <_strtod_l+0xe04>)
1001e7de:	9305      	str	r3, [sp, #20]
1001e7e0:	e7f7      	b.n	1001e7d2 <_strtod_l+0xc0a>
1001e7e2:	e9dd 121c 	ldrd	r1, r2, [sp, #112]	@ 0x70
1001e7e6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001e7e8:	e9cd 1204 	strd	r1, r2, [sp, #16]
1001e7ec:	e7da      	b.n	1001e7a4 <_strtod_l+0xbdc>
1001e7ee:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001e7f0:	4613      	mov	r3, r2
1001e7f2:	3201      	adds	r2, #1
1001e7f4:	9219      	str	r2, [sp, #100]	@ 0x64
1001e7f6:	785f      	ldrb	r7, [r3, #1]
1001e7f8:	4605      	mov	r5, r0
1001e7fa:	4681      	mov	r9, r0
1001e7fc:	f7ff ba8f 	b.w	1001dd1e <_strtod_l+0x156>
1001e800:	4d73      	ldr	r5, [pc, #460]	@ (1001e9d0 <_strtod_l+0xe08>)
1001e802:	f1c4 040f 	rsb	r4, r4, #15
1001e806:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
1001e80a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
1001e80e:	e9d1 0100 	ldrd	r0, r1, [r1]
1001e812:	f001 ffc1 	bl	10020798 <__aeabi_dmul>
1001e816:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001e818:	1b1c      	subs	r4, r3, r4
1001e81a:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
1001e81e:	e9d5 2300 	ldrd	r2, r3, [r5]
1001e822:	f001 ffb9 	bl	10020798 <__aeabi_dmul>
1001e826:	4680      	mov	r8, r0
1001e828:	4689      	mov	r9, r1
1001e82a:	e5a8      	b.n	1001e37e <_strtod_l+0x7b6>
1001e82c:	46a2      	mov	sl, r4
1001e82e:	900e      	str	r0, [sp, #56]	@ 0x38
1001e830:	f7ff ba98 	b.w	1001dd64 <_strtod_l+0x19c>
1001e834:	4c67      	ldr	r4, [pc, #412]	@ (1001e9d4 <_strtod_l+0xe0c>)
1001e836:	2300      	movs	r3, #0
1001e838:	e9cd 340c 	strd	r3, r4, [sp, #48]	@ 0x30
1001e83c:	4c66      	ldr	r4, [pc, #408]	@ (1001e9d8 <_strtod_l+0xe10>)
1001e83e:	2300      	movs	r3, #0
1001e840:	e9cd 3412 	strd	r3, r4, [sp, #72]	@ 0x48
1001e844:	e4a8      	b.n	1001e198 <_strtod_l+0x5d0>
1001e846:	980f      	ldr	r0, [sp, #60]	@ 0x3c
1001e848:	4964      	ldr	r1, [pc, #400]	@ (1001e9dc <_strtod_l+0xe14>)
1001e84a:	463b      	mov	r3, r7
1001e84c:	46c4      	mov	ip, r8
1001e84e:	464f      	mov	r7, r9
1001e850:	46ae      	mov	lr, r5
1001e852:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001e856:	f3c3 0213 	ubfx	r2, r3, #0, #20
1001e85a:	2800      	cmp	r0, #0
1001e85c:	d04c      	beq.n	1001e8f8 <_strtod_l+0xd30>
1001e85e:	428a      	cmp	r2, r1
1001e860:	f000 80fc 	beq.w	1001ea5c <_strtod_l+0xe94>
1001e864:	2d00      	cmp	r5, #0
1001e866:	f000 80f3 	beq.w	1001ea50 <_strtod_l+0xe88>
1001e86a:	421d      	tst	r5, r3
1001e86c:	d03b      	beq.n	1001e8e6 <_strtod_l+0xd1e>
1001e86e:	4640      	mov	r0, r8
1001e870:	4649      	mov	r1, r9
1001e872:	9304      	str	r3, [sp, #16]
1001e874:	f7fe ff62 	bl	1001d73c <__ulp>
1001e878:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e87a:	4604      	mov	r4, r0
1001e87c:	460d      	mov	r5, r1
1001e87e:	2b00      	cmp	r3, #0
1001e880:	f000 8128 	beq.w	1001ead4 <_strtod_l+0xf0c>
1001e884:	9b04      	ldr	r3, [sp, #16]
1001e886:	f3c3 530a 	ubfx	r3, r3, #20, #11
1001e88a:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
1001e88e:	2b00      	cmp	r3, #0
1001e890:	f340 8151 	ble.w	1001eb36 <_strtod_l+0xf6e>
1001e894:	051c      	lsls	r4, r3, #20
1001e896:	f104 537f 	add.w	r3, r4, #1069547520	@ 0x3fc00000
1001e89a:	2200      	movs	r2, #0
1001e89c:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
1001e8a0:	f001 ff7a 	bl	10020798 <__aeabi_dmul>
1001e8a4:	4602      	mov	r2, r0
1001e8a6:	460b      	mov	r3, r1
1001e8a8:	4640      	mov	r0, r8
1001e8aa:	4649      	mov	r1, r9
1001e8ac:	f001 fdbe 	bl	1002042c <__adddf3>
1001e8b0:	4680      	mov	r8, r0
1001e8b2:	4689      	mov	r9, r1
1001e8b4:	4b4a      	ldr	r3, [pc, #296]	@ (1001e9e0 <_strtod_l+0xe18>)
1001e8b6:	4640      	mov	r0, r8
1001e8b8:	4649      	mov	r1, r9
1001e8ba:	2200      	movs	r2, #0
1001e8bc:	f001 ff6c 	bl	10020798 <__aeabi_dmul>
1001e8c0:	4b42      	ldr	r3, [pc, #264]	@ (1001e9cc <_strtod_l+0xe04>)
1001e8c2:	400b      	ands	r3, r1
1001e8c4:	4680      	mov	r8, r0
1001e8c6:	4689      	mov	r9, r1
1001e8c8:	2b00      	cmp	r3, #0
1001e8ca:	f47f ae8a 	bne.w	1001e5e2 <_strtod_l+0xa1a>
1001e8ce:	2322      	movs	r3, #34	@ 0x22
1001e8d0:	f8cb 3000 	str.w	r3, [fp]
1001e8d4:	e685      	b.n	1001e5e2 <_strtod_l+0xa1a>
1001e8d6:	f1be 0f00 	cmp.w	lr, #0
1001e8da:	f000 8089 	beq.w	1001e9f0 <_strtod_l+0xe28>
1001e8de:	ea1e 0f03 	tst.w	lr, r3
1001e8e2:	f040 8089 	bne.w	1001e9f8 <_strtod_l+0xe30>
1001e8e6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e8e8:	2b00      	cmp	r3, #0
1001e8ea:	d1e3      	bne.n	1001e8b4 <_strtod_l+0xcec>
1001e8ec:	e679      	b.n	1001e5e2 <_strtod_l+0xa1a>
1001e8ee:	f102 7354 	add.w	r3, r2, #55574528	@ 0x3500000
1001e8f2:	9305      	str	r3, [sp, #20]
1001e8f4:	f7ff bbac 	b.w	1001e050 <_strtod_l+0x488>
1001e8f8:	2a00      	cmp	r2, #0
1001e8fa:	d175      	bne.n	1001e9e8 <_strtod_l+0xe20>
1001e8fc:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
1001e900:	4622      	mov	r2, r4
1001e902:	2c00      	cmp	r4, #0
1001e904:	d1e7      	bne.n	1001e8d6 <_strtod_l+0xd0e>
1001e906:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001e908:	2a00      	cmp	r2, #0
1001e90a:	f040 80be 	bne.w	1001ea8a <_strtod_l+0xec2>
1001e90e:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
1001e912:	0d24      	lsrs	r4, r4, #20
1001e914:	0524      	lsls	r4, r4, #20
1001e916:	f5a4 1480 	sub.w	r4, r4, #1048576	@ 0x100000
1001e91a:	ea6f 5314 	mvn.w	r3, r4, lsr #20
1001e91e:	ea6f 5303 	mvn.w	r3, r3, lsl #20
1001e922:	9305      	str	r3, [sp, #20]
1001e924:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001e928:	9304      	str	r3, [sp, #16]
1001e92a:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001e92e:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001e930:	e5bb      	b.n	1001e4aa <_strtod_l+0x8e2>
1001e932:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001e936:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001e938:	4303      	orrs	r3, r0
1001e93a:	464f      	mov	r7, r9
1001e93c:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001e940:	d1d1      	bne.n	1001e8e6 <_strtod_l+0xd1e>
1001e942:	f3c1 0313 	ubfx	r3, r1, #0, #20
1001e946:	2b00      	cmp	r3, #0
1001e948:	d1cd      	bne.n	1001e8e6 <_strtod_l+0xd1e>
1001e94a:	f021 4400 	bic.w	r4, r1, #2147483648	@ 0x80000000
1001e94e:	0d24      	lsrs	r4, r4, #20
1001e950:	0524      	lsls	r4, r4, #20
1001e952:	f1b4 6fd6 	cmp.w	r4, #112197632	@ 0x6b00000
1001e956:	4625      	mov	r5, r4
1001e958:	d9c5      	bls.n	1001e8e6 <_strtod_l+0xd1e>
1001e95a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001e95c:	6953      	ldr	r3, [r2, #20]
1001e95e:	b913      	cbnz	r3, 1001e966 <_strtod_l+0xd9e>
1001e960:	6913      	ldr	r3, [r2, #16]
1001e962:	2b01      	cmp	r3, #1
1001e964:	ddbf      	ble.n	1001e8e6 <_strtod_l+0xd1e>
1001e966:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001e968:	2201      	movs	r2, #1
1001e96a:	4658      	mov	r0, fp
1001e96c:	f7fe fd9c 	bl	1001d4a8 <__lshift>
1001e970:	4651      	mov	r1, sl
1001e972:	9009      	str	r0, [sp, #36]	@ 0x24
1001e974:	f7fe fe10 	bl	1001d598 <__mcmp>
1001e978:	2800      	cmp	r0, #0
1001e97a:	ddb4      	ble.n	1001e8e6 <_strtod_l+0xd1e>
1001e97c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001e97e:	2b00      	cmp	r3, #0
1001e980:	d0c9      	beq.n	1001e916 <_strtod_l+0xd4e>
1001e982:	f5a5 1380 	sub.w	r3, r5, #1048576	@ 0x100000
1001e986:	ea6f 5313 	mvn.w	r3, r3, lsr #20
1001e98a:	ea6f 5303 	mvn.w	r3, r3, lsl #20
1001e98e:	9305      	str	r3, [sp, #20]
1001e990:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001e994:	9304      	str	r3, [sp, #16]
1001e996:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001e99a:	e78b      	b.n	1001e8b4 <_strtod_l+0xcec>
1001e99c:	4911      	ldr	r1, [pc, #68]	@ (1001e9e4 <_strtod_l+0xe1c>)
1001e99e:	a819      	add	r0, sp, #100	@ 0x64
1001e9a0:	aa1c      	add	r2, sp, #112	@ 0x70
1001e9a2:	f001 fa6d 	bl	1001fe80 <__hexnan>
1001e9a6:	2805      	cmp	r0, #5
1001e9a8:	f47f aa56 	bne.w	1001de58 <_strtod_l+0x290>
1001e9ac:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001e9ae:	f043 43ff 	orr.w	r3, r3, #2139095040	@ 0x7f800000
1001e9b2:	f443 03e0 	orr.w	r3, r3, #7340032	@ 0x700000
1001e9b6:	9305      	str	r3, [sp, #20]
1001e9b8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001e9ba:	9304      	str	r3, [sp, #16]
1001e9bc:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001e9c0:	e4dd      	b.n	1001e37e <_strtod_l+0x7b6>
1001e9c2:	bf00      	nop
1001e9c4:	10023c50 	.word	0x10023c50
1001e9c8:	10023c54 	.word	0x10023c54
1001e9cc:	7ff00000 	.word	0x7ff00000
1001e9d0:	10023b88 	.word	0x10023b88
1001e9d4:	bfe00000 	.word	0xbfe00000
1001e9d8:	3fe00000 	.word	0x3fe00000
1001e9dc:	000fffff 	.word	0x000fffff
1001e9e0:	39500000 	.word	0x39500000
1001e9e4:	10023c60 	.word	0x10023c60
1001e9e8:	2d00      	cmp	r5, #0
1001e9ea:	f47f af78 	bne.w	1001e8de <_strtod_l+0xd16>
1001e9ee:	9a04      	ldr	r2, [sp, #16]
1001e9f0:	ea1c 0f02 	tst.w	ip, r2
1001e9f4:	f43f af77 	beq.w	1001e8e6 <_strtod_l+0xd1e>
1001e9f8:	4640      	mov	r0, r8
1001e9fa:	4649      	mov	r1, r9
1001e9fc:	9304      	str	r3, [sp, #16]
1001e9fe:	f7fe fe9d 	bl	1001d73c <__ulp>
1001ea02:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001ea04:	2b00      	cmp	r3, #0
1001ea06:	d053      	beq.n	1001eab0 <_strtod_l+0xee8>
1001ea08:	9b04      	ldr	r3, [sp, #16]
1001ea0a:	f3c3 530a 	ubfx	r3, r3, #20, #11
1001ea0e:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
1001ea12:	2b00      	cmp	r3, #0
1001ea14:	f340 809b 	ble.w	1001eb4e <_strtod_l+0xf86>
1001ea18:	051c      	lsls	r4, r3, #20
1001ea1a:	f104 537f 	add.w	r3, r4, #1069547520	@ 0x3fc00000
1001ea1e:	2200      	movs	r2, #0
1001ea20:	f503 1340 	add.w	r3, r3, #3145728	@ 0x300000
1001ea24:	f001 feb8 	bl	10020798 <__aeabi_dmul>
1001ea28:	4602      	mov	r2, r0
1001ea2a:	460b      	mov	r3, r1
1001ea2c:	4640      	mov	r0, r8
1001ea2e:	4649      	mov	r1, r9
1001ea30:	f001 fcfa 	bl	10020428 <__aeabi_dsub>
1001ea34:	2200      	movs	r2, #0
1001ea36:	2300      	movs	r3, #0
1001ea38:	4680      	mov	r8, r0
1001ea3a:	4689      	mov	r9, r1
1001ea3c:	f002 f914 	bl	10020c68 <__aeabi_dcmpeq>
1001ea40:	2800      	cmp	r0, #0
1001ea42:	f43f af37 	beq.w	1001e8b4 <_strtod_l+0xcec>
1001ea46:	e604      	b.n	1001e652 <_strtod_l+0xa8a>
1001ea48:	f04f 0900 	mov.w	r9, #0
1001ea4c:	f7ff bae1 	b.w	1001e012 <_strtod_l+0x44a>
1001ea50:	9a04      	ldr	r2, [sp, #16]
1001ea52:	ea1c 0f02 	tst.w	ip, r2
1001ea56:	f43f af46 	beq.w	1001e8e6 <_strtod_l+0xd1e>
1001ea5a:	e708      	b.n	1001e86e <_strtod_l+0xca6>
1001ea5c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001ea60:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001ea62:	4604      	mov	r4, r0
1001ea64:	2a00      	cmp	r2, #0
1001ea66:	d147      	bne.n	1001eaf8 <_strtod_l+0xf30>
1001ea68:	4602      	mov	r2, r0
1001ea6a:	3201      	adds	r2, #1
1001ea6c:	d077      	beq.n	1001eb5e <_strtod_l+0xf96>
1001ea6e:	2d00      	cmp	r5, #0
1001ea70:	d070      	beq.n	1001eb54 <_strtod_l+0xf8c>
1001ea72:	421d      	tst	r5, r3
1001ea74:	f43f adb5 	beq.w	1001e5e2 <_strtod_l+0xa1a>
1001ea78:	e6f9      	b.n	1001e86e <_strtod_l+0xca6>
1001ea7a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001ea7e:	fa02 f303 	lsl.w	r3, r2, r3
1001ea82:	9a04      	ldr	r2, [sp, #16]
1001ea84:	401a      	ands	r2, r3
1001ea86:	9204      	str	r2, [sp, #16]
1001ea88:	e467      	b.n	1001e35a <_strtod_l+0x792>
1001ea8a:	4d3e      	ldr	r5, [pc, #248]	@ (1001eb84 <_strtod_l+0xfbc>)
1001ea8c:	401d      	ands	r5, r3
1001ea8e:	f1b5 6fd6 	cmp.w	r5, #112197632	@ 0x6b00000
1001ea92:	f63f af76 	bhi.w	1001e982 <_strtod_l+0xdba>
1001ea96:	f1b5 7f5c 	cmp.w	r5, #57671680	@ 0x3700000
1001ea9a:	f63f af0b 	bhi.w	1001e8b4 <_strtod_l+0xcec>
1001ea9e:	2322      	movs	r3, #34	@ 0x22
1001eaa0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001eaa2:	f8cb 3000 	str.w	r3, [fp]
1001eaa6:	f04f 0800 	mov.w	r8, #0
1001eaaa:	f04f 0900 	mov.w	r9, #0
1001eaae:	e4fc      	b.n	1001e4aa <_strtod_l+0x8e2>
1001eab0:	4602      	mov	r2, r0
1001eab2:	460b      	mov	r3, r1
1001eab4:	4640      	mov	r0, r8
1001eab6:	4649      	mov	r1, r9
1001eab8:	f001 fcb6 	bl	10020428 <__aeabi_dsub>
1001eabc:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
1001eabe:	2200      	movs	r2, #0
1001eac0:	2300      	movs	r3, #0
1001eac2:	4680      	mov	r8, r0
1001eac4:	4689      	mov	r9, r1
1001eac6:	4625      	mov	r5, r4
1001eac8:	f002 f8ce 	bl	10020c68 <__aeabi_dcmpeq>
1001eacc:	2800      	cmp	r0, #0
1001eace:	f43f acec 	beq.w	1001e4aa <_strtod_l+0x8e2>
1001ead2:	e5bf      	b.n	1001e654 <_strtod_l+0xa8c>
1001ead4:	4640      	mov	r0, r8
1001ead6:	4649      	mov	r1, r9
1001ead8:	462b      	mov	r3, r5
1001eada:	4622      	mov	r2, r4
1001eadc:	f001 fca6 	bl	1002042c <__adddf3>
1001eae0:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
1001eae2:	4680      	mov	r8, r0
1001eae4:	4689      	mov	r9, r1
1001eae6:	e4e0      	b.n	1001e4aa <_strtod_l+0x8e2>
1001eae8:	f1c2 024b 	rsb	r2, r2, #75	@ 0x4b
1001eaec:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001eaf0:	4093      	lsls	r3, r2
1001eaf2:	400b      	ands	r3, r1
1001eaf4:	9305      	str	r3, [sp, #20]
1001eaf6:	e430      	b.n	1001e35a <_strtod_l+0x792>
1001eaf8:	4a22      	ldr	r2, [pc, #136]	@ (1001eb84 <_strtod_l+0xfbc>)
1001eafa:	401a      	ands	r2, r3
1001eafc:	f1b2 6fd4 	cmp.w	r2, #111149056	@ 0x6a00000
1001eb00:	d909      	bls.n	1001eb16 <_strtod_l+0xf4e>
1001eb02:	1c61      	adds	r1, r4, #1
1001eb04:	d032      	beq.n	1001eb6c <_strtod_l+0xfa4>
1001eb06:	f1be 0f00 	cmp.w	lr, #0
1001eb0a:	d033      	beq.n	1001eb74 <_strtod_l+0xfac>
1001eb0c:	ea1e 0f03 	tst.w	lr, r3
1001eb10:	f43f aed0 	beq.w	1001e8b4 <_strtod_l+0xcec>
1001eb14:	e6ab      	b.n	1001e86e <_strtod_l+0xca6>
1001eb16:	0d10      	lsrs	r0, r2, #20
1001eb18:	f1c0 006b 	rsb	r0, r0, #107	@ 0x6b
1001eb1c:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001eb20:	4081      	lsls	r1, r0
1001eb22:	428c      	cmp	r4, r1
1001eb24:	d1ef      	bne.n	1001eb06 <_strtod_l+0xf3e>
1001eb26:	f502 1380 	add.w	r3, r2, #1048576	@ 0x100000
1001eb2a:	9305      	str	r3, [sp, #20]
1001eb2c:	2300      	movs	r3, #0
1001eb2e:	9304      	str	r3, [sp, #16]
1001eb30:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
1001eb34:	e6d7      	b.n	1001e8e6 <_strtod_l+0xd1e>
1001eb36:	4640      	mov	r0, r8
1001eb38:	4649      	mov	r1, r9
1001eb3a:	4622      	mov	r2, r4
1001eb3c:	462b      	mov	r3, r5
1001eb3e:	f001 fc75 	bl	1002042c <__adddf3>
1001eb42:	4680      	mov	r8, r0
1001eb44:	4689      	mov	r9, r1
1001eb46:	e6b5      	b.n	1001e8b4 <_strtod_l+0xcec>
1001eb48:	4621      	mov	r1, r4
1001eb4a:	3401      	adds	r4, #1
1001eb4c:	e598      	b.n	1001e680 <_strtod_l+0xab8>
1001eb4e:	4602      	mov	r2, r0
1001eb50:	460b      	mov	r3, r1
1001eb52:	e76b      	b.n	1001ea2c <_strtod_l+0xe64>
1001eb54:	ea10 0f0c 	tst.w	r0, ip
1001eb58:	f43f ad43 	beq.w	1001e5e2 <_strtod_l+0xa1a>
1001eb5c:	e687      	b.n	1001e86e <_strtod_l+0xca6>
1001eb5e:	4a0a      	ldr	r2, [pc, #40]	@ (1001eb88 <_strtod_l+0xfc0>)
1001eb60:	4293      	cmp	r3, r2
1001eb62:	f43f acc5 	beq.w	1001e4f0 <_strtod_l+0x928>
1001eb66:	3201      	adds	r2, #1
1001eb68:	401a      	ands	r2, r3
1001eb6a:	e7dc      	b.n	1001eb26 <_strtod_l+0xf5e>
1001eb6c:	4906      	ldr	r1, [pc, #24]	@ (1001eb88 <_strtod_l+0xfc0>)
1001eb6e:	428b      	cmp	r3, r1
1001eb70:	d1d9      	bne.n	1001eb26 <_strtod_l+0xf5e>
1001eb72:	e4bd      	b.n	1001e4f0 <_strtod_l+0x928>
1001eb74:	ea14 0f0c 	tst.w	r4, ip
1001eb78:	f43f ae9c 	beq.w	1001e8b4 <_strtod_l+0xcec>
1001eb7c:	e677      	b.n	1001e86e <_strtod_l+0xca6>
1001eb7e:	2300      	movs	r3, #0
1001eb80:	e610      	b.n	1001e7a4 <_strtod_l+0xbdc>
1001eb82:	bf00      	nop
1001eb84:	7ff00000 	.word	0x7ff00000
1001eb88:	7fefffff 	.word	0x7fefffff

1001eb8c <_strtod_r>:
1001eb8c:	4b01      	ldr	r3, [pc, #4]	@ (1001eb94 <_strtod_r+0x8>)
1001eb8e:	f7ff b81b 	b.w	1001dbc8 <_strtod_l>
1001eb92:	bf00      	nop
1001eb94:	2000042c 	.word	0x2000042c

1001eb98 <_strtol_l.constprop.0>:
1001eb98:	2b24      	cmp	r3, #36	@ 0x24
1001eb9a:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001eb9e:	d843      	bhi.n	1001ec28 <_strtol_l.constprop.0+0x90>
1001eba0:	2b01      	cmp	r3, #1
1001eba2:	d041      	beq.n	1001ec28 <_strtol_l.constprop.0+0x90>
1001eba4:	4680      	mov	r8, r0
1001eba6:	4849      	ldr	r0, [pc, #292]	@ (1001eccc <_strtol_l.constprop.0+0x134>)
1001eba8:	461f      	mov	r7, r3
1001ebaa:	468e      	mov	lr, r1
1001ebac:	4675      	mov	r5, lr
1001ebae:	f81e bb01 	ldrb.w	fp, [lr], #1
1001ebb2:	f810 400b 	ldrb.w	r4, [r0, fp]
1001ebb6:	f014 0408 	ands.w	r4, r4, #8
1001ebba:	d1f7      	bne.n	1001ebac <_strtol_l.constprop.0+0x14>
1001ebbc:	f1bb 0f2d 	cmp.w	fp, #45	@ 0x2d
1001ebc0:	d06f      	beq.n	1001eca2 <_strtol_l.constprop.0+0x10a>
1001ebc2:	f1bb 0f2b 	cmp.w	fp, #43	@ 0x2b
1001ebc6:	bf08      	it	eq
1001ebc8:	f89e b000 	ldrbeq.w	fp, [lr]
1001ebcc:	f06f 4900 	mvn.w	r9, #2147483648	@ 0x80000000
1001ebd0:	bf08      	it	eq
1001ebd2:	f105 0e02 	addeq.w	lr, r5, #2
1001ebd6:	bb73      	cbnz	r3, 1001ec36 <_strtol_l.constprop.0+0x9e>
1001ebd8:	f1bb 0f30 	cmp.w	fp, #48	@ 0x30
1001ebdc:	d04b      	beq.n	1001ec76 <_strtol_l.constprop.0+0xde>
1001ebde:	270a      	movs	r7, #10
1001ebe0:	463b      	mov	r3, r7
1001ebe2:	2500      	movs	r5, #0
1001ebe4:	fbb9 f6f7 	udiv	r6, r9, r7
1001ebe8:	4628      	mov	r0, r5
1001ebea:	fb07 9a16 	mls	sl, r7, r6, r9
1001ebee:	e005      	b.n	1001ebfc <_strtol_l.constprop.0+0x64>
1001ebf0:	d03a      	beq.n	1001ec68 <_strtol_l.constprop.0+0xd0>
1001ebf2:	fb07 c000 	mla	r0, r7, r0, ip
1001ebf6:	2501      	movs	r5, #1
1001ebf8:	f81e bb01 	ldrb.w	fp, [lr], #1
1001ebfc:	f1ab 0c30 	sub.w	ip, fp, #48	@ 0x30
1001ec00:	f1bc 0f09 	cmp.w	ip, #9
1001ec04:	d906      	bls.n	1001ec14 <_strtol_l.constprop.0+0x7c>
1001ec06:	f1ab 0c41 	sub.w	ip, fp, #65	@ 0x41
1001ec0a:	f1bc 0f19 	cmp.w	ip, #25
1001ec0e:	d819      	bhi.n	1001ec44 <_strtol_l.constprop.0+0xac>
1001ec10:	f1ab 0c37 	sub.w	ip, fp, #55	@ 0x37
1001ec14:	4563      	cmp	r3, ip
1001ec16:	dd1e      	ble.n	1001ec56 <_strtol_l.constprop.0+0xbe>
1001ec18:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
1001ec1c:	d0ec      	beq.n	1001ebf8 <_strtol_l.constprop.0+0x60>
1001ec1e:	4286      	cmp	r6, r0
1001ec20:	d2e6      	bcs.n	1001ebf0 <_strtol_l.constprop.0+0x58>
1001ec22:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001ec26:	e7e7      	b.n	1001ebf8 <_strtol_l.constprop.0+0x60>
1001ec28:	f7f9 fa50 	bl	100180cc <__errno>
1001ec2c:	2316      	movs	r3, #22
1001ec2e:	6003      	str	r3, [r0, #0]
1001ec30:	2000      	movs	r0, #0
1001ec32:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001ec36:	2b10      	cmp	r3, #16
1001ec38:	d1d3      	bne.n	1001ebe2 <_strtol_l.constprop.0+0x4a>
1001ec3a:	f1bb 0f30 	cmp.w	fp, #48	@ 0x30
1001ec3e:	d023      	beq.n	1001ec88 <_strtol_l.constprop.0+0xf0>
1001ec40:	461f      	mov	r7, r3
1001ec42:	e7ce      	b.n	1001ebe2 <_strtol_l.constprop.0+0x4a>
1001ec44:	f1ab 0c61 	sub.w	ip, fp, #97	@ 0x61
1001ec48:	f1bc 0f19 	cmp.w	ip, #25
1001ec4c:	d803      	bhi.n	1001ec56 <_strtol_l.constprop.0+0xbe>
1001ec4e:	f1ab 0c57 	sub.w	ip, fp, #87	@ 0x57
1001ec52:	4563      	cmp	r3, ip
1001ec54:	dce0      	bgt.n	1001ec18 <_strtol_l.constprop.0+0x80>
1001ec56:	1c6b      	adds	r3, r5, #1
1001ec58:	d02b      	beq.n	1001ecb2 <_strtol_l.constprop.0+0x11a>
1001ec5a:	b954      	cbnz	r4, 1001ec72 <_strtol_l.constprop.0+0xda>
1001ec5c:	2a00      	cmp	r2, #0
1001ec5e:	d0e8      	beq.n	1001ec32 <_strtol_l.constprop.0+0x9a>
1001ec60:	bb85      	cbnz	r5, 1001ecc4 <_strtol_l.constprop.0+0x12c>
1001ec62:	6011      	str	r1, [r2, #0]
1001ec64:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001ec68:	45e2      	cmp	sl, ip
1001ec6a:	dac2      	bge.n	1001ebf2 <_strtol_l.constprop.0+0x5a>
1001ec6c:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001ec70:	e7c2      	b.n	1001ebf8 <_strtol_l.constprop.0+0x60>
1001ec72:	4240      	negs	r0, r0
1001ec74:	e7f2      	b.n	1001ec5c <_strtol_l.constprop.0+0xc4>
1001ec76:	f89e 3000 	ldrb.w	r3, [lr]
1001ec7a:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001ec7e:	2b58      	cmp	r3, #88	@ 0x58
1001ec80:	d008      	beq.n	1001ec94 <_strtol_l.constprop.0+0xfc>
1001ec82:	2708      	movs	r7, #8
1001ec84:	463b      	mov	r3, r7
1001ec86:	e7ac      	b.n	1001ebe2 <_strtol_l.constprop.0+0x4a>
1001ec88:	f89e 0000 	ldrb.w	r0, [lr]
1001ec8c:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
1001ec90:	2858      	cmp	r0, #88	@ 0x58
1001ec92:	d1d5      	bne.n	1001ec40 <_strtol_l.constprop.0+0xa8>
1001ec94:	2710      	movs	r7, #16
1001ec96:	f89e b001 	ldrb.w	fp, [lr, #1]
1001ec9a:	463b      	mov	r3, r7
1001ec9c:	f10e 0e02 	add.w	lr, lr, #2
1001eca0:	e79f      	b.n	1001ebe2 <_strtol_l.constprop.0+0x4a>
1001eca2:	f89e b000 	ldrb.w	fp, [lr]
1001eca6:	f04f 4900 	mov.w	r9, #2147483648	@ 0x80000000
1001ecaa:	f105 0e02 	add.w	lr, r5, #2
1001ecae:	2401      	movs	r4, #1
1001ecb0:	e791      	b.n	1001ebd6 <_strtol_l.constprop.0+0x3e>
1001ecb2:	2322      	movs	r3, #34	@ 0x22
1001ecb4:	f8c8 3000 	str.w	r3, [r8]
1001ecb8:	b132      	cbz	r2, 1001ecc8 <_strtol_l.constprop.0+0x130>
1001ecba:	f10e 31ff 	add.w	r1, lr, #4294967295	@ 0xffffffff
1001ecbe:	4648      	mov	r0, r9
1001ecc0:	6011      	str	r1, [r2, #0]
1001ecc2:	e7cf      	b.n	1001ec64 <_strtol_l.constprop.0+0xcc>
1001ecc4:	4681      	mov	r9, r0
1001ecc6:	e7f8      	b.n	1001ecba <_strtol_l.constprop.0+0x122>
1001ecc8:	4648      	mov	r0, r9
1001ecca:	e7b2      	b.n	1001ec32 <_strtol_l.constprop.0+0x9a>
1001eccc:	10023919 	.word	0x10023919

1001ecd0 <_strtol_r>:
1001ecd0:	f7ff bf62 	b.w	1001eb98 <_strtol_l.constprop.0>

1001ecd4 <_strtoul_l.constprop.0>:
1001ecd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1001ecd8:	4607      	mov	r7, r0
1001ecda:	4849      	ldr	r0, [pc, #292]	@ (1001ee00 <_strtoul_l.constprop.0+0x12c>)
1001ecdc:	460e      	mov	r6, r1
1001ecde:	4635      	mov	r5, r6
1001ece0:	f816 eb01 	ldrb.w	lr, [r6], #1
1001ece4:	f810 c00e 	ldrb.w	ip, [r0, lr]
1001ece8:	f01c 0c08 	ands.w	ip, ip, #8
1001ecec:	d1f7      	bne.n	1001ecde <_strtoul_l.constprop.0+0xa>
1001ecee:	f1be 0f2d 	cmp.w	lr, #45	@ 0x2d
1001ecf2:	d05a      	beq.n	1001edaa <_strtoul_l.constprop.0+0xd6>
1001ecf4:	f1be 0f2b 	cmp.w	lr, #43	@ 0x2b
1001ecf8:	bf03      	ittte	eq
1001ecfa:	f896 e000 	ldrbeq.w	lr, [r6]
1001ecfe:	4664      	moveq	r4, ip
1001ed00:	1cae      	addeq	r6, r5, #2
1001ed02:	4664      	movne	r4, ip
1001ed04:	b94b      	cbnz	r3, 1001ed1a <_strtoul_l.constprop.0+0x46>
1001ed06:	f1be 0f30 	cmp.w	lr, #48	@ 0x30
1001ed0a:	d05c      	beq.n	1001edc6 <_strtoul_l.constprop.0+0xf2>
1001ed0c:	230a      	movs	r3, #10
1001ed0e:	f8df 80f4 	ldr.w	r8, [pc, #244]	@ 1001ee04 <_strtoul_l.constprop.0+0x130>
1001ed12:	f04f 0a05 	mov.w	sl, #5
1001ed16:	4699      	mov	r9, r3
1001ed18:	e00a      	b.n	1001ed30 <_strtoul_l.constprop.0+0x5c>
1001ed1a:	2b10      	cmp	r3, #16
1001ed1c:	d04a      	beq.n	1001edb4 <_strtoul_l.constprop.0+0xe0>
1001ed1e:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1001ed22:	fbb8 f8f3 	udiv	r8, r8, r3
1001ed26:	fb03 fa08 	mul.w	sl, r3, r8
1001ed2a:	ea6f 0a0a 	mvn.w	sl, sl
1001ed2e:	4699      	mov	r9, r3
1001ed30:	2500      	movs	r5, #0
1001ed32:	4628      	mov	r0, r5
1001ed34:	e005      	b.n	1001ed42 <_strtoul_l.constprop.0+0x6e>
1001ed36:	d02c      	beq.n	1001ed92 <_strtoul_l.constprop.0+0xbe>
1001ed38:	fb09 c000 	mla	r0, r9, r0, ip
1001ed3c:	2501      	movs	r5, #1
1001ed3e:	f816 eb01 	ldrb.w	lr, [r6], #1
1001ed42:	f1ae 0c30 	sub.w	ip, lr, #48	@ 0x30
1001ed46:	f1bc 0f09 	cmp.w	ip, #9
1001ed4a:	d906      	bls.n	1001ed5a <_strtoul_l.constprop.0+0x86>
1001ed4c:	f1ae 0c41 	sub.w	ip, lr, #65	@ 0x41
1001ed50:	f1bc 0f19 	cmp.w	ip, #25
1001ed54:	d80b      	bhi.n	1001ed6e <_strtoul_l.constprop.0+0x9a>
1001ed56:	f1ae 0c37 	sub.w	ip, lr, #55	@ 0x37
1001ed5a:	4563      	cmp	r3, ip
1001ed5c:	dd10      	ble.n	1001ed80 <_strtoul_l.constprop.0+0xac>
1001ed5e:	f1b5 3fff 	cmp.w	r5, #4294967295	@ 0xffffffff
1001ed62:	d0ec      	beq.n	1001ed3e <_strtoul_l.constprop.0+0x6a>
1001ed64:	4540      	cmp	r0, r8
1001ed66:	d9e6      	bls.n	1001ed36 <_strtoul_l.constprop.0+0x62>
1001ed68:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001ed6c:	e7e7      	b.n	1001ed3e <_strtoul_l.constprop.0+0x6a>
1001ed6e:	f1ae 0c61 	sub.w	ip, lr, #97	@ 0x61
1001ed72:	f1bc 0f19 	cmp.w	ip, #25
1001ed76:	d803      	bhi.n	1001ed80 <_strtoul_l.constprop.0+0xac>
1001ed78:	f1ae 0c57 	sub.w	ip, lr, #87	@ 0x57
1001ed7c:	4563      	cmp	r3, ip
1001ed7e:	dcee      	bgt.n	1001ed5e <_strtoul_l.constprop.0+0x8a>
1001ed80:	1c6b      	adds	r3, r5, #1
1001ed82:	d00b      	beq.n	1001ed9c <_strtoul_l.constprop.0+0xc8>
1001ed84:	b104      	cbz	r4, 1001ed88 <_strtoul_l.constprop.0+0xb4>
1001ed86:	4240      	negs	r0, r0
1001ed88:	b10a      	cbz	r2, 1001ed8e <_strtoul_l.constprop.0+0xba>
1001ed8a:	b965      	cbnz	r5, 1001eda6 <_strtoul_l.constprop.0+0xd2>
1001ed8c:	6011      	str	r1, [r2, #0]
1001ed8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001ed92:	45d4      	cmp	ip, sl
1001ed94:	ddd0      	ble.n	1001ed38 <_strtoul_l.constprop.0+0x64>
1001ed96:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
1001ed9a:	e7d0      	b.n	1001ed3e <_strtoul_l.constprop.0+0x6a>
1001ed9c:	2322      	movs	r3, #34	@ 0x22
1001ed9e:	603b      	str	r3, [r7, #0]
1001eda0:	4628      	mov	r0, r5
1001eda2:	2a00      	cmp	r2, #0
1001eda4:	d0f3      	beq.n	1001ed8e <_strtoul_l.constprop.0+0xba>
1001eda6:	1e71      	subs	r1, r6, #1
1001eda8:	e7f0      	b.n	1001ed8c <_strtoul_l.constprop.0+0xb8>
1001edaa:	f896 e000 	ldrb.w	lr, [r6]
1001edae:	2401      	movs	r4, #1
1001edb0:	1cae      	adds	r6, r5, #2
1001edb2:	e7a7      	b.n	1001ed04 <_strtoul_l.constprop.0+0x30>
1001edb4:	f1be 0f30 	cmp.w	lr, #48	@ 0x30
1001edb8:	d011      	beq.n	1001edde <_strtoul_l.constprop.0+0x10a>
1001edba:	f04f 0a0f 	mov.w	sl, #15
1001edbe:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001edc2:	4699      	mov	r9, r3
1001edc4:	e7b4      	b.n	1001ed30 <_strtoul_l.constprop.0+0x5c>
1001edc6:	7833      	ldrb	r3, [r6, #0]
1001edc8:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001edcc:	2b58      	cmp	r3, #88	@ 0x58
1001edce:	d00b      	beq.n	1001ede8 <_strtoul_l.constprop.0+0x114>
1001edd0:	2308      	movs	r3, #8
1001edd2:	f04f 0a07 	mov.w	sl, #7
1001edd6:	f06f 4860 	mvn.w	r8, #3758096384	@ 0xe0000000
1001edda:	4699      	mov	r9, r3
1001eddc:	e7a8      	b.n	1001ed30 <_strtoul_l.constprop.0+0x5c>
1001edde:	7830      	ldrb	r0, [r6, #0]
1001ede0:	f000 00df 	and.w	r0, r0, #223	@ 0xdf
1001ede4:	2858      	cmp	r0, #88	@ 0x58
1001ede6:	d1e8      	bne.n	1001edba <_strtoul_l.constprop.0+0xe6>
1001ede8:	f04f 0910 	mov.w	r9, #16
1001edec:	f896 e001 	ldrb.w	lr, [r6, #1]
1001edf0:	f04f 0a0f 	mov.w	sl, #15
1001edf4:	3602      	adds	r6, #2
1001edf6:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001edfa:	464b      	mov	r3, r9
1001edfc:	e798      	b.n	1001ed30 <_strtoul_l.constprop.0+0x5c>
1001edfe:	bf00      	nop
1001ee00:	10023919 	.word	0x10023919
1001ee04:	19999999 	.word	0x19999999

1001ee08 <_strtoul_r>:
1001ee08:	f7ff bf64 	b.w	1001ecd4 <_strtoul_l.constprop.0>

1001ee0c <sprintf>:
1001ee0c:	b40e      	push	{r1, r2, r3}
1001ee0e:	b510      	push	{r4, lr}
1001ee10:	b09d      	sub	sp, #116	@ 0x74
1001ee12:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
1001ee16:	ab1f      	add	r3, sp, #124	@ 0x7c
1001ee18:	9104      	str	r1, [sp, #16]
1001ee1a:	9107      	str	r1, [sp, #28]
1001ee1c:	4909      	ldr	r1, [pc, #36]	@ (1001ee44 <sprintf+0x38>)
1001ee1e:	f853 2b04 	ldr.w	r2, [r3], #4
1001ee22:	9002      	str	r0, [sp, #8]
1001ee24:	9006      	str	r0, [sp, #24]
1001ee26:	4c08      	ldr	r4, [pc, #32]	@ (1001ee48 <sprintf+0x3c>)
1001ee28:	6808      	ldr	r0, [r1, #0]
1001ee2a:	9301      	str	r3, [sp, #4]
1001ee2c:	a902      	add	r1, sp, #8
1001ee2e:	9405      	str	r4, [sp, #20]
1001ee30:	f7fa fe1a 	bl	10019a68 <_svfprintf_r>
1001ee34:	9b02      	ldr	r3, [sp, #8]
1001ee36:	2200      	movs	r2, #0
1001ee38:	701a      	strb	r2, [r3, #0]
1001ee3a:	b01d      	add	sp, #116	@ 0x74
1001ee3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001ee40:	b003      	add	sp, #12
1001ee42:	4770      	bx	lr
1001ee44:	20000598 	.word	0x20000598
1001ee48:	ffff0208 	.word	0xffff0208

1001ee4c <__ascii_wctomb>:
1001ee4c:	b149      	cbz	r1, 1001ee62 <__ascii_wctomb+0x16>
1001ee4e:	2aff      	cmp	r2, #255	@ 0xff
1001ee50:	d802      	bhi.n	1001ee58 <__ascii_wctomb+0xc>
1001ee52:	700a      	strb	r2, [r1, #0]
1001ee54:	2001      	movs	r0, #1
1001ee56:	4770      	bx	lr
1001ee58:	238a      	movs	r3, #138	@ 0x8a
1001ee5a:	6003      	str	r3, [r0, #0]
1001ee5c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001ee60:	4770      	bx	lr
1001ee62:	4608      	mov	r0, r1
1001ee64:	4770      	bx	lr
1001ee66:	bf00      	nop

1001ee68 <__swbuf_r>:
1001ee68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001ee6a:	460d      	mov	r5, r1
1001ee6c:	4614      	mov	r4, r2
1001ee6e:	4606      	mov	r6, r0
1001ee70:	b110      	cbz	r0, 1001ee78 <__swbuf_r+0x10>
1001ee72:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001ee74:	2b00      	cmp	r3, #0
1001ee76:	d04a      	beq.n	1001ef0e <__swbuf_r+0xa6>
1001ee78:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001ee7c:	69a3      	ldr	r3, [r4, #24]
1001ee7e:	60a3      	str	r3, [r4, #8]
1001ee80:	0710      	lsls	r0, r2, #28
1001ee82:	d51b      	bpl.n	1001eebc <__swbuf_r+0x54>
1001ee84:	6923      	ldr	r3, [r4, #16]
1001ee86:	b1cb      	cbz	r3, 1001eebc <__swbuf_r+0x54>
1001ee88:	b2ed      	uxtb	r5, r5
1001ee8a:	0491      	lsls	r1, r2, #18
1001ee8c:	462f      	mov	r7, r5
1001ee8e:	d521      	bpl.n	1001eed4 <__swbuf_r+0x6c>
1001ee90:	6822      	ldr	r2, [r4, #0]
1001ee92:	6961      	ldr	r1, [r4, #20]
1001ee94:	1ad3      	subs	r3, r2, r3
1001ee96:	4299      	cmp	r1, r3
1001ee98:	dd28      	ble.n	1001eeec <__swbuf_r+0x84>
1001ee9a:	3301      	adds	r3, #1
1001ee9c:	68a1      	ldr	r1, [r4, #8]
1001ee9e:	3901      	subs	r1, #1
1001eea0:	60a1      	str	r1, [r4, #8]
1001eea2:	1c51      	adds	r1, r2, #1
1001eea4:	6021      	str	r1, [r4, #0]
1001eea6:	7015      	strb	r5, [r2, #0]
1001eea8:	6962      	ldr	r2, [r4, #20]
1001eeaa:	429a      	cmp	r2, r3
1001eeac:	d026      	beq.n	1001eefc <__swbuf_r+0x94>
1001eeae:	89a3      	ldrh	r3, [r4, #12]
1001eeb0:	07db      	lsls	r3, r3, #31
1001eeb2:	d501      	bpl.n	1001eeb8 <__swbuf_r+0x50>
1001eeb4:	2d0a      	cmp	r5, #10
1001eeb6:	d021      	beq.n	1001eefc <__swbuf_r+0x94>
1001eeb8:	4638      	mov	r0, r7
1001eeba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001eebc:	4621      	mov	r1, r4
1001eebe:	4630      	mov	r0, r6
1001eec0:	f7f8 fe88 	bl	10017bd4 <__swsetup_r>
1001eec4:	bb00      	cbnz	r0, 1001ef08 <__swbuf_r+0xa0>
1001eec6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001eeca:	6923      	ldr	r3, [r4, #16]
1001eecc:	b2ed      	uxtb	r5, r5
1001eece:	0491      	lsls	r1, r2, #18
1001eed0:	462f      	mov	r7, r5
1001eed2:	d4dd      	bmi.n	1001ee90 <__swbuf_r+0x28>
1001eed4:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
1001eed8:	81a2      	strh	r2, [r4, #12]
1001eeda:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001eedc:	6961      	ldr	r1, [r4, #20]
1001eede:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
1001eee2:	6662      	str	r2, [r4, #100]	@ 0x64
1001eee4:	6822      	ldr	r2, [r4, #0]
1001eee6:	1ad3      	subs	r3, r2, r3
1001eee8:	4299      	cmp	r1, r3
1001eeea:	dcd6      	bgt.n	1001ee9a <__swbuf_r+0x32>
1001eeec:	4621      	mov	r1, r4
1001eeee:	4630      	mov	r0, r6
1001eef0:	f7f8 faae 	bl	10017450 <_fflush_r>
1001eef4:	b940      	cbnz	r0, 1001ef08 <__swbuf_r+0xa0>
1001eef6:	6822      	ldr	r2, [r4, #0]
1001eef8:	2301      	movs	r3, #1
1001eefa:	e7cf      	b.n	1001ee9c <__swbuf_r+0x34>
1001eefc:	4621      	mov	r1, r4
1001eefe:	4630      	mov	r0, r6
1001ef00:	f7f8 faa6 	bl	10017450 <_fflush_r>
1001ef04:	2800      	cmp	r0, #0
1001ef06:	d0d7      	beq.n	1001eeb8 <__swbuf_r+0x50>
1001ef08:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001ef0c:	e7d4      	b.n	1001eeb8 <__swbuf_r+0x50>
1001ef0e:	f7f8 fc97 	bl	10017840 <__sinit>
1001ef12:	e7b1      	b.n	1001ee78 <__swbuf_r+0x10>

1001ef14 <strncmp>:
1001ef14:	b3b2      	cbz	r2, 1001ef84 <strncmp+0x70>
1001ef16:	ea40 0301 	orr.w	r3, r0, r1
1001ef1a:	079b      	lsls	r3, r3, #30
1001ef1c:	b530      	push	{r4, r5, lr}
1001ef1e:	4684      	mov	ip, r0
1001ef20:	d118      	bne.n	1001ef54 <strncmp+0x40>
1001ef22:	2a03      	cmp	r2, #3
1001ef24:	d916      	bls.n	1001ef54 <strncmp+0x40>
1001ef26:	4604      	mov	r4, r0
1001ef28:	460b      	mov	r3, r1
1001ef2a:	e006      	b.n	1001ef3a <strncmp+0x26>
1001ef2c:	3a04      	subs	r2, #4
1001ef2e:	d02b      	beq.n	1001ef88 <strncmp+0x74>
1001ef30:	f01e 3f80 	tst.w	lr, #2155905152	@ 0x80808080
1001ef34:	d128      	bne.n	1001ef88 <strncmp+0x74>
1001ef36:	2a03      	cmp	r2, #3
1001ef38:	d92a      	bls.n	1001ef90 <strncmp+0x7c>
1001ef3a:	6820      	ldr	r0, [r4, #0]
1001ef3c:	4619      	mov	r1, r3
1001ef3e:	f853 5b04 	ldr.w	r5, [r3], #4
1001ef42:	f1a0 3e01 	sub.w	lr, r0, #16843009	@ 0x1010101
1001ef46:	42a8      	cmp	r0, r5
1001ef48:	46a4      	mov	ip, r4
1001ef4a:	ea2e 0e00 	bic.w	lr, lr, r0
1001ef4e:	f104 0404 	add.w	r4, r4, #4
1001ef52:	d0eb      	beq.n	1001ef2c <strncmp+0x18>
1001ef54:	f89c 0000 	ldrb.w	r0, [ip]
1001ef58:	780c      	ldrb	r4, [r1, #0]
1001ef5a:	4284      	cmp	r4, r0
1001ef5c:	d116      	bne.n	1001ef8c <strncmp+0x78>
1001ef5e:	2a01      	cmp	r2, #1
1001ef60:	d012      	beq.n	1001ef88 <strncmp+0x74>
1001ef62:	46e6      	mov	lr, ip
1001ef64:	b168      	cbz	r0, 1001ef82 <strncmp+0x6e>
1001ef66:	f81e 0f01 	ldrb.w	r0, [lr, #1]!
1001ef6a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
1001ef6e:	eba2 030e 	sub.w	r3, r2, lr
1001ef72:	42a0      	cmp	r0, r4
1001ef74:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
1001ef78:	d108      	bne.n	1001ef8c <strncmp+0x78>
1001ef7a:	eb1c 0303 	adds.w	r3, ip, r3
1001ef7e:	d1f1      	bne.n	1001ef64 <strncmp+0x50>
1001ef80:	4618      	mov	r0, r3
1001ef82:	bd30      	pop	{r4, r5, pc}
1001ef84:	4610      	mov	r0, r2
1001ef86:	4770      	bx	lr
1001ef88:	2000      	movs	r0, #0
1001ef8a:	bd30      	pop	{r4, r5, pc}
1001ef8c:	1b00      	subs	r0, r0, r4
1001ef8e:	bd30      	pop	{r4, r5, pc}
1001ef90:	46a4      	mov	ip, r4
1001ef92:	4619      	mov	r1, r3
1001ef94:	e7de      	b.n	1001ef54 <strncmp+0x40>
1001ef96:	bf00      	nop

1001ef98 <stpncpy>:
1001ef98:	ea41 0300 	orr.w	r3, r1, r0
1001ef9c:	079b      	lsls	r3, r3, #30
1001ef9e:	b410      	push	{r4}
1001efa0:	d101      	bne.n	1001efa6 <stpncpy+0xe>
1001efa2:	2a03      	cmp	r2, #3
1001efa4:	d81a      	bhi.n	1001efdc <stpncpy+0x44>
1001efa6:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
1001efaa:	e007      	b.n	1001efbc <stpncpy+0x24>
1001efac:	f81c 1f01 	ldrb.w	r1, [ip, #1]!
1001efb0:	f803 1b01 	strb.w	r1, [r3], #1
1001efb4:	1e54      	subs	r4, r2, #1
1001efb6:	b131      	cbz	r1, 1001efc6 <stpncpy+0x2e>
1001efb8:	4622      	mov	r2, r4
1001efba:	4618      	mov	r0, r3
1001efbc:	4603      	mov	r3, r0
1001efbe:	2a00      	cmp	r2, #0
1001efc0:	d1f4      	bne.n	1001efac <stpncpy+0x14>
1001efc2:	bc10      	pop	{r4}
1001efc4:	4770      	bx	lr
1001efc6:	4402      	add	r2, r0
1001efc8:	b1f4      	cbz	r4, 1001f008 <stpncpy+0x70>
1001efca:	f803 1b01 	strb.w	r1, [r3], #1
1001efce:	4293      	cmp	r3, r2
1001efd0:	d1fb      	bne.n	1001efca <stpncpy+0x32>
1001efd2:	2800      	cmp	r0, #0
1001efd4:	bf08      	it	eq
1001efd6:	4610      	moveq	r0, r2
1001efd8:	bc10      	pop	{r4}
1001efda:	4770      	bx	lr
1001efdc:	468c      	mov	ip, r1
1001efde:	e004      	b.n	1001efea <stpncpy+0x52>
1001efe0:	3a04      	subs	r2, #4
1001efe2:	2a03      	cmp	r2, #3
1001efe4:	f840 4b04 	str.w	r4, [r0], #4
1001efe8:	d90c      	bls.n	1001f004 <stpncpy+0x6c>
1001efea:	f8dc 4000 	ldr.w	r4, [ip]
1001efee:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
1001eff2:	ea23 0304 	bic.w	r3, r3, r4
1001eff6:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
1001effa:	4661      	mov	r1, ip
1001effc:	f10c 0c04 	add.w	ip, ip, #4
1001f000:	d0ee      	beq.n	1001efe0 <stpncpy+0x48>
1001f002:	e7d0      	b.n	1001efa6 <stpncpy+0xe>
1001f004:	4661      	mov	r1, ip
1001f006:	e7ce      	b.n	1001efa6 <stpncpy+0xe>
1001f008:	461a      	mov	r2, r3
1001f00a:	e7e2      	b.n	1001efd2 <stpncpy+0x3a>

1001f00c <_isatty_r>:
1001f00c:	b538      	push	{r3, r4, r5, lr}
1001f00e:	4d07      	ldr	r5, [pc, #28]	@ (1001f02c <_isatty_r+0x20>)
1001f010:	2200      	movs	r2, #0
1001f012:	4604      	mov	r4, r0
1001f014:	4608      	mov	r0, r1
1001f016:	602a      	str	r2, [r5, #0]
1001f018:	f7f2 fd22 	bl	10011a60 <_isatty>
1001f01c:	1c43      	adds	r3, r0, #1
1001f01e:	d000      	beq.n	1001f022 <_isatty_r+0x16>
1001f020:	bd38      	pop	{r3, r4, r5, pc}
1001f022:	682b      	ldr	r3, [r5, #0]
1001f024:	2b00      	cmp	r3, #0
1001f026:	d0fb      	beq.n	1001f020 <_isatty_r+0x14>
1001f028:	6023      	str	r3, [r4, #0]
1001f02a:	bd38      	pop	{r3, r4, r5, pc}
1001f02c:	200015c4 	.word	0x200015c4

1001f030 <_strtoll_l.constprop.0>:
1001f030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001f034:	b085      	sub	sp, #20
1001f036:	4692      	mov	sl, r2
1001f038:	4a5b      	ldr	r2, [pc, #364]	@ (1001f1a8 <_strtoll_l.constprop.0+0x178>)
1001f03a:	9003      	str	r0, [sp, #12]
1001f03c:	4689      	mov	r9, r1
1001f03e:	461e      	mov	r6, r3
1001f040:	460d      	mov	r5, r1
1001f042:	4629      	mov	r1, r5
1001f044:	f815 4b01 	ldrb.w	r4, [r5], #1
1001f048:	5d13      	ldrb	r3, [r2, r4]
1001f04a:	f013 0308 	ands.w	r3, r3, #8
1001f04e:	d1f8      	bne.n	1001f042 <_strtoll_l.constprop.0+0x12>
1001f050:	2c2d      	cmp	r4, #45	@ 0x2d
1001f052:	d07d      	beq.n	1001f150 <_strtoll_l.constprop.0+0x120>
1001f054:	2c2b      	cmp	r4, #43	@ 0x2b
1001f056:	d041      	beq.n	1001f0dc <_strtoll_l.constprop.0+0xac>
1001f058:	9302      	str	r3, [sp, #8]
1001f05a:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001f05e:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
1001f062:	e9cd 2300 	strd	r2, r3, [sp]
1001f066:	2e00      	cmp	r6, #0
1001f068:	d143      	bne.n	1001f0f2 <_strtoll_l.constprop.0+0xc2>
1001f06a:	2c30      	cmp	r4, #48	@ 0x30
1001f06c:	d079      	beq.n	1001f162 <_strtoll_l.constprop.0+0x132>
1001f06e:	270a      	movs	r7, #10
1001f070:	46b0      	mov	r8, r6
1001f072:	463e      	mov	r6, r7
1001f074:	e9dd 0100 	ldrd	r0, r1, [sp]
1001f078:	463a      	mov	r2, r7
1001f07a:	4643      	mov	r3, r8
1001f07c:	f001 fed4 	bl	10020e28 <__aeabi_uldivmod>
1001f080:	2300      	movs	r3, #0
1001f082:	468e      	mov	lr, r1
1001f084:	4683      	mov	fp, r0
1001f086:	4619      	mov	r1, r3
1001f088:	4618      	mov	r0, r3
1001f08a:	46a4      	mov	ip, r4
1001f08c:	e010      	b.n	1001f0b0 <_strtoll_l.constprop.0+0x80>
1001f08e:	458e      	cmp	lr, r1
1001f090:	bf08      	it	eq
1001f092:	4583      	cmpeq	fp, r0
1001f094:	d04c      	beq.n	1001f130 <_strtoll_l.constprop.0+0x100>
1001f096:	fb00 f308 	mul.w	r3, r0, r8
1001f09a:	fb07 3301 	mla	r3, r7, r1, r3
1001f09e:	fba0 0107 	umull	r0, r1, r0, r7
1001f0a2:	440b      	add	r3, r1
1001f0a4:	1820      	adds	r0, r4, r0
1001f0a6:	eb43 71e4 	adc.w	r1, r3, r4, asr #31
1001f0aa:	2301      	movs	r3, #1
1001f0ac:	f815 cb01 	ldrb.w	ip, [r5], #1
1001f0b0:	f1ac 0430 	sub.w	r4, ip, #48	@ 0x30
1001f0b4:	2c09      	cmp	r4, #9
1001f0b6:	d905      	bls.n	1001f0c4 <_strtoll_l.constprop.0+0x94>
1001f0b8:	f1ac 0441 	sub.w	r4, ip, #65	@ 0x41
1001f0bc:	2c19      	cmp	r4, #25
1001f0be:	d81e      	bhi.n	1001f0fe <_strtoll_l.constprop.0+0xce>
1001f0c0:	f1ac 0437 	sub.w	r4, ip, #55	@ 0x37
1001f0c4:	42a6      	cmp	r6, r4
1001f0c6:	dd22      	ble.n	1001f10e <_strtoll_l.constprop.0+0xde>
1001f0c8:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
1001f0cc:	d0ee      	beq.n	1001f0ac <_strtoll_l.constprop.0+0x7c>
1001f0ce:	4583      	cmp	fp, r0
1001f0d0:	eb7e 0301 	sbcs.w	r3, lr, r1
1001f0d4:	d2db      	bcs.n	1001f08e <_strtoll_l.constprop.0+0x5e>
1001f0d6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001f0da:	e7e7      	b.n	1001f0ac <_strtoll_l.constprop.0+0x7c>
1001f0dc:	782c      	ldrb	r4, [r5, #0]
1001f0de:	9302      	str	r3, [sp, #8]
1001f0e0:	1c8d      	adds	r5, r1, #2
1001f0e2:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
1001f0e6:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001f0ea:	e9cd 1300 	strd	r1, r3, [sp]
1001f0ee:	2e00      	cmp	r6, #0
1001f0f0:	d0bb      	beq.n	1001f06a <_strtoll_l.constprop.0+0x3a>
1001f0f2:	2e10      	cmp	r6, #16
1001f0f4:	d03e      	beq.n	1001f174 <_strtoll_l.constprop.0+0x144>
1001f0f6:	4637      	mov	r7, r6
1001f0f8:	ea4f 78e6 	mov.w	r8, r6, asr #31
1001f0fc:	e7ba      	b.n	1001f074 <_strtoll_l.constprop.0+0x44>
1001f0fe:	f1ac 0461 	sub.w	r4, ip, #97	@ 0x61
1001f102:	2c19      	cmp	r4, #25
1001f104:	d803      	bhi.n	1001f10e <_strtoll_l.constprop.0+0xde>
1001f106:	f1ac 0457 	sub.w	r4, ip, #87	@ 0x57
1001f10a:	42a6      	cmp	r6, r4
1001f10c:	dcdc      	bgt.n	1001f0c8 <_strtoll_l.constprop.0+0x98>
1001f10e:	1c5a      	adds	r2, r3, #1
1001f110:	d013      	beq.n	1001f13a <_strtoll_l.constprop.0+0x10a>
1001f112:	9a02      	ldr	r2, [sp, #8]
1001f114:	b112      	cbz	r2, 1001f11c <_strtoll_l.constprop.0+0xec>
1001f116:	4240      	negs	r0, r0
1001f118:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001f11c:	f1ba 0f00 	cmp.w	sl, #0
1001f120:	d003      	beq.n	1001f12a <_strtoll_l.constprop.0+0xfa>
1001f122:	2b00      	cmp	r3, #0
1001f124:	d13d      	bne.n	1001f1a2 <_strtoll_l.constprop.0+0x172>
1001f126:	f8ca 9000 	str.w	r9, [sl]
1001f12a:	b005      	add	sp, #20
1001f12c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f130:	42a2      	cmp	r2, r4
1001f132:	dab0      	bge.n	1001f096 <_strtoll_l.constprop.0+0x66>
1001f134:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001f138:	e7b8      	b.n	1001f0ac <_strtoll_l.constprop.0+0x7c>
1001f13a:	9a03      	ldr	r2, [sp, #12]
1001f13c:	2322      	movs	r3, #34	@ 0x22
1001f13e:	6013      	str	r3, [r2, #0]
1001f140:	f1ba 0f00 	cmp.w	sl, #0
1001f144:	d028      	beq.n	1001f198 <_strtoll_l.constprop.0+0x168>
1001f146:	e9dd 0100 	ldrd	r0, r1, [sp]
1001f14a:	f105 39ff 	add.w	r9, r5, #4294967295	@ 0xffffffff
1001f14e:	e7ea      	b.n	1001f126 <_strtoll_l.constprop.0+0xf6>
1001f150:	9300      	str	r3, [sp, #0]
1001f152:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
1001f156:	2301      	movs	r3, #1
1001f158:	782c      	ldrb	r4, [r5, #0]
1001f15a:	e9cd 0301 	strd	r0, r3, [sp, #4]
1001f15e:	1c8d      	adds	r5, r1, #2
1001f160:	e781      	b.n	1001f066 <_strtoll_l.constprop.0+0x36>
1001f162:	782b      	ldrb	r3, [r5, #0]
1001f164:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001f168:	2b58      	cmp	r3, #88	@ 0x58
1001f16a:	d00e      	beq.n	1001f18a <_strtoll_l.constprop.0+0x15a>
1001f16c:	2708      	movs	r7, #8
1001f16e:	46b0      	mov	r8, r6
1001f170:	463e      	mov	r6, r7
1001f172:	e77f      	b.n	1001f074 <_strtoll_l.constprop.0+0x44>
1001f174:	2c30      	cmp	r4, #48	@ 0x30
1001f176:	d003      	beq.n	1001f180 <_strtoll_l.constprop.0+0x150>
1001f178:	4637      	mov	r7, r6
1001f17a:	f04f 0800 	mov.w	r8, #0
1001f17e:	e779      	b.n	1001f074 <_strtoll_l.constprop.0+0x44>
1001f180:	782b      	ldrb	r3, [r5, #0]
1001f182:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001f186:	2b58      	cmp	r3, #88	@ 0x58
1001f188:	d1f6      	bne.n	1001f178 <_strtoll_l.constprop.0+0x148>
1001f18a:	2710      	movs	r7, #16
1001f18c:	786c      	ldrb	r4, [r5, #1]
1001f18e:	f04f 0800 	mov.w	r8, #0
1001f192:	3502      	adds	r5, #2
1001f194:	463e      	mov	r6, r7
1001f196:	e76d      	b.n	1001f074 <_strtoll_l.constprop.0+0x44>
1001f198:	e9dd 0100 	ldrd	r0, r1, [sp]
1001f19c:	b005      	add	sp, #20
1001f19e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f1a2:	e9cd 0100 	strd	r0, r1, [sp]
1001f1a6:	e7ce      	b.n	1001f146 <_strtoll_l.constprop.0+0x116>
1001f1a8:	10023919 	.word	0x10023919

1001f1ac <_strtoll_r>:
1001f1ac:	f7ff bf40 	b.w	1001f030 <_strtoll_l.constprop.0>

1001f1b0 <__libc_fini_array>:
1001f1b0:	b538      	push	{r3, r4, r5, lr}
1001f1b2:	4d07      	ldr	r5, [pc, #28]	@ (1001f1d0 <__libc_fini_array+0x20>)
1001f1b4:	4c07      	ldr	r4, [pc, #28]	@ (1001f1d4 <__libc_fini_array+0x24>)
1001f1b6:	1b2c      	subs	r4, r5, r4
1001f1b8:	10a4      	asrs	r4, r4, #2
1001f1ba:	d005      	beq.n	1001f1c8 <__libc_fini_array+0x18>
1001f1bc:	3c01      	subs	r4, #1
1001f1be:	f855 3d04 	ldr.w	r3, [r5, #-4]!
1001f1c2:	4798      	blx	r3
1001f1c4:	2c00      	cmp	r4, #0
1001f1c6:	d1f9      	bne.n	1001f1bc <__libc_fini_array+0xc>
1001f1c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001f1cc:	f00b bbac 	b.w	1002a928 <_fini>
1001f1d0:	20000bcc 	.word	0x20000bcc
1001f1d4:	20000bc8 	.word	0x20000bc8

1001f1d8 <_strtoull_l.constprop.0>:
1001f1d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001f1dc:	b085      	sub	sp, #20
1001f1de:	468b      	mov	fp, r1
1001f1e0:	9201      	str	r2, [sp, #4]
1001f1e2:	4a60      	ldr	r2, [pc, #384]	@ (1001f364 <_strtoull_l.constprop.0+0x18c>)
1001f1e4:	9003      	str	r0, [sp, #12]
1001f1e6:	461e      	mov	r6, r3
1001f1e8:	460d      	mov	r5, r1
1001f1ea:	4629      	mov	r1, r5
1001f1ec:	f815 4b01 	ldrb.w	r4, [r5], #1
1001f1f0:	5d13      	ldrb	r3, [r2, r4]
1001f1f2:	f013 0308 	ands.w	r3, r3, #8
1001f1f6:	d1f8      	bne.n	1001f1ea <_strtoull_l.constprop.0+0x12>
1001f1f8:	2c2d      	cmp	r4, #45	@ 0x2d
1001f1fa:	d07e      	beq.n	1001f2fa <_strtoull_l.constprop.0+0x122>
1001f1fc:	2c2b      	cmp	r4, #43	@ 0x2b
1001f1fe:	bf03      	ittte	eq
1001f200:	782c      	ldrbeq	r4, [r5, #0]
1001f202:	9302      	streq	r3, [sp, #8]
1001f204:	1c8d      	addeq	r5, r1, #2
1001f206:	9302      	strne	r3, [sp, #8]
1001f208:	b96e      	cbnz	r6, 1001f226 <_strtoull_l.constprop.0+0x4e>
1001f20a:	2c30      	cmp	r4, #48	@ 0x30
1001f20c:	f000 8086 	beq.w	1001f31c <_strtoull_l.constprop.0+0x144>
1001f210:	f04f 090a 	mov.w	r9, #10
1001f214:	46b2      	mov	sl, r6
1001f216:	f8df 8150 	ldr.w	r8, [pc, #336]	@ 1001f368 <_strtoull_l.constprop.0+0x190>
1001f21a:	f04f 0c05 	mov.w	ip, #5
1001f21e:	f04f 3799 	mov.w	r7, #2576980377	@ 0x99999999
1001f222:	464e      	mov	r6, r9
1001f224:	e017      	b.n	1001f256 <_strtoull_l.constprop.0+0x7e>
1001f226:	2e10      	cmp	r6, #16
1001f228:	d06c      	beq.n	1001f304 <_strtoull_l.constprop.0+0x12c>
1001f22a:	ea4f 7ae6 	mov.w	sl, r6, asr #31
1001f22e:	4632      	mov	r2, r6
1001f230:	4653      	mov	r3, sl
1001f232:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f236:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001f23a:	f001 fdf5 	bl	10020e28 <__aeabi_uldivmod>
1001f23e:	4632      	mov	r2, r6
1001f240:	4607      	mov	r7, r0
1001f242:	4688      	mov	r8, r1
1001f244:	4653      	mov	r3, sl
1001f246:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f24a:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001f24e:	f001 fdeb 	bl	10020e28 <__aeabi_uldivmod>
1001f252:	46b1      	mov	r9, r6
1001f254:	4694      	mov	ip, r2
1001f256:	2200      	movs	r2, #0
1001f258:	4610      	mov	r0, r2
1001f25a:	4611      	mov	r1, r2
1001f25c:	e010      	b.n	1001f280 <_strtoull_l.constprop.0+0xa8>
1001f25e:	4541      	cmp	r1, r8
1001f260:	bf08      	it	eq
1001f262:	42b8      	cmpeq	r0, r7
1001f264:	d039      	beq.n	1001f2da <_strtoull_l.constprop.0+0x102>
1001f266:	fb00 f20a 	mul.w	r2, r0, sl
1001f26a:	fb09 2101 	mla	r1, r9, r1, r2
1001f26e:	fba0 0209 	umull	r0, r2, r0, r9
1001f272:	4411      	add	r1, r2
1001f274:	1818      	adds	r0, r3, r0
1001f276:	eb41 71e3 	adc.w	r1, r1, r3, asr #31
1001f27a:	2201      	movs	r2, #1
1001f27c:	f815 4b01 	ldrb.w	r4, [r5], #1
1001f280:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
1001f284:	2b09      	cmp	r3, #9
1001f286:	d905      	bls.n	1001f294 <_strtoull_l.constprop.0+0xbc>
1001f288:	f1a4 0341 	sub.w	r3, r4, #65	@ 0x41
1001f28c:	2b19      	cmp	r3, #25
1001f28e:	d80c      	bhi.n	1001f2aa <_strtoull_l.constprop.0+0xd2>
1001f290:	f1a4 0337 	sub.w	r3, r4, #55	@ 0x37
1001f294:	429e      	cmp	r6, r3
1001f296:	dd10      	ble.n	1001f2ba <_strtoull_l.constprop.0+0xe2>
1001f298:	1c54      	adds	r4, r2, #1
1001f29a:	d0ef      	beq.n	1001f27c <_strtoull_l.constprop.0+0xa4>
1001f29c:	4287      	cmp	r7, r0
1001f29e:	eb78 0201 	sbcs.w	r2, r8, r1
1001f2a2:	d2dc      	bcs.n	1001f25e <_strtoull_l.constprop.0+0x86>
1001f2a4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001f2a8:	e7e8      	b.n	1001f27c <_strtoull_l.constprop.0+0xa4>
1001f2aa:	f1a4 0361 	sub.w	r3, r4, #97	@ 0x61
1001f2ae:	2b19      	cmp	r3, #25
1001f2b0:	d803      	bhi.n	1001f2ba <_strtoull_l.constprop.0+0xe2>
1001f2b2:	f1a4 0357 	sub.w	r3, r4, #87	@ 0x57
1001f2b6:	429e      	cmp	r6, r3
1001f2b8:	dcee      	bgt.n	1001f298 <_strtoull_l.constprop.0+0xc0>
1001f2ba:	1c53      	adds	r3, r2, #1
1001f2bc:	d012      	beq.n	1001f2e4 <_strtoull_l.constprop.0+0x10c>
1001f2be:	9b02      	ldr	r3, [sp, #8]
1001f2c0:	b113      	cbz	r3, 1001f2c8 <_strtoull_l.constprop.0+0xf0>
1001f2c2:	4240      	negs	r0, r0
1001f2c4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1001f2c8:	9b01      	ldr	r3, [sp, #4]
1001f2ca:	b11b      	cbz	r3, 1001f2d4 <_strtoull_l.constprop.0+0xfc>
1001f2cc:	b992      	cbnz	r2, 1001f2f4 <_strtoull_l.constprop.0+0x11c>
1001f2ce:	9b01      	ldr	r3, [sp, #4]
1001f2d0:	f8c3 b000 	str.w	fp, [r3]
1001f2d4:	b005      	add	sp, #20
1001f2d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f2da:	4563      	cmp	r3, ip
1001f2dc:	ddc3      	ble.n	1001f266 <_strtoull_l.constprop.0+0x8e>
1001f2de:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001f2e2:	e7cb      	b.n	1001f27c <_strtoull_l.constprop.0+0xa4>
1001f2e4:	9903      	ldr	r1, [sp, #12]
1001f2e6:	2322      	movs	r3, #34	@ 0x22
1001f2e8:	600b      	str	r3, [r1, #0]
1001f2ea:	9b01      	ldr	r3, [sp, #4]
1001f2ec:	4610      	mov	r0, r2
1001f2ee:	4611      	mov	r1, r2
1001f2f0:	2b00      	cmp	r3, #0
1001f2f2:	d0ef      	beq.n	1001f2d4 <_strtoull_l.constprop.0+0xfc>
1001f2f4:	f105 3bff 	add.w	fp, r5, #4294967295	@ 0xffffffff
1001f2f8:	e7e9      	b.n	1001f2ce <_strtoull_l.constprop.0+0xf6>
1001f2fa:	2301      	movs	r3, #1
1001f2fc:	782c      	ldrb	r4, [r5, #0]
1001f2fe:	9302      	str	r3, [sp, #8]
1001f300:	1c8d      	adds	r5, r1, #2
1001f302:	e781      	b.n	1001f208 <_strtoull_l.constprop.0+0x30>
1001f304:	2c30      	cmp	r4, #48	@ 0x30
1001f306:	d019      	beq.n	1001f33c <_strtoull_l.constprop.0+0x164>
1001f308:	f04f 0c0f 	mov.w	ip, #15
1001f30c:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001f310:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001f314:	46b1      	mov	r9, r6
1001f316:	f04f 0a00 	mov.w	sl, #0
1001f31a:	e79c      	b.n	1001f256 <_strtoull_l.constprop.0+0x7e>
1001f31c:	782b      	ldrb	r3, [r5, #0]
1001f31e:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001f322:	2b58      	cmp	r3, #88	@ 0x58
1001f324:	d00f      	beq.n	1001f346 <_strtoull_l.constprop.0+0x16e>
1001f326:	f04f 0908 	mov.w	r9, #8
1001f32a:	46b2      	mov	sl, r6
1001f32c:	f04f 0c07 	mov.w	ip, #7
1001f330:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001f334:	f06f 4860 	mvn.w	r8, #3758096384	@ 0xe0000000
1001f338:	464e      	mov	r6, r9
1001f33a:	e78c      	b.n	1001f256 <_strtoull_l.constprop.0+0x7e>
1001f33c:	782b      	ldrb	r3, [r5, #0]
1001f33e:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001f342:	2b58      	cmp	r3, #88	@ 0x58
1001f344:	d1e0      	bne.n	1001f308 <_strtoull_l.constprop.0+0x130>
1001f346:	f04f 0910 	mov.w	r9, #16
1001f34a:	786c      	ldrb	r4, [r5, #1]
1001f34c:	f04f 0c0f 	mov.w	ip, #15
1001f350:	3502      	adds	r5, #2
1001f352:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
1001f356:	f06f 4870 	mvn.w	r8, #4026531840	@ 0xf0000000
1001f35a:	f04f 0a00 	mov.w	sl, #0
1001f35e:	464e      	mov	r6, r9
1001f360:	e779      	b.n	1001f256 <_strtoull_l.constprop.0+0x7e>
1001f362:	bf00      	nop
1001f364:	10023919 	.word	0x10023919
1001f368:	19999999 	.word	0x19999999

1001f36c <_strtoull_r>:
1001f36c:	f7ff bf34 	b.w	1001f1d8 <_strtoull_l.constprop.0>

1001f370 <_mbrtowc_r>:
1001f370:	b570      	push	{r4, r5, r6, lr}
1001f372:	b082      	sub	sp, #8
1001f374:	4604      	mov	r4, r0
1001f376:	9d06      	ldr	r5, [sp, #24]
1001f378:	b155      	cbz	r5, 1001f390 <_mbrtowc_r+0x20>
1001f37a:	4810      	ldr	r0, [pc, #64]	@ (1001f3bc <_mbrtowc_r+0x4c>)
1001f37c:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
1001f380:	9500      	str	r5, [sp, #0]
1001f382:	b16a      	cbz	r2, 1001f3a0 <_mbrtowc_r+0x30>
1001f384:	4620      	mov	r0, r4
1001f386:	47b0      	blx	r6
1001f388:	1c43      	adds	r3, r0, #1
1001f38a:	d010      	beq.n	1001f3ae <_mbrtowc_r+0x3e>
1001f38c:	b002      	add	sp, #8
1001f38e:	bd70      	pop	{r4, r5, r6, pc}
1001f390:	f100 05f4 	add.w	r5, r0, #244	@ 0xf4
1001f394:	4809      	ldr	r0, [pc, #36]	@ (1001f3bc <_mbrtowc_r+0x4c>)
1001f396:	f8d0 60e4 	ldr.w	r6, [r0, #228]	@ 0xe4
1001f39a:	9500      	str	r5, [sp, #0]
1001f39c:	2a00      	cmp	r2, #0
1001f39e:	d1f1      	bne.n	1001f384 <_mbrtowc_r+0x14>
1001f3a0:	2301      	movs	r3, #1
1001f3a2:	4611      	mov	r1, r2
1001f3a4:	4620      	mov	r0, r4
1001f3a6:	4a06      	ldr	r2, [pc, #24]	@ (1001f3c0 <_mbrtowc_r+0x50>)
1001f3a8:	47b0      	blx	r6
1001f3aa:	1c43      	adds	r3, r0, #1
1001f3ac:	d1ee      	bne.n	1001f38c <_mbrtowc_r+0x1c>
1001f3ae:	2200      	movs	r2, #0
1001f3b0:	238a      	movs	r3, #138	@ 0x8a
1001f3b2:	602a      	str	r2, [r5, #0]
1001f3b4:	6023      	str	r3, [r4, #0]
1001f3b6:	b002      	add	sp, #8
1001f3b8:	bd70      	pop	{r4, r5, r6, pc}
1001f3ba:	bf00      	nop
1001f3bc:	2000042c 	.word	0x2000042c
1001f3c0:	10021468 	.word	0x10021468

1001f3c4 <_wcsnrtombs_l>:
1001f3c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001f3c8:	b089      	sub	sp, #36	@ 0x24
1001f3ca:	e9dd 7a13 	ldrd	r7, sl, [sp, #76]	@ 0x4c
1001f3ce:	4686      	mov	lr, r0
1001f3d0:	461e      	mov	r6, r3
1001f3d2:	2f00      	cmp	r7, #0
1001f3d4:	d053      	beq.n	1001f47e <_wcsnrtombs_l+0xba>
1001f3d6:	6815      	ldr	r5, [r2, #0]
1001f3d8:	2900      	cmp	r1, #0
1001f3da:	d055      	beq.n	1001f488 <_wcsnrtombs_l+0xc4>
1001f3dc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001f3de:	2b00      	cmp	r3, #0
1001f3e0:	d062      	beq.n	1001f4a8 <_wcsnrtombs_l+0xe4>
1001f3e2:	1e74      	subs	r4, r6, #1
1001f3e4:	b32e      	cbz	r6, 1001f432 <_wcsnrtombs_l+0x6e>
1001f3e6:	e9cd e100 	strd	lr, r1, [sp]
1001f3ea:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001f3ee:	9102      	str	r1, [sp, #8]
1001f3f0:	3d04      	subs	r5, #4
1001f3f2:	2600      	movs	r6, #0
1001f3f4:	9203      	str	r2, [sp, #12]
1001f3f6:	e00a      	b.n	1001f40e <_wcsnrtombs_l+0x4a>
1001f3f8:	9b01      	ldr	r3, [sp, #4]
1001f3fa:	b9f3      	cbnz	r3, 1001f43a <_wcsnrtombs_l+0x76>
1001f3fc:	6828      	ldr	r0, [r5, #0]
1001f3fe:	2800      	cmp	r0, #0
1001f400:	d031      	beq.n	1001f466 <_wcsnrtombs_l+0xa2>
1001f402:	45dc      	cmp	ip, fp
1001f404:	d252      	bcs.n	1001f4ac <_wcsnrtombs_l+0xe8>
1001f406:	3c01      	subs	r4, #1
1001f408:	1c63      	adds	r3, r4, #1
1001f40a:	4666      	mov	r6, ip
1001f40c:	d011      	beq.n	1001f432 <_wcsnrtombs_l+0x6e>
1001f40e:	f855 2f04 	ldr.w	r2, [r5, #4]!
1001f412:	9800      	ldr	r0, [sp, #0]
1001f414:	f8da c0e0 	ldr.w	ip, [sl, #224]	@ 0xe0
1001f418:	463b      	mov	r3, r7
1001f41a:	a905      	add	r1, sp, #20
1001f41c:	e9d7 9800 	ldrd	r9, r8, [r7]
1001f420:	47e0      	blx	ip
1001f422:	1c42      	adds	r2, r0, #1
1001f424:	d034      	beq.n	1001f490 <_wcsnrtombs_l+0xcc>
1001f426:	eb00 0c06 	add.w	ip, r0, r6
1001f42a:	45dc      	cmp	ip, fp
1001f42c:	d9e4      	bls.n	1001f3f8 <_wcsnrtombs_l+0x34>
1001f42e:	e9c7 9800 	strd	r9, r8, [r7]
1001f432:	4630      	mov	r0, r6
1001f434:	b009      	add	sp, #36	@ 0x24
1001f436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f43a:	2800      	cmp	r0, #0
1001f43c:	dd0c      	ble.n	1001f458 <_wcsnrtombs_l+0x94>
1001f43e:	9b02      	ldr	r3, [sp, #8]
1001f440:	4418      	add	r0, r3
1001f442:	1e5a      	subs	r2, r3, #1
1001f444:	a905      	add	r1, sp, #20
1001f446:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
1001f44a:	f811 3b01 	ldrb.w	r3, [r1], #1
1001f44e:	f802 3f01 	strb.w	r3, [r2, #1]!
1001f452:	4596      	cmp	lr, r2
1001f454:	d1f9      	bne.n	1001f44a <_wcsnrtombs_l+0x86>
1001f456:	9002      	str	r0, [sp, #8]
1001f458:	9b03      	ldr	r3, [sp, #12]
1001f45a:	6828      	ldr	r0, [r5, #0]
1001f45c:	681a      	ldr	r2, [r3, #0]
1001f45e:	3204      	adds	r2, #4
1001f460:	601a      	str	r2, [r3, #0]
1001f462:	2800      	cmp	r0, #0
1001f464:	d1cd      	bne.n	1001f402 <_wcsnrtombs_l+0x3e>
1001f466:	9901      	ldr	r1, [sp, #4]
1001f468:	9a03      	ldr	r2, [sp, #12]
1001f46a:	b101      	cbz	r1, 1001f46e <_wcsnrtombs_l+0xaa>
1001f46c:	6010      	str	r0, [r2, #0]
1001f46e:	f10c 36ff 	add.w	r6, ip, #4294967295	@ 0xffffffff
1001f472:	2200      	movs	r2, #0
1001f474:	4630      	mov	r0, r6
1001f476:	603a      	str	r2, [r7, #0]
1001f478:	b009      	add	sp, #36	@ 0x24
1001f47a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f47e:	6815      	ldr	r5, [r2, #0]
1001f480:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
1001f484:	2900      	cmp	r1, #0
1001f486:	d1a9      	bne.n	1001f3dc <_wcsnrtombs_l+0x18>
1001f488:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001f48c:	9312      	str	r3, [sp, #72]	@ 0x48
1001f48e:	e7a8      	b.n	1001f3e2 <_wcsnrtombs_l+0x1e>
1001f490:	f8dd e000 	ldr.w	lr, [sp]
1001f494:	4606      	mov	r6, r0
1001f496:	218a      	movs	r1, #138	@ 0x8a
1001f498:	2200      	movs	r2, #0
1001f49a:	4630      	mov	r0, r6
1001f49c:	f8ce 1000 	str.w	r1, [lr]
1001f4a0:	603a      	str	r2, [r7, #0]
1001f4a2:	b009      	add	sp, #36	@ 0x24
1001f4a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001f4a8:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001f4aa:	e7c2      	b.n	1001f432 <_wcsnrtombs_l+0x6e>
1001f4ac:	4666      	mov	r6, ip
1001f4ae:	e7c0      	b.n	1001f432 <_wcsnrtombs_l+0x6e>

1001f4b0 <_wcsnrtombs_r>:
1001f4b0:	b510      	push	{r4, lr}
1001f4b2:	b084      	sub	sp, #16
1001f4b4:	4c05      	ldr	r4, [pc, #20]	@ (1001f4cc <_wcsnrtombs_r+0x1c>)
1001f4b6:	9806      	ldr	r0, [sp, #24]
1001f4b8:	9000      	str	r0, [sp, #0]
1001f4ba:	9807      	ldr	r0, [sp, #28]
1001f4bc:	9001      	str	r0, [sp, #4]
1001f4be:	4804      	ldr	r0, [pc, #16]	@ (1001f4d0 <_wcsnrtombs_r+0x20>)
1001f4c0:	6800      	ldr	r0, [r0, #0]
1001f4c2:	9402      	str	r4, [sp, #8]
1001f4c4:	f7ff ff7e 	bl	1001f3c4 <_wcsnrtombs_l>
1001f4c8:	b004      	add	sp, #16
1001f4ca:	bd10      	pop	{r4, pc}
1001f4cc:	2000042c 	.word	0x2000042c
1001f4d0:	20000598 	.word	0x20000598

1001f4d4 <iswspace>:
1001f4d4:	2100      	movs	r1, #0
1001f4d6:	f000 b801 	b.w	1001f4dc <iswspace_l>
1001f4da:	bf00      	nop

1001f4dc <iswspace_l>:
1001f4dc:	b510      	push	{r4, lr}
1001f4de:	f000 f90d 	bl	1001f6fc <_jp2uc_l>
1001f4e2:	4604      	mov	r4, r0
1001f4e4:	f000 f972 	bl	1001f7cc <category>
1001f4e8:	f1a0 031a 	sub.w	r3, r0, #26
1001f4ec:	b2db      	uxtb	r3, r3
1001f4ee:	2b02      	cmp	r3, #2
1001f4f0:	d906      	bls.n	1001f500 <iswspace_l+0x24>
1001f4f2:	f1a4 0009 	sub.w	r0, r4, #9
1001f4f6:	2804      	cmp	r0, #4
1001f4f8:	bf8c      	ite	hi
1001f4fa:	2000      	movhi	r0, #0
1001f4fc:	2001      	movls	r0, #1
1001f4fe:	bd10      	pop	{r4, pc}
1001f500:	2001      	movs	r0, #1
1001f502:	bd10      	pop	{r4, pc}

1001f504 <__register_exitproc>:
1001f504:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001f508:	4d1b      	ldr	r5, [pc, #108]	@ (1001f578 <__register_exitproc+0x74>)
1001f50a:	4606      	mov	r6, r0
1001f50c:	6828      	ldr	r0, [r5, #0]
1001f50e:	4698      	mov	r8, r3
1001f510:	460f      	mov	r7, r1
1001f512:	4691      	mov	r9, r2
1001f514:	f7f8 ff90 	bl	10018438 <__retarget_lock_acquire_recursive>
1001f518:	4b18      	ldr	r3, [pc, #96]	@ (1001f57c <__register_exitproc+0x78>)
1001f51a:	681c      	ldr	r4, [r3, #0]
1001f51c:	b31c      	cbz	r4, 1001f566 <__register_exitproc+0x62>
1001f51e:	6828      	ldr	r0, [r5, #0]
1001f520:	6865      	ldr	r5, [r4, #4]
1001f522:	2d1f      	cmp	r5, #31
1001f524:	dc22      	bgt.n	1001f56c <__register_exitproc+0x68>
1001f526:	b94e      	cbnz	r6, 1001f53c <__register_exitproc+0x38>
1001f528:	1c6b      	adds	r3, r5, #1
1001f52a:	3502      	adds	r5, #2
1001f52c:	6063      	str	r3, [r4, #4]
1001f52e:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
1001f532:	f7f8 ff83 	bl	1001843c <__retarget_lock_release_recursive>
1001f536:	2000      	movs	r0, #0
1001f538:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1001f53c:	eb04 0185 	add.w	r1, r4, r5, lsl #2
1001f540:	2301      	movs	r3, #1
1001f542:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
1001f546:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
1001f54a:	40ab      	lsls	r3, r5
1001f54c:	431a      	orrs	r2, r3
1001f54e:	2e02      	cmp	r6, #2
1001f550:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
1001f554:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
1001f558:	d1e6      	bne.n	1001f528 <__register_exitproc+0x24>
1001f55a:	f8d4 218c 	ldr.w	r2, [r4, #396]	@ 0x18c
1001f55e:	431a      	orrs	r2, r3
1001f560:	f8c4 218c 	str.w	r2, [r4, #396]	@ 0x18c
1001f564:	e7e0      	b.n	1001f528 <__register_exitproc+0x24>
1001f566:	4c06      	ldr	r4, [pc, #24]	@ (1001f580 <__register_exitproc+0x7c>)
1001f568:	601c      	str	r4, [r3, #0]
1001f56a:	e7d8      	b.n	1001f51e <__register_exitproc+0x1a>
1001f56c:	f7f8 ff66 	bl	1001843c <__retarget_lock_release_recursive>
1001f570:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f574:	e7e0      	b.n	1001f538 <__register_exitproc+0x34>
1001f576:	bf00      	nop
1001f578:	200006c0 	.word	0x200006c0
1001f57c:	200015d4 	.word	0x200015d4
1001f580:	200015d8 	.word	0x200015d8

1001f584 <nan>:
1001f584:	4901      	ldr	r1, [pc, #4]	@ (1001f58c <nan+0x8>)
1001f586:	2000      	movs	r0, #0
1001f588:	4770      	bx	lr
1001f58a:	bf00      	nop
1001f58c:	7ff80000 	.word	0x7ff80000

1001f590 <nanf>:
1001f590:	4800      	ldr	r0, [pc, #0]	@ (1001f594 <nanf+0x4>)
1001f592:	4770      	bx	lr
1001f594:	7fc00000 	.word	0x7fc00000

1001f598 <__assert_func>:
1001f598:	b500      	push	{lr}
1001f59a:	4c0b      	ldr	r4, [pc, #44]	@ (1001f5c8 <__assert_func+0x30>)
1001f59c:	6825      	ldr	r5, [r4, #0]
1001f59e:	4614      	mov	r4, r2
1001f5a0:	68ee      	ldr	r6, [r5, #12]
1001f5a2:	461a      	mov	r2, r3
1001f5a4:	b085      	sub	sp, #20
1001f5a6:	4603      	mov	r3, r0
1001f5a8:	460d      	mov	r5, r1
1001f5aa:	b14c      	cbz	r4, 1001f5c0 <__assert_func+0x28>
1001f5ac:	4907      	ldr	r1, [pc, #28]	@ (1001f5cc <__assert_func+0x34>)
1001f5ae:	9500      	str	r5, [sp, #0]
1001f5b0:	e9cd 1401 	strd	r1, r4, [sp, #4]
1001f5b4:	4630      	mov	r0, r6
1001f5b6:	4906      	ldr	r1, [pc, #24]	@ (1001f5d0 <__assert_func+0x38>)
1001f5b8:	f000 fd48 	bl	1002004c <fiprintf>
1001f5bc:	f000 fed2 	bl	10020364 <abort>
1001f5c0:	4904      	ldr	r1, [pc, #16]	@ (1001f5d4 <__assert_func+0x3c>)
1001f5c2:	460c      	mov	r4, r1
1001f5c4:	e7f3      	b.n	1001f5ae <__assert_func+0x16>
1001f5c6:	bf00      	nop
1001f5c8:	20000598 	.word	0x20000598
1001f5cc:	10023cb0 	.word	0x10023cb0
1001f5d0:	10023cc0 	.word	0x10023cc0
1001f5d4:	10021468 	.word	0x10021468

1001f5d8 <__jp2uc>:
1001f5d8:	2902      	cmp	r1, #2
1001f5da:	f3c0 2207 	ubfx	r2, r0, #8, #8
1001f5de:	b2c3      	uxtb	r3, r0
1001f5e0:	d025      	beq.n	1001f62e <__jp2uc+0x56>
1001f5e2:	2903      	cmp	r1, #3
1001f5e4:	d11e      	bne.n	1001f624 <__jp2uc+0x4c>
1001f5e6:	f102 0150 	add.w	r1, r2, #80	@ 0x50
1001f5ea:	b2c9      	uxtb	r1, r1
1001f5ec:	291f      	cmp	r1, #31
1001f5ee:	d90b      	bls.n	1001f608 <__jp2uc+0x30>
1001f5f0:	f102 0130 	add.w	r1, r2, #48	@ 0x30
1001f5f4:	b2c9      	uxtb	r1, r1
1001f5f6:	2924      	cmp	r1, #36	@ 0x24
1001f5f8:	d834      	bhi.n	1001f664 <__jp2uc+0x8c>
1001f5fa:	f24f 41a6 	movw	r1, #62630	@ 0xf4a6
1001f5fe:	4288      	cmp	r0, r1
1001f600:	d926      	bls.n	1001f650 <__jp2uc+0x78>
1001f602:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001f606:	4770      	bx	lr
1001f608:	f64c 71d3 	movw	r1, #53203	@ 0xcfd3
1001f60c:	4288      	cmp	r0, r1
1001f60e:	d8f8      	bhi.n	1001f602 <__jp2uc+0x2a>
1001f610:	3ab0      	subs	r2, #176	@ 0xb0
1001f612:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
1001f616:	3ba1      	subs	r3, #161	@ 0xa1
1001f618:	4930      	ldr	r1, [pc, #192]	@ (1001f6dc <__jp2uc+0x104>)
1001f61a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
1001f61e:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
1001f622:	4770      	bx	lr
1001f624:	f082 0280 	eor.w	r2, r2, #128	@ 0x80
1001f628:	f083 0380 	eor.w	r3, r3, #128	@ 0x80
1001f62c:	e7db      	b.n	1001f5e6 <__jp2uc+0xe>
1001f62e:	2b9e      	cmp	r3, #158	@ 0x9e
1001f630:	d90a      	bls.n	1001f648 <__jp2uc+0x70>
1001f632:	3323      	adds	r3, #35	@ 0x23
1001f634:	b2db      	uxtb	r3, r3
1001f636:	2180      	movs	r1, #128	@ 0x80
1001f638:	2a9f      	cmp	r2, #159	@ 0x9f
1001f63a:	bf94      	ite	ls
1001f63c:	3a70      	subls	r2, #112	@ 0x70
1001f63e:	3250      	addhi	r2, #80	@ 0x50
1001f640:	eb01 0142 	add.w	r1, r1, r2, lsl #1
1001f644:	b2ca      	uxtb	r2, r1
1001f646:	e7ce      	b.n	1001f5e6 <__jp2uc+0xe>
1001f648:	3b7e      	subs	r3, #126	@ 0x7e
1001f64a:	b2db      	uxtb	r3, r3
1001f64c:	217f      	movs	r1, #127	@ 0x7f
1001f64e:	e7f3      	b.n	1001f638 <__jp2uc+0x60>
1001f650:	3ad0      	subs	r2, #208	@ 0xd0
1001f652:	ebc2 12c2 	rsb	r2, r2, r2, lsl #7
1001f656:	3ba1      	subs	r3, #161	@ 0xa1
1001f658:	4921      	ldr	r1, [pc, #132]	@ (1001f6e0 <__jp2uc+0x108>)
1001f65a:	eb03 0342 	add.w	r3, r3, r2, lsl #1
1001f65e:	f831 0013 	ldrh.w	r0, [r1, r3, lsl #1]
1001f662:	4770      	bx	lr
1001f664:	3aa1      	subs	r2, #161	@ 0xa1
1001f666:	2a07      	cmp	r2, #7
1001f668:	d8cb      	bhi.n	1001f602 <__jp2uc+0x2a>
1001f66a:	e8df f002 	tbb	[pc, r2]
1001f66e:	2831      	.short	0x2831
1001f670:	0f13181e 	.word	0x0f13181e
1001f674:	040b      	.short	0x040b
1001f676:	2bc0      	cmp	r3, #192	@ 0xc0
1001f678:	d8c3      	bhi.n	1001f602 <__jp2uc+0x2a>
1001f67a:	4a1a      	ldr	r2, [pc, #104]	@ (1001f6e4 <__jp2uc+0x10c>)
1001f67c:	3ba1      	subs	r3, #161	@ 0xa1
1001f67e:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001f682:	4770      	bx	lr
1001f684:	2bf1      	cmp	r3, #241	@ 0xf1
1001f686:	d8bc      	bhi.n	1001f602 <__jp2uc+0x2a>
1001f688:	4a17      	ldr	r2, [pc, #92]	@ (1001f6e8 <__jp2uc+0x110>)
1001f68a:	e019      	b.n	1001f6c0 <__jp2uc+0xe8>
1001f68c:	2bd8      	cmp	r3, #216	@ 0xd8
1001f68e:	d8b8      	bhi.n	1001f602 <__jp2uc+0x2a>
1001f690:	4a16      	ldr	r2, [pc, #88]	@ (1001f6ec <__jp2uc+0x114>)
1001f692:	e015      	b.n	1001f6c0 <__jp2uc+0xe8>
1001f694:	2bf6      	cmp	r3, #246	@ 0xf6
1001f696:	d8b4      	bhi.n	1001f602 <__jp2uc+0x2a>
1001f698:	f503 5040 	add.w	r0, r3, #12288	@ 0x3000
1001f69c:	4770      	bx	lr
1001f69e:	2bf3      	cmp	r3, #243	@ 0xf3
1001f6a0:	d8af      	bhi.n	1001f602 <__jp2uc+0x2a>
1001f6a2:	f503 503e 	add.w	r0, r3, #12160	@ 0x2f80
1001f6a6:	3020      	adds	r0, #32
1001f6a8:	4770      	bx	lr
1001f6aa:	4a11      	ldr	r2, [pc, #68]	@ (1001f6f0 <__jp2uc+0x118>)
1001f6ac:	441a      	add	r2, r3
1001f6ae:	f812 2ca1 	ldrb.w	r2, [r2, #-161]
1001f6b2:	2a00      	cmp	r2, #0
1001f6b4:	d0a5      	beq.n	1001f602 <__jp2uc+0x2a>
1001f6b6:	f503 407e 	add.w	r0, r3, #65024	@ 0xfe00
1001f6ba:	3060      	adds	r0, #96	@ 0x60
1001f6bc:	4770      	bx	lr
1001f6be:	4a0d      	ldr	r2, [pc, #52]	@ (1001f6f4 <__jp2uc+0x11c>)
1001f6c0:	3ba1      	subs	r3, #161	@ 0xa1
1001f6c2:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001f6c6:	2800      	cmp	r0, #0
1001f6c8:	bf08      	it	eq
1001f6ca:	f04f 30ff 	moveq.w	r0, #4294967295	@ 0xffffffff
1001f6ce:	4770      	bx	lr
1001f6d0:	4a09      	ldr	r2, [pc, #36]	@ (1001f6f8 <__jp2uc+0x120>)
1001f6d2:	3ba1      	subs	r3, #161	@ 0xa1
1001f6d4:	f832 0013 	ldrh.w	r0, [r2, r3, lsl #1]
1001f6d8:	4770      	bx	lr
1001f6da:	bf00      	nop
1001f6dc:	10025780 	.word	0x10025780
1001f6e0:	10023d04 	.word	0x10023d04
1001f6e4:	10026eac 	.word	0x10026eac
1001f6e8:	10026eec 	.word	0x10026eec
1001f6ec:	10026f90 	.word	0x10026f90
1001f6f0:	10027000 	.word	0x10027000
1001f6f4:	1002705c 	.word	0x1002705c
1001f6f8:	10027118 	.word	0x10027118

1001f6fc <_jp2uc_l>:
1001f6fc:	b538      	push	{r3, r4, r5, lr}
1001f6fe:	4605      	mov	r5, r0
1001f700:	b1b9      	cbz	r1, 1001f732 <_jp2uc_l+0x36>
1001f702:	f501 7495 	add.w	r4, r1, #298	@ 0x12a
1001f706:	4912      	ldr	r1, [pc, #72]	@ (1001f750 <_jp2uc_l+0x54>)
1001f708:	4620      	mov	r0, r4
1001f70a:	f7f8 fcf9 	bl	10018100 <strcmp>
1001f70e:	b928      	cbnz	r0, 1001f71c <_jp2uc_l+0x20>
1001f710:	4628      	mov	r0, r5
1001f712:	2101      	movs	r1, #1
1001f714:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001f718:	f7ff bf5e 	b.w	1001f5d8 <__jp2uc>
1001f71c:	490d      	ldr	r1, [pc, #52]	@ (1001f754 <_jp2uc_l+0x58>)
1001f71e:	4620      	mov	r0, r4
1001f720:	f7f8 fcee 	bl	10018100 <strcmp>
1001f724:	b938      	cbnz	r0, 1001f736 <_jp2uc_l+0x3a>
1001f726:	4628      	mov	r0, r5
1001f728:	2102      	movs	r1, #2
1001f72a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001f72e:	f7ff bf53 	b.w	1001f5d8 <__jp2uc>
1001f732:	4c09      	ldr	r4, [pc, #36]	@ (1001f758 <_jp2uc_l+0x5c>)
1001f734:	e7e7      	b.n	1001f706 <_jp2uc_l+0xa>
1001f736:	4909      	ldr	r1, [pc, #36]	@ (1001f75c <_jp2uc_l+0x60>)
1001f738:	4620      	mov	r0, r4
1001f73a:	f7f8 fce1 	bl	10018100 <strcmp>
1001f73e:	b928      	cbnz	r0, 1001f74c <_jp2uc_l+0x50>
1001f740:	4628      	mov	r0, r5
1001f742:	2103      	movs	r1, #3
1001f744:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001f748:	f7ff bf46 	b.w	1001f5d8 <__jp2uc>
1001f74c:	4628      	mov	r0, r5
1001f74e:	bd38      	pop	{r3, r4, r5, pc}
1001f750:	10023cf0 	.word	0x10023cf0
1001f754:	10023cf4 	.word	0x10023cf4
1001f758:	20000556 	.word	0x20000556
1001f75c:	10023cfc 	.word	0x10023cfc

1001f760 <_calloc_r>:
1001f760:	b538      	push	{r3, r4, r5, lr}
1001f762:	fba1 1402 	umull	r1, r4, r1, r2
1001f766:	bb54      	cbnz	r4, 1001f7be <_calloc_r+0x5e>
1001f768:	f7f4 f9da 	bl	10013b20 <_malloc_r>
1001f76c:	4605      	mov	r5, r0
1001f76e:	b350      	cbz	r0, 1001f7c6 <_calloc_r+0x66>
1001f770:	f850 2c04 	ldr.w	r2, [r0, #-4]
1001f774:	f022 0203 	bic.w	r2, r2, #3
1001f778:	3a04      	subs	r2, #4
1001f77a:	2a24      	cmp	r2, #36	@ 0x24
1001f77c:	d810      	bhi.n	1001f7a0 <_calloc_r+0x40>
1001f77e:	2a13      	cmp	r2, #19
1001f780:	d913      	bls.n	1001f7aa <_calloc_r+0x4a>
1001f782:	2a1b      	cmp	r2, #27
1001f784:	6004      	str	r4, [r0, #0]
1001f786:	6044      	str	r4, [r0, #4]
1001f788:	d916      	bls.n	1001f7b8 <_calloc_r+0x58>
1001f78a:	2a24      	cmp	r2, #36	@ 0x24
1001f78c:	6084      	str	r4, [r0, #8]
1001f78e:	60c4      	str	r4, [r0, #12]
1001f790:	bf11      	iteee	ne
1001f792:	f100 0210 	addne.w	r2, r0, #16
1001f796:	f100 0218 	addeq.w	r2, r0, #24
1001f79a:	6104      	streq	r4, [r0, #16]
1001f79c:	6144      	streq	r4, [r0, #20]
1001f79e:	e005      	b.n	1001f7ac <_calloc_r+0x4c>
1001f7a0:	4621      	mov	r1, r4
1001f7a2:	f7f8 fb65 	bl	10017e70 <memset>
1001f7a6:	4628      	mov	r0, r5
1001f7a8:	bd38      	pop	{r3, r4, r5, pc}
1001f7aa:	4602      	mov	r2, r0
1001f7ac:	2300      	movs	r3, #0
1001f7ae:	6013      	str	r3, [r2, #0]
1001f7b0:	6053      	str	r3, [r2, #4]
1001f7b2:	6093      	str	r3, [r2, #8]
1001f7b4:	4628      	mov	r0, r5
1001f7b6:	bd38      	pop	{r3, r4, r5, pc}
1001f7b8:	f100 0208 	add.w	r2, r0, #8
1001f7bc:	e7f6      	b.n	1001f7ac <_calloc_r+0x4c>
1001f7be:	f7f8 fc85 	bl	100180cc <__errno>
1001f7c2:	230c      	movs	r3, #12
1001f7c4:	6003      	str	r3, [r0, #0]
1001f7c6:	2500      	movs	r5, #0
1001f7c8:	4628      	mov	r0, r5
1001f7ca:	bd38      	pop	{r3, r4, r5, pc}

1001f7cc <category>:
1001f7cc:	4b17      	ldr	r3, [pc, #92]	@ (1001f82c <category+0x60>)
1001f7ce:	4298      	cmp	r0, r3
1001f7d0:	d827      	bhi.n	1001f822 <category+0x56>
1001f7d2:	b570      	push	{r4, r5, r6, lr}
1001f7d4:	4d16      	ldr	r5, [pc, #88]	@ (1001f830 <category+0x64>)
1001f7d6:	f04f 0e00 	mov.w	lr, #0
1001f7da:	f640 04f9 	movw	r4, #2297	@ 0x8f9
1001f7de:	e003      	b.n	1001f7e8 <category+0x1c>
1001f7e0:	f102 0e01 	add.w	lr, r2, #1
1001f7e4:	4574      	cmp	r4, lr
1001f7e6:	db1a      	blt.n	1001f81e <category+0x52>
1001f7e8:	eb0e 0204 	add.w	r2, lr, r4
1001f7ec:	f022 0301 	bic.w	r3, r2, #1
1001f7f0:	eb03 0362 	add.w	r3, r3, r2, asr #1
1001f7f4:	eb05 0c43 	add.w	ip, r5, r3, lsl #1
1001f7f8:	1052      	asrs	r2, r2, #1
1001f7fa:	f89c 1001 	ldrb.w	r1, [ip, #1]
1001f7fe:	f8bc 6002 	ldrh.w	r6, [ip, #2]
1001f802:	f8bc c004 	ldrh.w	ip, [ip, #4]
1001f806:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
1001f80a:	448c      	add	ip, r1
1001f80c:	4560      	cmp	r0, ip
1001f80e:	ea4f 0343 	mov.w	r3, r3, lsl #1
1001f812:	d8e5      	bhi.n	1001f7e0 <category+0x14>
1001f814:	4288      	cmp	r0, r1
1001f816:	d206      	bcs.n	1001f826 <category+0x5a>
1001f818:	1e54      	subs	r4, r2, #1
1001f81a:	4574      	cmp	r4, lr
1001f81c:	dae4      	bge.n	1001f7e8 <category+0x1c>
1001f81e:	20ff      	movs	r0, #255	@ 0xff
1001f820:	bd70      	pop	{r4, r5, r6, pc}
1001f822:	20ff      	movs	r0, #255	@ 0xff
1001f824:	4770      	bx	lr
1001f826:	5ce8      	ldrb	r0, [r5, r3]
1001f828:	bd70      	pop	{r4, r5, r6, pc}
1001f82a:	bf00      	nop
1001f82c:	000e01ef 	.word	0x000e01ef
1001f830:	100271d4 	.word	0x100271d4

1001f834 <rshift>:
1001f834:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001f838:	6904      	ldr	r4, [r0, #16]
1001f83a:	ebb4 1f61 	cmp.w	r4, r1, asr #5
1001f83e:	dc05      	bgt.n	1001f84c <rshift+0x18>
1001f840:	2300      	movs	r3, #0
1001f842:	6103      	str	r3, [r0, #16]
1001f844:	2300      	movs	r3, #0
1001f846:	6143      	str	r3, [r0, #20]
1001f848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001f84c:	f100 0514 	add.w	r5, r0, #20
1001f850:	114e      	asrs	r6, r1, #5
1001f852:	f011 0c1f 	ands.w	ip, r1, #31
1001f856:	eb05 0e84 	add.w	lr, r5, r4, lsl #2
1001f85a:	eb05 0386 	add.w	r3, r5, r6, lsl #2
1001f85e:	d021      	beq.n	1001f8a4 <rshift+0x70>
1001f860:	f855 1026 	ldr.w	r1, [r5, r6, lsl #2]
1001f864:	3304      	adds	r3, #4
1001f866:	459e      	cmp	lr, r3
1001f868:	fa21 f10c 	lsr.w	r1, r1, ip
1001f86c:	f1cc 0820 	rsb	r8, ip, #32
1001f870:	d92d      	bls.n	1001f8ce <rshift+0x9a>
1001f872:	462f      	mov	r7, r5
1001f874:	681a      	ldr	r2, [r3, #0]
1001f876:	fa02 f208 	lsl.w	r2, r2, r8
1001f87a:	430a      	orrs	r2, r1
1001f87c:	f847 2b04 	str.w	r2, [r7], #4
1001f880:	f853 1b04 	ldr.w	r1, [r3], #4
1001f884:	459e      	cmp	lr, r3
1001f886:	fa21 f10c 	lsr.w	r1, r1, ip
1001f88a:	d8f3      	bhi.n	1001f874 <rshift+0x40>
1001f88c:	1ba3      	subs	r3, r4, r6
1001f88e:	009b      	lsls	r3, r3, #2
1001f890:	3b05      	subs	r3, #5
1001f892:	089b      	lsrs	r3, r3, #2
1001f894:	3301      	adds	r3, #1
1001f896:	eb05 0483 	add.w	r4, r5, r3, lsl #2
1001f89a:	f845 1023 	str.w	r1, [r5, r3, lsl #2]
1001f89e:	b179      	cbz	r1, 1001f8c0 <rshift+0x8c>
1001f8a0:	3404      	adds	r4, #4
1001f8a2:	e00d      	b.n	1001f8c0 <rshift+0x8c>
1001f8a4:	459e      	cmp	lr, r3
1001f8a6:	bf88      	it	hi
1001f8a8:	f100 0210 	addhi.w	r2, r0, #16
1001f8ac:	d9c8      	bls.n	1001f840 <rshift+0xc>
1001f8ae:	f853 1b04 	ldr.w	r1, [r3], #4
1001f8b2:	f842 1f04 	str.w	r1, [r2, #4]!
1001f8b6:	459e      	cmp	lr, r3
1001f8b8:	d8f9      	bhi.n	1001f8ae <rshift+0x7a>
1001f8ba:	1ba4      	subs	r4, r4, r6
1001f8bc:	eb05 0484 	add.w	r4, r5, r4, lsl #2
1001f8c0:	1b63      	subs	r3, r4, r5
1001f8c2:	109b      	asrs	r3, r3, #2
1001f8c4:	42ac      	cmp	r4, r5
1001f8c6:	6103      	str	r3, [r0, #16]
1001f8c8:	d0bc      	beq.n	1001f844 <rshift+0x10>
1001f8ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001f8ce:	6141      	str	r1, [r0, #20]
1001f8d0:	2900      	cmp	r1, #0
1001f8d2:	d0b5      	beq.n	1001f840 <rshift+0xc>
1001f8d4:	462c      	mov	r4, r5
1001f8d6:	e7e3      	b.n	1001f8a0 <rshift+0x6c>

1001f8d8 <__gethex>:
1001f8d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001f8dc:	680f      	ldr	r7, [r1, #0]
1001f8de:	b085      	sub	sp, #20
1001f8e0:	e9cd 2000 	strd	r2, r0, [sp]
1001f8e4:	78ba      	ldrb	r2, [r7, #2]
1001f8e6:	9303      	str	r3, [sp, #12]
1001f8e8:	2a30      	cmp	r2, #48	@ 0x30
1001f8ea:	4689      	mov	r9, r1
1001f8ec:	f040 81ca 	bne.w	1001fc84 <__gethex+0x3ac>
1001f8f0:	1cfb      	adds	r3, r7, #3
1001f8f2:	781a      	ldrb	r2, [r3, #0]
1001f8f4:	2a30      	cmp	r2, #48	@ 0x30
1001f8f6:	461c      	mov	r4, r3
1001f8f8:	f103 0301 	add.w	r3, r3, #1
1001f8fc:	d0f9      	beq.n	1001f8f2 <__gethex+0x1a>
1001f8fe:	1be7      	subs	r7, r4, r7
1001f900:	3f02      	subs	r7, #2
1001f902:	f8df 82d8 	ldr.w	r8, [pc, #728]	@ 1001fbdc <__gethex+0x304>
1001f906:	f818 3002 	ldrb.w	r3, [r8, r2]
1001f90a:	2b00      	cmp	r3, #0
1001f90c:	f000 80df 	beq.w	1001face <__gethex+0x1f6>
1001f910:	7823      	ldrb	r3, [r4, #0]
1001f912:	f818 3003 	ldrb.w	r3, [r8, r3]
1001f916:	f04f 0a00 	mov.w	sl, #0
1001f91a:	4655      	mov	r5, sl
1001f91c:	2b00      	cmp	r3, #0
1001f91e:	f000 8150 	beq.w	1001fbc2 <__gethex+0x2ea>
1001f922:	4626      	mov	r6, r4
1001f924:	f816 3f01 	ldrb.w	r3, [r6, #1]!
1001f928:	f818 3003 	ldrb.w	r3, [r8, r3]
1001f92c:	2b00      	cmp	r3, #0
1001f92e:	d1f9      	bne.n	1001f924 <__gethex+0x4c>
1001f930:	49ab      	ldr	r1, [pc, #684]	@ (1001fbe0 <__gethex+0x308>)
1001f932:	2201      	movs	r2, #1
1001f934:	4630      	mov	r0, r6
1001f936:	f7ff faed 	bl	1001ef14 <strncmp>
1001f93a:	4683      	mov	fp, r0
1001f93c:	2800      	cmp	r0, #0
1001f93e:	d04c      	beq.n	1001f9da <__gethex+0x102>
1001f940:	7832      	ldrb	r2, [r6, #0]
1001f942:	2d00      	cmp	r5, #0
1001f944:	f000 8180 	beq.w	1001fc48 <__gethex+0x370>
1001f948:	1bab      	subs	r3, r5, r6
1001f94a:	ea4f 0b83 	mov.w	fp, r3, lsl #2
1001f94e:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001f952:	2a50      	cmp	r2, #80	@ 0x50
1001f954:	4635      	mov	r5, r6
1001f956:	d04c      	beq.n	1001f9f2 <__gethex+0x11a>
1001f958:	f8c9 6000 	str.w	r6, [r9]
1001f95c:	f1ba 0f00 	cmp.w	sl, #0
1001f960:	d165      	bne.n	1001fa2e <__gethex+0x156>
1001f962:	1b2a      	subs	r2, r5, r4
1001f964:	3a01      	subs	r2, #1
1001f966:	2a07      	cmp	r2, #7
1001f968:	4651      	mov	r1, sl
1001f96a:	dd04      	ble.n	1001f976 <__gethex+0x9e>
1001f96c:	1052      	asrs	r2, r2, #1
1001f96e:	2a07      	cmp	r2, #7
1001f970:	f101 0101 	add.w	r1, r1, #1
1001f974:	dcfa      	bgt.n	1001f96c <__gethex+0x94>
1001f976:	9801      	ldr	r0, [sp, #4]
1001f978:	f7fd fb2e 	bl	1001cfd8 <_Balloc>
1001f97c:	4682      	mov	sl, r0
1001f97e:	2800      	cmp	r0, #0
1001f980:	f000 8250 	beq.w	1001fe24 <__gethex+0x54c>
1001f984:	f100 0614 	add.w	r6, r0, #20
1001f988:	42a5      	cmp	r5, r4
1001f98a:	9602      	str	r6, [sp, #8]
1001f98c:	d957      	bls.n	1001fa3e <__gethex+0x166>
1001f98e:	2700      	movs	r7, #0
1001f990:	46b9      	mov	r9, r7
1001f992:	e00d      	b.n	1001f9b0 <__gethex+0xd8>
1001f994:	2f20      	cmp	r7, #32
1001f996:	d01a      	beq.n	1001f9ce <__gethex+0xf6>
1001f998:	463a      	mov	r2, r7
1001f99a:	3704      	adds	r7, #4
1001f99c:	782b      	ldrb	r3, [r5, #0]
1001f99e:	f818 3003 	ldrb.w	r3, [r8, r3]
1001f9a2:	f003 030f 	and.w	r3, r3, #15
1001f9a6:	4093      	lsls	r3, r2
1001f9a8:	ea49 0903 	orr.w	r9, r9, r3
1001f9ac:	42a5      	cmp	r5, r4
1001f9ae:	d049      	beq.n	1001fa44 <__gethex+0x16c>
1001f9b0:	f815 3d01 	ldrb.w	r3, [r5, #-1]!
1001f9b4:	2b2e      	cmp	r3, #46	@ 0x2e
1001f9b6:	d1ed      	bne.n	1001f994 <__gethex+0xbc>
1001f9b8:	42a5      	cmp	r5, r4
1001f9ba:	d3eb      	bcc.n	1001f994 <__gethex+0xbc>
1001f9bc:	4988      	ldr	r1, [pc, #544]	@ (1001fbe0 <__gethex+0x308>)
1001f9be:	2201      	movs	r2, #1
1001f9c0:	4628      	mov	r0, r5
1001f9c2:	f7ff faa7 	bl	1001ef14 <strncmp>
1001f9c6:	2800      	cmp	r0, #0
1001f9c8:	d0f0      	beq.n	1001f9ac <__gethex+0xd4>
1001f9ca:	2f20      	cmp	r7, #32
1001f9cc:	d1e4      	bne.n	1001f998 <__gethex+0xc0>
1001f9ce:	2200      	movs	r2, #0
1001f9d0:	f846 9b04 	str.w	r9, [r6], #4
1001f9d4:	2704      	movs	r7, #4
1001f9d6:	4691      	mov	r9, r2
1001f9d8:	e7e0      	b.n	1001f99c <__gethex+0xc4>
1001f9da:	2d00      	cmp	r5, #0
1001f9dc:	f000 8143 	beq.w	1001fc66 <__gethex+0x38e>
1001f9e0:	7832      	ldrb	r2, [r6, #0]
1001f9e2:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
1001f9e6:	1bab      	subs	r3, r5, r6
1001f9e8:	2a50      	cmp	r2, #80	@ 0x50
1001f9ea:	ea4f 0b83 	mov.w	fp, r3, lsl #2
1001f9ee:	4635      	mov	r5, r6
1001f9f0:	d1b2      	bne.n	1001f958 <__gethex+0x80>
1001f9f2:	786a      	ldrb	r2, [r5, #1]
1001f9f4:	2a2b      	cmp	r2, #43	@ 0x2b
1001f9f6:	f000 8125 	beq.w	1001fc44 <__gethex+0x36c>
1001f9fa:	2a2d      	cmp	r2, #45	@ 0x2d
1001f9fc:	f000 80a1 	beq.w	1001fb42 <__gethex+0x26a>
1001fa00:	1c6e      	adds	r6, r5, #1
1001fa02:	2000      	movs	r0, #0
1001fa04:	f818 1002 	ldrb.w	r1, [r8, r2]
1001fa08:	1e4a      	subs	r2, r1, #1
1001fa0a:	2a18      	cmp	r2, #24
1001fa0c:	f200 8097 	bhi.w	1001fb3e <__gethex+0x266>
1001fa10:	7872      	ldrb	r2, [r6, #1]
1001fa12:	f818 2002 	ldrb.w	r2, [r8, r2]
1001fa16:	3910      	subs	r1, #16
1001fa18:	3601      	adds	r6, #1
1001fa1a:	2a00      	cmp	r2, #0
1001fa1c:	d154      	bne.n	1001fac8 <__gethex+0x1f0>
1001fa1e:	b100      	cbz	r0, 1001fa22 <__gethex+0x14a>
1001fa20:	4249      	negs	r1, r1
1001fa22:	448b      	add	fp, r1
1001fa24:	f8c9 6000 	str.w	r6, [r9]
1001fa28:	f1ba 0f00 	cmp.w	sl, #0
1001fa2c:	d099      	beq.n	1001f962 <__gethex+0x8a>
1001fa2e:	2f00      	cmp	r7, #0
1001fa30:	bf0c      	ite	eq
1001fa32:	2506      	moveq	r5, #6
1001fa34:	2500      	movne	r5, #0
1001fa36:	4628      	mov	r0, r5
1001fa38:	b005      	add	sp, #20
1001fa3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001fa3e:	9e02      	ldr	r6, [sp, #8]
1001fa40:	f04f 0900 	mov.w	r9, #0
1001fa44:	f846 9b04 	str.w	r9, [r6], #4
1001fa48:	9b02      	ldr	r3, [sp, #8]
1001fa4a:	1af6      	subs	r6, r6, r3
1001fa4c:	10b6      	asrs	r6, r6, #2
1001fa4e:	f8ca 6010 	str.w	r6, [sl, #16]
1001fa52:	4648      	mov	r0, r9
1001fa54:	f7fd fb98 	bl	1001d188 <__hi0bits>
1001fa58:	9b00      	ldr	r3, [sp, #0]
1001fa5a:	0176      	lsls	r6, r6, #5
1001fa5c:	681c      	ldr	r4, [r3, #0]
1001fa5e:	1a36      	subs	r6, r6, r0
1001fa60:	42a6      	cmp	r6, r4
1001fa62:	dc72      	bgt.n	1001fb4a <__gethex+0x272>
1001fa64:	f2c0 80f2 	blt.w	1001fc4c <__gethex+0x374>
1001fa68:	2700      	movs	r7, #0
1001fa6a:	9b00      	ldr	r3, [sp, #0]
1001fa6c:	689a      	ldr	r2, [r3, #8]
1001fa6e:	455a      	cmp	r2, fp
1001fa70:	f2c0 8129 	blt.w	1001fcc6 <__gethex+0x3ee>
1001fa74:	9b00      	ldr	r3, [sp, #0]
1001fa76:	685a      	ldr	r2, [r3, #4]
1001fa78:	455a      	cmp	r2, fp
1001fa7a:	dd49      	ble.n	1001fb10 <__gethex+0x238>
1001fa7c:	eba2 0b0b 	sub.w	fp, r2, fp
1001fa80:	455c      	cmp	r4, fp
1001fa82:	dc7f      	bgt.n	1001fb84 <__gethex+0x2ac>
1001fa84:	68db      	ldr	r3, [r3, #12]
1001fa86:	2b02      	cmp	r3, #2
1001fa88:	f000 815b 	beq.w	1001fd42 <__gethex+0x46a>
1001fa8c:	2b03      	cmp	r3, #3
1001fa8e:	f000 8153 	beq.w	1001fd38 <__gethex+0x460>
1001fa92:	2b01      	cmp	r3, #1
1001fa94:	f000 8136 	beq.w	1001fd04 <__gethex+0x42c>
1001fa98:	9801      	ldr	r0, [sp, #4]
1001fa9a:	4651      	mov	r1, sl
1001fa9c:	f7fd fac2 	bl	1001d024 <_Bfree>
1001faa0:	2550      	movs	r5, #80	@ 0x50
1001faa2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001faa4:	2300      	movs	r3, #0
1001faa6:	4628      	mov	r0, r5
1001faa8:	6013      	str	r3, [r2, #0]
1001faaa:	b005      	add	sp, #20
1001faac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001fab0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001fab4:	f816 3f01 	ldrb.w	r3, [r6, #1]!
1001fab8:	eb02 0241 	add.w	r2, r2, r1, lsl #1
1001fabc:	f1a2 0110 	sub.w	r1, r2, #16
1001fac0:	f818 2003 	ldrb.w	r2, [r8, r3]
1001fac4:	2a00      	cmp	r2, #0
1001fac6:	d0aa      	beq.n	1001fa1e <__gethex+0x146>
1001fac8:	2a19      	cmp	r2, #25
1001faca:	ddf1      	ble.n	1001fab0 <__gethex+0x1d8>
1001facc:	e7a7      	b.n	1001fa1e <__gethex+0x146>
1001face:	4944      	ldr	r1, [pc, #272]	@ (1001fbe0 <__gethex+0x308>)
1001fad0:	2201      	movs	r2, #1
1001fad2:	4620      	mov	r0, r4
1001fad4:	f7ff fa1e 	bl	1001ef14 <strncmp>
1001fad8:	4682      	mov	sl, r0
1001fada:	2800      	cmp	r0, #0
1001fadc:	d173      	bne.n	1001fbc6 <__gethex+0x2ee>
1001fade:	7863      	ldrb	r3, [r4, #1]
1001fae0:	f818 2003 	ldrb.w	r2, [r8, r3]
1001fae4:	1c65      	adds	r5, r4, #1
1001fae6:	2a00      	cmp	r2, #0
1001fae8:	d06f      	beq.n	1001fbca <__gethex+0x2f2>
1001faea:	2b30      	cmp	r3, #48	@ 0x30
1001faec:	462c      	mov	r4, r5
1001faee:	f040 8134 	bne.w	1001fd5a <__gethex+0x482>
1001faf2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1001faf6:	2b30      	cmp	r3, #48	@ 0x30
1001faf8:	d0fb      	beq.n	1001faf2 <__gethex+0x21a>
1001fafa:	f818 3003 	ldrb.w	r3, [r8, r3]
1001fafe:	fab3 fa83 	clz	sl, r3
1001fb02:	2701      	movs	r7, #1
1001fb04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
1001fb08:	2b00      	cmp	r3, #0
1001fb0a:	f47f af0a 	bne.w	1001f922 <__gethex+0x4a>
1001fb0e:	e058      	b.n	1001fbc2 <__gethex+0x2ea>
1001fb10:	2501      	movs	r5, #1
1001fb12:	b157      	cbz	r7, 1001fb2a <__gethex+0x252>
1001fb14:	9b00      	ldr	r3, [sp, #0]
1001fb16:	68da      	ldr	r2, [r3, #12]
1001fb18:	2a02      	cmp	r2, #2
1001fb1a:	d063      	beq.n	1001fbe4 <__gethex+0x30c>
1001fb1c:	2a03      	cmp	r2, #3
1001fb1e:	d065      	beq.n	1001fbec <__gethex+0x314>
1001fb20:	2a01      	cmp	r2, #1
1001fb22:	f000 8086 	beq.w	1001fc32 <__gethex+0x35a>
1001fb26:	f045 0510 	orr.w	r5, r5, #16
1001fb2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001fb2c:	f8c3 a000 	str.w	sl, [r3]
1001fb30:	9b03      	ldr	r3, [sp, #12]
1001fb32:	4628      	mov	r0, r5
1001fb34:	f8c3 b000 	str.w	fp, [r3]
1001fb38:	b005      	add	sp, #20
1001fb3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001fb3e:	462e      	mov	r6, r5
1001fb40:	e70a      	b.n	1001f958 <__gethex+0x80>
1001fb42:	2001      	movs	r0, #1
1001fb44:	78aa      	ldrb	r2, [r5, #2]
1001fb46:	1cae      	adds	r6, r5, #2
1001fb48:	e75c      	b.n	1001fa04 <__gethex+0x12c>
1001fb4a:	1b36      	subs	r6, r6, r4
1001fb4c:	4631      	mov	r1, r6
1001fb4e:	4650      	mov	r0, sl
1001fb50:	f7fd ff30 	bl	1001d9b4 <__any_on>
1001fb54:	4607      	mov	r7, r0
1001fb56:	b178      	cbz	r0, 1001fb78 <__gethex+0x2a0>
1001fb58:	1e71      	subs	r1, r6, #1
1001fb5a:	114a      	asrs	r2, r1, #5
1001fb5c:	9b02      	ldr	r3, [sp, #8]
1001fb5e:	2701      	movs	r7, #1
1001fb60:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
1001fb64:	f001 021f 	and.w	r2, r1, #31
1001fb68:	fa07 f202 	lsl.w	r2, r7, r2
1001fb6c:	4202      	tst	r2, r0
1001fb6e:	d003      	beq.n	1001fb78 <__gethex+0x2a0>
1001fb70:	42b9      	cmp	r1, r7
1001fb72:	f300 80b9 	bgt.w	1001fce8 <__gethex+0x410>
1001fb76:	2702      	movs	r7, #2
1001fb78:	4631      	mov	r1, r6
1001fb7a:	4650      	mov	r0, sl
1001fb7c:	44b3      	add	fp, r6
1001fb7e:	f7ff fe59 	bl	1001f834 <rshift>
1001fb82:	e772      	b.n	1001fa6a <__gethex+0x192>
1001fb84:	f10b 36ff 	add.w	r6, fp, #4294967295	@ 0xffffffff
1001fb88:	2f00      	cmp	r7, #0
1001fb8a:	f040 80a5 	bne.w	1001fcd8 <__gethex+0x400>
1001fb8e:	2e00      	cmp	r6, #0
1001fb90:	f040 80a4 	bne.w	1001fcdc <__gethex+0x404>
1001fb94:	1173      	asrs	r3, r6, #5
1001fb96:	9a02      	ldr	r2, [sp, #8]
1001fb98:	f006 061f 	and.w	r6, r6, #31
1001fb9c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
1001fba0:	2301      	movs	r3, #1
1001fba2:	40b3      	lsls	r3, r6
1001fba4:	4213      	tst	r3, r2
1001fba6:	4659      	mov	r1, fp
1001fba8:	4650      	mov	r0, sl
1001fbaa:	bf18      	it	ne
1001fbac:	f047 0702 	orrne.w	r7, r7, #2
1001fbb0:	f7ff fe40 	bl	1001f834 <rshift>
1001fbb4:	9b00      	ldr	r3, [sp, #0]
1001fbb6:	eba4 040b 	sub.w	r4, r4, fp
1001fbba:	2502      	movs	r5, #2
1001fbbc:	f8d3 b004 	ldr.w	fp, [r3, #4]
1001fbc0:	e7a7      	b.n	1001fb12 <__gethex+0x23a>
1001fbc2:	4626      	mov	r6, r4
1001fbc4:	e6b4      	b.n	1001f930 <__gethex+0x58>
1001fbc6:	7823      	ldrb	r3, [r4, #0]
1001fbc8:	4625      	mov	r5, r4
1001fbca:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
1001fbce:	2b50      	cmp	r3, #80	@ 0x50
1001fbd0:	f000 8093 	beq.w	1001fcfa <__gethex+0x422>
1001fbd4:	f8c9 5000 	str.w	r5, [r9]
1001fbd8:	e729      	b.n	1001fa2e <__gethex+0x156>
1001fbda:	bf00      	nop
1001fbdc:	1002a81c 	.word	0x1002a81c
1001fbe0:	10021508 	.word	0x10021508
1001fbe4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001fbe6:	f1c3 0301 	rsb	r3, r3, #1
1001fbea:	930f      	str	r3, [sp, #60]	@ 0x3c
1001fbec:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001fbee:	2b00      	cmp	r3, #0
1001fbf0:	d099      	beq.n	1001fb26 <__gethex+0x24e>
1001fbf2:	f8dd 8008 	ldr.w	r8, [sp, #8]
1001fbf6:	f8da 7010 	ldr.w	r7, [sl, #16]
1001fbfa:	4642      	mov	r2, r8
1001fbfc:	ea4f 0987 	mov.w	r9, r7, lsl #2
1001fc00:	eb08 0687 	add.w	r6, r8, r7, lsl #2
1001fc04:	2000      	movs	r0, #0
1001fc06:	e003      	b.n	1001fc10 <__gethex+0x338>
1001fc08:	4296      	cmp	r6, r2
1001fc0a:	f842 0c04 	str.w	r0, [r2, #-4]
1001fc0e:	d93c      	bls.n	1001fc8a <__gethex+0x3b2>
1001fc10:	4694      	mov	ip, r2
1001fc12:	f852 1b04 	ldr.w	r1, [r2], #4
1001fc16:	1c4b      	adds	r3, r1, #1
1001fc18:	d0f6      	beq.n	1001fc08 <__gethex+0x330>
1001fc1a:	3101      	adds	r1, #1
1001fc1c:	2d02      	cmp	r5, #2
1001fc1e:	f8cc 1000 	str.w	r1, [ip]
1001fc22:	f000 8093 	beq.w	1001fd4c <__gethex+0x474>
1001fc26:	f014 041f 	ands.w	r4, r4, #31
1001fc2a:	f040 80b3 	bne.w	1001fd94 <__gethex+0x4bc>
1001fc2e:	2521      	movs	r5, #33	@ 0x21
1001fc30:	e77b      	b.n	1001fb2a <__gethex+0x252>
1001fc32:	07b9      	lsls	r1, r7, #30
1001fc34:	f57f af77 	bpl.w	1001fb26 <__gethex+0x24e>
1001fc38:	9b02      	ldr	r3, [sp, #8]
1001fc3a:	681a      	ldr	r2, [r3, #0]
1001fc3c:	4317      	orrs	r7, r2
1001fc3e:	07fa      	lsls	r2, r7, #31
1001fc40:	d4d7      	bmi.n	1001fbf2 <__gethex+0x31a>
1001fc42:	e770      	b.n	1001fb26 <__gethex+0x24e>
1001fc44:	2000      	movs	r0, #0
1001fc46:	e77d      	b.n	1001fb44 <__gethex+0x26c>
1001fc48:	46ab      	mov	fp, r5
1001fc4a:	e680      	b.n	1001f94e <__gethex+0x76>
1001fc4c:	1ba2      	subs	r2, r4, r6
1001fc4e:	4651      	mov	r1, sl
1001fc50:	9801      	ldr	r0, [sp, #4]
1001fc52:	ebab 0b02 	sub.w	fp, fp, r2
1001fc56:	f7fd fc27 	bl	1001d4a8 <__lshift>
1001fc5a:	f100 0314 	add.w	r3, r0, #20
1001fc5e:	4682      	mov	sl, r0
1001fc60:	9302      	str	r3, [sp, #8]
1001fc62:	2700      	movs	r7, #0
1001fc64:	e701      	b.n	1001fa6a <__gethex+0x192>
1001fc66:	7872      	ldrb	r2, [r6, #1]
1001fc68:	f818 1002 	ldrb.w	r1, [r8, r2]
1001fc6c:	1c75      	adds	r5, r6, #1
1001fc6e:	462e      	mov	r6, r5
1001fc70:	2900      	cmp	r1, #0
1001fc72:	f43f ae6c 	beq.w	1001f94e <__gethex+0x76>
1001fc76:	f816 2f01 	ldrb.w	r2, [r6, #1]!
1001fc7a:	f818 3002 	ldrb.w	r3, [r8, r2]
1001fc7e:	2b00      	cmp	r3, #0
1001fc80:	d1f9      	bne.n	1001fc76 <__gethex+0x39e>
1001fc82:	e661      	b.n	1001f948 <__gethex+0x70>
1001fc84:	1cbc      	adds	r4, r7, #2
1001fc86:	2700      	movs	r7, #0
1001fc88:	e63b      	b.n	1001f902 <__gethex+0x2a>
1001fc8a:	f8da 2008 	ldr.w	r2, [sl, #8]
1001fc8e:	4297      	cmp	r7, r2
1001fc90:	da65      	bge.n	1001fd5e <__gethex+0x486>
1001fc92:	463a      	mov	r2, r7
1001fc94:	eb0a 0182 	add.w	r1, sl, r2, lsl #2
1001fc98:	2001      	movs	r0, #1
1001fc9a:	3201      	adds	r2, #1
1001fc9c:	2d02      	cmp	r5, #2
1001fc9e:	f8ca 2010 	str.w	r2, [sl, #16]
1001fca2:	6148      	str	r0, [r1, #20]
1001fca4:	d052      	beq.n	1001fd4c <__gethex+0x474>
1001fca6:	4297      	cmp	r7, r2
1001fca8:	dabd      	bge.n	1001fc26 <__gethex+0x34e>
1001fcaa:	2a00      	cmp	r2, #0
1001fcac:	dc7f      	bgt.n	1001fdae <__gethex+0x4d6>
1001fcae:	2200      	movs	r2, #0
1001fcb0:	f8ca 2010 	str.w	r2, [sl, #16]
1001fcb4:	2200      	movs	r2, #0
1001fcb6:	f8ca 2014 	str.w	r2, [sl, #20]
1001fcba:	9b00      	ldr	r3, [sp, #0]
1001fcbc:	689a      	ldr	r2, [r3, #8]
1001fcbe:	f10b 0b01 	add.w	fp, fp, #1
1001fcc2:	455a      	cmp	r2, fp
1001fcc4:	dab3      	bge.n	1001fc2e <__gethex+0x356>
1001fcc6:	9801      	ldr	r0, [sp, #4]
1001fcc8:	4651      	mov	r1, sl
1001fcca:	f7fd f9ab 	bl	1001d024 <_Bfree>
1001fcce:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1001fcd0:	2300      	movs	r3, #0
1001fcd2:	6013      	str	r3, [r2, #0]
1001fcd4:	25a3      	movs	r5, #163	@ 0xa3
1001fcd6:	e6ae      	b.n	1001fa36 <__gethex+0x15e>
1001fcd8:	2701      	movs	r7, #1
1001fcda:	e75b      	b.n	1001fb94 <__gethex+0x2bc>
1001fcdc:	4631      	mov	r1, r6
1001fcde:	4650      	mov	r0, sl
1001fce0:	f7fd fe68 	bl	1001d9b4 <__any_on>
1001fce4:	4607      	mov	r7, r0
1001fce6:	e755      	b.n	1001fb94 <__gethex+0x2bc>
1001fce8:	1eb1      	subs	r1, r6, #2
1001fcea:	4650      	mov	r0, sl
1001fcec:	f7fd fe62 	bl	1001d9b4 <__any_on>
1001fcf0:	2800      	cmp	r0, #0
1001fcf2:	f43f af40 	beq.w	1001fb76 <__gethex+0x29e>
1001fcf6:	2703      	movs	r7, #3
1001fcf8:	e73e      	b.n	1001fb78 <__gethex+0x2a0>
1001fcfa:	f04f 0b00 	mov.w	fp, #0
1001fcfe:	f04f 0a01 	mov.w	sl, #1
1001fd02:	e676      	b.n	1001f9f2 <__gethex+0x11a>
1001fd04:	455c      	cmp	r4, fp
1001fd06:	f47f aec7 	bne.w	1001fa98 <__gethex+0x1c0>
1001fd0a:	2c01      	cmp	r4, #1
1001fd0c:	d008      	beq.n	1001fd20 <__gethex+0x448>
1001fd0e:	1e61      	subs	r1, r4, #1
1001fd10:	4650      	mov	r0, sl
1001fd12:	f7fd fe4f 	bl	1001d9b4 <__any_on>
1001fd16:	2800      	cmp	r0, #0
1001fd18:	f43f aebe 	beq.w	1001fa98 <__gethex+0x1c0>
1001fd1c:	9b00      	ldr	r3, [sp, #0]
1001fd1e:	685a      	ldr	r2, [r3, #4]
1001fd20:	9903      	ldr	r1, [sp, #12]
1001fd22:	600a      	str	r2, [r1, #0]
1001fd24:	9a02      	ldr	r2, [sp, #8]
1001fd26:	2301      	movs	r3, #1
1001fd28:	f8ca 3010 	str.w	r3, [sl, #16]
1001fd2c:	6013      	str	r3, [r2, #0]
1001fd2e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001fd30:	2562      	movs	r5, #98	@ 0x62
1001fd32:	f8c3 a000 	str.w	sl, [r3]
1001fd36:	e67e      	b.n	1001fa36 <__gethex+0x15e>
1001fd38:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001fd3a:	2b00      	cmp	r3, #0
1001fd3c:	f43f aeac 	beq.w	1001fa98 <__gethex+0x1c0>
1001fd40:	e7ee      	b.n	1001fd20 <__gethex+0x448>
1001fd42:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1001fd44:	2b00      	cmp	r3, #0
1001fd46:	f47f aea7 	bne.w	1001fa98 <__gethex+0x1c0>
1001fd4a:	e7e9      	b.n	1001fd20 <__gethex+0x448>
1001fd4c:	9b00      	ldr	r3, [sp, #0]
1001fd4e:	681a      	ldr	r2, [r3, #0]
1001fd50:	3a01      	subs	r2, #1
1001fd52:	42a2      	cmp	r2, r4
1001fd54:	d054      	beq.n	1001fe00 <__gethex+0x528>
1001fd56:	2522      	movs	r5, #34	@ 0x22
1001fd58:	e6e7      	b.n	1001fb2a <__gethex+0x252>
1001fd5a:	2701      	movs	r7, #1
1001fd5c:	e5e1      	b.n	1001f922 <__gethex+0x4a>
1001fd5e:	f8da 1004 	ldr.w	r1, [sl, #4]
1001fd62:	9801      	ldr	r0, [sp, #4]
1001fd64:	3101      	adds	r1, #1
1001fd66:	f7fd f937 	bl	1001cfd8 <_Balloc>
1001fd6a:	4606      	mov	r6, r0
1001fd6c:	2800      	cmp	r0, #0
1001fd6e:	d05f      	beq.n	1001fe30 <__gethex+0x558>
1001fd70:	f8da 2010 	ldr.w	r2, [sl, #16]
1001fd74:	3202      	adds	r2, #2
1001fd76:	0092      	lsls	r2, r2, #2
1001fd78:	f10a 010c 	add.w	r1, sl, #12
1001fd7c:	300c      	adds	r0, #12
1001fd7e:	f7f8 fbaf 	bl	100184e0 <memcpy>
1001fd82:	4651      	mov	r1, sl
1001fd84:	9801      	ldr	r0, [sp, #4]
1001fd86:	f7fd f94d 	bl	1001d024 <_Bfree>
1001fd8a:	f106 0814 	add.w	r8, r6, #20
1001fd8e:	6932      	ldr	r2, [r6, #16]
1001fd90:	46b2      	mov	sl, r6
1001fd92:	e77f      	b.n	1001fc94 <__gethex+0x3bc>
1001fd94:	44c1      	add	r9, r8
1001fd96:	f1c4 0420 	rsb	r4, r4, #32
1001fd9a:	f859 0c04 	ldr.w	r0, [r9, #-4]
1001fd9e:	f7fd f9f3 	bl	1001d188 <__hi0bits>
1001fda2:	42a0      	cmp	r0, r4
1001fda4:	f6bf af43 	bge.w	1001fc2e <__gethex+0x356>
1001fda8:	f8da 2010 	ldr.w	r2, [sl, #16]
1001fdac:	e77d      	b.n	1001fcaa <__gethex+0x3d2>
1001fdae:	f8da 0014 	ldr.w	r0, [sl, #20]
1001fdb2:	eb08 0282 	add.w	r2, r8, r2, lsl #2
1001fdb6:	f10a 0418 	add.w	r4, sl, #24
1001fdba:	42a2      	cmp	r2, r4
1001fdbc:	ea4f 0050 	mov.w	r0, r0, lsr #1
1001fdc0:	d92a      	bls.n	1001fe18 <__gethex+0x540>
1001fdc2:	4645      	mov	r5, r8
1001fdc4:	6823      	ldr	r3, [r4, #0]
1001fdc6:	ea40 70c3 	orr.w	r0, r0, r3, lsl #31
1001fdca:	f845 0b04 	str.w	r0, [r5], #4
1001fdce:	f854 0b04 	ldr.w	r0, [r4], #4
1001fdd2:	42a2      	cmp	r2, r4
1001fdd4:	ea4f 0050 	mov.w	r0, r0, lsr #1
1001fdd8:	d8f4      	bhi.n	1001fdc4 <__gethex+0x4ec>
1001fdda:	eba2 020a 	sub.w	r2, r2, sl
1001fdde:	3a19      	subs	r2, #25
1001fde0:	0892      	lsrs	r2, r2, #2
1001fde2:	3201      	adds	r2, #1
1001fde4:	f848 0022 	str.w	r0, [r8, r2, lsl #2]
1001fde8:	eb08 0282 	add.w	r2, r8, r2, lsl #2
1001fdec:	b9c0      	cbnz	r0, 1001fe20 <__gethex+0x548>
1001fdee:	eba2 0108 	sub.w	r1, r2, r8
1001fdf2:	1089      	asrs	r1, r1, #2
1001fdf4:	4590      	cmp	r8, r2
1001fdf6:	f8ca 1010 	str.w	r1, [sl, #16]
1001fdfa:	f47f af5e 	bne.w	1001fcba <__gethex+0x3e2>
1001fdfe:	e759      	b.n	1001fcb4 <__gethex+0x3dc>
1001fe00:	1162      	asrs	r2, r4, #5
1001fe02:	f004 041f 	and.w	r4, r4, #31
1001fe06:	f858 1022 	ldr.w	r1, [r8, r2, lsl #2]
1001fe0a:	2201      	movs	r2, #1
1001fe0c:	40a2      	lsls	r2, r4
1001fe0e:	420a      	tst	r2, r1
1001fe10:	bf14      	ite	ne
1001fe12:	2521      	movne	r5, #33	@ 0x21
1001fe14:	2522      	moveq	r5, #34	@ 0x22
1001fe16:	e688      	b.n	1001fb2a <__gethex+0x252>
1001fe18:	f8c8 0000 	str.w	r0, [r8]
1001fe1c:	4642      	mov	r2, r8
1001fe1e:	b168      	cbz	r0, 1001fe3c <__gethex+0x564>
1001fe20:	3204      	adds	r2, #4
1001fe22:	e7e4      	b.n	1001fdee <__gethex+0x516>
1001fe24:	4b07      	ldr	r3, [pc, #28]	@ (1001fe44 <__gethex+0x56c>)
1001fe26:	4808      	ldr	r0, [pc, #32]	@ (1001fe48 <__gethex+0x570>)
1001fe28:	4652      	mov	r2, sl
1001fe2a:	21e4      	movs	r1, #228	@ 0xe4
1001fe2c:	f7ff fbb4 	bl	1001f598 <__assert_func>
1001fe30:	4b04      	ldr	r3, [pc, #16]	@ (1001fe44 <__gethex+0x56c>)
1001fe32:	4805      	ldr	r0, [pc, #20]	@ (1001fe48 <__gethex+0x570>)
1001fe34:	4632      	mov	r2, r6
1001fe36:	2184      	movs	r1, #132	@ 0x84
1001fe38:	f7ff fbae 	bl	1001f598 <__assert_func>
1001fe3c:	f8ca 0010 	str.w	r0, [sl, #16]
1001fe40:	e738      	b.n	1001fcb4 <__gethex+0x3dc>
1001fe42:	bf00      	nop
1001fe44:	10023a2c 	.word	0x10023a2c
1001fe48:	1002a7b0 	.word	0x1002a7b0

1001fe4c <__match>:
1001fe4c:	b410      	push	{r4}
1001fe4e:	6804      	ldr	r4, [r0, #0]
1001fe50:	3401      	adds	r4, #1
1001fe52:	e009      	b.n	1001fe68 <__match+0x1c>
1001fe54:	f814 3b01 	ldrb.w	r3, [r4], #1
1001fe58:	f1a3 0c41 	sub.w	ip, r3, #65	@ 0x41
1001fe5c:	f1bc 0f19 	cmp.w	ip, #25
1001fe60:	bf98      	it	ls
1001fe62:	3320      	addls	r3, #32
1001fe64:	4293      	cmp	r3, r2
1001fe66:	d107      	bne.n	1001fe78 <__match+0x2c>
1001fe68:	f811 2b01 	ldrb.w	r2, [r1], #1
1001fe6c:	2a00      	cmp	r2, #0
1001fe6e:	d1f1      	bne.n	1001fe54 <__match+0x8>
1001fe70:	6004      	str	r4, [r0, #0]
1001fe72:	2001      	movs	r0, #1
1001fe74:	bc10      	pop	{r4}
1001fe76:	4770      	bx	lr
1001fe78:	2000      	movs	r0, #0
1001fe7a:	bc10      	pop	{r4}
1001fe7c:	4770      	bx	lr
1001fe7e:	bf00      	nop

1001fe80 <__hexnan>:
1001fe80:	6809      	ldr	r1, [r1, #0]
1001fe82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001fe86:	114b      	asrs	r3, r1, #5
1001fe88:	eb02 0383 	add.w	r3, r2, r3, lsl #2
1001fe8c:	f011 0b1f 	ands.w	fp, r1, #31
1001fe90:	4607      	mov	r7, r0
1001fe92:	bf0c      	ite	eq
1001fe94:	4618      	moveq	r0, r3
1001fe96:	1d18      	addne	r0, r3, #4
1001fe98:	683c      	ldr	r4, [r7, #0]
1001fe9a:	bf0c      	ite	eq
1001fe9c:	1f1d      	subeq	r5, r3, #4
1001fe9e:	461d      	movne	r5, r3
1001fea0:	2300      	movs	r3, #0
1001fea2:	f840 3c04 	str.w	r3, [r0, #-4]
1001fea6:	7861      	ldrb	r1, [r4, #1]
1001fea8:	b085      	sub	sp, #20
1001feaa:	3401      	adds	r4, #1
1001feac:	2900      	cmp	r1, #0
1001feae:	f000 80a8 	beq.w	10020002 <__hexnan+0x182>
1001feb2:	469e      	mov	lr, r3
1001feb4:	469a      	mov	sl, r3
1001feb6:	461e      	mov	r6, r3
1001feb8:	460b      	mov	r3, r1
1001feba:	4601      	mov	r1, r0
1001febc:	4610      	mov	r0, r2
1001febe:	f8df 9188 	ldr.w	r9, [pc, #392]	@ 10020048 <__hexnan+0x1c8>
1001fec2:	9701      	str	r7, [sp, #4]
1001fec4:	465a      	mov	r2, fp
1001fec6:	46a8      	mov	r8, r5
1001fec8:	46ac      	mov	ip, r5
1001feca:	4683      	mov	fp, r0
1001fecc:	e010      	b.n	1001fef0 <__hexnan+0x70>
1001fece:	2b20      	cmp	r3, #32
1001fed0:	f200 808f 	bhi.w	1001fff2 <__hexnan+0x172>
1001fed4:	4556      	cmp	r6, sl
1001fed6:	dd08      	ble.n	1001feea <__hexnan+0x6a>
1001fed8:	45c4      	cmp	ip, r8
1001feda:	d202      	bcs.n	1001fee2 <__hexnan+0x62>
1001fedc:	f1be 0f07 	cmp.w	lr, #7
1001fee0:	dd5f      	ble.n	1001ffa2 <__hexnan+0x122>
1001fee2:	45e3      	cmp	fp, ip
1001fee4:	d354      	bcc.n	1001ff90 <__hexnan+0x110>
1001fee6:	f04f 0e08 	mov.w	lr, #8
1001feea:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1001feee:	b1b3      	cbz	r3, 1001ff1e <__hexnan+0x9e>
1001fef0:	f819 7003 	ldrb.w	r7, [r9, r3]
1001fef4:	2f00      	cmp	r7, #0
1001fef6:	d0ea      	beq.n	1001fece <__hexnan+0x4e>
1001fef8:	f10e 0e01 	add.w	lr, lr, #1
1001fefc:	f1be 0f08 	cmp.w	lr, #8
1001ff00:	f106 0601 	add.w	r6, r6, #1
1001ff04:	dc3a      	bgt.n	1001ff7c <__hexnan+0xfc>
1001ff06:	f8dc 3000 	ldr.w	r3, [ip]
1001ff0a:	011b      	lsls	r3, r3, #4
1001ff0c:	f007 070f 	and.w	r7, r7, #15
1001ff10:	431f      	orrs	r7, r3
1001ff12:	f8cc 7000 	str.w	r7, [ip]
1001ff16:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1001ff1a:	2b00      	cmp	r3, #0
1001ff1c:	d1e8      	bne.n	1001fef0 <__hexnan+0x70>
1001ff1e:	465b      	mov	r3, fp
1001ff20:	4608      	mov	r0, r1
1001ff22:	4693      	mov	fp, r2
1001ff24:	461a      	mov	r2, r3
1001ff26:	2e00      	cmp	r6, #0
1001ff28:	d06b      	beq.n	10020002 <__hexnan+0x182>
1001ff2a:	45e0      	cmp	r8, ip
1001ff2c:	d902      	bls.n	1001ff34 <__hexnan+0xb4>
1001ff2e:	f1be 0f07 	cmp.w	lr, #7
1001ff32:	dd73      	ble.n	1002001c <__hexnan+0x19c>
1001ff34:	4562      	cmp	r2, ip
1001ff36:	d24d      	bcs.n	1001ffd4 <__hexnan+0x154>
1001ff38:	1f11      	subs	r1, r2, #4
1001ff3a:	4663      	mov	r3, ip
1001ff3c:	f853 4b04 	ldr.w	r4, [r3], #4
1001ff40:	f841 4f04 	str.w	r4, [r1, #4]!
1001ff44:	42ab      	cmp	r3, r5
1001ff46:	d9f9      	bls.n	1001ff3c <__hexnan+0xbc>
1001ff48:	eba5 030c 	sub.w	r3, r5, ip
1001ff4c:	f023 0303 	bic.w	r3, r3, #3
1001ff50:	1c69      	adds	r1, r5, #1
1001ff52:	3304      	adds	r3, #4
1001ff54:	f10c 0c01 	add.w	ip, ip, #1
1001ff58:	4561      	cmp	r1, ip
1001ff5a:	bf38      	it	cc
1001ff5c:	2304      	movcc	r3, #4
1001ff5e:	4413      	add	r3, r2
1001ff60:	2100      	movs	r1, #0
1001ff62:	f843 1b04 	str.w	r1, [r3], #4
1001ff66:	42ab      	cmp	r3, r5
1001ff68:	d9fb      	bls.n	1001ff62 <__hexnan+0xe2>
1001ff6a:	f850 3c04 	ldr.w	r3, [r0, #-4]
1001ff6e:	2b00      	cmp	r3, #0
1001ff70:	d14d      	bne.n	1002000e <__hexnan+0x18e>
1001ff72:	42aa      	cmp	r2, r5
1001ff74:	d049      	beq.n	1002000a <__hexnan+0x18a>
1001ff76:	f855 3d04 	ldr.w	r3, [r5, #-4]!
1001ff7a:	e7f8      	b.n	1001ff6e <__hexnan+0xee>
1001ff7c:	45e3      	cmp	fp, ip
1001ff7e:	d2b4      	bcs.n	1001feea <__hexnan+0x6a>
1001ff80:	2300      	movs	r3, #0
1001ff82:	f84c 3c04 	str.w	r3, [ip, #-4]
1001ff86:	f04f 0e01 	mov.w	lr, #1
1001ff8a:	f1ac 0c04 	sub.w	ip, ip, #4
1001ff8e:	e7bd      	b.n	1001ff0c <__hexnan+0x8c>
1001ff90:	2300      	movs	r3, #0
1001ff92:	f1ac 0804 	sub.w	r8, ip, #4
1001ff96:	f84c 3c04 	str.w	r3, [ip, #-4]
1001ff9a:	46b2      	mov	sl, r6
1001ff9c:	46c4      	mov	ip, r8
1001ff9e:	469e      	mov	lr, r3
1001ffa0:	e7a3      	b.n	1001feea <__hexnan+0x6a>
1001ffa2:	f1ce 0008 	rsb	r0, lr, #8
1001ffa6:	0080      	lsls	r0, r0, #2
1001ffa8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
1001ffac:	f8dc 3000 	ldr.w	r3, [ip]
1001ffb0:	4667      	mov	r7, ip
1001ffb2:	f1c0 0e20 	rsb	lr, r0, #32
1001ffb6:	4684      	mov	ip, r0
1001ffb8:	6878      	ldr	r0, [r7, #4]
1001ffba:	fa00 f20e 	lsl.w	r2, r0, lr
1001ffbe:	431a      	orrs	r2, r3
1001ffc0:	fa20 f30c 	lsr.w	r3, r0, ip
1001ffc4:	603a      	str	r2, [r7, #0]
1001ffc6:	f847 3f04 	str.w	r3, [r7, #4]!
1001ffca:	4547      	cmp	r7, r8
1001ffcc:	d3f4      	bcc.n	1001ffb8 <__hexnan+0x138>
1001ffce:	e9dd 2c02 	ldrd	r2, ip, [sp, #8]
1001ffd2:	e786      	b.n	1001fee2 <__hexnan+0x62>
1001ffd4:	f850 3c04 	ldr.w	r3, [r0, #-4]
1001ffd8:	f1bb 0f00 	cmp.w	fp, #0
1001ffdc:	d0c7      	beq.n	1001ff6e <__hexnan+0xee>
1001ffde:	f1cb 0b20 	rsb	fp, fp, #32
1001ffe2:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001ffe6:	fa21 f10b 	lsr.w	r1, r1, fp
1001ffea:	400b      	ands	r3, r1
1001ffec:	f840 3c04 	str.w	r3, [r0, #-4]
1001fff0:	e7bd      	b.n	1001ff6e <__hexnan+0xee>
1001fff2:	4608      	mov	r0, r1
1001fff4:	4619      	mov	r1, r3
1001fff6:	2929      	cmp	r1, #41	@ 0x29
1001fff8:	465b      	mov	r3, fp
1001fffa:	9f01      	ldr	r7, [sp, #4]
1001fffc:	4693      	mov	fp, r2
1001fffe:	461a      	mov	r2, r3
10020000:	d009      	beq.n	10020016 <__hexnan+0x196>
10020002:	2004      	movs	r0, #4
10020004:	b005      	add	sp, #20
10020006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1002000a:	2301      	movs	r3, #1
1002000c:	602b      	str	r3, [r5, #0]
1002000e:	2005      	movs	r0, #5
10020010:	b005      	add	sp, #20
10020012:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10020016:	3401      	adds	r4, #1
10020018:	603c      	str	r4, [r7, #0]
1002001a:	e784      	b.n	1001ff26 <__hexnan+0xa6>
1002001c:	f1ce 0308 	rsb	r3, lr, #8
10020020:	f8dc 1000 	ldr.w	r1, [ip]
10020024:	009b      	lsls	r3, r3, #2
10020026:	f1c3 0e20 	rsb	lr, r3, #32
1002002a:	4666      	mov	r6, ip
1002002c:	460c      	mov	r4, r1
1002002e:	6877      	ldr	r7, [r6, #4]
10020030:	fa07 f10e 	lsl.w	r1, r7, lr
10020034:	4321      	orrs	r1, r4
10020036:	fa27 f403 	lsr.w	r4, r7, r3
1002003a:	6031      	str	r1, [r6, #0]
1002003c:	f846 4f04 	str.w	r4, [r6, #4]!
10020040:	45b0      	cmp	r8, r6
10020042:	d8f4      	bhi.n	1002002e <__hexnan+0x1ae>
10020044:	e776      	b.n	1001ff34 <__hexnan+0xb4>
10020046:	bf00      	nop
10020048:	1002a81c 	.word	0x1002a81c

1002004c <fiprintf>:
1002004c:	b40e      	push	{r1, r2, r3}
1002004e:	b510      	push	{r4, lr}
10020050:	b083      	sub	sp, #12
10020052:	ab05      	add	r3, sp, #20
10020054:	4c06      	ldr	r4, [pc, #24]	@ (10020070 <fiprintf+0x24>)
10020056:	f853 2b04 	ldr.w	r2, [r3], #4
1002005a:	9301      	str	r3, [sp, #4]
1002005c:	4601      	mov	r1, r0
1002005e:	6820      	ldr	r0, [r4, #0]
10020060:	f7f5 fed6 	bl	10015e10 <_vfiprintf_r>
10020064:	b003      	add	sp, #12
10020066:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1002006a:	b003      	add	sp, #12
1002006c:	4770      	bx	lr
1002006e:	bf00      	nop
10020070:	20000598 	.word	0x20000598

10020074 <__ssprint_r>:
10020074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10020078:	6893      	ldr	r3, [r2, #8]
1002007a:	6817      	ldr	r7, [r2, #0]
1002007c:	b083      	sub	sp, #12
1002007e:	4692      	mov	sl, r2
10020080:	2b00      	cmp	r3, #0
10020082:	d074      	beq.n	1002016e <__ssprint_r+0xfa>
10020084:	f04f 0b00 	mov.w	fp, #0
10020088:	688b      	ldr	r3, [r1, #8]
1002008a:	680a      	ldr	r2, [r1, #0]
1002008c:	4681      	mov	r9, r0
1002008e:	460c      	mov	r4, r1
10020090:	465d      	mov	r5, fp
10020092:	e045      	b.n	10020120 <__ssprint_r+0xac>
10020094:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10020098:	f413 6f90 	tst.w	r3, #1152	@ 0x480
1002009c:	d02c      	beq.n	100200f8 <__ssprint_r+0x84>
1002009e:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
100200a2:	1a16      	subs	r6, r2, r0
100200a4:	eb01 0241 	add.w	r2, r1, r1, lsl #1
100200a8:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
100200ac:	1c71      	adds	r1, r6, #1
100200ae:	1052      	asrs	r2, r2, #1
100200b0:	4429      	add	r1, r5
100200b2:	4291      	cmp	r1, r2
100200b4:	bf92      	itee	ls
100200b6:	4690      	movls	r8, r2
100200b8:	4688      	movhi	r8, r1
100200ba:	460a      	movhi	r2, r1
100200bc:	055b      	lsls	r3, r3, #21
100200be:	d539      	bpl.n	10020134 <__ssprint_r+0xc0>
100200c0:	4611      	mov	r1, r2
100200c2:	4648      	mov	r0, r9
100200c4:	f7f3 fd2c 	bl	10013b20 <_malloc_r>
100200c8:	9001      	str	r0, [sp, #4]
100200ca:	2800      	cmp	r0, #0
100200cc:	d03d      	beq.n	1002014a <__ssprint_r+0xd6>
100200ce:	4632      	mov	r2, r6
100200d0:	6921      	ldr	r1, [r4, #16]
100200d2:	f7f8 fa05 	bl	100184e0 <memcpy>
100200d6:	89a2      	ldrh	r2, [r4, #12]
100200d8:	9b01      	ldr	r3, [sp, #4]
100200da:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
100200de:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
100200e2:	81a2      	strh	r2, [r4, #12]
100200e4:	1998      	adds	r0, r3, r6
100200e6:	eba8 0606 	sub.w	r6, r8, r6
100200ea:	60a6      	str	r6, [r4, #8]
100200ec:	f8c4 8014 	str.w	r8, [r4, #20]
100200f0:	6123      	str	r3, [r4, #16]
100200f2:	6020      	str	r0, [r4, #0]
100200f4:	46a8      	mov	r8, r5
100200f6:	462e      	mov	r6, r5
100200f8:	4632      	mov	r2, r6
100200fa:	4659      	mov	r1, fp
100200fc:	f7f7 fe38 	bl	10017d70 <memmove>
10020100:	f8da 1008 	ldr.w	r1, [sl, #8]
10020104:	68a3      	ldr	r3, [r4, #8]
10020106:	6822      	ldr	r2, [r4, #0]
10020108:	eba3 0308 	sub.w	r3, r3, r8
1002010c:	4432      	add	r2, r6
1002010e:	1b49      	subs	r1, r1, r5
10020110:	60a3      	str	r3, [r4, #8]
10020112:	6022      	str	r2, [r4, #0]
10020114:	f8ca 1008 	str.w	r1, [sl, #8]
10020118:	b349      	cbz	r1, 1002016e <__ssprint_r+0xfa>
1002011a:	e9d7 b500 	ldrd	fp, r5, [r7]
1002011e:	3708      	adds	r7, #8
10020120:	4698      	mov	r8, r3
10020122:	4610      	mov	r0, r2
10020124:	2d00      	cmp	r5, #0
10020126:	d0f8      	beq.n	1002011a <__ssprint_r+0xa6>
10020128:	429d      	cmp	r5, r3
1002012a:	461e      	mov	r6, r3
1002012c:	d2b2      	bcs.n	10020094 <__ssprint_r+0x20>
1002012e:	46a8      	mov	r8, r5
10020130:	462e      	mov	r6, r5
10020132:	e7e1      	b.n	100200f8 <__ssprint_r+0x84>
10020134:	4601      	mov	r1, r0
10020136:	4648      	mov	r0, r9
10020138:	f7f6 ff54 	bl	10016fe4 <_realloc_r>
1002013c:	4603      	mov	r3, r0
1002013e:	2800      	cmp	r0, #0
10020140:	d1d0      	bne.n	100200e4 <__ssprint_r+0x70>
10020142:	6921      	ldr	r1, [r4, #16]
10020144:	4648      	mov	r0, r9
10020146:	f7f9 fb7b 	bl	10019840 <_free_r>
1002014a:	89a3      	ldrh	r3, [r4, #12]
1002014c:	220c      	movs	r2, #12
1002014e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10020152:	f8c9 2000 	str.w	r2, [r9]
10020156:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1002015a:	81a3      	strh	r3, [r4, #12]
1002015c:	2200      	movs	r2, #0
1002015e:	2300      	movs	r3, #0
10020160:	f8ca 2008 	str.w	r2, [sl, #8]
10020164:	f8ca 3004 	str.w	r3, [sl, #4]
10020168:	b003      	add	sp, #12
1002016a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1002016e:	2000      	movs	r0, #0
10020170:	2300      	movs	r3, #0
10020172:	f8ca 3004 	str.w	r3, [sl, #4]
10020176:	b003      	add	sp, #12
10020178:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1002017c <_sungetc_r>:
1002017c:	b538      	push	{r3, r4, r5, lr}
1002017e:	1c4b      	adds	r3, r1, #1
10020180:	d01a      	beq.n	100201b8 <_sungetc_r+0x3c>
10020182:	4614      	mov	r4, r2
10020184:	8992      	ldrh	r2, [r2, #12]
10020186:	6863      	ldr	r3, [r4, #4]
10020188:	f022 0220 	bic.w	r2, r2, #32
1002018c:	81a2      	strh	r2, [r4, #12]
1002018e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
10020190:	b2cd      	uxtb	r5, r1
10020192:	b1a2      	cbz	r2, 100201be <_sungetc_r+0x42>
10020194:	6b62      	ldr	r2, [r4, #52]	@ 0x34
10020196:	429a      	cmp	r2, r3
10020198:	dd09      	ble.n	100201ae <_sungetc_r+0x32>
1002019a:	6823      	ldr	r3, [r4, #0]
1002019c:	1e5a      	subs	r2, r3, #1
1002019e:	6022      	str	r2, [r4, #0]
100201a0:	f803 5c01 	strb.w	r5, [r3, #-1]
100201a4:	6863      	ldr	r3, [r4, #4]
100201a6:	3301      	adds	r3, #1
100201a8:	6063      	str	r3, [r4, #4]
100201aa:	4628      	mov	r0, r5
100201ac:	bd38      	pop	{r3, r4, r5, pc}
100201ae:	4621      	mov	r1, r4
100201b0:	f000 f89e 	bl	100202f0 <__submore>
100201b4:	2800      	cmp	r0, #0
100201b6:	d0f0      	beq.n	1002019a <_sungetc_r+0x1e>
100201b8:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
100201bc:	e7f5      	b.n	100201aa <_sungetc_r+0x2e>
100201be:	6922      	ldr	r2, [r4, #16]
100201c0:	6821      	ldr	r1, [r4, #0]
100201c2:	b12a      	cbz	r2, 100201d0 <_sungetc_r+0x54>
100201c4:	428a      	cmp	r2, r1
100201c6:	d203      	bcs.n	100201d0 <_sungetc_r+0x54>
100201c8:	f811 2c01 	ldrb.w	r2, [r1, #-1]
100201cc:	42aa      	cmp	r2, r5
100201ce:	d00c      	beq.n	100201ea <_sungetc_r+0x6e>
100201d0:	4622      	mov	r2, r4
100201d2:	e9c4 130e 	strd	r1, r3, [r4, #56]	@ 0x38
100201d6:	f104 0040 	add.w	r0, r4, #64	@ 0x40
100201da:	2303      	movs	r3, #3
100201dc:	6363      	str	r3, [r4, #52]	@ 0x34
100201de:	6320      	str	r0, [r4, #48]	@ 0x30
100201e0:	f802 5f42 	strb.w	r5, [r2, #66]!
100201e4:	2301      	movs	r3, #1
100201e6:	6022      	str	r2, [r4, #0]
100201e8:	e7de      	b.n	100201a8 <_sungetc_r+0x2c>
100201ea:	3901      	subs	r1, #1
100201ec:	6021      	str	r1, [r4, #0]
100201ee:	3301      	adds	r3, #1
100201f0:	e7da      	b.n	100201a8 <_sungetc_r+0x2c>
100201f2:	bf00      	nop

100201f4 <__ssrefill_r>:
100201f4:	b510      	push	{r4, lr}
100201f6:	460c      	mov	r4, r1
100201f8:	6b09      	ldr	r1, [r1, #48]	@ 0x30
100201fa:	b169      	cbz	r1, 10020218 <__ssrefill_r+0x24>
100201fc:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10020200:	4299      	cmp	r1, r3
10020202:	d001      	beq.n	10020208 <__ssrefill_r+0x14>
10020204:	f7f9 fb1c 	bl	10019840 <_free_r>
10020208:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
1002020a:	6063      	str	r3, [r4, #4]
1002020c:	2000      	movs	r0, #0
1002020e:	6320      	str	r0, [r4, #48]	@ 0x30
10020210:	b113      	cbz	r3, 10020218 <__ssrefill_r+0x24>
10020212:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
10020214:	6023      	str	r3, [r4, #0]
10020216:	bd10      	pop	{r4, pc}
10020218:	89a2      	ldrh	r2, [r4, #12]
1002021a:	6923      	ldr	r3, [r4, #16]
1002021c:	2100      	movs	r1, #0
1002021e:	f042 0220 	orr.w	r2, r2, #32
10020222:	6061      	str	r1, [r4, #4]
10020224:	81a2      	strh	r2, [r4, #12]
10020226:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1002022a:	e7f3      	b.n	10020214 <__ssrefill_r+0x20>

1002022c <_sfread_r>:
1002022c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10020230:	b085      	sub	sp, #20
10020232:	469c      	mov	ip, r3
10020234:	fb02 f303 	mul.w	r3, r2, r3
10020238:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
1002023a:	9301      	str	r3, [sp, #4]
1002023c:	2b00      	cmp	r3, #0
1002023e:	d03c      	beq.n	100202ba <_sfread_r+0x8e>
10020240:	460f      	mov	r7, r1
10020242:	e9d4 1500 	ldrd	r1, r5, [r4]
10020246:	9b01      	ldr	r3, [sp, #4]
10020248:	42ab      	cmp	r3, r5
1002024a:	d94e      	bls.n	100202ea <_sfread_r+0xbe>
1002024c:	9e01      	ldr	r6, [sp, #4]
1002024e:	e9cd c202 	strd	ip, r2, [sp, #8]
10020252:	462b      	mov	r3, r5
10020254:	4683      	mov	fp, r0
10020256:	4635      	mov	r5, r6
10020258:	f04f 0800 	mov.w	r8, #0
1002025c:	f104 0940 	add.w	r9, r4, #64	@ 0x40
10020260:	461e      	mov	r6, r3
10020262:	4632      	mov	r2, r6
10020264:	4638      	mov	r0, r7
10020266:	f7f8 f93b 	bl	100184e0 <memcpy>
1002026a:	6821      	ldr	r1, [r4, #0]
1002026c:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1002026e:	198a      	adds	r2, r1, r6
10020270:	46aa      	mov	sl, r5
10020272:	e9c4 2800 	strd	r2, r8, [r4]
10020276:	4619      	mov	r1, r3
10020278:	4658      	mov	r0, fp
1002027a:	4437      	add	r7, r6
1002027c:	1bad      	subs	r5, r5, r6
1002027e:	b303      	cbz	r3, 100202c2 <_sfread_r+0x96>
10020280:	454b      	cmp	r3, r9
10020282:	d001      	beq.n	10020288 <_sfread_r+0x5c>
10020284:	f7f9 fadc 	bl	10019840 <_free_r>
10020288:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
1002028a:	f8c4 8030 	str.w	r8, [r4, #48]	@ 0x30
1002028e:	6060      	str	r0, [r4, #4]
10020290:	b1b8      	cbz	r0, 100202c2 <_sfread_r+0x96>
10020292:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
10020294:	6021      	str	r1, [r4, #0]
10020296:	42a8      	cmp	r0, r5
10020298:	4606      	mov	r6, r0
1002029a:	d3e2      	bcc.n	10020262 <_sfread_r+0x36>
1002029c:	f8dd c008 	ldr.w	ip, [sp, #8]
100202a0:	462e      	mov	r6, r5
100202a2:	4632      	mov	r2, r6
100202a4:	4638      	mov	r0, r7
100202a6:	f8cd c004 	str.w	ip, [sp, #4]
100202aa:	f7f8 f919 	bl	100184e0 <memcpy>
100202ae:	e9d4 3200 	ldrd	r3, r2, [r4]
100202b2:	1b92      	subs	r2, r2, r6
100202b4:	4433      	add	r3, r6
100202b6:	e9c4 3200 	strd	r3, r2, [r4]
100202ba:	9801      	ldr	r0, [sp, #4]
100202bc:	b005      	add	sp, #20
100202be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100202c2:	9b01      	ldr	r3, [sp, #4]
100202c4:	9a03      	ldr	r2, [sp, #12]
100202c6:	4433      	add	r3, r6
100202c8:	eba3 050a 	sub.w	r5, r3, sl
100202cc:	fbb5 f3f2 	udiv	r3, r5, r2
100202d0:	9301      	str	r3, [sp, #4]
100202d2:	89a3      	ldrh	r3, [r4, #12]
100202d4:	6922      	ldr	r2, [r4, #16]
100202d6:	9801      	ldr	r0, [sp, #4]
100202d8:	f043 0320 	orr.w	r3, r3, #32
100202dc:	81a3      	strh	r3, [r4, #12]
100202de:	2300      	movs	r3, #0
100202e0:	e9c4 2300 	strd	r2, r3, [r4]
100202e4:	b005      	add	sp, #20
100202e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100202ea:	461e      	mov	r6, r3
100202ec:	e7d9      	b.n	100202a2 <_sfread_r+0x76>
100202ee:	bf00      	nop

100202f0 <__submore>:
100202f0:	f101 0340 	add.w	r3, r1, #64	@ 0x40
100202f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100202f8:	460c      	mov	r4, r1
100202fa:	6b09      	ldr	r1, [r1, #48]	@ 0x30
100202fc:	4299      	cmp	r1, r3
100202fe:	d014      	beq.n	1002032a <__submore+0x3a>
10020300:	6b66      	ldr	r6, [r4, #52]	@ 0x34
10020302:	0077      	lsls	r7, r6, #1
10020304:	463a      	mov	r2, r7
10020306:	f7f6 fe6d 	bl	10016fe4 <_realloc_r>
1002030a:	4605      	mov	r5, r0
1002030c:	b330      	cbz	r0, 1002035c <__submore+0x6c>
1002030e:	eb00 0806 	add.w	r8, r0, r6
10020312:	4601      	mov	r1, r0
10020314:	4632      	mov	r2, r6
10020316:	4640      	mov	r0, r8
10020318:	f7f8 f8e2 	bl	100184e0 <memcpy>
1002031c:	e9c4 570c 	strd	r5, r7, [r4, #48]	@ 0x30
10020320:	f8c4 8000 	str.w	r8, [r4]
10020324:	2000      	movs	r0, #0
10020326:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1002032a:	f44f 6180 	mov.w	r1, #1024	@ 0x400
1002032e:	f7f3 fbf7 	bl	10013b20 <_malloc_r>
10020332:	b198      	cbz	r0, 1002035c <__submore+0x6c>
10020334:	f894 3042 	ldrb.w	r3, [r4, #66]	@ 0x42
10020338:	f44f 6280 	mov.w	r2, #1024	@ 0x400
1002033c:	e9c4 020c 	strd	r0, r2, [r4, #48]	@ 0x30
10020340:	f880 33ff 	strb.w	r3, [r0, #1023]	@ 0x3ff
10020344:	f894 3041 	ldrb.w	r3, [r4, #65]	@ 0x41
10020348:	f880 33fe 	strb.w	r3, [r0, #1022]	@ 0x3fe
1002034c:	f894 2040 	ldrb.w	r2, [r4, #64]	@ 0x40
10020350:	f880 23fd 	strb.w	r2, [r0, #1021]	@ 0x3fd
10020354:	f200 33fd 	addw	r3, r0, #1021	@ 0x3fd
10020358:	6023      	str	r3, [r4, #0]
1002035a:	e7e3      	b.n	10020324 <__submore+0x34>
1002035c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10020360:	e7e1      	b.n	10020326 <__submore+0x36>
10020362:	bf00      	nop

10020364 <abort>:
10020364:	b508      	push	{r3, lr}
10020366:	2006      	movs	r0, #6
10020368:	f000 f804 	bl	10020374 <raise>
1002036c:	2001      	movs	r0, #1
1002036e:	f000 f855 	bl	1002041c <_exit>
10020372:	bf00      	nop

10020374 <raise>:
10020374:	b538      	push	{r3, r4, r5, lr}
10020376:	4b14      	ldr	r3, [pc, #80]	@ (100203c8 <raise+0x54>)
10020378:	281f      	cmp	r0, #31
1002037a:	681d      	ldr	r5, [r3, #0]
1002037c:	d81e      	bhi.n	100203bc <raise+0x48>
1002037e:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
10020382:	4604      	mov	r4, r0
10020384:	b162      	cbz	r2, 100203a0 <raise+0x2c>
10020386:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
1002038a:	b14b      	cbz	r3, 100203a0 <raise+0x2c>
1002038c:	2b01      	cmp	r3, #1
1002038e:	d005      	beq.n	1002039c <raise+0x28>
10020390:	1c59      	adds	r1, r3, #1
10020392:	d00f      	beq.n	100203b4 <raise+0x40>
10020394:	2100      	movs	r1, #0
10020396:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
1002039a:	4798      	blx	r3
1002039c:	2000      	movs	r0, #0
1002039e:	bd38      	pop	{r3, r4, r5, pc}
100203a0:	4628      	mov	r0, r5
100203a2:	f000 f829 	bl	100203f8 <_getpid_r>
100203a6:	4622      	mov	r2, r4
100203a8:	4601      	mov	r1, r0
100203aa:	4628      	mov	r0, r5
100203ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100203b0:	f000 b80c 	b.w	100203cc <_kill_r>
100203b4:	2316      	movs	r3, #22
100203b6:	602b      	str	r3, [r5, #0]
100203b8:	2001      	movs	r0, #1
100203ba:	bd38      	pop	{r3, r4, r5, pc}
100203bc:	2316      	movs	r3, #22
100203be:	602b      	str	r3, [r5, #0]
100203c0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100203c4:	bd38      	pop	{r3, r4, r5, pc}
100203c6:	bf00      	nop
100203c8:	20000598 	.word	0x20000598

100203cc <_kill_r>:
100203cc:	b570      	push	{r4, r5, r6, lr}
100203ce:	460c      	mov	r4, r1
100203d0:	4d08      	ldr	r5, [pc, #32]	@ (100203f4 <_kill_r+0x28>)
100203d2:	4603      	mov	r3, r0
100203d4:	2600      	movs	r6, #0
100203d6:	4620      	mov	r0, r4
100203d8:	4611      	mov	r1, r2
100203da:	461c      	mov	r4, r3
100203dc:	602e      	str	r6, [r5, #0]
100203de:	f000 f815 	bl	1002040c <_kill>
100203e2:	1c43      	adds	r3, r0, #1
100203e4:	d000      	beq.n	100203e8 <_kill_r+0x1c>
100203e6:	bd70      	pop	{r4, r5, r6, pc}
100203e8:	682b      	ldr	r3, [r5, #0]
100203ea:	2b00      	cmp	r3, #0
100203ec:	d0fb      	beq.n	100203e6 <_kill_r+0x1a>
100203ee:	6023      	str	r3, [r4, #0]
100203f0:	bd70      	pop	{r4, r5, r6, pc}
100203f2:	bf00      	nop
100203f4:	200015c4 	.word	0x200015c4

100203f8 <_getpid_r>:
100203f8:	f000 b800 	b.w	100203fc <_getpid>

100203fc <_getpid>:
100203fc:	4b02      	ldr	r3, [pc, #8]	@ (10020408 <_getpid+0xc>)
100203fe:	2258      	movs	r2, #88	@ 0x58
10020400:	601a      	str	r2, [r3, #0]
10020402:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10020406:	4770      	bx	lr
10020408:	200015c4 	.word	0x200015c4

1002040c <_kill>:
1002040c:	4b02      	ldr	r3, [pc, #8]	@ (10020418 <_kill+0xc>)
1002040e:	2258      	movs	r2, #88	@ 0x58
10020410:	601a      	str	r2, [r3, #0]
10020412:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10020416:	4770      	bx	lr
10020418:	200015c4 	.word	0x200015c4

1002041c <_exit>:
1002041c:	e7fe      	b.n	1002041c <_exit>
1002041e:	bf00      	nop

10020420 <__aeabi_drsub>:
10020420:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
10020424:	e002      	b.n	1002042c <__adddf3>
10020426:	bf00      	nop

10020428 <__aeabi_dsub>:
10020428:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

1002042c <__adddf3>:
1002042c:	b530      	push	{r4, r5, lr}
1002042e:	ea4f 0441 	mov.w	r4, r1, lsl #1
10020432:	ea4f 0543 	mov.w	r5, r3, lsl #1
10020436:	ea94 0f05 	teq	r4, r5
1002043a:	bf08      	it	eq
1002043c:	ea90 0f02 	teqeq	r0, r2
10020440:	bf1f      	itttt	ne
10020442:	ea54 0c00 	orrsne.w	ip, r4, r0
10020446:	ea55 0c02 	orrsne.w	ip, r5, r2
1002044a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
1002044e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10020452:	f000 80e2 	beq.w	1002061a <__adddf3+0x1ee>
10020456:	ea4f 5454 	mov.w	r4, r4, lsr #21
1002045a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
1002045e:	bfb8      	it	lt
10020460:	426d      	neglt	r5, r5
10020462:	dd0c      	ble.n	1002047e <__adddf3+0x52>
10020464:	442c      	add	r4, r5
10020466:	ea80 0202 	eor.w	r2, r0, r2
1002046a:	ea81 0303 	eor.w	r3, r1, r3
1002046e:	ea82 0000 	eor.w	r0, r2, r0
10020472:	ea83 0101 	eor.w	r1, r3, r1
10020476:	ea80 0202 	eor.w	r2, r0, r2
1002047a:	ea81 0303 	eor.w	r3, r1, r3
1002047e:	2d36      	cmp	r5, #54	@ 0x36
10020480:	bf88      	it	hi
10020482:	bd30      	pophi	{r4, r5, pc}
10020484:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
10020488:	ea4f 3101 	mov.w	r1, r1, lsl #12
1002048c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
10020490:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10020494:	d002      	beq.n	1002049c <__adddf3+0x70>
10020496:	4240      	negs	r0, r0
10020498:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1002049c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
100204a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
100204a4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
100204a8:	d002      	beq.n	100204b0 <__adddf3+0x84>
100204aa:	4252      	negs	r2, r2
100204ac:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
100204b0:	ea94 0f05 	teq	r4, r5
100204b4:	f000 80a7 	beq.w	10020606 <__adddf3+0x1da>
100204b8:	f1a4 0401 	sub.w	r4, r4, #1
100204bc:	f1d5 0e20 	rsbs	lr, r5, #32
100204c0:	db0d      	blt.n	100204de <__adddf3+0xb2>
100204c2:	fa02 fc0e 	lsl.w	ip, r2, lr
100204c6:	fa22 f205 	lsr.w	r2, r2, r5
100204ca:	1880      	adds	r0, r0, r2
100204cc:	f141 0100 	adc.w	r1, r1, #0
100204d0:	fa03 f20e 	lsl.w	r2, r3, lr
100204d4:	1880      	adds	r0, r0, r2
100204d6:	fa43 f305 	asr.w	r3, r3, r5
100204da:	4159      	adcs	r1, r3
100204dc:	e00e      	b.n	100204fc <__adddf3+0xd0>
100204de:	f1a5 0520 	sub.w	r5, r5, #32
100204e2:	f10e 0e20 	add.w	lr, lr, #32
100204e6:	2a01      	cmp	r2, #1
100204e8:	fa03 fc0e 	lsl.w	ip, r3, lr
100204ec:	bf28      	it	cs
100204ee:	f04c 0c02 	orrcs.w	ip, ip, #2
100204f2:	fa43 f305 	asr.w	r3, r3, r5
100204f6:	18c0      	adds	r0, r0, r3
100204f8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
100204fc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10020500:	d507      	bpl.n	10020512 <__adddf3+0xe6>
10020502:	f04f 0e00 	mov.w	lr, #0
10020506:	f1dc 0c00 	rsbs	ip, ip, #0
1002050a:	eb7e 0000 	sbcs.w	r0, lr, r0
1002050e:	eb6e 0101 	sbc.w	r1, lr, r1
10020512:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
10020516:	d31b      	bcc.n	10020550 <__adddf3+0x124>
10020518:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
1002051c:	d30c      	bcc.n	10020538 <__adddf3+0x10c>
1002051e:	0849      	lsrs	r1, r1, #1
10020520:	ea5f 0030 	movs.w	r0, r0, rrx
10020524:	ea4f 0c3c 	mov.w	ip, ip, rrx
10020528:	f104 0401 	add.w	r4, r4, #1
1002052c:	ea4f 5244 	mov.w	r2, r4, lsl #21
10020530:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
10020534:	f080 809a 	bcs.w	1002066c <__adddf3+0x240>
10020538:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
1002053c:	bf08      	it	eq
1002053e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10020542:	f150 0000 	adcs.w	r0, r0, #0
10020546:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1002054a:	ea41 0105 	orr.w	r1, r1, r5
1002054e:	bd30      	pop	{r4, r5, pc}
10020550:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10020554:	4140      	adcs	r0, r0
10020556:	eb41 0101 	adc.w	r1, r1, r1
1002055a:	3c01      	subs	r4, #1
1002055c:	bf28      	it	cs
1002055e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
10020562:	d2e9      	bcs.n	10020538 <__adddf3+0x10c>
10020564:	f091 0f00 	teq	r1, #0
10020568:	bf04      	itt	eq
1002056a:	4601      	moveq	r1, r0
1002056c:	2000      	moveq	r0, #0
1002056e:	fab1 f381 	clz	r3, r1
10020572:	bf08      	it	eq
10020574:	3320      	addeq	r3, #32
10020576:	f1a3 030b 	sub.w	r3, r3, #11
1002057a:	f1b3 0220 	subs.w	r2, r3, #32
1002057e:	da0c      	bge.n	1002059a <__adddf3+0x16e>
10020580:	320c      	adds	r2, #12
10020582:	dd08      	ble.n	10020596 <__adddf3+0x16a>
10020584:	f102 0c14 	add.w	ip, r2, #20
10020588:	f1c2 020c 	rsb	r2, r2, #12
1002058c:	fa01 f00c 	lsl.w	r0, r1, ip
10020590:	fa21 f102 	lsr.w	r1, r1, r2
10020594:	e00c      	b.n	100205b0 <__adddf3+0x184>
10020596:	f102 0214 	add.w	r2, r2, #20
1002059a:	bfd8      	it	le
1002059c:	f1c2 0c20 	rsble	ip, r2, #32
100205a0:	fa01 f102 	lsl.w	r1, r1, r2
100205a4:	fa20 fc0c 	lsr.w	ip, r0, ip
100205a8:	bfdc      	itt	le
100205aa:	ea41 010c 	orrle.w	r1, r1, ip
100205ae:	4090      	lslle	r0, r2
100205b0:	1ae4      	subs	r4, r4, r3
100205b2:	bfa2      	ittt	ge
100205b4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
100205b8:	4329      	orrge	r1, r5
100205ba:	bd30      	popge	{r4, r5, pc}
100205bc:	ea6f 0404 	mvn.w	r4, r4
100205c0:	3c1f      	subs	r4, #31
100205c2:	da1c      	bge.n	100205fe <__adddf3+0x1d2>
100205c4:	340c      	adds	r4, #12
100205c6:	dc0e      	bgt.n	100205e6 <__adddf3+0x1ba>
100205c8:	f104 0414 	add.w	r4, r4, #20
100205cc:	f1c4 0220 	rsb	r2, r4, #32
100205d0:	fa20 f004 	lsr.w	r0, r0, r4
100205d4:	fa01 f302 	lsl.w	r3, r1, r2
100205d8:	ea40 0003 	orr.w	r0, r0, r3
100205dc:	fa21 f304 	lsr.w	r3, r1, r4
100205e0:	ea45 0103 	orr.w	r1, r5, r3
100205e4:	bd30      	pop	{r4, r5, pc}
100205e6:	f1c4 040c 	rsb	r4, r4, #12
100205ea:	f1c4 0220 	rsb	r2, r4, #32
100205ee:	fa20 f002 	lsr.w	r0, r0, r2
100205f2:	fa01 f304 	lsl.w	r3, r1, r4
100205f6:	ea40 0003 	orr.w	r0, r0, r3
100205fa:	4629      	mov	r1, r5
100205fc:	bd30      	pop	{r4, r5, pc}
100205fe:	fa21 f004 	lsr.w	r0, r1, r4
10020602:	4629      	mov	r1, r5
10020604:	bd30      	pop	{r4, r5, pc}
10020606:	f094 0f00 	teq	r4, #0
1002060a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
1002060e:	bf06      	itte	eq
10020610:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
10020614:	3401      	addeq	r4, #1
10020616:	3d01      	subne	r5, #1
10020618:	e74e      	b.n	100204b8 <__adddf3+0x8c>
1002061a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1002061e:	bf18      	it	ne
10020620:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10020624:	d029      	beq.n	1002067a <__adddf3+0x24e>
10020626:	ea94 0f05 	teq	r4, r5
1002062a:	bf08      	it	eq
1002062c:	ea90 0f02 	teqeq	r0, r2
10020630:	d005      	beq.n	1002063e <__adddf3+0x212>
10020632:	ea54 0c00 	orrs.w	ip, r4, r0
10020636:	bf04      	itt	eq
10020638:	4619      	moveq	r1, r3
1002063a:	4610      	moveq	r0, r2
1002063c:	bd30      	pop	{r4, r5, pc}
1002063e:	ea91 0f03 	teq	r1, r3
10020642:	bf1e      	ittt	ne
10020644:	2100      	movne	r1, #0
10020646:	2000      	movne	r0, #0
10020648:	bd30      	popne	{r4, r5, pc}
1002064a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
1002064e:	d105      	bne.n	1002065c <__adddf3+0x230>
10020650:	0040      	lsls	r0, r0, #1
10020652:	4149      	adcs	r1, r1
10020654:	bf28      	it	cs
10020656:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
1002065a:	bd30      	pop	{r4, r5, pc}
1002065c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
10020660:	bf3c      	itt	cc
10020662:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
10020666:	bd30      	popcc	{r4, r5, pc}
10020668:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
1002066c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
10020670:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
10020674:	f04f 0000 	mov.w	r0, #0
10020678:	bd30      	pop	{r4, r5, pc}
1002067a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1002067e:	bf1a      	itte	ne
10020680:	4619      	movne	r1, r3
10020682:	4610      	movne	r0, r2
10020684:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10020688:	bf1c      	itt	ne
1002068a:	460b      	movne	r3, r1
1002068c:	4602      	movne	r2, r0
1002068e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10020692:	bf06      	itte	eq
10020694:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10020698:	ea91 0f03 	teqeq	r1, r3
1002069c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
100206a0:	bd30      	pop	{r4, r5, pc}
100206a2:	bf00      	nop

100206a4 <__aeabi_ui2d>:
100206a4:	f090 0f00 	teq	r0, #0
100206a8:	bf04      	itt	eq
100206aa:	2100      	moveq	r1, #0
100206ac:	4770      	bxeq	lr
100206ae:	b530      	push	{r4, r5, lr}
100206b0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
100206b4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100206b8:	f04f 0500 	mov.w	r5, #0
100206bc:	f04f 0100 	mov.w	r1, #0
100206c0:	e750      	b.n	10020564 <__adddf3+0x138>
100206c2:	bf00      	nop

100206c4 <__aeabi_i2d>:
100206c4:	f090 0f00 	teq	r0, #0
100206c8:	bf04      	itt	eq
100206ca:	2100      	moveq	r1, #0
100206cc:	4770      	bxeq	lr
100206ce:	b530      	push	{r4, r5, lr}
100206d0:	f44f 6480 	mov.w	r4, #1024	@ 0x400
100206d4:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100206d8:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
100206dc:	bf48      	it	mi
100206de:	4240      	negmi	r0, r0
100206e0:	f04f 0100 	mov.w	r1, #0
100206e4:	e73e      	b.n	10020564 <__adddf3+0x138>
100206e6:	bf00      	nop

100206e8 <__aeabi_f2d>:
100206e8:	0042      	lsls	r2, r0, #1
100206ea:	ea4f 01e2 	mov.w	r1, r2, asr #3
100206ee:	ea4f 0131 	mov.w	r1, r1, rrx
100206f2:	ea4f 7002 	mov.w	r0, r2, lsl #28
100206f6:	bf1f      	itttt	ne
100206f8:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
100206fc:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
10020700:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
10020704:	4770      	bxne	lr
10020706:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
1002070a:	bf08      	it	eq
1002070c:	4770      	bxeq	lr
1002070e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
10020712:	bf04      	itt	eq
10020714:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
10020718:	4770      	bxeq	lr
1002071a:	b530      	push	{r4, r5, lr}
1002071c:	f44f 7460 	mov.w	r4, #896	@ 0x380
10020720:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10020724:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
10020728:	e71c      	b.n	10020564 <__adddf3+0x138>
1002072a:	bf00      	nop

1002072c <__aeabi_ul2d>:
1002072c:	ea50 0201 	orrs.w	r2, r0, r1
10020730:	bf08      	it	eq
10020732:	4770      	bxeq	lr
10020734:	b530      	push	{r4, r5, lr}
10020736:	f04f 0500 	mov.w	r5, #0
1002073a:	e00a      	b.n	10020752 <__aeabi_l2d+0x16>

1002073c <__aeabi_l2d>:
1002073c:	ea50 0201 	orrs.w	r2, r0, r1
10020740:	bf08      	it	eq
10020742:	4770      	bxeq	lr
10020744:	b530      	push	{r4, r5, lr}
10020746:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
1002074a:	d502      	bpl.n	10020752 <__aeabi_l2d+0x16>
1002074c:	4240      	negs	r0, r0
1002074e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10020752:	f44f 6480 	mov.w	r4, #1024	@ 0x400
10020756:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1002075a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
1002075e:	f43f aed8 	beq.w	10020512 <__adddf3+0xe6>
10020762:	f04f 0203 	mov.w	r2, #3
10020766:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1002076a:	bf18      	it	ne
1002076c:	3203      	addne	r2, #3
1002076e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10020772:	bf18      	it	ne
10020774:	3203      	addne	r2, #3
10020776:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1002077a:	f1c2 0320 	rsb	r3, r2, #32
1002077e:	fa00 fc03 	lsl.w	ip, r0, r3
10020782:	fa20 f002 	lsr.w	r0, r0, r2
10020786:	fa01 fe03 	lsl.w	lr, r1, r3
1002078a:	ea40 000e 	orr.w	r0, r0, lr
1002078e:	fa21 f102 	lsr.w	r1, r1, r2
10020792:	4414      	add	r4, r2
10020794:	e6bd      	b.n	10020512 <__adddf3+0xe6>
10020796:	bf00      	nop

10020798 <__aeabi_dmul>:
10020798:	b570      	push	{r4, r5, r6, lr}
1002079a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
1002079e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
100207a2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100207a6:	bf1d      	ittte	ne
100207a8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100207ac:	ea94 0f0c 	teqne	r4, ip
100207b0:	ea95 0f0c 	teqne	r5, ip
100207b4:	f000 f8de 	bleq	10020974 <__aeabi_dmul+0x1dc>
100207b8:	442c      	add	r4, r5
100207ba:	ea81 0603 	eor.w	r6, r1, r3
100207be:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
100207c2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
100207c6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
100207ca:	bf18      	it	ne
100207cc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
100207d0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
100207d4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
100207d8:	d038      	beq.n	1002084c <__aeabi_dmul+0xb4>
100207da:	fba0 ce02 	umull	ip, lr, r0, r2
100207de:	f04f 0500 	mov.w	r5, #0
100207e2:	fbe1 e502 	umlal	lr, r5, r1, r2
100207e6:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
100207ea:	fbe0 e503 	umlal	lr, r5, r0, r3
100207ee:	f04f 0600 	mov.w	r6, #0
100207f2:	fbe1 5603 	umlal	r5, r6, r1, r3
100207f6:	f09c 0f00 	teq	ip, #0
100207fa:	bf18      	it	ne
100207fc:	f04e 0e01 	orrne.w	lr, lr, #1
10020800:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
10020804:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
10020808:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
1002080c:	d204      	bcs.n	10020818 <__aeabi_dmul+0x80>
1002080e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
10020812:	416d      	adcs	r5, r5
10020814:	eb46 0606 	adc.w	r6, r6, r6
10020818:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
1002081c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10020820:	ea4f 20c5 	mov.w	r0, r5, lsl #11
10020824:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10020828:	ea4f 2ece 	mov.w	lr, lr, lsl #11
1002082c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10020830:	bf88      	it	hi
10020832:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
10020836:	d81e      	bhi.n	10020876 <__aeabi_dmul+0xde>
10020838:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
1002083c:	bf08      	it	eq
1002083e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10020842:	f150 0000 	adcs.w	r0, r0, #0
10020846:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1002084a:	bd70      	pop	{r4, r5, r6, pc}
1002084c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
10020850:	ea46 0101 	orr.w	r1, r6, r1
10020854:	ea40 0002 	orr.w	r0, r0, r2
10020858:	ea81 0103 	eor.w	r1, r1, r3
1002085c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10020860:	bfc2      	ittt	gt
10020862:	ebd4 050c 	rsbsgt	r5, r4, ip
10020866:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1002086a:	bd70      	popgt	{r4, r5, r6, pc}
1002086c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10020870:	f04f 0e00 	mov.w	lr, #0
10020874:	3c01      	subs	r4, #1
10020876:	f300 80ab 	bgt.w	100209d0 <__aeabi_dmul+0x238>
1002087a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
1002087e:	bfde      	ittt	le
10020880:	2000      	movle	r0, #0
10020882:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
10020886:	bd70      	pople	{r4, r5, r6, pc}
10020888:	f1c4 0400 	rsb	r4, r4, #0
1002088c:	3c20      	subs	r4, #32
1002088e:	da35      	bge.n	100208fc <__aeabi_dmul+0x164>
10020890:	340c      	adds	r4, #12
10020892:	dc1b      	bgt.n	100208cc <__aeabi_dmul+0x134>
10020894:	f104 0414 	add.w	r4, r4, #20
10020898:	f1c4 0520 	rsb	r5, r4, #32
1002089c:	fa00 f305 	lsl.w	r3, r0, r5
100208a0:	fa20 f004 	lsr.w	r0, r0, r4
100208a4:	fa01 f205 	lsl.w	r2, r1, r5
100208a8:	ea40 0002 	orr.w	r0, r0, r2
100208ac:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
100208b0:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
100208b4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100208b8:	fa21 f604 	lsr.w	r6, r1, r4
100208bc:	eb42 0106 	adc.w	r1, r2, r6
100208c0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100208c4:	bf08      	it	eq
100208c6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100208ca:	bd70      	pop	{r4, r5, r6, pc}
100208cc:	f1c4 040c 	rsb	r4, r4, #12
100208d0:	f1c4 0520 	rsb	r5, r4, #32
100208d4:	fa00 f304 	lsl.w	r3, r0, r4
100208d8:	fa20 f005 	lsr.w	r0, r0, r5
100208dc:	fa01 f204 	lsl.w	r2, r1, r4
100208e0:	ea40 0002 	orr.w	r0, r0, r2
100208e4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
100208e8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100208ec:	f141 0100 	adc.w	r1, r1, #0
100208f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100208f4:	bf08      	it	eq
100208f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100208fa:	bd70      	pop	{r4, r5, r6, pc}
100208fc:	f1c4 0520 	rsb	r5, r4, #32
10020900:	fa00 f205 	lsl.w	r2, r0, r5
10020904:	ea4e 0e02 	orr.w	lr, lr, r2
10020908:	fa20 f304 	lsr.w	r3, r0, r4
1002090c:	fa01 f205 	lsl.w	r2, r1, r5
10020910:	ea43 0302 	orr.w	r3, r3, r2
10020914:	fa21 f004 	lsr.w	r0, r1, r4
10020918:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1002091c:	fa21 f204 	lsr.w	r2, r1, r4
10020920:	ea20 0002 	bic.w	r0, r0, r2
10020924:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
10020928:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1002092c:	bf08      	it	eq
1002092e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10020932:	bd70      	pop	{r4, r5, r6, pc}
10020934:	f094 0f00 	teq	r4, #0
10020938:	d10f      	bne.n	1002095a <__aeabi_dmul+0x1c2>
1002093a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
1002093e:	0040      	lsls	r0, r0, #1
10020940:	eb41 0101 	adc.w	r1, r1, r1
10020944:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10020948:	bf08      	it	eq
1002094a:	3c01      	subeq	r4, #1
1002094c:	d0f7      	beq.n	1002093e <__aeabi_dmul+0x1a6>
1002094e:	ea41 0106 	orr.w	r1, r1, r6
10020952:	f095 0f00 	teq	r5, #0
10020956:	bf18      	it	ne
10020958:	4770      	bxne	lr
1002095a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
1002095e:	0052      	lsls	r2, r2, #1
10020960:	eb43 0303 	adc.w	r3, r3, r3
10020964:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
10020968:	bf08      	it	eq
1002096a:	3d01      	subeq	r5, #1
1002096c:	d0f7      	beq.n	1002095e <__aeabi_dmul+0x1c6>
1002096e:	ea43 0306 	orr.w	r3, r3, r6
10020972:	4770      	bx	lr
10020974:	ea94 0f0c 	teq	r4, ip
10020978:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1002097c:	bf18      	it	ne
1002097e:	ea95 0f0c 	teqne	r5, ip
10020982:	d00c      	beq.n	1002099e <__aeabi_dmul+0x206>
10020984:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10020988:	bf18      	it	ne
1002098a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1002098e:	d1d1      	bne.n	10020934 <__aeabi_dmul+0x19c>
10020990:	ea81 0103 	eor.w	r1, r1, r3
10020994:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10020998:	f04f 0000 	mov.w	r0, #0
1002099c:	bd70      	pop	{r4, r5, r6, pc}
1002099e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100209a2:	bf06      	itte	eq
100209a4:	4610      	moveq	r0, r2
100209a6:	4619      	moveq	r1, r3
100209a8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
100209ac:	d019      	beq.n	100209e2 <__aeabi_dmul+0x24a>
100209ae:	ea94 0f0c 	teq	r4, ip
100209b2:	d102      	bne.n	100209ba <__aeabi_dmul+0x222>
100209b4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
100209b8:	d113      	bne.n	100209e2 <__aeabi_dmul+0x24a>
100209ba:	ea95 0f0c 	teq	r5, ip
100209be:	d105      	bne.n	100209cc <__aeabi_dmul+0x234>
100209c0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
100209c4:	bf1c      	itt	ne
100209c6:	4610      	movne	r0, r2
100209c8:	4619      	movne	r1, r3
100209ca:	d10a      	bne.n	100209e2 <__aeabi_dmul+0x24a>
100209cc:	ea81 0103 	eor.w	r1, r1, r3
100209d0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
100209d4:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
100209d8:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
100209dc:	f04f 0000 	mov.w	r0, #0
100209e0:	bd70      	pop	{r4, r5, r6, pc}
100209e2:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
100209e6:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
100209ea:	bd70      	pop	{r4, r5, r6, pc}

100209ec <__aeabi_ddiv>:
100209ec:	b570      	push	{r4, r5, r6, lr}
100209ee:	f04f 0cff 	mov.w	ip, #255	@ 0xff
100209f2:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
100209f6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100209fa:	bf1d      	ittte	ne
100209fc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10020a00:	ea94 0f0c 	teqne	r4, ip
10020a04:	ea95 0f0c 	teqne	r5, ip
10020a08:	f000 f8a7 	bleq	10020b5a <__aeabi_ddiv+0x16e>
10020a0c:	eba4 0405 	sub.w	r4, r4, r5
10020a10:	ea81 0e03 	eor.w	lr, r1, r3
10020a14:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10020a18:	ea4f 3101 	mov.w	r1, r1, lsl #12
10020a1c:	f000 8088 	beq.w	10020b30 <__aeabi_ddiv+0x144>
10020a20:	ea4f 3303 	mov.w	r3, r3, lsl #12
10020a24:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
10020a28:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10020a2c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10020a30:	ea4f 2202 	mov.w	r2, r2, lsl #8
10020a34:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
10020a38:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10020a3c:	ea4f 2600 	mov.w	r6, r0, lsl #8
10020a40:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
10020a44:	429d      	cmp	r5, r3
10020a46:	bf08      	it	eq
10020a48:	4296      	cmpeq	r6, r2
10020a4a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
10020a4e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
10020a52:	d202      	bcs.n	10020a5a <__aeabi_ddiv+0x6e>
10020a54:	085b      	lsrs	r3, r3, #1
10020a56:	ea4f 0232 	mov.w	r2, r2, rrx
10020a5a:	1ab6      	subs	r6, r6, r2
10020a5c:	eb65 0503 	sbc.w	r5, r5, r3
10020a60:	085b      	lsrs	r3, r3, #1
10020a62:	ea4f 0232 	mov.w	r2, r2, rrx
10020a66:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
10020a6a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
10020a6e:	ebb6 0e02 	subs.w	lr, r6, r2
10020a72:	eb75 0e03 	sbcs.w	lr, r5, r3
10020a76:	bf22      	ittt	cs
10020a78:	1ab6      	subcs	r6, r6, r2
10020a7a:	4675      	movcs	r5, lr
10020a7c:	ea40 000c 	orrcs.w	r0, r0, ip
10020a80:	085b      	lsrs	r3, r3, #1
10020a82:	ea4f 0232 	mov.w	r2, r2, rrx
10020a86:	ebb6 0e02 	subs.w	lr, r6, r2
10020a8a:	eb75 0e03 	sbcs.w	lr, r5, r3
10020a8e:	bf22      	ittt	cs
10020a90:	1ab6      	subcs	r6, r6, r2
10020a92:	4675      	movcs	r5, lr
10020a94:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10020a98:	085b      	lsrs	r3, r3, #1
10020a9a:	ea4f 0232 	mov.w	r2, r2, rrx
10020a9e:	ebb6 0e02 	subs.w	lr, r6, r2
10020aa2:	eb75 0e03 	sbcs.w	lr, r5, r3
10020aa6:	bf22      	ittt	cs
10020aa8:	1ab6      	subcs	r6, r6, r2
10020aaa:	4675      	movcs	r5, lr
10020aac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
10020ab0:	085b      	lsrs	r3, r3, #1
10020ab2:	ea4f 0232 	mov.w	r2, r2, rrx
10020ab6:	ebb6 0e02 	subs.w	lr, r6, r2
10020aba:	eb75 0e03 	sbcs.w	lr, r5, r3
10020abe:	bf22      	ittt	cs
10020ac0:	1ab6      	subcs	r6, r6, r2
10020ac2:	4675      	movcs	r5, lr
10020ac4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10020ac8:	ea55 0e06 	orrs.w	lr, r5, r6
10020acc:	d018      	beq.n	10020b00 <__aeabi_ddiv+0x114>
10020ace:	ea4f 1505 	mov.w	r5, r5, lsl #4
10020ad2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
10020ad6:	ea4f 1606 	mov.w	r6, r6, lsl #4
10020ada:	ea4f 03c3 	mov.w	r3, r3, lsl #3
10020ade:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
10020ae2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
10020ae6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
10020aea:	d1c0      	bne.n	10020a6e <__aeabi_ddiv+0x82>
10020aec:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10020af0:	d10b      	bne.n	10020b0a <__aeabi_ddiv+0x11e>
10020af2:	ea41 0100 	orr.w	r1, r1, r0
10020af6:	f04f 0000 	mov.w	r0, #0
10020afa:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
10020afe:	e7b6      	b.n	10020a6e <__aeabi_ddiv+0x82>
10020b00:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10020b04:	bf04      	itt	eq
10020b06:	4301      	orreq	r1, r0
10020b08:	2000      	moveq	r0, #0
10020b0a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10020b0e:	bf88      	it	hi
10020b10:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
10020b14:	f63f aeaf 	bhi.w	10020876 <__aeabi_dmul+0xde>
10020b18:	ebb5 0c03 	subs.w	ip, r5, r3
10020b1c:	bf04      	itt	eq
10020b1e:	ebb6 0c02 	subseq.w	ip, r6, r2
10020b22:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10020b26:	f150 0000 	adcs.w	r0, r0, #0
10020b2a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10020b2e:	bd70      	pop	{r4, r5, r6, pc}
10020b30:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
10020b34:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10020b38:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10020b3c:	bfc2      	ittt	gt
10020b3e:	ebd4 050c 	rsbsgt	r5, r4, ip
10020b42:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10020b46:	bd70      	popgt	{r4, r5, r6, pc}
10020b48:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10020b4c:	f04f 0e00 	mov.w	lr, #0
10020b50:	3c01      	subs	r4, #1
10020b52:	e690      	b.n	10020876 <__aeabi_dmul+0xde>
10020b54:	ea45 0e06 	orr.w	lr, r5, r6
10020b58:	e68d      	b.n	10020876 <__aeabi_dmul+0xde>
10020b5a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10020b5e:	ea94 0f0c 	teq	r4, ip
10020b62:	bf08      	it	eq
10020b64:	ea95 0f0c 	teqeq	r5, ip
10020b68:	f43f af3b 	beq.w	100209e2 <__aeabi_dmul+0x24a>
10020b6c:	ea94 0f0c 	teq	r4, ip
10020b70:	d10a      	bne.n	10020b88 <__aeabi_ddiv+0x19c>
10020b72:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10020b76:	f47f af34 	bne.w	100209e2 <__aeabi_dmul+0x24a>
10020b7a:	ea95 0f0c 	teq	r5, ip
10020b7e:	f47f af25 	bne.w	100209cc <__aeabi_dmul+0x234>
10020b82:	4610      	mov	r0, r2
10020b84:	4619      	mov	r1, r3
10020b86:	e72c      	b.n	100209e2 <__aeabi_dmul+0x24a>
10020b88:	ea95 0f0c 	teq	r5, ip
10020b8c:	d106      	bne.n	10020b9c <__aeabi_ddiv+0x1b0>
10020b8e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10020b92:	f43f aefd 	beq.w	10020990 <__aeabi_dmul+0x1f8>
10020b96:	4610      	mov	r0, r2
10020b98:	4619      	mov	r1, r3
10020b9a:	e722      	b.n	100209e2 <__aeabi_dmul+0x24a>
10020b9c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10020ba0:	bf18      	it	ne
10020ba2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10020ba6:	f47f aec5 	bne.w	10020934 <__aeabi_dmul+0x19c>
10020baa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10020bae:	f47f af0d 	bne.w	100209cc <__aeabi_dmul+0x234>
10020bb2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10020bb6:	f47f aeeb 	bne.w	10020990 <__aeabi_dmul+0x1f8>
10020bba:	e712      	b.n	100209e2 <__aeabi_dmul+0x24a>

10020bbc <__gedf2>:
10020bbc:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
10020bc0:	e006      	b.n	10020bd0 <__cmpdf2+0x4>
10020bc2:	bf00      	nop

10020bc4 <__ledf2>:
10020bc4:	f04f 0c01 	mov.w	ip, #1
10020bc8:	e002      	b.n	10020bd0 <__cmpdf2+0x4>
10020bca:	bf00      	nop

10020bcc <__cmpdf2>:
10020bcc:	f04f 0c01 	mov.w	ip, #1
10020bd0:	f84d cd04 	str.w	ip, [sp, #-4]!
10020bd4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10020bd8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020bdc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10020be0:	bf18      	it	ne
10020be2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
10020be6:	d01b      	beq.n	10020c20 <__cmpdf2+0x54>
10020be8:	b001      	add	sp, #4
10020bea:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10020bee:	bf0c      	ite	eq
10020bf0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
10020bf4:	ea91 0f03 	teqne	r1, r3
10020bf8:	bf02      	ittt	eq
10020bfa:	ea90 0f02 	teqeq	r0, r2
10020bfe:	2000      	moveq	r0, #0
10020c00:	4770      	bxeq	lr
10020c02:	f110 0f00 	cmn.w	r0, #0
10020c06:	ea91 0f03 	teq	r1, r3
10020c0a:	bf58      	it	pl
10020c0c:	4299      	cmppl	r1, r3
10020c0e:	bf08      	it	eq
10020c10:	4290      	cmpeq	r0, r2
10020c12:	bf2c      	ite	cs
10020c14:	17d8      	asrcs	r0, r3, #31
10020c16:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10020c1a:	f040 0001 	orr.w	r0, r0, #1
10020c1e:	4770      	bx	lr
10020c20:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10020c24:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020c28:	d102      	bne.n	10020c30 <__cmpdf2+0x64>
10020c2a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10020c2e:	d107      	bne.n	10020c40 <__cmpdf2+0x74>
10020c30:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10020c34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020c38:	d1d6      	bne.n	10020be8 <__cmpdf2+0x1c>
10020c3a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10020c3e:	d0d3      	beq.n	10020be8 <__cmpdf2+0x1c>
10020c40:	f85d 0b04 	ldr.w	r0, [sp], #4
10020c44:	4770      	bx	lr
10020c46:	bf00      	nop

10020c48 <__aeabi_cdrcmple>:
10020c48:	4684      	mov	ip, r0
10020c4a:	4610      	mov	r0, r2
10020c4c:	4662      	mov	r2, ip
10020c4e:	468c      	mov	ip, r1
10020c50:	4619      	mov	r1, r3
10020c52:	4663      	mov	r3, ip
10020c54:	e000      	b.n	10020c58 <__aeabi_cdcmpeq>
10020c56:	bf00      	nop

10020c58 <__aeabi_cdcmpeq>:
10020c58:	b501      	push	{r0, lr}
10020c5a:	f7ff ffb7 	bl	10020bcc <__cmpdf2>
10020c5e:	2800      	cmp	r0, #0
10020c60:	bf48      	it	mi
10020c62:	f110 0f00 	cmnmi.w	r0, #0
10020c66:	bd01      	pop	{r0, pc}

10020c68 <__aeabi_dcmpeq>:
10020c68:	f84d ed08 	str.w	lr, [sp, #-8]!
10020c6c:	f7ff fff4 	bl	10020c58 <__aeabi_cdcmpeq>
10020c70:	bf0c      	ite	eq
10020c72:	2001      	moveq	r0, #1
10020c74:	2000      	movne	r0, #0
10020c76:	f85d fb08 	ldr.w	pc, [sp], #8
10020c7a:	bf00      	nop

10020c7c <__aeabi_dcmplt>:
10020c7c:	f84d ed08 	str.w	lr, [sp, #-8]!
10020c80:	f7ff ffea 	bl	10020c58 <__aeabi_cdcmpeq>
10020c84:	bf34      	ite	cc
10020c86:	2001      	movcc	r0, #1
10020c88:	2000      	movcs	r0, #0
10020c8a:	f85d fb08 	ldr.w	pc, [sp], #8
10020c8e:	bf00      	nop

10020c90 <__aeabi_dcmple>:
10020c90:	f84d ed08 	str.w	lr, [sp, #-8]!
10020c94:	f7ff ffe0 	bl	10020c58 <__aeabi_cdcmpeq>
10020c98:	bf94      	ite	ls
10020c9a:	2001      	movls	r0, #1
10020c9c:	2000      	movhi	r0, #0
10020c9e:	f85d fb08 	ldr.w	pc, [sp], #8
10020ca2:	bf00      	nop

10020ca4 <__aeabi_dcmpge>:
10020ca4:	f84d ed08 	str.w	lr, [sp, #-8]!
10020ca8:	f7ff ffce 	bl	10020c48 <__aeabi_cdrcmple>
10020cac:	bf94      	ite	ls
10020cae:	2001      	movls	r0, #1
10020cb0:	2000      	movhi	r0, #0
10020cb2:	f85d fb08 	ldr.w	pc, [sp], #8
10020cb6:	bf00      	nop

10020cb8 <__aeabi_dcmpgt>:
10020cb8:	f84d ed08 	str.w	lr, [sp, #-8]!
10020cbc:	f7ff ffc4 	bl	10020c48 <__aeabi_cdrcmple>
10020cc0:	bf34      	ite	cc
10020cc2:	2001      	movcc	r0, #1
10020cc4:	2000      	movcs	r0, #0
10020cc6:	f85d fb08 	ldr.w	pc, [sp], #8
10020cca:	bf00      	nop

10020ccc <__aeabi_dcmpun>:
10020ccc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10020cd0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020cd4:	d102      	bne.n	10020cdc <__aeabi_dcmpun+0x10>
10020cd6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10020cda:	d10a      	bne.n	10020cf2 <__aeabi_dcmpun+0x26>
10020cdc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10020ce0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10020ce4:	d102      	bne.n	10020cec <__aeabi_dcmpun+0x20>
10020ce6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10020cea:	d102      	bne.n	10020cf2 <__aeabi_dcmpun+0x26>
10020cec:	f04f 0000 	mov.w	r0, #0
10020cf0:	4770      	bx	lr
10020cf2:	f04f 0001 	mov.w	r0, #1
10020cf6:	4770      	bx	lr

10020cf8 <__aeabi_d2iz>:
10020cf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
10020cfc:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
10020d00:	d215      	bcs.n	10020d2e <__aeabi_d2iz+0x36>
10020d02:	d511      	bpl.n	10020d28 <__aeabi_d2iz+0x30>
10020d04:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10020d08:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10020d0c:	d912      	bls.n	10020d34 <__aeabi_d2iz+0x3c>
10020d0e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10020d12:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10020d16:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10020d1a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
10020d1e:	fa23 f002 	lsr.w	r0, r3, r2
10020d22:	bf18      	it	ne
10020d24:	4240      	negne	r0, r0
10020d26:	4770      	bx	lr
10020d28:	f04f 0000 	mov.w	r0, #0
10020d2c:	4770      	bx	lr
10020d2e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10020d32:	d105      	bne.n	10020d40 <__aeabi_d2iz+0x48>
10020d34:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
10020d38:	bf08      	it	eq
10020d3a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
10020d3e:	4770      	bx	lr
10020d40:	f04f 0000 	mov.w	r0, #0
10020d44:	4770      	bx	lr
10020d46:	bf00      	nop

10020d48 <__aeabi_d2uiz>:
10020d48:	004a      	lsls	r2, r1, #1
10020d4a:	d211      	bcs.n	10020d70 <__aeabi_d2uiz+0x28>
10020d4c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
10020d50:	d211      	bcs.n	10020d76 <__aeabi_d2uiz+0x2e>
10020d52:	d50d      	bpl.n	10020d70 <__aeabi_d2uiz+0x28>
10020d54:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10020d58:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10020d5c:	d40e      	bmi.n	10020d7c <__aeabi_d2uiz+0x34>
10020d5e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10020d62:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10020d66:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10020d6a:	fa23 f002 	lsr.w	r0, r3, r2
10020d6e:	4770      	bx	lr
10020d70:	f04f 0000 	mov.w	r0, #0
10020d74:	4770      	bx	lr
10020d76:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10020d7a:	d102      	bne.n	10020d82 <__aeabi_d2uiz+0x3a>
10020d7c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10020d80:	4770      	bx	lr
10020d82:	f04f 0000 	mov.w	r0, #0
10020d86:	4770      	bx	lr

10020d88 <__aeabi_d2f>:
10020d88:	ea4f 0241 	mov.w	r2, r1, lsl #1
10020d8c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
10020d90:	bf24      	itt	cs
10020d92:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
10020d96:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
10020d9a:	d90d      	bls.n	10020db8 <__aeabi_d2f+0x30>
10020d9c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
10020da0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
10020da4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
10020da8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
10020dac:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
10020db0:	bf08      	it	eq
10020db2:	f020 0001 	biceq.w	r0, r0, #1
10020db6:	4770      	bx	lr
10020db8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
10020dbc:	d121      	bne.n	10020e02 <__aeabi_d2f+0x7a>
10020dbe:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
10020dc2:	bfbc      	itt	lt
10020dc4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
10020dc8:	4770      	bxlt	lr
10020dca:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10020dce:	ea4f 5252 	mov.w	r2, r2, lsr #21
10020dd2:	f1c2 0218 	rsb	r2, r2, #24
10020dd6:	f1c2 0c20 	rsb	ip, r2, #32
10020dda:	fa10 f30c 	lsls.w	r3, r0, ip
10020dde:	fa20 f002 	lsr.w	r0, r0, r2
10020de2:	bf18      	it	ne
10020de4:	f040 0001 	orrne.w	r0, r0, #1
10020de8:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10020dec:	ea4f 23d3 	mov.w	r3, r3, lsr #11
10020df0:	fa03 fc0c 	lsl.w	ip, r3, ip
10020df4:	ea40 000c 	orr.w	r0, r0, ip
10020df8:	fa23 f302 	lsr.w	r3, r3, r2
10020dfc:	ea4f 0343 	mov.w	r3, r3, lsl #1
10020e00:	e7cc      	b.n	10020d9c <__aeabi_d2f+0x14>
10020e02:	ea7f 5362 	mvns.w	r3, r2, asr #21
10020e06:	d107      	bne.n	10020e18 <__aeabi_d2f+0x90>
10020e08:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
10020e0c:	bf1e      	ittt	ne
10020e0e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
10020e12:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
10020e16:	4770      	bxne	lr
10020e18:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
10020e1c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
10020e20:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
10020e24:	4770      	bx	lr
10020e26:	bf00      	nop

10020e28 <__aeabi_uldivmod>:
10020e28:	b953      	cbnz	r3, 10020e40 <__aeabi_uldivmod+0x18>
10020e2a:	b94a      	cbnz	r2, 10020e40 <__aeabi_uldivmod+0x18>
10020e2c:	2900      	cmp	r1, #0
10020e2e:	bf08      	it	eq
10020e30:	2800      	cmpeq	r0, #0
10020e32:	bf1c      	itt	ne
10020e34:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
10020e38:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
10020e3c:	f000 b9a0 	b.w	10021180 <__aeabi_idiv0>
10020e40:	f1ad 0c08 	sub.w	ip, sp, #8
10020e44:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10020e48:	f000 f83c 	bl	10020ec4 <__udivmoddi4>
10020e4c:	f8dd e004 	ldr.w	lr, [sp, #4]
10020e50:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10020e54:	b004      	add	sp, #16
10020e56:	4770      	bx	lr

10020e58 <__aeabi_d2lz>:
10020e58:	b538      	push	{r3, r4, r5, lr}
10020e5a:	2200      	movs	r2, #0
10020e5c:	2300      	movs	r3, #0
10020e5e:	4604      	mov	r4, r0
10020e60:	460d      	mov	r5, r1
10020e62:	f7ff ff0b 	bl	10020c7c <__aeabi_dcmplt>
10020e66:	b928      	cbnz	r0, 10020e74 <__aeabi_d2lz+0x1c>
10020e68:	4620      	mov	r0, r4
10020e6a:	4629      	mov	r1, r5
10020e6c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10020e70:	f000 b80a 	b.w	10020e88 <__aeabi_d2ulz>
10020e74:	4620      	mov	r0, r4
10020e76:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
10020e7a:	f000 f805 	bl	10020e88 <__aeabi_d2ulz>
10020e7e:	4240      	negs	r0, r0
10020e80:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10020e84:	bd38      	pop	{r3, r4, r5, pc}
10020e86:	bf00      	nop

10020e88 <__aeabi_d2ulz>:
10020e88:	b5d0      	push	{r4, r6, r7, lr}
10020e8a:	4b0c      	ldr	r3, [pc, #48]	@ (10020ebc <__aeabi_d2ulz+0x34>)
10020e8c:	2200      	movs	r2, #0
10020e8e:	4606      	mov	r6, r0
10020e90:	460f      	mov	r7, r1
10020e92:	f7ff fc81 	bl	10020798 <__aeabi_dmul>
10020e96:	f7ff ff57 	bl	10020d48 <__aeabi_d2uiz>
10020e9a:	4604      	mov	r4, r0
10020e9c:	f7ff fc02 	bl	100206a4 <__aeabi_ui2d>
10020ea0:	4b07      	ldr	r3, [pc, #28]	@ (10020ec0 <__aeabi_d2ulz+0x38>)
10020ea2:	2200      	movs	r2, #0
10020ea4:	f7ff fc78 	bl	10020798 <__aeabi_dmul>
10020ea8:	4602      	mov	r2, r0
10020eaa:	460b      	mov	r3, r1
10020eac:	4630      	mov	r0, r6
10020eae:	4639      	mov	r1, r7
10020eb0:	f7ff faba 	bl	10020428 <__aeabi_dsub>
10020eb4:	f7ff ff48 	bl	10020d48 <__aeabi_d2uiz>
10020eb8:	4621      	mov	r1, r4
10020eba:	bdd0      	pop	{r4, r6, r7, pc}
10020ebc:	3df00000 	.word	0x3df00000
10020ec0:	41f00000 	.word	0x41f00000

10020ec4 <__udivmoddi4>:
10020ec4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10020ec8:	9d08      	ldr	r5, [sp, #32]
10020eca:	460c      	mov	r4, r1
10020ecc:	2b00      	cmp	r3, #0
10020ece:	d14e      	bne.n	10020f6e <__udivmoddi4+0xaa>
10020ed0:	4694      	mov	ip, r2
10020ed2:	458c      	cmp	ip, r1
10020ed4:	4686      	mov	lr, r0
10020ed6:	fab2 f282 	clz	r2, r2
10020eda:	d962      	bls.n	10020fa2 <__udivmoddi4+0xde>
10020edc:	b14a      	cbz	r2, 10020ef2 <__udivmoddi4+0x2e>
10020ede:	f1c2 0320 	rsb	r3, r2, #32
10020ee2:	4091      	lsls	r1, r2
10020ee4:	fa20 f303 	lsr.w	r3, r0, r3
10020ee8:	fa0c fc02 	lsl.w	ip, ip, r2
10020eec:	4319      	orrs	r1, r3
10020eee:	fa00 fe02 	lsl.w	lr, r0, r2
10020ef2:	ea4f 471c 	mov.w	r7, ip, lsr #16
10020ef6:	fa1f f68c 	uxth.w	r6, ip
10020efa:	fbb1 f4f7 	udiv	r4, r1, r7
10020efe:	ea4f 431e 	mov.w	r3, lr, lsr #16
10020f02:	fb07 1114 	mls	r1, r7, r4, r1
10020f06:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10020f0a:	fb04 f106 	mul.w	r1, r4, r6
10020f0e:	4299      	cmp	r1, r3
10020f10:	d90a      	bls.n	10020f28 <__udivmoddi4+0x64>
10020f12:	eb1c 0303 	adds.w	r3, ip, r3
10020f16:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
10020f1a:	f080 8112 	bcs.w	10021142 <__udivmoddi4+0x27e>
10020f1e:	4299      	cmp	r1, r3
10020f20:	f240 810f 	bls.w	10021142 <__udivmoddi4+0x27e>
10020f24:	3c02      	subs	r4, #2
10020f26:	4463      	add	r3, ip
10020f28:	1a59      	subs	r1, r3, r1
10020f2a:	fa1f f38e 	uxth.w	r3, lr
10020f2e:	fbb1 f0f7 	udiv	r0, r1, r7
10020f32:	fb07 1110 	mls	r1, r7, r0, r1
10020f36:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10020f3a:	fb00 f606 	mul.w	r6, r0, r6
10020f3e:	429e      	cmp	r6, r3
10020f40:	d90a      	bls.n	10020f58 <__udivmoddi4+0x94>
10020f42:	eb1c 0303 	adds.w	r3, ip, r3
10020f46:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
10020f4a:	f080 80fc 	bcs.w	10021146 <__udivmoddi4+0x282>
10020f4e:	429e      	cmp	r6, r3
10020f50:	f240 80f9 	bls.w	10021146 <__udivmoddi4+0x282>
10020f54:	4463      	add	r3, ip
10020f56:	3802      	subs	r0, #2
10020f58:	1b9b      	subs	r3, r3, r6
10020f5a:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
10020f5e:	2100      	movs	r1, #0
10020f60:	b11d      	cbz	r5, 10020f6a <__udivmoddi4+0xa6>
10020f62:	40d3      	lsrs	r3, r2
10020f64:	2200      	movs	r2, #0
10020f66:	e9c5 3200 	strd	r3, r2, [r5]
10020f6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10020f6e:	428b      	cmp	r3, r1
10020f70:	d905      	bls.n	10020f7e <__udivmoddi4+0xba>
10020f72:	b10d      	cbz	r5, 10020f78 <__udivmoddi4+0xb4>
10020f74:	e9c5 0100 	strd	r0, r1, [r5]
10020f78:	2100      	movs	r1, #0
10020f7a:	4608      	mov	r0, r1
10020f7c:	e7f5      	b.n	10020f6a <__udivmoddi4+0xa6>
10020f7e:	fab3 f183 	clz	r1, r3
10020f82:	2900      	cmp	r1, #0
10020f84:	d146      	bne.n	10021014 <__udivmoddi4+0x150>
10020f86:	42a3      	cmp	r3, r4
10020f88:	d302      	bcc.n	10020f90 <__udivmoddi4+0xcc>
10020f8a:	4290      	cmp	r0, r2
10020f8c:	f0c0 80f0 	bcc.w	10021170 <__udivmoddi4+0x2ac>
10020f90:	1a86      	subs	r6, r0, r2
10020f92:	eb64 0303 	sbc.w	r3, r4, r3
10020f96:	2001      	movs	r0, #1
10020f98:	2d00      	cmp	r5, #0
10020f9a:	d0e6      	beq.n	10020f6a <__udivmoddi4+0xa6>
10020f9c:	e9c5 6300 	strd	r6, r3, [r5]
10020fa0:	e7e3      	b.n	10020f6a <__udivmoddi4+0xa6>
10020fa2:	2a00      	cmp	r2, #0
10020fa4:	f040 8090 	bne.w	100210c8 <__udivmoddi4+0x204>
10020fa8:	eba1 040c 	sub.w	r4, r1, ip
10020fac:	ea4f 481c 	mov.w	r8, ip, lsr #16
10020fb0:	fa1f f78c 	uxth.w	r7, ip
10020fb4:	2101      	movs	r1, #1
10020fb6:	fbb4 f6f8 	udiv	r6, r4, r8
10020fba:	ea4f 431e 	mov.w	r3, lr, lsr #16
10020fbe:	fb08 4416 	mls	r4, r8, r6, r4
10020fc2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10020fc6:	fb07 f006 	mul.w	r0, r7, r6
10020fca:	4298      	cmp	r0, r3
10020fcc:	d908      	bls.n	10020fe0 <__udivmoddi4+0x11c>
10020fce:	eb1c 0303 	adds.w	r3, ip, r3
10020fd2:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
10020fd6:	d202      	bcs.n	10020fde <__udivmoddi4+0x11a>
10020fd8:	4298      	cmp	r0, r3
10020fda:	f200 80cd 	bhi.w	10021178 <__udivmoddi4+0x2b4>
10020fde:	4626      	mov	r6, r4
10020fe0:	1a1c      	subs	r4, r3, r0
10020fe2:	fa1f f38e 	uxth.w	r3, lr
10020fe6:	fbb4 f0f8 	udiv	r0, r4, r8
10020fea:	fb08 4410 	mls	r4, r8, r0, r4
10020fee:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10020ff2:	fb00 f707 	mul.w	r7, r0, r7
10020ff6:	429f      	cmp	r7, r3
10020ff8:	d908      	bls.n	1002100c <__udivmoddi4+0x148>
10020ffa:	eb1c 0303 	adds.w	r3, ip, r3
10020ffe:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
10021002:	d202      	bcs.n	1002100a <__udivmoddi4+0x146>
10021004:	429f      	cmp	r7, r3
10021006:	f200 80b0 	bhi.w	1002116a <__udivmoddi4+0x2a6>
1002100a:	4620      	mov	r0, r4
1002100c:	1bdb      	subs	r3, r3, r7
1002100e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
10021012:	e7a5      	b.n	10020f60 <__udivmoddi4+0x9c>
10021014:	f1c1 0620 	rsb	r6, r1, #32
10021018:	408b      	lsls	r3, r1
1002101a:	fa22 f706 	lsr.w	r7, r2, r6
1002101e:	431f      	orrs	r7, r3
10021020:	fa20 fc06 	lsr.w	ip, r0, r6
10021024:	fa04 f301 	lsl.w	r3, r4, r1
10021028:	ea43 030c 	orr.w	r3, r3, ip
1002102c:	40f4      	lsrs	r4, r6
1002102e:	fa00 f801 	lsl.w	r8, r0, r1
10021032:	0c38      	lsrs	r0, r7, #16
10021034:	ea4f 4913 	mov.w	r9, r3, lsr #16
10021038:	fbb4 fef0 	udiv	lr, r4, r0
1002103c:	fa1f fc87 	uxth.w	ip, r7
10021040:	fb00 441e 	mls	r4, r0, lr, r4
10021044:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10021048:	fb0e f90c 	mul.w	r9, lr, ip
1002104c:	45a1      	cmp	r9, r4
1002104e:	fa02 f201 	lsl.w	r2, r2, r1
10021052:	d90a      	bls.n	1002106a <__udivmoddi4+0x1a6>
10021054:	193c      	adds	r4, r7, r4
10021056:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
1002105a:	f080 8084 	bcs.w	10021166 <__udivmoddi4+0x2a2>
1002105e:	45a1      	cmp	r9, r4
10021060:	f240 8081 	bls.w	10021166 <__udivmoddi4+0x2a2>
10021064:	f1ae 0e02 	sub.w	lr, lr, #2
10021068:	443c      	add	r4, r7
1002106a:	eba4 0409 	sub.w	r4, r4, r9
1002106e:	fa1f f983 	uxth.w	r9, r3
10021072:	fbb4 f3f0 	udiv	r3, r4, r0
10021076:	fb00 4413 	mls	r4, r0, r3, r4
1002107a:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
1002107e:	fb03 fc0c 	mul.w	ip, r3, ip
10021082:	45a4      	cmp	ip, r4
10021084:	d907      	bls.n	10021096 <__udivmoddi4+0x1d2>
10021086:	193c      	adds	r4, r7, r4
10021088:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
1002108c:	d267      	bcs.n	1002115e <__udivmoddi4+0x29a>
1002108e:	45a4      	cmp	ip, r4
10021090:	d965      	bls.n	1002115e <__udivmoddi4+0x29a>
10021092:	3b02      	subs	r3, #2
10021094:	443c      	add	r4, r7
10021096:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
1002109a:	fba0 9302 	umull	r9, r3, r0, r2
1002109e:	eba4 040c 	sub.w	r4, r4, ip
100210a2:	429c      	cmp	r4, r3
100210a4:	46ce      	mov	lr, r9
100210a6:	469c      	mov	ip, r3
100210a8:	d351      	bcc.n	1002114e <__udivmoddi4+0x28a>
100210aa:	d04e      	beq.n	1002114a <__udivmoddi4+0x286>
100210ac:	b155      	cbz	r5, 100210c4 <__udivmoddi4+0x200>
100210ae:	ebb8 030e 	subs.w	r3, r8, lr
100210b2:	eb64 040c 	sbc.w	r4, r4, ip
100210b6:	fa04 f606 	lsl.w	r6, r4, r6
100210ba:	40cb      	lsrs	r3, r1
100210bc:	431e      	orrs	r6, r3
100210be:	40cc      	lsrs	r4, r1
100210c0:	e9c5 6400 	strd	r6, r4, [r5]
100210c4:	2100      	movs	r1, #0
100210c6:	e750      	b.n	10020f6a <__udivmoddi4+0xa6>
100210c8:	f1c2 0320 	rsb	r3, r2, #32
100210cc:	fa20 f103 	lsr.w	r1, r0, r3
100210d0:	fa0c fc02 	lsl.w	ip, ip, r2
100210d4:	fa24 f303 	lsr.w	r3, r4, r3
100210d8:	4094      	lsls	r4, r2
100210da:	430c      	orrs	r4, r1
100210dc:	ea4f 481c 	mov.w	r8, ip, lsr #16
100210e0:	fa00 fe02 	lsl.w	lr, r0, r2
100210e4:	fa1f f78c 	uxth.w	r7, ip
100210e8:	fbb3 f0f8 	udiv	r0, r3, r8
100210ec:	fb08 3110 	mls	r1, r8, r0, r3
100210f0:	0c23      	lsrs	r3, r4, #16
100210f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
100210f6:	fb00 f107 	mul.w	r1, r0, r7
100210fa:	4299      	cmp	r1, r3
100210fc:	d908      	bls.n	10021110 <__udivmoddi4+0x24c>
100210fe:	eb1c 0303 	adds.w	r3, ip, r3
10021102:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
10021106:	d22c      	bcs.n	10021162 <__udivmoddi4+0x29e>
10021108:	4299      	cmp	r1, r3
1002110a:	d92a      	bls.n	10021162 <__udivmoddi4+0x29e>
1002110c:	3802      	subs	r0, #2
1002110e:	4463      	add	r3, ip
10021110:	1a5b      	subs	r3, r3, r1
10021112:	b2a4      	uxth	r4, r4
10021114:	fbb3 f1f8 	udiv	r1, r3, r8
10021118:	fb08 3311 	mls	r3, r8, r1, r3
1002111c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
10021120:	fb01 f307 	mul.w	r3, r1, r7
10021124:	42a3      	cmp	r3, r4
10021126:	d908      	bls.n	1002113a <__udivmoddi4+0x276>
10021128:	eb1c 0404 	adds.w	r4, ip, r4
1002112c:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
10021130:	d213      	bcs.n	1002115a <__udivmoddi4+0x296>
10021132:	42a3      	cmp	r3, r4
10021134:	d911      	bls.n	1002115a <__udivmoddi4+0x296>
10021136:	3902      	subs	r1, #2
10021138:	4464      	add	r4, ip
1002113a:	1ae4      	subs	r4, r4, r3
1002113c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
10021140:	e739      	b.n	10020fb6 <__udivmoddi4+0xf2>
10021142:	4604      	mov	r4, r0
10021144:	e6f0      	b.n	10020f28 <__udivmoddi4+0x64>
10021146:	4608      	mov	r0, r1
10021148:	e706      	b.n	10020f58 <__udivmoddi4+0x94>
1002114a:	45c8      	cmp	r8, r9
1002114c:	d2ae      	bcs.n	100210ac <__udivmoddi4+0x1e8>
1002114e:	ebb9 0e02 	subs.w	lr, r9, r2
10021152:	eb63 0c07 	sbc.w	ip, r3, r7
10021156:	3801      	subs	r0, #1
10021158:	e7a8      	b.n	100210ac <__udivmoddi4+0x1e8>
1002115a:	4631      	mov	r1, r6
1002115c:	e7ed      	b.n	1002113a <__udivmoddi4+0x276>
1002115e:	4603      	mov	r3, r0
10021160:	e799      	b.n	10021096 <__udivmoddi4+0x1d2>
10021162:	4630      	mov	r0, r6
10021164:	e7d4      	b.n	10021110 <__udivmoddi4+0x24c>
10021166:	46d6      	mov	lr, sl
10021168:	e77f      	b.n	1002106a <__udivmoddi4+0x1a6>
1002116a:	4463      	add	r3, ip
1002116c:	3802      	subs	r0, #2
1002116e:	e74d      	b.n	1002100c <__udivmoddi4+0x148>
10021170:	4606      	mov	r6, r0
10021172:	4623      	mov	r3, r4
10021174:	4608      	mov	r0, r1
10021176:	e70f      	b.n	10020f98 <__udivmoddi4+0xd4>
10021178:	3e02      	subs	r6, #2
1002117a:	4463      	add	r3, ip
1002117c:	e730      	b.n	10020fe0 <__udivmoddi4+0x11c>
1002117e:	bf00      	nop

10021180 <__aeabi_idiv0>:
10021180:	4770      	bx	lr
10021182:	bf00      	nop
10021184:	6e692525 	.word	0x6e692525
10021188:	203a6f66 	.word	0x203a6f66
1002118c:	00000000 	.word	0x00000000
10021190:	78303e50 	.word	0x78303e50
10021194:	78383025 	.word	0x78383025
10021198:	0000000a 	.word	0x0000000a
1002119c:	00002525 	.word	0x00002525
100211a0:	78303e46 	.word	0x78303e46
100211a4:	78383025 	.word	0x78383025
100211a8:	0000000a 	.word	0x0000000a
100211ac:	75732525 	.word	0x75732525
100211b0:	73656363 	.word	0x73656363
100211b4:	00203a73 	.word	0x00203a73
100211b8:	7473694c 	.word	0x7473694c
100211bc:	00000000 	.word	0x00000000
100211c0:	65642525 	.word	0x65642525
100211c4:	3a677562 	.word	0x3a677562
100211c8:	00000020 	.word	0x00000020
100211cc:	73726946 	.word	0x73726946
100211d0:	6f622074 	.word	0x6f622074
100211d4:	202c746f 	.word	0x202c746f
100211d8:	74746573 	.word	0x74746573
100211dc:	20676e69 	.word	0x20676e69
100211e0:	73616c66 	.word	0x73616c66
100211e4:	00002168 	.word	0x00002168
100211e8:	72652525 	.word	0x72652525
100211ec:	3a726f72 	.word	0x3a726f72
100211f0:	00000020 	.word	0x00000020
100211f4:	6c756f43 	.word	0x6c756f43
100211f8:	6f6e2064 	.word	0x6f6e2064
100211fc:	61762074 	.word	0x61762074
10021200:	6164696c 	.word	0x6164696c
10021204:	63206574 	.word	0x63206574
10021208:	6f706d6f 	.word	0x6f706d6f
1002120c:	746e656e 	.word	0x746e656e
10021210:	00000000 	.word	0x00000000
10021214:	706d6f43 	.word	0x706d6f43
10021218:	6e656e6f 	.word	0x6e656e6f
1002121c:	44492074 	.word	0x44492074
10021220:	7830203a 	.word	0x7830203a
10021224:	78383025 	.word	0x78383025
10021228:	766e6920 	.word	0x766e6920
1002122c:	64696c61 	.word	0x64696c61
10021230:	0000000a 	.word	0x0000000a
10021234:	30257830 	.word	0x30257830
10021238:	253e7838 	.word	0x253e7838
1002123c:	00000a73 	.word	0x00000a73
10021240:	6c756f43 	.word	0x6c756f43
10021244:	6f6e2064 	.word	0x6f6e2064
10021248:	6f622074 	.word	0x6f622074
1002124c:	6320746f 	.word	0x6320746f
10021250:	6f706d6f 	.word	0x6f706d6f
10021254:	746e656e 	.word	0x746e656e
10021258:	00000000 	.word	0x00000000
1002125c:	78303e43 	.word	0x78303e43
10021260:	78383025 	.word	0x78383025
10021264:	0000000a 	.word	0x0000000a
10021268:	78383025 	.word	0x78383025
1002126c:	00000000 	.word	0x00000000
10021270:	6c756f43 	.word	0x6c756f43
10021274:	6f6e2064 	.word	0x6f6e2064
10021278:	74612074 	.word	0x74612074
1002127c:	74736574 	.word	0x74736574
10021280:	6d6f6320 	.word	0x6d6f6320
10021284:	656e6f70 	.word	0x656e6f70
10021288:	0000746e 	.word	0x0000746e
1002128c:	70797243 	.word	0x70797243
10021290:	45206f74 	.word	0x45206f74
10021294:	706d6178 	.word	0x706d6178
10021298:	0021656c 	.word	0x0021656c
1002129c:	72636e45 	.word	0x72636e45
100212a0:	65747079 	.word	0x65747079
100212a4:	61642064 	.word	0x61642064
100212a8:	203a6174 	.word	0x203a6174
100212ac:	00000000 	.word	0x00000000
100212b0:	68736148 	.word	0x68736148
100212b4:	73657220 	.word	0x73657220
100212b8:	3a746c75 	.word	0x3a746c75
100212bc:	00000020 	.word	0x00000020
100212c0:	72636544 	.word	0x72636544
100212c4:	65747079 	.word	0x65747079
100212c8:	656d2064 	.word	0x656d2064
100212cc:	67617373 	.word	0x67617373
100212d0:	25203a65 	.word	0x25203a65
100212d4:	000a0d73 	.word	0x000a0d73
100212d8:	706d6f43 	.word	0x706d6f43
100212dc:	6e656e6f 	.word	0x6e656e6f
100212e0:	63207374 	.word	0x63207374
100212e4:	646c756f 	.word	0x646c756f
100212e8:	746f6e20 	.word	0x746f6e20
100212ec:	20656220 	.word	0x20656220
100212f0:	696c6176 	.word	0x696c6176
100212f4:	65746164 	.word	0x65746164
100212f8:	00000064 	.word	0x00000064
100212fc:	206c6c41 	.word	0x206c6c41
10021300:	706d6f43 	.word	0x706d6f43
10021304:	6e656e6f 	.word	0x6e656e6f
10021308:	76207374 	.word	0x76207374
1002130c:	64696c61 	.word	0x64696c61
10021310:	64657461 	.word	0x64657461
10021314:	00000000 	.word	0x00000000
10021318:	6c696146 	.word	0x6c696146
1002131c:	74206465 	.word	0x74206465
10021320:	6f62206f 	.word	0x6f62206f
10021324:	6120746f 	.word	0x6120746f
10021328:	63206c6c 	.word	0x63206c6c
1002132c:	6f706d6f 	.word	0x6f706d6f
10021330:	746e656e 	.word	0x746e656e
10021334:	00000073 	.word	0x00000073
10021338:	746f6f62 	.word	0x746f6f62
1002133c:	00000000 	.word	0x00000000
10021340:	253e5041 	.word	0x253e5041
10021344:	00000a73 	.word	0x00000a73
10021348:	746f6f42 	.word	0x746f6f42
1002134c:	00000000 	.word	0x00000000
10021350:	65746e45 	.word	0x65746e45
10021354:	69702072 	.word	0x69702072
10021358:	00203a6e 	.word	0x00203a6e
1002135c:	34333231 	.word	0x34333231
10021360:	00003635 	.word	0x00003635
10021364:	206e6950 	.word	0x206e6950
10021368:	65636341 	.word	0x65636341
1002136c:	64657470 	.word	0x64657470
10021370:	00000021 	.word	0x00000021
10021374:	61766e49 	.word	0x61766e49
10021378:	2064696c 	.word	0x2064696c
1002137c:	214e4950 	.word	0x214e4950
10021380:	00000000 	.word	0x00000000
10021384:	706d6f43 	.word	0x706d6f43
10021388:	6e656e6f 	.word	0x6e656e6f
1002138c:	44492074 	.word	0x44492074
10021390:	0000203a 	.word	0x0000203a
10021394:	00007825 	.word	0x00007825
10021398:	65747441 	.word	0x65747441
1002139c:	00007473 	.word	0x00007473
100213a0:	65746e45 	.word	0x65746e45
100213a4:	6f742072 	.word	0x6f742072
100213a8:	3a6e656b 	.word	0x3a6e656b
100213ac:	00000020 	.word	0x00000020
100213b0:	33323130 	.word	0x33323130
100213b4:	37363534 	.word	0x37363534
100213b8:	62613938 	.word	0x62613938
100213bc:	66656463 	.word	0x66656463
100213c0:	00000000 	.word	0x00000000
100213c4:	656b6f54 	.word	0x656b6f54
100213c8:	6341206e 	.word	0x6341206e
100213cc:	74706563 	.word	0x74706563
100213d0:	00216465 	.word	0x00216465
100213d4:	61766e49 	.word	0x61766e49
100213d8:	2064696c 	.word	0x2064696c
100213dc:	656b6f54 	.word	0x656b6f54
100213e0:	0000216e 	.word	0x0000216e
100213e4:	706d6f43 	.word	0x706d6f43
100213e8:	6e656e6f 	.word	0x6e656e6f
100213ec:	44492074 	.word	0x44492074
100213f0:	3a6e4920 	.word	0x3a6e4920
100213f4:	00000020 	.word	0x00000020
100213f8:	706d6f43 	.word	0x706d6f43
100213fc:	6e656e6f 	.word	0x6e656e6f
10021400:	44492074 	.word	0x44492074
10021404:	74754f20 	.word	0x74754f20
10021408:	0000203a 	.word	0x0000203a
1002140c:	6c706552 	.word	0x6c706552
10021410:	64656361 	.word	0x64656361
10021414:	25783020 	.word	0x25783020
10021418:	20783830 	.word	0x20783830
1002141c:	68746977 	.word	0x68746977
10021420:	25783020 	.word	0x25783020
10021424:	0a783830 	.word	0x0a783830
10021428:	00000000 	.word	0x00000000
1002142c:	6c706552 	.word	0x6c706552
10021430:	00656361 	.word	0x00656361
10021434:	706d6f43 	.word	0x706d6f43
10021438:	6e656e6f 	.word	0x6e656e6f
1002143c:	78302074 	.word	0x78302074
10021440:	78383025 	.word	0x78383025
10021444:	20736920 	.word	0x20736920
10021448:	20746f6e 	.word	0x20746f6e
1002144c:	766f7270 	.word	0x766f7270
10021450:	6f697369 	.word	0x6f697369
10021454:	2064656e 	.word	0x2064656e
10021458:	20726f66 	.word	0x20726f66
1002145c:	20656874 	.word	0x20656874
10021460:	74737973 	.word	0x74737973
10021464:	0a0d6d65 	.word	0x0a0d6d65
10021468:	00000000 	.word	0x00000000
1002146c:	65746e45 	.word	0x65746e45
10021470:	6f432072 	.word	0x6f432072
10021474:	6e616d6d 	.word	0x6e616d6d
10021478:	00203a64 	.word	0x00203a64
1002147c:	7473696c 	.word	0x7473696c
10021480:	00000000 	.word	0x00000000
10021484:	6c706572 	.word	0x6c706572
10021488:	00656361 	.word	0x00656361
1002148c:	65747461 	.word	0x65747461
10021490:	00007473 	.word	0x00007473
10021494:	1002147c 	.word	0x1002147c
10021498:	1000e295 	.word	0x1000e295
1002149c:	10021338 	.word	0x10021338
100214a0:	1000e785 	.word	0x1000e785
100214a4:	10021484 	.word	0x10021484
100214a8:	1000e9c1 	.word	0x1000e9c1
100214ac:	1002148c 	.word	0x1002148c
100214b0:	1000e8d9 	.word	0x1000e8d9
100214b4:	63612525 	.word	0x63612525
100214b8:	0a25256b 	.word	0x0a25256b
100214bc:	00000000 	.word	0x00000000
100214c0:	78323025 	.word	0x78323025
100214c4:	00000000 	.word	0x00000000
100214c8:	203e2d20 	.word	0x203e2d20
100214cc:	65746e49 	.word	0x65746e49
100214d0:	70757272 	.word	0x70757272
100214d4:	28202174 	.word	0x28202174
100214d8:	73616c46 	.word	0x73616c46
100214dc:	63612068 	.word	0x63612068
100214e0:	73736563 	.word	0x73736563
100214e4:	69616620 	.word	0x69616620
100214e8:	6572756c 	.word	0x6572756c
100214ec:	00000a29 	.word	0x00000a29
100214f0:	6c696146 	.word	0x6c696146
100214f4:	74206465 	.word	0x74206465
100214f8:	6e69206f 	.word	0x6e69206f
100214fc:	61697469 	.word	0x61697469
10021500:	657a696c 	.word	0x657a696c
10021504:	43324920 	.word	0x43324920
10021508:	0000002e 	.word	0x0000002e

1002150c <Td4>:
1002150c:	d56a0952 38a53630 9ea340bf fbd7f381     R.j.06.8.@......
1002151c:	8239e37c 87ff2f9b 44438e34 cbe9dec4     |.9../..4.CD....
1002152c:	32947b54 3d23c2a6 0b954cee 4ec3fa42     T{.2..#=.L..B..N
1002153c:	66a12e08 b224d928 49a25b76 25d18b6d     ...f(.$.v[.Im..%
1002154c:	64f6f872 16986886 cc5ca4d4 92b6655d     r..d.h....\.]e..
1002155c:	5048706c dab9edfd 5746155e 849d8da7     lpHP....^.FW....
1002156c:	00abd890 0ad3bc8c 0558e4f7 0645b3b8     ..........X...E.
1002157c:	8f1e2cd0 020f3fca 03bdafc1 6b8a1301     .,...?.........k
1002158c:	4111913a eadc674f cecff297 73e6b4f0     :..AOg.........s
1002159c:	2274ac96 8535ade7 e837f9e2 6edf751c     ..t"..5...7..u.n
100215ac:	711af147 89c5291d 0e62b76f 1bbe18aa     G..q.)..o.b.....
100215bc:	4b3e56fc 2079d2c6 fec0db9a f45acd78     .V>K..y ....x.Z.
100215cc:	33a8dd1f 31c70788 591012b1 5fec8027     ...3...1...Y'.._
100215dc:	a97f5160 0d4ab519 9f7ae52d ef9cc993     `Q....J.-.z.....
100215ec:	4d3be0a0 b0f52aae 3cbbebc8 61995383     ..;M.*.....<.S.a
100215fc:	7e042b17 26d677ba 631469e1 7d0c2155     .+.~.w.&.i.cU!.}

1002160c <Td>:
1002160c:	51f4a750 7e416553 1a17a4c3 3a275e96     P..QSeA~.....^':
1002161c:	3bab6bcb 1f9d45f1 acfa58ab 4be30393     .k.;.E...X.....K
1002162c:	2030fa55 ad766df6 88cc7691 f5024c25     U.0 .mv..v..%L..
1002163c:	4fe5d7fc c52acbd7 26354480 b562a38f     ...O..*..D5&..b.
1002164c:	deb15a49 25ba1b67 45ea0e98 5dfec0e1     IZ..g..%...E...]
1002165c:	c32f7502 814cf012 8d4697a3 6bd3f9c6     .u/...L...F....k
1002166c:	038f5fe7 15929c95 bf6d7aeb 955259da     ._.......zm..YR.
1002167c:	d4be832d 587421d3 49e06929 8ec9c844     -....!tX)i.ID...
1002168c:	75c2896a f48e7978 99583e6b 27b971dd     j..uxy..k>X..q.'
1002169c:	bee14fb6 f088ad17 c920ac66 7dce3ab4     .O......f. ..:.}
100216ac:	63df4a18 e51a3182 97513360 62537f45     .J.c.1..`3Q.E.Sb
100216bc:	b16477e0 bb6bae84 fe81a01c f9082b94     .wd...k......+..
100216cc:	70486858 8f45fd19 94de6c87 527bf8b7     XhHp..E..l....{R
100216dc:	ab73d323 724b02e2 e31f8f57 6655ab2a     #.s...KrW...*.Uf
100216ec:	b2eb2807 2fb5c203 86c57b9a d33708a5     .(...../.{....7.
100216fc:	302887f2 23bfa5b2 02036aba ed16825c     ..(0...#.j..\...
1002170c:	8acf1c2b a779b492 f307f2f0 4e69e2a1     +.....y.......iN
1002171c:	65daf4cd 0605bed5 d134621f c4a6fe8a     ...e.....b4.....
1002172c:	342e539d a2f355a0 058ae132 a4f6eb75     .S.4.U..2...u...
1002173c:	0b83ec39 4060efaa 5e719f06 bd6e1051     9.....`@..q^Q.n.
1002174c:	3e218af9 96dd063d dd3e05ae 4de6bd46     ..!>=.....>.F..M
1002175c:	91548db5 71c45d05 0406d46f 605015ff     ..T..].qo.....P`
1002176c:	1998fb24 d6bde997 894043cc 67d99e77     $........C@.w..g
1002177c:	b0e842bd 07898b88 e7195b38 79c8eedb     .B......8[.....y
1002178c:	a17c0a47 7c420fe9 f8841ec9 00000000     G.|...B|........
1002179c:	09808683 322bed48 1e1170ac 6c5a724e     ....H.+2.p..NrZl
100217ac:	fd0efffb 0f853856 3daed51e 362d3927     ....V8.....='9-6
100217bc:	0a0fd964 685ca621 9b5b54d1 24362e3a     d...!.\h.T[.:.6$
100217cc:	0c0a67b1 9357e70f b4ee96d2 1b9b919e     .g....W.........
100217dc:	80c0c54f 61dc20a2 5a774b69 1c121a16     O.... .aiKwZ....
100217ec:	e293ba0a c0a02ae5 3c22e043 121b171d     .....*..C."<....
100217fc:	0e090d0b f28bc7ad 2db6a8b9 141ea9c8     ...........-....
1002180c:	57f11985 af75074c ee99ddbb a37f60fd     ...WL.u......`..
1002181c:	f701269f 5c72f5bc 44663bc5 5bfb7e34     .&....r\.;fD4~.[
1002182c:	8b432976 cb23c6dc b6edfc68 b8e4f163     v)C...#.h...c...
1002183c:	d731dcca 42638510 13972240 84c61120     ..1...cB@".. ...
1002184c:	854a247d d2bb3df8 aef93211 c729a16d     }$J..=...2..m.).
1002185c:	1d9e2f4b dcb230f3 0d8652ec 77c1e3d0     K/...0...R.....w
1002186c:	2bb3166c a970b999 119448fa 47e96422     l..+..p..H.."d.G
1002187c:	a8fc8cc4 a0f03f1a 567d2cd8 223390ef     .....?...,}V..3"
1002188c:	87494ec7 d938d1c1 8ccaa2fe 98d40b36     .NI...8.....6...
1002189c:	a6f581cf a57ade28 dab78e26 3fadbfa4     ....(.z.&......?
100218ac:	2c3a9de4 5078920d 6a5fcc9b 547e4662     ..:,..xP.._jbF~T
100218bc:	f68d13c2 90d8b8e8 2e39f75e 82c3aff5     ........^.9.....
100218cc:	9f5d80be 69d0937c 6fd52da9 cf2512b3     ..].|..i.-.o..%.
100218dc:	c8ac993b 10187da7 e89c636e db3bbb7b     ;....}..nc..{.;.
100218ec:	cd267809 6e5918f4 ec9ab701 834f9aa8     .x&...Yn......O.
100218fc:	e6956e65 aaffe67e 21bccf08 ef15e8e6     en..~......!....
1002190c:	bae79bd9 4a6f36ce ea9f09d4 29b07cd6     .....6oJ.....|.)
1002191c:	31a4b2af 2a3f2331 c6a59430 35a266c0     ...11#?*0....f.5
1002192c:	744ebc37 fc82caa6 e090d0b0 33a7d815     7.Nt...........3
1002193c:	f104984a 41ecdaf7 7fcd500e 1791f62f     J......A.P../...
1002194c:	764dd68d 43efb04d ccaa4d54 e49604df     ..MvM..CTM......
1002195c:	9ed1b5e3 4c6a881b c12c1fb8 4665517f     ......jL..,..QeF
1002196c:	9d5eea04 018c355d fa877473 fb0b412e     ..^.]5..st...A..
1002197c:	b3671d5a 92dbd252 e9105633 6dd64713     Z.g.R...3V...G.m
1002198c:	9ad7618c 37a10c7a 59f8148e eb133c89     .a..z..7...Y.<..
1002199c:	cea927ee b761c935 e11ce5ed 7a47b13c     .'..5.a.....<.Gz
100219ac:	9cd2df59 55f2733f 1814ce79 73c737bf     Y...?s.Uy....7.s
100219bc:	53f7cdea 5ffdaa5b df3d6f14 7844db86     ...S[.._.o=...Dx
100219cc:	caaff381 b968c43e 3824342c c2a3405f     ....>.h.,4$8_@..
100219dc:	161dc372 bce2250c 283c498b ff0d9541     r....%...I<(A...
100219ec:	39a80171 080cb3de d8b4e49c 6456c190     q..9..........Vd
100219fc:	7bcb8461 d532b670 486c5c74 d0b85742     a..{p.2.t\lHBW..
10021a0c:	5051f4a7 537e4165 c31a17a4 963a275e     ..QPeA~S....^':.
10021a1c:	cb3bab6b f11f9d45 abacfa58 934be303     k.;.E...X.....K.
10021a2c:	552030fa f6ad766d 9188cc76 25f5024c     .0 Umv..v...L..%
10021a3c:	fc4fe5d7 d7c52acb 80263544 8fb562a3     ..O..*..D5&..b..
10021a4c:	49deb15a 6725ba1b 9845ea0e e15dfec0     Z..I..%g..E...].
10021a5c:	02c32f75 12814cf0 a38d4697 c66bd3f9     u/...L...F....k.
10021a6c:	e7038f5f 9515929c ebbf6d7a da955259     _.......zm..YR..
10021a7c:	2dd4be83 d3587421 2949e069 448ec9c8     ...-!tX.i.I)...D
10021a8c:	6a75c289 78f48e79 6b99583e dd27b971     ..ujy..x>X.kq.'.
10021a9c:	b6bee14f 17f088ad 66c920ac b47dce3a     O........ .f:.}.
10021aac:	1863df4a 82e51a31 60975133 4562537f     J.c.1...3Q.`.SbE
10021abc:	e0b16477 84bb6bae 1cfe81a0 94f9082b     wd...k......+...
10021acc:	58704868 198f45fd 8794de6c b7527bf8     hHpX.E..l....{R.
10021adc:	23ab73d3 e2724b02 57e31f8f 2a6655ab     .s.#.Kr....W.Uf*
10021aec:	07b2eb28 032fb5c2 9a86c57b a5d33708     (...../.{....7..
10021afc:	f2302887 b223bfa5 ba02036a 5ced1682     .(0...#.j......\
10021b0c:	2b8acf1c 92a779b4 f0f307f2 a14e69e2     ...+.y.......iN.
10021b1c:	cd65daf4 d50605be 1fd13462 8ac4a6fe     ..e.....b4......
10021b2c:	9d342e53 a0a2f355 32058ae1 75a4f6eb     S.4.U......2...u
10021b3c:	390b83ec aa4060ef 065e719f 51bd6e10     ...9.`@..q^..n.Q
10021b4c:	f93e218a 3d96dd06 aedd3e05 464de6bd     .!>....=.>....MF
10021b5c:	b591548d 0571c45d 6f0406d4 ff605015     .T..].q....o.P`.
10021b6c:	241998fb 97d6bde9 cc894043 7767d99e     ...$....C@....gw
10021b7c:	bdb0e842 8807898b 38e7195b db79c8ee     B.......[..8..y.
10021b8c:	47a17c0a e97c420f c9f8841e 00000000     .|.G.B|.........
10021b9c:	83098086 48322bed ac1e1170 4e6c5a72     .....+2Hp...rZlN
10021bac:	fbfd0eff 560f8538 1e3daed5 27362d39     ....8..V..=.9-6'
10021bbc:	640a0fd9 21685ca6 d19b5b54 3a24362e     ...d.\h!T[...6$:
10021bcc:	b10c0a67 0f9357e7 d2b4ee96 9e1b9b91     g....W..........
10021bdc:	4f80c0c5 a261dc20 695a774b 161c121a     ...O .a.KwZi....
10021bec:	0ae293ba e5c0a02a 433c22e0 1d121b17     ....*...."<C....
10021bfc:	0b0e090d adf28bc7 b92db6a8 c8141ea9     ..........-.....
10021c0c:	8557f119 4caf7507 bbee99dd fda37f60     ..W..u.L....`...
10021c1c:	9ff70126 bc5c72f5 c544663b 345bfb7e     &....r\.;fD.~.[4
10021c2c:	768b4329 dccb23c6 68b6edfc 63b8e4f1     )C.v.#.....h...c
10021c3c:	cad731dc 10426385 40139722 2084c611     .1...cB."..@... 
10021c4c:	7d854a24 f8d2bb3d 11aef932 6dc729a1     $J.}=...2....).m
10021c5c:	4b1d9e2f f3dcb230 ec0d8652 d077c1e3     /..K0...R.....w.
10021c6c:	6c2bb316 99a970b9 fa119448 2247e964     ..+l.p..H...d.G"
10021c7c:	c4a8fc8c 1aa0f03f d8567d2c ef223390     ....?...,}V..3".
10021c8c:	c787494e c1d938d1 fe8ccaa2 3698d40b     NI...8.........6
10021c9c:	cfa6f581 28a57ade 26dab78e a43fadbf     .....z.(...&..?.
10021cac:	e42c3a9d 0d507892 9b6a5fcc 62547e46     .:,..xP.._j.F~Tb
10021cbc:	c2f68d13 e890d8b8 5e2e39f7 f582c3af     .........9.^....
10021ccc:	be9f5d80 7c69d093 a96fd52d b3cf2512     .]....i|-.o..%..
10021cdc:	3bc8ac99 a710187d 6ee89c63 7bdb3bbb     ...;}...c..n.;.{
10021cec:	09cd2678 f46e5918 01ec9ab7 a8834f9a     x&...Yn......O..
10021cfc:	65e6956e 7eaaffe6 0821bccf e6ef15e8     n..e...~..!.....
10021d0c:	d9bae79b ce4a6f36 d4ea9f09 d629b07c     ....6oJ.....|.).
10021d1c:	af31a4b2 312a3f23 30c6a594 c035a266     ..1.#?*1...0f.5.
10021d2c:	37744ebc a6fc82ca b0e090d0 1533a7d8     .Nt7..........3.
10021d3c:	4af10498 f741ecda 0e7fcd50 2f1791f6     ...J..A.P....../
10021d4c:	8d764dd6 4d43efb0 54ccaa4d dfe49604     .Mv...CMM..T....
10021d5c:	e39ed1b5 1b4c6a88 b8c12c1f 7f466551     .....jL..,..QeF.
10021d6c:	049d5eea 5d018c35 73fa8774 2efb0b41     .^..5..]t..sA...
10021d7c:	5ab3671d 5292dbd2 33e91056 136dd647     .g.Z...RV..3G.m.
10021d8c:	8c9ad761 7a37a10c 8e59f814 89eb133c     a.....7z..Y.<...
10021d9c:	eecea927 35b761c9 ede11ce5 3c7a47b1     '....a.5.....Gz<
10021dac:	599cd2df 3f55f273 791814ce bf73c737     ...Ys.U?...y7.s.
10021dbc:	ea53f7cd 5b5ffdaa 14df3d6f 867844db     ..S..._[o=...Dx.
10021dcc:	81caaff3 3eb968c4 2c382434 5fc2a340     .....h.>4$8,@.._
10021ddc:	72161dc3 0cbce225 8b283c49 41ff0d95     ...r%...I<(....A
10021dec:	7139a801 de080cb3 9cd8b4e4 906456c1     ..9q.........Vd.
10021dfc:	617bcb84 70d532b6 74486c5c 42d0b857     ..{a.2.p\lHtW..B
10021e0c:	a75051f4 65537e41 a4c31a17 5e963a27     .QP.A~Se....':.^
10021e1c:	6bcb3bab 45f11f9d 58abacfa 03934be3     .;.k...E...X.K..
10021e2c:	fa552030 6df6ad76 769188cc 4c25f502     0 U.v..m...v..%L
10021e3c:	d7fc4fe5 cbd7c52a 44802635 a38fb562     .O..*...5&.Db...
10021e4c:	5a49deb1 1b6725ba 0e9845ea c0e15dfe     ..IZ.%g..E...]..
10021e5c:	7502c32f f012814c 97a38d46 f9c66bd3     /..uL...F....k..
10021e6c:	5fe7038f 9c951592 7aebbf6d 59da9552     ..._....m..zR..Y
10021e7c:	832dd4be 21d35874 692949e0 c8448ec9     ..-.tX.!.I)i..D.
10021e8c:	896a75c2 7978f48e 3e6b9958 71dd27b9     .uj...xyX.k>.'.q
10021e9c:	4fb6bee1 ad17f088 ac66c920 3ab47dce     ...O.... .f..}.:
10021eac:	4a1863df 3182e51a 33609751 7f456253     .c.J...1Q.`3SbE.
10021ebc:	77e0b164 ae84bb6b a01cfe81 2b94f908     d..wk..........+
10021ecc:	68587048 fd198f45 6c8794de f8b7527b     HpXhE......l{R..
10021edc:	d323ab73 02e2724b 8f57e31f ab2a6655     s.#.Kr....W.Uf*.
10021eec:	2807b2eb c2032fb5 7b9a86c5 08a5d337     ...(./.....{7...
10021efc:	87f23028 a5b223bf 6aba0203 825ced16     (0...#.....j..\.
10021f0c:	1c2b8acf b492a779 f2f0f307 e2a14e69     ..+.y.......iN..
10021f1c:	f4cd65da bed50605 621fd134 fe8ac4a6     .e......4..b....
10021f2c:	539d342e 55a0a2f3 e132058a eb75a4f6     .4.S...U..2...u.
10021f3c:	ec390b83 efaa4060 9f065e71 1051bd6e     ..9.`@..q^..n.Q.
10021f4c:	8af93e21 063d96dd 05aedd3e bd464de6     !>....=.>....MF.
10021f5c:	8db59154 5d0571c4 d46f0406 15ff6050     T....q.]..o.P`..
10021f6c:	fb241998 e997d6bd 43cc8940 9e7767d9     ..$.....@..C.gw.
10021f7c:	42bdb0e8 8b880789 5b38e719 eedb79c8     ...B......8[.y..
10021f8c:	0a47a17c 0fe97c42 1ec9f884 00000000     |.G.B|..........
10021f9c:	86830980 ed48322b 70ac1e11 724e6c5a     ....+2H....pZlNr
10021fac:	fffbfd0e 38560f85 d51e3dae 3927362d     ......V8.=..-6'9
10021fbc:	d9640a0f a621685c 54d19b5b 2e3a2436     ..d.\h!.[..T6$:.
10021fcc:	67b10c0a e70f9357 96d2b4ee 919e1b9b     ...gW...........
10021fdc:	c54f80c0 20a261dc 4b695a77 1a161c12     ..O..a. wZiK....
10021fec:	ba0ae293 2ae5c0a0 e0433c22 171d121b     .......*"<C.....
10021ffc:	0d0b0e09 c7adf28b a8b92db6 a9c8141e     .........-......
1002200c:	198557f1 074caf75 ddbbee99 60fda37f     .W..u.L........`
1002201c:	269ff701 f5bc5c72 3bc54466 7e345bfb     ...&r\..fD.;.[4~
1002202c:	29768b43 c6dccb23 fc68b6ed f163b8e4     C.v)#.....h...c.
1002203c:	dccad731 85104263 22401397 112084c6     1...cB....@".. .
1002204c:	247d854a 3df8d2bb 3211aef9 a16dc729     J.}$...=...2).m.
1002205c:	2f4b1d9e 30f3dcb2 52ec0d86 e3d077c1     ..K/...0...R.w..
1002206c:	166c2bb3 b999a970 48fa1194 642247e9     .+l.p......H.G"d
1002207c:	8cc4a8fc 3f1aa0f0 2cd8567d 90ef2233     .......?}V.,3"..
1002208c:	4ec78749 d1c1d938 a2fe8cca 0b3698d4     I..N8.........6.
1002209c:	81cfa6f5 de28a57a 8e26dab7 bfa43fad     ....z.(...&..?..
100220ac:	9de42c3a 920d5078 cc9b6a5f 4662547e     :,..xP.._j..~TbF
100220bc:	13c2f68d b8e890d8 f75e2e39 aff582c3     ........9.^.....
100220cc:	80be9f5d 937c69d0 2da96fd5 12b3cf25     ]....i|..o.-%...
100220dc:	993bc8ac 7da71018 636ee89c bb7bdb3b     ..;....}..nc;.{.
100220ec:	7809cd26 18f46e59 b701ec9a 9aa8834f     &..xYn......O...
100220fc:	6e65e695 e67eaaff cf0821bc e8e6ef15     ..en..~..!......
1002210c:	9bd9bae7 36ce4a6f 09d4ea9f 7cd629b0     ....oJ.6.....).|
1002211c:	b2af31a4 23312a3f 9430c6a5 66c035a2     .1..?*1#..0..5.f
1002212c:	bc37744e caa6fc82 d0b0e090 d81533a7     Nt7..........3..
1002213c:	984af104 daf741ec 500e7fcd f62f1791     ..J..A.....P../.
1002214c:	d68d764d b04d43ef 4d54ccaa 04dfe496     Mv...CM...TM....
1002215c:	b5e39ed1 881b4c6a 1fb8c12c 517f4665     ....jL..,...eF.Q
1002216c:	ea049d5e 355d018c 7473fa87 412efb0b     ^.....]5..st...A
1002217c:	1d5ab367 d25292db 5633e910 47136dd6     g.Z...R...3V.m.G
1002218c:	618c9ad7 0c7a37a1 148e59f8 3c89eb13     ...a.7z..Y.....<
1002219c:	27eecea9 c935b761 e5ede11c b13c7a47     ...'a.5.....Gz<.
100221ac:	df599cd2 733f55f2 ce791814 37bf73c7     ..Y..U?s..y..s.7
100221bc:	cdea53f7 aa5b5ffd 6f14df3d db867844     .S..._[.=..oDx..
100221cc:	f381caaf c43eb968 342c3824 405fc2a3     ....h.>.$8,4.._@
100221dc:	c372161d 250cbce2 498b283c 9541ff0d     ..r....%<(.I..A.
100221ec:	017139a8 b3de080c e49cd8b4 c1906456     .9q.........Vd..
100221fc:	84617bcb b670d532 5c74486c 5742d0b8     .{a.2.p.lHt\..BW
1002220c:	f4a75051 4165537e 17a4c31a 275e963a     QP..~SeA....:.^'
1002221c:	ab6bcb3b 9d45f11f fa58abac e303934b     ;.k...E...X.K...
1002222c:	30fa5520 766df6ad cc769188 024c25f5      U.0..mv..v..%L.
1002223c:	e5d7fc4f 2acbd7c5 35448026 62a38fb5     O......*&.D5...b
1002224c:	b15a49de ba1b6725 ea0e9845 fec0e15d     .IZ.%g..E...]...
1002225c:	2f7502c3 4cf01281 4697a38d d3f9c66b     ..u/...L...Fk...
1002226c:	8f5fe703 929c9515 6d7aebbf 5259da95     .._.......zm..YR
1002227c:	be832dd4 7421d358 e0692949 c9c8448e     .-..X.!tI)i..D..
1002228c:	c2896a75 8e7978f4 583e6b99 b971dd27     uj...xy..k>X'.q.
1002229c:	e14fb6be 88ad17f0 20ac66c9 ce3ab47d     ..O......f. }.:.
100222ac:	df4a1863 1a3182e5 51336097 537f4562     c.J...1..`3QbE.S
100222bc:	6477e0b1 6bae84bb 81a01cfe 082b94f9     ..wd...k......+.
100222cc:	48685870 45fd198f de6c8794 7bf8b752     pXhH...E..l.R..{
100222dc:	73d323ab 4b02e272 1f8f57e3 55ab2a66     .#.sr..K.W..f*.U
100222ec:	eb2807b2 b5c2032f c57b9a86 3708a5d3     ..(./.....{....7
100222fc:	2887f230 bfa5b223 036aba02 16825ced     0..(#.....j..\..
1002230c:	cf1c2b8a 79b492a7 07f2f0f3 69e2a14e     .+.....y....N..i
1002231c:	daf4cd65 05bed506 34621fd1 a6fe8ac4     e.........b4....
1002232c:	2e539d34 f355a0a2 8ae13205 f6eb75a4     4.S...U..2...u..
1002233c:	83ec390b 60efaa40 719f065e 6e1051bd     .9..@..`^..q.Q.n
1002234c:	218af93e dd063d96 3e05aedd e6bd464d     >..!.=.....>MF..
1002235c:	548db591 c45d0571 06d46f04 5015ff60     ...Tq.]..o..`..P
1002236c:	98fb2419 bde997d6 4043cc89 d99e7767     .$........C@gw..
1002237c:	e842bdb0 898b8807 195b38e7 c8eedb79     ..B......8[.y...
1002238c:	7c0a47a1 420fe97c 841ec9f8 00000000     .G.||..B........
1002239c:	80868309 2bed4832 1170ac1e 5a724e6c     ....2H.+..p.lNrZ
100223ac:	0efffbfd 8538560f aed51e3d 2d392736     .....V8.=...6'9-
100223bc:	0fd9640a 5ca62168 5b54d19b 362e3a24     .d..h!.\..T[$:.6
100223cc:	0a67b10c 57e70f93 ee96d2b4 9b919e1b     ..g....W........
100223dc:	c0c54f80 dc20a261 774b695a 121a161c     .O..a. .ZiKw....
100223ec:	93ba0ae2 a02ae5c0 22e0433c 1b171d12     ......*.<C."....
100223fc:	090d0b0e 8bc7adf2 b6a8b92d 1ea9c814     ........-.......
1002240c:	f1198557 75074caf 99ddbbee 7f60fda3     W....L.u......`.
1002241c:	01269ff7 72f5bc5c 663bc544 fb7e345b     ..&.\..rD.;f[4~.
1002242c:	4329768b 23c6dccb edfc68b6 e4f163b8     .v)C...#.h...c..
1002243c:	31dccad7 63851042 97224013 c6112084     ...1B..c.@".. ..
1002244c:	4a247d85 bb3df8d2 f93211ae 29a16dc7     .}$J..=...2..m.)
1002245c:	9e2f4b1d b230f3dc 8652ec0d c1e3d077     .K/...0...R.w...
1002246c:	b3166c2b 70b999a9 9448fa11 e9642247     +l.....p..H.G"d.
1002247c:	fc8cc4a8 f03f1aa0 7d2cd856 3390ef22     ......?.V.,}"..3
1002248c:	494ec787 38d1c1d9 caa2fe8c d40b3698     ..NI...8.....6..
1002249c:	f581cfa6 7ade28a5 b78e26da adbfa43f     .....(.z.&..?...
100224ac:	3a9de42c 78920d50 5fcc9b6a 7e466254     ,..:P..xj.._TbF~
100224bc:	8d13c2f6 d8b8e890 39f75e2e c3aff582     .........^.9....
100224cc:	5d80be9f d0937c69 d52da96f 2512b3cf     ...]i|..o.-....%
100224dc:	ac993bc8 187da710 9c636ee8 3bbb7bdb     .;....}..nc..{.;
100224ec:	267809cd 5918f46e 9ab701ec 4f9aa883     ..x&n..Y.......O
100224fc:	956e65e6 ffe67eaa bccf0821 15e8e6ef     .en..~..!.......
1002250c:	e79bd9ba 6f36ce4a 9f09d4ea b07cd629     ....J.6o....).|.
1002251c:	a4b2af31 3f23312a a59430c6 a266c035     1...*1#?.0..5.f.
1002252c:	4ebc3774 82caa6fc 90d0b0e0 a7d81533     t7.N........3...
1002253c:	04984af1 ecdaf741 cd500e7f 91f62f17     .J..A.....P../..
1002254c:	4dd68d76 efb04d43 aa4d54cc 9604dfe4     v..MCM...TM.....
1002255c:	d1b5e39e 6a881b4c 2c1fb8c1 65517f46     ....L..j...,F.Qe
1002256c:	5eea049d 8c355d01 877473fa 0b412efb     ...^.]5..st...A.
1002257c:	671d5ab3 dbd25292 105633e9 d647136d     .Z.g.R...3V.m.G.
1002258c:	d7618c9a a10c7a37 f8148e59 133c89eb     ..a.7z..Y.....<.
1002259c:	a927eece 61c935b7 1ce5ede1 47b13c7a     ..'..5.a....z<.G
100225ac:	d2df599c f2733f55 14ce7918 c737bf73     .Y..U?s..y..s.7.
100225bc:	f7cdea53 fdaa5b5f 3d6f14df 44db8678     S..._[....o=x..D
100225cc:	aff381ca 68c43eb9 24342c38 a3405fc2     .....>.h8,4$._@.
100225dc:	1dc37216 e2250cbc 3c498b28 0d9541ff     .r....%.(.I<.A..
100225ec:	a8017139 0cb3de08 b4e49cd8 56c19064     9q..........d..V
100225fc:	cb84617b 32b670d5 6c5c7448 b85742d0     {a...p.2Ht\l.BW.

1002260c <Te>:
1002260c:	c66363a5 f87c7c84 ee777799 f67b7b8d     .cc..||..ww..{{.
1002261c:	fff2f20d d66b6bbd de6f6fb1 91c5c554     .....kk..oo.T...
1002262c:	60303050 02010103 ce6767a9 562b2b7d     P00`.....gg.}++V
1002263c:	e7fefe19 b5d7d762 4dababe6 ec76769a     ....b......M.vv.
1002264c:	8fcaca45 1f82829d 89c9c940 fa7d7d87     E.......@....}}.
1002265c:	effafa15 b25959eb 8e4747c9 fbf0f00b     .....YY..GG.....
1002266c:	41adadec b3d4d467 5fa2a2fd 45afafea     ...Ag......_...E
1002267c:	239c9cbf 53a4a4f7 e4727296 9bc0c05b     ...#...S.rr.[...
1002268c:	75b7b7c2 e1fdfd1c 3d9393ae 4c26266a     ...u.......=j&&L
1002269c:	6c36365a 7e3f3f41 f5f7f702 83cccc4f     Z66lA??~....O...
100226ac:	6834345c 51a5a5f4 d1e5e534 f9f1f108     \44h...Q4.......
100226bc:	e2717193 abd8d873 62313153 2a15153f     .qq.s...S11b?..*
100226cc:	0804040c 95c7c752 46232365 9dc3c35e     ....R...e##F^...
100226dc:	30181828 379696a1 0a05050f 2f9a9ab5     (..0...7......./
100226ec:	0e070709 24121236 1b80809b dfe2e23d     ....6..$....=...
100226fc:	cdebeb26 4e272769 7fb2b2cd ea75759f     &...i''N.....uu.
1002270c:	1209091b 1d83839e 582c2c74 341a1a2e     ........t,,X...4
1002271c:	361b1b2d dc6e6eb2 b45a5aee 5ba0a0fb     -..6.nn..ZZ....[
1002272c:	a45252f6 763b3b4d b7d6d661 7db3b3ce     .RR.M;;va......}
1002273c:	5229297b dde3e33e 5e2f2f71 13848497     {))R>...q//^....
1002274c:	a65353f5 b9d1d168 00000000 c1eded2c     .SS.h.......,...
1002275c:	40202060 e3fcfc1f 79b1b1c8 b65b5bed     `  @.......y.[[.
1002276c:	d46a6abe 8dcbcb46 67bebed9 7239394b     .jj.F......gK99r
1002277c:	944a4ade 984c4cd4 b05858e8 85cfcf4a     .JJ..LL..XX.J...
1002278c:	bbd0d06b c5efef2a 4faaaae5 edfbfb16     k...*......O....
1002279c:	864343c5 9a4d4dd7 66333355 11858594     .CC..MM.U33f....
100227ac:	8a4545cf e9f9f910 04020206 fe7f7f81     .EE.............
100227bc:	a05050f0 783c3c44 259f9fba 4ba8a8e3     .PP.D<<x...%...K
100227cc:	a25151f3 5da3a3fe 804040c0 058f8f8a     .QQ....].@@.....
100227dc:	3f9292ad 219d9dbc 70383848 f1f5f504     ...?...!H88p....
100227ec:	63bcbcdf 77b6b6c1 afdada75 42212163     ...c...wu...c!!B
100227fc:	20101030 e5ffff1a fdf3f30e bfd2d26d     0.. ........m...
1002280c:	81cdcd4c 180c0c14 26131335 c3ecec2f     L.......5..&/...
1002281c:	be5f5fe1 359797a2 884444cc 2e171739     .__....5.DD.9...
1002282c:	93c4c457 55a7a7f2 fc7e7e82 7a3d3d47     W......U.~~.G==z
1002283c:	c86464ac ba5d5de7 3219192b e6737395     .dd..]].+..2.ss.
1002284c:	c06060a0 19818198 9e4f4fd1 a3dcdc7f     .``......OO.....
1002285c:	44222266 542a2a7e 3b9090ab 0b888883     f""D~**T...;....
1002286c:	8c4646ca c7eeee29 6bb8b8d3 2814143c     .FF.)......k<..(
1002287c:	a7dede79 bc5e5ee2 160b0b1d addbdb76     y....^^.....v...
1002288c:	dbe0e03b 64323256 743a3a4e 140a0a1e     ;...V22dN::t....
1002289c:	924949db 0c06060a 4824246c b85c5ce4     .II.....l$$H.\\.
100228ac:	9fc2c25d bdd3d36e 43acacef c46262a6     ]...n......C.bb.
100228bc:	399191a8 319595a4 d3e4e437 f279798b     ...9...17....yy.
100228cc:	d5e7e732 8bc8c843 6e373759 da6d6db7     2...C...Y77n.mm.
100228dc:	018d8d8c b1d5d564 9c4e4ed2 49a9a9e0     ....d....NN....I
100228ec:	d86c6cb4 ac5656fa f3f4f407 cfeaea25     .ll..VV.....%...
100228fc:	ca6565af f47a7a8e 47aeaee9 10080818     .ee..zz....G....
1002290c:	6fbabad5 f0787888 4a25256f 5c2e2e72     ...o.xx.o%%Jr..\
1002291c:	381c1c24 57a6a6f1 73b4b4c7 97c6c651     $..8...W...sQ...
1002292c:	cbe8e823 a1dddd7c e874749c 3e1f1f21     #...|....tt.!..>
1002293c:	964b4bdd 61bdbddc 0d8b8b86 0f8a8a85     .KK....a........
1002294c:	e0707090 7c3e3e42 71b5b5c4 cc6666aa     .pp.B>>|...q.ff.
1002295c:	904848d8 06030305 f7f6f601 1c0e0e12     .HH.............
1002296c:	c26161a3 6a35355f ae5757f9 69b9b9d0     .aa._55j.WW....i
1002297c:	17868691 99c1c158 3a1d1d27 279e9eb9     ....X...'..:...'
1002298c:	d9e1e138 ebf8f813 2b9898b3 22111133     8..........+3.."
1002299c:	d26969bb a9d9d970 078e8e89 339494a7     .ii.p..........3
100229ac:	2d9b9bb6 3c1e1e22 15878792 c9e9e920     ...-"..<.... ...
100229bc:	87cece49 aa5555ff 50282878 a5dfdf7a     I....UU.x((Pz...
100229cc:	038c8c8f 59a1a1f8 09898980 1a0d0d17     .......Y........
100229dc:	65bfbfda d7e6e631 844242c6 d06868b8     ...e1....BB..hh.
100229ec:	824141c3 299999b0 5a2d2d77 1e0f0f11     .AA....)w--Z....
100229fc:	7bb0b0cb a85454fc 6dbbbbd6 2c16163a     ...{.TT....m:..,
10022a0c:	a5c66363 84f87c7c 99ee7777 8df67b7b     cc..||..ww..{{..
10022a1c:	0dfff2f2 bdd66b6b b1de6f6f 5491c5c5     ....kk..oo.....T
10022a2c:	50603030 03020101 a9ce6767 7d562b2b     00`P....gg..++V}
10022a3c:	19e7fefe 62b5d7d7 e64dabab 9aec7676     .......b..M.vv..
10022a4c:	458fcaca 9d1f8282 4089c9c9 87fa7d7d     ...E.......@}}..
10022a5c:	15effafa ebb25959 c98e4747 0bfbf0f0     ....YY..GG......
10022a6c:	ec41adad 67b3d4d4 fd5fa2a2 ea45afaf     ..A....g.._...E.
10022a7c:	bf239c9c f753a4a4 96e47272 5b9bc0c0     ..#...S.rr.....[
10022a8c:	c275b7b7 1ce1fdfd ae3d9393 6a4c2626     ..u.......=.&&Lj
10022a9c:	5a6c3636 417e3f3f 02f5f7f7 4f83cccc     66lZ??~A.......O
10022aac:	5c683434 f451a5a5 34d1e5e5 08f9f1f1     44h\..Q....4....
10022abc:	93e27171 73abd8d8 53623131 3f2a1515     qq.....s11bS..*?
10022acc:	0c080404 5295c7c7 65462323 5e9dc3c3     .......R##Fe...^
10022adc:	28301818 a1379696 0f0a0505 b52f9a9a     ..0(..7......./.
10022aec:	090e0707 36241212 9b1b8080 3ddfe2e2     ......$6.......=
10022afc:	26cdebeb 694e2727 cd7fb2b2 9fea7575     ...&''Ni....uu..
10022b0c:	1b120909 9e1d8383 74582c2c 2e341a1a     ........,,Xt..4.
10022b1c:	2d361b1b b2dc6e6e eeb45a5a fb5ba0a0     ..6-nn..ZZ....[.
10022b2c:	f6a45252 4d763b3b 61b7d6d6 ce7db3b3     RR..;;vM...a..}.
10022b3c:	7b522929 3edde3e3 715e2f2f 97138484     ))R{...>//^q....
10022b4c:	f5a65353 68b9d1d1 00000000 2cc1eded     SS.....h.......,
10022b5c:	60402020 1fe3fcfc c879b1b1 edb65b5b       @`......y.[[..
10022b6c:	bed46a6a 468dcbcb d967bebe 4b723939     jj.....F..g.99rK
10022b7c:	de944a4a d4984c4c e8b05858 4a85cfcf     JJ..LL..XX.....J
10022b8c:	6bbbd0d0 2ac5efef e54faaaa 16edfbfb     ...k...*..O.....
10022b9c:	c5864343 d79a4d4d 55663333 94118585     CC..MM..33fU....
10022bac:	cf8a4545 10e9f9f9 06040202 81fe7f7f     EE..............
10022bbc:	f0a05050 44783c3c ba259f9f e34ba8a8     PP..<<xD..%...K.
10022bcc:	f3a25151 fe5da3a3 c0804040 8a058f8f     QQ....].@@......
10022bdc:	ad3f9292 bc219d9d 48703838 04f1f5f5     ..?...!.88pH....
10022bec:	df63bcbc c177b6b6 75afdada 63422121     ..c...w....u!!Bc
10022bfc:	30201010 1ae5ffff 0efdf3f3 6dbfd2d2     .. 0...........m
10022c0c:	4c81cdcd 14180c0c 35261313 2fc3ecec     ...L......&5.../
10022c1c:	e1be5f5f a2359797 cc884444 392e1717     __....5.DD.....9
10022c2c:	5793c4c4 f255a7a7 82fc7e7e 477a3d3d     ...W..U.~~..==zG
10022c3c:	acc86464 e7ba5d5d 2b321919 95e67373     dd..]]....2+ss..
10022c4c:	a0c06060 98198181 d19e4f4f 7fa3dcdc     ``......OO......
10022c5c:	66442222 7e542a2a ab3b9090 830b8888     ""Df**T~..;.....
10022c6c:	ca8c4646 29c7eeee d36bb8b8 3c281414     FF.....)..k...(<
10022c7c:	79a7dede e2bc5e5e 1d160b0b 76addbdb     ...y^^.........v
10022c8c:	3bdbe0e0 56643232 4e743a3a 1e140a0a     ...;22dV::tN....
10022c9c:	db924949 0a0c0606 6c482424 e4b85c5c     II......$$Hl\\..
10022cac:	5d9fc2c2 6ebdd3d3 ef43acac a6c46262     ...]...n..C.bb..
10022cbc:	a8399191 a4319595 37d3e4e4 8bf27979     ..9...1....7yy..
10022ccc:	32d5e7e7 438bc8c8 596e3737 b7da6d6d     ...2...C77nYmm..
10022cdc:	8c018d8d 64b1d5d5 d29c4e4e e049a9a9     .......dNN....I.
10022cec:	b4d86c6c faac5656 07f3f4f4 25cfeaea     ll..VV.........%
10022cfc:	afca6565 8ef47a7a e947aeae 18100808     ee..zz....G.....
10022d0c:	d56fbaba 88f07878 6f4a2525 725c2e2e     ..o.xx..%%Jo..\r
10022d1c:	24381c1c f157a6a6 c773b4b4 5197c6c6     ..8$..W...s....Q
10022d2c:	23cbe8e8 7ca1dddd 9ce87474 213e1f1f     ...#...|tt....>!
10022d3c:	dd964b4b dc61bdbd 860d8b8b 850f8a8a     KK....a.........
10022d4c:	90e07070 427c3e3e c471b5b5 aacc6666     pp..>>|B..q.ff..
10022d5c:	d8904848 05060303 01f7f6f6 121c0e0e     HH..............
10022d6c:	a3c26161 5f6a3535 f9ae5757 d069b9b9     aa..55j_WW....i.
10022d7c:	91178686 5899c1c1 273a1d1d b9279e9e     .......X..:'..'.
10022d8c:	38d9e1e1 13ebf8f8 b32b9898 33221111     ...8......+..."3
10022d9c:	bbd26969 70a9d9d9 89078e8e a7339494     ii.....p......3.
10022dac:	b62d9b9b 223c1e1e 92158787 20c9e9e9     ..-...<"....... 
10022dbc:	4987cece ffaa5555 78502828 7aa5dfdf     ...IUU..((Px...z
10022dcc:	8f038c8c f859a1a1 80098989 171a0d0d     ......Y.........
10022ddc:	da65bfbf 31d7e6e6 c6844242 b8d06868     ..e....1BB..hh..
10022dec:	c3824141 b0299999 775a2d2d 111e0f0f     AA....).--Zw....
10022dfc:	cb7bb0b0 fca85454 d66dbbbb 3a2c1616     ..{.TT....m...,:
10022e0c:	63a5c663 7c84f87c 7799ee77 7b8df67b     c..c|..|w..w{..{
10022e1c:	f20dfff2 6bbdd66b 6fb1de6f c55491c5     ....k..ko..o..T.
10022e2c:	30506030 01030201 67a9ce67 2b7d562b     0`P0....g..g+V}+
10022e3c:	fe19e7fe d762b5d7 abe64dab 769aec76     ......b..M..v..v
10022e4c:	ca458fca 829d1f82 c94089c9 7d87fa7d     ..E.......@.}..}
10022e5c:	fa15effa 59ebb259 47c98e47 f00bfbf0     ....Y..YG..G....
10022e6c:	adec41ad d467b3d4 a2fd5fa2 afea45af     .A....g.._...E..
10022e7c:	9cbf239c a4f753a4 7296e472 c05b9bc0     .#...S..r..r..[.
10022e8c:	b7c275b7 fd1ce1fd 93ae3d93 266a4c26     .u.......=..&Lj&
10022e9c:	365a6c36 3f417e3f f702f5f7 cc4f83cc     6lZ6?~A?......O.
10022eac:	345c6834 a5f451a5 e534d1e5 f108f9f1     4h\4.Q....4.....
10022ebc:	7193e271 d873abd8 31536231 153f2a15     q..q..s.1bS1.*?.
10022ecc:	040c0804 c75295c7 23654623 c35e9dc3     ......R.#Fe#..^.
10022edc:	18283018 96a13796 050f0a05 9ab52f9a     .0(..7......./..
10022eec:	07090e07 12362412 809b1b80 e23ddfe2     .....$6.......=.
10022efc:	eb26cdeb 27694e27 b2cd7fb2 759fea75     ..&.'Ni'....u..u
10022f0c:	091b1209 839e1d83 2c74582c 1a2e341a     ........,Xt,.4..
10022f1c:	1b2d361b 6eb2dc6e 5aeeb45a a0fb5ba0     .6-.n..nZ..Z.[..
10022f2c:	52f6a452 3b4d763b d661b7d6 b3ce7db3     R..R;vM;..a..}..
10022f3c:	297b5229 e33edde3 2f715e2f 84971384     )R{)..>./^q/....
10022f4c:	53f5a653 d168b9d1 00000000 ed2cc1ed     S..S..h.......,.
10022f5c:	20604020 fc1fe3fc b1c879b1 5bedb65b      @` .....y..[..[
10022f6c:	6abed46a cb468dcb bed967be 394b7239     j..j..F..g..9rK9
10022f7c:	4ade944a 4cd4984c 58e8b058 cf4a85cf     J..JL..LX..X..J.
10022f8c:	d06bbbd0 ef2ac5ef aae54faa fb16edfb     ..k...*..O......
10022f9c:	43c58643 4dd79a4d 33556633 85941185     C..CM..M3fU3....
10022fac:	45cf8a45 f910e9f9 02060402 7f81fe7f     E..E............
10022fbc:	50f0a050 3c44783c 9fba259f a8e34ba8     P..P<xD<.%...K..
10022fcc:	51f3a251 a3fe5da3 40c08040 8f8a058f     Q..Q.]..@..@....
10022fdc:	92ad3f92 9dbc219d 38487038 f504f1f5     .?...!..8pH8....
10022fec:	bcdf63bc b6c177b6 da75afda 21634221     .c...w....u.!Bc!
10022ffc:	10302010 ff1ae5ff f30efdf3 d26dbfd2     . 0...........m.
1002300c:	cd4c81cd 0c14180c 13352613 ec2fc3ec     ..L......&5.../.
1002301c:	5fe1be5f 97a23597 44cc8844 17392e17     _.._.5..D..D..9.
1002302c:	c45793c4 a7f255a7 7e82fc7e 3d477a3d     ..W..U..~..~=zG=
1002303c:	64acc864 5de7ba5d 192b3219 7395e673     d..d]..].2+.s..s
1002304c:	60a0c060 81981981 4fd19e4f dc7fa3dc     `..`....O..O....
1002305c:	22664422 2a7e542a 90ab3b90 88830b88     "Df"*T~*.;......
1002306c:	46ca8c46 ee29c7ee b8d36bb8 143c2814     F..F..)..k...(<.
1002307c:	de79a7de 5ee2bc5e 0b1d160b db76addb     ..y.^..^......v.
1002308c:	e03bdbe0 32566432 3a4e743a 0a1e140a     ..;.2dV2:tN:....
1002309c:	49db9249 060a0c06 246c4824 5ce4b85c     I..I....$Hl$\..\
100230ac:	c25d9fc2 d36ebdd3 acef43ac 62a6c462     ..]...n..C..b..b
100230bc:	91a83991 95a43195 e437d3e4 798bf279     .9...1....7.y..y
100230cc:	e732d5e7 c8438bc8 37596e37 6db7da6d     ..2...C.7nY7m..m
100230dc:	8d8c018d d564b1d5 4ed29c4e a9e049a9     ......d.N..N.I..
100230ec:	6cb4d86c 56faac56 f407f3f4 ea25cfea     l..lV..V......%.
100230fc:	65afca65 7a8ef47a aee947ae 08181008     e..ez..z.G......
1002310c:	bad56fba 7888f078 256f4a25 2e725c2e     .o..x..x%Jo%.\r.
1002311c:	1c24381c a6f157a6 b4c773b4 c65197c6     .8$..W...s....Q.
1002312c:	e823cbe8 dd7ca1dd 749ce874 1f213e1f     ..#...|.t..t.>!.
1002313c:	4bdd964b bddc61bd 8b860d8b 8a850f8a     K..K.a..........
1002314c:	7090e070 3e427c3e b5c471b5 66aacc66     p..p>|B>.q..f..f
1002315c:	48d89048 03050603 f601f7f6 0e121c0e     H..H............
1002316c:	61a3c261 355f6a35 57f9ae57 b9d069b9     a..a5j_5W..W.i..
1002317c:	86911786 c15899c1 1d273a1d 9eb9279e     ......X..:'..'..
1002318c:	e138d9e1 f813ebf8 98b32b98 11332211     ..8......+..."3.
1002319c:	69bbd269 d970a9d9 8e89078e 94a73394     i..i..p......3..
100231ac:	9bb62d9b 1e223c1e 87921587 e920c9e9     .-...<"....... .
100231bc:	ce4987ce 55ffaa55 28785028 df7aa5df     ..I.U..U(Px(..z.
100231cc:	8c8f038c a1f859a1 89800989 0d171a0d     .....Y..........
100231dc:	bfda65bf e631d7e6 42c68442 68b8d068     .e....1.B..Bh..h
100231ec:	41c38241 99b02999 2d775a2d 0f111e0f     A..A.)..-Zw-....
100231fc:	b0cb7bb0 54fca854 bbd66dbb 163a2c16     .{..T..T.m...,:.
1002320c:	6363a5c6 7c7c84f8 777799ee 7b7b8df6     ..cc..||..ww..{{
1002321c:	f2f20dff 6b6bbdd6 6f6fb1de c5c55491     ......kk..oo.T..
1002322c:	30305060 01010302 6767a9ce 2b2b7d56     `P00......ggV}++
1002323c:	fefe19e7 d7d762b5 ababe64d 76769aec     .....b..M.....vv
1002324c:	caca458f 82829d1f c9c94089 7d7d87fa     .E.......@....}}
1002325c:	fafa15ef 5959ebb2 4747c98e f0f00bfb     ......YY..GG....
1002326c:	adadec41 d4d467b3 a2a2fd5f afafea45     A....g.._...E...
1002327c:	9c9cbf23 a4a4f753 727296e4 c0c05b9b     #...S.....rr.[..
1002328c:	b7b7c275 fdfd1ce1 9393ae3d 26266a4c     u.......=...Lj&&
1002329c:	36365a6c 3f3f417e f7f702f5 cccc4f83     lZ66~A??.....O..
100232ac:	34345c68 a5a5f451 e5e534d1 f1f108f9     h\44Q....4......
100232bc:	717193e2 d8d873ab 31315362 15153f2a     ..qq.s..bS11*?..
100232cc:	04040c08 c7c75295 23236546 c3c35e9d     .....R..Fe##.^..
100232dc:	18182830 9696a137 05050f0a 9a9ab52f     0(..7......./...
100232ec:	0707090e 12123624 80809b1b e2e23ddf     ....$6.......=..
100232fc:	ebeb26cd 2727694e b2b2cd7f 75759fea     .&..Ni''......uu
1002330c:	09091b12 83839e1d 2c2c7458 1a1a2e34     ........Xt,,4...
1002331c:	1b1b2d36 6e6eb2dc 5a5aeeb4 a0a0fb5b     6-....nn..ZZ[...
1002332c:	5252f6a4 3b3b4d76 d6d661b7 b3b3ce7d     ..RRvM;;.a..}...
1002333c:	29297b52 e3e33edd 2f2f715e 84849713     R{)).>..^q//....
1002334c:	5353f5a6 d1d168b9 00000000 eded2cc1     ..SS.h.......,..
1002335c:	20206040 fcfc1fe3 b1b1c879 5b5bedb6     @`  ....y.....[[
1002336c:	6a6abed4 cbcb468d bebed967 39394b72     ..jj.F..g...rK99
1002337c:	4a4ade94 4c4cd498 5858e8b0 cfcf4a85     ..JJ..LL..XX.J..
1002338c:	d0d06bbb efef2ac5 aaaae54f fbfb16ed     .k...*..O.......
1002339c:	4343c586 4d4dd79a 33335566 85859411     ..CC..MMfU33....
100233ac:	4545cf8a f9f910e9 02020604 7f7f81fe     ..EE............
100233bc:	5050f0a0 3c3c4478 9f9fba25 a8a8e34b     ..PPxD<<%...K...
100233cc:	5151f3a2 a3a3fe5d 4040c080 8f8f8a05     ..QQ].....@@....
100233dc:	9292ad3f 9d9dbc21 38384870 f5f504f1     ?...!...pH88....
100233ec:	bcbcdf63 b6b6c177 dada75af 21216342     c...w....u..Bc!!
100233fc:	10103020 ffff1ae5 f3f30efd d2d26dbf      0...........m..
1002340c:	cdcd4c81 0c0c1418 13133526 ecec2fc3     .L......&5.../..
1002341c:	5f5fe1be 9797a235 4444cc88 1717392e     ..__5.....DD.9..
1002342c:	c4c45793 a7a7f255 7e7e82fc 3d3d477a     .W..U.....~~zG==
1002343c:	6464acc8 5d5de7ba 19192b32 737395e6     ..dd..]]2+....ss
1002344c:	6060a0c0 81819819 4f4fd19e dcdc7fa3     ..``......OO....
1002345c:	22226644 2a2a7e54 9090ab3b 8888830b     Df""T~**;.......
1002346c:	4646ca8c eeee29c7 b8b8d36b 14143c28     ..FF.)..k...(<..
1002347c:	dede79a7 5e5ee2bc 0b0b1d16 dbdb76ad     .y....^^.....v..
1002348c:	e0e03bdb 32325664 3a3a4e74 0a0a1e14     .;..dV22tN::....
1002349c:	4949db92 06060a0c 24246c48 5c5ce4b8     ..II....Hl$$..\\
100234ac:	c2c25d9f d3d36ebd acacef43 6262a6c4     .]...n..C.....bb
100234bc:	9191a839 9595a431 e4e437d3 79798bf2     9...1....7....yy
100234cc:	e7e732d5 c8c8438b 3737596e 6d6db7da     .2...C..nY77..mm
100234dc:	8d8d8c01 d5d564b1 4e4ed29c a9a9e049     .....d....NNI...
100234ec:	6c6cb4d8 5656faac f4f407f3 eaea25cf     ..ll..VV.....%..
100234fc:	6565afca 7a7a8ef4 aeaee947 08081810     ..ee..zzG.......
1002350c:	babad56f 787888f0 25256f4a 2e2e725c     o.....xxJo%%\r..
1002351c:	1c1c2438 a6a6f157 b4b4c773 c6c65197     8$..W...s....Q..
1002352c:	e8e823cb dddd7ca1 74749ce8 1f1f213e     .#...|....tt>!..
1002353c:	4b4bdd96 bdbddc61 8b8b860d 8a8a850f     ..KKa...........
1002354c:	707090e0 3e3e427c b5b5c471 6666aacc     ..pp|B>>q.....ff
1002355c:	4848d890 03030506 f6f601f7 0e0e121c     ..HH............
1002356c:	6161a3c2 35355f6a 5757f9ae b9b9d069     ..aaj_55..WWi...
1002357c:	86869117 c1c15899 1d1d273a 9e9eb927     .....X..:'..'...
1002358c:	e1e138d9 f8f813eb 9898b32b 11113322     .8......+..."3..
1002359c:	6969bbd2 d9d970a9 8e8e8907 9494a733     ..ii.p......3...
100235ac:	9b9bb62d 1e1e223c 87879215 e9e920c9     -...<"....... ..
100235bc:	cece4987 5555ffaa 28287850 dfdf7aa5     .I....UUPx((.z..
100235cc:	8c8c8f03 a1a1f859 89898009 0d0d171a     ....Y...........
100235dc:	bfbfda65 e6e631d7 4242c684 6868b8d0     e....1....BB..hh
100235ec:	4141c382 9999b029 2d2d775a 0f0f111e     ..AA)...Zw--....
100235fc:	b0b0cb7b 5454fca8 bbbbd66d 16163a2c     {.....TTm...,:..

1002360c <rcon>:
1002360c:	01000000 02000000 04000000 08000000     ................
1002361c:	10000000 20000000 40000000 80000000     ....... ...@....
1002362c:	1b000000 36000000 5f43584d 45535341     .......6MXC_ASSE
1002363c:	25205452 25232073 28203a64 0a297325     RT %s #%d: (%s).
1002364c:	00000000 6573552f 732f7372 6c696f70     ..../Users/spoil
1002365c:	442f7265 6d75636f 73746e65 7469472f     er/Documents/Git
1002366c:	2f627548 2d544143 66746365 3230322d     Hub/CAT-ectf-202
1002367c:	736d2f34 4c2f6b64 61726269 73656972     4/msdk/Libraries
1002368c:	616f422f 2f736472 3758414d 30303038     /Boards/MAX78000
1002369c:	4854462f 65525f52 532f4176 6372756f     /FTHR_RevA/Sourc
100236ac:	6f622f65 2e647261 00000063 4c494146     e/board.c...FAIL
100236bc:	00000000                                ....

100236c0 <num_leds>:
100236c0:	00000003                                ....

100236c4 <led_pin>:
100236c4:	40080400 00000001 00010001 40080400     ...@...........@
100236d4:	00000002 00010001 40080400 00000004     ...........@....
100236e4:	00010001                                ....

100236e8 <num_pbs>:
100236e8:	00000002                                ....

100236ec <pb_pin>:
100236ec:	40008000 00000004 00010100 40009000     ...@...........@
100236fc:	00000080 00010100 6573552f 732f7372     ......../Users/s
1002370c:	6c696f70 442f7265 6d75636f 73746e65     poiler/Documents
1002371c:	7469472f 2f627548 2d544143 66746365     /GitHub/CAT-ectf
1002372c:	3230322d 736d2f34 4c2f6b64 61726269     -2024/msdk/Libra
1002373c:	73656972 73694d2f 69724463 73726576     ries/MiscDrivers
1002374c:	44454c2f 64656c2f 0000632e 20786469     /LED/led.c..idx 
1002375c:	756e203c 656c5f6d 00007364              < num_leds..

10023768 <gpio_cfg_uart3>:
10023768:	40080400 000000c0 00000003              ...@........

10023774 <gpio_cfg_uart2>:
10023774:	40009000 00000003 00000002              ...@........

10023780 <gpio_cfg_uart1>:
10023780:	40008000 00003000 00000002              ...@.0......

1002378c <gpio_cfg_uart0>:
1002378c:	40008000 00000003 00000002              ...@........

10023798 <gpio_cfg_i2c2>:
10023798:	40008000 c0000000 00000002              ...@........

100237a4 <gpio_cfg_i2c1>:
100237a4:	40008000 00030000 00000002              ...@........

100237b0 <gpio_cfg_i2c0>:
100237b0:	40008000 00000c00 00000002              ...@........

100237bc <gpio_cfg_extclk>:
100237bc:	40008000 00000008 00000002 6573552f     ...@......../Use
100237cc:	732f7372 6c696f70 442f7265 6d75636f     rs/spoiler/Docum
100237dc:	73746e65 7469472f 2f627548 2d544143     ents/GitHub/CAT-
100237ec:	66746365 3230322d 736d2f34 4c2f6b64     ectf-2024/msdk/L
100237fc:	61726269 73656972 534d432f 2e2f5349     ibraries/CMSIS/.
1002380c:	65502f2e 68706972 76697244 2f737265     ./PeriphDrivers/
1002381c:	72756f53 472f6563 2f4f4950 6f697067     Source/GPIO/gpio
1002382c:	6d6f635f 2e6e6f6d 00000063 74726f70     _common.c...port
1002383c:	4d203c20 435f4358 475f4746 5f4f4950      < MXC_CFG_GPIO_
1002384c:	54534e49 45434e41 00000053              INSTANCES...

10023858 <CSWTCH.16>:
10023858:	40009000 40080400 40080600 00464e49     ...@...@...@INF.
10023868:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
10023878:	37363534 42413938 46454443 00000000     456789ABCDEF....
10023888:	6c756e28 0000296c 00000030              (null)..0...

10023894 <zeroes.0>:
10023894:	30303030 30303030 30303030 30303030     0000000000000000

100238a4 <blanks.1>:
100238a4:	20202020 20202020 20202020 20202020                     

100238b4 <zeroes.0>:
100238b4:	30303030 30303030 30303030 30303030     0000000000000000

100238c4 <blanks.1>:
100238c4:	20202020 20202020 20202020 20202020                     
100238d4:	435f434c 414c4c4f 00004554 435f434c     LC_COLLATE..LC_C
100238e4:	45505954 00000000 4d5f434c 54454e4f     TYPE....LC_MONET
100238f4:	00595241 4e5f434c 52454d55 00004349     ARY.LC_NUMERIC..
10023904:	545f434c 00454d49 4d5f434c 41535345     LC_TIME.LC_MESSA
10023914:	00534547                                GES.

10023918 <_ctype_>:
10023918:	20202000 20202020 28282020 20282828     .         ((((( 
10023928:	20202020 20202020 20202020 20202020                     
10023938:	10108820 10101010 10101010 10101010      ...............
10023948:	04040410 04040404 10040404 10101010     ................
10023958:	41411010 41414141 01010101 01010101     ..AAAAAA........
10023968:	01010101 01010101 01010101 10101010     ................
10023978:	42421010 42424242 02020202 02020202     ..BBBBBB........
10023988:	02020202 02020202 02020202 10101010     ................
10023998:	00000020 00000000 00000000 00000000      ...............
	...
10023a1c:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
10023a2c:	6c6c6142 7320636f 65636375 64656465     Balloc succeeded
10023a3c:	00000000 6c6f562f 73656d75 7461642f     ..../Volumes/dat
10023a4c:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
10023a5c:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
10023a6c:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
10023a7c:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
10023a8c:	696c2f62 732f6362 696c6474 74642f62     b/libc/stdlib/dt
10023a9c:	632e616f 00000000                       oa.c....

10023aa4 <zeroes.0>:
10023aa4:	30303030 30303030 30303030 30303030     0000000000000000

10023ab4 <blanks.1>:
10023ab4:	20202020 20202020 20202020 20202020                     
10023ac4:	646c2565 00000000                       e%ld....

10023acc <basefix.0>:
10023acc:	0001000a 00030002 00050004 00070006     ................
10023adc:	00090008 000b000a 000d000c 000f000e     ................
10023aec:	00000010 6c6f562f 73656d75 7461642f     ..../Volumes/dat
10023afc:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
10023b0c:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
10023b1c:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
10023b2c:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
10023b3c:	696c2f62 732f6362 696c6474 706d2f62     b/libc/stdlib/mp
10023b4c:	2e636572 00000063                       rec.c...

10023b54 <p05.0>:
10023b54:	00000005 00000019 0000007d              ........}...

10023b60 <__mprec_bigtens>:
10023b60:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
10023b70:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
10023b80:	7f73bf3c 75154fdd                       <.s..O.u

10023b88 <__mprec_tens>:
10023b88:	00000000 3ff00000 00000000 40240000     .......?......$@
10023b98:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
10023ba8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
10023bb8:	00000000 412e8480 00000000 416312d0     .......A......cA
10023bc8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
10023bd8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
10023be8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
10023bf8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
10023c08:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
10023c18:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
10023c28:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
10023c38:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
10023c48:	79d99db4 44ea7843 0000666e 74696e69     ...yCx.Dnf..init
10023c58:	00000079 00006e61                       y...an..

10023c60 <fpinan.0>:
10023c60:	00000034 fffffbce 000003cb 00000001     4...............
10023c70:	00000000                                ....

10023c74 <fpi.1>:
10023c74:	00000035 fffffbce 000003cb 00000001     5...............
10023c84:	00000000                                ....

10023c88 <tinytens>:
10023c88:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
10023c98:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
10023ca8:	64ac6f43 11680628 7566202c 6974636e     Co.d(.h., functi
10023cb8:	203a6e6f 00000000 65737361 6f697472     on: ....assertio
10023cc8:	2522206e 66202273 656c6961 66203a64     n "%s" failed: f
10023cd8:	20656c69 22732522 696c202c 2520656e     ile "%s", line %
10023ce8:	25732564 00000a73 0053494a 53494a53     d%s%s...JIS.SJIS
10023cf8:	00000000 4a435545 00000050              ....EUCJP...

10023d04 <d02f4>:
10023d04:	4e105f0c 4e2a4e15 4e364e31 4e3f4e3c     ._.N.N*N1N6N<N?N
10023d14:	4e564e42 4e824e58 8c6b4e85 82124e8a     BNVNXN.N.Nk..N..
10023d24:	4e8e5f0d 4e9f4e9e 4ea24ea0 4eb34eb0     ._.N.N.N.N.N.N.N
10023d34:	4ece4eb6 4ec44ecd 4ec24ec6 4ede4ed7     .N.N.N.N.N.N.N.N
10023d44:	4edf4eed 4f094ef7 4f304f5a 4f5d4f5b     .N.N.N.OZO0O[O]O
10023d54:	4f474f57 4f884f76 4f984f8f 4f694f7b     WOGOvO.O.O.O{OiO
10023d64:	4f914f70 4f864f6f 51184f96 4fdf4fd4     pO.OoO.O.O.Q.O.O
10023d74:	4fd84fce 4fd14fdb 4fd04fda 4fe54fe4     .O.O.O.O.O.O.O.O
10023d84:	5028501a 502a5014 50055025 4ff64f1c     .P(P.P*P%P.P.O.O
10023d94:	50295021 4ffe502c 50114fef 50435006     !P)P,P.O.O.P.PCP
10023da4:	67035047 50505055 505a5048 506c5056     GP.gUPPPHPZPVPlP
10023db4:	50805078 5085509a 50b250b4 50ca50c9     xP.P.P.P.P.P.P.P
10023dc4:	50c250b3 50de50d6 50ed50e5 50ee50e3     .P.P.P.P.P.P.P.P
10023dd4:	50f550f9 51015109 51165102 51145115     .P.P.Q.Q.Q.Q.Q.Q
10023de4:	5121511a 5137513a 513b513c 5140513f     .Q!Q:Q7Q<Q;Q?Q@Q
10023df4:	514c5152 51625154 51697af8 516e516a     RQLQTQbQ.ziQjQnQ
10023e04:	51825180 518c56d8 518f5189 51935191     .Q.Q.V.Q.Q.Q.Q.Q
10023e14:	51965195 51a651a4 51a951a2 51ab51aa     .Q.Q.Q.Q.Q.Q.Q.Q
10023e24:	51b151b3 51b051b2 51bd51b5 51c951c5     .Q.Q.Q.Q.Q.Q.Q.Q
10023e34:	51e051db 51e98655 51f051ed 51fe51f5     .Q.QU..Q.Q.Q.Q.Q
10023e44:	520b5204 520e5214 522a5227 5233522e     .R.R.R.R'R*R.R3R
10023e54:	524f5239 524b5244 525e524c 526a5254     9RORDRKRLR^RTRjR
10023e64:	52695274 527f5273 528d527d 52925294     tRiRsR.R}R.R.R.R
10023e74:	52885271 8fa85291 52ac8fa7 52bc52ad     qR.R.R.....R.R.R
10023e84:	52c152b5 52d752cd 52e352de 98ed52e6     .R.R.R.R.R.R.R..
10023e94:	52f352e0 52f852f5 530652f9 75385308     .R.R.R.R.R.S.S8u
10023ea4:	5310530d 5315530f 5323531a 5331532f     .S.S.S.S.S#S/S1S
10023eb4:	53385333 53465340 4e175345 534d5349     3S8S@SFSES.NISMS
10023ec4:	535e51d6 536e5369 537b5918 53825377     .Q^SiSnS.Y{SwS.S
10023ed4:	53a05396 53a553a6 53b053ae 53c353b6     .S.S.S.S.S.S.S.S
10023ee4:	96d97c12 66fc53df 53ee71ee 53ed53e8     .|...S.f.q.S.S.S
10023ef4:	540153fa 5440543d 542d542c 542e543c     .S.T=T@T,T-T<T.T
10023f04:	54295436 544e541d 5475548f 545f548e     6T)T.TNT.TuT.T_T
10023f14:	54775471 54925470 5480547b 54845476     qTwTpT.T{T.TvT.T
10023f24:	54865490 54a254c7 54a554b8 54c454ac     .T.T.T.T.T.T.T.T
10023f34:	54a854c8 54c254ab 54be54a4 54d854bc     .T.T.T.T.T.T.T.T
10023f44:	54e654e5 5514550f 54ee54fd 54fa54ed     .T.T.U.U.T.T.T.T
10023f54:	553954e2 55635540 552e554c 5545555c     .T9U@UcULU.U\UEU
10023f64:	55575556 55335538 5599555d 54af5580     VUWU8U3U]U.U.U.T
10023f74:	559f558a 557e557b 559e5598 557c55ae     .U.U{U~U.U.U.U|U
10023f84:	55a95583 55a85587 55c555da 55c455df     .U.U.U.U.U.U.U.U
10023f94:	55e455dc 561455d4 561655f7 55fd55fe     .U.U.U.V.U.V.U.U
10023fa4:	55f9561b 5650564e 563471df 56325636     .V.UNVPV.q4V6V2V
10023fb4:	566b5638 562f5664 566a566c 56805686     8VkVdV/VlVjV.V.V
10023fc4:	56a0568a 568f5694 56ae56a5 56b456b6     .V.V.V.V.V.V.V.V
10023fd4:	56bc56c2 56c356c1 56c856c0 56d156ce     .V.V.V.V.V.V.V.V
10023fe4:	56d756d3 56f956ee 56ff5700 57095704     .V.V.V.V.W.V.W.W
10023ff4:	570b5708 5713570d 57165718 571c55c7     .W.W.W.W.W.W.U.W
10024004:	57375726 574e5738 5740573b 5769574f     &W7W8WNW;W@WOWiW
10024014:	578857c0 577f5761 57935789 57b357a0     .W.WaW.W.W.W.W.W
10024024:	57aa57a4 57c357b0 57d457c6 57d357d2     .W.W.W.W.W.W.W.W
10024034:	57d6580a 580b57e3 581d5819 58215872     .X.W.W.X.X.XrX!X
10024044:	584b5862 6bc05870 583d5852 58855879     bXKXpX.kRX=XyX.X
10024054:	589f58b9 58ba58ab 58bb58de 58ae58b8     .X.X.X.X.X.X.X.X
10024064:	58d358c5 58d758d1 58d858d9 58dc58e5     .X.X.X.X.X.X.X.X
10024074:	58df58e4 58fa58ef 58fb58f9 58fd58fc     .X.X.X.X.X.X.X.X
10024084:	590a5902 591b5910 592568a6 592d592c     .Y.Y.Y.Y.h%Y,Y-Y
10024094:	59385932 7ad2593e 59505955 595a594e     2Y8Y>Y.zUYPYNYZY
100240a4:	59625958 59675960 5969596c 59815978     XYbY`YgYlYiYxY.Y
100240b4:	4f5e599d 59a34fab 59c659b2 59dc59e8     .Y^O.O.Y.Y.Y.Y.Y
100240c4:	59d9598d 5a2559da 5a115a1f 5a095a1c     .Y.Y.Y%Z.Z.Z.Z.Z
100240d4:	5a405a1a 5a495a6c 5a365a35 5a6a5a62     .Z@ZlZIZ5Z6ZbZjZ
100240e4:	5abc5a9a 5acb5abe 5abd5ac2 5ad75ae3     .Z.Z.Z.Z.Z.Z.Z.Z
100240f4:	5ae95ae6 5afa5ad6 5b0c5afb 5b165b0b     .Z.Z.Z.Z.Z.[.[.[
10024104:	5ad05b32 5b365b2a 5b435b3e 5b405b45     2[.Z*[6[>[C[E[@[
10024114:	5b555b51 5b5b5b5a 5b695b65 5b735b70     Q[U[Z[[[e[i[p[s[
10024124:	5b785b75 5b7a6588 5b835b80 5bb85ba6     u[x[.ez[.[.[.[.[
10024134:	5bc75bc3 5bd45bc9 5be45bd0 5be25be6     .[.[.[.[.[.[.[.[
10024144:	5be55bde 5bf05beb 5bf35bf6 5c075c05     .[.[.[.[.[.[.\.\
10024154:	5c0d5c08 5c205c13 5c285c22 5c395c38     .\.\.\ \"\(\8\9\
10024164:	5c465c41 5c535c4e 5c4f5c50 5c6c5b71     A\F\N\S\P\O\q[l\
10024174:	4e625c6e 5c795c76 5c915c8c 599b5c94     n\bNv\y\.\.\.\.Y
10024184:	5cbb5cab 5cbc5cb6 5cc55cb7 5cc75cbe     .\.\.\.\.\.\.\.\
10024194:	5ce95cd9 5cfa5cfd 5d8c5ced 5d0b5cea     .\.\.\.\.\.].\.]
100241a4:	5d175d15 5d1f5d5c 5d115d1b 5d225d14     .].]\].].].].]"]
100241b4:	5d195d1a 5d4c5d18 5d4e5d52 5d6c5d4b     .].].]L]R]N]K]l]
100241c4:	5d765d73 5d845d87 5da25d82 5dac5d9d     s]v].].].].].].]
100241d4:	5dbd5dae 5db75d90 5dc95dbc 5dd35dcd     .].].].].].].].]
100241e4:	5dd65dd2 5deb5ddb 5df55df2 5e1a5e0b     .].].].].].].^.^
100241f4:	5e115e19 5e365e1b 5e445e37 5e405e43     .^.^.^6^7^D^C^@^
10024204:	5e575e4e 5e5f5e54 5e645e62 5e755e47     N^W^T^_^b^d^G^u^
10024214:	5e7a5e76 5e7f9ebc 5ec15ea0 5ec85ec2     v^z^...^.^.^.^.^
10024224:	5ecf5ed0 5ee35ed6 5eda5edd 5ee25edb     .^.^.^.^.^.^.^.^
10024234:	5ee85ee1 5eec5ee9 5ef35ef1 5ef45ef0     .^.^.^.^.^.^.^.^
10024244:	5efe5ef8 5f095f03 5f5c5f5d 5f115f0b     .^.^._._]_\_._._
10024254:	5f295f16 5f385f2d 5f485f41 5f4e5f4c     ._)_-_8_A_H_L_N_
10024264:	5f515f2f 5f575f56 5f615f59 5f735f6d     /_Q_V_W_Y_a_m_s_
10024274:	5f835f77 5f7f5f82 5f885f8a 5f875f91     w_._._._._._._._
10024284:	5f995f9e 5fa05f98 5fad5fa8 5fd65fbc     ._._._._._._._._
10024294:	5fe45ffb 5ff15ff8 60b35fdd 60215fff     ._._._._._.`._!`
100242a4:	60196060 60296010 6031600e 6015601b     ``.`.`)`.`1`.`.`
100242b4:	6026602b 603a600f 6041605a 6077606a     +`&`.`:`Z`A`j`w`
100242c4:	604a605f 604d6046 60436063 60426064     _`J`F`M`c`C`d`B`
100242d4:	606b606c 60816059 60e7608d 609a6083     l`k`Y`.`.`.`.`.`
100242e4:	609b6084 60976096 60a76092 60e1608b     .`.`.`.`.`.`.`.`
100242f4:	60e060b8 60b460d3 60bd5ff0 60b560c6     .`.`.`.`._.`.`.`
10024304:	614d60d8 61066115 60f760f6 60f46100     .`Ma.a.a.`.`.a.`
10024314:	610360fa 60fb6121 610d60f1 6147610e     .`.a!a.`.`.a.aGa
10024324:	6128613e 614a6127 613c613f 6134612c     >a(a'aJa?a<a,a4a
10024334:	6142613d 61736144 61586177 615a6159     =aBaDasawaXaYaZa
10024344:	6174616b 6165616f 615f6171 6153615d     kataoaeaqa_a]aSa
10024354:	61996175 61876196 619461ac 618a619a     ua.a.a.a.a.a.a.a
10024364:	61ab6191 61cc61ae 61c961ca 61c861f7     .a.a.a.a.a.a.a.a
10024374:	61c661c3 61cb61ba 61cd7f79 61e361e6     .a.a.a.ay..a.a.a
10024384:	61fa61f6 61ff61f4 61fc61fd 620061fe     .a.a.a.a.a.a.a.b
10024394:	62096208 620c620d 621b6214 6221621e     .b.b.b.b.b.b.b!b
100243a4:	622e622a 62326230 62416233 625e624e     *b.b0b2b3bAbNb^b
100243b4:	625b6263 62686260 6282627c 627e6289     cb[b`bhb|b.b.b~b
100243c4:	62936292 62d46296 62946283 62d162d7     .b.b.b.b.b.b.b.b
100243d4:	62cf62bb 62c662ff 62c864d4 62cc62dc     .b.b.b.b.d.b.b.b
100243e4:	62c262ca 629b62c7 630c62c9 62f162ee     .b.b.b.b.b.c.b.b
100243f4:	63026327 62ef6308 635062f5 634d633e     'c.c.c.b.bPc>cMc
10024404:	634f641c 638e6396 63ab6380 63a36376     .dOc.c.c.c.cvc.c
10024414:	6389638f 63b5639f 6369636b 63e963be     .c.c.c.ckcic.c.c
10024424:	63c663c0 63c963e3 63f663d2 641663c4     .c.c.c.c.c.c.c.d
10024434:	64066434 64266413 651d6436 64286417     4d.d.d&d6d.e.d(d
10024444:	6467640f 6476646f 652a644e 64936495     .dgdodvdNd*e.d.d
10024454:	64a964a5 64bc6488 64d264da 64c764c5     .d.d.d.d.d.d.d.d
10024464:	64d864bb 64f164c2 820964e7 64e164e0     .d.d.d.d.d...d.d
10024474:	64e362ac 652c64ef 64f464f6 64fa64f2     .b.d.d,e.d.d.d.d
10024484:	64fd6500 651c6518 65246505 652b6523     .e.d.e.e.e$e#e+e
10024494:	65356534 65366537 754b6538 65566548     4e5e7e6e8eKuHeVe
100244a4:	654d6555 655e6558 6572655d 65826578     UeMeXe^e]erexe.e
100244b4:	8b8a6583 659f659b 65b765ab 65c665c3     .e...e.e.e.e.e.e
100244c4:	65c465c1 65d265cc 65d965db 65e165e0     .e.e.e.e.e.e.e.e
100244d4:	677265f1 6603660a 677365fb 66366635     .erg.f.f.esg5f6f
100244e4:	661c6634 6644664f 66416649 665d665e     4f.fOfDfIfAf^f]f
100244f4:	66676664 665f6668 66706662 66886683     dfgfhf_fbfpf.f.f
10024504:	6689668e 66986684 66c1669d 66c966b9     .f.f.f.f.f.f.f.f
10024514:	66bc66be 66b866c4 66da66d6 663f66e0     .f.f.f.f.f.f.f?f
10024524:	66e966e6 66f566f0 670f66f7 671e6716     .f.f.f.f.f.g.g.g
10024534:	67276726 672e9738 6736673f 67386741     &g'g8..g?g6gAg8g
10024544:	67466737 6760675e 67636759 67896764     7gFg^g`gYgcgdg.g
10024554:	67a96770 676a677c 678b678c 67a167a6     pg.g|gjg.g.g.g.g
10024564:	67b76785 67b467ef 67b367ec 67b867e9     .g.g.g.g.g.g.g.g
10024574:	67de67e4 67e267dd 67b967ee 67c667ce     .g.g.g.g.g.g.g.g
10024584:	6a9c67e7 6846681e 68406829 6832684d     .g.j.hFh)h@hMh2h
10024594:	68b3684e 6859682b 68776863 689f687f     Nh.h+hYhchwh.h.h
100245a4:	68ad688f 689d6894 6883689b 68b96aae     .h.h.h.h.h.h.j.h
100245b4:	68b56874 68ba68a0 688d690f 6901687e     th.h.h.h.i.h~h.i
100245c4:	690868ca 692268d8 68e16926 68cd690c     .h.i.h"i&i.h.i.h
100245d4:	68e768d4 693668d5 69046912 68e368d7     .h.h.h6i.i.i.h.h
100245e4:	68f96925 68ef68e0 692a6928 6923691a     %i.h.h.h(i*i.i#i
100245f4:	68c66921 69776979 6978695c 6954696b     !i.hyiwi\ixikiTi
10024604:	696e697e 69746939 6959693d 69616930     ~ini9iti=iYi0iai
10024614:	695d695e 696a6981 69ae69b2 69bf69d0     ^i]i.iji.i.i.i.i
10024624:	69d369c1 69ce69be 69ca5be8 69bb69dd     .i.i.i.i.[.i.i.i
10024634:	69a769c3 69916a2e 699c69a0 69b46995     .i.i.j.i.i.i.i.i
10024644:	69e869de 6a1b6a02 6b0a69ff 69f269f9     .i.i.j.j.i.k.i.i
10024654:	6a0569e7 6a1e69b1 6a1469ed 6a0a69eb     .i.j.i.j.i.j.i.j
10024664:	6ac16a12 6a136a23 6a0c6a44 6a366a72     .j.j#j.jDj.jrj6j
10024674:	6a476a78 6a596a62 6a486a66 6a226a38     xjGjbjYjfjHj8j"j
10024684:	6a8d6a90 6a846aa0 6aa36aa2 86176a97     .j.j.j.j.j.j.j..
10024694:	6ac36abb 6ab86ac2 6aac6ab3 6ad16ade     .j.j.j.j.j.j.j.j
100246a4:	6aaa6adf 6aea6ada 6b056afb 6afa8616     .j.j.j.j.j.k...j
100246b4:	6b166b12 6b1f9b31 6b376b38 6b3976dc     .k.k1..k8k7k.v9k
100246c4:	6b4798ee 6b496b43 6b596b50 6b5b6b54     ..GkCkIkPkYkTk[k
100246d4:	6b616b5f 6b796b78 6b806b7f 6b836b84     _kakxkyk.k.k.k.k
100246e4:	6b986b8d 6b9e6b95 6baa6ba4 6baf6bab     .k.k.k.k.k.k.k.k
100246f4:	6bb16bb2 6bb76bb3 6bc66bbc 6bd36bcb     .k.k.k.k.k.k.k.k
10024704:	6bec6bdf 6bf36beb 9ebe6bef 6c136c08     .k.k.k.k.k...l.l
10024714:	6c1b6c14 6c236c24 6c556c5e 6c6a6c62     .l.l$l#l^lUlbljl
10024724:	6c8d6c82 6c816c9a 6c7e6c9b 6c736c68     .l.l.l.l.l~lhlsl
10024734:	6c906c92 6cf16cc4 6cbd6cd3 6cc56cd7     .l.l.l.l.l.l.l.l
10024744:	6cae6cdd 6cbe6cb1 6cdb6cba 6cd96cef     .l.l.l.l.l.l.l.l
10024754:	6d1f6cea 6d36884d 6d3d6d2b 6d196d38     .l.mM.6m+m=m8m.m
10024764:	6d336d35 6d0c6d12 6d936d63 6d5a6d64     5m3m.m.mcm.mdmZm
10024774:	6d596d79 6d956d8e 6d856fe4 6e156df9     ymYm.m.m.o.m.m.n
10024784:	6db56e0a 6de66dc7 6dc66db8 6dde6dec     .n.m.m.m.m.m.m.m
10024794:	6de86dcc 6dc56dd2 6dd96dfa 6dd56de4     .m.m.m.m.m.m.m.m
100247a4:	6dee6dea 6e6e6e2d 6e196e2e 6e5f6e72     .m.m-nnn.n.nrn_n
100247b4:	6e236e3e 6e2b6e6b 6e4d6e76 6e436e1f     >n#nkn+nvnMn.nCn
100247c4:	6e4e6e3a 6eff6e24 6e386e1d 6eaa6e82     :nNn$n.n.n8n.n.n
100247d4:	6ec96e98 6ed36eb7 6eaf6ebd 6eb26ec4     .n.n.n.n.n.n.n.n
100247e4:	6ed56ed4 6ea56e8f 6e9f6ec2 6f116f41     .n.n.n.n.n.nAo.o
100247f4:	6eec704c 6efe6ef8 6ef26f3f 6eef6f31     Lp.n.n.n?o.n1o.n
10024804:	6ecc6f32 6f136f3e 6f866ef7 6f786f7a     2o.n>o.o.n.ozoxo
10024814:	6f806f81 6f5b6f6f 6f6d6ff3 6f7c6f82     .o.ooo[o.omo.o|o
10024824:	6f8e6f58 6fc26f91 6fb36f66 6fa16fa3     Xo.o.o.ofo.o.o.o
10024834:	6fb96fa4 6faa6fc6 6fd56fdf 6fd46fec     .o.o.o.o.o.o.o.o
10024844:	6ff16fd8 6fdb6fee 700b7009 70116ffa     .o.o.o.o.p.p.o.p
10024854:	700f7001 701b6ffe 6f74701a 7018701d     .p.p.o.p.pto.p.p
10024864:	7030701f 7032703e 70637051 70927099     .p0p>p2pQpcp.p.p
10024874:	70f170af 70b870ac 70ae70b3 70cb70df     .p.p.p.p.p.p.p.p
10024884:	70d970dd 70fd7109 7119711c 71557165     .p.p.q.p.q.qeqUq
10024894:	71667188 714c7162 716c7156 71fb718f     .qfqbqLqVqlq.q.q
100248a4:	71957184 71ac71a8 71b971d7 71d271be     .q.q.q.q.q.q.q.q
100248b4:	71d471c9 71e071ce 71e771ec 71fc71f5     .q.q.q.q.q.q.q.q
100248c4:	71ff71f9 7210720d 7228721b 722c722d     .q.q.r.r.r(r-r,r
100248d4:	72327230 723c723b 7240723f 724b7246     0r2r;r<r?r@rFrKr
100248e4:	72747258 7282727e 72877281 72967292     Xrtr~r.r.r.r.r.r
100248f4:	72a772a2 72b272b9 72c672c3 72ce72c4     .r.r.r.r.r.r.r.r
10024904:	72e272d2 72e172e0 72f772f9 7317500f     .r.r.r.r.r.r.P.s
10024914:	731c730a 731d7316 732f7334 73257329     .s.s.s.s4s/s)s%s
10024924:	734e733e 9ed8734f 736a7357 73707368     >sNsOs..Wsjshsps
10024934:	73757378 737a737b 73b373c8 73bb73ce     xsus{szs.s.s.s.s
10024944:	73e573c0 73de73ee 740574a2 7425746f     .s.s.s.s.t.tot%t
10024954:	743273f8 7455743a 745f743f 74417459     .s2t:tUt?t_tYtAt
10024964:	7469745c 74637470 7476746a 748b747e     \titptctjtvt~t.t
10024974:	74a7749e 74cf74ca 73f174d4 74e374e0     .t.t.t.t.t.s.t.t
10024984:	74e974e7 74f274ee 74f174f0 74f774f8     .t.t.t.t.t.t.t.t
10024994:	75037504 750c7505 750d750e 75137515     .u.u.u.u.u.u.u.u
100249a4:	7526751e 753c752c 754d7544 7549754a     .u&u,u<uDuMuJuIu
100249b4:	7546755b 7569755a 75677564 756d756b     [uFuZuiudugukumu
100249c4:	75767578 75877586 758a7574 75827589     xuvu.u.utu.u.u.u
100249d4:	759a7594 75a5759d 75c275a3 75c375b3     .u.u.u.u.u.u.u.u
100249e4:	75bd75b5 75bc75b8 75cd75b1 75d275ca     .u.u.u.u.u.u.u.u
100249f4:	75e375d9 75fe75de 75fc75ff 75f07601     .u.u.u.u.u.u.v.u
10024a04:	75f275fa 760b75f3 7609760d 7627761f     .u.u.u.v.v.v.v'v
10024a14:	76217620 76247622 76307634 7647763b      v!v"v$v4v0v;vGv
10024a24:	76467648 7658765c 76627661 76697668     HvFv\vXvavbvhviv
10024a34:	7667766a 7670766c 76767672 767c7678     jvgvlvpvrvvvxv|v
10024a44:	76837680 768b7688 7696768e 76997693     .v.v.v.v.v.v.v.v
10024a54:	76b0769a 76b876b4 76ba76b9 76cd76c2     .v.v.v.v.v.v.v.v
10024a64:	76d276d6 76e176de 76e776e5 862f76ea     .v.v.v.v.v.v.v/.
10024a74:	770876fb 77047707 77247729 7725771e     .v.w.w.w)w$w.w%w
10024a84:	771b7726 77387737 775a7747 776b7768     &w.w7w8wGwZwhwkw
10024a94:	7765775b 777e777f 778e7779 7791778b     [wew.w~wyw.w.w.w
10024aa4:	779e77a0 77b677b0 77bf77b9 77bd77bc     .w.w.w.w.w.w.w.w
10024ab4:	77c777bb 77d777cd 77dc77da 77ee77e3     .w.w.w.w.w.w.w.w
10024ac4:	780c77fc 79267812 792a7820 788e7845     .w.x.x&y x*yEx.x
10024ad4:	78867874 789a787c 78a3788c 78aa78b5     tx.x|x.x.x.x.x.x
10024ae4:	78d178af 78cb78c6 78be78d4 78c578bc     .x.x.x.x.x.x.x.x
10024af4:	78ec78ca 78da78e7 78f478fd 79127907     .x.x.x.x.x.x.y.y
10024b04:	79197911 792b792c 79607940 795f7957     .y.y,y+y@y`yWy_y
10024b14:	7955795a 797a7953 798a797f 79a7799d     ZyUySyzy.y.y.y.y
10024b24:	79aa9f4b 79b379ae 79ba79b9 79d579c9     K..y.y.y.y.y.y.y
10024b34:	79ec79e7 79e379e1 7a0d7a08 7a197a18     .y.y.y.y.z.z.z.z
10024b44:	7a1f7a20 7a317980 7a3e7a3b 7a437a37      z.z.y1z;z>z7zCz
10024b54:	7a497a57 7a627a61 9f9d7a69 7a797a70     WzIzazbziz..pzyz
10024b64:	7a887a7d 7a957a97 7a967a98 7ac87aa9     }z.z.z.z.z.z.z.z
10024b74:	7ab67ab0 7ac47ac5 90837abf 7aca7ac7     .z.z.z.z.z...z.z
10024b84:	7acf7acd 7ad37ad5 7ada7ad9 7ae17add     .z.z.z.z.z.z.z.z
10024b94:	7ae67ae2 7af07aed 7b0f7b02 7b067b0a     .z.z.z.z.{.{.{.{
10024ba4:	7b187b33 7b1e7b19 7b287b35 7b507b36     3{.{.{.{5{({6{P{
10024bb4:	7b047b7a 7b0b7b4d 7b457b4c 7b657b75     z{.{M{.{L{E{u{e{
10024bc4:	7b677b74 7b717b70 7b6e7b6c 7b987b9d     t{g{p{q{l{n{.{.{
10024bd4:	7b8d7b9f 7b9a7b9c 7b927b8b 7b5d7b8f     .{.{.{.{.{.{.{]{
10024be4:	7bcb7b99 7bcc7bc1 7bb47bcf 7bdd7bc6     .{.{.{.{.{.{.{.{
10024bf4:	7c117be9 7be67c14 7c607be5 7c077c00     .{.|.|.{.{`|.|.|
10024c04:	7bf37c13 7c177bf7 7bf67c0d 7c277c23     .|.{.{.|.|.{#|'|
10024c14:	7c1f7c2a 7c2b7c37 7c4c7c3d 7c547c43     *|.|7|+|=|L|C|T|
10024c24:	7c407c4f 7c587c50 7c647c5f 7c657c56     O|@|P|X|_|d|V|e|
10024c34:	7c757c6c 7c907c83 7cad7ca4 7cab7ca2     l|u|.|.|.|.|.|.|
10024c44:	7ca87ca1 7cb27cb3 7cae7cb1 7cbd7cb9     .|.|.|.|.|.|.|.|
10024c54:	7cc57cc0 7cd87cc2 7cdc7cd2 9b3b7ce2     .|.|.|.|.|.|.|;.
10024c64:	7cf27cef 7cf67cf4 7d067cfa 7d1c7d02     .|.|.|.|.|.}.}.}
10024c74:	7d0a7d15 7d4b7d45 7d327d2e 7d357d3f     .}.}E}K}.}2}?}5}
10024c84:	7d737d46 7d4e7d56 7d687d72 7d4f7d6e     F}s}V}N}r}h}n}O}
10024c94:	7d937d63 7d5b7d89 7d7d7d8f 7dba7d9b     c}.}.}[}.}}}.}.}
10024ca4:	7da37dae 7dc77db5 7dab7dbd 7da27e3d     .}.}.}.}.}.}=~.}
10024cb4:	7ddc7daf 7d9f7db8 7dd87db0 7de47ddd     .}.}.}.}.}.}.}.}
10024cc4:	7dfb7dde 7de17df2 7e0a7e05 7e217e23     .}.}.}.}.~.~#~!~
10024cd4:	7e317e12 7e097e1f 7e227e0b 7e667e46     .~1~.~.~.~"~F~f~
10024ce4:	7e357e3b 7e437e39 7e327e37 7e677e3a     ;~5~9~C~7~2~:~g~
10024cf4:	7e567e5d 7e597e5e 7e797e5a 7e697e6a     ]~V~^~Y~Z~y~j~i~
10024d04:	7e7b7e7c 7dd57e83 8fae7e7d 7e887e7f     |~{~.~.}}~...~.~
10024d14:	7e8c7e89 7e907e92 7e947e93 7e8e7e96     .~.~.~.~.~.~.~.~
10024d24:	7e9c7e9b 7f3a7f38 7f4c7f45 7f4e7f4d     .~.~8.:.E.L.M.N.
10024d34:	7f517f50 7f547f55 7f5f7f58 7f687f60     P.Q.U.T.X._.`.h.
10024d44:	7f677f69 7f827f78 7f837f86 7f877f88     i.g.x...........
10024d54:	7f947f8c 7f9d7f9e 7fa37f9a 7fb27faf     ................
10024d64:	7fae7fb9 7fb87fb6 7fc58b71 7fca7fc6     ........q.......
10024d74:	7fd47fd5 7fe67fe1 7ff37fe9 98dc7ff9     ................
10024d84:	80048006 8012800b 80198018 8021801c     ..............!.
10024d94:	803f8028 804a803b 80528046 805a8058     (.?.;.J.F.R.X.Z.
10024da4:	8062805f 80738068 80708072 80798076     _.b.h.s.r.p.v.y.
10024db4:	807f807d 80868084 809b8085 809a8093     }...............
10024dc4:	519080ad 80db80ac 80d980e5 80c480dd     ...Q............
10024dd4:	80d680da 80ef8109 811b80f1 81238129     ............).#.
10024de4:	814b812f 8146968b 8153813e 80fc8151     /.K...F.>.S.Q...
10024df4:	816e8171 81668165 81838174 818a8188     q.n.e.f.t.......
10024e04:	81828180 819581a0 81a381a4 8193815f     ............_...
10024e14:	81b081a9 81be81b5 81bd81b8 81c281c0     ................
10024e24:	81c981ba 81d181cd 81d881d9 81da81c8     ................
10024e34:	81e081df 81fa81e7 81fe81fb 82028201     ................
10024e44:	82078205 820d820a 82168210 822b8229     ............).+.
10024e54:	82338238 82598240 825d8258 825f825a     8.3.@.Y.X.].Z._.
10024e64:	82628264 826a8268 822e826b 82778271     d.b.h.j.k...q.w.
10024e74:	827e8278 8292828d 829f82ab 82ac82bb     x.~.............
10024e84:	82e382e1 82d282df 82f382f4 839382fa     ................
10024e94:	82fb8303 82de82f9 82dc8306 82d98309     ................
10024ea4:	83348335 83328316 83408331 83508339     5.4...2.1.@.9.P.
10024eb4:	832f8345 8317832b 83858318 83aa839a     E./.+...........
10024ec4:	83a2839f 83238396 8387838e 837c838a     ......#.......|.
10024ed4:	837383b5 83a08375 83a88389 841383f4     ..s.u...........
10024ee4:	83ce83eb 840383fd 840b83d8 83f783c1     ................
10024ef4:	83e08407 840d83f2 84208422 843883bd     ........". ...8.
10024f04:	83fb8506 842a846d 855a843c 84778484     ....m.*.<.Z...w.
10024f14:	84ad846b 8482846e 84468469 846f842c     k...n...i.F.,.o.
10024f24:	84358479 846284ca 84bf84b9 84d9849f     y.5...b.........
10024f34:	84bb84cd 84d084da 84c684c1 84a184d6     ................
10024f44:	84ff8521 851784f4 852c8518 8515851f     !.........,.....
10024f54:	84fc8514 85638540 85488558 86028541     ....@.c.X.H.A...
10024f64:	8555854b 85a48580 85918588 85a8858a     K.U.............
10024f74:	8594856d 85ea859b 859c8587 857e8577     m...........w.~.
10024f84:	85c98590 85cf85ba 85d085b9 85dd85d5     ................
10024f94:	85dc85e5 860a85f9 860b8613 85fa85fe     ................
10024fa4:	86228606 8630861a 864d863f 86544e55     .."...0.?.M.UNT.
10024fb4:	8667865f 86938671 86a986a3 868b86aa     _.g.q...........
10024fc4:	86b6868c 86c486af 86b086c6 882386c9     ..............#.
10024fd4:	86d486ab 86e986de 86df86ec 86ef86db     ................
10024fe4:	87068712 87008708 86fb8703 87098711     ................
10024ff4:	86f9870d 8734870a 8737873f 8725873b     ......4.?.7.;.%.
10025004:	871a8729 875f8760 874c8778 8774874e     )...`._.x.L.N.t.
10025014:	87688757 8759876e 87638753 8805876a     W.h.n.Y.S.c.j...
10025024:	879f87a2 87af8782 87bd87cb 87d087c0     ................
10025034:	87ab96d6 87b387c4 87c687c7 87ef87bb     ................
10025044:	87e087f2 880d880f 87f687fe 880e87f7     ................
10025054:	881187d2 88158816 88218822 88368831     ........".!.1.6.
10025064:	88278839 8844883b 88528842 885e8859     9.'.;.D.B.R.Y.^.
10025074:	886b8862 887e8881 8875889e 88b5887d     b.k...~...u.}...
10025084:	88828872 88928897 889988ae 888d88a2     r...............
10025094:	88b088a4 88b188bf 88c488c3 88d888d4     ................
100250a4:	88dd88d9 890288f9 88f488fc 88f288e8     ................
100250b4:	890c8904 8913890a 891e8943 892a8925     ........C...%.*.
100250c4:	8941892b 893b8944 89388936 891d894c     +.A.D.;.6.8.L...
100250d4:	895e8960 89648966 896a896d 8974896f     `.^.f.d.m.j.o.t.
100250e4:	897e8977 89888983 8993898a 89a18998     w.~.............
100250f4:	89a689a9 89af89ac 89ba89b2 89bf89bd     ................
10025104:	89da89c0 89dd89dc 89f489e7 8a0389f8     ................
10025114:	8a108a16 8a1b8a0c 8a258a1d 8a418a36     ..........%.6.A.
10025124:	8a528a5b 8a488a46 8a6d8a7c 8a628a6c     [.R.F.H.|.m.l.b.
10025134:	8a828a85 8aa88a84 8a918aa1 8aa68aa5     ................
10025144:	8aa38a9a 8acd8ac4 8ada8ac2 8af38aeb     ................
10025154:	8ae48ae7 8b148af1 8ae28ae0 8ade8af7     ................
10025164:	8b0c8adb 8b1a8b07 8b168ae1 8b178b10     ................
10025174:	8b338b20 8b2697ab 8b3e8b2b 8b418b28      .3...&.+.>.(.A.
10025184:	8b4f8b4c 8b498b4e 8b5b8b56 8b6b8b5a     L.O.N.I.V.[.Z.k.
10025194:	8b6c8b5f 8b748b6f 8b808b7d 8b8e8b8c     _.l.o.t.}.......
100251a4:	8b938b92 8b998b96 8c3a8b9a 8c3f8c41     ..........:.A.?.
100251b4:	8c4c8c48 8c508c4e 8c628c55 8c788c6c     H.L.N.P.U.b.l.x.
100251c4:	8c828c7a 8c858c89 8c8d8c8a 8c948c8e     z...............
100251d4:	8c988c7c 8cad621d 8cbd8caa 8cb38cb2     |....b..........
100251e4:	8cb68cae 8cc18cc8 8ce38ce4 8cfd8cda     ................
100251f4:	8cfb8cfa 8d058d04 8d078d0a 8d0d8d0f     ................
10025204:	9f4e8d10 8ccd8d13 8d168d14 8d6d8d67     ..N.........g.m.
10025214:	8d738d71 8d998d81 8dbe8dc2 8dcf8dba     q.s.............
10025224:	8dd68dda 8ddb8dcc 8dea8dcb 8ddf8deb     ................
10025234:	8dfc8de3 8e098e08 8e1d8dff 8e108e1e     ................
10025244:	8e428e1f 8e308e35 8e4a8e34 8e498e47     ..B.5.0.4.J.G.I.
10025254:	8e508e4c 8e598e48 8e608e64 8e638e2a     L.P.H.Y.d.`.*.c.
10025264:	8e768e55 8e7c8e72 8e878e81 8e848e85     U.v.r.|.........
10025274:	8e8a8e8b 8e918e93 8e998e94 8ea18eaa     ................
10025284:	8eb08eac 8eb18ec6 8ec58ebe 8ecb8ec8     ................
10025294:	8ee38edb 8efb8efc 8efe8eeb 8f058f0a     ................
100252a4:	8f128f15 8f138f19 8f1f8f1c 8f0c8f1b     ................
100252b4:	8f338f26 8f398f3b 8f428f45 8f4c8f3e     &.3.;.9.E.B.>.L.
100252c4:	8f468f49 8f578f4e 8f628f5c 8f648f63     I.F.N.W.\.b.c.d.
100252d4:	8f9f8f9c 8fad8fa3 8fb78faf 8fe58fda     ................
100252e4:	8fea8fe2 90878fef 90058ff4 8ffa8ff9     ................
100252f4:	90159011 900d9021 9016901e 9027900b     ....!.........'.
10025304:	90359036 8ff89039 9050904f 90529051     6.5.9...O.P.Q.R.
10025314:	9049900e 9056903e 905e9058 906f9068     ..I.>.V.X.^.h.o.
10025324:	96a89076 90829072 9081907d 908a9080     v...r...}.......
10025334:	908f9089 90af90a8 90b590b1 90e490e2     ................
10025344:	90db6248 91129102 91329119 914a9130     Hb........2.0.J.
10025354:	91589156 91659163 91739169 918b9172     V.X.c.e.i.s.r...
10025364:	91829189 91ab91a2 91aa91af 91b491b5     ................
10025374:	91c091ba 91c991c1 91d091cb 91df91d6     ................
10025384:	91db91e1 91f591fc 921e91f6 921491ff     ................
10025394:	9215922c 925e9211 92459257 92649249     ,.....^.W.E.I.d.
100253a4:	92959248 924b923f 929c9250 92939296     H...?.K.P.......
100253b4:	925a929b 92b992cf 92e992b7 92fa930f     ..Z.............
100253c4:	932e9344 93229319 9323931a 9335933a     D....."...#.:.5.
100253d4:	935c933b 937c9360 9356936e 93ac93b0     ;.\.`.|.n.V.....
100253e4:	939493ad 93d693b9 93e893d7 93d893e5     ................
100253f4:	93dd93c3 93c893d0 941a93e4 94139414     ................
10025404:	94079403 94369410 9435942b 943a9421     ......6.+.5.!.:.
10025414:	94529441 945b9444 94629460 946a945e     A.R.D.[.`.b.^.j.
10025424:	94709229 94779475 945a947d 947e947c     ).p.u.w.}.Z.|.~.
10025434:	947f9481 95879582 9594958a 95989596     ................
10025444:	95a09599 95a795a8 95bc95ad 95b995bb     ................
10025454:	95ca95be 95c36ff6 95cc95cd 95d495d5     .....o..........
10025464:	95dc95d6 95e595e1 962195e2 962e9628     ..........!.(...
10025474:	9642962f 964f964c 9677964b 965e965c     /.B.L.O.K.w.\.^.
10025484:	965f965d 96729666 968d966c 96959698     ]._.f.r.l.......
10025494:	96aa9697 96b196a7 96b096b2 96b696b4     ................
100254a4:	96b996b8 96cb96ce 96cd96c9 96dc894d     ............M...
100254b4:	96d5970d 970496f9 97089706 970e9713     ................
100254c4:	970f9711 97199716 972a9724 97399730     ........$.*.0.9.
100254d4:	973e973d 97469744 97429748 975c9749     =.>.D.F.H.B.I.\.
100254e4:	97649760 97689766 976b52d2 97799771     `.d.f.h..Rk.q.y.
100254f4:	977c9785 977a9781 978b9786 9790978f     ..|...z.........
10025504:	97a8979c 97a397a6 97b497b3 97c697c3     ................
10025514:	97cb97c8 97ed97dc 97f29f4f 97f67adf     ........O....z..
10025524:	980f97f5 9838980c 98219824 983d9837     ......8.$.!.7.=.
10025534:	984f9846 986b984b 9870986f 98749871     F.O.K.k.o.p.q.t.
10025544:	98aa9873 98b198af 98c498b6 98c698c3     s...............
10025554:	98eb98e9 99099903 99149912 99219918     ..............!.
10025564:	991e991d 99209924 992e992c 993e993d     ....$. .,...=.>.
10025574:	99499942 99509945 9951994b 994c9952     B.I.E.P.K.Q.R.L.
10025584:	99979955 99a59998 99ae99ad 99df99bc     U...............
10025594:	99dd99db 99d199d8 99ee99ed 99f299f1     ................
100255a4:	99f899fb 9a0f9a01 99e29a05 9a2b9a19     ..............+.
100255b4:	9a459a37 9a409a42 9a3e9a43 9a4d9a55     7.E.B.@.C.>.U.M.
100255c4:	9a579a5b 9a629a5f 9a649a65 9a6b9a69     [.W._.b.e.d.i.k.
100255d4:	9aad9a6a 9abc9ab0 9acf9ac0 9ad39ad1     j...............
100255e4:	9ade9ad4 9ae29adf 9ae69ae3 9aeb9aef     ................
100255f4:	9af49aee 9af79af1 9b069afb 9b1a9b18     ................
10025604:	9b229b1f 9b259b23 9b289b27 9b2a9b29     ..".#.%.'.(.).*.
10025614:	9b2f9b2e 9b449b32 9b4f9b43 9b4e9b4d     ../.2.D.C.O.M.N.
10025624:	9b589b51 9b939b74 9b919b83 9b979b96     Q.X.t...........
10025634:	9ba09b9f 9bb49ba8 9bca9bc0 9bc69bb9     ................
10025644:	9bd19bcf 9be39bd2 9be49be2 9be19bd4     ................
10025654:	9bf29c3a 9bf09bf1 9c149c15 9c139c09     :...............
10025664:	9c069c0c 9c129c08 9c049c0a 9c1b9c2e     ................
10025674:	9c249c25 9c309c21 9c329c47 9c3e9c46     %.$.!.0.G.2.F.>.
10025684:	9c609c5a 9c769c67 9ce79c78 9cf09cec     Z.`.g.v.x.......
10025694:	9d089d09 9d039ceb 9d2a9d06 9daf9d26     ..........*.&...
100256a4:	9d1f9d23 9d159d44 9d419d12 9d3e9d3f     #...D.....A.?.>.
100256b4:	9d489d46 9d5e9d5d 9d519d64 9d599d50     F.H.].^.d.Q.P.Y.
100256c4:	9d899d72 9dab9d87 9d7a9d6f 9da49d9a     r.......o.z.....
100256d4:	9db29da9 9dc19dc4 9db89dbb 9dc69dba     ................
100256e4:	9dc29dcf 9dd39dd9 9de69df8 9def9ded     ................
100256f4:	9e1a9dfd 9e1e9e1b 9e799e75 9e819e7d     ........u.y.}...
10025704:	9e8b9e88 9e929e8c 9e919e95 9ea59e9d     ................
10025714:	9eb89ea9 9ead9eaa 9ecc9761 9ecf9ece     ........a.......
10025724:	9ed49ed0 9ede9edc 9ee09edd 9ee89ee5     ................
10025734:	9ef49eef 9ef79ef6 9efb9ef9 9efd9efc     ................
10025744:	9f089f07 9f1576b7 9f2c9f21 9f4a9f3e     .....v..!.,.>.J.
10025754:	9f549f52 9f5f9f63 9f619f60 9f679f66     R.T.c._.`.a.f.g.
10025764:	9f6a9f6c 9f729f77 9f959f76 9fa09f9c     l.j.w.r.v.......
10025774:	69c7582f 74649059 719951dc              /X.iY.dt.Q.q

10025780 <b02cf>:
10025780:	55164e9c 963f5a03 611b54c0 59f66328     .N.U.Z?..T.a(c.Y
10025790:	84759022 7a50831c 63e160aa 65ed6e25     ".u...Pz.`.c%n.e
100257a0:	82a68466 68939bf5 65a15727 5b9b6271     f......h'W.eqb.[
100257b0:	867b59d0 7d6298f4 9b8e7dbe 7c9f6216     .Y{...b}.}...b.|
100257c0:	5b8988b7 63095eb5 68486697 978d95c7     ...[.^.c.fHh....
100257d0:	4ee5674f 4f4d4f0a 50494f9d 593756f2     Og.N.OMO.OIP.V7Y
100257e0:	5a0159d4 60df5c09 6170610f 69056613     .Y.Z.\.`.apa.f.i
100257f0:	754f70ba 79fb7570 7def7dad 840e80c3     .pOupu.y.}.}....
10025800:	8b028863 907a9055 4e95533b 57df4ea5     c...U.z.;S.N.N.W
10025810:	90c180b2 4e0078ef 6ea258f1 7a329038     .....x.N.X.n8.2z
10025820:	828b8328 51419c2f 54bd5370 56e054e1     (.../.AQpS.T.T.V
10025830:	5f1559fb 6deb98f2 852d80e4 96709662     .Y._...m..-.b.p.
10025840:	97fb96a0 53f3540b 70cf5b87 8fc27fbd     .....T.S.[.p....
10025850:	536f96e8 7aba9d5c 78934e11 6e2681fc     ..oS\..z.N.x..&n
10025860:	55045618 851a6b1d 59e59c3b 6d6653a9     .V.U.k..;..Y.Sfm
10025870:	958f74dc 4e915642 96f2904b 990c834f     .t..BV.NK...O...
10025880:	55b653e1 5f715b30 66f36620 6c386804     .S.U0[q_ f.f.h8l
10025890:	6d296cf3 76c8745b 98347a4e 885b82f1     .l)m[t.vNz4...[.
100258a0:	92ed8a60 75ab6db2 99c576ca 8b0160a6     `....m.u.v...`..
100258b0:	95b28d8a 53ad698e 57125186 59445830     .....i.S.Q.W0XDY
100258c0:	5ef65bb4 63a96028 6cbf63f4 708e6f14     .[.^(`.c.c.l.o.p
100258d0:	71597114 733f71d5 82767e01 859782d1     .qYq.q?s.~v.....
100258e0:	925b9060 58699d1b 6c5a65bc 51f97525     `.[...iX.eZl%u.Q
100258f0:	5965592e 5fdc5f80 65fa62bc 6b276a2a     .YeY._._.b.e*j'k
10025900:	738b6bb4 89567fc1 9d0e9d2c 5ca19ec4     .k.s..V.,......\
10025910:	837b6c96 5c4b5104 81c661b6 72616876     .l{..QK\.a..vhar
10025920:	4ffa4e59 60695378 7a4f6e29 4e0b97f3     YN.OxSi`)nOz...N
10025930:	4eee5316 4f3d4f55 4f734fa1 53ef52a0     .S.NUO=O.OsO.R.S
10025940:	590f5609 5bb65ac1 79d15be1 679c6687     .V.Y.Z.[.[.y.f.g
10025950:	6b4c67b6 706b6cb3 798d73c2 7a3c79be     .gLk.lkp.s.y.y<z
10025960:	82b17b87 830482db 83ef8377 876683d3     .{......w.....f.
10025970:	56298ab2 8fe68ca8 971e904e 4fc4868a     ..)V....N......O
10025980:	62115ce8 753b7259 82bd81e5 8cc086fe     .\.bYr;u........
10025990:	991396c5 4ecb99d5 89e34f1a 584a56de     .......N.O...VJX
100259a0:	5efb58ca 602a5feb 60626094 621261d0     .X.^._*`.`b`.a.b
100259b0:	653962d0 66669b41 6d7768b0 754c7070     .b9eA.ff.hwmppLu
100259c0:	7d757686 87f982a5 968e958b 51f18c9d     .vu}...........Q
100259d0:	591652be 5bb354b3 61685d16 6daf6982     .R.Y.T.[.]ha.i.m
100259e0:	84cb788d 8a728857 9ab893a7 99a86d6c     .x..W.r.....lm..
100259f0:	57a386d9 86ce67ff 5283920e 54045687     ...W.g.....R.V.T
10025a00:	62e15ed3 683c64b9 6bbb6838 78ba7372     .^.b.d<h8h.krs.x
10025a10:	899a7a6b 8d6b89d2 90ed8f03 969495a3     kz....k.........
10025a20:	5b669769 697d5cb3 984e984d 7b20639b     i.f[.\}iM.N..c {
10025a30:	6a7f6a2b 9c0d68b6 52726f5f 6070559d     +j.j.h.._orR.Up`
10025a40:	6d3b62ec 6ed16e07 8910845b 4e148f44     .b;m.n.n[...D..N
10025a50:	53f69c39 6a3a691b 682a9784 7ac3515c     9..S.i:j..*h\Q.z
10025a60:	91dc84b2 565b938c 68229d28 84318305     ......[V(."h..1.
10025a70:	52087ca5 74e682c5 4f834e7e 5bd251a0     .|.R...t~N.O.Q.[
10025a80:	52d8520a 5dfb52e7 582a559a 5b8c59e6     .R.R.R.].U*X.Y.[
10025a90:	5bdb5b98 5e795e72 611f60a3 61be6163     .[.[r^y^.`.aca.a
10025aa0:	656263db 685367d1 6b3e68fa 6c576b53     .cbe.gSh.h>kSkWl
10025ab0:	6f976f22 74b06f45 76e37518 7aff770b     "o.oEo.t.u.v.w.z
10025ac0:	7c217ba1 7f367de9 809d7ff0 839e8266     .{!|.}6.....f...
10025ad0:	8acc89b3 90848cab 95939451 95a29591     ........Q.......
10025ae0:	97d39665 82189928 542b4e38 5dcc5cb8     e...(...8N+T.\.]
10025af0:	764c73a9 5ca9773c 8d0b7feb 981196c1     .sLv<w.\........
10025b00:	98589854 4f0e4f01 559c5371 57fa5668     T.X..O.OqS.UhV.W
10025b10:	5b095947 5c905bc4 5e7e5e0c 63ee5fcc     GY.[.[.\.^~^._.c
10025b20:	65d7673a 671f65e2 68c468cb 5e306a5f     :g.e.e.g.h.h_j0^
10025b30:	6c176bc5 757f6c7d 5b637948 7d007a00     .k.l}l.uHyc[.z.}
10025b40:	898f5fbd 8cb48a18 8ecc8d77 98e28f1d     ._......w.......
10025b50:	9b3c9a0e 507d4e80 59935100 622f5b9c     ..<..N}P.Q.Y.[/b
10025b60:	64ec6280 72a06b3a 79477591 87fb7fa9     .b.d:k.r.uGy....
10025b70:	8b708abc 83ca63ac 540997a0 55ab5403     ..p..c.....T.T.U
10025b80:	6a586854 78278a70 9ecd6775 5ba25374     ThXjp.'xug..tS.[
10025b90:	8650811a 4e189006 4ec74e45 53ca4f11     ..P....NEN.N.O.S
10025ba0:	5bae5438 60255f13 673d6551 6c726c42     8T.[._%`Qe=gBlrl
10025bb0:	70786ce3 7a767403 7b087aae 7cfe7d1a     .lxp.tvz.z.{.}.|
10025bc0:	65e77d66 53bb725b 5de85c45 62e062d2     f}.e[r.SE\.].b.b
10025bd0:	6e206319 8a31865a 92f88ddd 79a66f01     .c nZ.1......o.y
10025be0:	4ea89b5a 4eac4eab 4fa04f9b 514750d1     Z..N.N.N.O.O.PGQ
10025bf0:	51717af6 535451f6 537f5321 55ac53eb     .zqQ.QTS!S.S.S.U
10025c00:	5ce15883 5f4a5f37 6050602f 631f606d     .X.\7_J_/`P`m`.c
10025c10:	6a4b6559 72c26cc1 77ef72ed 810580f8     YeKj.l.r.r.w....
10025c20:	854e8208 93e190f7 995797ff 4ef09a5a     ..N.......W.Z..N
10025c30:	5c2d51dd 696d6681 66f25c40 73896975     .Q-\.fmi@\.fui.s
10025c40:	7c816850 52e450c5 5dfe5747 65a49326     Ph.|.P.RGW.]&..e
10025c50:	6b3d6b23 79817434 7b4b79bd 82b97dca     #k=k4t.y.yK{.}..
10025c60:	887f83cc 8b39895f 91d18fd1 9280541f     ...._.9......T..
10025c70:	50364e5d 533a53e5 739672d7 82e677e9     ]N6P.S:S.r.s.w..
10025c80:	99c68eaf 99d299c8 611a5177 55b0865e     ........wQ.a^..U
10025c90:	50767a7a 90475bd3 4e329685 91e76adb     zzvP.[G...2N.j..
10025ca0:	5c485c51 7a9f6398 97746c93 7aaa8f61     Q\H\.c.z.lt.a..z
10025cb0:	9688718a 68177c82 68517e70 52f2936c     .q...|.hp~Qhl..R
10025cc0:	85ab541b 7fa48a13 90e18ecd 88885366     .T..........fS..
10025cd0:	4fc27941 521150be 55535144 73ea572d     Ay.O.P.RDQSU-W.s
10025ce0:	5951578b 5f845f62 61766075 61a96167     .WQYb_._u`vaga.a
10025cf0:	643a63b2 666f656c 6e136842 7a3d7566     .c:dleofBh.nfu=z
10025d00:	7d4c7cfb 7e4b7d99 830e7f6b 86cd834a     .|L}.}K~k...J...
10025d10:	8a638a08 8efd8b66 9d8f981a 8fce82b8     ..c.f...........
10025d20:	52879be8 6483621f 96996fc0 50916841     ...R.b.d.o..Ah.P
10025d30:	6c7a6b20 7a746f54 88407d50 67088a23      kzlTotzP}@.#..g
10025d40:	50394ef6 50655026 5238517c 55a75263     .N9P&PeP|Q8RcR.U
10025d50:	5805570f 5efa5acc 61f861b2 637262f3     .W.X.Z.^.a.a.brc
10025d60:	6a29691c 72ac727d 7814732e 7d79786f     .i)j}r.r.s.xoxy}
10025d70:	80a9770c 8b19898b 8ed28ce2 93759063     .w..........c.u.
10025d80:	9855967a 9e789a13 539f5143 5e7b53b3     z.U...x.CQ.S.S{^
10025d90:	6e1b5f26 73846e90 7d4373fe 8a008237     &_.n.n.s.sC}7...
10025da0:	96508afa 500b4e4e 547c53e4 59d156fa     ..P.NN.P.S|T.V.Y
10025db0:	5df15b64 5f275eab 65456238 6e5667af     d[.].^'_8bEe.gVn
10025dc0:	7cca72d0 80a188b4 83f080e1 8a87864e     .r.|........N...
10025dd0:	92378de8 986796c7 4e949f13 4f0d4e92     ..7...g....N.N.O
10025de0:	54495348 5a2f543e 5fa15f8c 68a7609f     HSIT>T/Z._._.`.h
10025df0:	745a6a8e 8a9e7881 8b778aa4 4e5e9190     .jZt.x....w...^N
10025e00:	4ea49bc9 4faf4f7c 50165019 516c5149     ...N|O.O.P.PIQlQ
10025e10:	52b9529f 539a52fe 541153e3 5589540e     .R.R.R.S.S.T.T.U
10025e20:	57a25751 5b54597d 5b8f5b5d 5de75de5     QW.W}YT[][.[.].]
10025e30:	5e785df7 5e9a5e83 5f185eb7 614c6052     .]x^.^.^.^._R`La
10025e40:	62d86297 653b63a7 66436602 676d66f4     .b.b.c;e.fCf.fmg
10025e50:	68976821 6c5f69cb 6d696d2a 6e9d6e2f     !h.h.i_l*mim/n.n
10025e60:	76877532 7a3f786c 7d057ce0 7d5e7d18     2u.vlx?z.|.}.}^}
10025e70:	80157db1 80af8003 815480b1 822a818f     .}........T...*.
10025e80:	884c8352 8b1b8861 8cfc8ca2 917590ca     R.L.a.........u.
10025e90:	783f9271 95a492fc 9805964d 9ad89999     q.?x....M.......
10025ea0:	525b9d3b 53f752ab 58d55408 6fe062f7     ;.[R.R.S.T.X.b.o
10025eb0:	8f5f8c6a 514b9eb9 544a523b 7a4056fd     j._...KQ;RJT.V@z
10025ec0:	9d609177 73449ed2 81706f09 5ffd7511     w.`...Ds.op..u._
10025ed0:	9aa860da 8fbc72db 98036b64 56f04eca     .`...r..dk...N.V
10025ee0:	58be5764 60685a5a 660f61c7 68396606     dW.XZZh`.a.f.f9h
10025ef0:	6df768b1 7d3a75d5 9b42826e 4f504e9b     .h.m.u:}n.B..NPO
10025f00:	550653c9 5de65d6f 67fb5dee 74736c99     .S.Uo].].].g.lst
10025f10:	8a507802 88df9396 5ea75750 50b5632b     .xP.....PW.^+c.P
10025f20:	518d50ac 54c96700 59bb585e 5f695bb0     .P.Q.g.T^X.Y.[i_
10025f30:	63a1624d 6b73683d 707d6e08 728091c7     Mb.c=hsk.n}p...r
10025f40:	78267815 658e796d 83dc7d30 8f0988c1     .x&xmy.e0}......
10025f50:	5264969b 67505728 8ca17f6a 574251b4     ..dR(WPgj....QBW
10025f60:	583a962a 80b4698a 5d0e54b2 789557fc     *.:X.i...T.].W.x
10025f70:	4f5c9dfa 548b524a 6628643e 67f56714     ..\OJR.T>d(f.g.g
10025f80:	7b567a84 932f7d22 9bad685c 53197b39     .zV{"}/.\h..9{.S
10025f90:	5237518a 62f65bdf 64e664ae 6bba672d     .Q7R.[.b.d.d-g.k
10025fa0:	96d185a9 9bd67690 9306634c 76bf9bab     .....v..Lc.....v
10025fb0:	4e096652 53c25098 60e85c71 65636492     Rf.N.P.Sq\.`.dce
10025fc0:	71e6685f 752373ca 7e827b97 8b838695     _h.q.s#u.{.~....
10025fd0:	91788cdb 65ac9910 6b8b66ab 4ed44ed5     ..x....e.f.k.N.N
10025fe0:	4f7f4f3a 53f8523a 55e353f2 58eb56db     :O.O:R.S.S.U.V.X
10025ff0:	59c959cb 5b5059ff 5e025c4d 5fd75e2b     .Y.Y.YP[M\.^+^._
10026000:	6307601d 5b5c652f 65bd65af 679d65e8     .`.c/e\[.e.e.e.g
10026010:	6b7b6b62 73456c0f 79c17949 7d197cf8     bk{k.lEsIy.y.|.}
10026020:	80a27d2b 81f38102 8a5e8996 8a668a69     +}........^.i.f.
10026030:	8aee8a8c 8cdc8cc7 98fc96cc 4e8b6b6f     ............ok.N
10026040:	4f8d4f3c 5b575150 61485bfa 66426301     <O.OPQW[.[Ha.cBf
10026050:	6ecb6b21 723e6cbb 75d474bd 793a78c1     !k.n.l>r.t.u.x:y
10026060:	8033800c 849481ea 6c508f9e 5f0f9e7f     ..3.......Pl..._
10026070:	9d2b8b58 8ef87afa 96eb5b8d 53f14e03     X.+..z...[...N.S
10026080:	593157f7 5ba45ac9 6e7f6089 75be6f06     .W1Y.Z.[.`.n.o.u
10026090:	5b9f8cea 7be08500 67f45072 5c61829d     ...[...{rP.g..a\
100260a0:	7e1e854a 5199820e 63685c04 659c8d66     J..~...Q.\hcf..e
100260b0:	793e716e 80057d17 8eca8b1d 86c7906e     nq>y.}......n...
100260c0:	501f90aa 5c3a52fa 707c6753 914c7235     ...P.R:\Sg|p5rL.
100260d0:	932b91c8 5bc282e5 60f95f31 53d64e3b     ..+....[1_.`;N.S
100260e0:	624b5b88 6b8a6731 73e072e9 816b7a2e     .[Kb1g.k.r.s.zk.
100260f0:	91528da3 51129996 546a53d7 63885bff     ..R....Q.SjT.[.c
10026100:	7dac6a39 56da9700 546853ce 5c315b97     9j.}...V.ShT.[1\
10026110:	4fee5dde 62fe6101 79c06d32 7d4279cb     .].O.a.b2m.y.yB}
10026120:	7fd27e4d 821f81ed 88468490 8b908972     M~........F.r...
10026130:	8f2f8e74 914b9031 96c6916c 4ec0919c     t./.1.K.l......N
10026140:	51454f4f 5f935341 67d4620e 6e0b6c41     OOEQAS._.b.gAl.n
10026150:	7e267363 928391cd 591953d4 6dd15bbf     cs&~.....S.Y.[.m
10026160:	7e2e795d 587e7c9b 51fa719f 8ff08853     ]y.~.|~X.q.QS...
10026170:	5cfb4fca 77ac6625 821c7ae3 51c699ff     .O.\%f.w.z.....Q
10026180:	65ec5faa 6b89696f 6e966df3 76fe6f64     ._.eoi.k.m.ndo.v
10026190:	5de17d14 91879075 51e69806 6240521d     .}.]u......Q.R@b
100261a0:	66d96691 5eb66e1a 7f727dd2 85af66f8     .f.f.n.^.}r..f..
100261b0:	8af885f7 53d952a9 5e8f5973 60555f90     .....R.SsY.^._U`
100261c0:	966492e4 511f50b7 532052dd 53ec5347     ..d..P.Q.R SGS.S
100261d0:	554654e8 56175531 59be5968 5bb55a3c     .TFU1U.VhY.Y<Z.[
100261e0:	5c0f5c06 5c1a5c11 5e8a5e84 5f705ee0     .\.\.\.\.^.^.^p_
100261f0:	6284627f 638c62db 66076377 662d660c     .b.b.b.cwc.f.f-f
10026200:	677e6676 6a1f68a2 6cbc6a35 6e096d88     vf~g.h.j5j.l.m.n
10026210:	713c6e58 71677126 770175c7 7901785d     Xn<q&qgq.u.w]x.y
10026220:	79f07965 7b117ae0 7d397ca7 83d68096     ey.y.z.{.|9}....
10026230:	8549848b 88f3885d 8a3c8a1f 8a738a54     ..I.].....<.T.s.
10026240:	8cde8c61 926691a4 9418937e 9798969c     a.....f.~.......
10026250:	4e084e0a 4e574e1e 52705197 583457ce     .N.N.NWN.QpR.W4X
10026260:	5b2258cc 60c55e38 676164fe 6d446756     .X"[8^.`.dagVgDm
10026270:	757372b6 84b87a63 91b88b72 56319320     .rsucz..r... .1V
10026280:	98fe57f4 690d62ed 71ed6b96 80777e54     .W...b.i.k.qT~w.
10026290:	89e68272 875598df 5c3b8fb1 4fe14f38     r.....U...;\8O.O
100262a0:	55074fb5 5bdd5a20 5fc35be9 632f614e     .O.U Z.[.[._Na/c
100262b0:	664b65b0 699b68ee 6df16d78 75b97533     .eKf.h.ixm.m3u.u
100262c0:	795e771f 7d3379e6 82af81e3 89aa85aa     .w^y.y3}........
100262d0:	8eab8a3a 90328f9b 970791dd 4ec14eba     :.....2......N.N
100262e0:	58755203 5c0b58ec 5c3d751a 8a0a814e     .RuX.X.\.u=\N...
100262f0:	96638fc5 7b25976d 98088acf 56f39162     ..c.m.%{....b..V
10026300:	901753a8 57825439 63a85e25 708a6c34     .S..9T.W%^.c4l.p
10026310:	7c8b7761 88707fe0 91549042 93189310     aw.|..p.B.T.....
10026320:	745e968f 5d079ac4 65705d69 8da867a2     ..^t...]i]pe.g..
10026330:	636e96db 69196749 981783c5 88fe96c0     ..ncIg.i........
10026340:	647a6f84 4e165bf8 755d702c 51c4662f     .ozd.[.N,p]u/f.Q
10026350:	52e25236 5f8159d3 62106027 6574653f     6R.R.Y._'`.b?ete
10026360:	6674661f 681668f2 6e056b63 751f7272     .ftf.h.hck.nrr.u
10026370:	7cbe76db 58f08056 897f88fd 8a938aa0     .v.|V..X........
10026380:	901d8acb 97529192 65899759 81067a0e     ......R.Y..e.z..
10026390:	5e2d96bb 621a60dc 661465a5 77f36790     ..-^.`.b.e.f.g.w
100263a0:	7c4d7a4d 810a7e3e 8d648cac 8e5f8de1     MzM|>~....d..._.
100263b0:	520778a9 63a562d9 62986442 7a838a2d     .x.R.b.cBd.b-..z
100263c0:	8aac7bc0 7d7696ea 8749820c 51484ed9     .{....v}..I..NHQ
100263d0:	53605343 5c025ba3 5ddd5c16 62476226     CS`S.[.\.\.]&bGb
100263e0:	681364b0 6cc96834 6d176d45 6f5c67d3     .d.h4h.lEm.m.g\o
100263f0:	717d714e 7a7f65cb 7dda7bad 7fa87e4a     Nq}q.e.z.{.}J~..
10026400:	821b817a 85a68239 8cce8a6e 90788df5     z...9...n.....x.
10026410:	92ad9077 95839291 524d9bae 6f385584     w.........MR.U8o
10026420:	51687136 7e557985 7cce81b3 5851564c     6qhQ.yU~...|LVQX
10026430:	63aa5ca8 66fd66fe 72d9695a 758e758f     .\.c.f.fZi.r.u.u
10026440:	7956790e 7c9779df 7d447d20 8a348607     .yVy.y.| }D}..4.
10026450:	9061963b 50e79f20 53cc5275 500953e2     ;.a. ..PuR.S.S.P
10026460:	58ee55aa 723d594f 5c645b8b 60e3531d     .U.XOY=r.[d\.S.`
10026470:	635c60f3 633f6383 64cd63bb 66f965e9     .`\c.c?c.c.d.e.f
10026480:	69cd5de3 6f1569fd 4e8971e5 76f875e9     .].i.i.o.q.N.u.v
10026490:	7cdf7a93 7d9c7dcf 83498061 846c8358     .z.|.}.}a.I.X.l.
100264a0:	85fb84bc 8d7088c5 906d9001 971c9397     ......p...m.....
100264b0:	50cf9a12 618e5897 853581d3 90208d08     ...P.X.a..5... .
100264c0:	50744fc3 53735247 6349606f 6e2c675f     .OtPGRsSo`Ic_g,n
100264d0:	901f8db3 5c5e4fd7 65cf8cca 53527d9a     .....O^\...e.}RS
100264e0:	51768896 5b5863c3 5c0a5b6b 6751640d     ..vQ.cX[k[.\.dQg
100264f0:	4ed6905c 592a591a 8a516c70 5815553e     \..N.Y*YplQ.>U.X
10026500:	60f059a5 67c16253 69558235 99c49640     .Y.`Sb.g5.Ui@...
10026510:	4f539a28 5bfe5806 5cb18010 5f855e2f     (.SO.X.[...\/^._
10026520:	614b6020 66ff6234 6ede6cf0 817f80ce      `Ka4b.f.l.n....
10026530:	888b82d4 90008cb8 968a902e 9bdb9edb     ................
10026540:	53f04ee3 7b2c5927 984c918d 6edd9df9     .N.S'Y,{..L....n
10026550:	53537027 5b855544 629e6258 6ca262d3     'pSSDU.[Xb.b.b.l
10026560:	74226fef 94388a17 8afe6fc1 51e78338     .o"t..8..o..8..Q
10026570:	53ea86f8 4f4653e9 8fb09054 8131596a     ...S.SFOT...jY1.
10026580:	7aea5dfd 68da8fbf 72f88c37 6a3d9c48     .].z...h7..rH.=j
10026590:	4e398ab0 56065358 62c55766 65e663a2     ..9NXS.VfW.b.c.e
100265a0:	6de16b4e 70ad6e5b 7aef77ed 7dbb7baa     Nk.m[n.p.w.z.{.}
100265b0:	80c6803d 8a9586cb 56e3935b 5f3e58c7     =.......[..V.X>_
100265c0:	669665ad 6bb56a80 8ac77537 77e55024     .e.f.j.k7u..$P.w
100265d0:	5f1b5730 667a6065 75f46c60 7f6e7a1a     0W._e`zf`l.u.zn.
100265e0:	871881f4 99b39045 755c7bc9 7b517af9     ....E....{\u.zQ{
100265f0:	901084c4 7a9279e9 5ae18336 4e2d7740     .....y.z6..Z@w-N
10026600:	5b994ef2 62bd5fe0 67f1663c 866b6ce8     .N.[._.b<f.g.lk.
10026610:	8a3b8877 92f3914e 6a1799d0 732a7026     w.;.N......j&p*s
10026620:	845782e7 4e018caf 51cb5146 5bf5558b     ..W....NFQ.Q.U.[
10026630:	5e335e16 5f145e81 5f6b5f35 61f25fb4     .^3^.^._5_k_._.a
10026640:	66a26311 6f6e671d 753a7252 8074773a     .c.f.gnoRr:u:wt.
10026650:	81788139 8abf8776 8d858adc 929a8df3     9.x.v...........
10026660:	98029577 52c59ce5 76f46357 6c886715     w......RWc.v.g.l
10026670:	8cc373cd 967393ae 589c6d25 69cc690e     .s....s.%m.X.i.i
10026680:	939a8ffd 901a75db 6802585a 69fb63b4     .....u..ZX.h.c.i
10026690:	6f2c4f43 8fbb67d8 7db48526 693f9354     CO,o.g..&..}T.?i
100266a0:	576a6f70 5b2c58f7 722a7d2c 91e3540a     pojW.X,[,}*r.T..
100266b0:	4ead9db4 505c4f4e 52435075 54488c9e     ...NNO\PuPCR..HT
100266c0:	5b9a5824 5e955e1d 5ef75ead 608c5f1f     $X.[.^.^.^.^._.`
100266d0:	633a62b5 68af63d0 78876c40 7a0b798e     .b:c.c.h@l.x.y.z
100266e0:	82477de0 8ae68a02 90138e44 912d90b8     .}G.....D.....-.
100266f0:	9f0e91d8 64586ce5 657564e2 76846ef4     .....lXd.due.n.v
10026700:	90697b1b 6eba93d1 5fb954f2 8f4d64a4     .{i....n.T._.dM.
10026710:	92448fed 586b5178 5c555929 6dfb5e97     ..D.xQkX)YU\.^.m
10026720:	751c7e8f 8ee28cbc 70b9985b 6bbf4f1d     .~.u....[..p.O.k
10026730:	75306fb1 514e96fb 58355410 59ac5857     .o0u..NQ.T5XWX.Y
10026740:	5f925c60 675c6597 767b6e21 8ced83df     `\._.e\g!n{v....
10026750:	90fd9014 7825934d 52aa783a 571f5ea6     ....M.%x:x.R.^.W
10026760:	60125974 515a5012 51cd51ac 55105200     tY.`.PZQ.Q.Q.R.U
10026770:	58585854 5b955957 5d8b5cf6 629560bc     TXXXWY.[.\.].`.b
10026780:	6771642d 68bc6843 76d768df 6e6f6dd8     -dqgCh.h.h.v.mon
10026790:	706f6d9b 5f5371c8 797775d8 7b547b49     .mop.qS_.uwyI{T{
100267a0:	7cd67b52 52307d71 85698463 8a0e85e4     R{.|q}0Rc.i.....
100267b0:	8c468b04 90038e0f 9419900f 982d9676     ..F.........v.-.
100267c0:	95d89a30 52d550cd 5802540c 61a75c0e     0....P.R.T.X.\.a
100267d0:	6d1e649e 7ae577b3 840480f4 92859053     .d.m.w.z....S...
100267e0:	9d075ce0 5f97533f 6d9c5fb3 77637279     .\..?S._._.myrcw
100267f0:	7be479bf 72ec6bd2 68038aad 51f86a61     .y.{.k.r...haj.Q
10026800:	69347a81 9cf65c4a 5bc582eb 701e9149     .z4iJ\.....[I..p
10026810:	5c6f5678 656660c7 8c5a6c8c 98139041     xVo\.`fe.lZ.A...
10026820:	66c75451 5948920d 518590a3 51ea4e4d     QT.f..HY...QMN.Q
10026830:	8b0e8599 637a7058 6962934b 7e0499b4     ....XpzcK.bi...~
10026840:	53577577 8edf6960 6c5d96e3 5c3c4e8c     wuWS`i....]l.N<\
10026850:	8fe95f10 8cd15302 86798089 65e55eff     ._...S....y..^.e
10026860:	51654e73 5c3f5982 4efb97ee 5fcd598a     sNeQ.Y?\...N.Y._
10026870:	6fe18a8d 796279b0 84715be7 71b1732b     ...o.yby.[q.+s.q
10026880:	5ff55e74 649a637b 7c9871c3 5efc4e43     t^._{c.d.q.|CN.^
10026890:	57dc4e4b 60a956a2 7d0d6fc3 813380fd     KN.W.V.`.o.}..3.
100268a0:	8fb281bf 86a48997 628a5df4 898764ad     .........].b.d..
100268b0:	6ce26777 74366d3e 5a467834 82ad7f75     wg.l>m6t4xFZu...
100268c0:	4ff399ac 62dd5ec3 65576392 76c3676f     ...O.^.b.cWeog.v
100268d0:	80cc724c 8f2980ba 500d914d 5a9257f9     Lr....).M..P.W.Z
100268e0:	69736885 72fd7164 58f28cb7 966a8ce0     .hsidq.r...X..j.
100268f0:	877f9019 77e779e4 4f2f8429 535a5265     .....y.w)./OeRZS
10026900:	67cf62cd 767d6cca 7c957b94 85848236     .b.g.l}v.{.|6...
10026910:	66dd8feb 72066f20 83ab7e1b 9ea699c1     ...f o.r.~......
10026920:	7bb151fd 7bb87872 7b488087 5e616ae8     .Q.{rx.{..H{.ja^
10026930:	7551808c 516b7560 6e8c9262 9197767a     ..Qu`ukQb..nzv..
10026940:	4f109aea 629c7f70 95a57b4f 567a9ce9     ...Op..bO{....zV
10026950:	86e45859 4f3496bc 534a5224 53db53cd     YX....4O$RJS.S.S
10026960:	642c5e06 677f6591 6c4e6c3e 72af7248     .^,d.e.g>lNlHr.r
10026970:	755473ed 822c7e41 8ca985e9 91c67bc4     .sTuA~,......{..
10026980:	98127169 633d98ef 756a6669 78d076e4     iq....=cifju.v.x
10026990:	86ee8543 5351532a 59835426 5f7c5e87     C...*SQS&T.Y.^|_
100269a0:	624960b2 62ab6279 6bd46590 75b26ccc     .`Ibyb.b.e.k.l.u
100269b0:	789176ae 7dcb79d8 80a57f77 8ab988ab     .v.x.y.}w.......
100269c0:	907f8cbb 98db975e 7c386a0b 5c3e5099     ....^....j8|.P>\
100269d0:	67875fae 74356bd8 7f8e7709 67ca9f3b     ._.g.k5t.w..;..g
100269e0:	53397a17 9aed758b 819d5f66 809883f1     .z9S.u..f_......
100269f0:	5fc55f3c 7b467562 6867903c 5a9b59eb     <_._buF{<.gh.Y.Z
10026a00:	767e7d10 4ff58b2c 6a195f6a 6f026c37     .}~v,..Oj_.j7l.o
10026a10:	796874e2 8a558868 5edf8c79 75c563cf     .thyh.U.y..^.c.u
10026a20:	82d779d2 92f29328 86ed849c 54c19c2d     .y..(.......-..T
10026a30:	658c5f6c 70156d5c 8cd38ca7 654f983b     l_.e\m.p....;.Oe
10026a40:	4e0d74f6 57e04ed8 5a66592b 51a85bcc     .t.N.N.W+YfZ.[.Q
10026a50:	5e9c5e03 62766016 65a76577 6d6e666e     .^.^.`vbwe.enfnm
10026a60:	7b267236 819a8150 8b5c8299 8ce68ca0     6r&{P.....\.....
10026a70:	961c8d74 4fae9644 6b6664ab 8461821e     t...D..O.dfk..a.
10026a80:	90e8856a 69535c01 847a98a8 4f0f8557     j....\Si..z.W..O
10026a90:	5fa9526f 670d5e45 8179798f 89868907     oR._E^.g.yy.....
10026aa0:	5f176df5 6cb86255 72694ecf 52069b92     .m._Ub.l.Nir...R
10026ab0:	5674543b 61a458b3 711a626e 7c89596e     ;TtV.X.anb.qnY.|
10026ac0:	7d1b7cde 658796f0 4e19805e 51754f75     .|.}...e^..NuOuQ
10026ad0:	5e635840 5f0a5e73 4e2667c4 9589853d     @Xc^s^._.g&N=...
10026ae0:	7c73965b 50fb9801 765658c1 522578a7     [.s|...P.XVv.x%R
10026af0:	851177a5 504f7b86 72475909 7de87bc7     .w...{OP.YGr.{.}
10026b00:	8fd48fba 4fbf904d 5a2952c9 97ad5f01     ....M..O.R)Z._..
10026b10:	82174fdd 570392ea 6b696355 88dc752b     .O.....WUcik+u..
10026b20:	7a428f14 589352df 620a6155 6bcd66ae     ..Bz.R.XUa.b.f.k
10026b30:	83e97c3f 4ff85023 54465305 59495831     ?|..#P.O.SFT1XIY
10026b40:	5cf05b9d 5d295cef 62b15e96 653e6367     .[.\.\)].^.bgc>e
10026b50:	670b65b9 6ce16cd5 783270f9 80de7e2b     .e.g.l.l.p2x+~..
10026b60:	840c82b3 870284ec 8a2a8912 90a68c4a     ..........*.J...
10026b70:	98fd92d2 9d6c9cf3 4ea14e4f 5256508d     ......l.ON.N.PVR
10026b80:	59a8574a 5fd85e3d 623f5fd9 671b66b4     JW.Y=^._._?b.f.g
10026b90:	68d267d0 7d215192 81a880aa 8c8c8b00     .g.h.Q!}........
10026ba0:	927e8cbf 54209632 5317982c 535c50d5     ..~.2. T,..S.P\S
10026bb0:	64b258a8 72676734 7a467766 52c391e6     .X.d4ggrfwFz...R
10026bc0:	6b866ca1 5e4c5800 672c5954 51e17ffb     .l.k.XL^TY,g...Q
10026bd0:	646976c6 9b5478e8 57cb9ebb 662759b9     .vid.xT....W.Y'f
10026be0:	6bce679a 69d954e9 819c5e55 9baa6795     .g.k.T.iU^...g..
10026bf0:	9c5267fe 4ea6685d 53c84fe3 672b62b9     .gR.]h.N.O.S.b+g
10026c00:	8fc46cab 7e6d4fad 4e079ebf 6e806162     .l...Om~...Nba.n
10026c10:	85136f2b 672a5473 5df39b45 5cac7b95     +o..sT*gE..].{.\
10026c20:	871c5bc6 84d16e4a 81087a14 7c8d5999     .[..Jn...z...Y.|
10026c30:	77206c11 592252d9 725f7121 972777db     .l w.R"Y!q_r.w'.
10026c40:	690b9d61 5a185a7f 540d51a5 660e547d     a..i.Z.Z.Q.T}T.f
10026c50:	8ff776df 9cf49298 725d59ea 514d6ec5     .v.......Y]r.nMQ
10026c60:	7dbf68c9 97627dec 64789eba 83026a21     .h.}.}b...xd!j..
10026c70:	5b5f5984 731b6bdb 7db276f2 84998017     .Y_[.k.s.v.}....
10026c80:	67285132 76ee9ed9 52ff6762 5c249905     2Q(g...vbg.R..$\
10026c90:	7c7e623b 554f8cb0 7d0b60b6 53019580     ;b~|..OU.`.}...S
10026ca0:	51b64e5f 723a591c 91ce8036 77e25f25     _N.Q.Y:r6...%_.w
10026cb0:	5f795384 85ac7d04 8e8d8a33 67f39756     .Sy_.}..3...V..g
10026cc0:	945385ae 61086109 76526cb9 8f388aed     ..S..a.a.lRv..8.
10026cd0:	4f51552f 52c7512a 5ba553cb 60a05e7d     /UQO*Q.R.S.[}^.`
10026ce0:	63d66182 67da6709 6d8c6e67 73377336     .a.c.g.ggn.m6s7s
10026cf0:	79507531 8a9888d5 9091904a 96c490f5     1uPy....J.......
10026d00:	5915878d 4f594e88 8a894e0e 98108f3f     ...Y.NYO.N..?...
10026d10:	5e7c50ad 5bb95996 63da5eb8 64c163fa     .P|^.Y.[.^.c.c.d
10026d20:	694a66dc 6d0b69d8 71946eb6 7aaf7528     .fJi.i.m.n.q(u.z
10026d30:	80007f8a 84c98449 8b218981 90658e0a     ....I.....!...e.
10026d40:	990a967d 6291617e 6c836b32 7fcc6d74     }...~a.b2k.ltm..
10026d50:	6dc07ffc 87ba7f85 676588f8 983c83b1     ...m......eg..<.
10026d60:	6d1b96f7 843d7d61 4e71916a 5d505375     ...ma}=.j.qNuSP]
10026d70:	6feb6b04 862d85cd 522989a7 5c65540f     .k.o..-...)R.Te\
10026d80:	68a8674e 74837406 88cf75e2 91cc88e1     Ng.h.t.t.u......
10026d90:	967896e2 73875f8b 844e7acb 756563a0     ..x.._.s.zN..ceu
10026da0:	6d415289 74096e9c 786b7559 96867c92     .RAm.n.tYukx.|..
10026db0:	9f8d7adc 616e4fb6 865c65c5 4eae4e86     .z...Ona.e\..N.N
10026dc0:	4e2150da 5bee51cc 68816599 731f6dbc     .P!N.Q.[.e.h.m.s
10026dd0:	77ad7642 7ce77a1c 8ad2826f 91cf907c     Bv.w.z.|o...|...
10026de0:	98189675 7dd1529b 5398502b 6dcb6797     u....R.}+P.S.g.m
10026df0:	743371d0 8f2a81e8 9c5796a3 74609e9f     .q3t..*...W...`t
10026e00:	6d995841 985e7d2f 4f364ee4 51b74f8b     AX.m/}^..N6O.O.Q
10026e10:	5dba52b1 73b2601c 82d3793c 96b79234     .R.].`.s<y..4...
10026e20:	970a96f6 9f629e97 6b7466a6 52a35217     ......b..ftk.R.R
10026e30:	88c270c8 604b5ec9 6f236190 7c3e7149     .p...^K`.a#oIq>|
10026e40:	806f7df4 902384ee 5442932c 6ad39b6f     .}o...#.,.BTo..j
10026e50:	8cc27089 97328def 5a4152b4 5f045eca     .p....2..RAZ.^._
10026e60:	697c6717 6d6a6994 72626f0f 7bed72fc     .g|i.ijm.obr.r.{
10026e70:	807e8001 90ce874b 9e93516d 808b7984     ..~.K...mQ...y..
10026e80:	8ad69332 548c502d 6b6a8a71 81078cc4     2...-P.Tq.jk....
10026e90:	67a060d1 4e999df2 9c104e98 85c18a6b     .`.g...N.N..k...
10026ea0:	69008568 78976e7e 00008155              h..i~n.xU...

10026eac <a8>:
10026eac:	25022500 2510250c 25142518 252c251c     .%.%.%.%.%.%.%,%
10026ebc:	25342524 2501253c 250f2503 251b2513     $%4%<%.%.%.%.%.%
10026ecc:	25232517 252b2533 254b253b 252f2520     .%#%3%+%;%K% %/%
10026edc:	25372528 251d253f 25252530 25422538     (%7%?%.%0%%%8%B%

10026eec <a7>:
10026eec:	04110410 04130412 04150414 04160401     ................
10026efc:	04180417 041a0419 041c041b 041e041d     ................
10026f0c:	0420041f 04220421 04240423 04260425     .. .!.".#.$.%.&.
10026f1c:	04280427 042a0429 042c042b 042e042d     '.(.).*.+.,.-...
10026f2c:	0000042f 00000000 00000000 00000000     /...............
	...
10026f4c:	04310430 04330432 04350434 04360451     0.1.2.3.4.5.Q.6.
10026f5c:	04380437 043a0439 043c043b 043e043d     7.8.9.:.;.<.=.>.
10026f6c:	0440043f 04420441 04440443 04460445     ?.@.A.B.C.D.E.F.
10026f7c:	04480447 044a0449 044c044b 044e044d     G.H.I.J.K.L.M.N.
10026f8c:	0000044f                                O...

10026f90 <a6>:
10026f90:	03920391 03940393 03960395 03980397     ................
10026fa0:	039a0399 039c039b 039e039d 03a0039f     ................
10026fb0:	03a303a1 03a503a4 03a703a6 03a903a8     ................
	...
10026fd0:	03b203b1 03b403b3 03b603b5 03b803b7     ................
10026fe0:	03ba03b9 03bc03bb 03be03bd 03c003bf     ................
10026ff0:	03c303c1 03c503c4 03c703c6 03c903c8     ................

10027000 <a3>:
	...
1002700c:	01000000 01010101 01010101 00000001     ................
1002701c:	00000000 01010101 01010101 01010101     ................
1002702c:	01010101 01010101 01010101 00000101     ................
1002703c:	00000000 01010100 01010101 01010101     ................
1002704c:	01010101 01010101 01010101 00010101     ................

1002705c <a2>:
1002705c:	25a125c6 25b325a0 25bd25b2 203b25bc     .%.%.%.%.%.%.%; 
1002706c:	21923012 21912190 30132193 00000000     .0.!.!.!.!.0....
	...
1002708c:	22080000 2286220b 22822287 222a2283     ..."."."."."."*"
1002709c:	00002229 00000000 00000000 00000000     )"..............
100270ac:	22270000 00ac2228 21d421d2 22032200     ..'"("...!.!."."
100270bc:	00002229 00000000 00000000 00000000     )"..............
100270cc:	00000000 22200000 231222a5 22072202     ...... ".".#."."
100270dc:	22522261 226b226a 223d221a 2235221d     a"R"j"k"."="."5"
100270ec:	222c222b 00000000 00000000 00000000     +","............
100270fc:	212b0000 266f2030 266a266d 20212020     ..+!0 o&m&j&  ! 
1002710c:	222c00b6 00000000 25ef0000              ..,".......%

10027118 <a1>:
10027118:	30013000 ff0c3002 30fbff0e ff1bff1a     .0.0.0.....0....
10027128:	ff01ff1f 309c309b ff4000b4 ff3e00a8     .....0.0..@...>.
10027138:	ff3f203e 30fe30fd 309e309d 4edd3003     > ?..0.0.0.0.0.N
10027148:	30063005 30fc3007 20102014 ff3cff0f     .0.0.0.0. . ..<.
10027158:	2016301c 2026ff5c 20182025 201c2019     .0. \.& % . . . 
10027168:	ff08201d 3014ff09 ff3b3015 ff5bff3d     . .....0.0;.=.[.
10027178:	3008ff5d 300a3009 300c300b 300e300d     ]..0.0.0.0.0.0.0
10027188:	3010300f ff0b3011 00b12212 00f700d7     .0.0.0..."......
10027198:	2260ff1d ff1eff1c 22672266 2234221e     ..`"....f"g"."4"
100271a8:	26402642 203200b0 21032033 ff0400a5     B&@&..2 3 .!....
100271b8:	00a300a2 ff03ff05 ff0aff06 00a7ff20     ............ ...
100271c8:	26052606 25cf25cb 25c725ce              .&.&.%.%.%.%

100271d4 <categories>:
100271d4:	00000000 201c001f 00000000 00002114     ....... .....!..
100271e4:	24160002 00000000 00002514 28150002     ...$.....%.....(
100271f4:	00000000 00002911 2a140000 00000000     .....).....*....
10027204:	00002b18 2c140000 00000000 00002d10     .+.....,.....-..
10027214:	2e140000 00010000 0000300c 3a140009     .........0.....:
10027224:	00010000 00003c18 3f140002 00010000     .....<.....?....
10027234:	00004103 5b150019 00000000 00005c14     .A.....[.....\..
10027244:	5d110000 00000000 00005e17 5f0f0000     ...].....^....._
10027254:	00000000 00006017 61030000 00190000     .....`.....a....
10027264:	00007b15 7c180000 00000000 00007d11     .{.....|.....}..
10027274:	7e180000 00000000 00007f00 a01c0020     ...~........ ...
10027284:	00000000 0000a114 a2160000 00030000     ................
10027294:	0000a619 a7140000 00000000 0000a817     ................
100272a4:	a9190000 00000000 0000aa06 ab130000     ................
100272b4:	00000000 0000ac18 ad010000 00000000     ................
100272c4:	0000ae19 af170000 00000000 0000b019     ................
100272d4:	b1180000 00000000 0000b20e b4170001     ................
100272e4:	00000000 0000b503 b6140000 00010000     ................
100272f4:	0000b817 b90e0000 00000000 0000ba06     ................
10027304:	bb120000 00000000 0000bc0e bf140002     ................
10027314:	00000000 0000c003 d7180016 00000000     ................
10027324:	0000d803 df040006 00000000 0000e003     ................
10027334:	f7180016 00000000 0000f803 3804003f     ............?..8
10027344:	00000001 00013903 4904000f 00000001     .....9.....I....
10027354:	00014a03 8d040042 00000001 00018e03     .J..B...........
10027364:	9b04000c 00000001 00019c03 aa04000d     ................
10027374:	00010001 0001ac03 ba04000d 00000001     ................
10027384:	0001bb06 bc030000 00010001 0001be04     ................
10027394:	bf030000 00000001 0001c006 c4030003     ................
100273a4:	00000001 0001c507 c6030000 00010001     ................
100273b4:	0001c807 c9030000 00010001 0001cb07     ................
100273c4:	cc030000 00230001 0001f004 f1030000     ......#.........
100273d4:	00000001 0001f207 f3030000 002d0001     ..............-.
100273e4:	00022104 22030000 00110002 00023404     .!.....".....4..
100273f4:	3a030005 001a0002 00025504 56030000     ...:.....U.....V
10027404:	00010002 00025804 59030000 00000002     .....X.....Y....
10027414:	00025a04 5b030000 00010002 00025d04     .Z.....[.....]..
10027424:	60030002 00010002 00026204 63030000     ...`.....b.....c
10027434:	00000002 00026404 65030000 00010002     .....d.....e....
10027444:	00026704 68030000 00040002 00026d04     .g.....h.....m..
10027454:	6f030001 00000002 00027004 71030000     ...o.....p.....q
10027464:	00010002 00027304 75030001 00000002     .....s.....u....
10027474:	00027604 7d030006 00000002 00027e04     .v.....}.....~..
10027484:	80030001 00000002 00028104 82030000     ................
10027494:	00010002 00028404 87030002 00050002     ................
100274a4:	00028d04 92030004 00000002 00029304     ................
100274b4:	94060000 00000002 00029504 9d030007     ................
100274c4:	00010002 00029f04 b0050010 00110002     ................
100274d4:	0002c217 c6050003 000b0002 0002d217     ................
100274e4:	e005000d 00040002 0002e517 ec050006     ................
100274f4:	00000002 0002ed17 ee050000 00000002     ................
10027504:	0002ef17 000b0010 006f0003 00037003     ..........o..p..
10027514:	74050003 00000003 00037517 76030000     ...t.....u.....v
10027524:	00010003 00037a05 7b030000 00020003     .....z.....{....
10027534:	00037e14 7f030000 00000003 00038417     .~..............
10027544:	86030001 00000003 00038714 88030000     ................
10027554:	00020003 00038c03 8e030000 00010003     ................
10027564:	00039004 91030000 00100003 0003a303     ................
10027574:	b004000c 00000003 0003b103 d2080020     ............ ...
10027584:	00020003 0003d503 f6180020 00000003     ........ .......
10027594:	0003f703 fc040004 00000003 0003fd03     ................
100275a4:	82190084 00000004 0004830b 880a0004     ................
100275b4:	00010004 00048a03 310300a5 00250005     ...........1..%.
100275c4:	00055905 5a140000 00050005 00056004     .Y.....Z.....`..
100275d4:	61030000 00250005 00058704 89140001     ...a..%.........
100275e4:	00000005 00058a10 8d190000 00010005     ................
100275f4:	00058f16 910b0000 002c0005 0005be10     ..........,.....
10027604:	bf0b0000 00000005 0005c014 c10b0000     ................
10027614:	00010005 0005c314 c40b0000 00010005     ................
10027624:	0005c614 c70b0000 00000005 0005d006     ................
10027634:	ef06001a 00030005 0005f314 00010001     ................
10027644:	00050006 00060618 09140002 00010006     ................
10027654:	00060b16 0c140000 00010006 00060e19     ................
10027664:	100b0001 000a0006 00061b14 1c010000     ................
10027674:	00000006 00061d14 20060002 001f0006     ........... ....
10027684:	00064005 41060000 00090006 00064b0b     .@.....A.....K..
10027694:	600c0014 00090006 00066a14 6e060003     ...`.....j.....n
100276a4:	00010006 0006700b 71060000 00620006     .....p.....q..b.
100276b4:	0006d414 d5060000 00000006 0006d60b     ................
100276c4:	dd010006 00000006 0006de19 df0b0000     ................
100276d4:	00050006 0006e505 e70b0001 00010006     ................
100276e4:	0006e919 ea0b0000 00030006 0006ee06     ................
100276f4:	f00c0001 00090006 0006fa06 fd190002     ................
10027704:	00010006 0006ff06 00140000 000d0007     ................
10027714:	00070f01 10060000 00000007 0007110b     ................
10027724:	12060000 001d0007 0007300b 4d06001a     .........0.....M
10027734:	00580007 0007a60b b106000a 00000007     ..X.............
10027744:	0007c00c ca060009 00200007 0007eb0b     .......... .....
10027754:	f4050008 00010007 0007f619 f7140000     ................
10027764:	00020007 0007fa05 fd0b0000 00000007     ................
10027774:	0007fe16 00060001 00150008 0008160b     ................
10027784:	1a050003 00000008 00081b0b 24050008     ...............$
10027794:	00000008 0008250b 28050002 00000008     .....%.....(....
100277a4:	0008290b 30140004 000e0008 00084006     .).....0.....@..
100277b4:	590b0018 00020008 00085e14 60060000     ...Y.....^.....`
100277c4:	000a0008 00087006 88170017 00000008     .....p..........
100277d4:	00088906 90010005 00010008 0008980b     ................
100277e4:	a0060007 00280008 0008c905 ca0b0000     ......(.........
100277f4:	00170008 0008e201 e30b0000 001f0008     ................
10027804:	00090309 04060000 00350009 00093a0b     ..........5..:..
10027814:	3b090000 00000009 00093c0b 3d060000     ...;.....<.....=
10027824:	00000009 00093e09 410b0002 00070009     .....>.....A....
10027834:	00094909 4d0b0003 00000009 00094e09     .I.....M.....N..
10027844:	50060001 00000009 0009510b 58060006     ...P.....Q.....X
10027854:	00090009 0009620b 64140001 00010009     .....b.....d....
10027864:	0009660c 70140009 00000009 00097105     .f.....p.....q..
10027874:	72060000 000e0009 0009810b 82090000     ...r............
10027884:	00010009 00098506 8f060007 00010009     ................
10027894:	00099306 aa060015 00060009 0009b206     ................
100278a4:	b6060000 00030009 0009bc0b bd060000     ................
100278b4:	00000009 0009be09 c10b0002 00030009     ................
100278c4:	0009c709 cb090001 00010009 0009cd0b     ................
100278d4:	ce060000 00000009 0009d709 dc060000     ................
100278e4:	00010009 0009df06 e20b0002 00010009     ................
100278f4:	0009e60c f0060009 00010009 0009f216     ................
10027904:	f40e0001 00050009 0009fa19 fb160000     ................
10027914:	00000009 0009fc06 fd140000 00000009     ................
10027924:	0009fe0b 010b0000 0001000a 000a0309     ................
10027934:	05060000 0005000a 000a0f06 13060001     ................
10027944:	0015000a 000a2a06 32060006 0001000a     .....*.....2....
10027954:	000a3506 38060001 0001000a 000a3c0b     .5.....8.....<..
10027964:	3e090000 0002000a 000a410b 470b0001     ...>.....A.....G
10027974:	0001000a 000a4b0b 510b0002 0000000a     .....K.....Q....
10027984:	000a5906 5e060003 0000000a 000a660c     .Y.....^.....f..
10027994:	700b0009 0001000a 000a7206 750b0002     ...p.....r.....u
100279a4:	0000000a 000a7614 810b0000 0001000a     .....v..........
100279b4:	000a8309 85060000 0008000a 000a8f06     ................
100279c4:	93060002 0015000a 000aaa06 b2060006     ................
100279d4:	0001000a 000ab506 bc0b0004 0000000a     ................
100279e4:	000abd06 be090000 0002000a 000ac10b     ................
100279f4:	c70b0004 0001000a 000ac909 cb090000     ................
10027a04:	0001000a 000acd0b d0060000 0000000a     ................
10027a14:	000ae006 e20b0001 0001000a 000ae60c     ................
10027a24:	f0140009 0000000a 000af116 f9060000     ................
10027a34:	0000000a 000afa0b 010b0005 0000000b     ................
10027a44:	000b0209 05060001 0007000b 000b0f06     ................
10027a54:	13060001 0015000b 000b2a06 32060006     .........*.....2
10027a64:	0001000b 000b3506 3c0b0004 0000000b     .....5.....<....
10027a74:	000b3d06 3e090000 0000000b 000b3f0b     .=.....>.....?..
10027a84:	40090000 0000000b 000b410b 47090003     ...@.....A.....G
10027a94:	0001000b 000b4b09 4d0b0001 0000000b     .....K.....M....
10027aa4:	000b550b 57090001 0000000b 000b5c06     .U.....W.....\..
10027ab4:	5f060001 0002000b 000b620b 660c0001     ..._.....b.....f
10027ac4:	0009000b 000b7019 71060000 0000000b     .....p.....q....
10027ad4:	000b720e 820b0005 0000000b 000b8306     .r..............
10027ae4:	85060000 0005000b 000b8e06 92060002     ................
10027af4:	0003000b 000b9906 9c060001 0000000b     ................
10027b04:	000b9e06 a3060001 0001000b 000ba806     ................
10027b14:	ae060002 000b000b 000bbe09 c00b0001     ................
10027b24:	0000000b 000bc109 c6090001 0002000b     ................
10027b34:	000bca09 cd0b0002 0000000b 000bd006     ................
10027b44:	d7090000 0000000b 000be60c f00e0009     ................
10027b54:	0002000b 000bf319 f9160005 0000000b     ................
10027b64:	000bfa19 000b0000 0000000c 000c0109     ................
10027b74:	040b0002 0000000c 000c0506 0e060007     ................
10027b84:	0002000c 000c1206 2a060016 000f000c     ...........*....
10027b94:	000c3c0b 3d060000 0000000c 000c3e0b     .<.....=.....>..
10027ba4:	41090002 0003000c 000c460b 4a0b0002     ...A.....F.....J
10027bb4:	0003000c 000c550b 58060001 0002000c     .....U.....X....
10027bc4:	000c5d06 60060000 0001000c 000c620b     .].....`.....b..
10027bd4:	660c0001 0009000c 000c7714 780e0000     ...f.....w.....x
10027be4:	0006000c 000c7f19 80060000 0000000c     ................
10027bf4:	000c810b 82090000 0001000c 000c8414     ................
10027c04:	85060000 0007000c 000c8e06 92060002     ................
10027c14:	0016000c 000caa06 b5060009 0004000c     ................
10027c24:	000cbc0b bd060000 0000000c 000cbe09     ................
10027c34:	bf0b0000 0000000c 000cc009 c60b0004     ................
10027c44:	0000000c 000cc709 ca090001 0001000c     ................
10027c54:	000ccc0b d5090001 0001000c 000cdd06     ................
10027c64:	e0060001 0001000c 000ce20b e60c0001     ................
10027c74:	0009000c 000cf106 f3090001 0000000c     ................
10027c84:	000d000b 02090001 0001000d 000d0406     ................
10027c94:	0e060008 0002000d 000d1206 3b0b0028     ............(..;
10027ca4:	0001000d 000d3d06 3e090000 0002000d     .....=.....>....
10027cb4:	000d410b 46090003 0002000d 000d4a09     .A.....F.....J..
10027cc4:	4d0b0002 0000000d 000d4e06 4f190000     ...M.....N.....O
10027cd4:	0000000d 000d5406 57090002 0000000d     .....T.....W....
10027ce4:	000d580e 5f060006 0002000d 000d620b     .X....._.....b..
10027cf4:	660c0001 0009000d 000d700e 79190008     ...f.....p.....y
10027d04:	0000000d 000d7a06 810b0005 0000000d     .....z..........
10027d14:	000d8209 85060001 0011000d 000d9a06     ................
10027d24:	b3060017 0008000d 000dbd06 c0060000     ................
10027d34:	0006000d 000dca0b cf090000 0002000d     ................
10027d44:	000dd20b d60b0002 0000000d 000dd809     ................
10027d54:	e60c0007 0009000d 000df209 f4140001     ................
10027d64:	0000000d 000e0106 310b002f 0000000e     ......../..1....
10027d74:	000e3206 340b0001 0006000e 000e3f16     .2.....4.....?..
10027d84:	40060000 0005000e 000e4605 470b0000     ...@.....F.....G
10027d94:	0007000e 000e4f14 500c0000 0009000e     .....O.....P....
10027da4:	000e5a14 81060001 0001000e 000e8406     .Z..............
10027db4:	86060000 0004000e 000e8c06 a5060017     ................
10027dc4:	0000000e 000ea706 b10b0009 0000000e     ................
10027dd4:	000eb206 b40b0001 0008000e 000ebd06     ................
10027de4:	c0060000 0004000e 000ec605 c80b0000     ................
10027df4:	0006000e 000ed00c dc060009 0003000e     ................
10027e04:	000f0006 01190000 0002000f 000f0414     ................
10027e14:	1319000e 0000000f 000f1414 15190000     ................
10027e24:	0002000f 000f180b 1a190001 0005000f     ................
10027e34:	000f200c 2a0e0009 0009000f 000f3419     . .....*.....4..
10027e44:	350b0000 0000000f 000f3619 370b0000     ...5.....6.....7
10027e54:	0000000f 000f3819 390b0000 0000000f     .....8.....9....
10027e64:	000f3a15 3b110000 0000000f 000f3c15     .:.....;.....<..
10027e74:	3d110000 0000000f 000f3e09 40060001     ...=.....>.....@
10027e84:	0007000f 000f4906 710b0023 000d000f     .....I..#..q....
10027e94:	000f7f09 800b0000 0004000f 000f8514     ................
10027ea4:	860b0000 0001000f 000f8806 8d0b0004     ................
10027eb4:	000a000f 000f990b be190023 0007000f     ........#.......
10027ec4:	000fc60b c7190000 0005000f 000fce19     ................
10027ed4:	d0140001 0004000f 000fd519 d9140003     ................
10027ee4:	0001000f 00100006 2b09002a 00010010     ........*..+....
10027ef4:	00102d0b 31090003 00000010 0010320b     .-.....1.....2..
10027f04:	38090005 00000010 0010390b 3b090001     ...8.....9.....;
10027f14:	00010010 00103d0b 3f060001 00000010     .....=.....?....
10027f24:	0010400c 4a140009 00050010 00105006     .@.....J.....P..
10027f34:	56090005 00010010 0010580b 5a060001     ...V.....X.....Z
10027f44:	00030010 00105e0b 61060002 00000010     .....^.....a....
10027f54:	00106209 65060002 00010010 00106709     .b.....e.....g..
10027f64:	6e060006 00020010 0010710b 75060003     ...n.....q.....u
10027f74:	000c0010 0010820b 83090000 00010010     ................
10027f84:	0010850b 87090001 00050010 00108d0b     ................
10027f94:	8e060000 00000010 00108f09 900c0000     ................
10027fa4:	00090010 00109a09 9d0b0002 00000010     ................
10027fb4:	00109e19 a0030001 00250010 0010c703     ..........%.....
10027fc4:	cd030000 00000010 0010d003 fb14002a     ............*...
10027fd4:	00000010 0010fc05 fd030000 00020010     ................
10027fe4:	00110006 4a060148 00030012 00125006     ....H..J.....P..
10027ff4:	58060006 00000012 00125a06 60060003     ...X.....Z.....`
10028004:	00280012 00128a06 90060003 00200012     ..(........... .
10028014:	0012b206 b8060003 00060012 0012c006     ................
10028024:	c2060000 00030012 0012c806 d806000e     ................
10028034:	00380012 00131206 18060003 00420013     ..8...........B.
10028044:	00135d0b 60140002 00080013 0013690e     .].....`.....i..
10028054:	80060013 000f0013 00139019 a0030009     ................
10028064:	00550013 0013f803 00100005 00000014     ..U.............
10028074:	00140106 6d19026b 00000016 00166e14     ....k..m.....n..
10028084:	6f060000 00100016 0016801c 81060000     ...o............
10028094:	00190016 00169b15 9c110000 00000016     ................
100280a4:	0016a006 eb14004a 00020016 0016ee0d     ....J...........
100280b4:	f1060002 00070016 00170006 120b0011     ................
100280c4:	00020017 00171509 1f060000 00120017     ................
100280d4:	0017320b 34090001 00000017 00173514     .2.....4.....5..
100280e4:	40060001 00110017 0017520b 60060001     ...@.....R.....`
100280f4:	000c0017 00176e06 720b0002 00010017     .....n.....r....
10028104:	00178006 b40b0033 00010017 0017b609     ....3...........
10028114:	b70b0000 00060017 0017be09 c60b0007     ................
10028124:	00000017 0017c709 c90b0001 000a0017     ................
10028134:	0017d414 d7050002 00000017 0017d814     ................
10028144:	db160002 00000017 0017dc06 dd0b0000     ................
10028154:	00000017 0017e00c f00e0009 00090017     ................
10028164:	00180014 06100005 00000018 00180714     ................
10028174:	0b0b0003 00020018 00180e01 0f0b0000     ................
10028184:	00000018 0018100c 20060009 00220018     ........... ..".
10028194:	00184305 44060000 00340018 00188006     .C.....D..4.....
100281a4:	850b0004 00010018 00188706 a90b0021     ............!...
100281b4:	00000018 0018aa06 b0060000 00450018     ..............E.
100281c4:	00190006 200b001e 00020019 00192309     ....... .....#..
100281d4:	270b0003 00010019 00192909 30090002     ...'.....).....0
100281e4:	00010019 0019320b 33090000 00050019     .....2.....3....
100281f4:	0019390b 40190002 00000019 00194414     .9.....@.....D..
10028204:	460c0001 00090019 00195006 7006001d     ...F.....P.....p
10028214:	00040019 00198006 b006002b 00190019     ........+.......
10028224:	0019d00c da0e0009 00000019 0019de19     ................
10028234:	00060021 0016001a 001a170b 19090001     !...............
10028244:	0001001a 001a1b0b 1e140000 0001001a     ................
10028254:	001a2006 55090034 0000001a 001a560b     . ..4..U.....V..
10028264:	57090000 0000001a 001a580b 600b0006     ...W.....X.....`
10028274:	0000001a 001a6109 620b0000 0000001a     .....a.....b....
10028284:	001a6309 650b0001 0007001a 001a6d09     .c.....e.....m..
10028294:	730b0005 0009001a 001a7f0b 800c0000     ...s............
100282a4:	0009001a 001a900c a0140009 0006001a     ................
100282b4:	001aa705 a8140000 0005001a 001ab00b     ................
100282c4:	be0a000d 0000001a 001abf0b 000b000f     ................
100282d4:	0003001b 001b0409 05060000 002e001b     ................
100282e4:	001b340b 35090000 0000001b 001b360b     .4.....5.....6..
100282f4:	3b090004 0000001b 001b3c0b 3d090000     ...;.....<.....=
10028304:	0004001b 001b420b 43090000 0001001b     .....B.....C....
10028314:	001b4506 500c0007 0009001b 001b5a14     .E.....P.....Z..
10028324:	61190006 0009001b 001b6b0b 74190008     ...a.....k.....t
10028334:	0008001b 001b7d14 800b0001 0001001b     .....}..........
10028344:	001b8209 83060000 001d001b 001ba109     ................
10028354:	a20b0000 0003001b 001ba609 a80b0001     ................
10028364:	0001001b 001baa09 ab0b0000 0002001b     ................
10028374:	001bae06 b00c0001 0009001b 001bba06     ................
10028384:	e60b002b 0000001b 001be709 e80b0000     +...............
10028394:	0001001b 001bea09 ed0b0002 0000001b     ................
100283a4:	001bee09 ef0b0000 0002001b 001bf209     ................
100283b4:	fc140001 0003001b 001c0006 24090023     ............#..$
100283c4:	0007001c 001c2c0b 34090007 0001001c     .....,.....4....
100283d4:	001c360b 3b140001 0004001c 001c400c     .6.....;.....@..
100283e4:	4d060009 0002001c 001c500c 5a060009     ...M.....P.....Z
100283f4:	001d001c 001c7805 7e140005 0001001c     .....x.....~....
10028404:	001c8003 90030008 002a001c 001cbd03     ..........*.....
10028414:	c0140002 0007001c 001cd00b d3140002     ................
10028424:	0000001c 001cd40b e109000c 0000001c     ................
10028434:	001ce20b e9060006 0003001c 001ced0b     ................
10028444:	ee060000 0005001c 001cf40b f5060000     ................
10028454:	0001001c 001cf709 f80b0000 0001001c     ................
10028464:	001cfa06 00040000 002b001d 001d2c05     ..........+..,..
10028474:	6b04003e 000c001d 001d7805 79030000     >..k.....x.....y
10028484:	0000001d 001d7a04 7d030002 0000001d     .....z.....}....
10028494:	001d7e04 8e03000f 0000001d 001d8f04     .~..............
100284a4:	9b05000b 0024001d 001dc00b 0003003f     ......$.....?...
100284b4:	0095001e 001e9604 9b030004 0000001e     ................
100284c4:	001e9c04 9e030001 0000001e 001e9f04     ................
100284d4:	a0030000 0075001e 001f1803 20030005     ......u........ 
100284e4:	0025001f 001f4803 50040005 0000001f     ..%..H.....P....
100284f4:	001f5103 52040000 0000001f 001f5303     .Q.....R.....S..
10028504:	54040000 0000001f 001f5503 56040000     ...T.....U.....V
10028514:	0000001f 001f5703 59030000 0000001f     .....W.....Y....
10028524:	001f5b03 5d030000 0000001f 001f5f03     .[.....]....._..
10028534:	8003001e 0007001f 001f8807 90030007     ................
10028544:	0007001f 001f9807 a0030007 0007001f     ................
10028554:	001fa807 b0030007 0001001f 001fb204     ................
10028564:	b3030000 0000001f 001fb404 b6040000     ................
10028574:	0001001f 001fb803 bc070003 0000001f     ................
10028584:	001fbd17 be030000 0000001f 001fbf17     ................
10028594:	c2040002 0000001f 001fc303 c4040000     ................
100285a4:	0000001f 001fc604 c8030001 0003001f     ................
100285b4:	001fcc07 cd170000 0002001f 001fd003     ................
100285c4:	d2040001 0001001f 001fd604 d8030001     ................
100285d4:	0003001f 001fdd17 e0030002 0001001f     ................
100285e4:	001fe204 e5030002 0000001f 001fe604     ................
100285f4:	e8030001 0004001f 001fed17 f2040002     ................
10028604:	0000001f 001ff303 f4040000 0000001f     ................
10028614:	001ff604 f8030001 0003001f 001ffc07     ................
10028624:	fd170000 0001001f 0020001c 0b01000a     .......... .....
10028634:	00040020 00201010 16140005 00010020      ..... ..... ...
10028644:	00201813 19120000 00000020 00201a15     .. ..... ..... .
10028654:	1b130000 00010020 00201d12 1e150000     .... ..... .....
10028664:	00000020 00201f13 20140000 00070020      ..... ....  ...
10028674:	0020281a 291b0000 00000020 00202a01     .( ....) ....* .
10028684:	2f1c0004 00000020 00203014 39130008     .../ ....0 ....9
10028694:	00000020 00203a12 3b140000 00030020      ....: ....; ...
100286a4:	00203f0f 41140001 00020020 00204418     .? ....A ....D .
100286b4:	45150000 00000020 00204611 47140000     ...E ....F ....G
100286c4:	000a0020 00205218 53140000 00000020      ....R ....S ...
100286d4:	0020540f 55140000 00090020 00205f1c     .T ....U ...._ .
100286e4:	60010000 00040020 00206601 700e0009     ...` ....f ....p
100286f4:	00000020 00207105 740e0000 00050020      ....q ....t ...
10028704:	00207a18 7d150002 00000020 00207e11     .z ....} ....~ .
10028714:	7f050000 00000020 0020800e 8a180009     .... ..... .....
10028724:	00020020 00208d15 8e110000 00000020      ..... ..... ...
10028734:	00209005 a016000c 00200020 0020d00b     .. ..... . ... .
10028744:	dd0a000c 00030020 0020e10b e20a0000     .... ..... .....
10028754:	00020020 0020e50b 0019000b 00010021      ..... .....!...
10028764:	00210208 03190000 00030021 00210708     ..!.....!.....!.
10028774:	08190000 00010021 00210a04 0b080000     ....!.....!.....
10028784:	00020021 00210e04 10080001 00020021     !.....!.....!...
10028794:	00211304 14190000 00000021 00211508     ..!.....!.....!.
100287a4:	16190000 00010021 00211818 19080000     ....!.....!.....
100287b4:	00040021 00211e19 24080005 00000021     !.....!....$!...
100287c4:	00212519 26030000 00000021 00212719     .%!....&!....'!.
100287d4:	28080000 00000021 00212919 2a030000     ...(!....)!....*
100287e4:	00010021 00212c08 2e190001 00000021     !....,!.....!...
100287f4:	00212f04 30080000 00010021 00213203     ./!....0!....2!.
10028804:	33080000 00000021 00213404 35060000     ...3!....4!....5
10028814:	00030021 00213904 3a190000 00010021     !....9!....:!...
10028824:	00213c04 3e080001 00010021 00214018     .<!....>!....@!.
10028834:	45080004 00000021 00214604 4a190003     ...E!....F!....J
10028844:	00000021 00214b18 4c190000 00010021     !....K!....L!...
10028854:	00214e03 4f190000 00000021 0021500e     .N!....O!....P!.
10028864:	600d000f 00220021 00218303 850d0001     ...`!."...!.....
10028874:	00030021 0021890e 8a190000 00010021     !.....!.....!...
10028884:	00219018 95190004 00040021 00219a18     ..!.....!.....!.
10028894:	9c190001 00030021 0021a018 a1190000     ....!.....!.....
100288a4:	00010021 0021a318 a4190000 00010021     !.....!.....!...
100288b4:	0021a618 a7190000 00060021 0021ae18     ..!.....!.....!.
100288c4:	af190000 001e0021 0021ce18 d0190001     ....!.....!.....
100288d4:	00010021 0021d218 d3190000 00000021     !.....!.....!...
100288e4:	0021d418 d5190000 001e0021 0021f418     ..!.....!.....!.
100288f4:	0019010b 00070023 00230815 09110000     ....#.....#.....
10028904:	00000023 00230a15 0b110000 00000023     #.....#.....#...
10028914:	00230c19 20180013 00010023 00232219     ..#.... #...."#.
10028924:	29150006 00000023 00232a11 2b190000     ...)#....*#....+
10028934:	00500023 00237c18 7d190000 001d0023     #.P..|#....}#...
10028944:	00239b18 b4190018 00270023 0023dc18     ..#.....#.'...#.
10028954:	e2190005 00440023 00244019 600e000a     ....#.D..@$....`
10028964:	003b0024 00249c19 ea0e004d 00150024     $.;...$.M...$...
10028974:	00250019 b71800b6 00000025 0025b819     ..%.....%.....%.
10028984:	c1180008 00000025 0025c219 f8180035     ....%.....%.5...
10028994:	00070025 00260019 6f18006e 00000026     %.....&.n..o&...
100289a4:	00267019 681500f7 00000027 00276911     .p&....h'....i'.
100289b4:	6a150000 00000027 00276b11 6c150000     ...j'....k'....l
100289c4:	00000027 00276d11 6e150000 00000027     '....m'....n'...
100289d4:	00276f11 70150000 00000027 00277111     .o'....p'....q'.
100289e4:	72150000 00000027 00277311 74150000     ...r'....s'....t
100289f4:	00000027 00277511 760e0000 001d0027     '....u'....v'...
10028a04:	00279419 c018002b 00040027 0027c515     ..'.+...'.....'.
10028a14:	c6110000 00000027 0027c718 e615001e     ....'.....'.....
10028a24:	00000027 0027e711 e8150000 00000027     '.....'.....'...
10028a34:	0027e911 ea150000 00000027 0027eb11     ..'.....'.....'.
10028a44:	ec150000 00000027 0027ed11 ee150000     ....'.....'.....
10028a54:	00000027 0027ef11 f0180000 000f0027     '.....'.....'...
10028a64:	00280019 001800ff 00820029 00298315     ..(.....).....).
10028a74:	84110000 00000029 00298515 86110000     ....).....).....
10028a84:	00000029 00298715 88110000 00000029     ).....).....)...
10028a94:	00298915 8a110000 00000029 00298b15     ..).....).....).
10028aa4:	8c110000 00000029 00298d15 8e110000     ....).....).....
10028ab4:	00000029 00298f15 90110000 00000029     ).....).....)...
10028ac4:	00299115 92110000 00000029 00299315     ..).....).....).
10028ad4:	94110000 00000029 00299515 96110000     ....).....).....
10028ae4:	00000029 00299715 98110000 00000029     ).....).....)...
10028af4:	00299918 d815003e 00000029 0029d911     ..).>...).....).
10028b04:	da150000 00000029 0029db11 dc180000     ....).....).....
10028b14:	001f0029 0029fc15 fd110000 00000029     ).....).....)...
10028b24:	0029fe18 00190101 002f002b 002b3018     ..).....+./..0+.
10028b34:	45190014 0001002b 002b4718 4d190005     ...E+....G+....M
10028b44:	0026002b 002b7619 9719001f 0068002b     +.&..v+.....+.h.
10028b54:	002c0003 71040070 0000002c 002c7203     ..,.p..q,....r,.
10028b64:	74040001 0000002c 002c7503 77040001     ...t,....u,....w
10028b74:	0004002c 002c7c05 7e030001 0065002c     ,....|,....~,.e.
10028b84:	002ce404 e5190000 0005002c 002ceb03     ..,.....,.....,.
10028b94:	ef0b0003 0002002c 002cf203 f9140001     ....,.....,.....
10028ba4:	0003002c 002cfd0e fe140000 0001002c     ,.....,.....,...
10028bb4:	002d0003 27030025 0000002d 002d2d03     ..-.%..'-....--.
10028bc4:	30060000 0037002d 002d6f05 70140000     ...0-.7..o-....p
10028bd4:	0000002d 002d7f0b 80060000 0016002d     -.....-.....-...
10028be4:	002da006 a8060006 0006002d 002db006     ..-.....-.....-.
10028bf4:	b8060006 0006002d 002dc006 c8060006     ....-.....-.....
10028c04:	0006002d 002dd006 d8060006 0006002d     -.....-.....-...
10028c14:	002de00b 0014001f 0001002e 002e0213     ..-.............
10028c24:	03120000 0000002e 002e0413 05120000     ................
10028c34:	0000002e 002e0614 09130002 0000002e     ................
10028c44:	002e0a12 0b140000 0000002e 002e0c13     ................
10028c54:	0d120000 0000002e 002e0e14 17100008     ................
10028c64:	0000002e 002e1814 1a100001 0000002e     ................
10028c74:	002e1b14 1c130000 0000002e 002e1d12     ................
10028c84:	1e140000 0001002e 002e2013 21120000     ......... .....!
10028c94:	0000002e 002e2215 23110000 0000002e     .....".....#....
10028ca4:	002e2415 25110000 0000002e 002e2615     .$.....%.....&..
10028cb4:	27110000 0000002e 002e2815 29110000     ...'.....(.....)
10028cc4:	0000002e 002e2a14 2f050004 0000002e     .....*...../....
10028cd4:	002e3014 3a100009 0001002e 002e3c14     .0.....:.....<..
10028ce4:	40100003 0000002e 002e4114 42150000     ...@.....A.....B
10028cf4:	0000002e 002e4314 5019000c 0001002e     .....C.....P....
10028d04:	002e5214 55150002 0000002e 002e5611     .R.....U.....V..
10028d14:	57150000 0000002e 002e5811 59150000     ...W.....X.....Y
10028d24:	0000002e 002e5a11 5b150000 0000002e     .....Z.....[....
10028d34:	002e5c11 5d100000 0000002e 002e8019     .\.....]........
10028d44:	9b190019 0058002e 002f0019 f01900d5     ......X.../.....
10028d54:	000b002f 0030001c 01140000 00020030     /.....0.....0...
10028d64:	00300419 05050000 00000030 00300606     ..0.....0.....0.
10028d74:	070d0000 00000030 00300815 09110000     ....0.....0.....
10028d84:	00000030 00300a15 0b110000 00000030     0.....0.....0...
10028d94:	00300c15 0d110000 00000030 00300e15     ..0.....0.....0.
10028da4:	0f110000 00000030 00301015 11110000     ....0.....0.....
10028db4:	00000030 00301219 14150001 00000030     0.....0.....0...
10028dc4:	00301511 16150000 00000030 00301711     ..0.....0.....0.
10028dd4:	18150000 00000030 00301911 1a150000     ....0.....0.....
10028de4:	00000030 00301b11 1c100000 00000030     0.....0.....0...
10028df4:	00301d15 1e110000 00010030 00302019     ..0.....0.... 0.
10028e04:	210d0000 00080030 00302a0b 2e090003     ...!0....*0.....
10028e14:	00010030 00303010 31050000 00040030     0....00....10...
10028e24:	00303619 380d0001 00020030 00303b05     .60....80....;0.
10028e34:	3c060000 00000030 00303d14 3e190000     ...<0....=0....>
10028e44:	00010030 00304106 990b0055 00010030     0....A0.U...0...
10028e54:	00309b17 9d050001 00010030 00309f06     ..0.....0.....0.
10028e64:	a0100000 00000030 0030a106 fb140059     ....0.....0.Y...
10028e74:	00000030 0030fc05 ff060002 00000030     0.....0.....0...
10028e84:	00310506 3106002a 005d0031 00319019     ..1.*..11.]...1.
10028e94:	920e0001 00030031 00319619 a0060009     ....1.....1.....
10028ea4:	001f0031 0031c019 f0060023 000f0031     1.....1.#...1...
10028eb4:	00320019 200e001e 00090032 00322a19     ..2.... 2....*2.
10028ec4:	480e001d 00070032 00325019 510e0000     ...H2....P2....Q
10028ed4:	000e0032 00326019 800e001f 00090032     2....`2.....2...
10028ee4:	00328a19 b10e0026 000e0032 0032c019     ..2.&...2.....2.
10028ef4:	0006013f 19bf0034 004dc019 0006003f     ?...4.....M.?...
10028f04:	5214004e 00a01505 16060000 047600a0     N..R..........v.
10028f14:	00a49019 d0060036 002700a4 00a4f805     ....6.....'.....
10028f24:	fe140005 000100a4 00a50006 0c05010b     ................
10028f34:	000000a6 00a60d14 10060002 000f00a6     ................
10028f44:	00a6200c 2a060009 000100a6 00a64003     . .....*.....@..
10028f54:	6e06002d 000000a6 00a66f0b 700a0000     -..n.....o.....p
10028f64:	000200a6 00a67314 740b0000 000900a6     .....s.....t....
10028f74:	00a67e14 7f050000 000000a6 00a68003     .~..............
10028f84:	9c05001b 000100a6 00a69e0b a0060001     ................
10028f94:	004500a6 00a6e60d f00b0009 000100a6     ..E.............
10028fa4:	00a6f214 00170005 001600a7 00a71705     ................
10028fb4:	20170008 000100a7 00a72203 3004000d     ... .....".....0
10028fc4:	000100a7 00a73203 7005003d 000000a7     .....2..=..p....
10028fd4:	00a77104 79030007 000e00a7 00a78805     .q.....y........
10028fe4:	89170000 000100a7 00a78b03 8e040002     ................
10028ff4:	000000a7 00a78f06 90030000 000400a7     ................
10029004:	00a79504 96030000 001800a7 00a7af04     ................
10029014:	b0030000 001a00a7 00a7d003 d3040001     ................
10029024:	000000a7 00a7d504 d6030000 000300a7     ................
10029034:	00a7f205 f5030002 000100a7 00a7f706     ................
10029044:	f8050000 000100a7 00a7fa04 fb060000     ................
10029054:	000600a7 00a8020b 03060000 000200a8     ................
10029064:	00a8060b 07060000 000300a8 00a80b0b     ................
10029074:	0c060000 001600a8 00a82309 250b0001     .........#.....%
10029084:	000100a8 00a82709 28190000 000300a8     .....'.....(....
10029094:	00a82c0b 300e0000 000500a8 00a83619     .,.....0.....6..
100290a4:	38160001 000000a8 00a83919 40060000     ...8.....9.....@
100290b4:	003300a8 00a87414 80090003 000100a8     ..3..t..........
100290c4:	00a88206 b4090031 000f00a8 00a8c40b     ....1...........
100290d4:	ce140001 000100a8 00a8d00c e00b0009     ................
100290e4:	001100a8 00a8f206 f8140005 000200a8     ................
100290f4:	00a8fb06 fc140000 000000a8 00a8fd06     ................
10029104:	ff0b0001 000000a8 00a9000c 0a060009     ................
10029114:	001b00a9 00a9260b 2e140007 000100a9     .....&..........
10029124:	00a93006 470b0016 000a00a9 00a95209     .0.....G.....R..
10029134:	5f140001 000000a9 00a96006 800b001c     ..._.....`......
10029144:	000200a9 00a98309 84060000 002e00a9     ................
10029154:	00a9b30b b4090000 000100a9 00a9b60b     ................
10029164:	ba090003 000100a9 00a9bc0b be090001     ................
10029174:	000200a9 00a9c114 cf05000c 000000a9     ................
10029184:	00a9d00c de140009 000100a9 00a9e006     ................
10029194:	e50b0004 000000a9 00a9e605 e7060000     ................
100291a4:	000800a9 00a9f00c fa060009 000400a9     ................
100291b4:	00aa0006 290b0028 000500aa 00aa2f09     ....(..)...../..
100291c4:	310b0001 000100aa 00aa3309 350b0001     ...1.....3.....5
100291d4:	000100aa 00aa4006 430b0002 000000aa     .....@.....C....
100291e4:	00aa4406 4c0b0007 000000aa 00aa4d09     .D.....L.....M..
100291f4:	500c0000 000900aa 00aa5c14 60060003     ...P.....\.....`
10029204:	000f00aa 00aa7005 71060000 000500aa     .....p.....q....
10029214:	00aa7719 7a060002 000000aa 00aa7b09     .w.....z.....{..
10029224:	7c0b0000 000000aa 00aa7d09 7e060000     ...|.....}.....~
10029234:	003100aa 00aab00b b1060000 000000aa     ..1.............
10029244:	00aab20b b5060002 000100aa 00aab70b     ................
10029254:	b9060001 000400aa 00aabe0b c0060001     ................
10029264:	000000aa 00aac10b c2060000 000000aa     ................
10029274:	00aadb06 dd050001 000000aa 00aade14     ................
10029284:	e0060001 000a00aa 00aaeb09 ec0b0000     ................
10029294:	000100aa 00aaee09 f0140001 000100aa     ................
100292a4:	00aaf206 f3050000 000100aa 00aaf509     ................
100292b4:	f60b0000 000000aa 00ab0106 09060005     ................
100292c4:	000500ab 00ab1106 20060005 000600ab     ........... ....
100292d4:	00ab2806 30040006 002200ab 00ab5303     .(.....0.."..S..
100292e4:	54040000 000600ab 00ab5b17 5c050000     ...T.....[.....\
100292f4:	000300ab 00ab6004 69050008 000000ab     .....`.....i....
10029304:	00ab6a17 70030001 004f00ab 00abc006     .j.....p..O.....
10029314:	e3090022 000100ab 00abe50b e6090000     "...............
10029324:	000100ab 00abe80b e9090000 000100ab     ................
10029334:	00abeb14 ec090000 000000ab 00abed0b     ................
10029344:	f00c0000 000900ab 00ac0006 b0062ba3     .............+..
10029354:	001600d7 00d7cb06 00020030 07ff00d8     ........0.......
10029364:	00f90006 7006016d 006900fa 00fb0004     ....m..p..i.....
10029374:	13040006 000400fb 00fb1d06 1e0b0000     ................
10029384:	000000fb 00fb1f06 29180009 000000fb     ...........)....
10029394:	00fb2a06 3806000c 000400fb 00fb3e06     .*.....8.....>..
100293a4:	40060000 000100fb 00fb4306 46060001     ...@.....C.....F
100293b4:	006b00fb 00fbb217 d3060010 016a00fb     ..k...........j.
100293c4:	00fd3e11 3f150000 000000fd 00fd4019     .>.....?.....@..
100293d4:	5006000f 003f00fd 00fd9206 cf190035     ...P..?.....5...
100293e4:	000000fd 00fdf006 fc16000b 000000fd     ................
100293f4:	00fdfd19 000b0002 000f00fe 00fe1014     ................
10029404:	17150006 000000fe 00fe1811 19140000     ................
10029414:	000000fe 00fe200b 3014000f 000000fe     ..... .....0....
10029424:	00fe3110 330f0001 000100fe 00fe3515     .1.....3.....5..
10029434:	36110000 000000fe 00fe3715 38110000     ...6.....7.....8
10029444:	000000fe 00fe3915 3a110000 000000fe     .....9.....:....
10029454:	00fe3b15 3c110000 000000fe 00fe3d15     .;.....<.....=..
10029464:	3e110000 000000fe 00fe3f15 40110000     ...>.....?.....@
10029474:	000000fe 00fe4115 42110000 000000fe     .....A.....B....
10029484:	00fe4315 44110000 000000fe 00fe4514     .C.....D.....E..
10029494:	47150001 000000fe 00fe4811 49140000     ...G.....H.....I
100294a4:	000300fe 00fe4d0f 50140002 000200fe     .....M.....P....
100294b4:	00fe5414 58100003 000000fe 00fe5915     .T.....X.....Y..
100294c4:	5a110000 000000fe 00fe5b15 5c110000     ...Z.....[.....\
100294d4:	000000fe 00fe5d15 5e110000 000000fe     .....].....^....
100294e4:	00fe5f14 62180002 000000fe 00fe6310     ._.....b.....c..
100294f4:	64180000 000200fe 00fe6814 69160000     ...d.....h.....i
10029504:	000000fe 00fe6a14 70060001 000400fe     .....j.....p....
10029514:	00fe7606 ff010086 000000fe 00ff0114     .v..............
10029524:	04160002 000000ff 00ff0514 08150002     ................
10029534:	000000ff 00ff0911 0a140000 000000ff     ................
10029544:	00ff0b18 0c140000 000000ff 00ff0d10     ................
10029554:	0e140000 000100ff 00ff100c 1a140009     ................
10029564:	000100ff 00ff1c18 1f140002 000100ff     ................
10029574:	00ff2103 3b150019 000000ff 00ff3c14     .!.....;.....<..
10029584:	3d110000 000000ff 00ff3e17 3f0f0000     ...=.....>.....?
10029594:	000000ff 00ff4017 41030000 001900ff     .....@.....A....
100295a4:	00ff5b15 5c180000 000000ff 00ff5d11     .[.....\.....]..
100295b4:	5e180000 000000ff 00ff5f15 60110000     ...^....._.....`
100295c4:	000000ff 00ff6114 62150000 000000ff     .....a.....b....
100295d4:	00ff6311 64140000 000100ff 00ff6606     .c.....d.....f..
100295e4:	70050009 000000ff 00ff7106 9e05002c     ...p.....q..,...
100295f4:	000100ff 00ffa006 c206001e 000500ff     ................
10029604:	00ffca06 d2060005 000500ff 00ffda06     ................
10029614:	e0160002 000100ff 00ffe218 e3170000     ................
10029624:	000000ff 00ffe419 e5160000 000100ff     ................
10029634:	00ffe819 e9180000 000300ff 00ffed19     ................
10029644:	f9010001 000200ff 00fffc19 00060001     ................
10029654:	000b0100 01000d06 28060019 00120100     ...........(....
10029664:	01003c06 3f060001 000e0100 01005006     .<.....?.....P..
10029674:	8006000d 007a0100 01010014 070e0002     ......z.........
10029684:	002c0101 01013719 400d0008 00340101     ..,..7.....@..4.
10029694:	0101750e 79190003 00100101 01018a0e     .u.....y........
100296a4:	8c190001 00020101 01019019 a019000c     ................
100296b4:	00000101 0101d019 fd0b002c 00000101     ........,.......
100296c4:	01028006 a006001c 00300102 0102e00b     ..........0.....
100296d4:	e10e0000 001a0102 01030006 200e001f     ............... 
100296e4:	00030103 01032d06 410d0013 00000103     .....-.....A....
100296f4:	01034206 4a0d0007 00000103 01035006     .B.....J.....P..
10029704:	760b0025 00040103 01038006 9f14001d     %..v............
10029714:	00000103 0103a006 c8060023 00070103     ........#.......
10029724:	0103d014 d10d0000 00040103 01040003     ................
10029734:	5006004f 004d0104 0104a00c b0030009     O..P..M.........
10029744:	00230104 0104d803 00060023 00270105     ..#.....#.....'.
10029754:	01053006 6f140033 00000105 01057003     .0..3..o.....p..
10029764:	7c03000a 000e0105 01058c03 94030006     ...|............
10029774:	00010105 01059703 a303000a 000e0105     ................
10029784:	0105b303 bb030006 00010105 01060006     ................
10029794:	40060136 00150107 01076006 80050007     6..@.....`......
100297a4:	00050107 01078705 b2050029 00080107     ........).......
100297b4:	01080006 08060005 00000108 01080a06     ................
100297c4:	3706002b 00010108 01083c06 3f060000     +..7.....<.....?
100297d4:	00160108 01085714 580e0000 00070108     .....W.....X....
100297e4:	01086006 77190016 00010108 0108790e     .`.....w.....y..
100297f4:	80060006 001e0108 0108a70e e0060008     ................
10029804:	00120108 0108f406 fb0e0001 00040108     ................
10029814:	01090006 160e0015 00050109 01091f14     ................
10029824:	20060000 00190109 01093f14 80060000     ... .....?......
10029834:	00370109 0109bc0e be060001 00010109     ..7.............
10029844:	0109c00e d20e000f 002d0109 010a0006     ..........-.....
10029854:	010b0000 0002010a 010a050b 0c0b0001     ................
10029864:	0003010a 010a1006 15060003 0002010a     ................
10029874:	010a1906 380b001c 0002010a 010a3f0b     .......8.....?..
10029884:	400e0000 0008010a 010a5014 60060008     ...@.....P.....`
10029894:	001c010a 010a7d0e 7f140001 0000010a     .....}..........
100298a4:	010a8006 9d0e001c 0002010a 010ac006     ................
100298b4:	c8190007 0000010a 010ac906 e50b001b     ................
100298c4:	0001010a 010aeb0e f0140004 0006010a     ................
100298d4:	010b0006 39140035 0006010b 010b4006     ....5..9.....@..
100298e4:	580e0015 0007010b 010b6006 780e0012     ...X.....`.....x
100298f4:	0007010b 010b8006 99140011 0003010b     ................
10029904:	010ba90e 00060006 0048010c 010c8003     ..........H.....
10029914:	c0030032 0032010c 010cfa0e 00060005     2.....2.........
10029924:	0023010d 010d240b 300c0003 0009010d     ..#..$.....0....
10029934:	010e600e 8006001e 0029010e 010eab0b     .`........).....
10029944:	ad100001 0000010e 010eb006 fd0b0001     ................
10029954:	0002010e 010f0006 1d0e001c 0009010f     ................
10029964:	010f2706 30060000 0015010f 010f460b     .'.....0.....F..
10029974:	510e000a 0003010f 010f5514 70060004     ...Q.....U.....p
10029984:	0011010f 010f820b 86140003 0003010f     ................
10029994:	010fb006 c50e0014 0006010f 010fe006     ................
100299a4:	00090016 00000110 0110010b 02090000     ................
100299b4:	00000110 01100306 380b0034 000e0110     ........4..8....
100299c4:	01104714 520e0006 00130110 0110660c     .G.....R.....f..
100299d4:	700b0009 00000110 01107106 730b0001     ...p.....q.....s
100299e4:	00010110 01107506 7f0b0000 00020110     .....u..........
100299f4:	01108209 83060000 002c0110 0110b009     ..........,.....
10029a04:	b30b0002 00030110 0110b709 b90b0001     ................
10029a14:	00010110 0110bb14 bd010001 00000110     ................
10029a24:	0110be14 c20b0003 00000110 0110cd01     ................
10029a34:	d0060000 00180110 0110f00c 000b0009     ................
10029a44:	00020111 01110306 270b0023 00040111     ........#..'....
10029a54:	01112c09 2d0b0000 00070111 0111360c     .,.....-.....6..
10029a64:	40140009 00030111 01114406 45090000     ...@.....D.....E
10029a74:	00010111 01114706 50060000 00220111     .....G.....P..".
10029a84:	0111730b 74140000 00010111 01117606     .s.....t.....v..
10029a94:	800b0000 00010111 01118209 83060000     ................
10029aa4:	002f0111 0111b309 b60b0002 00080111     ../.............
10029ab4:	0111bf09 c1060001 00030111 0111c514     ................
10029ac4:	c90b0003 00030111 0111cd14 ce090000     ................
10029ad4:	00000111 0111cf0b d00c0000 00090111     ................
10029ae4:	0111da06 db140000 00000111 0111dc06     ................
10029af4:	dd140000 00020111 0111e10e 00060013     ................
10029b04:	00110112 01121306 2c090018 00020112     ...........,....
10029b14:	01122f0b 32090002 00010112 0112340b     ./.....2.....4..
10029b24:	35090000 00000112 0112360b 38140001     ...5.....6.....8
10029b34:	00050112 01123e0b 3f060000 00010112     .....>.....?....
10029b44:	0112410b 80060000 00060112 01128806     .A..............
10029b54:	8a060000 00030112 01128f06 9f06000e     ................
10029b64:	00090112 0112a914 b0060000 002e0112     ................
10029b74:	0112df0b e0090000 00020112 0112e30b     ................
10029b84:	f00c0007 00090112 0113000b 02090001     ................
10029b94:	00010113 01130506 0f060007 00010113     ................
10029ba4:	01131306 2a060015 00060113 01133206     .......*.....2..
10029bb4:	35060001 00040113 01133b0b 3d060001     ...5.....;.....=
10029bc4:	00000113 01133e09 400b0001 00000113     .....>.....@....
10029bd4:	01134109 47090003 00010113 01134b09     .A.....G.....K..
10029be4:	50060002 00000113 01135709 5d060000     ...P.....W.....]
10029bf4:	00040113 01136209 660b0001 00060113     .....b.....f....
10029c04:	0113700b 00060004 00340114 01143509     .p........4..5..
10029c14:	380b0002 00070114 01144009 420b0001     ...8.....@.....B
10029c24:	00020114 01144509 460b0000 00000114     .....E.....F....
10029c34:	01144706 4b140003 00040114 0114500c     .G.....K.....P..
10029c44:	5a140009 00010114 01145d14 5e0b0000     ...Z.....].....^
10029c54:	00000114 01145f06 80060002 002f0114     ....._......../.
10029c64:	0114b009 b30b0002 00050114 0114b909     ................
10029c74:	ba0b0000 00000114 0114bb09 bf0b0003     ................
10029c84:	00010114 0114c109 c20b0000 00010114     ................
10029c94:	0114c406 c6140001 00000114 0114c706     ................
10029ca4:	d00c0000 00090114 01158006 af09002e     ................
10029cb4:	00020115 0115b20b b8090003 00030115     ................
10029cc4:	0115bc0b be090001 00000115 0115bf0b     ................
10029cd4:	c1140001 00160115 0115d806 dc0b0003     ................
10029ce4:	00010115 01160006 3009002f 00020116     ......../..0....
10029cf4:	0116330b 3b090007 00010116 01163d0b     .3.....;.....=..
10029d04:	3e090000 00000116 01163f0b 41140001     ...>.....?.....A
10029d14:	00020116 01164406 500c0000 00090116     .....D.....P....
10029d24:	01166014 8006000c 002a0116 0116ab0b     .`........*.....
10029d34:	ac090000 00000116 0116ad0b ae090000     ................
10029d44:	00010116 0116b00b b6090005 00000116     ................
10029d54:	0116b70b b8060000 00000116 0116b914     ................
10029d64:	c00c0000 00090116 01170006 1d0b001a     ................
10029d74:	00020117 01172009 220b0001 00030117     ..... ....."....
10029d84:	01172609 270b0000 00040117 0117300c     .&.....'.....0..
10029d94:	3a0e0009 00010117 01173c14 3f190002     ...:.....<.....?
10029da4:	00000117 01174006 00060006 002b0118     .....@........+.
10029db4:	01182c09 2f0b0002 00080118 01183809     .,...../.....8..
10029dc4:	390b0000 00010118 01183b14 a0030000     ...9.....;......
10029dd4:	003f0118 0118e00c ea0e0009 00080118     ..?.............
10029de4:	0118ff06 09060007 00000119 01190c06     ................
10029df4:	15060007 00010119 01191806 30090017     ...............0
10029e04:	00050119 01193709 3b0b0001 00010119     .....7.....;....
10029e14:	01193d09 3e0b0000 00000119 01193f06     .=.....>.....?..
10029e24:	40090000 00000119 01194106 42090000     ...@.....A.....B
10029e34:	00000119 0119430b 44140000 00020119     .....C.....D....
10029e44:	0119500c a0060009 00070119 0119aa06     .P..............
10029e54:	d1090026 00020119 0119d40b da0b0003     &...............
10029e64:	00010119 0119dc09 e00b0003 00000119     ................
10029e74:	0119e106 e2140000 00000119 0119e306     ................
10029e84:	e4090000 00000119 011a0006 010b0000     ................
10029e94:	0009011a 011a0b06 330b0027 0005011a     ........'..3....
10029ea4:	011a3909 3a060000 0000011a 011a3b0b     .9.....:.....;..
10029eb4:	3f140003 0007011a 011a470b 50060000     ...?.....G.....P
10029ec4:	0000011a 011a510b 57090005 0001011a     .....Q.....W....
10029ed4:	011a590b 5c060002 002d011a 011a8a0b     .Y.....\..-.....
10029ee4:	9709000c 0000011a 011a980b 9a140001     ................
10029ef4:	0002011a 011a9d06 9e140000 0004011a     ................
10029f04:	011ab006 00140048 0009011b 011c0006     ....H...........
10029f14:	0a060008 0024011c 011c2f09 300b0000     ......$../.....0
10029f24:	0006011c 011c380b 3e090005 0000011c     .....8.....>....
10029f34:	011c3f0b 40060000 0000011c 011c4114     .?.....@.....A..
10029f44:	500c0004 0009011c 011c5a0e 70140012     ...P.....Z.....p
10029f54:	0001011c 011c7206 920b001d 0015011c     .....r..........
10029f64:	011ca909 aa0b0000 0006011c 011cb109     ................
10029f74:	b20b0000 0001011c 011cb409 b50b0000     ................
10029f84:	0001011c 011d0006 08060006 0001011d     ................
10029f94:	011d0b06 310b0025 0005011d 011d3a0b     ....%..1.....:..
10029fa4:	3c0b0000 0001011d 011d3f0b 46060006     ...<.....?.....F
10029fb4:	0000011d 011d470b 500c0000 0009011d     .....G.....P....
10029fc4:	011d6006 67060005 0001011d 011d6a06     .`.....g.....j..
10029fd4:	8a09001f 0004011d 011d900b 93090001     ................
10029fe4:	0001011d 011d950b 96090000 0000011d     ................
10029ff4:	011d970b 98060000 0000011d 011da00c     ................
1002a004:	e0060009 0012011e 011ef30b f5090001     ................
1002a014:	0001011e 011ef714 000b0001 0001011f     ................
1002a024:	011f0206 03090000 0000011f 011f0406     ................
1002a034:	1206000c 0021011f 011f3409 360b0001     ......!..4.....6
1002a044:	0004011f 011f3e09 400b0001 0000011f     .....>.....@....
1002a054:	011f4109 420b0000 0000011f 011f4314     .A.....B.....C..
1002a064:	500c000c 0009011f 011fb006 c00e0000     ...P............
1002a074:	0014011f 011fd519 dd160007 0003011f     ................
1002a084:	011fe119 ff140010 0000011f 01200006     .............. .
1002a094:	000d0399 006e0124 01247014 80060004     ....$.n..p$.....
1002a0a4:	00c30124 012f9006 f1140060 0001012f     $...../.`.../...
1002a0b4:	01300006 3001042f 000f0134 0134400b     ..0./..04....@4.
1002a0c4:	41060000 00050134 0134470b 0006000e     ...A4....G4.....
1002a0d4:	02460144 01680006 40060238 001e016a     D.F...h.8..@j...
1002a0e4:	016a600c 6e140009 0001016a 016a7006     .`j....nj....pj.
1002a0f4:	c00c004e 0009016a 016ad006 f00b001d     N...j.....j.....
1002a104:	0004016a 016af514 00060000 002f016b     j.....j.....k./.
1002a114:	016b300b 37140006 0004016b 016b3c19     .0k....7k....<k.
1002a124:	40050003 0003016b 016b4414 45190000     ...@k....Dk....E
1002a134:	0000016b 016b500c 5b0e0009 0006016b     k....Pk....[k...
1002a144:	016b6306 7d060014 0012016b 016e4003     .ck....}k....@n.
1002a154:	800e003f 0016016e 016e9714 00060003     ?...n.....n.....
1002a164:	004a016f 016f4f0b 50060000 0000016f     o.J..Oo....Po...
1002a174:	016f5109 8f0b0036 0003016f 016f9305     .Qo.6...o.....o.
1002a184:	e005000c 0001016f 016fe214 e3050000     ....o.....o.....
1002a194:	0000016f 016fe40b f0090000 0001016f     o.....o.....o...
1002a1a4:	01700006 000617f7 04d50188 018d0006     ..p.............
1002a1b4:	f0050008 000301af 01aff505 fd050006     ................
1002a1c4:	000101af 01b00006 32060122 000001b1     ........"..2....
1002a1d4:	01b15006 55060002 000001b1 01b16406     .P.....U.....d..
1002a1e4:	70060003 018b01b1 01bc0006 7006006a     ...p........j..p
1002a1f4:	000c01bc 01bc8006 90060008 000901bc     ................
1002a204:	01bc9c19 9d0b0000 000101bc 01bc9f14     ................
1002a214:	a0010000 000301bc 01cf000b 300b002d     ............-..0
1002a224:	001601cf 01cf5019 00190073 00f501d0     .....P..s.......
1002a234:	01d10019 29190026 003b01d1 01d16509     ....&..)..;..e..
1002a244:	670b0001 000201d1 01d16a19 6d090002     ...g.....j.....m
1002a254:	000501d1 01d17301 7b0b0007 000701d1     .....s.....{....
1002a264:	01d18319 850b0001 000601d1 01d18c19     ................
1002a274:	aa0b001d 000301d1 01d1ae19 0019003c     ............<...
1002a284:	004101d2 01d2420b 45190002 000001d2     ..A..B.....E....
1002a294:	01d2c00e e00e0013 001301d2 01d30019     ................
1002a2a4:	600e0056 001801d3 01d40008 1a040019     V..`............
1002a2b4:	001901d4 01d43408 4e040019 000601d4     .....4.....N....
1002a2c4:	01d45604 68080011 001901d4 01d48204     .V.....h........
1002a2d4:	9c080019 000001d4 01d49e08 a2080001     ................
1002a2e4:	000001d4 01d4a508 a9080001 000301d4     ................
1002a2f4:	01d4ae08 b6040007 000301d4 01d4bb04     ................
1002a304:	bd040000 000601d4 01d4c504 d008000a     ................
1002a314:	001901d4 01d4ea04 04080019 000101d5     ................
1002a324:	01d50708 0d080003 000701d5 01d51608     ................
1002a334:	1e040006 001901d5 01d53808 3b080001     .........8.....;
1002a344:	000301d5 01d54008 46080004 000001d5     .....@.....F....
1002a354:	01d54a08 52040006 001901d5 01d56c08     .J.....R.....l..
1002a364:	86040019 001901d5 01d5a008 ba040019     ................
1002a374:	001901d5 01d5d408 ee040019 001901d5     ................
1002a384:	01d60808 22040019 001901d6 01d63c08     .......".....<..
1002a394:	56040019 001901d6 01d67008 8a040019     ...V.....p......
1002a3a4:	001b01d6 01d6a808 c1180018 000001d6     ................
1002a3b4:	01d6c204 db180018 000001d6 01d6dc04     ................
1002a3c4:	e2080005 001801d6 01d6fb18 fc040000     ................
1002a3d4:	001801d6 01d71518 16040000 000501d7     ................
1002a3e4:	01d71c08 35180018 000001d7 01d73604     .......5.....6..
1002a3f4:	4f180018 000001d7 01d75004 56080005     ...O.....P.....V
1002a404:	001801d7 01d76f18 70040000 001801d7     .....o.....p....
1002a414:	01d78918 8a040000 000501d7 01d79008     ................
1002a424:	a9180018 000001d7 01d7aa04 c3180018     ................
1002a434:	000001d7 01d7c404 ca080005 000001d7     ................
1002a444:	01d7cb04 ce0c0000 003101d7 01d80019     ..........1.....
1002a454:	000b01ff 003601da 01da3719 3b0b0003     ......6..7.....;
1002a464:	003101da 01da6d19 750b0007 000001da     ..1..m.....u....
1002a474:	01da7619 840b000d 000001da 01da8519     .v..............
1002a484:	87140001 000401da 01da9b0b a10b0004     ................
1002a494:	000e01da 01df0004 0a060009 000001df     ................
1002a4a4:	01df0b04 25040013 000501df 01e0000b     .......%........
1002a4b4:	080b0006 001001e0 01e01b0b 230b0006     ...............#
1002a4c4:	000101e0 01e0260b 30050004 003d01e0     .....&.....0..=.
1002a4d4:	01e08f0b 00060000 002c01e1 01e1300b     ..........,..0..
1002a4e4:	37050006 000601e1 01e1400c 4e060009     ...7.....@.....N
1002a4f4:	000001e1 01e14f19 90060000 001d01e2     .....O..........
1002a504:	01e2ae0b c0060000 002b01e2 01e2ec0b     ..........+.....
1002a514:	f00c0003 000901e2 01e2ff16 d0060000     ................
1002a524:	001a01e4 01e4eb05 ec0b0000 000301e4     ................
1002a534:	01e4f00c e0060009 000601e7 01e7e806     ................
1002a544:	ed060003 000101e7 01e7f006 0006000e     ................
1002a554:	00c401e8 01e8c70e d00b0008 000601e8     ................
1002a564:	01e90003 440b0043 000601e9 01e94b05     ....C..D.....K..
1002a574:	500c0000 000901e9 01e95e14 710e0001     ...P.....^.....q
1002a584:	003a01ec 01ecac19 ad0e0000 000201ec     ..:.............
1002a594:	01ecb016 b10e0000 000301ec 01ed010e     ................
1002a5a4:	2e19002c 000001ed 01ed2f0e 0006000e     ,......../......
1002a5b4:	000301ee 01ee0506 2106001a 000101ee     ...........!....
1002a5c4:	01ee2406 27060000 000001ee 01ee2906     .$.....'.....)..
1002a5d4:	34060009 000301ee 01ee3906 3b060000     ...4.....9.....;
1002a5e4:	000001ee 01ee4206 47060000 000001ee     .....B.....G....
1002a5f4:	01ee4906 4b060000 000001ee 01ee4d06     .I.....K.....M..
1002a604:	51060002 000101ee 01ee5406 57060000     ...Q.....T.....W
1002a614:	000001ee 01ee5906 5b060000 000001ee     .....Y.....[....
1002a624:	01ee5d06 5f060000 000001ee 01ee6106     .]....._.....a..
1002a634:	64060001 000001ee 01ee6706 6c060003     ...d.....g.....l
1002a644:	000601ee 01ee7406 79060003 000301ee     .....t.....y....
1002a654:	01ee7e06 80060000 000901ee 01ee8b06     .~..............
1002a664:	a1060010 000201ee 01eea506 ab060004     ................
1002a674:	001001ee 01eef018 00190001 002b01f0     ..............+.
1002a684:	01f03019 a0190063 000e01f0 01f0b119     .0..c...........
1002a694:	c119000e 000e01f0 01f0d119 000e0024     ............$...
1002a6a4:	000c01f1 01f10d19 e61900a0 001c01f1     ................
1002a6b4:	01f21019 4019002b 000801f2 01f25019     ....+..@.....P..
1002a6c4:	60190001 000501f2 01f30019 fb1700fa     ...`............
1002a6d4:	000401f3 01f40019 dc1902d7 001001f6     ................
1002a6e4:	01f6f019 0019000c 007601f7 01f77b19     ..........v..{..
1002a6f4:	e019005e 000b01f7 01f7f019 00190000     ^...............
1002a704:	000b01f8 01f81019 50190037 000901f8     ........7..P....
1002a714:	01f86019 90190027 001d01f8 01f8b019     .`..'...........
1002a724:	00190001 015301f9 01fa6019 7019000d     ......S..`.....p
1002a734:	000c01fa 01fa8019 90190008 002d01fa     ..............-.
1002a744:	01fabf19 ce190006 000d01fa 01fae019     ................
1002a754:	f0190008 000801fa 01fb0019 94190092     ................
1002a764:	003601fb 01fbf00c 00060009 a6df0200     ..6.............
1002a774:	02a70006 40061039 00dd02b7 02b82006     ....9..@..... ..
1002a784:	b0061681 1d3002ce 02f80006 0006021d     ......0.........
1002a794:	134a0300 03135006 0101105f 00000e00     ..J..P.._.......
1002a7a4:	0e002001 000b005f 00ef0e01 6c6f562f     . .._......./Vol
1002a7b4:	73656d75 7461642f 656a2f61 6e696b6e     umes/data/jenkin
1002a7c4:	6f772f73 70736b72 2f656361 2d554e47     s/workspace/GNU-
1002a7d4:	6c6f6f74 69616863 72612f6e 32312d6d     toolchain/arm-12
1002a7e4:	6372732f 77656e2f 2d62696c 77677963     /src/newlib-cygw
1002a7f4:	6e2f6e69 696c7765 696c2f62 732f6362     in/newlib/libc/s
1002a804:	696c6474 64672f62 2d616f74 68746567     tdlib/gdtoa-geth
1002a814:	632e7865 00000000                       ex.c....

1002a81c <__hexdig>:
	...
1002a84c:	13121110 17161514 00001918 00000000     ................
1002a85c:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...
1002a87c:	1c1b1a00 001f1e1d 00000000 00000000     ................
	...

1002a91c <_init>:
1002a91c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1002a91e:	bf00      	nop
1002a920:	bcf8      	pop	{r3, r4, r5, r6, r7}
1002a922:	bc08      	pop	{r3}
1002a924:	469e      	mov	lr, r3
1002a926:	4770      	bx	lr

1002a928 <_fini>:
1002a928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1002a92a:	bf00      	nop
1002a92c:	bcf8      	pop	{r3, r4, r5, r6, r7}
1002a92e:	bc08      	pop	{r3}
1002a930:	469e      	mov	lr, r3
1002a932:	4770      	bx	lr
1002a934:	0000      	movs	r0, r0
	...

1002a938 <__MXC_FLC_Com_Write_veneer>:
1002a938:	f85f f000 	ldr.w	pc, [pc]	@ 1002a93c <__MXC_FLC_Com_Write_veneer+0x4>
1002a93c:	20000ac9 	.word	0x20000ac9

1002a940 <__MXC_FLC_RevA_Write32Using128_veneer>:
1002a940:	f85f f000 	ldr.w	pc, [pc]	@ 1002a944 <__MXC_FLC_RevA_Write32Using128_veneer+0x4>
1002a944:	20000939 	.word	0x20000939

1002a948 <__MXC_FLC_PageErase_veneer>:
1002a948:	f85f f000 	ldr.w	pc, [pc]	@ 1002a94c <__MXC_FLC_PageErase_veneer+0x4>
1002a94c:	200006c9 	.word	0x200006c9

1002a950 <__MXC_FLC_Com_Read_veneer>:
1002a950:	f85f f000 	ldr.w	pc, [pc]	@ 1002a954 <__MXC_FLC_Com_Read_veneer+0x4>
1002a954:	20000ba1 	.word	0x20000ba1

1002a958 <__EH_FRAME_BEGIN__>:
1002a958:	00000010 00000000 00527a01 010e7c02     .........zR..|..
1002a968:	000d0c1b 00000038 00000018 fffedacc     ....8...........
1002a978:	0000009e 100e5100 03850484 01870286     .....Q..........
1002a988:	c5c6c75b 4c000ec4 0a0b420a 100e0b42     [......L.B..B...
1002a998:	03850484 01870286 c5c6c751 00000ec4     ........Q.......
1002a9a8:	00000010 00000000 00527a01 010e7c02     .........zR..|..
1002a9b8:	000d0c1b 00000014 00000018 fffedb1c     ................
1002a9c8:	00000134 0a710200 00000b43 00000010     4.....q.C.......
1002a9d8:	00000000 00527a01 010e7c02 000d0c1b     .....zR..|......
1002a9e8:	0000001c 00000018 fffedc50 000000d8     ........P.......
1002a9f8:	080e4100 02840185 4a0a4902 0b41c4c5     .A.......I.J..A.

1002aa08 <__FRAME_END__>:
1002aa08:	00000000                                ....

Disassembly of section .data:

20000000 <ConsoleUart>:
20000000:	40042000                                . .@

20000004 <overflows>:
20000004:	ffffffff                                ....

20000008 <flc_int>:
20000008:	40029000                                ...@

2000000c <interruptCheck>:
2000000c:	00001008                                ....

20000010 <__malloc_sbrk_base>:
20000010:	ffffffff                                ....

20000014 <__malloc_trim_threshold>:
20000014:	00020000                                ....

20000018 <__malloc_av_>:
	...
20000020:	20000018 20000018 20000020 20000020     ... ...  ..  .. 
20000030:	20000028 20000028 20000030 20000030     (.. (.. 0.. 0.. 
20000040:	20000038 20000038 20000040 20000040     8.. 8.. @.. @.. 
20000050:	20000048 20000048 20000050 20000050     H.. H.. P.. P.. 
20000060:	20000058 20000058 20000060 20000060     X.. X.. `.. `.. 
20000070:	20000068 20000068 20000070 20000070     h.. h.. p.. p.. 
20000080:	20000078 20000078 20000080 20000080     x.. x.. ... ... 
20000090:	20000088 20000088 20000090 20000090     ... ... ... ... 
200000a0:	20000098 20000098 200000a0 200000a0     ... ... ... ... 
200000b0:	200000a8 200000a8 200000b0 200000b0     ... ... ... ... 
200000c0:	200000b8 200000b8 200000c0 200000c0     ... ... ... ... 
200000d0:	200000c8 200000c8 200000d0 200000d0     ... ... ... ... 
200000e0:	200000d8 200000d8 200000e0 200000e0     ... ... ... ... 
200000f0:	200000e8 200000e8 200000f0 200000f0     ... ... ... ... 
20000100:	200000f8 200000f8 20000100 20000100     ... ... ... ... 
20000110:	20000108 20000108 20000110 20000110     ... ... ... ... 
20000120:	20000118 20000118 20000120 20000120     ... ...  ..  .. 
20000130:	20000128 20000128 20000130 20000130     (.. (.. 0.. 0.. 
20000140:	20000138 20000138 20000140 20000140     8.. 8.. @.. @.. 
20000150:	20000148 20000148 20000150 20000150     H.. H.. P.. P.. 
20000160:	20000158 20000158 20000160 20000160     X.. X.. `.. `.. 
20000170:	20000168 20000168 20000170 20000170     h.. h.. p.. p.. 
20000180:	20000178 20000178 20000180 20000180     x.. x.. ... ... 
20000190:	20000188 20000188 20000190 20000190     ... ... ... ... 
200001a0:	20000198 20000198 200001a0 200001a0     ... ... ... ... 
200001b0:	200001a8 200001a8 200001b0 200001b0     ... ... ... ... 
200001c0:	200001b8 200001b8 200001c0 200001c0     ... ... ... ... 
200001d0:	200001c8 200001c8 200001d0 200001d0     ... ... ... ... 
200001e0:	200001d8 200001d8 200001e0 200001e0     ... ... ... ... 
200001f0:	200001e8 200001e8 200001f0 200001f0     ... ... ... ... 
20000200:	200001f8 200001f8 20000200 20000200     ... ... ... ... 
20000210:	20000208 20000208 20000210 20000210     ... ... ... ... 
20000220:	20000218 20000218 20000220 20000220     ... ...  ..  .. 
20000230:	20000228 20000228 20000230 20000230     (.. (.. 0.. 0.. 
20000240:	20000238 20000238 20000240 20000240     8.. 8.. @.. @.. 
20000250:	20000248 20000248 20000250 20000250     H.. H.. P.. P.. 
20000260:	20000258 20000258 20000260 20000260     X.. X.. `.. `.. 
20000270:	20000268 20000268 20000270 20000270     h.. h.. p.. p.. 
20000280:	20000278 20000278 20000280 20000280     x.. x.. ... ... 
20000290:	20000288 20000288 20000290 20000290     ... ... ... ... 
200002a0:	20000298 20000298 200002a0 200002a0     ... ... ... ... 
200002b0:	200002a8 200002a8 200002b0 200002b0     ... ... ... ... 
200002c0:	200002b8 200002b8 200002c0 200002c0     ... ... ... ... 
200002d0:	200002c8 200002c8 200002d0 200002d0     ... ... ... ... 
200002e0:	200002d8 200002d8 200002e0 200002e0     ... ... ... ... 
200002f0:	200002e8 200002e8 200002f0 200002f0     ... ... ... ... 
20000300:	200002f8 200002f8 20000300 20000300     ... ... ... ... 
20000310:	20000308 20000308 20000310 20000310     ... ... ... ... 
20000320:	20000318 20000318 20000320 20000320     ... ...  ..  .. 
20000330:	20000328 20000328 20000330 20000330     (.. (.. 0.. 0.. 
20000340:	20000338 20000338 20000340 20000340     8.. 8.. @.. @.. 
20000350:	20000348 20000348 20000350 20000350     H.. H.. P.. P.. 
20000360:	20000358 20000358 20000360 20000360     X.. X.. `.. `.. 
20000370:	20000368 20000368 20000370 20000370     h.. h.. p.. p.. 
20000380:	20000378 20000378 20000380 20000380     x.. x.. ... ... 
20000390:	20000388 20000388 20000390 20000390     ... ... ... ... 
200003a0:	20000398 20000398 200003a0 200003a0     ... ... ... ... 
200003b0:	200003a8 200003a8 200003b0 200003b0     ... ... ... ... 
200003c0:	200003b8 200003b8 200003c0 200003c0     ... ... ... ... 
200003d0:	200003c8 200003c8 200003d0 200003d0     ... ... ... ... 
200003e0:	200003d8 200003d8 200003e0 200003e0     ... ... ... ... 
200003f0:	200003e8 200003e8 200003f0 200003f0     ... ... ... ... 
20000400:	200003f8 200003f8 20000400 20000400     ... ... ... ... 
20000410:	20000408 20000408 20000410 20000410     ... ... ... ... 

20000420 <__sglue>:
20000420:	00000000 00000003 20001488              ........... 

2000042c <__global_locale>:
2000042c:	00000043 00000000 00000000 00000000     C...............
	...
2000044c:	00000043 00000000 00000000 00000000     C...............
	...
2000046c:	00000043 00000000 00000000 00000000     C...............
	...
2000048c:	00000043 00000000 00000000 00000000     C...............
	...
200004ac:	00000043 00000000 00000000 00000000     C...............
	...
200004cc:	00000043 00000000 00000000 00000000     C...............
	...
200004ec:	00000043 00000000 00000000 00000000     C...............
	...
2000050c:	1001ee4d 10019a3d 00000000 10023918     M...=........9..
2000051c:	10021508 10021468 10021468 10021468     ....h...h...h...
2000052c:	10021468 10021468 10021468 10021468     h...h...h...h...
2000053c:	10021468 10021468 ffffffff ffffffff     h...h...........
2000054c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
20000574:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

20000598 <_impure_ptr>:
20000598:	200005a0 00000000                       ... ....

200005a0 <_impure_data>:
200005a0:	00000000 20001488 200014f0 20001558     ....... ... X.. 
	...
20000638:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20000648:	0005deec 0000000b 00000000 00000000     ................
	...

200006c0 <__atexit_recursive_mutex>:
200006c0:	200015cc                                ... 

200006c4 <MXC_FLC_Busy>:
    return MXC_FLC_RevA_Busy();
200006c4:	f000 b864 	b.w	20000790 <MXC_FLC_RevA_Busy>

200006c8 <MXC_FLC_PageErase>:
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
200006c8:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
200006cc:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
200006d0:	d320      	bcc.n	20000714 <MXC_FLC_PageErase+0x4c>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
200006d2:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
200006d6:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
200006da:	d21e      	bcs.n	2000071a <MXC_FLC_PageErase+0x52>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
200006dc:	f3c0 000d 	ubfx	r0, r0, #0, #14
200006e0:	f500 2100 	add.w	r1, r0, #524288	@ 0x80000
{
200006e4:	b500      	push	{lr}
    err = MXC_FLC_RevA_PageErase((mxc_flc_reva_regs_t *)flc, addr);
200006e6:	480e      	ldr	r0, [pc, #56]	@ (20000720 <MXC_FLC_PageErase+0x58>)
{
200006e8:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_PageErase((mxc_flc_reva_regs_t *)flc, addr);
200006ea:	f000 f897 	bl	2000081c <MXC_FLC_RevA_PageErase>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
200006ee:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
200006f2:	6813      	ldr	r3, [r2, #0]
200006f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
200006f8:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
200006fa:	6813      	ldr	r3, [r2, #0]
200006fc:	065b      	lsls	r3, r3, #25
200006fe:	d4fc      	bmi.n	200006fa <MXC_FLC_PageErase+0x32>
    line = *line_addr;
20000700:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
20000704:	4b07      	ldr	r3, [pc, #28]	@ (20000724 <MXC_FLC_PageErase+0x5c>)
    line = *line_addr;
20000706:	6812      	ldr	r2, [r2, #0]
20000708:	9201      	str	r2, [sp, #4]
    line = *line_addr;
2000070a:	681b      	ldr	r3, [r3, #0]
2000070c:	9301      	str	r3, [sp, #4]
}
2000070e:	b003      	add	sp, #12
20000710:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
20000714:	f3c0 0112 	ubfx	r1, r0, #0, #19
20000718:	e7e4      	b.n	200006e4 <MXC_FLC_PageErase+0x1c>
        return E_BAD_PARAM;
2000071a:	f06f 0002 	mvn.w	r0, #2
}
2000071e:	4770      	bx	lr
20000720:	40029000 	.word	0x40029000
20000724:	10002000 	.word	0x10002000

20000728 <MXC_FLC_Write128>:
    if (address & 0xF) {
20000728:	0702      	lsls	r2, r0, #28
2000072a:	d129      	bne.n	20000780 <MXC_FLC_Write128+0x58>
    if ((addr >= MXC_FLASH_MEM_BASE) && (addr < (MXC_FLASH_MEM_BASE + MXC_FLASH_MEM_SIZE))) {
2000072c:	f100 4370 	add.w	r3, r0, #4026531840	@ 0xf0000000
20000730:	f5b3 2f00 	cmp.w	r3, #524288	@ 0x80000
20000734:	460a      	mov	r2, r1
20000736:	d320      	bcc.n	2000077a <MXC_FLC_Write128+0x52>
    } else if ((addr >= MXC_INFO_MEM_BASE) && (addr < (MXC_INFO_MEM_BASE + MXC_INFO_MEM_SIZE))) {
20000738:	f1a0 5384 	sub.w	r3, r0, #276824064	@ 0x10800000
2000073c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
20000740:	d21e      	bcs.n	20000780 <MXC_FLC_Write128+0x58>
        *result = (addr & (MXC_INFO_MEM_SIZE - 1)) + MXC_FLASH_MEM_SIZE;
20000742:	f3c0 000d 	ubfx	r0, r0, #0, #14
20000746:	f500 2100 	add.w	r1, r0, #524288	@ 0x80000
{
2000074a:	b500      	push	{lr}
    err = MXC_FLC_RevA_Write128((mxc_flc_reva_regs_t *)flc, addr, data);
2000074c:	480e      	ldr	r0, [pc, #56]	@ (20000788 <MXC_FLC_Write128+0x60>)
{
2000074e:	b083      	sub	sp, #12
    err = MXC_FLC_RevA_Write128((mxc_flc_reva_regs_t *)flc, addr, data);
20000750:	f000 f958 	bl	20000a04 <MXC_FLC_RevA_Write128>
    MXC_GCR->sysctrl |= MXC_F_GCR_SYSCTRL_ICC0_FLUSH;
20000754:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
20000758:	6813      	ldr	r3, [r2, #0]
2000075a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
2000075e:	6013      	str	r3, [r2, #0]
    while (MXC_GCR->sysctrl & MXC_F_GCR_SYSCTRL_ICC0_FLUSH) {}
20000760:	6813      	ldr	r3, [r2, #0]
20000762:	065b      	lsls	r3, r3, #25
20000764:	d4fc      	bmi.n	20000760 <MXC_FLC_Write128+0x38>
    line = *line_addr;
20000766:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
    line = *line_addr;
2000076a:	4b08      	ldr	r3, [pc, #32]	@ (2000078c <MXC_FLC_Write128+0x64>)
    line = *line_addr;
2000076c:	6812      	ldr	r2, [r2, #0]
2000076e:	9201      	str	r2, [sp, #4]
    line = *line_addr;
20000770:	681b      	ldr	r3, [r3, #0]
20000772:	9301      	str	r3, [sp, #4]
}
20000774:	b003      	add	sp, #12
20000776:	f85d fb04 	ldr.w	pc, [sp], #4
        *result = addr & (MXC_FLASH_MEM_SIZE - 1);
2000077a:	f3c0 0112 	ubfx	r1, r0, #0, #19
2000077e:	e7e4      	b.n	2000074a <MXC_FLC_Write128+0x22>
        return E_BAD_PARAM;
20000780:	f06f 0002 	mvn.w	r0, #2
}
20000784:	4770      	bx	lr
20000786:	bf00      	nop
20000788:	40029000 	.word	0x40029000
2000078c:	10002000 	.word	0x10002000

20000790 <MXC_FLC_RevA_Busy>:
    return (flc->ctrl &
20000790:	4b02      	ldr	r3, [pc, #8]	@ (2000079c <MXC_FLC_RevA_Busy+0xc>)
20000792:	6898      	ldr	r0, [r3, #8]
}
20000794:	f000 0007 	and.w	r0, r0, #7
20000798:	4770      	bx	lr
2000079a:	bf00      	nop
2000079c:	40029000 	.word	0x40029000

200007a0 <MXC_FLC_RevA_MassErase>:
    return (flc->ctrl &
200007a0:	6882      	ldr	r2, [r0, #8]
{
200007a2:	4603      	mov	r3, r0
    if (MXC_busy_flc(flc)) {
200007a4:	0750      	lsls	r0, r2, #29
200007a6:	d12a      	bne.n	200007fe <MXC_FLC_RevA_MassErase+0x5e>
    flc->clkdiv = SystemCoreClock / 1000000;
200007a8:	4a1a      	ldr	r2, [pc, #104]	@ (20000814 <MXC_FLC_RevA_MassErase+0x74>)
200007aa:	491b      	ldr	r1, [pc, #108]	@ (20000818 <MXC_FLC_RevA_MassErase+0x78>)
200007ac:	6812      	ldr	r2, [r2, #0]
200007ae:	fba1 1202 	umull	r1, r2, r1, r2
200007b2:	0c92      	lsrs	r2, r2, #18
200007b4:	605a      	str	r2, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200007b6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
200007b8:	0791      	lsls	r1, r2, #30
200007ba:	d41b      	bmi.n	200007f4 <MXC_FLC_RevA_MassErase+0x54>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
200007bc:	689a      	ldr	r2, [r3, #8]
200007be:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200007c2:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
200007c6:	609a      	str	r2, [r3, #8]
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_ERASE_CODE) |
200007c8:	689a      	ldr	r2, [r3, #8]
200007ca:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
200007ce:	f442 422a 	orr.w	r2, r2, #43520	@ 0xaa00
200007d2:	609a      	str	r2, [r3, #8]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_ME;
200007d4:	689a      	ldr	r2, [r3, #8]
200007d6:	f042 0202 	orr.w	r2, r2, #2
200007da:	609a      	str	r2, [r3, #8]
    return (flc->ctrl &
200007dc:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
200007de:	0752      	lsls	r2, r2, #29
200007e0:	d1fc      	bne.n	200007dc <MXC_FLC_RevA_MassErase+0x3c>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
200007e2:	689a      	ldr	r2, [r3, #8]
200007e4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200007e8:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200007ea:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200007ec:	f010 0002 	ands.w	r0, r0, #2
200007f0:	d108      	bne.n	20000804 <MXC_FLC_RevA_MassErase+0x64>
}
200007f2:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
200007f4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
200007f6:	f022 0202 	bic.w	r2, r2, #2
200007fa:	625a      	str	r2, [r3, #36]	@ 0x24
200007fc:	e7de      	b.n	200007bc <MXC_FLC_RevA_MassErase+0x1c>
        return E_BUSY;
200007fe:	f06f 0005 	mvn.w	r0, #5
20000802:	e7f6      	b.n	200007f2 <MXC_FLC_RevA_MassErase+0x52>
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000804:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000806:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
2000080a:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000080e:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000810:	4770      	bx	lr
20000812:	bf00      	nop
20000814:	20001768 	.word	0x20001768
20000818:	431bde83 	.word	0x431bde83

2000081c <MXC_FLC_RevA_PageErase>:
    return (flc->ctrl &
2000081c:	6882      	ldr	r2, [r0, #8]
    if (MXC_busy_flc(flc)) {
2000081e:	0752      	lsls	r2, r2, #29
{
20000820:	4603      	mov	r3, r0
    if (MXC_busy_flc(flc)) {
20000822:	d12b      	bne.n	2000087c <MXC_FLC_RevA_PageErase+0x60>
    flc->clkdiv = SystemCoreClock / 1000000;
20000824:	4a1a      	ldr	r2, [pc, #104]	@ (20000890 <MXC_FLC_RevA_PageErase+0x74>)
20000826:	481b      	ldr	r0, [pc, #108]	@ (20000894 <MXC_FLC_RevA_PageErase+0x78>)
20000828:	6812      	ldr	r2, [r2, #0]
2000082a:	fba0 0202 	umull	r0, r2, r0, r2
2000082e:	0c92      	lsrs	r2, r2, #18
20000830:	605a      	str	r2, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000832:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000834:	0790      	lsls	r0, r2, #30
20000836:	d41c      	bmi.n	20000872 <MXC_FLC_RevA_PageErase+0x56>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000838:	689a      	ldr	r2, [r3, #8]
2000083a:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
2000083e:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
20000842:	609a      	str	r2, [r3, #8]
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_ERASE_CODE) |
20000844:	689a      	ldr	r2, [r3, #8]
20000846:	f422 427f 	bic.w	r2, r2, #65280	@ 0xff00
2000084a:	f442 42aa 	orr.w	r2, r2, #21760	@ 0x5500
2000084e:	609a      	str	r2, [r3, #8]
    flc->addr = addr;
20000850:	6019      	str	r1, [r3, #0]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_PGE;
20000852:	689a      	ldr	r2, [r3, #8]
20000854:	f042 0204 	orr.w	r2, r2, #4
20000858:	609a      	str	r2, [r3, #8]
    return (flc->ctrl &
2000085a:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
2000085c:	0752      	lsls	r2, r2, #29
2000085e:	d1fc      	bne.n	2000085a <MXC_FLC_RevA_PageErase+0x3e>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
20000860:	689a      	ldr	r2, [r3, #8]
20000862:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
20000866:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000868:	6a58      	ldr	r0, [r3, #36]	@ 0x24
2000086a:	f010 0002 	ands.w	r0, r0, #2
2000086e:	d108      	bne.n	20000882 <MXC_FLC_RevA_PageErase+0x66>
}
20000870:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000872:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000874:	f022 0202 	bic.w	r2, r2, #2
20000878:	625a      	str	r2, [r3, #36]	@ 0x24
2000087a:	e7dd      	b.n	20000838 <MXC_FLC_RevA_PageErase+0x1c>
        return E_BUSY;
2000087c:	f06f 0005 	mvn.w	r0, #5
20000880:	e7f6      	b.n	20000870 <MXC_FLC_RevA_PageErase+0x54>
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000882:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000884:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
20000888:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000088c:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
2000088e:	4770      	bx	lr
20000890:	20001768 	.word	0x20001768
20000894:	431bde83 	.word	0x431bde83

20000898 <MXC_FLC_RevA_Write32>:
    if (logicAddr & 0x3) {
20000898:	078b      	lsls	r3, r1, #30
2000089a:	d139      	bne.n	20000910 <MXC_FLC_RevA_Write32+0x78>
    if ((*(uint32_t *)logicAddr & data) != data) {
2000089c:	4603      	mov	r3, r0
2000089e:	6808      	ldr	r0, [r1, #0]
200008a0:	ea32 0000 	bics.w	r0, r2, r0
200008a4:	d141      	bne.n	2000092a <MXC_FLC_RevA_Write32+0x92>
    return (flc->ctrl &
200008a6:	6898      	ldr	r0, [r3, #8]
    if (MXC_busy_flc(flc)) {
200008a8:	0740      	lsls	r0, r0, #29
    logicAddr = logicAddr & 0xfffffffc;
200008aa:	f021 0103 	bic.w	r1, r1, #3
    if (MXC_busy_flc(flc)) {
200008ae:	d132      	bne.n	20000916 <MXC_FLC_RevA_Write32+0x7e>
    flc->clkdiv = SystemCoreClock / 1000000;
200008b0:	481f      	ldr	r0, [pc, #124]	@ (20000930 <MXC_FLC_RevA_Write32+0x98>)
{
200008b2:	b410      	push	{r4}
    flc->clkdiv = SystemCoreClock / 1000000;
200008b4:	6800      	ldr	r0, [r0, #0]
200008b6:	4c1f      	ldr	r4, [pc, #124]	@ (20000934 <MXC_FLC_RevA_Write32+0x9c>)
200008b8:	fba4 4000 	umull	r4, r0, r4, r0
200008bc:	0c80      	lsrs	r0, r0, #18
200008be:	6058      	str	r0, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200008c0:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200008c2:	0780      	lsls	r0, r0, #30
200008c4:	d41f      	bmi.n	20000906 <MXC_FLC_RevA_Write32+0x6e>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
200008c6:	6898      	ldr	r0, [r3, #8]
200008c8:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
200008cc:	f040 5000 	orr.w	r0, r0, #536870912	@ 0x20000000
200008d0:	6098      	str	r0, [r3, #8]
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WDTH;
200008d2:	6898      	ldr	r0, [r3, #8]
200008d4:	f040 0010 	orr.w	r0, r0, #16
200008d8:	6098      	str	r0, [r3, #8]
    flc->addr = logicAddr;
200008da:	6019      	str	r1, [r3, #0]
    flc->data[0] = data;
200008dc:	631a      	str	r2, [r3, #48]	@ 0x30
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WR;
200008de:	689a      	ldr	r2, [r3, #8]
200008e0:	f042 0201 	orr.w	r2, r2, #1
200008e4:	609a      	str	r2, [r3, #8]
    while ((flc->ctrl & MXC_F_FLC_REVA_CTRL_PEND) != 0) {}
200008e6:	689a      	ldr	r2, [r3, #8]
200008e8:	01d1      	lsls	r1, r2, #7
200008ea:	d4fc      	bmi.n	200008e6 <MXC_FLC_RevA_Write32+0x4e>
    return (flc->ctrl &
200008ec:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
200008ee:	0752      	lsls	r2, r2, #29
200008f0:	d1fc      	bne.n	200008ec <MXC_FLC_RevA_Write32+0x54>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
200008f2:	689a      	ldr	r2, [r3, #8]
200008f4:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
200008f8:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
200008fa:	6a58      	ldr	r0, [r3, #36]	@ 0x24
200008fc:	f010 0002 	ands.w	r0, r0, #2
20000900:	d10c      	bne.n	2000091c <MXC_FLC_RevA_Write32+0x84>
}
20000902:	bc10      	pop	{r4}
20000904:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000906:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000908:	f020 0002 	bic.w	r0, r0, #2
2000090c:	6258      	str	r0, [r3, #36]	@ 0x24
2000090e:	e7da      	b.n	200008c6 <MXC_FLC_RevA_Write32+0x2e>
        return E_BAD_PARAM;
20000910:	f06f 0002 	mvn.w	r0, #2
20000914:	4770      	bx	lr
        return E_BUSY;
20000916:	f06f 0005 	mvn.w	r0, #5
2000091a:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
2000091c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
2000091e:	f022 0202 	bic.w	r2, r2, #2
20000922:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000924:	f06f 0006 	mvn.w	r0, #6
20000928:	e7eb      	b.n	20000902 <MXC_FLC_RevA_Write32+0x6a>
2000092a:	f06f 0006 	mvn.w	r0, #6
}
2000092e:	4770      	bx	lr
20000930:	20001768 	.word	0x20001768
20000934:	431bde83 	.word	0x431bde83

20000938 <MXC_FLC_RevA_Write32Using128>:
{
20000938:	b570      	push	{r4, r5, r6, lr}
2000093a:	4684      	mov	ip, r0
2000093c:	b084      	sub	sp, #16
    uint32_t current_data[4] = { 0, 0, 0, 0 };
2000093e:	2000      	movs	r0, #0
    if (logicAddr & 0x3) {
20000940:	078e      	lsls	r6, r1, #30
    uint32_t current_data[4] = { 0, 0, 0, 0 };
20000942:	e9cd 0000 	strd	r0, r0, [sp]
20000946:	e9cd 0002 	strd	r0, r0, [sp, #8]
    if (logicAddr & 0x3) {
2000094a:	d150      	bne.n	200009ee <MXC_FLC_RevA_Write32Using128+0xb6>
    if ((*(uint32_t *)logicAddr & data) != data) {
2000094c:	6808      	ldr	r0, [r1, #0]
2000094e:	ea32 0000 	bics.w	r0, r2, r0
20000952:	d149      	bne.n	200009e8 <MXC_FLC_RevA_Write32Using128+0xb0>
    return (flc->ctrl &
20000954:	f8dc 4008 	ldr.w	r4, [ip, #8]
    if (MXC_busy_flc(flc)) {
20000958:	0765      	lsls	r5, r4, #29
    logicAddr = logicAddr & 0xfffffff0;
2000095a:	f021 000f 	bic.w	r0, r1, #15
    if (MXC_busy_flc(flc)) {
2000095e:	d149      	bne.n	200009f4 <MXC_FLC_RevA_Write32Using128+0xbc>
    flc->clkdiv = SystemCoreClock / 1000000;
20000960:	4c26      	ldr	r4, [pc, #152]	@ (200009fc <MXC_FLC_RevA_Write32Using128+0xc4>)
20000962:	4d27      	ldr	r5, [pc, #156]	@ (20000a00 <MXC_FLC_RevA_Write32Using128+0xc8>)
20000964:	6824      	ldr	r4, [r4, #0]
20000966:	fba5 5404 	umull	r5, r4, r5, r4
2000096a:	0ca4      	lsrs	r4, r4, #18
2000096c:	f8cc 4004 	str.w	r4, [ip, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000970:	f8dc 4024 	ldr.w	r4, [ip, #36]	@ 0x24
20000974:	07a4      	lsls	r4, r4, #30
20000976:	d425      	bmi.n	200009c4 <MXC_FLC_RevA_Write32Using128+0x8c>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000978:	f8dc 4008 	ldr.w	r4, [ip, #8]
2000097c:	f024 4470 	bic.w	r4, r4, #4026531840	@ 0xf0000000
20000980:	f044 5400 	orr.w	r4, r4, #536870912	@ 0x20000000
20000984:	f8cc 4008 	str.w	r4, [ip, #8]
    for (ptr = (uint32_t *)logicAddr; ptr < (uint32_t *)(logicAddr + 16); ptr++, i++) {
20000988:	f100 0410 	add.w	r4, r0, #16
2000098c:	42a0      	cmp	r0, r4
2000098e:	4686      	mov	lr, r0
20000990:	d20d      	bcs.n	200009ae <MXC_FLC_RevA_Write32Using128+0x76>
20000992:	1d05      	adds	r5, r0, #4
20000994:	42ac      	cmp	r4, r5
20000996:	bf34      	ite	cc
20000998:	2401      	movcc	r4, #1
2000099a:	2404      	movcs	r4, #4
2000099c:	eb00 0484 	add.w	r4, r0, r4, lsl #2
200009a0:	466d      	mov	r5, sp
        current_data[i] = *ptr;
200009a2:	f85e 6b04 	ldr.w	r6, [lr], #4
200009a6:	f845 6b04 	str.w	r6, [r5], #4
    for (ptr = (uint32_t *)logicAddr; ptr < (uint32_t *)(logicAddr + 16); ptr++, i++) {
200009aa:	45a6      	cmp	lr, r4
200009ac:	d1f9      	bne.n	200009a2 <MXC_FLC_RevA_Write32Using128+0x6a>
    if (byte < 4) {
200009ae:	f011 0f0c 	tst.w	r1, #12
    flc->addr = physicalAddr;
200009b2:	f8cc 3000 	str.w	r3, [ip]
    if (byte < 4) {
200009b6:	d10c      	bne.n	200009d2 <MXC_FLC_RevA_Write32Using128+0x9a>
        current_data[0] = data;
200009b8:	9200      	str	r2, [sp, #0]
    return MXC_FLC_Write128(logicAddr, current_data);
200009ba:	4669      	mov	r1, sp
200009bc:	f7ff feb4 	bl	20000728 <MXC_FLC_Write128>
}
200009c0:	b004      	add	sp, #16
200009c2:	bd70      	pop	{r4, r5, r6, pc}
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
200009c4:	f8dc 4024 	ldr.w	r4, [ip, #36]	@ 0x24
200009c8:	f024 0402 	bic.w	r4, r4, #2
200009cc:	f8cc 4024 	str.w	r4, [ip, #36]	@ 0x24
200009d0:	e7d2      	b.n	20000978 <MXC_FLC_RevA_Write32Using128+0x40>
    } else if (byte < 8) {
200009d2:	070b      	lsls	r3, r1, #28
200009d4:	d401      	bmi.n	200009da <MXC_FLC_RevA_Write32Using128+0xa2>
        current_data[1] = data;
200009d6:	9201      	str	r2, [sp, #4]
200009d8:	e7ef      	b.n	200009ba <MXC_FLC_RevA_Write32Using128+0x82>
    byte = (logicAddr & 0xf);
200009da:	f001 010f 	and.w	r1, r1, #15
    } else if (byte < 12) {
200009de:	290b      	cmp	r1, #11
        current_data[2] = data;
200009e0:	bf94      	ite	ls
200009e2:	9202      	strls	r2, [sp, #8]
        current_data[3] = data;
200009e4:	9203      	strhi	r2, [sp, #12]
200009e6:	e7e8      	b.n	200009ba <MXC_FLC_RevA_Write32Using128+0x82>
        return E_BAD_STATE;
200009e8:	f06f 0006 	mvn.w	r0, #6
200009ec:	e7e8      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
        return E_BAD_PARAM;
200009ee:	f06f 0002 	mvn.w	r0, #2
200009f2:	e7e5      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
        return E_BUSY;
200009f4:	f06f 0005 	mvn.w	r0, #5
200009f8:	e7e2      	b.n	200009c0 <MXC_FLC_RevA_Write32Using128+0x88>
200009fa:	bf00      	nop
200009fc:	20001768 	.word	0x20001768
20000a00:	431bde83 	.word	0x431bde83

20000a04 <MXC_FLC_RevA_Write128>:
    if (addr & 0xF) {
20000a04:	070b      	lsls	r3, r1, #28
20000a06:	d13a      	bne.n	20000a7e <MXC_FLC_RevA_Write128+0x7a>
    return (flc->ctrl &
20000a08:	4603      	mov	r3, r0
20000a0a:	6880      	ldr	r0, [r0, #8]
    if (MXC_busy_flc(flc)) {
20000a0c:	0740      	lsls	r0, r0, #29
20000a0e:	d139      	bne.n	20000a84 <MXC_FLC_RevA_Write128+0x80>
    flc->clkdiv = SystemCoreClock / 1000000;
20000a10:	4821      	ldr	r0, [pc, #132]	@ (20000a98 <MXC_FLC_RevA_Write128+0x94>)
{
20000a12:	b410      	push	{r4}
    flc->clkdiv = SystemCoreClock / 1000000;
20000a14:	6800      	ldr	r0, [r0, #0]
20000a16:	4c21      	ldr	r4, [pc, #132]	@ (20000a9c <MXC_FLC_RevA_Write128+0x98>)
20000a18:	fba4 4000 	umull	r4, r0, r4, r0
20000a1c:	0c80      	lsrs	r0, r0, #18
20000a1e:	6058      	str	r0, [r3, #4]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000a20:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a22:	0780      	lsls	r0, r0, #30
20000a24:	d426      	bmi.n	20000a74 <MXC_FLC_RevA_Write128+0x70>
    flc->ctrl = (flc->ctrl & ~MXC_F_FLC_REVA_CTRL_UNLOCK) | MXC_S_FLC_REVA_CTRL_UNLOCK_UNLOCKED;
20000a26:	6898      	ldr	r0, [r3, #8]
20000a28:	f020 4070 	bic.w	r0, r0, #4026531840	@ 0xf0000000
20000a2c:	f040 5000 	orr.w	r0, r0, #536870912	@ 0x20000000
20000a30:	6098      	str	r0, [r3, #8]
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_WDTH;
20000a32:	6898      	ldr	r0, [r3, #8]
20000a34:	f020 0010 	bic.w	r0, r0, #16
20000a38:	6098      	str	r0, [r3, #8]
    flc->addr = addr;
20000a3a:	6019      	str	r1, [r3, #0]
    flc->data[0] = data[0];
20000a3c:	6811      	ldr	r1, [r2, #0]
20000a3e:	6319      	str	r1, [r3, #48]	@ 0x30
    flc->data[1] = data[1];
20000a40:	6851      	ldr	r1, [r2, #4]
20000a42:	6359      	str	r1, [r3, #52]	@ 0x34
    flc->data[2] = data[2];
20000a44:	6891      	ldr	r1, [r2, #8]
20000a46:	6399      	str	r1, [r3, #56]	@ 0x38
    flc->data[3] = data[3];
20000a48:	68d2      	ldr	r2, [r2, #12]
20000a4a:	63da      	str	r2, [r3, #60]	@ 0x3c
    flc->ctrl |= MXC_F_FLC_REVA_CTRL_WR;
20000a4c:	689a      	ldr	r2, [r3, #8]
20000a4e:	f042 0201 	orr.w	r2, r2, #1
20000a52:	609a      	str	r2, [r3, #8]
    while ((flc->ctrl & MXC_F_FLC_REVA_CTRL_PEND) != 0) {}
20000a54:	689a      	ldr	r2, [r3, #8]
20000a56:	01d1      	lsls	r1, r2, #7
20000a58:	d4fc      	bmi.n	20000a54 <MXC_FLC_RevA_Write128+0x50>
    return (flc->ctrl &
20000a5a:	689a      	ldr	r2, [r3, #8]
    while (MXC_busy_flc(flc)) {}
20000a5c:	0752      	lsls	r2, r2, #29
20000a5e:	d1fc      	bne.n	20000a5a <MXC_FLC_RevA_Write128+0x56>
    flc->ctrl &= ~MXC_F_FLC_REVA_CTRL_UNLOCK;
20000a60:	689a      	ldr	r2, [r3, #8]
20000a62:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
20000a66:	609a      	str	r2, [r3, #8]
    if (flc->intr & MXC_F_FLC_REVA_INTR_AF) {
20000a68:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a6a:	f010 0002 	ands.w	r0, r0, #2
20000a6e:	d10c      	bne.n	20000a8a <MXC_FLC_RevA_Write128+0x86>
}
20000a70:	bc10      	pop	{r4}
20000a72:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a74:	6a58      	ldr	r0, [r3, #36]	@ 0x24
20000a76:	f020 0002 	bic.w	r0, r0, #2
20000a7a:	6258      	str	r0, [r3, #36]	@ 0x24
20000a7c:	e7d3      	b.n	20000a26 <MXC_FLC_RevA_Write128+0x22>
        return E_BAD_PARAM;
20000a7e:	f06f 0002 	mvn.w	r0, #2
20000a82:	4770      	bx	lr
        return E_BUSY;
20000a84:	f06f 0005 	mvn.w	r0, #5
}
20000a88:	4770      	bx	lr
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a8a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
20000a8c:	f022 0202 	bic.w	r2, r2, #2
        return E_BAD_STATE;
20000a90:	f06f 0006 	mvn.w	r0, #6
        flc->intr &= ~MXC_F_FLC_REVA_INTR_AF;
20000a94:	625a      	str	r2, [r3, #36]	@ 0x24
        return E_BAD_STATE;
20000a96:	e7eb      	b.n	20000a70 <MXC_FLC_RevA_Write128+0x6c>
20000a98:	20001768 	.word	0x20001768
20000a9c:	431bde83 	.word	0x431bde83

20000aa0 <MXC_FLC_Com_VerifyData>:
// Length is number of 32-bit words
int MXC_FLC_Com_VerifyData(uint32_t address, uint32_t length, uint32_t *data)
{
    volatile uint32_t *ptr;

    for (ptr = (uint32_t *)address; ptr < (((uint32_t *)(address)) + length); ptr++, data++) {
20000aa0:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
20000aa4:	4560      	cmp	r0, ip
20000aa6:	d20d      	bcs.n	20000ac4 <MXC_FLC_Com_VerifyData+0x24>
20000aa8:	3a04      	subs	r2, #4
20000aaa:	e001      	b.n	20000ab0 <MXC_FLC_Com_VerifyData+0x10>
20000aac:	4560      	cmp	r0, ip
20000aae:	d209      	bcs.n	20000ac4 <MXC_FLC_Com_VerifyData+0x24>
        if (*ptr != *data) {
20000ab0:	6801      	ldr	r1, [r0, #0]
20000ab2:	f852 3f04 	ldr.w	r3, [r2, #4]!
20000ab6:	4299      	cmp	r1, r3
    for (ptr = (uint32_t *)address; ptr < (((uint32_t *)(address)) + length); ptr++, data++) {
20000ab8:	f100 0004 	add.w	r0, r0, #4
        if (*ptr != *data) {
20000abc:	d0f6      	beq.n	20000aac <MXC_FLC_Com_VerifyData+0xc>
            return E_BAD_STATE;
20000abe:	f06f 0006 	mvn.w	r0, #6
        }
    }

    return E_NO_ERROR;
}
20000ac2:	4770      	bx	lr
    return E_NO_ERROR;
20000ac4:	2000      	movs	r0, #0
20000ac6:	4770      	bx	lr

20000ac8 <MXC_FLC_Com_Write>:
#else
__attribute__((section(".flashprog")))
#endif
// make sure to disable ICC with ICC_Disable(); before Running this function
int MXC_FLC_Com_Write(uint32_t address, uint32_t length, uint32_t *buffer)
{
20000ac8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    uint32_t current_data_32;
    uint8_t *current_data = (uint8_t *)&current_data_32;
    uint8_t *buffer8 = (uint8_t *)buffer;

    // Align the address to a word boundary and read/write if we have to
    if (address & 0x3) {
20000acc:	f010 0703 	ands.w	r7, r0, #3
{
20000ad0:	b087      	sub	sp, #28
20000ad2:	4604      	mov	r4, r0
20000ad4:	460e      	mov	r6, r1
20000ad6:	4615      	mov	r5, r2
    if (address & 0x3) {
20000ad8:	d00b      	beq.n	20000af2 <MXC_FLC_Com_Write+0x2a>
20000ada:	e012      	b.n	20000b02 <MXC_FLC_Com_Write+0x3a>
        length -= bytes_written;
        buffer8 += bytes_written;
    }

    // Align the address to a 4-word (128bit) boundary
    while ((length >= 4) && ((address & 0xF) != 0)) {
20000adc:	0723      	lsls	r3, r4, #28
20000ade:	d028      	beq.n	20000b32 <MXC_FLC_Com_Write+0x6a>
        memcpy(current_data, buffer8, 4);
20000ae0:	6829      	ldr	r1, [r5, #0]
20000ae2:	9101      	str	r1, [sp, #4]
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000ae4:	4620      	mov	r0, r4
20000ae6:	f000 f867 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
            return err;
        }

        address += 4;
        length -= 4;
20000aea:	3e04      	subs	r6, #4
        address += 4;
20000aec:	3404      	adds	r4, #4
        buffer8 += 4;
20000aee:	3504      	adds	r5, #4
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000af0:	b920      	cbnz	r0, 20000afc <MXC_FLC_Com_Write+0x34>
    while ((length >= 4) && ((address & 0xF) != 0)) {
20000af2:	2e03      	cmp	r6, #3
20000af4:	d8f2      	bhi.n	20000adc <MXC_FLC_Com_Write+0x14>
        address += 4;
        length -= 4;
        buffer8 += 4;
    }

    if (length > 0) {
20000af6:	2e00      	cmp	r6, #0
20000af8:	d143      	bne.n	20000b82 <MXC_FLC_Com_Write+0xba>
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
            return err;
        }
    }

    return E_NO_ERROR;
20000afa:	4630      	mov	r0, r6
}
20000afc:	b007      	add	sp, #28
20000afe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        memcpy(current_data, (void *)(address & (~0x3)), 4);
20000b02:	f020 0903 	bic.w	r9, r0, #3
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b06:	ab01      	add	r3, sp, #4
        bytes_written = 4 - (address & 0x3);
20000b08:	f1c7 0804 	rsb	r8, r7, #4
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b0c:	19d8      	adds	r0, r3, r7
20000b0e:	4629      	mov	r1, r5
        memcpy(current_data, (void *)(address & (~0x3)), 4);
20000b10:	f8d9 3000 	ldr.w	r3, [r9]
20000b14:	9301      	str	r3, [sp, #4]
        memcpy(&current_data[4 - bytes_written], buffer8, bytes_written);
20000b16:	4642      	mov	r2, r8
20000b18:	f000 f84a 	bl	20000bb0 <__memcpy_veneer>
        if ((err = MXC_FLC_Write32(address - (address % 4), current_data_32)) != E_NO_ERROR) {
20000b1c:	9901      	ldr	r1, [sp, #4]
20000b1e:	4648      	mov	r0, r9
20000b20:	f000 f84a 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
20000b24:	2800      	cmp	r0, #0
20000b26:	d1e9      	bne.n	20000afc <MXC_FLC_Com_Write+0x34>
        address += bytes_written;
20000b28:	3e04      	subs	r6, #4
20000b2a:	4444      	add	r4, r8
        length -= bytes_written;
20000b2c:	443e      	add	r6, r7
        buffer8 += bytes_written;
20000b2e:	4445      	add	r5, r8
20000b30:	e7df      	b.n	20000af2 <MXC_FLC_Com_Write+0x2a>
    if (length >= 16) {
20000b32:	2e0f      	cmp	r6, #15
20000b34:	d902      	bls.n	20000b3c <MXC_FLC_Com_Write+0x74>
20000b36:	e010      	b.n	20000b5a <MXC_FLC_Com_Write+0x92>
    while (length >= 4) {
20000b38:	2e03      	cmp	r6, #3
20000b3a:	d9dc      	bls.n	20000af6 <MXC_FLC_Com_Write+0x2e>
        memcpy(current_data, buffer8, 4);
20000b3c:	6829      	ldr	r1, [r5, #0]
20000b3e:	9101      	str	r1, [sp, #4]
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b40:	4620      	mov	r0, r4
20000b42:	f000 f839 	bl	20000bb8 <__MXC_FLC_Write32_veneer>
        length -= 4;
20000b46:	3e04      	subs	r6, #4
        address += 4;
20000b48:	3404      	adds	r4, #4
        buffer8 += 4;
20000b4a:	3504      	adds	r5, #4
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b4c:	2800      	cmp	r0, #0
20000b4e:	d0f3      	beq.n	20000b38 <MXC_FLC_Com_Write+0x70>
}
20000b50:	b007      	add	sp, #28
20000b52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        while (length >= 16) {
20000b56:	2e0f      	cmp	r6, #15
20000b58:	d9ee      	bls.n	20000b38 <MXC_FLC_Com_Write+0x70>
            memcpy(buff128, buffer8, 16);
20000b5a:	6828      	ldr	r0, [r5, #0]
20000b5c:	6869      	ldr	r1, [r5, #4]
20000b5e:	68aa      	ldr	r2, [r5, #8]
20000b60:	68eb      	ldr	r3, [r5, #12]
20000b62:	f10d 0c08 	add.w	ip, sp, #8
20000b66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
            if ((err = MXC_FLC_Write128(address, buff128)) != E_NO_ERROR) {
20000b6a:	4620      	mov	r0, r4
20000b6c:	a902      	add	r1, sp, #8
20000b6e:	f7ff fddb 	bl	20000728 <MXC_FLC_Write128>
            length -= 16;
20000b72:	3e10      	subs	r6, #16
            address += 16;
20000b74:	3410      	adds	r4, #16
            buffer8 += 16;
20000b76:	3510      	adds	r5, #16
            if ((err = MXC_FLC_Write128(address, buff128)) != E_NO_ERROR) {
20000b78:	2800      	cmp	r0, #0
20000b7a:	d0ec      	beq.n	20000b56 <MXC_FLC_Com_Write+0x8e>
}
20000b7c:	b007      	add	sp, #28
20000b7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        memcpy(current_data, (void *)(address), 4);
20000b82:	6823      	ldr	r3, [r4, #0]
20000b84:	9301      	str	r3, [sp, #4]
        memcpy(current_data, buffer8, length);
20000b86:	4629      	mov	r1, r5
20000b88:	4632      	mov	r2, r6
20000b8a:	a801      	add	r0, sp, #4
20000b8c:	f000 f810 	bl	20000bb0 <__memcpy_veneer>
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b90:	9901      	ldr	r1, [sp, #4]
20000b92:	4620      	mov	r0, r4
}
20000b94:	b007      	add	sp, #28
20000b96:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
        if ((err = MXC_FLC_Write32(address, current_data_32)) != E_NO_ERROR) {
20000b9a:	f000 b80d 	b.w	20000bb8 <__MXC_FLC_Write32_veneer>
20000b9e:	bf00      	nop

20000ba0 <MXC_FLC_Com_Read>:
#pragma section = ".flashprog"
#else
__attribute__((section(".flashprog")))
#endif
void MXC_FLC_Com_Read(int address, void *buffer, int len)
{
20000ba0:	4603      	mov	r3, r0
    memcpy(buffer, (void *)address, len);
20000ba2:	4608      	mov	r0, r1
20000ba4:	4619      	mov	r1, r3
20000ba6:	f000 b803 	b.w	20000bb0 <__memcpy_veneer>
20000baa:	bf00      	nop
20000bac:	0000      	movs	r0, r0
	...

20000bb0 <__memcpy_veneer>:
20000bb0:	f85f f000 	ldr.w	pc, [pc]	@ 20000bb4 <__memcpy_veneer+0x4>
20000bb4:	100184e1 	.word	0x100184e1

20000bb8 <__MXC_FLC_Write32_veneer>:
20000bb8:	f85f f000 	ldr.w	pc, [pc]	@ 20000bbc <__MXC_FLC_Write32_veneer+0x4>
20000bbc:	10012229 	.word	0x10012229

20000bc0 <__init_array_start>:
20000bc0:	100187f1 	.word	0x100187f1

20000bc4 <__frame_dummy_init_array_entry>:
20000bc4:	1000e271                                q...

20000bc8 <__do_global_dtors_aux_fini_array_entry>:
20000bc8:	1000e249                                I...
