
/Users/spoiler/Documents/GitHub/CAT-ectf-2024/component/build/max78000.elf:     file format elf32-littlearm


Disassembly of section .text:

1000e000 <__isr_vector>:
1000e000:	20020000 	.word	0x20020000
1000e004:	1000e969 	.word	0x1000e969
1000e008:	1000e79d 	.word	0x1000e79d
1000e00c:	1000e9a7 	.word	0x1000e9a7
1000e010:	1000e9a9 	.word	0x1000e9a9
1000e014:	1000e9ab 	.word	0x1000e9ab
1000e018:	1000e9ad 	.word	0x1000e9ad
	...
1000e02c:	1000e9af 	.word	0x1000e9af
1000e030:	1000e9b1 	.word	0x1000e9b1
1000e034:	00000000 	.word	0x00000000
1000e038:	1000e9b3 	.word	0x1000e9b3
1000e03c:	1000e9b5 	.word	0x1000e9b5
1000e040:	1000e9b9 	.word	0x1000e9b9
1000e044:	1000e9bb 	.word	0x1000e9bb
1000e048:	1000e9bd 	.word	0x1000e9bd
1000e04c:	1000e9bf 	.word	0x1000e9bf
1000e050:	1000e9c1 	.word	0x1000e9c1
1000e054:	1000e9c3 	.word	0x1000e9c3
1000e058:	1000e9c5 	.word	0x1000e9c5
1000e05c:	1000e9c7 	.word	0x1000e9c7
1000e060:	1000e9c9 	.word	0x1000e9c9
1000e064:	1000e9cb 	.word	0x1000e9cb
1000e068:	1000e9cd 	.word	0x1000e9cd
1000e06c:	1000e9cf 	.word	0x1000e9cf
1000e070:	1000e9d1 	.word	0x1000e9d1
1000e074:	1000e9d3 	.word	0x1000e9d3
1000e078:	1000e9d5 	.word	0x1000e9d5
1000e07c:	1000e9d7 	.word	0x1000e9d7
1000e080:	1000e9d9 	.word	0x1000e9d9
1000e084:	1000e9db 	.word	0x1000e9db
1000e088:	1000e9dd 	.word	0x1000e9dd
1000e08c:	1000e9df 	.word	0x1000e9df
1000e090:	1000e9e1 	.word	0x1000e9e1
1000e094:	1000e9e3 	.word	0x1000e9e3
1000e098:	1000e9e5 	.word	0x1000e9e5
1000e09c:	1000e9e7 	.word	0x1000e9e7
1000e0a0:	1000e721 	.word	0x1000e721
1000e0a4:	1000e729 	.word	0x1000e729
1000e0a8:	1000e9ed 	.word	0x1000e9ed
1000e0ac:	1000e9ef 	.word	0x1000e9ef
1000e0b0:	1000e9f1 	.word	0x1000e9f1
1000e0b4:	1000e9f3 	.word	0x1000e9f3
1000e0b8:	1000e9f5 	.word	0x1000e9f5
1000e0bc:	1000e9f7 	.word	0x1000e9f7
1000e0c0:	1000e9f9 	.word	0x1000e9f9
1000e0c4:	1000e9fb 	.word	0x1000e9fb
1000e0c8:	1000e9fd 	.word	0x1000e9fd
1000e0cc:	1000e9ff 	.word	0x1000e9ff
1000e0d0:	1000ea01 	.word	0x1000ea01
1000e0d4:	1000ea03 	.word	0x1000ea03
1000e0d8:	1000ea05 	.word	0x1000ea05
1000e0dc:	1000ea07 	.word	0x1000ea07
1000e0e0:	1000ea09 	.word	0x1000ea09
1000e0e4:	1000ea0b 	.word	0x1000ea0b
1000e0e8:	1000ea0d 	.word	0x1000ea0d
1000e0ec:	1000ea0f 	.word	0x1000ea0f
1000e0f0:	1000ea11 	.word	0x1000ea11
1000e0f4:	1000ea13 	.word	0x1000ea13
1000e0f8:	1000ea15 	.word	0x1000ea15
1000e0fc:	1000ea17 	.word	0x1000ea17
1000e100:	1000ea19 	.word	0x1000ea19
1000e104:	1000ea1b 	.word	0x1000ea1b
1000e108:	1000ea1d 	.word	0x1000ea1d
1000e10c:	1000ea1f 	.word	0x1000ea1f
1000e110:	1000ea21 	.word	0x1000ea21
1000e114:	1000ea23 	.word	0x1000ea23
1000e118:	1000ea25 	.word	0x1000ea25
1000e11c:	1000ea27 	.word	0x1000ea27
1000e120:	1000ea29 	.word	0x1000ea29
1000e124:	1000ea2b 	.word	0x1000ea2b
1000e128:	1000ea2d 	.word	0x1000ea2d
1000e12c:	1000ea2f 	.word	0x1000ea2f
1000e130:	1000ea31 	.word	0x1000ea31
1000e134:	1000ea33 	.word	0x1000ea33
1000e138:	1000ea35 	.word	0x1000ea35
1000e13c:	1000ea37 	.word	0x1000ea37
1000e140:	1000ea39 	.word	0x1000ea39
1000e144:	1000ea3b 	.word	0x1000ea3b
1000e148:	1000ea3d 	.word	0x1000ea3d
1000e14c:	1000ea3f 	.word	0x1000ea3f
1000e150:	1000ea41 	.word	0x1000ea41
1000e154:	1000ea43 	.word	0x1000ea43
1000e158:	1000ea45 	.word	0x1000ea45
1000e15c:	1000ea47 	.word	0x1000ea47
1000e160:	1000ea49 	.word	0x1000ea49
1000e164:	1000ea4b 	.word	0x1000ea4b
1000e168:	1000ea4d 	.word	0x1000ea4d
1000e16c:	1000ea4f 	.word	0x1000ea4f
1000e170:	1000ea51 	.word	0x1000ea51
1000e174:	1000ea53 	.word	0x1000ea53
1000e178:	1000ea55 	.word	0x1000ea55
1000e17c:	1000ea57 	.word	0x1000ea57
1000e180:	1000ea59 	.word	0x1000ea59
1000e184:	1000ea5b 	.word	0x1000ea5b
1000e188:	1000ea5d 	.word	0x1000ea5d
1000e18c:	1000ea5f 	.word	0x1000ea5f
1000e190:	1000ea61 	.word	0x1000ea61
1000e194:	1000ea63 	.word	0x1000ea63
1000e198:	1000ea65 	.word	0x1000ea65
1000e19c:	1000ea67 	.word	0x1000ea67
1000e1a0:	1000ea69 	.word	0x1000ea69
1000e1a4:	1000ea6b 	.word	0x1000ea6b
1000e1a8:	1000ea6d 	.word	0x1000ea6d
1000e1ac:	1000ea6f 	.word	0x1000ea6f
1000e1b0:	1000ea71 	.word	0x1000ea71
1000e1b4:	1000ea73 	.word	0x1000ea73
1000e1b8:	1000ea75 	.word	0x1000ea75
1000e1bc:	1000ea77 	.word	0x1000ea77
1000e1c0:	1000ea79 	.word	0x1000ea79
1000e1c4:	1000ea7b 	.word	0x1000ea7b
1000e1c8:	1000ea7d 	.word	0x1000ea7d
1000e1cc:	1000ea7f 	.word	0x1000ea7f
1000e1d0:	1000ea81 	.word	0x1000ea81
1000e1d4:	1000ea83 	.word	0x1000ea83
1000e1d8:	1000ea85 	.word	0x1000ea85
1000e1dc:	1000ea87 	.word	0x1000ea87
	...

1000e200 <firmware_startup>:
1000e200:	4800      	ldr	r0, [pc, #0]	@ (1000e204 <firmware_startup+0x4>)
1000e202:	4780      	blx	r0
1000e204:	1000e969 	.word	0x1000e969

1000e208 <deregister_tm_clones>:
1000e208:	4803      	ldr	r0, [pc, #12]	@ (1000e218 <deregister_tm_clones+0x10>)
1000e20a:	4b04      	ldr	r3, [pc, #16]	@ (1000e21c <deregister_tm_clones+0x14>)
1000e20c:	4283      	cmp	r3, r0
1000e20e:	d002      	beq.n	1000e216 <deregister_tm_clones+0xe>
1000e210:	4b03      	ldr	r3, [pc, #12]	@ (1000e220 <deregister_tm_clones+0x18>)
1000e212:	b103      	cbz	r3, 1000e216 <deregister_tm_clones+0xe>
1000e214:	4718      	bx	r3
1000e216:	4770      	bx	lr
1000e218:	200006f8 	.word	0x200006f8
1000e21c:	200006f8 	.word	0x200006f8
1000e220:	00000000 	.word	0x00000000

1000e224 <register_tm_clones>:
1000e224:	4805      	ldr	r0, [pc, #20]	@ (1000e23c <register_tm_clones+0x18>)
1000e226:	4b06      	ldr	r3, [pc, #24]	@ (1000e240 <register_tm_clones+0x1c>)
1000e228:	1a1b      	subs	r3, r3, r0
1000e22a:	0fd9      	lsrs	r1, r3, #31
1000e22c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
1000e230:	1049      	asrs	r1, r1, #1
1000e232:	d002      	beq.n	1000e23a <register_tm_clones+0x16>
1000e234:	4b03      	ldr	r3, [pc, #12]	@ (1000e244 <register_tm_clones+0x20>)
1000e236:	b103      	cbz	r3, 1000e23a <register_tm_clones+0x16>
1000e238:	4718      	bx	r3
1000e23a:	4770      	bx	lr
1000e23c:	200006f8 	.word	0x200006f8
1000e240:	200006f8 	.word	0x200006f8
1000e244:	00000000 	.word	0x00000000

1000e248 <__do_global_dtors_aux>:
1000e248:	b510      	push	{r4, lr}
1000e24a:	4c06      	ldr	r4, [pc, #24]	@ (1000e264 <__do_global_dtors_aux+0x1c>)
1000e24c:	7823      	ldrb	r3, [r4, #0]
1000e24e:	b943      	cbnz	r3, 1000e262 <__do_global_dtors_aux+0x1a>
1000e250:	f7ff ffda 	bl	1000e208 <deregister_tm_clones>
1000e254:	4b04      	ldr	r3, [pc, #16]	@ (1000e268 <__do_global_dtors_aux+0x20>)
1000e256:	b113      	cbz	r3, 1000e25e <__do_global_dtors_aux+0x16>
1000e258:	4804      	ldr	r0, [pc, #16]	@ (1000e26c <__do_global_dtors_aux+0x24>)
1000e25a:	f3af 8000 	nop.w
1000e25e:	2301      	movs	r3, #1
1000e260:	7023      	strb	r3, [r4, #0]
1000e262:	bd10      	pop	{r4, pc}
1000e264:	20000800 	.word	0x20000800
1000e268:	00000000 	.word	0x00000000
1000e26c:	10019598 	.word	0x10019598

1000e270 <frame_dummy>:
1000e270:	b508      	push	{r3, lr}
1000e272:	4b05      	ldr	r3, [pc, #20]	@ (1000e288 <frame_dummy+0x18>)
1000e274:	b11b      	cbz	r3, 1000e27e <frame_dummy+0xe>
1000e276:	4905      	ldr	r1, [pc, #20]	@ (1000e28c <frame_dummy+0x1c>)
1000e278:	4805      	ldr	r0, [pc, #20]	@ (1000e290 <frame_dummy+0x20>)
1000e27a:	f3af 8000 	nop.w
1000e27e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
1000e282:	f7ff bfcf 	b.w	1000e224 <register_tm_clones>
1000e286:	bf00      	nop
1000e288:	00000000 	.word	0x00000000
1000e28c:	20000804 	.word	0x20000804
1000e290:	10019598 	.word	0x10019598

1000e294 <board_link_init>:
 * @return int: negative if error, zero if successful
 *
 * Initialized the underlying i2c_simple interface
*/
int board_link_init(i2c_addr_t addr) {
    return i2c_simple_peripheral_init(addr);
1000e294:	f000 b9f6 	b.w	1000e684 <i2c_simple_peripheral_init>

1000e298 <component_id_to_i2c_addr>:
 * 
 * @return i2c_addr_t, i2c address
*/
i2c_addr_t component_id_to_i2c_addr(uint32_t component_id) {
    return (uint8_t) component_id & COMPONENT_ADDR_MASK;
}
1000e298:	b2c0      	uxtb	r0, r0
1000e29a:	4770      	bx	lr

1000e29c <send_packet_and_ack>:
 * @param message: uint8_t*, message to be sent
 * 
 * This function utilizes the simple_i2c_peripheral library to
 * send a packet to the AP and wait for the message to be received
*/
void send_packet_and_ack(uint8_t len, uint8_t* packet) {
1000e29c:	b510      	push	{r4, lr}
    I2C_REGS[TRANSMIT_LEN][0] = len;
1000e29e:	4c09      	ldr	r4, [pc, #36]	@ (1000e2c4 <send_packet_and_ack+0x28>)
1000e2a0:	6963      	ldr	r3, [r4, #20]
1000e2a2:	7018      	strb	r0, [r3, #0]
void send_packet_and_ack(uint8_t len, uint8_t* packet) {
1000e2a4:	4602      	mov	r2, r0
    memcpy((void*)I2C_REGS[TRANSMIT], (void*)packet, len);
1000e2a6:	68e0      	ldr	r0, [r4, #12]
1000e2a8:	f005 fffa 	bl	100142a0 <memcpy>
    I2C_REGS[TRANSMIT_DONE][0] = false;
1000e2ac:	6923      	ldr	r3, [r4, #16]
1000e2ae:	2200      	movs	r2, #0
1000e2b0:	701a      	strb	r2, [r3, #0]

    // Wait for ack from AP
    while(!I2C_REGS[TRANSMIT_DONE][0]);
1000e2b2:	6922      	ldr	r2, [r4, #16]
1000e2b4:	7813      	ldrb	r3, [r2, #0]
1000e2b6:	2b00      	cmp	r3, #0
1000e2b8:	d0fc      	beq.n	1000e2b4 <send_packet_and_ack+0x18>
    I2C_REGS[RECEIVE_DONE][0] = false;
1000e2ba:	6863      	ldr	r3, [r4, #4]
1000e2bc:	2200      	movs	r2, #0
1000e2be:	701a      	strb	r2, [r3, #0]
}
1000e2c0:	bd10      	pop	{r4, pc}
1000e2c2:	bf00      	nop
1000e2c4:	20000018 	.word	0x20000018

1000e2c8 <wait_and_receive_packet>:
 * @param packet: uint8_t*, message received
 * 
 * This function waits for a new message to be available from the AP,
 * once the message is available it is returned in the buffer pointer to by packet 
*/
uint8_t wait_and_receive_packet(uint8_t* packet) {
1000e2c8:	b510      	push	{r4, lr}
    while(!I2C_REGS[RECEIVE_DONE][0]);
1000e2ca:	4907      	ldr	r1, [pc, #28]	@ (1000e2e8 <wait_and_receive_packet+0x20>)
1000e2cc:	684a      	ldr	r2, [r1, #4]
1000e2ce:	7813      	ldrb	r3, [r2, #0]
1000e2d0:	2b00      	cmp	r3, #0
1000e2d2:	d0fc      	beq.n	1000e2ce <wait_and_receive_packet+0x6>

    uint8_t len = I2C_REGS[RECEIVE_LEN][0];
1000e2d4:	688b      	ldr	r3, [r1, #8]
    memcpy(packet, (void*)I2C_REGS[RECEIVE], len);
1000e2d6:	6809      	ldr	r1, [r1, #0]
    uint8_t len = I2C_REGS[RECEIVE_LEN][0];
1000e2d8:	781c      	ldrb	r4, [r3, #0]
1000e2da:	b2e4      	uxtb	r4, r4
    memcpy(packet, (void*)I2C_REGS[RECEIVE], len);
1000e2dc:	4622      	mov	r2, r4
1000e2de:	f005 ffdf 	bl	100142a0 <memcpy>

    return len;
}
1000e2e2:	4620      	mov	r0, r4
1000e2e4:	bd10      	pop	{r4, pc}
1000e2e6:	bf00      	nop
1000e2e8:	20000018 	.word	0x20000018

1000e2ec <boot>:

/******************************* FUNCTION DEFINITIONS *********************************/

// Example boot sequence
// Your design does not need to change this
void boot() {
1000e2ec:	b508      	push	{r3, lr}
    #ifdef POST_BOOT
        POST_BOOT
    #else
    // Anything after this macro can be changed by your design
    // but will not be run on provisioned systems
    LED_Off(LED1);
1000e2ee:	2000      	movs	r0, #0
1000e2f0:	f000 fafe 	bl	1000e8f0 <LED_Off>
    LED_Off(LED2);
1000e2f4:	2001      	movs	r0, #1
1000e2f6:	f000 fafb 	bl	1000e8f0 <LED_Off>
    LED_Off(LED3);
1000e2fa:	2002      	movs	r0, #2
1000e2fc:	f000 faf8 	bl	1000e8f0 <LED_Off>
    // LED loop to show that boot occurred
    while (1) {
        LED_On(LED1);
        MXC_Delay(500000);
1000e300:	4c12      	ldr	r4, [pc, #72]	@ (1000e34c <boot+0x60>)
        LED_On(LED1);
1000e302:	2000      	movs	r0, #0
1000e304:	f000 fad4 	bl	1000e8b0 <LED_On>
        MXC_Delay(500000);
1000e308:	4620      	mov	r0, r4
1000e30a:	f000 fcef 	bl	1000ecec <MXC_Delay>
        LED_On(LED2);
1000e30e:	2001      	movs	r0, #1
1000e310:	f000 face 	bl	1000e8b0 <LED_On>
        MXC_Delay(500000);
1000e314:	4620      	mov	r0, r4
1000e316:	f000 fce9 	bl	1000ecec <MXC_Delay>
        LED_On(LED3);
1000e31a:	2002      	movs	r0, #2
1000e31c:	f000 fac8 	bl	1000e8b0 <LED_On>
        MXC_Delay(500000);
1000e320:	4620      	mov	r0, r4
1000e322:	f000 fce3 	bl	1000ecec <MXC_Delay>
        LED_Off(LED1);
1000e326:	2000      	movs	r0, #0
1000e328:	f000 fae2 	bl	1000e8f0 <LED_Off>
        MXC_Delay(500000);
1000e32c:	4620      	mov	r0, r4
1000e32e:	f000 fcdd 	bl	1000ecec <MXC_Delay>
        LED_Off(LED2);
1000e332:	2001      	movs	r0, #1
1000e334:	f000 fadc 	bl	1000e8f0 <LED_Off>
        MXC_Delay(500000);
1000e338:	4620      	mov	r0, r4
1000e33a:	f000 fcd7 	bl	1000ecec <MXC_Delay>
        LED_Off(LED3);
1000e33e:	2002      	movs	r0, #2
1000e340:	f000 fad6 	bl	1000e8f0 <LED_Off>
        MXC_Delay(500000);
1000e344:	4620      	mov	r0, r4
1000e346:	f000 fcd1 	bl	1000ecec <MXC_Delay>
    while (1) {
1000e34a:	e7da      	b.n	1000e302 <boot+0x16>
1000e34c:	0007a120 	.word	0x0007a120

1000e350 <process_boot>:

void process_boot() {
    // The AP requested a boot. Set `component_boot` for the main loop and
    // respond with the boot message
    uint8_t len = strlen(COMPONENT_BOOT_MSG) + 1;
    memcpy((void*)transmit_buffer, COMPONENT_BOOT_MSG, len);
1000e350:	4b09      	ldr	r3, [pc, #36]	@ (1000e378 <process_boot+0x28>)
1000e352:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
void process_boot() {
1000e356:	b510      	push	{r4, lr}
    memcpy((void*)transmit_buffer, COMPONENT_BOOT_MSG, len);
1000e358:	4c08      	ldr	r4, [pc, #32]	@ (1000e37c <process_boot+0x2c>)
1000e35a:	4623      	mov	r3, r4
1000e35c:	c303      	stmia	r3!, {r0, r1}
1000e35e:	f823 2b02 	strh.w	r2, [r3], #2
1000e362:	ea4f 4c12 	mov.w	ip, r2, lsr #16
    send_packet_and_ack(len, transmit_buffer);
1000e366:	4621      	mov	r1, r4
1000e368:	200b      	movs	r0, #11
    memcpy((void*)transmit_buffer, COMPONENT_BOOT_MSG, len);
1000e36a:	f883 c000 	strb.w	ip, [r3]
    send_packet_and_ack(len, transmit_buffer);
1000e36e:	f7ff ff95 	bl	1000e29c <send_packet_and_ack>
    // Call the boot function
    boot();
1000e372:	f7ff ffbb 	bl	1000e2ec <boot>
1000e376:	bf00      	nop
1000e378:	10018eac 	.word	0x10018eac
1000e37c:	2000081c 	.word	0x2000081c

1000e380 <component_process_cmd>:
void component_process_cmd() {
1000e380:	b510      	push	{r4, lr}
    switch (command->opcode) {
1000e382:	4b15      	ldr	r3, [pc, #84]	@ (1000e3d8 <component_process_cmd+0x58>)
1000e384:	7819      	ldrb	r1, [r3, #0]
1000e386:	1e4b      	subs	r3, r1, #1
void component_process_cmd() {
1000e388:	b082      	sub	sp, #8
    switch (command->opcode) {
1000e38a:	2b03      	cmp	r3, #3
1000e38c:	d81d      	bhi.n	1000e3ca <component_process_cmd+0x4a>
1000e38e:	e8df f003 	tbb	[pc, r3]
1000e392:	0202      	.short	0x0202
1000e394:	0b1a      	.short	0x0b1a
}

void process_validate() {
    // The AP requested a validation. Respond with the Component ID
    validate_message* packet = (validate_message*) transmit_buffer;
    packet->component_id = COMPONENT_ID;
1000e396:	4911      	ldr	r1, [pc, #68]	@ (1000e3dc <component_process_cmd+0x5c>)
1000e398:	4b11      	ldr	r3, [pc, #68]	@ (1000e3e0 <component_process_cmd+0x60>)
1000e39a:	600b      	str	r3, [r1, #0]
    send_packet_and_ack(sizeof(validate_message), transmit_buffer);
1000e39c:	2004      	movs	r0, #4
}
1000e39e:	b002      	add	sp, #8
1000e3a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}

void process_attest() {
    // The AP requested attestation. Respond with the attestation data
    uint8_t len = sprintf((char*)transmit_buffer, "LOC>%s\nDATE>%s\nCUST>%s\n",
                ATTESTATION_LOC, ATTESTATION_DATE, ATTESTATION_CUSTOMER) + 1;
    send_packet_and_ack(len, transmit_buffer);
1000e3a4:	f7ff bf7a 	b.w	1000e29c <send_packet_and_ack>
    uint8_t len = sprintf((char*)transmit_buffer, "LOC>%s\nDATE>%s\nCUST>%s\n",
1000e3a8:	4c0e      	ldr	r4, [pc, #56]	@ (1000e3e4 <component_process_cmd+0x64>)
1000e3aa:	490f      	ldr	r1, [pc, #60]	@ (1000e3e8 <component_process_cmd+0x68>)
1000e3ac:	4b0f      	ldr	r3, [pc, #60]	@ (1000e3ec <component_process_cmd+0x6c>)
1000e3ae:	4a10      	ldr	r2, [pc, #64]	@ (1000e3f0 <component_process_cmd+0x70>)
1000e3b0:	9400      	str	r4, [sp, #0]
1000e3b2:	480a      	ldr	r0, [pc, #40]	@ (1000e3dc <component_process_cmd+0x5c>)
1000e3b4:	f005 fa44 	bl	10013840 <sprintf>
    send_packet_and_ack(len, transmit_buffer);
1000e3b8:	4908      	ldr	r1, [pc, #32]	@ (1000e3dc <component_process_cmd+0x5c>)
1000e3ba:	2024      	movs	r0, #36	@ 0x24
}
1000e3bc:	b002      	add	sp, #8
1000e3be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    send_packet_and_ack(len, transmit_buffer);
1000e3c2:	f7ff bf6b 	b.w	1000e29c <send_packet_and_ack>
        process_boot();
1000e3c6:	f7ff ffc3 	bl	1000e350 <process_boot>
        printf("Error: Unrecognized command received %d\n", command->opcode);
1000e3ca:	480a      	ldr	r0, [pc, #40]	@ (1000e3f4 <component_process_cmd+0x74>)
}
1000e3cc:	b002      	add	sp, #8
1000e3ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        printf("Error: Unrecognized command received %d\n", command->opcode);
1000e3d2:	f002 b833 	b.w	1001043c <printf>
1000e3d6:	bf00      	nop
1000e3d8:	2000085c 	.word	0x2000085c
1000e3dc:	2000081c 	.word	0x2000081c
1000e3e0:	11111112 	.word	0x11111112
1000e3e4:	10018ee4 	.word	0x10018ee4
1000e3e8:	10018ecc 	.word	0x10018ecc
1000e3ec:	10018eb8 	.word	0x10018eb8
1000e3f0:	10018ec4 	.word	0x10018ec4
1000e3f4:	10018eec 	.word	0x10018eec

1000e3f8 <main>:
}

/*********************************** MAIN *************************************/

int main(void) {
1000e3f8:	b510      	push	{r4, lr}
  \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
1000e3fa:	b662      	cpsie	i
    //comp started
    // Enable Global Interrupts
    __enable_irq();
    
    // Initialize Component
    i2c_addr_t addr = component_id_to_i2c_addr(COMPONENT_ID);
1000e3fc:	4807      	ldr	r0, [pc, #28]	@ (1000e41c <main+0x24>)
    board_link_init(addr);
    
    LED_On(LED2);

    while (1) {
        wait_and_receive_packet(receive_buffer);
1000e3fe:	4c08      	ldr	r4, [pc, #32]	@ (1000e420 <main+0x28>)
    i2c_addr_t addr = component_id_to_i2c_addr(COMPONENT_ID);
1000e400:	f7ff ff4a 	bl	1000e298 <component_id_to_i2c_addr>
    board_link_init(addr);
1000e404:	f7ff ff46 	bl	1000e294 <board_link_init>
    LED_On(LED2);
1000e408:	2001      	movs	r0, #1
1000e40a:	f000 fa51 	bl	1000e8b0 <LED_On>
        wait_and_receive_packet(receive_buffer);
1000e40e:	4620      	mov	r0, r4
1000e410:	f7ff ff5a 	bl	1000e2c8 <wait_and_receive_packet>

        component_process_cmd();
1000e414:	f7ff ffb4 	bl	1000e380 <component_process_cmd>
    while (1) {
1000e418:	e7f9      	b.n	1000e40e <main+0x16>
1000e41a:	bf00      	nop
1000e41c:	11111112 	.word	0x11111112
1000e420:	2000085c 	.word	0x2000085c

1000e424 <i2c_simple_isr>:
    static int READ_INDEX = 0;
    static int WRITE_INDEX = 0;
    static ECTF_I2C_REGS ACTIVE_REG = RECEIVE;

    // Read interrupt flags
    uint32_t Flags = I2C_INTERFACE->intfl0;
1000e424:	4890      	ldr	r0, [pc, #576]	@ (1000e668 <i2c_simple_isr+0x244>)
void i2c_simple_isr (void) {
1000e426:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t Flags = I2C_INTERFACE->intfl0;
1000e428:	6884      	ldr	r4, [r0, #8]
    
    // Transaction over interrupt
    if (Flags & MXC_F_I2C_INTFL0_STOP) {
1000e42a:	0663      	lsls	r3, r4, #25
1000e42c:	d549      	bpl.n	1000e4c2 <i2c_simple_isr+0x9e>
        
        // Ready any remaining data
        if (WRITE_START == true) {
1000e42e:	4e8f      	ldr	r6, [pc, #572]	@ (1000e66c <i2c_simple_isr+0x248>)
1000e430:	7833      	ldrb	r3, [r6, #0]
1000e432:	2b00      	cmp	r3, #0
1000e434:	f040 80cb 	bne.w	1000e5ce <i2c_simple_isr+0x1aa>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
            WRITE_START = false;
        }
        if (ACTIVE_REG <= MAX_REG) {
1000e438:	4d8d      	ldr	r5, [pc, #564]	@ (1000e670 <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e43a:	488b      	ldr	r0, [pc, #556]	@ (1000e668 <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e43c:	782b      	ldrb	r3, [r5, #0]
1000e43e:	2b05      	cmp	r3, #5
1000e440:	d81b      	bhi.n	1000e47a <i2c_simple_isr+0x56>
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e442:	f000 ffd3 	bl	1000f3ec <MXC_I2C_GetRXFIFOAvailable>
            if (available < (I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX)) {
1000e446:	7829      	ldrb	r1, [r5, #0]
1000e448:	4b8a      	ldr	r3, [pc, #552]	@ (1000e674 <i2c_simple_isr+0x250>)
1000e44a:	4d8b      	ldr	r5, [pc, #556]	@ (1000e678 <i2c_simple_isr+0x254>)
1000e44c:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1000e450:	682b      	ldr	r3, [r5, #0]
1000e452:	1ad2      	subs	r2, r2, r3
1000e454:	4282      	cmp	r2, r0
1000e456:	f340 80da 	ble.w	1000e60e <i2c_simple_isr+0x1ea>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e45a:	4a88      	ldr	r2, [pc, #544]	@ (1000e67c <i2c_simple_isr+0x258>)
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e45c:	4882      	ldr	r0, [pc, #520]	@ (1000e668 <i2c_simple_isr+0x244>)
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e45e:	f852 7021 	ldr.w	r7, [r2, r1, lsl #2]
1000e462:	441f      	add	r7, r3
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e464:	f000 ffc2 	bl	1000f3ec <MXC_I2C_GetRXFIFOAvailable>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e468:	4639      	mov	r1, r7
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e46a:	4602      	mov	r2, r0
            }
            else {
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e46c:	487e      	ldr	r0, [pc, #504]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e46e:	f000 ffbb 	bl	1000f3e8 <MXC_I2C_ReadRXFIFO>
1000e472:	682b      	ldr	r3, [r5, #0]
1000e474:	4403      	add	r3, r0
1000e476:	602b      	str	r3, [r5, #0]
1000e478:	e002      	b.n	1000e480 <i2c_simple_isr+0x5c>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
                    I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX);
            }
        } else {
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e47a:	f000 ffbd 	bl	1000f3f8 <MXC_I2C_ClearRXFIFO>
1000e47e:	4d7e      	ldr	r5, [pc, #504]	@ (1000e678 <i2c_simple_isr+0x254>)
        }

        // Disable bulk send/receive interrupts
        MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000e480:	4879      	ldr	r0, [pc, #484]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e482:	2200      	movs	r2, #0
1000e484:	2110      	movs	r1, #16
1000e486:	f000 ffbf 	bl	1000f408 <MXC_I2C_DisableInt>
        MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000e48a:	4877      	ldr	r0, [pc, #476]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e48c:	2200      	movs	r2, #0
1000e48e:	2120      	movs	r1, #32
1000e490:	f000 ffba 	bl	1000f408 <MXC_I2C_DisableInt>

        // Clear FIFOs if full
        if (MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE) != 0) {
1000e494:	4874      	ldr	r0, [pc, #464]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e496:	f000 ffa9 	bl	1000f3ec <MXC_I2C_GetRXFIFOAvailable>
1000e49a:	2800      	cmp	r0, #0
1000e49c:	f040 80df 	bne.w	1000e65e <i2c_simple_isr+0x23a>
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
        }
        if (MXC_I2C_GetTXFIFOAvailable(I2C_INTERFACE) != 8) {
1000e4a0:	4871      	ldr	r0, [pc, #452]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e4a2:	f000 ffa7 	bl	1000f3f4 <MXC_I2C_GetTXFIFOAvailable>
1000e4a6:	2808      	cmp	r0, #8
1000e4a8:	d002      	beq.n	1000e4b0 <i2c_simple_isr+0x8c>
            MXC_I2C_ClearTXFIFO(I2C_INTERFACE);
1000e4aa:	486f      	ldr	r0, [pc, #444]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e4ac:	f000 ffa6 	bl	1000f3fc <MXC_I2C_ClearTXFIFO>
        }

        // Reset state
        READ_INDEX = 0;
1000e4b0:	4b73      	ldr	r3, [pc, #460]	@ (1000e680 <i2c_simple_isr+0x25c>)
        WRITE_INDEX = 0;
        WRITE_START = false;

        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e4b2:	486d      	ldr	r0, [pc, #436]	@ (1000e668 <i2c_simple_isr+0x244>)
        READ_INDEX = 0;
1000e4b4:	2200      	movs	r2, #0
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e4b6:	2140      	movs	r1, #64	@ 0x40
        WRITE_INDEX = 0;
1000e4b8:	602a      	str	r2, [r5, #0]
        READ_INDEX = 0;
1000e4ba:	601a      	str	r2, [r3, #0]
        WRITE_START = false;
1000e4bc:	7032      	strb	r2, [r6, #0]
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e4be:	f000 ff9f 	bl	1000f400 <MXC_I2C_ClearFlags>
    }

    // TX Fifo Threshold Met on Read
    if (Flags & MXC_F_I2C_INTEN0_TX_THD && (I2C_INTERFACE->inten0 & MXC_F_I2C_INTEN0_TX_THD)) {
1000e4c2:	06a7      	lsls	r7, r4, #26
1000e4c4:	d503      	bpl.n	1000e4ce <i2c_simple_isr+0xaa>
1000e4c6:	4868      	ldr	r0, [pc, #416]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e4c8:	68c3      	ldr	r3, [r0, #12]
1000e4ca:	069e      	lsls	r6, r3, #26
1000e4cc:	d433      	bmi.n	1000e536 <i2c_simple_isr+0x112>
        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_THD, 0);
    }

    // Read from Peripheral from Controller Match
    if (Flags & MXC_F_I2C_INTFL0_WR_ADDR_MATCH) {
1000e4ce:	0220      	lsls	r0, r4, #8
1000e4d0:	d43f      	bmi.n	1000e552 <i2c_simple_isr+0x12e>
            }
        }
    }

    // Write to Peripheral from Controller Match
    if (Flags & MXC_F_I2C_INTFL0_RD_ADDR_MATCH) {
1000e4d2:	0262      	lsls	r2, r4, #9
1000e4d4:	d46c      	bmi.n	1000e5b0 <i2c_simple_isr+0x18c>
        // Clear flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
    }

    // RX Fifo Threshold Met on Write
    if (Flags & MXC_F_I2C_INTEN0_RX_THD) {
1000e4d6:	06e3      	lsls	r3, r4, #27
1000e4d8:	d511      	bpl.n	1000e4fe <i2c_simple_isr+0xda>
        // We always write a register before writing data so select register
        if (WRITE_START == true) {
1000e4da:	4c64      	ldr	r4, [pc, #400]	@ (1000e66c <i2c_simple_isr+0x248>)
1000e4dc:	7823      	ldrb	r3, [r4, #0]
1000e4de:	2b00      	cmp	r3, #0
1000e4e0:	d17c      	bne.n	1000e5dc <i2c_simple_isr+0x1b8>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
            WRITE_START = false;
        }
        // Read remaining data
        if (ACTIVE_REG <= MAX_REG) {
1000e4e2:	4c63      	ldr	r4, [pc, #396]	@ (1000e670 <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e4e4:	4860      	ldr	r0, [pc, #384]	@ (1000e668 <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e4e6:	7823      	ldrb	r3, [r4, #0]
1000e4e8:	2b05      	cmp	r3, #5
1000e4ea:	d909      	bls.n	1000e500 <i2c_simple_isr+0xdc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
                    I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX);
            }
        // Clear out FIFO if invalid register specified
        } else {
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e4ec:	f000 ff84 	bl	1000f3f8 <MXC_I2C_ClearRXFIFO>
        }

        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RX_THD, 0);
    }
}
1000e4f0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RX_THD, 0);
1000e4f4:	485c      	ldr	r0, [pc, #368]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e4f6:	2200      	movs	r2, #0
1000e4f8:	2110      	movs	r1, #16
1000e4fa:	f000 bf81 	b.w	1000f400 <MXC_I2C_ClearFlags>
}
1000e4fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e500:	f000 ff74 	bl	1000f3ec <MXC_I2C_GetRXFIFOAvailable>
            if (available < (I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX)) {
1000e504:	7821      	ldrb	r1, [r4, #0]
1000e506:	4a5b      	ldr	r2, [pc, #364]	@ (1000e674 <i2c_simple_isr+0x250>)
1000e508:	4c5b      	ldr	r4, [pc, #364]	@ (1000e678 <i2c_simple_isr+0x254>)
1000e50a:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
1000e50e:	6823      	ldr	r3, [r4, #0]
1000e510:	1ad2      	subs	r2, r2, r3
1000e512:	4282      	cmp	r2, r0
1000e514:	dd70      	ble.n	1000e5f8 <i2c_simple_isr+0x1d4>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e516:	4a59      	ldr	r2, [pc, #356]	@ (1000e67c <i2c_simple_isr+0x258>)
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e518:	4853      	ldr	r0, [pc, #332]	@ (1000e668 <i2c_simple_isr+0x244>)
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e51a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
1000e51e:	441d      	add	r5, r3
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e520:	f000 ff64 	bl	1000f3ec <MXC_I2C_GetRXFIFOAvailable>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e524:	4629      	mov	r1, r5
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e526:	4602      	mov	r2, r0
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e528:	484f      	ldr	r0, [pc, #316]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e52a:	f000 ff5d 	bl	1000f3e8 <MXC_I2C_ReadRXFIFO>
1000e52e:	6823      	ldr	r3, [r4, #0]
1000e530:	4403      	add	r3, r0
1000e532:	6023      	str	r3, [r4, #0]
1000e534:	e7dc      	b.n	1000e4f0 <i2c_simple_isr+0xcc>
        if (Flags & MXC_F_I2C_INTFL0_TX_LOCKOUT) {
1000e536:	0425      	lsls	r5, r4, #16
1000e538:	f100 808b 	bmi.w	1000e652 <i2c_simple_isr+0x22e>
        if (ACTIVE_REG <= MAX_REG) {
1000e53c:	4d4c      	ldr	r5, [pc, #304]	@ (1000e670 <i2c_simple_isr+0x24c>)
1000e53e:	782b      	ldrb	r3, [r5, #0]
1000e540:	2b05      	cmp	r3, #5
1000e542:	d969      	bls.n	1000e618 <i2c_simple_isr+0x1f4>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_THD, 0);
1000e544:	4848      	ldr	r0, [pc, #288]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e546:	2200      	movs	r2, #0
1000e548:	2120      	movs	r1, #32
1000e54a:	f000 ff59 	bl	1000f400 <MXC_I2C_ClearFlags>
    if (Flags & MXC_F_I2C_INTFL0_WR_ADDR_MATCH) {
1000e54e:	0220      	lsls	r0, r4, #8
1000e550:	d5bf      	bpl.n	1000e4d2 <i2c_simple_isr+0xae>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_WR_ADDR_MATCH, 0);
1000e552:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
1000e556:	4844      	ldr	r0, [pc, #272]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e558:	2200      	movs	r2, #0
1000e55a:	f000 ff51 	bl	1000f400 <MXC_I2C_ClearFlags>
        if (Flags & MXC_F_I2C_INTFL0_TX_LOCKOUT) {
1000e55e:	0421      	lsls	r1, r4, #16
1000e560:	d5b7      	bpl.n	1000e4d2 <i2c_simple_isr+0xae>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e562:	4d43      	ldr	r5, [pc, #268]	@ (1000e670 <i2c_simple_isr+0x24c>)
            MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_LOCKOUT, 0);
1000e564:	4840      	ldr	r0, [pc, #256]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e566:	2200      	movs	r2, #0
1000e568:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
1000e56c:	f000 ff48 	bl	1000f400 <MXC_I2C_ClearFlags>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e570:	483d      	ldr	r0, [pc, #244]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e572:	2201      	movs	r2, #1
1000e574:	4629      	mov	r1, r5
1000e576:	f000 ff37 	bl	1000f3e8 <MXC_I2C_ReadRXFIFO>
            if (ACTIVE_REG <= MAX_REG) {
1000e57a:	782b      	ldrb	r3, [r5, #0]
1000e57c:	2b05      	cmp	r3, #5
1000e57e:	d8a8      	bhi.n	1000e4d2 <i2c_simple_isr+0xae>
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e580:	4e3c      	ldr	r6, [pc, #240]	@ (1000e674 <i2c_simple_isr+0x250>)
1000e582:	4a3e      	ldr	r2, [pc, #248]	@ (1000e67c <i2c_simple_isr+0x258>)
1000e584:	4838      	ldr	r0, [pc, #224]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e586:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
1000e58a:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
1000e58e:	f000 ff2f 	bl	1000f3f0 <MXC_I2C_WriteTXFIFO>
1000e592:	4b3b      	ldr	r3, [pc, #236]	@ (1000e680 <i2c_simple_isr+0x25c>)
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e594:	782a      	ldrb	r2, [r5, #0]
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e596:	6819      	ldr	r1, [r3, #0]
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e598:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e59c:	4408      	add	r0, r1
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e59e:	4290      	cmp	r0, r2
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e5a0:	6018      	str	r0, [r3, #0]
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e5a2:	da96      	bge.n	1000e4d2 <i2c_simple_isr+0xae>
                    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000e5a4:	4830      	ldr	r0, [pc, #192]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e5a6:	2200      	movs	r2, #0
1000e5a8:	2120      	movs	r1, #32
1000e5aa:	f000 ff2b 	bl	1000f404 <MXC_I2C_EnableInt>
1000e5ae:	e790      	b.n	1000e4d2 <i2c_simple_isr+0xae>
        WRITE_START = true;
1000e5b0:	4b2e      	ldr	r3, [pc, #184]	@ (1000e66c <i2c_simple_isr+0x248>)
        MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000e5b2:	482d      	ldr	r0, [pc, #180]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e5b4:	2200      	movs	r2, #0
1000e5b6:	2110      	movs	r1, #16
        WRITE_START = true;
1000e5b8:	2501      	movs	r5, #1
1000e5ba:	701d      	strb	r5, [r3, #0]
        MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000e5bc:	f000 ff22 	bl	1000f404 <MXC_I2C_EnableInt>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
1000e5c0:	4829      	ldr	r0, [pc, #164]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e5c2:	2200      	movs	r2, #0
1000e5c4:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
1000e5c8:	f000 ff1a 	bl	1000f400 <MXC_I2C_ClearFlags>
1000e5cc:	e783      	b.n	1000e4d6 <i2c_simple_isr+0xb2>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e5ce:	4928      	ldr	r1, [pc, #160]	@ (1000e670 <i2c_simple_isr+0x24c>)
1000e5d0:	2201      	movs	r2, #1
1000e5d2:	f000 ff09 	bl	1000f3e8 <MXC_I2C_ReadRXFIFO>
            WRITE_START = false;
1000e5d6:	2300      	movs	r3, #0
1000e5d8:	7033      	strb	r3, [r6, #0]
1000e5da:	e72d      	b.n	1000e438 <i2c_simple_isr+0x14>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e5dc:	4924      	ldr	r1, [pc, #144]	@ (1000e670 <i2c_simple_isr+0x24c>)
1000e5de:	4822      	ldr	r0, [pc, #136]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e5e0:	2201      	movs	r2, #1
1000e5e2:	f000 ff01 	bl	1000f3e8 <MXC_I2C_ReadRXFIFO>
            WRITE_START = false;
1000e5e6:	2300      	movs	r3, #0
1000e5e8:	7023      	strb	r3, [r4, #0]
        if (ACTIVE_REG <= MAX_REG) {
1000e5ea:	4c21      	ldr	r4, [pc, #132]	@ (1000e670 <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e5ec:	481e      	ldr	r0, [pc, #120]	@ (1000e668 <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e5ee:	7823      	ldrb	r3, [r4, #0]
1000e5f0:	2b05      	cmp	r3, #5
1000e5f2:	f63f af7b 	bhi.w	1000e4ec <i2c_simple_isr+0xc8>
1000e5f6:	e783      	b.n	1000e500 <i2c_simple_isr+0xdc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e5f8:	4820      	ldr	r0, [pc, #128]	@ (1000e67c <i2c_simple_isr+0x258>)
1000e5fa:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e5fe:	481a      	ldr	r0, [pc, #104]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e600:	4419      	add	r1, r3
1000e602:	f000 fef1 	bl	1000f3e8 <MXC_I2C_ReadRXFIFO>
1000e606:	6823      	ldr	r3, [r4, #0]
1000e608:	4403      	add	r3, r0
1000e60a:	6023      	str	r3, [r4, #0]
1000e60c:	e770      	b.n	1000e4f0 <i2c_simple_isr+0xcc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e60e:	481b      	ldr	r0, [pc, #108]	@ (1000e67c <i2c_simple_isr+0x258>)
1000e610:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e614:	4419      	add	r1, r3
1000e616:	e729      	b.n	1000e46c <i2c_simple_isr+0x48>
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e618:	4e19      	ldr	r6, [pc, #100]	@ (1000e680 <i2c_simple_isr+0x25c>)
                I2C_REGS_LEN[ACTIVE_REG]-READ_INDEX);
1000e61a:	4f16      	ldr	r7, [pc, #88]	@ (1000e674 <i2c_simple_isr+0x250>)
                (volatile unsigned char*)&I2C_REGS[ACTIVE_REG][READ_INDEX],
1000e61c:	4917      	ldr	r1, [pc, #92]	@ (1000e67c <i2c_simple_isr+0x258>)
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e61e:	6832      	ldr	r2, [r6, #0]
                (volatile unsigned char*)&I2C_REGS[ACTIVE_REG][READ_INDEX],
1000e620:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
                I2C_REGS_LEN[ACTIVE_REG]-READ_INDEX);
1000e624:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e628:	480f      	ldr	r0, [pc, #60]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e62a:	4411      	add	r1, r2
1000e62c:	1a9a      	subs	r2, r3, r2
1000e62e:	f000 fedf 	bl	1000f3f0 <MXC_I2C_WriteTXFIFO>
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e632:	782b      	ldrb	r3, [r5, #0]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e634:	6832      	ldr	r2, [r6, #0]
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e636:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e63a:	4410      	add	r0, r2
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e63c:	3b01      	subs	r3, #1
1000e63e:	4298      	cmp	r0, r3
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e640:	6030      	str	r0, [r6, #0]
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e642:	f47f af7f 	bne.w	1000e544 <i2c_simple_isr+0x120>
                MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000e646:	4808      	ldr	r0, [pc, #32]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e648:	2200      	movs	r2, #0
1000e64a:	2120      	movs	r1, #32
1000e64c:	f000 fedc 	bl	1000f408 <MXC_I2C_DisableInt>
1000e650:	e778      	b.n	1000e544 <i2c_simple_isr+0x120>
            MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_LOCKOUT, 0);
1000e652:	2200      	movs	r2, #0
1000e654:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
1000e658:	f000 fed2 	bl	1000f400 <MXC_I2C_ClearFlags>
1000e65c:	e76e      	b.n	1000e53c <i2c_simple_isr+0x118>
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e65e:	4802      	ldr	r0, [pc, #8]	@ (1000e668 <i2c_simple_isr+0x244>)
1000e660:	f000 feca 	bl	1000f3f8 <MXC_I2C_ClearRXFIFO>
1000e664:	e71c      	b.n	1000e4a0 <i2c_simple_isr+0x7c>
1000e666:	bf00      	nop
1000e668:	4001e000 	.word	0x4001e000
1000e66c:	200008a5 	.word	0x200008a5
1000e670:	200008a4 	.word	0x200008a4
1000e674:	20000000 	.word	0x20000000
1000e678:	200008a0 	.word	0x200008a0
1000e67c:	20000018 	.word	0x20000018
1000e680:	2000089c 	.word	0x2000089c

1000e684 <i2c_simple_peripheral_init>:
int i2c_simple_peripheral_init(uint8_t addr) {
1000e684:	b510      	push	{r4, lr}
1000e686:	4602      	mov	r2, r0
    error = MXC_I2C_Init(I2C_INTERFACE, false, addr);
1000e688:	2100      	movs	r1, #0
1000e68a:	481b      	ldr	r0, [pc, #108]	@ (1000e6f8 <i2c_simple_peripheral_init+0x74>)
1000e68c:	f000 fe5e 	bl	1000f34c <MXC_I2C_Init>
    if (error != E_NO_ERROR) {
1000e690:	4604      	mov	r4, r0
1000e692:	bb60      	cbnz	r0, 1000e6ee <i2c_simple_peripheral_init+0x6a>
    MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_FREQ);
1000e694:	4919      	ldr	r1, [pc, #100]	@ (1000e6fc <i2c_simple_peripheral_init+0x78>)
1000e696:	4818      	ldr	r0, [pc, #96]	@ (1000e6f8 <i2c_simple_peripheral_init+0x74>)
1000e698:	f000 fea2 	bl	1000f3e0 <MXC_I2C_SetFrequency>
    MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e69c:	4816      	ldr	r0, [pc, #88]	@ (1000e6f8 <i2c_simple_peripheral_init+0x74>)
1000e69e:	f000 feab 	bl	1000f3f8 <MXC_I2C_ClearRXFIFO>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
1000e6a2:	4622      	mov	r2, r4
1000e6a4:	4814      	ldr	r0, [pc, #80]	@ (1000e6f8 <i2c_simple_peripheral_init+0x74>)
1000e6a6:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
1000e6aa:	f000 feab 	bl	1000f404 <MXC_I2C_EnableInt>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_WR_ADDR_MATCH, 0);
1000e6ae:	4622      	mov	r2, r4
1000e6b0:	4811      	ldr	r0, [pc, #68]	@ (1000e6f8 <i2c_simple_peripheral_init+0x74>)
1000e6b2:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
1000e6b6:	f000 fea5 	bl	1000f404 <MXC_I2C_EnableInt>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e6ba:	4622      	mov	r2, r4
1000e6bc:	480e      	ldr	r0, [pc, #56]	@ (1000e6f8 <i2c_simple_peripheral_init+0x74>)
1000e6be:	2140      	movs	r1, #64	@ 0x40
1000e6c0:	f000 fea0 	bl	1000f404 <MXC_I2C_EnableInt>
    MXC_NVIC_SetVector(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)), i2c_simple_isr);
1000e6c4:	490e      	ldr	r1, [pc, #56]	@ (1000e700 <i2c_simple_peripheral_init+0x7c>)
1000e6c6:	2024      	movs	r0, #36	@ 0x24
1000e6c8:	f000 fb4a 	bl	1000ed60 <MXC_NVIC_SetVector>
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000e6cc:	4b0d      	ldr	r3, [pc, #52]	@ (1000e704 <i2c_simple_peripheral_init+0x80>)
1000e6ce:	2210      	movs	r2, #16
1000e6d0:	605a      	str	r2, [r3, #4]
    MXC_I2C_ClearFlags(I2C_INTERFACE, 0xFFFFFFFF, 0xFFFFFFFF);
1000e6d2:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1000e6d6:	4611      	mov	r1, r2
1000e6d8:	4807      	ldr	r0, [pc, #28]	@ (1000e6f8 <i2c_simple_peripheral_init+0x74>)
1000e6da:	f000 fe91 	bl	1000f400 <MXC_I2C_ClearFlags>
    I2C_REGS[RECEIVE_DONE][0] = false;
1000e6de:	4b0a      	ldr	r3, [pc, #40]	@ (1000e708 <i2c_simple_peripheral_init+0x84>)
1000e6e0:	6859      	ldr	r1, [r3, #4]
1000e6e2:	700c      	strb	r4, [r1, #0]
    I2C_REGS[TRANSMIT_DONE][0] = true;
1000e6e4:	691b      	ldr	r3, [r3, #16]
1000e6e6:	2201      	movs	r2, #1
1000e6e8:	701a      	strb	r2, [r3, #0]
}
1000e6ea:	4620      	mov	r0, r4
1000e6ec:	bd10      	pop	{r4, pc}
        printf("Failed to initialize I2C.\n");
1000e6ee:	4807      	ldr	r0, [pc, #28]	@ (1000e70c <i2c_simple_peripheral_init+0x88>)
1000e6f0:	f004 fdd6 	bl	100132a0 <puts>
}
1000e6f4:	4620      	mov	r0, r4
1000e6f6:	bd10      	pop	{r4, pc}
1000e6f8:	4001e000 	.word	0x4001e000
1000e6fc:	000186a0 	.word	0x000186a0
1000e700:	1000e425 	.word	0x1000e425
1000e704:	e000e100 	.word	0xe000e100
1000e708:	20000018 	.word	0x20000018
1000e70c:	10018f18 	.word	0x10018f18

1000e710 <mxc_assert>:
};
const unsigned int num_leds = (sizeof(led_pin) / sizeof(mxc_gpio_cfg_t));

/******************************************************************************/
void mxc_assert(const char *expr, const char *file, int line)
{
1000e710:	b508      	push	{r3, lr}
1000e712:	4603      	mov	r3, r0
    printf("MXC_ASSERT %s #%d: (%s)\n", file, line, expr);
1000e714:	4801      	ldr	r0, [pc, #4]	@ (1000e71c <mxc_assert+0xc>)
1000e716:	f001 fe91 	bl	1001043c <printf>

    while (1) {}
1000e71a:	e7fe      	b.n	1000e71a <mxc_assert+0xa>
1000e71c:	10018f34 	.word	0x10018f34

1000e720 <GPIO0_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 0 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO0_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO0));
1000e720:	2000      	movs	r0, #0
1000e722:	f000 bd79 	b.w	1000f218 <MXC_GPIO_Handler>
1000e726:	bf00      	nop

1000e728 <GPIO1_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 1 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO1_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO1));
1000e728:	2001      	movs	r0, #1
1000e72a:	f000 bd75 	b.w	1000f218 <MXC_GPIO_Handler>
1000e72e:	bf00      	nop

1000e730 <Board_Init>:
}

/******************************************************************************/
int Board_Init(void)
{
1000e730:	b510      	push	{r4, lr}
#ifndef __riscv
    int err;

    // Enable GPIO
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1000e732:	2000      	movs	r0, #0
1000e734:	f000 fb5c 	bl	1000edf0 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
1000e738:	2001      	movs	r0, #1
1000e73a:	f000 fb59 	bl	1000edf0 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1000e73e:	2040      	movs	r0, #64	@ 0x40
1000e740:	f000 fb56 	bl	1000edf0 <MXC_SYS_ClockEnable>
/******************************************************************************/
int Console_Init(void)
{
    int err;

    if ((err = MXC_UART_Init(ConsoleUart, CONSOLE_BAUD, MXC_UART_IBRO_CLK)) != E_NO_ERROR) {
1000e744:	4b10      	ldr	r3, [pc, #64]	@ (1000e788 <Board_Init+0x58>)
1000e746:	2202      	movs	r2, #2
1000e748:	6818      	ldr	r0, [r3, #0]
1000e74a:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
1000e74e:	f001 f891 	bl	1000f874 <MXC_UART_Init>
    if ((err = Console_Init()) < E_NO_ERROR) {
1000e752:	1e04      	subs	r4, r0, #0
1000e754:	db0c      	blt.n	1000e770 <Board_Init+0x40>
    if ((err = PB_Init()) != E_NO_ERROR) {
1000e756:	f000 f8eb 	bl	1000e930 <PB_Init>
1000e75a:	b958      	cbnz	r0, 1000e774 <Board_Init+0x44>
    if ((err = LED_Init()) != E_NO_ERROR) {
1000e75c:	f000 f888 	bl	1000e870 <LED_Init>
1000e760:	4604      	mov	r4, r0
1000e762:	b960      	cbnz	r0, 1000e77e <Board_Init+0x4e>
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
1000e764:	4b09      	ldr	r3, [pc, #36]	@ (1000e78c <Board_Init+0x5c>)
    MXC_Delay(200000);
1000e766:	480a      	ldr	r0, [pc, #40]	@ (1000e790 <Board_Init+0x60>)
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
1000e768:	2243      	movs	r2, #67	@ 0x43
1000e76a:	60da      	str	r2, [r3, #12]
    MXC_Delay(200000);
1000e76c:	f000 fabe 	bl	1000ecec <MXC_Delay>
}
1000e770:	4620      	mov	r0, r4
1000e772:	bd10      	pop	{r4, pc}
        MXC_ASSERT_FAIL();
1000e774:	4907      	ldr	r1, [pc, #28]	@ (1000e794 <Board_Init+0x64>)
1000e776:	4808      	ldr	r0, [pc, #32]	@ (1000e798 <Board_Init+0x68>)
1000e778:	226f      	movs	r2, #111	@ 0x6f
1000e77a:	f7ff ffc9 	bl	1000e710 <mxc_assert>
        MXC_ASSERT_FAIL();
1000e77e:	4905      	ldr	r1, [pc, #20]	@ (1000e794 <Board_Init+0x64>)
1000e780:	4805      	ldr	r0, [pc, #20]	@ (1000e798 <Board_Init+0x68>)
1000e782:	2274      	movs	r2, #116	@ 0x74
1000e784:	f7ff ffc4 	bl	1000e710 <mxc_assert>
1000e788:	20000030 	.word	0x20000030
1000e78c:	40004400 	.word	0x40004400
1000e790:	00030d40 	.word	0x00030d40
1000e794:	10018f50 	.word	0x10018f50
1000e798:	10018fb8 	.word	0x10018fb8

1000e79c <NMI_Handler>:
}

/******************************************************************************/
void NMI_Handler(void)
{
    __NOP();
1000e79c:	bf00      	nop
}
1000e79e:	4770      	bx	lr

1000e7a0 <_close>:
    return -1;
}
int _close(int file)
{
    return -1;
}
1000e7a0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e7a4:	4770      	bx	lr
1000e7a6:	bf00      	nop

1000e7a8 <_isatty>:
int _isatty(int file)
1000e7a8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e7ac:	4770      	bx	lr
1000e7ae:	bf00      	nop

1000e7b0 <_lseek>:
    return -1;
}
int _lseek(int file, off_t offset, int whence)
{
    return -1;
}
1000e7b0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e7b4:	4770      	bx	lr
1000e7b6:	bf00      	nop

1000e7b8 <_fstat>:
int _fstat(int file, struct stat *st)
{
    return -1;
}
1000e7b8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e7bc:	4770      	bx	lr
1000e7be:	bf00      	nop

1000e7c0 <_read>:
   fgetc for stdio */
#if defined(__ICCARM__) || defined(__GNUC__)

#if defined(__GNUC__) // GNUC _read function prototype
int _read(int file, char *ptr, int len)
{
1000e7c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    size_t n;
#endif /*  */

    int num = 0; // count of number received.

    switch (file) {
1000e7c2:	b9e0      	cbnz	r0, 1000e7fe <_read+0x3e>
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
1000e7c4:	2a00      	cmp	r2, #0
1000e7c6:	dd19      	ble.n	1000e7fc <_read+0x3c>
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
1000e7c8:	4d10      	ldr	r5, [pc, #64]	@ (1000e80c <_read+0x4c>)
1000e7ca:	460e      	mov	r6, r1
1000e7cc:	188f      	adds	r7, r1, r2
        for (n = 0; n < len; n++) {
1000e7ce:	460c      	mov	r4, r1
1000e7d0:	e002      	b.n	1000e7d8 <_read+0x18>
1000e7d2:	42bb      	cmp	r3, r7
1000e7d4:	d00f      	beq.n	1000e7f6 <_read+0x36>
                num++;
                ptr++;

                break;
            } else {
                ptr++;
1000e7d6:	461c      	mov	r4, r3
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
1000e7d8:	4628      	mov	r0, r5
1000e7da:	f001 f943 	bl	1000fa64 <MXC_UART_ReadCharacter>
1000e7de:	b2c1      	uxtb	r1, r0
1000e7e0:	7021      	strb	r1, [r4, #0]
            MXC_UART_WriteCharacter(MXC_UARTn, *ptr); // echo the byte.
1000e7e2:	4628      	mov	r0, r5
1000e7e4:	f001 f940 	bl	1000fa68 <MXC_UART_WriteCharacter>
            if (*ptr == '\r') { // check for end of line.
1000e7e8:	7822      	ldrb	r2, [r4, #0]
1000e7ea:	2a0d      	cmp	r2, #13
                ptr++;
1000e7ec:	f104 0301 	add.w	r3, r4, #1
            if (*ptr == '\r') { // check for end of line.
1000e7f0:	d1ef      	bne.n	1000e7d2 <_read+0x12>
                *ptr = '\n';
1000e7f2:	230a      	movs	r3, #10
1000e7f4:	7023      	strb	r3, [r4, #0]
                num++;
1000e7f6:	f1c6 0601 	rsb	r6, r6, #1
1000e7fa:	19a0      	adds	r0, r4, r6
        errno = EBADF;
        return -1;
    }

    return num;
}
1000e7fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        errno = EBADF;
1000e7fe:	f005 fcb7 	bl	10014170 <__errno>
1000e802:	2309      	movs	r3, #9
1000e804:	6003      	str	r3, [r0, #0]
        return -1;
1000e806:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e80a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e80c:	40042000 	.word	0x40042000

1000e810 <_write>:

/* newlib/libc printf() will eventually call write() to get the data to the stdout */
#if defined(__GNUC__)
// GNUC _write function prototype
int _write(int file, char *ptr, int len)
{
1000e810:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
int __write(int file, const unsigned char *ptr, size_t len)
{
    size_t n;
#endif /* __GNUC__ */

    switch (file) {
1000e812:	1e43      	subs	r3, r0, #1
1000e814:	2b01      	cmp	r3, #1
1000e816:	d821      	bhi.n	1000e85c <_write+0x4c>
    case STDOUT_FILENO:
    case STDERR_FILENO:

        // This function should be as fast as possible
        // So we'll forgo the UART driver for now
        for (n = 0; n < len; n++) {
1000e818:	2a00      	cmp	r2, #0
1000e81a:	4617      	mov	r7, r2
1000e81c:	dd12      	ble.n	1000e844 <_write+0x34>
1000e81e:	1e53      	subs	r3, r2, #1
            if (*ptr == '\n') {
                // Wait until there's room in the FIFO
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000e820:	4e12      	ldr	r6, [pc, #72]	@ (1000e86c <_write+0x5c>)
1000e822:	1e4c      	subs	r4, r1, #1
1000e824:	18cd      	adds	r5, r1, r3
            if (*ptr == '\n') {
1000e826:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1000e82a:	2b0a      	cmp	r3, #10
1000e82c:	d00c      	beq.n	1000e848 <_write+0x38>

                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
            }

            // Wait until there's room in the FIFO
            while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000e82e:	480f      	ldr	r0, [pc, #60]	@ (1000e86c <_write+0x5c>)
1000e830:	f001 f91e 	bl	1000fa70 <MXC_UART_GetTXFIFOAvailable>
1000e834:	2800      	cmp	r0, #0
1000e836:	d0fa      	beq.n	1000e82e <_write+0x1e>

            MXC_UART_WriteCharacter(MXC_UARTn, *ptr++);
1000e838:	7821      	ldrb	r1, [r4, #0]
1000e83a:	4630      	mov	r0, r6
1000e83c:	f001 f914 	bl	1000fa68 <MXC_UART_WriteCharacter>
        for (n = 0; n < len; n++) {
1000e840:	42ac      	cmp	r4, r5
1000e842:	d1f0      	bne.n	1000e826 <_write+0x16>

        break;

    default:
        errno = EBADF;
        return -1;
1000e844:	4638      	mov	r0, r7
    }

    return len;
}
1000e846:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000e848:	4808      	ldr	r0, [pc, #32]	@ (1000e86c <_write+0x5c>)
1000e84a:	f001 f911 	bl	1000fa70 <MXC_UART_GetTXFIFOAvailable>
1000e84e:	2800      	cmp	r0, #0
1000e850:	d0fa      	beq.n	1000e848 <_write+0x38>
                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
1000e852:	210d      	movs	r1, #13
1000e854:	4630      	mov	r0, r6
1000e856:	f001 f907 	bl	1000fa68 <MXC_UART_WriteCharacter>
1000e85a:	e7e8      	b.n	1000e82e <_write+0x1e>
        errno = EBADF;
1000e85c:	f005 fc88 	bl	10014170 <__errno>
1000e860:	2309      	movs	r3, #9
1000e862:	6003      	str	r3, [r0, #0]
        return -1;
1000e864:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e868:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e86a:	bf00      	nop
1000e86c:	40042000 	.word	0x40042000

1000e870 <LED_Init>:
#include "led.h"
#include "mxc_device.h"

/******************************************************************************/
int LED_Init(void)
{
1000e870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    /* setup GPIO for the LED */
    for (i = 0; i < num_leds; i++) {
1000e872:	4b0d      	ldr	r3, [pc, #52]	@ (1000e8a8 <LED_Init+0x38>)
1000e874:	681f      	ldr	r7, [r3, #0]
1000e876:	b1a7      	cbz	r7, 1000e8a2 <LED_Init+0x32>
1000e878:	2500      	movs	r5, #0
1000e87a:	4c0c      	ldr	r4, [pc, #48]	@ (1000e8ac <LED_Init+0x3c>)
    int retval = E_NO_ERROR;
1000e87c:	462e      	mov	r6, r5
//******************************************************************************
void LED_Off(unsigned int idx)
{
    MXC_ASSERT(idx < num_leds);
#if (LED_ON == 0)
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000e87e:	e9d4 0100 	ldrd	r0, r1, [r4]
1000e882:	f000 fc9b 	bl	1000f1bc <MXC_GPIO_OutSet>
        if (MXC_GPIO_Config(&led_pin[i]) != E_NO_ERROR) {
1000e886:	4620      	mov	r0, r4
1000e888:	f000 fb92 	bl	1000efb0 <MXC_GPIO_Config>
    for (i = 0; i < num_leds; i++) {
1000e88c:	3501      	adds	r5, #1
            retval = E_UNKNOWN;
1000e88e:	2800      	cmp	r0, #0
1000e890:	bf18      	it	ne
1000e892:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_leds; i++) {
1000e896:	42af      	cmp	r7, r5
1000e898:	f104 040c 	add.w	r4, r4, #12
1000e89c:	d1ef      	bne.n	1000e87e <LED_Init+0xe>
}
1000e89e:	4630      	mov	r0, r6
1000e8a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1000e8a2:	463e      	mov	r6, r7
}
1000e8a4:	4630      	mov	r0, r6
1000e8a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e8a8:	10018fc0 	.word	0x10018fc0
1000e8ac:	10018fc4 	.word	0x10018fc4

1000e8b0 <LED_On>:
    MXC_ASSERT(idx < num_leds);
1000e8b0:	4b0b      	ldr	r3, [pc, #44]	@ (1000e8e0 <LED_On+0x30>)
1000e8b2:	681b      	ldr	r3, [r3, #0]
1000e8b4:	4283      	cmp	r3, r0
{
1000e8b6:	b510      	push	{r4, lr}
1000e8b8:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
1000e8ba:	d90b      	bls.n	1000e8d4 <LED_On+0x24>
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
1000e8bc:	4b09      	ldr	r3, [pc, #36]	@ (1000e8e4 <LED_On+0x34>)
1000e8be:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000e8c2:	eb03 0284 	add.w	r2, r3, r4, lsl #2
1000e8c6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1000e8ca:	6851      	ldr	r1, [r2, #4]
}
1000e8cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
1000e8d0:	f000 bc8a 	b.w	1000f1e8 <MXC_GPIO_OutClr>
    MXC_ASSERT(idx < num_leds);
1000e8d4:	4904      	ldr	r1, [pc, #16]	@ (1000e8e8 <LED_On+0x38>)
1000e8d6:	4805      	ldr	r0, [pc, #20]	@ (1000e8ec <LED_On+0x3c>)
1000e8d8:	223b      	movs	r2, #59	@ 0x3b
1000e8da:	f7ff ff19 	bl	1000e710 <mxc_assert>
1000e8de:	e7ed      	b.n	1000e8bc <LED_On+0xc>
1000e8e0:	10018fc0 	.word	0x10018fc0
1000e8e4:	10018fc4 	.word	0x10018fc4
1000e8e8:	10019004 	.word	0x10019004
1000e8ec:	10019058 	.word	0x10019058

1000e8f0 <LED_Off>:
    MXC_ASSERT(idx < num_leds);
1000e8f0:	4b0b      	ldr	r3, [pc, #44]	@ (1000e920 <LED_Off+0x30>)
1000e8f2:	681b      	ldr	r3, [r3, #0]
1000e8f4:	4283      	cmp	r3, r0
{
1000e8f6:	b510      	push	{r4, lr}
1000e8f8:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
1000e8fa:	d90b      	bls.n	1000e914 <LED_Off+0x24>
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000e8fc:	4b09      	ldr	r3, [pc, #36]	@ (1000e924 <LED_Off+0x34>)
1000e8fe:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000e902:	eb03 0284 	add.w	r2, r3, r4, lsl #2
1000e906:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1000e90a:	6851      	ldr	r1, [r2, #4]
#else
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
#endif
}
1000e90c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000e910:	f000 bc54 	b.w	1000f1bc <MXC_GPIO_OutSet>
    MXC_ASSERT(idx < num_leds);
1000e914:	4904      	ldr	r1, [pc, #16]	@ (1000e928 <LED_Off+0x38>)
1000e916:	4805      	ldr	r0, [pc, #20]	@ (1000e92c <LED_Off+0x3c>)
1000e918:	2246      	movs	r2, #70	@ 0x46
1000e91a:	f7ff fef9 	bl	1000e710 <mxc_assert>
1000e91e:	e7ed      	b.n	1000e8fc <LED_Off+0xc>
1000e920:	10018fc0 	.word	0x10018fc0
1000e924:	10018fc4 	.word	0x10018fc4
1000e928:	10019004 	.word	0x10019004
1000e92c:	10019058 	.word	0x10019058

1000e930 <PB_Init>:
#include "mxc_assert.h"
#include "pb.h"

/******************************************************************************/
int PB_Init(void)
{
1000e930:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    // Enable pushbutton inputs
    for (i = 0; i < num_pbs; i++) {
1000e932:	4b0b      	ldr	r3, [pc, #44]	@ (1000e960 <PB_Init+0x30>)
1000e934:	681f      	ldr	r7, [r3, #0]
1000e936:	b187      	cbz	r7, 1000e95a <PB_Init+0x2a>
1000e938:	2400      	movs	r4, #0
1000e93a:	4d0a      	ldr	r5, [pc, #40]	@ (1000e964 <PB_Init+0x34>)
    int retval = E_NO_ERROR;
1000e93c:	4626      	mov	r6, r4
        if (MXC_GPIO_Config(&pb_pin[i]) != E_NO_ERROR) {
1000e93e:	4628      	mov	r0, r5
1000e940:	f000 fb36 	bl	1000efb0 <MXC_GPIO_Config>
    for (i = 0; i < num_pbs; i++) {
1000e944:	3401      	adds	r4, #1
            retval = E_UNKNOWN;
1000e946:	2800      	cmp	r0, #0
1000e948:	bf18      	it	ne
1000e94a:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_pbs; i++) {
1000e94e:	42bc      	cmp	r4, r7
1000e950:	f105 050c 	add.w	r5, r5, #12
1000e954:	d1f3      	bne.n	1000e93e <PB_Init+0xe>
        }
    }

    return retval;
}
1000e956:	4630      	mov	r0, r6
1000e958:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1000e95a:	463e      	mov	r6, r7
}
1000e95c:	4630      	mov	r0, r6
1000e95e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e960:	10018fe8 	.word	0x10018fe8
1000e964:	10018fec 	.word	0x10018fec

1000e968 <Reset_Handler>:
1000e968:	4847      	ldr	r0, [pc, #284]	@ (1000ea88 <LPCMP_IRQHandler+0x2>)
1000e96a:	4685      	mov	sp, r0
1000e96c:	4847      	ldr	r0, [pc, #284]	@ (1000ea8c <LPCMP_IRQHandler+0x6>)
1000e96e:	4780      	blx	r0
1000e970:	b980      	cbnz	r0, 1000e994 <.SKIPRAMINIT>
1000e972:	4947      	ldr	r1, [pc, #284]	@ (1000ea90 <LPCMP_IRQHandler+0xa>)
1000e974:	4a47      	ldr	r2, [pc, #284]	@ (1000ea94 <LPCMP_IRQHandler+0xe>)
1000e976:	4b48      	ldr	r3, [pc, #288]	@ (1000ea98 <LPCMP_IRQHandler+0x12>)
1000e978:	1a9b      	subs	r3, r3, r2
1000e97a:	dd03      	ble.n	1000e984 <Reset_Handler+0x1c>
1000e97c:	3b04      	subs	r3, #4
1000e97e:	58c8      	ldr	r0, [r1, r3]
1000e980:	50d0      	str	r0, [r2, r3]
1000e982:	dcfb      	bgt.n	1000e97c <Reset_Handler+0x14>
1000e984:	4945      	ldr	r1, [pc, #276]	@ (1000ea9c <LPCMP_IRQHandler+0x16>)
1000e986:	4a46      	ldr	r2, [pc, #280]	@ (1000eaa0 <LPCMP_IRQHandler+0x1a>)
1000e988:	2000      	movs	r0, #0
1000e98a:	4291      	cmp	r1, r2
1000e98c:	bfbc      	itt	lt
1000e98e:	f841 0b04 	strlt.w	r0, [r1], #4
1000e992:	e7fa      	blt.n	1000e98a <Reset_Handler+0x22>

1000e994 <.SKIPRAMINIT>:
1000e994:	4843      	ldr	r0, [pc, #268]	@ (1000eaa4 <LPCMP_IRQHandler+0x1e>)
1000e996:	4780      	blx	r0
1000e998:	4843      	ldr	r0, [pc, #268]	@ (1000eaa8 <LPCMP_IRQHandler+0x22>)
1000e99a:	4780      	blx	r0
1000e99c:	4843      	ldr	r0, [pc, #268]	@ (1000eaac <LPCMP_IRQHandler+0x26>)
1000e99e:	4780      	blx	r0

1000e9a0 <.SPIN>:
1000e9a0:	f7ff fffe 	bl	1000e9a0 <.SPIN>
1000e9a4:	e7fe      	b.n	1000e9a4 <.SPIN+0x4>

1000e9a6 <HardFault_Handler>:
1000e9a6:	e7fe      	b.n	1000e9a6 <HardFault_Handler>

1000e9a8 <MemManage_Handler>:
1000e9a8:	e7fe      	b.n	1000e9a8 <MemManage_Handler>

1000e9aa <BusFault_Handler>:
1000e9aa:	e7fe      	b.n	1000e9aa <BusFault_Handler>

1000e9ac <UsageFault_Handler>:
1000e9ac:	e7fe      	b.n	1000e9ac <UsageFault_Handler>

1000e9ae <SVC_Handler>:
1000e9ae:	e7fe      	b.n	1000e9ae <SVC_Handler>

1000e9b0 <DebugMon_Handler>:
1000e9b0:	e7fe      	b.n	1000e9b0 <DebugMon_Handler>

1000e9b2 <PendSV_Handler>:
1000e9b2:	e7fe      	b.n	1000e9b2 <PendSV_Handler>

1000e9b4 <SysTick_Handler>:
1000e9b4:	e7fe      	b.n	1000e9b4 <SysTick_Handler>

1000e9b6 <Default_Handler>:
1000e9b6:	e7fe      	b.n	1000e9b6 <Default_Handler>

1000e9b8 <PF_IRQHandler>:
1000e9b8:	e7fe      	b.n	1000e9b8 <PF_IRQHandler>

1000e9ba <WDT0_IRQHandler>:
1000e9ba:	e7fe      	b.n	1000e9ba <WDT0_IRQHandler>

1000e9bc <RSV02_IRQHandler>:
1000e9bc:	e7fe      	b.n	1000e9bc <RSV02_IRQHandler>

1000e9be <RTC_IRQHandler>:
1000e9be:	e7fe      	b.n	1000e9be <RTC_IRQHandler>

1000e9c0 <TRNG_IRQHandler>:
1000e9c0:	e7fe      	b.n	1000e9c0 <TRNG_IRQHandler>

1000e9c2 <TMR0_IRQHandler>:
1000e9c2:	e7fe      	b.n	1000e9c2 <TMR0_IRQHandler>

1000e9c4 <TMR1_IRQHandler>:
1000e9c4:	e7fe      	b.n	1000e9c4 <TMR1_IRQHandler>

1000e9c6 <TMR2_IRQHandler>:
1000e9c6:	e7fe      	b.n	1000e9c6 <TMR2_IRQHandler>

1000e9c8 <TMR3_IRQHandler>:
1000e9c8:	e7fe      	b.n	1000e9c8 <TMR3_IRQHandler>

1000e9ca <TMR4_IRQHandler>:
1000e9ca:	e7fe      	b.n	1000e9ca <TMR4_IRQHandler>

1000e9cc <TMR5_IRQHandler>:
1000e9cc:	e7fe      	b.n	1000e9cc <TMR5_IRQHandler>

1000e9ce <RSV11_IRQHandler>:
1000e9ce:	e7fe      	b.n	1000e9ce <RSV11_IRQHandler>

1000e9d0 <RSV12_IRQHandler>:
1000e9d0:	e7fe      	b.n	1000e9d0 <RSV12_IRQHandler>

1000e9d2 <I2C0_IRQHandler>:
1000e9d2:	e7fe      	b.n	1000e9d2 <I2C0_IRQHandler>

1000e9d4 <UART0_IRQHandler>:
1000e9d4:	e7fe      	b.n	1000e9d4 <UART0_IRQHandler>

1000e9d6 <UART1_IRQHandler>:
1000e9d6:	e7fe      	b.n	1000e9d6 <UART1_IRQHandler>

1000e9d8 <SPI1_IRQHandler>:
1000e9d8:	e7fe      	b.n	1000e9d8 <SPI1_IRQHandler>

1000e9da <RSV17_IRQHandler>:
1000e9da:	e7fe      	b.n	1000e9da <RSV17_IRQHandler>

1000e9dc <RSV18_IRQHandler>:
1000e9dc:	e7fe      	b.n	1000e9dc <RSV18_IRQHandler>

1000e9de <RSV19_IRQHandler>:
1000e9de:	e7fe      	b.n	1000e9de <RSV19_IRQHandler>

1000e9e0 <ADC_IRQHandler>:
1000e9e0:	e7fe      	b.n	1000e9e0 <ADC_IRQHandler>

1000e9e2 <RSV21_IRQHandler>:
1000e9e2:	e7fe      	b.n	1000e9e2 <RSV21_IRQHandler>

1000e9e4 <RSV22_IRQHandler>:
1000e9e4:	e7fe      	b.n	1000e9e4 <RSV22_IRQHandler>

1000e9e6 <FLC0_IRQHandler>:
1000e9e6:	e7fe      	b.n	1000e9e6 <FLC0_IRQHandler>
1000e9e8:	e7fe      	b.n	1000e9e8 <FLC0_IRQHandler+0x2>
1000e9ea:	e7fe      	b.n	1000e9ea <FLC0_IRQHandler+0x4>

1000e9ec <GPIO2_IRQHandler>:
1000e9ec:	e7fe      	b.n	1000e9ec <GPIO2_IRQHandler>

1000e9ee <RSV27_IRQHandler>:
1000e9ee:	e7fe      	b.n	1000e9ee <RSV27_IRQHandler>

1000e9f0 <DMA0_IRQHandler>:
1000e9f0:	e7fe      	b.n	1000e9f0 <DMA0_IRQHandler>

1000e9f2 <DMA1_IRQHandler>:
1000e9f2:	e7fe      	b.n	1000e9f2 <DMA1_IRQHandler>

1000e9f4 <DMA2_IRQHandler>:
1000e9f4:	e7fe      	b.n	1000e9f4 <DMA2_IRQHandler>

1000e9f6 <DMA3_IRQHandler>:
1000e9f6:	e7fe      	b.n	1000e9f6 <DMA3_IRQHandler>

1000e9f8 <RSV32_IRQHandler>:
1000e9f8:	e7fe      	b.n	1000e9f8 <RSV32_IRQHandler>

1000e9fa <RSV33_IRQHandler>:
1000e9fa:	e7fe      	b.n	1000e9fa <RSV33_IRQHandler>

1000e9fc <UART2_IRQHandler>:
1000e9fc:	e7fe      	b.n	1000e9fc <UART2_IRQHandler>

1000e9fe <RSV35_IRQHandler>:
1000e9fe:	e7fe      	b.n	1000e9fe <RSV35_IRQHandler>

1000ea00 <I2C1_IRQHandler>:
1000ea00:	e7fe      	b.n	1000ea00 <I2C1_IRQHandler>

1000ea02 <RSV37_IRQHandler>:
1000ea02:	e7fe      	b.n	1000ea02 <RSV37_IRQHandler>

1000ea04 <RSV38_IRQHandler>:
1000ea04:	e7fe      	b.n	1000ea04 <RSV38_IRQHandler>

1000ea06 <RSV39_IRQHandler>:
1000ea06:	e7fe      	b.n	1000ea06 <RSV39_IRQHandler>

1000ea08 <RSV40_IRQHandler>:
1000ea08:	e7fe      	b.n	1000ea08 <RSV40_IRQHandler>

1000ea0a <RSV41_IRQHandler>:
1000ea0a:	e7fe      	b.n	1000ea0a <RSV41_IRQHandler>

1000ea0c <RSV42_IRQHandler>:
1000ea0c:	e7fe      	b.n	1000ea0c <RSV42_IRQHandler>

1000ea0e <RSV43_IRQHandler>:
1000ea0e:	e7fe      	b.n	1000ea0e <RSV43_IRQHandler>

1000ea10 <RSV44_IRQHandler>:
1000ea10:	e7fe      	b.n	1000ea10 <RSV44_IRQHandler>

1000ea12 <RSV45_IRQHandler>:
1000ea12:	e7fe      	b.n	1000ea12 <RSV45_IRQHandler>

1000ea14 <RSV46_IRQHandler>:
1000ea14:	e7fe      	b.n	1000ea14 <RSV46_IRQHandler>

1000ea16 <RSV47_IRQHandler>:
1000ea16:	e7fe      	b.n	1000ea16 <RSV47_IRQHandler>

1000ea18 <RSV48_IRQHandler>:
1000ea18:	e7fe      	b.n	1000ea18 <RSV48_IRQHandler>

1000ea1a <RSV49_IRQHandler>:
1000ea1a:	e7fe      	b.n	1000ea1a <RSV49_IRQHandler>

1000ea1c <RSV50_IRQHandler>:
1000ea1c:	e7fe      	b.n	1000ea1c <RSV50_IRQHandler>

1000ea1e <RSV51_IRQHandler>:
1000ea1e:	e7fe      	b.n	1000ea1e <RSV51_IRQHandler>

1000ea20 <RSV52_IRQHandler>:
1000ea20:	e7fe      	b.n	1000ea20 <RSV52_IRQHandler>

1000ea22 <WUT_IRQHandler>:
1000ea22:	e7fe      	b.n	1000ea22 <WUT_IRQHandler>

1000ea24 <GPIOWAKE_IRQHandler>:
1000ea24:	e7fe      	b.n	1000ea24 <GPIOWAKE_IRQHandler>

1000ea26 <RSV55_IRQHandler>:
1000ea26:	e7fe      	b.n	1000ea26 <RSV55_IRQHandler>

1000ea28 <SPI0_IRQHandler>:
1000ea28:	e7fe      	b.n	1000ea28 <SPI0_IRQHandler>

1000ea2a <WDT1_IRQHandler>:
1000ea2a:	e7fe      	b.n	1000ea2a <WDT1_IRQHandler>

1000ea2c <RSV58_IRQHandler>:
1000ea2c:	e7fe      	b.n	1000ea2c <RSV58_IRQHandler>

1000ea2e <PT_IRQHandler>:
1000ea2e:	e7fe      	b.n	1000ea2e <PT_IRQHandler>

1000ea30 <RSV60_IRQHandler>:
1000ea30:	e7fe      	b.n	1000ea30 <RSV60_IRQHandler>

1000ea32 <RSV61_IRQHandler>:
1000ea32:	e7fe      	b.n	1000ea32 <RSV61_IRQHandler>

1000ea34 <I2C2_IRQHandler>:
1000ea34:	e7fe      	b.n	1000ea34 <I2C2_IRQHandler>

1000ea36 <RISCV_IRQHandler>:
1000ea36:	e7fe      	b.n	1000ea36 <RISCV_IRQHandler>

1000ea38 <RSV64_IRQHandler>:
1000ea38:	e7fe      	b.n	1000ea38 <RSV64_IRQHandler>

1000ea3a <RSV65_IRQHandler>:
1000ea3a:	e7fe      	b.n	1000ea3a <RSV65_IRQHandler>

1000ea3c <RSV66_IRQHandler>:
1000ea3c:	e7fe      	b.n	1000ea3c <RSV66_IRQHandler>

1000ea3e <OWM_IRQHandler>:
1000ea3e:	e7fe      	b.n	1000ea3e <OWM_IRQHandler>

1000ea40 <RSV68_IRQHandler>:
1000ea40:	e7fe      	b.n	1000ea40 <RSV68_IRQHandler>

1000ea42 <RSV69_IRQHandler>:
1000ea42:	e7fe      	b.n	1000ea42 <RSV69_IRQHandler>

1000ea44 <RSV70_IRQHandler>:
1000ea44:	e7fe      	b.n	1000ea44 <RSV70_IRQHandler>

1000ea46 <RSV71_IRQHandler>:
1000ea46:	e7fe      	b.n	1000ea46 <RSV71_IRQHandler>

1000ea48 <RSV72_IRQHandler>:
1000ea48:	e7fe      	b.n	1000ea48 <RSV72_IRQHandler>

1000ea4a <RSV73_IRQHandler>:
1000ea4a:	e7fe      	b.n	1000ea4a <RSV73_IRQHandler>

1000ea4c <RSV74_IRQHandler>:
1000ea4c:	e7fe      	b.n	1000ea4c <RSV74_IRQHandler>

1000ea4e <RSV75_IRQHandler>:
1000ea4e:	e7fe      	b.n	1000ea4e <RSV75_IRQHandler>

1000ea50 <RSV76_IRQHandler>:
1000ea50:	e7fe      	b.n	1000ea50 <RSV76_IRQHandler>

1000ea52 <RSV77_IRQHandler>:
1000ea52:	e7fe      	b.n	1000ea52 <RSV77_IRQHandler>

1000ea54 <RSV78_IRQHandler>:
1000ea54:	e7fe      	b.n	1000ea54 <RSV78_IRQHandler>

1000ea56 <RSV79_IRQHandler>:
1000ea56:	e7fe      	b.n	1000ea56 <RSV79_IRQHandler>

1000ea58 <RSV80_IRQHandler>:
1000ea58:	e7fe      	b.n	1000ea58 <RSV80_IRQHandler>

1000ea5a <RSV81_IRQHandler>:
1000ea5a:	e7fe      	b.n	1000ea5a <RSV81_IRQHandler>

1000ea5c <ECC_IRQHandler>:
1000ea5c:	e7fe      	b.n	1000ea5c <ECC_IRQHandler>

1000ea5e <DVS_IRQHandler>:
1000ea5e:	e7fe      	b.n	1000ea5e <DVS_IRQHandler>

1000ea60 <SIMO_IRQHandler>:
1000ea60:	e7fe      	b.n	1000ea60 <SIMO_IRQHandler>

1000ea62 <RSV85_IRQHandler>:
1000ea62:	e7fe      	b.n	1000ea62 <RSV85_IRQHandler>

1000ea64 <RSV86_IRQHandler>:
1000ea64:	e7fe      	b.n	1000ea64 <RSV86_IRQHandler>

1000ea66 <RSV87_IRQHandler>:
1000ea66:	e7fe      	b.n	1000ea66 <RSV87_IRQHandler>

1000ea68 <UART3_IRQHandler>:
1000ea68:	e7fe      	b.n	1000ea68 <UART3_IRQHandler>

1000ea6a <RSV89_IRQHandler>:
1000ea6a:	e7fe      	b.n	1000ea6a <RSV89_IRQHandler>

1000ea6c <RSV90_IRQHandler>:
1000ea6c:	e7fe      	b.n	1000ea6c <RSV90_IRQHandler>

1000ea6e <PCIF_IRQHandler>:
1000ea6e:	e7fe      	b.n	1000ea6e <PCIF_IRQHandler>

1000ea70 <RSV92_IRQHandler>:
1000ea70:	e7fe      	b.n	1000ea70 <RSV92_IRQHandler>

1000ea72 <RSV93_IRQHandler>:
1000ea72:	e7fe      	b.n	1000ea72 <RSV93_IRQHandler>

1000ea74 <RSV94_IRQHandler>:
1000ea74:	e7fe      	b.n	1000ea74 <RSV94_IRQHandler>

1000ea76 <RSV95_IRQHandler>:
1000ea76:	e7fe      	b.n	1000ea76 <RSV95_IRQHandler>

1000ea78 <RSV96_IRQHandler>:
1000ea78:	e7fe      	b.n	1000ea78 <RSV96_IRQHandler>

1000ea7a <AES_IRQHandler>:
1000ea7a:	e7fe      	b.n	1000ea7a <AES_IRQHandler>

1000ea7c <RSV98_IRQHandler>:
1000ea7c:	e7fe      	b.n	1000ea7c <RSV98_IRQHandler>

1000ea7e <I2S_IRQHandler>:
1000ea7e:	e7fe      	b.n	1000ea7e <I2S_IRQHandler>

1000ea80 <CNN_FIFO_IRQHandler>:
1000ea80:	e7fe      	b.n	1000ea80 <CNN_FIFO_IRQHandler>

1000ea82 <CNN_IRQHandler>:
1000ea82:	e7fe      	b.n	1000ea82 <CNN_IRQHandler>

1000ea84 <RSV102_IRQHandler>:
1000ea84:	e7fe      	b.n	1000ea84 <RSV102_IRQHandler>

1000ea86 <LPCMP_IRQHandler>:
1000ea86:	e7fe      	b.n	1000ea86 <LPCMP_IRQHandler>
1000ea88:	20020000 	.word	0x20020000
1000ea8c:	1000eb55 	.word	0x1000eb55
1000ea90:	10019658 	.word	0x10019658
1000ea94:	20000000 	.word	0x20000000
1000ea98:	200006f8 	.word	0x200006f8
1000ea9c:	20000800 	.word	0x20000800
1000eaa0:	20001340 	.word	0x20001340
1000eaa4:	1000eb59 	.word	0x1000eb59
1000eaa8:	10014199 	.word	0x10014199
1000eaac:	1000e3f9 	.word	0x1000e3f9

1000eab0 <_sbrk>:
extern unsigned int __HeapLimit;
caddr_t _sbrk(int incr)
{
    char *prev_heap_end;

    if (heap_end == 0) {
1000eab0:	4a0b      	ldr	r2, [pc, #44]	@ (1000eae0 <_sbrk+0x30>)
{
1000eab2:	b508      	push	{r3, lr}
1000eab4:	4603      	mov	r3, r0
    if (heap_end == 0) {
1000eab6:	6810      	ldr	r0, [r2, #0]
1000eab8:	b128      	cbz	r0, 1000eac6 <_sbrk+0x16>
        heap_end = (caddr_t)&__HeapBase;
    }
    prev_heap_end = heap_end;

    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000eaba:	490a      	ldr	r1, [pc, #40]	@ (1000eae4 <_sbrk+0x34>)
1000eabc:	4403      	add	r3, r0
1000eabe:	428b      	cmp	r3, r1
1000eac0:	d807      	bhi.n	1000ead2 <_sbrk+0x22>
        errno = ENOMEM;
        return (caddr_t)-1;
    }

    heap_end += incr;
1000eac2:	6013      	str	r3, [r2, #0]

    return (caddr_t)prev_heap_end;
}
1000eac4:	bd08      	pop	{r3, pc}
        heap_end = (caddr_t)&__HeapBase;
1000eac6:	4808      	ldr	r0, [pc, #32]	@ (1000eae8 <_sbrk+0x38>)
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000eac8:	4906      	ldr	r1, [pc, #24]	@ (1000eae4 <_sbrk+0x34>)
        heap_end = (caddr_t)&__HeapBase;
1000eaca:	6010      	str	r0, [r2, #0]
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000eacc:	4403      	add	r3, r0
1000eace:	428b      	cmp	r3, r1
1000ead0:	d9f7      	bls.n	1000eac2 <_sbrk+0x12>
        errno = ENOMEM;
1000ead2:	f005 fb4d 	bl	10014170 <__errno>
1000ead6:	230c      	movs	r3, #12
1000ead8:	6003      	str	r3, [r0, #0]
        return (caddr_t)-1;
1000eada:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000eade:	bd08      	pop	{r3, pc}
1000eae0:	20000938 	.word	0x20000938
1000eae4:	2001f000 	.word	0x2001f000
1000eae8:	20001348 	.word	0x20001348

1000eaec <SystemCoreClockUpdate>:
__weak void SystemCoreClockUpdate(void)
{
    uint32_t base_freq, div, clk_src;

    // Get the clock source and frequency
    clk_src = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL);
1000eaec:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
1000eaf0:	689a      	ldr	r2, [r3, #8]
1000eaf2:	f402 6260 	and.w	r2, r2, #3584	@ 0xe00
    switch (clk_src) {
1000eaf6:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
1000eafa:	d020      	beq.n	1000eb3e <SystemCoreClockUpdate+0x52>
1000eafc:	d911      	bls.n	1000eb22 <SystemCoreClockUpdate+0x36>
1000eafe:	f5b2 6f40 	cmp.w	r2, #3072	@ 0xc00
1000eb02:	d017      	beq.n	1000eb34 <SystemCoreClockUpdate+0x48>
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_INRO:
        base_freq = INRO_FREQ;
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_IPO:
        base_freq = IPO_FREQ;
1000eb04:	4b0f      	ldr	r3, [pc, #60]	@ (1000eb44 <SystemCoreClockUpdate+0x58>)
1000eb06:	4910      	ldr	r1, [pc, #64]	@ (1000eb48 <SystemCoreClockUpdate+0x5c>)
1000eb08:	f5b2 6f60 	cmp.w	r2, #3584	@ 0xe00
1000eb0c:	bf18      	it	ne
1000eb0e:	460b      	movne	r3, r1
        // This code should never execute, however, initialize to safe value.
        base_freq = HIRC_FREQ;
        break;
    }

    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1000eb10:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000

    SystemCoreClock = base_freq >> div;
1000eb14:	490d      	ldr	r1, [pc, #52]	@ (1000eb4c <SystemCoreClockUpdate+0x60>)
    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1000eb16:	6892      	ldr	r2, [r2, #8]
1000eb18:	f3c2 1282 	ubfx	r2, r2, #6, #3
    SystemCoreClock = base_freq >> div;
1000eb1c:	40d3      	lsrs	r3, r2
1000eb1e:	600b      	str	r3, [r1, #0]
}
1000eb20:	4770      	bx	lr
    switch (clk_src) {
1000eb22:	b152      	cbz	r2, 1000eb3a <SystemCoreClockUpdate+0x4e>
        base_freq = IPO_FREQ;
1000eb24:	4908      	ldr	r1, [pc, #32]	@ (1000eb48 <SystemCoreClockUpdate+0x5c>)
1000eb26:	f247 5330 	movw	r3, #30000	@ 0x7530
1000eb2a:	f5b2 6fc0 	cmp.w	r2, #1536	@ 0x600
1000eb2e:	bf18      	it	ne
1000eb30:	460b      	movne	r3, r1
1000eb32:	e7ed      	b.n	1000eb10 <SystemCoreClockUpdate+0x24>
        base_freq = ERTCO_FREQ;
1000eb34:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
1000eb38:	e7ea      	b.n	1000eb10 <SystemCoreClockUpdate+0x24>
        base_freq = ISO_FREQ;
1000eb3a:	4b05      	ldr	r3, [pc, #20]	@ (1000eb50 <SystemCoreClockUpdate+0x64>)
1000eb3c:	e7e8      	b.n	1000eb10 <SystemCoreClockUpdate+0x24>
        base_freq = IBRO_FREQ;
1000eb3e:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
1000eb42:	e7e5      	b.n	1000eb10 <SystemCoreClockUpdate+0x24>
1000eb44:	047868c0 	.word	0x047868c0
1000eb48:	05f5e100 	.word	0x05f5e100
1000eb4c:	20001340 	.word	0x20001340
1000eb50:	03938700 	.word	0x03938700

1000eb54 <PreInit>:
 */
__weak int PreInit(void)
{
    /* Do nothing */
    return 0;
}
1000eb54:	2000      	movs	r0, #0
1000eb56:	4770      	bx	lr

1000eb58 <SystemInit>:
 * You may over-ride this function in your program by defining a custom 
 *  SystemInit(), but care should be taken to reproduce the initialization
 *  steps or a non-functional system may result.
 */
__weak void SystemInit(void)
{
1000eb58:	b510      	push	{r4, lr}
    /* Configure the interrupt controller to use the application vector table in */
    /* the application space */
#if defined(__CC_ARM) || defined(__GNUC__)
    /* IAR sets the VTOR pointer incorrectly and causes stack corruption */
    SCB->VTOR = (uint32_t)__isr_vector;
1000eb5a:	4c0a      	ldr	r4, [pc, #40]	@ (1000eb84 <SystemInit+0x2c>)
1000eb5c:	4b0a      	ldr	r3, [pc, #40]	@ (1000eb88 <SystemInit+0x30>)
1000eb5e:	60a3      	str	r3, [r4, #8]
#endif /* __CC_ARM || __GNUC__ */

    /* Enable instruction cache */
    MXC_ICC_Enable(MXC_ICC0);
1000eb60:	480a      	ldr	r0, [pc, #40]	@ (1000eb8c <SystemInit+0x34>)
1000eb62:	f000 fe37 	bl	1000f7d4 <MXC_ICC_Enable>

    /* Enable FPU on Cortex-M4, which occupies coprocessor slots 10 & 11 */
    /* Grant full access, per "Table B3-24 CPACR bit assignments". */
    /* DDI0403D "ARMv7-M Architecture Reference Manual" */
    SCB->CPACR |= SCB_CPACR_CP10_Msk | SCB_CPACR_CP11_Msk;
1000eb66:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
1000eb6a:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
1000eb6e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
1000eb72:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
1000eb76:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();

    SystemCoreClockUpdate();
1000eb7a:	f7ff ffb7 	bl	1000eaec <SystemCoreClockUpdate>

    Board_Init();
1000eb7e:	f7ff fdd7 	bl	1000e730 <Board_Init>
}
1000eb82:	bd10      	pop	{r4, pc}
1000eb84:	e000ed00 	.word	0xe000ed00
1000eb88:	1000e000 	.word	0x1000e000
1000eb8c:	4002a000 	.word	0x4002a000

1000eb90 <MXC_DelayInit>:
    }
}

/* ************************************************************************** */
static void MXC_DelayInit(uint32_t us)
{
1000eb90:	b538      	push	{r3, r4, r5, lr}
    uint32_t starttick, reload, ticks, lastticks;

    // Record the current tick value and clear the overflow flag
    starttick = SysTick->VAL;
1000eb92:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000

    // Save the state of control register (and clear the overflow flag)
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1000eb96:	4918      	ldr	r1, [pc, #96]	@ (1000ebf8 <MXC_DelayInit+0x68>)
    starttick = SysTick->VAL;
1000eb98:	699c      	ldr	r4, [r3, #24]
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1000eb9a:	691a      	ldr	r2, [r3, #16]
1000eb9c:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
1000eba0:	600a      	str	r2, [r1, #0]

    // If the SysTick is not running, configure and start it
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk)) {
1000eba2:	691a      	ldr	r2, [r3, #16]
1000eba4:	07d2      	lsls	r2, r2, #31
1000eba6:	d41f      	bmi.n	1000ebe8 <MXC_DelayInit+0x58>
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
1000eba8:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1000ebac:	2205      	movs	r2, #5
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
1000ebae:	615c      	str	r4, [r3, #20]
        starttick = SysTick_VAL_CURRENT_Msk;
        reload = SysTick_LOAD_RELOAD_Msk + 1;
1000ebb0:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
1000ebb4:	619c      	str	r4, [r3, #24]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1000ebb6:	611a      	str	r2, [r3, #16]
    } else {
        reload = SysTick->LOAD + 1; // get the current reload value
    }

    // Calculate the total number of ticks to delay
    ticks = (uint32_t)(((uint64_t)us * (uint64_t)SystemCoreClock) / 1000000);
1000ebb8:	4b10      	ldr	r3, [pc, #64]	@ (1000ebfc <MXC_DelayInit+0x6c>)
1000ebba:	4a11      	ldr	r2, [pc, #68]	@ (1000ec00 <MXC_DelayInit+0x70>)
1000ebbc:	6819      	ldr	r1, [r3, #0]
1000ebbe:	2300      	movs	r3, #0
1000ebc0:	fba0 0101 	umull	r0, r1, r0, r1
1000ebc4:	f009 fffa 	bl	10018bbc <__aeabi_uldivmod>

    // How many overflows of the SysTick will occur
    overflows = ticks / reload;
1000ebc8:	4b0e      	ldr	r3, [pc, #56]	@ (1000ec04 <MXC_DelayInit+0x74>)
1000ebca:	fbb0 f2f5 	udiv	r2, r0, r5

    // How many remaining ticks after the last overflow
    lastticks = ticks % reload;
1000ebce:	fb05 0012 	mls	r0, r5, r2, r0

    // Check if there will be another overflow due to the current value of the SysTick
    if (lastticks >= starttick) {
1000ebd2:	4284      	cmp	r4, r0
    overflows = ticks / reload;
1000ebd4:	601a      	str	r2, [r3, #0]
    if (lastticks >= starttick) {
1000ebd6:	d80a      	bhi.n	1000ebee <MXC_DelayInit+0x5e>
        overflows++;
1000ebd8:	681a      	ldr	r2, [r3, #0]
1000ebda:	3201      	adds	r2, #1
1000ebdc:	601a      	str	r2, [r3, #0]
        endtick = reload - (lastticks - starttick);
1000ebde:	4425      	add	r5, r4
1000ebe0:	4b09      	ldr	r3, [pc, #36]	@ (1000ec08 <MXC_DelayInit+0x78>)
1000ebe2:	1a28      	subs	r0, r5, r0
1000ebe4:	6018      	str	r0, [r3, #0]
    } else {
        endtick = starttick - lastticks;
    }
}
1000ebe6:	bd38      	pop	{r3, r4, r5, pc}
        reload = SysTick->LOAD + 1; // get the current reload value
1000ebe8:	695d      	ldr	r5, [r3, #20]
1000ebea:	3501      	adds	r5, #1
1000ebec:	e7e4      	b.n	1000ebb8 <MXC_DelayInit+0x28>
        endtick = starttick - lastticks;
1000ebee:	4b06      	ldr	r3, [pc, #24]	@ (1000ec08 <MXC_DelayInit+0x78>)
1000ebf0:	1a20      	subs	r0, r4, r0
1000ebf2:	6018      	str	r0, [r3, #0]
}
1000ebf4:	bd38      	pop	{r3, r4, r5, pc}
1000ebf6:	bf00      	nop
1000ebf8:	20000940 	.word	0x20000940
1000ebfc:	20001340 	.word	0x20001340
1000ec00:	000f4240 	.word	0x000f4240
1000ec04:	20000034 	.word	0x20000034
1000ec08:	20000944 	.word	0x20000944

1000ec0c <MXC_DelayAsync>:

/* ************************************************************************** */
int MXC_DelayAsync(uint32_t us, mxc_delay_complete_t callback)
{
1000ec0c:	b510      	push	{r4, lr}
    cbFunc = callback;

    // Check if timeout currently ongoing
    if (overflows > 0) {
1000ec0e:	4c0c      	ldr	r4, [pc, #48]	@ (1000ec40 <MXC_DelayAsync+0x34>)
    cbFunc = callback;
1000ec10:	4b0c      	ldr	r3, [pc, #48]	@ (1000ec44 <MXC_DelayAsync+0x38>)
    if (overflows > 0) {
1000ec12:	6822      	ldr	r2, [r4, #0]
    cbFunc = callback;
1000ec14:	6019      	str	r1, [r3, #0]
    if (overflows > 0) {
1000ec16:	2a00      	cmp	r2, #0
1000ec18:	dc0e      	bgt.n	1000ec38 <MXC_DelayAsync+0x2c>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1000ec1a:	b908      	cbnz	r0, 1000ec20 <MXC_DelayAsync+0x14>
        return E_NO_ERROR;
1000ec1c:	2000      	movs	r0, #0
    if (overflows > 0) {
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
    }

    return E_NO_ERROR;
}
1000ec1e:	bd10      	pop	{r4, pc}
    MXC_DelayInit(us);
1000ec20:	f7ff ffb6 	bl	1000eb90 <MXC_DelayInit>
    if (overflows > 0) {
1000ec24:	6823      	ldr	r3, [r4, #0]
1000ec26:	2b00      	cmp	r3, #0
1000ec28:	ddf8      	ble.n	1000ec1c <MXC_DelayAsync+0x10>
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
1000ec2a:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1000ec2e:	6913      	ldr	r3, [r2, #16]
1000ec30:	f043 0302 	orr.w	r3, r3, #2
1000ec34:	6113      	str	r3, [r2, #16]
1000ec36:	e7f1      	b.n	1000ec1c <MXC_DelayAsync+0x10>
        return E_BUSY;
1000ec38:	f06f 0005 	mvn.w	r0, #5
}
1000ec3c:	bd10      	pop	{r4, pc}
1000ec3e:	bf00      	nop
1000ec40:	20000034 	.word	0x20000034
1000ec44:	2000093c 	.word	0x2000093c

1000ec48 <MXC_DelayCheck>:

/* ************************************************************************** */
int MXC_DelayCheck(void)
{
1000ec48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Check if timeout currently ongoing
    if (overflows < 0) {
1000ec4a:	4c17      	ldr	r4, [pc, #92]	@ (1000eca8 <MXC_DelayCheck+0x60>)
1000ec4c:	6823      	ldr	r3, [r4, #0]
1000ec4e:	2b00      	cmp	r3, #0
1000ec50:	db1e      	blt.n	1000ec90 <MXC_DelayCheck+0x48>

        return E_NO_ERROR;
    }

    // Check the global values
    if ((overflows == 0) && (SysTick->VAL <= endtick)) {
1000ec52:	6826      	ldr	r6, [r4, #0]
1000ec54:	bb2e      	cbnz	r6, 1000eca2 <MXC_DelayCheck+0x5a>
1000ec56:	4b15      	ldr	r3, [pc, #84]	@ (1000ecac <MXC_DelayCheck+0x64>)
1000ec58:	f04f 25e0 	mov.w	r5, #3758153728	@ 0xe000e000
1000ec5c:	681b      	ldr	r3, [r3, #0]
1000ec5e:	69aa      	ldr	r2, [r5, #24]
1000ec60:	429a      	cmp	r2, r3
1000ec62:	d81e      	bhi.n	1000eca2 <MXC_DelayCheck+0x5a>
}

/* ************************************************************************** */
void MXC_DelayAbort(void)
{
    if (cbFunc != NULL) {
1000ec64:	4f12      	ldr	r7, [pc, #72]	@ (1000ecb0 <MXC_DelayCheck+0x68>)
1000ec66:	683b      	ldr	r3, [r7, #0]
1000ec68:	b15b      	cbz	r3, 1000ec82 <MXC_DelayCheck+0x3a>
        cbFunc(E_ABORT);
1000ec6a:	f06f 000f 	mvn.w	r0, #15
1000ec6e:	4798      	blx	r3
        cbFunc = NULL;
    }

    SysTick->CTRL = ctrl_save;
1000ec70:	4b10      	ldr	r3, [pc, #64]	@ (1000ecb4 <MXC_DelayCheck+0x6c>)
        cbFunc = NULL;
1000ec72:	603e      	str	r6, [r7, #0]
    SysTick->CTRL = ctrl_save;
1000ec74:	681a      	ldr	r2, [r3, #0]
1000ec76:	612a      	str	r2, [r5, #16]
    overflows = -1;
1000ec78:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1000ec7c:	6023      	str	r3, [r4, #0]
        return E_NO_ERROR;
1000ec7e:	2000      	movs	r0, #0
}
1000ec80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SysTick->CTRL = ctrl_save;
1000ec82:	4a0c      	ldr	r2, [pc, #48]	@ (1000ecb4 <MXC_DelayCheck+0x6c>)
    overflows = -1;
1000ec84:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
1000ec88:	6812      	ldr	r2, [r2, #0]
1000ec8a:	612a      	str	r2, [r5, #16]
    overflows = -1;
1000ec8c:	6023      	str	r3, [r4, #0]
        if (cbFunc != NULL) {
1000ec8e:	e7f6      	b.n	1000ec7e <MXC_DelayCheck+0x36>
        if (cbFunc != NULL) {
1000ec90:	4c07      	ldr	r4, [pc, #28]	@ (1000ecb0 <MXC_DelayCheck+0x68>)
1000ec92:	6823      	ldr	r3, [r4, #0]
1000ec94:	2b00      	cmp	r3, #0
1000ec96:	d0f2      	beq.n	1000ec7e <MXC_DelayCheck+0x36>
            cbFunc(E_NO_ERROR);
1000ec98:	2000      	movs	r0, #0
1000ec9a:	4798      	blx	r3
            cbFunc = NULL;
1000ec9c:	2300      	movs	r3, #0
1000ec9e:	6023      	str	r3, [r4, #0]
1000eca0:	e7ed      	b.n	1000ec7e <MXC_DelayCheck+0x36>
    return E_BUSY;
1000eca2:	f06f 0005 	mvn.w	r0, #5
}
1000eca6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000eca8:	20000034 	.word	0x20000034
1000ecac:	20000944 	.word	0x20000944
1000ecb0:	2000093c 	.word	0x2000093c
1000ecb4:	20000940 	.word	0x20000940

1000ecb8 <MXC_DelayAbort>:
{
1000ecb8:	b510      	push	{r4, lr}
    if (cbFunc != NULL) {
1000ecba:	4c09      	ldr	r4, [pc, #36]	@ (1000ece0 <MXC_DelayAbort+0x28>)
1000ecbc:	6823      	ldr	r3, [r4, #0]
1000ecbe:	b123      	cbz	r3, 1000ecca <MXC_DelayAbort+0x12>
        cbFunc(E_ABORT);
1000ecc0:	f06f 000f 	mvn.w	r0, #15
1000ecc4:	4798      	blx	r3
        cbFunc = NULL;
1000ecc6:	2300      	movs	r3, #0
1000ecc8:	6023      	str	r3, [r4, #0]
    SysTick->CTRL = ctrl_save;
1000ecca:	4a06      	ldr	r2, [pc, #24]	@ (1000ece4 <MXC_DelayAbort+0x2c>)
    overflows = -1;
1000eccc:	4b06      	ldr	r3, [pc, #24]	@ (1000ece8 <MXC_DelayAbort+0x30>)
    SysTick->CTRL = ctrl_save;
1000ecce:	6810      	ldr	r0, [r2, #0]
1000ecd0:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
    overflows = -1;
1000ecd4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
1000ecd8:	6108      	str	r0, [r1, #16]
    overflows = -1;
1000ecda:	601a      	str	r2, [r3, #0]
}
1000ecdc:	bd10      	pop	{r4, pc}
1000ecde:	bf00      	nop
1000ece0:	2000093c 	.word	0x2000093c
1000ece4:	20000940 	.word	0x20000940
1000ece8:	20000034 	.word	0x20000034

1000ecec <MXC_Delay>:

/* ************************************************************************** */
int MXC_Delay(uint32_t us)
{
1000ecec:	b538      	push	{r3, r4, r5, lr}
    // Check if timeout currently ongoing
    if (overflows > 0) {
1000ecee:	4c18      	ldr	r4, [pc, #96]	@ (1000ed50 <MXC_Delay+0x64>)
1000ecf0:	6822      	ldr	r2, [r4, #0]
1000ecf2:	2a00      	cmp	r2, #0
1000ecf4:	dc29      	bgt.n	1000ed4a <MXC_Delay+0x5e>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1000ecf6:	b908      	cbnz	r0, 1000ecfc <MXC_Delay+0x10>
        return E_NO_ERROR;
1000ecf8:	2000      	movs	r0, #0
    // Wait for the counter value
    while (SysTick->VAL > endtick) {}

    MXC_DelayAbort();
    return E_NO_ERROR;
}
1000ecfa:	bd38      	pop	{r3, r4, r5, pc}
    MXC_DelayInit(us);
1000ecfc:	f7ff ff48 	bl	1000eb90 <MXC_DelayInit>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1000ed00:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    while (overflows > 0) {
1000ed04:	e002      	b.n	1000ed0c <MXC_Delay+0x20>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1000ed06:	6913      	ldr	r3, [r2, #16]
1000ed08:	03db      	lsls	r3, r3, #15
1000ed0a:	d41a      	bmi.n	1000ed42 <MXC_Delay+0x56>
    while (overflows > 0) {
1000ed0c:	6823      	ldr	r3, [r4, #0]
1000ed0e:	2b00      	cmp	r3, #0
1000ed10:	dcf9      	bgt.n	1000ed06 <MXC_Delay+0x1a>
    while (SysTick->VAL > endtick) {}
1000ed12:	4b10      	ldr	r3, [pc, #64]	@ (1000ed54 <MXC_Delay+0x68>)
1000ed14:	681a      	ldr	r2, [r3, #0]
1000ed16:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
1000ed1a:	698b      	ldr	r3, [r1, #24]
1000ed1c:	4293      	cmp	r3, r2
1000ed1e:	d8fc      	bhi.n	1000ed1a <MXC_Delay+0x2e>
    if (cbFunc != NULL) {
1000ed20:	4d0d      	ldr	r5, [pc, #52]	@ (1000ed58 <MXC_Delay+0x6c>)
1000ed22:	682b      	ldr	r3, [r5, #0]
1000ed24:	b123      	cbz	r3, 1000ed30 <MXC_Delay+0x44>
        cbFunc(E_ABORT);
1000ed26:	f06f 000f 	mvn.w	r0, #15
1000ed2a:	4798      	blx	r3
        cbFunc = NULL;
1000ed2c:	2300      	movs	r3, #0
1000ed2e:	602b      	str	r3, [r5, #0]
    SysTick->CTRL = ctrl_save;
1000ed30:	4b0a      	ldr	r3, [pc, #40]	@ (1000ed5c <MXC_Delay+0x70>)
1000ed32:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1000ed36:	6819      	ldr	r1, [r3, #0]
1000ed38:	6111      	str	r1, [r2, #16]
    overflows = -1;
1000ed3a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1000ed3e:	6023      	str	r3, [r4, #0]
}
1000ed40:	e7da      	b.n	1000ecf8 <MXC_Delay+0xc>
            overflows--;
1000ed42:	6823      	ldr	r3, [r4, #0]
1000ed44:	3b01      	subs	r3, #1
1000ed46:	6023      	str	r3, [r4, #0]
1000ed48:	e7e0      	b.n	1000ed0c <MXC_Delay+0x20>
        return E_BUSY;
1000ed4a:	f06f 0005 	mvn.w	r0, #5
}
1000ed4e:	bd38      	pop	{r3, r4, r5, pc}
1000ed50:	20000034 	.word	0x20000034
1000ed54:	20000944 	.word	0x20000944
1000ed58:	2000093c 	.word	0x2000093c
1000ed5c:	20000940 	.word	0x20000940

1000ed60 <MXC_NVIC_SetVector>:
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
    SCB->VTOR = (uint32_t)&ramVectorTable;
}

void MXC_NVIC_SetVector(IRQn_Type irqn, void (*irq_handler)(void))
{
1000ed60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int index = irqn + 16; /* offset for externals */

    /* If not copied, do copy */
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1000ed62:	4e0f      	ldr	r6, [pc, #60]	@ (1000eda0 <MXC_NVIC_SetVector+0x40>)
1000ed64:	4b0f      	ldr	r3, [pc, #60]	@ (1000eda4 <MXC_NVIC_SetVector+0x44>)
1000ed66:	68b2      	ldr	r2, [r6, #8]
1000ed68:	429a      	cmp	r2, r3
{
1000ed6a:	4604      	mov	r4, r0
1000ed6c:	460d      	mov	r5, r1
    int index = irqn + 16; /* offset for externals */
1000ed6e:	f100 0710 	add.w	r7, r0, #16
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
1000ed72:	d007      	beq.n	1000ed84 <MXC_NVIC_SetVector+0x24>
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
1000ed74:	4618      	mov	r0, r3
1000ed76:	490c      	ldr	r1, [pc, #48]	@ (1000eda8 <MXC_NVIC_SetVector+0x48>)
1000ed78:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
1000ed7c:	f005 fa90 	bl	100142a0 <memcpy>
1000ed80:	4603      	mov	r3, r0
    SCB->VTOR = (uint32_t)&ramVectorTable;
1000ed82:	60b0      	str	r0, [r6, #8]
  if ((int32_t)(IRQn) >= 0)
1000ed84:	2c00      	cmp	r4, #0
        NVIC_SetRAM();
    }

    ramVectorTable[index] = irq_handler;
1000ed86:	f843 5027 	str.w	r5, [r3, r7, lsl #2]
1000ed8a:	db07      	blt.n	1000ed9c <MXC_NVIC_SetVector+0x3c>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000ed8c:	4a07      	ldr	r2, [pc, #28]	@ (1000edac <MXC_NVIC_SetVector+0x4c>)
1000ed8e:	0961      	lsrs	r1, r4, #5
1000ed90:	2301      	movs	r3, #1
1000ed92:	f004 041f 	and.w	r4, r4, #31
1000ed96:	40a3      	lsls	r3, r4
1000ed98:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
    NVIC_EnableIRQ(irqn);
}
1000ed9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000ed9e:	bf00      	nop
1000eda0:	e000ed00 	.word	0xe000ed00
1000eda4:	20000a00 	.word	0x20000a00
1000eda8:	1000e000 	.word	0x1000e000
1000edac:	e000e100 	.word	0xe000e100

1000edb0 <MXC_SYS_ClockDisable>:

/* ************************************************************************** */
void MXC_SYS_ClockDisable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
1000edb0:	283f      	cmp	r0, #63	@ 0x3f
1000edb2:	d908      	bls.n	1000edc6 <MXC_SYS_ClockDisable+0x16>
        clock -= 64;
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1000edb4:	4a0d      	ldr	r2, [pc, #52]	@ (1000edec <MXC_SYS_ClockDisable+0x3c>)
        clock -= 64;
1000edb6:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1000edb8:	68d1      	ldr	r1, [r2, #12]
1000edba:	b2c0      	uxtb	r0, r0
1000edbc:	2301      	movs	r3, #1
1000edbe:	4083      	lsls	r3, r0
1000edc0:	430b      	orrs	r3, r1
1000edc2:	60d3      	str	r3, [r2, #12]
1000edc4:	4770      	bx	lr
    } else if (clock > 31) {
1000edc6:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 |= (0x1 << clock);
1000edc8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    } else if (clock > 31) {
1000edcc:	d907      	bls.n	1000edde <MXC_SYS_ClockDisable+0x2e>
        clock -= 32;
1000edce:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 |= (0x1 << clock);
1000edd0:	6c91      	ldr	r1, [r2, #72]	@ 0x48
1000edd2:	b2c0      	uxtb	r0, r0
1000edd4:	2301      	movs	r3, #1
1000edd6:	4083      	lsls	r3, r0
1000edd8:	430b      	orrs	r3, r1
1000edda:	6493      	str	r3, [r2, #72]	@ 0x48
1000eddc:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 |= (0x1 << clock);
1000edde:	6a51      	ldr	r1, [r2, #36]	@ 0x24
1000ede0:	2301      	movs	r3, #1
1000ede2:	4083      	lsls	r3, r0
1000ede4:	430b      	orrs	r3, r1
1000ede6:	6253      	str	r3, [r2, #36]	@ 0x24
    }
}
1000ede8:	4770      	bx	lr
1000edea:	bf00      	nop
1000edec:	40080000 	.word	0x40080000

1000edf0 <MXC_SYS_ClockEnable>:

/* ************************************************************************** */
void MXC_SYS_ClockEnable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
1000edf0:	283f      	cmp	r0, #63	@ 0x3f
1000edf2:	d909      	bls.n	1000ee08 <MXC_SYS_ClockEnable+0x18>
        clock -= 64;
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1000edf4:	490e      	ldr	r1, [pc, #56]	@ (1000ee30 <MXC_SYS_ClockEnable+0x40>)
        clock -= 64;
1000edf6:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1000edf8:	68cb      	ldr	r3, [r1, #12]
1000edfa:	b2c0      	uxtb	r0, r0
1000edfc:	2201      	movs	r2, #1
1000edfe:	4082      	lsls	r2, r0
1000ee00:	ea23 0302 	bic.w	r3, r3, r2
1000ee04:	60cb      	str	r3, [r1, #12]
1000ee06:	4770      	bx	lr
    } else if (clock > 31) {
1000ee08:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1000ee0a:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
    } else if (clock > 31) {
1000ee0e:	d908      	bls.n	1000ee22 <MXC_SYS_ClockEnable+0x32>
        clock -= 32;
1000ee10:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1000ee12:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
1000ee14:	b2c0      	uxtb	r0, r0
1000ee16:	2201      	movs	r2, #1
1000ee18:	4082      	lsls	r2, r0
1000ee1a:	ea23 0302 	bic.w	r3, r3, r2
1000ee1e:	648b      	str	r3, [r1, #72]	@ 0x48
1000ee20:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 &= ~(0x1 << clock);
1000ee22:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1000ee24:	2201      	movs	r2, #1
1000ee26:	4082      	lsls	r2, r0
1000ee28:	ea23 0302 	bic.w	r3, r3, r2
1000ee2c:	624b      	str	r3, [r1, #36]	@ 0x24
    }
}
1000ee2e:	4770      	bx	lr
1000ee30:	40080000 	.word	0x40080000

1000ee34 <MXC_SYS_ClockSourceEnable>:
    }
}

/******************************************************************************/
int MXC_SYS_ClockSourceEnable(mxc_sys_system_clock_t clock)
{
1000ee34:	b510      	push	{r4, lr}
    switch (clock) {
1000ee36:	2807      	cmp	r0, #7
1000ee38:	d80a      	bhi.n	1000ee50 <MXC_SYS_ClockSourceEnable+0x1c>
1000ee3a:	e8df f000 	tbb	[pc, r0]
1000ee3e:	090c      	.short	0x090c
1000ee40:	47332309 	.word	0x47332309
1000ee44:	045b      	.short	0x045b

    default:
        return E_BAD_PARAM;
        break;
    }
}
1000ee46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return MXC_GPIO_Config(&gpio_cfg_extclk);
1000ee4a:	4836      	ldr	r0, [pc, #216]	@ (1000ef24 <MXC_SYS_ClockSourceEnable+0xf0>)
1000ee4c:	f000 b8b0 	b.w	1000efb0 <MXC_GPIO_Config>
    switch (clock) {
1000ee50:	f06f 0002 	mvn.w	r0, #2
}
1000ee54:	bd10      	pop	{r4, pc}
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1000ee56:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    // We do not have access to a system tick in the RV core.
    while (!(MXC_GCR->clkctrl & ready)) {}
    return E_NO_ERROR;
#else
    // Start timeout, wait for ready
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ee5a:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1000ee5c:	68a3      	ldr	r3, [r4, #8]
1000ee5e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
1000ee62:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ee64:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ee68:	f7ff fed0 	bl	1000ec0c <MXC_DelayAsync>
1000ee6c:	e003      	b.n	1000ee76 <MXC_SYS_ClockSourceEnable+0x42>
    do {
        if (MXC_GCR->clkctrl & ready) {
            MXC_DelayAbort();
            return E_NO_ERROR;
        }
    } while (MXC_DelayCheck() == E_BUSY);
1000ee6e:	f7ff feeb 	bl	1000ec48 <MXC_DelayCheck>
1000ee72:	3006      	adds	r0, #6
1000ee74:	d152      	bne.n	1000ef1c <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000ee76:	68a3      	ldr	r3, [r4, #8]
1000ee78:	0159      	lsls	r1, r3, #5
1000ee7a:	d5f8      	bpl.n	1000ee6e <MXC_SYS_ClockSourceEnable+0x3a>
            MXC_DelayAbort();
1000ee7c:	f7ff ff1c 	bl	1000ecb8 <MXC_DelayAbort>
            return E_NO_ERROR;
1000ee80:	2000      	movs	r0, #0
}
1000ee82:	bd10      	pop	{r4, pc}
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ee84:	2100      	movs	r1, #0
1000ee86:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ee8a:	f7ff febf 	bl	1000ec0c <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
1000ee8e:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1000ee92:	e003      	b.n	1000ee9c <MXC_SYS_ClockSourceEnable+0x68>
    } while (MXC_DelayCheck() == E_BUSY);
1000ee94:	f7ff fed8 	bl	1000ec48 <MXC_DelayCheck>
1000ee98:	3006      	adds	r0, #6
1000ee9a:	d13f      	bne.n	1000ef1c <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000ee9c:	68a3      	ldr	r3, [r4, #8]
1000ee9e:	009a      	lsls	r2, r3, #2
1000eea0:	d4ec      	bmi.n	1000ee7c <MXC_SYS_ClockSourceEnable+0x48>
1000eea2:	e7f7      	b.n	1000ee94 <MXC_SYS_ClockSourceEnable+0x60>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1000eea4:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eea8:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1000eeaa:	68a3      	ldr	r3, [r4, #8]
1000eeac:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
1000eeb0:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eeb2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000eeb6:	f7ff fea9 	bl	1000ec0c <MXC_DelayAsync>
1000eeba:	e003      	b.n	1000eec4 <MXC_SYS_ClockSourceEnable+0x90>
    } while (MXC_DelayCheck() == E_BUSY);
1000eebc:	f7ff fec4 	bl	1000ec48 <MXC_DelayCheck>
1000eec0:	3006      	adds	r0, #6
1000eec2:	d12b      	bne.n	1000ef1c <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000eec4:	68a3      	ldr	r3, [r4, #8]
1000eec6:	011b      	lsls	r3, r3, #4
1000eec8:	d5f8      	bpl.n	1000eebc <MXC_SYS_ClockSourceEnable+0x88>
1000eeca:	e7d7      	b.n	1000ee7c <MXC_SYS_ClockSourceEnable+0x48>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1000eecc:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eed0:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1000eed2:	68a3      	ldr	r3, [r4, #8]
1000eed4:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1000eed8:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eeda:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000eede:	f7ff fe95 	bl	1000ec0c <MXC_DelayAsync>
1000eee2:	e003      	b.n	1000eeec <MXC_SYS_ClockSourceEnable+0xb8>
    } while (MXC_DelayCheck() == E_BUSY);
1000eee4:	f7ff feb0 	bl	1000ec48 <MXC_DelayCheck>
1000eee8:	3006      	adds	r0, #6
1000eeea:	d117      	bne.n	1000ef1c <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000eeec:	68a3      	ldr	r3, [r4, #8]
1000eeee:	00d8      	lsls	r0, r3, #3
1000eef0:	d4c4      	bmi.n	1000ee7c <MXC_SYS_ClockSourceEnable+0x48>
1000eef2:	e7f7      	b.n	1000eee4 <MXC_SYS_ClockSourceEnable+0xb0>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1000eef4:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eef8:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1000eefa:	68a3      	ldr	r3, [r4, #8]
1000eefc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
1000ef00:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ef02:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ef06:	f7ff fe81 	bl	1000ec0c <MXC_DelayAsync>
1000ef0a:	e003      	b.n	1000ef14 <MXC_SYS_ClockSourceEnable+0xe0>
    } while (MXC_DelayCheck() == E_BUSY);
1000ef0c:	f7ff fe9c 	bl	1000ec48 <MXC_DelayCheck>
1000ef10:	3006      	adds	r0, #6
1000ef12:	d103      	bne.n	1000ef1c <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000ef14:	68a3      	ldr	r3, [r4, #8]
1000ef16:	019b      	lsls	r3, r3, #6
1000ef18:	d4b0      	bmi.n	1000ee7c <MXC_SYS_ClockSourceEnable+0x48>
1000ef1a:	e7f7      	b.n	1000ef0c <MXC_SYS_ClockSourceEnable+0xd8>

    return E_TIME_OUT;
1000ef1c:	f06f 0009 	mvn.w	r0, #9
}
1000ef20:	bd10      	pop	{r4, pc}
1000ef22:	bf00      	nop
1000ef24:	100190bc 	.word	0x100190bc

1000ef28 <MXC_SYS_Reset_Periph>:

/* ************************************************************************** */
void MXC_SYS_Reset_Periph(mxc_sys_reset_t reset)
{
    /* The mxc_sys_reset_t enum uses enum values that are the offset by 32 and 64 for the rst register. */
    if (reset > 63) {
1000ef28:	283f      	cmp	r0, #63	@ 0x3f
1000ef2a:	d909      	bls.n	1000ef40 <MXC_SYS_Reset_Periph+0x18>
        reset -= 64;
1000ef2c:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->rst = (0x1 << reset);
1000ef2e:	490f      	ldr	r1, [pc, #60]	@ (1000ef6c <MXC_SYS_Reset_Periph+0x44>)
1000ef30:	b2c0      	uxtb	r0, r0
1000ef32:	2201      	movs	r2, #1
1000ef34:	4082      	lsls	r2, r0
1000ef36:	608a      	str	r2, [r1, #8]
        while (MXC_LPGCR->rst & (0x1 << reset)) {}
1000ef38:	688b      	ldr	r3, [r1, #8]
1000ef3a:	421a      	tst	r2, r3
1000ef3c:	d1fc      	bne.n	1000ef38 <MXC_SYS_Reset_Periph+0x10>
1000ef3e:	4770      	bx	lr
    } else if (reset > 31) {
1000ef40:	281f      	cmp	r0, #31
1000ef42:	d90a      	bls.n	1000ef5a <MXC_SYS_Reset_Periph+0x32>
        reset -= 32;
1000ef44:	3820      	subs	r0, #32
        MXC_GCR->rst1 = (0x1 << reset);
1000ef46:	b2c0      	uxtb	r0, r0
1000ef48:	2201      	movs	r2, #1
1000ef4a:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
1000ef4e:	4082      	lsls	r2, r0
1000ef50:	644a      	str	r2, [r1, #68]	@ 0x44
        while (MXC_GCR->rst1 & (0x1 << reset)) {}
1000ef52:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
1000ef54:	421a      	tst	r2, r3
1000ef56:	d1fc      	bne.n	1000ef52 <MXC_SYS_Reset_Periph+0x2a>
1000ef58:	4770      	bx	lr
    } else {
        MXC_GCR->rst0 = (0x1 << reset);
1000ef5a:	2201      	movs	r2, #1
1000ef5c:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
1000ef60:	4082      	lsls	r2, r0
1000ef62:	604a      	str	r2, [r1, #4]
        while (MXC_GCR->rst0 & (0x1 << reset)) {}
1000ef64:	684b      	ldr	r3, [r1, #4]
1000ef66:	421a      	tst	r2, r3
1000ef68:	d1fc      	bne.n	1000ef64 <MXC_SYS_Reset_Periph+0x3c>
    }
}
1000ef6a:	4770      	bx	lr
1000ef6c:	40080000 	.word	0x40080000

1000ef70 <MXC_GPIO_Init>:
/* **** Globals **** */

/* **** Functions **** */
int MXC_GPIO_Init(uint32_t portmask)
{
    if (portmask & 0x1) {
1000ef70:	07c1      	lsls	r1, r0, #31
{
1000ef72:	b510      	push	{r4, lr}
1000ef74:	4604      	mov	r4, r0
    if (portmask & 0x1) {
1000ef76:	d408      	bmi.n	1000ef8a <MXC_GPIO_Init+0x1a>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
    }

    if (portmask & 0x2) {
1000ef78:	07a2      	lsls	r2, r4, #30
1000ef7a:	d40b      	bmi.n	1000ef94 <MXC_GPIO_Init+0x24>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
    }

    if (portmask & 0x4) {
1000ef7c:	0763      	lsls	r3, r4, #29
1000ef7e:	d40e      	bmi.n	1000ef9e <MXC_GPIO_Init+0x2e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
    }

    return MXC_GPIO_Common_Init(portmask);
1000ef80:	4620      	mov	r0, r4
}
1000ef82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1000ef86:	f000 bf53 	b.w	1000fe30 <MXC_GPIO_Common_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1000ef8a:	2000      	movs	r0, #0
1000ef8c:	f7ff ff30 	bl	1000edf0 <MXC_SYS_ClockEnable>
    if (portmask & 0x2) {
1000ef90:	07a2      	lsls	r2, r4, #30
1000ef92:	d5f3      	bpl.n	1000ef7c <MXC_GPIO_Init+0xc>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
1000ef94:	2001      	movs	r0, #1
1000ef96:	f7ff ff2b 	bl	1000edf0 <MXC_SYS_ClockEnable>
    if (portmask & 0x4) {
1000ef9a:	0763      	lsls	r3, r4, #29
1000ef9c:	d5f0      	bpl.n	1000ef80 <MXC_GPIO_Init+0x10>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1000ef9e:	2040      	movs	r0, #64	@ 0x40
1000efa0:	f7ff ff26 	bl	1000edf0 <MXC_SYS_ClockEnable>
    return MXC_GPIO_Common_Init(portmask);
1000efa4:	4620      	mov	r0, r4
}
1000efa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1000efaa:	f000 bf41 	b.w	1000fe30 <MXC_GPIO_Common_Init>
1000efae:	bf00      	nop

1000efb0 <MXC_GPIO_Config>:

    return E_NO_ERROR;
}

int MXC_GPIO_Config(const mxc_gpio_cfg_t *cfg)
{
1000efb0:	b570      	push	{r4, r5, r6, lr}
    int port, error;
    mxc_gpio_regs_t *gpio = cfg->port;

    port = MXC_GPIO_GET_IDX(cfg->port);
1000efb2:	4b7f      	ldr	r3, [pc, #508]	@ (1000f1b0 <MXC_GPIO_Config+0x200>)
    mxc_gpio_regs_t *gpio = cfg->port;
1000efb4:	6805      	ldr	r5, [r0, #0]
    port = MXC_GPIO_GET_IDX(cfg->port);
1000efb6:	429d      	cmp	r5, r3
{
1000efb8:	4604      	mov	r4, r0
    port = MXC_GPIO_GET_IDX(cfg->port);
1000efba:	d037      	beq.n	1000f02c <MXC_GPIO_Config+0x7c>
1000efbc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000efc0:	429d      	cmp	r5, r3
1000efc2:	d020      	beq.n	1000f006 <MXC_GPIO_Config+0x56>
1000efc4:	f503 23ee 	add.w	r3, r3, #487424	@ 0x77000
1000efc8:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
1000efcc:	429d      	cmp	r5, r3
1000efce:	d07f      	beq.n	1000f0d0 <MXC_GPIO_Config+0x120>
1000efd0:	4878      	ldr	r0, [pc, #480]	@ (1000f1b4 <MXC_GPIO_Config+0x204>)
1000efd2:	1a28      	subs	r0, r5, r0
1000efd4:	fab0 f080 	clz	r0, r0
1000efd8:	0940      	lsrs	r0, r0, #5
1000efda:	00c0      	lsls	r0, r0, #3

    MXC_GPIO_Init(1 << port);
1000efdc:	f7ff ffc8 	bl	1000ef70 <MXC_GPIO_Init>

    if (cfg->port == MXC_GPIO3) {
1000efe0:	4b74      	ldr	r3, [pc, #464]	@ (1000f1b4 <MXC_GPIO_Config+0x204>)
1000efe2:	6822      	ldr	r2, [r4, #0]
1000efe4:	429a      	cmp	r2, r3
1000efe6:	d015      	beq.n	1000f014 <MXC_GPIO_Config+0x64>
        default:
            return E_NOT_SUPPORTED;
        }
    } else {
        // Configure alternate function
        error = MXC_GPIO_RevA_SetAF((mxc_gpio_reva_regs_t *)gpio, cfg->func, cfg->mask);
1000efe8:	6862      	ldr	r2, [r4, #4]
1000efea:	7a21      	ldrb	r1, [r4, #8]
1000efec:	4628      	mov	r0, r5
1000efee:	f000 f94b 	bl	1000f288 <MXC_GPIO_RevA_SetAF>
        if (error != E_NO_ERROR) {
1000eff2:	b9d0      	cbnz	r0, 1000f02a <MXC_GPIO_Config+0x7a>
            return error;
        }

        // Configure the pad
        switch (cfg->pad) {
1000eff4:	7a63      	ldrb	r3, [r4, #9]
1000eff6:	2b04      	cmp	r3, #4
1000eff8:	f200 80d7 	bhi.w	1000f1aa <MXC_GPIO_Config+0x1fa>
1000effc:	e8df f003 	tbb	[pc, r3]
1000f000:	2f3e4c5a 	.word	0x2f3e4c5a
1000f004:	18          	.byte	0x18
1000f005:	00          	.byte	0x00
1000f006:	2002      	movs	r0, #2
    MXC_GPIO_Init(1 << port);
1000f008:	f7ff ffb2 	bl	1000ef70 <MXC_GPIO_Init>
    if (cfg->port == MXC_GPIO3) {
1000f00c:	4b69      	ldr	r3, [pc, #420]	@ (1000f1b4 <MXC_GPIO_Config+0x204>)
1000f00e:	6822      	ldr	r2, [r4, #0]
1000f010:	429a      	cmp	r2, r3
1000f012:	d1e9      	bne.n	1000efe8 <MXC_GPIO_Config+0x38>
        switch (cfg->func) {
1000f014:	7a23      	ldrb	r3, [r4, #8]
1000f016:	2b01      	cmp	r3, #1
1000f018:	f000 80bb 	beq.w	1000f192 <MXC_GPIO_Config+0x1e2>
1000f01c:	2b02      	cmp	r3, #2
1000f01e:	f000 80a5 	beq.w	1000f16c <MXC_GPIO_Config+0x1bc>
1000f022:	2b00      	cmp	r3, #0
1000f024:	d056      	beq.n	1000f0d4 <MXC_GPIO_Config+0x124>
            return E_NOT_SUPPORTED;
1000f026:	f06f 0010 	mvn.w	r0, #16
        }
    }

    // Configure the vssel
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
}
1000f02a:	bd70      	pop	{r4, r5, r6, pc}
1000f02c:	2001      	movs	r0, #1
1000f02e:	e7d5      	b.n	1000efdc <MXC_GPIO_Config+0x2c>
            gpio->padctrl0 &= ~cfg->mask;
1000f030:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f032:	6862      	ldr	r2, [r4, #4]
1000f034:	ea23 0302 	bic.w	r3, r3, r2
1000f038:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1000f03a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f03c:	4313      	orrs	r3, r2
1000f03e:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
1000f040:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f044:	ea23 0302 	bic.w	r3, r3, r2
1000f048:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
}

/* ************************************************************************** */
int MXC_GPIO_SetVSSEL(mxc_gpio_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    if (port == MXC_GPIO3) {
1000f04c:	4b59      	ldr	r3, [pc, #356]	@ (1000f1b4 <MXC_GPIO_Config+0x204>)
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
1000f04e:	7aa1      	ldrb	r1, [r4, #10]
    if (port == MXC_GPIO3) {
1000f050:	429d      	cmp	r5, r3
1000f052:	d039      	beq.n	1000f0c8 <MXC_GPIO_Config+0x118>
        }

        return E_NO_ERROR;
    }

    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1000f054:	4628      	mov	r0, r5
}
1000f056:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1000f05a:	f000 b8ff 	b.w	1000f25c <MXC_GPIO_RevA_SetVSSEL>
            gpio->padctrl0 |= cfg->mask;
1000f05e:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f060:	6862      	ldr	r2, [r4, #4]
1000f062:	4313      	orrs	r3, r2
1000f064:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000f066:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f068:	ea23 0302 	bic.w	r3, r3, r2
1000f06c:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
1000f06e:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f072:	ea23 0302 	bic.w	r3, r3, r2
1000f076:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000f07a:	e7e7      	b.n	1000f04c <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1000f07c:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f07e:	6862      	ldr	r2, [r4, #4]
1000f080:	ea23 0302 	bic.w	r3, r3, r2
1000f084:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1000f086:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f088:	4313      	orrs	r3, r2
1000f08a:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1000f08c:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f090:	4313      	orrs	r3, r2
1000f092:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000f096:	e7d9      	b.n	1000f04c <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 |= cfg->mask;
1000f098:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f09a:	6862      	ldr	r2, [r4, #4]
1000f09c:	4313      	orrs	r3, r2
1000f09e:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000f0a0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f0a2:	ea23 0302 	bic.w	r3, r3, r2
1000f0a6:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1000f0a8:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000f0ac:	4313      	orrs	r3, r2
1000f0ae:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000f0b2:	e7cb      	b.n	1000f04c <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1000f0b4:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000f0b6:	6862      	ldr	r2, [r4, #4]
1000f0b8:	ea23 0302 	bic.w	r3, r3, r2
1000f0bc:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000f0be:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000f0c0:	ea23 0302 	bic.w	r3, r3, r2
1000f0c4:	666b      	str	r3, [r5, #100]	@ 0x64
            break;
1000f0c6:	e7c1      	b.n	1000f04c <MXC_GPIO_Config+0x9c>
        if (vssel == MXC_GPIO_VSSEL_VDDIO) {
1000f0c8:	2900      	cmp	r1, #0
1000f0ca:	d0ac      	beq.n	1000f026 <MXC_GPIO_Config+0x76>
        return E_NO_ERROR;
1000f0cc:	2000      	movs	r0, #0
}
1000f0ce:	bd70      	pop	{r4, r5, r6, pc}
1000f0d0:	2004      	movs	r0, #4
1000f0d2:	e783      	b.n	1000efdc <MXC_GPIO_Config+0x2c>
            MXC_MCR->gpio3_ctrl &= ~(P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask));
1000f0d4:	6863      	ldr	r3, [r4, #4]
1000f0d6:	4938      	ldr	r1, [pc, #224]	@ (1000f1b8 <MXC_GPIO_Config+0x208>)
1000f0d8:	0058      	lsls	r0, r3, #1
1000f0da:	011a      	lsls	r2, r3, #4
1000f0dc:	6a0e      	ldr	r6, [r1, #32]
1000f0de:	f000 0002 	and.w	r0, r0, #2
1000f0e2:	f002 0220 	and.w	r2, r2, #32
1000f0e6:	4302      	orrs	r2, r0
1000f0e8:	ea26 0202 	bic.w	r2, r6, r2
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000f0ec:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen &= ~(SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask));
1000f0ee:	688a      	ldr	r2, [r1, #8]
1000f0f0:	f3c3 0340 	ubfx	r3, r3, #1, #1
1000f0f4:	4303      	orrs	r3, r0
1000f0f6:	ea22 0303 	bic.w	r3, r2, r3
1000f0fa:	608b      	str	r3, [r1, #8]
        switch (cfg->pad) {
1000f0fc:	7a63      	ldrb	r3, [r4, #9]
1000f0fe:	2b04      	cmp	r3, #4
1000f100:	d891      	bhi.n	1000f026 <MXC_GPIO_Config+0x76>
1000f102:	e8df f003 	tbb	[pc, r3]
1000f106:	1b26      	.short	0x1b26
1000f108:	1b03      	.short	0x1b03
1000f10a:	03          	.byte	0x03
1000f10b:	00          	.byte	0x00
            MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask));
1000f10c:	6862      	ldr	r2, [r4, #4]
1000f10e:	492a      	ldr	r1, [pc, #168]	@ (1000f1b8 <MXC_GPIO_Config+0x208>)
1000f110:	00d3      	lsls	r3, r2, #3
1000f112:	6a08      	ldr	r0, [r1, #32]
1000f114:	f003 0310 	and.w	r3, r3, #16
1000f118:	f002 0601 	and.w	r6, r2, #1
1000f11c:	4333      	orrs	r3, r6
1000f11e:	ea20 0303 	bic.w	r3, r0, r3
1000f122:	620b      	str	r3, [r1, #32]
            MXC_MCR->gpio3_ctrl &= ~(P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask));
1000f124:	0156      	lsls	r6, r2, #5
1000f126:	0093      	lsls	r3, r2, #2
1000f128:	6a08      	ldr	r0, [r1, #32]
1000f12a:	f003 0304 	and.w	r3, r3, #4
1000f12e:	f006 0640 	and.w	r6, r6, #64	@ 0x40
1000f132:	4333      	orrs	r3, r6
1000f134:	ea20 0303 	bic.w	r3, r0, r3
1000f138:	620b      	str	r3, [r1, #32]
            break;
1000f13a:	e787      	b.n	1000f04c <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask);
1000f13c:	491e      	ldr	r1, [pc, #120]	@ (1000f1b8 <MXC_GPIO_Config+0x208>)
1000f13e:	6862      	ldr	r2, [r4, #4]
1000f140:	6a0e      	ldr	r6, [r1, #32]
1000f142:	00d3      	lsls	r3, r2, #3
1000f144:	f002 0001 	and.w	r0, r2, #1
1000f148:	f003 0310 	and.w	r3, r3, #16
1000f14c:	4330      	orrs	r0, r6
1000f14e:	4303      	orrs	r3, r0
1000f150:	e7e7      	b.n	1000f122 <MXC_GPIO_Config+0x172>
            MXC_MCR->gpio3_ctrl |= P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask);
1000f152:	6862      	ldr	r2, [r4, #4]
1000f154:	4818      	ldr	r0, [pc, #96]	@ (1000f1b8 <MXC_GPIO_Config+0x208>)
1000f156:	0093      	lsls	r3, r2, #2
1000f158:	0151      	lsls	r1, r2, #5
1000f15a:	6a06      	ldr	r6, [r0, #32]
1000f15c:	f003 0304 	and.w	r3, r3, #4
1000f160:	f001 0140 	and.w	r1, r1, #64	@ 0x40
1000f164:	430b      	orrs	r3, r1
1000f166:	4333      	orrs	r3, r6
1000f168:	6203      	str	r3, [r0, #32]
            break;
1000f16a:	e76f      	b.n	1000f04c <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000f16c:	6863      	ldr	r3, [r4, #4]
1000f16e:	4912      	ldr	r1, [pc, #72]	@ (1000f1b8 <MXC_GPIO_Config+0x208>)
1000f170:	0058      	lsls	r0, r3, #1
1000f172:	011a      	lsls	r2, r3, #4
1000f174:	6a0e      	ldr	r6, [r1, #32]
1000f176:	f000 0002 	and.w	r0, r0, #2
1000f17a:	f002 0220 	and.w	r2, r2, #32
1000f17e:	4302      	orrs	r2, r0
1000f180:	4332      	orrs	r2, r6
1000f182:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen |= SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask);
1000f184:	688a      	ldr	r2, [r1, #8]
1000f186:	f3c3 0340 	ubfx	r3, r3, #1, #1
1000f18a:	4303      	orrs	r3, r0
1000f18c:	4313      	orrs	r3, r2
1000f18e:	608b      	str	r3, [r1, #8]
            break;
1000f190:	e7b4      	b.n	1000f0fc <MXC_GPIO_Config+0x14c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000f192:	6863      	ldr	r3, [r4, #4]
1000f194:	4908      	ldr	r1, [pc, #32]	@ (1000f1b8 <MXC_GPIO_Config+0x208>)
1000f196:	0058      	lsls	r0, r3, #1
1000f198:	011a      	lsls	r2, r3, #4
1000f19a:	6a0e      	ldr	r6, [r1, #32]
1000f19c:	f000 0002 	and.w	r0, r0, #2
1000f1a0:	f002 0220 	and.w	r2, r2, #32
1000f1a4:	4302      	orrs	r2, r0
1000f1a6:	4332      	orrs	r2, r6
1000f1a8:	e7a0      	b.n	1000f0ec <MXC_GPIO_Config+0x13c>
        switch (cfg->pad) {
1000f1aa:	f06f 0002 	mvn.w	r0, #2
}
1000f1ae:	bd70      	pop	{r4, r5, r6, pc}
1000f1b0:	40008000 	.word	0x40008000
1000f1b4:	40080600 	.word	0x40080600
1000f1b8:	40006c00 	.word	0x40006c00

1000f1bc <MXC_GPIO_OutSet>:
    if (port == MXC_GPIO3) {
1000f1bc:	4a08      	ldr	r2, [pc, #32]	@ (1000f1e0 <MXC_GPIO_OutSet+0x24>)
1000f1be:	4290      	cmp	r0, r2
1000f1c0:	d001      	beq.n	1000f1c6 <MXC_GPIO_OutSet+0xa>
    MXC_GPIO_RevA_OutSet((mxc_gpio_reva_regs_t *)port, mask);
1000f1c2:	f000 b843 	b.w	1000f24c <MXC_GPIO_RevA_OutSet>
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000f1c6:	4807      	ldr	r0, [pc, #28]	@ (1000f1e4 <MXC_GPIO_OutSet+0x28>)
{
1000f1c8:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000f1ca:	6a04      	ldr	r4, [r0, #32]
1000f1cc:	00ca      	lsls	r2, r1, #3
1000f1ce:	f001 0101 	and.w	r1, r1, #1
1000f1d2:	4321      	orrs	r1, r4
1000f1d4:	f002 0310 	and.w	r3, r2, #16
1000f1d8:	430b      	orrs	r3, r1
}
1000f1da:	bc10      	pop	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000f1dc:	6203      	str	r3, [r0, #32]
}
1000f1de:	4770      	bx	lr
1000f1e0:	40080600 	.word	0x40080600
1000f1e4:	40006c00 	.word	0x40006c00

1000f1e8 <MXC_GPIO_OutClr>:
    if (port == MXC_GPIO3) {
1000f1e8:	4a09      	ldr	r2, [pc, #36]	@ (1000f210 <MXC_GPIO_OutClr+0x28>)
1000f1ea:	4290      	cmp	r0, r2
1000f1ec:	d001      	beq.n	1000f1f2 <MXC_GPIO_OutClr+0xa>
    MXC_GPIO_RevA_OutClr((mxc_gpio_reva_regs_t *)port, mask);
1000f1ee:	f000 b82f 	b.w	1000f250 <MXC_GPIO_RevA_OutClr>
{
1000f1f2:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(mask) | P31_DATA_OUT(mask));
1000f1f4:	4c07      	ldr	r4, [pc, #28]	@ (1000f214 <MXC_GPIO_OutClr+0x2c>)
1000f1f6:	00ca      	lsls	r2, r1, #3
1000f1f8:	6a20      	ldr	r0, [r4, #32]
1000f1fa:	f002 0210 	and.w	r2, r2, #16
1000f1fe:	f001 0101 	and.w	r1, r1, #1
1000f202:	ea42 0301 	orr.w	r3, r2, r1
1000f206:	ea20 0303 	bic.w	r3, r0, r3
1000f20a:	6223      	str	r3, [r4, #32]
}
1000f20c:	bc10      	pop	{r4}
1000f20e:	4770      	bx	lr
1000f210:	40080600 	.word	0x40080600
1000f214:	40006c00 	.word	0x40006c00

1000f218 <MXC_GPIO_Handler>:
    MXC_GPIO_Common_Handler(port);
1000f218:	f000 be1c 	b.w	1000fe54 <MXC_GPIO_Common_Handler>

1000f21c <MXC_GPIO_ClearFlags>:
    if (port == MXC_GPIO3) {
1000f21c:	4a03      	ldr	r2, [pc, #12]	@ (1000f22c <MXC_GPIO_ClearFlags+0x10>)
1000f21e:	4290      	cmp	r0, r2
1000f220:	d001      	beq.n	1000f226 <MXC_GPIO_ClearFlags+0xa>
    MXC_GPIO_RevA_ClearFlags((mxc_gpio_reva_regs_t *)port, flags);
1000f222:	f000 b817 	b.w	1000f254 <MXC_GPIO_RevA_ClearFlags>
        MXC_PWRSEQ->lpwkst3 = flags;
1000f226:	4a02      	ldr	r2, [pc, #8]	@ (1000f230 <MXC_GPIO_ClearFlags+0x14>)
1000f228:	61d1      	str	r1, [r2, #28]
}
1000f22a:	4770      	bx	lr
1000f22c:	40080600 	.word	0x40080600
1000f230:	40006800 	.word	0x40006800

1000f234 <MXC_GPIO_GetFlags>:
    if (port == MXC_GPIO3) {
1000f234:	4b03      	ldr	r3, [pc, #12]	@ (1000f244 <MXC_GPIO_GetFlags+0x10>)
1000f236:	4298      	cmp	r0, r3
1000f238:	d001      	beq.n	1000f23e <MXC_GPIO_GetFlags+0xa>
    return MXC_GPIO_RevA_GetFlags((mxc_gpio_reva_regs_t *)port);
1000f23a:	f000 b80d 	b.w	1000f258 <MXC_GPIO_RevA_GetFlags>
        return MXC_PWRSEQ->lpwkst3;
1000f23e:	4b02      	ldr	r3, [pc, #8]	@ (1000f248 <MXC_GPIO_GetFlags+0x14>)
1000f240:	69d8      	ldr	r0, [r3, #28]
}
1000f242:	4770      	bx	lr
1000f244:	40080600 	.word	0x40080600
1000f248:	40006800 	.word	0x40006800

1000f24c <MXC_GPIO_RevA_OutSet>:
    return (port->in & mask);
}

void MXC_GPIO_RevA_OutSet(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_set = mask;
1000f24c:	61c1      	str	r1, [r0, #28]
}
1000f24e:	4770      	bx	lr

1000f250 <MXC_GPIO_RevA_OutClr>:

void MXC_GPIO_RevA_OutClr(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_clr = mask;
1000f250:	6201      	str	r1, [r0, #32]
}
1000f252:	4770      	bx	lr

1000f254 <MXC_GPIO_RevA_ClearFlags>:
    port->inten_clr = mask;
}

void MXC_GPIO_RevA_ClearFlags(mxc_gpio_reva_regs_t *port, uint32_t flags)
{
    port->intfl_clr = flags;
1000f254:	6481      	str	r1, [r0, #72]	@ 0x48
}
1000f256:	4770      	bx	lr

1000f258 <MXC_GPIO_RevA_GetFlags>:

uint32_t MXC_GPIO_RevA_GetFlags(mxc_gpio_reva_regs_t *port)
{
    return port->intfl;
1000f258:	6c00      	ldr	r0, [r0, #64]	@ 0x40
}
1000f25a:	4770      	bx	lr

1000f25c <MXC_GPIO_RevA_SetVSSEL>:

int MXC_GPIO_RevA_SetVSSEL(mxc_gpio_reva_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    // Configure the vssel
    switch (vssel) {
1000f25c:	b159      	cbz	r1, 1000f276 <MXC_GPIO_RevA_SetVSSEL+0x1a>
1000f25e:	2901      	cmp	r1, #1
1000f260:	d106      	bne.n	1000f270 <MXC_GPIO_RevA_SetVSSEL+0x14>
    case MXC_GPIO_VSSEL_VDDIO:
        port->vssel &= ~mask;
        break;

    case MXC_GPIO_VSSEL_VDDIOH:
        port->vssel |= mask;
1000f262:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1000f266:	4313      	orrs	r3, r2
1000f268:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000f26c:	2000      	movs	r0, #0
}
1000f26e:	4770      	bx	lr
    switch (vssel) {
1000f270:	f06f 0002 	mvn.w	r0, #2
1000f274:	4770      	bx	lr
        port->vssel &= ~mask;
1000f276:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1000f27a:	ea23 0302 	bic.w	r3, r3, r2
1000f27e:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    return E_NO_ERROR;
1000f282:	2000      	movs	r0, #0
}
1000f284:	4770      	bx	lr
1000f286:	bf00      	nop

1000f288 <MXC_GPIO_RevA_SetAF>:

int MXC_GPIO_RevA_SetAF(mxc_gpio_reva_regs_t *port, mxc_gpio_func_t func, uint32_t mask)
{
    //This is required for new devices going forward.
    port->inen |= mask;
1000f288:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1000f28a:	4313      	orrs	r3, r2
1000f28c:	6303      	str	r3, [r0, #48]	@ 0x30

    //Switch to I/O mode first
    port->en0_set = mask;
1000f28e:	6042      	str	r2, [r0, #4]

    switch (func) {
1000f290:	2905      	cmp	r1, #5
1000f292:	d82c      	bhi.n	1000f2ee <MXC_GPIO_RevA_SetAF+0x66>
1000f294:	e8df f001 	tbb	[pc, r1]
1000f298:	1f19120a 	.word	0x1f19120a
1000f29c:	0325      	.short	0x0325
        port->en1_clr = mask;
        port->en0_clr = mask;
        break;

    case MXC_GPIO_FUNC_ALT4:
        port->en3_clr = mask;
1000f29e:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1000f2a2:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_set = mask;
1000f2a4:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1000f2a6:	6082      	str	r2, [r0, #8]
#endif
    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000f2a8:	2000      	movs	r0, #0
1000f2aa:	4770      	bx	lr
        port->outen_clr = mask;
1000f2ac:	6142      	str	r2, [r0, #20]
        port->en0_set = mask;
1000f2ae:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
1000f2b0:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
1000f2b2:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
1000f2b4:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    return E_NO_ERROR;
1000f2b8:	2000      	movs	r0, #0
1000f2ba:	4770      	bx	lr
        port->outen_set = mask;
1000f2bc:	6102      	str	r2, [r0, #16]
        port->en0_set = mask;
1000f2be:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
1000f2c0:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
1000f2c2:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
1000f2c4:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        break;
1000f2c8:	e7ee      	b.n	1000f2a8 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000f2ca:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1000f2ce:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_clr = mask;
1000f2d0:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1000f2d2:	6082      	str	r2, [r0, #8]
        break;
1000f2d4:	e7e8      	b.n	1000f2a8 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000f2d6:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1000f2da:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_set = mask;
1000f2dc:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1000f2de:	6082      	str	r2, [r0, #8]
        break;
1000f2e0:	e7e2      	b.n	1000f2a8 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000f2e2:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1000f2e6:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_clr = mask;
1000f2e8:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1000f2ea:	6082      	str	r2, [r0, #8]
        break;
1000f2ec:	e7dc      	b.n	1000f2a8 <MXC_GPIO_RevA_SetAF+0x20>
    switch (func) {
1000f2ee:	f06f 0002 	mvn.w	r0, #2
}
1000f2f2:	4770      	bx	lr

1000f2f4 <MXC_I2C_SetSlaveAddr>:
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
}

int MXC_I2C_SetSlaveAddr(mxc_i2c_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    return MXC_I2C_RevA_SetSlaveAddr((mxc_i2c_reva_regs_t *)i2c, slaveAddr, idx);
1000f2f4:	f000 b8f6 	b.w	1000f4e4 <MXC_I2C_RevA_SetSlaveAddr>

1000f2f8 <MXC_I2C_Shutdown>:
}

int MXC_I2C_Shutdown(mxc_i2c_regs_t *i2c)
{
1000f2f8:	b508      	push	{r3, lr}
    // Configure GPIO for I2C
    if (i2c == MXC_I2C0) {
1000f2fa:	4b11      	ldr	r3, [pc, #68]	@ (1000f340 <MXC_I2C_Shutdown+0x48>)
1000f2fc:	4298      	cmp	r0, r3
1000f2fe:	d00d      	beq.n	1000f31c <MXC_I2C_Shutdown+0x24>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
    } else if (i2c == MXC_I2C1) {
1000f300:	4b10      	ldr	r3, [pc, #64]	@ (1000f344 <MXC_I2C_Shutdown+0x4c>)
1000f302:	4298      	cmp	r0, r3
1000f304:	d011      	beq.n	1000f32a <MXC_I2C_Shutdown+0x32>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
    } else if (i2c == MXC_I2C2) {
1000f306:	4b10      	ldr	r3, [pc, #64]	@ (1000f348 <MXC_I2C_Shutdown+0x50>)
1000f308:	4298      	cmp	r0, r3
1000f30a:	d115      	bne.n	1000f338 <MXC_I2C_Shutdown+0x40>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C2);
1000f30c:	2038      	movs	r0, #56	@ 0x38
1000f30e:	f7ff fd4f 	bl	1000edb0 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C2);
1000f312:	2034      	movs	r0, #52	@ 0x34
1000f314:	f7ff fe08 	bl	1000ef28 <MXC_SYS_Reset_Periph>
    } else {
        return E_NO_DEVICE;
    }

    return E_NO_ERROR;
1000f318:	2000      	movs	r0, #0
}
1000f31a:	bd08      	pop	{r3, pc}
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
1000f31c:	200d      	movs	r0, #13
1000f31e:	f7ff fd47 	bl	1000edb0 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
1000f322:	2010      	movs	r0, #16
1000f324:	f7ff fe00 	bl	1000ef28 <MXC_SYS_Reset_Periph>
1000f328:	e7f6      	b.n	1000f318 <MXC_I2C_Shutdown+0x20>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
1000f32a:	201c      	movs	r0, #28
1000f32c:	f7ff fd40 	bl	1000edb0 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
1000f330:	2020      	movs	r0, #32
1000f332:	f7ff fdf9 	bl	1000ef28 <MXC_SYS_Reset_Periph>
1000f336:	e7ef      	b.n	1000f318 <MXC_I2C_Shutdown+0x20>
        return E_NO_DEVICE;
1000f338:	f06f 0001 	mvn.w	r0, #1
}
1000f33c:	bd08      	pop	{r3, pc}
1000f33e:	bf00      	nop
1000f340:	4001d000 	.word	0x4001d000
1000f344:	4001e000 	.word	0x4001e000
1000f348:	4001f000 	.word	0x4001f000

1000f34c <MXC_I2C_Init>:
    if (i2c == NULL) {
1000f34c:	b3c0      	cbz	r0, 1000f3c0 <MXC_I2C_Init+0x74>
{
1000f34e:	b570      	push	{r4, r5, r6, lr}
1000f350:	4604      	mov	r4, r0
    MXC_I2C_Shutdown(i2c); // Clear everything out
1000f352:	460d      	mov	r5, r1
1000f354:	4616      	mov	r6, r2
1000f356:	f7ff ffcf 	bl	1000f2f8 <MXC_I2C_Shutdown>
    if (i2c == MXC_I2C0) {
1000f35a:	4b1b      	ldr	r3, [pc, #108]	@ (1000f3c8 <MXC_I2C_Init+0x7c>)
1000f35c:	429c      	cmp	r4, r3
1000f35e:	d012      	beq.n	1000f386 <MXC_I2C_Init+0x3a>
    } else if (i2c == MXC_I2C1) {
1000f360:	4b1a      	ldr	r3, [pc, #104]	@ (1000f3cc <MXC_I2C_Init+0x80>)
1000f362:	429c      	cmp	r4, r3
1000f364:	d01c      	beq.n	1000f3a0 <MXC_I2C_Init+0x54>
    } else if (i2c == MXC_I2C2) {
1000f366:	4b1a      	ldr	r3, [pc, #104]	@ (1000f3d0 <MXC_I2C_Init+0x84>)
1000f368:	429c      	cmp	r4, r3
1000f36a:	d126      	bne.n	1000f3ba <MXC_I2C_Init+0x6e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C2);
1000f36c:	2038      	movs	r0, #56	@ 0x38
1000f36e:	f7ff fd3f 	bl	1000edf0 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c2);
1000f372:	4818      	ldr	r0, [pc, #96]	@ (1000f3d4 <MXC_I2C_Init+0x88>)
1000f374:	f7ff fe1c 	bl	1000efb0 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f378:	4632      	mov	r2, r6
1000f37a:	4629      	mov	r1, r5
1000f37c:	4620      	mov	r0, r4
}
1000f37e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f382:	f000 b849 	b.w	1000f418 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C0);
1000f386:	200d      	movs	r0, #13
1000f388:	f7ff fd32 	bl	1000edf0 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c0);
1000f38c:	4812      	ldr	r0, [pc, #72]	@ (1000f3d8 <MXC_I2C_Init+0x8c>)
1000f38e:	f7ff fe0f 	bl	1000efb0 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f392:	4632      	mov	r2, r6
1000f394:	4629      	mov	r1, r5
1000f396:	4620      	mov	r0, r4
}
1000f398:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f39c:	f000 b83c 	b.w	1000f418 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C1);
1000f3a0:	201c      	movs	r0, #28
1000f3a2:	f7ff fd25 	bl	1000edf0 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c1);
1000f3a6:	480d      	ldr	r0, [pc, #52]	@ (1000f3dc <MXC_I2C_Init+0x90>)
1000f3a8:	f7ff fe02 	bl	1000efb0 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f3ac:	4632      	mov	r2, r6
1000f3ae:	4629      	mov	r1, r5
1000f3b0:	4620      	mov	r0, r4
}
1000f3b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f3b6:	f000 b82f 	b.w	1000f418 <MXC_I2C_RevA_Init>
        return E_NO_DEVICE;
1000f3ba:	f06f 0001 	mvn.w	r0, #1
}
1000f3be:	bd70      	pop	{r4, r5, r6, pc}
        return E_NULL_PTR;
1000f3c0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f3c4:	4770      	bx	lr
1000f3c6:	bf00      	nop
1000f3c8:	4001d000 	.word	0x4001d000
1000f3cc:	4001e000 	.word	0x4001e000
1000f3d0:	4001f000 	.word	0x4001f000
1000f3d4:	10019098 	.word	0x10019098
1000f3d8:	100190b0 	.word	0x100190b0
1000f3dc:	100190a4 	.word	0x100190a4

1000f3e0 <MXC_I2C_SetFrequency>:
    return E_NO_ERROR;
}

int MXC_I2C_SetFrequency(mxc_i2c_regs_t *i2c, unsigned int hz)
{
    return MXC_I2C_RevA_SetFrequency((mxc_i2c_reva_regs_t *)i2c, hz);
1000f3e0:	f000 b89a 	b.w	1000f518 <MXC_I2C_RevA_SetFrequency>

1000f3e4 <MXC_I2C_GetFrequency>:
}

int MXC_I2C_GetFrequency(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetFrequency((mxc_i2c_reva_regs_t *)i2c);
1000f3e4:	f000 b8e8 	b.w	1000f5b8 <MXC_I2C_RevA_GetFrequency>

1000f3e8 <MXC_I2C_ReadRXFIFO>:
    return MXC_I2C_RevA_Read((mxc_i2c_reva_regs_t *)i2c, bytes, len, ack);
}

int MXC_I2C_ReadRXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_ReadRXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
1000f3e8:	f000 b8f6 	b.w	1000f5d8 <MXC_I2C_RevA_ReadRXFIFO>

1000f3ec <MXC_I2C_GetRXFIFOAvailable>:
                                      (mxc_i2c_reva_dma_complete_cb_t)callback, config, MXC_DMA);
}

int MXC_I2C_GetRXFIFOAvailable(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetRXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
1000f3ec:	f000 b912 	b.w	1000f614 <MXC_I2C_RevA_GetRXFIFOAvailable>

1000f3f0 <MXC_I2C_WriteTXFIFO>:
}

int MXC_I2C_WriteTXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_WriteTXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
1000f3f0:	f000 b918 	b.w	1000f624 <MXC_I2C_RevA_WriteTXFIFO>

1000f3f4 <MXC_I2C_GetTXFIFOAvailable>:
                                       (mxc_i2c_reva_dma_complete_cb_t)callback, config, MXC_DMA);
}

int MXC_I2C_GetTXFIFOAvailable(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetTXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
1000f3f4:	f000 b92e 	b.w	1000f654 <MXC_I2C_RevA_GetTXFIFOAvailable>

1000f3f8 <MXC_I2C_ClearRXFIFO>:
}

void MXC_I2C_ClearRXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearRXFIFO((mxc_i2c_reva_regs_t *)i2c);
1000f3f8:	f000 b938 	b.w	1000f66c <MXC_I2C_RevA_ClearRXFIFO>

1000f3fc <MXC_I2C_ClearTXFIFO>:
}

void MXC_I2C_ClearTXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearTXFIFO((mxc_i2c_reva_regs_t *)i2c);
1000f3fc:	f000 b93e 	b.w	1000f67c <MXC_I2C_RevA_ClearTXFIFO>

1000f400 <MXC_I2C_ClearFlags>:
    return MXC_I2C_RevA_GetFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
}

void MXC_I2C_ClearFlags(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_ClearFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
1000f400:	f000 b944 	b.w	1000f68c <MXC_I2C_RevA_ClearFlags>

1000f404 <MXC_I2C_EnableInt>:
}

void MXC_I2C_EnableInt(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_EnableInt((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
1000f404:	f000 b946 	b.w	1000f694 <MXC_I2C_RevA_EnableInt>

1000f408 <MXC_I2C_DisableInt>:
}

void MXC_I2C_DisableInt(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_DisableInt((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
1000f408:	f000 b94c 	b.w	1000f6a4 <MXC_I2C_RevA_DisableInt>

1000f40c <MXC_I2C_Recover>:
    return MXC_I2C_RevA_GetTimeout((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_Recover(mxc_i2c_regs_t *i2c, unsigned int retries)
{
    return MXC_I2C_RevA_Recover((mxc_i2c_reva_regs_t *)i2c, retries);
1000f40c:	f000 b954 	b.w	1000f6b8 <MXC_I2C_RevA_Recover>

1000f410 <MXC_I2C_SetRXThreshold>:
        (mxc_i2c_reva_regs_t *)i2c, (mxc_i2c_reva_slave_handler_t)callback, interruptCheck);
}

int MXC_I2C_SetRXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetRXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
1000f410:	f000 b9be 	b.w	1000f790 <MXC_I2C_RevA_SetRXThreshold>

1000f414 <MXC_I2C_SetTXThreshold>:
    return MXC_I2C_RevA_GetRXThreshold((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_SetTXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetTXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
1000f414:	f000 b9cc 	b.w	1000f7b0 <MXC_I2C_RevA_SetTXThreshold>

1000f418 <MXC_I2C_RevA_Init>:

/* ************************************************************************* */
/* Control/Configuration functions                                           */
/* ************************************************************************* */
int MXC_I2C_RevA_Init(mxc_i2c_reva_regs_t *i2c, int masterMode, unsigned int slaveAddr)
{
1000f418:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int err;

    if (i2c == NULL) {
1000f41a:	2800      	cmp	r0, #0
1000f41c:	d057      	beq.n	1000f4ce <MXC_I2C_RevA_Init+0xb6>
        return E_NULL_PTR;
    }

    if ((err = MXC_I2C_Recover((mxc_i2c_regs_t *)i2c, 16)) != E_NO_ERROR) {
1000f41e:	460f      	mov	r7, r1
1000f420:	2110      	movs	r1, #16
1000f422:	4615      	mov	r5, r2
1000f424:	4604      	mov	r4, r0
1000f426:	f7ff fff1 	bl	1000f40c <MXC_I2C_Recover>
1000f42a:	4606      	mov	r6, r0
1000f42c:	b108      	cbz	r0, 1000f432 <MXC_I2C_RevA_Init+0x1a>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
    }

    return E_NO_ERROR;
}
1000f42e:	4630      	mov	r0, r6
1000f430:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000f432:	6823      	ldr	r3, [r4, #0]
1000f434:	f043 0301 	orr.w	r3, r3, #1
1000f438:	6023      	str	r3, [r4, #0]
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
1000f43a:	4620      	mov	r0, r4
1000f43c:	f7ff ffdc 	bl	1000f3f8 <MXC_I2C_ClearRXFIFO>
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
1000f440:	4620      	mov	r0, r4
1000f442:	f7ff ffdb 	bl	1000f3fc <MXC_I2C_ClearTXFIFO>
    MXC_I2C_SetTXThreshold((mxc_i2c_regs_t *)i2c, 2); // set TX threshold to 2 bytes
1000f446:	2102      	movs	r1, #2
1000f448:	4620      	mov	r0, r4
1000f44a:	f7ff ffe3 	bl	1000f414 <MXC_I2C_SetTXThreshold>
    MXC_I2C_SetRXThreshold((mxc_i2c_regs_t *)i2c, 6); // set RX threshold to 6 bytes
1000f44e:	2106      	movs	r1, #6
1000f450:	4620      	mov	r0, r4
1000f452:	f7ff ffdd 	bl	1000f410 <MXC_I2C_SetRXThreshold>
    if (!masterMode) {
1000f456:	b1df      	cbz	r7, 1000f490 <MXC_I2C_RevA_Init+0x78>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000f458:	6823      	ldr	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f45a:	4a1e      	ldr	r2, [pc, #120]	@ (1000f4d4 <MXC_I2C_RevA_Init+0xbc>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000f45c:	f043 0302 	orr.w	r3, r3, #2
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f460:	4294      	cmp	r4, r2
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000f462:	6023      	str	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f464:	d02f      	beq.n	1000f4c6 <MXC_I2C_RevA_Init+0xae>
1000f466:	4b1c      	ldr	r3, [pc, #112]	@ (1000f4d8 <MXC_I2C_RevA_Init+0xc0>)
1000f468:	429c      	cmp	r4, r3
1000f46a:	d00f      	beq.n	1000f48c <MXC_I2C_RevA_Init+0x74>
1000f46c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f470:	429c      	cmp	r4, r3
1000f472:	bf14      	ite	ne
1000f474:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
1000f478:	2402      	moveq	r4, #2
1000f47a:	4b18      	ldr	r3, [pc, #96]	@ (1000f4dc <MXC_I2C_RevA_Init+0xc4>)
1000f47c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000f480:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
1000f484:	2201      	movs	r2, #1
1000f486:	605a      	str	r2, [r3, #4]
}
1000f488:	4630      	mov	r0, r6
1000f48a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f48c:	2401      	movs	r4, #1
1000f48e:	e7f4      	b.n	1000f47a <MXC_I2C_RevA_Init+0x62>
        MXC_I2C_SetSlaveAddr((mxc_i2c_regs_t *)i2c, slaveAddr, 0);
1000f490:	463a      	mov	r2, r7
1000f492:	4629      	mov	r1, r5
1000f494:	4620      	mov	r0, r4
1000f496:	f7ff ff2d 	bl	1000f2f4 <MXC_I2C_SetSlaveAddr>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
1000f49a:	4b0e      	ldr	r3, [pc, #56]	@ (1000f4d4 <MXC_I2C_RevA_Init+0xbc>)
1000f49c:	429c      	cmp	r4, r3
1000f49e:	d009      	beq.n	1000f4b4 <MXC_I2C_RevA_Init+0x9c>
1000f4a0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f4a4:	429c      	cmp	r4, r3
1000f4a6:	d010      	beq.n	1000f4ca <MXC_I2C_RevA_Init+0xb2>
1000f4a8:	4f0d      	ldr	r7, [pc, #52]	@ (1000f4e0 <MXC_I2C_RevA_Init+0xc8>)
1000f4aa:	42bc      	cmp	r4, r7
1000f4ac:	bf14      	ite	ne
1000f4ae:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
1000f4b2:	2702      	moveq	r7, #2
1000f4b4:	4b09      	ldr	r3, [pc, #36]	@ (1000f4dc <MXC_I2C_RevA_Init+0xc4>)
1000f4b6:	eb07 0147 	add.w	r1, r7, r7, lsl #1
1000f4ba:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
1000f4be:	2200      	movs	r2, #0
1000f4c0:	605a      	str	r2, [r3, #4]
}
1000f4c2:	4630      	mov	r0, r6
1000f4c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f4c6:	4634      	mov	r4, r6
1000f4c8:	e7d7      	b.n	1000f47a <MXC_I2C_RevA_Init+0x62>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
1000f4ca:	2701      	movs	r7, #1
1000f4cc:	e7f2      	b.n	1000f4b4 <MXC_I2C_RevA_Init+0x9c>
        return E_NULL_PTR;
1000f4ce:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
1000f4d2:	e7ac      	b.n	1000f42e <MXC_I2C_RevA_Init+0x16>
1000f4d4:	4001d000 	.word	0x4001d000
1000f4d8:	4001e000 	.word	0x4001e000
1000f4dc:	20000be0 	.word	0x20000be0
1000f4e0:	4001f000 	.word	0x4001f000

1000f4e4 <MXC_I2C_RevA_SetSlaveAddr>:

int MXC_I2C_RevA_SetSlaveAddr(mxc_i2c_reva_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    if (i2c == NULL) {
1000f4e4:	4603      	mov	r3, r0
1000f4e6:	b1a0      	cbz	r0, 1000f512 <MXC_I2C_RevA_SetSlaveAddr+0x2e>
        return E_NULL_PTR;
    }

    if (idx != 0) {
1000f4e8:	b96a      	cbnz	r2, 1000f506 <MXC_I2C_RevA_SetSlaveAddr+0x22>
        // Multiple slaves are not supported yet
        return E_NOT_SUPPORTED;
    }

    if (slaveAddr > MXC_F_I2C_REVA_SLAVE_ADDR) {
1000f4ea:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
1000f4ee:	d20d      	bcs.n	1000f50c <MXC_I2C_RevA_SetSlaveAddr+0x28>
        return E_BAD_PARAM;
    }

    i2c->slave = 0;

    if (slaveAddr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
1000f4f0:	297f      	cmp	r1, #127	@ 0x7f
    i2c->slave = 0;
1000f4f2:	64c2      	str	r2, [r0, #76]	@ 0x4c
        // Set for 10bit addressing mode
        i2c->slave = MXC_F_I2C_REVA_SLAVE_EXT_ADDR_EN;
1000f4f4:	bf84      	itt	hi
1000f4f6:	f44f 4200 	movhi.w	r2, #32768	@ 0x8000
1000f4fa:	64c2      	strhi	r2, [r0, #76]	@ 0x4c
    }

    i2c->slave |= slaveAddr;
1000f4fc:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
1000f4fe:	430a      	orrs	r2, r1

    return E_NO_ERROR;
1000f500:	2000      	movs	r0, #0
    i2c->slave |= slaveAddr;
1000f502:	64da      	str	r2, [r3, #76]	@ 0x4c
    return E_NO_ERROR;
1000f504:	4770      	bx	lr
        return E_NOT_SUPPORTED;
1000f506:	f06f 0010 	mvn.w	r0, #16
1000f50a:	4770      	bx	lr
        return E_BAD_PARAM;
1000f50c:	f06f 0002 	mvn.w	r0, #2
}
1000f510:	4770      	bx	lr
        return E_NULL_PTR;
1000f512:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000f516:	4770      	bx	lr

1000f518 <MXC_I2C_RevA_SetFrequency>:

int MXC_I2C_RevA_SetFrequency(mxc_i2c_reva_regs_t *i2c, unsigned int hz)
{
    unsigned int ticksTotal, hiClks, lowClks;

    if (i2c == NULL) {
1000f518:	2800      	cmp	r0, #0
1000f51a:	d03f      	beq.n	1000f59c <MXC_I2C_RevA_SetFrequency+0x84>
{
1000f51c:	b410      	push	{r4}
        return E_NULL_PTR;
    }

    if (hz > MXC_I2C_REVA_FASTPLUS_SPEED && hz <= MXC_I2C_REVA_HIGH_SPEED) {
1000f51e:	4a21      	ldr	r2, [pc, #132]	@ (1000f5a4 <MXC_I2C_RevA_SetFrequency+0x8c>)
1000f520:	f5a1 2374 	sub.w	r3, r1, #999424	@ 0xf4000
1000f524:	f46f 7410 	mvn.w	r4, #576	@ 0x240
1000f528:	4423      	add	r3, r4
1000f52a:	4293      	cmp	r3, r2
1000f52c:	d313      	bcc.n	1000f556 <MXC_I2C_RevA_SetFrequency+0x3e>

        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;

        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz

    } else if (hz > MXC_I2C_REVA_HIGH_SPEED) {
1000f52e:	4b1e      	ldr	r3, [pc, #120]	@ (1000f5a8 <MXC_I2C_RevA_SetFrequency+0x90>)
1000f530:	4299      	cmp	r1, r3
1000f532:	d82f      	bhi.n	1000f594 <MXC_I2C_RevA_SetFrequency+0x7c>
        ticksTotal = PeripheralClock / hz;
1000f534:	4b1d      	ldr	r3, [pc, #116]	@ (1000f5ac <MXC_I2C_RevA_SetFrequency+0x94>)
        return E_BAD_PARAM;
    }

    // Calculate the period of SCL, 50% duty cycle
    ticksTotal = PeripheralClock / hz;
1000f536:	681b      	ldr	r3, [r3, #0]
1000f538:	085b      	lsrs	r3, r3, #1
1000f53a:	fbb3 f3f1 	udiv	r3, r3, r1
    hiClks = (ticksTotal >> 1) - 1;
1000f53e:	085b      	lsrs	r3, r3, #1
    if (ticksTotal % 1) {
        hiClks++;
    }

    // Check for maximum/minimum supported speeds
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
1000f540:	1e9a      	subs	r2, r3, #2
1000f542:	f5b2 7fff 	cmp.w	r2, #510	@ 0x1fe
    hiClks = (ticksTotal >> 1) - 1;
1000f546:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
1000f54a:	d823      	bhi.n	1000f594 <MXC_I2C_RevA_SetFrequency+0x7c>
        return E_BAD_PARAM;
    }

    i2c->clklo = lowClks & MXC_F_I2C_REVA_CLKLO_LO;
1000f54c:	6343      	str	r3, [r0, #52]	@ 0x34
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;

    // Return the actual speed set, since it won't be exactly what's requested
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
}
1000f54e:	bc10      	pop	{r4}
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;
1000f550:	6383      	str	r3, [r0, #56]	@ 0x38
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
1000f552:	f7ff bf47 	b.w	1000f3e4 <MXC_I2C_GetFrequency>
        ticksTotal = PeripheralClock / hz;
1000f556:	4b15      	ldr	r3, [pc, #84]	@ (1000f5ac <MXC_I2C_RevA_SetFrequency+0x94>)
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f558:	4c15      	ldr	r4, [pc, #84]	@ (1000f5b0 <MXC_I2C_RevA_SetFrequency+0x98>)
        ticksTotal = PeripheralClock / hz;
1000f55a:	681b      	ldr	r3, [r3, #0]
1000f55c:	085b      	lsrs	r3, r3, #1
1000f55e:	fbb3 f1f1 	udiv	r1, r3, r1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f562:	004a      	lsls	r2, r1, #1
        hsHiClks = ticksTotal / 3 - 1;
1000f564:	fba4 c101 	umull	ip, r1, r4, r1
1000f568:	0849      	lsrs	r1, r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f56a:	fba4 4202 	umull	r4, r2, r4, r2
        hsHiClks = ticksTotal / 3 - 1;
1000f56e:	3901      	subs	r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f570:	0852      	lsrs	r2, r2, #1
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
1000f572:	290f      	cmp	r1, #15
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f574:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
1000f578:	dc0c      	bgt.n	1000f594 <MXC_I2C_RevA_SetFrequency+0x7c>
1000f57a:	2a0f      	cmp	r2, #15
1000f57c:	dc0a      	bgt.n	1000f594 <MXC_I2C_RevA_SetFrequency+0x7c>
        hsHiClks = (hsHiClks << MXC_F_I2C_REVA_HSCLK_HI_POS) & MXC_F_I2C_REVA_HSCLK_HI;
1000f57e:	0209      	lsls	r1, r1, #8
1000f580:	b289      	uxth	r1, r1
        i2c->hsclk = (hsLowClks | hsHiClks);
1000f582:	b2d2      	uxtb	r2, r2
1000f584:	430a      	orrs	r2, r1
1000f586:	63c2      	str	r2, [r0, #60]	@ 0x3c
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
1000f588:	6802      	ldr	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
1000f58a:	490a      	ldr	r1, [pc, #40]	@ (1000f5b4 <MXC_I2C_RevA_SetFrequency+0x9c>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
1000f58c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
1000f590:	6002      	str	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
1000f592:	e7d2      	b.n	1000f53a <MXC_I2C_RevA_SetFrequency+0x22>
            return E_BAD_PARAM;
1000f594:	f06f 0002 	mvn.w	r0, #2
}
1000f598:	bc10      	pop	{r4}
1000f59a:	4770      	bx	lr
        return E_NULL_PTR;
1000f59c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f5a0:	4770      	bx	lr
1000f5a2:	bf00      	nop
1000f5a4:	00249f00 	.word	0x00249f00
1000f5a8:	0033e140 	.word	0x0033e140
1000f5ac:	20001340 	.word	0x20001340
1000f5b0:	aaaaaaab 	.word	0xaaaaaaab
1000f5b4:	00061a80 	.word	0x00061a80

1000f5b8 <MXC_I2C_RevA_GetFrequency>:
    unsigned int sclCycles = 0;

    // Calculate the speed based on what we've written into registers
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);

    return PeripheralClock / sclCycles;
1000f5b8:	4906      	ldr	r1, [pc, #24]	@ (1000f5d4 <MXC_I2C_RevA_GetFrequency+0x1c>)
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1000f5ba:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1000f5bc:	6b82      	ldr	r2, [r0, #56]	@ 0x38
    return PeripheralClock / sclCycles;
1000f5be:	6808      	ldr	r0, [r1, #0]
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1000f5c0:	f3c2 0208 	ubfx	r2, r2, #0, #9
1000f5c4:	f3c3 0308 	ubfx	r3, r3, #0, #9
1000f5c8:	4413      	add	r3, r2
    return PeripheralClock / sclCycles;
1000f5ca:	0840      	lsrs	r0, r0, #1
}
1000f5cc:	fbb0 f0f3 	udiv	r0, r0, r3
1000f5d0:	4770      	bx	lr
1000f5d2:	bf00      	nop
1000f5d4:	20001340 	.word	0x20001340

1000f5d8 <MXC_I2C_RevA_ReadRXFIFO>:
int MXC_I2C_RevA_ReadRXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                            unsigned int len)
{
    unsigned read = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
1000f5d8:	b1c8      	cbz	r0, 1000f60e <MXC_I2C_RevA_ReadRXFIFO+0x36>
1000f5da:	b1c1      	cbz	r1, 1000f60e <MXC_I2C_RevA_ReadRXFIFO+0x36>
        return E_NULL_PTR;
    }

    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f5dc:	b1aa      	cbz	r2, 1000f60a <MXC_I2C_RevA_ReadRXFIFO+0x32>
{
1000f5de:	b500      	push	{lr}
    unsigned read = 0;
1000f5e0:	2300      	movs	r3, #0
        bytes[read++] = i2c->fifo;
1000f5e2:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
1000f5e6:	e007      	b.n	1000f5f8 <MXC_I2C_RevA_ReadRXFIFO+0x20>
1000f5e8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000f5ea:	3301      	adds	r3, #1
1000f5ec:	fa5f fc81 	uxtb.w	ip, r1
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f5f0:	429a      	cmp	r2, r3
        bytes[read++] = i2c->fifo;
1000f5f2:	f80e c003 	strb.w	ip, [lr, r3]
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f5f6:	d005      	beq.n	1000f604 <MXC_I2C_RevA_ReadRXFIFO+0x2c>
1000f5f8:	6841      	ldr	r1, [r0, #4]
1000f5fa:	0789      	lsls	r1, r1, #30
1000f5fc:	d5f4      	bpl.n	1000f5e8 <MXC_I2C_RevA_ReadRXFIFO+0x10>
    }

    return read;
1000f5fe:	4618      	mov	r0, r3
}
1000f600:	f85d fb04 	ldr.w	pc, [sp], #4
    return read;
1000f604:	4610      	mov	r0, r2
}
1000f606:	f85d fb04 	ldr.w	pc, [sp], #4
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f60a:	4610      	mov	r0, r2
1000f60c:	4770      	bx	lr
        return E_NULL_PTR;
1000f60e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f612:	4770      	bx	lr

1000f614 <MXC_I2C_RevA_GetRXFIFOAvailable>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_GetRXFIFOAvailable(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
1000f614:	b118      	cbz	r0, 1000f61e <MXC_I2C_RevA_GetRXFIFOAvailable+0xa>
        return E_NULL_PTR;
    }

    return (i2c->rxctrl1 & MXC_F_I2C_REVA_RXCTRL1_LVL) >> MXC_F_I2C_REVA_RXCTRL1_LVL_POS;
1000f616:	6a00      	ldr	r0, [r0, #32]
1000f618:	f3c0 2003 	ubfx	r0, r0, #8, #4
1000f61c:	4770      	bx	lr
        return E_NULL_PTR;
1000f61e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f622:	4770      	bx	lr

1000f624 <MXC_I2C_RevA_WriteTXFIFO>:
int MXC_I2C_RevA_WriteTXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                             unsigned int len)
{
    unsigned written = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
1000f624:	b198      	cbz	r0, 1000f64e <MXC_I2C_RevA_WriteTXFIFO+0x2a>
1000f626:	b191      	cbz	r1, 1000f64e <MXC_I2C_RevA_WriteTXFIFO+0x2a>
        return E_NULL_PTR;
    }

    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000f628:	b17a      	cbz	r2, 1000f64a <MXC_I2C_RevA_WriteTXFIFO+0x26>
    unsigned written = 0;
1000f62a:	2300      	movs	r3, #0
        i2c->fifo = bytes[written++];
1000f62c:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
1000f630:	e006      	b.n	1000f640 <MXC_I2C_RevA_WriteTXFIFO+0x1c>
1000f632:	3301      	adds	r3, #1
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000f634:	429a      	cmp	r2, r3
        i2c->fifo = bytes[written++];
1000f636:	f81c 1003 	ldrb.w	r1, [ip, r3]
1000f63a:	b2c9      	uxtb	r1, r1
1000f63c:	62c1      	str	r1, [r0, #44]	@ 0x2c
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000f63e:	d004      	beq.n	1000f64a <MXC_I2C_RevA_WriteTXFIFO+0x26>
1000f640:	6841      	ldr	r1, [r0, #4]
1000f642:	06c9      	lsls	r1, r1, #27
1000f644:	d5f5      	bpl.n	1000f632 <MXC_I2C_RevA_WriteTXFIFO+0xe>
    }

    return written;
1000f646:	4618      	mov	r0, r3
1000f648:	4770      	bx	lr
1000f64a:	4610      	mov	r0, r2
1000f64c:	4770      	bx	lr
        return E_NULL_PTR;
1000f64e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f652:	4770      	bx	lr

1000f654 <MXC_I2C_RevA_GetTXFIFOAvailable>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_GetTXFIFOAvailable(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
1000f654:	b138      	cbz	r0, 1000f666 <MXC_I2C_RevA_GetTXFIFOAvailable+0x12>
        return E_NULL_PTR;
    }

    int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
1000f656:	6983      	ldr	r3, [r0, #24]
                    MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;
    return txFIFOlen -
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
1000f658:	6a82      	ldr	r2, [r0, #40]	@ 0x28
    return txFIFOlen -
1000f65a:	f3c3 2007 	ubfx	r0, r3, #8, #8
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
1000f65e:	f3c2 2303 	ubfx	r3, r2, #8, #4
    return txFIFOlen -
1000f662:	1ac0      	subs	r0, r0, r3
1000f664:	4770      	bx	lr
        return E_NULL_PTR;
1000f666:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f66a:	4770      	bx	lr

1000f66c <MXC_I2C_RevA_ClearRXFIFO>:

void MXC_I2C_RevA_ClearRXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
1000f66c:	69c3      	ldr	r3, [r0, #28]
1000f66e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000f672:	61c3      	str	r3, [r0, #28]

    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
1000f674:	69c3      	ldr	r3, [r0, #28]
1000f676:	061b      	lsls	r3, r3, #24
1000f678:	d4fc      	bmi.n	1000f674 <MXC_I2C_RevA_ClearRXFIFO+0x8>
}
1000f67a:	4770      	bx	lr

1000f67c <MXC_I2C_RevA_ClearTXFIFO>:

void MXC_I2C_RevA_ClearTXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
1000f67c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
1000f67e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000f682:	6243      	str	r3, [r0, #36]	@ 0x24

    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
1000f684:	6a43      	ldr	r3, [r0, #36]	@ 0x24
1000f686:	061b      	lsls	r3, r3, #24
1000f688:	d4fc      	bmi.n	1000f684 <MXC_I2C_RevA_ClearTXFIFO+0x8>
}
1000f68a:	4770      	bx	lr

1000f68c <MXC_I2C_RevA_ClearFlags>:
    return E_NO_ERROR;
}

void MXC_I2C_RevA_ClearFlags(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->intfl0 = flags0;
1000f68c:	6081      	str	r1, [r0, #8]
    i2c->intfl1 = flags1;
1000f68e:	6102      	str	r2, [r0, #16]
}
1000f690:	4770      	bx	lr
1000f692:	bf00      	nop

1000f694 <MXC_I2C_RevA_EnableInt>:

void MXC_I2C_RevA_EnableInt(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->inten0 |= flags0;
1000f694:	68c3      	ldr	r3, [r0, #12]
1000f696:	430b      	orrs	r3, r1
1000f698:	60c3      	str	r3, [r0, #12]
    i2c->inten1 |= flags1;
1000f69a:	6943      	ldr	r3, [r0, #20]
1000f69c:	4313      	orrs	r3, r2
1000f69e:	6143      	str	r3, [r0, #20]
}
1000f6a0:	4770      	bx	lr
1000f6a2:	bf00      	nop

1000f6a4 <MXC_I2C_RevA_DisableInt>:

void MXC_I2C_RevA_DisableInt(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->inten0 &= ~flags0;
1000f6a4:	68c3      	ldr	r3, [r0, #12]
1000f6a6:	ea23 0301 	bic.w	r3, r3, r1
1000f6aa:	60c3      	str	r3, [r0, #12]
    i2c->inten1 &= ~flags1;
1000f6ac:	6943      	ldr	r3, [r0, #20]
1000f6ae:	ea23 0302 	bic.w	r3, r3, r2
1000f6b2:	6143      	str	r3, [r0, #20]
}
1000f6b4:	4770      	bx	lr
1000f6b6:	bf00      	nop

1000f6b8 <MXC_I2C_RevA_Recover>:
int MXC_I2C_RevA_Recover(mxc_i2c_reva_regs_t *i2c, unsigned int retries)
{
    int err;
    unsigned int i;

    if (i2c == NULL) {
1000f6b8:	2800      	cmp	r0, #0
1000f6ba:	d065      	beq.n	1000f788 <MXC_I2C_RevA_Recover+0xd0>
        return E_NULL_PTR;
    }

    err = E_COMM_ERR;

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000f6bc:	6803      	ldr	r3, [r0, #0]
1000f6be:	f043 0301 	orr.w	r3, r3, #1
{
1000f6c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000f6c6:	6003      	str	r3, [r0, #0]
    int swBit = i2c->ctrl & MXC_F_I2C_REVA_CTRL_BB_MODE;
1000f6c8:	6807      	ldr	r7, [r0, #0]

    if (i2c == NULL) {
        return E_NULL_PTR;
    }

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_BB_MODE;
1000f6ca:	6803      	ldr	r3, [r0, #0]
1000f6cc:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
1000f6d0:	460e      	mov	r6, r1
1000f6d2:	4604      	mov	r4, r0
1000f6d4:	f407 6780 	and.w	r7, r7, #1024	@ 0x400
1000f6d8:	6003      	str	r3, [r0, #0]

    // Follow the procedure detailed in the header file
    // Delay 10uS between each step to give the line/slaves time to react
    for (i = 0; i < retries; i++) {
1000f6da:	2900      	cmp	r1, #0
1000f6dc:	d043      	beq.n	1000f766 <MXC_I2C_RevA_Recover+0xae>
1000f6de:	2500      	movs	r5, #0
1000f6e0:	e02b      	b.n	1000f73a <MXC_I2C_RevA_Recover+0x82>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000f6e2:	f7ff fb03 	bl	1000ecec <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f6e6:	6823      	ldr	r3, [r4, #0]
1000f6e8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
1000f6ec:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000f6ee:	200a      	movs	r0, #10
1000f6f0:	f7ff fafc 	bl	1000ecec <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
1000f6f4:	6823      	ldr	r3, [r4, #0]
1000f6f6:	f413 7800 	ands.w	r8, r3, #512	@ 0x200
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000f6fa:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
1000f6fe:	d12b      	bne.n	1000f758 <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
1000f700:	f7ff faf4 	bl	1000ecec <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f704:	6823      	ldr	r3, [r4, #0]
1000f706:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000f70a:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000f70c:	200a      	movs	r0, #10
1000f70e:	f7ff faed 	bl	1000ecec <MXC_Delay>

        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
1000f712:	6823      	ldr	r3, [r4, #0]
1000f714:	059a      	lsls	r2, r3, #22
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000f716:	f04f 000a 	mov.w	r0, #10
        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
1000f71a:	d51d      	bpl.n	1000f758 <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
1000f71c:	f7ff fae6 	bl	1000ecec <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT;
1000f720:	6823      	ldr	r3, [r4, #0]
1000f722:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000f726:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000f728:	200a      	movs	r0, #10
1000f72a:	f7ff fadf 	bl	1000ecec <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000f72e:	6823      	ldr	r3, [r4, #0]
1000f730:	05db      	lsls	r3, r3, #23
1000f732:	d425      	bmi.n	1000f780 <MXC_I2C_RevA_Recover+0xc8>
    for (i = 0; i < retries; i++) {
1000f734:	3501      	adds	r5, #1
1000f736:	42ae      	cmp	r6, r5
1000f738:	d015      	beq.n	1000f766 <MXC_I2C_RevA_Recover+0xae>
        MXC_Delay(10);
1000f73a:	200a      	movs	r0, #10
1000f73c:	f7ff fad6 	bl	1000ecec <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SCL_OUT;
1000f740:	6823      	ldr	r3, [r4, #0]
1000f742:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1000f746:	6023      	str	r3, [r4, #0]
        MXC_Delay(10);
1000f748:	200a      	movs	r0, #10
1000f74a:	f7ff facf 	bl	1000ecec <MXC_Delay>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000f74e:	6823      	ldr	r3, [r4, #0]
1000f750:	05d9      	lsls	r1, r3, #23
        MXC_Delay(10);
1000f752:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000f756:	d5c4      	bpl.n	1000f6e2 <MXC_I2C_RevA_Recover+0x2a>
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f758:	6823      	ldr	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
1000f75a:	3501      	adds	r5, #1
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f75c:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
    for (i = 0; i < retries; i++) {
1000f760:	42ae      	cmp	r6, r5
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f762:	6023      	str	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
1000f764:	d1e9      	bne.n	1000f73a <MXC_I2C_RevA_Recover+0x82>
    err = E_COMM_ERR;
1000f766:	f06f 0008 	mvn.w	r0, #8
            err = E_NO_ERROR; // We have control
            break;
        }
    }

    if (swBit == 0) {
1000f76a:	b91f      	cbnz	r7, 1000f774 <MXC_I2C_RevA_Recover+0xbc>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_BB_MODE;
1000f76c:	6823      	ldr	r3, [r4, #0]
1000f76e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1000f772:	6023      	str	r3, [r4, #0]
    }

    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_EN;
1000f774:	6823      	ldr	r3, [r4, #0]
1000f776:	f023 0301 	bic.w	r3, r3, #1
1000f77a:	6023      	str	r3, [r4, #0]

    return err;
}
1000f77c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            err = E_NO_ERROR; // We have control
1000f780:	4640      	mov	r0, r8
    if (swBit == 0) {
1000f782:	2f00      	cmp	r7, #0
1000f784:	d1f6      	bne.n	1000f774 <MXC_I2C_RevA_Recover+0xbc>
1000f786:	e7f1      	b.n	1000f76c <MXC_I2C_RevA_Recover+0xb4>
        return E_NULL_PTR;
1000f788:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f78c:	4770      	bx	lr
1000f78e:	bf00      	nop

1000f790 <MXC_I2C_RevA_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_SetRXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int rxFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH) >>
1000f790:	6982      	ldr	r2, [r0, #24]
1000f792:	b2d2      	uxtb	r2, r2
                             MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH_POS;

    if (numBytes > rxFIFOlen) {
1000f794:	428a      	cmp	r2, r1
{
1000f796:	4603      	mov	r3, r0
    if (numBytes > rxFIFOlen) {
1000f798:	d307      	bcc.n	1000f7aa <MXC_I2C_RevA_SetRXThreshold+0x1a>
        return E_BAD_PARAM;
    }

    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
1000f79a:	69c2      	ldr	r2, [r0, #28]
1000f79c:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
1000f7a0:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
1000f7a4:	2000      	movs	r0, #0
    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
1000f7a6:	61d9      	str	r1, [r3, #28]
    return E_NO_ERROR;
1000f7a8:	4770      	bx	lr
        return E_BAD_PARAM;
1000f7aa:	f06f 0002 	mvn.w	r0, #2
}
1000f7ae:	4770      	bx	lr

1000f7b0 <MXC_I2C_RevA_SetTXThreshold>:
    return (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_THD_LVL) >> MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS;
}

int MXC_I2C_RevA_SetTXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
1000f7b0:	6982      	ldr	r2, [r0, #24]
1000f7b2:	f3c2 2207 	ubfx	r2, r2, #8, #8
                             MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;

    if (numBytes > txFIFOlen) {
1000f7b6:	428a      	cmp	r2, r1
{
1000f7b8:	4603      	mov	r3, r0
    if (numBytes > txFIFOlen) {
1000f7ba:	d307      	bcc.n	1000f7cc <MXC_I2C_RevA_SetTXThreshold+0x1c>
        return E_BAD_PARAM;
    }

    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
1000f7bc:	6a42      	ldr	r2, [r0, #36]	@ 0x24
1000f7be:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
1000f7c2:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_TXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
1000f7c6:	2000      	movs	r0, #0
    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
1000f7c8:	6259      	str	r1, [r3, #36]	@ 0x24
    return E_NO_ERROR;
1000f7ca:	4770      	bx	lr
        return E_BAD_PARAM;
1000f7cc:	f06f 0002 	mvn.w	r0, #2
}
1000f7d0:	4770      	bx	lr
1000f7d2:	bf00      	nop

1000f7d4 <MXC_ICC_Enable>:
    return MXC_ICC_RevA_ID((mxc_icc_reva_regs_t *)icc, cid);
}

void MXC_ICC_Enable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Enable((mxc_icc_reva_regs_t *)icc);
1000f7d4:	f000 b800 	b.w	1000f7d8 <MXC_ICC_RevA_Enable>

1000f7d8 <MXC_ICC_RevA_Enable>:
}

void MXC_ICC_RevA_Enable(mxc_icc_reva_regs_t *icc)
{
    // Invalidate cache and wait until ready
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
1000f7d8:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
1000f7dc:	2201      	movs	r2, #1
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
1000f7de:	f023 0301 	bic.w	r3, r3, #1
1000f7e2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
1000f7e6:	f8c0 2700 	str.w	r2, [r0, #1792]	@ 0x700
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
1000f7ea:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100

    while (!(MXC_ICC_Ready(icc))) {}
1000f7ee:	03da      	lsls	r2, r3, #15
1000f7f0:	d5fb      	bpl.n	1000f7ea <MXC_ICC_RevA_Enable+0x12>

    // Enable Cache
    icc->ctrl |= MXC_F_ICC_REVA_CTRL_EN;
1000f7f2:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
1000f7f6:	f043 0301 	orr.w	r3, r3, #1
1000f7fa:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
1000f7fe:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    while (!(MXC_ICC_Ready(icc))) {}
1000f802:	03db      	lsls	r3, r3, #15
1000f804:	d5fb      	bpl.n	1000f7fe <MXC_ICC_RevA_Enable+0x26>
}
1000f806:	4770      	bx	lr

1000f808 <MXC_UART_Shutdown>:

    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
}

int MXC_UART_Shutdown(mxc_uart_regs_t *uart)
{
1000f808:	b508      	push	{r3, lr}
    switch (MXC_UART_GET_IDX(uart)) {
1000f80a:	4b16      	ldr	r3, [pc, #88]	@ (1000f864 <MXC_UART_Shutdown+0x5c>)
1000f80c:	4298      	cmp	r0, r3
1000f80e:	d010      	beq.n	1000f832 <MXC_UART_Shutdown+0x2a>
1000f810:	4b15      	ldr	r3, [pc, #84]	@ (1000f868 <MXC_UART_Shutdown+0x60>)
1000f812:	4298      	cmp	r0, r3
1000f814:	d014      	beq.n	1000f840 <MXC_UART_Shutdown+0x38>
1000f816:	4b15      	ldr	r3, [pc, #84]	@ (1000f86c <MXC_UART_Shutdown+0x64>)
1000f818:	4298      	cmp	r0, r3
1000f81a:	d018      	beq.n	1000f84e <MXC_UART_Shutdown+0x46>
1000f81c:	4b14      	ldr	r3, [pc, #80]	@ (1000f870 <MXC_UART_Shutdown+0x68>)
1000f81e:	4298      	cmp	r0, r3
1000f820:	d11c      	bne.n	1000f85c <MXC_UART_Shutdown+0x54>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
        break;

    case 3:
        MXC_SYS_Reset_Periph(MXC_SYS_RESET_UART3);
1000f822:	2044      	movs	r0, #68	@ 0x44
1000f824:	f7ff fb80 	bl	1000ef28 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART3);
1000f828:	2044      	movs	r0, #68	@ 0x44
1000f82a:	f7ff fac1 	bl	1000edb0 <MXC_SYS_ClockDisable>

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000f82e:	2000      	movs	r0, #0
}
1000f830:	bd08      	pop	{r3, pc}
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART0);
1000f832:	200b      	movs	r0, #11
1000f834:	f7ff fb78 	bl	1000ef28 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART0);
1000f838:	2009      	movs	r0, #9
1000f83a:	f7ff fab9 	bl	1000edb0 <MXC_SYS_ClockDisable>
        break;
1000f83e:	e7f6      	b.n	1000f82e <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART1);
1000f840:	200c      	movs	r0, #12
1000f842:	f7ff fb71 	bl	1000ef28 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART1);
1000f846:	200a      	movs	r0, #10
1000f848:	f7ff fab2 	bl	1000edb0 <MXC_SYS_ClockDisable>
        break;
1000f84c:	e7ef      	b.n	1000f82e <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
1000f84e:	201c      	movs	r0, #28
1000f850:	f7ff fb6a 	bl	1000ef28 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
1000f854:	2021      	movs	r0, #33	@ 0x21
1000f856:	f7ff faab 	bl	1000edb0 <MXC_SYS_ClockDisable>
        break;
1000f85a:	e7e8      	b.n	1000f82e <MXC_UART_Shutdown+0x26>
        return E_BAD_PARAM;
1000f85c:	f06f 0002 	mvn.w	r0, #2
}
1000f860:	bd08      	pop	{r3, pc}
1000f862:	bf00      	nop
1000f864:	40042000 	.word	0x40042000
1000f868:	40043000 	.word	0x40043000
1000f86c:	40044000 	.word	0x40044000
1000f870:	40081400 	.word	0x40081400

1000f874 <MXC_UART_Init>:
{
1000f874:	b570      	push	{r4, r5, r6, lr}
1000f876:	4604      	mov	r4, r0
1000f878:	460e      	mov	r6, r1
1000f87a:	4615      	mov	r5, r2
    retval = MXC_UART_Shutdown(uart);
1000f87c:	f7ff ffc4 	bl	1000f808 <MXC_UART_Shutdown>
    if (retval) {
1000f880:	bba8      	cbnz	r0, 1000f8ee <MXC_UART_Init+0x7a>
    switch (clock) {
1000f882:	2d02      	cmp	r5, #2
1000f884:	d02d      	beq.n	1000f8e2 <MXC_UART_Init+0x6e>
1000f886:	2d04      	cmp	r5, #4
1000f888:	d018      	beq.n	1000f8bc <MXC_UART_Init+0x48>
    switch (MXC_UART_GET_IDX(uart)) {
1000f88a:	4b20      	ldr	r3, [pc, #128]	@ (1000f90c <MXC_UART_Init+0x98>)
1000f88c:	429c      	cmp	r4, r3
1000f88e:	d01b      	beq.n	1000f8c8 <MXC_UART_Init+0x54>
1000f890:	4b1f      	ldr	r3, [pc, #124]	@ (1000f910 <MXC_UART_Init+0x9c>)
1000f892:	429c      	cmp	r4, r3
1000f894:	d02c      	beq.n	1000f8f0 <MXC_UART_Init+0x7c>
1000f896:	4b1f      	ldr	r3, [pc, #124]	@ (1000f914 <MXC_UART_Init+0xa0>)
1000f898:	429c      	cmp	r4, r3
1000f89a:	d030      	beq.n	1000f8fe <MXC_UART_Init+0x8a>
1000f89c:	4b1e      	ldr	r3, [pc, #120]	@ (1000f918 <MXC_UART_Init+0xa4>)
1000f89e:	429c      	cmp	r4, r3
1000f8a0:	d123      	bne.n	1000f8ea <MXC_UART_Init+0x76>
        MXC_GPIO_Config(&gpio_cfg_uart3);
1000f8a2:	481e      	ldr	r0, [pc, #120]	@ (1000f91c <MXC_UART_Init+0xa8>)
1000f8a4:	f7ff fb84 	bl	1000efb0 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART3);
1000f8a8:	2044      	movs	r0, #68	@ 0x44
1000f8aa:	f7ff faa1 	bl	1000edf0 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f8ae:	462a      	mov	r2, r5
1000f8b0:	4631      	mov	r1, r6
1000f8b2:	4620      	mov	r0, r4
}
1000f8b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f8b8:	f000 b8f8 	b.w	1000faac <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_ERTCO);
1000f8bc:	2006      	movs	r0, #6
1000f8be:	f7ff fab9 	bl	1000ee34 <MXC_SYS_ClockSourceEnable>
    switch (MXC_UART_GET_IDX(uart)) {
1000f8c2:	4b12      	ldr	r3, [pc, #72]	@ (1000f90c <MXC_UART_Init+0x98>)
1000f8c4:	429c      	cmp	r4, r3
1000f8c6:	d1e3      	bne.n	1000f890 <MXC_UART_Init+0x1c>
        MXC_GPIO_Config(&gpio_cfg_uart0);
1000f8c8:	4815      	ldr	r0, [pc, #84]	@ (1000f920 <MXC_UART_Init+0xac>)
1000f8ca:	f7ff fb71 	bl	1000efb0 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART0);
1000f8ce:	2009      	movs	r0, #9
1000f8d0:	f7ff fa8e 	bl	1000edf0 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f8d4:	462a      	mov	r2, r5
1000f8d6:	4631      	mov	r1, r6
1000f8d8:	4620      	mov	r0, r4
}
1000f8da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f8de:	f000 b8e5 	b.w	1000faac <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_IBRO);
1000f8e2:	2005      	movs	r0, #5
1000f8e4:	f7ff faa6 	bl	1000ee34 <MXC_SYS_ClockSourceEnable>
        break;
1000f8e8:	e7cf      	b.n	1000f88a <MXC_UART_Init+0x16>
        return E_BAD_PARAM;
1000f8ea:	f06f 0002 	mvn.w	r0, #2
}
1000f8ee:	bd70      	pop	{r4, r5, r6, pc}
        MXC_GPIO_Config(&gpio_cfg_uart1);
1000f8f0:	480c      	ldr	r0, [pc, #48]	@ (1000f924 <MXC_UART_Init+0xb0>)
1000f8f2:	f7ff fb5d 	bl	1000efb0 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART1);
1000f8f6:	200a      	movs	r0, #10
1000f8f8:	f7ff fa7a 	bl	1000edf0 <MXC_SYS_ClockEnable>
        break;
1000f8fc:	e7d7      	b.n	1000f8ae <MXC_UART_Init+0x3a>
        MXC_GPIO_Config(&gpio_cfg_uart2);
1000f8fe:	480a      	ldr	r0, [pc, #40]	@ (1000f928 <MXC_UART_Init+0xb4>)
1000f900:	f7ff fb56 	bl	1000efb0 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART2);
1000f904:	2021      	movs	r0, #33	@ 0x21
1000f906:	f7ff fa73 	bl	1000edf0 <MXC_SYS_ClockEnable>
        break;
1000f90a:	e7d0      	b.n	1000f8ae <MXC_UART_Init+0x3a>
1000f90c:	40042000 	.word	0x40042000
1000f910:	40043000 	.word	0x40043000
1000f914:	40044000 	.word	0x40044000
1000f918:	40081400 	.word	0x40081400
1000f91c:	10019068 	.word	0x10019068
1000f920:	1001908c 	.word	0x1001908c
1000f924:	10019080 	.word	0x10019080
1000f928:	10019074 	.word	0x10019074

1000f92c <MXC_UART_SetFrequency>:
}

int MXC_UART_SetFrequency(mxc_uart_regs_t *uart, unsigned int baud, mxc_uart_clock_t clock)
{
    int frequency, clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX(uart) < 0) {
1000f92c:	4b31      	ldr	r3, [pc, #196]	@ (1000f9f4 <MXC_UART_SetFrequency+0xc8>)
1000f92e:	4298      	cmp	r0, r3
{
1000f930:	b510      	push	{r4, lr}
1000f932:	4604      	mov	r4, r0
    if (MXC_UART_GET_IDX(uart) < 0) {
1000f934:	d015      	beq.n	1000f962 <MXC_UART_SetFrequency+0x36>
1000f936:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f93a:	4298      	cmp	r0, r3
1000f93c:	d011      	beq.n	1000f962 <MXC_UART_SetFrequency+0x36>
1000f93e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f942:	4298      	cmp	r0, r3
1000f944:	d00d      	beq.n	1000f962 <MXC_UART_SetFrequency+0x36>
1000f946:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000f94a:	4298      	cmp	r0, r3
1000f94c:	d106      	bne.n	1000f95c <MXC_UART_SetFrequency+0x30>
    }

    // check if the uart is LPUART
    if (uart == MXC_UART3) {
        // OSR default value
        uart->osr = 5;
1000f94e:	2305      	movs	r3, #5

        switch (clock) {
1000f950:	2a02      	cmp	r2, #2
        uart->osr = 5;
1000f952:	6143      	str	r3, [r0, #20]
        switch (clock) {
1000f954:	d014      	beq.n	1000f980 <MXC_UART_SetFrequency+0x54>
1000f956:	2a04      	cmp	r2, #4
1000f958:	d032      	beq.n	1000f9c0 <MXC_UART_SetFrequency+0x94>
1000f95a:	b18a      	cbz	r2, 1000f980 <MXC_UART_SetFrequency+0x54>
        return E_BAD_PARAM;
1000f95c:	f06f 0002 	mvn.w	r0, #2
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
    }

    return frequency;
}
1000f960:	bd10      	pop	{r4, pc}
        if (clock == MXC_UART_ERTCO_CLK) {
1000f962:	2a04      	cmp	r2, #4
1000f964:	d0fa      	beq.n	1000f95c <MXC_UART_SetFrequency+0x30>
        frequency = MXC_UART_RevB_SetFrequency((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f966:	4620      	mov	r0, r4
1000f968:	f000 f8d8 	bl	1000fb1c <MXC_UART_RevB_SetFrequency>
    if (frequency > 0) {
1000f96c:	2800      	cmp	r0, #0
1000f96e:	ddf7      	ble.n	1000f960 <MXC_UART_SetFrequency+0x34>
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
1000f970:	6823      	ldr	r3, [r4, #0]
1000f972:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
1000f976:	6023      	str	r3, [r4, #0]
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
1000f978:	6823      	ldr	r3, [r4, #0]
1000f97a:	031b      	lsls	r3, r3, #12
1000f97c:	d5fc      	bpl.n	1000f978 <MXC_UART_SetFrequency+0x4c>
}
1000f97e:	bd10      	pop	{r4, pc}
            clkDiv = ((IBRO_FREQ) / baud);
1000f980:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
1000f984:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((IBRO_FREQ) % baud);
1000f988:	fb01 f203 	mul.w	r2, r1, r3
1000f98c:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        if (!clkDiv || mod > (baud / 2)) {
1000f990:	b113      	cbz	r3, 1000f998 <MXC_UART_SetFrequency+0x6c>
1000f992:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1000f996:	d900      	bls.n	1000f99a <MXC_UART_SetFrequency+0x6e>
            clkDiv++;
1000f998:	3301      	adds	r3, #1
        uart->clkdiv = clkDiv;
1000f99a:	4a17      	ldr	r2, [pc, #92]	@ (1000f9f8 <MXC_UART_SetFrequency+0xcc>)
1000f99c:	6113      	str	r3, [r2, #16]
        return E_BAD_PARAM;
    }

    // check if UARt is LP UART
    if (uart == MXC_UART3) {
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
1000f99e:	6810      	ldr	r0, [r2, #0]
1000f9a0:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
1000f9a4:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
1000f9a8:	d005      	beq.n	1000f9b6 <MXC_UART_SetFrequency+0x8a>
            periphClock = ERTCO_FREQ * 2;
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
1000f9aa:	6813      	ldr	r3, [r2, #0]
1000f9ac:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1000f9b0:	d1d4      	bne.n	1000f95c <MXC_UART_SetFrequency+0x30>
1000f9b2:	f44f 00e1 	mov.w	r0, #7372800	@ 0x708000
                   MXC_S_UART_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
            periphClock = IBRO_FREQ;
        } else {
            return E_BAD_PARAM;
        }
        return (periphClock / uart->clkdiv);
1000f9b6:	4b10      	ldr	r3, [pc, #64]	@ (1000f9f8 <MXC_UART_SetFrequency+0xcc>)
1000f9b8:	691b      	ldr	r3, [r3, #16]
1000f9ba:	fbb0 f0f3 	udiv	r0, r0, r3
1000f9be:	e7d5      	b.n	1000f96c <MXC_UART_SetFrequency+0x40>
            uart->ctrl |= MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK;
1000f9c0:	6803      	ldr	r3, [r0, #0]
1000f9c2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
1000f9c6:	6003      	str	r3, [r0, #0]
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
1000f9c8:	6803      	ldr	r3, [r0, #0]
            if (baud > 2400) {
1000f9ca:	f5b1 6f16 	cmp.w	r1, #2400	@ 0x960
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
1000f9ce:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
1000f9d2:	6003      	str	r3, [r0, #0]
            if (baud > 2400) {
1000f9d4:	d90a      	bls.n	1000f9ec <MXC_UART_SetFrequency+0xc0>
                uart->osr = 0;
1000f9d6:	2300      	movs	r3, #0
1000f9d8:	6143      	str	r3, [r0, #20]
            clkDiv = ((ERTCO_FREQ * 2) / baud);
1000f9da:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
1000f9de:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((ERTCO_FREQ * 2) % baud);
1000f9e2:	fb01 f203 	mul.w	r2, r1, r3
1000f9e6:	f5c2 3280 	rsb	r2, r2, #65536	@ 0x10000
1000f9ea:	e7d1      	b.n	1000f990 <MXC_UART_SetFrequency+0x64>
                uart->osr = 1;
1000f9ec:	2301      	movs	r3, #1
1000f9ee:	6143      	str	r3, [r0, #20]
1000f9f0:	e7f3      	b.n	1000f9da <MXC_UART_SetFrequency+0xae>
1000f9f2:	bf00      	nop
1000f9f4:	40042000 	.word	0x40042000
1000f9f8:	40081400 	.word	0x40081400

1000f9fc <MXC_UART_GetFrequency>:
    if (MXC_UART_GET_IDX(uart) < 0) {
1000f9fc:	4b12      	ldr	r3, [pc, #72]	@ (1000fa48 <MXC_UART_GetFrequency+0x4c>)
1000f9fe:	4298      	cmp	r0, r3
1000fa00:	d01c      	beq.n	1000fa3c <MXC_UART_GetFrequency+0x40>
1000fa02:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fa06:	4298      	cmp	r0, r3
1000fa08:	d018      	beq.n	1000fa3c <MXC_UART_GetFrequency+0x40>
1000fa0a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fa0e:	4298      	cmp	r0, r3
1000fa10:	d014      	beq.n	1000fa3c <MXC_UART_GetFrequency+0x40>
1000fa12:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fa16:	4298      	cmp	r0, r3
1000fa18:	d112      	bne.n	1000fa40 <MXC_UART_GetFrequency+0x44>
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
1000fa1a:	6803      	ldr	r3, [r0, #0]
1000fa1c:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1000fa20:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
1000fa24:	d005      	beq.n	1000fa32 <MXC_UART_GetFrequency+0x36>
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
1000fa26:	6803      	ldr	r3, [r0, #0]
1000fa28:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1000fa2c:	d108      	bne.n	1000fa40 <MXC_UART_GetFrequency+0x44>
1000fa2e:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        return (periphClock / uart->clkdiv);
1000fa32:	4a06      	ldr	r2, [pc, #24]	@ (1000fa4c <MXC_UART_GetFrequency+0x50>)
1000fa34:	6910      	ldr	r0, [r2, #16]
1000fa36:	fbb3 f0f0 	udiv	r0, r3, r0
1000fa3a:	4770      	bx	lr
    } else {
        return MXC_UART_RevB_GetFrequency((mxc_uart_revb_regs_t *)uart);
1000fa3c:	f000 b8ba 	b.w	1000fbb4 <MXC_UART_RevB_GetFrequency>
        return E_BAD_PARAM;
1000fa40:	f06f 0002 	mvn.w	r0, #2
    }
}
1000fa44:	4770      	bx	lr
1000fa46:	bf00      	nop
1000fa48:	40042000 	.word	0x40042000
1000fa4c:	40081400 	.word	0x40081400

1000fa50 <MXC_UART_SetDataSize>:

int MXC_UART_SetDataSize(mxc_uart_regs_t *uart, int dataSize)
{
    return MXC_UART_RevB_SetDataSize((mxc_uart_revb_regs_t *)uart, dataSize);
1000fa50:	f000 b8f0 	b.w	1000fc34 <MXC_UART_RevB_SetDataSize>

1000fa54 <MXC_UART_SetStopBits>:
}

int MXC_UART_SetStopBits(mxc_uart_regs_t *uart, mxc_uart_stop_t stopBits)
{
    return MXC_UART_RevB_SetStopBits((mxc_uart_revb_regs_t *)uart, stopBits);
1000fa54:	f000 b90e 	b.w	1000fc74 <MXC_UART_RevB_SetStopBits>

1000fa58 <MXC_UART_SetParity>:
}

int MXC_UART_SetParity(mxc_uart_regs_t *uart, mxc_uart_parity_t parity)
{
    return MXC_UART_RevB_SetParity((mxc_uart_revb_regs_t *)uart, parity);
1000fa58:	f000 b930 	b.w	1000fcbc <MXC_UART_RevB_SetParity>

1000fa5c <MXC_UART_ReadCharacterRaw>:
    return MXC_UART_RevB_AbortTransmission((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_ReadCharacterRaw(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_ReadCharacterRaw((mxc_uart_revb_regs_t *)uart);
1000fa5c:	f000 b984 	b.w	1000fd68 <MXC_UART_RevB_ReadCharacterRaw>

1000fa60 <MXC_UART_WriteCharacterRaw>:
}

int MXC_UART_WriteCharacterRaw(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_RevB_WriteCharacterRaw((mxc_uart_revb_regs_t *)uart, character);
1000fa60:	f000 b99e 	b.w	1000fda0 <MXC_UART_RevB_WriteCharacterRaw>

1000fa64 <MXC_UART_ReadCharacter>:
}

int MXC_UART_ReadCharacter(mxc_uart_regs_t *uart)
{
    return MXC_UART_Common_ReadCharacter(uart);
1000fa64:	f000 b808 	b.w	1000fa78 <MXC_UART_Common_ReadCharacter>

1000fa68 <MXC_UART_WriteCharacter>:
}

int MXC_UART_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_Common_WriteCharacter(uart, character);
1000fa68:	f000 b812 	b.w	1000fa90 <MXC_UART_Common_WriteCharacter>

1000fa6c <MXC_UART_GetRXFIFOAvailable>:
    return MXC_UART_RevB_ReadRXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetRXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetRXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
1000fa6c:	f000 b9b6 	b.w	1000fddc <MXC_UART_RevB_GetRXFIFOAvailable>

1000fa70 <MXC_UART_GetTXFIFOAvailable>:
    return MXC_UART_RevB_WriteTXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetTXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetTXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
1000fa70:	f000 b9b8 	b.w	1000fde4 <MXC_UART_RevB_GetTXFIFOAvailable>

1000fa74 <MXC_UART_SetRXThreshold>:
    return MXC_UART_RevB_ClearTXFIFO((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_SetRXThreshold(mxc_uart_regs_t *uart, unsigned int numBytes)
{
    return MXC_UART_RevB_SetRXThreshold((mxc_uart_revb_regs_t *)uart, numBytes);
1000fa74:	f000 b9bc 	b.w	1000fdf0 <MXC_UART_RevB_SetRXThreshold>

1000fa78 <MXC_UART_Common_ReadCharacter>:

#include "uart_common.h"
#include "uart.h"

int MXC_UART_Common_ReadCharacter(mxc_uart_regs_t *uart)
{
1000fa78:	b510      	push	{r4, lr}
1000fa7a:	4604      	mov	r4, r0
    // Wait until FIFO has a character ready.
    while (MXC_UART_GetRXFIFOAvailable(uart) < 1) {}
1000fa7c:	4620      	mov	r0, r4
1000fa7e:	f7ff fff5 	bl	1000fa6c <MXC_UART_GetRXFIFOAvailable>
1000fa82:	2800      	cmp	r0, #0
1000fa84:	d0fa      	beq.n	1000fa7c <MXC_UART_Common_ReadCharacter+0x4>

    // Read the character using the non-blocking function.
    return MXC_UART_ReadCharacterRaw(uart);
1000fa86:	4620      	mov	r0, r4
}
1000fa88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_UART_ReadCharacterRaw(uart);
1000fa8c:	f7ff bfe6 	b.w	1000fa5c <MXC_UART_ReadCharacterRaw>

1000fa90 <MXC_UART_Common_WriteCharacter>:

int MXC_UART_Common_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
1000fa90:	b538      	push	{r3, r4, r5, lr}
1000fa92:	4604      	mov	r4, r0
1000fa94:	460d      	mov	r5, r1
    // Wait until FIFO has space for the character.
    while (MXC_UART_GetTXFIFOAvailable(uart) < 1) {}
1000fa96:	4620      	mov	r0, r4
1000fa98:	f7ff ffea 	bl	1000fa70 <MXC_UART_GetTXFIFOAvailable>
1000fa9c:	2800      	cmp	r0, #0
1000fa9e:	d0fa      	beq.n	1000fa96 <MXC_UART_Common_WriteCharacter+0x6>

    // Write the character using the non-blocking function.
    return MXC_UART_WriteCharacterRaw(uart, character);
1000faa0:	4629      	mov	r1, r5
1000faa2:	4620      	mov	r0, r4
}
1000faa4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    return MXC_UART_WriteCharacterRaw(uart, character);
1000faa8:	f7ff bfda 	b.w	1000fa60 <MXC_UART_WriteCharacterRaw>

1000faac <MXC_UART_RevB_Init>:
/* ************************************************************************* */
int MXC_UART_RevB_Init(mxc_uart_revb_regs_t *uart, unsigned int baud, mxc_uart_revb_clock_t clock)
{
    int err;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000faac:	4b1a      	ldr	r3, [pc, #104]	@ (1000fb18 <MXC_UART_RevB_Init+0x6c>)
1000faae:	4298      	cmp	r0, r3
{
1000fab0:	b570      	push	{r4, r5, r6, lr}
1000fab2:	4604      	mov	r4, r0
1000fab4:	460d      	mov	r5, r1
1000fab6:	4616      	mov	r6, r2
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fab8:	d00b      	beq.n	1000fad2 <MXC_UART_RevB_Init+0x26>
1000faba:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fabe:	4298      	cmp	r0, r3
1000fac0:	d007      	beq.n	1000fad2 <MXC_UART_RevB_Init+0x26>
1000fac2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fac6:	4298      	cmp	r0, r3
1000fac8:	d003      	beq.n	1000fad2 <MXC_UART_RevB_Init+0x26>
1000faca:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000face:	4298      	cmp	r0, r3
1000fad0:	d11f      	bne.n	1000fb12 <MXC_UART_RevB_Init+0x66>
        return E_BAD_PARAM;
    }

    // Initialize UART
    if ((err = MXC_UART_SetRXThreshold((mxc_uart_regs_t *)uart, 1)) !=
1000fad2:	2101      	movs	r1, #1
1000fad4:	4620      	mov	r0, r4
1000fad6:	f7ff ffcd 	bl	1000fa74 <MXC_UART_SetRXThreshold>
1000fada:	b100      	cbz	r0, 1000fade <MXC_UART_RevB_Init+0x32>
        E_NO_ERROR) {
        return err;
    }

    return E_NO_ERROR;
}
1000fadc:	bd70      	pop	{r4, r5, r6, pc}
    if ((err = MXC_UART_SetDataSize((mxc_uart_regs_t *)uart, 8)) !=
1000fade:	2108      	movs	r1, #8
1000fae0:	4620      	mov	r0, r4
1000fae2:	f7ff ffb5 	bl	1000fa50 <MXC_UART_SetDataSize>
1000fae6:	2800      	cmp	r0, #0
1000fae8:	d1f8      	bne.n	1000fadc <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetParity((mxc_uart_regs_t *)uart, MXC_UART_PARITY_DISABLE)) !=
1000faea:	4601      	mov	r1, r0
1000faec:	4620      	mov	r0, r4
1000faee:	f7ff ffb3 	bl	1000fa58 <MXC_UART_SetParity>
1000faf2:	2800      	cmp	r0, #0
1000faf4:	d1f2      	bne.n	1000fadc <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetStopBits((mxc_uart_regs_t *)uart, MXC_UART_STOP_1)) != E_NO_ERROR) {
1000faf6:	4601      	mov	r1, r0
1000faf8:	4620      	mov	r0, r4
1000fafa:	f7ff ffab 	bl	1000fa54 <MXC_UART_SetStopBits>
1000fafe:	2800      	cmp	r0, #0
1000fb00:	d1ec      	bne.n	1000fadc <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetFrequency((mxc_uart_regs_t *)uart, baud, (mxc_uart_clock_t)clock)) <
1000fb02:	4632      	mov	r2, r6
1000fb04:	4629      	mov	r1, r5
1000fb06:	4620      	mov	r0, r4
1000fb08:	f7ff ff10 	bl	1000f92c <MXC_UART_SetFrequency>
1000fb0c:	ea00 70e0 	and.w	r0, r0, r0, asr #31
}
1000fb10:	bd70      	pop	{r4, r5, r6, pc}
        return E_BAD_PARAM;
1000fb12:	f06f 0002 	mvn.w	r0, #2
}
1000fb16:	bd70      	pop	{r4, r5, r6, pc}
1000fb18:	40042000 	.word	0x40042000

1000fb1c <MXC_UART_RevB_SetFrequency>:

int MXC_UART_RevB_SetFrequency(mxc_uart_revb_regs_t *uart, unsigned int baud,
                               mxc_uart_revb_clock_t clock)
{
    unsigned clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fb1c:	4b22      	ldr	r3, [pc, #136]	@ (1000fba8 <MXC_UART_RevB_SetFrequency+0x8c>)
1000fb1e:	4298      	cmp	r0, r3
1000fb20:	d00b      	beq.n	1000fb3a <MXC_UART_RevB_SetFrequency+0x1e>
1000fb22:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fb26:	4298      	cmp	r0, r3
1000fb28:	d007      	beq.n	1000fb3a <MXC_UART_RevB_SetFrequency+0x1e>
1000fb2a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fb2e:	4298      	cmp	r0, r3
1000fb30:	d003      	beq.n	1000fb3a <MXC_UART_RevB_SetFrequency+0x1e>
1000fb32:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fb36:	4298      	cmp	r0, r3
1000fb38:	d132      	bne.n	1000fba0 <MXC_UART_RevB_SetFrequency+0x84>
        return E_BAD_PARAM;
    }

    // OSR default value
    uart->osr = 5;
1000fb3a:	2305      	movs	r3, #5

    switch (clock) {
1000fb3c:	2a01      	cmp	r2, #1
{
1000fb3e:	b410      	push	{r4}
    uart->osr = 5;
1000fb40:	6143      	str	r3, [r0, #20]
    switch (clock) {
1000fb42:	d023      	beq.n	1000fb8c <MXC_UART_RevB_SetFrequency+0x70>
1000fb44:	2a02      	cmp	r2, #2
1000fb46:	d014      	beq.n	1000fb72 <MXC_UART_RevB_SetFrequency+0x56>
1000fb48:	b11a      	cbz	r2, 1000fb52 <MXC_UART_RevB_SetFrequency+0x36>
    if (!clkDiv || mod > (baud / 2)) {
        clkDiv++;
    }
    uart->clkdiv = clkDiv;
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
}
1000fb4a:	f06f 0002 	mvn.w	r0, #2
1000fb4e:	bc10      	pop	{r4}
1000fb50:	4770      	bx	lr
        clkDiv = (PeripheralClock / baud);
1000fb52:	4b16      	ldr	r3, [pc, #88]	@ (1000fbac <MXC_UART_RevB_SetFrequency+0x90>)
1000fb54:	681a      	ldr	r2, [r3, #0]
1000fb56:	0852      	lsrs	r2, r2, #1
1000fb58:	fbb2 f3f1 	udiv	r3, r2, r1
        mod = (PeripheralClock % baud);
1000fb5c:	fb01 2213 	mls	r2, r1, r3, r2
    if (!clkDiv || mod > (baud / 2)) {
1000fb60:	b113      	cbz	r3, 1000fb68 <MXC_UART_RevB_SetFrequency+0x4c>
1000fb62:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1000fb66:	d900      	bls.n	1000fb6a <MXC_UART_RevB_SetFrequency+0x4e>
        clkDiv++;
1000fb68:	3301      	adds	r3, #1
}
1000fb6a:	bc10      	pop	{r4}
    uart->clkdiv = clkDiv;
1000fb6c:	6103      	str	r3, [r0, #16]
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
1000fb6e:	f7ff bf45 	b.w	1000f9fc <MXC_UART_GetFrequency>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1000fb72:	6804      	ldr	r4, [r0, #0]
        clkDiv = (IBRO_FREQ / baud);
1000fb74:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1000fb78:	f444 3400 	orr.w	r4, r4, #131072	@ 0x20000
        clkDiv = (IBRO_FREQ / baud);
1000fb7c:	fbb3 f3f1 	udiv	r3, r3, r1
        mod = (IBRO_FREQ % baud);
1000fb80:	fb01 f203 	mul.w	r2, r1, r3
1000fb84:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1000fb88:	6004      	str	r4, [r0, #0]
        break;
1000fb8a:	e7e9      	b.n	1000fb60 <MXC_UART_RevB_SetFrequency+0x44>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
1000fb8c:	6804      	ldr	r4, [r0, #0]
        clkDiv = UART_EXTCLK_FREQ / baud;
1000fb8e:	4a08      	ldr	r2, [pc, #32]	@ (1000fbb0 <MXC_UART_RevB_SetFrequency+0x94>)
1000fb90:	fbb2 f3f1 	udiv	r3, r2, r1
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
1000fb94:	f444 3480 	orr.w	r4, r4, #65536	@ 0x10000
1000fb98:	6004      	str	r4, [r0, #0]
        mod = UART_EXTCLK_FREQ % baud;
1000fb9a:	fb01 2213 	mls	r2, r1, r3, r2
        break;
1000fb9e:	e7df      	b.n	1000fb60 <MXC_UART_RevB_SetFrequency+0x44>
}
1000fba0:	f06f 0002 	mvn.w	r0, #2
1000fba4:	4770      	bx	lr
1000fba6:	bf00      	nop
1000fba8:	40042000 	.word	0x40042000
1000fbac:	20001340 	.word	0x20001340
1000fbb0:	047868c0 	.word	0x047868c0

1000fbb4 <MXC_UART_RevB_GetFrequency>:

int MXC_UART_RevB_GetFrequency(mxc_uart_revb_regs_t *uart)
{
    int periphClock = 0;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fbb4:	4b1c      	ldr	r3, [pc, #112]	@ (1000fc28 <MXC_UART_RevB_GetFrequency+0x74>)
1000fbb6:	4298      	cmp	r0, r3
1000fbb8:	d00b      	beq.n	1000fbd2 <MXC_UART_RevB_GetFrequency+0x1e>
1000fbba:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fbbe:	4298      	cmp	r0, r3
1000fbc0:	d007      	beq.n	1000fbd2 <MXC_UART_RevB_GetFrequency+0x1e>
1000fbc2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fbc6:	4298      	cmp	r0, r3
1000fbc8:	d003      	beq.n	1000fbd2 <MXC_UART_RevB_GetFrequency+0x1e>
1000fbca:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fbce:	4298      	cmp	r0, r3
1000fbd0:	d122      	bne.n	1000fc18 <MXC_UART_RevB_GetFrequency+0x64>
        return E_BAD_PARAM;
    }

    if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
1000fbd2:	6803      	ldr	r3, [r0, #0]
1000fbd4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1000fbd8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
1000fbdc:	d017      	beq.n	1000fc0e <MXC_UART_RevB_GetFrequency+0x5a>
        MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
        periphClock = UART_EXTCLK_FREQ;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
1000fbde:	6803      	ldr	r3, [r0, #0]
1000fbe0:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1000fbe4:	d00c      	beq.n	1000fc00 <MXC_UART_RevB_GetFrequency+0x4c>
               MXC_S_UART_REVB_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
        periphClock = PeripheralClock;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2) {
1000fbe6:	6803      	ldr	r3, [r0, #0]
1000fbe8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1000fbec:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
1000fbf0:	bf08      	it	eq
1000fbf2:	f44f 03e1 	moveq.w	r3, #7372800	@ 0x708000
1000fbf6:	d112      	bne.n	1000fc1e <MXC_UART_RevB_GetFrequency+0x6a>
#endif
    } else {
        return E_BAD_PARAM;
    }

    return (periphClock / uart->clkdiv);
1000fbf8:	6900      	ldr	r0, [r0, #16]
1000fbfa:	fbb3 f0f0 	udiv	r0, r3, r0
1000fbfe:	4770      	bx	lr
        periphClock = PeripheralClock;
1000fc00:	4b0a      	ldr	r3, [pc, #40]	@ (1000fc2c <MXC_UART_RevB_GetFrequency+0x78>)
    return (periphClock / uart->clkdiv);
1000fc02:	6900      	ldr	r0, [r0, #16]
        periphClock = PeripheralClock;
1000fc04:	681b      	ldr	r3, [r3, #0]
1000fc06:	085b      	lsrs	r3, r3, #1
    return (periphClock / uart->clkdiv);
1000fc08:	fbb3 f0f0 	udiv	r0, r3, r0
1000fc0c:	4770      	bx	lr
1000fc0e:	4b08      	ldr	r3, [pc, #32]	@ (1000fc30 <MXC_UART_RevB_GetFrequency+0x7c>)
1000fc10:	6900      	ldr	r0, [r0, #16]
1000fc12:	fbb3 f0f0 	udiv	r0, r3, r0
1000fc16:	4770      	bx	lr
        return E_BAD_PARAM;
1000fc18:	f06f 0002 	mvn.w	r0, #2
}
1000fc1c:	4770      	bx	lr
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK3) {
1000fc1e:	6803      	ldr	r3, [r0, #0]
        return E_BAD_PARAM;
1000fc20:	f06f 0002 	mvn.w	r0, #2
        return E_BAD_PARAM;
1000fc24:	4770      	bx	lr
1000fc26:	bf00      	nop
1000fc28:	40042000 	.word	0x40042000
1000fc2c:	20001340 	.word	0x20001340
1000fc30:	047868c0 	.word	0x047868c0

1000fc34 <MXC_UART_RevB_SetDataSize>:

int MXC_UART_RevB_SetDataSize(mxc_uart_revb_regs_t *uart, int dataSize)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fc34:	4a0e      	ldr	r2, [pc, #56]	@ (1000fc70 <MXC_UART_RevB_SetDataSize+0x3c>)
1000fc36:	4290      	cmp	r0, r2
{
1000fc38:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fc3a:	d00b      	beq.n	1000fc54 <MXC_UART_RevB_SetDataSize+0x20>
1000fc3c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fc40:	4290      	cmp	r0, r2
1000fc42:	d007      	beq.n	1000fc54 <MXC_UART_RevB_SetDataSize+0x20>
1000fc44:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fc48:	4290      	cmp	r0, r2
1000fc4a:	d003      	beq.n	1000fc54 <MXC_UART_RevB_SetDataSize+0x20>
1000fc4c:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
1000fc50:	4290      	cmp	r0, r2
1000fc52:	d10a      	bne.n	1000fc6a <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    if (dataSize < 5 || dataSize > 8) {
1000fc54:	3905      	subs	r1, #5
1000fc56:	2903      	cmp	r1, #3
1000fc58:	d807      	bhi.n	1000fc6a <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    dataSize = (dataSize - 5) << MXC_F_UART_REVB_CTRL_CHAR_SIZE_POS;

    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
1000fc5a:	681a      	ldr	r2, [r3, #0]
1000fc5c:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
1000fc60:	ea42 2281 	orr.w	r2, r2, r1, lsl #10

    return E_NO_ERROR;
1000fc64:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
1000fc66:	601a      	str	r2, [r3, #0]
    return E_NO_ERROR;
1000fc68:	4770      	bx	lr
        return E_BAD_PARAM;
1000fc6a:	f06f 0002 	mvn.w	r0, #2
}
1000fc6e:	4770      	bx	lr
1000fc70:	40042000 	.word	0x40042000

1000fc74 <MXC_UART_RevB_SetStopBits>:

int MXC_UART_RevB_SetStopBits(mxc_uart_revb_regs_t *uart, mxc_uart_stop_t stopBits)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fc74:	4b10      	ldr	r3, [pc, #64]	@ (1000fcb8 <MXC_UART_RevB_SetStopBits+0x44>)
1000fc76:	4298      	cmp	r0, r3
1000fc78:	d00b      	beq.n	1000fc92 <MXC_UART_RevB_SetStopBits+0x1e>
1000fc7a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fc7e:	4298      	cmp	r0, r3
1000fc80:	d007      	beq.n	1000fc92 <MXC_UART_RevB_SetStopBits+0x1e>
1000fc82:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fc86:	4298      	cmp	r0, r3
1000fc88:	d003      	beq.n	1000fc92 <MXC_UART_RevB_SetStopBits+0x1e>
1000fc8a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fc8e:	4298      	cmp	r0, r3
1000fc90:	d108      	bne.n	1000fca4 <MXC_UART_RevB_SetStopBits+0x30>
        return E_BAD_PARAM;
    }

    switch (stopBits) {
1000fc92:	b151      	cbz	r1, 1000fcaa <MXC_UART_RevB_SetStopBits+0x36>
1000fc94:	2901      	cmp	r1, #1
1000fc96:	d105      	bne.n	1000fca4 <MXC_UART_RevB_SetStopBits+0x30>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
                     0 << MXC_F_UART_REVB_CTRL_STOPBITS_POS);
        break;

    case MXC_UART_STOP_2:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
1000fc98:	6803      	ldr	r3, [r0, #0]
1000fc9a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
1000fc9e:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
1000fca0:	2000      	movs	r0, #0
1000fca2:	4770      	bx	lr
1000fca4:	f06f 0002 	mvn.w	r0, #2
}
1000fca8:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
1000fcaa:	6803      	ldr	r3, [r0, #0]
1000fcac:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
1000fcb0:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
1000fcb2:	2000      	movs	r0, #0
1000fcb4:	4770      	bx	lr
1000fcb6:	bf00      	nop
1000fcb8:	40042000 	.word	0x40042000

1000fcbc <MXC_UART_RevB_SetParity>:

int MXC_UART_RevB_SetParity(mxc_uart_revb_regs_t *uart, mxc_uart_parity_t parity)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fcbc:	4b29      	ldr	r3, [pc, #164]	@ (1000fd64 <MXC_UART_RevB_SetParity+0xa8>)
1000fcbe:	4298      	cmp	r0, r3
1000fcc0:	d00b      	beq.n	1000fcda <MXC_UART_RevB_SetParity+0x1e>
1000fcc2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fcc6:	4298      	cmp	r0, r3
1000fcc8:	d007      	beq.n	1000fcda <MXC_UART_RevB_SetParity+0x1e>
1000fcca:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fcce:	4298      	cmp	r0, r3
1000fcd0:	d003      	beq.n	1000fcda <MXC_UART_RevB_SetParity+0x1e>
1000fcd2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fcd6:	4298      	cmp	r0, r3
1000fcd8:	d141      	bne.n	1000fd5e <MXC_UART_RevB_SetParity+0xa2>
        return E_BAD_PARAM;
    }

    switch (parity) {
1000fcda:	2904      	cmp	r1, #4
1000fcdc:	d83f      	bhi.n	1000fd5e <MXC_UART_RevB_SetParity+0xa2>
1000fcde:	e8df f001 	tbb	[pc, r1]
1000fce2:	1711      	.short	0x1711
1000fce4:	3124      	.short	0x3124
1000fce6:	03          	.byte	0x03
1000fce7:	00          	.byte	0x00
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
        break;

    case MXC_UART_PARITY_ODD_1:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fce8:	6803      	ldr	r3, [r0, #0]
1000fcea:	f043 0310 	orr.w	r3, r3, #16
1000fcee:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fcf0:	6803      	ldr	r3, [r0, #0]
1000fcf2:	f043 0320 	orr.w	r3, r3, #32
1000fcf6:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fcf8:	6803      	ldr	r3, [r0, #0]
1000fcfa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000fcfe:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
1000fd00:	2000      	movs	r0, #0
1000fd02:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 0 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fd04:	6803      	ldr	r3, [r0, #0]
1000fd06:	f023 0310 	bic.w	r3, r3, #16
1000fd0a:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
1000fd0c:	2000      	movs	r0, #0
1000fd0e:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fd10:	6803      	ldr	r3, [r0, #0]
1000fd12:	f043 0310 	orr.w	r3, r3, #16
1000fd16:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fd18:	6803      	ldr	r3, [r0, #0]
1000fd1a:	f023 0320 	bic.w	r3, r3, #32
1000fd1e:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fd20:	6803      	ldr	r3, [r0, #0]
1000fd22:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1000fd26:	6003      	str	r3, [r0, #0]
        break;
1000fd28:	e7ea      	b.n	1000fd00 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fd2a:	6803      	ldr	r3, [r0, #0]
1000fd2c:	f043 0310 	orr.w	r3, r3, #16
1000fd30:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fd32:	6803      	ldr	r3, [r0, #0]
1000fd34:	f023 0320 	bic.w	r3, r3, #32
1000fd38:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fd3a:	6803      	ldr	r3, [r0, #0]
1000fd3c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000fd40:	6003      	str	r3, [r0, #0]
        break;
1000fd42:	e7dd      	b.n	1000fd00 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fd44:	6803      	ldr	r3, [r0, #0]
1000fd46:	f043 0310 	orr.w	r3, r3, #16
1000fd4a:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fd4c:	6803      	ldr	r3, [r0, #0]
1000fd4e:	f043 0320 	orr.w	r3, r3, #32
1000fd52:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fd54:	6803      	ldr	r3, [r0, #0]
1000fd56:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1000fd5a:	6003      	str	r3, [r0, #0]
        break;
1000fd5c:	e7d0      	b.n	1000fd00 <MXC_UART_RevB_SetParity+0x44>
    switch (parity) {
1000fd5e:	f06f 0002 	mvn.w	r0, #2
}
1000fd62:	4770      	bx	lr
1000fd64:	40042000 	.word	0x40042000

1000fd68 <MXC_UART_RevB_ReadCharacterRaw>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_ReadCharacterRaw(mxc_uart_revb_regs_t *uart)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fd68:	4b0c      	ldr	r3, [pc, #48]	@ (1000fd9c <MXC_UART_RevB_ReadCharacterRaw+0x34>)
1000fd6a:	4298      	cmp	r0, r3
1000fd6c:	d00b      	beq.n	1000fd86 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1000fd6e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fd72:	4298      	cmp	r0, r3
1000fd74:	d007      	beq.n	1000fd86 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1000fd76:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fd7a:	4298      	cmp	r0, r3
1000fd7c:	d003      	beq.n	1000fd86 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1000fd7e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fd82:	4298      	cmp	r0, r3
1000fd84:	d104      	bne.n	1000fd90 <MXC_UART_RevB_ReadCharacterRaw+0x28>
        return E_BAD_PARAM;
    }

    if (uart->status & MXC_F_UART_REVB_STATUS_RX_EM) {
1000fd86:	6843      	ldr	r3, [r0, #4]
1000fd88:	06db      	lsls	r3, r3, #27
1000fd8a:	d404      	bmi.n	1000fd96 <MXC_UART_RevB_ReadCharacterRaw+0x2e>
        return E_UNDERFLOW;
    }

    return uart->fifo;
1000fd8c:	6a00      	ldr	r0, [r0, #32]
1000fd8e:	4770      	bx	lr
        return E_BAD_PARAM;
1000fd90:	f06f 0002 	mvn.w	r0, #2
1000fd94:	4770      	bx	lr
        return E_UNDERFLOW;
1000fd96:	f06f 000c 	mvn.w	r0, #12
}
1000fd9a:	4770      	bx	lr
1000fd9c:	40042000 	.word	0x40042000

1000fda0 <MXC_UART_RevB_WriteCharacterRaw>:

int MXC_UART_RevB_WriteCharacterRaw(mxc_uart_revb_regs_t *uart, uint8_t character)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fda0:	4a0d      	ldr	r2, [pc, #52]	@ (1000fdd8 <MXC_UART_RevB_WriteCharacterRaw+0x38>)
1000fda2:	4290      	cmp	r0, r2
{
1000fda4:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fda6:	d00b      	beq.n	1000fdc0 <MXC_UART_RevB_WriteCharacterRaw+0x20>
1000fda8:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fdac:	4290      	cmp	r0, r2
1000fdae:	d007      	beq.n	1000fdc0 <MXC_UART_RevB_WriteCharacterRaw+0x20>
1000fdb0:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fdb4:	4290      	cmp	r0, r2
1000fdb6:	d003      	beq.n	1000fdc0 <MXC_UART_RevB_WriteCharacterRaw+0x20>
1000fdb8:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
1000fdbc:	4290      	cmp	r0, r2
1000fdbe:	d105      	bne.n	1000fdcc <MXC_UART_RevB_WriteCharacterRaw+0x2c>
        return E_BAD_PARAM;
    }

    // Require the TX FIFO to be empty, so that we write out the expected character
    // Return error if the FIFO is full
    if (uart->status & MXC_F_UART_REVB_STATUS_TX_FULL) {
1000fdc0:	6858      	ldr	r0, [r3, #4]
1000fdc2:	f010 0080 	ands.w	r0, r0, #128	@ 0x80
1000fdc6:	d104      	bne.n	1000fdd2 <MXC_UART_RevB_WriteCharacterRaw+0x32>
        return E_OVERFLOW;
    }

    uart->fifo = character;
1000fdc8:	6219      	str	r1, [r3, #32]

    return E_NO_ERROR;
1000fdca:	4770      	bx	lr
        return E_BAD_PARAM;
1000fdcc:	f06f 0002 	mvn.w	r0, #2
1000fdd0:	4770      	bx	lr
        return E_OVERFLOW;
1000fdd2:	f06f 000b 	mvn.w	r0, #11
}
1000fdd6:	4770      	bx	lr
1000fdd8:	40042000 	.word	0x40042000

1000fddc <MXC_UART_RevB_GetRXFIFOAvailable>:
    return read;
}

unsigned int MXC_UART_RevB_GetRXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    return (uart->status & MXC_F_UART_REVB_STATUS_RX_LVL) >> MXC_F_UART_REVB_STATUS_RX_LVL_POS;
1000fddc:	6840      	ldr	r0, [r0, #4]
}
1000fdde:	f3c0 2003 	ubfx	r0, r0, #8, #4
1000fde2:	4770      	bx	lr

1000fde4 <MXC_UART_RevB_GetTXFIFOAvailable>:
    return written;
}

unsigned int MXC_UART_RevB_GetTXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    int txCnt = (uart->status & MXC_F_UART_REVB_STATUS_TX_LVL) >> MXC_F_UART_REVB_STATUS_TX_LVL_POS;
1000fde4:	6840      	ldr	r0, [r0, #4]
1000fde6:	f3c0 3003 	ubfx	r0, r0, #12, #4
    return MXC_UART_FIFO_DEPTH - txCnt;
}
1000fdea:	f1c0 0008 	rsb	r0, r0, #8
1000fdee:	4770      	bx	lr

1000fdf0 <MXC_UART_RevB_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_SetRXThreshold(mxc_uart_revb_regs_t *uart, unsigned int numBytes)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fdf0:	4a0e      	ldr	r2, [pc, #56]	@ (1000fe2c <MXC_UART_RevB_SetRXThreshold+0x3c>)
1000fdf2:	4290      	cmp	r0, r2
{
1000fdf4:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fdf6:	d00b      	beq.n	1000fe10 <MXC_UART_RevB_SetRXThreshold+0x20>
1000fdf8:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fdfc:	4290      	cmp	r0, r2
1000fdfe:	d007      	beq.n	1000fe10 <MXC_UART_RevB_SetRXThreshold+0x20>
1000fe00:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fe04:	4290      	cmp	r0, r2
1000fe06:	d003      	beq.n	1000fe10 <MXC_UART_RevB_SetRXThreshold+0x20>
1000fe08:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
1000fe0c:	4290      	cmp	r0, r2
1000fe0e:	d109      	bne.n	1000fe24 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    if (numBytes < 1 || numBytes > MXC_UART_FIFO_DEPTH) {
1000fe10:	1e4a      	subs	r2, r1, #1
1000fe12:	2a07      	cmp	r2, #7
1000fe14:	d806      	bhi.n	1000fe24 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    numBytes <<= MXC_F_UART_REVB_CTRL_RX_THD_VAL_POS;
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
1000fe16:	681a      	ldr	r2, [r3, #0]
1000fe18:	f022 020f 	bic.w	r2, r2, #15
1000fe1c:	4311      	orrs	r1, r2

    return E_NO_ERROR;
1000fe1e:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
1000fe20:	6019      	str	r1, [r3, #0]
    return E_NO_ERROR;
1000fe22:	4770      	bx	lr
        return E_BAD_PARAM;
1000fe24:	f06f 0002 	mvn.w	r0, #2
}
1000fe28:	4770      	bx	lr
1000fe2a:	bf00      	nop
1000fe2c:	40042000 	.word	0x40042000

1000fe30 <MXC_GPIO_Common_Init>:
static void *cbparam[MXC_CFG_GPIO_INSTANCES][MXC_CFG_GPIO_PINS_PORT];
static uint8_t initialized = 0;

/* **** Functions **** */
int MXC_GPIO_Common_Init(uint32_t portmask)
{
1000fe30:	b510      	push	{r4, lr}
    if (!initialized) {
1000fe32:	4c06      	ldr	r4, [pc, #24]	@ (1000fe4c <MXC_GPIO_Common_Init+0x1c>)
1000fe34:	7821      	ldrb	r1, [r4, #0]
1000fe36:	b931      	cbnz	r1, 1000fe46 <MXC_GPIO_Common_Init+0x16>
        int i, j;

        for (i = 0; i < MXC_CFG_GPIO_INSTANCES; i++) {
            // Initialize call back arrays
            for (j = 0; j < MXC_CFG_GPIO_PINS_PORT; j++) {
                callback[i][j] = NULL;
1000fe38:	4805      	ldr	r0, [pc, #20]	@ (1000fe50 <MXC_GPIO_Common_Init+0x20>)
1000fe3a:	f44f 7200 	mov.w	r2, #512	@ 0x200
1000fe3e:	f004 f8df 	bl	10014000 <memset>
            }
        }

        initialized = 1;
1000fe42:	2301      	movs	r3, #1
1000fe44:	7023      	strb	r3, [r4, #0]
    }

    return E_NO_ERROR;
}
1000fe46:	2000      	movs	r0, #0
1000fe48:	bd10      	pop	{r4, pc}
1000fe4a:	bf00      	nop
1000fe4c:	20000c28 	.word	0x20000c28
1000fe50:	20000e2c 	.word	0x20000e2c

1000fe54 <MXC_GPIO_Common_Handler>:
void MXC_GPIO_Common_Handler(unsigned int port)
{
    uint32_t stat;
    unsigned int pin;

    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
1000fe54:	2803      	cmp	r0, #3
{
1000fe56:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000fe58:	4607      	mov	r7, r0
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
1000fe5a:	d81d      	bhi.n	1000fe98 <MXC_GPIO_Common_Handler+0x44>

    mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(port);
1000fe5c:	bb18      	cbnz	r0, 1000fea6 <MXC_GPIO_Common_Handler+0x52>
1000fe5e:	4d14      	ldr	r5, [pc, #80]	@ (1000feb0 <MXC_GPIO_Common_Handler+0x5c>)

    stat = MXC_GPIO_GetFlags(gpio);
1000fe60:	4628      	mov	r0, r5
1000fe62:	f7ff f9e7 	bl	1000f234 <MXC_GPIO_GetFlags>
1000fe66:	4604      	mov	r4, r0
    MXC_GPIO_ClearFlags(gpio, stat);
1000fe68:	4601      	mov	r1, r0
1000fe6a:	4628      	mov	r0, r5
1000fe6c:	f7ff f9d6 	bl	1000f21c <MXC_GPIO_ClearFlags>

    pin = 0;

    while (stat) {
1000fe70:	b18c      	cbz	r4, 1000fe96 <MXC_GPIO_Common_Handler+0x42>
1000fe72:	4e10      	ldr	r6, [pc, #64]	@ (1000feb4 <MXC_GPIO_Common_Handler+0x60>)
1000fe74:	4d10      	ldr	r5, [pc, #64]	@ (1000feb8 <MXC_GPIO_Common_Handler+0x64>)
1000fe76:	eb06 16c7 	add.w	r6, r6, r7, lsl #7
1000fe7a:	eb05 15c7 	add.w	r5, r5, r7, lsl #7
        if (stat & 1) {
1000fe7e:	07e3      	lsls	r3, r4, #31
1000fe80:	d503      	bpl.n	1000fe8a <MXC_GPIO_Common_Handler+0x36>
            if (callback[port][pin]) {
1000fe82:	682b      	ldr	r3, [r5, #0]
1000fe84:	b10b      	cbz	r3, 1000fe8a <MXC_GPIO_Common_Handler+0x36>
                callback[port][pin](cbparam[port][pin]);
1000fe86:	6830      	ldr	r0, [r6, #0]
1000fe88:	4798      	blx	r3
    while (stat) {
1000fe8a:	0864      	lsrs	r4, r4, #1
1000fe8c:	f106 0604 	add.w	r6, r6, #4
1000fe90:	f105 0504 	add.w	r5, r5, #4
1000fe94:	d1f3      	bne.n	1000fe7e <MXC_GPIO_Common_Handler+0x2a>
        }

        pin++;
        stat >>= 1;
    }
}
1000fe96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
1000fe98:	4908      	ldr	r1, [pc, #32]	@ (1000febc <MXC_GPIO_Common_Handler+0x68>)
1000fe9a:	4809      	ldr	r0, [pc, #36]	@ (1000fec0 <MXC_GPIO_Common_Handler+0x6c>)
1000fe9c:	225a      	movs	r2, #90	@ 0x5a
1000fe9e:	f7fe fc37 	bl	1000e710 <mxc_assert>
1000fea2:	2500      	movs	r5, #0
1000fea4:	e7dc      	b.n	1000fe60 <MXC_GPIO_Common_Handler+0xc>
1000fea6:	4b07      	ldr	r3, [pc, #28]	@ (1000fec4 <MXC_GPIO_Common_Handler+0x70>)
1000fea8:	1e42      	subs	r2, r0, #1
1000feaa:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000feae:	e7d7      	b.n	1000fe60 <MXC_GPIO_Common_Handler+0xc>
1000feb0:	40008000 	.word	0x40008000
1000feb4:	20000c2c 	.word	0x20000c2c
1000feb8:	20000e2c 	.word	0x20000e2c
1000febc:	100190c8 	.word	0x100190c8
1000fec0:	10019138 	.word	0x10019138
1000fec4:	10019158 	.word	0x10019158

1000fec8 <_malloc_r>:
1000fec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000fecc:	f101 050b 	add.w	r5, r1, #11
1000fed0:	2d16      	cmp	r5, #22
1000fed2:	b085      	sub	sp, #20
1000fed4:	4606      	mov	r6, r0
1000fed6:	d824      	bhi.n	1000ff22 <_malloc_r+0x5a>
1000fed8:	2910      	cmp	r1, #16
1000feda:	f200 80b1 	bhi.w	10010040 <_malloc_r+0x178>
1000fede:	f003 f987 	bl	100131f0 <__malloc_lock>
1000fee2:	2510      	movs	r5, #16
1000fee4:	2318      	movs	r3, #24
1000fee6:	f04f 0c02 	mov.w	ip, #2
1000feea:	4fba      	ldr	r7, [pc, #744]	@ (100101d4 <_malloc_r+0x30c>)
1000feec:	443b      	add	r3, r7
1000feee:	f1a3 0208 	sub.w	r2, r3, #8
1000fef2:	685c      	ldr	r4, [r3, #4]
1000fef4:	4294      	cmp	r4, r2
1000fef6:	f000 8122 	beq.w	1001013e <_malloc_r+0x276>
1000fefa:	6863      	ldr	r3, [r4, #4]
1000fefc:	68e2      	ldr	r2, [r4, #12]
1000fefe:	68a1      	ldr	r1, [r4, #8]
1000ff00:	f023 0303 	bic.w	r3, r3, #3
1000ff04:	60ca      	str	r2, [r1, #12]
1000ff06:	4423      	add	r3, r4
1000ff08:	4630      	mov	r0, r6
1000ff0a:	6091      	str	r1, [r2, #8]
1000ff0c:	685a      	ldr	r2, [r3, #4]
1000ff0e:	f042 0201 	orr.w	r2, r2, #1
1000ff12:	605a      	str	r2, [r3, #4]
1000ff14:	3408      	adds	r4, #8
1000ff16:	f003 f971 	bl	100131fc <__malloc_unlock>
1000ff1a:	4620      	mov	r0, r4
1000ff1c:	b005      	add	sp, #20
1000ff1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1000ff22:	f035 0507 	bics.w	r5, r5, #7
1000ff26:	f100 808b 	bmi.w	10010040 <_malloc_r+0x178>
1000ff2a:	42a9      	cmp	r1, r5
1000ff2c:	f200 8088 	bhi.w	10010040 <_malloc_r+0x178>
1000ff30:	f003 f95e 	bl	100131f0 <__malloc_lock>
1000ff34:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
1000ff38:	f0c0 8173 	bcc.w	10010222 <_malloc_r+0x35a>
1000ff3c:	0a6b      	lsrs	r3, r5, #9
1000ff3e:	f000 8083 	beq.w	10010048 <_malloc_r+0x180>
1000ff42:	2b04      	cmp	r3, #4
1000ff44:	f200 8122 	bhi.w	1001018c <_malloc_r+0x2c4>
1000ff48:	09ab      	lsrs	r3, r5, #6
1000ff4a:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
1000ff4e:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
1000ff52:	ea4f 03cc 	mov.w	r3, ip, lsl #3
1000ff56:	4f9f      	ldr	r7, [pc, #636]	@ (100101d4 <_malloc_r+0x30c>)
1000ff58:	443b      	add	r3, r7
1000ff5a:	f1a3 0008 	sub.w	r0, r3, #8
1000ff5e:	685c      	ldr	r4, [r3, #4]
1000ff60:	42a0      	cmp	r0, r4
1000ff62:	d107      	bne.n	1000ff74 <_malloc_r+0xac>
1000ff64:	e00d      	b.n	1000ff82 <_malloc_r+0xba>
1000ff66:	2a00      	cmp	r2, #0
1000ff68:	68e1      	ldr	r1, [r4, #12]
1000ff6a:	f280 80e2 	bge.w	10010132 <_malloc_r+0x26a>
1000ff6e:	4288      	cmp	r0, r1
1000ff70:	d007      	beq.n	1000ff82 <_malloc_r+0xba>
1000ff72:	460c      	mov	r4, r1
1000ff74:	6863      	ldr	r3, [r4, #4]
1000ff76:	f023 0303 	bic.w	r3, r3, #3
1000ff7a:	1b5a      	subs	r2, r3, r5
1000ff7c:	2a0f      	cmp	r2, #15
1000ff7e:	ddf2      	ble.n	1000ff66 <_malloc_r+0x9e>
1000ff80:	46f4      	mov	ip, lr
1000ff82:	f8df 8264 	ldr.w	r8, [pc, #612]	@ 100101e8 <_malloc_r+0x320>
1000ff86:	693c      	ldr	r4, [r7, #16]
1000ff88:	4544      	cmp	r4, r8
1000ff8a:	f000 80bf 	beq.w	1001010c <_malloc_r+0x244>
1000ff8e:	6863      	ldr	r3, [r4, #4]
1000ff90:	f023 0903 	bic.w	r9, r3, #3
1000ff94:	eba9 0305 	sub.w	r3, r9, r5
1000ff98:	2b0f      	cmp	r3, #15
1000ff9a:	f300 8147 	bgt.w	1001022c <_malloc_r+0x364>
1000ff9e:	2b00      	cmp	r3, #0
1000ffa0:	e9c7 8804 	strd	r8, r8, [r7, #16]
1000ffa4:	f280 8131 	bge.w	1001020a <_malloc_r+0x342>
1000ffa8:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
1000ffac:	f8d7 e004 	ldr.w	lr, [r7, #4]
1000ffb0:	f080 80cc 	bcs.w	1001014c <_malloc_r+0x284>
1000ffb4:	ea4f 01d9 	mov.w	r1, r9, lsr #3
1000ffb8:	3101      	adds	r1, #1
1000ffba:	ea4f 1959 	mov.w	r9, r9, lsr #5
1000ffbe:	2301      	movs	r3, #1
1000ffc0:	fa03 f309 	lsl.w	r3, r3, r9
1000ffc4:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
1000ffc8:	60a2      	str	r2, [r4, #8]
1000ffca:	ea4e 0e03 	orr.w	lr, lr, r3
1000ffce:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
1000ffd2:	3b08      	subs	r3, #8
1000ffd4:	60e3      	str	r3, [r4, #12]
1000ffd6:	f8c7 e004 	str.w	lr, [r7, #4]
1000ffda:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
1000ffde:	60d4      	str	r4, [r2, #12]
1000ffe0:	ea4f 03ac 	mov.w	r3, ip, asr #2
1000ffe4:	2001      	movs	r0, #1
1000ffe6:	4098      	lsls	r0, r3
1000ffe8:	4570      	cmp	r0, lr
1000ffea:	d834      	bhi.n	10010056 <_malloc_r+0x18e>
1000ffec:	ea10 0f0e 	tst.w	r0, lr
1000fff0:	d107      	bne.n	10010002 <_malloc_r+0x13a>
1000fff2:	f02c 0c03 	bic.w	ip, ip, #3
1000fff6:	0040      	lsls	r0, r0, #1
1000fff8:	ea10 0f0e 	tst.w	r0, lr
1000fffc:	f10c 0c04 	add.w	ip, ip, #4
10010000:	d0f9      	beq.n	1000fff6 <_malloc_r+0x12e>
10010002:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
10010006:	4652      	mov	r2, sl
10010008:	46e1      	mov	r9, ip
1001000a:	68d1      	ldr	r1, [r2, #12]
1001000c:	e00e      	b.n	1001002c <_malloc_r+0x164>
1001000e:	684b      	ldr	r3, [r1, #4]
10010010:	f023 0303 	bic.w	r3, r3, #3
10010014:	eba3 0e05 	sub.w	lr, r3, r5
10010018:	f1be 0f0f 	cmp.w	lr, #15
1001001c:	460c      	mov	r4, r1
1001001e:	68c9      	ldr	r1, [r1, #12]
10010020:	f300 80c1 	bgt.w	100101a6 <_malloc_r+0x2de>
10010024:	f1be 0f00 	cmp.w	lr, #0
10010028:	f280 80e2 	bge.w	100101f0 <_malloc_r+0x328>
1001002c:	428a      	cmp	r2, r1
1001002e:	d1ee      	bne.n	1001000e <_malloc_r+0x146>
10010030:	f109 0901 	add.w	r9, r9, #1
10010034:	f019 0f03 	tst.w	r9, #3
10010038:	f102 0208 	add.w	r2, r2, #8
1001003c:	d1e5      	bne.n	1001000a <_malloc_r+0x142>
1001003e:	e121      	b.n	10010284 <_malloc_r+0x3bc>
10010040:	230c      	movs	r3, #12
10010042:	6033      	str	r3, [r6, #0]
10010044:	2400      	movs	r4, #0
10010046:	e768      	b.n	1000ff1a <_malloc_r+0x52>
10010048:	f44f 7300 	mov.w	r3, #512	@ 0x200
1001004c:	f04f 0c40 	mov.w	ip, #64	@ 0x40
10010050:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
10010054:	e77f      	b.n	1000ff56 <_malloc_r+0x8e>
10010056:	68bc      	ldr	r4, [r7, #8]
10010058:	6863      	ldr	r3, [r4, #4]
1001005a:	f023 0903 	bic.w	r9, r3, #3
1001005e:	45a9      	cmp	r9, r5
10010060:	d303      	bcc.n	1001006a <_malloc_r+0x1a2>
10010062:	eba9 0305 	sub.w	r3, r9, r5
10010066:	2b0f      	cmp	r3, #15
10010068:	dc53      	bgt.n	10010112 <_malloc_r+0x24a>
1001006a:	4b5b      	ldr	r3, [pc, #364]	@ (100101d8 <_malloc_r+0x310>)
1001006c:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 100101ec <_malloc_r+0x324>
10010070:	681b      	ldr	r3, [r3, #0]
10010072:	2008      	movs	r0, #8
10010074:	f103 0810 	add.w	r8, r3, #16
10010078:	f004 f880 	bl	1001417c <sysconf>
1001007c:	f8db 3000 	ldr.w	r3, [fp]
10010080:	9001      	str	r0, [sp, #4]
10010082:	3301      	adds	r3, #1
10010084:	44a8      	add	r8, r5
10010086:	eb04 0209 	add.w	r2, r4, r9
1001008a:	d005      	beq.n	10010098 <_malloc_r+0x1d0>
1001008c:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
10010090:	4480      	add	r8, r0
10010092:	4243      	negs	r3, r0
10010094:	ea03 0808 	and.w	r8, r3, r8
10010098:	4641      	mov	r1, r8
1001009a:	4630      	mov	r0, r6
1001009c:	9202      	str	r2, [sp, #8]
1001009e:	f004 f855 	bl	1001414c <_sbrk_r>
100100a2:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
100100a6:	9a02      	ldr	r2, [sp, #8]
100100a8:	4682      	mov	sl, r0
100100aa:	f000 80dc 	beq.w	10010266 <_malloc_r+0x39e>
100100ae:	4282      	cmp	r2, r0
100100b0:	f200 80d7 	bhi.w	10010262 <_malloc_r+0x39a>
100100b4:	4b49      	ldr	r3, [pc, #292]	@ (100101dc <_malloc_r+0x314>)
100100b6:	9901      	ldr	r1, [sp, #4]
100100b8:	6818      	ldr	r0, [r3, #0]
100100ba:	4440      	add	r0, r8
100100bc:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
100100c0:	6018      	str	r0, [r3, #0]
100100c2:	4684      	mov	ip, r0
100100c4:	f040 80fc 	bne.w	100102c0 <_malloc_r+0x3f8>
100100c8:	ea1a 0f01 	tst.w	sl, r1
100100cc:	f040 80f8 	bne.w	100102c0 <_malloc_r+0x3f8>
100100d0:	f8d7 a008 	ldr.w	sl, [r7, #8]
100100d4:	44c8      	add	r8, r9
100100d6:	f048 0201 	orr.w	r2, r8, #1
100100da:	f8ca 2004 	str.w	r2, [sl, #4]
100100de:	4b40      	ldr	r3, [pc, #256]	@ (100101e0 <_malloc_r+0x318>)
100100e0:	6819      	ldr	r1, [r3, #0]
100100e2:	4281      	cmp	r1, r0
100100e4:	bf38      	it	cc
100100e6:	6018      	strcc	r0, [r3, #0]
100100e8:	4b3e      	ldr	r3, [pc, #248]	@ (100101e4 <_malloc_r+0x31c>)
100100ea:	6819      	ldr	r1, [r3, #0]
100100ec:	4281      	cmp	r1, r0
100100ee:	bf38      	it	cc
100100f0:	6018      	strcc	r0, [r3, #0]
100100f2:	4654      	mov	r4, sl
100100f4:	f022 0803 	bic.w	r8, r2, #3
100100f8:	45a8      	cmp	r8, r5
100100fa:	eba8 0305 	sub.w	r3, r8, r5
100100fe:	d301      	bcc.n	10010104 <_malloc_r+0x23c>
10010100:	2b0f      	cmp	r3, #15
10010102:	dc06      	bgt.n	10010112 <_malloc_r+0x24a>
10010104:	4630      	mov	r0, r6
10010106:	f003 f879 	bl	100131fc <__malloc_unlock>
1001010a:	e79b      	b.n	10010044 <_malloc_r+0x17c>
1001010c:	f8d7 e004 	ldr.w	lr, [r7, #4]
10010110:	e766      	b.n	1000ffe0 <_malloc_r+0x118>
10010112:	1962      	adds	r2, r4, r5
10010114:	f043 0301 	orr.w	r3, r3, #1
10010118:	f045 0501 	orr.w	r5, r5, #1
1001011c:	6065      	str	r5, [r4, #4]
1001011e:	4630      	mov	r0, r6
10010120:	60ba      	str	r2, [r7, #8]
10010122:	6053      	str	r3, [r2, #4]
10010124:	f003 f86a 	bl	100131fc <__malloc_unlock>
10010128:	3408      	adds	r4, #8
1001012a:	4620      	mov	r0, r4
1001012c:	b005      	add	sp, #20
1001012e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10010132:	68a2      	ldr	r2, [r4, #8]
10010134:	4423      	add	r3, r4
10010136:	60d1      	str	r1, [r2, #12]
10010138:	4630      	mov	r0, r6
1001013a:	608a      	str	r2, [r1, #8]
1001013c:	e6e6      	b.n	1000ff0c <_malloc_r+0x44>
1001013e:	68dc      	ldr	r4, [r3, #12]
10010140:	42a3      	cmp	r3, r4
10010142:	f47f aeda 	bne.w	1000fefa <_malloc_r+0x32>
10010146:	f10c 0c02 	add.w	ip, ip, #2
1001014a:	e71a      	b.n	1000ff82 <_malloc_r+0xba>
1001014c:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
10010150:	ea4f 2259 	mov.w	r2, r9, lsr #9
10010154:	d37e      	bcc.n	10010254 <_malloc_r+0x38c>
10010156:	2a14      	cmp	r2, #20
10010158:	f200 8115 	bhi.w	10010386 <_malloc_r+0x4be>
1001015c:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
10010160:	00db      	lsls	r3, r3, #3
10010162:	325b      	adds	r2, #91	@ 0x5b
10010164:	18f9      	adds	r1, r7, r3
10010166:	58fb      	ldr	r3, [r7, r3]
10010168:	3908      	subs	r1, #8
1001016a:	4299      	cmp	r1, r3
1001016c:	d103      	bne.n	10010176 <_malloc_r+0x2ae>
1001016e:	e0f0      	b.n	10010352 <_malloc_r+0x48a>
10010170:	689b      	ldr	r3, [r3, #8]
10010172:	4299      	cmp	r1, r3
10010174:	d004      	beq.n	10010180 <_malloc_r+0x2b8>
10010176:	685a      	ldr	r2, [r3, #4]
10010178:	f022 0203 	bic.w	r2, r2, #3
1001017c:	454a      	cmp	r2, r9
1001017e:	d8f7      	bhi.n	10010170 <_malloc_r+0x2a8>
10010180:	68d9      	ldr	r1, [r3, #12]
10010182:	e9c4 3102 	strd	r3, r1, [r4, #8]
10010186:	608c      	str	r4, [r1, #8]
10010188:	60dc      	str	r4, [r3, #12]
1001018a:	e729      	b.n	1000ffe0 <_malloc_r+0x118>
1001018c:	2b14      	cmp	r3, #20
1001018e:	d96d      	bls.n	1001026c <_malloc_r+0x3a4>
10010190:	2b54      	cmp	r3, #84	@ 0x54
10010192:	f200 8101 	bhi.w	10010398 <_malloc_r+0x4d0>
10010196:	0b2b      	lsrs	r3, r5, #12
10010198:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
1001019c:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
100101a0:	ea4f 03cc 	mov.w	r3, ip, lsl #3
100101a4:	e6d7      	b.n	1000ff56 <_malloc_r+0x8e>
100101a6:	4630      	mov	r0, r6
100101a8:	68a6      	ldr	r6, [r4, #8]
100101aa:	1962      	adds	r2, r4, r5
100101ac:	f045 0501 	orr.w	r5, r5, #1
100101b0:	6065      	str	r5, [r4, #4]
100101b2:	60f1      	str	r1, [r6, #12]
100101b4:	608e      	str	r6, [r1, #8]
100101b6:	f04e 0101 	orr.w	r1, lr, #1
100101ba:	e9c7 2204 	strd	r2, r2, [r7, #16]
100101be:	f8c2 8008 	str.w	r8, [r2, #8]
100101c2:	f8c2 800c 	str.w	r8, [r2, #12]
100101c6:	6051      	str	r1, [r2, #4]
100101c8:	f844 e003 	str.w	lr, [r4, r3]
100101cc:	f003 f816 	bl	100131fc <__malloc_unlock>
100101d0:	3408      	adds	r4, #8
100101d2:	e6a2      	b.n	1000ff1a <_malloc_r+0x52>
100101d4:	20000040 	.word	0x20000040
100101d8:	2000105c 	.word	0x2000105c
100101dc:	2000102c 	.word	0x2000102c
100101e0:	20001058 	.word	0x20001058
100101e4:	20001054 	.word	0x20001054
100101e8:	20000048 	.word	0x20000048
100101ec:	20000038 	.word	0x20000038
100101f0:	4423      	add	r3, r4
100101f2:	4630      	mov	r0, r6
100101f4:	685a      	ldr	r2, [r3, #4]
100101f6:	f042 0201 	orr.w	r2, r2, #1
100101fa:	605a      	str	r2, [r3, #4]
100101fc:	f854 3f08 	ldr.w	r3, [r4, #8]!
10010200:	60d9      	str	r1, [r3, #12]
10010202:	608b      	str	r3, [r1, #8]
10010204:	f002 fffa 	bl	100131fc <__malloc_unlock>
10010208:	e687      	b.n	1000ff1a <_malloc_r+0x52>
1001020a:	44a1      	add	r9, r4
1001020c:	4630      	mov	r0, r6
1001020e:	f8d9 3004 	ldr.w	r3, [r9, #4]
10010212:	f043 0301 	orr.w	r3, r3, #1
10010216:	f8c9 3004 	str.w	r3, [r9, #4]
1001021a:	3408      	adds	r4, #8
1001021c:	f002 ffee 	bl	100131fc <__malloc_unlock>
10010220:	e67b      	b.n	1000ff1a <_malloc_r+0x52>
10010222:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
10010226:	f105 0308 	add.w	r3, r5, #8
1001022a:	e65e      	b.n	1000feea <_malloc_r+0x22>
1001022c:	1962      	adds	r2, r4, r5
1001022e:	f043 0101 	orr.w	r1, r3, #1
10010232:	f045 0501 	orr.w	r5, r5, #1
10010236:	6065      	str	r5, [r4, #4]
10010238:	4630      	mov	r0, r6
1001023a:	e9c7 2204 	strd	r2, r2, [r7, #16]
1001023e:	f8c2 8008 	str.w	r8, [r2, #8]
10010242:	f8c2 800c 	str.w	r8, [r2, #12]
10010246:	6051      	str	r1, [r2, #4]
10010248:	f844 3009 	str.w	r3, [r4, r9]
1001024c:	f002 ffd6 	bl	100131fc <__malloc_unlock>
10010250:	3408      	adds	r4, #8
10010252:	e662      	b.n	1000ff1a <_malloc_r+0x52>
10010254:	ea4f 1299 	mov.w	r2, r9, lsr #6
10010258:	f102 0339 	add.w	r3, r2, #57	@ 0x39
1001025c:	00db      	lsls	r3, r3, #3
1001025e:	3238      	adds	r2, #56	@ 0x38
10010260:	e780      	b.n	10010164 <_malloc_r+0x29c>
10010262:	42bc      	cmp	r4, r7
10010264:	d024      	beq.n	100102b0 <_malloc_r+0x3e8>
10010266:	68bc      	ldr	r4, [r7, #8]
10010268:	6862      	ldr	r2, [r4, #4]
1001026a:	e743      	b.n	100100f4 <_malloc_r+0x22c>
1001026c:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
10010270:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
10010274:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10010278:	e66d      	b.n	1000ff56 <_malloc_r+0x8e>
1001027a:	f85a 3908 	ldr.w	r3, [sl], #-8
1001027e:	4553      	cmp	r3, sl
10010280:	f040 80d8 	bne.w	10010434 <_malloc_r+0x56c>
10010284:	f01c 0f03 	tst.w	ip, #3
10010288:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
1001028c:	d1f5      	bne.n	1001027a <_malloc_r+0x3b2>
1001028e:	687b      	ldr	r3, [r7, #4]
10010290:	ea23 0300 	bic.w	r3, r3, r0
10010294:	607b      	str	r3, [r7, #4]
10010296:	0040      	lsls	r0, r0, #1
10010298:	4298      	cmp	r0, r3
1001029a:	f63f aedc 	bhi.w	10010056 <_malloc_r+0x18e>
1001029e:	b918      	cbnz	r0, 100102a8 <_malloc_r+0x3e0>
100102a0:	e6d9      	b.n	10010056 <_malloc_r+0x18e>
100102a2:	0040      	lsls	r0, r0, #1
100102a4:	f109 0904 	add.w	r9, r9, #4
100102a8:	4218      	tst	r0, r3
100102aa:	d0fa      	beq.n	100102a2 <_malloc_r+0x3da>
100102ac:	46cc      	mov	ip, r9
100102ae:	e6a8      	b.n	10010002 <_malloc_r+0x13a>
100102b0:	4b61      	ldr	r3, [pc, #388]	@ (10010438 <_malloc_r+0x570>)
100102b2:	9901      	ldr	r1, [sp, #4]
100102b4:	6818      	ldr	r0, [r3, #0]
100102b6:	eb08 0c00 	add.w	ip, r8, r0
100102ba:	3901      	subs	r1, #1
100102bc:	f8c3 c000 	str.w	ip, [r3]
100102c0:	f8db 0000 	ldr.w	r0, [fp]
100102c4:	3001      	adds	r0, #1
100102c6:	bf1b      	ittet	ne
100102c8:	ebaa 0202 	subne.w	r2, sl, r2
100102cc:	4462      	addne	r2, ip
100102ce:	f8cb a000 	streq.w	sl, [fp]
100102d2:	601a      	strne	r2, [r3, #0]
100102d4:	f01a 0207 	ands.w	r2, sl, #7
100102d8:	e9cd 2302 	strd	r2, r3, [sp, #8]
100102dc:	d042      	beq.n	10010364 <_malloc_r+0x49c>
100102de:	f1c2 0208 	rsb	r2, r2, #8
100102e2:	9b01      	ldr	r3, [sp, #4]
100102e4:	4492      	add	sl, r2
100102e6:	44d0      	add	r8, sl
100102e8:	4413      	add	r3, r2
100102ea:	ea08 0001 	and.w	r0, r8, r1
100102ee:	1a1a      	subs	r2, r3, r0
100102f0:	ea02 0b01 	and.w	fp, r2, r1
100102f4:	4659      	mov	r1, fp
100102f6:	4630      	mov	r0, r6
100102f8:	f003 ff28 	bl	1001414c <_sbrk_r>
100102fc:	1c42      	adds	r2, r0, #1
100102fe:	9b03      	ldr	r3, [sp, #12]
10010300:	d07a      	beq.n	100103f8 <_malloc_r+0x530>
10010302:	eba0 000a 	sub.w	r0, r0, sl
10010306:	eb00 080b 	add.w	r8, r0, fp
1001030a:	6818      	ldr	r0, [r3, #0]
1001030c:	f8c7 a008 	str.w	sl, [r7, #8]
10010310:	f048 0201 	orr.w	r2, r8, #1
10010314:	4458      	add	r0, fp
10010316:	42bc      	cmp	r4, r7
10010318:	f8ca 2004 	str.w	r2, [sl, #4]
1001031c:	6018      	str	r0, [r3, #0]
1001031e:	f43f aede 	beq.w	100100de <_malloc_r+0x216>
10010322:	f1b9 0f0f 	cmp.w	r9, #15
10010326:	d942      	bls.n	100103ae <_malloc_r+0x4e6>
10010328:	6861      	ldr	r1, [r4, #4]
1001032a:	f1a9 020c 	sub.w	r2, r9, #12
1001032e:	f022 0207 	bic.w	r2, r2, #7
10010332:	f001 0101 	and.w	r1, r1, #1
10010336:	4311      	orrs	r1, r2
10010338:	6061      	str	r1, [r4, #4]
1001033a:	18a1      	adds	r1, r4, r2
1001033c:	f04f 0c05 	mov.w	ip, #5
10010340:	2a0f      	cmp	r2, #15
10010342:	f8c1 c004 	str.w	ip, [r1, #4]
10010346:	f8c1 c008 	str.w	ip, [r1, #8]
1001034a:	d84a      	bhi.n	100103e2 <_malloc_r+0x51a>
1001034c:	f8da 2004 	ldr.w	r2, [sl, #4]
10010350:	e6c5      	b.n	100100de <_malloc_r+0x216>
10010352:	1092      	asrs	r2, r2, #2
10010354:	2001      	movs	r0, #1
10010356:	fa00 f202 	lsl.w	r2, r0, r2
1001035a:	ea4e 0e02 	orr.w	lr, lr, r2
1001035e:	f8c7 e004 	str.w	lr, [r7, #4]
10010362:	e70e      	b.n	10010182 <_malloc_r+0x2ba>
10010364:	9b01      	ldr	r3, [sp, #4]
10010366:	eb0a 0208 	add.w	r2, sl, r8
1001036a:	400a      	ands	r2, r1
1001036c:	1a9a      	subs	r2, r3, r2
1001036e:	ea02 0b01 	and.w	fp, r2, r1
10010372:	4659      	mov	r1, fp
10010374:	4630      	mov	r0, r6
10010376:	f003 fee9 	bl	1001414c <_sbrk_r>
1001037a:	1c43      	adds	r3, r0, #1
1001037c:	9b03      	ldr	r3, [sp, #12]
1001037e:	d1c0      	bne.n	10010302 <_malloc_r+0x43a>
10010380:	f8dd b008 	ldr.w	fp, [sp, #8]
10010384:	e7c1      	b.n	1001030a <_malloc_r+0x442>
10010386:	2a54      	cmp	r2, #84	@ 0x54
10010388:	d815      	bhi.n	100103b6 <_malloc_r+0x4ee>
1001038a:	ea4f 3219 	mov.w	r2, r9, lsr #12
1001038e:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
10010392:	00db      	lsls	r3, r3, #3
10010394:	326e      	adds	r2, #110	@ 0x6e
10010396:	e6e5      	b.n	10010164 <_malloc_r+0x29c>
10010398:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
1001039c:	d815      	bhi.n	100103ca <_malloc_r+0x502>
1001039e:	0beb      	lsrs	r3, r5, #15
100103a0:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
100103a4:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
100103a8:	ea4f 03cc 	mov.w	r3, ip, lsl #3
100103ac:	e5d3      	b.n	1000ff56 <_malloc_r+0x8e>
100103ae:	2301      	movs	r3, #1
100103b0:	f8ca 3004 	str.w	r3, [sl, #4]
100103b4:	e6a6      	b.n	10010104 <_malloc_r+0x23c>
100103b6:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
100103ba:	d825      	bhi.n	10010408 <_malloc_r+0x540>
100103bc:	ea4f 32d9 	mov.w	r2, r9, lsr #15
100103c0:	f102 0378 	add.w	r3, r2, #120	@ 0x78
100103c4:	00db      	lsls	r3, r3, #3
100103c6:	3277      	adds	r2, #119	@ 0x77
100103c8:	e6cc      	b.n	10010164 <_malloc_r+0x29c>
100103ca:	f240 5254 	movw	r2, #1364	@ 0x554
100103ce:	4293      	cmp	r3, r2
100103d0:	d825      	bhi.n	1001041e <_malloc_r+0x556>
100103d2:	0cab      	lsrs	r3, r5, #18
100103d4:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
100103d8:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
100103dc:	ea4f 03cc 	mov.w	r3, ip, lsl #3
100103e0:	e5b9      	b.n	1000ff56 <_malloc_r+0x8e>
100103e2:	4630      	mov	r0, r6
100103e4:	f104 0108 	add.w	r1, r4, #8
100103e8:	9301      	str	r3, [sp, #4]
100103ea:	f005 f903 	bl	100155f4 <_free_r>
100103ee:	9b01      	ldr	r3, [sp, #4]
100103f0:	f8d7 a008 	ldr.w	sl, [r7, #8]
100103f4:	6818      	ldr	r0, [r3, #0]
100103f6:	e7a9      	b.n	1001034c <_malloc_r+0x484>
100103f8:	9a02      	ldr	r2, [sp, #8]
100103fa:	3a08      	subs	r2, #8
100103fc:	4490      	add	r8, r2
100103fe:	eba8 080a 	sub.w	r8, r8, sl
10010402:	f04f 0b00 	mov.w	fp, #0
10010406:	e780      	b.n	1001030a <_malloc_r+0x442>
10010408:	f240 5354 	movw	r3, #1364	@ 0x554
1001040c:	429a      	cmp	r2, r3
1001040e:	d80d      	bhi.n	1001042c <_malloc_r+0x564>
10010410:	ea4f 4299 	mov.w	r2, r9, lsr #18
10010414:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
10010418:	00db      	lsls	r3, r3, #3
1001041a:	327c      	adds	r2, #124	@ 0x7c
1001041c:	e6a2      	b.n	10010164 <_malloc_r+0x29c>
1001041e:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10010422:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
10010426:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
1001042a:	e594      	b.n	1000ff56 <_malloc_r+0x8e>
1001042c:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10010430:	227e      	movs	r2, #126	@ 0x7e
10010432:	e697      	b.n	10010164 <_malloc_r+0x29c>
10010434:	687b      	ldr	r3, [r7, #4]
10010436:	e72e      	b.n	10010296 <_malloc_r+0x3ce>
10010438:	2000102c 	.word	0x2000102c

1001043c <printf>:
1001043c:	b40f      	push	{r0, r1, r2, r3}
1001043e:	b500      	push	{lr}
10010440:	4907      	ldr	r1, [pc, #28]	@ (10010460 <printf+0x24>)
10010442:	b083      	sub	sp, #12
10010444:	ab04      	add	r3, sp, #16
10010446:	6808      	ldr	r0, [r1, #0]
10010448:	f853 2b04 	ldr.w	r2, [r3], #4
1001044c:	6881      	ldr	r1, [r0, #8]
1001044e:	9301      	str	r3, [sp, #4]
10010450:	f000 f80a 	bl	10010468 <_vfprintf_r>
10010454:	b003      	add	sp, #12
10010456:	f85d eb04 	ldr.w	lr, [sp], #4
1001045a:	b004      	add	sp, #16
1001045c:	4770      	bx	lr
1001045e:	bf00      	nop
10010460:	200005c0 	.word	0x200005c0
10010464:	00000000 	.word	0x00000000

10010468 <_vfprintf_r>:
10010468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001046c:	b0df      	sub	sp, #380	@ 0x17c
1001046e:	461c      	mov	r4, r3
10010470:	9107      	str	r1, [sp, #28]
10010472:	4691      	mov	r9, r2
10010474:	4683      	mov	fp, r0
10010476:	f003 fe4f 	bl	10014118 <_localeconv_r>
1001047a:	6803      	ldr	r3, [r0, #0]
1001047c:	9319      	str	r3, [sp, #100]	@ 0x64
1001047e:	4618      	mov	r0, r3
10010480:	f003 ffbe 	bl	10014400 <strlen>
10010484:	2208      	movs	r2, #8
10010486:	9018      	str	r0, [sp, #96]	@ 0x60
10010488:	2100      	movs	r1, #0
1001048a:	a82e      	add	r0, sp, #184	@ 0xb8
1001048c:	940d      	str	r4, [sp, #52]	@ 0x34
1001048e:	f003 fdb7 	bl	10014000 <memset>
10010492:	f1bb 0f00 	cmp.w	fp, #0
10010496:	d004      	beq.n	100104a2 <_vfprintf_r+0x3a>
10010498:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
1001049c:	2b00      	cmp	r3, #0
1001049e:	f001 8087 	beq.w	100115b0 <_vfprintf_r+0x1148>
100104a2:	9b07      	ldr	r3, [sp, #28]
100104a4:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
100104a6:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100104aa:	07d1      	lsls	r1, r2, #31
100104ac:	d402      	bmi.n	100104b4 <_vfprintf_r+0x4c>
100104ae:	059a      	lsls	r2, r3, #22
100104b0:	f140 86a7 	bpl.w	10011202 <_vfprintf_r+0xd9a>
100104b4:	049f      	lsls	r7, r3, #18
100104b6:	d407      	bmi.n	100104c8 <_vfprintf_r+0x60>
100104b8:	9907      	ldr	r1, [sp, #28]
100104ba:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
100104bc:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
100104c0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
100104c4:	818b      	strh	r3, [r1, #12]
100104c6:	664a      	str	r2, [r1, #100]	@ 0x64
100104c8:	071e      	lsls	r6, r3, #28
100104ca:	f140 80cc 	bpl.w	10010666 <_vfprintf_r+0x1fe>
100104ce:	9a07      	ldr	r2, [sp, #28]
100104d0:	6912      	ldr	r2, [r2, #16]
100104d2:	2a00      	cmp	r2, #0
100104d4:	f000 80c7 	beq.w	10010666 <_vfprintf_r+0x1fe>
100104d8:	f003 021a 	and.w	r2, r3, #26
100104dc:	2a0a      	cmp	r2, #10
100104de:	f000 80d1 	beq.w	10010684 <_vfprintf_r+0x21c>
100104e2:	ed9f 7b99 	vldr	d7, [pc, #612]	@ 10010748 <_vfprintf_r+0x2e0>
100104e6:	2300      	movs	r3, #0
100104e8:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
100104ec:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
100104f0:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
100104f4:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
100104f8:	aa35      	add	r2, sp, #212	@ 0xd4
100104fa:	9313      	str	r3, [sp, #76]	@ 0x4c
100104fc:	9232      	str	r2, [sp, #200]	@ 0xc8
100104fe:	4690      	mov	r8, r2
10010500:	931a      	str	r3, [sp, #104]	@ 0x68
10010502:	930a      	str	r3, [sp, #40]	@ 0x28
10010504:	f8cd b020 	str.w	fp, [sp, #32]
10010508:	464d      	mov	r5, r9
1001050a:	9f08      	ldr	r7, [sp, #32]
1001050c:	462e      	mov	r6, r5
1001050e:	4b90      	ldr	r3, [pc, #576]	@ (10010750 <_vfprintf_r+0x2e8>)
10010510:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10010514:	f003 fdfa 	bl	1001410c <__locale_mb_cur_max>
10010518:	4603      	mov	r3, r0
1001051a:	a82e      	add	r0, sp, #184	@ 0xb8
1001051c:	9000      	str	r0, [sp, #0]
1001051e:	4632      	mov	r2, r6
10010520:	a92a      	add	r1, sp, #168	@ 0xa8
10010522:	4638      	mov	r0, r7
10010524:	47a0      	blx	r4
10010526:	2800      	cmp	r0, #0
10010528:	f000 80cb 	beq.w	100106c2 <_vfprintf_r+0x25a>
1001052c:	f2c0 80c1 	blt.w	100106b2 <_vfprintf_r+0x24a>
10010530:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10010532:	2a25      	cmp	r2, #37	@ 0x25
10010534:	4603      	mov	r3, r0
10010536:	d001      	beq.n	1001053c <_vfprintf_r+0xd4>
10010538:	441e      	add	r6, r3
1001053a:	e7e8      	b.n	1001050e <_vfprintf_r+0xa6>
1001053c:	1b77      	subs	r7, r6, r5
1001053e:	4604      	mov	r4, r0
10010540:	f040 80c2 	bne.w	100106c8 <_vfprintf_r+0x260>
10010544:	2300      	movs	r3, #0
10010546:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001054a:	4699      	mov	r9, r3
1001054c:	930b      	str	r3, [sp, #44]	@ 0x2c
1001054e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10010552:	7873      	ldrb	r3, [r6, #1]
10010554:	9209      	str	r2, [sp, #36]	@ 0x24
10010556:	1c74      	adds	r4, r6, #1
10010558:	3401      	adds	r4, #1
1001055a:	f1a3 0220 	sub.w	r2, r3, #32
1001055e:	2a5a      	cmp	r2, #90	@ 0x5a
10010560:	f200 80f8 	bhi.w	10010754 <_vfprintf_r+0x2ec>
10010564:	e8df f012 	tbh	[pc, r2, lsl #1]
10010568:	00f602d0 	.word	0x00f602d0
1001056c:	02cc00f6 	.word	0x02cc00f6
10010570:	00f600f6 	.word	0x00f600f6
10010574:	006a00f6 	.word	0x006a00f6
10010578:	00f600f6 	.word	0x00f600f6
1001057c:	02a90286 	.word	0x02a90286
10010580:	029100f6 	.word	0x029100f6
10010584:	00f602b2 	.word	0x00f602b2
10010588:	005b02ae 	.word	0x005b02ae
1001058c:	005b005b 	.word	0x005b005b
10010590:	005b005b 	.word	0x005b005b
10010594:	005b005b 	.word	0x005b005b
10010598:	005b005b 	.word	0x005b005b
1001059c:	00f600f6 	.word	0x00f600f6
100105a0:	00f600f6 	.word	0x00f600f6
100105a4:	00f600f6 	.word	0x00f600f6
100105a8:	017700f6 	.word	0x017700f6
100105ac:	021100f6 	.word	0x021100f6
100105b0:	0177032a 	.word	0x0177032a
100105b4:	01770177 	.word	0x01770177
100105b8:	00f600f6 	.word	0x00f600f6
100105bc:	00f600f6 	.word	0x00f600f6
100105c0:	00f60326 	.word	0x00f60326
100105c4:	02e200f6 	.word	0x02e200f6
100105c8:	00f600f6 	.word	0x00f600f6
100105cc:	022f00f6 	.word	0x022f00f6
100105d0:	031300f6 	.word	0x031300f6
100105d4:	00f600f6 	.word	0x00f600f6
100105d8:	00f6071f 	.word	0x00f6071f
100105dc:	00f600f6 	.word	0x00f600f6
100105e0:	00f600f6 	.word	0x00f600f6
100105e4:	00f600f6 	.word	0x00f600f6
100105e8:	017700f6 	.word	0x017700f6
100105ec:	021100f6 	.word	0x021100f6
100105f0:	01770261 	.word	0x01770261
100105f4:	01770177 	.word	0x01770177
100105f8:	0261029f 	.word	0x0261029f
100105fc:	00f6020d 	.word	0x00f6020d
10010600:	00f60295 	.word	0x00f60295
10010604:	07470355 	.word	0x07470355
10010608:	020d0343 	.word	0x020d0343
1001060c:	022f00f6 	.word	0x022f00f6
10010610:	0742007d 	.word	0x0742007d
10010614:	00f600f6 	.word	0x00f600f6
10010618:	00f6074b 	.word	0x00f6074b
1001061c:	007d      	.short	0x007d
1001061e:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10010622:	2100      	movs	r1, #0
10010624:	f814 3b01 	ldrb.w	r3, [r4], #1
10010628:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001062c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10010630:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10010634:	2a09      	cmp	r2, #9
10010636:	d9f5      	bls.n	10010624 <_vfprintf_r+0x1bc>
10010638:	910b      	str	r1, [sp, #44]	@ 0x2c
1001063a:	e78e      	b.n	1001055a <_vfprintf_r+0xf2>
1001063c:	9f08      	ldr	r7, [sp, #32]
1001063e:	4638      	mov	r0, r7
10010640:	f003 fd6a 	bl	10014118 <_localeconv_r>
10010644:	6843      	ldr	r3, [r0, #4]
10010646:	931d      	str	r3, [sp, #116]	@ 0x74
10010648:	4618      	mov	r0, r3
1001064a:	f003 fed9 	bl	10014400 <strlen>
1001064e:	901e      	str	r0, [sp, #120]	@ 0x78
10010650:	4606      	mov	r6, r0
10010652:	4638      	mov	r0, r7
10010654:	f003 fd60 	bl	10014118 <_localeconv_r>
10010658:	6883      	ldr	r3, [r0, #8]
1001065a:	931b      	str	r3, [sp, #108]	@ 0x6c
1001065c:	2e00      	cmp	r6, #0
1001065e:	f040 8629 	bne.w	100112b4 <_vfprintf_r+0xe4c>
10010662:	7823      	ldrb	r3, [r4, #0]
10010664:	e778      	b.n	10010558 <_vfprintf_r+0xf0>
10010666:	9d07      	ldr	r5, [sp, #28]
10010668:	4658      	mov	r0, fp
1001066a:	4629      	mov	r1, r5
1001066c:	f003 fb7a 	bl	10013d64 <__swsetup_r>
10010670:	2800      	cmp	r0, #0
10010672:	f041 83ac 	bne.w	10011dce <_vfprintf_r+0x1966>
10010676:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
1001067a:	f003 021a 	and.w	r2, r3, #26
1001067e:	2a0a      	cmp	r2, #10
10010680:	f47f af2f 	bne.w	100104e2 <_vfprintf_r+0x7a>
10010684:	9907      	ldr	r1, [sp, #28]
10010686:	f9b1 200e 	ldrsh.w	r2, [r1, #14]
1001068a:	2a00      	cmp	r2, #0
1001068c:	f6ff af29 	blt.w	100104e2 <_vfprintf_r+0x7a>
10010690:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
10010692:	07d0      	lsls	r0, r2, #31
10010694:	d402      	bmi.n	1001069c <_vfprintf_r+0x234>
10010696:	059a      	lsls	r2, r3, #22
10010698:	f141 81c5 	bpl.w	10011a26 <_vfprintf_r+0x15be>
1001069c:	9907      	ldr	r1, [sp, #28]
1001069e:	4623      	mov	r3, r4
100106a0:	464a      	mov	r2, r9
100106a2:	4658      	mov	r0, fp
100106a4:	f001 fd08 	bl	100120b8 <__sbprintf>
100106a8:	900a      	str	r0, [sp, #40]	@ 0x28
100106aa:	980a      	ldr	r0, [sp, #40]	@ 0x28
100106ac:	b05f      	add	sp, #380	@ 0x17c
100106ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100106b2:	2208      	movs	r2, #8
100106b4:	2100      	movs	r1, #0
100106b6:	a82e      	add	r0, sp, #184	@ 0xb8
100106b8:	f003 fca2 	bl	10014000 <memset>
100106bc:	2301      	movs	r3, #1
100106be:	441e      	add	r6, r3
100106c0:	e725      	b.n	1001050e <_vfprintf_r+0xa6>
100106c2:	1b77      	subs	r7, r6, r5
100106c4:	4604      	mov	r4, r0
100106c6:	d011      	beq.n	100106ec <_vfprintf_r+0x284>
100106c8:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
100106ca:	443b      	add	r3, r7
100106cc:	9334      	str	r3, [sp, #208]	@ 0xd0
100106ce:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100106d0:	3301      	adds	r3, #1
100106d2:	2b07      	cmp	r3, #7
100106d4:	e9c8 5700 	strd	r5, r7, [r8]
100106d8:	9333      	str	r3, [sp, #204]	@ 0xcc
100106da:	dc13      	bgt.n	10010704 <_vfprintf_r+0x29c>
100106dc:	f108 0808 	add.w	r8, r8, #8
100106e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100106e2:	443b      	add	r3, r7
100106e4:	930a      	str	r3, [sp, #40]	@ 0x28
100106e6:	2c00      	cmp	r4, #0
100106e8:	f47f af2c 	bne.w	10010544 <_vfprintf_r+0xdc>
100106ec:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
100106ee:	f8dd b020 	ldr.w	fp, [sp, #32]
100106f2:	2b00      	cmp	r3, #0
100106f4:	f041 80dc 	bne.w	100118b0 <_vfprintf_r+0x1448>
100106f8:	9b07      	ldr	r3, [sp, #28]
100106fa:	2200      	movs	r2, #0
100106fc:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10010700:	9233      	str	r2, [sp, #204]	@ 0xcc
10010702:	e012      	b.n	1001072a <_vfprintf_r+0x2c2>
10010704:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10010708:	aa32      	add	r2, sp, #200	@ 0xc8
1001070a:	f001 fd51 	bl	100121b0 <__sprint_r>
1001070e:	b948      	cbnz	r0, 10010724 <_vfprintf_r+0x2bc>
10010710:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010714:	e7e4      	b.n	100106e0 <_vfprintf_r+0x278>
10010716:	46bb      	mov	fp, r7
10010718:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001071a:	b11b      	cbz	r3, 10010724 <_vfprintf_r+0x2bc>
1001071c:	990c      	ldr	r1, [sp, #48]	@ 0x30
1001071e:	4658      	mov	r0, fp
10010720:	f004 ff68 	bl	100155f4 <_free_r>
10010724:	9b07      	ldr	r3, [sp, #28]
10010726:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001072a:	9a07      	ldr	r2, [sp, #28]
1001072c:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001072e:	07d4      	lsls	r4, r2, #31
10010730:	f140 811d 	bpl.w	1001096e <_vfprintf_r+0x506>
10010734:	0659      	lsls	r1, r3, #25
10010736:	f101 8356 	bmi.w	10011de6 <_vfprintf_r+0x197e>
1001073a:	980a      	ldr	r0, [sp, #40]	@ 0x28
1001073c:	b05f      	add	sp, #380	@ 0x17c
1001073e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10010742:	bf00      	nop
10010744:	f3af 8000 	nop.w
	...
10010750:	20000454 	.word	0x20000454
10010754:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010758:	2b00      	cmp	r3, #0
1001075a:	d0c7      	beq.n	100106ec <_vfprintf_r+0x284>
1001075c:	2200      	movs	r2, #0
1001075e:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10010762:	2301      	movs	r3, #1
10010764:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10010768:	9306      	str	r3, [sp, #24]
1001076a:	920c      	str	r2, [sp, #48]	@ 0x30
1001076c:	469b      	mov	fp, r3
1001076e:	9209      	str	r2, [sp, #36]	@ 0x24
10010770:	9214      	str	r2, [sp, #80]	@ 0x50
10010772:	9210      	str	r2, [sp, #64]	@ 0x40
10010774:	9212      	str	r2, [sp, #72]	@ 0x48
10010776:	ad45      	add	r5, sp, #276	@ 0x114
10010778:	f019 0302 	ands.w	r3, r9, #2
1001077c:	d002      	beq.n	10010784 <_vfprintf_r+0x31c>
1001077e:	9906      	ldr	r1, [sp, #24]
10010780:	3102      	adds	r1, #2
10010782:	9106      	str	r1, [sp, #24]
10010784:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10010788:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001078a:	d105      	bne.n	10010798 <_vfprintf_r+0x330>
1001078c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1001078e:	9806      	ldr	r0, [sp, #24]
10010790:	1a0e      	subs	r6, r1, r0
10010792:	2e00      	cmp	r6, #0
10010794:	f300 80aa 	bgt.w	100108ec <_vfprintf_r+0x484>
10010798:	b182      	cbz	r2, 100107bc <_vfprintf_r+0x354>
1001079a:	2201      	movs	r2, #1
1001079c:	f8c8 2004 	str.w	r2, [r8, #4]
100107a0:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100107a2:	3201      	adds	r2, #1
100107a4:	3401      	adds	r4, #1
100107a6:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
100107aa:	2a07      	cmp	r2, #7
100107ac:	9434      	str	r4, [sp, #208]	@ 0xd0
100107ae:	9233      	str	r2, [sp, #204]	@ 0xcc
100107b0:	f8c8 1000 	str.w	r1, [r8]
100107b4:	f300 83e3 	bgt.w	10010f7e <_vfprintf_r+0xb16>
100107b8:	f108 0808 	add.w	r8, r8, #8
100107bc:	b183      	cbz	r3, 100107e0 <_vfprintf_r+0x378>
100107be:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100107c0:	aa28      	add	r2, sp, #160	@ 0xa0
100107c2:	3301      	adds	r3, #1
100107c4:	3402      	adds	r4, #2
100107c6:	f8c8 2000 	str.w	r2, [r8]
100107ca:	2b07      	cmp	r3, #7
100107cc:	f04f 0202 	mov.w	r2, #2
100107d0:	9434      	str	r4, [sp, #208]	@ 0xd0
100107d2:	9333      	str	r3, [sp, #204]	@ 0xcc
100107d4:	f8c8 2004 	str.w	r2, [r8, #4]
100107d8:	f300 83df 	bgt.w	10010f9a <_vfprintf_r+0xb32>
100107dc:	f108 0808 	add.w	r8, r8, #8
100107e0:	2f80      	cmp	r7, #128	@ 0x80
100107e2:	f000 82c0 	beq.w	10010d66 <_vfprintf_r+0x8fe>
100107e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100107e8:	eba3 060b 	sub.w	r6, r3, fp
100107ec:	2e00      	cmp	r6, #0
100107ee:	f300 82ff 	bgt.w	10010df0 <_vfprintf_r+0x988>
100107f2:	f419 7f80 	tst.w	r9, #256	@ 0x100
100107f6:	f040 821b 	bne.w	10010c30 <_vfprintf_r+0x7c8>
100107fa:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100107fc:	f8c8 5000 	str.w	r5, [r8]
10010800:	3301      	adds	r3, #1
10010802:	445c      	add	r4, fp
10010804:	2b07      	cmp	r3, #7
10010806:	f8c8 b004 	str.w	fp, [r8, #4]
1001080a:	9434      	str	r4, [sp, #208]	@ 0xd0
1001080c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001080e:	f300 834f 	bgt.w	10010eb0 <_vfprintf_r+0xa48>
10010812:	f108 0808 	add.w	r8, r8, #8
10010816:	f019 0f04 	tst.w	r9, #4
1001081a:	d005      	beq.n	10010828 <_vfprintf_r+0x3c0>
1001081c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001081e:	9a06      	ldr	r2, [sp, #24]
10010820:	1a9d      	subs	r5, r3, r2
10010822:	2d00      	cmp	r5, #0
10010824:	f300 83c5 	bgt.w	10010fb2 <_vfprintf_r+0xb4a>
10010828:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
1001082c:	9906      	ldr	r1, [sp, #24]
1001082e:	428a      	cmp	r2, r1
10010830:	bfac      	ite	ge
10010832:	189b      	addge	r3, r3, r2
10010834:	185b      	addlt	r3, r3, r1
10010836:	930a      	str	r3, [sp, #40]	@ 0x28
10010838:	2c00      	cmp	r4, #0
1001083a:	f040 8311 	bne.w	10010e60 <_vfprintf_r+0x9f8>
1001083e:	2300      	movs	r3, #0
10010840:	9333      	str	r3, [sp, #204]	@ 0xcc
10010842:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10010844:	b11b      	cbz	r3, 1001084e <_vfprintf_r+0x3e6>
10010846:	990c      	ldr	r1, [sp, #48]	@ 0x30
10010848:	9808      	ldr	r0, [sp, #32]
1001084a:	f004 fed3 	bl	100155f4 <_free_r>
1001084e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010852:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10010854:	e659      	b.n	1001050a <_vfprintf_r+0xa2>
10010856:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001085a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001085c:	3307      	adds	r3, #7
1001085e:	f023 0307 	bic.w	r3, r3, #7
10010862:	ecb3 7b02 	vldmia	r3!, {d7}
10010866:	ec57 6b17 	vmov	r6, r7, d7
1001086a:	930d      	str	r3, [sp, #52]	@ 0x34
1001086c:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10010870:	9323      	str	r3, [sp, #140]	@ 0x8c
10010872:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
10010876:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
1001087a:	4ba8      	ldr	r3, [pc, #672]	@ (10010b1c <_vfprintf_r+0x6b4>)
1001087c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10010880:	4650      	mov	r0, sl
10010882:	4659      	mov	r1, fp
10010884:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
10010888:	f008 f95a 	bl	10018b40 <__aeabi_dcmpun>
1001088c:	2800      	cmp	r0, #0
1001088e:	f040 852f 	bne.w	100112f0 <_vfprintf_r+0xe88>
10010892:	4ba2      	ldr	r3, [pc, #648]	@ (10010b1c <_vfprintf_r+0x6b4>)
10010894:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10010898:	4650      	mov	r0, sl
1001089a:	4659      	mov	r1, fp
1001089c:	f008 f932 	bl	10018b04 <__aeabi_dcmple>
100108a0:	2800      	cmp	r0, #0
100108a2:	f040 8525 	bne.w	100112f0 <_vfprintf_r+0xe88>
100108a6:	2200      	movs	r2, #0
100108a8:	2300      	movs	r3, #0
100108aa:	4630      	mov	r0, r6
100108ac:	4639      	mov	r1, r7
100108ae:	f008 f91f 	bl	10018af0 <__aeabi_dcmplt>
100108b2:	2800      	cmp	r0, #0
100108b4:	f041 810c 	bne.w	10011ad0 <_vfprintf_r+0x1668>
100108b8:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100108bc:	4d98      	ldr	r5, [pc, #608]	@ (10010b20 <_vfprintf_r+0x6b8>)
100108be:	4b99      	ldr	r3, [pc, #612]	@ (10010b24 <_vfprintf_r+0x6bc>)
100108c0:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
100108c4:	990e      	ldr	r1, [sp, #56]	@ 0x38
100108c6:	2947      	cmp	r1, #71	@ 0x47
100108c8:	bfc8      	it	gt
100108ca:	461d      	movgt	r5, r3
100108cc:	2300      	movs	r3, #0
100108ce:	2103      	movs	r1, #3
100108d0:	930c      	str	r3, [sp, #48]	@ 0x30
100108d2:	9106      	str	r1, [sp, #24]
100108d4:	468b      	mov	fp, r1
100108d6:	9309      	str	r3, [sp, #36]	@ 0x24
100108d8:	9314      	str	r3, [sp, #80]	@ 0x50
100108da:	9310      	str	r3, [sp, #64]	@ 0x40
100108dc:	9312      	str	r3, [sp, #72]	@ 0x48
100108de:	2a00      	cmp	r2, #0
100108e0:	f43f af4a 	beq.w	10010778 <_vfprintf_r+0x310>
100108e4:	9b06      	ldr	r3, [sp, #24]
100108e6:	3301      	adds	r3, #1
100108e8:	9306      	str	r3, [sp, #24]
100108ea:	e745      	b.n	10010778 <_vfprintf_r+0x310>
100108ec:	2e10      	cmp	r6, #16
100108ee:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100108f0:	f341 823a 	ble.w	10011d68 <_vfprintf_r+0x1900>
100108f4:	488c      	ldr	r0, [pc, #560]	@ (10010b28 <_vfprintf_r+0x6c0>)
100108f6:	9521      	str	r5, [sp, #132]	@ 0x84
100108f8:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
100108fc:	4621      	mov	r1, r4
100108fe:	9d07      	ldr	r5, [sp, #28]
10010900:	9c08      	ldr	r4, [sp, #32]
10010902:	9015      	str	r0, [sp, #84]	@ 0x54
10010904:	f04f 0a10 	mov.w	sl, #16
10010908:	4607      	mov	r7, r0
1001090a:	e004      	b.n	10010916 <_vfprintf_r+0x4ae>
1001090c:	3e10      	subs	r6, #16
1001090e:	2e10      	cmp	r6, #16
10010910:	f108 0808 	add.w	r8, r8, #8
10010914:	dd16      	ble.n	10010944 <_vfprintf_r+0x4dc>
10010916:	3201      	adds	r2, #1
10010918:	3110      	adds	r1, #16
1001091a:	2a07      	cmp	r2, #7
1001091c:	e9c8 7a00 	strd	r7, sl, [r8]
10010920:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10010924:	ddf2      	ble.n	1001090c <_vfprintf_r+0x4a4>
10010926:	aa32      	add	r2, sp, #200	@ 0xc8
10010928:	4629      	mov	r1, r5
1001092a:	4620      	mov	r0, r4
1001092c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010930:	f001 fc3e 	bl	100121b0 <__sprint_r>
10010934:	2800      	cmp	r0, #0
10010936:	f040 8635 	bne.w	100115a4 <_vfprintf_r+0x113c>
1001093a:	3e10      	subs	r6, #16
1001093c:	2e10      	cmp	r6, #16
1001093e:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10010942:	dce8      	bgt.n	10010916 <_vfprintf_r+0x4ae>
10010944:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10010948:	9d21      	ldr	r5, [sp, #132]	@ 0x84
1001094a:	460c      	mov	r4, r1
1001094c:	3201      	adds	r2, #1
1001094e:	9915      	ldr	r1, [sp, #84]	@ 0x54
10010950:	f8c8 1000 	str.w	r1, [r8]
10010954:	4434      	add	r4, r6
10010956:	2a07      	cmp	r2, #7
10010958:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
1001095c:	f8c8 6004 	str.w	r6, [r8, #4]
10010960:	f300 860f 	bgt.w	10011582 <_vfprintf_r+0x111a>
10010964:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10010968:	f108 0808 	add.w	r8, r8, #8
1001096c:	e714      	b.n	10010798 <_vfprintf_r+0x330>
1001096e:	0598      	lsls	r0, r3, #22
10010970:	f53f aee0 	bmi.w	10010734 <_vfprintf_r+0x2cc>
10010974:	9c07      	ldr	r4, [sp, #28]
10010976:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10010978:	f003 fc3c 	bl	100141f4 <__retarget_lock_release_recursive>
1001097c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10010980:	e6d8      	b.n	10010734 <_vfprintf_r+0x2cc>
10010982:	7823      	ldrb	r3, [r4, #0]
10010984:	f049 0920 	orr.w	r9, r9, #32
10010988:	e5e6      	b.n	10010558 <_vfprintf_r+0xf0>
1001098a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001098c:	2b43      	cmp	r3, #67	@ 0x43
1001098e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010992:	f102 0404 	add.w	r4, r2, #4
10010996:	f000 8561 	beq.w	1001145c <_vfprintf_r+0xff4>
1001099a:	f019 0f10 	tst.w	r9, #16
1001099e:	f040 855d 	bne.w	1001145c <_vfprintf_r+0xff4>
100109a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100109a4:	681b      	ldr	r3, [r3, #0]
100109a6:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
100109aa:	2301      	movs	r3, #1
100109ac:	9306      	str	r3, [sp, #24]
100109ae:	469b      	mov	fp, r3
100109b0:	ad45      	add	r5, sp, #276	@ 0x114
100109b2:	2200      	movs	r2, #0
100109b4:	940d      	str	r4, [sp, #52]	@ 0x34
100109b6:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100109ba:	920c      	str	r2, [sp, #48]	@ 0x30
100109bc:	9209      	str	r2, [sp, #36]	@ 0x24
100109be:	9214      	str	r2, [sp, #80]	@ 0x50
100109c0:	9210      	str	r2, [sp, #64]	@ 0x40
100109c2:	9212      	str	r2, [sp, #72]	@ 0x48
100109c4:	e6d8      	b.n	10010778 <_vfprintf_r+0x310>
100109c6:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
100109c8:	f856 5b04 	ldr.w	r5, [r6], #4
100109cc:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100109d0:	2300      	movs	r3, #0
100109d2:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
100109d6:	2d00      	cmp	r5, #0
100109d8:	f000 852f 	beq.w	1001143a <_vfprintf_r+0xfd2>
100109dc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100109de:	2b53      	cmp	r3, #83	@ 0x53
100109e0:	f000 8600 	beq.w	100115e4 <_vfprintf_r+0x117c>
100109e4:	f019 0310 	ands.w	r3, r9, #16
100109e8:	9312      	str	r3, [sp, #72]	@ 0x48
100109ea:	f040 85fb 	bne.w	100115e4 <_vfprintf_r+0x117c>
100109ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100109f0:	1c5a      	adds	r2, r3, #1
100109f2:	f000 8767 	beq.w	100118c4 <_vfprintf_r+0x145c>
100109f6:	9912      	ldr	r1, [sp, #72]	@ 0x48
100109f8:	461a      	mov	r2, r3
100109fa:	4628      	mov	r0, r5
100109fc:	f003 fc00 	bl	10014200 <memchr>
10010a00:	900c      	str	r0, [sp, #48]	@ 0x30
10010a02:	2800      	cmp	r0, #0
10010a04:	f001 82c2 	beq.w	10011f8c <_vfprintf_r+0x1b24>
10010a08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10010a0a:	960d      	str	r6, [sp, #52]	@ 0x34
10010a0c:	eba3 0b05 	sub.w	fp, r3, r5
10010a10:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10010a12:	9309      	str	r3, [sp, #36]	@ 0x24
10010a14:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10010a18:	9314      	str	r3, [sp, #80]	@ 0x50
10010a1a:	9310      	str	r3, [sp, #64]	@ 0x40
10010a1c:	930c      	str	r3, [sp, #48]	@ 0x30
10010a1e:	2373      	movs	r3, #115	@ 0x73
10010a20:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10010a24:	9106      	str	r1, [sp, #24]
10010a26:	930e      	str	r3, [sp, #56]	@ 0x38
10010a28:	e759      	b.n	100108de <_vfprintf_r+0x476>
10010a2a:	f019 0f20 	tst.w	r9, #32
10010a2e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010a32:	f000 80cb 	beq.w	10010bcc <_vfprintf_r+0x764>
10010a36:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010a38:	3307      	adds	r3, #7
10010a3a:	f023 0307 	bic.w	r3, r3, #7
10010a3e:	461a      	mov	r2, r3
10010a40:	6859      	ldr	r1, [r3, #4]
10010a42:	f852 3b08 	ldr.w	r3, [r2], #8
10010a46:	920d      	str	r2, [sp, #52]	@ 0x34
10010a48:	460a      	mov	r2, r1
10010a4a:	2900      	cmp	r1, #0
10010a4c:	f2c0 8424 	blt.w	10011298 <_vfprintf_r+0xe30>
10010a50:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010a52:	3101      	adds	r1, #1
10010a54:	f000 8284 	beq.w	10010f60 <_vfprintf_r+0xaf8>
10010a58:	ea53 0102 	orrs.w	r1, r3, r2
10010a5c:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10010a60:	f040 827f 	bne.w	10010f62 <_vfprintf_r+0xafa>
10010a64:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10010a66:	2a00      	cmp	r2, #0
10010a68:	f040 8280 	bne.w	10010f6c <_vfprintf_r+0xb04>
10010a6c:	46a1      	mov	r9, r4
10010a6e:	4693      	mov	fp, r2
10010a70:	ad5e      	add	r5, sp, #376	@ 0x178
10010a72:	e14f      	b.n	10010d14 <_vfprintf_r+0x8ac>
10010a74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010a76:	f853 2b04 	ldr.w	r2, [r3], #4
10010a7a:	920b      	str	r2, [sp, #44]	@ 0x2c
10010a7c:	2a00      	cmp	r2, #0
10010a7e:	f280 83cd 	bge.w	1001121c <_vfprintf_r+0xdb4>
10010a82:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10010a84:	930d      	str	r3, [sp, #52]	@ 0x34
10010a86:	4252      	negs	r2, r2
10010a88:	920b      	str	r2, [sp, #44]	@ 0x2c
10010a8a:	7823      	ldrb	r3, [r4, #0]
10010a8c:	f049 0904 	orr.w	r9, r9, #4
10010a90:	e562      	b.n	10010558 <_vfprintf_r+0xf0>
10010a92:	7823      	ldrb	r3, [r4, #0]
10010a94:	2b6c      	cmp	r3, #108	@ 0x6c
10010a96:	bf03      	ittte	eq
10010a98:	7863      	ldrbeq	r3, [r4, #1]
10010a9a:	f049 0920 	orreq.w	r9, r9, #32
10010a9e:	3401      	addeq	r4, #1
10010aa0:	f049 0910 	orrne.w	r9, r9, #16
10010aa4:	e558      	b.n	10010558 <_vfprintf_r+0xf0>
10010aa6:	7823      	ldrb	r3, [r4, #0]
10010aa8:	2b68      	cmp	r3, #104	@ 0x68
10010aaa:	bf03      	ittte	eq
10010aac:	7863      	ldrbeq	r3, [r4, #1]
10010aae:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10010ab2:	3401      	addeq	r4, #1
10010ab4:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
10010ab8:	e54e      	b.n	10010558 <_vfprintf_r+0xf0>
10010aba:	232b      	movs	r3, #43	@ 0x2b
10010abc:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10010ac0:	7823      	ldrb	r3, [r4, #0]
10010ac2:	e549      	b.n	10010558 <_vfprintf_r+0xf0>
10010ac4:	7823      	ldrb	r3, [r4, #0]
10010ac6:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
10010aca:	e545      	b.n	10010558 <_vfprintf_r+0xf0>
10010acc:	4621      	mov	r1, r4
10010ace:	f811 3b01 	ldrb.w	r3, [r1], #1
10010ad2:	2b2a      	cmp	r3, #42	@ 0x2a
10010ad4:	f001 82d7 	beq.w	10012086 <_vfprintf_r+0x1c1e>
10010ad8:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10010adc:	2a09      	cmp	r2, #9
10010ade:	460c      	mov	r4, r1
10010ae0:	bf98      	it	ls
10010ae2:	2100      	movls	r1, #0
10010ae4:	f201 816f 	bhi.w	10011dc6 <_vfprintf_r+0x195e>
10010ae8:	f814 3b01 	ldrb.w	r3, [r4], #1
10010aec:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10010af0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10010af4:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10010af8:	2a09      	cmp	r2, #9
10010afa:	d9f5      	bls.n	10010ae8 <_vfprintf_r+0x680>
10010afc:	9109      	str	r1, [sp, #36]	@ 0x24
10010afe:	e52c      	b.n	1001055a <_vfprintf_r+0xf2>
10010b00:	7823      	ldrb	r3, [r4, #0]
10010b02:	f049 0901 	orr.w	r9, r9, #1
10010b06:	e527      	b.n	10010558 <_vfprintf_r+0xf0>
10010b08:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10010b0c:	7823      	ldrb	r3, [r4, #0]
10010b0e:	2a00      	cmp	r2, #0
10010b10:	f47f ad22 	bne.w	10010558 <_vfprintf_r+0xf0>
10010b14:	2220      	movs	r2, #32
10010b16:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10010b1a:	e51d      	b.n	10010558 <_vfprintf_r+0xf0>
10010b1c:	7fefffff 	.word	0x7fefffff
10010b20:	10019164 	.word	0x10019164
10010b24:	10019168 	.word	0x10019168
10010b28:	100191b8 	.word	0x100191b8
10010b2c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010b30:	f049 0910 	orr.w	r9, r9, #16
10010b34:	f019 0220 	ands.w	r2, r9, #32
10010b38:	f000 8354 	beq.w	100111e4 <_vfprintf_r+0xd7c>
10010b3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010b3e:	3307      	adds	r3, #7
10010b40:	f023 0307 	bic.w	r3, r3, #7
10010b44:	4619      	mov	r1, r3
10010b46:	685a      	ldr	r2, [r3, #4]
10010b48:	f851 3b08 	ldr.w	r3, [r1], #8
10010b4c:	910d      	str	r1, [sp, #52]	@ 0x34
10010b4e:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10010b52:	2100      	movs	r1, #0
10010b54:	2000      	movs	r0, #0
10010b56:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10010b58:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
10010b5c:	1c6f      	adds	r7, r5, #1
10010b5e:	f000 80c2 	beq.w	10010ce6 <_vfprintf_r+0x87e>
10010b62:	ea53 0002 	orrs.w	r0, r3, r2
10010b66:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
10010b6a:	f040 80bb 	bne.w	10010ce4 <_vfprintf_r+0x87c>
10010b6e:	2d00      	cmp	r5, #0
10010b70:	f040 8523 	bne.w	100115ba <_vfprintf_r+0x1152>
10010b74:	2900      	cmp	r1, #0
10010b76:	f040 8496 	bne.w	100114a6 <_vfprintf_r+0x103e>
10010b7a:	f014 0b01 	ands.w	fp, r4, #1
10010b7e:	f000 8351 	beq.w	10011224 <_vfprintf_r+0xdbc>
10010b82:	2330      	movs	r3, #48	@ 0x30
10010b84:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10010b88:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10010b8c:	e0c2      	b.n	10010d14 <_vfprintf_r+0x8ac>
10010b8e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010b92:	f049 0410 	orr.w	r4, r9, #16
10010b96:	f014 0220 	ands.w	r2, r4, #32
10010b9a:	f000 8315 	beq.w	100111c8 <_vfprintf_r+0xd60>
10010b9e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010ba0:	3307      	adds	r3, #7
10010ba2:	f023 0307 	bic.w	r3, r3, #7
10010ba6:	4619      	mov	r1, r3
10010ba8:	685a      	ldr	r2, [r3, #4]
10010baa:	f851 3b08 	ldr.w	r3, [r1], #8
10010bae:	910d      	str	r1, [sp, #52]	@ 0x34
10010bb0:	2101      	movs	r1, #1
10010bb2:	e7cf      	b.n	10010b54 <_vfprintf_r+0x6ec>
10010bb4:	7823      	ldrb	r3, [r4, #0]
10010bb6:	f049 0908 	orr.w	r9, r9, #8
10010bba:	e4cd      	b.n	10010558 <_vfprintf_r+0xf0>
10010bbc:	f049 0910 	orr.w	r9, r9, #16
10010bc0:	f019 0f20 	tst.w	r9, #32
10010bc4:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10010bc8:	f47f af35 	bne.w	10010a36 <_vfprintf_r+0x5ce>
10010bcc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10010bce:	f019 0f10 	tst.w	r9, #16
10010bd2:	f852 3b04 	ldr.w	r3, [r2], #4
10010bd6:	920d      	str	r2, [sp, #52]	@ 0x34
10010bd8:	f040 8359 	bne.w	1001128e <_vfprintf_r+0xe26>
10010bdc:	f019 0f40 	tst.w	r9, #64	@ 0x40
10010be0:	f000 8351 	beq.w	10011286 <_vfprintf_r+0xe1e>
10010be4:	f343 32c0 	sbfx	r2, r3, #15, #1
10010be8:	4611      	mov	r1, r2
10010bea:	b21b      	sxth	r3, r3
10010bec:	e72d      	b.n	10010a4a <_vfprintf_r+0x5e2>
10010bee:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10010bf0:	940f      	str	r4, [sp, #60]	@ 0x3c
10010bf2:	f852 3b04 	ldr.w	r3, [r2], #4
10010bf6:	920d      	str	r2, [sp, #52]	@ 0x34
10010bf8:	f647 0230 	movw	r2, #30768	@ 0x7830
10010bfc:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10010c00:	2078      	movs	r0, #120	@ 0x78
10010c02:	4ab1      	ldr	r2, [pc, #708]	@ (10010ec8 <_vfprintf_r+0xa60>)
10010c04:	921a      	str	r2, [sp, #104]	@ 0x68
10010c06:	f049 0402 	orr.w	r4, r9, #2
10010c0a:	2200      	movs	r2, #0
10010c0c:	2102      	movs	r1, #2
10010c0e:	900e      	str	r0, [sp, #56]	@ 0x38
10010c10:	e7a0      	b.n	10010b54 <_vfprintf_r+0x6ec>
10010c12:	f019 0f20 	tst.w	r9, #32
10010c16:	940f      	str	r4, [sp, #60]	@ 0x3c
10010c18:	f000 8359 	beq.w	100112ce <_vfprintf_r+0xe66>
10010c1c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010c1e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10010c20:	681b      	ldr	r3, [r3, #0]
10010c22:	601a      	str	r2, [r3, #0]
10010c24:	17d2      	asrs	r2, r2, #31
10010c26:	605a      	str	r2, [r3, #4]
10010c28:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10010c2a:	3304      	adds	r3, #4
10010c2c:	930d      	str	r3, [sp, #52]	@ 0x34
10010c2e:	e610      	b.n	10010852 <_vfprintf_r+0x3ea>
10010c30:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10010c32:	2b65      	cmp	r3, #101	@ 0x65
10010c34:	f340 814e 	ble.w	10010ed4 <_vfprintf_r+0xa6c>
10010c38:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10010c3c:	2200      	movs	r2, #0
10010c3e:	2300      	movs	r3, #0
10010c40:	f007 ff4c 	bl	10018adc <__aeabi_dcmpeq>
10010c44:	2800      	cmp	r0, #0
10010c46:	f000 81ee 	beq.w	10011026 <_vfprintf_r+0xbbe>
10010c4a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010c4c:	4a9f      	ldr	r2, [pc, #636]	@ (10010ecc <_vfprintf_r+0xa64>)
10010c4e:	f8c8 2000 	str.w	r2, [r8]
10010c52:	3301      	adds	r3, #1
10010c54:	3401      	adds	r4, #1
10010c56:	2201      	movs	r2, #1
10010c58:	2b07      	cmp	r3, #7
10010c5a:	9434      	str	r4, [sp, #208]	@ 0xd0
10010c5c:	9333      	str	r3, [sp, #204]	@ 0xcc
10010c5e:	f8c8 2004 	str.w	r2, [r8, #4]
10010c62:	f300 84af 	bgt.w	100115c4 <_vfprintf_r+0x115c>
10010c66:	f108 0808 	add.w	r8, r8, #8
10010c6a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10010c6c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10010c6e:	4293      	cmp	r3, r2
10010c70:	f280 82cf 	bge.w	10011212 <_vfprintf_r+0xdaa>
10010c74:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10010c76:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10010c78:	441c      	add	r4, r3
10010c7a:	e9c8 2300 	strd	r2, r3, [r8]
10010c7e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010c80:	9434      	str	r4, [sp, #208]	@ 0xd0
10010c82:	3301      	adds	r3, #1
10010c84:	2b07      	cmp	r3, #7
10010c86:	9333      	str	r3, [sp, #204]	@ 0xcc
10010c88:	f300 83cb 	bgt.w	10011422 <_vfprintf_r+0xfba>
10010c8c:	f108 0808 	add.w	r8, r8, #8
10010c90:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10010c92:	1e5d      	subs	r5, r3, #1
10010c94:	2d00      	cmp	r5, #0
10010c96:	f77f adbe 	ble.w	10010816 <_vfprintf_r+0x3ae>
10010c9a:	2d10      	cmp	r5, #16
10010c9c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010c9e:	f340 84f9 	ble.w	10011694 <_vfprintf_r+0x122c>
10010ca2:	4f8b      	ldr	r7, [pc, #556]	@ (10010ed0 <_vfprintf_r+0xa68>)
10010ca4:	9715      	str	r7, [sp, #84]	@ 0x54
10010ca6:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
10010caa:	2610      	movs	r6, #16
10010cac:	e005      	b.n	10010cba <_vfprintf_r+0x852>
10010cae:	f108 0808 	add.w	r8, r8, #8
10010cb2:	3d10      	subs	r5, #16
10010cb4:	2d10      	cmp	r5, #16
10010cb6:	f340 84ef 	ble.w	10011698 <_vfprintf_r+0x1230>
10010cba:	3301      	adds	r3, #1
10010cbc:	3410      	adds	r4, #16
10010cbe:	2b07      	cmp	r3, #7
10010cc0:	e9c8 7600 	strd	r7, r6, [r8]
10010cc4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10010cc8:	ddf1      	ble.n	10010cae <_vfprintf_r+0x846>
10010cca:	aa32      	add	r2, sp, #200	@ 0xc8
10010ccc:	4651      	mov	r1, sl
10010cce:	4658      	mov	r0, fp
10010cd0:	f001 fa6e 	bl	100121b0 <__sprint_r>
10010cd4:	2800      	cmp	r0, #0
10010cd6:	f47f ad1f 	bne.w	10010718 <_vfprintf_r+0x2b0>
10010cda:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10010cde:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010ce2:	e7e6      	b.n	10010cb2 <_vfprintf_r+0x84a>
10010ce4:	464c      	mov	r4, r9
10010ce6:	2901      	cmp	r1, #1
10010ce8:	f000 813b 	beq.w	10010f62 <_vfprintf_r+0xafa>
10010cec:	2902      	cmp	r1, #2
10010cee:	ad5e      	add	r5, sp, #376	@ 0x178
10010cf0:	d11e      	bne.n	10010d30 <_vfprintf_r+0x8c8>
10010cf2:	981a      	ldr	r0, [sp, #104]	@ 0x68
10010cf4:	f003 010f 	and.w	r1, r3, #15
10010cf8:	091b      	lsrs	r3, r3, #4
10010cfa:	5c41      	ldrb	r1, [r0, r1]
10010cfc:	f805 1d01 	strb.w	r1, [r5, #-1]!
10010d00:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10010d04:	0912      	lsrs	r2, r2, #4
10010d06:	ea53 0102 	orrs.w	r1, r3, r2
10010d0a:	d1f3      	bne.n	10010cf4 <_vfprintf_r+0x88c>
10010d0c:	ab5e      	add	r3, sp, #376	@ 0x178
10010d0e:	46a1      	mov	r9, r4
10010d10:	eba3 0b05 	sub.w	fp, r3, r5
10010d14:	9909      	ldr	r1, [sp, #36]	@ 0x24
10010d16:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10010d1a:	4559      	cmp	r1, fp
10010d1c:	f04f 0300 	mov.w	r3, #0
10010d20:	bfb8      	it	lt
10010d22:	4659      	movlt	r1, fp
10010d24:	930c      	str	r3, [sp, #48]	@ 0x30
10010d26:	9106      	str	r1, [sp, #24]
10010d28:	9314      	str	r3, [sp, #80]	@ 0x50
10010d2a:	9310      	str	r3, [sp, #64]	@ 0x40
10010d2c:	9312      	str	r3, [sp, #72]	@ 0x48
10010d2e:	e5d6      	b.n	100108de <_vfprintf_r+0x476>
10010d30:	f003 0107 	and.w	r1, r3, #7
10010d34:	08db      	lsrs	r3, r3, #3
10010d36:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
10010d3a:	08d2      	lsrs	r2, r2, #3
10010d3c:	3130      	adds	r1, #48	@ 0x30
10010d3e:	ea53 0602 	orrs.w	r6, r3, r2
10010d42:	4628      	mov	r0, r5
10010d44:	f805 1d01 	strb.w	r1, [r5, #-1]!
10010d48:	d1f2      	bne.n	10010d30 <_vfprintf_r+0x8c8>
10010d4a:	07e6      	lsls	r6, r4, #31
10010d4c:	d5de      	bpl.n	10010d0c <_vfprintf_r+0x8a4>
10010d4e:	2930      	cmp	r1, #48	@ 0x30
10010d50:	d0dc      	beq.n	10010d0c <_vfprintf_r+0x8a4>
10010d52:	2330      	movs	r3, #48	@ 0x30
10010d54:	3802      	subs	r0, #2
10010d56:	f805 3c01 	strb.w	r3, [r5, #-1]
10010d5a:	ab5e      	add	r3, sp, #376	@ 0x178
10010d5c:	46a1      	mov	r9, r4
10010d5e:	eba3 0b00 	sub.w	fp, r3, r0
10010d62:	4605      	mov	r5, r0
10010d64:	e7d6      	b.n	10010d14 <_vfprintf_r+0x8ac>
10010d66:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10010d68:	9a06      	ldr	r2, [sp, #24]
10010d6a:	1a9e      	subs	r6, r3, r2
10010d6c:	2e00      	cmp	r6, #0
10010d6e:	f77f ad3a 	ble.w	100107e6 <_vfprintf_r+0x37e>
10010d72:	2e10      	cmp	r6, #16
10010d74:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010d76:	f341 80ab 	ble.w	10011ed0 <_vfprintf_r+0x1a68>
10010d7a:	4855      	ldr	r0, [pc, #340]	@ (10010ed0 <_vfprintf_r+0xa68>)
10010d7c:	f8dd a020 	ldr.w	sl, [sp, #32]
10010d80:	9015      	str	r0, [sp, #84]	@ 0x54
10010d82:	4621      	mov	r1, r4
10010d84:	2710      	movs	r7, #16
10010d86:	461a      	mov	r2, r3
10010d88:	4604      	mov	r4, r0
10010d8a:	e004      	b.n	10010d96 <_vfprintf_r+0x92e>
10010d8c:	3e10      	subs	r6, #16
10010d8e:	2e10      	cmp	r6, #16
10010d90:	f108 0808 	add.w	r8, r8, #8
10010d94:	dd16      	ble.n	10010dc4 <_vfprintf_r+0x95c>
10010d96:	3201      	adds	r2, #1
10010d98:	3110      	adds	r1, #16
10010d9a:	2a07      	cmp	r2, #7
10010d9c:	e9c8 4700 	strd	r4, r7, [r8]
10010da0:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10010da4:	ddf2      	ble.n	10010d8c <_vfprintf_r+0x924>
10010da6:	9907      	ldr	r1, [sp, #28]
10010da8:	aa32      	add	r2, sp, #200	@ 0xc8
10010daa:	4650      	mov	r0, sl
10010dac:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010db0:	f001 f9fe 	bl	100121b0 <__sprint_r>
10010db4:	2800      	cmp	r0, #0
10010db6:	f040 83f8 	bne.w	100115aa <_vfprintf_r+0x1142>
10010dba:	3e10      	subs	r6, #16
10010dbc:	2e10      	cmp	r6, #16
10010dbe:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10010dc2:	dce8      	bgt.n	10010d96 <_vfprintf_r+0x92e>
10010dc4:	460c      	mov	r4, r1
10010dc6:	4613      	mov	r3, r2
10010dc8:	3301      	adds	r3, #1
10010dca:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10010dcc:	f8c8 2000 	str.w	r2, [r8]
10010dd0:	4434      	add	r4, r6
10010dd2:	2b07      	cmp	r3, #7
10010dd4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10010dd8:	f8c8 6004 	str.w	r6, [r8, #4]
10010ddc:	f300 8314 	bgt.w	10011408 <_vfprintf_r+0xfa0>
10010de0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10010de2:	eba3 060b 	sub.w	r6, r3, fp
10010de6:	2e00      	cmp	r6, #0
10010de8:	f108 0808 	add.w	r8, r8, #8
10010dec:	f77f ad01 	ble.w	100107f2 <_vfprintf_r+0x38a>
10010df0:	4a37      	ldr	r2, [pc, #220]	@ (10010ed0 <_vfprintf_r+0xa68>)
10010df2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010df4:	9215      	str	r2, [sp, #84]	@ 0x54
10010df6:	2e10      	cmp	r6, #16
10010df8:	dd23      	ble.n	10010e42 <_vfprintf_r+0x9da>
10010dfa:	4622      	mov	r2, r4
10010dfc:	f04f 0a10 	mov.w	sl, #16
10010e00:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
10010e04:	e004      	b.n	10010e10 <_vfprintf_r+0x9a8>
10010e06:	3e10      	subs	r6, #16
10010e08:	2e10      	cmp	r6, #16
10010e0a:	f108 0808 	add.w	r8, r8, #8
10010e0e:	dd17      	ble.n	10010e40 <_vfprintf_r+0x9d8>
10010e10:	3301      	adds	r3, #1
10010e12:	492f      	ldr	r1, [pc, #188]	@ (10010ed0 <_vfprintf_r+0xa68>)
10010e14:	3210      	adds	r2, #16
10010e16:	2b07      	cmp	r3, #7
10010e18:	e9c8 1a00 	strd	r1, sl, [r8]
10010e1c:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
10010e20:	ddf1      	ble.n	10010e06 <_vfprintf_r+0x99e>
10010e22:	aa32      	add	r2, sp, #200	@ 0xc8
10010e24:	4621      	mov	r1, r4
10010e26:	4638      	mov	r0, r7
10010e28:	f001 f9c2 	bl	100121b0 <__sprint_r>
10010e2c:	2800      	cmp	r0, #0
10010e2e:	f47f ac72 	bne.w	10010716 <_vfprintf_r+0x2ae>
10010e32:	3e10      	subs	r6, #16
10010e34:	2e10      	cmp	r6, #16
10010e36:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
10010e3a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010e3e:	dce7      	bgt.n	10010e10 <_vfprintf_r+0x9a8>
10010e40:	4614      	mov	r4, r2
10010e42:	3301      	adds	r3, #1
10010e44:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10010e46:	f8c8 2000 	str.w	r2, [r8]
10010e4a:	4434      	add	r4, r6
10010e4c:	2b07      	cmp	r3, #7
10010e4e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10010e52:	f8c8 6004 	str.w	r6, [r8, #4]
10010e56:	f300 81aa 	bgt.w	100111ae <_vfprintf_r+0xd46>
10010e5a:	f108 0808 	add.w	r8, r8, #8
10010e5e:	e4c8      	b.n	100107f2 <_vfprintf_r+0x38a>
10010e60:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10010e64:	aa32      	add	r2, sp, #200	@ 0xc8
10010e66:	f001 f9a3 	bl	100121b0 <__sprint_r>
10010e6a:	2800      	cmp	r0, #0
10010e6c:	f43f ace7 	beq.w	1001083e <_vfprintf_r+0x3d6>
10010e70:	f8dd b020 	ldr.w	fp, [sp, #32]
10010e74:	e450      	b.n	10010718 <_vfprintf_r+0x2b0>
10010e76:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10010e78:	9919      	ldr	r1, [sp, #100]	@ 0x64
10010e7a:	441c      	add	r4, r3
10010e7c:	e9c8 1300 	strd	r1, r3, [r8]
10010e80:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010e82:	9434      	str	r4, [sp, #208]	@ 0xd0
10010e84:	3301      	adds	r3, #1
10010e86:	2b07      	cmp	r3, #7
10010e88:	9333      	str	r3, [sp, #204]	@ 0xcc
10010e8a:	f300 85bd 	bgt.w	10011a08 <_vfprintf_r+0x15a0>
10010e8e:	f108 0808 	add.w	r8, r8, #8
10010e92:	2a00      	cmp	r2, #0
10010e94:	f2c0 87ac 	blt.w	10011df0 <_vfprintf_r+0x1988>
10010e98:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10010e9a:	f8c8 5000 	str.w	r5, [r8]
10010e9e:	3301      	adds	r3, #1
10010ea0:	4414      	add	r4, r2
10010ea2:	2b07      	cmp	r3, #7
10010ea4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10010ea8:	f8c8 2004 	str.w	r2, [r8, #4]
10010eac:	f77f acb1 	ble.w	10010812 <_vfprintf_r+0x3aa>
10010eb0:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10010eb4:	aa32      	add	r2, sp, #200	@ 0xc8
10010eb6:	f001 f97b 	bl	100121b0 <__sprint_r>
10010eba:	2800      	cmp	r0, #0
10010ebc:	d1d8      	bne.n	10010e70 <_vfprintf_r+0xa08>
10010ebe:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10010ec0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010ec4:	e4a7      	b.n	10010816 <_vfprintf_r+0x3ae>
10010ec6:	bf00      	nop
10010ec8:	10019174 	.word	0x10019174
10010ecc:	100191a4 	.word	0x100191a4
10010ed0:	100191a8 	.word	0x100191a8
10010ed4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10010ed6:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10010ed8:	2b01      	cmp	r3, #1
10010eda:	f104 0401 	add.w	r4, r4, #1
10010ede:	f106 0601 	add.w	r6, r6, #1
10010ee2:	f108 0708 	add.w	r7, r8, #8
10010ee6:	f340 811d 	ble.w	10011124 <_vfprintf_r+0xcbc>
10010eea:	2301      	movs	r3, #1
10010eec:	2e07      	cmp	r6, #7
10010eee:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10010ef2:	f8c8 5000 	str.w	r5, [r8]
10010ef6:	f8c8 3004 	str.w	r3, [r8, #4]
10010efa:	f300 82e4 	bgt.w	100114c6 <_vfprintf_r+0x105e>
10010efe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10010f00:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10010f02:	3601      	adds	r6, #1
10010f04:	441c      	add	r4, r3
10010f06:	2e07      	cmp	r6, #7
10010f08:	e9c7 2300 	strd	r2, r3, [r7]
10010f0c:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10010f10:	f300 82cd 	bgt.w	100114ae <_vfprintf_r+0x1046>
10010f14:	3708      	adds	r7, #8
10010f16:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10010f18:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10010f1c:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
10010f20:	2200      	movs	r2, #0
10010f22:	2300      	movs	r3, #0
10010f24:	f007 fdda 	bl	10018adc <__aeabi_dcmpeq>
10010f28:	2800      	cmp	r0, #0
10010f2a:	f040 8115 	bne.w	10011158 <_vfprintf_r+0xcf0>
10010f2e:	3601      	adds	r6, #1
10010f30:	3501      	adds	r5, #1
10010f32:	4444      	add	r4, r8
10010f34:	2e07      	cmp	r6, #7
10010f36:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10010f3a:	603d      	str	r5, [r7, #0]
10010f3c:	f8c7 8004 	str.w	r8, [r7, #4]
10010f40:	f300 80fe 	bgt.w	10011140 <_vfprintf_r+0xcd8>
10010f44:	3708      	adds	r7, #8
10010f46:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10010f48:	607b      	str	r3, [r7, #4]
10010f4a:	3601      	adds	r6, #1
10010f4c:	441c      	add	r4, r3
10010f4e:	2e07      	cmp	r6, #7
10010f50:	ab2c      	add	r3, sp, #176	@ 0xb0
10010f52:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10010f56:	603b      	str	r3, [r7, #0]
10010f58:	dcaa      	bgt.n	10010eb0 <_vfprintf_r+0xa48>
10010f5a:	f107 0808 	add.w	r8, r7, #8
10010f5e:	e45a      	b.n	10010816 <_vfprintf_r+0x3ae>
10010f60:	464c      	mov	r4, r9
10010f62:	2b0a      	cmp	r3, #10
10010f64:	f172 0100 	sbcs.w	r1, r2, #0
10010f68:	f080 82b9 	bcs.w	100114de <_vfprintf_r+0x1076>
10010f6c:	3330      	adds	r3, #48	@ 0x30
10010f6e:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10010f72:	46a1      	mov	r9, r4
10010f74:	f04f 0b01 	mov.w	fp, #1
10010f78:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10010f7c:	e6ca      	b.n	10010d14 <_vfprintf_r+0x8ac>
10010f7e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10010f82:	aa32      	add	r2, sp, #200	@ 0xc8
10010f84:	9315      	str	r3, [sp, #84]	@ 0x54
10010f86:	f001 f913 	bl	100121b0 <__sprint_r>
10010f8a:	2800      	cmp	r0, #0
10010f8c:	f47f af70 	bne.w	10010e70 <_vfprintf_r+0xa08>
10010f90:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10010f92:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10010f94:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010f98:	e410      	b.n	100107bc <_vfprintf_r+0x354>
10010f9a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10010f9e:	aa32      	add	r2, sp, #200	@ 0xc8
10010fa0:	f001 f906 	bl	100121b0 <__sprint_r>
10010fa4:	2800      	cmp	r0, #0
10010fa6:	f47f af63 	bne.w	10010e70 <_vfprintf_r+0xa08>
10010faa:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10010fac:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010fb0:	e416      	b.n	100107e0 <_vfprintf_r+0x378>
10010fb2:	2d10      	cmp	r5, #16
10010fb4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10010fb6:	f340 8750 	ble.w	10011e5a <_vfprintf_r+0x19f2>
10010fba:	4fbb      	ldr	r7, [pc, #748]	@ (100112a8 <_vfprintf_r+0xe40>)
10010fbc:	9715      	str	r7, [sp, #84]	@ 0x54
10010fbe:	e9dd a907 	ldrd	sl, r9, [sp, #28]
10010fc2:	2610      	movs	r6, #16
10010fc4:	e004      	b.n	10010fd0 <_vfprintf_r+0xb68>
10010fc6:	3d10      	subs	r5, #16
10010fc8:	2d10      	cmp	r5, #16
10010fca:	f108 0808 	add.w	r8, r8, #8
10010fce:	dd16      	ble.n	10010ffe <_vfprintf_r+0xb96>
10010fd0:	3301      	adds	r3, #1
10010fd2:	3410      	adds	r4, #16
10010fd4:	2b07      	cmp	r3, #7
10010fd6:	e9c8 7600 	strd	r7, r6, [r8]
10010fda:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10010fde:	ddf2      	ble.n	10010fc6 <_vfprintf_r+0xb5e>
10010fe0:	aa32      	add	r2, sp, #200	@ 0xc8
10010fe2:	4651      	mov	r1, sl
10010fe4:	4648      	mov	r0, r9
10010fe6:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10010fea:	f001 f8e1 	bl	100121b0 <__sprint_r>
10010fee:	2800      	cmp	r0, #0
10010ff0:	f040 82f5 	bne.w	100115de <_vfprintf_r+0x1176>
10010ff4:	3d10      	subs	r5, #16
10010ff6:	2d10      	cmp	r5, #16
10010ff8:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10010ffc:	dce8      	bgt.n	10010fd0 <_vfprintf_r+0xb68>
10010ffe:	3301      	adds	r3, #1
10011000:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10011002:	442c      	add	r4, r5
10011004:	2b07      	cmp	r3, #7
10011006:	e9c8 2500 	strd	r2, r5, [r8]
1001100a:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001100e:	f77f ac0b 	ble.w	10010828 <_vfprintf_r+0x3c0>
10011012:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011016:	aa32      	add	r2, sp, #200	@ 0xc8
10011018:	f001 f8ca 	bl	100121b0 <__sprint_r>
1001101c:	2800      	cmp	r0, #0
1001101e:	f47f af27 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011022:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011024:	e400      	b.n	10010828 <_vfprintf_r+0x3c0>
10011026:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10011028:	2a00      	cmp	r2, #0
1001102a:	f340 80fd 	ble.w	10011228 <_vfprintf_r+0xdc0>
1001102e:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10011032:	429f      	cmp	r7, r3
10011034:	bfa8      	it	ge
10011036:	461f      	movge	r7, r3
10011038:	2f00      	cmp	r7, #0
1001103a:	eb05 0b03 	add.w	fp, r5, r3
1001103e:	dd0b      	ble.n	10011058 <_vfprintf_r+0xbf0>
10011040:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011042:	3301      	adds	r3, #1
10011044:	443c      	add	r4, r7
10011046:	2b07      	cmp	r3, #7
10011048:	e9c8 5700 	strd	r5, r7, [r8]
1001104c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001104e:	9333      	str	r3, [sp, #204]	@ 0xcc
10011050:	f300 866d 	bgt.w	10011d2e <_vfprintf_r+0x18c6>
10011054:	f108 0808 	add.w	r8, r8, #8
10011058:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001105a:	2f00      	cmp	r7, #0
1001105c:	bfa8      	it	ge
1001105e:	1bf6      	subge	r6, r6, r7
10011060:	2e00      	cmp	r6, #0
10011062:	f300 8345 	bgt.w	100116f0 <_vfprintf_r+0x1288>
10011066:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10011068:	f419 6f80 	tst.w	r9, #1024	@ 0x400
1001106c:	442b      	add	r3, r5
1001106e:	469a      	mov	sl, r3
10011070:	f040 8578 	bne.w	10011b64 <_vfprintf_r+0x16fc>
10011074:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10011076:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011078:	429d      	cmp	r5, r3
1001107a:	db03      	blt.n	10011084 <_vfprintf_r+0xc1c>
1001107c:	f019 0f01 	tst.w	r9, #1
10011080:	f000 8402 	beq.w	10011888 <_vfprintf_r+0x1420>
10011084:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10011086:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10011088:	441c      	add	r4, r3
1001108a:	e9c8 2300 	strd	r2, r3, [r8]
1001108e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011090:	9434      	str	r4, [sp, #208]	@ 0xd0
10011092:	3301      	adds	r3, #1
10011094:	2b07      	cmp	r3, #7
10011096:	9333      	str	r3, [sp, #204]	@ 0xcc
10011098:	f300 8658 	bgt.w	10011d4c <_vfprintf_r+0x18e4>
1001109c:	f108 0808 	add.w	r8, r8, #8
100110a0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100110a2:	ebab 060a 	sub.w	r6, fp, sl
100110a6:	1b5d      	subs	r5, r3, r5
100110a8:	42ae      	cmp	r6, r5
100110aa:	bfa8      	it	ge
100110ac:	462e      	movge	r6, r5
100110ae:	2e00      	cmp	r6, #0
100110b0:	dd0d      	ble.n	100110ce <_vfprintf_r+0xc66>
100110b2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100110b4:	f8c8 a000 	str.w	sl, [r8]
100110b8:	3301      	adds	r3, #1
100110ba:	4434      	add	r4, r6
100110bc:	2b07      	cmp	r3, #7
100110be:	f8c8 6004 	str.w	r6, [r8, #4]
100110c2:	9434      	str	r4, [sp, #208]	@ 0xd0
100110c4:	9333      	str	r3, [sp, #204]	@ 0xcc
100110c6:	f300 8653 	bgt.w	10011d70 <_vfprintf_r+0x1908>
100110ca:	f108 0808 	add.w	r8, r8, #8
100110ce:	2e00      	cmp	r6, #0
100110d0:	bfa8      	it	ge
100110d2:	1bad      	subge	r5, r5, r6
100110d4:	2d00      	cmp	r5, #0
100110d6:	f77f ab9e 	ble.w	10010816 <_vfprintf_r+0x3ae>
100110da:	2d10      	cmp	r5, #16
100110dc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100110de:	f340 82d9 	ble.w	10011694 <_vfprintf_r+0x122c>
100110e2:	4f72      	ldr	r7, [pc, #456]	@ (100112ac <_vfprintf_r+0xe44>)
100110e4:	9715      	str	r7, [sp, #84]	@ 0x54
100110e6:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
100110ea:	2610      	movs	r6, #16
100110ec:	e005      	b.n	100110fa <_vfprintf_r+0xc92>
100110ee:	f108 0808 	add.w	r8, r8, #8
100110f2:	3d10      	subs	r5, #16
100110f4:	2d10      	cmp	r5, #16
100110f6:	f340 82cf 	ble.w	10011698 <_vfprintf_r+0x1230>
100110fa:	3301      	adds	r3, #1
100110fc:	3410      	adds	r4, #16
100110fe:	2b07      	cmp	r3, #7
10011100:	e9c8 7600 	strd	r7, r6, [r8]
10011104:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011108:	ddf1      	ble.n	100110ee <_vfprintf_r+0xc86>
1001110a:	aa32      	add	r2, sp, #200	@ 0xc8
1001110c:	4651      	mov	r1, sl
1001110e:	4658      	mov	r0, fp
10011110:	f001 f84e 	bl	100121b0 <__sprint_r>
10011114:	2800      	cmp	r0, #0
10011116:	f47f aaff 	bne.w	10010718 <_vfprintf_r+0x2b0>
1001111a:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001111e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011122:	e7e6      	b.n	100110f2 <_vfprintf_r+0xc8a>
10011124:	f019 0f01 	tst.w	r9, #1
10011128:	f47f aedf 	bne.w	10010eea <_vfprintf_r+0xa82>
1001112c:	2301      	movs	r3, #1
1001112e:	2e07      	cmp	r6, #7
10011130:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10011134:	f8c8 5000 	str.w	r5, [r8]
10011138:	f8c8 3004 	str.w	r3, [r8, #4]
1001113c:	f77f af03 	ble.w	10010f46 <_vfprintf_r+0xade>
10011140:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011144:	aa32      	add	r2, sp, #200	@ 0xc8
10011146:	f001 f833 	bl	100121b0 <__sprint_r>
1001114a:	2800      	cmp	r0, #0
1001114c:	f47f ae90 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011150:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10011154:	af35      	add	r7, sp, #212	@ 0xd4
10011156:	e6f6      	b.n	10010f46 <_vfprintf_r+0xade>
10011158:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001115a:	2b01      	cmp	r3, #1
1001115c:	f77f aef3 	ble.w	10010f46 <_vfprintf_r+0xade>
10011160:	2b11      	cmp	r3, #17
10011162:	4b52      	ldr	r3, [pc, #328]	@ (100112ac <_vfprintf_r+0xe44>)
10011164:	9315      	str	r3, [sp, #84]	@ 0x54
10011166:	f340 82b7 	ble.w	100116d8 <_vfprintf_r+0x1270>
1001116a:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
1001116e:	e9dd ba07 	ldrd	fp, sl, [sp, #28]
10011172:	2510      	movs	r5, #16
10011174:	4699      	mov	r9, r3
10011176:	e006      	b.n	10011186 <_vfprintf_r+0xd1e>
10011178:	3708      	adds	r7, #8
1001117a:	f1a8 0810 	sub.w	r8, r8, #16
1001117e:	f1b8 0f10 	cmp.w	r8, #16
10011182:	f340 82a7 	ble.w	100116d4 <_vfprintf_r+0x126c>
10011186:	3601      	adds	r6, #1
10011188:	3410      	adds	r4, #16
1001118a:	2e07      	cmp	r6, #7
1001118c:	e9c7 9500 	strd	r9, r5, [r7]
10011190:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10011194:	ddf0      	ble.n	10011178 <_vfprintf_r+0xd10>
10011196:	aa32      	add	r2, sp, #200	@ 0xc8
10011198:	4659      	mov	r1, fp
1001119a:	4650      	mov	r0, sl
1001119c:	f001 f808 	bl	100121b0 <__sprint_r>
100111a0:	2800      	cmp	r0, #0
100111a2:	f040 8202 	bne.w	100115aa <_vfprintf_r+0x1142>
100111a6:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100111aa:	af35      	add	r7, sp, #212	@ 0xd4
100111ac:	e7e5      	b.n	1001117a <_vfprintf_r+0xd12>
100111ae:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100111b2:	aa32      	add	r2, sp, #200	@ 0xc8
100111b4:	f000 fffc 	bl	100121b0 <__sprint_r>
100111b8:	2800      	cmp	r0, #0
100111ba:	f47f ae59 	bne.w	10010e70 <_vfprintf_r+0xa08>
100111be:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100111c0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100111c4:	f7ff bb15 	b.w	100107f2 <_vfprintf_r+0x38a>
100111c8:	990d      	ldr	r1, [sp, #52]	@ 0x34
100111ca:	f851 3b04 	ldr.w	r3, [r1], #4
100111ce:	910d      	str	r1, [sp, #52]	@ 0x34
100111d0:	f014 0110 	ands.w	r1, r4, #16
100111d4:	d155      	bne.n	10011282 <_vfprintf_r+0xe1a>
100111d6:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
100111da:	d04d      	beq.n	10011278 <_vfprintf_r+0xe10>
100111dc:	460a      	mov	r2, r1
100111de:	b29b      	uxth	r3, r3
100111e0:	2101      	movs	r1, #1
100111e2:	e4b7      	b.n	10010b54 <_vfprintf_r+0x6ec>
100111e4:	990d      	ldr	r1, [sp, #52]	@ 0x34
100111e6:	f851 3b04 	ldr.w	r3, [r1], #4
100111ea:	910d      	str	r1, [sp, #52]	@ 0x34
100111ec:	f019 0110 	ands.w	r1, r9, #16
100111f0:	f47f acad 	bne.w	10010b4e <_vfprintf_r+0x6e6>
100111f4:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
100111f8:	f000 82a7 	beq.w	1001174a <_vfprintf_r+0x12e2>
100111fc:	b29b      	uxth	r3, r3
100111fe:	460a      	mov	r2, r1
10011200:	e4a5      	b.n	10010b4e <_vfprintf_r+0x6e6>
10011202:	9d07      	ldr	r5, [sp, #28]
10011204:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10011206:	f002 fff3 	bl	100141f0 <__retarget_lock_acquire_recursive>
1001120a:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
1001120e:	f7ff b951 	b.w	100104b4 <_vfprintf_r+0x4c>
10011212:	f019 0f01 	tst.w	r9, #1
10011216:	f43f aafe 	beq.w	10010816 <_vfprintf_r+0x3ae>
1001121a:	e52b      	b.n	10010c74 <_vfprintf_r+0x80c>
1001121c:	930d      	str	r3, [sp, #52]	@ 0x34
1001121e:	7823      	ldrb	r3, [r4, #0]
10011220:	f7ff b99a 	b.w	10010558 <_vfprintf_r+0xf0>
10011224:	ad5e      	add	r5, sp, #376	@ 0x178
10011226:	e575      	b.n	10010d14 <_vfprintf_r+0x8ac>
10011228:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001122a:	4921      	ldr	r1, [pc, #132]	@ (100112b0 <_vfprintf_r+0xe48>)
1001122c:	f8c8 1000 	str.w	r1, [r8]
10011230:	3301      	adds	r3, #1
10011232:	3401      	adds	r4, #1
10011234:	2101      	movs	r1, #1
10011236:	2b07      	cmp	r3, #7
10011238:	9434      	str	r4, [sp, #208]	@ 0xd0
1001123a:	9333      	str	r3, [sp, #204]	@ 0xcc
1001123c:	f8c8 1004 	str.w	r1, [r8, #4]
10011240:	f300 854f 	bgt.w	10011ce2 <_vfprintf_r+0x187a>
10011244:	f108 0808 	add.w	r8, r8, #8
10011248:	2a00      	cmp	r2, #0
1001124a:	f47f ae14 	bne.w	10010e76 <_vfprintf_r+0xa0e>
1001124e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10011250:	f009 0301 	and.w	r3, r9, #1
10011254:	4313      	orrs	r3, r2
10011256:	f43f aade 	beq.w	10010816 <_vfprintf_r+0x3ae>
1001125a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001125c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001125e:	441c      	add	r4, r3
10011260:	e9c8 2300 	strd	r2, r3, [r8]
10011264:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011266:	9434      	str	r4, [sp, #208]	@ 0xd0
10011268:	3301      	adds	r3, #1
1001126a:	2b07      	cmp	r3, #7
1001126c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001126e:	f300 83cb 	bgt.w	10011a08 <_vfprintf_r+0x15a0>
10011272:	f108 0808 	add.w	r8, r8, #8
10011276:	e60f      	b.n	10010e98 <_vfprintf_r+0xa30>
10011278:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
1001127c:	bf1c      	itt	ne
1001127e:	b2db      	uxtbne	r3, r3
10011280:	4602      	movne	r2, r0
10011282:	2101      	movs	r1, #1
10011284:	e466      	b.n	10010b54 <_vfprintf_r+0x6ec>
10011286:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001128a:	f040 8305 	bne.w	10011898 <_vfprintf_r+0x1430>
1001128e:	17da      	asrs	r2, r3, #31
10011290:	4611      	mov	r1, r2
10011292:	2900      	cmp	r1, #0
10011294:	f6bf abdc 	bge.w	10010a50 <_vfprintf_r+0x5e8>
10011298:	425b      	negs	r3, r3
1001129a:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
1001129e:	464c      	mov	r4, r9
100112a0:	202d      	movs	r0, #45	@ 0x2d
100112a2:	2101      	movs	r1, #1
100112a4:	e457      	b.n	10010b56 <_vfprintf_r+0x6ee>
100112a6:	bf00      	nop
100112a8:	100191b8 	.word	0x100191b8
100112ac:	100191a8 	.word	0x100191a8
100112b0:	100191a4 	.word	0x100191a4
100112b4:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
100112b6:	7823      	ldrb	r3, [r4, #0]
100112b8:	2a00      	cmp	r2, #0
100112ba:	f43f a94d 	beq.w	10010558 <_vfprintf_r+0xf0>
100112be:	7812      	ldrb	r2, [r2, #0]
100112c0:	2a00      	cmp	r2, #0
100112c2:	f43f a949 	beq.w	10010558 <_vfprintf_r+0xf0>
100112c6:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
100112ca:	f7ff b945 	b.w	10010558 <_vfprintf_r+0xf0>
100112ce:	f019 0f10 	tst.w	r9, #16
100112d2:	f040 81f9 	bne.w	100116c8 <_vfprintf_r+0x1260>
100112d6:	f019 0f40 	tst.w	r9, #64	@ 0x40
100112da:	f040 82e3 	bne.w	100118a4 <_vfprintf_r+0x143c>
100112de:	f419 7f00 	tst.w	r9, #512	@ 0x200
100112e2:	f000 81f1 	beq.w	100116c8 <_vfprintf_r+0x1260>
100112e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100112e8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100112ea:	681b      	ldr	r3, [r3, #0]
100112ec:	701a      	strb	r2, [r3, #0]
100112ee:	e49b      	b.n	10010c28 <_vfprintf_r+0x7c0>
100112f0:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100112f4:	4602      	mov	r2, r0
100112f6:	460b      	mov	r3, r1
100112f8:	f007 fc22 	bl	10018b40 <__aeabi_dcmpun>
100112fc:	2800      	cmp	r0, #0
100112fe:	f040 8636 	bne.w	10011f6e <_vfprintf_r+0x1b06>
10011302:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011304:	2b61      	cmp	r3, #97	@ 0x61
10011306:	f000 851f 	beq.w	10011d48 <_vfprintf_r+0x18e0>
1001130a:	2b41      	cmp	r3, #65	@ 0x41
1001130c:	f000 82e1 	beq.w	100118d2 <_vfprintf_r+0x146a>
10011310:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011312:	3301      	adds	r3, #1
10011314:	f000 8615 	beq.w	10011f42 <_vfprintf_r+0x1ada>
10011318:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001131a:	f023 0320 	bic.w	r3, r3, #32
1001131e:	2b47      	cmp	r3, #71	@ 0x47
10011320:	d104      	bne.n	1001132c <_vfprintf_r+0xec4>
10011322:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011324:	2b00      	cmp	r3, #0
10011326:	bf08      	it	eq
10011328:	2301      	moveq	r3, #1
1001132a:	9309      	str	r3, [sp, #36]	@ 0x24
1001132c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10011330:	f449 7280 	orr.w	r2, r9, #256	@ 0x100
10011334:	2900      	cmp	r1, #0
10011336:	9215      	str	r2, [sp, #84]	@ 0x54
10011338:	f8cd 9018 	str.w	r9, [sp, #24]
1001133c:	f04f 0300 	mov.w	r3, #0
10011340:	f2c0 84dd 	blt.w	10011cfe <_vfprintf_r+0x1896>
10011344:	e9cd 0124 	strd	r0, r1, [sp, #144]	@ 0x90
10011348:	931f      	str	r3, [sp, #124]	@ 0x7c
1001134a:	930c      	str	r3, [sp, #48]	@ 0x30
1001134c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001134e:	3b41      	subs	r3, #65	@ 0x41
10011350:	2b25      	cmp	r3, #37	@ 0x25
10011352:	f200 8201 	bhi.w	10011758 <_vfprintf_r+0x12f0>
10011356:	e8df f013 	tbh	[pc, r3, lsl #1]
1001135a:	0372      	.short	0x0372
1001135c:	01ff01ff 	.word	0x01ff01ff
10011360:	036b01ff 	.word	0x036b01ff
10011364:	01ff036f 	.word	0x01ff036f
10011368:	01ff01ff 	.word	0x01ff01ff
1001136c:	01ff01ff 	.word	0x01ff01ff
10011370:	01ff01ff 	.word	0x01ff01ff
10011374:	01ff01ff 	.word	0x01ff01ff
10011378:	01ff01ff 	.word	0x01ff01ff
1001137c:	01ff01ff 	.word	0x01ff01ff
10011380:	01ff01ff 	.word	0x01ff01ff
10011384:	01ff01ff 	.word	0x01ff01ff
10011388:	01ff01ff 	.word	0x01ff01ff
1001138c:	01ff01ff 	.word	0x01ff01ff
10011390:	01ff01ff 	.word	0x01ff01ff
10011394:	01ff01ff 	.word	0x01ff01ff
10011398:	01ff01ff 	.word	0x01ff01ff
1001139c:	01ff01ff 	.word	0x01ff01ff
100113a0:	036b01ff 	.word	0x036b01ff
100113a4:	036f      	.short	0x036f
100113a6:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100113aa:	4bc2      	ldr	r3, [pc, #776]	@ (100116b4 <_vfprintf_r+0x124c>)
100113ac:	931a      	str	r3, [sp, #104]	@ 0x68
100113ae:	f019 0220 	ands.w	r2, r9, #32
100113b2:	d06a      	beq.n	1001148a <_vfprintf_r+0x1022>
100113b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100113b6:	3307      	adds	r3, #7
100113b8:	f023 0307 	bic.w	r3, r3, #7
100113bc:	4619      	mov	r1, r3
100113be:	685a      	ldr	r2, [r3, #4]
100113c0:	f851 3b08 	ldr.w	r3, [r1], #8
100113c4:	910d      	str	r1, [sp, #52]	@ 0x34
100113c6:	f019 0f01 	tst.w	r9, #1
100113ca:	d00a      	beq.n	100113e2 <_vfprintf_r+0xf7a>
100113cc:	ea53 0102 	orrs.w	r1, r3, r2
100113d0:	d007      	beq.n	100113e2 <_vfprintf_r+0xf7a>
100113d2:	990e      	ldr	r1, [sp, #56]	@ 0x38
100113d4:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
100113d8:	2130      	movs	r1, #48	@ 0x30
100113da:	f049 0902 	orr.w	r9, r9, #2
100113de:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
100113e2:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
100113e6:	2102      	movs	r1, #2
100113e8:	f7ff bbb4 	b.w	10010b54 <_vfprintf_r+0x6ec>
100113ec:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100113f0:	464c      	mov	r4, r9
100113f2:	f7ff bbd0 	b.w	10010b96 <_vfprintf_r+0x72e>
100113f6:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100113fa:	f7ff bb9b 	b.w	10010b34 <_vfprintf_r+0x6cc>
100113fe:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011402:	4bad      	ldr	r3, [pc, #692]	@ (100116b8 <_vfprintf_r+0x1250>)
10011404:	931a      	str	r3, [sp, #104]	@ 0x68
10011406:	e7d2      	b.n	100113ae <_vfprintf_r+0xf46>
10011408:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001140c:	aa32      	add	r2, sp, #200	@ 0xc8
1001140e:	f000 fecf 	bl	100121b0 <__sprint_r>
10011412:	2800      	cmp	r0, #0
10011414:	f47f ad2c 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011418:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001141a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001141e:	f7ff b9e2 	b.w	100107e6 <_vfprintf_r+0x37e>
10011422:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011426:	aa32      	add	r2, sp, #200	@ 0xc8
10011428:	f000 fec2 	bl	100121b0 <__sprint_r>
1001142c:	2800      	cmp	r0, #0
1001142e:	f47f ad1f 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011432:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011434:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011438:	e42a      	b.n	10010c90 <_vfprintf_r+0x828>
1001143a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001143c:	950c      	str	r5, [sp, #48]	@ 0x30
1001143e:	2b06      	cmp	r3, #6
10011440:	4629      	mov	r1, r5
10011442:	bf28      	it	cs
10011444:	2306      	movcs	r3, #6
10011446:	9509      	str	r5, [sp, #36]	@ 0x24
10011448:	462a      	mov	r2, r5
1001144a:	9306      	str	r3, [sp, #24]
1001144c:	4d9b      	ldr	r5, [pc, #620]	@ (100116bc <_vfprintf_r+0x1254>)
1001144e:	960d      	str	r6, [sp, #52]	@ 0x34
10011450:	469b      	mov	fp, r3
10011452:	9114      	str	r1, [sp, #80]	@ 0x50
10011454:	9110      	str	r1, [sp, #64]	@ 0x40
10011456:	9112      	str	r1, [sp, #72]	@ 0x48
10011458:	f7ff ba41 	b.w	100108de <_vfprintf_r+0x476>
1001145c:	2208      	movs	r2, #8
1001145e:	2100      	movs	r1, #0
10011460:	a830      	add	r0, sp, #192	@ 0xc0
10011462:	f002 fdcd 	bl	10014000 <memset>
10011466:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011468:	9808      	ldr	r0, [sp, #32]
1001146a:	681a      	ldr	r2, [r3, #0]
1001146c:	ad45      	add	r5, sp, #276	@ 0x114
1001146e:	ab30      	add	r3, sp, #192	@ 0xc0
10011470:	4629      	mov	r1, r5
10011472:	f003 f831 	bl	100144d8 <_wcrtomb_r>
10011476:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001147a:	4683      	mov	fp, r0
1001147c:	f000 8542 	beq.w	10011f04 <_vfprintf_r+0x1a9c>
10011480:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10011484:	9306      	str	r3, [sp, #24]
10011486:	f7ff ba94 	b.w	100109b2 <_vfprintf_r+0x54a>
1001148a:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001148c:	f851 3b04 	ldr.w	r3, [r1], #4
10011490:	910d      	str	r1, [sp, #52]	@ 0x34
10011492:	f019 0110 	ands.w	r1, r9, #16
10011496:	d196      	bne.n	100113c6 <_vfprintf_r+0xf5e>
10011498:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001149c:	f000 814f 	beq.w	1001173e <_vfprintf_r+0x12d6>
100114a0:	b29b      	uxth	r3, r3
100114a2:	460a      	mov	r2, r1
100114a4:	e78f      	b.n	100113c6 <_vfprintf_r+0xf5e>
100114a6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
100114aa:	ad5e      	add	r5, sp, #376	@ 0x178
100114ac:	e432      	b.n	10010d14 <_vfprintf_r+0x8ac>
100114ae:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100114b2:	aa32      	add	r2, sp, #200	@ 0xc8
100114b4:	f000 fe7c 	bl	100121b0 <__sprint_r>
100114b8:	2800      	cmp	r0, #0
100114ba:	f47f acd9 	bne.w	10010e70 <_vfprintf_r+0xa08>
100114be:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100114c2:	af35      	add	r7, sp, #212	@ 0xd4
100114c4:	e527      	b.n	10010f16 <_vfprintf_r+0xaae>
100114c6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100114ca:	aa32      	add	r2, sp, #200	@ 0xc8
100114cc:	f000 fe70 	bl	100121b0 <__sprint_r>
100114d0:	2800      	cmp	r0, #0
100114d2:	f47f accd 	bne.w	10010e70 <_vfprintf_r+0xa08>
100114d6:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100114da:	af35      	add	r7, sp, #212	@ 0xd4
100114dc:	e50f      	b.n	10010efe <_vfprintf_r+0xa96>
100114de:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
100114e2:	2100      	movs	r1, #0
100114e4:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
100114e8:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 100116c4 <_vfprintf_r+0x125c>
100114ec:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
100114f0:	9406      	str	r4, [sp, #24]
100114f2:	ad5e      	add	r5, sp, #376	@ 0x178
100114f4:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
100114f8:	2705      	movs	r7, #5
100114fa:	468c      	mov	ip, r1
100114fc:	465e      	mov	r6, fp
100114fe:	e005      	b.n	1001150c <_vfprintf_r+0x10a4>
10011500:	2b0a      	cmp	r3, #10
10011502:	f172 0200 	sbcs.w	r2, r2, #0
10011506:	d333      	bcc.n	10011570 <_vfprintf_r+0x1108>
10011508:	465b      	mov	r3, fp
1001150a:	4622      	mov	r2, r4
1001150c:	1899      	adds	r1, r3, r2
1001150e:	f141 0100 	adc.w	r1, r1, #0
10011512:	fba9 0401 	umull	r0, r4, r9, r1
10011516:	f024 0003 	bic.w	r0, r4, #3
1001151a:	eb00 0094 	add.w	r0, r0, r4, lsr #2
1001151e:	1a09      	subs	r1, r1, r0
10011520:	1a58      	subs	r0, r3, r1
10011522:	f162 0e00 	sbc.w	lr, r2, #0
10011526:	fb0a f400 	mul.w	r4, sl, r0
1001152a:	fba0 b009 	umull	fp, r0, r0, r9
1001152e:	fb09 440e 	mla	r4, r9, lr, r4
10011532:	f00b 0e01 	and.w	lr, fp, #1
10011536:	4404      	add	r4, r0
10011538:	fbae 0e07 	umull	r0, lr, lr, r7
1001153c:	1840      	adds	r0, r0, r1
1001153e:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
10011542:	3030      	adds	r0, #48	@ 0x30
10011544:	f805 0c01 	strb.w	r0, [r5, #-1]
10011548:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
1001154c:	f10c 0c01 	add.w	ip, ip, #1
10011550:	3d01      	subs	r5, #1
10011552:	0864      	lsrs	r4, r4, #1
10011554:	2e00      	cmp	r6, #0
10011556:	d0d3      	beq.n	10011500 <_vfprintf_r+0x1098>
10011558:	f898 1000 	ldrb.w	r1, [r8]
1001155c:	458c      	cmp	ip, r1
1001155e:	d1cf      	bne.n	10011500 <_vfprintf_r+0x1098>
10011560:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10011564:	d0cc      	beq.n	10011500 <_vfprintf_r+0x1098>
10011566:	2b0a      	cmp	r3, #10
10011568:	f172 0200 	sbcs.w	r2, r2, #0
1001156c:	f080 82c3 	bcs.w	10011af6 <_vfprintf_r+0x168e>
10011570:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
10011574:	9c06      	ldr	r4, [sp, #24]
10011576:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
1001157a:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
1001157e:	f7ff bbc5 	b.w	10010d0c <_vfprintf_r+0x8a4>
10011582:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011586:	aa32      	add	r2, sp, #200	@ 0xc8
10011588:	9315      	str	r3, [sp, #84]	@ 0x54
1001158a:	f000 fe11 	bl	100121b0 <__sprint_r>
1001158e:	2800      	cmp	r0, #0
10011590:	f47f ac6e 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011594:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011598:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001159a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001159c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100115a0:	f7ff b8fa 	b.w	10010798 <_vfprintf_r+0x330>
100115a4:	46a3      	mov	fp, r4
100115a6:	f7ff b8b7 	b.w	10010718 <_vfprintf_r+0x2b0>
100115aa:	46d3      	mov	fp, sl
100115ac:	f7ff b8b4 	b.w	10010718 <_vfprintf_r+0x2b0>
100115b0:	4658      	mov	r0, fp
100115b2:	f002 fa09 	bl	100139c8 <__sinit>
100115b6:	f7fe bf74 	b.w	100104a2 <_vfprintf_r+0x3a>
100115ba:	2901      	cmp	r1, #1
100115bc:	464c      	mov	r4, r9
100115be:	f47f ab95 	bne.w	10010cec <_vfprintf_r+0x884>
100115c2:	e4d3      	b.n	10010f6c <_vfprintf_r+0xb04>
100115c4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100115c8:	aa32      	add	r2, sp, #200	@ 0xc8
100115ca:	f000 fdf1 	bl	100121b0 <__sprint_r>
100115ce:	2800      	cmp	r0, #0
100115d0:	f47f ac4e 	bne.w	10010e70 <_vfprintf_r+0xa08>
100115d4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100115d6:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100115da:	f7ff bb46 	b.w	10010c6a <_vfprintf_r+0x802>
100115de:	46cb      	mov	fp, r9
100115e0:	f7ff b89a 	b.w	10010718 <_vfprintf_r+0x2b0>
100115e4:	af30      	add	r7, sp, #192	@ 0xc0
100115e6:	2208      	movs	r2, #8
100115e8:	2100      	movs	r1, #0
100115ea:	4638      	mov	r0, r7
100115ec:	952b      	str	r5, [sp, #172]	@ 0xac
100115ee:	f002 fd07 	bl	10014000 <memset>
100115f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100115f4:	1c58      	adds	r0, r3, #1
100115f6:	f000 8270 	beq.w	10011ada <_vfprintf_r+0x1672>
100115fa:	2400      	movs	r4, #0
100115fc:	f8cd 9018 	str.w	r9, [sp, #24]
10011600:	46a3      	mov	fp, r4
10011602:	f8dd 9020 	ldr.w	r9, [sp, #32]
10011606:	469a      	mov	sl, r3
10011608:	e00c      	b.n	10011624 <_vfprintf_r+0x11bc>
1001160a:	a945      	add	r1, sp, #276	@ 0x114
1001160c:	4648      	mov	r0, r9
1001160e:	f002 ff63 	bl	100144d8 <_wcrtomb_r>
10011612:	1c41      	adds	r1, r0, #1
10011614:	4458      	add	r0, fp
10011616:	f000 8475 	beq.w	10011f04 <_vfprintf_r+0x1a9c>
1001161a:	4550      	cmp	r0, sl
1001161c:	dc08      	bgt.n	10011630 <_vfprintf_r+0x11c8>
1001161e:	f000 84c2 	beq.w	10011fa6 <_vfprintf_r+0x1b3e>
10011622:	4683      	mov	fp, r0
10011624:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
10011626:	5912      	ldr	r2, [r2, r4]
10011628:	463b      	mov	r3, r7
1001162a:	3404      	adds	r4, #4
1001162c:	2a00      	cmp	r2, #0
1001162e:	d1ec      	bne.n	1001160a <_vfprintf_r+0x11a2>
10011630:	f8dd 9018 	ldr.w	r9, [sp, #24]
10011634:	f1bb 0f00 	cmp.w	fp, #0
10011638:	f000 8342 	beq.w	10011cc0 <_vfprintf_r+0x1858>
1001163c:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
10011640:	f340 83f9 	ble.w	10011e36 <_vfprintf_r+0x19ce>
10011644:	9808      	ldr	r0, [sp, #32]
10011646:	f10b 0101 	add.w	r1, fp, #1
1001164a:	f7fe fc3d 	bl	1000fec8 <_malloc_r>
1001164e:	4605      	mov	r5, r0
10011650:	2800      	cmp	r0, #0
10011652:	f000 8457 	beq.w	10011f04 <_vfprintf_r+0x1a9c>
10011656:	900c      	str	r0, [sp, #48]	@ 0x30
10011658:	2208      	movs	r2, #8
1001165a:	2100      	movs	r1, #0
1001165c:	4638      	mov	r0, r7
1001165e:	f002 fccf 	bl	10014000 <memset>
10011662:	9808      	ldr	r0, [sp, #32]
10011664:	9700      	str	r7, [sp, #0]
10011666:	465b      	mov	r3, fp
10011668:	aa2b      	add	r2, sp, #172	@ 0xac
1001166a:	4629      	mov	r1, r5
1001166c:	f002 ff5a 	bl	10014524 <_wcsrtombs_r>
10011670:	4583      	cmp	fp, r0
10011672:	f040 8517 	bne.w	100120a4 <_vfprintf_r+0x1c3c>
10011676:	2300      	movs	r3, #0
10011678:	f805 300b 	strb.w	r3, [r5, fp]
1001167c:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10011680:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011684:	960d      	str	r6, [sp, #52]	@ 0x34
10011686:	9309      	str	r3, [sp, #36]	@ 0x24
10011688:	9106      	str	r1, [sp, #24]
1001168a:	9314      	str	r3, [sp, #80]	@ 0x50
1001168c:	9310      	str	r3, [sp, #64]	@ 0x40
1001168e:	9312      	str	r3, [sp, #72]	@ 0x48
10011690:	f7ff b925 	b.w	100108de <_vfprintf_r+0x476>
10011694:	4a0a      	ldr	r2, [pc, #40]	@ (100116c0 <_vfprintf_r+0x1258>)
10011696:	9215      	str	r2, [sp, #84]	@ 0x54
10011698:	3301      	adds	r3, #1
1001169a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001169c:	f8c8 2000 	str.w	r2, [r8]
100116a0:	442c      	add	r4, r5
100116a2:	2b07      	cmp	r3, #7
100116a4:	f8c8 5004 	str.w	r5, [r8, #4]
100116a8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100116ac:	f77f a8b1 	ble.w	10010812 <_vfprintf_r+0x3aa>
100116b0:	f7ff bbfe 	b.w	10010eb0 <_vfprintf_r+0xa48>
100116b4:	10019188 	.word	0x10019188
100116b8:	10019174 	.word	0x10019174
100116bc:	1001919c 	.word	0x1001919c
100116c0:	100191a8 	.word	0x100191a8
100116c4:	cccccccd 	.word	0xcccccccd
100116c8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100116ca:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100116cc:	681b      	ldr	r3, [r3, #0]
100116ce:	601a      	str	r2, [r3, #0]
100116d0:	f7ff baaa 	b.w	10010c28 <_vfprintf_r+0x7c0>
100116d4:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
100116d8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100116da:	603b      	str	r3, [r7, #0]
100116dc:	3601      	adds	r6, #1
100116de:	4444      	add	r4, r8
100116e0:	2e07      	cmp	r6, #7
100116e2:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100116e6:	f8c7 8004 	str.w	r8, [r7, #4]
100116ea:	f77f ac2b 	ble.w	10010f44 <_vfprintf_r+0xadc>
100116ee:	e527      	b.n	10011140 <_vfprintf_r+0xcd8>
100116f0:	2e10      	cmp	r6, #16
100116f2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100116f4:	f340 84ad 	ble.w	10012052 <_vfprintf_r+0x1bea>
100116f8:	4898      	ldr	r0, [pc, #608]	@ (1001195c <_vfprintf_r+0x14f4>)
100116fa:	9015      	str	r0, [sp, #84]	@ 0x54
100116fc:	4642      	mov	r2, r8
100116fe:	4621      	mov	r1, r4
10011700:	46a8      	mov	r8, r5
10011702:	e9dd 4a07 	ldrd	r4, sl, [sp, #28]
10011706:	2710      	movs	r7, #16
10011708:	4605      	mov	r5, r0
1001170a:	e004      	b.n	10011716 <_vfprintf_r+0x12ae>
1001170c:	3208      	adds	r2, #8
1001170e:	3e10      	subs	r6, #16
10011710:	2e10      	cmp	r6, #16
10011712:	f340 81ca 	ble.w	10011aaa <_vfprintf_r+0x1642>
10011716:	3301      	adds	r3, #1
10011718:	3110      	adds	r1, #16
1001171a:	2b07      	cmp	r3, #7
1001171c:	e9c2 5700 	strd	r5, r7, [r2]
10011720:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
10011724:	ddf2      	ble.n	1001170c <_vfprintf_r+0x12a4>
10011726:	aa32      	add	r2, sp, #200	@ 0xc8
10011728:	4621      	mov	r1, r4
1001172a:	4650      	mov	r0, sl
1001172c:	f000 fd40 	bl	100121b0 <__sprint_r>
10011730:	2800      	cmp	r0, #0
10011732:	f47f af3a 	bne.w	100115aa <_vfprintf_r+0x1142>
10011736:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
1001173a:	aa35      	add	r2, sp, #212	@ 0xd4
1001173c:	e7e7      	b.n	1001170e <_vfprintf_r+0x12a6>
1001173e:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10011742:	bf1c      	itt	ne
10011744:	b2db      	uxtbne	r3, r3
10011746:	4602      	movne	r2, r0
10011748:	e63d      	b.n	100113c6 <_vfprintf_r+0xf5e>
1001174a:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
1001174e:	bf1c      	itt	ne
10011750:	b2db      	uxtbne	r3, r3
10011752:	4602      	movne	r2, r0
10011754:	f7ff b9fb 	b.w	10010b4e <_vfprintf_r+0x6e6>
10011758:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1001175a:	2302      	movs	r3, #2
1001175c:	e9cd 3600 	strd	r3, r6, [sp]
10011760:	ab30      	add	r3, sp, #192	@ 0xc0
10011762:	9304      	str	r3, [sp, #16]
10011764:	ab2b      	add	r3, sp, #172	@ 0xac
10011766:	9303      	str	r3, [sp, #12]
10011768:	ab29      	add	r3, sp, #164	@ 0xa4
1001176a:	9302      	str	r3, [sp, #8]
1001176c:	9808      	ldr	r0, [sp, #32]
1001176e:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
10011772:	f002 ffc1 	bl	100146f8 <_dtoa_r>
10011776:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011778:	2b67      	cmp	r3, #103	@ 0x67
1001177a:	4605      	mov	r5, r0
1001177c:	f000 8177 	beq.w	10011a6e <_vfprintf_r+0x1606>
10011780:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011782:	2b47      	cmp	r3, #71	@ 0x47
10011784:	f000 8173 	beq.w	10011a6e <_vfprintf_r+0x1606>
10011788:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001178a:	f023 0720 	bic.w	r7, r3, #32
1001178e:	2f46      	cmp	r7, #70	@ 0x46
10011790:	eb00 0406 	add.w	r4, r0, r6
10011794:	d105      	bne.n	100117a2 <_vfprintf_r+0x133a>
10011796:	7803      	ldrb	r3, [r0, #0]
10011798:	2b30      	cmp	r3, #48	@ 0x30
1001179a:	f000 83db 	beq.w	10011f54 <_vfprintf_r+0x1aec>
1001179e:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
100117a0:	4434      	add	r4, r6
100117a2:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100117a6:	2200      	movs	r2, #0
100117a8:	2300      	movs	r3, #0
100117aa:	f007 f997 	bl	10018adc <__aeabi_dcmpeq>
100117ae:	2800      	cmp	r0, #0
100117b0:	f000 81cc 	beq.w	10011b4c <_vfprintf_r+0x16e4>
100117b4:	4623      	mov	r3, r4
100117b6:	1b5b      	subs	r3, r3, r5
100117b8:	9313      	str	r3, [sp, #76]	@ 0x4c
100117ba:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100117bc:	9212      	str	r2, [sp, #72]	@ 0x48
100117be:	2f47      	cmp	r7, #71	@ 0x47
100117c0:	f000 815d 	beq.w	10011a7e <_vfprintf_r+0x1616>
100117c4:	2f46      	cmp	r7, #70	@ 0x46
100117c6:	f000 82e3 	beq.w	10011d90 <_vfprintf_r+0x1928>
100117ca:	990e      	ldr	r1, [sp, #56]	@ 0x38
100117cc:	1e53      	subs	r3, r2, #1
100117ce:	2961      	cmp	r1, #97	@ 0x61
100117d0:	9329      	str	r3, [sp, #164]	@ 0xa4
100117d2:	f000 8441 	beq.w	10012058 <_vfprintf_r+0x1bf0>
100117d6:	2941      	cmp	r1, #65	@ 0x41
100117d8:	f040 815c 	bne.w	10011a94 <_vfprintf_r+0x162c>
100117dc:	2150      	movs	r1, #80	@ 0x50
100117de:	2001      	movs	r0, #1
100117e0:	2b00      	cmp	r3, #0
100117e2:	bfb6      	itet	lt
100117e4:	f1c2 0301 	rsblt	r3, r2, #1
100117e8:	222b      	movge	r2, #43	@ 0x2b
100117ea:	222d      	movlt	r2, #45	@ 0x2d
100117ec:	2b09      	cmp	r3, #9
100117ee:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
100117f2:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
100117f6:	f340 8377 	ble.w	10011ee8 <_vfprintf_r+0x1a80>
100117fa:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
100117fe:	4e58      	ldr	r6, [pc, #352]	@ (10011960 <_vfprintf_r+0x14f8>)
10011800:	4622      	mov	r2, r4
10011802:	4610      	mov	r0, r2
10011804:	fba6 1203 	umull	r1, r2, r6, r3
10011808:	08d2      	lsrs	r2, r2, #3
1001180a:	eb02 0182 	add.w	r1, r2, r2, lsl #2
1001180e:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
10011812:	3130      	adds	r1, #48	@ 0x30
10011814:	f800 1c01 	strb.w	r1, [r0, #-1]
10011818:	4619      	mov	r1, r3
1001181a:	2963      	cmp	r1, #99	@ 0x63
1001181c:	4613      	mov	r3, r2
1001181e:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
10011822:	dcee      	bgt.n	10011802 <_vfprintf_r+0x139a>
10011824:	3330      	adds	r3, #48	@ 0x30
10011826:	f802 3c01 	strb.w	r3, [r2, #-1]
1001182a:	1e83      	subs	r3, r0, #2
1001182c:	42a3      	cmp	r3, r4
1001182e:	f080 840c 	bcs.w	1001204a <_vfprintf_r+0x1be2>
10011832:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
10011836:	f813 1b01 	ldrb.w	r1, [r3], #1
1001183a:	f802 1f01 	strb.w	r1, [r2, #1]!
1001183e:	42a3      	cmp	r3, r4
10011840:	d1f9      	bne.n	10011836 <_vfprintf_r+0x13ce>
10011842:	ab5e      	add	r3, sp, #376	@ 0x178
10011844:	1a18      	subs	r0, r3, r0
10011846:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
1001184a:	931c      	str	r3, [sp, #112]	@ 0x70
1001184c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001184e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10011850:	2b01      	cmp	r3, #1
10011852:	eb03 0b02 	add.w	fp, r3, r2
10011856:	f340 8378 	ble.w	10011f4a <_vfprintf_r+0x1ae2>
1001185a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001185c:	449b      	add	fp, r3
1001185e:	9b06      	ldr	r3, [sp, #24]
10011860:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10011864:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
10011868:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
1001186c:	2300      	movs	r3, #0
1001186e:	9314      	str	r3, [sp, #80]	@ 0x50
10011870:	9206      	str	r2, [sp, #24]
10011872:	9310      	str	r3, [sp, #64]	@ 0x40
10011874:	9312      	str	r3, [sp, #72]	@ 0x48
10011876:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
10011878:	2b00      	cmp	r3, #0
1001187a:	f040 810f 	bne.w	10011a9c <_vfprintf_r+0x1634>
1001187e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011882:	9309      	str	r3, [sp, #36]	@ 0x24
10011884:	f7ff b82b 	b.w	100108de <_vfprintf_r+0x476>
10011888:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001188a:	ebab 060a 	sub.w	r6, fp, sl
1001188e:	1b5d      	subs	r5, r3, r5
10011890:	42ae      	cmp	r6, r5
10011892:	bfa8      	it	ge
10011894:	462e      	movge	r6, r5
10011896:	e41a      	b.n	100110ce <_vfprintf_r+0xc66>
10011898:	f343 12c0 	sbfx	r2, r3, #7, #1
1001189c:	4611      	mov	r1, r2
1001189e:	b25b      	sxtb	r3, r3
100118a0:	f7ff b8d3 	b.w	10010a4a <_vfprintf_r+0x5e2>
100118a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100118a6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100118a8:	681b      	ldr	r3, [r3, #0]
100118aa:	801a      	strh	r2, [r3, #0]
100118ac:	f7ff b9bc 	b.w	10010c28 <_vfprintf_r+0x7c0>
100118b0:	9907      	ldr	r1, [sp, #28]
100118b2:	aa32      	add	r2, sp, #200	@ 0xc8
100118b4:	4658      	mov	r0, fp
100118b6:	f000 fc7b 	bl	100121b0 <__sprint_r>
100118ba:	2800      	cmp	r0, #0
100118bc:	f43e af1c 	beq.w	100106f8 <_vfprintf_r+0x290>
100118c0:	f7fe bf30 	b.w	10010724 <_vfprintf_r+0x2bc>
100118c4:	4628      	mov	r0, r5
100118c6:	960d      	str	r6, [sp, #52]	@ 0x34
100118c8:	f002 fd9a 	bl	10014400 <strlen>
100118cc:	4683      	mov	fp, r0
100118ce:	f7ff b89f 	b.w	10010a10 <_vfprintf_r+0x5a8>
100118d2:	2358      	movs	r3, #88	@ 0x58
100118d4:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
100118d8:	2330      	movs	r3, #48	@ 0x30
100118da:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
100118de:	f049 0302 	orr.w	r3, r9, #2
100118e2:	9306      	str	r3, [sp, #24]
100118e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100118e6:	2b63      	cmp	r3, #99	@ 0x63
100118e8:	f300 82f6 	bgt.w	10011ed8 <_vfprintf_r+0x1a70>
100118ec:	2300      	movs	r3, #0
100118ee:	930c      	str	r3, [sp, #48]	@ 0x30
100118f0:	ad45      	add	r5, sp, #276	@ 0x114
100118f2:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
100118f6:	9315      	str	r3, [sp, #84]	@ 0x54
100118f8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
100118fa:	2b00      	cmp	r3, #0
100118fc:	f2c0 8200 	blt.w	10011d00 <_vfprintf_r+0x1898>
10011900:	ed9d 7b16 	vldr	d7, [sp, #88]	@ 0x58
10011904:	ed8d 7b24 	vstr	d7, [sp, #144]	@ 0x90
10011908:	2300      	movs	r3, #0
1001190a:	931f      	str	r3, [sp, #124]	@ 0x7c
1001190c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001190e:	2b61      	cmp	r3, #97	@ 0x61
10011910:	f47f ad1c 	bne.w	1001134c <_vfprintf_r+0xee4>
10011914:	aa29      	add	r2, sp, #164	@ 0xa4
10011916:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001191a:	f002 fe0f 	bl	1001453c <frexp>
1001191e:	2200      	movs	r2, #0
10011920:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10011924:	f006 fe72 	bl	1001860c <__aeabi_dmul>
10011928:	4602      	mov	r2, r0
1001192a:	460b      	mov	r3, r1
1001192c:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10011930:	2200      	movs	r2, #0
10011932:	2300      	movs	r3, #0
10011934:	f007 f8d2 	bl	10018adc <__aeabi_dcmpeq>
10011938:	2800      	cmp	r0, #0
1001193a:	f040 82f8 	bne.w	10011f2e <_vfprintf_r+0x1ac6>
1001193e:	4b09      	ldr	r3, [pc, #36]	@ (10011964 <_vfprintf_r+0x14fc>)
10011940:	9312      	str	r3, [sp, #72]	@ 0x48
10011942:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011944:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
10011948:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
1001194c:	462e      	mov	r6, r5
1001194e:	9514      	str	r5, [sp, #80]	@ 0x50
10011950:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10011954:	464d      	mov	r5, r9
10011956:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001195a:	e00b      	b.n	10011974 <_vfprintf_r+0x150c>
1001195c:	100191a8 	.word	0x100191a8
10011960:	cccccccd 	.word	0xcccccccd
10011964:	10019174 	.word	0x10019174
10011968:	2200      	movs	r2, #0
1001196a:	2300      	movs	r3, #0
1001196c:	f007 f8b6 	bl	10018adc <__aeabi_dcmpeq>
10011970:	b9f0      	cbnz	r0, 100119b0 <_vfprintf_r+0x1548>
10011972:	463d      	mov	r5, r7
10011974:	4ba9      	ldr	r3, [pc, #676]	@ (10011c1c <_vfprintf_r+0x17b4>)
10011976:	2200      	movs	r2, #0
10011978:	4640      	mov	r0, r8
1001197a:	4649      	mov	r1, r9
1001197c:	f006 fe46 	bl	1001860c <__aeabi_dmul>
10011980:	4689      	mov	r9, r1
10011982:	4680      	mov	r8, r0
10011984:	f007 f8f2 	bl	10018b6c <__aeabi_d2iz>
10011988:	4604      	mov	r4, r0
1001198a:	f006 fdd5 	bl	10018538 <__aeabi_i2d>
1001198e:	460b      	mov	r3, r1
10011990:	4602      	mov	r2, r0
10011992:	4649      	mov	r1, r9
10011994:	4640      	mov	r0, r8
10011996:	f006 fc81 	bl	1001829c <__aeabi_dsub>
1001199a:	f81b 3004 	ldrb.w	r3, [fp, r4]
1001199e:	46b2      	mov	sl, r6
100119a0:	f806 3b01 	strb.w	r3, [r6], #1
100119a4:	1c6b      	adds	r3, r5, #1
100119a6:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
100119aa:	4680      	mov	r8, r0
100119ac:	4689      	mov	r9, r1
100119ae:	d1db      	bne.n	10011968 <_vfprintf_r+0x1500>
100119b0:	46cb      	mov	fp, r9
100119b2:	4657      	mov	r7, sl
100119b4:	46c2      	mov	sl, r8
100119b6:	4b9a      	ldr	r3, [pc, #616]	@ (10011c20 <_vfprintf_r+0x17b8>)
100119b8:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
100119bc:	2200      	movs	r2, #0
100119be:	4650      	mov	r0, sl
100119c0:	4659      	mov	r1, fp
100119c2:	46a9      	mov	r9, r5
100119c4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
100119c6:	f007 f8b1 	bl	10018b2c <__aeabi_dcmpgt>
100119ca:	2800      	cmp	r0, #0
100119cc:	f040 8264 	bne.w	10011e98 <_vfprintf_r+0x1a30>
100119d0:	4b93      	ldr	r3, [pc, #588]	@ (10011c20 <_vfprintf_r+0x17b8>)
100119d2:	4650      	mov	r0, sl
100119d4:	4659      	mov	r1, fp
100119d6:	2200      	movs	r2, #0
100119d8:	f007 f880 	bl	10018adc <__aeabi_dcmpeq>
100119dc:	b110      	cbz	r0, 100119e4 <_vfprintf_r+0x157c>
100119de:	07e2      	lsls	r2, r4, #31
100119e0:	f100 825a 	bmi.w	10011e98 <_vfprintf_r+0x1a30>
100119e4:	f1b9 0f00 	cmp.w	r9, #0
100119e8:	f2c0 8270 	blt.w	10011ecc <_vfprintf_r+0x1a64>
100119ec:	f109 0301 	add.w	r3, r9, #1
100119f0:	4433      	add	r3, r6
100119f2:	2230      	movs	r2, #48	@ 0x30
100119f4:	f806 2b01 	strb.w	r2, [r6], #1
100119f8:	42b3      	cmp	r3, r6
100119fa:	d1fb      	bne.n	100119f4 <_vfprintf_r+0x158c>
100119fc:	1b5b      	subs	r3, r3, r5
100119fe:	9313      	str	r3, [sp, #76]	@ 0x4c
10011a00:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011a02:	f023 0720 	bic.w	r7, r3, #32
10011a06:	e6d8      	b.n	100117ba <_vfprintf_r+0x1352>
10011a08:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011a0c:	aa32      	add	r2, sp, #200	@ 0xc8
10011a0e:	f000 fbcf 	bl	100121b0 <__sprint_r>
10011a12:	2800      	cmp	r0, #0
10011a14:	f47f aa2c 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011a18:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10011a1c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10011a1e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011a22:	f7ff ba36 	b.w	10010e92 <_vfprintf_r+0xa2a>
10011a26:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10011a28:	f002 fbe4 	bl	100141f4 <__retarget_lock_release_recursive>
10011a2c:	f7fe be36 	b.w	1001069c <_vfprintf_r+0x234>
10011a30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011a32:	1c5e      	adds	r6, r3, #1
10011a34:	2302      	movs	r3, #2
10011a36:	e691      	b.n	1001175c <_vfprintf_r+0x12f4>
10011a38:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10011a3a:	2303      	movs	r3, #3
10011a3c:	e68e      	b.n	1001175c <_vfprintf_r+0x12f4>
10011a3e:	aa29      	add	r2, sp, #164	@ 0xa4
10011a40:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10011a44:	f002 fd7a 	bl	1001453c <frexp>
10011a48:	2200      	movs	r2, #0
10011a4a:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10011a4e:	f006 fddd 	bl	1001860c <__aeabi_dmul>
10011a52:	4602      	mov	r2, r0
10011a54:	460b      	mov	r3, r1
10011a56:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10011a5a:	2200      	movs	r2, #0
10011a5c:	2300      	movs	r3, #0
10011a5e:	f007 f83d 	bl	10018adc <__aeabi_dcmpeq>
10011a62:	2800      	cmp	r0, #0
10011a64:	f040 8263 	bne.w	10011f2e <_vfprintf_r+0x1ac6>
10011a68:	4b6e      	ldr	r3, [pc, #440]	@ (10011c24 <_vfprintf_r+0x17bc>)
10011a6a:	9312      	str	r3, [sp, #72]	@ 0x48
10011a6c:	e769      	b.n	10011942 <_vfprintf_r+0x14da>
10011a6e:	9b06      	ldr	r3, [sp, #24]
10011a70:	07db      	lsls	r3, r3, #31
10011a72:	f100 81e4 	bmi.w	10011e3e <_vfprintf_r+0x19d6>
10011a76:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10011a78:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10011a7a:	1b5b      	subs	r3, r3, r5
10011a7c:	9313      	str	r3, [sp, #76]	@ 0x4c
10011a7e:	1cd3      	adds	r3, r2, #3
10011a80:	9212      	str	r2, [sp, #72]	@ 0x48
10011a82:	db02      	blt.n	10011a8a <_vfprintf_r+0x1622>
10011a84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011a86:	4293      	cmp	r3, r2
10011a88:	da44      	bge.n	10011b14 <_vfprintf_r+0x16ac>
10011a8a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011a8c:	3b02      	subs	r3, #2
10011a8e:	930e      	str	r3, [sp, #56]	@ 0x38
10011a90:	1e53      	subs	r3, r2, #1
10011a92:	9329      	str	r3, [sp, #164]	@ 0xa4
10011a94:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
10011a98:	2000      	movs	r0, #0
10011a9a:	e6a1      	b.n	100117e0 <_vfprintf_r+0x1378>
10011a9c:	222d      	movs	r2, #45	@ 0x2d
10011a9e:	2300      	movs	r3, #0
10011aa0:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10011aa4:	9309      	str	r3, [sp, #36]	@ 0x24
10011aa6:	f7fe bf1d 	b.w	100108e4 <_vfprintf_r+0x47c>
10011aaa:	4645      	mov	r5, r8
10011aac:	460c      	mov	r4, r1
10011aae:	4690      	mov	r8, r2
10011ab0:	3301      	adds	r3, #1
10011ab2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10011ab4:	f8c8 2000 	str.w	r2, [r8]
10011ab8:	4434      	add	r4, r6
10011aba:	2b07      	cmp	r3, #7
10011abc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011ac0:	f8c8 6004 	str.w	r6, [r8, #4]
10011ac4:	f300 8226 	bgt.w	10011f14 <_vfprintf_r+0x1aac>
10011ac8:	f108 0808 	add.w	r8, r8, #8
10011acc:	f7ff bacb 	b.w	10011066 <_vfprintf_r+0xbfe>
10011ad0:	222d      	movs	r2, #45	@ 0x2d
10011ad2:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10011ad6:	f7fe bef1 	b.w	100108bc <_vfprintf_r+0x454>
10011ada:	2300      	movs	r3, #0
10011adc:	9808      	ldr	r0, [sp, #32]
10011ade:	9700      	str	r7, [sp, #0]
10011ae0:	aa2b      	add	r2, sp, #172	@ 0xac
10011ae2:	4619      	mov	r1, r3
10011ae4:	f002 fd1e 	bl	10014524 <_wcsrtombs_r>
10011ae8:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10011aec:	4683      	mov	fp, r0
10011aee:	f000 8209 	beq.w	10011f04 <_vfprintf_r+0x1a9c>
10011af2:	952b      	str	r5, [sp, #172]	@ 0xac
10011af4:	e59e      	b.n	10011634 <_vfprintf_r+0x11cc>
10011af6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10011af8:	991d      	ldr	r1, [sp, #116]	@ 0x74
10011afa:	1aed      	subs	r5, r5, r3
10011afc:	461a      	mov	r2, r3
10011afe:	4628      	mov	r0, r5
10011b00:	f002 fad0 	bl	100140a4 <strncpy>
10011b04:	f898 3001 	ldrb.w	r3, [r8, #1]
10011b08:	b10b      	cbz	r3, 10011b0e <_vfprintf_r+0x16a6>
10011b0a:	f108 0801 	add.w	r8, r8, #1
10011b0e:	f04f 0c00 	mov.w	ip, #0
10011b12:	e4f9      	b.n	10011508 <_vfprintf_r+0x10a0>
10011b14:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011b16:	4293      	cmp	r3, r2
10011b18:	f300 8194 	bgt.w	10011e44 <_vfprintf_r+0x19dc>
10011b1c:	9b06      	ldr	r3, [sp, #24]
10011b1e:	07de      	lsls	r6, r3, #31
10011b20:	f140 824a 	bpl.w	10011fb8 <_vfprintf_r+0x1b50>
10011b24:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10011b26:	eb02 0b03 	add.w	fp, r2, r3
10011b2a:	9b06      	ldr	r3, [sp, #24]
10011b2c:	055c      	lsls	r4, r3, #21
10011b2e:	d502      	bpl.n	10011b36 <_vfprintf_r+0x16ce>
10011b30:	2a00      	cmp	r2, #0
10011b32:	f300 824a 	bgt.w	10011fca <_vfprintf_r+0x1b62>
10011b36:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10011b3a:	9306      	str	r3, [sp, #24]
10011b3c:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10011b40:	2367      	movs	r3, #103	@ 0x67
10011b42:	930e      	str	r3, [sp, #56]	@ 0x38
10011b44:	2300      	movs	r3, #0
10011b46:	9314      	str	r3, [sp, #80]	@ 0x50
10011b48:	9310      	str	r3, [sp, #64]	@ 0x40
10011b4a:	e694      	b.n	10011876 <_vfprintf_r+0x140e>
10011b4c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10011b4e:	42a3      	cmp	r3, r4
10011b50:	f4bf ae31 	bcs.w	100117b6 <_vfprintf_r+0x134e>
10011b54:	2130      	movs	r1, #48	@ 0x30
10011b56:	1c5a      	adds	r2, r3, #1
10011b58:	9230      	str	r2, [sp, #192]	@ 0xc0
10011b5a:	7019      	strb	r1, [r3, #0]
10011b5c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10011b5e:	429c      	cmp	r4, r3
10011b60:	d8f9      	bhi.n	10011b56 <_vfprintf_r+0x16ee>
10011b62:	e628      	b.n	100117b6 <_vfprintf_r+0x134e>
10011b64:	4621      	mov	r1, r4
10011b66:	461c      	mov	r4, r3
10011b68:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10011b6a:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10011b6e:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
10011b72:	4642      	mov	r2, r8
10011b74:	4f2c      	ldr	r7, [pc, #176]	@ (10011c28 <_vfprintf_r+0x17c0>)
10011b76:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
10011b7a:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
10011b7e:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
10011b82:	f8dd b020 	ldr.w	fp, [sp, #32]
10011b86:	b37b      	cbz	r3, 10011be8 <_vfprintf_r+0x1780>
10011b88:	f1b9 0f00 	cmp.w	r9, #0
10011b8c:	f000 8085 	beq.w	10011c9a <_vfprintf_r+0x1832>
10011b90:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10011b94:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10011b96:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10011b98:	3001      	adds	r0, #1
10011b9a:	4441      	add	r1, r8
10011b9c:	2807      	cmp	r0, #7
10011b9e:	e9c2 3800 	strd	r3, r8, [r2]
10011ba2:	9134      	str	r1, [sp, #208]	@ 0xd0
10011ba4:	9033      	str	r0, [sp, #204]	@ 0xcc
10011ba6:	dc6d      	bgt.n	10011c84 <_vfprintf_r+0x181c>
10011ba8:	3208      	adds	r2, #8
10011baa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011bac:	f89a 0000 	ldrb.w	r0, [sl]
10011bb0:	1b1e      	subs	r6, r3, r4
10011bb2:	4286      	cmp	r6, r0
10011bb4:	bfa8      	it	ge
10011bb6:	4606      	movge	r6, r0
10011bb8:	2e00      	cmp	r6, #0
10011bba:	dd0b      	ble.n	10011bd4 <_vfprintf_r+0x176c>
10011bbc:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10011bbe:	3001      	adds	r0, #1
10011bc0:	4431      	add	r1, r6
10011bc2:	2807      	cmp	r0, #7
10011bc4:	e9c2 4600 	strd	r4, r6, [r2]
10011bc8:	9134      	str	r1, [sp, #208]	@ 0xd0
10011bca:	9033      	str	r0, [sp, #204]	@ 0xcc
10011bcc:	dc6b      	bgt.n	10011ca6 <_vfprintf_r+0x183e>
10011bce:	f89a 0000 	ldrb.w	r0, [sl]
10011bd2:	3208      	adds	r2, #8
10011bd4:	2e00      	cmp	r6, #0
10011bd6:	bfac      	ite	ge
10011bd8:	1b85      	subge	r5, r0, r6
10011bda:	4605      	movlt	r5, r0
10011bdc:	2d00      	cmp	r5, #0
10011bde:	dc14      	bgt.n	10011c0a <_vfprintf_r+0x17a2>
10011be0:	4404      	add	r4, r0
10011be2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10011be4:	2b00      	cmp	r3, #0
10011be6:	d1cf      	bne.n	10011b88 <_vfprintf_r+0x1720>
10011be8:	f1b9 0f00 	cmp.w	r9, #0
10011bec:	d1d0      	bne.n	10011b90 <_vfprintf_r+0x1728>
10011bee:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10011bf2:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
10011bf6:	46a2      	mov	sl, r4
10011bf8:	45da      	cmp	sl, fp
10011bfa:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
10011bfe:	4690      	mov	r8, r2
10011c00:	460c      	mov	r4, r1
10011c02:	bf28      	it	cs
10011c04:	46da      	movcs	sl, fp
10011c06:	f7ff ba35 	b.w	10011074 <_vfprintf_r+0xc0c>
10011c0a:	2d10      	cmp	r5, #16
10011c0c:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10011c0e:	f340 821a 	ble.w	10012046 <_vfprintf_r+0x1bde>
10011c12:	4623      	mov	r3, r4
10011c14:	463e      	mov	r6, r7
10011c16:	462c      	mov	r4, r5
10011c18:	461d      	mov	r5, r3
10011c1a:	e00c      	b.n	10011c36 <_vfprintf_r+0x17ce>
10011c1c:	40300000 	.word	0x40300000
10011c20:	3fe00000 	.word	0x3fe00000
10011c24:	10019188 	.word	0x10019188
10011c28:	100191a8 	.word	0x100191a8
10011c2c:	3c10      	subs	r4, #16
10011c2e:	2c10      	cmp	r4, #16
10011c30:	f102 0208 	add.w	r2, r2, #8
10011c34:	dd16      	ble.n	10011c64 <_vfprintf_r+0x17fc>
10011c36:	3001      	adds	r0, #1
10011c38:	3110      	adds	r1, #16
10011c3a:	2310      	movs	r3, #16
10011c3c:	2807      	cmp	r0, #7
10011c3e:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10011c42:	6017      	str	r7, [r2, #0]
10011c44:	6053      	str	r3, [r2, #4]
10011c46:	ddf1      	ble.n	10011c2c <_vfprintf_r+0x17c4>
10011c48:	9907      	ldr	r1, [sp, #28]
10011c4a:	aa32      	add	r2, sp, #200	@ 0xc8
10011c4c:	4658      	mov	r0, fp
10011c4e:	f000 faaf 	bl	100121b0 <__sprint_r>
10011c52:	2800      	cmp	r0, #0
10011c54:	f47e ad60 	bne.w	10010718 <_vfprintf_r+0x2b0>
10011c58:	3c10      	subs	r4, #16
10011c5a:	2c10      	cmp	r4, #16
10011c5c:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
10011c60:	aa35      	add	r2, sp, #212	@ 0xd4
10011c62:	dce8      	bgt.n	10011c36 <_vfprintf_r+0x17ce>
10011c64:	462b      	mov	r3, r5
10011c66:	4625      	mov	r5, r4
10011c68:	461c      	mov	r4, r3
10011c6a:	3001      	adds	r0, #1
10011c6c:	4429      	add	r1, r5
10011c6e:	2807      	cmp	r0, #7
10011c70:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10011c74:	6016      	str	r6, [r2, #0]
10011c76:	6055      	str	r5, [r2, #4]
10011c78:	dc4b      	bgt.n	10011d12 <_vfprintf_r+0x18aa>
10011c7a:	f89a 0000 	ldrb.w	r0, [sl]
10011c7e:	3208      	adds	r2, #8
10011c80:	4404      	add	r4, r0
10011c82:	e7ae      	b.n	10011be2 <_vfprintf_r+0x177a>
10011c84:	9907      	ldr	r1, [sp, #28]
10011c86:	aa32      	add	r2, sp, #200	@ 0xc8
10011c88:	4658      	mov	r0, fp
10011c8a:	f000 fa91 	bl	100121b0 <__sprint_r>
10011c8e:	2800      	cmp	r0, #0
10011c90:	f47e ad42 	bne.w	10010718 <_vfprintf_r+0x2b0>
10011c94:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10011c96:	aa35      	add	r2, sp, #212	@ 0xd4
10011c98:	e787      	b.n	10011baa <_vfprintf_r+0x1742>
10011c9a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10011c9c:	3b01      	subs	r3, #1
10011c9e:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
10011ca2:	9310      	str	r3, [sp, #64]	@ 0x40
10011ca4:	e776      	b.n	10011b94 <_vfprintf_r+0x172c>
10011ca6:	9907      	ldr	r1, [sp, #28]
10011ca8:	aa32      	add	r2, sp, #200	@ 0xc8
10011caa:	4658      	mov	r0, fp
10011cac:	f000 fa80 	bl	100121b0 <__sprint_r>
10011cb0:	2800      	cmp	r0, #0
10011cb2:	f47e ad31 	bne.w	10010718 <_vfprintf_r+0x2b0>
10011cb6:	f89a 0000 	ldrb.w	r0, [sl]
10011cba:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10011cbc:	aa35      	add	r2, sp, #212	@ 0xd4
10011cbe:	e789      	b.n	10011bd4 <_vfprintf_r+0x176c>
10011cc0:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011cc4:	960d      	str	r6, [sp, #52]	@ 0x34
10011cc6:	f8cd b018 	str.w	fp, [sp, #24]
10011cca:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10011cce:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10011cd2:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
10011cd6:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
10011cda:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10011cde:	f7fe bdfe 	b.w	100108de <_vfprintf_r+0x476>
10011ce2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011ce6:	aa32      	add	r2, sp, #200	@ 0xc8
10011ce8:	f000 fa62 	bl	100121b0 <__sprint_r>
10011cec:	2800      	cmp	r0, #0
10011cee:	f47f a8bf 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011cf2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10011cf4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011cf6:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011cfa:	f7ff baa5 	b.w	10011248 <_vfprintf_r+0xde0>
10011cfe:	930c      	str	r3, [sp, #48]	@ 0x30
10011d00:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
10011d04:	f102 4300 	add.w	r3, r2, #2147483648	@ 0x80000000
10011d08:	9325      	str	r3, [sp, #148]	@ 0x94
10011d0a:	232d      	movs	r3, #45	@ 0x2d
10011d0c:	9124      	str	r1, [sp, #144]	@ 0x90
10011d0e:	931f      	str	r3, [sp, #124]	@ 0x7c
10011d10:	e5fc      	b.n	1001190c <_vfprintf_r+0x14a4>
10011d12:	9907      	ldr	r1, [sp, #28]
10011d14:	aa32      	add	r2, sp, #200	@ 0xc8
10011d16:	4658      	mov	r0, fp
10011d18:	f000 fa4a 	bl	100121b0 <__sprint_r>
10011d1c:	2800      	cmp	r0, #0
10011d1e:	f47e acfb 	bne.w	10010718 <_vfprintf_r+0x2b0>
10011d22:	f89a 0000 	ldrb.w	r0, [sl]
10011d26:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10011d28:	aa35      	add	r2, sp, #212	@ 0xd4
10011d2a:	4404      	add	r4, r0
10011d2c:	e759      	b.n	10011be2 <_vfprintf_r+0x177a>
10011d2e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011d32:	aa32      	add	r2, sp, #200	@ 0xc8
10011d34:	f000 fa3c 	bl	100121b0 <__sprint_r>
10011d38:	2800      	cmp	r0, #0
10011d3a:	f47f a899 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011d3e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011d40:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011d44:	f7ff b988 	b.w	10011058 <_vfprintf_r+0xbf0>
10011d48:	2378      	movs	r3, #120	@ 0x78
10011d4a:	e5c3      	b.n	100118d4 <_vfprintf_r+0x146c>
10011d4c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011d50:	aa32      	add	r2, sp, #200	@ 0xc8
10011d52:	f000 fa2d 	bl	100121b0 <__sprint_r>
10011d56:	2800      	cmp	r0, #0
10011d58:	f47f a88a 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011d5c:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10011d5e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011d60:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011d64:	f7ff b99c 	b.w	100110a0 <_vfprintf_r+0xc38>
10011d68:	49ab      	ldr	r1, [pc, #684]	@ (10012018 <_vfprintf_r+0x1bb0>)
10011d6a:	9115      	str	r1, [sp, #84]	@ 0x54
10011d6c:	f7fe bdee 	b.w	1001094c <_vfprintf_r+0x4e4>
10011d70:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011d74:	aa32      	add	r2, sp, #200	@ 0xc8
10011d76:	f000 fa1b 	bl	100121b0 <__sprint_r>
10011d7a:	2800      	cmp	r0, #0
10011d7c:	f47f a878 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011d80:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10011d82:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011d84:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011d86:	1b5d      	subs	r5, r3, r5
10011d88:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011d8c:	f7ff b99f 	b.w	100110ce <_vfprintf_r+0xc66>
10011d90:	9b06      	ldr	r3, [sp, #24]
10011d92:	9912      	ldr	r1, [sp, #72]	@ 0x48
10011d94:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10011d96:	f003 0301 	and.w	r3, r3, #1
10011d9a:	2900      	cmp	r1, #0
10011d9c:	ea43 0302 	orr.w	r3, r3, r2
10011da0:	f340 815d 	ble.w	1001205e <_vfprintf_r+0x1bf6>
10011da4:	2b00      	cmp	r3, #0
10011da6:	f040 8109 	bne.w	10011fbc <_vfprintf_r+0x1b54>
10011daa:	2366      	movs	r3, #102	@ 0x66
10011dac:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10011db0:	930e      	str	r3, [sp, #56]	@ 0x38
10011db2:	9b06      	ldr	r3, [sp, #24]
10011db4:	055a      	lsls	r2, r3, #21
10011db6:	f100 810a 	bmi.w	10011fce <_vfprintf_r+0x1b66>
10011dba:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10011dbe:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10011dc2:	9306      	str	r3, [sp, #24]
10011dc4:	e6be      	b.n	10011b44 <_vfprintf_r+0x16dc>
10011dc6:	2200      	movs	r2, #0
10011dc8:	9209      	str	r2, [sp, #36]	@ 0x24
10011dca:	f7fe bbc6 	b.w	1001055a <_vfprintf_r+0xf2>
10011dce:	9b07      	ldr	r3, [sp, #28]
10011dd0:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10011dd2:	07dd      	lsls	r5, r3, #31
10011dd4:	d407      	bmi.n	10011de6 <_vfprintf_r+0x197e>
10011dd6:	9b07      	ldr	r3, [sp, #28]
10011dd8:	899b      	ldrh	r3, [r3, #12]
10011dda:	059c      	lsls	r4, r3, #22
10011ddc:	d403      	bmi.n	10011de6 <_vfprintf_r+0x197e>
10011dde:	9b07      	ldr	r3, [sp, #28]
10011de0:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10011de2:	f002 fa07 	bl	100141f4 <__retarget_lock_release_recursive>
10011de6:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10011dea:	930a      	str	r3, [sp, #40]	@ 0x28
10011dec:	f7fe bca5 	b.w	1001073a <_vfprintf_r+0x2d2>
10011df0:	4256      	negs	r6, r2
10011df2:	3210      	adds	r2, #16
10011df4:	4a89      	ldr	r2, [pc, #548]	@ (1001201c <_vfprintf_r+0x1bb4>)
10011df6:	9215      	str	r2, [sp, #84]	@ 0x54
10011df8:	da34      	bge.n	10011e64 <_vfprintf_r+0x19fc>
10011dfa:	46aa      	mov	sl, r5
10011dfc:	2710      	movs	r7, #16
10011dfe:	4615      	mov	r5, r2
10011e00:	e004      	b.n	10011e0c <_vfprintf_r+0x19a4>
10011e02:	f108 0808 	add.w	r8, r8, #8
10011e06:	3e10      	subs	r6, #16
10011e08:	2e10      	cmp	r6, #16
10011e0a:	dd2a      	ble.n	10011e62 <_vfprintf_r+0x19fa>
10011e0c:	3301      	adds	r3, #1
10011e0e:	3410      	adds	r4, #16
10011e10:	2b07      	cmp	r3, #7
10011e12:	e9c8 5700 	strd	r5, r7, [r8]
10011e16:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011e1a:	ddf2      	ble.n	10011e02 <_vfprintf_r+0x199a>
10011e1c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011e20:	aa32      	add	r2, sp, #200	@ 0xc8
10011e22:	f000 f9c5 	bl	100121b0 <__sprint_r>
10011e26:	2800      	cmp	r0, #0
10011e28:	f47f a822 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011e2c:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10011e30:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011e34:	e7e7      	b.n	10011e06 <_vfprintf_r+0x199e>
10011e36:	2300      	movs	r3, #0
10011e38:	930c      	str	r3, [sp, #48]	@ 0x30
10011e3a:	ad45      	add	r5, sp, #276	@ 0x114
10011e3c:	e40c      	b.n	10011658 <_vfprintf_r+0x11f0>
10011e3e:	19ac      	adds	r4, r5, r6
10011e40:	2747      	movs	r7, #71	@ 0x47
10011e42:	e4ae      	b.n	100117a2 <_vfprintf_r+0x133a>
10011e44:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011e46:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10011e48:	eb03 0b02 	add.w	fp, r3, r2
10011e4c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10011e4e:	2b00      	cmp	r3, #0
10011e50:	f340 80ee 	ble.w	10012030 <_vfprintf_r+0x1bc8>
10011e54:	2367      	movs	r3, #103	@ 0x67
10011e56:	930e      	str	r3, [sp, #56]	@ 0x38
10011e58:	e7ab      	b.n	10011db2 <_vfprintf_r+0x194a>
10011e5a:	4a6f      	ldr	r2, [pc, #444]	@ (10012018 <_vfprintf_r+0x1bb0>)
10011e5c:	9215      	str	r2, [sp, #84]	@ 0x54
10011e5e:	f7ff b8ce 	b.w	10010ffe <_vfprintf_r+0xb96>
10011e62:	4655      	mov	r5, sl
10011e64:	3301      	adds	r3, #1
10011e66:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10011e68:	f8c8 2000 	str.w	r2, [r8]
10011e6c:	4434      	add	r4, r6
10011e6e:	2b07      	cmp	r3, #7
10011e70:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011e74:	f8c8 6004 	str.w	r6, [r8, #4]
10011e78:	f77f a9fb 	ble.w	10011272 <_vfprintf_r+0xe0a>
10011e7c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011e80:	aa32      	add	r2, sp, #200	@ 0xc8
10011e82:	f000 f995 	bl	100121b0 <__sprint_r>
10011e86:	2800      	cmp	r0, #0
10011e88:	f47e aff2 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011e8c:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10011e90:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011e94:	f7ff b800 	b.w	10010e98 <_vfprintf_r+0xa30>
10011e98:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10011e9a:	9730      	str	r7, [sp, #192]	@ 0xc0
10011e9c:	7bd9      	ldrb	r1, [r3, #15]
10011e9e:	f816 2c01 	ldrb.w	r2, [r6, #-1]
10011ea2:	428a      	cmp	r2, r1
10011ea4:	4633      	mov	r3, r6
10011ea6:	d109      	bne.n	10011ebc <_vfprintf_r+0x1a54>
10011ea8:	2030      	movs	r0, #48	@ 0x30
10011eaa:	f803 0c01 	strb.w	r0, [r3, #-1]
10011eae:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10011eb0:	1e5a      	subs	r2, r3, #1
10011eb2:	9230      	str	r2, [sp, #192]	@ 0xc0
10011eb4:	f813 2c01 	ldrb.w	r2, [r3, #-1]
10011eb8:	4291      	cmp	r1, r2
10011eba:	d0f6      	beq.n	10011eaa <_vfprintf_r+0x1a42>
10011ebc:	2a39      	cmp	r2, #57	@ 0x39
10011ebe:	bf0b      	itete	eq
10011ec0:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
10011ec2:	3201      	addne	r2, #1
10011ec4:	7a92      	ldrbeq	r2, [r2, #10]
10011ec6:	b2d2      	uxtbne	r2, r2
10011ec8:	f803 2c01 	strb.w	r2, [r3, #-1]
10011ecc:	4633      	mov	r3, r6
10011ece:	e595      	b.n	100119fc <_vfprintf_r+0x1594>
10011ed0:	4a52      	ldr	r2, [pc, #328]	@ (1001201c <_vfprintf_r+0x1bb4>)
10011ed2:	9215      	str	r2, [sp, #84]	@ 0x54
10011ed4:	f7fe bf78 	b.w	10010dc8 <_vfprintf_r+0x960>
10011ed8:	9808      	ldr	r0, [sp, #32]
10011eda:	1c59      	adds	r1, r3, #1
10011edc:	f7fd fff4 	bl	1000fec8 <_malloc_r>
10011ee0:	4605      	mov	r5, r0
10011ee2:	b178      	cbz	r0, 10011f04 <_vfprintf_r+0x1a9c>
10011ee4:	900c      	str	r0, [sp, #48]	@ 0x30
10011ee6:	e504      	b.n	100118f2 <_vfprintf_r+0x148a>
10011ee8:	2800      	cmp	r0, #0
10011eea:	d162      	bne.n	10011fb2 <_vfprintf_r+0x1b4a>
10011eec:	2230      	movs	r2, #48	@ 0x30
10011eee:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
10011ef2:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
10011ef6:	3330      	adds	r3, #48	@ 0x30
10011ef8:	f802 3b01 	strb.w	r3, [r2], #1
10011efc:	ab2c      	add	r3, sp, #176	@ 0xb0
10011efe:	1ad3      	subs	r3, r2, r3
10011f00:	931c      	str	r3, [sp, #112]	@ 0x70
10011f02:	e4a3      	b.n	1001184c <_vfprintf_r+0x13e4>
10011f04:	9a07      	ldr	r2, [sp, #28]
10011f06:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
10011f0a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10011f0e:	8193      	strh	r3, [r2, #12]
10011f10:	f7fe bc0b 	b.w	1001072a <_vfprintf_r+0x2c2>
10011f14:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011f18:	aa32      	add	r2, sp, #200	@ 0xc8
10011f1a:	f000 f949 	bl	100121b0 <__sprint_r>
10011f1e:	2800      	cmp	r0, #0
10011f20:	f47e afa6 	bne.w	10010e70 <_vfprintf_r+0xa08>
10011f24:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011f26:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011f2a:	f7ff b89c 	b.w	10011066 <_vfprintf_r+0xbfe>
10011f2e:	4b3c      	ldr	r3, [pc, #240]	@ (10012020 <_vfprintf_r+0x1bb8>)
10011f30:	4a3c      	ldr	r2, [pc, #240]	@ (10012024 <_vfprintf_r+0x1bbc>)
10011f32:	990e      	ldr	r1, [sp, #56]	@ 0x38
10011f34:	2961      	cmp	r1, #97	@ 0x61
10011f36:	bf18      	it	ne
10011f38:	461a      	movne	r2, r3
10011f3a:	2301      	movs	r3, #1
10011f3c:	9212      	str	r2, [sp, #72]	@ 0x48
10011f3e:	9329      	str	r3, [sp, #164]	@ 0xa4
10011f40:	e4ff      	b.n	10011942 <_vfprintf_r+0x14da>
10011f42:	2306      	movs	r3, #6
10011f44:	9309      	str	r3, [sp, #36]	@ 0x24
10011f46:	f7ff b9f1 	b.w	1001132c <_vfprintf_r+0xec4>
10011f4a:	9b06      	ldr	r3, [sp, #24]
10011f4c:	07df      	lsls	r7, r3, #31
10011f4e:	f57f ac86 	bpl.w	1001185e <_vfprintf_r+0x13f6>
10011f52:	e482      	b.n	1001185a <_vfprintf_r+0x13f2>
10011f54:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10011f58:	2200      	movs	r2, #0
10011f5a:	2300      	movs	r3, #0
10011f5c:	f006 fdbe 	bl	10018adc <__aeabi_dcmpeq>
10011f60:	2800      	cmp	r0, #0
10011f62:	f47f ac1c 	bne.w	1001179e <_vfprintf_r+0x1336>
10011f66:	f1c6 0601 	rsb	r6, r6, #1
10011f6a:	9629      	str	r6, [sp, #164]	@ 0xa4
10011f6c:	e418      	b.n	100117a0 <_vfprintf_r+0x1338>
10011f6e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10011f70:	4d2d      	ldr	r5, [pc, #180]	@ (10012028 <_vfprintf_r+0x1bc0>)
10011f72:	2b00      	cmp	r3, #0
10011f74:	bfb4      	ite	lt
10011f76:	222d      	movlt	r2, #45	@ 0x2d
10011f78:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
10011f7c:	4b2b      	ldr	r3, [pc, #172]	@ (1001202c <_vfprintf_r+0x1bc4>)
10011f7e:	bfb8      	it	lt
10011f80:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
10011f84:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10011f88:	f7fe bc9c 	b.w	100108c4 <_vfprintf_r+0x45c>
10011f8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011f8e:	9306      	str	r3, [sp, #24]
10011f90:	469b      	mov	fp, r3
10011f92:	2373      	movs	r3, #115	@ 0x73
10011f94:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011f98:	960d      	str	r6, [sp, #52]	@ 0x34
10011f9a:	9009      	str	r0, [sp, #36]	@ 0x24
10011f9c:	9014      	str	r0, [sp, #80]	@ 0x50
10011f9e:	9010      	str	r0, [sp, #64]	@ 0x40
10011fa0:	930e      	str	r3, [sp, #56]	@ 0x38
10011fa2:	f7fe bc9c 	b.w	100108de <_vfprintf_r+0x476>
10011fa6:	f8dd 9018 	ldr.w	r9, [sp, #24]
10011faa:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10011fae:	f7ff bb41 	b.w	10011634 <_vfprintf_r+0x11cc>
10011fb2:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10011fb6:	e79e      	b.n	10011ef6 <_vfprintf_r+0x1a8e>
10011fb8:	4693      	mov	fp, r2
10011fba:	e5b6      	b.n	10011b2a <_vfprintf_r+0x16c2>
10011fbc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10011fbe:	18cf      	adds	r7, r1, r3
10011fc0:	443a      	add	r2, r7
10011fc2:	2366      	movs	r3, #102	@ 0x66
10011fc4:	4693      	mov	fp, r2
10011fc6:	930e      	str	r3, [sp, #56]	@ 0x38
10011fc8:	e6f3      	b.n	10011db2 <_vfprintf_r+0x194a>
10011fca:	2367      	movs	r3, #103	@ 0x67
10011fcc:	930e      	str	r3, [sp, #56]	@ 0x38
10011fce:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10011fd0:	780b      	ldrb	r3, [r1, #0]
10011fd2:	2bff      	cmp	r3, #255	@ 0xff
10011fd4:	d062      	beq.n	1001209c <_vfprintf_r+0x1c34>
10011fd6:	2400      	movs	r4, #0
10011fd8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
10011fda:	4620      	mov	r0, r4
10011fdc:	e003      	b.n	10011fe6 <_vfprintf_r+0x1b7e>
10011fde:	3001      	adds	r0, #1
10011fe0:	3101      	adds	r1, #1
10011fe2:	2bff      	cmp	r3, #255	@ 0xff
10011fe4:	d008      	beq.n	10011ff8 <_vfprintf_r+0x1b90>
10011fe6:	4293      	cmp	r3, r2
10011fe8:	da06      	bge.n	10011ff8 <_vfprintf_r+0x1b90>
10011fea:	1ad2      	subs	r2, r2, r3
10011fec:	784b      	ldrb	r3, [r1, #1]
10011fee:	2b00      	cmp	r3, #0
10011ff0:	d1f5      	bne.n	10011fde <_vfprintf_r+0x1b76>
10011ff2:	780b      	ldrb	r3, [r1, #0]
10011ff4:	3401      	adds	r4, #1
10011ff6:	e7f4      	b.n	10011fe2 <_vfprintf_r+0x1b7a>
10011ff8:	911b      	str	r1, [sp, #108]	@ 0x6c
10011ffa:	9212      	str	r2, [sp, #72]	@ 0x48
10011ffc:	9010      	str	r0, [sp, #64]	@ 0x40
10011ffe:	9414      	str	r4, [sp, #80]	@ 0x50
10012000:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
10012004:	9a10      	ldr	r2, [sp, #64]	@ 0x40
10012006:	4413      	add	r3, r2
10012008:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
1001200a:	fb02 bb03 	mla	fp, r2, r3, fp
1001200e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10012012:	9306      	str	r3, [sp, #24]
10012014:	e42f      	b.n	10011876 <_vfprintf_r+0x140e>
10012016:	bf00      	nop
10012018:	100191b8 	.word	0x100191b8
1001201c:	100191a8 	.word	0x100191a8
10012020:	10019188 	.word	0x10019188
10012024:	10019174 	.word	0x10019174
10012028:	1001916c 	.word	0x1001916c
1001202c:	10019170 	.word	0x10019170
10012030:	f1c3 0301 	rsb	r3, r3, #1
10012034:	449b      	add	fp, r3
10012036:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001203a:	9306      	str	r3, [sp, #24]
1001203c:	2367      	movs	r3, #103	@ 0x67
1001203e:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10012042:	930e      	str	r3, [sp, #56]	@ 0x38
10012044:	e57e      	b.n	10011b44 <_vfprintf_r+0x16dc>
10012046:	4e1b      	ldr	r6, [pc, #108]	@ (100120b4 <_vfprintf_r+0x1c4c>)
10012048:	e60f      	b.n	10011c6a <_vfprintf_r+0x1802>
1001204a:	2302      	movs	r3, #2
1001204c:	931c      	str	r3, [sp, #112]	@ 0x70
1001204e:	f7ff bbfd 	b.w	1001184c <_vfprintf_r+0x13e4>
10012052:	4a18      	ldr	r2, [pc, #96]	@ (100120b4 <_vfprintf_r+0x1c4c>)
10012054:	9215      	str	r2, [sp, #84]	@ 0x54
10012056:	e52b      	b.n	10011ab0 <_vfprintf_r+0x1648>
10012058:	2170      	movs	r1, #112	@ 0x70
1001205a:	f7ff bbc0 	b.w	100117de <_vfprintf_r+0x1376>
1001205e:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10012062:	b92b      	cbnz	r3, 10012070 <_vfprintf_r+0x1c08>
10012064:	2301      	movs	r3, #1
10012066:	2266      	movs	r2, #102	@ 0x66
10012068:	9306      	str	r3, [sp, #24]
1001206a:	920e      	str	r2, [sp, #56]	@ 0x38
1001206c:	469b      	mov	fp, r3
1001206e:	e569      	b.n	10011b44 <_vfprintf_r+0x16dc>
10012070:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012072:	1c5f      	adds	r7, r3, #1
10012074:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012076:	443b      	add	r3, r7
10012078:	469b      	mov	fp, r3
1001207a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1001207e:	9306      	str	r3, [sp, #24]
10012080:	2366      	movs	r3, #102	@ 0x66
10012082:	930e      	str	r3, [sp, #56]	@ 0x38
10012084:	e55e      	b.n	10011b44 <_vfprintf_r+0x16dc>
10012086:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10012088:	7863      	ldrb	r3, [r4, #1]
1001208a:	460c      	mov	r4, r1
1001208c:	f852 1b04 	ldr.w	r1, [r2], #4
10012090:	920d      	str	r2, [sp, #52]	@ 0x34
10012092:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10012096:	9109      	str	r1, [sp, #36]	@ 0x24
10012098:	f7fe ba5e 	b.w	10010558 <_vfprintf_r+0xf0>
1001209c:	2300      	movs	r3, #0
1001209e:	9314      	str	r3, [sp, #80]	@ 0x50
100120a0:	9310      	str	r3, [sp, #64]	@ 0x40
100120a2:	e7ad      	b.n	10012000 <_vfprintf_r+0x1b98>
100120a4:	e9dd 2b07 	ldrd	r2, fp, [sp, #28]
100120a8:	8993      	ldrh	r3, [r2, #12]
100120aa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100120ae:	8193      	strh	r3, [r2, #12]
100120b0:	f7fe bb32 	b.w	10010718 <_vfprintf_r+0x2b0>
100120b4:	100191a8 	.word	0x100191a8

100120b8 <__sbprintf>:
100120b8:	b5f0      	push	{r4, r5, r6, r7, lr}
100120ba:	461f      	mov	r7, r3
100120bc:	898b      	ldrh	r3, [r1, #12]
100120be:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
100120c2:	f023 0302 	bic.w	r3, r3, #2
100120c6:	f8ad 300c 	strh.w	r3, [sp, #12]
100120ca:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
100120cc:	9319      	str	r3, [sp, #100]	@ 0x64
100120ce:	89cb      	ldrh	r3, [r1, #14]
100120d0:	f8ad 300e 	strh.w	r3, [sp, #14]
100120d4:	69cb      	ldr	r3, [r1, #28]
100120d6:	9307      	str	r3, [sp, #28]
100120d8:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
100120da:	9309      	str	r3, [sp, #36]	@ 0x24
100120dc:	ab1a      	add	r3, sp, #104	@ 0x68
100120de:	9300      	str	r3, [sp, #0]
100120e0:	9304      	str	r3, [sp, #16]
100120e2:	f44f 6380 	mov.w	r3, #1024	@ 0x400
100120e6:	4615      	mov	r5, r2
100120e8:	4606      	mov	r6, r0
100120ea:	9302      	str	r3, [sp, #8]
100120ec:	9305      	str	r3, [sp, #20]
100120ee:	a816      	add	r0, sp, #88	@ 0x58
100120f0:	2300      	movs	r3, #0
100120f2:	460c      	mov	r4, r1
100120f4:	9306      	str	r3, [sp, #24]
100120f6:	f002 f877 	bl	100141e8 <__retarget_lock_init_recursive>
100120fa:	462a      	mov	r2, r5
100120fc:	463b      	mov	r3, r7
100120fe:	4669      	mov	r1, sp
10012100:	4630      	mov	r0, r6
10012102:	f7fe f9b1 	bl	10010468 <_vfprintf_r>
10012106:	1e05      	subs	r5, r0, #0
10012108:	db07      	blt.n	1001211a <__sbprintf+0x62>
1001210a:	4669      	mov	r1, sp
1001210c:	4630      	mov	r0, r6
1001210e:	f001 fb6d 	bl	100137ec <_fflush_r>
10012112:	2800      	cmp	r0, #0
10012114:	bf18      	it	ne
10012116:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
1001211a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
1001211e:	065b      	lsls	r3, r3, #25
10012120:	d503      	bpl.n	1001212a <__sbprintf+0x72>
10012122:	89a3      	ldrh	r3, [r4, #12]
10012124:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012128:	81a3      	strh	r3, [r4, #12]
1001212a:	9816      	ldr	r0, [sp, #88]	@ 0x58
1001212c:	f002 f85e 	bl	100141ec <__retarget_lock_close_recursive>
10012130:	4628      	mov	r0, r5
10012132:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10012136:	bdf0      	pop	{r4, r5, r6, r7, pc}

10012138 <__sprint_r.part.0>:
10012138:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001213c:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001213e:	049c      	lsls	r4, r3, #18
10012140:	4690      	mov	r8, r2
10012142:	d52e      	bpl.n	100121a2 <__sprint_r.part.0+0x6a>
10012144:	6893      	ldr	r3, [r2, #8]
10012146:	6812      	ldr	r2, [r2, #0]
10012148:	b34b      	cbz	r3, 1001219e <__sprint_r.part.0+0x66>
1001214a:	460d      	mov	r5, r1
1001214c:	4606      	mov	r6, r0
1001214e:	f102 0908 	add.w	r9, r2, #8
10012152:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
10012156:	ea5f 079a 	movs.w	r7, sl, lsr #2
1001215a:	d016      	beq.n	1001218a <__sprint_r.part.0+0x52>
1001215c:	f1a2 0b04 	sub.w	fp, r2, #4
10012160:	2400      	movs	r4, #0
10012162:	e001      	b.n	10012168 <__sprint_r.part.0+0x30>
10012164:	42a7      	cmp	r7, r4
10012166:	d00e      	beq.n	10012186 <__sprint_r.part.0+0x4e>
10012168:	f85b 1f04 	ldr.w	r1, [fp, #4]!
1001216c:	462a      	mov	r2, r5
1001216e:	4630      	mov	r0, r6
10012170:	f001 fe96 	bl	10013ea0 <_fputwc_r>
10012174:	1c43      	adds	r3, r0, #1
10012176:	f104 0401 	add.w	r4, r4, #1
1001217a:	d1f3      	bne.n	10012164 <__sprint_r.part.0+0x2c>
1001217c:	2300      	movs	r3, #0
1001217e:	e9c8 3301 	strd	r3, r3, [r8, #4]
10012182:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10012186:	f8d8 3008 	ldr.w	r3, [r8, #8]
1001218a:	f02a 0a03 	bic.w	sl, sl, #3
1001218e:	eba3 030a 	sub.w	r3, r3, sl
10012192:	f8c8 3008 	str.w	r3, [r8, #8]
10012196:	f109 0908 	add.w	r9, r9, #8
1001219a:	2b00      	cmp	r3, #0
1001219c:	d1d9      	bne.n	10012152 <__sprint_r.part.0+0x1a>
1001219e:	2000      	movs	r0, #0
100121a0:	e7ec      	b.n	1001217c <__sprint_r.part.0+0x44>
100121a2:	f001 fc3b 	bl	10013a1c <__sfvwrite_r>
100121a6:	2300      	movs	r3, #0
100121a8:	e9c8 3301 	strd	r3, r3, [r8, #4]
100121ac:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

100121b0 <__sprint_r>:
100121b0:	b410      	push	{r4}
100121b2:	6894      	ldr	r4, [r2, #8]
100121b4:	b11c      	cbz	r4, 100121be <__sprint_r+0xe>
100121b6:	f85d 4b04 	ldr.w	r4, [sp], #4
100121ba:	f7ff bfbd 	b.w	10012138 <__sprint_r.part.0>
100121be:	4620      	mov	r0, r4
100121c0:	6054      	str	r4, [r2, #4]
100121c2:	f85d 4b04 	ldr.w	r4, [sp], #4
100121c6:	4770      	bx	lr

100121c8 <_vfiprintf_r>:
100121c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100121cc:	b0c7      	sub	sp, #284	@ 0x11c
100121ce:	af16      	add	r7, sp, #88	@ 0x58
100121d0:	4683      	mov	fp, r0
100121d2:	9103      	str	r1, [sp, #12]
100121d4:	9206      	str	r2, [sp, #24]
100121d6:	2100      	movs	r1, #0
100121d8:	2208      	movs	r2, #8
100121da:	4638      	mov	r0, r7
100121dc:	461c      	mov	r4, r3
100121de:	930a      	str	r3, [sp, #40]	@ 0x28
100121e0:	f001 ff0e 	bl	10014000 <memset>
100121e4:	f1bb 0f00 	cmp.w	fp, #0
100121e8:	d004      	beq.n	100121f4 <_vfiprintf_r+0x2c>
100121ea:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
100121ee:	2b00      	cmp	r3, #0
100121f0:	f000 86b8 	beq.w	10012f64 <_vfiprintf_r+0xd9c>
100121f4:	9a03      	ldr	r2, [sp, #12]
100121f6:	6e53      	ldr	r3, [r2, #100]	@ 0x64
100121f8:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
100121fc:	07db      	lsls	r3, r3, #31
100121fe:	d402      	bmi.n	10012206 <_vfiprintf_r+0x3e>
10012200:	0596      	lsls	r6, r2, #22
10012202:	f140 859d 	bpl.w	10012d40 <_vfiprintf_r+0xb78>
10012206:	0495      	lsls	r5, r2, #18
10012208:	d407      	bmi.n	1001221a <_vfiprintf_r+0x52>
1001220a:	9903      	ldr	r1, [sp, #12]
1001220c:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001220e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10012212:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
10012216:	818a      	strh	r2, [r1, #12]
10012218:	664b      	str	r3, [r1, #100]	@ 0x64
1001221a:	0710      	lsls	r0, r2, #28
1001221c:	f140 80c9 	bpl.w	100123b2 <_vfiprintf_r+0x1ea>
10012220:	9b03      	ldr	r3, [sp, #12]
10012222:	691b      	ldr	r3, [r3, #16]
10012224:	2b00      	cmp	r3, #0
10012226:	f000 80c4 	beq.w	100123b2 <_vfiprintf_r+0x1ea>
1001222a:	f002 031a 	and.w	r3, r2, #26
1001222e:	2b0a      	cmp	r3, #10
10012230:	f000 80ce 	beq.w	100123d0 <_vfiprintf_r+0x208>
10012234:	2300      	movs	r3, #0
10012236:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
1001223a:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
1001223e:	aa1d      	add	r2, sp, #116	@ 0x74
10012240:	f8df a904 	ldr.w	sl, [pc, #2308]	@ 10012b48 <_vfiprintf_r+0x980>
10012244:	930d      	str	r3, [sp, #52]	@ 0x34
10012246:	921a      	str	r2, [sp, #104]	@ 0x68
10012248:	4691      	mov	r9, r2
1001224a:	9310      	str	r3, [sp, #64]	@ 0x40
1001224c:	9307      	str	r3, [sp, #28]
1001224e:	9d06      	ldr	r5, [sp, #24]
10012250:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
10012254:	f001 ff5a 	bl	1001410c <__locale_mb_cur_max>
10012258:	462a      	mov	r2, r5
1001225a:	4603      	mov	r3, r0
1001225c:	a914      	add	r1, sp, #80	@ 0x50
1001225e:	9700      	str	r7, [sp, #0]
10012260:	4658      	mov	r0, fp
10012262:	47a0      	blx	r4
10012264:	2800      	cmp	r0, #0
10012266:	f000 80d2 	beq.w	1001240e <_vfiprintf_r+0x246>
1001226a:	f2c0 80c8 	blt.w	100123fe <_vfiprintf_r+0x236>
1001226e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
10012270:	2a25      	cmp	r2, #37	@ 0x25
10012272:	4603      	mov	r3, r0
10012274:	d001      	beq.n	1001227a <_vfiprintf_r+0xb2>
10012276:	441d      	add	r5, r3
10012278:	e7ea      	b.n	10012250 <_vfiprintf_r+0x88>
1001227a:	9b06      	ldr	r3, [sp, #24]
1001227c:	1aee      	subs	r6, r5, r3
1001227e:	4604      	mov	r4, r0
10012280:	f040 80c9 	bne.w	10012416 <_vfiprintf_r+0x24e>
10012284:	2300      	movs	r3, #0
10012286:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001228a:	786a      	ldrb	r2, [r5, #1]
1001228c:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10012290:	9308      	str	r3, [sp, #32]
10012292:	1c6c      	adds	r4, r5, #1
10012294:	9105      	str	r1, [sp, #20]
10012296:	9302      	str	r3, [sp, #8]
10012298:	3401      	adds	r4, #1
1001229a:	f1a2 0320 	sub.w	r3, r2, #32
1001229e:	2b5a      	cmp	r3, #90	@ 0x5a
100122a0:	f200 80ff 	bhi.w	100124a2 <_vfiprintf_r+0x2da>
100122a4:	e8df f013 	tbh	[pc, r3, lsl #1]
100122a8:	00fd0300 	.word	0x00fd0300
100122ac:	02fa00fd 	.word	0x02fa00fd
100122b0:	00fd00fd 	.word	0x00fd00fd
100122b4:	006b00fd 	.word	0x006b00fd
100122b8:	00fd00fd 	.word	0x00fd00fd
100122bc:	032a0215 	.word	0x032a0215
100122c0:	022000fd 	.word	0x022000fd
100122c4:	00fd0310 	.word	0x00fd0310
100122c8:	005b030a 	.word	0x005b030a
100122cc:	005b005b 	.word	0x005b005b
100122d0:	005b005b 	.word	0x005b005b
100122d4:	005b005b 	.word	0x005b005b
100122d8:	005b005b 	.word	0x005b005b
100122dc:	00fd00fd 	.word	0x00fd00fd
100122e0:	00fd00fd 	.word	0x00fd00fd
100122e4:	00fd00fd 	.word	0x00fd00fd
100122e8:	00fd00fd 	.word	0x00fd00fd
100122ec:	01cb00fd 	.word	0x01cb00fd
100122f0:	00fd025a 	.word	0x00fd025a
100122f4:	00fd00fd 	.word	0x00fd00fd
100122f8:	00fd00fd 	.word	0x00fd00fd
100122fc:	00fd00fd 	.word	0x00fd00fd
10012300:	00fd00fd 	.word	0x00fd00fd
10012304:	022600fd 	.word	0x022600fd
10012308:	00fd00fd 	.word	0x00fd00fd
1001230c:	01a300fd 	.word	0x01a300fd
10012310:	027300fd 	.word	0x027300fd
10012314:	00fd00fd 	.word	0x00fd00fd
10012318:	00fd058c 	.word	0x00fd058c
1001231c:	00fd00fd 	.word	0x00fd00fd
10012320:	00fd00fd 	.word	0x00fd00fd
10012324:	00fd00fd 	.word	0x00fd00fd
10012328:	00fd00fd 	.word	0x00fd00fd
1001232c:	01cb00fd 	.word	0x01cb00fd
10012330:	00fd01f0 	.word	0x00fd01f0
10012334:	00fd00fd 	.word	0x00fd00fd
10012338:	01f002c1 	.word	0x01f002c1
1001233c:	00fd007f 	.word	0x00fd007f
10012340:	00fd032f 	.word	0x00fd032f
10012344:	058902eb 	.word	0x058902eb
10012348:	007f02ca 	.word	0x007f02ca
1001234c:	01a300fd 	.word	0x01a300fd
10012350:	0586007d 	.word	0x0586007d
10012354:	00fd00fd 	.word	0x00fd00fd
10012358:	00fd05af 	.word	0x00fd05af
1001235c:	007d      	.short	0x007d
1001235e:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10012362:	2200      	movs	r2, #0
10012364:	4611      	mov	r1, r2
10012366:	f814 2b01 	ldrb.w	r2, [r4], #1
1001236a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001236e:	eb03 0141 	add.w	r1, r3, r1, lsl #1
10012372:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10012376:	2b09      	cmp	r3, #9
10012378:	d9f5      	bls.n	10012366 <_vfiprintf_r+0x19e>
1001237a:	9108      	str	r1, [sp, #32]
1001237c:	e78d      	b.n	1001229a <_vfiprintf_r+0xd2>
1001237e:	4658      	mov	r0, fp
10012380:	f001 feca 	bl	10014118 <_localeconv_r>
10012384:	6843      	ldr	r3, [r0, #4]
10012386:	9310      	str	r3, [sp, #64]	@ 0x40
10012388:	4618      	mov	r0, r3
1001238a:	f002 f839 	bl	10014400 <strlen>
1001238e:	900f      	str	r0, [sp, #60]	@ 0x3c
10012390:	4605      	mov	r5, r0
10012392:	4658      	mov	r0, fp
10012394:	f001 fec0 	bl	10014118 <_localeconv_r>
10012398:	6883      	ldr	r3, [r0, #8]
1001239a:	930e      	str	r3, [sp, #56]	@ 0x38
1001239c:	2d00      	cmp	r5, #0
1001239e:	f040 84e3 	bne.w	10012d68 <_vfiprintf_r+0xba0>
100123a2:	7822      	ldrb	r2, [r4, #0]
100123a4:	e778      	b.n	10012298 <_vfiprintf_r+0xd0>
100123a6:	9b02      	ldr	r3, [sp, #8]
100123a8:	7822      	ldrb	r2, [r4, #0]
100123aa:	f043 0320 	orr.w	r3, r3, #32
100123ae:	9302      	str	r3, [sp, #8]
100123b0:	e772      	b.n	10012298 <_vfiprintf_r+0xd0>
100123b2:	9d03      	ldr	r5, [sp, #12]
100123b4:	4658      	mov	r0, fp
100123b6:	4629      	mov	r1, r5
100123b8:	f001 fcd4 	bl	10013d64 <__swsetup_r>
100123bc:	2800      	cmp	r0, #0
100123be:	f040 86a3 	bne.w	10013108 <_vfiprintf_r+0xf40>
100123c2:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
100123c6:	f002 031a 	and.w	r3, r2, #26
100123ca:	2b0a      	cmp	r3, #10
100123cc:	f47f af32 	bne.w	10012234 <_vfiprintf_r+0x6c>
100123d0:	9903      	ldr	r1, [sp, #12]
100123d2:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
100123d6:	2b00      	cmp	r3, #0
100123d8:	f6ff af2c 	blt.w	10012234 <_vfiprintf_r+0x6c>
100123dc:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
100123de:	07db      	lsls	r3, r3, #31
100123e0:	d402      	bmi.n	100123e8 <_vfiprintf_r+0x220>
100123e2:	0597      	lsls	r7, r2, #22
100123e4:	f140 865b 	bpl.w	1001309e <_vfiprintf_r+0xed6>
100123e8:	9a06      	ldr	r2, [sp, #24]
100123ea:	9903      	ldr	r1, [sp, #12]
100123ec:	4623      	mov	r3, r4
100123ee:	4658      	mov	r0, fp
100123f0:	f000 febe 	bl	10013170 <__sbprintf>
100123f4:	9007      	str	r0, [sp, #28]
100123f6:	9807      	ldr	r0, [sp, #28]
100123f8:	b047      	add	sp, #284	@ 0x11c
100123fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100123fe:	2208      	movs	r2, #8
10012400:	2100      	movs	r1, #0
10012402:	4638      	mov	r0, r7
10012404:	f001 fdfc 	bl	10014000 <memset>
10012408:	2301      	movs	r3, #1
1001240a:	441d      	add	r5, r3
1001240c:	e720      	b.n	10012250 <_vfiprintf_r+0x88>
1001240e:	9b06      	ldr	r3, [sp, #24]
10012410:	1aee      	subs	r6, r5, r3
10012412:	4604      	mov	r4, r0
10012414:	d012      	beq.n	1001243c <_vfiprintf_r+0x274>
10012416:	9b06      	ldr	r3, [sp, #24]
10012418:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
1001241a:	e9c9 3600 	strd	r3, r6, [r9]
1001241e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10012420:	3301      	adds	r3, #1
10012422:	4432      	add	r2, r6
10012424:	2b07      	cmp	r3, #7
10012426:	921c      	str	r2, [sp, #112]	@ 0x70
10012428:	931b      	str	r3, [sp, #108]	@ 0x6c
1001242a:	dc11      	bgt.n	10012450 <_vfiprintf_r+0x288>
1001242c:	f109 0908 	add.w	r9, r9, #8
10012430:	9b07      	ldr	r3, [sp, #28]
10012432:	4433      	add	r3, r6
10012434:	9307      	str	r3, [sp, #28]
10012436:	2c00      	cmp	r4, #0
10012438:	f47f af24 	bne.w	10012284 <_vfiprintf_r+0xbc>
1001243c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001243e:	2b00      	cmp	r3, #0
10012440:	f040 864d 	bne.w	100130de <_vfiprintf_r+0xf16>
10012444:	9b03      	ldr	r3, [sp, #12]
10012446:	2200      	movs	r2, #0
10012448:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001244c:	921b      	str	r2, [sp, #108]	@ 0x6c
1001244e:	e01c      	b.n	1001248a <_vfiprintf_r+0x2c2>
10012450:	2a00      	cmp	r2, #0
10012452:	f000 842d 	beq.w	10012cb0 <_vfiprintf_r+0xae8>
10012456:	9903      	ldr	r1, [sp, #12]
10012458:	aa1a      	add	r2, sp, #104	@ 0x68
1001245a:	4658      	mov	r0, fp
1001245c:	f7ff fe6c 	bl	10012138 <__sprint_r.part.0>
10012460:	b980      	cbnz	r0, 10012484 <_vfiprintf_r+0x2bc>
10012462:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012466:	e7e3      	b.n	10012430 <_vfiprintf_r+0x268>
10012468:	9903      	ldr	r1, [sp, #12]
1001246a:	aa1a      	add	r2, sp, #104	@ 0x68
1001246c:	4658      	mov	r0, fp
1001246e:	f7ff fe63 	bl	10012138 <__sprint_r.part.0>
10012472:	2800      	cmp	r0, #0
10012474:	f000 80a6 	beq.w	100125c4 <_vfiprintf_r+0x3fc>
10012478:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001247a:	b11b      	cbz	r3, 10012484 <_vfiprintf_r+0x2bc>
1001247c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1001247e:	4658      	mov	r0, fp
10012480:	f003 f8b8 	bl	100155f4 <_free_r>
10012484:	9b03      	ldr	r3, [sp, #12]
10012486:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001248a:	9a03      	ldr	r2, [sp, #12]
1001248c:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001248e:	07d1      	lsls	r1, r2, #31
10012490:	f140 80a3 	bpl.w	100125da <_vfiprintf_r+0x412>
10012494:	065b      	lsls	r3, r3, #25
10012496:	f100 8643 	bmi.w	10013120 <_vfiprintf_r+0xf58>
1001249a:	9807      	ldr	r0, [sp, #28]
1001249c:	b047      	add	sp, #284	@ 0x11c
1001249e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100124a2:	9406      	str	r4, [sp, #24]
100124a4:	2a00      	cmp	r2, #0
100124a6:	d0c9      	beq.n	1001243c <_vfiprintf_r+0x274>
100124a8:	2300      	movs	r3, #0
100124aa:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100124ae:	2301      	movs	r3, #1
100124b0:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
100124b4:	9304      	str	r3, [sp, #16]
100124b6:	9309      	str	r3, [sp, #36]	@ 0x24
100124b8:	ac2d      	add	r4, sp, #180	@ 0xb4
100124ba:	2300      	movs	r3, #0
100124bc:	930b      	str	r3, [sp, #44]	@ 0x2c
100124be:	9305      	str	r3, [sp, #20]
100124c0:	9b02      	ldr	r3, [sp, #8]
100124c2:	f013 0302 	ands.w	r3, r3, #2
100124c6:	d002      	beq.n	100124ce <_vfiprintf_r+0x306>
100124c8:	9a04      	ldr	r2, [sp, #16]
100124ca:	3202      	adds	r2, #2
100124cc:	9204      	str	r2, [sp, #16]
100124ce:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
100124d2:	9d02      	ldr	r5, [sp, #8]
100124d4:	1c50      	adds	r0, r2, #1
100124d6:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
100124da:	4601      	mov	r1, r0
100124dc:	950c      	str	r5, [sp, #48]	@ 0x30
100124de:	d105      	bne.n	100124ec <_vfiprintf_r+0x324>
100124e0:	9d08      	ldr	r5, [sp, #32]
100124e2:	9e04      	ldr	r6, [sp, #16]
100124e4:	1bad      	subs	r5, r5, r6
100124e6:	2d00      	cmp	r5, #0
100124e8:	f300 8332 	bgt.w	10012b50 <_vfiprintf_r+0x988>
100124ec:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
100124f0:	b188      	cbz	r0, 10012516 <_vfiprintf_r+0x34e>
100124f2:	2201      	movs	r2, #1
100124f4:	f10c 0c01 	add.w	ip, ip, #1
100124f8:	f8c9 2004 	str.w	r2, [r9, #4]
100124fc:	2907      	cmp	r1, #7
100124fe:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
10012502:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10012506:	f8c9 2000 	str.w	r2, [r9]
1001250a:	f300 82e1 	bgt.w	10012ad0 <_vfiprintf_r+0x908>
1001250e:	460a      	mov	r2, r1
10012510:	f109 0908 	add.w	r9, r9, #8
10012514:	3101      	adds	r1, #1
10012516:	b1eb      	cbz	r3, 10012554 <_vfiprintf_r+0x38c>
10012518:	ab13      	add	r3, sp, #76	@ 0x4c
1001251a:	f10c 0c02 	add.w	ip, ip, #2
1001251e:	f8c9 3000 	str.w	r3, [r9]
10012522:	2907      	cmp	r1, #7
10012524:	f04f 0302 	mov.w	r3, #2
10012528:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
1001252c:	f8c9 3004 	str.w	r3, [r9, #4]
10012530:	f340 82ec 	ble.w	10012b0c <_vfiprintf_r+0x944>
10012534:	f1bc 0f00 	cmp.w	ip, #0
10012538:	f000 83db 	beq.w	10012cf2 <_vfiprintf_r+0xb2a>
1001253c:	9903      	ldr	r1, [sp, #12]
1001253e:	aa1a      	add	r2, sp, #104	@ 0x68
10012540:	4658      	mov	r0, fp
10012542:	f7ff fdf9 	bl	10012138 <__sprint_r.part.0>
10012546:	2800      	cmp	r0, #0
10012548:	d196      	bne.n	10012478 <_vfiprintf_r+0x2b0>
1001254a:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001254e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012552:	1c51      	adds	r1, r2, #1
10012554:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10012556:	2b80      	cmp	r3, #128	@ 0x80
10012558:	f000 8213 	beq.w	10012982 <_vfiprintf_r+0x7ba>
1001255c:	9b05      	ldr	r3, [sp, #20]
1001255e:	9809      	ldr	r0, [sp, #36]	@ 0x24
10012560:	1a1d      	subs	r5, r3, r0
10012562:	2d00      	cmp	r5, #0
10012564:	f300 8268 	bgt.w	10012a38 <_vfiprintf_r+0x870>
10012568:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001256a:	f8c9 4000 	str.w	r4, [r9]
1001256e:	eb02 030c 	add.w	r3, r2, ip
10012572:	2907      	cmp	r1, #7
10012574:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
10012578:	f8c9 2004 	str.w	r2, [r9, #4]
1001257c:	f340 81fe 	ble.w	1001297c <_vfiprintf_r+0x7b4>
10012580:	2b00      	cmp	r3, #0
10012582:	f000 832c 	beq.w	10012bde <_vfiprintf_r+0xa16>
10012586:	9903      	ldr	r1, [sp, #12]
10012588:	aa1a      	add	r2, sp, #104	@ 0x68
1001258a:	4658      	mov	r0, fp
1001258c:	f7ff fdd4 	bl	10012138 <__sprint_r.part.0>
10012590:	2800      	cmp	r0, #0
10012592:	f47f af71 	bne.w	10012478 <_vfiprintf_r+0x2b0>
10012596:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10012598:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001259c:	9a02      	ldr	r2, [sp, #8]
1001259e:	0750      	lsls	r0, r2, #29
100125a0:	d505      	bpl.n	100125ae <_vfiprintf_r+0x3e6>
100125a2:	9a08      	ldr	r2, [sp, #32]
100125a4:	9904      	ldr	r1, [sp, #16]
100125a6:	1a54      	subs	r4, r2, r1
100125a8:	2c00      	cmp	r4, #0
100125aa:	f300 8323 	bgt.w	10012bf4 <_vfiprintf_r+0xa2c>
100125ae:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
100125b2:	9804      	ldr	r0, [sp, #16]
100125b4:	4281      	cmp	r1, r0
100125b6:	bfac      	ite	ge
100125b8:	1852      	addge	r2, r2, r1
100125ba:	1812      	addlt	r2, r2, r0
100125bc:	9207      	str	r2, [sp, #28]
100125be:	2b00      	cmp	r3, #0
100125c0:	f47f af52 	bne.w	10012468 <_vfiprintf_r+0x2a0>
100125c4:	2300      	movs	r3, #0
100125c6:	931b      	str	r3, [sp, #108]	@ 0x6c
100125c8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100125ca:	b11b      	cbz	r3, 100125d4 <_vfiprintf_r+0x40c>
100125cc:	4619      	mov	r1, r3
100125ce:	4658      	mov	r0, fp
100125d0:	f003 f810 	bl	100155f4 <_free_r>
100125d4:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100125d8:	e639      	b.n	1001224e <_vfiprintf_r+0x86>
100125da:	059a      	lsls	r2, r3, #22
100125dc:	f53f af5a 	bmi.w	10012494 <_vfiprintf_r+0x2cc>
100125e0:	9c03      	ldr	r4, [sp, #12]
100125e2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100125e4:	f001 fe06 	bl	100141f4 <__retarget_lock_release_recursive>
100125e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100125ec:	e752      	b.n	10012494 <_vfiprintf_r+0x2cc>
100125ee:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
100125f0:	9406      	str	r4, [sp, #24]
100125f2:	f856 4b04 	ldr.w	r4, [r6], #4
100125f6:	2300      	movs	r3, #0
100125f8:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100125fc:	2c00      	cmp	r4, #0
100125fe:	f000 84c9 	beq.w	10012f94 <_vfiprintf_r+0xdcc>
10012602:	2a53      	cmp	r2, #83	@ 0x53
10012604:	f000 8422 	beq.w	10012e4c <_vfiprintf_r+0xc84>
10012608:	9b02      	ldr	r3, [sp, #8]
1001260a:	f013 0510 	ands.w	r5, r3, #16
1001260e:	f040 841d 	bne.w	10012e4c <_vfiprintf_r+0xc84>
10012612:	9b05      	ldr	r3, [sp, #20]
10012614:	1c5a      	adds	r2, r3, #1
10012616:	f000 854e 	beq.w	100130b6 <_vfiprintf_r+0xeee>
1001261a:	461a      	mov	r2, r3
1001261c:	4629      	mov	r1, r5
1001261e:	4620      	mov	r0, r4
10012620:	f001 fdee 	bl	10014200 <memchr>
10012624:	900b      	str	r0, [sp, #44]	@ 0x2c
10012626:	2800      	cmp	r0, #0
10012628:	f000 853e 	beq.w	100130a8 <_vfiprintf_r+0xee0>
1001262c:	1b03      	subs	r3, r0, r4
1001262e:	9309      	str	r3, [sp, #36]	@ 0x24
10012630:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10012634:	9505      	str	r5, [sp, #20]
10012636:	960a      	str	r6, [sp, #40]	@ 0x28
10012638:	9304      	str	r3, [sp, #16]
1001263a:	950b      	str	r5, [sp, #44]	@ 0x2c
1001263c:	e18d      	b.n	1001295a <_vfiprintf_r+0x792>
1001263e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012640:	9406      	str	r4, [sp, #24]
10012642:	2a43      	cmp	r2, #67	@ 0x43
10012644:	f103 0504 	add.w	r5, r3, #4
10012648:	d003      	beq.n	10012652 <_vfiprintf_r+0x48a>
1001264a:	9b02      	ldr	r3, [sp, #8]
1001264c:	06de      	lsls	r6, r3, #27
1001264e:	f140 83e5 	bpl.w	10012e1c <_vfiprintf_r+0xc54>
10012652:	2208      	movs	r2, #8
10012654:	2100      	movs	r1, #0
10012656:	a818      	add	r0, sp, #96	@ 0x60
10012658:	f001 fcd2 	bl	10014000 <memset>
1001265c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001265e:	ac2d      	add	r4, sp, #180	@ 0xb4
10012660:	681a      	ldr	r2, [r3, #0]
10012662:	4621      	mov	r1, r4
10012664:	ab18      	add	r3, sp, #96	@ 0x60
10012666:	4658      	mov	r0, fp
10012668:	f001 ff36 	bl	100144d8 <_wcrtomb_r>
1001266c:	4603      	mov	r3, r0
1001266e:	3301      	adds	r3, #1
10012670:	9009      	str	r0, [sp, #36]	@ 0x24
10012672:	f000 8541 	beq.w	100130f8 <_vfiprintf_r+0xf30>
10012676:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012678:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1001267c:	9304      	str	r3, [sp, #16]
1001267e:	2300      	movs	r3, #0
10012680:	950a      	str	r5, [sp, #40]	@ 0x28
10012682:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10012686:	e718      	b.n	100124ba <_vfiprintf_r+0x2f2>
10012688:	9b02      	ldr	r3, [sp, #8]
1001268a:	9406      	str	r4, [sp, #24]
1001268c:	069c      	lsls	r4, r3, #26
1001268e:	d56d      	bpl.n	1001276c <_vfiprintf_r+0x5a4>
10012690:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012692:	3307      	adds	r3, #7
10012694:	f023 0307 	bic.w	r3, r3, #7
10012698:	4619      	mov	r1, r3
1001269a:	685a      	ldr	r2, [r3, #4]
1001269c:	f851 3b08 	ldr.w	r3, [r1], #8
100126a0:	910a      	str	r1, [sp, #40]	@ 0x28
100126a2:	4611      	mov	r1, r2
100126a4:	2a00      	cmp	r2, #0
100126a6:	f2c0 8137 	blt.w	10012918 <_vfiprintf_r+0x750>
100126aa:	9a05      	ldr	r2, [sp, #20]
100126ac:	3201      	adds	r2, #1
100126ae:	f000 8140 	beq.w	10012932 <_vfiprintf_r+0x76a>
100126b2:	9a02      	ldr	r2, [sp, #8]
100126b4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
100126b8:	9202      	str	r2, [sp, #8]
100126ba:	ea53 0201 	orrs.w	r2, r3, r1
100126be:	f040 8138 	bne.w	10012932 <_vfiprintf_r+0x76a>
100126c2:	9b05      	ldr	r3, [sp, #20]
100126c4:	2b00      	cmp	r3, #0
100126c6:	f040 8508 	bne.w	100130da <_vfiprintf_r+0xf12>
100126ca:	9304      	str	r3, [sp, #16]
100126cc:	9309      	str	r3, [sp, #36]	@ 0x24
100126ce:	ac46      	add	r4, sp, #280	@ 0x118
100126d0:	e141      	b.n	10012956 <_vfiprintf_r+0x78e>
100126d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100126d4:	f853 2b04 	ldr.w	r2, [r3], #4
100126d8:	9208      	str	r2, [sp, #32]
100126da:	2a00      	cmp	r2, #0
100126dc:	f280 8328 	bge.w	10012d30 <_vfiprintf_r+0xb68>
100126e0:	9a08      	ldr	r2, [sp, #32]
100126e2:	930a      	str	r3, [sp, #40]	@ 0x28
100126e4:	4252      	negs	r2, r2
100126e6:	9208      	str	r2, [sp, #32]
100126e8:	9b02      	ldr	r3, [sp, #8]
100126ea:	7822      	ldrb	r2, [r4, #0]
100126ec:	f043 0304 	orr.w	r3, r3, #4
100126f0:	9302      	str	r3, [sp, #8]
100126f2:	e5d1      	b.n	10012298 <_vfiprintf_r+0xd0>
100126f4:	9b02      	ldr	r3, [sp, #8]
100126f6:	9406      	str	r4, [sp, #24]
100126f8:	f043 0210 	orr.w	r2, r3, #16
100126fc:	f012 0120 	ands.w	r1, r2, #32
10012700:	f000 82e8 	beq.w	10012cd4 <_vfiprintf_r+0xb0c>
10012704:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012706:	3307      	adds	r3, #7
10012708:	f023 0307 	bic.w	r3, r3, #7
1001270c:	4618      	mov	r0, r3
1001270e:	6859      	ldr	r1, [r3, #4]
10012710:	f850 3b08 	ldr.w	r3, [r0], #8
10012714:	900a      	str	r0, [sp, #40]	@ 0x28
10012716:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
1001271a:	9402      	str	r4, [sp, #8]
1001271c:	9c05      	ldr	r4, [sp, #20]
1001271e:	2000      	movs	r0, #0
10012720:	3401      	adds	r4, #1
10012722:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
10012726:	d05d      	beq.n	100127e4 <_vfiprintf_r+0x61c>
10012728:	ea53 0401 	orrs.w	r4, r3, r1
1001272c:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10012730:	f040 8414 	bne.w	10012f5c <_vfiprintf_r+0xd94>
10012734:	9c02      	ldr	r4, [sp, #8]
10012736:	9202      	str	r2, [sp, #8]
10012738:	9b05      	ldr	r3, [sp, #20]
1001273a:	2b00      	cmp	r3, #0
1001273c:	d14a      	bne.n	100127d4 <_vfiprintf_r+0x60c>
1001273e:	2800      	cmp	r0, #0
10012740:	f040 82f1 	bne.w	10012d26 <_vfiprintf_r+0xb5e>
10012744:	f014 0201 	ands.w	r2, r4, #1
10012748:	9209      	str	r2, [sp, #36]	@ 0x24
1001274a:	f000 82f5 	beq.w	10012d38 <_vfiprintf_r+0xb70>
1001274e:	2330      	movs	r3, #48	@ 0x30
10012750:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10012754:	9204      	str	r2, [sp, #16]
10012756:	f20d 1417 	addw	r4, sp, #279	@ 0x117
1001275a:	e0fc      	b.n	10012956 <_vfiprintf_r+0x78e>
1001275c:	9b02      	ldr	r3, [sp, #8]
1001275e:	9406      	str	r4, [sp, #24]
10012760:	f043 0310 	orr.w	r3, r3, #16
10012764:	9302      	str	r3, [sp, #8]
10012766:	9b02      	ldr	r3, [sp, #8]
10012768:	069c      	lsls	r4, r3, #26
1001276a:	d491      	bmi.n	10012690 <_vfiprintf_r+0x4c8>
1001276c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001276e:	f852 3b04 	ldr.w	r3, [r2], #4
10012772:	920a      	str	r2, [sp, #40]	@ 0x28
10012774:	9a02      	ldr	r2, [sp, #8]
10012776:	06d0      	lsls	r0, r2, #27
10012778:	f100 82f3 	bmi.w	10012d62 <_vfiprintf_r+0xb9a>
1001277c:	9a02      	ldr	r2, [sp, #8]
1001277e:	0651      	lsls	r1, r2, #25
10012780:	f140 82eb 	bpl.w	10012d5a <_vfiprintf_r+0xb92>
10012784:	f343 31c0 	sbfx	r1, r3, #15, #1
10012788:	460a      	mov	r2, r1
1001278a:	b21b      	sxth	r3, r3
1001278c:	e78a      	b.n	100126a4 <_vfiprintf_r+0x4dc>
1001278e:	9b02      	ldr	r3, [sp, #8]
10012790:	9406      	str	r4, [sp, #24]
10012792:	f043 0410 	orr.w	r4, r3, #16
10012796:	f014 0120 	ands.w	r1, r4, #32
1001279a:	f000 828c 	beq.w	10012cb6 <_vfiprintf_r+0xaee>
1001279e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100127a0:	3307      	adds	r3, #7
100127a2:	f023 0307 	bic.w	r3, r3, #7
100127a6:	461a      	mov	r2, r3
100127a8:	6859      	ldr	r1, [r3, #4]
100127aa:	f852 3b08 	ldr.w	r3, [r2], #8
100127ae:	920a      	str	r2, [sp, #40]	@ 0x28
100127b0:	2200      	movs	r2, #0
100127b2:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
100127b6:	9a05      	ldr	r2, [sp, #20]
100127b8:	3201      	adds	r2, #1
100127ba:	f000 83d1 	beq.w	10012f60 <_vfiprintf_r+0xd98>
100127be:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
100127c2:	9202      	str	r2, [sp, #8]
100127c4:	ea53 0201 	orrs.w	r2, r3, r1
100127c8:	f040 80b3 	bne.w	10012932 <_vfiprintf_r+0x76a>
100127cc:	9b05      	ldr	r3, [sp, #20]
100127ce:	2001      	movs	r0, #1
100127d0:	2b00      	cmp	r3, #0
100127d2:	d0b4      	beq.n	1001273e <_vfiprintf_r+0x576>
100127d4:	2801      	cmp	r0, #1
100127d6:	f000 8480 	beq.w	100130da <_vfiprintf_r+0xf12>
100127da:	2300      	movs	r3, #0
100127dc:	2802      	cmp	r0, #2
100127de:	4619      	mov	r1, r3
100127e0:	f000 8199 	beq.w	10012b16 <_vfiprintf_r+0x94e>
100127e4:	ac46      	add	r4, sp, #280	@ 0x118
100127e6:	f003 0207 	and.w	r2, r3, #7
100127ea:	08db      	lsrs	r3, r3, #3
100127ec:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
100127f0:	08c9      	lsrs	r1, r1, #3
100127f2:	3230      	adds	r2, #48	@ 0x30
100127f4:	ea53 0501 	orrs.w	r5, r3, r1
100127f8:	4620      	mov	r0, r4
100127fa:	f804 2d01 	strb.w	r2, [r4, #-1]!
100127fe:	d1f2      	bne.n	100127e6 <_vfiprintf_r+0x61e>
10012800:	9b02      	ldr	r3, [sp, #8]
10012802:	07dd      	lsls	r5, r3, #31
10012804:	f140 8195 	bpl.w	10012b32 <_vfiprintf_r+0x96a>
10012808:	2a30      	cmp	r2, #48	@ 0x30
1001280a:	f000 8192 	beq.w	10012b32 <_vfiprintf_r+0x96a>
1001280e:	2330      	movs	r3, #48	@ 0x30
10012810:	9a05      	ldr	r2, [sp, #20]
10012812:	f804 3c01 	strb.w	r3, [r4, #-1]
10012816:	3802      	subs	r0, #2
10012818:	ab46      	add	r3, sp, #280	@ 0x118
1001281a:	1a1b      	subs	r3, r3, r0
1001281c:	429a      	cmp	r2, r3
1001281e:	bfb8      	it	lt
10012820:	461a      	movlt	r2, r3
10012822:	9309      	str	r3, [sp, #36]	@ 0x24
10012824:	4604      	mov	r4, r0
10012826:	9204      	str	r2, [sp, #16]
10012828:	e095      	b.n	10012956 <_vfiprintf_r+0x78e>
1001282a:	7822      	ldrb	r2, [r4, #0]
1001282c:	9b02      	ldr	r3, [sp, #8]
1001282e:	2a68      	cmp	r2, #104	@ 0x68
10012830:	f000 839d 	beq.w	10012f6e <_vfiprintf_r+0xda6>
10012834:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012838:	9302      	str	r3, [sp, #8]
1001283a:	e52d      	b.n	10012298 <_vfiprintf_r+0xd0>
1001283c:	9b02      	ldr	r3, [sp, #8]
1001283e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10012840:	9406      	str	r4, [sp, #24]
10012842:	f043 0302 	orr.w	r3, r3, #2
10012846:	9302      	str	r3, [sp, #8]
10012848:	f852 3b04 	ldr.w	r3, [r2], #4
1001284c:	920a      	str	r2, [sp, #40]	@ 0x28
1001284e:	f647 0230 	movw	r2, #30768	@ 0x7830
10012852:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
10012856:	4abb      	ldr	r2, [pc, #748]	@ (10012b44 <_vfiprintf_r+0x97c>)
10012858:	920d      	str	r2, [sp, #52]	@ 0x34
1001285a:	2100      	movs	r1, #0
1001285c:	2200      	movs	r2, #0
1001285e:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
10012862:	9a05      	ldr	r2, [sp, #20]
10012864:	3201      	adds	r2, #1
10012866:	f000 8156 	beq.w	10012b16 <_vfiprintf_r+0x94e>
1001286a:	9c02      	ldr	r4, [sp, #8]
1001286c:	ea53 0001 	orrs.w	r0, r3, r1
10012870:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
10012874:	9202      	str	r2, [sp, #8]
10012876:	f040 814e 	bne.w	10012b16 <_vfiprintf_r+0x94e>
1001287a:	2002      	movs	r0, #2
1001287c:	e75c      	b.n	10012738 <_vfiprintf_r+0x570>
1001287e:	9b02      	ldr	r3, [sp, #8]
10012880:	9406      	str	r4, [sp, #24]
10012882:	069b      	lsls	r3, r3, #26
10012884:	f140 827f 	bpl.w	10012d86 <_vfiprintf_r+0xbbe>
10012888:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001288a:	9a07      	ldr	r2, [sp, #28]
1001288c:	681b      	ldr	r3, [r3, #0]
1001288e:	601a      	str	r2, [r3, #0]
10012890:	17d2      	asrs	r2, r2, #31
10012892:	605a      	str	r2, [r3, #4]
10012894:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012896:	3304      	adds	r3, #4
10012898:	930a      	str	r3, [sp, #40]	@ 0x28
1001289a:	e4d8      	b.n	1001224e <_vfiprintf_r+0x86>
1001289c:	9b02      	ldr	r3, [sp, #8]
1001289e:	7822      	ldrb	r2, [r4, #0]
100128a0:	f043 0301 	orr.w	r3, r3, #1
100128a4:	9302      	str	r3, [sp, #8]
100128a6:	e4f7      	b.n	10012298 <_vfiprintf_r+0xd0>
100128a8:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
100128ac:	7822      	ldrb	r2, [r4, #0]
100128ae:	2b00      	cmp	r3, #0
100128b0:	f47f acf2 	bne.w	10012298 <_vfiprintf_r+0xd0>
100128b4:	2320      	movs	r3, #32
100128b6:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100128ba:	e4ed      	b.n	10012298 <_vfiprintf_r+0xd0>
100128bc:	9b02      	ldr	r3, [sp, #8]
100128be:	7822      	ldrb	r2, [r4, #0]
100128c0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
100128c4:	9302      	str	r3, [sp, #8]
100128c6:	e4e7      	b.n	10012298 <_vfiprintf_r+0xd0>
100128c8:	4621      	mov	r1, r4
100128ca:	f811 2b01 	ldrb.w	r2, [r1], #1
100128ce:	2a2a      	cmp	r2, #42	@ 0x2a
100128d0:	f000 8433 	beq.w	1001313a <_vfiprintf_r+0xf72>
100128d4:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
100128d8:	2b09      	cmp	r3, #9
100128da:	460c      	mov	r4, r1
100128dc:	f200 83f6 	bhi.w	100130cc <_vfiprintf_r+0xf04>
100128e0:	2200      	movs	r2, #0
100128e2:	4611      	mov	r1, r2
100128e4:	f814 2b01 	ldrb.w	r2, [r4], #1
100128e8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100128ec:	eb03 0141 	add.w	r1, r3, r1, lsl #1
100128f0:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
100128f4:	2b09      	cmp	r3, #9
100128f6:	d9f5      	bls.n	100128e4 <_vfiprintf_r+0x71c>
100128f8:	9105      	str	r1, [sp, #20]
100128fa:	e4ce      	b.n	1001229a <_vfiprintf_r+0xd2>
100128fc:	232b      	movs	r3, #43	@ 0x2b
100128fe:	7822      	ldrb	r2, [r4, #0]
10012900:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10012904:	e4c8      	b.n	10012298 <_vfiprintf_r+0xd0>
10012906:	7822      	ldrb	r2, [r4, #0]
10012908:	9b02      	ldr	r3, [sp, #8]
1001290a:	2a6c      	cmp	r2, #108	@ 0x6c
1001290c:	f000 8336 	beq.w	10012f7c <_vfiprintf_r+0xdb4>
10012910:	f043 0310 	orr.w	r3, r3, #16
10012914:	9302      	str	r3, [sp, #8]
10012916:	e4bf      	b.n	10012298 <_vfiprintf_r+0xd0>
10012918:	222d      	movs	r2, #45	@ 0x2d
1001291a:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
1001291e:	9a05      	ldr	r2, [sp, #20]
10012920:	425b      	negs	r3, r3
10012922:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10012926:	3201      	adds	r2, #1
10012928:	d003      	beq.n	10012932 <_vfiprintf_r+0x76a>
1001292a:	9a02      	ldr	r2, [sp, #8]
1001292c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
10012930:	9202      	str	r2, [sp, #8]
10012932:	2b0a      	cmp	r3, #10
10012934:	f171 0200 	sbcs.w	r2, r1, #0
10012938:	f080 82bd 	bcs.w	10012eb6 <_vfiprintf_r+0xcee>
1001293c:	3330      	adds	r3, #48	@ 0x30
1001293e:	b2db      	uxtb	r3, r3
10012940:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10012944:	9b05      	ldr	r3, [sp, #20]
10012946:	2b01      	cmp	r3, #1
10012948:	bfb8      	it	lt
1001294a:	2301      	movlt	r3, #1
1001294c:	9304      	str	r3, [sp, #16]
1001294e:	2301      	movs	r3, #1
10012950:	9309      	str	r3, [sp, #36]	@ 0x24
10012952:	f20d 1417 	addw	r4, sp, #279	@ 0x117
10012956:	2300      	movs	r3, #0
10012958:	930b      	str	r3, [sp, #44]	@ 0x2c
1001295a:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
1001295e:	2b00      	cmp	r3, #0
10012960:	f43f adae 	beq.w	100124c0 <_vfiprintf_r+0x2f8>
10012964:	9b04      	ldr	r3, [sp, #16]
10012966:	3301      	adds	r3, #1
10012968:	9304      	str	r3, [sp, #16]
1001296a:	e5a9      	b.n	100124c0 <_vfiprintf_r+0x2f8>
1001296c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001296e:	941d      	str	r4, [sp, #116]	@ 0x74
10012970:	2201      	movs	r2, #1
10012972:	931e      	str	r3, [sp, #120]	@ 0x78
10012974:	931c      	str	r3, [sp, #112]	@ 0x70
10012976:	921b      	str	r2, [sp, #108]	@ 0x6c
10012978:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001297c:	f109 0908 	add.w	r9, r9, #8
10012980:	e60c      	b.n	1001259c <_vfiprintf_r+0x3d4>
10012982:	9b08      	ldr	r3, [sp, #32]
10012984:	9804      	ldr	r0, [sp, #16]
10012986:	1a1d      	subs	r5, r3, r0
10012988:	2d00      	cmp	r5, #0
1001298a:	f77f ade7 	ble.w	1001255c <_vfiprintf_r+0x394>
1001298e:	2d10      	cmp	r5, #16
10012990:	f340 83cb 	ble.w	1001312a <_vfiprintf_r+0xf62>
10012994:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 10012b4c <_vfiprintf_r+0x984>
10012998:	4643      	mov	r3, r8
1001299a:	2610      	movs	r6, #16
1001299c:	46a0      	mov	r8, r4
1001299e:	4661      	mov	r1, ip
100129a0:	461c      	mov	r4, r3
100129a2:	e007      	b.n	100129b4 <_vfiprintf_r+0x7ec>
100129a4:	f102 0c02 	add.w	ip, r2, #2
100129a8:	f109 0908 	add.w	r9, r9, #8
100129ac:	4602      	mov	r2, r0
100129ae:	3d10      	subs	r5, #16
100129b0:	2d10      	cmp	r5, #16
100129b2:	dd1a      	ble.n	100129ea <_vfiprintf_r+0x822>
100129b4:	1c50      	adds	r0, r2, #1
100129b6:	3110      	adds	r1, #16
100129b8:	2807      	cmp	r0, #7
100129ba:	e9c9 4600 	strd	r4, r6, [r9]
100129be:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
100129c2:	ddef      	ble.n	100129a4 <_vfiprintf_r+0x7dc>
100129c4:	aa1a      	add	r2, sp, #104	@ 0x68
100129c6:	2900      	cmp	r1, #0
100129c8:	d07c      	beq.n	10012ac4 <_vfiprintf_r+0x8fc>
100129ca:	9903      	ldr	r1, [sp, #12]
100129cc:	4658      	mov	r0, fp
100129ce:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100129d2:	f7ff fbb1 	bl	10012138 <__sprint_r.part.0>
100129d6:	2800      	cmp	r0, #0
100129d8:	f47f ad4e 	bne.w	10012478 <_vfiprintf_r+0x2b0>
100129dc:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
100129e0:	3d10      	subs	r5, #16
100129e2:	2d10      	cmp	r5, #16
100129e4:	f102 0c01 	add.w	ip, r2, #1
100129e8:	dce4      	bgt.n	100129b4 <_vfiprintf_r+0x7ec>
100129ea:	4623      	mov	r3, r4
100129ec:	4660      	mov	r0, ip
100129ee:	4644      	mov	r4, r8
100129f0:	468c      	mov	ip, r1
100129f2:	4698      	mov	r8, r3
100129f4:	44ac      	add	ip, r5
100129f6:	2807      	cmp	r0, #7
100129f8:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
100129fc:	f8c9 8000 	str.w	r8, [r9]
10012a00:	f8c9 5004 	str.w	r5, [r9, #4]
10012a04:	f340 81a4 	ble.w	10012d50 <_vfiprintf_r+0xb88>
10012a08:	f1bc 0f00 	cmp.w	ip, #0
10012a0c:	f000 8327 	beq.w	1001305e <_vfiprintf_r+0xe96>
10012a10:	9903      	ldr	r1, [sp, #12]
10012a12:	aa1a      	add	r2, sp, #104	@ 0x68
10012a14:	4658      	mov	r0, fp
10012a16:	f7ff fb8f 	bl	10012138 <__sprint_r.part.0>
10012a1a:	2800      	cmp	r0, #0
10012a1c:	f47f ad2c 	bne.w	10012478 <_vfiprintf_r+0x2b0>
10012a20:	9b05      	ldr	r3, [sp, #20]
10012a22:	9809      	ldr	r0, [sp, #36]	@ 0x24
10012a24:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10012a28:	1a1d      	subs	r5, r3, r0
10012a2a:	2d00      	cmp	r5, #0
10012a2c:	f102 0101 	add.w	r1, r2, #1
10012a30:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012a34:	f77f ad98 	ble.w	10012568 <_vfiprintf_r+0x3a0>
10012a38:	2d10      	cmp	r5, #16
10012a3a:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 10012b4c <_vfiprintf_r+0x984>
10012a3e:	dd2d      	ble.n	10012a9c <_vfiprintf_r+0x8d4>
10012a40:	462b      	mov	r3, r5
10012a42:	2610      	movs	r6, #16
10012a44:	4625      	mov	r5, r4
10012a46:	4660      	mov	r0, ip
10012a48:	461c      	mov	r4, r3
10012a4a:	e007      	b.n	10012a5c <_vfiprintf_r+0x894>
10012a4c:	f102 0c02 	add.w	ip, r2, #2
10012a50:	f109 0908 	add.w	r9, r9, #8
10012a54:	460a      	mov	r2, r1
10012a56:	3c10      	subs	r4, #16
10012a58:	2c10      	cmp	r4, #16
10012a5a:	dd1a      	ble.n	10012a92 <_vfiprintf_r+0x8ca>
10012a5c:	1c51      	adds	r1, r2, #1
10012a5e:	4b3b      	ldr	r3, [pc, #236]	@ (10012b4c <_vfiprintf_r+0x984>)
10012a60:	3010      	adds	r0, #16
10012a62:	2907      	cmp	r1, #7
10012a64:	e9c9 3600 	strd	r3, r6, [r9]
10012a68:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
10012a6c:	ddee      	ble.n	10012a4c <_vfiprintf_r+0x884>
10012a6e:	aa1a      	add	r2, sp, #104	@ 0x68
10012a70:	b310      	cbz	r0, 10012ab8 <_vfiprintf_r+0x8f0>
10012a72:	9903      	ldr	r1, [sp, #12]
10012a74:	4658      	mov	r0, fp
10012a76:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012a7a:	f7ff fb5d 	bl	10012138 <__sprint_r.part.0>
10012a7e:	2800      	cmp	r0, #0
10012a80:	f47f acfa 	bne.w	10012478 <_vfiprintf_r+0x2b0>
10012a84:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
10012a88:	3c10      	subs	r4, #16
10012a8a:	2c10      	cmp	r4, #16
10012a8c:	f102 0c01 	add.w	ip, r2, #1
10012a90:	dce4      	bgt.n	10012a5c <_vfiprintf_r+0x894>
10012a92:	4623      	mov	r3, r4
10012a94:	4661      	mov	r1, ip
10012a96:	462c      	mov	r4, r5
10012a98:	4684      	mov	ip, r0
10012a9a:	461d      	mov	r5, r3
10012a9c:	44ac      	add	ip, r5
10012a9e:	2907      	cmp	r1, #7
10012aa0:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10012aa4:	f8c9 8000 	str.w	r8, [r9]
10012aa8:	f8c9 5004 	str.w	r5, [r9, #4]
10012aac:	f300 80ed 	bgt.w	10012c8a <_vfiprintf_r+0xac2>
10012ab0:	f109 0908 	add.w	r9, r9, #8
10012ab4:	3101      	adds	r1, #1
10012ab6:	e557      	b.n	10012568 <_vfiprintf_r+0x3a0>
10012ab8:	f04f 0c01 	mov.w	ip, #1
10012abc:	4602      	mov	r2, r0
10012abe:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012ac2:	e7c8      	b.n	10012a56 <_vfiprintf_r+0x88e>
10012ac4:	f04f 0c01 	mov.w	ip, #1
10012ac8:	460a      	mov	r2, r1
10012aca:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012ace:	e76e      	b.n	100129ae <_vfiprintf_r+0x7e6>
10012ad0:	f1bc 0f00 	cmp.w	ip, #0
10012ad4:	d00f      	beq.n	10012af6 <_vfiprintf_r+0x92e>
10012ad6:	9903      	ldr	r1, [sp, #12]
10012ad8:	9311      	str	r3, [sp, #68]	@ 0x44
10012ada:	aa1a      	add	r2, sp, #104	@ 0x68
10012adc:	4658      	mov	r0, fp
10012ade:	f7ff fb2b 	bl	10012138 <__sprint_r.part.0>
10012ae2:	2800      	cmp	r0, #0
10012ae4:	f47f acc8 	bne.w	10012478 <_vfiprintf_r+0x2b0>
10012ae8:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10012aec:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10012aee:	1c51      	adds	r1, r2, #1
10012af0:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012af4:	e50f      	b.n	10012516 <_vfiprintf_r+0x34e>
10012af6:	2b00      	cmp	r3, #0
10012af8:	f000 8156 	beq.w	10012da8 <_vfiprintf_r+0xbe0>
10012afc:	2302      	movs	r3, #2
10012afe:	931e      	str	r3, [sp, #120]	@ 0x78
10012b00:	469c      	mov	ip, r3
10012b02:	ab13      	add	r3, sp, #76	@ 0x4c
10012b04:	931d      	str	r3, [sp, #116]	@ 0x74
10012b06:	2101      	movs	r1, #1
10012b08:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012b0c:	460a      	mov	r2, r1
10012b0e:	f109 0908 	add.w	r9, r9, #8
10012b12:	3101      	adds	r1, #1
10012b14:	e51e      	b.n	10012554 <_vfiprintf_r+0x38c>
10012b16:	980d      	ldr	r0, [sp, #52]	@ 0x34
10012b18:	ac46      	add	r4, sp, #280	@ 0x118
10012b1a:	f003 020f 	and.w	r2, r3, #15
10012b1e:	091b      	lsrs	r3, r3, #4
10012b20:	5c82      	ldrb	r2, [r0, r2]
10012b22:	f804 2d01 	strb.w	r2, [r4, #-1]!
10012b26:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
10012b2a:	0909      	lsrs	r1, r1, #4
10012b2c:	ea53 0201 	orrs.w	r2, r3, r1
10012b30:	d1f3      	bne.n	10012b1a <_vfiprintf_r+0x952>
10012b32:	9a05      	ldr	r2, [sp, #20]
10012b34:	ab46      	add	r3, sp, #280	@ 0x118
10012b36:	1b1b      	subs	r3, r3, r4
10012b38:	429a      	cmp	r2, r3
10012b3a:	bfb8      	it	lt
10012b3c:	461a      	movlt	r2, r3
10012b3e:	9309      	str	r3, [sp, #36]	@ 0x24
10012b40:	9204      	str	r2, [sp, #16]
10012b42:	e708      	b.n	10012956 <_vfiprintf_r+0x78e>
10012b44:	10019174 	.word	0x10019174
10012b48:	20000454 	.word	0x20000454
10012b4c:	100191c8 	.word	0x100191c8
10012b50:	2d10      	cmp	r5, #16
10012b52:	f340 82bf 	ble.w	100130d4 <_vfiprintf_r+0xf0c>
10012b56:	4eae      	ldr	r6, [pc, #696]	@ (10012e10 <_vfiprintf_r+0xc48>)
10012b58:	9311      	str	r3, [sp, #68]	@ 0x44
10012b5a:	4649      	mov	r1, r9
10012b5c:	f04f 0810 	mov.w	r8, #16
10012b60:	46a1      	mov	r9, r4
10012b62:	4634      	mov	r4, r6
10012b64:	4666      	mov	r6, ip
10012b66:	e007      	b.n	10012b78 <_vfiprintf_r+0x9b0>
10012b68:	f102 0e02 	add.w	lr, r2, #2
10012b6c:	3108      	adds	r1, #8
10012b6e:	4602      	mov	r2, r0
10012b70:	3d10      	subs	r5, #16
10012b72:	2d10      	cmp	r5, #16
10012b74:	dd18      	ble.n	10012ba8 <_vfiprintf_r+0x9e0>
10012b76:	1c50      	adds	r0, r2, #1
10012b78:	3610      	adds	r6, #16
10012b7a:	2807      	cmp	r0, #7
10012b7c:	e9c1 4800 	strd	r4, r8, [r1]
10012b80:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
10012b84:	ddf0      	ble.n	10012b68 <_vfiprintf_r+0x9a0>
10012b86:	9903      	ldr	r1, [sp, #12]
10012b88:	aa1a      	add	r2, sp, #104	@ 0x68
10012b8a:	4658      	mov	r0, fp
10012b8c:	b316      	cbz	r6, 10012bd4 <_vfiprintf_r+0xa0c>
10012b8e:	f7ff fad3 	bl	10012138 <__sprint_r.part.0>
10012b92:	2800      	cmp	r0, #0
10012b94:	f47f ac70 	bne.w	10012478 <_vfiprintf_r+0x2b0>
10012b98:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
10012b9c:	3d10      	subs	r5, #16
10012b9e:	2d10      	cmp	r5, #16
10012ba0:	f102 0e01 	add.w	lr, r2, #1
10012ba4:	a91d      	add	r1, sp, #116	@ 0x74
10012ba6:	dce6      	bgt.n	10012b76 <_vfiprintf_r+0x9ae>
10012ba8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10012baa:	46b4      	mov	ip, r6
10012bac:	4626      	mov	r6, r4
10012bae:	464c      	mov	r4, r9
10012bb0:	4689      	mov	r9, r1
10012bb2:	44ac      	add	ip, r5
10012bb4:	f1be 0f07 	cmp.w	lr, #7
10012bb8:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
10012bbc:	f8c9 6000 	str.w	r6, [r9]
10012bc0:	f8c9 5004 	str.w	r5, [r9, #4]
10012bc4:	f300 809a 	bgt.w	10012cfc <_vfiprintf_r+0xb34>
10012bc8:	f109 0908 	add.w	r9, r9, #8
10012bcc:	f10e 0101 	add.w	r1, lr, #1
10012bd0:	4672      	mov	r2, lr
10012bd2:	e48b      	b.n	100124ec <_vfiprintf_r+0x324>
10012bd4:	4632      	mov	r2, r6
10012bd6:	f04f 0e01 	mov.w	lr, #1
10012bda:	a91d      	add	r1, sp, #116	@ 0x74
10012bdc:	e7c8      	b.n	10012b70 <_vfiprintf_r+0x9a8>
10012bde:	9a02      	ldr	r2, [sp, #8]
10012be0:	931b      	str	r3, [sp, #108]	@ 0x6c
10012be2:	0754      	lsls	r4, r2, #29
10012be4:	d548      	bpl.n	10012c78 <_vfiprintf_r+0xab0>
10012be6:	9a08      	ldr	r2, [sp, #32]
10012be8:	9904      	ldr	r1, [sp, #16]
10012bea:	1a54      	subs	r4, r2, r1
10012bec:	2c00      	cmp	r4, #0
10012bee:	dd43      	ble.n	10012c78 <_vfiprintf_r+0xab0>
10012bf0:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012bf4:	2c10      	cmp	r4, #16
10012bf6:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10012bf8:	f340 827b 	ble.w	100130f2 <_vfiprintf_r+0xf2a>
10012bfc:	4e84      	ldr	r6, [pc, #528]	@ (10012e10 <_vfiprintf_r+0xc48>)
10012bfe:	f8dd 800c 	ldr.w	r8, [sp, #12]
10012c02:	2510      	movs	r5, #16
10012c04:	e006      	b.n	10012c14 <_vfiprintf_r+0xa4c>
10012c06:	1c88      	adds	r0, r1, #2
10012c08:	f109 0908 	add.w	r9, r9, #8
10012c0c:	4611      	mov	r1, r2
10012c0e:	3c10      	subs	r4, #16
10012c10:	2c10      	cmp	r4, #16
10012c12:	dd19      	ble.n	10012c48 <_vfiprintf_r+0xa80>
10012c14:	1c4a      	adds	r2, r1, #1
10012c16:	3310      	adds	r3, #16
10012c18:	2a07      	cmp	r2, #7
10012c1a:	e9c9 6500 	strd	r6, r5, [r9]
10012c1e:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
10012c22:	ddf0      	ble.n	10012c06 <_vfiprintf_r+0xa3e>
10012c24:	aa1a      	add	r2, sp, #104	@ 0x68
10012c26:	b313      	cbz	r3, 10012c6e <_vfiprintf_r+0xaa6>
10012c28:	4641      	mov	r1, r8
10012c2a:	4658      	mov	r0, fp
10012c2c:	f7ff fa84 	bl	10012138 <__sprint_r.part.0>
10012c30:	2800      	cmp	r0, #0
10012c32:	f47f ac21 	bne.w	10012478 <_vfiprintf_r+0x2b0>
10012c36:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
10012c3a:	3c10      	subs	r4, #16
10012c3c:	2c10      	cmp	r4, #16
10012c3e:	f101 0001 	add.w	r0, r1, #1
10012c42:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012c46:	dce5      	bgt.n	10012c14 <_vfiprintf_r+0xa4c>
10012c48:	4423      	add	r3, r4
10012c4a:	2807      	cmp	r0, #7
10012c4c:	e9c9 6400 	strd	r6, r4, [r9]
10012c50:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
10012c54:	f77f acab 	ble.w	100125ae <_vfiprintf_r+0x3e6>
10012c58:	b173      	cbz	r3, 10012c78 <_vfiprintf_r+0xab0>
10012c5a:	9903      	ldr	r1, [sp, #12]
10012c5c:	aa1a      	add	r2, sp, #104	@ 0x68
10012c5e:	4658      	mov	r0, fp
10012c60:	f7ff fa6a 	bl	10012138 <__sprint_r.part.0>
10012c64:	2800      	cmp	r0, #0
10012c66:	f47f ac07 	bne.w	10012478 <_vfiprintf_r+0x2b0>
10012c6a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10012c6c:	e49f      	b.n	100125ae <_vfiprintf_r+0x3e6>
10012c6e:	2001      	movs	r0, #1
10012c70:	4619      	mov	r1, r3
10012c72:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012c76:	e7ca      	b.n	10012c0e <_vfiprintf_r+0xa46>
10012c78:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
10012c7c:	9904      	ldr	r1, [sp, #16]
10012c7e:	428a      	cmp	r2, r1
10012c80:	bfac      	ite	ge
10012c82:	189b      	addge	r3, r3, r2
10012c84:	185b      	addlt	r3, r3, r1
10012c86:	9307      	str	r3, [sp, #28]
10012c88:	e49c      	b.n	100125c4 <_vfiprintf_r+0x3fc>
10012c8a:	f1bc 0f00 	cmp.w	ip, #0
10012c8e:	f43f ae6d 	beq.w	1001296c <_vfiprintf_r+0x7a4>
10012c92:	9903      	ldr	r1, [sp, #12]
10012c94:	aa1a      	add	r2, sp, #104	@ 0x68
10012c96:	4658      	mov	r0, fp
10012c98:	f7ff fa4e 	bl	10012138 <__sprint_r.part.0>
10012c9c:	2800      	cmp	r0, #0
10012c9e:	f47f abeb 	bne.w	10012478 <_vfiprintf_r+0x2b0>
10012ca2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10012ca4:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
10012ca8:	3101      	adds	r1, #1
10012caa:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012cae:	e45b      	b.n	10012568 <_vfiprintf_r+0x3a0>
10012cb0:	921b      	str	r2, [sp, #108]	@ 0x6c
10012cb2:	f7ff bbd6 	b.w	10012462 <_vfiprintf_r+0x29a>
10012cb6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10012cb8:	f852 3b04 	ldr.w	r3, [r2], #4
10012cbc:	920a      	str	r2, [sp, #40]	@ 0x28
10012cbe:	f014 0210 	ands.w	r2, r4, #16
10012cc2:	f47f ad75 	bne.w	100127b0 <_vfiprintf_r+0x5e8>
10012cc6:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10012cca:	f000 816d 	beq.w	10012fa8 <_vfiprintf_r+0xde0>
10012cce:	b29b      	uxth	r3, r3
10012cd0:	4611      	mov	r1, r2
10012cd2:	e56d      	b.n	100127b0 <_vfiprintf_r+0x5e8>
10012cd4:	980a      	ldr	r0, [sp, #40]	@ 0x28
10012cd6:	f850 3b04 	ldr.w	r3, [r0], #4
10012cda:	900a      	str	r0, [sp, #40]	@ 0x28
10012cdc:	f012 0010 	ands.w	r0, r2, #16
10012ce0:	f47f ad19 	bne.w	10012716 <_vfiprintf_r+0x54e>
10012ce4:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
10012ce8:	f000 8166 	beq.w	10012fb8 <_vfiprintf_r+0xdf0>
10012cec:	b29b      	uxth	r3, r3
10012cee:	4601      	mov	r1, r0
10012cf0:	e511      	b.n	10012716 <_vfiprintf_r+0x54e>
10012cf2:	2101      	movs	r1, #1
10012cf4:	4662      	mov	r2, ip
10012cf6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012cfa:	e42b      	b.n	10012554 <_vfiprintf_r+0x38c>
10012cfc:	f1bc 0f00 	cmp.w	ip, #0
10012d00:	f000 8095 	beq.w	10012e2e <_vfiprintf_r+0xc66>
10012d04:	9903      	ldr	r1, [sp, #12]
10012d06:	9311      	str	r3, [sp, #68]	@ 0x44
10012d08:	aa1a      	add	r2, sp, #104	@ 0x68
10012d0a:	4658      	mov	r0, fp
10012d0c:	f7ff fa14 	bl	10012138 <__sprint_r.part.0>
10012d10:	2800      	cmp	r0, #0
10012d12:	f47f abb1 	bne.w	10012478 <_vfiprintf_r+0x2b0>
10012d16:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10012d1a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10012d1c:	1c51      	adds	r1, r2, #1
10012d1e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012d22:	f7ff bbe3 	b.w	100124ec <_vfiprintf_r+0x324>
10012d26:	9b05      	ldr	r3, [sp, #20]
10012d28:	9304      	str	r3, [sp, #16]
10012d2a:	9309      	str	r3, [sp, #36]	@ 0x24
10012d2c:	ac46      	add	r4, sp, #280	@ 0x118
10012d2e:	e612      	b.n	10012956 <_vfiprintf_r+0x78e>
10012d30:	7822      	ldrb	r2, [r4, #0]
10012d32:	930a      	str	r3, [sp, #40]	@ 0x28
10012d34:	f7ff bab0 	b.w	10012298 <_vfiprintf_r+0xd0>
10012d38:	9b05      	ldr	r3, [sp, #20]
10012d3a:	9304      	str	r3, [sp, #16]
10012d3c:	ac46      	add	r4, sp, #280	@ 0x118
10012d3e:	e60a      	b.n	10012956 <_vfiprintf_r+0x78e>
10012d40:	9d03      	ldr	r5, [sp, #12]
10012d42:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10012d44:	f001 fa54 	bl	100141f0 <__retarget_lock_acquire_recursive>
10012d48:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
10012d4c:	f7ff ba5b 	b.w	10012206 <_vfiprintf_r+0x3e>
10012d50:	f109 0908 	add.w	r9, r9, #8
10012d54:	1c41      	adds	r1, r0, #1
10012d56:	4602      	mov	r2, r0
10012d58:	e400      	b.n	1001255c <_vfiprintf_r+0x394>
10012d5a:	9a02      	ldr	r2, [sp, #8]
10012d5c:	0592      	lsls	r2, r2, #22
10012d5e:	f100 8184 	bmi.w	1001306a <_vfiprintf_r+0xea2>
10012d62:	17d9      	asrs	r1, r3, #31
10012d64:	460a      	mov	r2, r1
10012d66:	e49d      	b.n	100126a4 <_vfiprintf_r+0x4dc>
10012d68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012d6a:	7822      	ldrb	r2, [r4, #0]
10012d6c:	2b00      	cmp	r3, #0
10012d6e:	f43f aa93 	beq.w	10012298 <_vfiprintf_r+0xd0>
10012d72:	781b      	ldrb	r3, [r3, #0]
10012d74:	2b00      	cmp	r3, #0
10012d76:	f43f aa8f 	beq.w	10012298 <_vfiprintf_r+0xd0>
10012d7a:	9b02      	ldr	r3, [sp, #8]
10012d7c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
10012d80:	9302      	str	r3, [sp, #8]
10012d82:	f7ff ba89 	b.w	10012298 <_vfiprintf_r+0xd0>
10012d86:	9b02      	ldr	r3, [sp, #8]
10012d88:	06de      	lsls	r6, r3, #27
10012d8a:	f100 80fe 	bmi.w	10012f8a <_vfiprintf_r+0xdc2>
10012d8e:	9b02      	ldr	r3, [sp, #8]
10012d90:	065d      	lsls	r5, r3, #25
10012d92:	f100 8176 	bmi.w	10013082 <_vfiprintf_r+0xeba>
10012d96:	9b02      	ldr	r3, [sp, #8]
10012d98:	059c      	lsls	r4, r3, #22
10012d9a:	f140 80f6 	bpl.w	10012f8a <_vfiprintf_r+0xdc2>
10012d9e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012da0:	9a07      	ldr	r2, [sp, #28]
10012da2:	681b      	ldr	r3, [r3, #0]
10012da4:	701a      	strb	r2, [r3, #0]
10012da6:	e575      	b.n	10012894 <_vfiprintf_r+0x6cc>
10012da8:	4662      	mov	r2, ip
10012daa:	2101      	movs	r1, #1
10012dac:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012db0:	f7ff bbd0 	b.w	10012554 <_vfiprintf_r+0x38c>
10012db4:	9406      	str	r4, [sp, #24]
10012db6:	9c02      	ldr	r4, [sp, #8]
10012db8:	e4ed      	b.n	10012796 <_vfiprintf_r+0x5ce>
10012dba:	9a02      	ldr	r2, [sp, #8]
10012dbc:	9406      	str	r4, [sp, #24]
10012dbe:	e49d      	b.n	100126fc <_vfiprintf_r+0x534>
10012dc0:	4b14      	ldr	r3, [pc, #80]	@ (10012e14 <_vfiprintf_r+0xc4c>)
10012dc2:	9406      	str	r4, [sp, #24]
10012dc4:	930d      	str	r3, [sp, #52]	@ 0x34
10012dc6:	9b02      	ldr	r3, [sp, #8]
10012dc8:	f013 0120 	ands.w	r1, r3, #32
10012dcc:	d063      	beq.n	10012e96 <_vfiprintf_r+0xcce>
10012dce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012dd0:	3307      	adds	r3, #7
10012dd2:	f023 0307 	bic.w	r3, r3, #7
10012dd6:	4618      	mov	r0, r3
10012dd8:	6859      	ldr	r1, [r3, #4]
10012dda:	f850 3b08 	ldr.w	r3, [r0], #8
10012dde:	900a      	str	r0, [sp, #40]	@ 0x28
10012de0:	9c02      	ldr	r4, [sp, #8]
10012de2:	07e6      	lsls	r6, r4, #31
10012de4:	d50a      	bpl.n	10012dfc <_vfiprintf_r+0xc34>
10012de6:	ea53 0001 	orrs.w	r0, r3, r1
10012dea:	d007      	beq.n	10012dfc <_vfiprintf_r+0xc34>
10012dec:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
10012df0:	f044 0202 	orr.w	r2, r4, #2
10012df4:	9202      	str	r2, [sp, #8]
10012df6:	2230      	movs	r2, #48	@ 0x30
10012df8:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
10012dfc:	9a02      	ldr	r2, [sp, #8]
10012dfe:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
10012e02:	9202      	str	r2, [sp, #8]
10012e04:	e52a      	b.n	1001285c <_vfiprintf_r+0x694>
10012e06:	4b04      	ldr	r3, [pc, #16]	@ (10012e18 <_vfiprintf_r+0xc50>)
10012e08:	9406      	str	r4, [sp, #24]
10012e0a:	930d      	str	r3, [sp, #52]	@ 0x34
10012e0c:	e7db      	b.n	10012dc6 <_vfiprintf_r+0xbfe>
10012e0e:	bf00      	nop
10012e10:	100191d8 	.word	0x100191d8
10012e14:	10019188 	.word	0x10019188
10012e18:	10019174 	.word	0x10019174
10012e1c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012e1e:	681b      	ldr	r3, [r3, #0]
10012e20:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
10012e24:	2301      	movs	r3, #1
10012e26:	9304      	str	r3, [sp, #16]
10012e28:	9309      	str	r3, [sp, #36]	@ 0x24
10012e2a:	ac2d      	add	r4, sp, #180	@ 0xb4
10012e2c:	e427      	b.n	1001267e <_vfiprintf_r+0x4b6>
10012e2e:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
10012e32:	2a00      	cmp	r2, #0
10012e34:	f000 811f 	beq.w	10013076 <_vfiprintf_r+0xeae>
10012e38:	2101      	movs	r1, #1
10012e3a:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
10012e3e:	911e      	str	r1, [sp, #120]	@ 0x78
10012e40:	921d      	str	r2, [sp, #116]	@ 0x74
10012e42:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012e46:	468c      	mov	ip, r1
10012e48:	f7ff bb61 	b.w	1001250e <_vfiprintf_r+0x346>
10012e4c:	2208      	movs	r2, #8
10012e4e:	2100      	movs	r1, #0
10012e50:	a818      	add	r0, sp, #96	@ 0x60
10012e52:	9415      	str	r4, [sp, #84]	@ 0x54
10012e54:	f001 f8d4 	bl	10014000 <memset>
10012e58:	9b05      	ldr	r3, [sp, #20]
10012e5a:	1c58      	adds	r0, r3, #1
10012e5c:	f000 80ba 	beq.w	10012fd4 <_vfiprintf_r+0xe0c>
10012e60:	2500      	movs	r5, #0
10012e62:	9404      	str	r4, [sp, #16]
10012e64:	4698      	mov	r8, r3
10012e66:	462c      	mov	r4, r5
10012e68:	e00c      	b.n	10012e84 <_vfiprintf_r+0xcbc>
10012e6a:	a92d      	add	r1, sp, #180	@ 0xb4
10012e6c:	4658      	mov	r0, fp
10012e6e:	f001 fb33 	bl	100144d8 <_wcrtomb_r>
10012e72:	1c41      	adds	r1, r0, #1
10012e74:	4420      	add	r0, r4
10012e76:	f000 813f 	beq.w	100130f8 <_vfiprintf_r+0xf30>
10012e7a:	4540      	cmp	r0, r8
10012e7c:	dc08      	bgt.n	10012e90 <_vfiprintf_r+0xcc8>
10012e7e:	f000 8158 	beq.w	10013132 <_vfiprintf_r+0xf6a>
10012e82:	4604      	mov	r4, r0
10012e84:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10012e86:	5952      	ldr	r2, [r2, r5]
10012e88:	ab18      	add	r3, sp, #96	@ 0x60
10012e8a:	3504      	adds	r5, #4
10012e8c:	2a00      	cmp	r2, #0
10012e8e:	d1ec      	bne.n	10012e6a <_vfiprintf_r+0xca2>
10012e90:	9409      	str	r4, [sp, #36]	@ 0x24
10012e92:	9c04      	ldr	r4, [sp, #16]
10012e94:	e0ac      	b.n	10012ff0 <_vfiprintf_r+0xe28>
10012e96:	980a      	ldr	r0, [sp, #40]	@ 0x28
10012e98:	f850 3b04 	ldr.w	r3, [r0], #4
10012e9c:	900a      	str	r0, [sp, #40]	@ 0x28
10012e9e:	9802      	ldr	r0, [sp, #8]
10012ea0:	f010 0010 	ands.w	r0, r0, #16
10012ea4:	d19c      	bne.n	10012de0 <_vfiprintf_r+0xc18>
10012ea6:	9902      	ldr	r1, [sp, #8]
10012ea8:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
10012eac:	f000 808b 	beq.w	10012fc6 <_vfiprintf_r+0xdfe>
10012eb0:	b29b      	uxth	r3, r3
10012eb2:	4601      	mov	r1, r0
10012eb4:	e794      	b.n	10012de0 <_vfiprintf_r+0xc18>
10012eb6:	9a02      	ldr	r2, [sp, #8]
10012eb8:	f8cd 9010 	str.w	r9, [sp, #16]
10012ebc:	ac46      	add	r4, sp, #280	@ 0x118
10012ebe:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
10012ec2:	46a1      	mov	r9, r4
10012ec4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10012ec8:	4ea5      	ldr	r6, [pc, #660]	@ (10013160 <_vfiprintf_r+0xf98>)
10012eca:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
10012ece:	f04f 0c00 	mov.w	ip, #0
10012ed2:	4614      	mov	r4, r2
10012ed4:	e005      	b.n	10012ee2 <_vfiprintf_r+0xd1a>
10012ed6:	2b0a      	cmp	r3, #10
10012ed8:	f171 0100 	sbcs.w	r1, r1, #0
10012edc:	d336      	bcc.n	10012f4c <_vfiprintf_r+0xd84>
10012ede:	4643      	mov	r3, r8
10012ee0:	4629      	mov	r1, r5
10012ee2:	185a      	adds	r2, r3, r1
10012ee4:	f142 0200 	adc.w	r2, r2, #0
10012ee8:	fba6 0502 	umull	r0, r5, r6, r2
10012eec:	f025 0003 	bic.w	r0, r5, #3
10012ef0:	eb00 0095 	add.w	r0, r0, r5, lsr #2
10012ef4:	1a12      	subs	r2, r2, r0
10012ef6:	1a98      	subs	r0, r3, r2
10012ef8:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
10012efc:	f161 0e00 	sbc.w	lr, r1, #0
10012f00:	fb05 f500 	mul.w	r5, r5, r0
10012f04:	fb06 550e 	mla	r5, r6, lr, r5
10012f08:	fba0 8006 	umull	r8, r0, r0, r6
10012f0c:	4405      	add	r5, r0
10012f0e:	f008 0e01 	and.w	lr, r8, #1
10012f12:	2005      	movs	r0, #5
10012f14:	fbae 0e00 	umull	r0, lr, lr, r0
10012f18:	1880      	adds	r0, r0, r2
10012f1a:	ea4f 0858 	mov.w	r8, r8, lsr #1
10012f1e:	3030      	adds	r0, #48	@ 0x30
10012f20:	f809 0c01 	strb.w	r0, [r9, #-1]
10012f24:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
10012f28:	f10c 0c01 	add.w	ip, ip, #1
10012f2c:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10012f30:	086d      	lsrs	r5, r5, #1
10012f32:	2c00      	cmp	r4, #0
10012f34:	d0cf      	beq.n	10012ed6 <_vfiprintf_r+0xd0e>
10012f36:	f89b 2000 	ldrb.w	r2, [fp]
10012f3a:	4562      	cmp	r2, ip
10012f3c:	d1cb      	bne.n	10012ed6 <_vfiprintf_r+0xd0e>
10012f3e:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10012f42:	d0c8      	beq.n	10012ed6 <_vfiprintf_r+0xd0e>
10012f44:	2b0a      	cmp	r3, #10
10012f46:	f171 0100 	sbcs.w	r1, r1, #0
10012f4a:	d272      	bcs.n	10013032 <_vfiprintf_r+0xe6a>
10012f4c:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10012f50:	464c      	mov	r4, r9
10012f52:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10012f56:	f8dd 9010 	ldr.w	r9, [sp, #16]
10012f5a:	e5ea      	b.n	10012b32 <_vfiprintf_r+0x96a>
10012f5c:	9202      	str	r2, [sp, #8]
10012f5e:	e441      	b.n	100127e4 <_vfiprintf_r+0x61c>
10012f60:	9402      	str	r4, [sp, #8]
10012f62:	e4e6      	b.n	10012932 <_vfiprintf_r+0x76a>
10012f64:	4658      	mov	r0, fp
10012f66:	f000 fd2f 	bl	100139c8 <__sinit>
10012f6a:	f7ff b943 	b.w	100121f4 <_vfiprintf_r+0x2c>
10012f6e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
10012f72:	7862      	ldrb	r2, [r4, #1]
10012f74:	9302      	str	r3, [sp, #8]
10012f76:	3401      	adds	r4, #1
10012f78:	f7ff b98e 	b.w	10012298 <_vfiprintf_r+0xd0>
10012f7c:	f043 0320 	orr.w	r3, r3, #32
10012f80:	7862      	ldrb	r2, [r4, #1]
10012f82:	9302      	str	r3, [sp, #8]
10012f84:	3401      	adds	r4, #1
10012f86:	f7ff b987 	b.w	10012298 <_vfiprintf_r+0xd0>
10012f8a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10012f8c:	9a07      	ldr	r2, [sp, #28]
10012f8e:	681b      	ldr	r3, [r3, #0]
10012f90:	601a      	str	r2, [r3, #0]
10012f92:	e47f      	b.n	10012894 <_vfiprintf_r+0x6cc>
10012f94:	9b05      	ldr	r3, [sp, #20]
10012f96:	4c73      	ldr	r4, [pc, #460]	@ (10013164 <_vfiprintf_r+0xf9c>)
10012f98:	2b06      	cmp	r3, #6
10012f9a:	bf28      	it	cs
10012f9c:	2306      	movcs	r3, #6
10012f9e:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
10012fa2:	9304      	str	r3, [sp, #16]
10012fa4:	f7ff ba89 	b.w	100124ba <_vfiprintf_r+0x2f2>
10012fa8:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
10012fac:	f43f ac00 	beq.w	100127b0 <_vfiprintf_r+0x5e8>
10012fb0:	b2db      	uxtb	r3, r3
10012fb2:	4601      	mov	r1, r0
10012fb4:	f7ff bbfc 	b.w	100127b0 <_vfiprintf_r+0x5e8>
10012fb8:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
10012fbc:	bf1c      	itt	ne
10012fbe:	b2db      	uxtbne	r3, r3
10012fc0:	4621      	movne	r1, r4
10012fc2:	f7ff bba8 	b.w	10012716 <_vfiprintf_r+0x54e>
10012fc6:	9902      	ldr	r1, [sp, #8]
10012fc8:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
10012fcc:	bf1c      	itt	ne
10012fce:	b2db      	uxtbne	r3, r3
10012fd0:	4621      	movne	r1, r4
10012fd2:	e705      	b.n	10012de0 <_vfiprintf_r+0xc18>
10012fd4:	ab18      	add	r3, sp, #96	@ 0x60
10012fd6:	9300      	str	r3, [sp, #0]
10012fd8:	2300      	movs	r3, #0
10012fda:	4619      	mov	r1, r3
10012fdc:	aa15      	add	r2, sp, #84	@ 0x54
10012fde:	4658      	mov	r0, fp
10012fe0:	f001 faa0 	bl	10014524 <_wcsrtombs_r>
10012fe4:	4603      	mov	r3, r0
10012fe6:	3301      	adds	r3, #1
10012fe8:	9009      	str	r0, [sp, #36]	@ 0x24
10012fea:	f000 8085 	beq.w	100130f8 <_vfiprintf_r+0xf30>
10012fee:	9415      	str	r4, [sp, #84]	@ 0x54
10012ff0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012ff2:	b373      	cbz	r3, 10013052 <_vfiprintf_r+0xe8a>
10012ff4:	2b63      	cmp	r3, #99	@ 0x63
10012ff6:	dc49      	bgt.n	1001308c <_vfiprintf_r+0xec4>
10012ff8:	2300      	movs	r3, #0
10012ffa:	930b      	str	r3, [sp, #44]	@ 0x2c
10012ffc:	ac2d      	add	r4, sp, #180	@ 0xb4
10012ffe:	2208      	movs	r2, #8
10013000:	2100      	movs	r1, #0
10013002:	a818      	add	r0, sp, #96	@ 0x60
10013004:	f000 fffc 	bl	10014000 <memset>
10013008:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1001300a:	ab18      	add	r3, sp, #96	@ 0x60
1001300c:	9300      	str	r3, [sp, #0]
1001300e:	aa15      	add	r2, sp, #84	@ 0x54
10013010:	462b      	mov	r3, r5
10013012:	4621      	mov	r1, r4
10013014:	4658      	mov	r0, fp
10013016:	f001 fa85 	bl	10014524 <_wcsrtombs_r>
1001301a:	4285      	cmp	r5, r0
1001301c:	f040 8098 	bne.w	10013150 <_vfiprintf_r+0xf88>
10013020:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10013022:	960a      	str	r6, [sp, #40]	@ 0x28
10013024:	2300      	movs	r3, #0
10013026:	54a3      	strb	r3, [r4, r2]
10013028:	9305      	str	r3, [sp, #20]
1001302a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
1001302e:	9304      	str	r3, [sp, #16]
10013030:	e493      	b.n	1001295a <_vfiprintf_r+0x792>
10013032:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10013034:	9910      	ldr	r1, [sp, #64]	@ 0x40
10013036:	eba9 0903 	sub.w	r9, r9, r3
1001303a:	461a      	mov	r2, r3
1001303c:	4648      	mov	r0, r9
1001303e:	f001 f831 	bl	100140a4 <strncpy>
10013042:	f89b 3001 	ldrb.w	r3, [fp, #1]
10013046:	b10b      	cbz	r3, 1001304c <_vfiprintf_r+0xe84>
10013048:	f10b 0b01 	add.w	fp, fp, #1
1001304c:	f04f 0c00 	mov.w	ip, #0
10013050:	e745      	b.n	10012ede <_vfiprintf_r+0xd16>
10013052:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10013054:	960a      	str	r6, [sp, #40]	@ 0x28
10013056:	e9cd 3304 	strd	r3, r3, [sp, #16]
1001305a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001305c:	e47d      	b.n	1001295a <_vfiprintf_r+0x792>
1001305e:	2101      	movs	r1, #1
10013060:	4662      	mov	r2, ip
10013062:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013066:	f7ff ba79 	b.w	1001255c <_vfiprintf_r+0x394>
1001306a:	f343 11c0 	sbfx	r1, r3, #7, #1
1001306e:	460a      	mov	r2, r1
10013070:	b25b      	sxtb	r3, r3
10013072:	f7ff bb17 	b.w	100126a4 <_vfiprintf_r+0x4dc>
10013076:	4662      	mov	r2, ip
10013078:	2101      	movs	r1, #1
1001307a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001307e:	f7ff ba4a 	b.w	10012516 <_vfiprintf_r+0x34e>
10013082:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013084:	9a07      	ldr	r2, [sp, #28]
10013086:	681b      	ldr	r3, [r3, #0]
10013088:	801a      	strh	r2, [r3, #0]
1001308a:	e403      	b.n	10012894 <_vfiprintf_r+0x6cc>
1001308c:	1c59      	adds	r1, r3, #1
1001308e:	4658      	mov	r0, fp
10013090:	f7fc ff1a 	bl	1000fec8 <_malloc_r>
10013094:	4604      	mov	r4, r0
10013096:	2800      	cmp	r0, #0
10013098:	d02e      	beq.n	100130f8 <_vfiprintf_r+0xf30>
1001309a:	900b      	str	r0, [sp, #44]	@ 0x2c
1001309c:	e7af      	b.n	10012ffe <_vfiprintf_r+0xe36>
1001309e:	6d88      	ldr	r0, [r1, #88]	@ 0x58
100130a0:	f001 f8a8 	bl	100141f4 <__retarget_lock_release_recursive>
100130a4:	f7ff b9a0 	b.w	100123e8 <_vfiprintf_r+0x220>
100130a8:	9b05      	ldr	r3, [sp, #20]
100130aa:	9304      	str	r3, [sp, #16]
100130ac:	9309      	str	r3, [sp, #36]	@ 0x24
100130ae:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100130b0:	960a      	str	r6, [sp, #40]	@ 0x28
100130b2:	9305      	str	r3, [sp, #20]
100130b4:	e451      	b.n	1001295a <_vfiprintf_r+0x792>
100130b6:	4620      	mov	r0, r4
100130b8:	9505      	str	r5, [sp, #20]
100130ba:	960a      	str	r6, [sp, #40]	@ 0x28
100130bc:	f001 f9a0 	bl	10014400 <strlen>
100130c0:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
100130c4:	9009      	str	r0, [sp, #36]	@ 0x24
100130c6:	9304      	str	r3, [sp, #16]
100130c8:	950b      	str	r5, [sp, #44]	@ 0x2c
100130ca:	e446      	b.n	1001295a <_vfiprintf_r+0x792>
100130cc:	2300      	movs	r3, #0
100130ce:	9305      	str	r3, [sp, #20]
100130d0:	f7ff b8e3 	b.w	1001229a <_vfiprintf_r+0xd2>
100130d4:	4e24      	ldr	r6, [pc, #144]	@ (10013168 <_vfiprintf_r+0xfa0>)
100130d6:	4686      	mov	lr, r0
100130d8:	e56b      	b.n	10012bb2 <_vfiprintf_r+0x9ea>
100130da:	2330      	movs	r3, #48	@ 0x30
100130dc:	e430      	b.n	10012940 <_vfiprintf_r+0x778>
100130de:	9903      	ldr	r1, [sp, #12]
100130e0:	aa1a      	add	r2, sp, #104	@ 0x68
100130e2:	4658      	mov	r0, fp
100130e4:	f7ff f828 	bl	10012138 <__sprint_r.part.0>
100130e8:	2800      	cmp	r0, #0
100130ea:	f43f a9ab 	beq.w	10012444 <_vfiprintf_r+0x27c>
100130ee:	f7ff b9c9 	b.w	10012484 <_vfiprintf_r+0x2bc>
100130f2:	4e1d      	ldr	r6, [pc, #116]	@ (10013168 <_vfiprintf_r+0xfa0>)
100130f4:	1c48      	adds	r0, r1, #1
100130f6:	e5a7      	b.n	10012c48 <_vfiprintf_r+0xa80>
100130f8:	9a03      	ldr	r2, [sp, #12]
100130fa:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
100130fe:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013102:	8193      	strh	r3, [r2, #12]
10013104:	f7ff b9c1 	b.w	1001248a <_vfiprintf_r+0x2c2>
10013108:	9b03      	ldr	r3, [sp, #12]
1001310a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
1001310c:	07d9      	lsls	r1, r3, #31
1001310e:	d407      	bmi.n	10013120 <_vfiprintf_r+0xf58>
10013110:	9b03      	ldr	r3, [sp, #12]
10013112:	899b      	ldrh	r3, [r3, #12]
10013114:	059a      	lsls	r2, r3, #22
10013116:	d403      	bmi.n	10013120 <_vfiprintf_r+0xf58>
10013118:	9b03      	ldr	r3, [sp, #12]
1001311a:	6d98      	ldr	r0, [r3, #88]	@ 0x58
1001311c:	f001 f86a 	bl	100141f4 <__retarget_lock_release_recursive>
10013120:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10013124:	9307      	str	r3, [sp, #28]
10013126:	f7ff b9b8 	b.w	1001249a <_vfiprintf_r+0x2d2>
1001312a:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 1001316c <_vfiprintf_r+0xfa4>
1001312e:	4608      	mov	r0, r1
10013130:	e460      	b.n	100129f4 <_vfiprintf_r+0x82c>
10013132:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
10013136:	9309      	str	r3, [sp, #36]	@ 0x24
10013138:	e75a      	b.n	10012ff0 <_vfiprintf_r+0xe28>
1001313a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001313c:	7862      	ldrb	r2, [r4, #1]
1001313e:	460c      	mov	r4, r1
10013140:	f853 1b04 	ldr.w	r1, [r3], #4
10013144:	930a      	str	r3, [sp, #40]	@ 0x28
10013146:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
1001314a:	9105      	str	r1, [sp, #20]
1001314c:	f7ff b8a4 	b.w	10012298 <_vfiprintf_r+0xd0>
10013150:	9a03      	ldr	r2, [sp, #12]
10013152:	8993      	ldrh	r3, [r2, #12]
10013154:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013158:	8193      	strh	r3, [r2, #12]
1001315a:	f7ff b98d 	b.w	10012478 <_vfiprintf_r+0x2b0>
1001315e:	bf00      	nop
10013160:	cccccccd 	.word	0xcccccccd
10013164:	1001919c 	.word	0x1001919c
10013168:	100191d8 	.word	0x100191d8
1001316c:	100191c8 	.word	0x100191c8

10013170 <__sbprintf>:
10013170:	b5f0      	push	{r4, r5, r6, r7, lr}
10013172:	461f      	mov	r7, r3
10013174:	898b      	ldrh	r3, [r1, #12]
10013176:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
1001317a:	f023 0302 	bic.w	r3, r3, #2
1001317e:	f8ad 300c 	strh.w	r3, [sp, #12]
10013182:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10013184:	9319      	str	r3, [sp, #100]	@ 0x64
10013186:	89cb      	ldrh	r3, [r1, #14]
10013188:	f8ad 300e 	strh.w	r3, [sp, #14]
1001318c:	69cb      	ldr	r3, [r1, #28]
1001318e:	9307      	str	r3, [sp, #28]
10013190:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10013192:	9309      	str	r3, [sp, #36]	@ 0x24
10013194:	ab1a      	add	r3, sp, #104	@ 0x68
10013196:	9300      	str	r3, [sp, #0]
10013198:	9304      	str	r3, [sp, #16]
1001319a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
1001319e:	4615      	mov	r5, r2
100131a0:	4606      	mov	r6, r0
100131a2:	9302      	str	r3, [sp, #8]
100131a4:	9305      	str	r3, [sp, #20]
100131a6:	a816      	add	r0, sp, #88	@ 0x58
100131a8:	2300      	movs	r3, #0
100131aa:	460c      	mov	r4, r1
100131ac:	9306      	str	r3, [sp, #24]
100131ae:	f001 f81b 	bl	100141e8 <__retarget_lock_init_recursive>
100131b2:	462a      	mov	r2, r5
100131b4:	463b      	mov	r3, r7
100131b6:	4669      	mov	r1, sp
100131b8:	4630      	mov	r0, r6
100131ba:	f7ff f805 	bl	100121c8 <_vfiprintf_r>
100131be:	1e05      	subs	r5, r0, #0
100131c0:	db07      	blt.n	100131d2 <__sbprintf+0x62>
100131c2:	4669      	mov	r1, sp
100131c4:	4630      	mov	r0, r6
100131c6:	f000 fb11 	bl	100137ec <_fflush_r>
100131ca:	2800      	cmp	r0, #0
100131cc:	bf18      	it	ne
100131ce:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
100131d2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
100131d6:	065b      	lsls	r3, r3, #25
100131d8:	d503      	bpl.n	100131e2 <__sbprintf+0x72>
100131da:	89a3      	ldrh	r3, [r4, #12]
100131dc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100131e0:	81a3      	strh	r3, [r4, #12]
100131e2:	9816      	ldr	r0, [sp, #88]	@ 0x58
100131e4:	f001 f802 	bl	100141ec <__retarget_lock_close_recursive>
100131e8:	4628      	mov	r0, r5
100131ea:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
100131ee:	bdf0      	pop	{r4, r5, r6, r7, pc}

100131f0 <__malloc_lock>:
100131f0:	4801      	ldr	r0, [pc, #4]	@ (100131f8 <__malloc_lock+0x8>)
100131f2:	f000 bffd 	b.w	100141f0 <__retarget_lock_acquire_recursive>
100131f6:	bf00      	nop
100131f8:	2000119c 	.word	0x2000119c

100131fc <__malloc_unlock>:
100131fc:	4801      	ldr	r0, [pc, #4]	@ (10013204 <__malloc_unlock+0x8>)
100131fe:	f000 bff9 	b.w	100141f4 <__retarget_lock_release_recursive>
10013202:	bf00      	nop
10013204:	2000119c 	.word	0x2000119c

10013208 <_puts_r>:
10013208:	b570      	push	{r4, r5, r6, lr}
1001320a:	4605      	mov	r5, r0
1001320c:	b088      	sub	sp, #32
1001320e:	4608      	mov	r0, r1
10013210:	460c      	mov	r4, r1
10013212:	f001 f8f5 	bl	10014400 <strlen>
10013216:	4e21      	ldr	r6, [pc, #132]	@ (1001329c <_puts_r+0x94>)
10013218:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
1001321a:	9005      	str	r0, [sp, #20]
1001321c:	2101      	movs	r1, #1
1001321e:	1843      	adds	r3, r0, r1
10013220:	e9cd 6106 	strd	r6, r1, [sp, #24]
10013224:	a804      	add	r0, sp, #16
10013226:	2102      	movs	r1, #2
10013228:	9404      	str	r4, [sp, #16]
1001322a:	9303      	str	r3, [sp, #12]
1001322c:	68ac      	ldr	r4, [r5, #8]
1001322e:	9001      	str	r0, [sp, #4]
10013230:	9102      	str	r1, [sp, #8]
10013232:	2a00      	cmp	r2, #0
10013234:	d02e      	beq.n	10013294 <_puts_r+0x8c>
10013236:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10013238:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001323c:	07d6      	lsls	r6, r2, #31
1001323e:	d401      	bmi.n	10013244 <_puts_r+0x3c>
10013240:	0598      	lsls	r0, r3, #22
10013242:	d521      	bpl.n	10013288 <_puts_r+0x80>
10013244:	0499      	lsls	r1, r3, #18
10013246:	d406      	bmi.n	10013256 <_puts_r+0x4e>
10013248:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001324a:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
1001324e:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10013252:	81a3      	strh	r3, [r4, #12]
10013254:	6662      	str	r2, [r4, #100]	@ 0x64
10013256:	4628      	mov	r0, r5
10013258:	aa01      	add	r2, sp, #4
1001325a:	4621      	mov	r1, r4
1001325c:	f000 fbde 	bl	10013a1c <__sfvwrite_r>
10013260:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10013262:	2800      	cmp	r0, #0
10013264:	bf0c      	ite	eq
10013266:	250a      	moveq	r5, #10
10013268:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
1001326c:	07da      	lsls	r2, r3, #31
1001326e:	d402      	bmi.n	10013276 <_puts_r+0x6e>
10013270:	89a3      	ldrh	r3, [r4, #12]
10013272:	059b      	lsls	r3, r3, #22
10013274:	d502      	bpl.n	1001327c <_puts_r+0x74>
10013276:	4628      	mov	r0, r5
10013278:	b008      	add	sp, #32
1001327a:	bd70      	pop	{r4, r5, r6, pc}
1001327c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001327e:	f000 ffb9 	bl	100141f4 <__retarget_lock_release_recursive>
10013282:	4628      	mov	r0, r5
10013284:	b008      	add	sp, #32
10013286:	bd70      	pop	{r4, r5, r6, pc}
10013288:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001328a:	f000 ffb1 	bl	100141f0 <__retarget_lock_acquire_recursive>
1001328e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013292:	e7d7      	b.n	10013244 <_puts_r+0x3c>
10013294:	4628      	mov	r0, r5
10013296:	f000 fb97 	bl	100139c8 <__sinit>
1001329a:	e7cc      	b.n	10013236 <_puts_r+0x2e>
1001329c:	100191e8 	.word	0x100191e8

100132a0 <puts>:
100132a0:	4b02      	ldr	r3, [pc, #8]	@ (100132ac <puts+0xc>)
100132a2:	4601      	mov	r1, r0
100132a4:	6818      	ldr	r0, [r3, #0]
100132a6:	f7ff bfaf 	b.w	10013208 <_puts_r>
100132aa:	bf00      	nop
100132ac:	200005c0 	.word	0x200005c0

100132b0 <_fclose_r>:
100132b0:	b570      	push	{r4, r5, r6, lr}
100132b2:	2900      	cmp	r1, #0
100132b4:	d03f      	beq.n	10013336 <_fclose_r+0x86>
100132b6:	4605      	mov	r5, r0
100132b8:	460c      	mov	r4, r1
100132ba:	b110      	cbz	r0, 100132c2 <_fclose_r+0x12>
100132bc:	6b43      	ldr	r3, [r0, #52]	@ 0x34
100132be:	2b00      	cmp	r3, #0
100132c0:	d03c      	beq.n	1001333c <_fclose_r+0x8c>
100132c2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100132c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
100132c8:	07de      	lsls	r6, r3, #31
100132ca:	d432      	bmi.n	10013332 <_fclose_r+0x82>
100132cc:	0590      	lsls	r0, r2, #22
100132ce:	d538      	bpl.n	10013342 <_fclose_r+0x92>
100132d0:	4621      	mov	r1, r4
100132d2:	4628      	mov	r0, r5
100132d4:	f000 f9ee 	bl	100136b4 <__sflush_r>
100132d8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
100132da:	4606      	mov	r6, r0
100132dc:	b133      	cbz	r3, 100132ec <_fclose_r+0x3c>
100132de:	69e1      	ldr	r1, [r4, #28]
100132e0:	4628      	mov	r0, r5
100132e2:	4798      	blx	r3
100132e4:	2800      	cmp	r0, #0
100132e6:	bfb8      	it	lt
100132e8:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
100132ec:	89a3      	ldrh	r3, [r4, #12]
100132ee:	061a      	lsls	r2, r3, #24
100132f0:	d439      	bmi.n	10013366 <_fclose_r+0xb6>
100132f2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
100132f4:	b141      	cbz	r1, 10013308 <_fclose_r+0x58>
100132f6:	f104 0340 	add.w	r3, r4, #64	@ 0x40
100132fa:	4299      	cmp	r1, r3
100132fc:	d002      	beq.n	10013304 <_fclose_r+0x54>
100132fe:	4628      	mov	r0, r5
10013300:	f002 f978 	bl	100155f4 <_free_r>
10013304:	2300      	movs	r3, #0
10013306:	6323      	str	r3, [r4, #48]	@ 0x30
10013308:	6c61      	ldr	r1, [r4, #68]	@ 0x44
1001330a:	b121      	cbz	r1, 10013316 <_fclose_r+0x66>
1001330c:	4628      	mov	r0, r5
1001330e:	f002 f971 	bl	100155f4 <_free_r>
10013312:	2300      	movs	r3, #0
10013314:	6463      	str	r3, [r4, #68]	@ 0x44
10013316:	f000 fb75 	bl	10013a04 <__sfp_lock_acquire>
1001331a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1001331c:	2200      	movs	r2, #0
1001331e:	07db      	lsls	r3, r3, #31
10013320:	81a2      	strh	r2, [r4, #12]
10013322:	d51c      	bpl.n	1001335e <_fclose_r+0xae>
10013324:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013326:	f000 ff61 	bl	100141ec <__retarget_lock_close_recursive>
1001332a:	f000 fb71 	bl	10013a10 <__sfp_lock_release>
1001332e:	4630      	mov	r0, r6
10013330:	bd70      	pop	{r4, r5, r6, pc}
10013332:	2a00      	cmp	r2, #0
10013334:	d1cc      	bne.n	100132d0 <_fclose_r+0x20>
10013336:	2600      	movs	r6, #0
10013338:	4630      	mov	r0, r6
1001333a:	bd70      	pop	{r4, r5, r6, pc}
1001333c:	f000 fb44 	bl	100139c8 <__sinit>
10013340:	e7bf      	b.n	100132c2 <_fclose_r+0x12>
10013342:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013344:	f000 ff54 	bl	100141f0 <__retarget_lock_acquire_recursive>
10013348:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001334c:	2b00      	cmp	r3, #0
1001334e:	d1bf      	bne.n	100132d0 <_fclose_r+0x20>
10013350:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10013352:	07d9      	lsls	r1, r3, #31
10013354:	d4ef      	bmi.n	10013336 <_fclose_r+0x86>
10013356:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013358:	f000 ff4c 	bl	100141f4 <__retarget_lock_release_recursive>
1001335c:	e7eb      	b.n	10013336 <_fclose_r+0x86>
1001335e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013360:	f000 ff48 	bl	100141f4 <__retarget_lock_release_recursive>
10013364:	e7de      	b.n	10013324 <_fclose_r+0x74>
10013366:	6921      	ldr	r1, [r4, #16]
10013368:	4628      	mov	r0, r5
1001336a:	f002 f943 	bl	100155f4 <_free_r>
1001336e:	e7c0      	b.n	100132f2 <_fclose_r+0x42>

10013370 <_realloc_r>:
10013370:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10013374:	4616      	mov	r6, r2
10013376:	2900      	cmp	r1, #0
10013378:	f000 8096 	beq.w	100134a8 <_realloc_r+0x138>
1001337c:	460c      	mov	r4, r1
1001337e:	4680      	mov	r8, r0
10013380:	f106 050b 	add.w	r5, r6, #11
10013384:	f7ff ff34 	bl	100131f0 <__malloc_lock>
10013388:	f854 1c04 	ldr.w	r1, [r4, #-4]
1001338c:	2d16      	cmp	r5, #22
1001338e:	f1a4 0908 	sub.w	r9, r4, #8
10013392:	f021 0703 	bic.w	r7, r1, #3
10013396:	d858      	bhi.n	1001344a <_realloc_r+0xda>
10013398:	2510      	movs	r5, #16
1001339a:	42ae      	cmp	r6, r5
1001339c:	d858      	bhi.n	10013450 <_realloc_r+0xe0>
1001339e:	42af      	cmp	r7, r5
100133a0:	da60      	bge.n	10013464 <_realloc_r+0xf4>
100133a2:	4bbe      	ldr	r3, [pc, #760]	@ (1001369c <_realloc_r+0x32c>)
100133a4:	689a      	ldr	r2, [r3, #8]
100133a6:	eb09 0c07 	add.w	ip, r9, r7
100133aa:	4562      	cmp	r2, ip
100133ac:	f8dc 0004 	ldr.w	r0, [ip, #4]
100133b0:	f000 8090 	beq.w	100134d4 <_realloc_r+0x164>
100133b4:	f020 0301 	bic.w	r3, r0, #1
100133b8:	4463      	add	r3, ip
100133ba:	685b      	ldr	r3, [r3, #4]
100133bc:	07da      	lsls	r2, r3, #31
100133be:	d468      	bmi.n	10013492 <_realloc_r+0x122>
100133c0:	f020 0003 	bic.w	r0, r0, #3
100133c4:	183b      	adds	r3, r7, r0
100133c6:	429d      	cmp	r5, r3
100133c8:	dd47      	ble.n	1001345a <_realloc_r+0xea>
100133ca:	07cb      	lsls	r3, r1, #31
100133cc:	d412      	bmi.n	100133f4 <_realloc_r+0x84>
100133ce:	f854 3c08 	ldr.w	r3, [r4, #-8]
100133d2:	eba9 0b03 	sub.w	fp, r9, r3
100133d6:	f8db 3004 	ldr.w	r3, [fp, #4]
100133da:	f023 0203 	bic.w	r2, r3, #3
100133de:	4410      	add	r0, r2
100133e0:	eb00 0a07 	add.w	sl, r0, r7
100133e4:	4555      	cmp	r5, sl
100133e6:	f340 80f6 	ble.w	100135d6 <_realloc_r+0x266>
100133ea:	eb07 0a02 	add.w	sl, r7, r2
100133ee:	4555      	cmp	r5, sl
100133f0:	f340 80cc 	ble.w	1001358c <_realloc_r+0x21c>
100133f4:	4631      	mov	r1, r6
100133f6:	4640      	mov	r0, r8
100133f8:	f7fc fd66 	bl	1000fec8 <_malloc_r>
100133fc:	4606      	mov	r6, r0
100133fe:	2800      	cmp	r0, #0
10013400:	f000 8120 	beq.w	10013644 <_realloc_r+0x2d4>
10013404:	f854 3c04 	ldr.w	r3, [r4, #-4]
10013408:	f023 0301 	bic.w	r3, r3, #1
1001340c:	444b      	add	r3, r9
1001340e:	f1a0 0208 	sub.w	r2, r0, #8
10013412:	4293      	cmp	r3, r2
10013414:	f000 80b4 	beq.w	10013580 <_realloc_r+0x210>
10013418:	1f3a      	subs	r2, r7, #4
1001341a:	2a24      	cmp	r2, #36	@ 0x24
1001341c:	f200 80d7 	bhi.w	100135ce <_realloc_r+0x25e>
10013420:	2a13      	cmp	r2, #19
10013422:	f200 80a2 	bhi.w	1001356a <_realloc_r+0x1fa>
10013426:	4603      	mov	r3, r0
10013428:	4622      	mov	r2, r4
1001342a:	6811      	ldr	r1, [r2, #0]
1001342c:	6019      	str	r1, [r3, #0]
1001342e:	6851      	ldr	r1, [r2, #4]
10013430:	6059      	str	r1, [r3, #4]
10013432:	6892      	ldr	r2, [r2, #8]
10013434:	609a      	str	r2, [r3, #8]
10013436:	4621      	mov	r1, r4
10013438:	4640      	mov	r0, r8
1001343a:	f002 f8db 	bl	100155f4 <_free_r>
1001343e:	4640      	mov	r0, r8
10013440:	f7ff fedc 	bl	100131fc <__malloc_unlock>
10013444:	4630      	mov	r0, r6
10013446:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001344a:	f035 0507 	bics.w	r5, r5, #7
1001344e:	d5a4      	bpl.n	1001339a <_realloc_r+0x2a>
10013450:	230c      	movs	r3, #12
10013452:	f8c8 3000 	str.w	r3, [r8]
10013456:	2600      	movs	r6, #0
10013458:	e018      	b.n	1001348c <_realloc_r+0x11c>
1001345a:	461f      	mov	r7, r3
1001345c:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
10013460:	60d3      	str	r3, [r2, #12]
10013462:	609a      	str	r2, [r3, #8]
10013464:	f8d9 3004 	ldr.w	r3, [r9, #4]
10013468:	1b7a      	subs	r2, r7, r5
1001346a:	2a0f      	cmp	r2, #15
1001346c:	f003 0301 	and.w	r3, r3, #1
10013470:	eb09 0007 	add.w	r0, r9, r7
10013474:	d81d      	bhi.n	100134b2 <_realloc_r+0x142>
10013476:	433b      	orrs	r3, r7
10013478:	f8c9 3004 	str.w	r3, [r9, #4]
1001347c:	6843      	ldr	r3, [r0, #4]
1001347e:	f043 0301 	orr.w	r3, r3, #1
10013482:	6043      	str	r3, [r0, #4]
10013484:	4640      	mov	r0, r8
10013486:	f7ff feb9 	bl	100131fc <__malloc_unlock>
1001348a:	4626      	mov	r6, r4
1001348c:	4630      	mov	r0, r6
1001348e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013492:	07c9      	lsls	r1, r1, #31
10013494:	d4ae      	bmi.n	100133f4 <_realloc_r+0x84>
10013496:	f854 3c08 	ldr.w	r3, [r4, #-8]
1001349a:	eba9 0b03 	sub.w	fp, r9, r3
1001349e:	f8db 3004 	ldr.w	r3, [fp, #4]
100134a2:	f023 0203 	bic.w	r2, r3, #3
100134a6:	e7a0      	b.n	100133ea <_realloc_r+0x7a>
100134a8:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
100134ac:	4611      	mov	r1, r2
100134ae:	f7fc bd0b 	b.w	1000fec8 <_malloc_r>
100134b2:	eb09 0105 	add.w	r1, r9, r5
100134b6:	432b      	orrs	r3, r5
100134b8:	f042 0201 	orr.w	r2, r2, #1
100134bc:	f8c9 3004 	str.w	r3, [r9, #4]
100134c0:	604a      	str	r2, [r1, #4]
100134c2:	6843      	ldr	r3, [r0, #4]
100134c4:	f043 0301 	orr.w	r3, r3, #1
100134c8:	6043      	str	r3, [r0, #4]
100134ca:	3108      	adds	r1, #8
100134cc:	4640      	mov	r0, r8
100134ce:	f002 f891 	bl	100155f4 <_free_r>
100134d2:	e7d7      	b.n	10013484 <_realloc_r+0x114>
100134d4:	f020 0003 	bic.w	r0, r0, #3
100134d8:	19c2      	adds	r2, r0, r7
100134da:	f105 0c10 	add.w	ip, r5, #16
100134de:	4562      	cmp	r2, ip
100134e0:	f280 8091 	bge.w	10013606 <_realloc_r+0x296>
100134e4:	07ca      	lsls	r2, r1, #31
100134e6:	d485      	bmi.n	100133f4 <_realloc_r+0x84>
100134e8:	f854 2c08 	ldr.w	r2, [r4, #-8]
100134ec:	eba9 0b02 	sub.w	fp, r9, r2
100134f0:	f8db 2004 	ldr.w	r2, [fp, #4]
100134f4:	f022 0203 	bic.w	r2, r2, #3
100134f8:	4410      	add	r0, r2
100134fa:	eb00 0a07 	add.w	sl, r0, r7
100134fe:	45d4      	cmp	ip, sl
10013500:	f73f af73 	bgt.w	100133ea <_realloc_r+0x7a>
10013504:	465e      	mov	r6, fp
10013506:	f8db 100c 	ldr.w	r1, [fp, #12]
1001350a:	f856 0f08 	ldr.w	r0, [r6, #8]!
1001350e:	1f3a      	subs	r2, r7, #4
10013510:	2a24      	cmp	r2, #36	@ 0x24
10013512:	60c1      	str	r1, [r0, #12]
10013514:	6088      	str	r0, [r1, #8]
10013516:	f200 80ae 	bhi.w	10013676 <_realloc_r+0x306>
1001351a:	2a13      	cmp	r2, #19
1001351c:	f240 80a9 	bls.w	10013672 <_realloc_r+0x302>
10013520:	6821      	ldr	r1, [r4, #0]
10013522:	f8cb 1008 	str.w	r1, [fp, #8]
10013526:	6861      	ldr	r1, [r4, #4]
10013528:	f8cb 100c 	str.w	r1, [fp, #12]
1001352c:	2a1b      	cmp	r2, #27
1001352e:	f200 80a8 	bhi.w	10013682 <_realloc_r+0x312>
10013532:	3408      	adds	r4, #8
10013534:	f10b 0210 	add.w	r2, fp, #16
10013538:	6821      	ldr	r1, [r4, #0]
1001353a:	6011      	str	r1, [r2, #0]
1001353c:	6861      	ldr	r1, [r4, #4]
1001353e:	6051      	str	r1, [r2, #4]
10013540:	68a1      	ldr	r1, [r4, #8]
10013542:	6091      	str	r1, [r2, #8]
10013544:	eb0b 0105 	add.w	r1, fp, r5
10013548:	ebaa 0205 	sub.w	r2, sl, r5
1001354c:	f042 0201 	orr.w	r2, r2, #1
10013550:	6099      	str	r1, [r3, #8]
10013552:	604a      	str	r2, [r1, #4]
10013554:	f8db 3004 	ldr.w	r3, [fp, #4]
10013558:	f003 0301 	and.w	r3, r3, #1
1001355c:	432b      	orrs	r3, r5
1001355e:	4640      	mov	r0, r8
10013560:	f8cb 3004 	str.w	r3, [fp, #4]
10013564:	f7ff fe4a 	bl	100131fc <__malloc_unlock>
10013568:	e790      	b.n	1001348c <_realloc_r+0x11c>
1001356a:	6823      	ldr	r3, [r4, #0]
1001356c:	6003      	str	r3, [r0, #0]
1001356e:	6863      	ldr	r3, [r4, #4]
10013570:	6043      	str	r3, [r0, #4]
10013572:	2a1b      	cmp	r2, #27
10013574:	d83c      	bhi.n	100135f0 <_realloc_r+0x280>
10013576:	f104 0208 	add.w	r2, r4, #8
1001357a:	f100 0308 	add.w	r3, r0, #8
1001357e:	e754      	b.n	1001342a <_realloc_r+0xba>
10013580:	f850 3c04 	ldr.w	r3, [r0, #-4]
10013584:	f023 0303 	bic.w	r3, r3, #3
10013588:	441f      	add	r7, r3
1001358a:	e76b      	b.n	10013464 <_realloc_r+0xf4>
1001358c:	1f3a      	subs	r2, r7, #4
1001358e:	465e      	mov	r6, fp
10013590:	f8db 300c 	ldr.w	r3, [fp, #12]
10013594:	f856 1f08 	ldr.w	r1, [r6, #8]!
10013598:	2a24      	cmp	r2, #36	@ 0x24
1001359a:	60cb      	str	r3, [r1, #12]
1001359c:	6099      	str	r1, [r3, #8]
1001359e:	d822      	bhi.n	100135e6 <_realloc_r+0x276>
100135a0:	2a13      	cmp	r2, #19
100135a2:	d91e      	bls.n	100135e2 <_realloc_r+0x272>
100135a4:	6823      	ldr	r3, [r4, #0]
100135a6:	f8cb 3008 	str.w	r3, [fp, #8]
100135aa:	6863      	ldr	r3, [r4, #4]
100135ac:	f8cb 300c 	str.w	r3, [fp, #12]
100135b0:	2a1b      	cmp	r2, #27
100135b2:	d83b      	bhi.n	1001362c <_realloc_r+0x2bc>
100135b4:	3408      	adds	r4, #8
100135b6:	f10b 0310 	add.w	r3, fp, #16
100135ba:	6822      	ldr	r2, [r4, #0]
100135bc:	601a      	str	r2, [r3, #0]
100135be:	6862      	ldr	r2, [r4, #4]
100135c0:	605a      	str	r2, [r3, #4]
100135c2:	68a2      	ldr	r2, [r4, #8]
100135c4:	609a      	str	r2, [r3, #8]
100135c6:	4634      	mov	r4, r6
100135c8:	4657      	mov	r7, sl
100135ca:	46d9      	mov	r9, fp
100135cc:	e74a      	b.n	10013464 <_realloc_r+0xf4>
100135ce:	4621      	mov	r1, r4
100135d0:	f000 fc96 	bl	10013f00 <memmove>
100135d4:	e72f      	b.n	10013436 <_realloc_r+0xc6>
100135d6:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
100135da:	1f3a      	subs	r2, r7, #4
100135dc:	60cb      	str	r3, [r1, #12]
100135de:	6099      	str	r1, [r3, #8]
100135e0:	e7d5      	b.n	1001358e <_realloc_r+0x21e>
100135e2:	4633      	mov	r3, r6
100135e4:	e7e9      	b.n	100135ba <_realloc_r+0x24a>
100135e6:	4621      	mov	r1, r4
100135e8:	4630      	mov	r0, r6
100135ea:	f000 fc89 	bl	10013f00 <memmove>
100135ee:	e7ea      	b.n	100135c6 <_realloc_r+0x256>
100135f0:	68a3      	ldr	r3, [r4, #8]
100135f2:	6083      	str	r3, [r0, #8]
100135f4:	68e3      	ldr	r3, [r4, #12]
100135f6:	60c3      	str	r3, [r0, #12]
100135f8:	2a24      	cmp	r2, #36	@ 0x24
100135fa:	d027      	beq.n	1001364c <_realloc_r+0x2dc>
100135fc:	f104 0210 	add.w	r2, r4, #16
10013600:	f100 0310 	add.w	r3, r0, #16
10013604:	e711      	b.n	1001342a <_realloc_r+0xba>
10013606:	eb09 0105 	add.w	r1, r9, r5
1001360a:	6099      	str	r1, [r3, #8]
1001360c:	1b53      	subs	r3, r2, r5
1001360e:	f043 0301 	orr.w	r3, r3, #1
10013612:	604b      	str	r3, [r1, #4]
10013614:	f854 3c04 	ldr.w	r3, [r4, #-4]
10013618:	f003 0301 	and.w	r3, r3, #1
1001361c:	432b      	orrs	r3, r5
1001361e:	4640      	mov	r0, r8
10013620:	f844 3c04 	str.w	r3, [r4, #-4]
10013624:	f7ff fdea 	bl	100131fc <__malloc_unlock>
10013628:	4626      	mov	r6, r4
1001362a:	e72f      	b.n	1001348c <_realloc_r+0x11c>
1001362c:	68a3      	ldr	r3, [r4, #8]
1001362e:	f8cb 3010 	str.w	r3, [fp, #16]
10013632:	68e3      	ldr	r3, [r4, #12]
10013634:	f8cb 3014 	str.w	r3, [fp, #20]
10013638:	2a24      	cmp	r2, #36	@ 0x24
1001363a:	d010      	beq.n	1001365e <_realloc_r+0x2ee>
1001363c:	3410      	adds	r4, #16
1001363e:	f10b 0318 	add.w	r3, fp, #24
10013642:	e7ba      	b.n	100135ba <_realloc_r+0x24a>
10013644:	4640      	mov	r0, r8
10013646:	f7ff fdd9 	bl	100131fc <__malloc_unlock>
1001364a:	e704      	b.n	10013456 <_realloc_r+0xe6>
1001364c:	6923      	ldr	r3, [r4, #16]
1001364e:	6103      	str	r3, [r0, #16]
10013650:	6961      	ldr	r1, [r4, #20]
10013652:	6141      	str	r1, [r0, #20]
10013654:	f104 0218 	add.w	r2, r4, #24
10013658:	f100 0318 	add.w	r3, r0, #24
1001365c:	e6e5      	b.n	1001342a <_realloc_r+0xba>
1001365e:	6923      	ldr	r3, [r4, #16]
10013660:	f8cb 3018 	str.w	r3, [fp, #24]
10013664:	6963      	ldr	r3, [r4, #20]
10013666:	f8cb 301c 	str.w	r3, [fp, #28]
1001366a:	3418      	adds	r4, #24
1001366c:	f10b 0320 	add.w	r3, fp, #32
10013670:	e7a3      	b.n	100135ba <_realloc_r+0x24a>
10013672:	4632      	mov	r2, r6
10013674:	e760      	b.n	10013538 <_realloc_r+0x1c8>
10013676:	4621      	mov	r1, r4
10013678:	4630      	mov	r0, r6
1001367a:	f000 fc41 	bl	10013f00 <memmove>
1001367e:	4b07      	ldr	r3, [pc, #28]	@ (1001369c <_realloc_r+0x32c>)
10013680:	e760      	b.n	10013544 <_realloc_r+0x1d4>
10013682:	68a1      	ldr	r1, [r4, #8]
10013684:	f8cb 1010 	str.w	r1, [fp, #16]
10013688:	68e1      	ldr	r1, [r4, #12]
1001368a:	f8cb 1014 	str.w	r1, [fp, #20]
1001368e:	2a24      	cmp	r2, #36	@ 0x24
10013690:	d006      	beq.n	100136a0 <_realloc_r+0x330>
10013692:	3410      	adds	r4, #16
10013694:	f10b 0218 	add.w	r2, fp, #24
10013698:	e74e      	b.n	10013538 <_realloc_r+0x1c8>
1001369a:	bf00      	nop
1001369c:	20000040 	.word	0x20000040
100136a0:	6922      	ldr	r2, [r4, #16]
100136a2:	f8cb 2018 	str.w	r2, [fp, #24]
100136a6:	6962      	ldr	r2, [r4, #20]
100136a8:	f8cb 201c 	str.w	r2, [fp, #28]
100136ac:	3418      	adds	r4, #24
100136ae:	f10b 0220 	add.w	r2, fp, #32
100136b2:	e741      	b.n	10013538 <_realloc_r+0x1c8>

100136b4 <__sflush_r>:
100136b4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
100136b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100136bc:	460c      	mov	r4, r1
100136be:	0711      	lsls	r1, r2, #28
100136c0:	4680      	mov	r8, r0
100136c2:	d44b      	bmi.n	1001375c <__sflush_r+0xa8>
100136c4:	6861      	ldr	r1, [r4, #4]
100136c6:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
100136ca:	2900      	cmp	r1, #0
100136cc:	81a3      	strh	r3, [r4, #12]
100136ce:	dd60      	ble.n	10013792 <__sflush_r+0xde>
100136d0:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
100136d2:	2d00      	cmp	r5, #0
100136d4:	d03f      	beq.n	10013756 <__sflush_r+0xa2>
100136d6:	2100      	movs	r1, #0
100136d8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
100136dc:	f8d8 6000 	ldr.w	r6, [r8]
100136e0:	f8c8 1000 	str.w	r1, [r8]
100136e4:	69e1      	ldr	r1, [r4, #28]
100136e6:	d161      	bne.n	100137ac <__sflush_r+0xf8>
100136e8:	2301      	movs	r3, #1
100136ea:	4640      	mov	r0, r8
100136ec:	47a8      	blx	r5
100136ee:	1c43      	adds	r3, r0, #1
100136f0:	4602      	mov	r2, r0
100136f2:	d06b      	beq.n	100137cc <__sflush_r+0x118>
100136f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100136f8:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
100136fa:	69e1      	ldr	r1, [r4, #28]
100136fc:	075f      	lsls	r7, r3, #29
100136fe:	d505      	bpl.n	1001370c <__sflush_r+0x58>
10013700:	6863      	ldr	r3, [r4, #4]
10013702:	1ad2      	subs	r2, r2, r3
10013704:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10013706:	b10b      	cbz	r3, 1001370c <__sflush_r+0x58>
10013708:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
1001370a:	1ad2      	subs	r2, r2, r3
1001370c:	2300      	movs	r3, #0
1001370e:	4640      	mov	r0, r8
10013710:	47a8      	blx	r5
10013712:	1c45      	adds	r5, r0, #1
10013714:	d14c      	bne.n	100137b0 <__sflush_r+0xfc>
10013716:	f8d8 1000 	ldr.w	r1, [r8]
1001371a:	291d      	cmp	r1, #29
1001371c:	d83d      	bhi.n	1001379a <__sflush_r+0xe6>
1001371e:	4a32      	ldr	r2, [pc, #200]	@ (100137e8 <__sflush_r+0x134>)
10013720:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013724:	410a      	asrs	r2, r1
10013726:	f012 0201 	ands.w	r2, r2, #1
1001372a:	d138      	bne.n	1001379e <__sflush_r+0xea>
1001372c:	6062      	str	r2, [r4, #4]
1001372e:	6922      	ldr	r2, [r4, #16]
10013730:	6022      	str	r2, [r4, #0]
10013732:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10013736:	81a2      	strh	r2, [r4, #12]
10013738:	04da      	lsls	r2, r3, #19
1001373a:	d452      	bmi.n	100137e2 <__sflush_r+0x12e>
1001373c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1001373e:	f8c8 6000 	str.w	r6, [r8]
10013742:	b141      	cbz	r1, 10013756 <__sflush_r+0xa2>
10013744:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10013748:	4299      	cmp	r1, r3
1001374a:	d002      	beq.n	10013752 <__sflush_r+0x9e>
1001374c:	4640      	mov	r0, r8
1001374e:	f001 ff51 	bl	100155f4 <_free_r>
10013752:	2300      	movs	r3, #0
10013754:	6323      	str	r3, [r4, #48]	@ 0x30
10013756:	2000      	movs	r0, #0
10013758:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001375c:	6926      	ldr	r6, [r4, #16]
1001375e:	2e00      	cmp	r6, #0
10013760:	d0f9      	beq.n	10013756 <__sflush_r+0xa2>
10013762:	6825      	ldr	r5, [r4, #0]
10013764:	6026      	str	r6, [r4, #0]
10013766:	0791      	lsls	r1, r2, #30
10013768:	bf0c      	ite	eq
1001376a:	6963      	ldreq	r3, [r4, #20]
1001376c:	2300      	movne	r3, #0
1001376e:	1bad      	subs	r5, r5, r6
10013770:	60a3      	str	r3, [r4, #8]
10013772:	e00b      	b.n	1001378c <__sflush_r+0xd8>
10013774:	462b      	mov	r3, r5
10013776:	4632      	mov	r2, r6
10013778:	69e1      	ldr	r1, [r4, #28]
1001377a:	6a67      	ldr	r7, [r4, #36]	@ 0x24
1001377c:	4640      	mov	r0, r8
1001377e:	47b8      	blx	r7
10013780:	f1b0 0c00 	subs.w	ip, r0, #0
10013784:	eba5 050c 	sub.w	r5, r5, ip
10013788:	4466      	add	r6, ip
1001378a:	dd06      	ble.n	1001379a <__sflush_r+0xe6>
1001378c:	2d00      	cmp	r5, #0
1001378e:	dcf1      	bgt.n	10013774 <__sflush_r+0xc0>
10013790:	e7e1      	b.n	10013756 <__sflush_r+0xa2>
10013792:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
10013794:	2900      	cmp	r1, #0
10013796:	dc9b      	bgt.n	100136d0 <__sflush_r+0x1c>
10013798:	e7dd      	b.n	10013756 <__sflush_r+0xa2>
1001379a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001379e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100137a2:	81a3      	strh	r3, [r4, #12]
100137a4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100137a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
100137ac:	6d22      	ldr	r2, [r4, #80]	@ 0x50
100137ae:	e7a5      	b.n	100136fc <__sflush_r+0x48>
100137b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100137b4:	6922      	ldr	r2, [r4, #16]
100137b6:	6022      	str	r2, [r4, #0]
100137b8:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
100137bc:	81a2      	strh	r2, [r4, #12]
100137be:	04db      	lsls	r3, r3, #19
100137c0:	f04f 0200 	mov.w	r2, #0
100137c4:	6062      	str	r2, [r4, #4]
100137c6:	d5b9      	bpl.n	1001373c <__sflush_r+0x88>
100137c8:	6520      	str	r0, [r4, #80]	@ 0x50
100137ca:	e7b7      	b.n	1001373c <__sflush_r+0x88>
100137cc:	f8d8 3000 	ldr.w	r3, [r8]
100137d0:	2b00      	cmp	r3, #0
100137d2:	d08f      	beq.n	100136f4 <__sflush_r+0x40>
100137d4:	2b1d      	cmp	r3, #29
100137d6:	d001      	beq.n	100137dc <__sflush_r+0x128>
100137d8:	2b16      	cmp	r3, #22
100137da:	d1de      	bne.n	1001379a <__sflush_r+0xe6>
100137dc:	f8c8 6000 	str.w	r6, [r8]
100137e0:	e7b9      	b.n	10013756 <__sflush_r+0xa2>
100137e2:	2900      	cmp	r1, #0
100137e4:	d1aa      	bne.n	1001373c <__sflush_r+0x88>
100137e6:	e7ef      	b.n	100137c8 <__sflush_r+0x114>
100137e8:	dfbffffe 	.word	0xdfbffffe

100137ec <_fflush_r>:
100137ec:	b538      	push	{r3, r4, r5, lr}
100137ee:	460c      	mov	r4, r1
100137f0:	4605      	mov	r5, r0
100137f2:	b108      	cbz	r0, 100137f8 <_fflush_r+0xc>
100137f4:	6b43      	ldr	r3, [r0, #52]	@ 0x34
100137f6:	b303      	cbz	r3, 1001383a <_fflush_r+0x4e>
100137f8:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
100137fc:	b188      	cbz	r0, 10013822 <_fflush_r+0x36>
100137fe:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10013800:	07db      	lsls	r3, r3, #31
10013802:	d401      	bmi.n	10013808 <_fflush_r+0x1c>
10013804:	0581      	lsls	r1, r0, #22
10013806:	d50f      	bpl.n	10013828 <_fflush_r+0x3c>
10013808:	4628      	mov	r0, r5
1001380a:	4621      	mov	r1, r4
1001380c:	f7ff ff52 	bl	100136b4 <__sflush_r>
10013810:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10013812:	07da      	lsls	r2, r3, #31
10013814:	4605      	mov	r5, r0
10013816:	d402      	bmi.n	1001381e <_fflush_r+0x32>
10013818:	89a3      	ldrh	r3, [r4, #12]
1001381a:	059b      	lsls	r3, r3, #22
1001381c:	d508      	bpl.n	10013830 <_fflush_r+0x44>
1001381e:	4628      	mov	r0, r5
10013820:	bd38      	pop	{r3, r4, r5, pc}
10013822:	4605      	mov	r5, r0
10013824:	4628      	mov	r0, r5
10013826:	bd38      	pop	{r3, r4, r5, pc}
10013828:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001382a:	f000 fce1 	bl	100141f0 <__retarget_lock_acquire_recursive>
1001382e:	e7eb      	b.n	10013808 <_fflush_r+0x1c>
10013830:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013832:	f000 fcdf 	bl	100141f4 <__retarget_lock_release_recursive>
10013836:	4628      	mov	r0, r5
10013838:	bd38      	pop	{r3, r4, r5, pc}
1001383a:	f000 f8c5 	bl	100139c8 <__sinit>
1001383e:	e7db      	b.n	100137f8 <_fflush_r+0xc>

10013840 <sprintf>:
10013840:	b40e      	push	{r1, r2, r3}
10013842:	b510      	push	{r4, lr}
10013844:	b09d      	sub	sp, #116	@ 0x74
10013846:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
1001384a:	ab1f      	add	r3, sp, #124	@ 0x7c
1001384c:	9104      	str	r1, [sp, #16]
1001384e:	9107      	str	r1, [sp, #28]
10013850:	4909      	ldr	r1, [pc, #36]	@ (10013878 <sprintf+0x38>)
10013852:	f853 2b04 	ldr.w	r2, [r3], #4
10013856:	9002      	str	r0, [sp, #8]
10013858:	9006      	str	r0, [sp, #24]
1001385a:	4c08      	ldr	r4, [pc, #32]	@ (1001387c <sprintf+0x3c>)
1001385c:	6808      	ldr	r0, [r1, #0]
1001385e:	9301      	str	r3, [sp, #4]
10013860:	a902      	add	r1, sp, #8
10013862:	9405      	str	r4, [sp, #20]
10013864:	f001 ffdc 	bl	10015820 <_svfprintf_r>
10013868:	9b02      	ldr	r3, [sp, #8]
1001386a:	2200      	movs	r2, #0
1001386c:	701a      	strb	r2, [r3, #0]
1001386e:	b01d      	add	sp, #116	@ 0x74
10013870:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10013874:	b003      	add	sp, #12
10013876:	4770      	bx	lr
10013878:	200005c0 	.word	0x200005c0
1001387c:	ffff0208 	.word	0xffff0208

10013880 <stdio_exit_handler>:
10013880:	4a02      	ldr	r2, [pc, #8]	@ (1001388c <stdio_exit_handler+0xc>)
10013882:	4903      	ldr	r1, [pc, #12]	@ (10013890 <stdio_exit_handler+0x10>)
10013884:	4803      	ldr	r0, [pc, #12]	@ (10013894 <stdio_exit_handler+0x14>)
10013886:	f000 ba49 	b.w	10013d1c <_fwalk_sglue>
1001388a:	bf00      	nop
1001388c:	20000448 	.word	0x20000448
10013890:	100132b1 	.word	0x100132b1
10013894:	200005c8 	.word	0x200005c8

10013898 <cleanup_stdio>:
10013898:	4b0c      	ldr	r3, [pc, #48]	@ (100138cc <cleanup_stdio+0x34>)
1001389a:	6841      	ldr	r1, [r0, #4]
1001389c:	4299      	cmp	r1, r3
1001389e:	b510      	push	{r4, lr}
100138a0:	4604      	mov	r4, r0
100138a2:	d001      	beq.n	100138a8 <cleanup_stdio+0x10>
100138a4:	f7ff fd04 	bl	100132b0 <_fclose_r>
100138a8:	68a1      	ldr	r1, [r4, #8]
100138aa:	4b09      	ldr	r3, [pc, #36]	@ (100138d0 <cleanup_stdio+0x38>)
100138ac:	4299      	cmp	r1, r3
100138ae:	d002      	beq.n	100138b6 <cleanup_stdio+0x1e>
100138b0:	4620      	mov	r0, r4
100138b2:	f7ff fcfd 	bl	100132b0 <_fclose_r>
100138b6:	68e1      	ldr	r1, [r4, #12]
100138b8:	4b06      	ldr	r3, [pc, #24]	@ (100138d4 <cleanup_stdio+0x3c>)
100138ba:	4299      	cmp	r1, r3
100138bc:	d004      	beq.n	100138c8 <cleanup_stdio+0x30>
100138be:	4620      	mov	r0, r4
100138c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100138c4:	f7ff bcf4 	b.w	100132b0 <_fclose_r>
100138c8:	bd10      	pop	{r4, pc}
100138ca:	bf00      	nop
100138cc:	20001060 	.word	0x20001060
100138d0:	200010c8 	.word	0x200010c8
100138d4:	20001130 	.word	0x20001130

100138d8 <global_stdio_init.part.0>:
100138d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100138dc:	4c31      	ldr	r4, [pc, #196]	@ (100139a4 <global_stdio_init.part.0+0xcc>)
100138de:	4b32      	ldr	r3, [pc, #200]	@ (100139a8 <global_stdio_init.part.0+0xd0>)
100138e0:	4832      	ldr	r0, [pc, #200]	@ (100139ac <global_stdio_init.part.0+0xd4>)
100138e2:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 100139c0 <global_stdio_init.part.0+0xe8>
100138e6:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 100139c4 <global_stdio_init.part.0+0xec>
100138ea:	4f31      	ldr	r7, [pc, #196]	@ (100139b0 <global_stdio_init.part.0+0xd8>)
100138ec:	6018      	str	r0, [r3, #0]
100138ee:	2500      	movs	r5, #0
100138f0:	4629      	mov	r1, r5
100138f2:	2304      	movs	r3, #4
100138f4:	2208      	movs	r2, #8
100138f6:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
100138fa:	4e2e      	ldr	r6, [pc, #184]	@ (100139b4 <global_stdio_init.part.0+0xdc>)
100138fc:	60e3      	str	r3, [r4, #12]
100138fe:	e9c4 5500 	strd	r5, r5, [r4]
10013902:	e9c4 5504 	strd	r5, r5, [r4, #16]
10013906:	60a5      	str	r5, [r4, #8]
10013908:	6665      	str	r5, [r4, #100]	@ 0x64
1001390a:	61a5      	str	r5, [r4, #24]
1001390c:	f000 fb78 	bl	10014000 <memset>
10013910:	f104 0058 	add.w	r0, r4, #88	@ 0x58
10013914:	e9c4 4907 	strd	r4, r9, [r4, #28]
10013918:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
1001391c:	62e6      	str	r6, [r4, #44]	@ 0x2c
1001391e:	f000 fc63 	bl	100141e8 <__retarget_lock_init_recursive>
10013922:	4629      	mov	r1, r5
10013924:	4b24      	ldr	r3, [pc, #144]	@ (100139b8 <global_stdio_init.part.0+0xe0>)
10013926:	6763      	str	r3, [r4, #116]	@ 0x74
10013928:	2208      	movs	r2, #8
1001392a:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
1001392e:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
10013932:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
10013936:	6725      	str	r5, [r4, #112]	@ 0x70
10013938:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
1001393c:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
10013940:	f000 fb5e 	bl	10014000 <memset>
10013944:	f104 0368 	add.w	r3, r4, #104	@ 0x68
10013948:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
1001394c:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
10013950:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
10013954:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
10013958:	f000 fc46 	bl	100141e8 <__retarget_lock_init_recursive>
1001395c:	4b17      	ldr	r3, [pc, #92]	@ (100139bc <global_stdio_init.part.0+0xe4>)
1001395e:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
10013962:	4629      	mov	r1, r5
10013964:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
10013968:	2208      	movs	r2, #8
1001396a:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
1001396e:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
10013972:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
10013976:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
1001397a:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
1001397e:	f000 fb3f 	bl	10014000 <memset>
10013982:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
10013986:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
1001398a:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
1001398e:	f504 7094 	add.w	r0, r4, #296	@ 0x128
10013992:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
10013996:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
1001399a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001399e:	f000 bc23 	b.w	100141e8 <__retarget_lock_init_recursive>
100139a2:	bf00      	nop
100139a4:	20001060 	.word	0x20001060
100139a8:	20001198 	.word	0x20001198
100139ac:	10013881 	.word	0x10013881
100139b0:	10017c75 	.word	0x10017c75
100139b4:	10017c99 	.word	0x10017c99
100139b8:	00010009 	.word	0x00010009
100139bc:	00020012 	.word	0x00020012
100139c0:	10017c11 	.word	0x10017c11
100139c4:	10017c35 	.word	0x10017c35

100139c8 <__sinit>:
100139c8:	b510      	push	{r4, lr}
100139ca:	4604      	mov	r4, r0
100139cc:	480a      	ldr	r0, [pc, #40]	@ (100139f8 <__sinit+0x30>)
100139ce:	f000 fc0f 	bl	100141f0 <__retarget_lock_acquire_recursive>
100139d2:	6b63      	ldr	r3, [r4, #52]	@ 0x34
100139d4:	b923      	cbnz	r3, 100139e0 <__sinit+0x18>
100139d6:	4b09      	ldr	r3, [pc, #36]	@ (100139fc <__sinit+0x34>)
100139d8:	4a09      	ldr	r2, [pc, #36]	@ (10013a00 <__sinit+0x38>)
100139da:	681b      	ldr	r3, [r3, #0]
100139dc:	6362      	str	r2, [r4, #52]	@ 0x34
100139de:	b123      	cbz	r3, 100139ea <__sinit+0x22>
100139e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100139e4:	4804      	ldr	r0, [pc, #16]	@ (100139f8 <__sinit+0x30>)
100139e6:	f000 bc05 	b.w	100141f4 <__retarget_lock_release_recursive>
100139ea:	f7ff ff75 	bl	100138d8 <global_stdio_init.part.0>
100139ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100139f2:	4801      	ldr	r0, [pc, #4]	@ (100139f8 <__sinit+0x30>)
100139f4:	f000 bbfe 	b.w	100141f4 <__retarget_lock_release_recursive>
100139f8:	200011a4 	.word	0x200011a4
100139fc:	20001198 	.word	0x20001198
10013a00:	10013899 	.word	0x10013899

10013a04 <__sfp_lock_acquire>:
10013a04:	4801      	ldr	r0, [pc, #4]	@ (10013a0c <__sfp_lock_acquire+0x8>)
10013a06:	f000 bbf3 	b.w	100141f0 <__retarget_lock_acquire_recursive>
10013a0a:	bf00      	nop
10013a0c:	200011a4 	.word	0x200011a4

10013a10 <__sfp_lock_release>:
10013a10:	4801      	ldr	r0, [pc, #4]	@ (10013a18 <__sfp_lock_release+0x8>)
10013a12:	f000 bbef 	b.w	100141f4 <__retarget_lock_release_recursive>
10013a16:	bf00      	nop
10013a18:	200011a4 	.word	0x200011a4

10013a1c <__sfvwrite_r>:
10013a1c:	6893      	ldr	r3, [r2, #8]
10013a1e:	2b00      	cmp	r3, #0
10013a20:	f000 80f8 	beq.w	10013c14 <__sfvwrite_r+0x1f8>
10013a24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10013a28:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
10013a2c:	f01c 0f08 	tst.w	ip, #8
10013a30:	b083      	sub	sp, #12
10013a32:	4690      	mov	r8, r2
10013a34:	4681      	mov	r9, r0
10013a36:	460c      	mov	r4, r1
10013a38:	d031      	beq.n	10013a9e <__sfvwrite_r+0x82>
10013a3a:	690b      	ldr	r3, [r1, #16]
10013a3c:	b37b      	cbz	r3, 10013a9e <__sfvwrite_r+0x82>
10013a3e:	f01c 0702 	ands.w	r7, ip, #2
10013a42:	f8d8 6000 	ldr.w	r6, [r8]
10013a46:	d038      	beq.n	10013aba <__sfvwrite_r+0x9e>
10013a48:	2700      	movs	r7, #0
10013a4a:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10013a4e:	69e1      	ldr	r1, [r4, #28]
10013a50:	f8df a2c4 	ldr.w	sl, [pc, #708]	@ 10013d18 <__sfvwrite_r+0x2fc>
10013a54:	463d      	mov	r5, r7
10013a56:	4555      	cmp	r5, sl
10013a58:	462b      	mov	r3, r5
10013a5a:	463a      	mov	r2, r7
10013a5c:	bf28      	it	cs
10013a5e:	4653      	movcs	r3, sl
10013a60:	4648      	mov	r0, r9
10013a62:	b1c5      	cbz	r5, 10013a96 <__sfvwrite_r+0x7a>
10013a64:	47d8      	blx	fp
10013a66:	2800      	cmp	r0, #0
10013a68:	f340 80ca 	ble.w	10013c00 <__sfvwrite_r+0x1e4>
10013a6c:	f8d8 3008 	ldr.w	r3, [r8, #8]
10013a70:	1a1b      	subs	r3, r3, r0
10013a72:	4407      	add	r7, r0
10013a74:	1a2d      	subs	r5, r5, r0
10013a76:	f8c8 3008 	str.w	r3, [r8, #8]
10013a7a:	2b00      	cmp	r3, #0
10013a7c:	f000 80b6 	beq.w	10013bec <__sfvwrite_r+0x1d0>
10013a80:	4555      	cmp	r5, sl
10013a82:	462b      	mov	r3, r5
10013a84:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10013a88:	69e1      	ldr	r1, [r4, #28]
10013a8a:	bf28      	it	cs
10013a8c:	4653      	movcs	r3, sl
10013a8e:	463a      	mov	r2, r7
10013a90:	4648      	mov	r0, r9
10013a92:	2d00      	cmp	r5, #0
10013a94:	d1e6      	bne.n	10013a64 <__sfvwrite_r+0x48>
10013a96:	e9d6 7500 	ldrd	r7, r5, [r6]
10013a9a:	3608      	adds	r6, #8
10013a9c:	e7db      	b.n	10013a56 <__sfvwrite_r+0x3a>
10013a9e:	4621      	mov	r1, r4
10013aa0:	4648      	mov	r0, r9
10013aa2:	f000 f95f 	bl	10013d64 <__swsetup_r>
10013aa6:	2800      	cmp	r0, #0
10013aa8:	f040 80af 	bne.w	10013c0a <__sfvwrite_r+0x1ee>
10013aac:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10013ab0:	f8d8 6000 	ldr.w	r6, [r8]
10013ab4:	f01c 0702 	ands.w	r7, ip, #2
10013ab8:	d1c6      	bne.n	10013a48 <__sfvwrite_r+0x2c>
10013aba:	f01c 0a01 	ands.w	sl, ip, #1
10013abe:	d163      	bne.n	10013b88 <__sfvwrite_r+0x16c>
10013ac0:	6823      	ldr	r3, [r4, #0]
10013ac2:	68a1      	ldr	r1, [r4, #8]
10013ac4:	4657      	mov	r7, sl
10013ac6:	4618      	mov	r0, r3
10013ac8:	468b      	mov	fp, r1
10013aca:	2f00      	cmp	r7, #0
10013acc:	d058      	beq.n	10013b80 <__sfvwrite_r+0x164>
10013ace:	f41c 7f00 	tst.w	ip, #512	@ 0x200
10013ad2:	f000 80b5 	beq.w	10013c40 <__sfvwrite_r+0x224>
10013ad6:	42b9      	cmp	r1, r7
10013ad8:	460a      	mov	r2, r1
10013ada:	f200 80e1 	bhi.w	10013ca0 <__sfvwrite_r+0x284>
10013ade:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
10013ae2:	d02f      	beq.n	10013b44 <__sfvwrite_r+0x128>
10013ae4:	6921      	ldr	r1, [r4, #16]
10013ae6:	6962      	ldr	r2, [r4, #20]
10013ae8:	1a5d      	subs	r5, r3, r1
10013aea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
10013aee:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
10013af2:	1c6b      	adds	r3, r5, #1
10013af4:	1052      	asrs	r2, r2, #1
10013af6:	443b      	add	r3, r7
10013af8:	4293      	cmp	r3, r2
10013afa:	bf92      	itee	ls
10013afc:	4693      	movls	fp, r2
10013afe:	469b      	movhi	fp, r3
10013b00:	461a      	movhi	r2, r3
10013b02:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
10013b06:	f000 80ea 	beq.w	10013cde <__sfvwrite_r+0x2c2>
10013b0a:	4611      	mov	r1, r2
10013b0c:	4648      	mov	r0, r9
10013b0e:	f7fc f9db 	bl	1000fec8 <_malloc_r>
10013b12:	2800      	cmp	r0, #0
10013b14:	f000 80f9 	beq.w	10013d0a <__sfvwrite_r+0x2ee>
10013b18:	462a      	mov	r2, r5
10013b1a:	6921      	ldr	r1, [r4, #16]
10013b1c:	9000      	str	r0, [sp, #0]
10013b1e:	f000 fbbf 	bl	100142a0 <memcpy>
10013b22:	89a2      	ldrh	r2, [r4, #12]
10013b24:	9b00      	ldr	r3, [sp, #0]
10013b26:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10013b2a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
10013b2e:	81a2      	strh	r2, [r4, #12]
10013b30:	1958      	adds	r0, r3, r5
10013b32:	ebab 0505 	sub.w	r5, fp, r5
10013b36:	f8c4 b014 	str.w	fp, [r4, #20]
10013b3a:	6123      	str	r3, [r4, #16]
10013b3c:	60a5      	str	r5, [r4, #8]
10013b3e:	6020      	str	r0, [r4, #0]
10013b40:	46bb      	mov	fp, r7
10013b42:	463a      	mov	r2, r7
10013b44:	4651      	mov	r1, sl
10013b46:	9200      	str	r2, [sp, #0]
10013b48:	f000 f9da 	bl	10013f00 <memmove>
10013b4c:	68a1      	ldr	r1, [r4, #8]
10013b4e:	6823      	ldr	r3, [r4, #0]
10013b50:	9a00      	ldr	r2, [sp, #0]
10013b52:	eba1 010b 	sub.w	r1, r1, fp
10013b56:	441a      	add	r2, r3
10013b58:	463d      	mov	r5, r7
10013b5a:	60a1      	str	r1, [r4, #8]
10013b5c:	6022      	str	r2, [r4, #0]
10013b5e:	2700      	movs	r7, #0
10013b60:	f8d8 3008 	ldr.w	r3, [r8, #8]
10013b64:	1b5b      	subs	r3, r3, r5
10013b66:	44aa      	add	sl, r5
10013b68:	f8c8 3008 	str.w	r3, [r8, #8]
10013b6c:	2b00      	cmp	r3, #0
10013b6e:	d03d      	beq.n	10013bec <__sfvwrite_r+0x1d0>
10013b70:	6823      	ldr	r3, [r4, #0]
10013b72:	68a1      	ldr	r1, [r4, #8]
10013b74:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10013b78:	4618      	mov	r0, r3
10013b7a:	468b      	mov	fp, r1
10013b7c:	2f00      	cmp	r7, #0
10013b7e:	d1a6      	bne.n	10013ace <__sfvwrite_r+0xb2>
10013b80:	e9d6 a700 	ldrd	sl, r7, [r6]
10013b84:	3608      	adds	r6, #8
10013b86:	e79e      	b.n	10013ac6 <__sfvwrite_r+0xaa>
10013b88:	4638      	mov	r0, r7
10013b8a:	46bb      	mov	fp, r7
10013b8c:	463d      	mov	r5, r7
10013b8e:	9700      	str	r7, [sp, #0]
10013b90:	2d00      	cmp	r5, #0
10013b92:	d041      	beq.n	10013c18 <__sfvwrite_r+0x1fc>
10013b94:	2800      	cmp	r0, #0
10013b96:	d046      	beq.n	10013c26 <__sfvwrite_r+0x20a>
10013b98:	9a00      	ldr	r2, [sp, #0]
10013b9a:	6820      	ldr	r0, [r4, #0]
10013b9c:	68a1      	ldr	r1, [r4, #8]
10013b9e:	e9d4 7304 	ldrd	r7, r3, [r4, #16]
10013ba2:	42aa      	cmp	r2, r5
10013ba4:	bf28      	it	cs
10013ba6:	462a      	movcs	r2, r5
10013ba8:	42b8      	cmp	r0, r7
10013baa:	d904      	bls.n	10013bb6 <__sfvwrite_r+0x19a>
10013bac:	eb01 0a03 	add.w	sl, r1, r3
10013bb0:	4552      	cmp	r2, sl
10013bb2:	f300 8085 	bgt.w	10013cc0 <__sfvwrite_r+0x2a4>
10013bb6:	4293      	cmp	r3, r2
10013bb8:	dc75      	bgt.n	10013ca6 <__sfvwrite_r+0x28a>
10013bba:	69e1      	ldr	r1, [r4, #28]
10013bbc:	6a67      	ldr	r7, [r4, #36]	@ 0x24
10013bbe:	465a      	mov	r2, fp
10013bc0:	4648      	mov	r0, r9
10013bc2:	47b8      	blx	r7
10013bc4:	f1b0 0a00 	subs.w	sl, r0, #0
10013bc8:	dd1a      	ble.n	10013c00 <__sfvwrite_r+0x1e4>
10013bca:	9b00      	ldr	r3, [sp, #0]
10013bcc:	ebb3 030a 	subs.w	r3, r3, sl
10013bd0:	9300      	str	r3, [sp, #0]
10013bd2:	d00f      	beq.n	10013bf4 <__sfvwrite_r+0x1d8>
10013bd4:	2001      	movs	r0, #1
10013bd6:	f8d8 3008 	ldr.w	r3, [r8, #8]
10013bda:	eba3 030a 	sub.w	r3, r3, sl
10013bde:	44d3      	add	fp, sl
10013be0:	eba5 050a 	sub.w	r5, r5, sl
10013be4:	f8c8 3008 	str.w	r3, [r8, #8]
10013be8:	2b00      	cmp	r3, #0
10013bea:	d1d1      	bne.n	10013b90 <__sfvwrite_r+0x174>
10013bec:	2000      	movs	r0, #0
10013bee:	b003      	add	sp, #12
10013bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013bf4:	4621      	mov	r1, r4
10013bf6:	4648      	mov	r0, r9
10013bf8:	f7ff fdf8 	bl	100137ec <_fflush_r>
10013bfc:	2800      	cmp	r0, #0
10013bfe:	d0ea      	beq.n	10013bd6 <__sfvwrite_r+0x1ba>
10013c00:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013c04:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013c08:	81a3      	strh	r3, [r4, #12]
10013c0a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10013c0e:	b003      	add	sp, #12
10013c10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013c14:	2000      	movs	r0, #0
10013c16:	4770      	bx	lr
10013c18:	6875      	ldr	r5, [r6, #4]
10013c1a:	4633      	mov	r3, r6
10013c1c:	3608      	adds	r6, #8
10013c1e:	2d00      	cmp	r5, #0
10013c20:	d0fa      	beq.n	10013c18 <__sfvwrite_r+0x1fc>
10013c22:	f8d3 b000 	ldr.w	fp, [r3]
10013c26:	462a      	mov	r2, r5
10013c28:	210a      	movs	r1, #10
10013c2a:	4658      	mov	r0, fp
10013c2c:	f000 fae8 	bl	10014200 <memchr>
10013c30:	2800      	cmp	r0, #0
10013c32:	d067      	beq.n	10013d04 <__sfvwrite_r+0x2e8>
10013c34:	3001      	adds	r0, #1
10013c36:	eba0 030b 	sub.w	r3, r0, fp
10013c3a:	9300      	str	r3, [sp, #0]
10013c3c:	461a      	mov	r2, r3
10013c3e:	e7ac      	b.n	10013b9a <__sfvwrite_r+0x17e>
10013c40:	6922      	ldr	r2, [r4, #16]
10013c42:	429a      	cmp	r2, r3
10013c44:	d314      	bcc.n	10013c70 <__sfvwrite_r+0x254>
10013c46:	6962      	ldr	r2, [r4, #20]
10013c48:	42ba      	cmp	r2, r7
10013c4a:	d811      	bhi.n	10013c70 <__sfvwrite_r+0x254>
10013c4c:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10013c50:	42bb      	cmp	r3, r7
10013c52:	bf28      	it	cs
10013c54:	463b      	movcs	r3, r7
10013c56:	6a65      	ldr	r5, [r4, #36]	@ 0x24
10013c58:	fb93 f3f2 	sdiv	r3, r3, r2
10013c5c:	69e1      	ldr	r1, [r4, #28]
10013c5e:	fb02 f303 	mul.w	r3, r2, r3
10013c62:	4648      	mov	r0, r9
10013c64:	4652      	mov	r2, sl
10013c66:	47a8      	blx	r5
10013c68:	1e05      	subs	r5, r0, #0
10013c6a:	ddc9      	ble.n	10013c00 <__sfvwrite_r+0x1e4>
10013c6c:	1b7f      	subs	r7, r7, r5
10013c6e:	e777      	b.n	10013b60 <__sfvwrite_r+0x144>
10013c70:	42b9      	cmp	r1, r7
10013c72:	bf28      	it	cs
10013c74:	4639      	movcs	r1, r7
10013c76:	460d      	mov	r5, r1
10013c78:	4618      	mov	r0, r3
10013c7a:	460a      	mov	r2, r1
10013c7c:	4651      	mov	r1, sl
10013c7e:	f000 f93f 	bl	10013f00 <memmove>
10013c82:	68a1      	ldr	r1, [r4, #8]
10013c84:	6823      	ldr	r3, [r4, #0]
10013c86:	1b49      	subs	r1, r1, r5
10013c88:	442b      	add	r3, r5
10013c8a:	60a1      	str	r1, [r4, #8]
10013c8c:	6023      	str	r3, [r4, #0]
10013c8e:	2900      	cmp	r1, #0
10013c90:	d1ec      	bne.n	10013c6c <__sfvwrite_r+0x250>
10013c92:	4621      	mov	r1, r4
10013c94:	4648      	mov	r0, r9
10013c96:	f7ff fda9 	bl	100137ec <_fflush_r>
10013c9a:	2800      	cmp	r0, #0
10013c9c:	d0e6      	beq.n	10013c6c <__sfvwrite_r+0x250>
10013c9e:	e7af      	b.n	10013c00 <__sfvwrite_r+0x1e4>
10013ca0:	46bb      	mov	fp, r7
10013ca2:	463a      	mov	r2, r7
10013ca4:	e74e      	b.n	10013b44 <__sfvwrite_r+0x128>
10013ca6:	4659      	mov	r1, fp
10013ca8:	9201      	str	r2, [sp, #4]
10013caa:	f000 f929 	bl	10013f00 <memmove>
10013cae:	9a01      	ldr	r2, [sp, #4]
10013cb0:	68a3      	ldr	r3, [r4, #8]
10013cb2:	1a9b      	subs	r3, r3, r2
10013cb4:	60a3      	str	r3, [r4, #8]
10013cb6:	6823      	ldr	r3, [r4, #0]
10013cb8:	4413      	add	r3, r2
10013cba:	6023      	str	r3, [r4, #0]
10013cbc:	4692      	mov	sl, r2
10013cbe:	e784      	b.n	10013bca <__sfvwrite_r+0x1ae>
10013cc0:	4659      	mov	r1, fp
10013cc2:	4652      	mov	r2, sl
10013cc4:	f000 f91c 	bl	10013f00 <memmove>
10013cc8:	6823      	ldr	r3, [r4, #0]
10013cca:	4453      	add	r3, sl
10013ccc:	6023      	str	r3, [r4, #0]
10013cce:	4621      	mov	r1, r4
10013cd0:	4648      	mov	r0, r9
10013cd2:	f7ff fd8b 	bl	100137ec <_fflush_r>
10013cd6:	2800      	cmp	r0, #0
10013cd8:	f43f af77 	beq.w	10013bca <__sfvwrite_r+0x1ae>
10013cdc:	e790      	b.n	10013c00 <__sfvwrite_r+0x1e4>
10013cde:	4648      	mov	r0, r9
10013ce0:	f7ff fb46 	bl	10013370 <_realloc_r>
10013ce4:	4603      	mov	r3, r0
10013ce6:	2800      	cmp	r0, #0
10013ce8:	f47f af22 	bne.w	10013b30 <__sfvwrite_r+0x114>
10013cec:	6921      	ldr	r1, [r4, #16]
10013cee:	4648      	mov	r0, r9
10013cf0:	f001 fc80 	bl	100155f4 <_free_r>
10013cf4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013cf8:	220c      	movs	r2, #12
10013cfa:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10013cfe:	f8c9 2000 	str.w	r2, [r9]
10013d02:	e77f      	b.n	10013c04 <__sfvwrite_r+0x1e8>
10013d04:	1c6a      	adds	r2, r5, #1
10013d06:	9200      	str	r2, [sp, #0]
10013d08:	e747      	b.n	10013b9a <__sfvwrite_r+0x17e>
10013d0a:	220c      	movs	r2, #12
10013d0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013d10:	f8c9 2000 	str.w	r2, [r9]
10013d14:	e776      	b.n	10013c04 <__sfvwrite_r+0x1e8>
10013d16:	bf00      	nop
10013d18:	7ffffc00 	.word	0x7ffffc00

10013d1c <_fwalk_sglue>:
10013d1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10013d20:	4680      	mov	r8, r0
10013d22:	460f      	mov	r7, r1
10013d24:	4616      	mov	r6, r2
10013d26:	f04f 0900 	mov.w	r9, #0
10013d2a:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
10013d2e:	3d01      	subs	r5, #1
10013d30:	d411      	bmi.n	10013d56 <_fwalk_sglue+0x3a>
10013d32:	89a3      	ldrh	r3, [r4, #12]
10013d34:	2b01      	cmp	r3, #1
10013d36:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
10013d3a:	d908      	bls.n	10013d4e <_fwalk_sglue+0x32>
10013d3c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
10013d40:	3301      	adds	r3, #1
10013d42:	4621      	mov	r1, r4
10013d44:	d003      	beq.n	10013d4e <_fwalk_sglue+0x32>
10013d46:	4640      	mov	r0, r8
10013d48:	47b8      	blx	r7
10013d4a:	ea49 0900 	orr.w	r9, r9, r0
10013d4e:	1c6b      	adds	r3, r5, #1
10013d50:	f104 0468 	add.w	r4, r4, #104	@ 0x68
10013d54:	d1ed      	bne.n	10013d32 <_fwalk_sglue+0x16>
10013d56:	6836      	ldr	r6, [r6, #0]
10013d58:	2e00      	cmp	r6, #0
10013d5a:	d1e6      	bne.n	10013d2a <_fwalk_sglue+0xe>
10013d5c:	4648      	mov	r0, r9
10013d5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10013d62:	bf00      	nop

10013d64 <__swsetup_r>:
10013d64:	b538      	push	{r3, r4, r5, lr}
10013d66:	4b2e      	ldr	r3, [pc, #184]	@ (10013e20 <__swsetup_r+0xbc>)
10013d68:	681b      	ldr	r3, [r3, #0]
10013d6a:	4605      	mov	r5, r0
10013d6c:	460c      	mov	r4, r1
10013d6e:	b113      	cbz	r3, 10013d76 <__swsetup_r+0x12>
10013d70:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
10013d72:	2a00      	cmp	r2, #0
10013d74:	d04b      	beq.n	10013e0e <__swsetup_r+0xaa>
10013d76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013d7a:	0718      	lsls	r0, r3, #28
10013d7c:	d51c      	bpl.n	10013db8 <__swsetup_r+0x54>
10013d7e:	6922      	ldr	r2, [r4, #16]
10013d80:	b322      	cbz	r2, 10013dcc <__swsetup_r+0x68>
10013d82:	f013 0101 	ands.w	r1, r3, #1
10013d86:	d007      	beq.n	10013d98 <__swsetup_r+0x34>
10013d88:	6961      	ldr	r1, [r4, #20]
10013d8a:	2000      	movs	r0, #0
10013d8c:	4249      	negs	r1, r1
10013d8e:	60a0      	str	r0, [r4, #8]
10013d90:	61a1      	str	r1, [r4, #24]
10013d92:	b13a      	cbz	r2, 10013da4 <__swsetup_r+0x40>
10013d94:	2000      	movs	r0, #0
10013d96:	bd38      	pop	{r3, r4, r5, pc}
10013d98:	0798      	lsls	r0, r3, #30
10013d9a:	bf58      	it	pl
10013d9c:	6961      	ldrpl	r1, [r4, #20]
10013d9e:	60a1      	str	r1, [r4, #8]
10013da0:	2a00      	cmp	r2, #0
10013da2:	d1f7      	bne.n	10013d94 <__swsetup_r+0x30>
10013da4:	0619      	lsls	r1, r3, #24
10013da6:	bf58      	it	pl
10013da8:	4610      	movpl	r0, r2
10013daa:	d5f4      	bpl.n	10013d96 <__swsetup_r+0x32>
10013dac:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013db0:	81a3      	strh	r3, [r4, #12]
10013db2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10013db6:	bd38      	pop	{r3, r4, r5, pc}
10013db8:	06d9      	lsls	r1, r3, #27
10013dba:	d52c      	bpl.n	10013e16 <__swsetup_r+0xb2>
10013dbc:	075a      	lsls	r2, r3, #29
10013dbe:	d412      	bmi.n	10013de6 <__swsetup_r+0x82>
10013dc0:	6922      	ldr	r2, [r4, #16]
10013dc2:	f043 0308 	orr.w	r3, r3, #8
10013dc6:	81a3      	strh	r3, [r4, #12]
10013dc8:	2a00      	cmp	r2, #0
10013dca:	d1da      	bne.n	10013d82 <__swsetup_r+0x1e>
10013dcc:	f403 7120 	and.w	r1, r3, #640	@ 0x280
10013dd0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10013dd4:	d0d5      	beq.n	10013d82 <__swsetup_r+0x1e>
10013dd6:	4621      	mov	r1, r4
10013dd8:	4628      	mov	r0, r5
10013dda:	f003 faf1 	bl	100173c0 <__smakebuf_r>
10013dde:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013de2:	6922      	ldr	r2, [r4, #16]
10013de4:	e7cd      	b.n	10013d82 <__swsetup_r+0x1e>
10013de6:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10013de8:	b151      	cbz	r1, 10013e00 <__swsetup_r+0x9c>
10013dea:	f104 0240 	add.w	r2, r4, #64	@ 0x40
10013dee:	4291      	cmp	r1, r2
10013df0:	d004      	beq.n	10013dfc <__swsetup_r+0x98>
10013df2:	4628      	mov	r0, r5
10013df4:	f001 fbfe 	bl	100155f4 <_free_r>
10013df8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013dfc:	2200      	movs	r2, #0
10013dfe:	6322      	str	r2, [r4, #48]	@ 0x30
10013e00:	6922      	ldr	r2, [r4, #16]
10013e02:	2100      	movs	r1, #0
10013e04:	e9c4 2100 	strd	r2, r1, [r4]
10013e08:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
10013e0c:	e7d9      	b.n	10013dc2 <__swsetup_r+0x5e>
10013e0e:	4618      	mov	r0, r3
10013e10:	f7ff fdda 	bl	100139c8 <__sinit>
10013e14:	e7af      	b.n	10013d76 <__swsetup_r+0x12>
10013e16:	2209      	movs	r2, #9
10013e18:	602a      	str	r2, [r5, #0]
10013e1a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013e1e:	e7c7      	b.n	10013db0 <__swsetup_r+0x4c>
10013e20:	200005c0 	.word	0x200005c0

10013e24 <__fputwc>:
10013e24:	b570      	push	{r4, r5, r6, lr}
10013e26:	b082      	sub	sp, #8
10013e28:	4606      	mov	r6, r0
10013e2a:	460d      	mov	r5, r1
10013e2c:	4614      	mov	r4, r2
10013e2e:	f000 f96d 	bl	1001410c <__locale_mb_cur_max>
10013e32:	2801      	cmp	r0, #1
10013e34:	d102      	bne.n	10013e3c <__fputwc+0x18>
10013e36:	1e6b      	subs	r3, r5, #1
10013e38:	2bfe      	cmp	r3, #254	@ 0xfe
10013e3a:	d926      	bls.n	10013e8a <__fputwc+0x66>
10013e3c:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
10013e40:	462a      	mov	r2, r5
10013e42:	a901      	add	r1, sp, #4
10013e44:	4630      	mov	r0, r6
10013e46:	f000 fb47 	bl	100144d8 <_wcrtomb_r>
10013e4a:	1c43      	adds	r3, r0, #1
10013e4c:	d020      	beq.n	10013e90 <__fputwc+0x6c>
10013e4e:	b178      	cbz	r0, 10013e70 <__fputwc+0x4c>
10013e50:	68a3      	ldr	r3, [r4, #8]
10013e52:	f89d 1004 	ldrb.w	r1, [sp, #4]
10013e56:	3b01      	subs	r3, #1
10013e58:	2b00      	cmp	r3, #0
10013e5a:	60a3      	str	r3, [r4, #8]
10013e5c:	da04      	bge.n	10013e68 <__fputwc+0x44>
10013e5e:	69a2      	ldr	r2, [r4, #24]
10013e60:	4293      	cmp	r3, r2
10013e62:	db08      	blt.n	10013e76 <__fputwc+0x52>
10013e64:	290a      	cmp	r1, #10
10013e66:	d006      	beq.n	10013e76 <__fputwc+0x52>
10013e68:	6823      	ldr	r3, [r4, #0]
10013e6a:	1c5a      	adds	r2, r3, #1
10013e6c:	6022      	str	r2, [r4, #0]
10013e6e:	7019      	strb	r1, [r3, #0]
10013e70:	4628      	mov	r0, r5
10013e72:	b002      	add	sp, #8
10013e74:	bd70      	pop	{r4, r5, r6, pc}
10013e76:	4622      	mov	r2, r4
10013e78:	4630      	mov	r0, r6
10013e7a:	f003 ff1f 	bl	10017cbc <__swbuf_r>
10013e7e:	3001      	adds	r0, #1
10013e80:	d1f6      	bne.n	10013e70 <__fputwc+0x4c>
10013e82:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10013e86:	b002      	add	sp, #8
10013e88:	bd70      	pop	{r4, r5, r6, pc}
10013e8a:	f88d 5004 	strb.w	r5, [sp, #4]
10013e8e:	e7df      	b.n	10013e50 <__fputwc+0x2c>
10013e90:	89a3      	ldrh	r3, [r4, #12]
10013e92:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013e96:	81a3      	strh	r3, [r4, #12]
10013e98:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10013e9c:	e7f3      	b.n	10013e86 <__fputwc+0x62>
10013e9e:	bf00      	nop

10013ea0 <_fputwc_r>:
10013ea0:	b530      	push	{r4, r5, lr}
10013ea2:	4614      	mov	r4, r2
10013ea4:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10013ea6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013eaa:	4605      	mov	r5, r0
10013eac:	07d0      	lsls	r0, r2, #31
10013eae:	b083      	sub	sp, #12
10013eb0:	d401      	bmi.n	10013eb6 <_fputwc_r+0x16>
10013eb2:	059a      	lsls	r2, r3, #22
10013eb4:	d51c      	bpl.n	10013ef0 <_fputwc_r+0x50>
10013eb6:	0498      	lsls	r0, r3, #18
10013eb8:	d406      	bmi.n	10013ec8 <_fputwc_r+0x28>
10013eba:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10013ebc:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10013ec0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10013ec4:	81a3      	strh	r3, [r4, #12]
10013ec6:	6662      	str	r2, [r4, #100]	@ 0x64
10013ec8:	4622      	mov	r2, r4
10013eca:	4628      	mov	r0, r5
10013ecc:	f7ff ffaa 	bl	10013e24 <__fputwc>
10013ed0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10013ed2:	07da      	lsls	r2, r3, #31
10013ed4:	4605      	mov	r5, r0
10013ed6:	d402      	bmi.n	10013ede <_fputwc_r+0x3e>
10013ed8:	89a3      	ldrh	r3, [r4, #12]
10013eda:	059b      	lsls	r3, r3, #22
10013edc:	d502      	bpl.n	10013ee4 <_fputwc_r+0x44>
10013ede:	4628      	mov	r0, r5
10013ee0:	b003      	add	sp, #12
10013ee2:	bd30      	pop	{r4, r5, pc}
10013ee4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013ee6:	f000 f985 	bl	100141f4 <__retarget_lock_release_recursive>
10013eea:	4628      	mov	r0, r5
10013eec:	b003      	add	sp, #12
10013eee:	bd30      	pop	{r4, r5, pc}
10013ef0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013ef2:	9101      	str	r1, [sp, #4]
10013ef4:	f000 f97c 	bl	100141f0 <__retarget_lock_acquire_recursive>
10013ef8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013efc:	9901      	ldr	r1, [sp, #4]
10013efe:	e7da      	b.n	10013eb6 <_fputwc_r+0x16>

10013f00 <memmove>:
10013f00:	4288      	cmp	r0, r1
10013f02:	d90e      	bls.n	10013f22 <memmove+0x22>
10013f04:	188b      	adds	r3, r1, r2
10013f06:	4283      	cmp	r3, r0
10013f08:	d90b      	bls.n	10013f22 <memmove+0x22>
10013f0a:	eb00 0c02 	add.w	ip, r0, r2
10013f0e:	2a00      	cmp	r2, #0
10013f10:	d06e      	beq.n	10013ff0 <memmove+0xf0>
10013f12:	4662      	mov	r2, ip
10013f14:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
10013f18:	f802 cd01 	strb.w	ip, [r2, #-1]!
10013f1c:	4299      	cmp	r1, r3
10013f1e:	d1f9      	bne.n	10013f14 <memmove+0x14>
10013f20:	4770      	bx	lr
10013f22:	2a0f      	cmp	r2, #15
10013f24:	d80f      	bhi.n	10013f46 <memmove+0x46>
10013f26:	4603      	mov	r3, r0
10013f28:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10013f2c:	2a00      	cmp	r2, #0
10013f2e:	d05f      	beq.n	10013ff0 <memmove+0xf0>
10013f30:	f10c 0c01 	add.w	ip, ip, #1
10013f34:	3b01      	subs	r3, #1
10013f36:	448c      	add	ip, r1
10013f38:	f811 2b01 	ldrb.w	r2, [r1], #1
10013f3c:	f803 2f01 	strb.w	r2, [r3, #1]!
10013f40:	4561      	cmp	r1, ip
10013f42:	d1f9      	bne.n	10013f38 <memmove+0x38>
10013f44:	4770      	bx	lr
10013f46:	ea40 0301 	orr.w	r3, r0, r1
10013f4a:	079b      	lsls	r3, r3, #30
10013f4c:	d151      	bne.n	10013ff2 <memmove+0xf2>
10013f4e:	f1a2 0310 	sub.w	r3, r2, #16
10013f52:	b570      	push	{r4, r5, r6, lr}
10013f54:	f101 0c20 	add.w	ip, r1, #32
10013f58:	f023 050f 	bic.w	r5, r3, #15
10013f5c:	f101 0e10 	add.w	lr, r1, #16
10013f60:	f100 0410 	add.w	r4, r0, #16
10013f64:	44ac      	add	ip, r5
10013f66:	091b      	lsrs	r3, r3, #4
10013f68:	f85e 5c10 	ldr.w	r5, [lr, #-16]
10013f6c:	f844 5c10 	str.w	r5, [r4, #-16]
10013f70:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
10013f74:	f844 5c0c 	str.w	r5, [r4, #-12]
10013f78:	f85e 5c08 	ldr.w	r5, [lr, #-8]
10013f7c:	f844 5c08 	str.w	r5, [r4, #-8]
10013f80:	f85e 5c04 	ldr.w	r5, [lr, #-4]
10013f84:	f844 5c04 	str.w	r5, [r4, #-4]
10013f88:	f10e 0e10 	add.w	lr, lr, #16
10013f8c:	45e6      	cmp	lr, ip
10013f8e:	f104 0410 	add.w	r4, r4, #16
10013f92:	d1e9      	bne.n	10013f68 <memmove+0x68>
10013f94:	3301      	adds	r3, #1
10013f96:	f012 0f0c 	tst.w	r2, #12
10013f9a:	eb01 1103 	add.w	r1, r1, r3, lsl #4
10013f9e:	f002 040f 	and.w	r4, r2, #15
10013fa2:	eb00 1303 	add.w	r3, r0, r3, lsl #4
10013fa6:	d028      	beq.n	10013ffa <memmove+0xfa>
10013fa8:	3c04      	subs	r4, #4
10013faa:	f024 0603 	bic.w	r6, r4, #3
10013fae:	ea4f 0c94 	mov.w	ip, r4, lsr #2
10013fb2:	441e      	add	r6, r3
10013fb4:	1f1c      	subs	r4, r3, #4
10013fb6:	468e      	mov	lr, r1
10013fb8:	f85e 5b04 	ldr.w	r5, [lr], #4
10013fbc:	f844 5f04 	str.w	r5, [r4, #4]!
10013fc0:	42b4      	cmp	r4, r6
10013fc2:	d1f9      	bne.n	10013fb8 <memmove+0xb8>
10013fc4:	f10c 0401 	add.w	r4, ip, #1
10013fc8:	f002 0203 	and.w	r2, r2, #3
10013fcc:	eb03 0384 	add.w	r3, r3, r4, lsl #2
10013fd0:	eb01 0184 	add.w	r1, r1, r4, lsl #2
10013fd4:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10013fd8:	b14a      	cbz	r2, 10013fee <memmove+0xee>
10013fda:	f10c 0c01 	add.w	ip, ip, #1
10013fde:	3b01      	subs	r3, #1
10013fe0:	448c      	add	ip, r1
10013fe2:	f811 2b01 	ldrb.w	r2, [r1], #1
10013fe6:	f803 2f01 	strb.w	r2, [r3, #1]!
10013fea:	4561      	cmp	r1, ip
10013fec:	d1f9      	bne.n	10013fe2 <memmove+0xe2>
10013fee:	bd70      	pop	{r4, r5, r6, pc}
10013ff0:	4770      	bx	lr
10013ff2:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10013ff6:	4603      	mov	r3, r0
10013ff8:	e79a      	b.n	10013f30 <memmove+0x30>
10013ffa:	4622      	mov	r2, r4
10013ffc:	e7ea      	b.n	10013fd4 <memmove+0xd4>
10013ffe:	bf00      	nop

10014000 <memset>:
10014000:	0783      	lsls	r3, r0, #30
10014002:	b530      	push	{r4, r5, lr}
10014004:	d047      	beq.n	10014096 <memset+0x96>
10014006:	1e54      	subs	r4, r2, #1
10014008:	2a00      	cmp	r2, #0
1001400a:	d03e      	beq.n	1001408a <memset+0x8a>
1001400c:	b2ca      	uxtb	r2, r1
1001400e:	4603      	mov	r3, r0
10014010:	e001      	b.n	10014016 <memset+0x16>
10014012:	3c01      	subs	r4, #1
10014014:	d339      	bcc.n	1001408a <memset+0x8a>
10014016:	f803 2b01 	strb.w	r2, [r3], #1
1001401a:	079d      	lsls	r5, r3, #30
1001401c:	d1f9      	bne.n	10014012 <memset+0x12>
1001401e:	2c03      	cmp	r4, #3
10014020:	d92c      	bls.n	1001407c <memset+0x7c>
10014022:	b2cd      	uxtb	r5, r1
10014024:	eb05 2505 	add.w	r5, r5, r5, lsl #8
10014028:	2c0f      	cmp	r4, #15
1001402a:	eb05 4505 	add.w	r5, r5, r5, lsl #16
1001402e:	d935      	bls.n	1001409c <memset+0x9c>
10014030:	f1a4 0210 	sub.w	r2, r4, #16
10014034:	f022 0c0f 	bic.w	ip, r2, #15
10014038:	f103 0e10 	add.w	lr, r3, #16
1001403c:	44e6      	add	lr, ip
1001403e:	ea4f 1c12 	mov.w	ip, r2, lsr #4
10014042:	461a      	mov	r2, r3
10014044:	6015      	str	r5, [r2, #0]
10014046:	6055      	str	r5, [r2, #4]
10014048:	6095      	str	r5, [r2, #8]
1001404a:	60d5      	str	r5, [r2, #12]
1001404c:	3210      	adds	r2, #16
1001404e:	4572      	cmp	r2, lr
10014050:	d1f8      	bne.n	10014044 <memset+0x44>
10014052:	f10c 0201 	add.w	r2, ip, #1
10014056:	f014 0f0c 	tst.w	r4, #12
1001405a:	eb03 1202 	add.w	r2, r3, r2, lsl #4
1001405e:	f004 0c0f 	and.w	ip, r4, #15
10014062:	d013      	beq.n	1001408c <memset+0x8c>
10014064:	f1ac 0304 	sub.w	r3, ip, #4
10014068:	f023 0303 	bic.w	r3, r3, #3
1001406c:	3304      	adds	r3, #4
1001406e:	4413      	add	r3, r2
10014070:	f842 5b04 	str.w	r5, [r2], #4
10014074:	429a      	cmp	r2, r3
10014076:	d1fb      	bne.n	10014070 <memset+0x70>
10014078:	f00c 0403 	and.w	r4, ip, #3
1001407c:	b12c      	cbz	r4, 1001408a <memset+0x8a>
1001407e:	b2c9      	uxtb	r1, r1
10014080:	441c      	add	r4, r3
10014082:	f803 1b01 	strb.w	r1, [r3], #1
10014086:	429c      	cmp	r4, r3
10014088:	d1fb      	bne.n	10014082 <memset+0x82>
1001408a:	bd30      	pop	{r4, r5, pc}
1001408c:	4664      	mov	r4, ip
1001408e:	4613      	mov	r3, r2
10014090:	2c00      	cmp	r4, #0
10014092:	d1f4      	bne.n	1001407e <memset+0x7e>
10014094:	e7f9      	b.n	1001408a <memset+0x8a>
10014096:	4603      	mov	r3, r0
10014098:	4614      	mov	r4, r2
1001409a:	e7c0      	b.n	1001401e <memset+0x1e>
1001409c:	461a      	mov	r2, r3
1001409e:	46a4      	mov	ip, r4
100140a0:	e7e0      	b.n	10014064 <memset+0x64>
100140a2:	bf00      	nop

100140a4 <strncpy>:
100140a4:	ea40 0301 	orr.w	r3, r0, r1
100140a8:	079b      	lsls	r3, r3, #30
100140aa:	b510      	push	{r4, lr}
100140ac:	d101      	bne.n	100140b2 <strncpy+0xe>
100140ae:	2a03      	cmp	r2, #3
100140b0:	d817      	bhi.n	100140e2 <strncpy+0x3e>
100140b2:	4684      	mov	ip, r0
100140b4:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
100140b8:	e007      	b.n	100140ca <strncpy+0x26>
100140ba:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
100140be:	f803 1b01 	strb.w	r1, [r3], #1
100140c2:	1e54      	subs	r4, r2, #1
100140c4:	b129      	cbz	r1, 100140d2 <strncpy+0x2e>
100140c6:	469c      	mov	ip, r3
100140c8:	4622      	mov	r2, r4
100140ca:	4663      	mov	r3, ip
100140cc:	2a00      	cmp	r2, #0
100140ce:	d1f4      	bne.n	100140ba <strncpy+0x16>
100140d0:	bd10      	pop	{r4, pc}
100140d2:	4494      	add	ip, r2
100140d4:	2c00      	cmp	r4, #0
100140d6:	d0fb      	beq.n	100140d0 <strncpy+0x2c>
100140d8:	f803 1b01 	strb.w	r1, [r3], #1
100140dc:	4563      	cmp	r3, ip
100140de:	d1fb      	bne.n	100140d8 <strncpy+0x34>
100140e0:	bd10      	pop	{r4, pc}
100140e2:	468e      	mov	lr, r1
100140e4:	4684      	mov	ip, r0
100140e6:	f8de 4000 	ldr.w	r4, [lr]
100140ea:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
100140ee:	ea23 0304 	bic.w	r3, r3, r4
100140f2:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
100140f6:	4671      	mov	r1, lr
100140f8:	f10e 0e04 	add.w	lr, lr, #4
100140fc:	d1da      	bne.n	100140b4 <strncpy+0x10>
100140fe:	3a04      	subs	r2, #4
10014100:	2a03      	cmp	r2, #3
10014102:	f84c 4b04 	str.w	r4, [ip], #4
10014106:	d8ee      	bhi.n	100140e6 <strncpy+0x42>
10014108:	4671      	mov	r1, lr
1001410a:	e7d3      	b.n	100140b4 <strncpy+0x10>

1001410c <__locale_mb_cur_max>:
1001410c:	4b01      	ldr	r3, [pc, #4]	@ (10014114 <__locale_mb_cur_max+0x8>)
1001410e:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
10014112:	4770      	bx	lr
10014114:	20000454 	.word	0x20000454

10014118 <_localeconv_r>:
10014118:	4800      	ldr	r0, [pc, #0]	@ (1001411c <_localeconv_r+0x4>)
1001411a:	4770      	bx	lr
1001411c:	20000544 	.word	0x20000544

10014120 <_fstat_r>:
10014120:	b570      	push	{r4, r5, r6, lr}
10014122:	460c      	mov	r4, r1
10014124:	4d08      	ldr	r5, [pc, #32]	@ (10014148 <_fstat_r+0x28>)
10014126:	4603      	mov	r3, r0
10014128:	2600      	movs	r6, #0
1001412a:	4620      	mov	r0, r4
1001412c:	4611      	mov	r1, r2
1001412e:	461c      	mov	r4, r3
10014130:	602e      	str	r6, [r5, #0]
10014132:	f7fa fb41 	bl	1000e7b8 <_fstat>
10014136:	1c43      	adds	r3, r0, #1
10014138:	d000      	beq.n	1001413c <_fstat_r+0x1c>
1001413a:	bd70      	pop	{r4, r5, r6, pc}
1001413c:	682b      	ldr	r3, [r5, #0]
1001413e:	2b00      	cmp	r3, #0
10014140:	d0fb      	beq.n	1001413a <_fstat_r+0x1a>
10014142:	6023      	str	r3, [r4, #0]
10014144:	bd70      	pop	{r4, r5, r6, pc}
10014146:	bf00      	nop
10014148:	200011ac 	.word	0x200011ac

1001414c <_sbrk_r>:
1001414c:	b538      	push	{r3, r4, r5, lr}
1001414e:	4d07      	ldr	r5, [pc, #28]	@ (1001416c <_sbrk_r+0x20>)
10014150:	2200      	movs	r2, #0
10014152:	4604      	mov	r4, r0
10014154:	4608      	mov	r0, r1
10014156:	602a      	str	r2, [r5, #0]
10014158:	f7fa fcaa 	bl	1000eab0 <_sbrk>
1001415c:	1c43      	adds	r3, r0, #1
1001415e:	d000      	beq.n	10014162 <_sbrk_r+0x16>
10014160:	bd38      	pop	{r3, r4, r5, pc}
10014162:	682b      	ldr	r3, [r5, #0]
10014164:	2b00      	cmp	r3, #0
10014166:	d0fb      	beq.n	10014160 <_sbrk_r+0x14>
10014168:	6023      	str	r3, [r4, #0]
1001416a:	bd38      	pop	{r3, r4, r5, pc}
1001416c:	200011ac 	.word	0x200011ac

10014170 <__errno>:
10014170:	4b01      	ldr	r3, [pc, #4]	@ (10014178 <__errno+0x8>)
10014172:	6818      	ldr	r0, [r3, #0]
10014174:	4770      	bx	lr
10014176:	bf00      	nop
10014178:	200005c0 	.word	0x200005c0

1001417c <sysconf>:
1001417c:	2808      	cmp	r0, #8
1001417e:	d102      	bne.n	10014186 <sysconf+0xa>
10014180:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
10014184:	4770      	bx	lr
10014186:	b508      	push	{r3, lr}
10014188:	f7ff fff2 	bl	10014170 <__errno>
1001418c:	2316      	movs	r3, #22
1001418e:	6003      	str	r3, [r0, #0]
10014190:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10014194:	bd08      	pop	{r3, pc}
10014196:	bf00      	nop

10014198 <__libc_init_array>:
10014198:	b570      	push	{r4, r5, r6, lr}
1001419a:	4b0f      	ldr	r3, [pc, #60]	@ (100141d8 <__libc_init_array+0x40>)
1001419c:	4d0f      	ldr	r5, [pc, #60]	@ (100141dc <__libc_init_array+0x44>)
1001419e:	42ab      	cmp	r3, r5
100141a0:	eba3 0605 	sub.w	r6, r3, r5
100141a4:	d007      	beq.n	100141b6 <__libc_init_array+0x1e>
100141a6:	10b6      	asrs	r6, r6, #2
100141a8:	2400      	movs	r4, #0
100141aa:	f855 3b04 	ldr.w	r3, [r5], #4
100141ae:	3401      	adds	r4, #1
100141b0:	4798      	blx	r3
100141b2:	42a6      	cmp	r6, r4
100141b4:	d8f9      	bhi.n	100141aa <__libc_init_array+0x12>
100141b6:	f005 f9e3 	bl	10019580 <_init>
100141ba:	4d09      	ldr	r5, [pc, #36]	@ (100141e0 <__libc_init_array+0x48>)
100141bc:	4b09      	ldr	r3, [pc, #36]	@ (100141e4 <__libc_init_array+0x4c>)
100141be:	1b5e      	subs	r6, r3, r5
100141c0:	42ab      	cmp	r3, r5
100141c2:	ea4f 06a6 	mov.w	r6, r6, asr #2
100141c6:	d006      	beq.n	100141d6 <__libc_init_array+0x3e>
100141c8:	2400      	movs	r4, #0
100141ca:	f855 3b04 	ldr.w	r3, [r5], #4
100141ce:	3401      	adds	r4, #1
100141d0:	4798      	blx	r3
100141d2:	42a6      	cmp	r6, r4
100141d4:	d8f9      	bhi.n	100141ca <__libc_init_array+0x32>
100141d6:	bd70      	pop	{r4, r5, r6, pc}
100141d8:	200006ec 	.word	0x200006ec
100141dc:	200006ec 	.word	0x200006ec
100141e0:	200006ec 	.word	0x200006ec
100141e4:	200006f4 	.word	0x200006f4

100141e8 <__retarget_lock_init_recursive>:
100141e8:	4770      	bx	lr
100141ea:	bf00      	nop

100141ec <__retarget_lock_close_recursive>:
100141ec:	4770      	bx	lr
100141ee:	bf00      	nop

100141f0 <__retarget_lock_acquire_recursive>:
100141f0:	4770      	bx	lr
100141f2:	bf00      	nop

100141f4 <__retarget_lock_release_recursive>:
100141f4:	4770      	bx	lr
100141f6:	bf00      	nop
	...

10014200 <memchr>:
10014200:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10014204:	2a10      	cmp	r2, #16
10014206:	db2b      	blt.n	10014260 <memchr+0x60>
10014208:	f010 0f07 	tst.w	r0, #7
1001420c:	d008      	beq.n	10014220 <memchr+0x20>
1001420e:	f810 3b01 	ldrb.w	r3, [r0], #1
10014212:	3a01      	subs	r2, #1
10014214:	428b      	cmp	r3, r1
10014216:	d02d      	beq.n	10014274 <memchr+0x74>
10014218:	f010 0f07 	tst.w	r0, #7
1001421c:	b342      	cbz	r2, 10014270 <memchr+0x70>
1001421e:	d1f6      	bne.n	1001420e <memchr+0xe>
10014220:	b4f0      	push	{r4, r5, r6, r7}
10014222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
10014226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1001422a:	f022 0407 	bic.w	r4, r2, #7
1001422e:	f07f 0700 	mvns.w	r7, #0
10014232:	2300      	movs	r3, #0
10014234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
10014238:	3c08      	subs	r4, #8
1001423a:	ea85 0501 	eor.w	r5, r5, r1
1001423e:	ea86 0601 	eor.w	r6, r6, r1
10014242:	fa85 f547 	uadd8	r5, r5, r7
10014246:	faa3 f587 	sel	r5, r3, r7
1001424a:	fa86 f647 	uadd8	r6, r6, r7
1001424e:	faa5 f687 	sel	r6, r5, r7
10014252:	b98e      	cbnz	r6, 10014278 <memchr+0x78>
10014254:	d1ee      	bne.n	10014234 <memchr+0x34>
10014256:	bcf0      	pop	{r4, r5, r6, r7}
10014258:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001425c:	f002 0207 	and.w	r2, r2, #7
10014260:	b132      	cbz	r2, 10014270 <memchr+0x70>
10014262:	f810 3b01 	ldrb.w	r3, [r0], #1
10014266:	3a01      	subs	r2, #1
10014268:	ea83 0301 	eor.w	r3, r3, r1
1001426c:	b113      	cbz	r3, 10014274 <memchr+0x74>
1001426e:	d1f8      	bne.n	10014262 <memchr+0x62>
10014270:	2000      	movs	r0, #0
10014272:	4770      	bx	lr
10014274:	3801      	subs	r0, #1
10014276:	4770      	bx	lr
10014278:	2d00      	cmp	r5, #0
1001427a:	bf06      	itte	eq
1001427c:	4635      	moveq	r5, r6
1001427e:	3803      	subeq	r0, #3
10014280:	3807      	subne	r0, #7
10014282:	f015 0f01 	tst.w	r5, #1
10014286:	d107      	bne.n	10014298 <memchr+0x98>
10014288:	3001      	adds	r0, #1
1001428a:	f415 7f80 	tst.w	r5, #256	@ 0x100
1001428e:	bf02      	ittt	eq
10014290:	3001      	addeq	r0, #1
10014292:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
10014296:	3001      	addeq	r0, #1
10014298:	bcf0      	pop	{r4, r5, r6, r7}
1001429a:	3801      	subs	r0, #1
1001429c:	4770      	bx	lr
1001429e:	bf00      	nop

100142a0 <memcpy>:
100142a0:	4684      	mov	ip, r0
100142a2:	ea41 0300 	orr.w	r3, r1, r0
100142a6:	f013 0303 	ands.w	r3, r3, #3
100142aa:	d16d      	bne.n	10014388 <memcpy+0xe8>
100142ac:	3a40      	subs	r2, #64	@ 0x40
100142ae:	d341      	bcc.n	10014334 <memcpy+0x94>
100142b0:	f851 3b04 	ldr.w	r3, [r1], #4
100142b4:	f840 3b04 	str.w	r3, [r0], #4
100142b8:	f851 3b04 	ldr.w	r3, [r1], #4
100142bc:	f840 3b04 	str.w	r3, [r0], #4
100142c0:	f851 3b04 	ldr.w	r3, [r1], #4
100142c4:	f840 3b04 	str.w	r3, [r0], #4
100142c8:	f851 3b04 	ldr.w	r3, [r1], #4
100142cc:	f840 3b04 	str.w	r3, [r0], #4
100142d0:	f851 3b04 	ldr.w	r3, [r1], #4
100142d4:	f840 3b04 	str.w	r3, [r0], #4
100142d8:	f851 3b04 	ldr.w	r3, [r1], #4
100142dc:	f840 3b04 	str.w	r3, [r0], #4
100142e0:	f851 3b04 	ldr.w	r3, [r1], #4
100142e4:	f840 3b04 	str.w	r3, [r0], #4
100142e8:	f851 3b04 	ldr.w	r3, [r1], #4
100142ec:	f840 3b04 	str.w	r3, [r0], #4
100142f0:	f851 3b04 	ldr.w	r3, [r1], #4
100142f4:	f840 3b04 	str.w	r3, [r0], #4
100142f8:	f851 3b04 	ldr.w	r3, [r1], #4
100142fc:	f840 3b04 	str.w	r3, [r0], #4
10014300:	f851 3b04 	ldr.w	r3, [r1], #4
10014304:	f840 3b04 	str.w	r3, [r0], #4
10014308:	f851 3b04 	ldr.w	r3, [r1], #4
1001430c:	f840 3b04 	str.w	r3, [r0], #4
10014310:	f851 3b04 	ldr.w	r3, [r1], #4
10014314:	f840 3b04 	str.w	r3, [r0], #4
10014318:	f851 3b04 	ldr.w	r3, [r1], #4
1001431c:	f840 3b04 	str.w	r3, [r0], #4
10014320:	f851 3b04 	ldr.w	r3, [r1], #4
10014324:	f840 3b04 	str.w	r3, [r0], #4
10014328:	f851 3b04 	ldr.w	r3, [r1], #4
1001432c:	f840 3b04 	str.w	r3, [r0], #4
10014330:	3a40      	subs	r2, #64	@ 0x40
10014332:	d2bd      	bcs.n	100142b0 <memcpy+0x10>
10014334:	3230      	adds	r2, #48	@ 0x30
10014336:	d311      	bcc.n	1001435c <memcpy+0xbc>
10014338:	f851 3b04 	ldr.w	r3, [r1], #4
1001433c:	f840 3b04 	str.w	r3, [r0], #4
10014340:	f851 3b04 	ldr.w	r3, [r1], #4
10014344:	f840 3b04 	str.w	r3, [r0], #4
10014348:	f851 3b04 	ldr.w	r3, [r1], #4
1001434c:	f840 3b04 	str.w	r3, [r0], #4
10014350:	f851 3b04 	ldr.w	r3, [r1], #4
10014354:	f840 3b04 	str.w	r3, [r0], #4
10014358:	3a10      	subs	r2, #16
1001435a:	d2ed      	bcs.n	10014338 <memcpy+0x98>
1001435c:	320c      	adds	r2, #12
1001435e:	d305      	bcc.n	1001436c <memcpy+0xcc>
10014360:	f851 3b04 	ldr.w	r3, [r1], #4
10014364:	f840 3b04 	str.w	r3, [r0], #4
10014368:	3a04      	subs	r2, #4
1001436a:	d2f9      	bcs.n	10014360 <memcpy+0xc0>
1001436c:	3204      	adds	r2, #4
1001436e:	d008      	beq.n	10014382 <memcpy+0xe2>
10014370:	07d2      	lsls	r2, r2, #31
10014372:	bf1c      	itt	ne
10014374:	f811 3b01 	ldrbne.w	r3, [r1], #1
10014378:	f800 3b01 	strbne.w	r3, [r0], #1
1001437c:	d301      	bcc.n	10014382 <memcpy+0xe2>
1001437e:	880b      	ldrh	r3, [r1, #0]
10014380:	8003      	strh	r3, [r0, #0]
10014382:	4660      	mov	r0, ip
10014384:	4770      	bx	lr
10014386:	bf00      	nop
10014388:	2a08      	cmp	r2, #8
1001438a:	d313      	bcc.n	100143b4 <memcpy+0x114>
1001438c:	078b      	lsls	r3, r1, #30
1001438e:	d08d      	beq.n	100142ac <memcpy+0xc>
10014390:	f010 0303 	ands.w	r3, r0, #3
10014394:	d08a      	beq.n	100142ac <memcpy+0xc>
10014396:	f1c3 0304 	rsb	r3, r3, #4
1001439a:	1ad2      	subs	r2, r2, r3
1001439c:	07db      	lsls	r3, r3, #31
1001439e:	bf1c      	itt	ne
100143a0:	f811 3b01 	ldrbne.w	r3, [r1], #1
100143a4:	f800 3b01 	strbne.w	r3, [r0], #1
100143a8:	d380      	bcc.n	100142ac <memcpy+0xc>
100143aa:	f831 3b02 	ldrh.w	r3, [r1], #2
100143ae:	f820 3b02 	strh.w	r3, [r0], #2
100143b2:	e77b      	b.n	100142ac <memcpy+0xc>
100143b4:	3a04      	subs	r2, #4
100143b6:	d3d9      	bcc.n	1001436c <memcpy+0xcc>
100143b8:	3a01      	subs	r2, #1
100143ba:	f811 3b01 	ldrb.w	r3, [r1], #1
100143be:	f800 3b01 	strb.w	r3, [r0], #1
100143c2:	d2f9      	bcs.n	100143b8 <memcpy+0x118>
100143c4:	780b      	ldrb	r3, [r1, #0]
100143c6:	7003      	strb	r3, [r0, #0]
100143c8:	784b      	ldrb	r3, [r1, #1]
100143ca:	7043      	strb	r3, [r0, #1]
100143cc:	788b      	ldrb	r3, [r1, #2]
100143ce:	7083      	strb	r3, [r0, #2]
100143d0:	4660      	mov	r0, ip
100143d2:	4770      	bx	lr
	...

10014400 <strlen>:
10014400:	b430      	push	{r4, r5}
10014402:	f890 f000 	pld	[r0]
10014406:	f020 0107 	bic.w	r1, r0, #7
1001440a:	f06f 0c00 	mvn.w	ip, #0
1001440e:	f010 0407 	ands.w	r4, r0, #7
10014412:	f891 f020 	pld	[r1, #32]
10014416:	f040 8048 	bne.w	100144aa <strlen+0xaa>
1001441a:	f04f 0400 	mov.w	r4, #0
1001441e:	f06f 0007 	mvn.w	r0, #7
10014422:	e9d1 2300 	ldrd	r2, r3, [r1]
10014426:	f891 f040 	pld	[r1, #64]	@ 0x40
1001442a:	f100 0008 	add.w	r0, r0, #8
1001442e:	fa82 f24c 	uadd8	r2, r2, ip
10014432:	faa4 f28c 	sel	r2, r4, ip
10014436:	fa83 f34c 	uadd8	r3, r3, ip
1001443a:	faa2 f38c 	sel	r3, r2, ip
1001443e:	bb4b      	cbnz	r3, 10014494 <strlen+0x94>
10014440:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
10014444:	fa82 f24c 	uadd8	r2, r2, ip
10014448:	f100 0008 	add.w	r0, r0, #8
1001444c:	faa4 f28c 	sel	r2, r4, ip
10014450:	fa83 f34c 	uadd8	r3, r3, ip
10014454:	faa2 f38c 	sel	r3, r2, ip
10014458:	b9e3      	cbnz	r3, 10014494 <strlen+0x94>
1001445a:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
1001445e:	fa82 f24c 	uadd8	r2, r2, ip
10014462:	f100 0008 	add.w	r0, r0, #8
10014466:	faa4 f28c 	sel	r2, r4, ip
1001446a:	fa83 f34c 	uadd8	r3, r3, ip
1001446e:	faa2 f38c 	sel	r3, r2, ip
10014472:	b97b      	cbnz	r3, 10014494 <strlen+0x94>
10014474:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
10014478:	f101 0120 	add.w	r1, r1, #32
1001447c:	fa82 f24c 	uadd8	r2, r2, ip
10014480:	f100 0008 	add.w	r0, r0, #8
10014484:	faa4 f28c 	sel	r2, r4, ip
10014488:	fa83 f34c 	uadd8	r3, r3, ip
1001448c:	faa2 f38c 	sel	r3, r2, ip
10014490:	2b00      	cmp	r3, #0
10014492:	d0c6      	beq.n	10014422 <strlen+0x22>
10014494:	2a00      	cmp	r2, #0
10014496:	bf04      	itt	eq
10014498:	3004      	addeq	r0, #4
1001449a:	461a      	moveq	r2, r3
1001449c:	ba12      	rev	r2, r2
1001449e:	fab2 f282 	clz	r2, r2
100144a2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
100144a6:	bc30      	pop	{r4, r5}
100144a8:	4770      	bx	lr
100144aa:	e9d1 2300 	ldrd	r2, r3, [r1]
100144ae:	f004 0503 	and.w	r5, r4, #3
100144b2:	f1c4 0000 	rsb	r0, r4, #0
100144b6:	ea4f 05c5 	mov.w	r5, r5, lsl #3
100144ba:	f014 0f04 	tst.w	r4, #4
100144be:	f891 f040 	pld	[r1, #64]	@ 0x40
100144c2:	fa0c f505 	lsl.w	r5, ip, r5
100144c6:	ea62 0205 	orn	r2, r2, r5
100144ca:	bf1c      	itt	ne
100144cc:	ea63 0305 	ornne	r3, r3, r5
100144d0:	4662      	movne	r2, ip
100144d2:	f04f 0400 	mov.w	r4, #0
100144d6:	e7aa      	b.n	1001442e <strlen+0x2e>

100144d8 <_wcrtomb_r>:
100144d8:	b570      	push	{r4, r5, r6, lr}
100144da:	4605      	mov	r5, r0
100144dc:	b084      	sub	sp, #16
100144de:	b15b      	cbz	r3, 100144f8 <_wcrtomb_r+0x20>
100144e0:	461c      	mov	r4, r3
100144e2:	4b0f      	ldr	r3, [pc, #60]	@ (10014520 <_wcrtomb_r+0x48>)
100144e4:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
100144e8:	4623      	mov	r3, r4
100144ea:	b169      	cbz	r1, 10014508 <_wcrtomb_r+0x30>
100144ec:	4628      	mov	r0, r5
100144ee:	47b0      	blx	r6
100144f0:	1c43      	adds	r3, r0, #1
100144f2:	d00f      	beq.n	10014514 <_wcrtomb_r+0x3c>
100144f4:	b004      	add	sp, #16
100144f6:	bd70      	pop	{r4, r5, r6, pc}
100144f8:	4b09      	ldr	r3, [pc, #36]	@ (10014520 <_wcrtomb_r+0x48>)
100144fa:	f500 7482 	add.w	r4, r0, #260	@ 0x104
100144fe:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10014502:	4623      	mov	r3, r4
10014504:	2900      	cmp	r1, #0
10014506:	d1f1      	bne.n	100144ec <_wcrtomb_r+0x14>
10014508:	460a      	mov	r2, r1
1001450a:	4628      	mov	r0, r5
1001450c:	a901      	add	r1, sp, #4
1001450e:	47b0      	blx	r6
10014510:	1c43      	adds	r3, r0, #1
10014512:	d1ef      	bne.n	100144f4 <_wcrtomb_r+0x1c>
10014514:	2200      	movs	r2, #0
10014516:	238a      	movs	r3, #138	@ 0x8a
10014518:	6022      	str	r2, [r4, #0]
1001451a:	602b      	str	r3, [r5, #0]
1001451c:	b004      	add	sp, #16
1001451e:	bd70      	pop	{r4, r5, r6, pc}
10014520:	20000454 	.word	0x20000454

10014524 <_wcsrtombs_r>:
10014524:	b510      	push	{r4, lr}
10014526:	b082      	sub	sp, #8
10014528:	9c04      	ldr	r4, [sp, #16]
1001452a:	e9cd 3400 	strd	r3, r4, [sp]
1001452e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10014532:	f003 fd11 	bl	10017f58 <_wcsnrtombs_r>
10014536:	b002      	add	sp, #8
10014538:	bd10      	pop	{r4, pc}
1001453a:	bf00      	nop

1001453c <frexp>:
1001453c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 100145a4 <frexp+0x68>
10014540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10014542:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
10014546:	2700      	movs	r7, #0
10014548:	4563      	cmp	r3, ip
1001454a:	4604      	mov	r4, r0
1001454c:	460d      	mov	r5, r1
1001454e:	4616      	mov	r6, r2
10014550:	6017      	str	r7, [r2, #0]
10014552:	d822      	bhi.n	1001459a <frexp+0x5e>
10014554:	4684      	mov	ip, r0
10014556:	ea53 0c0c 	orrs.w	ip, r3, ip
1001455a:	d01e      	beq.n	1001459a <frexp+0x5e>
1001455c:	f8df c048 	ldr.w	ip, [pc, #72]	@ 100145a8 <frexp+0x6c>
10014560:	ea01 0c0c 	and.w	ip, r1, ip
10014564:	460a      	mov	r2, r1
10014566:	f1bc 0f00 	cmp.w	ip, #0
1001456a:	d109      	bne.n	10014580 <frexp+0x44>
1001456c:	4b0c      	ldr	r3, [pc, #48]	@ (100145a0 <frexp+0x64>)
1001456e:	2200      	movs	r2, #0
10014570:	f004 f84c 	bl	1001860c <__aeabi_dmul>
10014574:	f06f 0735 	mvn.w	r7, #53	@ 0x35
10014578:	4604      	mov	r4, r0
1001457a:	460a      	mov	r2, r1
1001457c:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
10014580:	f022 42ff 	bic.w	r2, r2, #2139095040	@ 0x7f800000
10014584:	151b      	asrs	r3, r3, #20
10014586:	f422 02e0 	bic.w	r2, r2, #7340032	@ 0x700000
1001458a:	f2a3 33fe 	subw	r3, r3, #1022	@ 0x3fe
1001458e:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
10014592:	443b      	add	r3, r7
10014594:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
10014598:	6033      	str	r3, [r6, #0]
1001459a:	4620      	mov	r0, r4
1001459c:	4629      	mov	r1, r5
1001459e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100145a0:	43500000 	.word	0x43500000
100145a4:	7fefffff 	.word	0x7fefffff
100145a8:	7ff00000 	.word	0x7ff00000

100145ac <register_fini>:
100145ac:	4b02      	ldr	r3, [pc, #8]	@ (100145b8 <register_fini+0xc>)
100145ae:	b113      	cbz	r3, 100145b6 <register_fini+0xa>
100145b0:	4802      	ldr	r0, [pc, #8]	@ (100145bc <register_fini+0x10>)
100145b2:	f000 b805 	b.w	100145c0 <atexit>
100145b6:	4770      	bx	lr
100145b8:	00000000 	.word	0x00000000
100145bc:	10017e35 	.word	0x10017e35

100145c0 <atexit>:
100145c0:	2300      	movs	r3, #0
100145c2:	4601      	mov	r1, r0
100145c4:	461a      	mov	r2, r3
100145c6:	4618      	mov	r0, r3
100145c8:	f003 bcd8 	b.w	10017f7c <__register_exitproc>

100145cc <quorem>:
100145cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100145d0:	6903      	ldr	r3, [r0, #16]
100145d2:	690c      	ldr	r4, [r1, #16]
100145d4:	42a3      	cmp	r3, r4
100145d6:	b083      	sub	sp, #12
100145d8:	f2c0 808a 	blt.w	100146f0 <quorem+0x124>
100145dc:	3c01      	subs	r4, #1
100145de:	f101 0514 	add.w	r5, r1, #20
100145e2:	f100 0814 	add.w	r8, r0, #20
100145e6:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
100145ea:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
100145ee:	3301      	adds	r3, #1
100145f0:	429a      	cmp	r2, r3
100145f2:	468e      	mov	lr, r1
100145f4:	4681      	mov	r9, r0
100145f6:	ea4f 0184 	mov.w	r1, r4, lsl #2
100145fa:	eb05 0784 	add.w	r7, r5, r4, lsl #2
100145fe:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
10014602:	fbb2 f6f3 	udiv	r6, r2, r3
10014606:	d33a      	bcc.n	1001467e <quorem+0xb2>
10014608:	e9cd 1500 	strd	r1, r5, [sp]
1001460c:	2200      	movs	r2, #0
1001460e:	46ac      	mov	ip, r5
10014610:	4640      	mov	r0, r8
10014612:	4613      	mov	r3, r2
10014614:	f85c 1b04 	ldr.w	r1, [ip], #4
10014618:	6805      	ldr	r5, [r0, #0]
1001461a:	fa1f fb81 	uxth.w	fp, r1
1001461e:	fb06 220b 	mla	r2, r6, fp, r2
10014622:	0c09      	lsrs	r1, r1, #16
10014624:	ea4f 4b12 	mov.w	fp, r2, lsr #16
10014628:	fb06 bb01 	mla	fp, r6, r1, fp
1001462c:	b292      	uxth	r2, r2
1001462e:	b2a9      	uxth	r1, r5
10014630:	1a89      	subs	r1, r1, r2
10014632:	4419      	add	r1, r3
10014634:	fa1f f38b 	uxth.w	r3, fp
10014638:	ebc3 4321 	rsb	r3, r3, r1, asr #16
1001463c:	eb03 4315 	add.w	r3, r3, r5, lsr #16
10014640:	b289      	uxth	r1, r1
10014642:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
10014646:	4567      	cmp	r7, ip
10014648:	f840 1b04 	str.w	r1, [r0], #4
1001464c:	ea4f 421b 	mov.w	r2, fp, lsr #16
10014650:	ea4f 4323 	mov.w	r3, r3, asr #16
10014654:	d2de      	bcs.n	10014614 <quorem+0x48>
10014656:	e9dd 1500 	ldrd	r1, r5, [sp]
1001465a:	f858 3001 	ldr.w	r3, [r8, r1]
1001465e:	b973      	cbnz	r3, 1001467e <quorem+0xb2>
10014660:	f1aa 0a04 	sub.w	sl, sl, #4
10014664:	45d0      	cmp	r8, sl
10014666:	d304      	bcc.n	10014672 <quorem+0xa6>
10014668:	e007      	b.n	1001467a <quorem+0xae>
1001466a:	45d0      	cmp	r8, sl
1001466c:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
10014670:	d203      	bcs.n	1001467a <quorem+0xae>
10014672:	f85a 3904 	ldr.w	r3, [sl], #-4
10014676:	2b00      	cmp	r3, #0
10014678:	d0f7      	beq.n	1001466a <quorem+0x9e>
1001467a:	f8c9 4010 	str.w	r4, [r9, #16]
1001467e:	4671      	mov	r1, lr
10014680:	4648      	mov	r0, r9
10014682:	f003 f993 	bl	100179ac <__mcmp>
10014686:	2800      	cmp	r0, #0
10014688:	db2e      	blt.n	100146e8 <quorem+0x11c>
1001468a:	4641      	mov	r1, r8
1001468c:	2200      	movs	r2, #0
1001468e:	f855 0b04 	ldr.w	r0, [r5], #4
10014692:	f8d1 c000 	ldr.w	ip, [r1]
10014696:	fa1f fe80 	uxth.w	lr, r0
1001469a:	fa1f f38c 	uxth.w	r3, ip
1001469e:	eba3 030e 	sub.w	r3, r3, lr
100146a2:	4413      	add	r3, r2
100146a4:	0c02      	lsrs	r2, r0, #16
100146a6:	ebc2 4223 	rsb	r2, r2, r3, asr #16
100146aa:	eb02 421c 	add.w	r2, r2, ip, lsr #16
100146ae:	b29b      	uxth	r3, r3
100146b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
100146b4:	42af      	cmp	r7, r5
100146b6:	f841 3b04 	str.w	r3, [r1], #4
100146ba:	ea4f 4222 	mov.w	r2, r2, asr #16
100146be:	d2e6      	bcs.n	1001468e <quorem+0xc2>
100146c0:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
100146c4:	eb08 0384 	add.w	r3, r8, r4, lsl #2
100146c8:	b96a      	cbnz	r2, 100146e6 <quorem+0x11a>
100146ca:	3b04      	subs	r3, #4
100146cc:	4598      	cmp	r8, r3
100146ce:	d304      	bcc.n	100146da <quorem+0x10e>
100146d0:	e007      	b.n	100146e2 <quorem+0x116>
100146d2:	4598      	cmp	r8, r3
100146d4:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
100146d8:	d203      	bcs.n	100146e2 <quorem+0x116>
100146da:	f853 2904 	ldr.w	r2, [r3], #-4
100146de:	2a00      	cmp	r2, #0
100146e0:	d0f7      	beq.n	100146d2 <quorem+0x106>
100146e2:	f8c9 4010 	str.w	r4, [r9, #16]
100146e6:	3601      	adds	r6, #1
100146e8:	4630      	mov	r0, r6
100146ea:	b003      	add	sp, #12
100146ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100146f0:	2000      	movs	r0, #0
100146f2:	b003      	add	sp, #12
100146f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

100146f8 <_dtoa_r>:
100146f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100146fc:	6b81      	ldr	r1, [r0, #56]	@ 0x38
100146fe:	b09d      	sub	sp, #116	@ 0x74
10014700:	4616      	mov	r6, r2
10014702:	461f      	mov	r7, r3
10014704:	e9cd 6704 	strd	r6, r7, [sp, #16]
10014708:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001470a:	9002      	str	r0, [sp, #8]
1001470c:	b149      	cbz	r1, 10014722 <_dtoa_r+0x2a>
1001470e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
10014710:	604a      	str	r2, [r1, #4]
10014712:	2301      	movs	r3, #1
10014714:	4093      	lsls	r3, r2
10014716:	4604      	mov	r4, r0
10014718:	608b      	str	r3, [r1, #8]
1001471a:	f002 fee5 	bl	100174e8 <_Bfree>
1001471e:	2300      	movs	r3, #0
10014720:	63a3      	str	r3, [r4, #56]	@ 0x38
10014722:	f1b7 0900 	subs.w	r9, r7, #0
10014726:	bfb4      	ite	lt
10014728:	2301      	movlt	r3, #1
1001472a:	2300      	movge	r3, #0
1001472c:	602b      	str	r3, [r5, #0]
1001472e:	4b76      	ldr	r3, [pc, #472]	@ (10014908 <_dtoa_r+0x210>)
10014730:	bfbc      	itt	lt
10014732:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
10014736:	f8cd 9014 	strlt.w	r9, [sp, #20]
1001473a:	ea33 0309 	bics.w	r3, r3, r9
1001473e:	f000 80aa 	beq.w	10014896 <_dtoa_r+0x19e>
10014742:	ed9d 7b04 	vldr	d7, [sp, #16]
10014746:	2200      	movs	r2, #0
10014748:	ec51 0b17 	vmov	r0, r1, d7
1001474c:	2300      	movs	r3, #0
1001474e:	ed8d 7b06 	vstr	d7, [sp, #24]
10014752:	f004 f9c3 	bl	10018adc <__aeabi_dcmpeq>
10014756:	4680      	mov	r8, r0
10014758:	b168      	cbz	r0, 10014776 <_dtoa_r+0x7e>
1001475a:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
1001475c:	2301      	movs	r3, #1
1001475e:	6013      	str	r3, [r2, #0]
10014760:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10014762:	b113      	cbz	r3, 1001476a <_dtoa_r+0x72>
10014764:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10014766:	4b69      	ldr	r3, [pc, #420]	@ (1001490c <_dtoa_r+0x214>)
10014768:	6013      	str	r3, [r2, #0]
1001476a:	4b69      	ldr	r3, [pc, #420]	@ (10014910 <_dtoa_r+0x218>)
1001476c:	9303      	str	r3, [sp, #12]
1001476e:	9803      	ldr	r0, [sp, #12]
10014770:	b01d      	add	sp, #116	@ 0x74
10014772:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014776:	ab1a      	add	r3, sp, #104	@ 0x68
10014778:	9301      	str	r3, [sp, #4]
1001477a:	ab1b      	add	r3, sp, #108	@ 0x6c
1001477c:	9300      	str	r3, [sp, #0]
1001477e:	9802      	ldr	r0, [sp, #8]
10014780:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10014784:	f003 f9e6 	bl	10017b54 <__d2b>
10014788:	ea5f 5519 	movs.w	r5, r9, lsr #20
1001478c:	4682      	mov	sl, r0
1001478e:	f040 8098 	bne.w	100148c2 <_dtoa_r+0x1ca>
10014792:	e9dd 851a 	ldrd	r8, r5, [sp, #104]	@ 0x68
10014796:	4445      	add	r5, r8
10014798:	f205 4332 	addw	r3, r5, #1074	@ 0x432
1001479c:	2b20      	cmp	r3, #32
1001479e:	f340 8381 	ble.w	10014ea4 <_dtoa_r+0x7ac>
100147a2:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
100147a6:	fa09 f903 	lsl.w	r9, r9, r3
100147aa:	f205 4312 	addw	r3, r5, #1042	@ 0x412
100147ae:	fa26 f303 	lsr.w	r3, r6, r3
100147b2:	ea49 0003 	orr.w	r0, r9, r3
100147b6:	f003 feaf 	bl	10018518 <__aeabi_ui2d>
100147ba:	2301      	movs	r3, #1
100147bc:	3d01      	subs	r5, #1
100147be:	930f      	str	r3, [sp, #60]	@ 0x3c
100147c0:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
100147c4:	4b53      	ldr	r3, [pc, #332]	@ (10014914 <_dtoa_r+0x21c>)
100147c6:	2200      	movs	r2, #0
100147c8:	f003 fd68 	bl	1001829c <__aeabi_dsub>
100147cc:	a348      	add	r3, pc, #288	@ (adr r3, 100148f0 <_dtoa_r+0x1f8>)
100147ce:	e9d3 2300 	ldrd	r2, r3, [r3]
100147d2:	f003 ff1b 	bl	1001860c <__aeabi_dmul>
100147d6:	a348      	add	r3, pc, #288	@ (adr r3, 100148f8 <_dtoa_r+0x200>)
100147d8:	e9d3 2300 	ldrd	r2, r3, [r3]
100147dc:	f003 fd60 	bl	100182a0 <__adddf3>
100147e0:	4606      	mov	r6, r0
100147e2:	4628      	mov	r0, r5
100147e4:	460f      	mov	r7, r1
100147e6:	f003 fea7 	bl	10018538 <__aeabi_i2d>
100147ea:	a345      	add	r3, pc, #276	@ (adr r3, 10014900 <_dtoa_r+0x208>)
100147ec:	e9d3 2300 	ldrd	r2, r3, [r3]
100147f0:	f003 ff0c 	bl	1001860c <__aeabi_dmul>
100147f4:	4602      	mov	r2, r0
100147f6:	460b      	mov	r3, r1
100147f8:	4630      	mov	r0, r6
100147fa:	4639      	mov	r1, r7
100147fc:	f003 fd50 	bl	100182a0 <__adddf3>
10014800:	4606      	mov	r6, r0
10014802:	460f      	mov	r7, r1
10014804:	f004 f9b2 	bl	10018b6c <__aeabi_d2iz>
10014808:	2200      	movs	r2, #0
1001480a:	4683      	mov	fp, r0
1001480c:	2300      	movs	r3, #0
1001480e:	4630      	mov	r0, r6
10014810:	4639      	mov	r1, r7
10014812:	f004 f96d 	bl	10018af0 <__aeabi_dcmplt>
10014816:	2800      	cmp	r0, #0
10014818:	f040 8318 	bne.w	10014e4c <_dtoa_r+0x754>
1001481c:	eba8 0805 	sub.w	r8, r8, r5
10014820:	f1bb 0f16 	cmp.w	fp, #22
10014824:	f108 34ff 	add.w	r4, r8, #4294967295	@ 0xffffffff
10014828:	f200 818a 	bhi.w	10014b40 <_dtoa_r+0x448>
1001482c:	4d3a      	ldr	r5, [pc, #232]	@ (10014918 <_dtoa_r+0x220>)
1001482e:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
10014832:	e9d5 2300 	ldrd	r2, r3, [r5]
10014836:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
1001483a:	f004 f959 	bl	10018af0 <__aeabi_dcmplt>
1001483e:	2800      	cmp	r0, #0
10014840:	d070      	beq.n	10014924 <_dtoa_r+0x22c>
10014842:	2300      	movs	r3, #0
10014844:	2c00      	cmp	r4, #0
10014846:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
1001484a:	930e      	str	r3, [sp, #56]	@ 0x38
1001484c:	f2c0 817d 	blt.w	10014b4a <_dtoa_r+0x452>
10014850:	2300      	movs	r3, #0
10014852:	9309      	str	r3, [sp, #36]	@ 0x24
10014854:	f1bb 0f00 	cmp.w	fp, #0
10014858:	da6a      	bge.n	10014930 <_dtoa_r+0x238>
1001485a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001485c:	eba3 030b 	sub.w	r3, r3, fp
10014860:	9309      	str	r3, [sp, #36]	@ 0x24
10014862:	f1cb 0300 	rsb	r3, fp, #0
10014866:	e9cd b30c 	strd	fp, r3, [sp, #48]	@ 0x30
1001486a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
1001486c:	2b09      	cmp	r3, #9
1001486e:	f04f 0b00 	mov.w	fp, #0
10014872:	d865      	bhi.n	10014940 <_dtoa_r+0x248>
10014874:	2b05      	cmp	r3, #5
10014876:	f340 831a 	ble.w	10014eae <_dtoa_r+0x7b6>
1001487a:	3b04      	subs	r3, #4
1001487c:	9326      	str	r3, [sp, #152]	@ 0x98
1001487e:	2500      	movs	r5, #0
10014880:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10014882:	3b02      	subs	r3, #2
10014884:	2b03      	cmp	r3, #3
10014886:	f200 8621 	bhi.w	100154cc <_dtoa_r+0xdd4>
1001488a:	e8df f013 	tbh	[pc, r3, lsl #1]
1001488e:	045e      	.short	0x045e
10014890:	0452045b 	.word	0x0452045b
10014894:	0436      	.short	0x0436
10014896:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10014898:	f3c9 0913 	ubfx	r9, r9, #0, #20
1001489c:	f242 730f 	movw	r3, #9999	@ 0x270f
100148a0:	ea59 0906 	orrs.w	r9, r9, r6
100148a4:	6013      	str	r3, [r2, #0]
100148a6:	d11c      	bne.n	100148e2 <_dtoa_r+0x1ea>
100148a8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
100148aa:	2b00      	cmp	r3, #0
100148ac:	f000 8629 	beq.w	10015502 <_dtoa_r+0xe0a>
100148b0:	4b1a      	ldr	r3, [pc, #104]	@ (1001491c <_dtoa_r+0x224>)
100148b2:	9303      	str	r3, [sp, #12]
100148b4:	3308      	adds	r3, #8
100148b6:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
100148b8:	9803      	ldr	r0, [sp, #12]
100148ba:	6013      	str	r3, [r2, #0]
100148bc:	b01d      	add	sp, #116	@ 0x74
100148be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100148c2:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
100148c6:	f3c2 0313 	ubfx	r3, r2, #0, #20
100148ca:	4608      	mov	r0, r1
100148cc:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
100148d0:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
100148d4:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
100148d8:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
100148dc:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
100148e0:	e770      	b.n	100147c4 <_dtoa_r+0xcc>
100148e2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
100148e4:	2b00      	cmp	r3, #0
100148e6:	f040 83e5 	bne.w	100150b4 <_dtoa_r+0x9bc>
100148ea:	4b0d      	ldr	r3, [pc, #52]	@ (10014920 <_dtoa_r+0x228>)
100148ec:	9303      	str	r3, [sp, #12]
100148ee:	e73e      	b.n	1001476e <_dtoa_r+0x76>
100148f0:	636f4361 	.word	0x636f4361
100148f4:	3fd287a7 	.word	0x3fd287a7
100148f8:	8b60c8b3 	.word	0x8b60c8b3
100148fc:	3fc68a28 	.word	0x3fc68a28
10014900:	509f79fb 	.word	0x509f79fb
10014904:	3fd34413 	.word	0x3fd34413
10014908:	7ff00000 	.word	0x7ff00000
1001490c:	100191a5 	.word	0x100191a5
10014910:	100191a4 	.word	0x100191a4
10014914:	3ff80000 	.word	0x3ff80000
10014918:	10019478 	.word	0x10019478
1001491c:	10019334 	.word	0x10019334
10014920:	10019340 	.word	0x10019340
10014924:	f1b8 0f00 	cmp.w	r8, #0
10014928:	f340 845e 	ble.w	100151e8 <_dtoa_r+0xaf0>
1001492c:	900e      	str	r0, [sp, #56]	@ 0x38
1001492e:	9009      	str	r0, [sp, #36]	@ 0x24
10014930:	2300      	movs	r3, #0
10014932:	930d      	str	r3, [sp, #52]	@ 0x34
10014934:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10014936:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
1001493a:	2b09      	cmp	r3, #9
1001493c:	445c      	add	r4, fp
1001493e:	d999      	bls.n	10014874 <_dtoa_r+0x17c>
10014940:	2300      	movs	r3, #0
10014942:	e9cd 3326 	strd	r3, r3, [sp, #152]	@ 0x98
10014946:	2501      	movs	r5, #1
10014948:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001494c:	950a      	str	r5, [sp, #40]	@ 0x28
1001494e:	9308      	str	r3, [sp, #32]
10014950:	9b02      	ldr	r3, [sp, #8]
10014952:	2100      	movs	r1, #0
10014954:	63d9      	str	r1, [r3, #60]	@ 0x3c
10014956:	9b08      	ldr	r3, [sp, #32]
10014958:	9316      	str	r3, [sp, #88]	@ 0x58
1001495a:	9802      	ldr	r0, [sp, #8]
1001495c:	f002 fd9e 	bl	1001749c <_Balloc>
10014960:	9003      	str	r0, [sp, #12]
10014962:	2800      	cmp	r0, #0
10014964:	f000 85bb 	beq.w	100154de <_dtoa_r+0xde6>
10014968:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
1001496c:	639a      	str	r2, [r3, #56]	@ 0x38
1001496e:	9b08      	ldr	r3, [sp, #32]
10014970:	2b0e      	cmp	r3, #14
10014972:	f200 8114 	bhi.w	10014b9e <_dtoa_r+0x4a6>
10014976:	2d00      	cmp	r5, #0
10014978:	f000 8111 	beq.w	10014b9e <_dtoa_r+0x4a6>
1001497c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1001497e:	2a00      	cmp	r2, #0
10014980:	f340 8439 	ble.w	100151f6 <_dtoa_r+0xafe>
10014984:	4db1      	ldr	r5, [pc, #708]	@ (10014c4c <_dtoa_r+0x554>)
10014986:	f002 030f 	and.w	r3, r2, #15
1001498a:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
1001498e:	1115      	asrs	r5, r2, #4
10014990:	05d2      	lsls	r2, r2, #23
10014992:	e9d3 8900 	ldrd	r8, r9, [r3]
10014996:	f140 83f9 	bpl.w	1001518c <_dtoa_r+0xa94>
1001499a:	4bad      	ldr	r3, [pc, #692]	@ (10014c50 <_dtoa_r+0x558>)
1001499c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
100149a0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
100149a4:	f003 ff5c 	bl	10018860 <__aeabi_ddiv>
100149a8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
100149ac:	f005 050f 	and.w	r5, r5, #15
100149b0:	2703      	movs	r7, #3
100149b2:	b17d      	cbz	r5, 100149d4 <_dtoa_r+0x2dc>
100149b4:	4ea6      	ldr	r6, [pc, #664]	@ (10014c50 <_dtoa_r+0x558>)
100149b6:	07eb      	lsls	r3, r5, #31
100149b8:	d508      	bpl.n	100149cc <_dtoa_r+0x2d4>
100149ba:	4640      	mov	r0, r8
100149bc:	4649      	mov	r1, r9
100149be:	e9d6 2300 	ldrd	r2, r3, [r6]
100149c2:	f003 fe23 	bl	1001860c <__aeabi_dmul>
100149c6:	3701      	adds	r7, #1
100149c8:	4680      	mov	r8, r0
100149ca:	4689      	mov	r9, r1
100149cc:	106d      	asrs	r5, r5, #1
100149ce:	f106 0608 	add.w	r6, r6, #8
100149d2:	d1f0      	bne.n	100149b6 <_dtoa_r+0x2be>
100149d4:	4642      	mov	r2, r8
100149d6:	464b      	mov	r3, r9
100149d8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
100149dc:	f003 ff40 	bl	10018860 <__aeabi_ddiv>
100149e0:	4680      	mov	r8, r0
100149e2:	4689      	mov	r9, r1
100149e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100149e6:	b143      	cbz	r3, 100149fa <_dtoa_r+0x302>
100149e8:	4b9a      	ldr	r3, [pc, #616]	@ (10014c54 <_dtoa_r+0x55c>)
100149ea:	2200      	movs	r2, #0
100149ec:	4640      	mov	r0, r8
100149ee:	4649      	mov	r1, r9
100149f0:	f004 f87e 	bl	10018af0 <__aeabi_dcmplt>
100149f4:	2800      	cmp	r0, #0
100149f6:	f040 84f0 	bne.w	100153da <_dtoa_r+0xce2>
100149fa:	4638      	mov	r0, r7
100149fc:	f003 fd9c 	bl	10018538 <__aeabi_i2d>
10014a00:	4642      	mov	r2, r8
10014a02:	464b      	mov	r3, r9
10014a04:	f003 fe02 	bl	1001860c <__aeabi_dmul>
10014a08:	4b93      	ldr	r3, [pc, #588]	@ (10014c58 <_dtoa_r+0x560>)
10014a0a:	2200      	movs	r2, #0
10014a0c:	f003 fc48 	bl	100182a0 <__adddf3>
10014a10:	9b08      	ldr	r3, [sp, #32]
10014a12:	4606      	mov	r6, r0
10014a14:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10014a18:	2b00      	cmp	r3, #0
10014a1a:	f000 80a9 	beq.w	10014b70 <_dtoa_r+0x478>
10014a1e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10014a20:	9317      	str	r3, [sp, #92]	@ 0x5c
10014a22:	9b08      	ldr	r3, [sp, #32]
10014a24:	9310      	str	r3, [sp, #64]	@ 0x40
10014a26:	9b03      	ldr	r3, [sp, #12]
10014a28:	4d88      	ldr	r5, [pc, #544]	@ (10014c4c <_dtoa_r+0x554>)
10014a2a:	4649      	mov	r1, r9
10014a2c:	4640      	mov	r0, r8
10014a2e:	e9cd 6712 	strd	r6, r7, [sp, #72]	@ 0x48
10014a32:	1c5e      	adds	r6, r3, #1
10014a34:	f004 f89a 	bl	10018b6c <__aeabi_d2iz>
10014a38:	9910      	ldr	r1, [sp, #64]	@ 0x40
10014a3a:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
10014a3e:	ed13 7b02 	vldr	d7, [r3, #-8]
10014a42:	4607      	mov	r7, r0
10014a44:	ed8d 7b14 	vstr	d7, [sp, #80]	@ 0x50
10014a48:	f003 fd76 	bl	10018538 <__aeabi_i2d>
10014a4c:	4602      	mov	r2, r0
10014a4e:	460b      	mov	r3, r1
10014a50:	4640      	mov	r0, r8
10014a52:	4649      	mov	r1, r9
10014a54:	f003 fc22 	bl	1001829c <__aeabi_dsub>
10014a58:	4689      	mov	r9, r1
10014a5a:	990a      	ldr	r1, [sp, #40]	@ 0x28
10014a5c:	3730      	adds	r7, #48	@ 0x30
10014a5e:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
10014a62:	4680      	mov	r8, r0
10014a64:	b2ff      	uxtb	r7, r7
10014a66:	2900      	cmp	r1, #0
10014a68:	f000 8452 	beq.w	10015310 <_dtoa_r+0xc18>
10014a6c:	497b      	ldr	r1, [pc, #492]	@ (10014c5c <_dtoa_r+0x564>)
10014a6e:	2000      	movs	r0, #0
10014a70:	f003 fef6 	bl	10018860 <__aeabi_ddiv>
10014a74:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
10014a78:	f003 fc10 	bl	1001829c <__aeabi_dsub>
10014a7c:	9d03      	ldr	r5, [sp, #12]
10014a7e:	4602      	mov	r2, r0
10014a80:	460b      	mov	r3, r1
10014a82:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
10014a86:	702f      	strb	r7, [r5, #0]
10014a88:	4642      	mov	r2, r8
10014a8a:	464b      	mov	r3, r9
10014a8c:	f004 f84e 	bl	10018b2c <__aeabi_dcmpgt>
10014a90:	2800      	cmp	r0, #0
10014a92:	f040 8496 	bne.w	100153c2 <_dtoa_r+0xcca>
10014a96:	e9cd b418 	strd	fp, r4, [sp, #96]	@ 0x60
10014a9a:	f8cd a050 	str.w	sl, [sp, #80]	@ 0x50
10014a9e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
10014aa0:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	@ 0x48
10014aa4:	2700      	movs	r7, #0
10014aa6:	e02a      	b.n	10014afe <_dtoa_r+0x406>
10014aa8:	3701      	adds	r7, #1
10014aaa:	42af      	cmp	r7, r5
10014aac:	f280 84dd 	bge.w	1001546a <_dtoa_r+0xd72>
10014ab0:	4b6b      	ldr	r3, [pc, #428]	@ (10014c60 <_dtoa_r+0x568>)
10014ab2:	4650      	mov	r0, sl
10014ab4:	4659      	mov	r1, fp
10014ab6:	2200      	movs	r2, #0
10014ab8:	f003 fda8 	bl	1001860c <__aeabi_dmul>
10014abc:	4b68      	ldr	r3, [pc, #416]	@ (10014c60 <_dtoa_r+0x568>)
10014abe:	2200      	movs	r2, #0
10014ac0:	4682      	mov	sl, r0
10014ac2:	468b      	mov	fp, r1
10014ac4:	4640      	mov	r0, r8
10014ac6:	4649      	mov	r1, r9
10014ac8:	f003 fda0 	bl	1001860c <__aeabi_dmul>
10014acc:	4689      	mov	r9, r1
10014ace:	4680      	mov	r8, r0
10014ad0:	f004 f84c 	bl	10018b6c <__aeabi_d2iz>
10014ad4:	4604      	mov	r4, r0
10014ad6:	f003 fd2f 	bl	10018538 <__aeabi_i2d>
10014ada:	4602      	mov	r2, r0
10014adc:	460b      	mov	r3, r1
10014ade:	4640      	mov	r0, r8
10014ae0:	4649      	mov	r1, r9
10014ae2:	f003 fbdb 	bl	1001829c <__aeabi_dsub>
10014ae6:	3430      	adds	r4, #48	@ 0x30
10014ae8:	f806 4b01 	strb.w	r4, [r6], #1
10014aec:	4652      	mov	r2, sl
10014aee:	465b      	mov	r3, fp
10014af0:	4680      	mov	r8, r0
10014af2:	4689      	mov	r9, r1
10014af4:	f003 fffc 	bl	10018af0 <__aeabi_dcmplt>
10014af8:	2800      	cmp	r0, #0
10014afa:	f040 84b3 	bne.w	10015464 <_dtoa_r+0xd6c>
10014afe:	4642      	mov	r2, r8
10014b00:	464b      	mov	r3, r9
10014b02:	4954      	ldr	r1, [pc, #336]	@ (10014c54 <_dtoa_r+0x55c>)
10014b04:	2000      	movs	r0, #0
10014b06:	f003 fbc9 	bl	1001829c <__aeabi_dsub>
10014b0a:	4652      	mov	r2, sl
10014b0c:	465b      	mov	r3, fp
10014b0e:	f003 ffef 	bl	10018af0 <__aeabi_dcmplt>
10014b12:	2800      	cmp	r0, #0
10014b14:	d0c8      	beq.n	10014aa8 <_dtoa_r+0x3b0>
10014b16:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10014b18:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
10014b1c:	9a03      	ldr	r2, [sp, #12]
10014b1e:	4637      	mov	r7, r6
10014b20:	f103 0801 	add.w	r8, r3, #1
10014b24:	e002      	b.n	10014b2c <_dtoa_r+0x434>
10014b26:	4297      	cmp	r7, r2
10014b28:	f000 847b 	beq.w	10015422 <_dtoa_r+0xd2a>
10014b2c:	463e      	mov	r6, r7
10014b2e:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
10014b32:	2b39      	cmp	r3, #57	@ 0x39
10014b34:	d0f7      	beq.n	10014b26 <_dtoa_r+0x42e>
10014b36:	3301      	adds	r3, #1
10014b38:	b2db      	uxtb	r3, r3
10014b3a:	703b      	strb	r3, [r7, #0]
10014b3c:	4645      	mov	r5, r8
10014b3e:	e174      	b.n	10014e2a <_dtoa_r+0x732>
10014b40:	2301      	movs	r3, #1
10014b42:	2c00      	cmp	r4, #0
10014b44:	930e      	str	r3, [sp, #56]	@ 0x38
10014b46:	f6bf ae83 	bge.w	10014850 <_dtoa_r+0x158>
10014b4a:	f1c8 0301 	rsb	r3, r8, #1
10014b4e:	9309      	str	r3, [sp, #36]	@ 0x24
10014b50:	2400      	movs	r4, #0
10014b52:	e67f      	b.n	10014854 <_dtoa_r+0x15c>
10014b54:	4638      	mov	r0, r7
10014b56:	f003 fcef 	bl	10018538 <__aeabi_i2d>
10014b5a:	4642      	mov	r2, r8
10014b5c:	464b      	mov	r3, r9
10014b5e:	f003 fd55 	bl	1001860c <__aeabi_dmul>
10014b62:	4b3d      	ldr	r3, [pc, #244]	@ (10014c58 <_dtoa_r+0x560>)
10014b64:	2200      	movs	r2, #0
10014b66:	f003 fb9b 	bl	100182a0 <__adddf3>
10014b6a:	4606      	mov	r6, r0
10014b6c:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10014b70:	4b3c      	ldr	r3, [pc, #240]	@ (10014c64 <_dtoa_r+0x56c>)
10014b72:	4640      	mov	r0, r8
10014b74:	4649      	mov	r1, r9
10014b76:	2200      	movs	r2, #0
10014b78:	f003 fb90 	bl	1001829c <__aeabi_dsub>
10014b7c:	4632      	mov	r2, r6
10014b7e:	463b      	mov	r3, r7
10014b80:	4680      	mov	r8, r0
10014b82:	4689      	mov	r9, r1
10014b84:	f003 ffd2 	bl	10018b2c <__aeabi_dcmpgt>
10014b88:	2800      	cmp	r0, #0
10014b8a:	f040 8459 	bne.w	10015440 <_dtoa_r+0xd48>
10014b8e:	4640      	mov	r0, r8
10014b90:	4649      	mov	r1, r9
10014b92:	4632      	mov	r2, r6
10014b94:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
10014b98:	f003 ffaa 	bl	10018af0 <__aeabi_dcmplt>
10014b9c:	bb28      	cbnz	r0, 10014bea <_dtoa_r+0x4f2>
10014b9e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10014ba0:	2b00      	cmp	r3, #0
10014ba2:	f2c0 8091 	blt.w	10014cc8 <_dtoa_r+0x5d0>
10014ba6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10014ba8:	2a0e      	cmp	r2, #14
10014baa:	f300 808d 	bgt.w	10014cc8 <_dtoa_r+0x5d0>
10014bae:	4d27      	ldr	r5, [pc, #156]	@ (10014c4c <_dtoa_r+0x554>)
10014bb0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10014bb2:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
10014bb6:	ed95 7b00 	vldr	d7, [r5]
10014bba:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
10014bbc:	2b00      	cmp	r3, #0
10014bbe:	ed8d 7b04 	vstr	d7, [sp, #16]
10014bc2:	da19      	bge.n	10014bf8 <_dtoa_r+0x500>
10014bc4:	9b08      	ldr	r3, [sp, #32]
10014bc6:	2b00      	cmp	r3, #0
10014bc8:	dc16      	bgt.n	10014bf8 <_dtoa_r+0x500>
10014bca:	d10e      	bne.n	10014bea <_dtoa_r+0x4f2>
10014bcc:	4b25      	ldr	r3, [pc, #148]	@ (10014c64 <_dtoa_r+0x56c>)
10014bce:	2200      	movs	r2, #0
10014bd0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10014bd4:	f003 fd1a 	bl	1001860c <__aeabi_dmul>
10014bd8:	4602      	mov	r2, r0
10014bda:	460b      	mov	r3, r1
10014bdc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10014be0:	f003 ff90 	bl	10018b04 <__aeabi_dcmple>
10014be4:	2800      	cmp	r0, #0
10014be6:	f000 842b 	beq.w	10015440 <_dtoa_r+0xd48>
10014bea:	f04f 0900 	mov.w	r9, #0
10014bee:	9e03      	ldr	r6, [sp, #12]
10014bf0:	464f      	mov	r7, r9
10014bf2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
10014bf4:	43dd      	mvns	r5, r3
10014bf6:	e224      	b.n	10015042 <_dtoa_r+0x94a>
10014bf8:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
10014bfc:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10014c00:	4622      	mov	r2, r4
10014c02:	462b      	mov	r3, r5
10014c04:	4640      	mov	r0, r8
10014c06:	4649      	mov	r1, r9
10014c08:	f003 fe2a 	bl	10018860 <__aeabi_ddiv>
10014c0c:	f003 ffae 	bl	10018b6c <__aeabi_d2iz>
10014c10:	4606      	mov	r6, r0
10014c12:	f003 fc91 	bl	10018538 <__aeabi_i2d>
10014c16:	4622      	mov	r2, r4
10014c18:	462b      	mov	r3, r5
10014c1a:	f003 fcf7 	bl	1001860c <__aeabi_dmul>
10014c1e:	9f03      	ldr	r7, [sp, #12]
10014c20:	460b      	mov	r3, r1
10014c22:	4602      	mov	r2, r0
10014c24:	4649      	mov	r1, r9
10014c26:	4640      	mov	r0, r8
10014c28:	f003 fb38 	bl	1001829c <__aeabi_dsub>
10014c2c:	f106 0330 	add.w	r3, r6, #48	@ 0x30
10014c30:	f807 3b01 	strb.w	r3, [r7], #1
10014c34:	9b08      	ldr	r3, [sp, #32]
10014c36:	2b01      	cmp	r3, #1
10014c38:	f000 8311 	beq.w	1001525e <_dtoa_r+0xb66>
10014c3c:	2501      	movs	r5, #1
10014c3e:	f8cd a018 	str.w	sl, [sp, #24]
10014c42:	4699      	mov	r9, r3
10014c44:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
10014c48:	46a8      	mov	r8, r5
10014c4a:	e02b      	b.n	10014ca4 <_dtoa_r+0x5ac>
10014c4c:	10019478 	.word	0x10019478
10014c50:	10019450 	.word	0x10019450
10014c54:	3ff00000 	.word	0x3ff00000
10014c58:	401c0000 	.word	0x401c0000
10014c5c:	3fe00000 	.word	0x3fe00000
10014c60:	40240000 	.word	0x40240000
10014c64:	40140000 	.word	0x40140000
10014c68:	4652      	mov	r2, sl
10014c6a:	465b      	mov	r3, fp
10014c6c:	4620      	mov	r0, r4
10014c6e:	4629      	mov	r1, r5
10014c70:	f003 fdf6 	bl	10018860 <__aeabi_ddiv>
10014c74:	f003 ff7a 	bl	10018b6c <__aeabi_d2iz>
10014c78:	4606      	mov	r6, r0
10014c7a:	f003 fc5d 	bl	10018538 <__aeabi_i2d>
10014c7e:	4652      	mov	r2, sl
10014c80:	465b      	mov	r3, fp
10014c82:	f003 fcc3 	bl	1001860c <__aeabi_dmul>
10014c86:	f108 0801 	add.w	r8, r8, #1
10014c8a:	460b      	mov	r3, r1
10014c8c:	4602      	mov	r2, r0
10014c8e:	4629      	mov	r1, r5
10014c90:	4620      	mov	r0, r4
10014c92:	f003 fb03 	bl	1001829c <__aeabi_dsub>
10014c96:	f106 0330 	add.w	r3, r6, #48	@ 0x30
10014c9a:	45c8      	cmp	r8, r9
10014c9c:	f807 3b01 	strb.w	r3, [r7], #1
10014ca0:	f000 82db 	beq.w	1001525a <_dtoa_r+0xb62>
10014ca4:	4bb9      	ldr	r3, [pc, #740]	@ (10014f8c <_dtoa_r+0x894>)
10014ca6:	2200      	movs	r2, #0
10014ca8:	f003 fcb0 	bl	1001860c <__aeabi_dmul>
10014cac:	2200      	movs	r2, #0
10014cae:	2300      	movs	r3, #0
10014cb0:	4604      	mov	r4, r0
10014cb2:	460d      	mov	r5, r1
10014cb4:	f003 ff12 	bl	10018adc <__aeabi_dcmpeq>
10014cb8:	2800      	cmp	r0, #0
10014cba:	d0d5      	beq.n	10014c68 <_dtoa_r+0x570>
10014cbc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10014cbe:	f8dd a018 	ldr.w	sl, [sp, #24]
10014cc2:	3501      	adds	r5, #1
10014cc4:	463e      	mov	r6, r7
10014cc6:	e0b0      	b.n	10014e2a <_dtoa_r+0x732>
10014cc8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014cca:	2a00      	cmp	r2, #0
10014ccc:	f040 80d2 	bne.w	10014e74 <_dtoa_r+0x77c>
10014cd0:	2300      	movs	r3, #0
10014cd2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
10014cd4:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10014cd6:	930a      	str	r3, [sp, #40]	@ 0x28
10014cd8:	461f      	mov	r7, r3
10014cda:	b156      	cbz	r6, 10014cf2 <_dtoa_r+0x5fa>
10014cdc:	2c00      	cmp	r4, #0
10014cde:	dd08      	ble.n	10014cf2 <_dtoa_r+0x5fa>
10014ce0:	42a6      	cmp	r6, r4
10014ce2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10014ce4:	4633      	mov	r3, r6
10014ce6:	bfa8      	it	ge
10014ce8:	4623      	movge	r3, r4
10014cea:	1ad2      	subs	r2, r2, r3
10014cec:	9209      	str	r2, [sp, #36]	@ 0x24
10014cee:	1af6      	subs	r6, r6, r3
10014cf0:	1ae4      	subs	r4, r4, r3
10014cf2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10014cf4:	b153      	cbz	r3, 10014d0c <_dtoa_r+0x614>
10014cf6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10014cf8:	b113      	cbz	r3, 10014d00 <_dtoa_r+0x608>
10014cfa:	2d00      	cmp	r5, #0
10014cfc:	f040 82e8 	bne.w	100152d0 <_dtoa_r+0xbd8>
10014d00:	4651      	mov	r1, sl
10014d02:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10014d04:	9802      	ldr	r0, [sp, #8]
10014d06:	f002 fd7f 	bl	10017808 <__pow5mult>
10014d0a:	4682      	mov	sl, r0
10014d0c:	9802      	ldr	r0, [sp, #8]
10014d0e:	2101      	movs	r1, #1
10014d10:	f002 fc96 	bl	10017640 <__i2b>
10014d14:	4681      	mov	r9, r0
10014d16:	f1bb 0f00 	cmp.w	fp, #0
10014d1a:	f040 81b6 	bne.w	1001508a <_dtoa_r+0x992>
10014d1e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10014d20:	2b01      	cmp	r3, #1
10014d22:	f340 81cc 	ble.w	100150be <_dtoa_r+0x9c6>
10014d26:	2001      	movs	r0, #1
10014d28:	4420      	add	r0, r4
10014d2a:	f010 001f 	ands.w	r0, r0, #31
10014d2e:	f000 809a 	beq.w	10014e66 <_dtoa_r+0x76e>
10014d32:	f1c0 0320 	rsb	r3, r0, #32
10014d36:	2b04      	cmp	r3, #4
10014d38:	f340 81da 	ble.w	100150f0 <_dtoa_r+0x9f8>
10014d3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014d3e:	f1c0 001c 	rsb	r0, r0, #28
10014d42:	4403      	add	r3, r0
10014d44:	9309      	str	r3, [sp, #36]	@ 0x24
10014d46:	4406      	add	r6, r0
10014d48:	4404      	add	r4, r0
10014d4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014d4c:	2b00      	cmp	r3, #0
10014d4e:	dd05      	ble.n	10014d5c <_dtoa_r+0x664>
10014d50:	4651      	mov	r1, sl
10014d52:	9802      	ldr	r0, [sp, #8]
10014d54:	461a      	mov	r2, r3
10014d56:	f002 fdb1 	bl	100178bc <__lshift>
10014d5a:	4682      	mov	sl, r0
10014d5c:	2c00      	cmp	r4, #0
10014d5e:	dd05      	ble.n	10014d6c <_dtoa_r+0x674>
10014d60:	4649      	mov	r1, r9
10014d62:	9802      	ldr	r0, [sp, #8]
10014d64:	4622      	mov	r2, r4
10014d66:	f002 fda9 	bl	100178bc <__lshift>
10014d6a:	4681      	mov	r9, r0
10014d6c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014d6e:	2b00      	cmp	r3, #0
10014d70:	f040 8170 	bne.w	10015054 <_dtoa_r+0x95c>
10014d74:	9b08      	ldr	r3, [sp, #32]
10014d76:	2b00      	cmp	r3, #0
10014d78:	f340 8148 	ble.w	1001500c <_dtoa_r+0x914>
10014d7c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10014d7e:	2b00      	cmp	r3, #0
10014d80:	f040 80a4 	bne.w	10014ecc <_dtoa_r+0x7d4>
10014d84:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10014d86:	3501      	adds	r5, #1
10014d88:	f8dd 800c 	ldr.w	r8, [sp, #12]
10014d8c:	9c08      	ldr	r4, [sp, #32]
10014d8e:	f8dd b008 	ldr.w	fp, [sp, #8]
10014d92:	2601      	movs	r6, #1
10014d94:	e007      	b.n	10014da6 <_dtoa_r+0x6ae>
10014d96:	4651      	mov	r1, sl
10014d98:	2300      	movs	r3, #0
10014d9a:	220a      	movs	r2, #10
10014d9c:	4658      	mov	r0, fp
10014d9e:	f002 fbad 	bl	100174fc <__multadd>
10014da2:	3601      	adds	r6, #1
10014da4:	4682      	mov	sl, r0
10014da6:	4649      	mov	r1, r9
10014da8:	4650      	mov	r0, sl
10014daa:	f7ff fc0f 	bl	100145cc <quorem>
10014dae:	42a6      	cmp	r6, r4
10014db0:	f100 0330 	add.w	r3, r0, #48	@ 0x30
10014db4:	f808 3b01 	strb.w	r3, [r8], #1
10014db8:	dbed      	blt.n	10014d96 <_dtoa_r+0x69e>
10014dba:	9a08      	ldr	r2, [sp, #32]
10014dbc:	2a00      	cmp	r2, #0
10014dbe:	bfc8      	it	gt
10014dc0:	4616      	movgt	r6, r2
10014dc2:	9a03      	ldr	r2, [sp, #12]
10014dc4:	bfd8      	it	le
10014dc6:	2601      	movle	r6, #1
10014dc8:	eb02 0b06 	add.w	fp, r2, r6
10014dcc:	2400      	movs	r4, #0
10014dce:	4651      	mov	r1, sl
10014dd0:	2201      	movs	r2, #1
10014dd2:	9802      	ldr	r0, [sp, #8]
10014dd4:	9304      	str	r3, [sp, #16]
10014dd6:	f002 fd71 	bl	100178bc <__lshift>
10014dda:	4649      	mov	r1, r9
10014ddc:	4682      	mov	sl, r0
10014dde:	f002 fde5 	bl	100179ac <__mcmp>
10014de2:	2800      	cmp	r0, #0
10014de4:	f340 81e3 	ble.w	100151ae <_dtoa_r+0xab6>
10014de8:	9a03      	ldr	r2, [sp, #12]
10014dea:	e002      	b.n	10014df2 <_dtoa_r+0x6fa>
10014dec:	455a      	cmp	r2, fp
10014dee:	f000 81e9 	beq.w	100151c4 <_dtoa_r+0xacc>
10014df2:	465e      	mov	r6, fp
10014df4:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10014df8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
10014dfc:	2b39      	cmp	r3, #57	@ 0x39
10014dfe:	d0f5      	beq.n	10014dec <_dtoa_r+0x6f4>
10014e00:	3301      	adds	r3, #1
10014e02:	f88b 3000 	strb.w	r3, [fp]
10014e06:	f8dd 8008 	ldr.w	r8, [sp, #8]
10014e0a:	4649      	mov	r1, r9
10014e0c:	4640      	mov	r0, r8
10014e0e:	f002 fb6b 	bl	100174e8 <_Bfree>
10014e12:	b157      	cbz	r7, 10014e2a <_dtoa_r+0x732>
10014e14:	b12c      	cbz	r4, 10014e22 <_dtoa_r+0x72a>
10014e16:	42bc      	cmp	r4, r7
10014e18:	d003      	beq.n	10014e22 <_dtoa_r+0x72a>
10014e1a:	4621      	mov	r1, r4
10014e1c:	4640      	mov	r0, r8
10014e1e:	f002 fb63 	bl	100174e8 <_Bfree>
10014e22:	9802      	ldr	r0, [sp, #8]
10014e24:	4639      	mov	r1, r7
10014e26:	f002 fb5f 	bl	100174e8 <_Bfree>
10014e2a:	9802      	ldr	r0, [sp, #8]
10014e2c:	4651      	mov	r1, sl
10014e2e:	f002 fb5b 	bl	100174e8 <_Bfree>
10014e32:	2300      	movs	r3, #0
10014e34:	7033      	strb	r3, [r6, #0]
10014e36:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10014e38:	601d      	str	r5, [r3, #0]
10014e3a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10014e3c:	2b00      	cmp	r3, #0
10014e3e:	f43f ac96 	beq.w	1001476e <_dtoa_r+0x76>
10014e42:	9803      	ldr	r0, [sp, #12]
10014e44:	601e      	str	r6, [r3, #0]
10014e46:	b01d      	add	sp, #116	@ 0x74
10014e48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014e4c:	4658      	mov	r0, fp
10014e4e:	f003 fb73 	bl	10018538 <__aeabi_i2d>
10014e52:	4632      	mov	r2, r6
10014e54:	463b      	mov	r3, r7
10014e56:	f003 fe41 	bl	10018adc <__aeabi_dcmpeq>
10014e5a:	2800      	cmp	r0, #0
10014e5c:	f47f acde 	bne.w	1001481c <_dtoa_r+0x124>
10014e60:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10014e64:	e4da      	b.n	1001481c <_dtoa_r+0x124>
10014e66:	231c      	movs	r3, #28
10014e68:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10014e6a:	441a      	add	r2, r3
10014e6c:	9209      	str	r2, [sp, #36]	@ 0x24
10014e6e:	441e      	add	r6, r3
10014e70:	441c      	add	r4, r3
10014e72:	e76a      	b.n	10014d4a <_dtoa_r+0x652>
10014e74:	9a26      	ldr	r2, [sp, #152]	@ 0x98
10014e76:	2a01      	cmp	r2, #1
10014e78:	f340 81a9 	ble.w	100151ce <_dtoa_r+0xad6>
10014e7c:	9b08      	ldr	r3, [sp, #32]
10014e7e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10014e80:	1e5d      	subs	r5, r3, #1
10014e82:	42aa      	cmp	r2, r5
10014e84:	f2c0 816b 	blt.w	1001515e <_dtoa_r+0xa66>
10014e88:	2b00      	cmp	r3, #0
10014e8a:	eba2 0505 	sub.w	r5, r2, r5
10014e8e:	f280 82dd 	bge.w	1001544c <_dtoa_r+0xd54>
10014e92:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10014e96:	1a9e      	subs	r6, r3, r2
10014e98:	9802      	ldr	r0, [sp, #8]
10014e9a:	2101      	movs	r1, #1
10014e9c:	f002 fbd0 	bl	10017640 <__i2b>
10014ea0:	4607      	mov	r7, r0
10014ea2:	e71a      	b.n	10014cda <_dtoa_r+0x5e2>
10014ea4:	f1c3 0320 	rsb	r3, r3, #32
10014ea8:	fa06 f003 	lsl.w	r0, r6, r3
10014eac:	e483      	b.n	100147b6 <_dtoa_r+0xbe>
10014eae:	2501      	movs	r5, #1
10014eb0:	e4e6      	b.n	10014880 <_dtoa_r+0x188>
10014eb2:	4639      	mov	r1, r7
10014eb4:	2300      	movs	r3, #0
10014eb6:	9802      	ldr	r0, [sp, #8]
10014eb8:	220a      	movs	r2, #10
10014eba:	f002 fb1f 	bl	100174fc <__multadd>
10014ebe:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10014ec0:	2b00      	cmp	r3, #0
10014ec2:	4607      	mov	r7, r0
10014ec4:	f340 82ef 	ble.w	100154a6 <_dtoa_r+0xdae>
10014ec8:	950c      	str	r5, [sp, #48]	@ 0x30
10014eca:	9308      	str	r3, [sp, #32]
10014ecc:	2e00      	cmp	r6, #0
10014ece:	f300 813f 	bgt.w	10015150 <_dtoa_r+0xa58>
10014ed2:	f1bb 0f00 	cmp.w	fp, #0
10014ed6:	f040 81df 	bne.w	10015298 <_dtoa_r+0xba0>
10014eda:	46b8      	mov	r8, r7
10014edc:	9e03      	ldr	r6, [sp, #12]
10014ede:	9c08      	ldr	r4, [sp, #32]
10014ee0:	1e73      	subs	r3, r6, #1
10014ee2:	441c      	add	r4, r3
10014ee4:	9b04      	ldr	r3, [sp, #16]
10014ee6:	940a      	str	r4, [sp, #40]	@ 0x28
10014ee8:	f003 0301 	and.w	r3, r3, #1
10014eec:	9c02      	ldr	r4, [sp, #8]
10014eee:	930d      	str	r3, [sp, #52]	@ 0x34
10014ef0:	4649      	mov	r1, r9
10014ef2:	4650      	mov	r0, sl
10014ef4:	f7ff fb6a 	bl	100145cc <quorem>
10014ef8:	4639      	mov	r1, r7
10014efa:	4683      	mov	fp, r0
10014efc:	4650      	mov	r0, sl
10014efe:	f002 fd55 	bl	100179ac <__mcmp>
10014f02:	4642      	mov	r2, r8
10014f04:	4649      	mov	r1, r9
10014f06:	4605      	mov	r5, r0
10014f08:	4620      	mov	r0, r4
10014f0a:	f002 fd71 	bl	100179f0 <__mdiff>
10014f0e:	68c2      	ldr	r2, [r0, #12]
10014f10:	4601      	mov	r1, r0
10014f12:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
10014f16:	2a00      	cmp	r2, #0
10014f18:	d13a      	bne.n	10014f90 <_dtoa_r+0x898>
10014f1a:	e9cd 0308 	strd	r0, r3, [sp, #32]
10014f1e:	4650      	mov	r0, sl
10014f20:	f002 fd44 	bl	100179ac <__mcmp>
10014f24:	9908      	ldr	r1, [sp, #32]
10014f26:	9006      	str	r0, [sp, #24]
10014f28:	4620      	mov	r0, r4
10014f2a:	f002 fadd 	bl	100174e8 <_Bfree>
10014f2e:	9a06      	ldr	r2, [sp, #24]
10014f30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014f32:	2a00      	cmp	r2, #0
10014f34:	d15a      	bne.n	10014fec <_dtoa_r+0x8f4>
10014f36:	9a26      	ldr	r2, [sp, #152]	@ 0x98
10014f38:	b91a      	cbnz	r2, 10014f42 <_dtoa_r+0x84a>
10014f3a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10014f3c:	2a00      	cmp	r2, #0
10014f3e:	f000 829a 	beq.w	10015476 <_dtoa_r+0xd7e>
10014f42:	2d00      	cmp	r5, #0
10014f44:	db45      	blt.n	10014fd2 <_dtoa_r+0x8da>
10014f46:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014f48:	46b3      	mov	fp, r6
10014f4a:	42b2      	cmp	r2, r6
10014f4c:	f80b 3b01 	strb.w	r3, [fp], #1
10014f50:	f000 81b9 	beq.w	100152c6 <_dtoa_r+0xbce>
10014f54:	4651      	mov	r1, sl
10014f56:	2300      	movs	r3, #0
10014f58:	220a      	movs	r2, #10
10014f5a:	4620      	mov	r0, r4
10014f5c:	f002 face 	bl	100174fc <__multadd>
10014f60:	4547      	cmp	r7, r8
10014f62:	4682      	mov	sl, r0
10014f64:	4639      	mov	r1, r7
10014f66:	f04f 0300 	mov.w	r3, #0
10014f6a:	f04f 020a 	mov.w	r2, #10
10014f6e:	4620      	mov	r0, r4
10014f70:	d036      	beq.n	10014fe0 <_dtoa_r+0x8e8>
10014f72:	f002 fac3 	bl	100174fc <__multadd>
10014f76:	4641      	mov	r1, r8
10014f78:	4607      	mov	r7, r0
10014f7a:	2300      	movs	r3, #0
10014f7c:	220a      	movs	r2, #10
10014f7e:	4620      	mov	r0, r4
10014f80:	f002 fabc 	bl	100174fc <__multadd>
10014f84:	465e      	mov	r6, fp
10014f86:	4680      	mov	r8, r0
10014f88:	e7b2      	b.n	10014ef0 <_dtoa_r+0x7f8>
10014f8a:	bf00      	nop
10014f8c:	40240000 	.word	0x40240000
10014f90:	9802      	ldr	r0, [sp, #8]
10014f92:	9306      	str	r3, [sp, #24]
10014f94:	f002 faa8 	bl	100174e8 <_Bfree>
10014f98:	2d00      	cmp	r5, #0
10014f9a:	9b06      	ldr	r3, [sp, #24]
10014f9c:	db06      	blt.n	10014fac <_dtoa_r+0x8b4>
10014f9e:	9a04      	ldr	r2, [sp, #16]
10014fa0:	9926      	ldr	r1, [sp, #152]	@ 0x98
10014fa2:	f002 0201 	and.w	r2, r2, #1
10014fa6:	430d      	orrs	r5, r1
10014fa8:	432a      	orrs	r2, r5
10014faa:	d12a      	bne.n	10015002 <_dtoa_r+0x90a>
10014fac:	4651      	mov	r1, sl
10014fae:	2201      	movs	r2, #1
10014fb0:	9802      	ldr	r0, [sp, #8]
10014fb2:	9304      	str	r3, [sp, #16]
10014fb4:	f002 fc82 	bl	100178bc <__lshift>
10014fb8:	4649      	mov	r1, r9
10014fba:	4682      	mov	sl, r0
10014fbc:	f002 fcf6 	bl	100179ac <__mcmp>
10014fc0:	2800      	cmp	r0, #0
10014fc2:	9b04      	ldr	r3, [sp, #16]
10014fc4:	f340 80e8 	ble.w	10015198 <_dtoa_r+0xaa0>
10014fc8:	2b39      	cmp	r3, #57	@ 0x39
10014fca:	f000 822f 	beq.w	1001542c <_dtoa_r+0xd34>
10014fce:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
10014fd2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10014fd4:	f806 3b01 	strb.w	r3, [r6], #1
10014fd8:	463c      	mov	r4, r7
10014fda:	3501      	adds	r5, #1
10014fdc:	4647      	mov	r7, r8
10014fde:	e712      	b.n	10014e06 <_dtoa_r+0x70e>
10014fe0:	f002 fa8c 	bl	100174fc <__multadd>
10014fe4:	465e      	mov	r6, fp
10014fe6:	4607      	mov	r7, r0
10014fe8:	4680      	mov	r8, r0
10014fea:	e781      	b.n	10014ef0 <_dtoa_r+0x7f8>
10014fec:	2d00      	cmp	r5, #0
10014fee:	f2c0 827d 	blt.w	100154ec <_dtoa_r+0xdf4>
10014ff2:	9926      	ldr	r1, [sp, #152]	@ 0x98
10014ff4:	430d      	orrs	r5, r1
10014ff6:	990d      	ldr	r1, [sp, #52]	@ 0x34
10014ff8:	430d      	orrs	r5, r1
10014ffa:	f000 8277 	beq.w	100154ec <_dtoa_r+0xdf4>
10014ffe:	2a00      	cmp	r2, #0
10015000:	dda1      	ble.n	10014f46 <_dtoa_r+0x84e>
10015002:	2b39      	cmp	r3, #57	@ 0x39
10015004:	f000 8212 	beq.w	1001542c <_dtoa_r+0xd34>
10015008:	3301      	adds	r3, #1
1001500a:	e7e2      	b.n	10014fd2 <_dtoa_r+0x8da>
1001500c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
1001500e:	2b02      	cmp	r3, #2
10015010:	f77f aeb4 	ble.w	10014d7c <_dtoa_r+0x684>
10015014:	9b08      	ldr	r3, [sp, #32]
10015016:	2b00      	cmp	r3, #0
10015018:	f040 811d 	bne.w	10015256 <_dtoa_r+0xb5e>
1001501c:	4649      	mov	r1, r9
1001501e:	2205      	movs	r2, #5
10015020:	9802      	ldr	r0, [sp, #8]
10015022:	f002 fa6b 	bl	100174fc <__multadd>
10015026:	4601      	mov	r1, r0
10015028:	4681      	mov	r9, r0
1001502a:	4650      	mov	r0, sl
1001502c:	f002 fcbe 	bl	100179ac <__mcmp>
10015030:	2800      	cmp	r0, #0
10015032:	f340 8110 	ble.w	10015256 <_dtoa_r+0xb5e>
10015036:	9e03      	ldr	r6, [sp, #12]
10015038:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
1001503a:	2331      	movs	r3, #49	@ 0x31
1001503c:	f806 3b01 	strb.w	r3, [r6], #1
10015040:	3501      	adds	r5, #1
10015042:	9802      	ldr	r0, [sp, #8]
10015044:	4649      	mov	r1, r9
10015046:	3501      	adds	r5, #1
10015048:	f002 fa4e 	bl	100174e8 <_Bfree>
1001504c:	2f00      	cmp	r7, #0
1001504e:	f47f aee8 	bne.w	10014e22 <_dtoa_r+0x72a>
10015052:	e6ea      	b.n	10014e2a <_dtoa_r+0x732>
10015054:	4649      	mov	r1, r9
10015056:	4650      	mov	r0, sl
10015058:	f002 fca8 	bl	100179ac <__mcmp>
1001505c:	2800      	cmp	r0, #0
1001505e:	f6bf ae89 	bge.w	10014d74 <_dtoa_r+0x67c>
10015062:	4651      	mov	r1, sl
10015064:	2300      	movs	r3, #0
10015066:	9802      	ldr	r0, [sp, #8]
10015068:	220a      	movs	r2, #10
1001506a:	f002 fa47 	bl	100174fc <__multadd>
1001506e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10015070:	1e5d      	subs	r5, r3, #1
10015072:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10015074:	4682      	mov	sl, r0
10015076:	2b00      	cmp	r3, #0
10015078:	f47f af1b 	bne.w	10014eb2 <_dtoa_r+0x7ba>
1001507c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
1001507e:	2b00      	cmp	r3, #0
10015080:	f340 81ff 	ble.w	10015482 <_dtoa_r+0xd8a>
10015084:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10015086:	9308      	str	r3, [sp, #32]
10015088:	e67e      	b.n	10014d88 <_dtoa_r+0x690>
1001508a:	4601      	mov	r1, r0
1001508c:	465a      	mov	r2, fp
1001508e:	9802      	ldr	r0, [sp, #8]
10015090:	f002 fbba 	bl	10017808 <__pow5mult>
10015094:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10015096:	2b01      	cmp	r3, #1
10015098:	4681      	mov	r9, r0
1001509a:	dd6c      	ble.n	10015176 <_dtoa_r+0xa7e>
1001509c:	f04f 0b00 	mov.w	fp, #0
100150a0:	f8d9 3010 	ldr.w	r3, [r9, #16]
100150a4:	eb09 0383 	add.w	r3, r9, r3, lsl #2
100150a8:	6918      	ldr	r0, [r3, #16]
100150aa:	f002 fa77 	bl	1001759c <__hi0bits>
100150ae:	f1c0 0020 	rsb	r0, r0, #32
100150b2:	e639      	b.n	10014d28 <_dtoa_r+0x630>
100150b4:	4b92      	ldr	r3, [pc, #584]	@ (10015300 <_dtoa_r+0xc08>)
100150b6:	9303      	str	r3, [sp, #12]
100150b8:	3303      	adds	r3, #3
100150ba:	f7ff bbfc 	b.w	100148b6 <_dtoa_r+0x1be>
100150be:	9b04      	ldr	r3, [sp, #16]
100150c0:	2b00      	cmp	r3, #0
100150c2:	f47f ae30 	bne.w	10014d26 <_dtoa_r+0x62e>
100150c6:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
100150ca:	f3c2 0313 	ubfx	r3, r2, #0, #20
100150ce:	2b00      	cmp	r3, #0
100150d0:	f47f ae29 	bne.w	10014d26 <_dtoa_r+0x62e>
100150d4:	4b8b      	ldr	r3, [pc, #556]	@ (10015304 <_dtoa_r+0xc0c>)
100150d6:	4013      	ands	r3, r2
100150d8:	b123      	cbz	r3, 100150e4 <_dtoa_r+0x9ec>
100150da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100150dc:	3301      	adds	r3, #1
100150de:	9309      	str	r3, [sp, #36]	@ 0x24
100150e0:	3401      	adds	r4, #1
100150e2:	2301      	movs	r3, #1
100150e4:	f1bb 0f00 	cmp.w	fp, #0
100150e8:	f040 81ae 	bne.w	10015448 <_dtoa_r+0xd50>
100150ec:	469b      	mov	fp, r3
100150ee:	e61a      	b.n	10014d26 <_dtoa_r+0x62e>
100150f0:	f43f ae2b 	beq.w	10014d4a <_dtoa_r+0x652>
100150f4:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
100150f8:	e6b6      	b.n	10014e68 <_dtoa_r+0x770>
100150fa:	2301      	movs	r3, #1
100150fc:	930a      	str	r3, [sp, #40]	@ 0x28
100150fe:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
10015100:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10015102:	4413      	add	r3, r2
10015104:	9316      	str	r3, [sp, #88]	@ 0x58
10015106:	3301      	adds	r3, #1
10015108:	2b01      	cmp	r3, #1
1001510a:	461e      	mov	r6, r3
1001510c:	9308      	str	r3, [sp, #32]
1001510e:	bfb8      	it	lt
10015110:	2601      	movlt	r6, #1
10015112:	2e17      	cmp	r6, #23
10015114:	f340 81d5 	ble.w	100154c2 <_dtoa_r+0xdca>
10015118:	2201      	movs	r2, #1
1001511a:	2304      	movs	r3, #4
1001511c:	005b      	lsls	r3, r3, #1
1001511e:	f103 0014 	add.w	r0, r3, #20
10015122:	42b0      	cmp	r0, r6
10015124:	4611      	mov	r1, r2
10015126:	f102 0201 	add.w	r2, r2, #1
1001512a:	d9f7      	bls.n	1001511c <_dtoa_r+0xa24>
1001512c:	9b02      	ldr	r3, [sp, #8]
1001512e:	63d9      	str	r1, [r3, #60]	@ 0x3c
10015130:	e413      	b.n	1001495a <_dtoa_r+0x262>
10015132:	2301      	movs	r3, #1
10015134:	930a      	str	r3, [sp, #40]	@ 0x28
10015136:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
10015138:	2b00      	cmp	r3, #0
1001513a:	dd33      	ble.n	100151a4 <_dtoa_r+0xaac>
1001513c:	9316      	str	r3, [sp, #88]	@ 0x58
1001513e:	9308      	str	r3, [sp, #32]
10015140:	461e      	mov	r6, r3
10015142:	e7e6      	b.n	10015112 <_dtoa_r+0xa1a>
10015144:	2300      	movs	r3, #0
10015146:	930a      	str	r3, [sp, #40]	@ 0x28
10015148:	e7d9      	b.n	100150fe <_dtoa_r+0xa06>
1001514a:	2300      	movs	r3, #0
1001514c:	930a      	str	r3, [sp, #40]	@ 0x28
1001514e:	e7f2      	b.n	10015136 <_dtoa_r+0xa3e>
10015150:	4639      	mov	r1, r7
10015152:	9802      	ldr	r0, [sp, #8]
10015154:	4632      	mov	r2, r6
10015156:	f002 fbb1 	bl	100178bc <__lshift>
1001515a:	4607      	mov	r7, r0
1001515c:	e6b9      	b.n	10014ed2 <_dtoa_r+0x7da>
1001515e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015160:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10015162:	950d      	str	r5, [sp, #52]	@ 0x34
10015164:	1aeb      	subs	r3, r5, r3
10015166:	449b      	add	fp, r3
10015168:	9b08      	ldr	r3, [sp, #32]
1001516a:	4616      	mov	r6, r2
1001516c:	441a      	add	r2, r3
1001516e:	441c      	add	r4, r3
10015170:	9209      	str	r2, [sp, #36]	@ 0x24
10015172:	2500      	movs	r5, #0
10015174:	e690      	b.n	10014e98 <_dtoa_r+0x7a0>
10015176:	9b04      	ldr	r3, [sp, #16]
10015178:	2b00      	cmp	r3, #0
1001517a:	d18f      	bne.n	1001509c <_dtoa_r+0x9a4>
1001517c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10015180:	f3c1 0313 	ubfx	r3, r1, #0, #20
10015184:	460a      	mov	r2, r1
10015186:	2b00      	cmp	r3, #0
10015188:	d188      	bne.n	1001509c <_dtoa_r+0x9a4>
1001518a:	e7a3      	b.n	100150d4 <_dtoa_r+0x9dc>
1001518c:	ed9d 7b06 	vldr	d7, [sp, #24]
10015190:	2702      	movs	r7, #2
10015192:	ed8d 7b10 	vstr	d7, [sp, #64]	@ 0x40
10015196:	e40c      	b.n	100149b2 <_dtoa_r+0x2ba>
10015198:	f47f af1b 	bne.w	10014fd2 <_dtoa_r+0x8da>
1001519c:	07da      	lsls	r2, r3, #31
1001519e:	f57f af18 	bpl.w	10014fd2 <_dtoa_r+0x8da>
100151a2:	e711      	b.n	10014fc8 <_dtoa_r+0x8d0>
100151a4:	2301      	movs	r3, #1
100151a6:	9327      	str	r3, [sp, #156]	@ 0x9c
100151a8:	9308      	str	r3, [sp, #32]
100151aa:	f7ff bbd1 	b.w	10014950 <_dtoa_r+0x258>
100151ae:	d103      	bne.n	100151b8 <_dtoa_r+0xac0>
100151b0:	9b04      	ldr	r3, [sp, #16]
100151b2:	07db      	lsls	r3, r3, #31
100151b4:	f53f ae18 	bmi.w	10014de8 <_dtoa_r+0x6f0>
100151b8:	465e      	mov	r6, fp
100151ba:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
100151be:	2b30      	cmp	r3, #48	@ 0x30
100151c0:	d0fa      	beq.n	100151b8 <_dtoa_r+0xac0>
100151c2:	e620      	b.n	10014e06 <_dtoa_r+0x70e>
100151c4:	9a03      	ldr	r2, [sp, #12]
100151c6:	2331      	movs	r3, #49	@ 0x31
100151c8:	3501      	adds	r5, #1
100151ca:	7013      	strb	r3, [r2, #0]
100151cc:	e61b      	b.n	10014e06 <_dtoa_r+0x70e>
100151ce:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
100151d0:	2a00      	cmp	r2, #0
100151d2:	f000 80f9 	beq.w	100153c8 <_dtoa_r+0xcd0>
100151d6:	f203 4333 	addw	r3, r3, #1075	@ 0x433
100151da:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100151dc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
100151de:	4616      	mov	r6, r2
100151e0:	441a      	add	r2, r3
100151e2:	441c      	add	r4, r3
100151e4:	9209      	str	r2, [sp, #36]	@ 0x24
100151e6:	e657      	b.n	10014e98 <_dtoa_r+0x7a0>
100151e8:	f1c8 0301 	rsb	r3, r8, #1
100151ec:	4604      	mov	r4, r0
100151ee:	9309      	str	r3, [sp, #36]	@ 0x24
100151f0:	900e      	str	r0, [sp, #56]	@ 0x38
100151f2:	f7ff bb9d 	b.w	10014930 <_dtoa_r+0x238>
100151f6:	f000 80eb 	beq.w	100153d0 <_dtoa_r+0xcd8>
100151fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100151fc:	4d42      	ldr	r5, [pc, #264]	@ (10015308 <_dtoa_r+0xc10>)
100151fe:	425e      	negs	r6, r3
10015200:	f006 030f 	and.w	r3, r6, #15
10015204:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10015208:	e9d3 2300 	ldrd	r2, r3, [r3]
1001520c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10015210:	f003 f9fc 	bl	1001860c <__aeabi_dmul>
10015214:	1135      	asrs	r5, r6, #4
10015216:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
1001521a:	f000 814d 	beq.w	100154b8 <_dtoa_r+0xdc0>
1001521e:	4e3b      	ldr	r6, [pc, #236]	@ (1001530c <_dtoa_r+0xc14>)
10015220:	2300      	movs	r3, #0
10015222:	2702      	movs	r7, #2
10015224:	4680      	mov	r8, r0
10015226:	4689      	mov	r9, r1
10015228:	07e8      	lsls	r0, r5, #31
1001522a:	d509      	bpl.n	10015240 <_dtoa_r+0xb48>
1001522c:	e9d6 2300 	ldrd	r2, r3, [r6]
10015230:	4640      	mov	r0, r8
10015232:	4649      	mov	r1, r9
10015234:	f003 f9ea 	bl	1001860c <__aeabi_dmul>
10015238:	3701      	adds	r7, #1
1001523a:	4680      	mov	r8, r0
1001523c:	4689      	mov	r9, r1
1001523e:	2301      	movs	r3, #1
10015240:	106d      	asrs	r5, r5, #1
10015242:	f106 0608 	add.w	r6, r6, #8
10015246:	d1ef      	bne.n	10015228 <_dtoa_r+0xb30>
10015248:	2b00      	cmp	r3, #0
1001524a:	f47f abcb 	bne.w	100149e4 <_dtoa_r+0x2ec>
1001524e:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10015252:	f7ff bbc7 	b.w	100149e4 <_dtoa_r+0x2ec>
10015256:	9e03      	ldr	r6, [sp, #12]
10015258:	e4cb      	b.n	10014bf2 <_dtoa_r+0x4fa>
1001525a:	f8dd a018 	ldr.w	sl, [sp, #24]
1001525e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10015260:	4602      	mov	r2, r0
10015262:	460b      	mov	r3, r1
10015264:	f003 f81c 	bl	100182a0 <__adddf3>
10015268:	4602      	mov	r2, r0
1001526a:	460b      	mov	r3, r1
1001526c:	e9cd 2306 	strd	r2, r3, [sp, #24]
10015270:	3501      	adds	r5, #1
10015272:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10015276:	46a8      	mov	r8, r5
10015278:	f003 fc58 	bl	10018b2c <__aeabi_dcmpgt>
1001527c:	b940      	cbnz	r0, 10015290 <_dtoa_r+0xb98>
1001527e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10015282:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10015286:	f003 fc29 	bl	10018adc <__aeabi_dcmpeq>
1001528a:	b118      	cbz	r0, 10015294 <_dtoa_r+0xb9c>
1001528c:	07f1      	lsls	r1, r6, #31
1001528e:	d501      	bpl.n	10015294 <_dtoa_r+0xb9c>
10015290:	9a03      	ldr	r2, [sp, #12]
10015292:	e44b      	b.n	10014b2c <_dtoa_r+0x434>
10015294:	463e      	mov	r6, r7
10015296:	e5c8      	b.n	10014e2a <_dtoa_r+0x732>
10015298:	6879      	ldr	r1, [r7, #4]
1001529a:	9802      	ldr	r0, [sp, #8]
1001529c:	f002 f8fe 	bl	1001749c <_Balloc>
100152a0:	4605      	mov	r5, r0
100152a2:	2800      	cmp	r0, #0
100152a4:	f000 8126 	beq.w	100154f4 <_dtoa_r+0xdfc>
100152a8:	693b      	ldr	r3, [r7, #16]
100152aa:	3302      	adds	r3, #2
100152ac:	009a      	lsls	r2, r3, #2
100152ae:	f107 010c 	add.w	r1, r7, #12
100152b2:	300c      	adds	r0, #12
100152b4:	f7fe fff4 	bl	100142a0 <memcpy>
100152b8:	9802      	ldr	r0, [sp, #8]
100152ba:	4629      	mov	r1, r5
100152bc:	2201      	movs	r2, #1
100152be:	f002 fafd 	bl	100178bc <__lshift>
100152c2:	4680      	mov	r8, r0
100152c4:	e60a      	b.n	10014edc <_dtoa_r+0x7e4>
100152c6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
100152c8:	463c      	mov	r4, r7
100152ca:	3501      	adds	r5, #1
100152cc:	4647      	mov	r7, r8
100152ce:	e57e      	b.n	10014dce <_dtoa_r+0x6d6>
100152d0:	f8dd 8008 	ldr.w	r8, [sp, #8]
100152d4:	4639      	mov	r1, r7
100152d6:	462a      	mov	r2, r5
100152d8:	4640      	mov	r0, r8
100152da:	f002 fa95 	bl	10017808 <__pow5mult>
100152de:	4652      	mov	r2, sl
100152e0:	4601      	mov	r1, r0
100152e2:	4607      	mov	r7, r0
100152e4:	4640      	mov	r0, r8
100152e6:	f002 f9d9 	bl	1001769c <__multiply>
100152ea:	4651      	mov	r1, sl
100152ec:	4682      	mov	sl, r0
100152ee:	4640      	mov	r0, r8
100152f0:	f002 f8fa 	bl	100174e8 <_Bfree>
100152f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100152f6:	1b5b      	subs	r3, r3, r5
100152f8:	930d      	str	r3, [sp, #52]	@ 0x34
100152fa:	f43f ad07 	beq.w	10014d0c <_dtoa_r+0x614>
100152fe:	e4ff      	b.n	10014d00 <_dtoa_r+0x608>
10015300:	10019340 	.word	0x10019340
10015304:	7ff00000 	.word	0x7ff00000
10015308:	10019478 	.word	0x10019478
1001530c:	10019450 	.word	0x10019450
10015310:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
10015314:	f003 f97a 	bl	1001860c <__aeabi_dmul>
10015318:	9b03      	ldr	r3, [sp, #12]
1001531a:	701f      	strb	r7, [r3, #0]
1001531c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001531e:	2b01      	cmp	r3, #1
10015320:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
10015324:	f000 80c6 	beq.w	100154b4 <_dtoa_r+0xdbc>
10015328:	9f10      	ldr	r7, [sp, #64]	@ 0x40
1001532a:	9b03      	ldr	r3, [sp, #12]
1001532c:	f8cd b03c 	str.w	fp, [sp, #60]	@ 0x3c
10015330:	441f      	add	r7, r3
10015332:	4b7c      	ldr	r3, [pc, #496]	@ (10015524 <_dtoa_r+0xe2c>)
10015334:	2200      	movs	r2, #0
10015336:	4640      	mov	r0, r8
10015338:	4649      	mov	r1, r9
1001533a:	f003 f967 	bl	1001860c <__aeabi_dmul>
1001533e:	4689      	mov	r9, r1
10015340:	4680      	mov	r8, r0
10015342:	f003 fc13 	bl	10018b6c <__aeabi_d2iz>
10015346:	4683      	mov	fp, r0
10015348:	f003 f8f6 	bl	10018538 <__aeabi_i2d>
1001534c:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
10015350:	4602      	mov	r2, r0
10015352:	460b      	mov	r3, r1
10015354:	4640      	mov	r0, r8
10015356:	4649      	mov	r1, r9
10015358:	f002 ffa0 	bl	1001829c <__aeabi_dsub>
1001535c:	f806 bb01 	strb.w	fp, [r6], #1
10015360:	42b7      	cmp	r7, r6
10015362:	4680      	mov	r8, r0
10015364:	4689      	mov	r9, r1
10015366:	d1e4      	bne.n	10015332 <_dtoa_r+0xc3a>
10015368:	f8dd b03c 	ldr.w	fp, [sp, #60]	@ 0x3c
1001536c:	4b6e      	ldr	r3, [pc, #440]	@ (10015528 <_dtoa_r+0xe30>)
1001536e:	2200      	movs	r2, #0
10015370:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
10015374:	f002 ff94 	bl	100182a0 <__adddf3>
10015378:	4602      	mov	r2, r0
1001537a:	460b      	mov	r3, r1
1001537c:	4640      	mov	r0, r8
1001537e:	4649      	mov	r1, r9
10015380:	f003 fbd4 	bl	10018b2c <__aeabi_dcmpgt>
10015384:	2800      	cmp	r0, #0
10015386:	d167      	bne.n	10015458 <_dtoa_r+0xd60>
10015388:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
1001538c:	4966      	ldr	r1, [pc, #408]	@ (10015528 <_dtoa_r+0xe30>)
1001538e:	2000      	movs	r0, #0
10015390:	f002 ff84 	bl	1001829c <__aeabi_dsub>
10015394:	4602      	mov	r2, r0
10015396:	460b      	mov	r3, r1
10015398:	4640      	mov	r0, r8
1001539a:	4649      	mov	r1, r9
1001539c:	f003 fba8 	bl	10018af0 <__aeabi_dcmplt>
100153a0:	b948      	cbnz	r0, 100153b6 <_dtoa_r+0xcbe>
100153a2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
100153a4:	2b00      	cmp	r3, #0
100153a6:	f6ff ac93 	blt.w	10014cd0 <_dtoa_r+0x5d8>
100153aa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100153ac:	2b0e      	cmp	r3, #14
100153ae:	f73f ac8f 	bgt.w	10014cd0 <_dtoa_r+0x5d8>
100153b2:	f7ff bbfd 	b.w	10014bb0 <_dtoa_r+0x4b8>
100153b6:	463e      	mov	r6, r7
100153b8:	3f01      	subs	r7, #1
100153ba:	f816 3c01 	ldrb.w	r3, [r6, #-1]
100153be:	2b30      	cmp	r3, #48	@ 0x30
100153c0:	d0f9      	beq.n	100153b6 <_dtoa_r+0xcbe>
100153c2:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
100153c4:	3501      	adds	r5, #1
100153c6:	e530      	b.n	10014e2a <_dtoa_r+0x732>
100153c8:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
100153ca:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
100153ce:	e704      	b.n	100151da <_dtoa_r+0xae2>
100153d0:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
100153d4:	2702      	movs	r7, #2
100153d6:	f7ff bb05 	b.w	100149e4 <_dtoa_r+0x2ec>
100153da:	9b08      	ldr	r3, [sp, #32]
100153dc:	2b00      	cmp	r3, #0
100153de:	f43f abb9 	beq.w	10014b54 <_dtoa_r+0x45c>
100153e2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
100153e4:	2b00      	cmp	r3, #0
100153e6:	f77f abda 	ble.w	10014b9e <_dtoa_r+0x4a6>
100153ea:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
100153ec:	9310      	str	r3, [sp, #64]	@ 0x40
100153ee:	3a01      	subs	r2, #1
100153f0:	4b4c      	ldr	r3, [pc, #304]	@ (10015524 <_dtoa_r+0xe2c>)
100153f2:	9217      	str	r2, [sp, #92]	@ 0x5c
100153f4:	4640      	mov	r0, r8
100153f6:	2200      	movs	r2, #0
100153f8:	4649      	mov	r1, r9
100153fa:	f003 f907 	bl	1001860c <__aeabi_dmul>
100153fe:	4680      	mov	r8, r0
10015400:	4689      	mov	r9, r1
10015402:	1c78      	adds	r0, r7, #1
10015404:	f003 f898 	bl	10018538 <__aeabi_i2d>
10015408:	4642      	mov	r2, r8
1001540a:	464b      	mov	r3, r9
1001540c:	f003 f8fe 	bl	1001860c <__aeabi_dmul>
10015410:	4b46      	ldr	r3, [pc, #280]	@ (1001552c <_dtoa_r+0xe34>)
10015412:	2200      	movs	r2, #0
10015414:	f002 ff44 	bl	100182a0 <__adddf3>
10015418:	4606      	mov	r6, r0
1001541a:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001541e:	f7ff bb02 	b.w	10014a26 <_dtoa_r+0x32e>
10015422:	f108 0801 	add.w	r8, r8, #1
10015426:	2331      	movs	r3, #49	@ 0x31
10015428:	f7ff bb87 	b.w	10014b3a <_dtoa_r+0x442>
1001542c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
1001542e:	9a03      	ldr	r2, [sp, #12]
10015430:	46b3      	mov	fp, r6
10015432:	2339      	movs	r3, #57	@ 0x39
10015434:	463c      	mov	r4, r7
10015436:	f80b 3b01 	strb.w	r3, [fp], #1
1001543a:	3501      	adds	r5, #1
1001543c:	4647      	mov	r7, r8
1001543e:	e4d8      	b.n	10014df2 <_dtoa_r+0x6fa>
10015440:	f04f 0900 	mov.w	r9, #0
10015444:	464f      	mov	r7, r9
10015446:	e5f6      	b.n	10015036 <_dtoa_r+0x93e>
10015448:	469b      	mov	fp, r3
1001544a:	e629      	b.n	100150a0 <_dtoa_r+0x9a8>
1001544c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001544e:	4616      	mov	r6, r2
10015450:	441a      	add	r2, r3
10015452:	441c      	add	r4, r3
10015454:	9209      	str	r2, [sp, #36]	@ 0x24
10015456:	e51f      	b.n	10014e98 <_dtoa_r+0x7a0>
10015458:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001545a:	9a03      	ldr	r2, [sp, #12]
1001545c:	f103 0801 	add.w	r8, r3, #1
10015460:	f7ff bb64 	b.w	10014b2c <_dtoa_r+0x434>
10015464:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
10015468:	e7ab      	b.n	100153c2 <_dtoa_r+0xcca>
1001546a:	e9dd b418 	ldrd	fp, r4, [sp, #96]	@ 0x60
1001546e:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
10015472:	f7ff bb94 	b.w	10014b9e <_dtoa_r+0x4a6>
10015476:	2b39      	cmp	r3, #57	@ 0x39
10015478:	d0d8      	beq.n	1001542c <_dtoa_r+0xd34>
1001547a:	2d00      	cmp	r5, #0
1001547c:	f73f ada7 	bgt.w	10014fce <_dtoa_r+0x8d6>
10015480:	e5a7      	b.n	10014fd2 <_dtoa_r+0x8da>
10015482:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10015484:	2b02      	cmp	r3, #2
10015486:	dc0a      	bgt.n	1001549e <_dtoa_r+0xda6>
10015488:	9b16      	ldr	r3, [sp, #88]	@ 0x58
1001548a:	9308      	str	r3, [sp, #32]
1001548c:	4649      	mov	r1, r9
1001548e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10015490:	f7ff f89c 	bl	100145cc <quorem>
10015494:	9a03      	ldr	r2, [sp, #12]
10015496:	f100 0330 	add.w	r3, r0, #48	@ 0x30
1001549a:	7013      	strb	r3, [r2, #0]
1001549c:	e48d      	b.n	10014dba <_dtoa_r+0x6c2>
1001549e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
100154a0:	9308      	str	r3, [sp, #32]
100154a2:	950c      	str	r5, [sp, #48]	@ 0x30
100154a4:	e5b6      	b.n	10015014 <_dtoa_r+0x91c>
100154a6:	9b26      	ldr	r3, [sp, #152]	@ 0x98
100154a8:	2b02      	cmp	r3, #2
100154aa:	dcf8      	bgt.n	1001549e <_dtoa_r+0xda6>
100154ac:	9b16      	ldr	r3, [sp, #88]	@ 0x58
100154ae:	950c      	str	r5, [sp, #48]	@ 0x30
100154b0:	9308      	str	r3, [sp, #32]
100154b2:	e50b      	b.n	10014ecc <_dtoa_r+0x7d4>
100154b4:	4637      	mov	r7, r6
100154b6:	e759      	b.n	1001536c <_dtoa_r+0xc74>
100154b8:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
100154bc:	2702      	movs	r7, #2
100154be:	f7ff ba91 	b.w	100149e4 <_dtoa_r+0x2ec>
100154c2:	9b02      	ldr	r3, [sp, #8]
100154c4:	2100      	movs	r1, #0
100154c6:	63d9      	str	r1, [r3, #60]	@ 0x3c
100154c8:	f7ff ba47 	b.w	1001495a <_dtoa_r+0x262>
100154cc:	9b02      	ldr	r3, [sp, #8]
100154ce:	2500      	movs	r5, #0
100154d0:	63dd      	str	r5, [r3, #60]	@ 0x3c
100154d2:	4629      	mov	r1, r5
100154d4:	4618      	mov	r0, r3
100154d6:	f001 ffe1 	bl	1001749c <_Balloc>
100154da:	9003      	str	r0, [sp, #12]
100154dc:	b9a8      	cbnz	r0, 1001550a <_dtoa_r+0xe12>
100154de:	4b14      	ldr	r3, [pc, #80]	@ (10015530 <_dtoa_r+0xe38>)
100154e0:	4814      	ldr	r0, [pc, #80]	@ (10015534 <_dtoa_r+0xe3c>)
100154e2:	2200      	movs	r2, #0
100154e4:	f240 11af 	movw	r1, #431	@ 0x1af
100154e8:	f002 fd88 	bl	10017ffc <__assert_func>
100154ec:	2a00      	cmp	r2, #0
100154ee:	f77f ad70 	ble.w	10014fd2 <_dtoa_r+0x8da>
100154f2:	e55b      	b.n	10014fac <_dtoa_r+0x8b4>
100154f4:	4b0e      	ldr	r3, [pc, #56]	@ (10015530 <_dtoa_r+0xe38>)
100154f6:	480f      	ldr	r0, [pc, #60]	@ (10015534 <_dtoa_r+0xe3c>)
100154f8:	462a      	mov	r2, r5
100154fa:	f240 21ef 	movw	r1, #751	@ 0x2ef
100154fe:	f002 fd7d 	bl	10017ffc <__assert_func>
10015502:	4b0d      	ldr	r3, [pc, #52]	@ (10015538 <_dtoa_r+0xe40>)
10015504:	9303      	str	r3, [sp, #12]
10015506:	f7ff b932 	b.w	1001476e <_dtoa_r+0x76>
1001550a:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
1001550e:	639a      	str	r2, [r3, #56]	@ 0x38
10015510:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10015514:	2201      	movs	r2, #1
10015516:	9527      	str	r5, [sp, #156]	@ 0x9c
10015518:	9316      	str	r3, [sp, #88]	@ 0x58
1001551a:	920a      	str	r2, [sp, #40]	@ 0x28
1001551c:	9308      	str	r3, [sp, #32]
1001551e:	f7ff bb3e 	b.w	10014b9e <_dtoa_r+0x4a6>
10015522:	bf00      	nop
10015524:	40240000 	.word	0x40240000
10015528:	3fe00000 	.word	0x3fe00000
1001552c:	401c0000 	.word	0x401c0000
10015530:	10019344 	.word	0x10019344
10015534:	10019358 	.word	0x10019358
10015538:	10019334 	.word	0x10019334

1001553c <_malloc_trim_r>:
1001553c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10015540:	4606      	mov	r6, r0
10015542:	2008      	movs	r0, #8
10015544:	4689      	mov	r9, r1
10015546:	f7fe fe19 	bl	1001417c <sysconf>
1001554a:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 100155f0 <_malloc_trim_r+0xb4>
1001554e:	4605      	mov	r5, r0
10015550:	4630      	mov	r0, r6
10015552:	f7fd fe4d 	bl	100131f0 <__malloc_lock>
10015556:	f8d8 3008 	ldr.w	r3, [r8, #8]
1001555a:	685f      	ldr	r7, [r3, #4]
1001555c:	f027 0703 	bic.w	r7, r7, #3
10015560:	f1a7 0411 	sub.w	r4, r7, #17
10015564:	eba4 0409 	sub.w	r4, r4, r9
10015568:	442c      	add	r4, r5
1001556a:	fbb4 f4f5 	udiv	r4, r4, r5
1001556e:	3c01      	subs	r4, #1
10015570:	fb05 f404 	mul.w	r4, r5, r4
10015574:	42a5      	cmp	r5, r4
10015576:	dc08      	bgt.n	1001558a <_malloc_trim_r+0x4e>
10015578:	2100      	movs	r1, #0
1001557a:	4630      	mov	r0, r6
1001557c:	f7fe fde6 	bl	1001414c <_sbrk_r>
10015580:	f8d8 3008 	ldr.w	r3, [r8, #8]
10015584:	443b      	add	r3, r7
10015586:	4298      	cmp	r0, r3
10015588:	d005      	beq.n	10015596 <_malloc_trim_r+0x5a>
1001558a:	4630      	mov	r0, r6
1001558c:	f7fd fe36 	bl	100131fc <__malloc_unlock>
10015590:	2000      	movs	r0, #0
10015592:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10015596:	4261      	negs	r1, r4
10015598:	4630      	mov	r0, r6
1001559a:	f7fe fdd7 	bl	1001414c <_sbrk_r>
1001559e:	3001      	adds	r0, #1
100155a0:	d00f      	beq.n	100155c2 <_malloc_trim_r+0x86>
100155a2:	4a11      	ldr	r2, [pc, #68]	@ (100155e8 <_malloc_trim_r+0xac>)
100155a4:	f8d8 3008 	ldr.w	r3, [r8, #8]
100155a8:	1b3f      	subs	r7, r7, r4
100155aa:	f047 0701 	orr.w	r7, r7, #1
100155ae:	605f      	str	r7, [r3, #4]
100155b0:	6813      	ldr	r3, [r2, #0]
100155b2:	4630      	mov	r0, r6
100155b4:	1b1b      	subs	r3, r3, r4
100155b6:	6013      	str	r3, [r2, #0]
100155b8:	f7fd fe20 	bl	100131fc <__malloc_unlock>
100155bc:	2001      	movs	r0, #1
100155be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
100155c2:	2100      	movs	r1, #0
100155c4:	4630      	mov	r0, r6
100155c6:	f7fe fdc1 	bl	1001414c <_sbrk_r>
100155ca:	f8d8 2008 	ldr.w	r2, [r8, #8]
100155ce:	1a83      	subs	r3, r0, r2
100155d0:	2b0f      	cmp	r3, #15
100155d2:	ddda      	ble.n	1001558a <_malloc_trim_r+0x4e>
100155d4:	f043 0301 	orr.w	r3, r3, #1
100155d8:	6053      	str	r3, [r2, #4]
100155da:	4b04      	ldr	r3, [pc, #16]	@ (100155ec <_malloc_trim_r+0xb0>)
100155dc:	4902      	ldr	r1, [pc, #8]	@ (100155e8 <_malloc_trim_r+0xac>)
100155de:	681b      	ldr	r3, [r3, #0]
100155e0:	1ac0      	subs	r0, r0, r3
100155e2:	6008      	str	r0, [r1, #0]
100155e4:	e7d1      	b.n	1001558a <_malloc_trim_r+0x4e>
100155e6:	bf00      	nop
100155e8:	2000102c 	.word	0x2000102c
100155ec:	20000038 	.word	0x20000038
100155f0:	20000040 	.word	0x20000040

100155f4 <_free_r>:
100155f4:	2900      	cmp	r1, #0
100155f6:	d07c      	beq.n	100156f2 <_free_r+0xfe>
100155f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100155fc:	460c      	mov	r4, r1
100155fe:	4680      	mov	r8, r0
10015600:	f7fd fdf6 	bl	100131f0 <__malloc_lock>
10015604:	f854 3c04 	ldr.w	r3, [r4, #-4]
10015608:	4f76      	ldr	r7, [pc, #472]	@ (100157e4 <_free_r+0x1f0>)
1001560a:	f1a4 0508 	sub.w	r5, r4, #8
1001560e:	f023 0101 	bic.w	r1, r3, #1
10015612:	1868      	adds	r0, r5, r1
10015614:	68be      	ldr	r6, [r7, #8]
10015616:	6842      	ldr	r2, [r0, #4]
10015618:	4286      	cmp	r6, r0
1001561a:	f022 0203 	bic.w	r2, r2, #3
1001561e:	f000 8083 	beq.w	10015728 <_free_r+0x134>
10015622:	07de      	lsls	r6, r3, #31
10015624:	6042      	str	r2, [r0, #4]
10015626:	eb00 0c02 	add.w	ip, r0, r2
1001562a:	d433      	bmi.n	10015694 <_free_r+0xa0>
1001562c:	f854 4c08 	ldr.w	r4, [r4, #-8]
10015630:	f8dc 3004 	ldr.w	r3, [ip, #4]
10015634:	1b2d      	subs	r5, r5, r4
10015636:	4421      	add	r1, r4
10015638:	68ac      	ldr	r4, [r5, #8]
1001563a:	f107 0c08 	add.w	ip, r7, #8
1001563e:	4564      	cmp	r4, ip
10015640:	f003 0301 	and.w	r3, r3, #1
10015644:	d064      	beq.n	10015710 <_free_r+0x11c>
10015646:	f8d5 e00c 	ldr.w	lr, [r5, #12]
1001564a:	f8c4 e00c 	str.w	lr, [r4, #12]
1001564e:	f8ce 4008 	str.w	r4, [lr, #8]
10015652:	2b00      	cmp	r3, #0
10015654:	f000 8081 	beq.w	1001575a <_free_r+0x166>
10015658:	f041 0301 	orr.w	r3, r1, #1
1001565c:	606b      	str	r3, [r5, #4]
1001565e:	6001      	str	r1, [r0, #0]
10015660:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10015664:	d222      	bcs.n	100156ac <_free_r+0xb8>
10015666:	6878      	ldr	r0, [r7, #4]
10015668:	08cb      	lsrs	r3, r1, #3
1001566a:	2201      	movs	r2, #1
1001566c:	0949      	lsrs	r1, r1, #5
1001566e:	3301      	adds	r3, #1
10015670:	408a      	lsls	r2, r1
10015672:	4302      	orrs	r2, r0
10015674:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
10015678:	607a      	str	r2, [r7, #4]
1001567a:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
1001567e:	3a08      	subs	r2, #8
10015680:	e9c5 1202 	strd	r1, r2, [r5, #8]
10015684:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
10015688:	60cd      	str	r5, [r1, #12]
1001568a:	4640      	mov	r0, r8
1001568c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10015690:	f7fd bdb4 	b.w	100131fc <__malloc_unlock>
10015694:	f8dc 3004 	ldr.w	r3, [ip, #4]
10015698:	07db      	lsls	r3, r3, #31
1001569a:	d52b      	bpl.n	100156f4 <_free_r+0x100>
1001569c:	f041 0301 	orr.w	r3, r1, #1
100156a0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
100156a4:	f844 3c04 	str.w	r3, [r4, #-4]
100156a8:	6001      	str	r1, [r0, #0]
100156aa:	d3dc      	bcc.n	10015666 <_free_r+0x72>
100156ac:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
100156b0:	ea4f 2351 	mov.w	r3, r1, lsr #9
100156b4:	d253      	bcs.n	1001575e <_free_r+0x16a>
100156b6:	098b      	lsrs	r3, r1, #6
100156b8:	f103 0039 	add.w	r0, r3, #57	@ 0x39
100156bc:	f103 0238 	add.w	r2, r3, #56	@ 0x38
100156c0:	00c3      	lsls	r3, r0, #3
100156c2:	18f8      	adds	r0, r7, r3
100156c4:	58fb      	ldr	r3, [r7, r3]
100156c6:	3808      	subs	r0, #8
100156c8:	4298      	cmp	r0, r3
100156ca:	d103      	bne.n	100156d4 <_free_r+0xe0>
100156cc:	e063      	b.n	10015796 <_free_r+0x1a2>
100156ce:	689b      	ldr	r3, [r3, #8]
100156d0:	4298      	cmp	r0, r3
100156d2:	d004      	beq.n	100156de <_free_r+0xea>
100156d4:	685a      	ldr	r2, [r3, #4]
100156d6:	f022 0203 	bic.w	r2, r2, #3
100156da:	428a      	cmp	r2, r1
100156dc:	d8f7      	bhi.n	100156ce <_free_r+0xda>
100156de:	68d8      	ldr	r0, [r3, #12]
100156e0:	e9c5 3002 	strd	r3, r0, [r5, #8]
100156e4:	6085      	str	r5, [r0, #8]
100156e6:	60dd      	str	r5, [r3, #12]
100156e8:	4640      	mov	r0, r8
100156ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
100156ee:	f7fd bd85 	b.w	100131fc <__malloc_unlock>
100156f2:	4770      	bx	lr
100156f4:	4411      	add	r1, r2
100156f6:	f107 0c08 	add.w	ip, r7, #8
100156fa:	6883      	ldr	r3, [r0, #8]
100156fc:	4563      	cmp	r3, ip
100156fe:	d03f      	beq.n	10015780 <_free_r+0x18c>
10015700:	68c2      	ldr	r2, [r0, #12]
10015702:	60da      	str	r2, [r3, #12]
10015704:	6093      	str	r3, [r2, #8]
10015706:	f041 0301 	orr.w	r3, r1, #1
1001570a:	606b      	str	r3, [r5, #4]
1001570c:	5069      	str	r1, [r5, r1]
1001570e:	e7a7      	b.n	10015660 <_free_r+0x6c>
10015710:	2b00      	cmp	r3, #0
10015712:	d161      	bne.n	100157d8 <_free_r+0x1e4>
10015714:	440a      	add	r2, r1
10015716:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
1001571a:	60cb      	str	r3, [r1, #12]
1001571c:	6099      	str	r1, [r3, #8]
1001571e:	f042 0301 	orr.w	r3, r2, #1
10015722:	606b      	str	r3, [r5, #4]
10015724:	50aa      	str	r2, [r5, r2]
10015726:	e7b0      	b.n	1001568a <_free_r+0x96>
10015728:	07db      	lsls	r3, r3, #31
1001572a:	440a      	add	r2, r1
1001572c:	d407      	bmi.n	1001573e <_free_r+0x14a>
1001572e:	f854 3c08 	ldr.w	r3, [r4, #-8]
10015732:	1aed      	subs	r5, r5, r3
10015734:	441a      	add	r2, r3
10015736:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
1001573a:	60cb      	str	r3, [r1, #12]
1001573c:	6099      	str	r1, [r3, #8]
1001573e:	f042 0301 	orr.w	r3, r2, #1
10015742:	606b      	str	r3, [r5, #4]
10015744:	4b28      	ldr	r3, [pc, #160]	@ (100157e8 <_free_r+0x1f4>)
10015746:	60bd      	str	r5, [r7, #8]
10015748:	681b      	ldr	r3, [r3, #0]
1001574a:	4293      	cmp	r3, r2
1001574c:	d89d      	bhi.n	1001568a <_free_r+0x96>
1001574e:	4b27      	ldr	r3, [pc, #156]	@ (100157ec <_free_r+0x1f8>)
10015750:	4640      	mov	r0, r8
10015752:	6819      	ldr	r1, [r3, #0]
10015754:	f7ff fef2 	bl	1001553c <_malloc_trim_r>
10015758:	e797      	b.n	1001568a <_free_r+0x96>
1001575a:	4411      	add	r1, r2
1001575c:	e7cd      	b.n	100156fa <_free_r+0x106>
1001575e:	2b14      	cmp	r3, #20
10015760:	d908      	bls.n	10015774 <_free_r+0x180>
10015762:	2b54      	cmp	r3, #84	@ 0x54
10015764:	d81f      	bhi.n	100157a6 <_free_r+0x1b2>
10015766:	0b0b      	lsrs	r3, r1, #12
10015768:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
1001576c:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
10015770:	00c3      	lsls	r3, r0, #3
10015772:	e7a6      	b.n	100156c2 <_free_r+0xce>
10015774:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
10015778:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
1001577c:	00c3      	lsls	r3, r0, #3
1001577e:	e7a0      	b.n	100156c2 <_free_r+0xce>
10015780:	f041 0301 	orr.w	r3, r1, #1
10015784:	613d      	str	r5, [r7, #16]
10015786:	617d      	str	r5, [r7, #20]
10015788:	f8c5 c008 	str.w	ip, [r5, #8]
1001578c:	f8c5 c00c 	str.w	ip, [r5, #12]
10015790:	606b      	str	r3, [r5, #4]
10015792:	5069      	str	r1, [r5, r1]
10015794:	e779      	b.n	1001568a <_free_r+0x96>
10015796:	6879      	ldr	r1, [r7, #4]
10015798:	1092      	asrs	r2, r2, #2
1001579a:	2401      	movs	r4, #1
1001579c:	fa04 f202 	lsl.w	r2, r4, r2
100157a0:	430a      	orrs	r2, r1
100157a2:	607a      	str	r2, [r7, #4]
100157a4:	e79c      	b.n	100156e0 <_free_r+0xec>
100157a6:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
100157aa:	d806      	bhi.n	100157ba <_free_r+0x1c6>
100157ac:	0bcb      	lsrs	r3, r1, #15
100157ae:	f103 0078 	add.w	r0, r3, #120	@ 0x78
100157b2:	f103 0277 	add.w	r2, r3, #119	@ 0x77
100157b6:	00c3      	lsls	r3, r0, #3
100157b8:	e783      	b.n	100156c2 <_free_r+0xce>
100157ba:	f240 5254 	movw	r2, #1364	@ 0x554
100157be:	4293      	cmp	r3, r2
100157c0:	d806      	bhi.n	100157d0 <_free_r+0x1dc>
100157c2:	0c8b      	lsrs	r3, r1, #18
100157c4:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
100157c8:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
100157cc:	00c3      	lsls	r3, r0, #3
100157ce:	e778      	b.n	100156c2 <_free_r+0xce>
100157d0:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100157d4:	227e      	movs	r2, #126	@ 0x7e
100157d6:	e774      	b.n	100156c2 <_free_r+0xce>
100157d8:	f041 0301 	orr.w	r3, r1, #1
100157dc:	606b      	str	r3, [r5, #4]
100157de:	6001      	str	r1, [r0, #0]
100157e0:	e753      	b.n	1001568a <_free_r+0x96>
100157e2:	bf00      	nop
100157e4:	20000040 	.word	0x20000040
100157e8:	2000003c 	.word	0x2000003c
100157ec:	2000105c 	.word	0x2000105c

100157f0 <__ascii_mbtowc>:
100157f0:	b082      	sub	sp, #8
100157f2:	b149      	cbz	r1, 10015808 <__ascii_mbtowc+0x18>
100157f4:	b15a      	cbz	r2, 1001580e <__ascii_mbtowc+0x1e>
100157f6:	b16b      	cbz	r3, 10015814 <__ascii_mbtowc+0x24>
100157f8:	7813      	ldrb	r3, [r2, #0]
100157fa:	600b      	str	r3, [r1, #0]
100157fc:	7812      	ldrb	r2, [r2, #0]
100157fe:	1e10      	subs	r0, r2, #0
10015800:	bf18      	it	ne
10015802:	2001      	movne	r0, #1
10015804:	b002      	add	sp, #8
10015806:	4770      	bx	lr
10015808:	a901      	add	r1, sp, #4
1001580a:	2a00      	cmp	r2, #0
1001580c:	d1f3      	bne.n	100157f6 <__ascii_mbtowc+0x6>
1001580e:	4610      	mov	r0, r2
10015810:	b002      	add	sp, #8
10015812:	4770      	bx	lr
10015814:	f06f 0001 	mvn.w	r0, #1
10015818:	e7f4      	b.n	10015804 <__ascii_mbtowc+0x14>
1001581a:	bf00      	nop
1001581c:	0000      	movs	r0, r0
	...

10015820 <_svfprintf_r>:
10015820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015824:	b0df      	sub	sp, #380	@ 0x17c
10015826:	460c      	mov	r4, r1
10015828:	9109      	str	r1, [sp, #36]	@ 0x24
1001582a:	4691      	mov	r9, r2
1001582c:	930d      	str	r3, [sp, #52]	@ 0x34
1001582e:	4683      	mov	fp, r0
10015830:	f7fe fc72 	bl	10014118 <_localeconv_r>
10015834:	6803      	ldr	r3, [r0, #0]
10015836:	931a      	str	r3, [sp, #104]	@ 0x68
10015838:	4618      	mov	r0, r3
1001583a:	f7fe fde1 	bl	10014400 <strlen>
1001583e:	2208      	movs	r2, #8
10015840:	9018      	str	r0, [sp, #96]	@ 0x60
10015842:	2100      	movs	r1, #0
10015844:	a82e      	add	r0, sp, #184	@ 0xb8
10015846:	f7fe fbdb 	bl	10014000 <memset>
1001584a:	89a3      	ldrh	r3, [r4, #12]
1001584c:	061a      	lsls	r2, r3, #24
1001584e:	d503      	bpl.n	10015858 <_svfprintf_r+0x38>
10015850:	6923      	ldr	r3, [r4, #16]
10015852:	2b00      	cmp	r3, #0
10015854:	f000 8790 	beq.w	10016778 <_svfprintf_r+0xf58>
10015858:	ed9f 7b7f 	vldr	d7, [pc, #508]	@ 10015a58 <_svfprintf_r+0x238>
1001585c:	2300      	movs	r3, #0
1001585e:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10015862:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10015866:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
1001586a:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
1001586e:	aa35      	add	r2, sp, #212	@ 0xd4
10015870:	9313      	str	r3, [sp, #76]	@ 0x4c
10015872:	9232      	str	r2, [sp, #200]	@ 0xc8
10015874:	4690      	mov	r8, r2
10015876:	9319      	str	r3, [sp, #100]	@ 0x64
10015878:	930a      	str	r3, [sp, #40]	@ 0x28
1001587a:	f8cd b01c 	str.w	fp, [sp, #28]
1001587e:	464d      	mov	r5, r9
10015880:	9f07      	ldr	r7, [sp, #28]
10015882:	462e      	mov	r6, r5
10015884:	4b76      	ldr	r3, [pc, #472]	@ (10015a60 <_svfprintf_r+0x240>)
10015886:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
1001588a:	f7fe fc3f 	bl	1001410c <__locale_mb_cur_max>
1001588e:	4603      	mov	r3, r0
10015890:	a82e      	add	r0, sp, #184	@ 0xb8
10015892:	9000      	str	r0, [sp, #0]
10015894:	4632      	mov	r2, r6
10015896:	a92a      	add	r1, sp, #168	@ 0xa8
10015898:	4638      	mov	r0, r7
1001589a:	47a0      	blx	r4
1001589c:	2800      	cmp	r0, #0
1001589e:	f000 80a9 	beq.w	100159f4 <_svfprintf_r+0x1d4>
100158a2:	f2c0 809f 	blt.w	100159e4 <_svfprintf_r+0x1c4>
100158a6:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
100158a8:	2a25      	cmp	r2, #37	@ 0x25
100158aa:	4603      	mov	r3, r0
100158ac:	d001      	beq.n	100158b2 <_svfprintf_r+0x92>
100158ae:	441e      	add	r6, r3
100158b0:	e7e8      	b.n	10015884 <_svfprintf_r+0x64>
100158b2:	1b77      	subs	r7, r6, r5
100158b4:	4604      	mov	r4, r0
100158b6:	f040 80a0 	bne.w	100159fa <_svfprintf_r+0x1da>
100158ba:	2300      	movs	r3, #0
100158bc:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
100158c0:	4699      	mov	r9, r3
100158c2:	930b      	str	r3, [sp, #44]	@ 0x2c
100158c4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100158c8:	7873      	ldrb	r3, [r6, #1]
100158ca:	9208      	str	r2, [sp, #32]
100158cc:	1c74      	adds	r4, r6, #1
100158ce:	3401      	adds	r4, #1
100158d0:	f1a3 0220 	sub.w	r2, r3, #32
100158d4:	2a5a      	cmp	r2, #90	@ 0x5a
100158d6:	f200 80c5 	bhi.w	10015a64 <_svfprintf_r+0x244>
100158da:	e8df f012 	tbh	[pc, r2, lsl #1]
100158de:	02ee      	.short	0x02ee
100158e0:	00c300c3 	.word	0x00c300c3
100158e4:	00c302ea 	.word	0x00c302ea
100158e8:	00c300c3 	.word	0x00c300c3
100158ec:	00c3006a 	.word	0x00c3006a
100158f0:	025100c3 	.word	0x025100c3
100158f4:	00c30260 	.word	0x00c30260
100158f8:	02fc025c 	.word	0x02fc025c
100158fc:	02f800c3 	.word	0x02f800c3
10015900:	005b005b 	.word	0x005b005b
10015904:	005b005b 	.word	0x005b005b
10015908:	005b005b 	.word	0x005b005b
1001590c:	005b005b 	.word	0x005b005b
10015910:	00c3005b 	.word	0x00c3005b
10015914:	00c300c3 	.word	0x00c300c3
10015918:	00c300c3 	.word	0x00c300c3
1001591c:	00c300c3 	.word	0x00c300c3
10015920:	00c30144 	.word	0x00c30144
10015924:	031601d0 	.word	0x031601d0
10015928:	01440144 	.word	0x01440144
1001592c:	00c30144 	.word	0x00c30144
10015930:	00c300c3 	.word	0x00c300c3
10015934:	02e600c3 	.word	0x02e600c3
10015938:	00c300c3 	.word	0x00c300c3
1001593c:	00c30265 	.word	0x00c30265
10015940:	00c300c3 	.word	0x00c300c3
10015944:	00c301fa 	.word	0x00c301fa
10015948:	00c302d3 	.word	0x00c302d3
1001594c:	070e00c3 	.word	0x070e00c3
10015950:	00c300c3 	.word	0x00c300c3
10015954:	00c300c3 	.word	0x00c300c3
10015958:	00c300c3 	.word	0x00c300c3
1001595c:	00c300c3 	.word	0x00c300c3
10015960:	00c30144 	.word	0x00c30144
10015964:	022c01d0 	.word	0x022c01d0
10015968:	01440144 	.word	0x01440144
1001596c:	02960144 	.word	0x02960144
10015970:	007f022c 	.word	0x007f022c
10015974:	02af00c3 	.word	0x02af00c3
10015978:	02a000c3 	.word	0x02a000c3
1001597c:	02c10703 	.word	0x02c10703
10015980:	00c3007f 	.word	0x00c3007f
10015984:	007d01fa 	.word	0x007d01fa
10015988:	00c30709 	.word	0x00c30709
1001598c:	073200c3 	.word	0x073200c3
10015990:	007d00c3 	.word	0x007d00c3
10015994:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10015998:	2100      	movs	r1, #0
1001599a:	f814 3b01 	ldrb.w	r3, [r4], #1
1001599e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100159a2:	eb02 0141 	add.w	r1, r2, r1, lsl #1
100159a6:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100159aa:	2a09      	cmp	r2, #9
100159ac:	d9f5      	bls.n	1001599a <_svfprintf_r+0x17a>
100159ae:	910b      	str	r1, [sp, #44]	@ 0x2c
100159b0:	e78e      	b.n	100158d0 <_svfprintf_r+0xb0>
100159b2:	9f07      	ldr	r7, [sp, #28]
100159b4:	4638      	mov	r0, r7
100159b6:	f7fe fbaf 	bl	10014118 <_localeconv_r>
100159ba:	6843      	ldr	r3, [r0, #4]
100159bc:	931d      	str	r3, [sp, #116]	@ 0x74
100159be:	4618      	mov	r0, r3
100159c0:	f7fe fd1e 	bl	10014400 <strlen>
100159c4:	901e      	str	r0, [sp, #120]	@ 0x78
100159c6:	4606      	mov	r6, r0
100159c8:	4638      	mov	r0, r7
100159ca:	f7fe fba5 	bl	10014118 <_localeconv_r>
100159ce:	6883      	ldr	r3, [r0, #8]
100159d0:	931b      	str	r3, [sp, #108]	@ 0x6c
100159d2:	2e00      	cmp	r6, #0
100159d4:	f040 861e 	bne.w	10016614 <_svfprintf_r+0xdf4>
100159d8:	7823      	ldrb	r3, [r4, #0]
100159da:	e778      	b.n	100158ce <_svfprintf_r+0xae>
100159dc:	7823      	ldrb	r3, [r4, #0]
100159de:	f049 0920 	orr.w	r9, r9, #32
100159e2:	e774      	b.n	100158ce <_svfprintf_r+0xae>
100159e4:	2208      	movs	r2, #8
100159e6:	2100      	movs	r1, #0
100159e8:	a82e      	add	r0, sp, #184	@ 0xb8
100159ea:	f7fe fb09 	bl	10014000 <memset>
100159ee:	2301      	movs	r3, #1
100159f0:	441e      	add	r6, r3
100159f2:	e747      	b.n	10015884 <_svfprintf_r+0x64>
100159f4:	1b77      	subs	r7, r6, r5
100159f6:	4604      	mov	r4, r0
100159f8:	d011      	beq.n	10015a1e <_svfprintf_r+0x1fe>
100159fa:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
100159fc:	443b      	add	r3, r7
100159fe:	9334      	str	r3, [sp, #208]	@ 0xd0
10015a00:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10015a02:	3301      	adds	r3, #1
10015a04:	2b07      	cmp	r3, #7
10015a06:	e9c8 5700 	strd	r5, r7, [r8]
10015a0a:	9333      	str	r3, [sp, #204]	@ 0xcc
10015a0c:	dc18      	bgt.n	10015a40 <_svfprintf_r+0x220>
10015a0e:	f108 0808 	add.w	r8, r8, #8
10015a12:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10015a14:	443b      	add	r3, r7
10015a16:	930a      	str	r3, [sp, #40]	@ 0x28
10015a18:	2c00      	cmp	r4, #0
10015a1a:	f47f af4e 	bne.w	100158ba <_svfprintf_r+0x9a>
10015a1e:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10015a20:	f8dd b01c 	ldr.w	fp, [sp, #28]
10015a24:	2b00      	cmp	r3, #0
10015a26:	f041 81f3 	bne.w	10016e10 <_svfprintf_r+0x15f0>
10015a2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10015a2c:	899b      	ldrh	r3, [r3, #12]
10015a2e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10015a32:	2b00      	cmp	r3, #0
10015a34:	f041 83c3 	bne.w	100171be <_svfprintf_r+0x199e>
10015a38:	980a      	ldr	r0, [sp, #40]	@ 0x28
10015a3a:	b05f      	add	sp, #380	@ 0x17c
10015a3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015a40:	9909      	ldr	r1, [sp, #36]	@ 0x24
10015a42:	9807      	ldr	r0, [sp, #28]
10015a44:	aa32      	add	r2, sp, #200	@ 0xc8
10015a46:	f002 fb43 	bl	100180d0 <__ssprint_r>
10015a4a:	2800      	cmp	r0, #0
10015a4c:	d1ed      	bne.n	10015a2a <_svfprintf_r+0x20a>
10015a4e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015a52:	e7de      	b.n	10015a12 <_svfprintf_r+0x1f2>
10015a54:	f3af 8000 	nop.w
	...
10015a60:	20000454 	.word	0x20000454
10015a64:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015a68:	2b00      	cmp	r3, #0
10015a6a:	d0d8      	beq.n	10015a1e <_svfprintf_r+0x1fe>
10015a6c:	2200      	movs	r2, #0
10015a6e:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10015a72:	2301      	movs	r3, #1
10015a74:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10015a78:	9306      	str	r3, [sp, #24]
10015a7a:	920c      	str	r2, [sp, #48]	@ 0x30
10015a7c:	469b      	mov	fp, r3
10015a7e:	9208      	str	r2, [sp, #32]
10015a80:	9214      	str	r2, [sp, #80]	@ 0x50
10015a82:	9210      	str	r2, [sp, #64]	@ 0x40
10015a84:	9212      	str	r2, [sp, #72]	@ 0x48
10015a86:	ad45      	add	r5, sp, #276	@ 0x114
10015a88:	f019 0302 	ands.w	r3, r9, #2
10015a8c:	d002      	beq.n	10015a94 <_svfprintf_r+0x274>
10015a8e:	9906      	ldr	r1, [sp, #24]
10015a90:	3102      	adds	r1, #2
10015a92:	9106      	str	r1, [sp, #24]
10015a94:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10015a98:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10015a9a:	d105      	bne.n	10015aa8 <_svfprintf_r+0x288>
10015a9c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10015a9e:	9806      	ldr	r0, [sp, #24]
10015aa0:	1a0e      	subs	r6, r1, r0
10015aa2:	2e00      	cmp	r6, #0
10015aa4:	f300 80aa 	bgt.w	10015bfc <_svfprintf_r+0x3dc>
10015aa8:	b182      	cbz	r2, 10015acc <_svfprintf_r+0x2ac>
10015aaa:	2201      	movs	r2, #1
10015aac:	f8c8 2004 	str.w	r2, [r8, #4]
10015ab0:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10015ab2:	3201      	adds	r2, #1
10015ab4:	3401      	adds	r4, #1
10015ab6:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
10015aba:	2a07      	cmp	r2, #7
10015abc:	9434      	str	r4, [sp, #208]	@ 0xd0
10015abe:	9233      	str	r2, [sp, #204]	@ 0xcc
10015ac0:	f8c8 1000 	str.w	r1, [r8]
10015ac4:	f300 8405 	bgt.w	100162d2 <_svfprintf_r+0xab2>
10015ac8:	f108 0808 	add.w	r8, r8, #8
10015acc:	b183      	cbz	r3, 10015af0 <_svfprintf_r+0x2d0>
10015ace:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10015ad0:	aa28      	add	r2, sp, #160	@ 0xa0
10015ad2:	3301      	adds	r3, #1
10015ad4:	3402      	adds	r4, #2
10015ad6:	f8c8 2000 	str.w	r2, [r8]
10015ada:	2b07      	cmp	r3, #7
10015adc:	f04f 0202 	mov.w	r2, #2
10015ae0:	9434      	str	r4, [sp, #208]	@ 0xd0
10015ae2:	9333      	str	r3, [sp, #204]	@ 0xcc
10015ae4:	f8c8 2004 	str.w	r2, [r8, #4]
10015ae8:	f300 83e7 	bgt.w	100162ba <_svfprintf_r+0xa9a>
10015aec:	f108 0808 	add.w	r8, r8, #8
10015af0:	2f80      	cmp	r7, #128	@ 0x80
10015af2:	f000 82c0 	beq.w	10016076 <_svfprintf_r+0x856>
10015af6:	9b08      	ldr	r3, [sp, #32]
10015af8:	eba3 060b 	sub.w	r6, r3, fp
10015afc:	2e00      	cmp	r6, #0
10015afe:	f300 82ff 	bgt.w	10016100 <_svfprintf_r+0x8e0>
10015b02:	f419 7f80 	tst.w	r9, #256	@ 0x100
10015b06:	f040 8219 	bne.w	10015f3c <_svfprintf_r+0x71c>
10015b0a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10015b0c:	f8c8 5000 	str.w	r5, [r8]
10015b10:	3301      	adds	r3, #1
10015b12:	445c      	add	r4, fp
10015b14:	2b07      	cmp	r3, #7
10015b16:	f8c8 b004 	str.w	fp, [r8, #4]
10015b1a:	9434      	str	r4, [sp, #208]	@ 0xd0
10015b1c:	9333      	str	r3, [sp, #204]	@ 0xcc
10015b1e:	f300 836c 	bgt.w	100161fa <_svfprintf_r+0x9da>
10015b22:	f108 0808 	add.w	r8, r8, #8
10015b26:	f019 0f04 	tst.w	r9, #4
10015b2a:	d005      	beq.n	10015b38 <_svfprintf_r+0x318>
10015b2c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10015b2e:	9a06      	ldr	r2, [sp, #24]
10015b30:	1a9d      	subs	r5, r3, r2
10015b32:	2d00      	cmp	r5, #0
10015b34:	f300 83dc 	bgt.w	100162f0 <_svfprintf_r+0xad0>
10015b38:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10015b3c:	9906      	ldr	r1, [sp, #24]
10015b3e:	428a      	cmp	r2, r1
10015b40:	bfac      	ite	ge
10015b42:	189b      	addge	r3, r3, r2
10015b44:	185b      	addlt	r3, r3, r1
10015b46:	930a      	str	r3, [sp, #40]	@ 0x28
10015b48:	2c00      	cmp	r4, #0
10015b4a:	f040 8318 	bne.w	1001617e <_svfprintf_r+0x95e>
10015b4e:	2300      	movs	r3, #0
10015b50:	9333      	str	r3, [sp, #204]	@ 0xcc
10015b52:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10015b54:	b11b      	cbz	r3, 10015b5e <_svfprintf_r+0x33e>
10015b56:	990c      	ldr	r1, [sp, #48]	@ 0x30
10015b58:	9807      	ldr	r0, [sp, #28]
10015b5a:	f7ff fd4b 	bl	100155f4 <_free_r>
10015b5e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015b62:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10015b64:	e68c      	b.n	10015880 <_svfprintf_r+0x60>
10015b66:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015b6a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015b6c:	3307      	adds	r3, #7
10015b6e:	f023 0307 	bic.w	r3, r3, #7
10015b72:	ecb3 7b02 	vldmia	r3!, {d7}
10015b76:	ec57 6b17 	vmov	r6, r7, d7
10015b7a:	930d      	str	r3, [sp, #52]	@ 0x34
10015b7c:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10015b80:	9323      	str	r3, [sp, #140]	@ 0x8c
10015b82:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
10015b86:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
10015b8a:	4bb1      	ldr	r3, [pc, #708]	@ (10015e50 <_svfprintf_r+0x630>)
10015b8c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10015b90:	4650      	mov	r0, sl
10015b92:	4659      	mov	r1, fp
10015b94:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
10015b98:	f002 ffd2 	bl	10018b40 <__aeabi_dcmpun>
10015b9c:	2800      	cmp	r0, #0
10015b9e:	f040 8546 	bne.w	1001662e <_svfprintf_r+0xe0e>
10015ba2:	4bab      	ldr	r3, [pc, #684]	@ (10015e50 <_svfprintf_r+0x630>)
10015ba4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10015ba8:	4650      	mov	r0, sl
10015baa:	4659      	mov	r1, fp
10015bac:	f002 ffaa 	bl	10018b04 <__aeabi_dcmple>
10015bb0:	2800      	cmp	r0, #0
10015bb2:	f040 853c 	bne.w	1001662e <_svfprintf_r+0xe0e>
10015bb6:	2200      	movs	r2, #0
10015bb8:	2300      	movs	r3, #0
10015bba:	4630      	mov	r0, r6
10015bbc:	4639      	mov	r1, r7
10015bbe:	f002 ff97 	bl	10018af0 <__aeabi_dcmplt>
10015bc2:	2800      	cmp	r0, #0
10015bc4:	f041 8051 	bne.w	10016c6a <_svfprintf_r+0x144a>
10015bc8:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015bcc:	4da1      	ldr	r5, [pc, #644]	@ (10015e54 <_svfprintf_r+0x634>)
10015bce:	4ba2      	ldr	r3, [pc, #648]	@ (10015e58 <_svfprintf_r+0x638>)
10015bd0:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10015bd4:	990e      	ldr	r1, [sp, #56]	@ 0x38
10015bd6:	2947      	cmp	r1, #71	@ 0x47
10015bd8:	bfc8      	it	gt
10015bda:	461d      	movgt	r5, r3
10015bdc:	2300      	movs	r3, #0
10015bde:	2103      	movs	r1, #3
10015be0:	930c      	str	r3, [sp, #48]	@ 0x30
10015be2:	9106      	str	r1, [sp, #24]
10015be4:	468b      	mov	fp, r1
10015be6:	9308      	str	r3, [sp, #32]
10015be8:	9314      	str	r3, [sp, #80]	@ 0x50
10015bea:	9310      	str	r3, [sp, #64]	@ 0x40
10015bec:	9312      	str	r3, [sp, #72]	@ 0x48
10015bee:	2a00      	cmp	r2, #0
10015bf0:	f43f af4a 	beq.w	10015a88 <_svfprintf_r+0x268>
10015bf4:	9b06      	ldr	r3, [sp, #24]
10015bf6:	3301      	adds	r3, #1
10015bf8:	9306      	str	r3, [sp, #24]
10015bfa:	e745      	b.n	10015a88 <_svfprintf_r+0x268>
10015bfc:	2e10      	cmp	r6, #16
10015bfe:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10015c00:	f341 8276 	ble.w	100170f0 <_svfprintf_r+0x18d0>
10015c04:	4895      	ldr	r0, [pc, #596]	@ (10015e5c <_svfprintf_r+0x63c>)
10015c06:	9521      	str	r5, [sp, #132]	@ 0x84
10015c08:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
10015c0c:	4621      	mov	r1, r4
10015c0e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10015c10:	9c07      	ldr	r4, [sp, #28]
10015c12:	9015      	str	r0, [sp, #84]	@ 0x54
10015c14:	f04f 0a10 	mov.w	sl, #16
10015c18:	4607      	mov	r7, r0
10015c1a:	e004      	b.n	10015c26 <_svfprintf_r+0x406>
10015c1c:	3e10      	subs	r6, #16
10015c1e:	2e10      	cmp	r6, #16
10015c20:	f108 0808 	add.w	r8, r8, #8
10015c24:	dd16      	ble.n	10015c54 <_svfprintf_r+0x434>
10015c26:	3201      	adds	r2, #1
10015c28:	3110      	adds	r1, #16
10015c2a:	2a07      	cmp	r2, #7
10015c2c:	e9c8 7a00 	strd	r7, sl, [r8]
10015c30:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10015c34:	ddf2      	ble.n	10015c1c <_svfprintf_r+0x3fc>
10015c36:	aa32      	add	r2, sp, #200	@ 0xc8
10015c38:	4629      	mov	r1, r5
10015c3a:	4620      	mov	r0, r4
10015c3c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015c40:	f002 fa46 	bl	100180d0 <__ssprint_r>
10015c44:	2800      	cmp	r0, #0
10015c46:	f040 86f0 	bne.w	10016a2a <_svfprintf_r+0x120a>
10015c4a:	3e10      	subs	r6, #16
10015c4c:	2e10      	cmp	r6, #16
10015c4e:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10015c52:	dce8      	bgt.n	10015c26 <_svfprintf_r+0x406>
10015c54:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10015c58:	9d21      	ldr	r5, [sp, #132]	@ 0x84
10015c5a:	460c      	mov	r4, r1
10015c5c:	3201      	adds	r2, #1
10015c5e:	9915      	ldr	r1, [sp, #84]	@ 0x54
10015c60:	f8c8 1000 	str.w	r1, [r8]
10015c64:	4434      	add	r4, r6
10015c66:	2a07      	cmp	r2, #7
10015c68:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
10015c6c:	f8c8 6004 	str.w	r6, [r8, #4]
10015c70:	f300 86ca 	bgt.w	10016a08 <_svfprintf_r+0x11e8>
10015c74:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015c78:	f108 0808 	add.w	r8, r8, #8
10015c7c:	e714      	b.n	10015aa8 <_svfprintf_r+0x288>
10015c7e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10015c80:	2b43      	cmp	r3, #67	@ 0x43
10015c82:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015c86:	f102 0404 	add.w	r4, r2, #4
10015c8a:	d003      	beq.n	10015c94 <_svfprintf_r+0x474>
10015c8c:	f019 0f10 	tst.w	r9, #16
10015c90:	f000 855c 	beq.w	1001674c <_svfprintf_r+0xf2c>
10015c94:	2208      	movs	r2, #8
10015c96:	2100      	movs	r1, #0
10015c98:	a830      	add	r0, sp, #192	@ 0xc0
10015c9a:	f7fe f9b1 	bl	10014000 <memset>
10015c9e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015ca0:	9807      	ldr	r0, [sp, #28]
10015ca2:	681a      	ldr	r2, [r3, #0]
10015ca4:	ad45      	add	r5, sp, #276	@ 0x114
10015ca6:	ab30      	add	r3, sp, #192	@ 0xc0
10015ca8:	4629      	mov	r1, r5
10015caa:	f7fe fc15 	bl	100144d8 <_wcrtomb_r>
10015cae:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10015cb2:	4683      	mov	fp, r0
10015cb4:	f001 827e 	beq.w	100171b4 <_svfprintf_r+0x1994>
10015cb8:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10015cbc:	9306      	str	r3, [sp, #24]
10015cbe:	2200      	movs	r2, #0
10015cc0:	940d      	str	r4, [sp, #52]	@ 0x34
10015cc2:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10015cc6:	920c      	str	r2, [sp, #48]	@ 0x30
10015cc8:	9208      	str	r2, [sp, #32]
10015cca:	9214      	str	r2, [sp, #80]	@ 0x50
10015ccc:	9210      	str	r2, [sp, #64]	@ 0x40
10015cce:	9212      	str	r2, [sp, #72]	@ 0x48
10015cd0:	e6da      	b.n	10015a88 <_svfprintf_r+0x268>
10015cd2:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10015cd4:	f856 5b04 	ldr.w	r5, [r6], #4
10015cd8:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015cdc:	2300      	movs	r3, #0
10015cde:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10015ce2:	2d00      	cmp	r5, #0
10015ce4:	f000 8557 	beq.w	10016796 <_svfprintf_r+0xf76>
10015ce8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10015cea:	2b53      	cmp	r3, #83	@ 0x53
10015cec:	f000 86b9 	beq.w	10016a62 <_svfprintf_r+0x1242>
10015cf0:	f019 0310 	ands.w	r3, r9, #16
10015cf4:	9312      	str	r3, [sp, #72]	@ 0x48
10015cf6:	f040 86b4 	bne.w	10016a62 <_svfprintf_r+0x1242>
10015cfa:	9b08      	ldr	r3, [sp, #32]
10015cfc:	1c5a      	adds	r2, r3, #1
10015cfe:	f001 8092 	beq.w	10016e26 <_svfprintf_r+0x1606>
10015d02:	9912      	ldr	r1, [sp, #72]	@ 0x48
10015d04:	461a      	mov	r2, r3
10015d06:	4628      	mov	r0, r5
10015d08:	f7fe fa7a 	bl	10014200 <memchr>
10015d0c:	900c      	str	r0, [sp, #48]	@ 0x30
10015d0e:	2800      	cmp	r0, #0
10015d10:	f001 82ed 	beq.w	100172ee <_svfprintf_r+0x1ace>
10015d14:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10015d16:	960d      	str	r6, [sp, #52]	@ 0x34
10015d18:	eba3 0b05 	sub.w	fp, r3, r5
10015d1c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10015d1e:	9308      	str	r3, [sp, #32]
10015d20:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10015d24:	9314      	str	r3, [sp, #80]	@ 0x50
10015d26:	9310      	str	r3, [sp, #64]	@ 0x40
10015d28:	930c      	str	r3, [sp, #48]	@ 0x30
10015d2a:	2373      	movs	r3, #115	@ 0x73
10015d2c:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015d30:	9106      	str	r1, [sp, #24]
10015d32:	930e      	str	r3, [sp, #56]	@ 0x38
10015d34:	e75b      	b.n	10015bee <_svfprintf_r+0x3ce>
10015d36:	f019 0f20 	tst.w	r9, #32
10015d3a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015d3e:	f000 80ec 	beq.w	10015f1a <_svfprintf_r+0x6fa>
10015d42:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015d44:	3307      	adds	r3, #7
10015d46:	f023 0307 	bic.w	r3, r3, #7
10015d4a:	461a      	mov	r2, r3
10015d4c:	6859      	ldr	r1, [r3, #4]
10015d4e:	f852 3b08 	ldr.w	r3, [r2], #8
10015d52:	920d      	str	r2, [sp, #52]	@ 0x34
10015d54:	460a      	mov	r2, r1
10015d56:	2900      	cmp	r1, #0
10015d58:	f2c0 8419 	blt.w	1001658e <_svfprintf_r+0xd6e>
10015d5c:	9908      	ldr	r1, [sp, #32]
10015d5e:	3101      	adds	r1, #1
10015d60:	f000 829c 	beq.w	1001629c <_svfprintf_r+0xa7c>
10015d64:	ea53 0102 	orrs.w	r1, r3, r2
10015d68:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10015d6c:	f040 8297 	bne.w	1001629e <_svfprintf_r+0xa7e>
10015d70:	9a08      	ldr	r2, [sp, #32]
10015d72:	2a00      	cmp	r2, #0
10015d74:	f040 8298 	bne.w	100162a8 <_svfprintf_r+0xa88>
10015d78:	46a1      	mov	r9, r4
10015d7a:	4693      	mov	fp, r2
10015d7c:	ad5e      	add	r5, sp, #376	@ 0x178
10015d7e:	e151      	b.n	10016024 <_svfprintf_r+0x804>
10015d80:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015d82:	f853 2b04 	ldr.w	r2, [r3], #4
10015d86:	920b      	str	r2, [sp, #44]	@ 0x2c
10015d88:	2a00      	cmp	r2, #0
10015d8a:	f280 8424 	bge.w	100165d6 <_svfprintf_r+0xdb6>
10015d8e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10015d90:	930d      	str	r3, [sp, #52]	@ 0x34
10015d92:	4252      	negs	r2, r2
10015d94:	920b      	str	r2, [sp, #44]	@ 0x2c
10015d96:	7823      	ldrb	r3, [r4, #0]
10015d98:	f049 0904 	orr.w	r9, r9, #4
10015d9c:	e597      	b.n	100158ce <_svfprintf_r+0xae>
10015d9e:	232b      	movs	r3, #43	@ 0x2b
10015da0:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10015da4:	7823      	ldrb	r3, [r4, #0]
10015da6:	e592      	b.n	100158ce <_svfprintf_r+0xae>
10015da8:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015dac:	f049 0910 	orr.w	r9, r9, #16
10015db0:	f019 0220 	ands.w	r2, r9, #32
10015db4:	f000 83b4 	beq.w	10016520 <_svfprintf_r+0xd00>
10015db8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015dba:	3307      	adds	r3, #7
10015dbc:	f023 0307 	bic.w	r3, r3, #7
10015dc0:	4619      	mov	r1, r3
10015dc2:	685a      	ldr	r2, [r3, #4]
10015dc4:	f851 3b08 	ldr.w	r3, [r1], #8
10015dc8:	910d      	str	r1, [sp, #52]	@ 0x34
10015dca:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10015dce:	2100      	movs	r1, #0
10015dd0:	2000      	movs	r0, #0
10015dd2:	9d08      	ldr	r5, [sp, #32]
10015dd4:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
10015dd8:	1c6f      	adds	r7, r5, #1
10015dda:	f000 810c 	beq.w	10015ff6 <_svfprintf_r+0x7d6>
10015dde:	ea53 0002 	orrs.w	r0, r3, r2
10015de2:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
10015de6:	f040 8105 	bne.w	10015ff4 <_svfprintf_r+0x7d4>
10015dea:	2d00      	cmp	r5, #0
10015dec:	f040 8627 	bne.w	10016a3e <_svfprintf_r+0x121e>
10015df0:	2900      	cmp	r1, #0
10015df2:	f040 83c8 	bne.w	10016586 <_svfprintf_r+0xd66>
10015df6:	f014 0b01 	ands.w	fp, r4, #1
10015dfa:	f000 83f0 	beq.w	100165de <_svfprintf_r+0xdbe>
10015dfe:	2330      	movs	r3, #48	@ 0x30
10015e00:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10015e04:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10015e08:	e10c      	b.n	10016024 <_svfprintf_r+0x804>
10015e0a:	7823      	ldrb	r3, [r4, #0]
10015e0c:	2b68      	cmp	r3, #104	@ 0x68
10015e0e:	bf03      	ittte	eq
10015e10:	7863      	ldrbeq	r3, [r4, #1]
10015e12:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10015e16:	3401      	addeq	r4, #1
10015e18:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
10015e1c:	e557      	b.n	100158ce <_svfprintf_r+0xae>
10015e1e:	f019 0f20 	tst.w	r9, #32
10015e22:	940f      	str	r4, [sp, #60]	@ 0x3c
10015e24:	f000 83e5 	beq.w	100165f2 <_svfprintf_r+0xdd2>
10015e28:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015e2a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10015e2c:	681b      	ldr	r3, [r3, #0]
10015e2e:	601a      	str	r2, [r3, #0]
10015e30:	17d2      	asrs	r2, r2, #31
10015e32:	605a      	str	r2, [r3, #4]
10015e34:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015e36:	3304      	adds	r3, #4
10015e38:	930d      	str	r3, [sp, #52]	@ 0x34
10015e3a:	e692      	b.n	10015b62 <_svfprintf_r+0x342>
10015e3c:	7823      	ldrb	r3, [r4, #0]
10015e3e:	2b6c      	cmp	r3, #108	@ 0x6c
10015e40:	bf03      	ittte	eq
10015e42:	7863      	ldrbeq	r3, [r4, #1]
10015e44:	f049 0920 	orreq.w	r9, r9, #32
10015e48:	3401      	addeq	r4, #1
10015e4a:	f049 0910 	orrne.w	r9, r9, #16
10015e4e:	e53e      	b.n	100158ce <_svfprintf_r+0xae>
10015e50:	7fefffff 	.word	0x7fefffff
10015e54:	10019164 	.word	0x10019164
10015e58:	10019168 	.word	0x10019168
10015e5c:	100193cc 	.word	0x100193cc
10015e60:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10015e62:	940f      	str	r4, [sp, #60]	@ 0x3c
10015e64:	f852 3b04 	ldr.w	r3, [r2], #4
10015e68:	920d      	str	r2, [sp, #52]	@ 0x34
10015e6a:	f647 0230 	movw	r2, #30768	@ 0x7830
10015e6e:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10015e72:	2078      	movs	r0, #120	@ 0x78
10015e74:	4aa8      	ldr	r2, [pc, #672]	@ (10016118 <_svfprintf_r+0x8f8>)
10015e76:	9219      	str	r2, [sp, #100]	@ 0x64
10015e78:	f049 0402 	orr.w	r4, r9, #2
10015e7c:	2200      	movs	r2, #0
10015e7e:	2102      	movs	r1, #2
10015e80:	900e      	str	r0, [sp, #56]	@ 0x38
10015e82:	e7a5      	b.n	10015dd0 <_svfprintf_r+0x5b0>
10015e84:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015e88:	f049 0410 	orr.w	r4, r9, #16
10015e8c:	f014 0220 	ands.w	r2, r4, #32
10015e90:	f000 8355 	beq.w	1001653e <_svfprintf_r+0xd1e>
10015e94:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10015e96:	3307      	adds	r3, #7
10015e98:	f023 0307 	bic.w	r3, r3, #7
10015e9c:	4619      	mov	r1, r3
10015e9e:	685a      	ldr	r2, [r3, #4]
10015ea0:	f851 3b08 	ldr.w	r3, [r1], #8
10015ea4:	910d      	str	r1, [sp, #52]	@ 0x34
10015ea6:	2101      	movs	r1, #1
10015ea8:	e792      	b.n	10015dd0 <_svfprintf_r+0x5b0>
10015eaa:	7823      	ldrb	r3, [r4, #0]
10015eac:	f049 0908 	orr.w	r9, r9, #8
10015eb0:	e50d      	b.n	100158ce <_svfprintf_r+0xae>
10015eb2:	7823      	ldrb	r3, [r4, #0]
10015eb4:	f049 0901 	orr.w	r9, r9, #1
10015eb8:	e509      	b.n	100158ce <_svfprintf_r+0xae>
10015eba:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10015ebe:	7823      	ldrb	r3, [r4, #0]
10015ec0:	2a00      	cmp	r2, #0
10015ec2:	f47f ad04 	bne.w	100158ce <_svfprintf_r+0xae>
10015ec6:	2220      	movs	r2, #32
10015ec8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10015ecc:	e4ff      	b.n	100158ce <_svfprintf_r+0xae>
10015ece:	7823      	ldrb	r3, [r4, #0]
10015ed0:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
10015ed4:	e4fb      	b.n	100158ce <_svfprintf_r+0xae>
10015ed6:	4621      	mov	r1, r4
10015ed8:	f811 3b01 	ldrb.w	r3, [r1], #1
10015edc:	2b2a      	cmp	r3, #42	@ 0x2a
10015ede:	f001 8229 	beq.w	10017334 <_svfprintf_r+0x1b14>
10015ee2:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10015ee6:	2a09      	cmp	r2, #9
10015ee8:	460c      	mov	r4, r1
10015eea:	bf98      	it	ls
10015eec:	2100      	movls	r1, #0
10015eee:	f201 8130 	bhi.w	10017152 <_svfprintf_r+0x1932>
10015ef2:	f814 3b01 	ldrb.w	r3, [r4], #1
10015ef6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10015efa:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10015efe:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10015f02:	2a09      	cmp	r2, #9
10015f04:	d9f5      	bls.n	10015ef2 <_svfprintf_r+0x6d2>
10015f06:	9108      	str	r1, [sp, #32]
10015f08:	e4e2      	b.n	100158d0 <_svfprintf_r+0xb0>
10015f0a:	f049 0910 	orr.w	r9, r9, #16
10015f0e:	f019 0f20 	tst.w	r9, #32
10015f12:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10015f16:	f47f af14 	bne.w	10015d42 <_svfprintf_r+0x522>
10015f1a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10015f1c:	f019 0f10 	tst.w	r9, #16
10015f20:	f852 3b04 	ldr.w	r3, [r2], #4
10015f24:	920d      	str	r2, [sp, #52]	@ 0x34
10015f26:	f040 8360 	bne.w	100165ea <_svfprintf_r+0xdca>
10015f2a:	f019 0f40 	tst.w	r9, #64	@ 0x40
10015f2e:	f000 8358 	beq.w	100165e2 <_svfprintf_r+0xdc2>
10015f32:	f343 32c0 	sbfx	r2, r3, #15, #1
10015f36:	4611      	mov	r1, r2
10015f38:	b21b      	sxth	r3, r3
10015f3a:	e70c      	b.n	10015d56 <_svfprintf_r+0x536>
10015f3c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10015f3e:	2b65      	cmp	r3, #101	@ 0x65
10015f40:	f340 8166 	ble.w	10016210 <_svfprintf_r+0x9f0>
10015f44:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10015f48:	2200      	movs	r2, #0
10015f4a:	2300      	movs	r3, #0
10015f4c:	f002 fdc6 	bl	10018adc <__aeabi_dcmpeq>
10015f50:	2800      	cmp	r0, #0
10015f52:	f000 8211 	beq.w	10016378 <_svfprintf_r+0xb58>
10015f56:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10015f58:	4a70      	ldr	r2, [pc, #448]	@ (1001611c <_svfprintf_r+0x8fc>)
10015f5a:	f8c8 2000 	str.w	r2, [r8]
10015f5e:	3301      	adds	r3, #1
10015f60:	3401      	adds	r4, #1
10015f62:	2201      	movs	r2, #1
10015f64:	2b07      	cmp	r3, #7
10015f66:	9434      	str	r4, [sp, #208]	@ 0xd0
10015f68:	9333      	str	r3, [sp, #204]	@ 0xcc
10015f6a:	f8c8 2004 	str.w	r2, [r8, #4]
10015f6e:	f300 856b 	bgt.w	10016a48 <_svfprintf_r+0x1228>
10015f72:	f108 0808 	add.w	r8, r8, #8
10015f76:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10015f78:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10015f7a:	4293      	cmp	r3, r2
10015f7c:	f280 8326 	bge.w	100165cc <_svfprintf_r+0xdac>
10015f80:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10015f82:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10015f84:	441c      	add	r4, r3
10015f86:	e9c8 2300 	strd	r2, r3, [r8]
10015f8a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10015f8c:	9434      	str	r4, [sp, #208]	@ 0xd0
10015f8e:	3301      	adds	r3, #1
10015f90:	2b07      	cmp	r3, #7
10015f92:	9333      	str	r3, [sp, #204]	@ 0xcc
10015f94:	f300 83e4 	bgt.w	10016760 <_svfprintf_r+0xf40>
10015f98:	f108 0808 	add.w	r8, r8, #8
10015f9c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10015f9e:	1e5d      	subs	r5, r3, #1
10015fa0:	2d00      	cmp	r5, #0
10015fa2:	f77f adc0 	ble.w	10015b26 <_svfprintf_r+0x306>
10015fa6:	2d10      	cmp	r5, #16
10015fa8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10015faa:	f340 85ad 	ble.w	10016b08 <_svfprintf_r+0x12e8>
10015fae:	4f5c      	ldr	r7, [pc, #368]	@ (10016120 <_svfprintf_r+0x900>)
10015fb0:	f8dd b01c 	ldr.w	fp, [sp, #28]
10015fb4:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10015fb8:	9715      	str	r7, [sp, #84]	@ 0x54
10015fba:	2610      	movs	r6, #16
10015fbc:	e005      	b.n	10015fca <_svfprintf_r+0x7aa>
10015fbe:	f108 0808 	add.w	r8, r8, #8
10015fc2:	3d10      	subs	r5, #16
10015fc4:	2d10      	cmp	r5, #16
10015fc6:	f340 85a1 	ble.w	10016b0c <_svfprintf_r+0x12ec>
10015fca:	3301      	adds	r3, #1
10015fcc:	3410      	adds	r4, #16
10015fce:	2b07      	cmp	r3, #7
10015fd0:	e9c8 7600 	strd	r7, r6, [r8]
10015fd4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10015fd8:	ddf1      	ble.n	10015fbe <_svfprintf_r+0x79e>
10015fda:	aa32      	add	r2, sp, #200	@ 0xc8
10015fdc:	4651      	mov	r1, sl
10015fde:	4658      	mov	r0, fp
10015fe0:	f002 f876 	bl	100180d0 <__ssprint_r>
10015fe4:	2800      	cmp	r0, #0
10015fe6:	f040 82c0 	bne.w	1001656a <_svfprintf_r+0xd4a>
10015fea:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10015fee:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10015ff2:	e7e6      	b.n	10015fc2 <_svfprintf_r+0x7a2>
10015ff4:	464c      	mov	r4, r9
10015ff6:	2901      	cmp	r1, #1
10015ff8:	f000 8151 	beq.w	1001629e <_svfprintf_r+0xa7e>
10015ffc:	2902      	cmp	r1, #2
10015ffe:	ad5e      	add	r5, sp, #376	@ 0x178
10016000:	d11e      	bne.n	10016040 <_svfprintf_r+0x820>
10016002:	9819      	ldr	r0, [sp, #100]	@ 0x64
10016004:	f003 010f 	and.w	r1, r3, #15
10016008:	091b      	lsrs	r3, r3, #4
1001600a:	5c41      	ldrb	r1, [r0, r1]
1001600c:	f805 1d01 	strb.w	r1, [r5, #-1]!
10016010:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10016014:	0912      	lsrs	r2, r2, #4
10016016:	ea53 0102 	orrs.w	r1, r3, r2
1001601a:	d1f3      	bne.n	10016004 <_svfprintf_r+0x7e4>
1001601c:	ab5e      	add	r3, sp, #376	@ 0x178
1001601e:	46a1      	mov	r9, r4
10016020:	eba3 0b05 	sub.w	fp, r3, r5
10016024:	9908      	ldr	r1, [sp, #32]
10016026:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001602a:	4559      	cmp	r1, fp
1001602c:	f04f 0300 	mov.w	r3, #0
10016030:	bfb8      	it	lt
10016032:	4659      	movlt	r1, fp
10016034:	930c      	str	r3, [sp, #48]	@ 0x30
10016036:	9106      	str	r1, [sp, #24]
10016038:	9314      	str	r3, [sp, #80]	@ 0x50
1001603a:	9310      	str	r3, [sp, #64]	@ 0x40
1001603c:	9312      	str	r3, [sp, #72]	@ 0x48
1001603e:	e5d6      	b.n	10015bee <_svfprintf_r+0x3ce>
10016040:	f003 0107 	and.w	r1, r3, #7
10016044:	08db      	lsrs	r3, r3, #3
10016046:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
1001604a:	08d2      	lsrs	r2, r2, #3
1001604c:	3130      	adds	r1, #48	@ 0x30
1001604e:	ea53 0602 	orrs.w	r6, r3, r2
10016052:	4628      	mov	r0, r5
10016054:	f805 1d01 	strb.w	r1, [r5, #-1]!
10016058:	d1f2      	bne.n	10016040 <_svfprintf_r+0x820>
1001605a:	07e6      	lsls	r6, r4, #31
1001605c:	d5de      	bpl.n	1001601c <_svfprintf_r+0x7fc>
1001605e:	2930      	cmp	r1, #48	@ 0x30
10016060:	d0dc      	beq.n	1001601c <_svfprintf_r+0x7fc>
10016062:	2330      	movs	r3, #48	@ 0x30
10016064:	3802      	subs	r0, #2
10016066:	f805 3c01 	strb.w	r3, [r5, #-1]
1001606a:	ab5e      	add	r3, sp, #376	@ 0x178
1001606c:	46a1      	mov	r9, r4
1001606e:	eba3 0b00 	sub.w	fp, r3, r0
10016072:	4605      	mov	r5, r0
10016074:	e7d6      	b.n	10016024 <_svfprintf_r+0x804>
10016076:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016078:	9a06      	ldr	r2, [sp, #24]
1001607a:	1a9e      	subs	r6, r3, r2
1001607c:	2e00      	cmp	r6, #0
1001607e:	f77f ad3a 	ble.w	10015af6 <_svfprintf_r+0x2d6>
10016082:	2e10      	cmp	r6, #16
10016084:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10016086:	f341 809f 	ble.w	100171c8 <_svfprintf_r+0x19a8>
1001608a:	4825      	ldr	r0, [pc, #148]	@ (10016120 <_svfprintf_r+0x900>)
1001608c:	f8dd a01c 	ldr.w	sl, [sp, #28]
10016090:	9015      	str	r0, [sp, #84]	@ 0x54
10016092:	4621      	mov	r1, r4
10016094:	2710      	movs	r7, #16
10016096:	461a      	mov	r2, r3
10016098:	4604      	mov	r4, r0
1001609a:	e004      	b.n	100160a6 <_svfprintf_r+0x886>
1001609c:	3e10      	subs	r6, #16
1001609e:	2e10      	cmp	r6, #16
100160a0:	f108 0808 	add.w	r8, r8, #8
100160a4:	dd16      	ble.n	100160d4 <_svfprintf_r+0x8b4>
100160a6:	3201      	adds	r2, #1
100160a8:	3110      	adds	r1, #16
100160aa:	2a07      	cmp	r2, #7
100160ac:	e9c8 4700 	strd	r4, r7, [r8]
100160b0:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
100160b4:	ddf2      	ble.n	1001609c <_svfprintf_r+0x87c>
100160b6:	9909      	ldr	r1, [sp, #36]	@ 0x24
100160b8:	aa32      	add	r2, sp, #200	@ 0xc8
100160ba:	4650      	mov	r0, sl
100160bc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100160c0:	f002 f806 	bl	100180d0 <__ssprint_r>
100160c4:	2800      	cmp	r0, #0
100160c6:	f040 84b2 	bne.w	10016a2e <_svfprintf_r+0x120e>
100160ca:	3e10      	subs	r6, #16
100160cc:	2e10      	cmp	r6, #16
100160ce:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
100160d2:	dce8      	bgt.n	100160a6 <_svfprintf_r+0x886>
100160d4:	460c      	mov	r4, r1
100160d6:	4613      	mov	r3, r2
100160d8:	3301      	adds	r3, #1
100160da:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100160dc:	f8c8 2000 	str.w	r2, [r8]
100160e0:	4434      	add	r4, r6
100160e2:	2b07      	cmp	r3, #7
100160e4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100160e8:	f8c8 6004 	str.w	r6, [r8, #4]
100160ec:	f300 851c 	bgt.w	10016b28 <_svfprintf_r+0x1308>
100160f0:	9b08      	ldr	r3, [sp, #32]
100160f2:	eba3 060b 	sub.w	r6, r3, fp
100160f6:	2e00      	cmp	r6, #0
100160f8:	f108 0808 	add.w	r8, r8, #8
100160fc:	f77f ad01 	ble.w	10015b02 <_svfprintf_r+0x2e2>
10016100:	4a07      	ldr	r2, [pc, #28]	@ (10016120 <_svfprintf_r+0x900>)
10016102:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10016104:	9215      	str	r2, [sp, #84]	@ 0x54
10016106:	2e10      	cmp	r6, #16
10016108:	dd2a      	ble.n	10016160 <_svfprintf_r+0x940>
1001610a:	4622      	mov	r2, r4
1001610c:	9f07      	ldr	r7, [sp, #28]
1001610e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10016110:	f04f 0a10 	mov.w	sl, #16
10016114:	e00b      	b.n	1001612e <_svfprintf_r+0x90e>
10016116:	bf00      	nop
10016118:	10019174 	.word	0x10019174
1001611c:	100191a4 	.word	0x100191a4
10016120:	100193bc 	.word	0x100193bc
10016124:	3e10      	subs	r6, #16
10016126:	2e10      	cmp	r6, #16
10016128:	f108 0808 	add.w	r8, r8, #8
1001612c:	dd17      	ble.n	1001615e <_svfprintf_r+0x93e>
1001612e:	3301      	adds	r3, #1
10016130:	498e      	ldr	r1, [pc, #568]	@ (1001636c <_svfprintf_r+0xb4c>)
10016132:	3210      	adds	r2, #16
10016134:	2b07      	cmp	r3, #7
10016136:	e9c8 1a00 	strd	r1, sl, [r8]
1001613a:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
1001613e:	ddf1      	ble.n	10016124 <_svfprintf_r+0x904>
10016140:	aa32      	add	r2, sp, #200	@ 0xc8
10016142:	4621      	mov	r1, r4
10016144:	4638      	mov	r0, r7
10016146:	f001 ffc3 	bl	100180d0 <__ssprint_r>
1001614a:	2800      	cmp	r0, #0
1001614c:	f040 820c 	bne.w	10016568 <_svfprintf_r+0xd48>
10016150:	3e10      	subs	r6, #16
10016152:	2e10      	cmp	r6, #16
10016154:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
10016158:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001615c:	dce7      	bgt.n	1001612e <_svfprintf_r+0x90e>
1001615e:	4614      	mov	r4, r2
10016160:	3301      	adds	r3, #1
10016162:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10016164:	f8c8 2000 	str.w	r2, [r8]
10016168:	4434      	add	r4, r6
1001616a:	2b07      	cmp	r3, #7
1001616c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10016170:	f8c8 6004 	str.w	r6, [r8, #4]
10016174:	f300 81c7 	bgt.w	10016506 <_svfprintf_r+0xce6>
10016178:	f108 0808 	add.w	r8, r8, #8
1001617c:	e4c1      	b.n	10015b02 <_svfprintf_r+0x2e2>
1001617e:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016180:	9807      	ldr	r0, [sp, #28]
10016182:	aa32      	add	r2, sp, #200	@ 0xc8
10016184:	f001 ffa4 	bl	100180d0 <__ssprint_r>
10016188:	2800      	cmp	r0, #0
1001618a:	f43f ace0 	beq.w	10015b4e <_svfprintf_r+0x32e>
1001618e:	f8dd b01c 	ldr.w	fp, [sp, #28]
10016192:	e1ea      	b.n	1001656a <_svfprintf_r+0xd4a>
10016194:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10016196:	4976      	ldr	r1, [pc, #472]	@ (10016370 <_svfprintf_r+0xb50>)
10016198:	f8c8 1000 	str.w	r1, [r8]
1001619c:	3301      	adds	r3, #1
1001619e:	3401      	adds	r4, #1
100161a0:	2101      	movs	r1, #1
100161a2:	2b07      	cmp	r3, #7
100161a4:	9434      	str	r4, [sp, #208]	@ 0xd0
100161a6:	9333      	str	r3, [sp, #204]	@ 0xcc
100161a8:	f8c8 1004 	str.w	r1, [r8, #4]
100161ac:	f300 8573 	bgt.w	10016c96 <_svfprintf_r+0x1476>
100161b0:	f108 0808 	add.w	r8, r8, #8
100161b4:	2a00      	cmp	r2, #0
100161b6:	f040 84e5 	bne.w	10016b84 <_svfprintf_r+0x1364>
100161ba:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100161bc:	f009 0301 	and.w	r3, r9, #1
100161c0:	4313      	orrs	r3, r2
100161c2:	f43f acb0 	beq.w	10015b26 <_svfprintf_r+0x306>
100161c6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100161c8:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100161ca:	441c      	add	r4, r3
100161cc:	e9c8 2300 	strd	r2, r3, [r8]
100161d0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100161d2:	9434      	str	r4, [sp, #208]	@ 0xd0
100161d4:	3301      	adds	r3, #1
100161d6:	2b07      	cmp	r3, #7
100161d8:	9333      	str	r3, [sp, #204]	@ 0xcc
100161da:	f300 8643 	bgt.w	10016e64 <_svfprintf_r+0x1644>
100161de:	f108 0808 	add.w	r8, r8, #8
100161e2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100161e4:	f8c8 5000 	str.w	r5, [r8]
100161e8:	3301      	adds	r3, #1
100161ea:	4414      	add	r4, r2
100161ec:	2b07      	cmp	r3, #7
100161ee:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100161f2:	f8c8 2004 	str.w	r2, [r8, #4]
100161f6:	f77f ac94 	ble.w	10015b22 <_svfprintf_r+0x302>
100161fa:	9909      	ldr	r1, [sp, #36]	@ 0x24
100161fc:	9807      	ldr	r0, [sp, #28]
100161fe:	aa32      	add	r2, sp, #200	@ 0xc8
10016200:	f001 ff66 	bl	100180d0 <__ssprint_r>
10016204:	2800      	cmp	r0, #0
10016206:	d1c2      	bne.n	1001618e <_svfprintf_r+0x96e>
10016208:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001620a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001620e:	e48a      	b.n	10015b26 <_svfprintf_r+0x306>
10016210:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10016212:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10016214:	2b01      	cmp	r3, #1
10016216:	f104 0401 	add.w	r4, r4, #1
1001621a:	f106 0601 	add.w	r6, r6, #1
1001621e:	f108 0708 	add.w	r7, r8, #8
10016222:	f340 8129 	ble.w	10016478 <_svfprintf_r+0xc58>
10016226:	2301      	movs	r3, #1
10016228:	2e07      	cmp	r6, #7
1001622a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001622e:	f8c8 5000 	str.w	r5, [r8]
10016232:	f8c8 3004 	str.w	r3, [r8, #4]
10016236:	f300 81b1 	bgt.w	1001659c <_svfprintf_r+0xd7c>
1001623a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001623c:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001623e:	3601      	adds	r6, #1
10016240:	441c      	add	r4, r3
10016242:	2e07      	cmp	r6, #7
10016244:	e9c7 2300 	strd	r2, r3, [r7]
10016248:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001624c:	f300 81b2 	bgt.w	100165b4 <_svfprintf_r+0xd94>
10016250:	3708      	adds	r7, #8
10016252:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10016254:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10016258:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
1001625c:	2200      	movs	r2, #0
1001625e:	2300      	movs	r3, #0
10016260:	f002 fc3c 	bl	10018adc <__aeabi_dcmpeq>
10016264:	2800      	cmp	r0, #0
10016266:	f040 8121 	bne.w	100164ac <_svfprintf_r+0xc8c>
1001626a:	3601      	adds	r6, #1
1001626c:	3501      	adds	r5, #1
1001626e:	4444      	add	r4, r8
10016270:	2e07      	cmp	r6, #7
10016272:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10016276:	603d      	str	r5, [r7, #0]
10016278:	f8c7 8004 	str.w	r8, [r7, #4]
1001627c:	f300 810a 	bgt.w	10016494 <_svfprintf_r+0xc74>
10016280:	3708      	adds	r7, #8
10016282:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10016284:	607b      	str	r3, [r7, #4]
10016286:	3601      	adds	r6, #1
10016288:	441c      	add	r4, r3
1001628a:	2e07      	cmp	r6, #7
1001628c:	ab2c      	add	r3, sp, #176	@ 0xb0
1001628e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10016292:	603b      	str	r3, [r7, #0]
10016294:	dcb1      	bgt.n	100161fa <_svfprintf_r+0x9da>
10016296:	f107 0808 	add.w	r8, r7, #8
1001629a:	e444      	b.n	10015b26 <_svfprintf_r+0x306>
1001629c:	464c      	mov	r4, r9
1001629e:	2b0a      	cmp	r3, #10
100162a0:	f172 0100 	sbcs.w	r1, r2, #0
100162a4:	f080 8353 	bcs.w	1001694e <_svfprintf_r+0x112e>
100162a8:	3330      	adds	r3, #48	@ 0x30
100162aa:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
100162ae:	46a1      	mov	r9, r4
100162b0:	f04f 0b01 	mov.w	fp, #1
100162b4:	f20d 1577 	addw	r5, sp, #375	@ 0x177
100162b8:	e6b4      	b.n	10016024 <_svfprintf_r+0x804>
100162ba:	9909      	ldr	r1, [sp, #36]	@ 0x24
100162bc:	9807      	ldr	r0, [sp, #28]
100162be:	aa32      	add	r2, sp, #200	@ 0xc8
100162c0:	f001 ff06 	bl	100180d0 <__ssprint_r>
100162c4:	2800      	cmp	r0, #0
100162c6:	f47f af62 	bne.w	1001618e <_svfprintf_r+0x96e>
100162ca:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100162cc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100162d0:	e40e      	b.n	10015af0 <_svfprintf_r+0x2d0>
100162d2:	9909      	ldr	r1, [sp, #36]	@ 0x24
100162d4:	9807      	ldr	r0, [sp, #28]
100162d6:	9315      	str	r3, [sp, #84]	@ 0x54
100162d8:	aa32      	add	r2, sp, #200	@ 0xc8
100162da:	f001 fef9 	bl	100180d0 <__ssprint_r>
100162de:	2800      	cmp	r0, #0
100162e0:	f47f af55 	bne.w	1001618e <_svfprintf_r+0x96e>
100162e4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100162e6:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100162e8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100162ec:	f7ff bbee 	b.w	10015acc <_svfprintf_r+0x2ac>
100162f0:	2d10      	cmp	r5, #16
100162f2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100162f4:	f340 8731 	ble.w	1001715a <_svfprintf_r+0x193a>
100162f8:	4f1e      	ldr	r7, [pc, #120]	@ (10016374 <_svfprintf_r+0xb54>)
100162fa:	f8dd 901c 	ldr.w	r9, [sp, #28]
100162fe:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10016302:	9715      	str	r7, [sp, #84]	@ 0x54
10016304:	2610      	movs	r6, #16
10016306:	e004      	b.n	10016312 <_svfprintf_r+0xaf2>
10016308:	3d10      	subs	r5, #16
1001630a:	2d10      	cmp	r5, #16
1001630c:	f108 0808 	add.w	r8, r8, #8
10016310:	dd16      	ble.n	10016340 <_svfprintf_r+0xb20>
10016312:	3301      	adds	r3, #1
10016314:	3410      	adds	r4, #16
10016316:	2b07      	cmp	r3, #7
10016318:	e9c8 7600 	strd	r7, r6, [r8]
1001631c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10016320:	ddf2      	ble.n	10016308 <_svfprintf_r+0xae8>
10016322:	aa32      	add	r2, sp, #200	@ 0xc8
10016324:	4651      	mov	r1, sl
10016326:	4648      	mov	r0, r9
10016328:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001632c:	f001 fed0 	bl	100180d0 <__ssprint_r>
10016330:	2800      	cmp	r0, #0
10016332:	f040 83e7 	bne.w	10016b04 <_svfprintf_r+0x12e4>
10016336:	3d10      	subs	r5, #16
10016338:	2d10      	cmp	r5, #16
1001633a:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001633e:	dce8      	bgt.n	10016312 <_svfprintf_r+0xaf2>
10016340:	3301      	adds	r3, #1
10016342:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10016344:	442c      	add	r4, r5
10016346:	2b07      	cmp	r3, #7
10016348:	e9c8 2500 	strd	r2, r5, [r8]
1001634c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10016350:	f77f abf2 	ble.w	10015b38 <_svfprintf_r+0x318>
10016354:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016356:	9807      	ldr	r0, [sp, #28]
10016358:	aa32      	add	r2, sp, #200	@ 0xc8
1001635a:	f001 feb9 	bl	100180d0 <__ssprint_r>
1001635e:	2800      	cmp	r0, #0
10016360:	f47f af15 	bne.w	1001618e <_svfprintf_r+0x96e>
10016364:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10016366:	f7ff bbe7 	b.w	10015b38 <_svfprintf_r+0x318>
1001636a:	bf00      	nop
1001636c:	100193bc 	.word	0x100193bc
10016370:	100191a4 	.word	0x100191a4
10016374:	100193cc 	.word	0x100193cc
10016378:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001637a:	2a00      	cmp	r2, #0
1001637c:	f77f af0a 	ble.w	10016194 <_svfprintf_r+0x974>
10016380:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10016384:	429f      	cmp	r7, r3
10016386:	bfa8      	it	ge
10016388:	461f      	movge	r7, r3
1001638a:	2f00      	cmp	r7, #0
1001638c:	eb05 0b03 	add.w	fp, r5, r3
10016390:	dd0b      	ble.n	100163aa <_svfprintf_r+0xb8a>
10016392:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10016394:	3301      	adds	r3, #1
10016396:	443c      	add	r4, r7
10016398:	2b07      	cmp	r3, #7
1001639a:	e9c8 5700 	strd	r5, r7, [r8]
1001639e:	9434      	str	r4, [sp, #208]	@ 0xd0
100163a0:	9333      	str	r3, [sp, #204]	@ 0xcc
100163a2:	f300 8640 	bgt.w	10017026 <_svfprintf_r+0x1806>
100163a6:	f108 0808 	add.w	r8, r8, #8
100163aa:	9e12      	ldr	r6, [sp, #72]	@ 0x48
100163ac:	2f00      	cmp	r7, #0
100163ae:	bfa8      	it	ge
100163b0:	1bf6      	subge	r6, r6, r7
100163b2:	2e00      	cmp	r6, #0
100163b4:	f300 8200 	bgt.w	100167b8 <_svfprintf_r+0xf98>
100163b8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100163ba:	f419 6f80 	tst.w	r9, #1024	@ 0x400
100163be:	442b      	add	r3, r5
100163c0:	469a      	mov	sl, r3
100163c2:	f040 8221 	bne.w	10016808 <_svfprintf_r+0xfe8>
100163c6:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100163c8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100163ca:	429d      	cmp	r5, r3
100163cc:	db03      	blt.n	100163d6 <_svfprintf_r+0xbb6>
100163ce:	f019 0f01 	tst.w	r9, #1
100163d2:	f000 846e 	beq.w	10016cb2 <_svfprintf_r+0x1492>
100163d6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100163d8:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100163da:	441c      	add	r4, r3
100163dc:	e9c8 2300 	strd	r2, r3, [r8]
100163e0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100163e2:	9434      	str	r4, [sp, #208]	@ 0xd0
100163e4:	3301      	adds	r3, #1
100163e6:	2b07      	cmp	r3, #7
100163e8:	9333      	str	r3, [sp, #204]	@ 0xcc
100163ea:	f300 8673 	bgt.w	100170d4 <_svfprintf_r+0x18b4>
100163ee:	f108 0808 	add.w	r8, r8, #8
100163f2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100163f4:	ebab 060a 	sub.w	r6, fp, sl
100163f8:	1b5d      	subs	r5, r3, r5
100163fa:	42ae      	cmp	r6, r5
100163fc:	bfa8      	it	ge
100163fe:	462e      	movge	r6, r5
10016400:	2e00      	cmp	r6, #0
10016402:	dd0d      	ble.n	10016420 <_svfprintf_r+0xc00>
10016404:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10016406:	f8c8 a000 	str.w	sl, [r8]
1001640a:	3301      	adds	r3, #1
1001640c:	4434      	add	r4, r6
1001640e:	2b07      	cmp	r3, #7
10016410:	f8c8 6004 	str.w	r6, [r8, #4]
10016414:	9434      	str	r4, [sp, #208]	@ 0xd0
10016416:	9333      	str	r3, [sp, #204]	@ 0xcc
10016418:	f300 866e 	bgt.w	100170f8 <_svfprintf_r+0x18d8>
1001641c:	f108 0808 	add.w	r8, r8, #8
10016420:	2e00      	cmp	r6, #0
10016422:	bfa8      	it	ge
10016424:	1bad      	subge	r5, r5, r6
10016426:	2d00      	cmp	r5, #0
10016428:	f77f ab7d 	ble.w	10015b26 <_svfprintf_r+0x306>
1001642c:	2d10      	cmp	r5, #16
1001642e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10016430:	f340 836a 	ble.w	10016b08 <_svfprintf_r+0x12e8>
10016434:	4fad      	ldr	r7, [pc, #692]	@ (100166ec <_svfprintf_r+0xecc>)
10016436:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001643a:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
1001643e:	9715      	str	r7, [sp, #84]	@ 0x54
10016440:	2610      	movs	r6, #16
10016442:	e005      	b.n	10016450 <_svfprintf_r+0xc30>
10016444:	f108 0808 	add.w	r8, r8, #8
10016448:	3d10      	subs	r5, #16
1001644a:	2d10      	cmp	r5, #16
1001644c:	f340 835e 	ble.w	10016b0c <_svfprintf_r+0x12ec>
10016450:	3301      	adds	r3, #1
10016452:	3410      	adds	r4, #16
10016454:	2b07      	cmp	r3, #7
10016456:	e9c8 7600 	strd	r7, r6, [r8]
1001645a:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001645e:	ddf1      	ble.n	10016444 <_svfprintf_r+0xc24>
10016460:	aa32      	add	r2, sp, #200	@ 0xc8
10016462:	4651      	mov	r1, sl
10016464:	4658      	mov	r0, fp
10016466:	f001 fe33 	bl	100180d0 <__ssprint_r>
1001646a:	2800      	cmp	r0, #0
1001646c:	d17d      	bne.n	1001656a <_svfprintf_r+0xd4a>
1001646e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10016472:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016476:	e7e7      	b.n	10016448 <_svfprintf_r+0xc28>
10016478:	f019 0f01 	tst.w	r9, #1
1001647c:	f47f aed3 	bne.w	10016226 <_svfprintf_r+0xa06>
10016480:	2301      	movs	r3, #1
10016482:	2e07      	cmp	r6, #7
10016484:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10016488:	f8c8 5000 	str.w	r5, [r8]
1001648c:	f8c8 3004 	str.w	r3, [r8, #4]
10016490:	f77f aef7 	ble.w	10016282 <_svfprintf_r+0xa62>
10016494:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016496:	9807      	ldr	r0, [sp, #28]
10016498:	aa32      	add	r2, sp, #200	@ 0xc8
1001649a:	f001 fe19 	bl	100180d0 <__ssprint_r>
1001649e:	2800      	cmp	r0, #0
100164a0:	f47f ae75 	bne.w	1001618e <_svfprintf_r+0x96e>
100164a4:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100164a8:	af35      	add	r7, sp, #212	@ 0xd4
100164aa:	e6ea      	b.n	10016282 <_svfprintf_r+0xa62>
100164ac:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100164ae:	2b01      	cmp	r3, #1
100164b0:	f77f aee7 	ble.w	10016282 <_svfprintf_r+0xa62>
100164b4:	2b11      	cmp	r3, #17
100164b6:	4b8d      	ldr	r3, [pc, #564]	@ (100166ec <_svfprintf_r+0xecc>)
100164b8:	9315      	str	r3, [sp, #84]	@ 0x54
100164ba:	f340 8357 	ble.w	10016b6c <_svfprintf_r+0x134c>
100164be:	f8cd 9020 	str.w	r9, [sp, #32]
100164c2:	f8dd a01c 	ldr.w	sl, [sp, #28]
100164c6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
100164ca:	2510      	movs	r5, #16
100164cc:	4699      	mov	r9, r3
100164ce:	e006      	b.n	100164de <_svfprintf_r+0xcbe>
100164d0:	3708      	adds	r7, #8
100164d2:	f1a8 0810 	sub.w	r8, r8, #16
100164d6:	f1b8 0f10 	cmp.w	r8, #16
100164da:	f340 8345 	ble.w	10016b68 <_svfprintf_r+0x1348>
100164de:	3601      	adds	r6, #1
100164e0:	3410      	adds	r4, #16
100164e2:	2e07      	cmp	r6, #7
100164e4:	e9c7 9500 	strd	r9, r5, [r7]
100164e8:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100164ec:	ddf0      	ble.n	100164d0 <_svfprintf_r+0xcb0>
100164ee:	aa32      	add	r2, sp, #200	@ 0xc8
100164f0:	4659      	mov	r1, fp
100164f2:	4650      	mov	r0, sl
100164f4:	f001 fdec 	bl	100180d0 <__ssprint_r>
100164f8:	2800      	cmp	r0, #0
100164fa:	f040 8298 	bne.w	10016a2e <_svfprintf_r+0x120e>
100164fe:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10016502:	af35      	add	r7, sp, #212	@ 0xd4
10016504:	e7e5      	b.n	100164d2 <_svfprintf_r+0xcb2>
10016506:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016508:	9807      	ldr	r0, [sp, #28]
1001650a:	aa32      	add	r2, sp, #200	@ 0xc8
1001650c:	f001 fde0 	bl	100180d0 <__ssprint_r>
10016510:	2800      	cmp	r0, #0
10016512:	f47f ae3c 	bne.w	1001618e <_svfprintf_r+0x96e>
10016516:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10016518:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001651c:	f7ff baf1 	b.w	10015b02 <_svfprintf_r+0x2e2>
10016520:	990d      	ldr	r1, [sp, #52]	@ 0x34
10016522:	f851 3b04 	ldr.w	r3, [r1], #4
10016526:	910d      	str	r1, [sp, #52]	@ 0x34
10016528:	f019 0110 	ands.w	r1, r9, #16
1001652c:	f47f ac4d 	bne.w	10015dca <_svfprintf_r+0x5aa>
10016530:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10016534:	f000 8362 	beq.w	10016bfc <_svfprintf_r+0x13dc>
10016538:	b29b      	uxth	r3, r3
1001653a:	460a      	mov	r2, r1
1001653c:	e445      	b.n	10015dca <_svfprintf_r+0x5aa>
1001653e:	990d      	ldr	r1, [sp, #52]	@ 0x34
10016540:	f851 3b04 	ldr.w	r3, [r1], #4
10016544:	910d      	str	r1, [sp, #52]	@ 0x34
10016546:	f014 0110 	ands.w	r1, r4, #16
1001654a:	d10b      	bne.n	10016564 <_svfprintf_r+0xd44>
1001654c:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10016550:	d003      	beq.n	1001655a <_svfprintf_r+0xd3a>
10016552:	460a      	mov	r2, r1
10016554:	b29b      	uxth	r3, r3
10016556:	2101      	movs	r1, #1
10016558:	e43a      	b.n	10015dd0 <_svfprintf_r+0x5b0>
1001655a:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
1001655e:	bf1c      	itt	ne
10016560:	b2db      	uxtbne	r3, r3
10016562:	4602      	movne	r2, r0
10016564:	2101      	movs	r1, #1
10016566:	e433      	b.n	10015dd0 <_svfprintf_r+0x5b0>
10016568:	46bb      	mov	fp, r7
1001656a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001656c:	2b00      	cmp	r3, #0
1001656e:	f43f aa5c 	beq.w	10015a2a <_svfprintf_r+0x20a>
10016572:	990c      	ldr	r1, [sp, #48]	@ 0x30
10016574:	4658      	mov	r0, fp
10016576:	f7ff f83d 	bl	100155f4 <_free_r>
1001657a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001657c:	899b      	ldrh	r3, [r3, #12]
1001657e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10016582:	f7ff ba56 	b.w	10015a32 <_svfprintf_r+0x212>
10016586:	f8dd b020 	ldr.w	fp, [sp, #32]
1001658a:	ad5e      	add	r5, sp, #376	@ 0x178
1001658c:	e54a      	b.n	10016024 <_svfprintf_r+0x804>
1001658e:	425b      	negs	r3, r3
10016590:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
10016594:	464c      	mov	r4, r9
10016596:	202d      	movs	r0, #45	@ 0x2d
10016598:	2101      	movs	r1, #1
1001659a:	e41a      	b.n	10015dd2 <_svfprintf_r+0x5b2>
1001659c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001659e:	9807      	ldr	r0, [sp, #28]
100165a0:	aa32      	add	r2, sp, #200	@ 0xc8
100165a2:	f001 fd95 	bl	100180d0 <__ssprint_r>
100165a6:	2800      	cmp	r0, #0
100165a8:	f47f adf1 	bne.w	1001618e <_svfprintf_r+0x96e>
100165ac:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100165b0:	af35      	add	r7, sp, #212	@ 0xd4
100165b2:	e642      	b.n	1001623a <_svfprintf_r+0xa1a>
100165b4:	9909      	ldr	r1, [sp, #36]	@ 0x24
100165b6:	9807      	ldr	r0, [sp, #28]
100165b8:	aa32      	add	r2, sp, #200	@ 0xc8
100165ba:	f001 fd89 	bl	100180d0 <__ssprint_r>
100165be:	2800      	cmp	r0, #0
100165c0:	f47f ade5 	bne.w	1001618e <_svfprintf_r+0x96e>
100165c4:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100165c8:	af35      	add	r7, sp, #212	@ 0xd4
100165ca:	e642      	b.n	10016252 <_svfprintf_r+0xa32>
100165cc:	f019 0f01 	tst.w	r9, #1
100165d0:	f43f aaa9 	beq.w	10015b26 <_svfprintf_r+0x306>
100165d4:	e4d4      	b.n	10015f80 <_svfprintf_r+0x760>
100165d6:	930d      	str	r3, [sp, #52]	@ 0x34
100165d8:	7823      	ldrb	r3, [r4, #0]
100165da:	f7ff b978 	b.w	100158ce <_svfprintf_r+0xae>
100165de:	ad5e      	add	r5, sp, #376	@ 0x178
100165e0:	e520      	b.n	10016024 <_svfprintf_r+0x804>
100165e2:	f419 7f00 	tst.w	r9, #512	@ 0x200
100165e6:	f040 8373 	bne.w	10016cd0 <_svfprintf_r+0x14b0>
100165ea:	17da      	asrs	r2, r3, #31
100165ec:	4611      	mov	r1, r2
100165ee:	f7ff bbb2 	b.w	10015d56 <_svfprintf_r+0x536>
100165f2:	f019 0f10 	tst.w	r9, #16
100165f6:	f040 82b1 	bne.w	10016b5c <_svfprintf_r+0x133c>
100165fa:	f019 0f40 	tst.w	r9, #64	@ 0x40
100165fe:	f040 8361 	bne.w	10016cc4 <_svfprintf_r+0x14a4>
10016602:	f419 7f00 	tst.w	r9, #512	@ 0x200
10016606:	f000 82a9 	beq.w	10016b5c <_svfprintf_r+0x133c>
1001660a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001660c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001660e:	681b      	ldr	r3, [r3, #0]
10016610:	701a      	strb	r2, [r3, #0]
10016612:	e40f      	b.n	10015e34 <_svfprintf_r+0x614>
10016614:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
10016616:	7823      	ldrb	r3, [r4, #0]
10016618:	2a00      	cmp	r2, #0
1001661a:	f43f a958 	beq.w	100158ce <_svfprintf_r+0xae>
1001661e:	7812      	ldrb	r2, [r2, #0]
10016620:	2a00      	cmp	r2, #0
10016622:	f43f a954 	beq.w	100158ce <_svfprintf_r+0xae>
10016626:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
1001662a:	f7ff b950 	b.w	100158ce <_svfprintf_r+0xae>
1001662e:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10016632:	4602      	mov	r2, r0
10016634:	460b      	mov	r3, r1
10016636:	f002 fa83 	bl	10018b40 <__aeabi_dcmpun>
1001663a:	2800      	cmp	r0, #0
1001663c:	f040 860d 	bne.w	1001725a <_svfprintf_r+0x1a3a>
10016640:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10016642:	2b61      	cmp	r3, #97	@ 0x61
10016644:	f000 8504 	beq.w	10017050 <_svfprintf_r+0x1830>
10016648:	2b41      	cmp	r3, #65	@ 0x41
1001664a:	f000 8580 	beq.w	1001714e <_svfprintf_r+0x192e>
1001664e:	9b08      	ldr	r3, [sp, #32]
10016650:	3301      	adds	r3, #1
10016652:	f000 8415 	beq.w	10016e80 <_svfprintf_r+0x1660>
10016656:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10016658:	f023 0320 	bic.w	r3, r3, #32
1001665c:	2b47      	cmp	r3, #71	@ 0x47
1001665e:	d104      	bne.n	1001666a <_svfprintf_r+0xe4a>
10016660:	9b08      	ldr	r3, [sp, #32]
10016662:	2b00      	cmp	r3, #0
10016664:	bf08      	it	eq
10016666:	2301      	moveq	r3, #1
10016668:	9308      	str	r3, [sp, #32]
1001666a:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
1001666e:	f449 7280 	orr.w	r2, r9, #256	@ 0x100
10016672:	2900      	cmp	r1, #0
10016674:	9215      	str	r2, [sp, #84]	@ 0x54
10016676:	f8cd 9018 	str.w	r9, [sp, #24]
1001667a:	f04f 0300 	mov.w	r3, #0
1001667e:	f2c0 851f 	blt.w	100170c0 <_svfprintf_r+0x18a0>
10016682:	e9cd 0124 	strd	r0, r1, [sp, #144]	@ 0x90
10016686:	931f      	str	r3, [sp, #124]	@ 0x7c
10016688:	930c      	str	r3, [sp, #48]	@ 0x30
1001668a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001668c:	3b41      	subs	r3, #65	@ 0x41
1001668e:	2b25      	cmp	r3, #37	@ 0x25
10016690:	f200 8326 	bhi.w	10016ce0 <_svfprintf_r+0x14c0>
10016694:	e8df f013 	tbh	[pc, r3, lsl #1]
10016698:	032403ff 	.word	0x032403ff
1001669c:	03240324 	.word	0x03240324
100166a0:	03fc03f8 	.word	0x03fc03f8
100166a4:	03240324 	.word	0x03240324
100166a8:	03240324 	.word	0x03240324
100166ac:	03240324 	.word	0x03240324
100166b0:	03240324 	.word	0x03240324
100166b4:	03240324 	.word	0x03240324
100166b8:	03240324 	.word	0x03240324
100166bc:	03240324 	.word	0x03240324
100166c0:	03240324 	.word	0x03240324
100166c4:	03240324 	.word	0x03240324
100166c8:	03240324 	.word	0x03240324
100166cc:	03240324 	.word	0x03240324
100166d0:	03240324 	.word	0x03240324
100166d4:	03240324 	.word	0x03240324
100166d8:	03240324 	.word	0x03240324
100166dc:	03240324 	.word	0x03240324
100166e0:	03fc03f8 	.word	0x03fc03f8
100166e4:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100166e8:	f7ff bb62 	b.w	10015db0 <_svfprintf_r+0x590>
100166ec:	100193bc 	.word	0x100193bc
100166f0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100166f4:	464c      	mov	r4, r9
100166f6:	f7ff bbc9 	b.w	10015e8c <_svfprintf_r+0x66c>
100166fa:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100166fe:	4bbd      	ldr	r3, [pc, #756]	@ (100169f4 <_svfprintf_r+0x11d4>)
10016700:	9319      	str	r3, [sp, #100]	@ 0x64
10016702:	f019 0220 	ands.w	r2, r9, #32
10016706:	f000 8108 	beq.w	1001691a <_svfprintf_r+0x10fa>
1001670a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001670c:	3307      	adds	r3, #7
1001670e:	f023 0307 	bic.w	r3, r3, #7
10016712:	4619      	mov	r1, r3
10016714:	685a      	ldr	r2, [r3, #4]
10016716:	f851 3b08 	ldr.w	r3, [r1], #8
1001671a:	910d      	str	r1, [sp, #52]	@ 0x34
1001671c:	f019 0f01 	tst.w	r9, #1
10016720:	d00a      	beq.n	10016738 <_svfprintf_r+0xf18>
10016722:	ea53 0102 	orrs.w	r1, r3, r2
10016726:	d007      	beq.n	10016738 <_svfprintf_r+0xf18>
10016728:	990e      	ldr	r1, [sp, #56]	@ 0x38
1001672a:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
1001672e:	2130      	movs	r1, #48	@ 0x30
10016730:	f049 0902 	orr.w	r9, r9, #2
10016734:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10016738:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001673c:	2102      	movs	r1, #2
1001673e:	f7ff bb47 	b.w	10015dd0 <_svfprintf_r+0x5b0>
10016742:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10016746:	4bac      	ldr	r3, [pc, #688]	@ (100169f8 <_svfprintf_r+0x11d8>)
10016748:	9319      	str	r3, [sp, #100]	@ 0x64
1001674a:	e7da      	b.n	10016702 <_svfprintf_r+0xee2>
1001674c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001674e:	681b      	ldr	r3, [r3, #0]
10016750:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10016754:	2301      	movs	r3, #1
10016756:	9306      	str	r3, [sp, #24]
10016758:	469b      	mov	fp, r3
1001675a:	ad45      	add	r5, sp, #276	@ 0x114
1001675c:	f7ff baaf 	b.w	10015cbe <_svfprintf_r+0x49e>
10016760:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016762:	9807      	ldr	r0, [sp, #28]
10016764:	aa32      	add	r2, sp, #200	@ 0xc8
10016766:	f001 fcb3 	bl	100180d0 <__ssprint_r>
1001676a:	2800      	cmp	r0, #0
1001676c:	f47f ad0f 	bne.w	1001618e <_svfprintf_r+0x96e>
10016770:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10016772:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016776:	e411      	b.n	10015f9c <_svfprintf_r+0x77c>
10016778:	2140      	movs	r1, #64	@ 0x40
1001677a:	4658      	mov	r0, fp
1001677c:	f7f9 fba4 	bl	1000fec8 <_malloc_r>
10016780:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10016782:	6018      	str	r0, [r3, #0]
10016784:	6118      	str	r0, [r3, #16]
10016786:	2800      	cmp	r0, #0
10016788:	f000 8610 	beq.w	100173ac <_svfprintf_r+0x1b8c>
1001678c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001678e:	2340      	movs	r3, #64	@ 0x40
10016790:	6153      	str	r3, [r2, #20]
10016792:	f7ff b861 	b.w	10015858 <_svfprintf_r+0x38>
10016796:	9b08      	ldr	r3, [sp, #32]
10016798:	950c      	str	r5, [sp, #48]	@ 0x30
1001679a:	2b06      	cmp	r3, #6
1001679c:	4629      	mov	r1, r5
1001679e:	bf28      	it	cs
100167a0:	2306      	movcs	r3, #6
100167a2:	9508      	str	r5, [sp, #32]
100167a4:	462a      	mov	r2, r5
100167a6:	9306      	str	r3, [sp, #24]
100167a8:	4d94      	ldr	r5, [pc, #592]	@ (100169fc <_svfprintf_r+0x11dc>)
100167aa:	960d      	str	r6, [sp, #52]	@ 0x34
100167ac:	469b      	mov	fp, r3
100167ae:	9114      	str	r1, [sp, #80]	@ 0x50
100167b0:	9110      	str	r1, [sp, #64]	@ 0x40
100167b2:	9112      	str	r1, [sp, #72]	@ 0x48
100167b4:	f7ff ba1b 	b.w	10015bee <_svfprintf_r+0x3ce>
100167b8:	2e10      	cmp	r6, #16
100167ba:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100167bc:	f340 85e7 	ble.w	1001738e <_svfprintf_r+0x1b6e>
100167c0:	488f      	ldr	r0, [pc, #572]	@ (10016a00 <_svfprintf_r+0x11e0>)
100167c2:	f8dd a01c 	ldr.w	sl, [sp, #28]
100167c6:	9015      	str	r0, [sp, #84]	@ 0x54
100167c8:	4642      	mov	r2, r8
100167ca:	4621      	mov	r1, r4
100167cc:	46a8      	mov	r8, r5
100167ce:	9c09      	ldr	r4, [sp, #36]	@ 0x24
100167d0:	2710      	movs	r7, #16
100167d2:	4605      	mov	r5, r0
100167d4:	e004      	b.n	100167e0 <_svfprintf_r+0xfc0>
100167d6:	3208      	adds	r2, #8
100167d8:	3e10      	subs	r6, #16
100167da:	2e10      	cmp	r6, #16
100167dc:	f340 8223 	ble.w	10016c26 <_svfprintf_r+0x1406>
100167e0:	3301      	adds	r3, #1
100167e2:	3110      	adds	r1, #16
100167e4:	2b07      	cmp	r3, #7
100167e6:	e9c2 5700 	strd	r5, r7, [r2]
100167ea:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
100167ee:	ddf2      	ble.n	100167d6 <_svfprintf_r+0xfb6>
100167f0:	aa32      	add	r2, sp, #200	@ 0xc8
100167f2:	4621      	mov	r1, r4
100167f4:	4650      	mov	r0, sl
100167f6:	f001 fc6b 	bl	100180d0 <__ssprint_r>
100167fa:	2800      	cmp	r0, #0
100167fc:	f040 8117 	bne.w	10016a2e <_svfprintf_r+0x120e>
10016800:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
10016804:	aa35      	add	r2, sp, #212	@ 0xd4
10016806:	e7e7      	b.n	100167d8 <_svfprintf_r+0xfb8>
10016808:	4621      	mov	r1, r4
1001680a:	461c      	mov	r4, r3
1001680c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001680e:	f8cd b020 	str.w	fp, [sp, #32]
10016812:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
10016816:	4642      	mov	r2, r8
10016818:	4f79      	ldr	r7, [pc, #484]	@ (10016a00 <_svfprintf_r+0x11e0>)
1001681a:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
1001681e:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
10016822:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
10016826:	f8dd b01c 	ldr.w	fp, [sp, #28]
1001682a:	b383      	cbz	r3, 1001688e <_svfprintf_r+0x106e>
1001682c:	f1b9 0f00 	cmp.w	r9, #0
10016830:	f000 80ff 	beq.w	10016a32 <_svfprintf_r+0x1212>
10016834:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10016838:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001683a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1001683c:	3001      	adds	r0, #1
1001683e:	4441      	add	r1, r8
10016840:	2807      	cmp	r0, #7
10016842:	e9c2 3800 	strd	r3, r8, [r2]
10016846:	9134      	str	r1, [sp, #208]	@ 0xd0
10016848:	9033      	str	r0, [sp, #204]	@ 0xcc
1001684a:	dc75      	bgt.n	10016938 <_svfprintf_r+0x1118>
1001684c:	3208      	adds	r2, #8
1001684e:	9b08      	ldr	r3, [sp, #32]
10016850:	f89a 0000 	ldrb.w	r0, [sl]
10016854:	1b1e      	subs	r6, r3, r4
10016856:	4286      	cmp	r6, r0
10016858:	bfa8      	it	ge
1001685a:	4606      	movge	r6, r0
1001685c:	2e00      	cmp	r6, #0
1001685e:	dd0c      	ble.n	1001687a <_svfprintf_r+0x105a>
10016860:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10016862:	3001      	adds	r0, #1
10016864:	4431      	add	r1, r6
10016866:	2807      	cmp	r0, #7
10016868:	e9c2 4600 	strd	r4, r6, [r2]
1001686c:	9134      	str	r1, [sp, #208]	@ 0xd0
1001686e:	9033      	str	r0, [sp, #204]	@ 0xcc
10016870:	f300 8167 	bgt.w	10016b42 <_svfprintf_r+0x1322>
10016874:	f89a 0000 	ldrb.w	r0, [sl]
10016878:	3208      	adds	r2, #8
1001687a:	2e00      	cmp	r6, #0
1001687c:	bfac      	ite	ge
1001687e:	1b85      	subge	r5, r0, r6
10016880:	4605      	movlt	r5, r0
10016882:	2d00      	cmp	r5, #0
10016884:	dc13      	bgt.n	100168ae <_svfprintf_r+0x108e>
10016886:	4404      	add	r4, r0
10016888:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001688a:	2b00      	cmp	r3, #0
1001688c:	d1ce      	bne.n	1001682c <_svfprintf_r+0x100c>
1001688e:	f1b9 0f00 	cmp.w	r9, #0
10016892:	d1cf      	bne.n	10016834 <_svfprintf_r+0x1014>
10016894:	f8dd b020 	ldr.w	fp, [sp, #32]
10016898:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
1001689c:	46a2      	mov	sl, r4
1001689e:	45da      	cmp	sl, fp
100168a0:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
100168a4:	4690      	mov	r8, r2
100168a6:	460c      	mov	r4, r1
100168a8:	bf28      	it	cs
100168aa:	46da      	movcs	sl, fp
100168ac:	e58b      	b.n	100163c6 <_svfprintf_r+0xba6>
100168ae:	2d10      	cmp	r5, #16
100168b0:	9833      	ldr	r0, [sp, #204]	@ 0xcc
100168b2:	f340 853c 	ble.w	1001732e <_svfprintf_r+0x1b0e>
100168b6:	4623      	mov	r3, r4
100168b8:	463e      	mov	r6, r7
100168ba:	462c      	mov	r4, r5
100168bc:	461d      	mov	r5, r3
100168be:	e004      	b.n	100168ca <_svfprintf_r+0x10aa>
100168c0:	3c10      	subs	r4, #16
100168c2:	2c10      	cmp	r4, #16
100168c4:	f102 0208 	add.w	r2, r2, #8
100168c8:	dd16      	ble.n	100168f8 <_svfprintf_r+0x10d8>
100168ca:	3001      	adds	r0, #1
100168cc:	3110      	adds	r1, #16
100168ce:	2310      	movs	r3, #16
100168d0:	2807      	cmp	r0, #7
100168d2:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
100168d6:	6017      	str	r7, [r2, #0]
100168d8:	6053      	str	r3, [r2, #4]
100168da:	ddf1      	ble.n	100168c0 <_svfprintf_r+0x10a0>
100168dc:	9909      	ldr	r1, [sp, #36]	@ 0x24
100168de:	aa32      	add	r2, sp, #200	@ 0xc8
100168e0:	4658      	mov	r0, fp
100168e2:	f001 fbf5 	bl	100180d0 <__ssprint_r>
100168e6:	2800      	cmp	r0, #0
100168e8:	f47f ae3f 	bne.w	1001656a <_svfprintf_r+0xd4a>
100168ec:	3c10      	subs	r4, #16
100168ee:	2c10      	cmp	r4, #16
100168f0:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
100168f4:	aa35      	add	r2, sp, #212	@ 0xd4
100168f6:	dce8      	bgt.n	100168ca <_svfprintf_r+0x10aa>
100168f8:	462b      	mov	r3, r5
100168fa:	4625      	mov	r5, r4
100168fc:	461c      	mov	r4, r3
100168fe:	3001      	adds	r0, #1
10016900:	4429      	add	r1, r5
10016902:	2807      	cmp	r0, #7
10016904:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10016908:	6016      	str	r6, [r2, #0]
1001690a:	6055      	str	r5, [r2, #4]
1001690c:	f300 837d 	bgt.w	1001700a <_svfprintf_r+0x17ea>
10016910:	f89a 0000 	ldrb.w	r0, [sl]
10016914:	3208      	adds	r2, #8
10016916:	4404      	add	r4, r0
10016918:	e7b6      	b.n	10016888 <_svfprintf_r+0x1068>
1001691a:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001691c:	f851 3b04 	ldr.w	r3, [r1], #4
10016920:	910d      	str	r1, [sp, #52]	@ 0x34
10016922:	f019 0110 	ands.w	r1, r9, #16
10016926:	f47f aef9 	bne.w	1001671c <_svfprintf_r+0xefc>
1001692a:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001692e:	f000 815f 	beq.w	10016bf0 <_svfprintf_r+0x13d0>
10016932:	b29b      	uxth	r3, r3
10016934:	460a      	mov	r2, r1
10016936:	e6f1      	b.n	1001671c <_svfprintf_r+0xefc>
10016938:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001693a:	aa32      	add	r2, sp, #200	@ 0xc8
1001693c:	4658      	mov	r0, fp
1001693e:	f001 fbc7 	bl	100180d0 <__ssprint_r>
10016942:	2800      	cmp	r0, #0
10016944:	f47f ae11 	bne.w	1001656a <_svfprintf_r+0xd4a>
10016948:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001694a:	aa35      	add	r2, sp, #212	@ 0xd4
1001694c:	e77f      	b.n	1001684e <_svfprintf_r+0x102e>
1001694e:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10016952:	2100      	movs	r1, #0
10016954:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10016958:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 10016a04 <_svfprintf_r+0x11e4>
1001695c:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10016960:	9406      	str	r4, [sp, #24]
10016962:	ad5e      	add	r5, sp, #376	@ 0x178
10016964:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10016968:	2705      	movs	r7, #5
1001696a:	468c      	mov	ip, r1
1001696c:	465e      	mov	r6, fp
1001696e:	e005      	b.n	1001697c <_svfprintf_r+0x115c>
10016970:	2b0a      	cmp	r3, #10
10016972:	f172 0200 	sbcs.w	r2, r2, #0
10016976:	d333      	bcc.n	100169e0 <_svfprintf_r+0x11c0>
10016978:	465b      	mov	r3, fp
1001697a:	4622      	mov	r2, r4
1001697c:	1899      	adds	r1, r3, r2
1001697e:	f141 0100 	adc.w	r1, r1, #0
10016982:	fba9 0401 	umull	r0, r4, r9, r1
10016986:	f024 0003 	bic.w	r0, r4, #3
1001698a:	eb00 0094 	add.w	r0, r0, r4, lsr #2
1001698e:	1a09      	subs	r1, r1, r0
10016990:	1a58      	subs	r0, r3, r1
10016992:	f162 0e00 	sbc.w	lr, r2, #0
10016996:	fb0a f400 	mul.w	r4, sl, r0
1001699a:	fba0 b009 	umull	fp, r0, r0, r9
1001699e:	fb09 440e 	mla	r4, r9, lr, r4
100169a2:	f00b 0e01 	and.w	lr, fp, #1
100169a6:	4404      	add	r4, r0
100169a8:	fbae 0e07 	umull	r0, lr, lr, r7
100169ac:	1840      	adds	r0, r0, r1
100169ae:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
100169b2:	3030      	adds	r0, #48	@ 0x30
100169b4:	f805 0c01 	strb.w	r0, [r5, #-1]
100169b8:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
100169bc:	f10c 0c01 	add.w	ip, ip, #1
100169c0:	3d01      	subs	r5, #1
100169c2:	0864      	lsrs	r4, r4, #1
100169c4:	2e00      	cmp	r6, #0
100169c6:	d0d3      	beq.n	10016970 <_svfprintf_r+0x1150>
100169c8:	f898 1000 	ldrb.w	r1, [r8]
100169cc:	458c      	cmp	ip, r1
100169ce:	d1cf      	bne.n	10016970 <_svfprintf_r+0x1150>
100169d0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
100169d4:	d0cc      	beq.n	10016970 <_svfprintf_r+0x1150>
100169d6:	2b0a      	cmp	r3, #10
100169d8:	f172 0200 	sbcs.w	r2, r2, #0
100169dc:	f080 8136 	bcs.w	10016c4c <_svfprintf_r+0x142c>
100169e0:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
100169e4:	9c06      	ldr	r4, [sp, #24]
100169e6:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
100169ea:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
100169ee:	f7ff bb15 	b.w	1001601c <_svfprintf_r+0x7fc>
100169f2:	bf00      	nop
100169f4:	10019188 	.word	0x10019188
100169f8:	10019174 	.word	0x10019174
100169fc:	1001919c 	.word	0x1001919c
10016a00:	100193bc 	.word	0x100193bc
10016a04:	cccccccd 	.word	0xcccccccd
10016a08:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016a0a:	9807      	ldr	r0, [sp, #28]
10016a0c:	9315      	str	r3, [sp, #84]	@ 0x54
10016a0e:	aa32      	add	r2, sp, #200	@ 0xc8
10016a10:	f001 fb5e 	bl	100180d0 <__ssprint_r>
10016a14:	2800      	cmp	r0, #0
10016a16:	f47f abba 	bne.w	1001618e <_svfprintf_r+0x96e>
10016a1a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10016a1e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10016a20:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10016a22:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016a26:	f7ff b83f 	b.w	10015aa8 <_svfprintf_r+0x288>
10016a2a:	46a3      	mov	fp, r4
10016a2c:	e59d      	b.n	1001656a <_svfprintf_r+0xd4a>
10016a2e:	46d3      	mov	fp, sl
10016a30:	e59b      	b.n	1001656a <_svfprintf_r+0xd4a>
10016a32:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10016a34:	3b01      	subs	r3, #1
10016a36:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
10016a3a:	9310      	str	r3, [sp, #64]	@ 0x40
10016a3c:	e6fc      	b.n	10016838 <_svfprintf_r+0x1018>
10016a3e:	2901      	cmp	r1, #1
10016a40:	464c      	mov	r4, r9
10016a42:	f47f aadb 	bne.w	10015ffc <_svfprintf_r+0x7dc>
10016a46:	e42f      	b.n	100162a8 <_svfprintf_r+0xa88>
10016a48:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016a4a:	9807      	ldr	r0, [sp, #28]
10016a4c:	aa32      	add	r2, sp, #200	@ 0xc8
10016a4e:	f001 fb3f 	bl	100180d0 <__ssprint_r>
10016a52:	2800      	cmp	r0, #0
10016a54:	f47f ab9b 	bne.w	1001618e <_svfprintf_r+0x96e>
10016a58:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10016a5a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016a5e:	f7ff ba8a 	b.w	10015f76 <_svfprintf_r+0x756>
10016a62:	af30      	add	r7, sp, #192	@ 0xc0
10016a64:	2208      	movs	r2, #8
10016a66:	2100      	movs	r1, #0
10016a68:	4638      	mov	r0, r7
10016a6a:	952b      	str	r5, [sp, #172]	@ 0xac
10016a6c:	f7fd fac8 	bl	10014000 <memset>
10016a70:	9b08      	ldr	r3, [sp, #32]
10016a72:	1c58      	adds	r0, r3, #1
10016a74:	f000 80c9 	beq.w	10016c0a <_svfprintf_r+0x13ea>
10016a78:	2400      	movs	r4, #0
10016a7a:	f8cd 9018 	str.w	r9, [sp, #24]
10016a7e:	46a3      	mov	fp, r4
10016a80:	f8dd 901c 	ldr.w	r9, [sp, #28]
10016a84:	469a      	mov	sl, r3
10016a86:	e00c      	b.n	10016aa2 <_svfprintf_r+0x1282>
10016a88:	a945      	add	r1, sp, #276	@ 0x114
10016a8a:	4648      	mov	r0, r9
10016a8c:	f7fd fd24 	bl	100144d8 <_wcrtomb_r>
10016a90:	1c41      	adds	r1, r0, #1
10016a92:	4458      	add	r0, fp
10016a94:	f000 838e 	beq.w	100171b4 <_svfprintf_r+0x1994>
10016a98:	4550      	cmp	r0, sl
10016a9a:	dc08      	bgt.n	10016aae <_svfprintf_r+0x128e>
10016a9c:	f000 8441 	beq.w	10017322 <_svfprintf_r+0x1b02>
10016aa0:	4683      	mov	fp, r0
10016aa2:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
10016aa4:	5912      	ldr	r2, [r2, r4]
10016aa6:	463b      	mov	r3, r7
10016aa8:	3404      	adds	r4, #4
10016aaa:	2a00      	cmp	r2, #0
10016aac:	d1ec      	bne.n	10016a88 <_svfprintf_r+0x1268>
10016aae:	f8dd 9018 	ldr.w	r9, [sp, #24]
10016ab2:	f1bb 0f00 	cmp.w	fp, #0
10016ab6:	f000 80dd 	beq.w	10016c74 <_svfprintf_r+0x1454>
10016aba:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
10016abe:	f300 81b9 	bgt.w	10016e34 <_svfprintf_r+0x1614>
10016ac2:	2300      	movs	r3, #0
10016ac4:	930c      	str	r3, [sp, #48]	@ 0x30
10016ac6:	ad45      	add	r5, sp, #276	@ 0x114
10016ac8:	2208      	movs	r2, #8
10016aca:	2100      	movs	r1, #0
10016acc:	4638      	mov	r0, r7
10016ace:	f7fd fa97 	bl	10014000 <memset>
10016ad2:	9807      	ldr	r0, [sp, #28]
10016ad4:	9700      	str	r7, [sp, #0]
10016ad6:	465b      	mov	r3, fp
10016ad8:	aa2b      	add	r2, sp, #172	@ 0xac
10016ada:	4629      	mov	r1, r5
10016adc:	f7fd fd22 	bl	10014524 <_wcsrtombs_r>
10016ae0:	4583      	cmp	fp, r0
10016ae2:	f040 845a 	bne.w	1001739a <_svfprintf_r+0x1b7a>
10016ae6:	2300      	movs	r3, #0
10016ae8:	f805 300b 	strb.w	r3, [r5, fp]
10016aec:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10016af0:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10016af4:	960d      	str	r6, [sp, #52]	@ 0x34
10016af6:	9308      	str	r3, [sp, #32]
10016af8:	9106      	str	r1, [sp, #24]
10016afa:	9314      	str	r3, [sp, #80]	@ 0x50
10016afc:	9310      	str	r3, [sp, #64]	@ 0x40
10016afe:	9312      	str	r3, [sp, #72]	@ 0x48
10016b00:	f7ff b875 	b.w	10015bee <_svfprintf_r+0x3ce>
10016b04:	46cb      	mov	fp, r9
10016b06:	e530      	b.n	1001656a <_svfprintf_r+0xd4a>
10016b08:	4a74      	ldr	r2, [pc, #464]	@ (10016cdc <_svfprintf_r+0x14bc>)
10016b0a:	9215      	str	r2, [sp, #84]	@ 0x54
10016b0c:	3301      	adds	r3, #1
10016b0e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10016b10:	f8c8 2000 	str.w	r2, [r8]
10016b14:	442c      	add	r4, r5
10016b16:	2b07      	cmp	r3, #7
10016b18:	f8c8 5004 	str.w	r5, [r8, #4]
10016b1c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10016b20:	f77e afff 	ble.w	10015b22 <_svfprintf_r+0x302>
10016b24:	f7ff bb69 	b.w	100161fa <_svfprintf_r+0x9da>
10016b28:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016b2a:	9807      	ldr	r0, [sp, #28]
10016b2c:	aa32      	add	r2, sp, #200	@ 0xc8
10016b2e:	f001 facf 	bl	100180d0 <__ssprint_r>
10016b32:	2800      	cmp	r0, #0
10016b34:	f47f ab2b 	bne.w	1001618e <_svfprintf_r+0x96e>
10016b38:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10016b3a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016b3e:	f7fe bfda 	b.w	10015af6 <_svfprintf_r+0x2d6>
10016b42:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016b44:	aa32      	add	r2, sp, #200	@ 0xc8
10016b46:	4658      	mov	r0, fp
10016b48:	f001 fac2 	bl	100180d0 <__ssprint_r>
10016b4c:	2800      	cmp	r0, #0
10016b4e:	f47f ad0c 	bne.w	1001656a <_svfprintf_r+0xd4a>
10016b52:	f89a 0000 	ldrb.w	r0, [sl]
10016b56:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10016b58:	aa35      	add	r2, sp, #212	@ 0xd4
10016b5a:	e68e      	b.n	1001687a <_svfprintf_r+0x105a>
10016b5c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10016b5e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016b60:	681b      	ldr	r3, [r3, #0]
10016b62:	601a      	str	r2, [r3, #0]
10016b64:	f7ff b966 	b.w	10015e34 <_svfprintf_r+0x614>
10016b68:	f8dd 9020 	ldr.w	r9, [sp, #32]
10016b6c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10016b6e:	603b      	str	r3, [r7, #0]
10016b70:	3601      	adds	r6, #1
10016b72:	4444      	add	r4, r8
10016b74:	2e07      	cmp	r6, #7
10016b76:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10016b7a:	f8c7 8004 	str.w	r8, [r7, #4]
10016b7e:	f77f ab7f 	ble.w	10016280 <_svfprintf_r+0xa60>
10016b82:	e487      	b.n	10016494 <_svfprintf_r+0xc74>
10016b84:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10016b86:	991a      	ldr	r1, [sp, #104]	@ 0x68
10016b88:	441c      	add	r4, r3
10016b8a:	e9c8 1300 	strd	r1, r3, [r8]
10016b8e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10016b90:	9434      	str	r4, [sp, #208]	@ 0xd0
10016b92:	3301      	adds	r3, #1
10016b94:	2b07      	cmp	r3, #7
10016b96:	9333      	str	r3, [sp, #204]	@ 0xcc
10016b98:	f300 8164 	bgt.w	10016e64 <_svfprintf_r+0x1644>
10016b9c:	f108 0808 	add.w	r8, r8, #8
10016ba0:	2a00      	cmp	r2, #0
10016ba2:	f6bf ab1e 	bge.w	100161e2 <_svfprintf_r+0x9c2>
10016ba6:	4256      	negs	r6, r2
10016ba8:	3210      	adds	r2, #16
10016baa:	4a4c      	ldr	r2, [pc, #304]	@ (10016cdc <_svfprintf_r+0x14bc>)
10016bac:	9215      	str	r2, [sp, #84]	@ 0x54
10016bae:	f280 82e7 	bge.w	10017180 <_svfprintf_r+0x1960>
10016bb2:	46aa      	mov	sl, r5
10016bb4:	2710      	movs	r7, #16
10016bb6:	4615      	mov	r5, r2
10016bb8:	e005      	b.n	10016bc6 <_svfprintf_r+0x13a6>
10016bba:	f108 0808 	add.w	r8, r8, #8
10016bbe:	3e10      	subs	r6, #16
10016bc0:	2e10      	cmp	r6, #16
10016bc2:	f340 82dc 	ble.w	1001717e <_svfprintf_r+0x195e>
10016bc6:	3301      	adds	r3, #1
10016bc8:	3410      	adds	r4, #16
10016bca:	2b07      	cmp	r3, #7
10016bcc:	e9c8 5700 	strd	r5, r7, [r8]
10016bd0:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10016bd4:	ddf1      	ble.n	10016bba <_svfprintf_r+0x139a>
10016bd6:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016bd8:	9807      	ldr	r0, [sp, #28]
10016bda:	aa32      	add	r2, sp, #200	@ 0xc8
10016bdc:	f001 fa78 	bl	100180d0 <__ssprint_r>
10016be0:	2800      	cmp	r0, #0
10016be2:	f47f aad4 	bne.w	1001618e <_svfprintf_r+0x96e>
10016be6:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10016bea:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016bee:	e7e6      	b.n	10016bbe <_svfprintf_r+0x139e>
10016bf0:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10016bf4:	bf1c      	itt	ne
10016bf6:	b2db      	uxtbne	r3, r3
10016bf8:	4602      	movne	r2, r0
10016bfa:	e58f      	b.n	1001671c <_svfprintf_r+0xefc>
10016bfc:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10016c00:	bf1c      	itt	ne
10016c02:	b2db      	uxtbne	r3, r3
10016c04:	4602      	movne	r2, r0
10016c06:	f7ff b8e0 	b.w	10015dca <_svfprintf_r+0x5aa>
10016c0a:	2300      	movs	r3, #0
10016c0c:	9807      	ldr	r0, [sp, #28]
10016c0e:	9700      	str	r7, [sp, #0]
10016c10:	aa2b      	add	r2, sp, #172	@ 0xac
10016c12:	4619      	mov	r1, r3
10016c14:	f7fd fc86 	bl	10014524 <_wcsrtombs_r>
10016c18:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10016c1c:	4683      	mov	fp, r0
10016c1e:	f000 82c9 	beq.w	100171b4 <_svfprintf_r+0x1994>
10016c22:	952b      	str	r5, [sp, #172]	@ 0xac
10016c24:	e745      	b.n	10016ab2 <_svfprintf_r+0x1292>
10016c26:	4645      	mov	r5, r8
10016c28:	460c      	mov	r4, r1
10016c2a:	4690      	mov	r8, r2
10016c2c:	3301      	adds	r3, #1
10016c2e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10016c30:	f8c8 2000 	str.w	r2, [r8]
10016c34:	4434      	add	r4, r6
10016c36:	2b07      	cmp	r3, #7
10016c38:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10016c3c:	f8c8 6004 	str.w	r6, [r8, #4]
10016c40:	f300 8103 	bgt.w	10016e4a <_svfprintf_r+0x162a>
10016c44:	f108 0808 	add.w	r8, r8, #8
10016c48:	f7ff bbb6 	b.w	100163b8 <_svfprintf_r+0xb98>
10016c4c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10016c4e:	991d      	ldr	r1, [sp, #116]	@ 0x74
10016c50:	1aed      	subs	r5, r5, r3
10016c52:	461a      	mov	r2, r3
10016c54:	4628      	mov	r0, r5
10016c56:	f7fd fa25 	bl	100140a4 <strncpy>
10016c5a:	f898 3001 	ldrb.w	r3, [r8, #1]
10016c5e:	b10b      	cbz	r3, 10016c64 <_svfprintf_r+0x1444>
10016c60:	f108 0801 	add.w	r8, r8, #1
10016c64:	f04f 0c00 	mov.w	ip, #0
10016c68:	e686      	b.n	10016978 <_svfprintf_r+0x1158>
10016c6a:	222d      	movs	r2, #45	@ 0x2d
10016c6c:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10016c70:	f7fe bfac 	b.w	10015bcc <_svfprintf_r+0x3ac>
10016c74:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10016c78:	960d      	str	r6, [sp, #52]	@ 0x34
10016c7a:	f8cd b018 	str.w	fp, [sp, #24]
10016c7e:	f8cd b020 	str.w	fp, [sp, #32]
10016c82:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10016c86:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
10016c8a:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
10016c8e:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10016c92:	f7fe bfac 	b.w	10015bee <_svfprintf_r+0x3ce>
10016c96:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016c98:	9807      	ldr	r0, [sp, #28]
10016c9a:	aa32      	add	r2, sp, #200	@ 0xc8
10016c9c:	f001 fa18 	bl	100180d0 <__ssprint_r>
10016ca0:	2800      	cmp	r0, #0
10016ca2:	f47f aa74 	bne.w	1001618e <_svfprintf_r+0x96e>
10016ca6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10016ca8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10016caa:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016cae:	f7ff ba81 	b.w	100161b4 <_svfprintf_r+0x994>
10016cb2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10016cb4:	ebab 060a 	sub.w	r6, fp, sl
10016cb8:	1b5d      	subs	r5, r3, r5
10016cba:	42ae      	cmp	r6, r5
10016cbc:	bfa8      	it	ge
10016cbe:	462e      	movge	r6, r5
10016cc0:	f7ff bbae 	b.w	10016420 <_svfprintf_r+0xc00>
10016cc4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10016cc6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10016cc8:	681b      	ldr	r3, [r3, #0]
10016cca:	801a      	strh	r2, [r3, #0]
10016ccc:	f7ff b8b2 	b.w	10015e34 <_svfprintf_r+0x614>
10016cd0:	f343 12c0 	sbfx	r2, r3, #7, #1
10016cd4:	4611      	mov	r1, r2
10016cd6:	b25b      	sxtb	r3, r3
10016cd8:	f7ff b83d 	b.w	10015d56 <_svfprintf_r+0x536>
10016cdc:	100193bc 	.word	0x100193bc
10016ce0:	9e08      	ldr	r6, [sp, #32]
10016ce2:	2302      	movs	r3, #2
10016ce4:	e9cd 3600 	strd	r3, r6, [sp]
10016ce8:	ab30      	add	r3, sp, #192	@ 0xc0
10016cea:	9304      	str	r3, [sp, #16]
10016cec:	ab2b      	add	r3, sp, #172	@ 0xac
10016cee:	9303      	str	r3, [sp, #12]
10016cf0:	ab29      	add	r3, sp, #164	@ 0xa4
10016cf2:	9302      	str	r3, [sp, #8]
10016cf4:	9807      	ldr	r0, [sp, #28]
10016cf6:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
10016cfa:	f7fd fcfd 	bl	100146f8 <_dtoa_r>
10016cfe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10016d00:	2b67      	cmp	r3, #103	@ 0x67
10016d02:	4605      	mov	r5, r0
10016d04:	f000 813b 	beq.w	10016f7e <_svfprintf_r+0x175e>
10016d08:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10016d0a:	2b47      	cmp	r3, #71	@ 0x47
10016d0c:	f000 8137 	beq.w	10016f7e <_svfprintf_r+0x175e>
10016d10:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10016d12:	f023 0720 	bic.w	r7, r3, #32
10016d16:	2f46      	cmp	r7, #70	@ 0x46
10016d18:	eb00 0406 	add.w	r4, r0, r6
10016d1c:	d105      	bne.n	10016d2a <_svfprintf_r+0x150a>
10016d1e:	7803      	ldrb	r3, [r0, #0]
10016d20:	2b30      	cmp	r3, #48	@ 0x30
10016d22:	f000 82f1 	beq.w	10017308 <_svfprintf_r+0x1ae8>
10016d26:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
10016d28:	4434      	add	r4, r6
10016d2a:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10016d2e:	2200      	movs	r2, #0
10016d30:	2300      	movs	r3, #0
10016d32:	f001 fed3 	bl	10018adc <__aeabi_dcmpeq>
10016d36:	2800      	cmp	r0, #0
10016d38:	f000 813f 	beq.w	10016fba <_svfprintf_r+0x179a>
10016d3c:	4623      	mov	r3, r4
10016d3e:	1b5b      	subs	r3, r3, r5
10016d40:	9313      	str	r3, [sp, #76]	@ 0x4c
10016d42:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10016d44:	9212      	str	r2, [sp, #72]	@ 0x48
10016d46:	2f47      	cmp	r7, #71	@ 0x47
10016d48:	f000 8121 	beq.w	10016f8e <_svfprintf_r+0x176e>
10016d4c:	2f46      	cmp	r7, #70	@ 0x46
10016d4e:	f000 81e3 	beq.w	10017118 <_svfprintf_r+0x18f8>
10016d52:	990e      	ldr	r1, [sp, #56]	@ 0x38
10016d54:	1e53      	subs	r3, r2, #1
10016d56:	2961      	cmp	r1, #97	@ 0x61
10016d58:	9329      	str	r3, [sp, #164]	@ 0xa4
10016d5a:	f000 8316 	beq.w	1001738a <_svfprintf_r+0x1b6a>
10016d5e:	2941      	cmp	r1, #65	@ 0x41
10016d60:	f040 8120 	bne.w	10016fa4 <_svfprintf_r+0x1784>
10016d64:	2150      	movs	r1, #80	@ 0x50
10016d66:	2001      	movs	r0, #1
10016d68:	2b00      	cmp	r3, #0
10016d6a:	bfb6      	itet	lt
10016d6c:	f1c2 0301 	rsblt	r3, r2, #1
10016d70:	222b      	movge	r2, #43	@ 0x2b
10016d72:	222d      	movlt	r2, #45	@ 0x2d
10016d74:	2b09      	cmp	r3, #9
10016d76:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
10016d7a:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
10016d7e:	f340 8227 	ble.w	100171d0 <_svfprintf_r+0x19b0>
10016d82:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
10016d86:	4eae      	ldr	r6, [pc, #696]	@ (10017040 <_svfprintf_r+0x1820>)
10016d88:	4622      	mov	r2, r4
10016d8a:	4610      	mov	r0, r2
10016d8c:	fba6 1203 	umull	r1, r2, r6, r3
10016d90:	08d2      	lsrs	r2, r2, #3
10016d92:	eb02 0182 	add.w	r1, r2, r2, lsl #2
10016d96:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
10016d9a:	3130      	adds	r1, #48	@ 0x30
10016d9c:	f800 1c01 	strb.w	r1, [r0, #-1]
10016da0:	4619      	mov	r1, r3
10016da2:	2963      	cmp	r1, #99	@ 0x63
10016da4:	4613      	mov	r3, r2
10016da6:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
10016daa:	dcee      	bgt.n	10016d8a <_svfprintf_r+0x156a>
10016dac:	3330      	adds	r3, #48	@ 0x30
10016dae:	f802 3c01 	strb.w	r3, [r2, #-1]
10016db2:	1e83      	subs	r3, r0, #2
10016db4:	42a3      	cmp	r3, r4
10016db6:	f080 82ed 	bcs.w	10017394 <_svfprintf_r+0x1b74>
10016dba:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
10016dbe:	f813 1b01 	ldrb.w	r1, [r3], #1
10016dc2:	f802 1f01 	strb.w	r1, [r2, #1]!
10016dc6:	42a3      	cmp	r3, r4
10016dc8:	d1f9      	bne.n	10016dbe <_svfprintf_r+0x159e>
10016dca:	ab5e      	add	r3, sp, #376	@ 0x178
10016dcc:	1a18      	subs	r0, r3, r0
10016dce:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
10016dd2:	931c      	str	r3, [sp, #112]	@ 0x70
10016dd4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10016dd6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10016dd8:	2b01      	cmp	r3, #1
10016dda:	eb03 0b02 	add.w	fp, r3, r2
10016dde:	f340 822a 	ble.w	10017236 <_svfprintf_r+0x1a16>
10016de2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10016de4:	449b      	add	fp, r3
10016de6:	9b06      	ldr	r3, [sp, #24]
10016de8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10016dec:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
10016df0:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
10016df4:	2300      	movs	r3, #0
10016df6:	9314      	str	r3, [sp, #80]	@ 0x50
10016df8:	9206      	str	r2, [sp, #24]
10016dfa:	9310      	str	r3, [sp, #64]	@ 0x40
10016dfc:	9312      	str	r3, [sp, #72]	@ 0x48
10016dfe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
10016e00:	2b00      	cmp	r3, #0
10016e02:	f040 80d3 	bne.w	10016fac <_svfprintf_r+0x178c>
10016e06:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10016e0a:	9308      	str	r3, [sp, #32]
10016e0c:	f7fe beef 	b.w	10015bee <_svfprintf_r+0x3ce>
10016e10:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10016e12:	aa32      	add	r2, sp, #200	@ 0xc8
10016e14:	4621      	mov	r1, r4
10016e16:	4658      	mov	r0, fp
10016e18:	f001 f95a 	bl	100180d0 <__ssprint_r>
10016e1c:	89a3      	ldrh	r3, [r4, #12]
10016e1e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10016e22:	f7fe be06 	b.w	10015a32 <_svfprintf_r+0x212>
10016e26:	4628      	mov	r0, r5
10016e28:	960d      	str	r6, [sp, #52]	@ 0x34
10016e2a:	f7fd fae9 	bl	10014400 <strlen>
10016e2e:	4683      	mov	fp, r0
10016e30:	f7fe bf74 	b.w	10015d1c <_svfprintf_r+0x4fc>
10016e34:	9807      	ldr	r0, [sp, #28]
10016e36:	f10b 0101 	add.w	r1, fp, #1
10016e3a:	f7f9 f845 	bl	1000fec8 <_malloc_r>
10016e3e:	4605      	mov	r5, r0
10016e40:	2800      	cmp	r0, #0
10016e42:	f000 81b7 	beq.w	100171b4 <_svfprintf_r+0x1994>
10016e46:	900c      	str	r0, [sp, #48]	@ 0x30
10016e48:	e63e      	b.n	10016ac8 <_svfprintf_r+0x12a8>
10016e4a:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016e4c:	9807      	ldr	r0, [sp, #28]
10016e4e:	aa32      	add	r2, sp, #200	@ 0xc8
10016e50:	f001 f93e 	bl	100180d0 <__ssprint_r>
10016e54:	2800      	cmp	r0, #0
10016e56:	f47f a99a 	bne.w	1001618e <_svfprintf_r+0x96e>
10016e5a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10016e5c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016e60:	f7ff baaa 	b.w	100163b8 <_svfprintf_r+0xb98>
10016e64:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016e66:	9807      	ldr	r0, [sp, #28]
10016e68:	aa32      	add	r2, sp, #200	@ 0xc8
10016e6a:	f001 f931 	bl	100180d0 <__ssprint_r>
10016e6e:	2800      	cmp	r0, #0
10016e70:	f47f a98d 	bne.w	1001618e <_svfprintf_r+0x96e>
10016e74:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10016e78:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10016e7a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016e7e:	e68f      	b.n	10016ba0 <_svfprintf_r+0x1380>
10016e80:	2306      	movs	r3, #6
10016e82:	9308      	str	r3, [sp, #32]
10016e84:	f7ff bbf1 	b.w	1001666a <_svfprintf_r+0xe4a>
10016e88:	9b08      	ldr	r3, [sp, #32]
10016e8a:	1c5e      	adds	r6, r3, #1
10016e8c:	2302      	movs	r3, #2
10016e8e:	e729      	b.n	10016ce4 <_svfprintf_r+0x14c4>
10016e90:	9e08      	ldr	r6, [sp, #32]
10016e92:	2303      	movs	r3, #3
10016e94:	e726      	b.n	10016ce4 <_svfprintf_r+0x14c4>
10016e96:	aa29      	add	r2, sp, #164	@ 0xa4
10016e98:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10016e9c:	f7fd fb4e 	bl	1001453c <frexp>
10016ea0:	2200      	movs	r2, #0
10016ea2:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10016ea6:	f001 fbb1 	bl	1001860c <__aeabi_dmul>
10016eaa:	4602      	mov	r2, r0
10016eac:	460b      	mov	r3, r1
10016eae:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10016eb2:	2200      	movs	r2, #0
10016eb4:	2300      	movs	r3, #0
10016eb6:	f001 fe11 	bl	10018adc <__aeabi_dcmpeq>
10016eba:	2800      	cmp	r0, #0
10016ebc:	f040 81c0 	bne.w	10017240 <_svfprintf_r+0x1a20>
10016ec0:	4b60      	ldr	r3, [pc, #384]	@ (10017044 <_svfprintf_r+0x1824>)
10016ec2:	9312      	str	r3, [sp, #72]	@ 0x48
10016ec4:	9b08      	ldr	r3, [sp, #32]
10016ec6:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
10016eca:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
10016ece:	462e      	mov	r6, r5
10016ed0:	9514      	str	r5, [sp, #80]	@ 0x50
10016ed2:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10016ed6:	464d      	mov	r5, r9
10016ed8:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10016edc:	e005      	b.n	10016eea <_svfprintf_r+0x16ca>
10016ede:	2200      	movs	r2, #0
10016ee0:	2300      	movs	r3, #0
10016ee2:	f001 fdfb 	bl	10018adc <__aeabi_dcmpeq>
10016ee6:	b9f0      	cbnz	r0, 10016f26 <_svfprintf_r+0x1706>
10016ee8:	463d      	mov	r5, r7
10016eea:	4b57      	ldr	r3, [pc, #348]	@ (10017048 <_svfprintf_r+0x1828>)
10016eec:	2200      	movs	r2, #0
10016eee:	4640      	mov	r0, r8
10016ef0:	4649      	mov	r1, r9
10016ef2:	f001 fb8b 	bl	1001860c <__aeabi_dmul>
10016ef6:	4689      	mov	r9, r1
10016ef8:	4680      	mov	r8, r0
10016efa:	f001 fe37 	bl	10018b6c <__aeabi_d2iz>
10016efe:	4604      	mov	r4, r0
10016f00:	f001 fb1a 	bl	10018538 <__aeabi_i2d>
10016f04:	460b      	mov	r3, r1
10016f06:	4602      	mov	r2, r0
10016f08:	4649      	mov	r1, r9
10016f0a:	4640      	mov	r0, r8
10016f0c:	f001 f9c6 	bl	1001829c <__aeabi_dsub>
10016f10:	f81b 3004 	ldrb.w	r3, [fp, r4]
10016f14:	46b2      	mov	sl, r6
10016f16:	f806 3b01 	strb.w	r3, [r6], #1
10016f1a:	1c6b      	adds	r3, r5, #1
10016f1c:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
10016f20:	4680      	mov	r8, r0
10016f22:	4689      	mov	r9, r1
10016f24:	d1db      	bne.n	10016ede <_svfprintf_r+0x16be>
10016f26:	46cb      	mov	fp, r9
10016f28:	4657      	mov	r7, sl
10016f2a:	46c2      	mov	sl, r8
10016f2c:	4b47      	ldr	r3, [pc, #284]	@ (1001704c <_svfprintf_r+0x182c>)
10016f2e:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
10016f32:	2200      	movs	r2, #0
10016f34:	4650      	mov	r0, sl
10016f36:	4659      	mov	r1, fp
10016f38:	46a9      	mov	r9, r5
10016f3a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
10016f3c:	f001 fdf6 	bl	10018b2c <__aeabi_dcmpgt>
10016f40:	2800      	cmp	r0, #0
10016f42:	f040 8153 	bne.w	100171ec <_svfprintf_r+0x19cc>
10016f46:	4b41      	ldr	r3, [pc, #260]	@ (1001704c <_svfprintf_r+0x182c>)
10016f48:	4650      	mov	r0, sl
10016f4a:	4659      	mov	r1, fp
10016f4c:	2200      	movs	r2, #0
10016f4e:	f001 fdc5 	bl	10018adc <__aeabi_dcmpeq>
10016f52:	b110      	cbz	r0, 10016f5a <_svfprintf_r+0x173a>
10016f54:	07e2      	lsls	r2, r4, #31
10016f56:	f100 8149 	bmi.w	100171ec <_svfprintf_r+0x19cc>
10016f5a:	f1b9 0f00 	cmp.w	r9, #0
10016f5e:	f2c0 815f 	blt.w	10017220 <_svfprintf_r+0x1a00>
10016f62:	f109 0301 	add.w	r3, r9, #1
10016f66:	4433      	add	r3, r6
10016f68:	2230      	movs	r2, #48	@ 0x30
10016f6a:	f806 2b01 	strb.w	r2, [r6], #1
10016f6e:	42b3      	cmp	r3, r6
10016f70:	d1fb      	bne.n	10016f6a <_svfprintf_r+0x174a>
10016f72:	1b5b      	subs	r3, r3, r5
10016f74:	9313      	str	r3, [sp, #76]	@ 0x4c
10016f76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10016f78:	f023 0720 	bic.w	r7, r3, #32
10016f7c:	e6e1      	b.n	10016d42 <_svfprintf_r+0x1522>
10016f7e:	9b06      	ldr	r3, [sp, #24]
10016f80:	07db      	lsls	r3, r3, #31
10016f82:	f100 80f9 	bmi.w	10017178 <_svfprintf_r+0x1958>
10016f86:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10016f88:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10016f8a:	1b5b      	subs	r3, r3, r5
10016f8c:	9313      	str	r3, [sp, #76]	@ 0x4c
10016f8e:	1cd3      	adds	r3, r2, #3
10016f90:	9212      	str	r2, [sp, #72]	@ 0x48
10016f92:	db02      	blt.n	10016f9a <_svfprintf_r+0x177a>
10016f94:	9b08      	ldr	r3, [sp, #32]
10016f96:	4293      	cmp	r3, r2
10016f98:	da1b      	bge.n	10016fd2 <_svfprintf_r+0x17b2>
10016f9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10016f9c:	3b02      	subs	r3, #2
10016f9e:	930e      	str	r3, [sp, #56]	@ 0x38
10016fa0:	1e53      	subs	r3, r2, #1
10016fa2:	9329      	str	r3, [sp, #164]	@ 0xa4
10016fa4:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
10016fa8:	2000      	movs	r0, #0
10016faa:	e6dd      	b.n	10016d68 <_svfprintf_r+0x1548>
10016fac:	222d      	movs	r2, #45	@ 0x2d
10016fae:	2300      	movs	r3, #0
10016fb0:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10016fb4:	9308      	str	r3, [sp, #32]
10016fb6:	f7fe be1d 	b.w	10015bf4 <_svfprintf_r+0x3d4>
10016fba:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10016fbc:	42a3      	cmp	r3, r4
10016fbe:	f4bf aebe 	bcs.w	10016d3e <_svfprintf_r+0x151e>
10016fc2:	2130      	movs	r1, #48	@ 0x30
10016fc4:	1c5a      	adds	r2, r3, #1
10016fc6:	9230      	str	r2, [sp, #192]	@ 0xc0
10016fc8:	7019      	strb	r1, [r3, #0]
10016fca:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10016fcc:	429c      	cmp	r4, r3
10016fce:	d8f9      	bhi.n	10016fc4 <_svfprintf_r+0x17a4>
10016fd0:	e6b5      	b.n	10016d3e <_svfprintf_r+0x151e>
10016fd2:	9913      	ldr	r1, [sp, #76]	@ 0x4c
10016fd4:	428a      	cmp	r2, r1
10016fd6:	f2c0 80c4 	blt.w	10017162 <_svfprintf_r+0x1942>
10016fda:	9b06      	ldr	r3, [sp, #24]
10016fdc:	07de      	lsls	r6, r3, #31
10016fde:	f140 8184 	bpl.w	100172ea <_svfprintf_r+0x1aca>
10016fe2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10016fe4:	eb02 0b03 	add.w	fp, r2, r3
10016fe8:	9b06      	ldr	r3, [sp, #24]
10016fea:	055c      	lsls	r4, r3, #21
10016fec:	d502      	bpl.n	10016ff4 <_svfprintf_r+0x17d4>
10016fee:	2a00      	cmp	r2, #0
10016ff0:	f300 814d 	bgt.w	1001728e <_svfprintf_r+0x1a6e>
10016ff4:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10016ff8:	9306      	str	r3, [sp, #24]
10016ffa:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10016ffe:	2367      	movs	r3, #103	@ 0x67
10017000:	930e      	str	r3, [sp, #56]	@ 0x38
10017002:	2300      	movs	r3, #0
10017004:	9314      	str	r3, [sp, #80]	@ 0x50
10017006:	9310      	str	r3, [sp, #64]	@ 0x40
10017008:	e6f9      	b.n	10016dfe <_svfprintf_r+0x15de>
1001700a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001700c:	aa32      	add	r2, sp, #200	@ 0xc8
1001700e:	4658      	mov	r0, fp
10017010:	f001 f85e 	bl	100180d0 <__ssprint_r>
10017014:	2800      	cmp	r0, #0
10017016:	f47f aaa8 	bne.w	1001656a <_svfprintf_r+0xd4a>
1001701a:	f89a 0000 	ldrb.w	r0, [sl]
1001701e:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10017020:	aa35      	add	r2, sp, #212	@ 0xd4
10017022:	4404      	add	r4, r0
10017024:	e430      	b.n	10016888 <_svfprintf_r+0x1068>
10017026:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017028:	9807      	ldr	r0, [sp, #28]
1001702a:	aa32      	add	r2, sp, #200	@ 0xc8
1001702c:	f001 f850 	bl	100180d0 <__ssprint_r>
10017030:	2800      	cmp	r0, #0
10017032:	f47f a8ac 	bne.w	1001618e <_svfprintf_r+0x96e>
10017036:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017038:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001703c:	f7ff b9b5 	b.w	100163aa <_svfprintf_r+0xb8a>
10017040:	cccccccd 	.word	0xcccccccd
10017044:	10019188 	.word	0x10019188
10017048:	40300000 	.word	0x40300000
1001704c:	3fe00000 	.word	0x3fe00000
10017050:	2378      	movs	r3, #120	@ 0x78
10017052:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
10017056:	2330      	movs	r3, #48	@ 0x30
10017058:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
1001705c:	f049 0302 	orr.w	r3, r9, #2
10017060:	9306      	str	r3, [sp, #24]
10017062:	9b08      	ldr	r3, [sp, #32]
10017064:	2b63      	cmp	r3, #99	@ 0x63
10017066:	f300 80dd 	bgt.w	10017224 <_svfprintf_r+0x1a04>
1001706a:	2300      	movs	r3, #0
1001706c:	930c      	str	r3, [sp, #48]	@ 0x30
1001706e:	ad45      	add	r5, sp, #276	@ 0x114
10017070:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
10017074:	9315      	str	r3, [sp, #84]	@ 0x54
10017076:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10017078:	2b00      	cmp	r3, #0
1001707a:	db22      	blt.n	100170c2 <_svfprintf_r+0x18a2>
1001707c:	ed9d 7b16 	vldr	d7, [sp, #88]	@ 0x58
10017080:	ed8d 7b24 	vstr	d7, [sp, #144]	@ 0x90
10017084:	2300      	movs	r3, #0
10017086:	931f      	str	r3, [sp, #124]	@ 0x7c
10017088:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001708a:	2b61      	cmp	r3, #97	@ 0x61
1001708c:	f47f aafd 	bne.w	1001668a <_svfprintf_r+0xe6a>
10017090:	aa29      	add	r2, sp, #164	@ 0xa4
10017092:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10017096:	f7fd fa51 	bl	1001453c <frexp>
1001709a:	2200      	movs	r2, #0
1001709c:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
100170a0:	f001 fab4 	bl	1001860c <__aeabi_dmul>
100170a4:	4602      	mov	r2, r0
100170a6:	460b      	mov	r3, r1
100170a8:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
100170ac:	2200      	movs	r2, #0
100170ae:	2300      	movs	r3, #0
100170b0:	f001 fd14 	bl	10018adc <__aeabi_dcmpeq>
100170b4:	2800      	cmp	r0, #0
100170b6:	f040 80c3 	bne.w	10017240 <_svfprintf_r+0x1a20>
100170ba:	4ba8      	ldr	r3, [pc, #672]	@ (1001735c <_svfprintf_r+0x1b3c>)
100170bc:	9312      	str	r3, [sp, #72]	@ 0x48
100170be:	e701      	b.n	10016ec4 <_svfprintf_r+0x16a4>
100170c0:	930c      	str	r3, [sp, #48]	@ 0x30
100170c2:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
100170c6:	f102 4300 	add.w	r3, r2, #2147483648	@ 0x80000000
100170ca:	9325      	str	r3, [sp, #148]	@ 0x94
100170cc:	232d      	movs	r3, #45	@ 0x2d
100170ce:	9124      	str	r1, [sp, #144]	@ 0x90
100170d0:	931f      	str	r3, [sp, #124]	@ 0x7c
100170d2:	e7d9      	b.n	10017088 <_svfprintf_r+0x1868>
100170d4:	9909      	ldr	r1, [sp, #36]	@ 0x24
100170d6:	9807      	ldr	r0, [sp, #28]
100170d8:	aa32      	add	r2, sp, #200	@ 0xc8
100170da:	f000 fff9 	bl	100180d0 <__ssprint_r>
100170de:	2800      	cmp	r0, #0
100170e0:	f47f a855 	bne.w	1001618e <_svfprintf_r+0x96e>
100170e4:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100170e6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100170e8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100170ec:	f7ff b981 	b.w	100163f2 <_svfprintf_r+0xbd2>
100170f0:	499b      	ldr	r1, [pc, #620]	@ (10017360 <_svfprintf_r+0x1b40>)
100170f2:	9115      	str	r1, [sp, #84]	@ 0x54
100170f4:	f7fe bdb2 	b.w	10015c5c <_svfprintf_r+0x43c>
100170f8:	9909      	ldr	r1, [sp, #36]	@ 0x24
100170fa:	9807      	ldr	r0, [sp, #28]
100170fc:	aa32      	add	r2, sp, #200	@ 0xc8
100170fe:	f000 ffe7 	bl	100180d0 <__ssprint_r>
10017102:	2800      	cmp	r0, #0
10017104:	f47f a843 	bne.w	1001618e <_svfprintf_r+0x96e>
10017108:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001710a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001710c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001710e:	1b5d      	subs	r5, r3, r5
10017110:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017114:	f7ff b984 	b.w	10016420 <_svfprintf_r+0xc00>
10017118:	9b06      	ldr	r3, [sp, #24]
1001711a:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001711c:	9a08      	ldr	r2, [sp, #32]
1001711e:	f003 0301 	and.w	r3, r3, #1
10017122:	2900      	cmp	r1, #0
10017124:	ea43 0302 	orr.w	r3, r3, r2
10017128:	f340 810f 	ble.w	1001734a <_svfprintf_r+0x1b2a>
1001712c:	2b00      	cmp	r3, #0
1001712e:	f040 80d5 	bne.w	100172dc <_svfprintf_r+0x1abc>
10017132:	2366      	movs	r3, #102	@ 0x66
10017134:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10017138:	930e      	str	r3, [sp, #56]	@ 0x38
1001713a:	9b06      	ldr	r3, [sp, #24]
1001713c:	055a      	lsls	r2, r3, #21
1001713e:	f100 80a8 	bmi.w	10017292 <_svfprintf_r+0x1a72>
10017142:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10017146:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001714a:	9306      	str	r3, [sp, #24]
1001714c:	e759      	b.n	10017002 <_svfprintf_r+0x17e2>
1001714e:	2358      	movs	r3, #88	@ 0x58
10017150:	e77f      	b.n	10017052 <_svfprintf_r+0x1832>
10017152:	2200      	movs	r2, #0
10017154:	9208      	str	r2, [sp, #32]
10017156:	f7fe bbbb 	b.w	100158d0 <_svfprintf_r+0xb0>
1001715a:	4a81      	ldr	r2, [pc, #516]	@ (10017360 <_svfprintf_r+0x1b40>)
1001715c:	9215      	str	r2, [sp, #84]	@ 0x54
1001715e:	f7ff b8ef 	b.w	10016340 <_svfprintf_r+0xb20>
10017162:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10017164:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10017166:	eb03 0b02 	add.w	fp, r3, r2
1001716a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001716c:	2b00      	cmp	r3, #0
1001716e:	f340 8083 	ble.w	10017278 <_svfprintf_r+0x1a58>
10017172:	2367      	movs	r3, #103	@ 0x67
10017174:	930e      	str	r3, [sp, #56]	@ 0x38
10017176:	e7e0      	b.n	1001713a <_svfprintf_r+0x191a>
10017178:	19ac      	adds	r4, r5, r6
1001717a:	2747      	movs	r7, #71	@ 0x47
1001717c:	e5d5      	b.n	10016d2a <_svfprintf_r+0x150a>
1001717e:	4655      	mov	r5, sl
10017180:	3301      	adds	r3, #1
10017182:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10017184:	f8c8 2000 	str.w	r2, [r8]
10017188:	4434      	add	r4, r6
1001718a:	2b07      	cmp	r3, #7
1001718c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017190:	f8c8 6004 	str.w	r6, [r8, #4]
10017194:	f77f a823 	ble.w	100161de <_svfprintf_r+0x9be>
10017198:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001719a:	9807      	ldr	r0, [sp, #28]
1001719c:	aa32      	add	r2, sp, #200	@ 0xc8
1001719e:	f000 ff97 	bl	100180d0 <__ssprint_r>
100171a2:	2800      	cmp	r0, #0
100171a4:	f47e aff3 	bne.w	1001618e <_svfprintf_r+0x96e>
100171a8:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100171ac:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100171b0:	f7ff b817 	b.w	100161e2 <_svfprintf_r+0x9c2>
100171b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100171b6:	8993      	ldrh	r3, [r2, #12]
100171b8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100171bc:	8193      	strh	r3, [r2, #12]
100171be:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100171c2:	930a      	str	r3, [sp, #40]	@ 0x28
100171c4:	f7fe bc38 	b.w	10015a38 <_svfprintf_r+0x218>
100171c8:	4a66      	ldr	r2, [pc, #408]	@ (10017364 <_svfprintf_r+0x1b44>)
100171ca:	9215      	str	r2, [sp, #84]	@ 0x54
100171cc:	f7fe bf84 	b.w	100160d8 <_svfprintf_r+0x8b8>
100171d0:	2800      	cmp	r0, #0
100171d2:	d13f      	bne.n	10017254 <_svfprintf_r+0x1a34>
100171d4:	2230      	movs	r2, #48	@ 0x30
100171d6:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
100171da:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
100171de:	3330      	adds	r3, #48	@ 0x30
100171e0:	f802 3b01 	strb.w	r3, [r2], #1
100171e4:	ab2c      	add	r3, sp, #176	@ 0xb0
100171e6:	1ad3      	subs	r3, r2, r3
100171e8:	931c      	str	r3, [sp, #112]	@ 0x70
100171ea:	e5f3      	b.n	10016dd4 <_svfprintf_r+0x15b4>
100171ec:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100171ee:	9730      	str	r7, [sp, #192]	@ 0xc0
100171f0:	7bd9      	ldrb	r1, [r3, #15]
100171f2:	f816 2c01 	ldrb.w	r2, [r6, #-1]
100171f6:	428a      	cmp	r2, r1
100171f8:	4633      	mov	r3, r6
100171fa:	d109      	bne.n	10017210 <_svfprintf_r+0x19f0>
100171fc:	2030      	movs	r0, #48	@ 0x30
100171fe:	f803 0c01 	strb.w	r0, [r3, #-1]
10017202:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10017204:	1e5a      	subs	r2, r3, #1
10017206:	9230      	str	r2, [sp, #192]	@ 0xc0
10017208:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1001720c:	4291      	cmp	r1, r2
1001720e:	d0f6      	beq.n	100171fe <_svfprintf_r+0x19de>
10017210:	2a39      	cmp	r2, #57	@ 0x39
10017212:	bf0b      	itete	eq
10017214:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
10017216:	3201      	addne	r2, #1
10017218:	7a92      	ldrbeq	r2, [r2, #10]
1001721a:	b2d2      	uxtbne	r2, r2
1001721c:	f803 2c01 	strb.w	r2, [r3, #-1]
10017220:	4633      	mov	r3, r6
10017222:	e6a6      	b.n	10016f72 <_svfprintf_r+0x1752>
10017224:	9807      	ldr	r0, [sp, #28]
10017226:	1c59      	adds	r1, r3, #1
10017228:	f7f8 fe4e 	bl	1000fec8 <_malloc_r>
1001722c:	4605      	mov	r5, r0
1001722e:	2800      	cmp	r0, #0
10017230:	d0c0      	beq.n	100171b4 <_svfprintf_r+0x1994>
10017232:	900c      	str	r0, [sp, #48]	@ 0x30
10017234:	e71c      	b.n	10017070 <_svfprintf_r+0x1850>
10017236:	9b06      	ldr	r3, [sp, #24]
10017238:	07df      	lsls	r7, r3, #31
1001723a:	f57f add4 	bpl.w	10016de6 <_svfprintf_r+0x15c6>
1001723e:	e5d0      	b.n	10016de2 <_svfprintf_r+0x15c2>
10017240:	4b49      	ldr	r3, [pc, #292]	@ (10017368 <_svfprintf_r+0x1b48>)
10017242:	4a46      	ldr	r2, [pc, #280]	@ (1001735c <_svfprintf_r+0x1b3c>)
10017244:	990e      	ldr	r1, [sp, #56]	@ 0x38
10017246:	2961      	cmp	r1, #97	@ 0x61
10017248:	bf18      	it	ne
1001724a:	461a      	movne	r2, r3
1001724c:	2301      	movs	r3, #1
1001724e:	9212      	str	r2, [sp, #72]	@ 0x48
10017250:	9329      	str	r3, [sp, #164]	@ 0xa4
10017252:	e637      	b.n	10016ec4 <_svfprintf_r+0x16a4>
10017254:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10017258:	e7c1      	b.n	100171de <_svfprintf_r+0x19be>
1001725a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
1001725c:	4d43      	ldr	r5, [pc, #268]	@ (1001736c <_svfprintf_r+0x1b4c>)
1001725e:	2b00      	cmp	r3, #0
10017260:	bfb4      	ite	lt
10017262:	222d      	movlt	r2, #45	@ 0x2d
10017264:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
10017268:	4b41      	ldr	r3, [pc, #260]	@ (10017370 <_svfprintf_r+0x1b50>)
1001726a:	bfb8      	it	lt
1001726c:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
10017270:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10017274:	f7fe bcae 	b.w	10015bd4 <_svfprintf_r+0x3b4>
10017278:	f1c3 0301 	rsb	r3, r3, #1
1001727c:	449b      	add	fp, r3
1001727e:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10017282:	9306      	str	r3, [sp, #24]
10017284:	2367      	movs	r3, #103	@ 0x67
10017286:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001728a:	930e      	str	r3, [sp, #56]	@ 0x38
1001728c:	e6b9      	b.n	10017002 <_svfprintf_r+0x17e2>
1001728e:	2367      	movs	r3, #103	@ 0x67
10017290:	930e      	str	r3, [sp, #56]	@ 0x38
10017292:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10017294:	780b      	ldrb	r3, [r1, #0]
10017296:	2bff      	cmp	r3, #255	@ 0xff
10017298:	f000 808c 	beq.w	100173b4 <_svfprintf_r+0x1b94>
1001729c:	2400      	movs	r4, #0
1001729e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
100172a0:	4620      	mov	r0, r4
100172a2:	e003      	b.n	100172ac <_svfprintf_r+0x1a8c>
100172a4:	3001      	adds	r0, #1
100172a6:	3101      	adds	r1, #1
100172a8:	2bff      	cmp	r3, #255	@ 0xff
100172aa:	d008      	beq.n	100172be <_svfprintf_r+0x1a9e>
100172ac:	4293      	cmp	r3, r2
100172ae:	da06      	bge.n	100172be <_svfprintf_r+0x1a9e>
100172b0:	1ad2      	subs	r2, r2, r3
100172b2:	784b      	ldrb	r3, [r1, #1]
100172b4:	2b00      	cmp	r3, #0
100172b6:	d1f5      	bne.n	100172a4 <_svfprintf_r+0x1a84>
100172b8:	780b      	ldrb	r3, [r1, #0]
100172ba:	3401      	adds	r4, #1
100172bc:	e7f4      	b.n	100172a8 <_svfprintf_r+0x1a88>
100172be:	911b      	str	r1, [sp, #108]	@ 0x6c
100172c0:	9010      	str	r0, [sp, #64]	@ 0x40
100172c2:	9414      	str	r4, [sp, #80]	@ 0x50
100172c4:	9212      	str	r2, [sp, #72]	@ 0x48
100172c6:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
100172ca:	9a10      	ldr	r2, [sp, #64]	@ 0x40
100172cc:	4413      	add	r3, r2
100172ce:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
100172d0:	fb02 bb03 	mla	fp, r2, r3, fp
100172d4:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100172d8:	9306      	str	r3, [sp, #24]
100172da:	e590      	b.n	10016dfe <_svfprintf_r+0x15de>
100172dc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100172de:	18cf      	adds	r7, r1, r3
100172e0:	443a      	add	r2, r7
100172e2:	2366      	movs	r3, #102	@ 0x66
100172e4:	4693      	mov	fp, r2
100172e6:	930e      	str	r3, [sp, #56]	@ 0x38
100172e8:	e727      	b.n	1001713a <_svfprintf_r+0x191a>
100172ea:	4693      	mov	fp, r2
100172ec:	e67c      	b.n	10016fe8 <_svfprintf_r+0x17c8>
100172ee:	9b08      	ldr	r3, [sp, #32]
100172f0:	9306      	str	r3, [sp, #24]
100172f2:	469b      	mov	fp, r3
100172f4:	2373      	movs	r3, #115	@ 0x73
100172f6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100172fa:	960d      	str	r6, [sp, #52]	@ 0x34
100172fc:	9008      	str	r0, [sp, #32]
100172fe:	9014      	str	r0, [sp, #80]	@ 0x50
10017300:	9010      	str	r0, [sp, #64]	@ 0x40
10017302:	930e      	str	r3, [sp, #56]	@ 0x38
10017304:	f7fe bc73 	b.w	10015bee <_svfprintf_r+0x3ce>
10017308:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001730c:	2200      	movs	r2, #0
1001730e:	2300      	movs	r3, #0
10017310:	f001 fbe4 	bl	10018adc <__aeabi_dcmpeq>
10017314:	2800      	cmp	r0, #0
10017316:	f47f ad06 	bne.w	10016d26 <_svfprintf_r+0x1506>
1001731a:	f1c6 0601 	rsb	r6, r6, #1
1001731e:	9629      	str	r6, [sp, #164]	@ 0xa4
10017320:	e502      	b.n	10016d28 <_svfprintf_r+0x1508>
10017322:	f8dd 9018 	ldr.w	r9, [sp, #24]
10017326:	f8dd b020 	ldr.w	fp, [sp, #32]
1001732a:	f7ff bbc2 	b.w	10016ab2 <_svfprintf_r+0x1292>
1001732e:	4e0d      	ldr	r6, [pc, #52]	@ (10017364 <_svfprintf_r+0x1b44>)
10017330:	f7ff bae5 	b.w	100168fe <_svfprintf_r+0x10de>
10017334:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10017336:	7863      	ldrb	r3, [r4, #1]
10017338:	460c      	mov	r4, r1
1001733a:	f852 1b04 	ldr.w	r1, [r2], #4
1001733e:	920d      	str	r2, [sp, #52]	@ 0x34
10017340:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10017344:	9108      	str	r1, [sp, #32]
10017346:	f7fe bac2 	b.w	100158ce <_svfprintf_r+0xae>
1001734a:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001734e:	b98b      	cbnz	r3, 10017374 <_svfprintf_r+0x1b54>
10017350:	2301      	movs	r3, #1
10017352:	2266      	movs	r2, #102	@ 0x66
10017354:	9306      	str	r3, [sp, #24]
10017356:	920e      	str	r2, [sp, #56]	@ 0x38
10017358:	469b      	mov	fp, r3
1001735a:	e652      	b.n	10017002 <_svfprintf_r+0x17e2>
1001735c:	10019174 	.word	0x10019174
10017360:	100193cc 	.word	0x100193cc
10017364:	100193bc 	.word	0x100193bc
10017368:	10019188 	.word	0x10019188
1001736c:	1001916c 	.word	0x1001916c
10017370:	10019170 	.word	0x10019170
10017374:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10017376:	1c5f      	adds	r7, r3, #1
10017378:	9b08      	ldr	r3, [sp, #32]
1001737a:	443b      	add	r3, r7
1001737c:	469b      	mov	fp, r3
1001737e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10017382:	9306      	str	r3, [sp, #24]
10017384:	2366      	movs	r3, #102	@ 0x66
10017386:	930e      	str	r3, [sp, #56]	@ 0x38
10017388:	e63b      	b.n	10017002 <_svfprintf_r+0x17e2>
1001738a:	2170      	movs	r1, #112	@ 0x70
1001738c:	e4eb      	b.n	10016d66 <_svfprintf_r+0x1546>
1001738e:	4a0b      	ldr	r2, [pc, #44]	@ (100173bc <_svfprintf_r+0x1b9c>)
10017390:	9215      	str	r2, [sp, #84]	@ 0x54
10017392:	e44b      	b.n	10016c2c <_svfprintf_r+0x140c>
10017394:	2302      	movs	r3, #2
10017396:	931c      	str	r3, [sp, #112]	@ 0x70
10017398:	e51c      	b.n	10016dd4 <_svfprintf_r+0x15b4>
1001739a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001739c:	f8dd b01c 	ldr.w	fp, [sp, #28]
100173a0:	8993      	ldrh	r3, [r2, #12]
100173a2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100173a6:	8193      	strh	r3, [r2, #12]
100173a8:	f7ff b8df 	b.w	1001656a <_svfprintf_r+0xd4a>
100173ac:	230c      	movs	r3, #12
100173ae:	f8cb 3000 	str.w	r3, [fp]
100173b2:	e704      	b.n	100171be <_svfprintf_r+0x199e>
100173b4:	2300      	movs	r3, #0
100173b6:	9314      	str	r3, [sp, #80]	@ 0x50
100173b8:	9310      	str	r3, [sp, #64]	@ 0x40
100173ba:	e784      	b.n	100172c6 <_svfprintf_r+0x1aa6>
100173bc:	100193bc 	.word	0x100193bc

100173c0 <__smakebuf_r>:
100173c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100173c4:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
100173c8:	460c      	mov	r4, r1
100173ca:	0799      	lsls	r1, r3, #30
100173cc:	b096      	sub	sp, #88	@ 0x58
100173ce:	d508      	bpl.n	100173e2 <__smakebuf_r+0x22>
100173d0:	f104 0343 	add.w	r3, r4, #67	@ 0x43
100173d4:	2201      	movs	r2, #1
100173d6:	e9c4 3204 	strd	r3, r2, [r4, #16]
100173da:	6023      	str	r3, [r4, #0]
100173dc:	b016      	add	sp, #88	@ 0x58
100173de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
100173e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
100173e6:	2900      	cmp	r1, #0
100173e8:	4606      	mov	r6, r0
100173ea:	db26      	blt.n	1001743a <__smakebuf_r+0x7a>
100173ec:	466a      	mov	r2, sp
100173ee:	f7fc fe97 	bl	10014120 <_fstat_r>
100173f2:	2800      	cmp	r0, #0
100173f4:	db1f      	blt.n	10017436 <__smakebuf_r+0x76>
100173f6:	9d01      	ldr	r5, [sp, #4]
100173f8:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
100173fc:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
10017400:	fab5 f585 	clz	r5, r5
10017404:	f44f 6880 	mov.w	r8, #1024	@ 0x400
10017408:	096d      	lsrs	r5, r5, #5
1001740a:	f44f 6700 	mov.w	r7, #2048	@ 0x800
1001740e:	4641      	mov	r1, r8
10017410:	4630      	mov	r0, r6
10017412:	f7f8 fd59 	bl	1000fec8 <_malloc_r>
10017416:	b1e8      	cbz	r0, 10017454 <__smakebuf_r+0x94>
10017418:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001741c:	f8c4 8014 	str.w	r8, [r4, #20]
10017420:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10017424:	6020      	str	r0, [r4, #0]
10017426:	6120      	str	r0, [r4, #16]
10017428:	81a3      	strh	r3, [r4, #12]
1001742a:	bb3d      	cbnz	r5, 1001747c <__smakebuf_r+0xbc>
1001742c:	433b      	orrs	r3, r7
1001742e:	81a3      	strh	r3, [r4, #12]
10017430:	b016      	add	sp, #88	@ 0x58
10017432:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10017436:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001743a:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
1001743e:	d019      	beq.n	10017474 <__smakebuf_r+0xb4>
10017440:	f04f 0840 	mov.w	r8, #64	@ 0x40
10017444:	2500      	movs	r5, #0
10017446:	4641      	mov	r1, r8
10017448:	4630      	mov	r0, r6
1001744a:	462f      	mov	r7, r5
1001744c:	f7f8 fd3c 	bl	1000fec8 <_malloc_r>
10017450:	2800      	cmp	r0, #0
10017452:	d1e1      	bne.n	10017418 <__smakebuf_r+0x58>
10017454:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017458:	059a      	lsls	r2, r3, #22
1001745a:	d4bf      	bmi.n	100173dc <__smakebuf_r+0x1c>
1001745c:	f023 0303 	bic.w	r3, r3, #3
10017460:	f104 0243 	add.w	r2, r4, #67	@ 0x43
10017464:	f043 0302 	orr.w	r3, r3, #2
10017468:	2101      	movs	r1, #1
1001746a:	e9c4 2104 	strd	r2, r1, [r4, #16]
1001746e:	81a3      	strh	r3, [r4, #12]
10017470:	6022      	str	r2, [r4, #0]
10017472:	e7b3      	b.n	100173dc <__smakebuf_r+0x1c>
10017474:	f44f 6880 	mov.w	r8, #1024	@ 0x400
10017478:	462f      	mov	r7, r5
1001747a:	e7c8      	b.n	1001740e <__smakebuf_r+0x4e>
1001747c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10017480:	4630      	mov	r0, r6
10017482:	f000 fc83 	bl	10017d8c <_isatty_r>
10017486:	b910      	cbnz	r0, 1001748e <__smakebuf_r+0xce>
10017488:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001748c:	e7ce      	b.n	1001742c <__smakebuf_r+0x6c>
1001748e:	89a3      	ldrh	r3, [r4, #12]
10017490:	f023 0303 	bic.w	r3, r3, #3
10017494:	f043 0301 	orr.w	r3, r3, #1
10017498:	b21b      	sxth	r3, r3
1001749a:	e7c7      	b.n	1001742c <__smakebuf_r+0x6c>

1001749c <_Balloc>:
1001749c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001749e:	b570      	push	{r4, r5, r6, lr}
100174a0:	4605      	mov	r5, r0
100174a2:	460c      	mov	r4, r1
100174a4:	b14b      	cbz	r3, 100174ba <_Balloc+0x1e>
100174a6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
100174aa:	b180      	cbz	r0, 100174ce <_Balloc+0x32>
100174ac:	6802      	ldr	r2, [r0, #0]
100174ae:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
100174b2:	2300      	movs	r3, #0
100174b4:	60c3      	str	r3, [r0, #12]
100174b6:	6103      	str	r3, [r0, #16]
100174b8:	bd70      	pop	{r4, r5, r6, pc}
100174ba:	2221      	movs	r2, #33	@ 0x21
100174bc:	2104      	movs	r1, #4
100174be:	f000 fdbd 	bl	1001803c <_calloc_r>
100174c2:	4603      	mov	r3, r0
100174c4:	6468      	str	r0, [r5, #68]	@ 0x44
100174c6:	2800      	cmp	r0, #0
100174c8:	d1ed      	bne.n	100174a6 <_Balloc+0xa>
100174ca:	2000      	movs	r0, #0
100174cc:	bd70      	pop	{r4, r5, r6, pc}
100174ce:	2101      	movs	r1, #1
100174d0:	fa01 f604 	lsl.w	r6, r1, r4
100174d4:	1d72      	adds	r2, r6, #5
100174d6:	0092      	lsls	r2, r2, #2
100174d8:	4628      	mov	r0, r5
100174da:	f000 fdaf 	bl	1001803c <_calloc_r>
100174de:	2800      	cmp	r0, #0
100174e0:	d0f3      	beq.n	100174ca <_Balloc+0x2e>
100174e2:	e9c0 4601 	strd	r4, r6, [r0, #4]
100174e6:	e7e4      	b.n	100174b2 <_Balloc+0x16>

100174e8 <_Bfree>:
100174e8:	b131      	cbz	r1, 100174f8 <_Bfree+0x10>
100174ea:	6c43      	ldr	r3, [r0, #68]	@ 0x44
100174ec:	684a      	ldr	r2, [r1, #4]
100174ee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
100174f2:	6008      	str	r0, [r1, #0]
100174f4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
100174f8:	4770      	bx	lr
100174fa:	bf00      	nop

100174fc <__multadd>:
100174fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10017500:	690d      	ldr	r5, [r1, #16]
10017502:	4607      	mov	r7, r0
10017504:	460e      	mov	r6, r1
10017506:	461c      	mov	r4, r3
10017508:	f101 0e14 	add.w	lr, r1, #20
1001750c:	2000      	movs	r0, #0
1001750e:	f8de 1000 	ldr.w	r1, [lr]
10017512:	b28b      	uxth	r3, r1
10017514:	fb02 4303 	mla	r3, r2, r3, r4
10017518:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001751c:	0c09      	lsrs	r1, r1, #16
1001751e:	fb02 cc01 	mla	ip, r2, r1, ip
10017522:	3001      	adds	r0, #1
10017524:	b29b      	uxth	r3, r3
10017526:	eb03 430c 	add.w	r3, r3, ip, lsl #16
1001752a:	4285      	cmp	r5, r0
1001752c:	f84e 3b04 	str.w	r3, [lr], #4
10017530:	ea4f 441c 	mov.w	r4, ip, lsr #16
10017534:	dceb      	bgt.n	1001750e <__multadd+0x12>
10017536:	b13c      	cbz	r4, 10017548 <__multadd+0x4c>
10017538:	68b3      	ldr	r3, [r6, #8]
1001753a:	42ab      	cmp	r3, r5
1001753c:	dd07      	ble.n	1001754e <__multadd+0x52>
1001753e:	eb06 0385 	add.w	r3, r6, r5, lsl #2
10017542:	3501      	adds	r5, #1
10017544:	615c      	str	r4, [r3, #20]
10017546:	6135      	str	r5, [r6, #16]
10017548:	4630      	mov	r0, r6
1001754a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001754e:	6871      	ldr	r1, [r6, #4]
10017550:	4638      	mov	r0, r7
10017552:	3101      	adds	r1, #1
10017554:	f7ff ffa2 	bl	1001749c <_Balloc>
10017558:	4680      	mov	r8, r0
1001755a:	b1a8      	cbz	r0, 10017588 <__multadd+0x8c>
1001755c:	6932      	ldr	r2, [r6, #16]
1001755e:	3202      	adds	r2, #2
10017560:	f106 010c 	add.w	r1, r6, #12
10017564:	0092      	lsls	r2, r2, #2
10017566:	300c      	adds	r0, #12
10017568:	f7fc fe9a 	bl	100142a0 <memcpy>
1001756c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
1001756e:	6872      	ldr	r2, [r6, #4]
10017570:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10017574:	6031      	str	r1, [r6, #0]
10017576:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
1001757a:	4646      	mov	r6, r8
1001757c:	eb06 0385 	add.w	r3, r6, r5, lsl #2
10017580:	3501      	adds	r5, #1
10017582:	615c      	str	r4, [r3, #20]
10017584:	6135      	str	r5, [r6, #16]
10017586:	e7df      	b.n	10017548 <__multadd+0x4c>
10017588:	4b02      	ldr	r3, [pc, #8]	@ (10017594 <__multadd+0x98>)
1001758a:	4803      	ldr	r0, [pc, #12]	@ (10017598 <__multadd+0x9c>)
1001758c:	4642      	mov	r2, r8
1001758e:	21ba      	movs	r1, #186	@ 0xba
10017590:	f000 fd34 	bl	10017ffc <__assert_func>
10017594:	10019344 	.word	0x10019344
10017598:	100193dc 	.word	0x100193dc

1001759c <__hi0bits>:
1001759c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
100175a0:	4603      	mov	r3, r0
100175a2:	bf36      	itet	cc
100175a4:	0403      	lslcc	r3, r0, #16
100175a6:	2000      	movcs	r0, #0
100175a8:	2010      	movcc	r0, #16
100175aa:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
100175ae:	bf3c      	itt	cc
100175b0:	021b      	lslcc	r3, r3, #8
100175b2:	3008      	addcc	r0, #8
100175b4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
100175b8:	bf3c      	itt	cc
100175ba:	011b      	lslcc	r3, r3, #4
100175bc:	3004      	addcc	r0, #4
100175be:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
100175c2:	d303      	bcc.n	100175cc <__hi0bits+0x30>
100175c4:	2b00      	cmp	r3, #0
100175c6:	db06      	blt.n	100175d6 <__hi0bits+0x3a>
100175c8:	3001      	adds	r0, #1
100175ca:	4770      	bx	lr
100175cc:	009b      	lsls	r3, r3, #2
100175ce:	d403      	bmi.n	100175d8 <__hi0bits+0x3c>
100175d0:	005b      	lsls	r3, r3, #1
100175d2:	d403      	bmi.n	100175dc <__hi0bits+0x40>
100175d4:	2020      	movs	r0, #32
100175d6:	4770      	bx	lr
100175d8:	3002      	adds	r0, #2
100175da:	4770      	bx	lr
100175dc:	3003      	adds	r0, #3
100175de:	4770      	bx	lr

100175e0 <__lo0bits>:
100175e0:	6803      	ldr	r3, [r0, #0]
100175e2:	f013 0207 	ands.w	r2, r3, #7
100175e6:	4601      	mov	r1, r0
100175e8:	d007      	beq.n	100175fa <__lo0bits+0x1a>
100175ea:	07da      	lsls	r2, r3, #31
100175ec:	d41f      	bmi.n	1001762e <__lo0bits+0x4e>
100175ee:	0798      	lsls	r0, r3, #30
100175f0:	d521      	bpl.n	10017636 <__lo0bits+0x56>
100175f2:	085b      	lsrs	r3, r3, #1
100175f4:	600b      	str	r3, [r1, #0]
100175f6:	2001      	movs	r0, #1
100175f8:	4770      	bx	lr
100175fa:	b298      	uxth	r0, r3
100175fc:	b1a0      	cbz	r0, 10017628 <__lo0bits+0x48>
100175fe:	4610      	mov	r0, r2
10017600:	b2da      	uxtb	r2, r3
10017602:	b90a      	cbnz	r2, 10017608 <__lo0bits+0x28>
10017604:	3008      	adds	r0, #8
10017606:	0a1b      	lsrs	r3, r3, #8
10017608:	071a      	lsls	r2, r3, #28
1001760a:	bf04      	itt	eq
1001760c:	091b      	lsreq	r3, r3, #4
1001760e:	3004      	addeq	r0, #4
10017610:	079a      	lsls	r2, r3, #30
10017612:	bf04      	itt	eq
10017614:	089b      	lsreq	r3, r3, #2
10017616:	3002      	addeq	r0, #2
10017618:	07da      	lsls	r2, r3, #31
1001761a:	d403      	bmi.n	10017624 <__lo0bits+0x44>
1001761c:	085b      	lsrs	r3, r3, #1
1001761e:	f100 0001 	add.w	r0, r0, #1
10017622:	d006      	beq.n	10017632 <__lo0bits+0x52>
10017624:	600b      	str	r3, [r1, #0]
10017626:	4770      	bx	lr
10017628:	0c1b      	lsrs	r3, r3, #16
1001762a:	2010      	movs	r0, #16
1001762c:	e7e8      	b.n	10017600 <__lo0bits+0x20>
1001762e:	2000      	movs	r0, #0
10017630:	4770      	bx	lr
10017632:	2020      	movs	r0, #32
10017634:	4770      	bx	lr
10017636:	089b      	lsrs	r3, r3, #2
10017638:	600b      	str	r3, [r1, #0]
1001763a:	2002      	movs	r0, #2
1001763c:	4770      	bx	lr
1001763e:	bf00      	nop

10017640 <__i2b>:
10017640:	b538      	push	{r3, r4, r5, lr}
10017642:	6c43      	ldr	r3, [r0, #68]	@ 0x44
10017644:	4604      	mov	r4, r0
10017646:	460d      	mov	r5, r1
10017648:	b14b      	cbz	r3, 1001765e <__i2b+0x1e>
1001764a:	6858      	ldr	r0, [r3, #4]
1001764c:	b1b0      	cbz	r0, 1001767c <__i2b+0x3c>
1001764e:	6802      	ldr	r2, [r0, #0]
10017650:	605a      	str	r2, [r3, #4]
10017652:	2200      	movs	r2, #0
10017654:	2301      	movs	r3, #1
10017656:	6145      	str	r5, [r0, #20]
10017658:	60c2      	str	r2, [r0, #12]
1001765a:	6103      	str	r3, [r0, #16]
1001765c:	bd38      	pop	{r3, r4, r5, pc}
1001765e:	2221      	movs	r2, #33	@ 0x21
10017660:	2104      	movs	r1, #4
10017662:	f000 fceb 	bl	1001803c <_calloc_r>
10017666:	4603      	mov	r3, r0
10017668:	6460      	str	r0, [r4, #68]	@ 0x44
1001766a:	2800      	cmp	r0, #0
1001766c:	d1ed      	bne.n	1001764a <__i2b+0xa>
1001766e:	4b09      	ldr	r3, [pc, #36]	@ (10017694 <__i2b+0x54>)
10017670:	4809      	ldr	r0, [pc, #36]	@ (10017698 <__i2b+0x58>)
10017672:	2200      	movs	r2, #0
10017674:	f240 1145 	movw	r1, #325	@ 0x145
10017678:	f000 fcc0 	bl	10017ffc <__assert_func>
1001767c:	221c      	movs	r2, #28
1001767e:	2101      	movs	r1, #1
10017680:	4620      	mov	r0, r4
10017682:	f000 fcdb 	bl	1001803c <_calloc_r>
10017686:	2800      	cmp	r0, #0
10017688:	d0f1      	beq.n	1001766e <__i2b+0x2e>
1001768a:	2201      	movs	r2, #1
1001768c:	2302      	movs	r3, #2
1001768e:	6042      	str	r2, [r0, #4]
10017690:	6083      	str	r3, [r0, #8]
10017692:	e7de      	b.n	10017652 <__i2b+0x12>
10017694:	10019344 	.word	0x10019344
10017698:	100193dc 	.word	0x100193dc

1001769c <__multiply>:
1001769c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100176a0:	f8d1 8010 	ldr.w	r8, [r1, #16]
100176a4:	6915      	ldr	r5, [r2, #16]
100176a6:	45a8      	cmp	r8, r5
100176a8:	b085      	sub	sp, #20
100176aa:	460e      	mov	r6, r1
100176ac:	4692      	mov	sl, r2
100176ae:	db05      	blt.n	100176bc <__multiply+0x20>
100176b0:	462a      	mov	r2, r5
100176b2:	4653      	mov	r3, sl
100176b4:	4645      	mov	r5, r8
100176b6:	468a      	mov	sl, r1
100176b8:	4690      	mov	r8, r2
100176ba:	461e      	mov	r6, r3
100176bc:	f8da 3008 	ldr.w	r3, [sl, #8]
100176c0:	f8da 1004 	ldr.w	r1, [sl, #4]
100176c4:	eb05 0408 	add.w	r4, r5, r8
100176c8:	42a3      	cmp	r3, r4
100176ca:	bfb8      	it	lt
100176cc:	3101      	addlt	r1, #1
100176ce:	f7ff fee5 	bl	1001749c <_Balloc>
100176d2:	4684      	mov	ip, r0
100176d4:	2800      	cmp	r0, #0
100176d6:	f000 808b 	beq.w	100177f0 <__multiply+0x154>
100176da:	f100 0714 	add.w	r7, r0, #20
100176de:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
100176e2:	4577      	cmp	r7, lr
100176e4:	d205      	bcs.n	100176f2 <__multiply+0x56>
100176e6:	463b      	mov	r3, r7
100176e8:	2200      	movs	r2, #0
100176ea:	f843 2b04 	str.w	r2, [r3], #4
100176ee:	459e      	cmp	lr, r3
100176f0:	d8fb      	bhi.n	100176ea <__multiply+0x4e>
100176f2:	3614      	adds	r6, #20
100176f4:	eb06 0888 	add.w	r8, r6, r8, lsl #2
100176f8:	f10a 0914 	add.w	r9, sl, #20
100176fc:	4546      	cmp	r6, r8
100176fe:	eb09 0585 	add.w	r5, r9, r5, lsl #2
10017702:	d266      	bcs.n	100177d2 <__multiply+0x136>
10017704:	eba5 030a 	sub.w	r3, r5, sl
10017708:	3b15      	subs	r3, #21
1001770a:	f023 0303 	bic.w	r3, r3, #3
1001770e:	f10a 0a15 	add.w	sl, sl, #21
10017712:	3304      	adds	r3, #4
10017714:	4555      	cmp	r5, sl
10017716:	bf2c      	ite	cs
10017718:	469b      	movcs	fp, r3
1001771a:	f04f 0b04 	movcc.w	fp, #4
1001771e:	f8cd e008 	str.w	lr, [sp, #8]
10017722:	9403      	str	r4, [sp, #12]
10017724:	46ae      	mov	lr, r5
10017726:	46e2      	mov	sl, ip
10017728:	e005      	b.n	10017736 <__multiply+0x9a>
1001772a:	0c09      	lsrs	r1, r1, #16
1001772c:	d12a      	bne.n	10017784 <__multiply+0xe8>
1001772e:	45b0      	cmp	r8, r6
10017730:	f107 0704 	add.w	r7, r7, #4
10017734:	d94a      	bls.n	100177cc <__multiply+0x130>
10017736:	f856 1b04 	ldr.w	r1, [r6], #4
1001773a:	b28d      	uxth	r5, r1
1001773c:	2d00      	cmp	r5, #0
1001773e:	d0f4      	beq.n	1001772a <__multiply+0x8e>
10017740:	46cc      	mov	ip, r9
10017742:	463c      	mov	r4, r7
10017744:	2300      	movs	r3, #0
10017746:	9601      	str	r6, [sp, #4]
10017748:	f85c 0b04 	ldr.w	r0, [ip], #4
1001774c:	6821      	ldr	r1, [r4, #0]
1001774e:	b286      	uxth	r6, r0
10017750:	b28a      	uxth	r2, r1
10017752:	0c00      	lsrs	r0, r0, #16
10017754:	fb05 2206 	mla	r2, r5, r6, r2
10017758:	0c09      	lsrs	r1, r1, #16
1001775a:	441a      	add	r2, r3
1001775c:	fb05 1100 	mla	r1, r5, r0, r1
10017760:	eb01 4112 	add.w	r1, r1, r2, lsr #16
10017764:	b292      	uxth	r2, r2
10017766:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
1001776a:	45e6      	cmp	lr, ip
1001776c:	f844 2b04 	str.w	r2, [r4], #4
10017770:	ea4f 4311 	mov.w	r3, r1, lsr #16
10017774:	d8e8      	bhi.n	10017748 <__multiply+0xac>
10017776:	9e01      	ldr	r6, [sp, #4]
10017778:	f847 300b 	str.w	r3, [r7, fp]
1001777c:	f856 1c04 	ldr.w	r1, [r6, #-4]
10017780:	0c09      	lsrs	r1, r1, #16
10017782:	d0d4      	beq.n	1001772e <__multiply+0x92>
10017784:	683b      	ldr	r3, [r7, #0]
10017786:	2200      	movs	r2, #0
10017788:	4648      	mov	r0, r9
1001778a:	461d      	mov	r5, r3
1001778c:	463c      	mov	r4, r7
1001778e:	4694      	mov	ip, r2
10017790:	8802      	ldrh	r2, [r0, #0]
10017792:	fb01 c202 	mla	r2, r1, r2, ip
10017796:	eb02 4215 	add.w	r2, r2, r5, lsr #16
1001779a:	b29b      	uxth	r3, r3
1001779c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
100177a0:	f844 3b04 	str.w	r3, [r4], #4
100177a4:	f850 3b04 	ldr.w	r3, [r0], #4
100177a8:	6825      	ldr	r5, [r4, #0]
100177aa:	ea4f 4c13 	mov.w	ip, r3, lsr #16
100177ae:	b2ab      	uxth	r3, r5
100177b0:	fb01 330c 	mla	r3, r1, ip, r3
100177b4:	eb03 4312 	add.w	r3, r3, r2, lsr #16
100177b8:	4586      	cmp	lr, r0
100177ba:	ea4f 4c13 	mov.w	ip, r3, lsr #16
100177be:	d8e7      	bhi.n	10017790 <__multiply+0xf4>
100177c0:	45b0      	cmp	r8, r6
100177c2:	f847 300b 	str.w	r3, [r7, fp]
100177c6:	f107 0704 	add.w	r7, r7, #4
100177ca:	d8b4      	bhi.n	10017736 <__multiply+0x9a>
100177cc:	e9dd e402 	ldrd	lr, r4, [sp, #8]
100177d0:	46d4      	mov	ip, sl
100177d2:	2c00      	cmp	r4, #0
100177d4:	dc02      	bgt.n	100177dc <__multiply+0x140>
100177d6:	e005      	b.n	100177e4 <__multiply+0x148>
100177d8:	3c01      	subs	r4, #1
100177da:	d003      	beq.n	100177e4 <__multiply+0x148>
100177dc:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
100177e0:	2b00      	cmp	r3, #0
100177e2:	d0f9      	beq.n	100177d8 <__multiply+0x13c>
100177e4:	4660      	mov	r0, ip
100177e6:	f8cc 4010 	str.w	r4, [ip, #16]
100177ea:	b005      	add	sp, #20
100177ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100177f0:	4b03      	ldr	r3, [pc, #12]	@ (10017800 <__multiply+0x164>)
100177f2:	4804      	ldr	r0, [pc, #16]	@ (10017804 <__multiply+0x168>)
100177f4:	4662      	mov	r2, ip
100177f6:	f44f 71b1 	mov.w	r1, #354	@ 0x162
100177fa:	f000 fbff 	bl	10017ffc <__assert_func>
100177fe:	bf00      	nop
10017800:	10019344 	.word	0x10019344
10017804:	100193dc 	.word	0x100193dc

10017808 <__pow5mult>:
10017808:	f012 0303 	ands.w	r3, r2, #3
1001780c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10017810:	4614      	mov	r4, r2
10017812:	4607      	mov	r7, r0
10017814:	d12c      	bne.n	10017870 <__pow5mult+0x68>
10017816:	460d      	mov	r5, r1
10017818:	10a4      	asrs	r4, r4, #2
1001781a:	d01c      	beq.n	10017856 <__pow5mult+0x4e>
1001781c:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
1001781e:	b386      	cbz	r6, 10017882 <__pow5mult+0x7a>
10017820:	07e3      	lsls	r3, r4, #31
10017822:	f04f 0800 	mov.w	r8, #0
10017826:	d406      	bmi.n	10017836 <__pow5mult+0x2e>
10017828:	1064      	asrs	r4, r4, #1
1001782a:	d014      	beq.n	10017856 <__pow5mult+0x4e>
1001782c:	6830      	ldr	r0, [r6, #0]
1001782e:	b1a8      	cbz	r0, 1001785c <__pow5mult+0x54>
10017830:	4606      	mov	r6, r0
10017832:	07e3      	lsls	r3, r4, #31
10017834:	d5f8      	bpl.n	10017828 <__pow5mult+0x20>
10017836:	4632      	mov	r2, r6
10017838:	4629      	mov	r1, r5
1001783a:	4638      	mov	r0, r7
1001783c:	f7ff ff2e 	bl	1001769c <__multiply>
10017840:	b135      	cbz	r5, 10017850 <__pow5mult+0x48>
10017842:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10017844:	6869      	ldr	r1, [r5, #4]
10017846:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1001784a:	602a      	str	r2, [r5, #0]
1001784c:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
10017850:	1064      	asrs	r4, r4, #1
10017852:	4605      	mov	r5, r0
10017854:	d1ea      	bne.n	1001782c <__pow5mult+0x24>
10017856:	4628      	mov	r0, r5
10017858:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001785c:	4632      	mov	r2, r6
1001785e:	4631      	mov	r1, r6
10017860:	4638      	mov	r0, r7
10017862:	f7ff ff1b 	bl	1001769c <__multiply>
10017866:	6030      	str	r0, [r6, #0]
10017868:	f8c0 8000 	str.w	r8, [r0]
1001786c:	4606      	mov	r6, r0
1001786e:	e7e0      	b.n	10017832 <__pow5mult+0x2a>
10017870:	3b01      	subs	r3, #1
10017872:	4a0f      	ldr	r2, [pc, #60]	@ (100178b0 <__pow5mult+0xa8>)
10017874:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
10017878:	2300      	movs	r3, #0
1001787a:	f7ff fe3f 	bl	100174fc <__multadd>
1001787e:	4605      	mov	r5, r0
10017880:	e7ca      	b.n	10017818 <__pow5mult+0x10>
10017882:	2101      	movs	r1, #1
10017884:	4638      	mov	r0, r7
10017886:	f7ff fe09 	bl	1001749c <_Balloc>
1001788a:	4606      	mov	r6, r0
1001788c:	b140      	cbz	r0, 100178a0 <__pow5mult+0x98>
1001788e:	2301      	movs	r3, #1
10017890:	f240 2271 	movw	r2, #625	@ 0x271
10017894:	e9c0 3204 	strd	r3, r2, [r0, #16]
10017898:	2300      	movs	r3, #0
1001789a:	6438      	str	r0, [r7, #64]	@ 0x40
1001789c:	6003      	str	r3, [r0, #0]
1001789e:	e7bf      	b.n	10017820 <__pow5mult+0x18>
100178a0:	4b04      	ldr	r3, [pc, #16]	@ (100178b4 <__pow5mult+0xac>)
100178a2:	4805      	ldr	r0, [pc, #20]	@ (100178b8 <__pow5mult+0xb0>)
100178a4:	4632      	mov	r2, r6
100178a6:	f240 1145 	movw	r1, #325	@ 0x145
100178aa:	f000 fba7 	bl	10017ffc <__assert_func>
100178ae:	bf00      	nop
100178b0:	10019440 	.word	0x10019440
100178b4:	10019344 	.word	0x10019344
100178b8:	100193dc 	.word	0x100193dc

100178bc <__lshift>:
100178bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
100178c0:	460c      	mov	r4, r1
100178c2:	4690      	mov	r8, r2
100178c4:	6927      	ldr	r7, [r4, #16]
100178c6:	68a3      	ldr	r3, [r4, #8]
100178c8:	6849      	ldr	r1, [r1, #4]
100178ca:	eb07 1762 	add.w	r7, r7, r2, asr #5
100178ce:	1c7d      	adds	r5, r7, #1
100178d0:	429d      	cmp	r5, r3
100178d2:	4606      	mov	r6, r0
100178d4:	ea4f 1962 	mov.w	r9, r2, asr #5
100178d8:	dd04      	ble.n	100178e4 <__lshift+0x28>
100178da:	005b      	lsls	r3, r3, #1
100178dc:	429d      	cmp	r5, r3
100178de:	f101 0101 	add.w	r1, r1, #1
100178e2:	dcfa      	bgt.n	100178da <__lshift+0x1e>
100178e4:	4630      	mov	r0, r6
100178e6:	f7ff fdd9 	bl	1001749c <_Balloc>
100178ea:	4684      	mov	ip, r0
100178ec:	2800      	cmp	r0, #0
100178ee:	d051      	beq.n	10017994 <__lshift+0xd8>
100178f0:	f1b9 0f00 	cmp.w	r9, #0
100178f4:	f100 0014 	add.w	r0, r0, #20
100178f8:	dd0e      	ble.n	10017918 <__lshift+0x5c>
100178fa:	f109 0205 	add.w	r2, r9, #5
100178fe:	ea4f 0e82 	mov.w	lr, r2, lsl #2
10017902:	4603      	mov	r3, r0
10017904:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
10017908:	2100      	movs	r1, #0
1001790a:	f843 1b04 	str.w	r1, [r3], #4
1001790e:	4293      	cmp	r3, r2
10017910:	d1fb      	bne.n	1001790a <__lshift+0x4e>
10017912:	f1ae 0314 	sub.w	r3, lr, #20
10017916:	4418      	add	r0, r3
10017918:	6921      	ldr	r1, [r4, #16]
1001791a:	f104 0314 	add.w	r3, r4, #20
1001791e:	f018 081f 	ands.w	r8, r8, #31
10017922:	eb03 0181 	add.w	r1, r3, r1, lsl #2
10017926:	d02d      	beq.n	10017984 <__lshift+0xc8>
10017928:	f1c8 0920 	rsb	r9, r8, #32
1001792c:	4686      	mov	lr, r0
1001792e:	f04f 0a00 	mov.w	sl, #0
10017932:	681a      	ldr	r2, [r3, #0]
10017934:	fa02 f208 	lsl.w	r2, r2, r8
10017938:	ea42 020a 	orr.w	r2, r2, sl
1001793c:	f84e 2b04 	str.w	r2, [lr], #4
10017940:	f853 2b04 	ldr.w	r2, [r3], #4
10017944:	4299      	cmp	r1, r3
10017946:	fa22 fa09 	lsr.w	sl, r2, r9
1001794a:	d8f2      	bhi.n	10017932 <__lshift+0x76>
1001794c:	1b0b      	subs	r3, r1, r4
1001794e:	3b15      	subs	r3, #21
10017950:	f023 0303 	bic.w	r3, r3, #3
10017954:	3304      	adds	r3, #4
10017956:	f104 0215 	add.w	r2, r4, #21
1001795a:	4291      	cmp	r1, r2
1001795c:	bf38      	it	cc
1001795e:	2304      	movcc	r3, #4
10017960:	f840 a003 	str.w	sl, [r0, r3]
10017964:	f1ba 0f00 	cmp.w	sl, #0
10017968:	d100      	bne.n	1001796c <__lshift+0xb0>
1001796a:	463d      	mov	r5, r7
1001796c:	6c73      	ldr	r3, [r6, #68]	@ 0x44
1001796e:	6862      	ldr	r2, [r4, #4]
10017970:	f8cc 5010 	str.w	r5, [ip, #16]
10017974:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10017978:	6021      	str	r1, [r4, #0]
1001797a:	4660      	mov	r0, ip
1001797c:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
10017980:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10017984:	3804      	subs	r0, #4
10017986:	f853 2b04 	ldr.w	r2, [r3], #4
1001798a:	f840 2f04 	str.w	r2, [r0, #4]!
1001798e:	4299      	cmp	r1, r3
10017990:	d8f9      	bhi.n	10017986 <__lshift+0xca>
10017992:	e7ea      	b.n	1001796a <__lshift+0xae>
10017994:	4b03      	ldr	r3, [pc, #12]	@ (100179a4 <__lshift+0xe8>)
10017996:	4804      	ldr	r0, [pc, #16]	@ (100179a8 <__lshift+0xec>)
10017998:	4662      	mov	r2, ip
1001799a:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
1001799e:	f000 fb2d 	bl	10017ffc <__assert_func>
100179a2:	bf00      	nop
100179a4:	10019344 	.word	0x10019344
100179a8:	100193dc 	.word	0x100193dc

100179ac <__mcmp>:
100179ac:	690b      	ldr	r3, [r1, #16]
100179ae:	4684      	mov	ip, r0
100179b0:	6900      	ldr	r0, [r0, #16]
100179b2:	1ac0      	subs	r0, r0, r3
100179b4:	d116      	bne.n	100179e4 <__mcmp+0x38>
100179b6:	f10c 0c14 	add.w	ip, ip, #20
100179ba:	3114      	adds	r1, #20
100179bc:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
100179c0:	b410      	push	{r4}
100179c2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
100179c6:	e001      	b.n	100179cc <__mcmp+0x20>
100179c8:	4594      	cmp	ip, r2
100179ca:	d208      	bcs.n	100179de <__mcmp+0x32>
100179cc:	f852 4d04 	ldr.w	r4, [r2, #-4]!
100179d0:	f853 1d04 	ldr.w	r1, [r3, #-4]!
100179d4:	428c      	cmp	r4, r1
100179d6:	d0f7      	beq.n	100179c8 <__mcmp+0x1c>
100179d8:	d205      	bcs.n	100179e6 <__mcmp+0x3a>
100179da:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100179de:	f85d 4b04 	ldr.w	r4, [sp], #4
100179e2:	4770      	bx	lr
100179e4:	4770      	bx	lr
100179e6:	2001      	movs	r0, #1
100179e8:	f85d 4b04 	ldr.w	r4, [sp], #4
100179ec:	4770      	bx	lr
100179ee:	bf00      	nop

100179f0 <__mdiff>:
100179f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100179f4:	6913      	ldr	r3, [r2, #16]
100179f6:	690f      	ldr	r7, [r1, #16]
100179f8:	1aff      	subs	r7, r7, r3
100179fa:	2f00      	cmp	r7, #0
100179fc:	b083      	sub	sp, #12
100179fe:	460d      	mov	r5, r1
10017a00:	4690      	mov	r8, r2
10017a02:	d115      	bne.n	10017a30 <__mdiff+0x40>
10017a04:	f101 0614 	add.w	r6, r1, #20
10017a08:	3214      	adds	r2, #20
10017a0a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
10017a0e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
10017a12:	e001      	b.n	10017a18 <__mdiff+0x28>
10017a14:	429e      	cmp	r6, r3
10017a16:	d276      	bcs.n	10017b06 <__mdiff+0x116>
10017a18:	f853 4d04 	ldr.w	r4, [r3, #-4]!
10017a1c:	f852 1d04 	ldr.w	r1, [r2, #-4]!
10017a20:	428c      	cmp	r4, r1
10017a22:	d0f7      	beq.n	10017a14 <__mdiff+0x24>
10017a24:	d206      	bcs.n	10017a34 <__mdiff+0x44>
10017a26:	462b      	mov	r3, r5
10017a28:	2701      	movs	r7, #1
10017a2a:	4645      	mov	r5, r8
10017a2c:	4698      	mov	r8, r3
10017a2e:	e001      	b.n	10017a34 <__mdiff+0x44>
10017a30:	dbf9      	blt.n	10017a26 <__mdiff+0x36>
10017a32:	2700      	movs	r7, #0
10017a34:	6869      	ldr	r1, [r5, #4]
10017a36:	f7ff fd31 	bl	1001749c <_Balloc>
10017a3a:	4681      	mov	r9, r0
10017a3c:	2800      	cmp	r0, #0
10017a3e:	d076      	beq.n	10017b2e <__mdiff+0x13e>
10017a40:	692e      	ldr	r6, [r5, #16]
10017a42:	60c7      	str	r7, [r0, #12]
10017a44:	f8d8 0010 	ldr.w	r0, [r8, #16]
10017a48:	f105 0b14 	add.w	fp, r5, #20
10017a4c:	f108 0e14 	add.w	lr, r8, #20
10017a50:	f109 0a14 	add.w	sl, r9, #20
10017a54:	f105 0110 	add.w	r1, r5, #16
10017a58:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
10017a5c:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
10017a60:	4657      	mov	r7, sl
10017a62:	f04f 0c00 	mov.w	ip, #0
10017a66:	f8cd b004 	str.w	fp, [sp, #4]
10017a6a:	f85e 4b04 	ldr.w	r4, [lr], #4
10017a6e:	f851 5f04 	ldr.w	r5, [r1, #4]!
10017a72:	fa1f fb84 	uxth.w	fp, r4
10017a76:	b2ab      	uxth	r3, r5
10017a78:	eba3 030b 	sub.w	r3, r3, fp
10017a7c:	0c24      	lsrs	r4, r4, #16
10017a7e:	4463      	add	r3, ip
10017a80:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
10017a84:	eb04 4423 	add.w	r4, r4, r3, asr #16
10017a88:	b29b      	uxth	r3, r3
10017a8a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10017a8e:	4570      	cmp	r0, lr
10017a90:	f847 3b04 	str.w	r3, [r7], #4
10017a94:	ea4f 4c24 	mov.w	ip, r4, asr #16
10017a98:	d8e7      	bhi.n	10017a6a <__mdiff+0x7a>
10017a9a:	eba0 0108 	sub.w	r1, r0, r8
10017a9e:	3915      	subs	r1, #21
10017aa0:	0889      	lsrs	r1, r1, #2
10017aa2:	1c4c      	adds	r4, r1, #1
10017aa4:	f8dd b004 	ldr.w	fp, [sp, #4]
10017aa8:	f108 0815 	add.w	r8, r8, #21
10017aac:	00a4      	lsls	r4, r4, #2
10017aae:	4540      	cmp	r0, r8
10017ab0:	bf38      	it	cc
10017ab2:	2404      	movcc	r4, #4
10017ab4:	eb0b 0504 	add.w	r5, fp, r4
10017ab8:	42aa      	cmp	r2, r5
10017aba:	4454      	add	r4, sl
10017abc:	d930      	bls.n	10017b20 <__mdiff+0x130>
10017abe:	4627      	mov	r7, r4
10017ac0:	4628      	mov	r0, r5
10017ac2:	f850 3b04 	ldr.w	r3, [r0], #4
10017ac6:	fa1c fe83 	uxtah	lr, ip, r3
10017aca:	0c19      	lsrs	r1, r3, #16
10017acc:	4463      	add	r3, ip
10017ace:	eb01 412e 	add.w	r1, r1, lr, asr #16
10017ad2:	b29b      	uxth	r3, r3
10017ad4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10017ad8:	4282      	cmp	r2, r0
10017ada:	f847 3b04 	str.w	r3, [r7], #4
10017ade:	ea4f 4c21 	mov.w	ip, r1, asr #16
10017ae2:	d8ee      	bhi.n	10017ac2 <__mdiff+0xd2>
10017ae4:	3a01      	subs	r2, #1
10017ae6:	1b52      	subs	r2, r2, r5
10017ae8:	f022 0203 	bic.w	r2, r2, #3
10017aec:	4414      	add	r4, r2
10017aee:	b923      	cbnz	r3, 10017afa <__mdiff+0x10a>
10017af0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
10017af4:	3e01      	subs	r6, #1
10017af6:	2b00      	cmp	r3, #0
10017af8:	d0fa      	beq.n	10017af0 <__mdiff+0x100>
10017afa:	4648      	mov	r0, r9
10017afc:	f8c9 6010 	str.w	r6, [r9, #16]
10017b00:	b003      	add	sp, #12
10017b02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017b06:	2100      	movs	r1, #0
10017b08:	f7ff fcc8 	bl	1001749c <_Balloc>
10017b0c:	4681      	mov	r9, r0
10017b0e:	b1a8      	cbz	r0, 10017b3c <__mdiff+0x14c>
10017b10:	2201      	movs	r2, #1
10017b12:	2300      	movs	r3, #0
10017b14:	e9c0 2304 	strd	r2, r3, [r0, #16]
10017b18:	4648      	mov	r0, r9
10017b1a:	b003      	add	sp, #12
10017b1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017b20:	0089      	lsls	r1, r1, #2
10017b22:	4540      	cmp	r0, r8
10017b24:	bf38      	it	cc
10017b26:	2100      	movcc	r1, #0
10017b28:	eb0a 0401 	add.w	r4, sl, r1
10017b2c:	e7df      	b.n	10017aee <__mdiff+0xfe>
10017b2e:	4b07      	ldr	r3, [pc, #28]	@ (10017b4c <__mdiff+0x15c>)
10017b30:	4807      	ldr	r0, [pc, #28]	@ (10017b50 <__mdiff+0x160>)
10017b32:	464a      	mov	r2, r9
10017b34:	f240 2145 	movw	r1, #581	@ 0x245
10017b38:	f000 fa60 	bl	10017ffc <__assert_func>
10017b3c:	4b03      	ldr	r3, [pc, #12]	@ (10017b4c <__mdiff+0x15c>)
10017b3e:	4804      	ldr	r0, [pc, #16]	@ (10017b50 <__mdiff+0x160>)
10017b40:	464a      	mov	r2, r9
10017b42:	f240 2137 	movw	r1, #567	@ 0x237
10017b46:	f000 fa59 	bl	10017ffc <__assert_func>
10017b4a:	bf00      	nop
10017b4c:	10019344 	.word	0x10019344
10017b50:	100193dc 	.word	0x100193dc

10017b54 <__d2b>:
10017b54:	b5f0      	push	{r4, r5, r6, r7, lr}
10017b56:	2101      	movs	r1, #1
10017b58:	b083      	sub	sp, #12
10017b5a:	4616      	mov	r6, r2
10017b5c:	461f      	mov	r7, r3
10017b5e:	f7ff fc9d 	bl	1001749c <_Balloc>
10017b62:	4605      	mov	r5, r0
10017b64:	2800      	cmp	r0, #0
10017b66:	d047      	beq.n	10017bf8 <__d2b+0xa4>
10017b68:	f3c7 540a 	ubfx	r4, r7, #20, #11
10017b6c:	f3c7 0313 	ubfx	r3, r7, #0, #20
10017b70:	b10c      	cbz	r4, 10017b76 <__d2b+0x22>
10017b72:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
10017b76:	2e00      	cmp	r6, #0
10017b78:	9301      	str	r3, [sp, #4]
10017b7a:	d114      	bne.n	10017ba6 <__d2b+0x52>
10017b7c:	a801      	add	r0, sp, #4
10017b7e:	f7ff fd2f 	bl	100175e0 <__lo0bits>
10017b82:	9b01      	ldr	r3, [sp, #4]
10017b84:	616b      	str	r3, [r5, #20]
10017b86:	2201      	movs	r2, #1
10017b88:	3020      	adds	r0, #32
10017b8a:	612a      	str	r2, [r5, #16]
10017b8c:	b314      	cbz	r4, 10017bd4 <__d2b+0x80>
10017b8e:	9b08      	ldr	r3, [sp, #32]
10017b90:	f2a4 4433 	subw	r4, r4, #1075	@ 0x433
10017b94:	4404      	add	r4, r0
10017b96:	601c      	str	r4, [r3, #0]
10017b98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017b9a:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
10017b9e:	6018      	str	r0, [r3, #0]
10017ba0:	4628      	mov	r0, r5
10017ba2:	b003      	add	sp, #12
10017ba4:	bdf0      	pop	{r4, r5, r6, r7, pc}
10017ba6:	4668      	mov	r0, sp
10017ba8:	9600      	str	r6, [sp, #0]
10017baa:	f7ff fd19 	bl	100175e0 <__lo0bits>
10017bae:	9b01      	ldr	r3, [sp, #4]
10017bb0:	b300      	cbz	r0, 10017bf4 <__d2b+0xa0>
10017bb2:	9900      	ldr	r1, [sp, #0]
10017bb4:	f1c0 0220 	rsb	r2, r0, #32
10017bb8:	fa03 f202 	lsl.w	r2, r3, r2
10017bbc:	40c3      	lsrs	r3, r0
10017bbe:	9301      	str	r3, [sp, #4]
10017bc0:	430a      	orrs	r2, r1
10017bc2:	2b00      	cmp	r3, #0
10017bc4:	e9c5 2305 	strd	r2, r3, [r5, #20]
10017bc8:	bf0c      	ite	eq
10017bca:	2201      	moveq	r2, #1
10017bcc:	2202      	movne	r2, #2
10017bce:	612a      	str	r2, [r5, #16]
10017bd0:	2c00      	cmp	r4, #0
10017bd2:	d1dc      	bne.n	10017b8e <__d2b+0x3a>
10017bd4:	eb05 0182 	add.w	r1, r5, r2, lsl #2
10017bd8:	f2a0 4332 	subw	r3, r0, #1074	@ 0x432
10017bdc:	6908      	ldr	r0, [r1, #16]
10017bde:	9908      	ldr	r1, [sp, #32]
10017be0:	600b      	str	r3, [r1, #0]
10017be2:	f7ff fcdb 	bl	1001759c <__hi0bits>
10017be6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017be8:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
10017bec:	6018      	str	r0, [r3, #0]
10017bee:	4628      	mov	r0, r5
10017bf0:	b003      	add	sp, #12
10017bf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10017bf4:	9a00      	ldr	r2, [sp, #0]
10017bf6:	e7e4      	b.n	10017bc2 <__d2b+0x6e>
10017bf8:	4b03      	ldr	r3, [pc, #12]	@ (10017c08 <__d2b+0xb4>)
10017bfa:	4804      	ldr	r0, [pc, #16]	@ (10017c0c <__d2b+0xb8>)
10017bfc:	462a      	mov	r2, r5
10017bfe:	f240 310f 	movw	r1, #783	@ 0x30f
10017c02:	f000 f9fb 	bl	10017ffc <__assert_func>
10017c06:	bf00      	nop
10017c08:	10019344 	.word	0x10019344
10017c0c:	100193dc 	.word	0x100193dc

10017c10 <__sread>:
10017c10:	b510      	push	{r4, lr}
10017c12:	460c      	mov	r4, r1
10017c14:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10017c18:	f000 f8e0 	bl	10017ddc <_read_r>
10017c1c:	2800      	cmp	r0, #0
10017c1e:	db03      	blt.n	10017c28 <__sread+0x18>
10017c20:	6d23      	ldr	r3, [r4, #80]	@ 0x50
10017c22:	4403      	add	r3, r0
10017c24:	6523      	str	r3, [r4, #80]	@ 0x50
10017c26:	bd10      	pop	{r4, pc}
10017c28:	89a3      	ldrh	r3, [r4, #12]
10017c2a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10017c2e:	81a3      	strh	r3, [r4, #12]
10017c30:	bd10      	pop	{r4, pc}
10017c32:	bf00      	nop

10017c34 <__swrite>:
10017c34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10017c38:	460c      	mov	r4, r1
10017c3a:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10017c3e:	461f      	mov	r7, r3
10017c40:	05cb      	lsls	r3, r1, #23
10017c42:	4605      	mov	r5, r0
10017c44:	4616      	mov	r6, r2
10017c46:	d40b      	bmi.n	10017c60 <__swrite+0x2c>
10017c48:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
10017c4c:	81a1      	strh	r1, [r4, #12]
10017c4e:	463b      	mov	r3, r7
10017c50:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10017c54:	4632      	mov	r2, r6
10017c56:	4628      	mov	r0, r5
10017c58:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10017c5c:	f000 b8d4 	b.w	10017e08 <_write_r>
10017c60:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10017c64:	2302      	movs	r3, #2
10017c66:	2200      	movs	r2, #0
10017c68:	f000 f8a2 	bl	10017db0 <_lseek_r>
10017c6c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
10017c70:	e7ea      	b.n	10017c48 <__swrite+0x14>
10017c72:	bf00      	nop

10017c74 <__sseek>:
10017c74:	b510      	push	{r4, lr}
10017c76:	460c      	mov	r4, r1
10017c78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10017c7c:	f000 f898 	bl	10017db0 <_lseek_r>
10017c80:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10017c84:	1c42      	adds	r2, r0, #1
10017c86:	bf0e      	itee	eq
10017c88:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
10017c8c:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
10017c90:	6520      	strne	r0, [r4, #80]	@ 0x50
10017c92:	81a3      	strh	r3, [r4, #12]
10017c94:	bd10      	pop	{r4, pc}
10017c96:	bf00      	nop

10017c98 <__sclose>:
10017c98:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10017c9c:	f000 b864 	b.w	10017d68 <_close_r>

10017ca0 <__ascii_wctomb>:
10017ca0:	b149      	cbz	r1, 10017cb6 <__ascii_wctomb+0x16>
10017ca2:	2aff      	cmp	r2, #255	@ 0xff
10017ca4:	d802      	bhi.n	10017cac <__ascii_wctomb+0xc>
10017ca6:	700a      	strb	r2, [r1, #0]
10017ca8:	2001      	movs	r0, #1
10017caa:	4770      	bx	lr
10017cac:	238a      	movs	r3, #138	@ 0x8a
10017cae:	6003      	str	r3, [r0, #0]
10017cb0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017cb4:	4770      	bx	lr
10017cb6:	4608      	mov	r0, r1
10017cb8:	4770      	bx	lr
10017cba:	bf00      	nop

10017cbc <__swbuf_r>:
10017cbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10017cbe:	460d      	mov	r5, r1
10017cc0:	4614      	mov	r4, r2
10017cc2:	4606      	mov	r6, r0
10017cc4:	b110      	cbz	r0, 10017ccc <__swbuf_r+0x10>
10017cc6:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10017cc8:	2b00      	cmp	r3, #0
10017cca:	d04a      	beq.n	10017d62 <__swbuf_r+0xa6>
10017ccc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10017cd0:	69a3      	ldr	r3, [r4, #24]
10017cd2:	60a3      	str	r3, [r4, #8]
10017cd4:	0710      	lsls	r0, r2, #28
10017cd6:	d51b      	bpl.n	10017d10 <__swbuf_r+0x54>
10017cd8:	6923      	ldr	r3, [r4, #16]
10017cda:	b1cb      	cbz	r3, 10017d10 <__swbuf_r+0x54>
10017cdc:	b2ed      	uxtb	r5, r5
10017cde:	0491      	lsls	r1, r2, #18
10017ce0:	462f      	mov	r7, r5
10017ce2:	d521      	bpl.n	10017d28 <__swbuf_r+0x6c>
10017ce4:	6822      	ldr	r2, [r4, #0]
10017ce6:	6961      	ldr	r1, [r4, #20]
10017ce8:	1ad3      	subs	r3, r2, r3
10017cea:	4299      	cmp	r1, r3
10017cec:	dd28      	ble.n	10017d40 <__swbuf_r+0x84>
10017cee:	3301      	adds	r3, #1
10017cf0:	68a1      	ldr	r1, [r4, #8]
10017cf2:	3901      	subs	r1, #1
10017cf4:	60a1      	str	r1, [r4, #8]
10017cf6:	1c51      	adds	r1, r2, #1
10017cf8:	6021      	str	r1, [r4, #0]
10017cfa:	7015      	strb	r5, [r2, #0]
10017cfc:	6962      	ldr	r2, [r4, #20]
10017cfe:	429a      	cmp	r2, r3
10017d00:	d026      	beq.n	10017d50 <__swbuf_r+0x94>
10017d02:	89a3      	ldrh	r3, [r4, #12]
10017d04:	07db      	lsls	r3, r3, #31
10017d06:	d501      	bpl.n	10017d0c <__swbuf_r+0x50>
10017d08:	2d0a      	cmp	r5, #10
10017d0a:	d021      	beq.n	10017d50 <__swbuf_r+0x94>
10017d0c:	4638      	mov	r0, r7
10017d0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10017d10:	4621      	mov	r1, r4
10017d12:	4630      	mov	r0, r6
10017d14:	f7fc f826 	bl	10013d64 <__swsetup_r>
10017d18:	bb00      	cbnz	r0, 10017d5c <__swbuf_r+0xa0>
10017d1a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10017d1e:	6923      	ldr	r3, [r4, #16]
10017d20:	b2ed      	uxtb	r5, r5
10017d22:	0491      	lsls	r1, r2, #18
10017d24:	462f      	mov	r7, r5
10017d26:	d4dd      	bmi.n	10017ce4 <__swbuf_r+0x28>
10017d28:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10017d2c:	81a2      	strh	r2, [r4, #12]
10017d2e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
10017d30:	6961      	ldr	r1, [r4, #20]
10017d32:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10017d36:	6662      	str	r2, [r4, #100]	@ 0x64
10017d38:	6822      	ldr	r2, [r4, #0]
10017d3a:	1ad3      	subs	r3, r2, r3
10017d3c:	4299      	cmp	r1, r3
10017d3e:	dcd6      	bgt.n	10017cee <__swbuf_r+0x32>
10017d40:	4621      	mov	r1, r4
10017d42:	4630      	mov	r0, r6
10017d44:	f7fb fd52 	bl	100137ec <_fflush_r>
10017d48:	b940      	cbnz	r0, 10017d5c <__swbuf_r+0xa0>
10017d4a:	6822      	ldr	r2, [r4, #0]
10017d4c:	2301      	movs	r3, #1
10017d4e:	e7cf      	b.n	10017cf0 <__swbuf_r+0x34>
10017d50:	4621      	mov	r1, r4
10017d52:	4630      	mov	r0, r6
10017d54:	f7fb fd4a 	bl	100137ec <_fflush_r>
10017d58:	2800      	cmp	r0, #0
10017d5a:	d0d7      	beq.n	10017d0c <__swbuf_r+0x50>
10017d5c:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
10017d60:	e7d4      	b.n	10017d0c <__swbuf_r+0x50>
10017d62:	f7fb fe31 	bl	100139c8 <__sinit>
10017d66:	e7b1      	b.n	10017ccc <__swbuf_r+0x10>

10017d68 <_close_r>:
10017d68:	b538      	push	{r3, r4, r5, lr}
10017d6a:	4d07      	ldr	r5, [pc, #28]	@ (10017d88 <_close_r+0x20>)
10017d6c:	2200      	movs	r2, #0
10017d6e:	4604      	mov	r4, r0
10017d70:	4608      	mov	r0, r1
10017d72:	602a      	str	r2, [r5, #0]
10017d74:	f7f6 fd14 	bl	1000e7a0 <_close>
10017d78:	1c43      	adds	r3, r0, #1
10017d7a:	d000      	beq.n	10017d7e <_close_r+0x16>
10017d7c:	bd38      	pop	{r3, r4, r5, pc}
10017d7e:	682b      	ldr	r3, [r5, #0]
10017d80:	2b00      	cmp	r3, #0
10017d82:	d0fb      	beq.n	10017d7c <_close_r+0x14>
10017d84:	6023      	str	r3, [r4, #0]
10017d86:	bd38      	pop	{r3, r4, r5, pc}
10017d88:	200011ac 	.word	0x200011ac

10017d8c <_isatty_r>:
10017d8c:	b538      	push	{r3, r4, r5, lr}
10017d8e:	4d07      	ldr	r5, [pc, #28]	@ (10017dac <_isatty_r+0x20>)
10017d90:	2200      	movs	r2, #0
10017d92:	4604      	mov	r4, r0
10017d94:	4608      	mov	r0, r1
10017d96:	602a      	str	r2, [r5, #0]
10017d98:	f7f6 fd06 	bl	1000e7a8 <_isatty>
10017d9c:	1c43      	adds	r3, r0, #1
10017d9e:	d000      	beq.n	10017da2 <_isatty_r+0x16>
10017da0:	bd38      	pop	{r3, r4, r5, pc}
10017da2:	682b      	ldr	r3, [r5, #0]
10017da4:	2b00      	cmp	r3, #0
10017da6:	d0fb      	beq.n	10017da0 <_isatty_r+0x14>
10017da8:	6023      	str	r3, [r4, #0]
10017daa:	bd38      	pop	{r3, r4, r5, pc}
10017dac:	200011ac 	.word	0x200011ac

10017db0 <_lseek_r>:
10017db0:	b538      	push	{r3, r4, r5, lr}
10017db2:	460c      	mov	r4, r1
10017db4:	4d08      	ldr	r5, [pc, #32]	@ (10017dd8 <_lseek_r+0x28>)
10017db6:	4684      	mov	ip, r0
10017db8:	4611      	mov	r1, r2
10017dba:	4620      	mov	r0, r4
10017dbc:	461a      	mov	r2, r3
10017dbe:	2300      	movs	r3, #0
10017dc0:	602b      	str	r3, [r5, #0]
10017dc2:	4664      	mov	r4, ip
10017dc4:	f7f6 fcf4 	bl	1000e7b0 <_lseek>
10017dc8:	1c43      	adds	r3, r0, #1
10017dca:	d000      	beq.n	10017dce <_lseek_r+0x1e>
10017dcc:	bd38      	pop	{r3, r4, r5, pc}
10017dce:	682b      	ldr	r3, [r5, #0]
10017dd0:	2b00      	cmp	r3, #0
10017dd2:	d0fb      	beq.n	10017dcc <_lseek_r+0x1c>
10017dd4:	6023      	str	r3, [r4, #0]
10017dd6:	bd38      	pop	{r3, r4, r5, pc}
10017dd8:	200011ac 	.word	0x200011ac

10017ddc <_read_r>:
10017ddc:	b538      	push	{r3, r4, r5, lr}
10017dde:	460c      	mov	r4, r1
10017de0:	4d08      	ldr	r5, [pc, #32]	@ (10017e04 <_read_r+0x28>)
10017de2:	4684      	mov	ip, r0
10017de4:	4611      	mov	r1, r2
10017de6:	4620      	mov	r0, r4
10017de8:	461a      	mov	r2, r3
10017dea:	2300      	movs	r3, #0
10017dec:	602b      	str	r3, [r5, #0]
10017dee:	4664      	mov	r4, ip
10017df0:	f7f6 fce6 	bl	1000e7c0 <_read>
10017df4:	1c43      	adds	r3, r0, #1
10017df6:	d000      	beq.n	10017dfa <_read_r+0x1e>
10017df8:	bd38      	pop	{r3, r4, r5, pc}
10017dfa:	682b      	ldr	r3, [r5, #0]
10017dfc:	2b00      	cmp	r3, #0
10017dfe:	d0fb      	beq.n	10017df8 <_read_r+0x1c>
10017e00:	6023      	str	r3, [r4, #0]
10017e02:	bd38      	pop	{r3, r4, r5, pc}
10017e04:	200011ac 	.word	0x200011ac

10017e08 <_write_r>:
10017e08:	b538      	push	{r3, r4, r5, lr}
10017e0a:	460c      	mov	r4, r1
10017e0c:	4d08      	ldr	r5, [pc, #32]	@ (10017e30 <_write_r+0x28>)
10017e0e:	4684      	mov	ip, r0
10017e10:	4611      	mov	r1, r2
10017e12:	4620      	mov	r0, r4
10017e14:	461a      	mov	r2, r3
10017e16:	2300      	movs	r3, #0
10017e18:	602b      	str	r3, [r5, #0]
10017e1a:	4664      	mov	r4, ip
10017e1c:	f7f6 fcf8 	bl	1000e810 <_write>
10017e20:	1c43      	adds	r3, r0, #1
10017e22:	d000      	beq.n	10017e26 <_write_r+0x1e>
10017e24:	bd38      	pop	{r3, r4, r5, pc}
10017e26:	682b      	ldr	r3, [r5, #0]
10017e28:	2b00      	cmp	r3, #0
10017e2a:	d0fb      	beq.n	10017e24 <_write_r+0x1c>
10017e2c:	6023      	str	r3, [r4, #0]
10017e2e:	bd38      	pop	{r3, r4, r5, pc}
10017e30:	200011ac 	.word	0x200011ac

10017e34 <__libc_fini_array>:
10017e34:	b538      	push	{r3, r4, r5, lr}
10017e36:	4d07      	ldr	r5, [pc, #28]	@ (10017e54 <__libc_fini_array+0x20>)
10017e38:	4c07      	ldr	r4, [pc, #28]	@ (10017e58 <__libc_fini_array+0x24>)
10017e3a:	1b2c      	subs	r4, r5, r4
10017e3c:	10a4      	asrs	r4, r4, #2
10017e3e:	d005      	beq.n	10017e4c <__libc_fini_array+0x18>
10017e40:	3c01      	subs	r4, #1
10017e42:	f855 3d04 	ldr.w	r3, [r5, #-4]!
10017e46:	4798      	blx	r3
10017e48:	2c00      	cmp	r4, #0
10017e4a:	d1f9      	bne.n	10017e40 <__libc_fini_array+0xc>
10017e4c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10017e50:	f001 bb9c 	b.w	1001958c <_fini>
10017e54:	200006f8 	.word	0x200006f8
10017e58:	200006f4 	.word	0x200006f4

10017e5c <_wcsnrtombs_l>:
10017e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10017e60:	b08b      	sub	sp, #44	@ 0x2c
10017e62:	e9dd 7a15 	ldrd	r7, sl, [sp, #84]	@ 0x54
10017e66:	4686      	mov	lr, r0
10017e68:	461e      	mov	r6, r3
10017e6a:	2f00      	cmp	r7, #0
10017e6c:	d05a      	beq.n	10017f24 <_wcsnrtombs_l+0xc8>
10017e6e:	6815      	ldr	r5, [r2, #0]
10017e70:	2900      	cmp	r1, #0
10017e72:	d05c      	beq.n	10017f2e <_wcsnrtombs_l+0xd2>
10017e74:	9b14      	ldr	r3, [sp, #80]	@ 0x50
10017e76:	2b00      	cmp	r3, #0
10017e78:	d069      	beq.n	10017f4e <_wcsnrtombs_l+0xf2>
10017e7a:	1e74      	subs	r4, r6, #1
10017e7c:	b34e      	cbz	r6, 10017ed2 <_wcsnrtombs_l+0x76>
10017e7e:	3d04      	subs	r5, #4
10017e80:	e9cd 5e01 	strd	r5, lr, [sp, #4]
10017e84:	f8dd b050 	ldr.w	fp, [sp, #80]	@ 0x50
10017e88:	9104      	str	r1, [sp, #16]
10017e8a:	2600      	movs	r6, #0
10017e8c:	9103      	str	r1, [sp, #12]
10017e8e:	9205      	str	r2, [sp, #20]
10017e90:	e00b      	b.n	10017eaa <_wcsnrtombs_l+0x4e>
10017e92:	9b03      	ldr	r3, [sp, #12]
10017e94:	bb0b      	cbnz	r3, 10017eda <_wcsnrtombs_l+0x7e>
10017e96:	9b01      	ldr	r3, [sp, #4]
10017e98:	6818      	ldr	r0, [r3, #0]
10017e9a:	2800      	cmp	r0, #0
10017e9c:	d036      	beq.n	10017f0c <_wcsnrtombs_l+0xb0>
10017e9e:	45dc      	cmp	ip, fp
10017ea0:	d257      	bcs.n	10017f52 <_wcsnrtombs_l+0xf6>
10017ea2:	3c01      	subs	r4, #1
10017ea4:	1c63      	adds	r3, r4, #1
10017ea6:	4666      	mov	r6, ip
10017ea8:	d013      	beq.n	10017ed2 <_wcsnrtombs_l+0x76>
10017eaa:	9b01      	ldr	r3, [sp, #4]
10017eac:	9802      	ldr	r0, [sp, #8]
10017eae:	f853 2f04 	ldr.w	r2, [r3, #4]!
10017eb2:	9301      	str	r3, [sp, #4]
10017eb4:	f8da 50e0 	ldr.w	r5, [sl, #224]	@ 0xe0
10017eb8:	463b      	mov	r3, r7
10017eba:	a907      	add	r1, sp, #28
10017ebc:	e9d7 9800 	ldrd	r9, r8, [r7]
10017ec0:	47a8      	blx	r5
10017ec2:	1c42      	adds	r2, r0, #1
10017ec4:	d037      	beq.n	10017f36 <_wcsnrtombs_l+0xda>
10017ec6:	eb00 0c06 	add.w	ip, r0, r6
10017eca:	45dc      	cmp	ip, fp
10017ecc:	d9e1      	bls.n	10017e92 <_wcsnrtombs_l+0x36>
10017ece:	e9c7 9800 	strd	r9, r8, [r7]
10017ed2:	4630      	mov	r0, r6
10017ed4:	b00b      	add	sp, #44	@ 0x2c
10017ed6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017eda:	2800      	cmp	r0, #0
10017edc:	dd0e      	ble.n	10017efc <_wcsnrtombs_l+0xa0>
10017ede:	9b04      	ldr	r3, [sp, #16]
10017ee0:	9d01      	ldr	r5, [sp, #4]
10017ee2:	4418      	add	r0, r3
10017ee4:	1e5a      	subs	r2, r3, #1
10017ee6:	a907      	add	r1, sp, #28
10017ee8:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
10017eec:	f811 3b01 	ldrb.w	r3, [r1], #1
10017ef0:	f802 3f01 	strb.w	r3, [r2, #1]!
10017ef4:	4596      	cmp	lr, r2
10017ef6:	d1f9      	bne.n	10017eec <_wcsnrtombs_l+0x90>
10017ef8:	9501      	str	r5, [sp, #4]
10017efa:	9004      	str	r0, [sp, #16]
10017efc:	9b05      	ldr	r3, [sp, #20]
10017efe:	681a      	ldr	r2, [r3, #0]
10017f00:	3204      	adds	r2, #4
10017f02:	601a      	str	r2, [r3, #0]
10017f04:	9b01      	ldr	r3, [sp, #4]
10017f06:	6818      	ldr	r0, [r3, #0]
10017f08:	2800      	cmp	r0, #0
10017f0a:	d1c8      	bne.n	10017e9e <_wcsnrtombs_l+0x42>
10017f0c:	9903      	ldr	r1, [sp, #12]
10017f0e:	9a05      	ldr	r2, [sp, #20]
10017f10:	b101      	cbz	r1, 10017f14 <_wcsnrtombs_l+0xb8>
10017f12:	6010      	str	r0, [r2, #0]
10017f14:	f10c 36ff 	add.w	r6, ip, #4294967295	@ 0xffffffff
10017f18:	2200      	movs	r2, #0
10017f1a:	4630      	mov	r0, r6
10017f1c:	603a      	str	r2, [r7, #0]
10017f1e:	b00b      	add	sp, #44	@ 0x2c
10017f20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017f24:	6815      	ldr	r5, [r2, #0]
10017f26:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
10017f2a:	2900      	cmp	r1, #0
10017f2c:	d1a2      	bne.n	10017e74 <_wcsnrtombs_l+0x18>
10017f2e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10017f32:	9314      	str	r3, [sp, #80]	@ 0x50
10017f34:	e7a1      	b.n	10017e7a <_wcsnrtombs_l+0x1e>
10017f36:	f8dd e008 	ldr.w	lr, [sp, #8]
10017f3a:	4606      	mov	r6, r0
10017f3c:	218a      	movs	r1, #138	@ 0x8a
10017f3e:	2200      	movs	r2, #0
10017f40:	4630      	mov	r0, r6
10017f42:	f8ce 1000 	str.w	r1, [lr]
10017f46:	603a      	str	r2, [r7, #0]
10017f48:	b00b      	add	sp, #44	@ 0x2c
10017f4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10017f4e:	9e14      	ldr	r6, [sp, #80]	@ 0x50
10017f50:	e7bf      	b.n	10017ed2 <_wcsnrtombs_l+0x76>
10017f52:	4666      	mov	r6, ip
10017f54:	e7bd      	b.n	10017ed2 <_wcsnrtombs_l+0x76>
10017f56:	bf00      	nop

10017f58 <_wcsnrtombs_r>:
10017f58:	b510      	push	{r4, lr}
10017f5a:	b084      	sub	sp, #16
10017f5c:	4c05      	ldr	r4, [pc, #20]	@ (10017f74 <_wcsnrtombs_r+0x1c>)
10017f5e:	9806      	ldr	r0, [sp, #24]
10017f60:	9000      	str	r0, [sp, #0]
10017f62:	9807      	ldr	r0, [sp, #28]
10017f64:	9001      	str	r0, [sp, #4]
10017f66:	4804      	ldr	r0, [pc, #16]	@ (10017f78 <_wcsnrtombs_r+0x20>)
10017f68:	6800      	ldr	r0, [r0, #0]
10017f6a:	9402      	str	r4, [sp, #8]
10017f6c:	f7ff ff76 	bl	10017e5c <_wcsnrtombs_l>
10017f70:	b004      	add	sp, #16
10017f72:	bd10      	pop	{r4, pc}
10017f74:	20000454 	.word	0x20000454
10017f78:	200005c0 	.word	0x200005c0

10017f7c <__register_exitproc>:
10017f7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10017f80:	4d1b      	ldr	r5, [pc, #108]	@ (10017ff0 <__register_exitproc+0x74>)
10017f82:	4606      	mov	r6, r0
10017f84:	6828      	ldr	r0, [r5, #0]
10017f86:	4698      	mov	r8, r3
10017f88:	460f      	mov	r7, r1
10017f8a:	4691      	mov	r9, r2
10017f8c:	f7fc f930 	bl	100141f0 <__retarget_lock_acquire_recursive>
10017f90:	4b18      	ldr	r3, [pc, #96]	@ (10017ff4 <__register_exitproc+0x78>)
10017f92:	681c      	ldr	r4, [r3, #0]
10017f94:	b31c      	cbz	r4, 10017fde <__register_exitproc+0x62>
10017f96:	6828      	ldr	r0, [r5, #0]
10017f98:	6865      	ldr	r5, [r4, #4]
10017f9a:	2d1f      	cmp	r5, #31
10017f9c:	dc22      	bgt.n	10017fe4 <__register_exitproc+0x68>
10017f9e:	b94e      	cbnz	r6, 10017fb4 <__register_exitproc+0x38>
10017fa0:	1c6b      	adds	r3, r5, #1
10017fa2:	3502      	adds	r5, #2
10017fa4:	6063      	str	r3, [r4, #4]
10017fa6:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
10017faa:	f7fc f923 	bl	100141f4 <__retarget_lock_release_recursive>
10017fae:	2000      	movs	r0, #0
10017fb0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10017fb4:	eb04 0185 	add.w	r1, r4, r5, lsl #2
10017fb8:	2301      	movs	r3, #1
10017fba:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
10017fbe:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
10017fc2:	40ab      	lsls	r3, r5
10017fc4:	431a      	orrs	r2, r3
10017fc6:	2e02      	cmp	r6, #2
10017fc8:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
10017fcc:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
10017fd0:	d1e6      	bne.n	10017fa0 <__register_exitproc+0x24>
10017fd2:	f8d4 218c 	ldr.w	r2, [r4, #396]	@ 0x18c
10017fd6:	431a      	orrs	r2, r3
10017fd8:	f8c4 218c 	str.w	r2, [r4, #396]	@ 0x18c
10017fdc:	e7e0      	b.n	10017fa0 <__register_exitproc+0x24>
10017fde:	4c06      	ldr	r4, [pc, #24]	@ (10017ff8 <__register_exitproc+0x7c>)
10017fe0:	601c      	str	r4, [r3, #0]
10017fe2:	e7d8      	b.n	10017f96 <__register_exitproc+0x1a>
10017fe4:	f7fc f906 	bl	100141f4 <__retarget_lock_release_recursive>
10017fe8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10017fec:	e7e0      	b.n	10017fb0 <__register_exitproc+0x34>
10017fee:	bf00      	nop
10017ff0:	200006e8 	.word	0x200006e8
10017ff4:	200011a8 	.word	0x200011a8
10017ff8:	200011b0 	.word	0x200011b0

10017ffc <__assert_func>:
10017ffc:	b500      	push	{lr}
10017ffe:	4c0b      	ldr	r4, [pc, #44]	@ (1001802c <__assert_func+0x30>)
10018000:	6825      	ldr	r5, [r4, #0]
10018002:	4614      	mov	r4, r2
10018004:	68ee      	ldr	r6, [r5, #12]
10018006:	461a      	mov	r2, r3
10018008:	b085      	sub	sp, #20
1001800a:	4603      	mov	r3, r0
1001800c:	460d      	mov	r5, r1
1001800e:	b14c      	cbz	r4, 10018024 <__assert_func+0x28>
10018010:	4907      	ldr	r1, [pc, #28]	@ (10018030 <__assert_func+0x34>)
10018012:	9500      	str	r5, [sp, #0]
10018014:	e9cd 1401 	strd	r1, r4, [sp, #4]
10018018:	4630      	mov	r0, r6
1001801a:	4906      	ldr	r1, [pc, #24]	@ (10018034 <__assert_func+0x38>)
1001801c:	f000 f844 	bl	100180a8 <fiprintf>
10018020:	f000 f8da 	bl	100181d8 <abort>
10018024:	4904      	ldr	r1, [pc, #16]	@ (10018038 <__assert_func+0x3c>)
10018026:	460c      	mov	r4, r1
10018028:	e7f3      	b.n	10018012 <__assert_func+0x16>
1001802a:	bf00      	nop
1001802c:	200005c0 	.word	0x200005c0
10018030:	10019540 	.word	0x10019540
10018034:	10019550 	.word	0x10019550
10018038:	10018f4c 	.word	0x10018f4c

1001803c <_calloc_r>:
1001803c:	b538      	push	{r3, r4, r5, lr}
1001803e:	fba1 1402 	umull	r1, r4, r1, r2
10018042:	bb54      	cbnz	r4, 1001809a <_calloc_r+0x5e>
10018044:	f7f7 ff40 	bl	1000fec8 <_malloc_r>
10018048:	4605      	mov	r5, r0
1001804a:	b350      	cbz	r0, 100180a2 <_calloc_r+0x66>
1001804c:	f850 2c04 	ldr.w	r2, [r0, #-4]
10018050:	f022 0203 	bic.w	r2, r2, #3
10018054:	3a04      	subs	r2, #4
10018056:	2a24      	cmp	r2, #36	@ 0x24
10018058:	d810      	bhi.n	1001807c <_calloc_r+0x40>
1001805a:	2a13      	cmp	r2, #19
1001805c:	d913      	bls.n	10018086 <_calloc_r+0x4a>
1001805e:	2a1b      	cmp	r2, #27
10018060:	6004      	str	r4, [r0, #0]
10018062:	6044      	str	r4, [r0, #4]
10018064:	d916      	bls.n	10018094 <_calloc_r+0x58>
10018066:	2a24      	cmp	r2, #36	@ 0x24
10018068:	6084      	str	r4, [r0, #8]
1001806a:	60c4      	str	r4, [r0, #12]
1001806c:	bf11      	iteee	ne
1001806e:	f100 0210 	addne.w	r2, r0, #16
10018072:	f100 0218 	addeq.w	r2, r0, #24
10018076:	6104      	streq	r4, [r0, #16]
10018078:	6144      	streq	r4, [r0, #20]
1001807a:	e005      	b.n	10018088 <_calloc_r+0x4c>
1001807c:	4621      	mov	r1, r4
1001807e:	f7fb ffbf 	bl	10014000 <memset>
10018082:	4628      	mov	r0, r5
10018084:	bd38      	pop	{r3, r4, r5, pc}
10018086:	4602      	mov	r2, r0
10018088:	2300      	movs	r3, #0
1001808a:	6013      	str	r3, [r2, #0]
1001808c:	6053      	str	r3, [r2, #4]
1001808e:	6093      	str	r3, [r2, #8]
10018090:	4628      	mov	r0, r5
10018092:	bd38      	pop	{r3, r4, r5, pc}
10018094:	f100 0208 	add.w	r2, r0, #8
10018098:	e7f6      	b.n	10018088 <_calloc_r+0x4c>
1001809a:	f7fc f869 	bl	10014170 <__errno>
1001809e:	230c      	movs	r3, #12
100180a0:	6003      	str	r3, [r0, #0]
100180a2:	2500      	movs	r5, #0
100180a4:	4628      	mov	r0, r5
100180a6:	bd38      	pop	{r3, r4, r5, pc}

100180a8 <fiprintf>:
100180a8:	b40e      	push	{r1, r2, r3}
100180aa:	b510      	push	{r4, lr}
100180ac:	b083      	sub	sp, #12
100180ae:	ab05      	add	r3, sp, #20
100180b0:	4c06      	ldr	r4, [pc, #24]	@ (100180cc <fiprintf+0x24>)
100180b2:	f853 2b04 	ldr.w	r2, [r3], #4
100180b6:	9301      	str	r3, [sp, #4]
100180b8:	4601      	mov	r1, r0
100180ba:	6820      	ldr	r0, [r4, #0]
100180bc:	f7fa f884 	bl	100121c8 <_vfiprintf_r>
100180c0:	b003      	add	sp, #12
100180c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100180c6:	b003      	add	sp, #12
100180c8:	4770      	bx	lr
100180ca:	bf00      	nop
100180cc:	200005c0 	.word	0x200005c0

100180d0 <__ssprint_r>:
100180d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100180d4:	6893      	ldr	r3, [r2, #8]
100180d6:	6817      	ldr	r7, [r2, #0]
100180d8:	b083      	sub	sp, #12
100180da:	4692      	mov	sl, r2
100180dc:	2b00      	cmp	r3, #0
100180de:	d074      	beq.n	100181ca <__ssprint_r+0xfa>
100180e0:	f04f 0b00 	mov.w	fp, #0
100180e4:	688b      	ldr	r3, [r1, #8]
100180e6:	680a      	ldr	r2, [r1, #0]
100180e8:	4681      	mov	r9, r0
100180ea:	460c      	mov	r4, r1
100180ec:	465d      	mov	r5, fp
100180ee:	e045      	b.n	1001817c <__ssprint_r+0xac>
100180f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100180f4:	f413 6f90 	tst.w	r3, #1152	@ 0x480
100180f8:	d02c      	beq.n	10018154 <__ssprint_r+0x84>
100180fa:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
100180fe:	1a16      	subs	r6, r2, r0
10018100:	eb01 0241 	add.w	r2, r1, r1, lsl #1
10018104:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
10018108:	1c71      	adds	r1, r6, #1
1001810a:	1052      	asrs	r2, r2, #1
1001810c:	4429      	add	r1, r5
1001810e:	4291      	cmp	r1, r2
10018110:	bf92      	itee	ls
10018112:	4690      	movls	r8, r2
10018114:	4688      	movhi	r8, r1
10018116:	460a      	movhi	r2, r1
10018118:	055b      	lsls	r3, r3, #21
1001811a:	d539      	bpl.n	10018190 <__ssprint_r+0xc0>
1001811c:	4611      	mov	r1, r2
1001811e:	4648      	mov	r0, r9
10018120:	f7f7 fed2 	bl	1000fec8 <_malloc_r>
10018124:	9001      	str	r0, [sp, #4]
10018126:	2800      	cmp	r0, #0
10018128:	d03d      	beq.n	100181a6 <__ssprint_r+0xd6>
1001812a:	4632      	mov	r2, r6
1001812c:	6921      	ldr	r1, [r4, #16]
1001812e:	f7fc f8b7 	bl	100142a0 <memcpy>
10018132:	89a2      	ldrh	r2, [r4, #12]
10018134:	9b01      	ldr	r3, [sp, #4]
10018136:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
1001813a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
1001813e:	81a2      	strh	r2, [r4, #12]
10018140:	1998      	adds	r0, r3, r6
10018142:	eba8 0606 	sub.w	r6, r8, r6
10018146:	60a6      	str	r6, [r4, #8]
10018148:	f8c4 8014 	str.w	r8, [r4, #20]
1001814c:	6123      	str	r3, [r4, #16]
1001814e:	6020      	str	r0, [r4, #0]
10018150:	46a8      	mov	r8, r5
10018152:	462e      	mov	r6, r5
10018154:	4632      	mov	r2, r6
10018156:	4659      	mov	r1, fp
10018158:	f7fb fed2 	bl	10013f00 <memmove>
1001815c:	f8da 1008 	ldr.w	r1, [sl, #8]
10018160:	68a3      	ldr	r3, [r4, #8]
10018162:	6822      	ldr	r2, [r4, #0]
10018164:	eba3 0308 	sub.w	r3, r3, r8
10018168:	4432      	add	r2, r6
1001816a:	1b49      	subs	r1, r1, r5
1001816c:	60a3      	str	r3, [r4, #8]
1001816e:	6022      	str	r2, [r4, #0]
10018170:	f8ca 1008 	str.w	r1, [sl, #8]
10018174:	b349      	cbz	r1, 100181ca <__ssprint_r+0xfa>
10018176:	e9d7 b500 	ldrd	fp, r5, [r7]
1001817a:	3708      	adds	r7, #8
1001817c:	4698      	mov	r8, r3
1001817e:	4610      	mov	r0, r2
10018180:	2d00      	cmp	r5, #0
10018182:	d0f8      	beq.n	10018176 <__ssprint_r+0xa6>
10018184:	429d      	cmp	r5, r3
10018186:	461e      	mov	r6, r3
10018188:	d2b2      	bcs.n	100180f0 <__ssprint_r+0x20>
1001818a:	46a8      	mov	r8, r5
1001818c:	462e      	mov	r6, r5
1001818e:	e7e1      	b.n	10018154 <__ssprint_r+0x84>
10018190:	4601      	mov	r1, r0
10018192:	4648      	mov	r0, r9
10018194:	f7fb f8ec 	bl	10013370 <_realloc_r>
10018198:	4603      	mov	r3, r0
1001819a:	2800      	cmp	r0, #0
1001819c:	d1d0      	bne.n	10018140 <__ssprint_r+0x70>
1001819e:	6921      	ldr	r1, [r4, #16]
100181a0:	4648      	mov	r0, r9
100181a2:	f7fd fa27 	bl	100155f4 <_free_r>
100181a6:	89a3      	ldrh	r3, [r4, #12]
100181a8:	220c      	movs	r2, #12
100181aa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100181ae:	f8c9 2000 	str.w	r2, [r9]
100181b2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100181b6:	81a3      	strh	r3, [r4, #12]
100181b8:	2200      	movs	r2, #0
100181ba:	2300      	movs	r3, #0
100181bc:	f8ca 2008 	str.w	r2, [sl, #8]
100181c0:	f8ca 3004 	str.w	r3, [sl, #4]
100181c4:	b003      	add	sp, #12
100181c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100181ca:	2000      	movs	r0, #0
100181cc:	2300      	movs	r3, #0
100181ce:	f8ca 3004 	str.w	r3, [sl, #4]
100181d2:	b003      	add	sp, #12
100181d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

100181d8 <abort>:
100181d8:	b508      	push	{r3, lr}
100181da:	2006      	movs	r0, #6
100181dc:	f000 f804 	bl	100181e8 <raise>
100181e0:	2001      	movs	r0, #1
100181e2:	f000 f855 	bl	10018290 <_exit>
100181e6:	bf00      	nop

100181e8 <raise>:
100181e8:	b538      	push	{r3, r4, r5, lr}
100181ea:	4b14      	ldr	r3, [pc, #80]	@ (1001823c <raise+0x54>)
100181ec:	281f      	cmp	r0, #31
100181ee:	681d      	ldr	r5, [r3, #0]
100181f0:	d81e      	bhi.n	10018230 <raise+0x48>
100181f2:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
100181f6:	4604      	mov	r4, r0
100181f8:	b162      	cbz	r2, 10018214 <raise+0x2c>
100181fa:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
100181fe:	b14b      	cbz	r3, 10018214 <raise+0x2c>
10018200:	2b01      	cmp	r3, #1
10018202:	d005      	beq.n	10018210 <raise+0x28>
10018204:	1c59      	adds	r1, r3, #1
10018206:	d00f      	beq.n	10018228 <raise+0x40>
10018208:	2100      	movs	r1, #0
1001820a:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
1001820e:	4798      	blx	r3
10018210:	2000      	movs	r0, #0
10018212:	bd38      	pop	{r3, r4, r5, pc}
10018214:	4628      	mov	r0, r5
10018216:	f000 f829 	bl	1001826c <_getpid_r>
1001821a:	4622      	mov	r2, r4
1001821c:	4601      	mov	r1, r0
1001821e:	4628      	mov	r0, r5
10018220:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10018224:	f000 b80c 	b.w	10018240 <_kill_r>
10018228:	2316      	movs	r3, #22
1001822a:	602b      	str	r3, [r5, #0]
1001822c:	2001      	movs	r0, #1
1001822e:	bd38      	pop	{r3, r4, r5, pc}
10018230:	2316      	movs	r3, #22
10018232:	602b      	str	r3, [r5, #0]
10018234:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10018238:	bd38      	pop	{r3, r4, r5, pc}
1001823a:	bf00      	nop
1001823c:	200005c0 	.word	0x200005c0

10018240 <_kill_r>:
10018240:	b570      	push	{r4, r5, r6, lr}
10018242:	460c      	mov	r4, r1
10018244:	4d08      	ldr	r5, [pc, #32]	@ (10018268 <_kill_r+0x28>)
10018246:	4603      	mov	r3, r0
10018248:	2600      	movs	r6, #0
1001824a:	4620      	mov	r0, r4
1001824c:	4611      	mov	r1, r2
1001824e:	461c      	mov	r4, r3
10018250:	602e      	str	r6, [r5, #0]
10018252:	f000 f815 	bl	10018280 <_kill>
10018256:	1c43      	adds	r3, r0, #1
10018258:	d000      	beq.n	1001825c <_kill_r+0x1c>
1001825a:	bd70      	pop	{r4, r5, r6, pc}
1001825c:	682b      	ldr	r3, [r5, #0]
1001825e:	2b00      	cmp	r3, #0
10018260:	d0fb      	beq.n	1001825a <_kill_r+0x1a>
10018262:	6023      	str	r3, [r4, #0]
10018264:	bd70      	pop	{r4, r5, r6, pc}
10018266:	bf00      	nop
10018268:	200011ac 	.word	0x200011ac

1001826c <_getpid_r>:
1001826c:	f000 b800 	b.w	10018270 <_getpid>

10018270 <_getpid>:
10018270:	4b02      	ldr	r3, [pc, #8]	@ (1001827c <_getpid+0xc>)
10018272:	2258      	movs	r2, #88	@ 0x58
10018274:	601a      	str	r2, [r3, #0]
10018276:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001827a:	4770      	bx	lr
1001827c:	200011ac 	.word	0x200011ac

10018280 <_kill>:
10018280:	4b02      	ldr	r3, [pc, #8]	@ (1001828c <_kill+0xc>)
10018282:	2258      	movs	r2, #88	@ 0x58
10018284:	601a      	str	r2, [r3, #0]
10018286:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001828a:	4770      	bx	lr
1001828c:	200011ac 	.word	0x200011ac

10018290 <_exit>:
10018290:	e7fe      	b.n	10018290 <_exit>
10018292:	bf00      	nop

10018294 <__aeabi_drsub>:
10018294:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
10018298:	e002      	b.n	100182a0 <__adddf3>
1001829a:	bf00      	nop

1001829c <__aeabi_dsub>:
1001829c:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

100182a0 <__adddf3>:
100182a0:	b530      	push	{r4, r5, lr}
100182a2:	ea4f 0441 	mov.w	r4, r1, lsl #1
100182a6:	ea4f 0543 	mov.w	r5, r3, lsl #1
100182aa:	ea94 0f05 	teq	r4, r5
100182ae:	bf08      	it	eq
100182b0:	ea90 0f02 	teqeq	r0, r2
100182b4:	bf1f      	itttt	ne
100182b6:	ea54 0c00 	orrsne.w	ip, r4, r0
100182ba:	ea55 0c02 	orrsne.w	ip, r5, r2
100182be:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
100182c2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
100182c6:	f000 80e2 	beq.w	1001848e <__adddf3+0x1ee>
100182ca:	ea4f 5454 	mov.w	r4, r4, lsr #21
100182ce:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
100182d2:	bfb8      	it	lt
100182d4:	426d      	neglt	r5, r5
100182d6:	dd0c      	ble.n	100182f2 <__adddf3+0x52>
100182d8:	442c      	add	r4, r5
100182da:	ea80 0202 	eor.w	r2, r0, r2
100182de:	ea81 0303 	eor.w	r3, r1, r3
100182e2:	ea82 0000 	eor.w	r0, r2, r0
100182e6:	ea83 0101 	eor.w	r1, r3, r1
100182ea:	ea80 0202 	eor.w	r2, r0, r2
100182ee:	ea81 0303 	eor.w	r3, r1, r3
100182f2:	2d36      	cmp	r5, #54	@ 0x36
100182f4:	bf88      	it	hi
100182f6:	bd30      	pophi	{r4, r5, pc}
100182f8:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
100182fc:	ea4f 3101 	mov.w	r1, r1, lsl #12
10018300:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
10018304:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10018308:	d002      	beq.n	10018310 <__adddf3+0x70>
1001830a:	4240      	negs	r0, r0
1001830c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10018310:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
10018314:	ea4f 3303 	mov.w	r3, r3, lsl #12
10018318:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
1001831c:	d002      	beq.n	10018324 <__adddf3+0x84>
1001831e:	4252      	negs	r2, r2
10018320:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10018324:	ea94 0f05 	teq	r4, r5
10018328:	f000 80a7 	beq.w	1001847a <__adddf3+0x1da>
1001832c:	f1a4 0401 	sub.w	r4, r4, #1
10018330:	f1d5 0e20 	rsbs	lr, r5, #32
10018334:	db0d      	blt.n	10018352 <__adddf3+0xb2>
10018336:	fa02 fc0e 	lsl.w	ip, r2, lr
1001833a:	fa22 f205 	lsr.w	r2, r2, r5
1001833e:	1880      	adds	r0, r0, r2
10018340:	f141 0100 	adc.w	r1, r1, #0
10018344:	fa03 f20e 	lsl.w	r2, r3, lr
10018348:	1880      	adds	r0, r0, r2
1001834a:	fa43 f305 	asr.w	r3, r3, r5
1001834e:	4159      	adcs	r1, r3
10018350:	e00e      	b.n	10018370 <__adddf3+0xd0>
10018352:	f1a5 0520 	sub.w	r5, r5, #32
10018356:	f10e 0e20 	add.w	lr, lr, #32
1001835a:	2a01      	cmp	r2, #1
1001835c:	fa03 fc0e 	lsl.w	ip, r3, lr
10018360:	bf28      	it	cs
10018362:	f04c 0c02 	orrcs.w	ip, ip, #2
10018366:	fa43 f305 	asr.w	r3, r3, r5
1001836a:	18c0      	adds	r0, r0, r3
1001836c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10018370:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10018374:	d507      	bpl.n	10018386 <__adddf3+0xe6>
10018376:	f04f 0e00 	mov.w	lr, #0
1001837a:	f1dc 0c00 	rsbs	ip, ip, #0
1001837e:	eb7e 0000 	sbcs.w	r0, lr, r0
10018382:	eb6e 0101 	sbc.w	r1, lr, r1
10018386:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
1001838a:	d31b      	bcc.n	100183c4 <__adddf3+0x124>
1001838c:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
10018390:	d30c      	bcc.n	100183ac <__adddf3+0x10c>
10018392:	0849      	lsrs	r1, r1, #1
10018394:	ea5f 0030 	movs.w	r0, r0, rrx
10018398:	ea4f 0c3c 	mov.w	ip, ip, rrx
1001839c:	f104 0401 	add.w	r4, r4, #1
100183a0:	ea4f 5244 	mov.w	r2, r4, lsl #21
100183a4:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
100183a8:	f080 809a 	bcs.w	100184e0 <__adddf3+0x240>
100183ac:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
100183b0:	bf08      	it	eq
100183b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
100183b6:	f150 0000 	adcs.w	r0, r0, #0
100183ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
100183be:	ea41 0105 	orr.w	r1, r1, r5
100183c2:	bd30      	pop	{r4, r5, pc}
100183c4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
100183c8:	4140      	adcs	r0, r0
100183ca:	eb41 0101 	adc.w	r1, r1, r1
100183ce:	3c01      	subs	r4, #1
100183d0:	bf28      	it	cs
100183d2:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
100183d6:	d2e9      	bcs.n	100183ac <__adddf3+0x10c>
100183d8:	f091 0f00 	teq	r1, #0
100183dc:	bf04      	itt	eq
100183de:	4601      	moveq	r1, r0
100183e0:	2000      	moveq	r0, #0
100183e2:	fab1 f381 	clz	r3, r1
100183e6:	bf08      	it	eq
100183e8:	3320      	addeq	r3, #32
100183ea:	f1a3 030b 	sub.w	r3, r3, #11
100183ee:	f1b3 0220 	subs.w	r2, r3, #32
100183f2:	da0c      	bge.n	1001840e <__adddf3+0x16e>
100183f4:	320c      	adds	r2, #12
100183f6:	dd08      	ble.n	1001840a <__adddf3+0x16a>
100183f8:	f102 0c14 	add.w	ip, r2, #20
100183fc:	f1c2 020c 	rsb	r2, r2, #12
10018400:	fa01 f00c 	lsl.w	r0, r1, ip
10018404:	fa21 f102 	lsr.w	r1, r1, r2
10018408:	e00c      	b.n	10018424 <__adddf3+0x184>
1001840a:	f102 0214 	add.w	r2, r2, #20
1001840e:	bfd8      	it	le
10018410:	f1c2 0c20 	rsble	ip, r2, #32
10018414:	fa01 f102 	lsl.w	r1, r1, r2
10018418:	fa20 fc0c 	lsr.w	ip, r0, ip
1001841c:	bfdc      	itt	le
1001841e:	ea41 010c 	orrle.w	r1, r1, ip
10018422:	4090      	lslle	r0, r2
10018424:	1ae4      	subs	r4, r4, r3
10018426:	bfa2      	ittt	ge
10018428:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
1001842c:	4329      	orrge	r1, r5
1001842e:	bd30      	popge	{r4, r5, pc}
10018430:	ea6f 0404 	mvn.w	r4, r4
10018434:	3c1f      	subs	r4, #31
10018436:	da1c      	bge.n	10018472 <__adddf3+0x1d2>
10018438:	340c      	adds	r4, #12
1001843a:	dc0e      	bgt.n	1001845a <__adddf3+0x1ba>
1001843c:	f104 0414 	add.w	r4, r4, #20
10018440:	f1c4 0220 	rsb	r2, r4, #32
10018444:	fa20 f004 	lsr.w	r0, r0, r4
10018448:	fa01 f302 	lsl.w	r3, r1, r2
1001844c:	ea40 0003 	orr.w	r0, r0, r3
10018450:	fa21 f304 	lsr.w	r3, r1, r4
10018454:	ea45 0103 	orr.w	r1, r5, r3
10018458:	bd30      	pop	{r4, r5, pc}
1001845a:	f1c4 040c 	rsb	r4, r4, #12
1001845e:	f1c4 0220 	rsb	r2, r4, #32
10018462:	fa20 f002 	lsr.w	r0, r0, r2
10018466:	fa01 f304 	lsl.w	r3, r1, r4
1001846a:	ea40 0003 	orr.w	r0, r0, r3
1001846e:	4629      	mov	r1, r5
10018470:	bd30      	pop	{r4, r5, pc}
10018472:	fa21 f004 	lsr.w	r0, r1, r4
10018476:	4629      	mov	r1, r5
10018478:	bd30      	pop	{r4, r5, pc}
1001847a:	f094 0f00 	teq	r4, #0
1001847e:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
10018482:	bf06      	itte	eq
10018484:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
10018488:	3401      	addeq	r4, #1
1001848a:	3d01      	subne	r5, #1
1001848c:	e74e      	b.n	1001832c <__adddf3+0x8c>
1001848e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10018492:	bf18      	it	ne
10018494:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10018498:	d029      	beq.n	100184ee <__adddf3+0x24e>
1001849a:	ea94 0f05 	teq	r4, r5
1001849e:	bf08      	it	eq
100184a0:	ea90 0f02 	teqeq	r0, r2
100184a4:	d005      	beq.n	100184b2 <__adddf3+0x212>
100184a6:	ea54 0c00 	orrs.w	ip, r4, r0
100184aa:	bf04      	itt	eq
100184ac:	4619      	moveq	r1, r3
100184ae:	4610      	moveq	r0, r2
100184b0:	bd30      	pop	{r4, r5, pc}
100184b2:	ea91 0f03 	teq	r1, r3
100184b6:	bf1e      	ittt	ne
100184b8:	2100      	movne	r1, #0
100184ba:	2000      	movne	r0, #0
100184bc:	bd30      	popne	{r4, r5, pc}
100184be:	ea5f 5c54 	movs.w	ip, r4, lsr #21
100184c2:	d105      	bne.n	100184d0 <__adddf3+0x230>
100184c4:	0040      	lsls	r0, r0, #1
100184c6:	4149      	adcs	r1, r1
100184c8:	bf28      	it	cs
100184ca:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
100184ce:	bd30      	pop	{r4, r5, pc}
100184d0:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
100184d4:	bf3c      	itt	cc
100184d6:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
100184da:	bd30      	popcc	{r4, r5, pc}
100184dc:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
100184e0:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
100184e4:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
100184e8:	f04f 0000 	mov.w	r0, #0
100184ec:	bd30      	pop	{r4, r5, pc}
100184ee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
100184f2:	bf1a      	itte	ne
100184f4:	4619      	movne	r1, r3
100184f6:	4610      	movne	r0, r2
100184f8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
100184fc:	bf1c      	itt	ne
100184fe:	460b      	movne	r3, r1
10018500:	4602      	movne	r2, r0
10018502:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10018506:	bf06      	itte	eq
10018508:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
1001850c:	ea91 0f03 	teqeq	r1, r3
10018510:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
10018514:	bd30      	pop	{r4, r5, pc}
10018516:	bf00      	nop

10018518 <__aeabi_ui2d>:
10018518:	f090 0f00 	teq	r0, #0
1001851c:	bf04      	itt	eq
1001851e:	2100      	moveq	r1, #0
10018520:	4770      	bxeq	lr
10018522:	b530      	push	{r4, r5, lr}
10018524:	f44f 6480 	mov.w	r4, #1024	@ 0x400
10018528:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001852c:	f04f 0500 	mov.w	r5, #0
10018530:	f04f 0100 	mov.w	r1, #0
10018534:	e750      	b.n	100183d8 <__adddf3+0x138>
10018536:	bf00      	nop

10018538 <__aeabi_i2d>:
10018538:	f090 0f00 	teq	r0, #0
1001853c:	bf04      	itt	eq
1001853e:	2100      	moveq	r1, #0
10018540:	4770      	bxeq	lr
10018542:	b530      	push	{r4, r5, lr}
10018544:	f44f 6480 	mov.w	r4, #1024	@ 0x400
10018548:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001854c:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
10018550:	bf48      	it	mi
10018552:	4240      	negmi	r0, r0
10018554:	f04f 0100 	mov.w	r1, #0
10018558:	e73e      	b.n	100183d8 <__adddf3+0x138>
1001855a:	bf00      	nop

1001855c <__aeabi_f2d>:
1001855c:	0042      	lsls	r2, r0, #1
1001855e:	ea4f 01e2 	mov.w	r1, r2, asr #3
10018562:	ea4f 0131 	mov.w	r1, r1, rrx
10018566:	ea4f 7002 	mov.w	r0, r2, lsl #28
1001856a:	bf1f      	itttt	ne
1001856c:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
10018570:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
10018574:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
10018578:	4770      	bxne	lr
1001857a:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
1001857e:	bf08      	it	eq
10018580:	4770      	bxeq	lr
10018582:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
10018586:	bf04      	itt	eq
10018588:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
1001858c:	4770      	bxeq	lr
1001858e:	b530      	push	{r4, r5, lr}
10018590:	f44f 7460 	mov.w	r4, #896	@ 0x380
10018594:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10018598:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1001859c:	e71c      	b.n	100183d8 <__adddf3+0x138>
1001859e:	bf00      	nop

100185a0 <__aeabi_ul2d>:
100185a0:	ea50 0201 	orrs.w	r2, r0, r1
100185a4:	bf08      	it	eq
100185a6:	4770      	bxeq	lr
100185a8:	b530      	push	{r4, r5, lr}
100185aa:	f04f 0500 	mov.w	r5, #0
100185ae:	e00a      	b.n	100185c6 <__aeabi_l2d+0x16>

100185b0 <__aeabi_l2d>:
100185b0:	ea50 0201 	orrs.w	r2, r0, r1
100185b4:	bf08      	it	eq
100185b6:	4770      	bxeq	lr
100185b8:	b530      	push	{r4, r5, lr}
100185ba:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
100185be:	d502      	bpl.n	100185c6 <__aeabi_l2d+0x16>
100185c0:	4240      	negs	r0, r0
100185c2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
100185c6:	f44f 6480 	mov.w	r4, #1024	@ 0x400
100185ca:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100185ce:	ea5f 5c91 	movs.w	ip, r1, lsr #22
100185d2:	f43f aed8 	beq.w	10018386 <__adddf3+0xe6>
100185d6:	f04f 0203 	mov.w	r2, #3
100185da:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
100185de:	bf18      	it	ne
100185e0:	3203      	addne	r2, #3
100185e2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
100185e6:	bf18      	it	ne
100185e8:	3203      	addne	r2, #3
100185ea:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
100185ee:	f1c2 0320 	rsb	r3, r2, #32
100185f2:	fa00 fc03 	lsl.w	ip, r0, r3
100185f6:	fa20 f002 	lsr.w	r0, r0, r2
100185fa:	fa01 fe03 	lsl.w	lr, r1, r3
100185fe:	ea40 000e 	orr.w	r0, r0, lr
10018602:	fa21 f102 	lsr.w	r1, r1, r2
10018606:	4414      	add	r4, r2
10018608:	e6bd      	b.n	10018386 <__adddf3+0xe6>
1001860a:	bf00      	nop

1001860c <__aeabi_dmul>:
1001860c:	b570      	push	{r4, r5, r6, lr}
1001860e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
10018612:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
10018616:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001861a:	bf1d      	ittte	ne
1001861c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10018620:	ea94 0f0c 	teqne	r4, ip
10018624:	ea95 0f0c 	teqne	r5, ip
10018628:	f000 f8de 	bleq	100187e8 <__aeabi_dmul+0x1dc>
1001862c:	442c      	add	r4, r5
1001862e:	ea81 0603 	eor.w	r6, r1, r3
10018632:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
10018636:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1001863a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1001863e:	bf18      	it	ne
10018640:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
10018644:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10018648:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001864c:	d038      	beq.n	100186c0 <__aeabi_dmul+0xb4>
1001864e:	fba0 ce02 	umull	ip, lr, r0, r2
10018652:	f04f 0500 	mov.w	r5, #0
10018656:	fbe1 e502 	umlal	lr, r5, r1, r2
1001865a:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
1001865e:	fbe0 e503 	umlal	lr, r5, r0, r3
10018662:	f04f 0600 	mov.w	r6, #0
10018666:	fbe1 5603 	umlal	r5, r6, r1, r3
1001866a:	f09c 0f00 	teq	ip, #0
1001866e:	bf18      	it	ne
10018670:	f04e 0e01 	orrne.w	lr, lr, #1
10018674:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
10018678:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
1001867c:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
10018680:	d204      	bcs.n	1001868c <__aeabi_dmul+0x80>
10018682:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
10018686:	416d      	adcs	r5, r5
10018688:	eb46 0606 	adc.w	r6, r6, r6
1001868c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10018690:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10018694:	ea4f 20c5 	mov.w	r0, r5, lsl #11
10018698:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
1001869c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
100186a0:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
100186a4:	bf88      	it	hi
100186a6:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
100186aa:	d81e      	bhi.n	100186ea <__aeabi_dmul+0xde>
100186ac:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
100186b0:	bf08      	it	eq
100186b2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
100186b6:	f150 0000 	adcs.w	r0, r0, #0
100186ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
100186be:	bd70      	pop	{r4, r5, r6, pc}
100186c0:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
100186c4:	ea46 0101 	orr.w	r1, r6, r1
100186c8:	ea40 0002 	orr.w	r0, r0, r2
100186cc:	ea81 0103 	eor.w	r1, r1, r3
100186d0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
100186d4:	bfc2      	ittt	gt
100186d6:	ebd4 050c 	rsbsgt	r5, r4, ip
100186da:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
100186de:	bd70      	popgt	{r4, r5, r6, pc}
100186e0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
100186e4:	f04f 0e00 	mov.w	lr, #0
100186e8:	3c01      	subs	r4, #1
100186ea:	f300 80ab 	bgt.w	10018844 <__aeabi_dmul+0x238>
100186ee:	f114 0f36 	cmn.w	r4, #54	@ 0x36
100186f2:	bfde      	ittt	le
100186f4:	2000      	movle	r0, #0
100186f6:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
100186fa:	bd70      	pople	{r4, r5, r6, pc}
100186fc:	f1c4 0400 	rsb	r4, r4, #0
10018700:	3c20      	subs	r4, #32
10018702:	da35      	bge.n	10018770 <__aeabi_dmul+0x164>
10018704:	340c      	adds	r4, #12
10018706:	dc1b      	bgt.n	10018740 <__aeabi_dmul+0x134>
10018708:	f104 0414 	add.w	r4, r4, #20
1001870c:	f1c4 0520 	rsb	r5, r4, #32
10018710:	fa00 f305 	lsl.w	r3, r0, r5
10018714:	fa20 f004 	lsr.w	r0, r0, r4
10018718:	fa01 f205 	lsl.w	r2, r1, r5
1001871c:	ea40 0002 	orr.w	r0, r0, r2
10018720:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
10018724:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
10018728:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
1001872c:	fa21 f604 	lsr.w	r6, r1, r4
10018730:	eb42 0106 	adc.w	r1, r2, r6
10018734:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10018738:	bf08      	it	eq
1001873a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001873e:	bd70      	pop	{r4, r5, r6, pc}
10018740:	f1c4 040c 	rsb	r4, r4, #12
10018744:	f1c4 0520 	rsb	r5, r4, #32
10018748:	fa00 f304 	lsl.w	r3, r0, r4
1001874c:	fa20 f005 	lsr.w	r0, r0, r5
10018750:	fa01 f204 	lsl.w	r2, r1, r4
10018754:	ea40 0002 	orr.w	r0, r0, r2
10018758:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001875c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10018760:	f141 0100 	adc.w	r1, r1, #0
10018764:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10018768:	bf08      	it	eq
1001876a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001876e:	bd70      	pop	{r4, r5, r6, pc}
10018770:	f1c4 0520 	rsb	r5, r4, #32
10018774:	fa00 f205 	lsl.w	r2, r0, r5
10018778:	ea4e 0e02 	orr.w	lr, lr, r2
1001877c:	fa20 f304 	lsr.w	r3, r0, r4
10018780:	fa01 f205 	lsl.w	r2, r1, r5
10018784:	ea43 0302 	orr.w	r3, r3, r2
10018788:	fa21 f004 	lsr.w	r0, r1, r4
1001878c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10018790:	fa21 f204 	lsr.w	r2, r1, r4
10018794:	ea20 0002 	bic.w	r0, r0, r2
10018798:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
1001879c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100187a0:	bf08      	it	eq
100187a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100187a6:	bd70      	pop	{r4, r5, r6, pc}
100187a8:	f094 0f00 	teq	r4, #0
100187ac:	d10f      	bne.n	100187ce <__aeabi_dmul+0x1c2>
100187ae:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
100187b2:	0040      	lsls	r0, r0, #1
100187b4:	eb41 0101 	adc.w	r1, r1, r1
100187b8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
100187bc:	bf08      	it	eq
100187be:	3c01      	subeq	r4, #1
100187c0:	d0f7      	beq.n	100187b2 <__aeabi_dmul+0x1a6>
100187c2:	ea41 0106 	orr.w	r1, r1, r6
100187c6:	f095 0f00 	teq	r5, #0
100187ca:	bf18      	it	ne
100187cc:	4770      	bxne	lr
100187ce:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
100187d2:	0052      	lsls	r2, r2, #1
100187d4:	eb43 0303 	adc.w	r3, r3, r3
100187d8:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
100187dc:	bf08      	it	eq
100187de:	3d01      	subeq	r5, #1
100187e0:	d0f7      	beq.n	100187d2 <__aeabi_dmul+0x1c6>
100187e2:	ea43 0306 	orr.w	r3, r3, r6
100187e6:	4770      	bx	lr
100187e8:	ea94 0f0c 	teq	r4, ip
100187ec:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
100187f0:	bf18      	it	ne
100187f2:	ea95 0f0c 	teqne	r5, ip
100187f6:	d00c      	beq.n	10018812 <__aeabi_dmul+0x206>
100187f8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100187fc:	bf18      	it	ne
100187fe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10018802:	d1d1      	bne.n	100187a8 <__aeabi_dmul+0x19c>
10018804:	ea81 0103 	eor.w	r1, r1, r3
10018808:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001880c:	f04f 0000 	mov.w	r0, #0
10018810:	bd70      	pop	{r4, r5, r6, pc}
10018812:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10018816:	bf06      	itte	eq
10018818:	4610      	moveq	r0, r2
1001881a:	4619      	moveq	r1, r3
1001881c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10018820:	d019      	beq.n	10018856 <__aeabi_dmul+0x24a>
10018822:	ea94 0f0c 	teq	r4, ip
10018826:	d102      	bne.n	1001882e <__aeabi_dmul+0x222>
10018828:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
1001882c:	d113      	bne.n	10018856 <__aeabi_dmul+0x24a>
1001882e:	ea95 0f0c 	teq	r5, ip
10018832:	d105      	bne.n	10018840 <__aeabi_dmul+0x234>
10018834:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10018838:	bf1c      	itt	ne
1001883a:	4610      	movne	r0, r2
1001883c:	4619      	movne	r1, r3
1001883e:	d10a      	bne.n	10018856 <__aeabi_dmul+0x24a>
10018840:	ea81 0103 	eor.w	r1, r1, r3
10018844:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10018848:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001884c:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
10018850:	f04f 0000 	mov.w	r0, #0
10018854:	bd70      	pop	{r4, r5, r6, pc}
10018856:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001885a:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
1001885e:	bd70      	pop	{r4, r5, r6, pc}

10018860 <__aeabi_ddiv>:
10018860:	b570      	push	{r4, r5, r6, lr}
10018862:	f04f 0cff 	mov.w	ip, #255	@ 0xff
10018866:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1001886a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001886e:	bf1d      	ittte	ne
10018870:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10018874:	ea94 0f0c 	teqne	r4, ip
10018878:	ea95 0f0c 	teqne	r5, ip
1001887c:	f000 f8a7 	bleq	100189ce <__aeabi_ddiv+0x16e>
10018880:	eba4 0405 	sub.w	r4, r4, r5
10018884:	ea81 0e03 	eor.w	lr, r1, r3
10018888:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1001888c:	ea4f 3101 	mov.w	r1, r1, lsl #12
10018890:	f000 8088 	beq.w	100189a4 <__aeabi_ddiv+0x144>
10018894:	ea4f 3303 	mov.w	r3, r3, lsl #12
10018898:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
1001889c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
100188a0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
100188a4:	ea4f 2202 	mov.w	r2, r2, lsl #8
100188a8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
100188ac:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
100188b0:	ea4f 2600 	mov.w	r6, r0, lsl #8
100188b4:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
100188b8:	429d      	cmp	r5, r3
100188ba:	bf08      	it	eq
100188bc:	4296      	cmpeq	r6, r2
100188be:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
100188c2:	f504 7440 	add.w	r4, r4, #768	@ 0x300
100188c6:	d202      	bcs.n	100188ce <__aeabi_ddiv+0x6e>
100188c8:	085b      	lsrs	r3, r3, #1
100188ca:	ea4f 0232 	mov.w	r2, r2, rrx
100188ce:	1ab6      	subs	r6, r6, r2
100188d0:	eb65 0503 	sbc.w	r5, r5, r3
100188d4:	085b      	lsrs	r3, r3, #1
100188d6:	ea4f 0232 	mov.w	r2, r2, rrx
100188da:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
100188de:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
100188e2:	ebb6 0e02 	subs.w	lr, r6, r2
100188e6:	eb75 0e03 	sbcs.w	lr, r5, r3
100188ea:	bf22      	ittt	cs
100188ec:	1ab6      	subcs	r6, r6, r2
100188ee:	4675      	movcs	r5, lr
100188f0:	ea40 000c 	orrcs.w	r0, r0, ip
100188f4:	085b      	lsrs	r3, r3, #1
100188f6:	ea4f 0232 	mov.w	r2, r2, rrx
100188fa:	ebb6 0e02 	subs.w	lr, r6, r2
100188fe:	eb75 0e03 	sbcs.w	lr, r5, r3
10018902:	bf22      	ittt	cs
10018904:	1ab6      	subcs	r6, r6, r2
10018906:	4675      	movcs	r5, lr
10018908:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
1001890c:	085b      	lsrs	r3, r3, #1
1001890e:	ea4f 0232 	mov.w	r2, r2, rrx
10018912:	ebb6 0e02 	subs.w	lr, r6, r2
10018916:	eb75 0e03 	sbcs.w	lr, r5, r3
1001891a:	bf22      	ittt	cs
1001891c:	1ab6      	subcs	r6, r6, r2
1001891e:	4675      	movcs	r5, lr
10018920:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
10018924:	085b      	lsrs	r3, r3, #1
10018926:	ea4f 0232 	mov.w	r2, r2, rrx
1001892a:	ebb6 0e02 	subs.w	lr, r6, r2
1001892e:	eb75 0e03 	sbcs.w	lr, r5, r3
10018932:	bf22      	ittt	cs
10018934:	1ab6      	subcs	r6, r6, r2
10018936:	4675      	movcs	r5, lr
10018938:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
1001893c:	ea55 0e06 	orrs.w	lr, r5, r6
10018940:	d018      	beq.n	10018974 <__aeabi_ddiv+0x114>
10018942:	ea4f 1505 	mov.w	r5, r5, lsl #4
10018946:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
1001894a:	ea4f 1606 	mov.w	r6, r6, lsl #4
1001894e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
10018952:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
10018956:	ea4f 02c2 	mov.w	r2, r2, lsl #3
1001895a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
1001895e:	d1c0      	bne.n	100188e2 <__aeabi_ddiv+0x82>
10018960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10018964:	d10b      	bne.n	1001897e <__aeabi_ddiv+0x11e>
10018966:	ea41 0100 	orr.w	r1, r1, r0
1001896a:	f04f 0000 	mov.w	r0, #0
1001896e:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
10018972:	e7b6      	b.n	100188e2 <__aeabi_ddiv+0x82>
10018974:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10018978:	bf04      	itt	eq
1001897a:	4301      	orreq	r1, r0
1001897c:	2000      	moveq	r0, #0
1001897e:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10018982:	bf88      	it	hi
10018984:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
10018988:	f63f aeaf 	bhi.w	100186ea <__aeabi_dmul+0xde>
1001898c:	ebb5 0c03 	subs.w	ip, r5, r3
10018990:	bf04      	itt	eq
10018992:	ebb6 0c02 	subseq.w	ip, r6, r2
10018996:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1001899a:	f150 0000 	adcs.w	r0, r0, #0
1001899e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
100189a2:	bd70      	pop	{r4, r5, r6, pc}
100189a4:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
100189a8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
100189ac:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
100189b0:	bfc2      	ittt	gt
100189b2:	ebd4 050c 	rsbsgt	r5, r4, ip
100189b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
100189ba:	bd70      	popgt	{r4, r5, r6, pc}
100189bc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
100189c0:	f04f 0e00 	mov.w	lr, #0
100189c4:	3c01      	subs	r4, #1
100189c6:	e690      	b.n	100186ea <__aeabi_dmul+0xde>
100189c8:	ea45 0e06 	orr.w	lr, r5, r6
100189cc:	e68d      	b.n	100186ea <__aeabi_dmul+0xde>
100189ce:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
100189d2:	ea94 0f0c 	teq	r4, ip
100189d6:	bf08      	it	eq
100189d8:	ea95 0f0c 	teqeq	r5, ip
100189dc:	f43f af3b 	beq.w	10018856 <__aeabi_dmul+0x24a>
100189e0:	ea94 0f0c 	teq	r4, ip
100189e4:	d10a      	bne.n	100189fc <__aeabi_ddiv+0x19c>
100189e6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
100189ea:	f47f af34 	bne.w	10018856 <__aeabi_dmul+0x24a>
100189ee:	ea95 0f0c 	teq	r5, ip
100189f2:	f47f af25 	bne.w	10018840 <__aeabi_dmul+0x234>
100189f6:	4610      	mov	r0, r2
100189f8:	4619      	mov	r1, r3
100189fa:	e72c      	b.n	10018856 <__aeabi_dmul+0x24a>
100189fc:	ea95 0f0c 	teq	r5, ip
10018a00:	d106      	bne.n	10018a10 <__aeabi_ddiv+0x1b0>
10018a02:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10018a06:	f43f aefd 	beq.w	10018804 <__aeabi_dmul+0x1f8>
10018a0a:	4610      	mov	r0, r2
10018a0c:	4619      	mov	r1, r3
10018a0e:	e722      	b.n	10018856 <__aeabi_dmul+0x24a>
10018a10:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10018a14:	bf18      	it	ne
10018a16:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10018a1a:	f47f aec5 	bne.w	100187a8 <__aeabi_dmul+0x19c>
10018a1e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10018a22:	f47f af0d 	bne.w	10018840 <__aeabi_dmul+0x234>
10018a26:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10018a2a:	f47f aeeb 	bne.w	10018804 <__aeabi_dmul+0x1f8>
10018a2e:	e712      	b.n	10018856 <__aeabi_dmul+0x24a>

10018a30 <__gedf2>:
10018a30:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
10018a34:	e006      	b.n	10018a44 <__cmpdf2+0x4>
10018a36:	bf00      	nop

10018a38 <__ledf2>:
10018a38:	f04f 0c01 	mov.w	ip, #1
10018a3c:	e002      	b.n	10018a44 <__cmpdf2+0x4>
10018a3e:	bf00      	nop

10018a40 <__cmpdf2>:
10018a40:	f04f 0c01 	mov.w	ip, #1
10018a44:	f84d cd04 	str.w	ip, [sp, #-4]!
10018a48:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10018a4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10018a50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10018a54:	bf18      	it	ne
10018a56:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
10018a5a:	d01b      	beq.n	10018a94 <__cmpdf2+0x54>
10018a5c:	b001      	add	sp, #4
10018a5e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10018a62:	bf0c      	ite	eq
10018a64:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
10018a68:	ea91 0f03 	teqne	r1, r3
10018a6c:	bf02      	ittt	eq
10018a6e:	ea90 0f02 	teqeq	r0, r2
10018a72:	2000      	moveq	r0, #0
10018a74:	4770      	bxeq	lr
10018a76:	f110 0f00 	cmn.w	r0, #0
10018a7a:	ea91 0f03 	teq	r1, r3
10018a7e:	bf58      	it	pl
10018a80:	4299      	cmppl	r1, r3
10018a82:	bf08      	it	eq
10018a84:	4290      	cmpeq	r0, r2
10018a86:	bf2c      	ite	cs
10018a88:	17d8      	asrcs	r0, r3, #31
10018a8a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10018a8e:	f040 0001 	orr.w	r0, r0, #1
10018a92:	4770      	bx	lr
10018a94:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10018a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10018a9c:	d102      	bne.n	10018aa4 <__cmpdf2+0x64>
10018a9e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10018aa2:	d107      	bne.n	10018ab4 <__cmpdf2+0x74>
10018aa4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10018aa8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10018aac:	d1d6      	bne.n	10018a5c <__cmpdf2+0x1c>
10018aae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10018ab2:	d0d3      	beq.n	10018a5c <__cmpdf2+0x1c>
10018ab4:	f85d 0b04 	ldr.w	r0, [sp], #4
10018ab8:	4770      	bx	lr
10018aba:	bf00      	nop

10018abc <__aeabi_cdrcmple>:
10018abc:	4684      	mov	ip, r0
10018abe:	4610      	mov	r0, r2
10018ac0:	4662      	mov	r2, ip
10018ac2:	468c      	mov	ip, r1
10018ac4:	4619      	mov	r1, r3
10018ac6:	4663      	mov	r3, ip
10018ac8:	e000      	b.n	10018acc <__aeabi_cdcmpeq>
10018aca:	bf00      	nop

10018acc <__aeabi_cdcmpeq>:
10018acc:	b501      	push	{r0, lr}
10018ace:	f7ff ffb7 	bl	10018a40 <__cmpdf2>
10018ad2:	2800      	cmp	r0, #0
10018ad4:	bf48      	it	mi
10018ad6:	f110 0f00 	cmnmi.w	r0, #0
10018ada:	bd01      	pop	{r0, pc}

10018adc <__aeabi_dcmpeq>:
10018adc:	f84d ed08 	str.w	lr, [sp, #-8]!
10018ae0:	f7ff fff4 	bl	10018acc <__aeabi_cdcmpeq>
10018ae4:	bf0c      	ite	eq
10018ae6:	2001      	moveq	r0, #1
10018ae8:	2000      	movne	r0, #0
10018aea:	f85d fb08 	ldr.w	pc, [sp], #8
10018aee:	bf00      	nop

10018af0 <__aeabi_dcmplt>:
10018af0:	f84d ed08 	str.w	lr, [sp, #-8]!
10018af4:	f7ff ffea 	bl	10018acc <__aeabi_cdcmpeq>
10018af8:	bf34      	ite	cc
10018afa:	2001      	movcc	r0, #1
10018afc:	2000      	movcs	r0, #0
10018afe:	f85d fb08 	ldr.w	pc, [sp], #8
10018b02:	bf00      	nop

10018b04 <__aeabi_dcmple>:
10018b04:	f84d ed08 	str.w	lr, [sp, #-8]!
10018b08:	f7ff ffe0 	bl	10018acc <__aeabi_cdcmpeq>
10018b0c:	bf94      	ite	ls
10018b0e:	2001      	movls	r0, #1
10018b10:	2000      	movhi	r0, #0
10018b12:	f85d fb08 	ldr.w	pc, [sp], #8
10018b16:	bf00      	nop

10018b18 <__aeabi_dcmpge>:
10018b18:	f84d ed08 	str.w	lr, [sp, #-8]!
10018b1c:	f7ff ffce 	bl	10018abc <__aeabi_cdrcmple>
10018b20:	bf94      	ite	ls
10018b22:	2001      	movls	r0, #1
10018b24:	2000      	movhi	r0, #0
10018b26:	f85d fb08 	ldr.w	pc, [sp], #8
10018b2a:	bf00      	nop

10018b2c <__aeabi_dcmpgt>:
10018b2c:	f84d ed08 	str.w	lr, [sp, #-8]!
10018b30:	f7ff ffc4 	bl	10018abc <__aeabi_cdrcmple>
10018b34:	bf34      	ite	cc
10018b36:	2001      	movcc	r0, #1
10018b38:	2000      	movcs	r0, #0
10018b3a:	f85d fb08 	ldr.w	pc, [sp], #8
10018b3e:	bf00      	nop

10018b40 <__aeabi_dcmpun>:
10018b40:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10018b44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10018b48:	d102      	bne.n	10018b50 <__aeabi_dcmpun+0x10>
10018b4a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10018b4e:	d10a      	bne.n	10018b66 <__aeabi_dcmpun+0x26>
10018b50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10018b54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10018b58:	d102      	bne.n	10018b60 <__aeabi_dcmpun+0x20>
10018b5a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10018b5e:	d102      	bne.n	10018b66 <__aeabi_dcmpun+0x26>
10018b60:	f04f 0000 	mov.w	r0, #0
10018b64:	4770      	bx	lr
10018b66:	f04f 0001 	mov.w	r0, #1
10018b6a:	4770      	bx	lr

10018b6c <__aeabi_d2iz>:
10018b6c:	ea4f 0241 	mov.w	r2, r1, lsl #1
10018b70:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
10018b74:	d215      	bcs.n	10018ba2 <__aeabi_d2iz+0x36>
10018b76:	d511      	bpl.n	10018b9c <__aeabi_d2iz+0x30>
10018b78:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10018b7c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10018b80:	d912      	bls.n	10018ba8 <__aeabi_d2iz+0x3c>
10018b82:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10018b86:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10018b8a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10018b8e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
10018b92:	fa23 f002 	lsr.w	r0, r3, r2
10018b96:	bf18      	it	ne
10018b98:	4240      	negne	r0, r0
10018b9a:	4770      	bx	lr
10018b9c:	f04f 0000 	mov.w	r0, #0
10018ba0:	4770      	bx	lr
10018ba2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10018ba6:	d105      	bne.n	10018bb4 <__aeabi_d2iz+0x48>
10018ba8:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
10018bac:	bf08      	it	eq
10018bae:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
10018bb2:	4770      	bx	lr
10018bb4:	f04f 0000 	mov.w	r0, #0
10018bb8:	4770      	bx	lr
10018bba:	bf00      	nop

10018bbc <__aeabi_uldivmod>:
10018bbc:	b953      	cbnz	r3, 10018bd4 <__aeabi_uldivmod+0x18>
10018bbe:	b94a      	cbnz	r2, 10018bd4 <__aeabi_uldivmod+0x18>
10018bc0:	2900      	cmp	r1, #0
10018bc2:	bf08      	it	eq
10018bc4:	2800      	cmpeq	r0, #0
10018bc6:	bf1c      	itt	ne
10018bc8:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
10018bcc:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
10018bd0:	f000 b96a 	b.w	10018ea8 <__aeabi_idiv0>
10018bd4:	f1ad 0c08 	sub.w	ip, sp, #8
10018bd8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10018bdc:	f000 f806 	bl	10018bec <__udivmoddi4>
10018be0:	f8dd e004 	ldr.w	lr, [sp, #4]
10018be4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10018be8:	b004      	add	sp, #16
10018bea:	4770      	bx	lr

10018bec <__udivmoddi4>:
10018bec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10018bf0:	9d08      	ldr	r5, [sp, #32]
10018bf2:	460c      	mov	r4, r1
10018bf4:	2b00      	cmp	r3, #0
10018bf6:	d14e      	bne.n	10018c96 <__udivmoddi4+0xaa>
10018bf8:	4694      	mov	ip, r2
10018bfa:	458c      	cmp	ip, r1
10018bfc:	4686      	mov	lr, r0
10018bfe:	fab2 f282 	clz	r2, r2
10018c02:	d962      	bls.n	10018cca <__udivmoddi4+0xde>
10018c04:	b14a      	cbz	r2, 10018c1a <__udivmoddi4+0x2e>
10018c06:	f1c2 0320 	rsb	r3, r2, #32
10018c0a:	4091      	lsls	r1, r2
10018c0c:	fa20 f303 	lsr.w	r3, r0, r3
10018c10:	fa0c fc02 	lsl.w	ip, ip, r2
10018c14:	4319      	orrs	r1, r3
10018c16:	fa00 fe02 	lsl.w	lr, r0, r2
10018c1a:	ea4f 471c 	mov.w	r7, ip, lsr #16
10018c1e:	fa1f f68c 	uxth.w	r6, ip
10018c22:	fbb1 f4f7 	udiv	r4, r1, r7
10018c26:	ea4f 431e 	mov.w	r3, lr, lsr #16
10018c2a:	fb07 1114 	mls	r1, r7, r4, r1
10018c2e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10018c32:	fb04 f106 	mul.w	r1, r4, r6
10018c36:	4299      	cmp	r1, r3
10018c38:	d90a      	bls.n	10018c50 <__udivmoddi4+0x64>
10018c3a:	eb1c 0303 	adds.w	r3, ip, r3
10018c3e:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
10018c42:	f080 8112 	bcs.w	10018e6a <__udivmoddi4+0x27e>
10018c46:	4299      	cmp	r1, r3
10018c48:	f240 810f 	bls.w	10018e6a <__udivmoddi4+0x27e>
10018c4c:	3c02      	subs	r4, #2
10018c4e:	4463      	add	r3, ip
10018c50:	1a59      	subs	r1, r3, r1
10018c52:	fa1f f38e 	uxth.w	r3, lr
10018c56:	fbb1 f0f7 	udiv	r0, r1, r7
10018c5a:	fb07 1110 	mls	r1, r7, r0, r1
10018c5e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10018c62:	fb00 f606 	mul.w	r6, r0, r6
10018c66:	429e      	cmp	r6, r3
10018c68:	d90a      	bls.n	10018c80 <__udivmoddi4+0x94>
10018c6a:	eb1c 0303 	adds.w	r3, ip, r3
10018c6e:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
10018c72:	f080 80fc 	bcs.w	10018e6e <__udivmoddi4+0x282>
10018c76:	429e      	cmp	r6, r3
10018c78:	f240 80f9 	bls.w	10018e6e <__udivmoddi4+0x282>
10018c7c:	4463      	add	r3, ip
10018c7e:	3802      	subs	r0, #2
10018c80:	1b9b      	subs	r3, r3, r6
10018c82:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
10018c86:	2100      	movs	r1, #0
10018c88:	b11d      	cbz	r5, 10018c92 <__udivmoddi4+0xa6>
10018c8a:	40d3      	lsrs	r3, r2
10018c8c:	2200      	movs	r2, #0
10018c8e:	e9c5 3200 	strd	r3, r2, [r5]
10018c92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10018c96:	428b      	cmp	r3, r1
10018c98:	d905      	bls.n	10018ca6 <__udivmoddi4+0xba>
10018c9a:	b10d      	cbz	r5, 10018ca0 <__udivmoddi4+0xb4>
10018c9c:	e9c5 0100 	strd	r0, r1, [r5]
10018ca0:	2100      	movs	r1, #0
10018ca2:	4608      	mov	r0, r1
10018ca4:	e7f5      	b.n	10018c92 <__udivmoddi4+0xa6>
10018ca6:	fab3 f183 	clz	r1, r3
10018caa:	2900      	cmp	r1, #0
10018cac:	d146      	bne.n	10018d3c <__udivmoddi4+0x150>
10018cae:	42a3      	cmp	r3, r4
10018cb0:	d302      	bcc.n	10018cb8 <__udivmoddi4+0xcc>
10018cb2:	4290      	cmp	r0, r2
10018cb4:	f0c0 80f0 	bcc.w	10018e98 <__udivmoddi4+0x2ac>
10018cb8:	1a86      	subs	r6, r0, r2
10018cba:	eb64 0303 	sbc.w	r3, r4, r3
10018cbe:	2001      	movs	r0, #1
10018cc0:	2d00      	cmp	r5, #0
10018cc2:	d0e6      	beq.n	10018c92 <__udivmoddi4+0xa6>
10018cc4:	e9c5 6300 	strd	r6, r3, [r5]
10018cc8:	e7e3      	b.n	10018c92 <__udivmoddi4+0xa6>
10018cca:	2a00      	cmp	r2, #0
10018ccc:	f040 8090 	bne.w	10018df0 <__udivmoddi4+0x204>
10018cd0:	eba1 040c 	sub.w	r4, r1, ip
10018cd4:	ea4f 481c 	mov.w	r8, ip, lsr #16
10018cd8:	fa1f f78c 	uxth.w	r7, ip
10018cdc:	2101      	movs	r1, #1
10018cde:	fbb4 f6f8 	udiv	r6, r4, r8
10018ce2:	ea4f 431e 	mov.w	r3, lr, lsr #16
10018ce6:	fb08 4416 	mls	r4, r8, r6, r4
10018cea:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10018cee:	fb07 f006 	mul.w	r0, r7, r6
10018cf2:	4298      	cmp	r0, r3
10018cf4:	d908      	bls.n	10018d08 <__udivmoddi4+0x11c>
10018cf6:	eb1c 0303 	adds.w	r3, ip, r3
10018cfa:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
10018cfe:	d202      	bcs.n	10018d06 <__udivmoddi4+0x11a>
10018d00:	4298      	cmp	r0, r3
10018d02:	f200 80cd 	bhi.w	10018ea0 <__udivmoddi4+0x2b4>
10018d06:	4626      	mov	r6, r4
10018d08:	1a1c      	subs	r4, r3, r0
10018d0a:	fa1f f38e 	uxth.w	r3, lr
10018d0e:	fbb4 f0f8 	udiv	r0, r4, r8
10018d12:	fb08 4410 	mls	r4, r8, r0, r4
10018d16:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10018d1a:	fb00 f707 	mul.w	r7, r0, r7
10018d1e:	429f      	cmp	r7, r3
10018d20:	d908      	bls.n	10018d34 <__udivmoddi4+0x148>
10018d22:	eb1c 0303 	adds.w	r3, ip, r3
10018d26:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
10018d2a:	d202      	bcs.n	10018d32 <__udivmoddi4+0x146>
10018d2c:	429f      	cmp	r7, r3
10018d2e:	f200 80b0 	bhi.w	10018e92 <__udivmoddi4+0x2a6>
10018d32:	4620      	mov	r0, r4
10018d34:	1bdb      	subs	r3, r3, r7
10018d36:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
10018d3a:	e7a5      	b.n	10018c88 <__udivmoddi4+0x9c>
10018d3c:	f1c1 0620 	rsb	r6, r1, #32
10018d40:	408b      	lsls	r3, r1
10018d42:	fa22 f706 	lsr.w	r7, r2, r6
10018d46:	431f      	orrs	r7, r3
10018d48:	fa20 fc06 	lsr.w	ip, r0, r6
10018d4c:	fa04 f301 	lsl.w	r3, r4, r1
10018d50:	ea43 030c 	orr.w	r3, r3, ip
10018d54:	40f4      	lsrs	r4, r6
10018d56:	fa00 f801 	lsl.w	r8, r0, r1
10018d5a:	0c38      	lsrs	r0, r7, #16
10018d5c:	ea4f 4913 	mov.w	r9, r3, lsr #16
10018d60:	fbb4 fef0 	udiv	lr, r4, r0
10018d64:	fa1f fc87 	uxth.w	ip, r7
10018d68:	fb00 441e 	mls	r4, r0, lr, r4
10018d6c:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10018d70:	fb0e f90c 	mul.w	r9, lr, ip
10018d74:	45a1      	cmp	r9, r4
10018d76:	fa02 f201 	lsl.w	r2, r2, r1
10018d7a:	d90a      	bls.n	10018d92 <__udivmoddi4+0x1a6>
10018d7c:	193c      	adds	r4, r7, r4
10018d7e:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
10018d82:	f080 8084 	bcs.w	10018e8e <__udivmoddi4+0x2a2>
10018d86:	45a1      	cmp	r9, r4
10018d88:	f240 8081 	bls.w	10018e8e <__udivmoddi4+0x2a2>
10018d8c:	f1ae 0e02 	sub.w	lr, lr, #2
10018d90:	443c      	add	r4, r7
10018d92:	eba4 0409 	sub.w	r4, r4, r9
10018d96:	fa1f f983 	uxth.w	r9, r3
10018d9a:	fbb4 f3f0 	udiv	r3, r4, r0
10018d9e:	fb00 4413 	mls	r4, r0, r3, r4
10018da2:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10018da6:	fb03 fc0c 	mul.w	ip, r3, ip
10018daa:	45a4      	cmp	ip, r4
10018dac:	d907      	bls.n	10018dbe <__udivmoddi4+0x1d2>
10018dae:	193c      	adds	r4, r7, r4
10018db0:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
10018db4:	d267      	bcs.n	10018e86 <__udivmoddi4+0x29a>
10018db6:	45a4      	cmp	ip, r4
10018db8:	d965      	bls.n	10018e86 <__udivmoddi4+0x29a>
10018dba:	3b02      	subs	r3, #2
10018dbc:	443c      	add	r4, r7
10018dbe:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
10018dc2:	fba0 9302 	umull	r9, r3, r0, r2
10018dc6:	eba4 040c 	sub.w	r4, r4, ip
10018dca:	429c      	cmp	r4, r3
10018dcc:	46ce      	mov	lr, r9
10018dce:	469c      	mov	ip, r3
10018dd0:	d351      	bcc.n	10018e76 <__udivmoddi4+0x28a>
10018dd2:	d04e      	beq.n	10018e72 <__udivmoddi4+0x286>
10018dd4:	b155      	cbz	r5, 10018dec <__udivmoddi4+0x200>
10018dd6:	ebb8 030e 	subs.w	r3, r8, lr
10018dda:	eb64 040c 	sbc.w	r4, r4, ip
10018dde:	fa04 f606 	lsl.w	r6, r4, r6
10018de2:	40cb      	lsrs	r3, r1
10018de4:	431e      	orrs	r6, r3
10018de6:	40cc      	lsrs	r4, r1
10018de8:	e9c5 6400 	strd	r6, r4, [r5]
10018dec:	2100      	movs	r1, #0
10018dee:	e750      	b.n	10018c92 <__udivmoddi4+0xa6>
10018df0:	f1c2 0320 	rsb	r3, r2, #32
10018df4:	fa20 f103 	lsr.w	r1, r0, r3
10018df8:	fa0c fc02 	lsl.w	ip, ip, r2
10018dfc:	fa24 f303 	lsr.w	r3, r4, r3
10018e00:	4094      	lsls	r4, r2
10018e02:	430c      	orrs	r4, r1
10018e04:	ea4f 481c 	mov.w	r8, ip, lsr #16
10018e08:	fa00 fe02 	lsl.w	lr, r0, r2
10018e0c:	fa1f f78c 	uxth.w	r7, ip
10018e10:	fbb3 f0f8 	udiv	r0, r3, r8
10018e14:	fb08 3110 	mls	r1, r8, r0, r3
10018e18:	0c23      	lsrs	r3, r4, #16
10018e1a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10018e1e:	fb00 f107 	mul.w	r1, r0, r7
10018e22:	4299      	cmp	r1, r3
10018e24:	d908      	bls.n	10018e38 <__udivmoddi4+0x24c>
10018e26:	eb1c 0303 	adds.w	r3, ip, r3
10018e2a:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
10018e2e:	d22c      	bcs.n	10018e8a <__udivmoddi4+0x29e>
10018e30:	4299      	cmp	r1, r3
10018e32:	d92a      	bls.n	10018e8a <__udivmoddi4+0x29e>
10018e34:	3802      	subs	r0, #2
10018e36:	4463      	add	r3, ip
10018e38:	1a5b      	subs	r3, r3, r1
10018e3a:	b2a4      	uxth	r4, r4
10018e3c:	fbb3 f1f8 	udiv	r1, r3, r8
10018e40:	fb08 3311 	mls	r3, r8, r1, r3
10018e44:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
10018e48:	fb01 f307 	mul.w	r3, r1, r7
10018e4c:	42a3      	cmp	r3, r4
10018e4e:	d908      	bls.n	10018e62 <__udivmoddi4+0x276>
10018e50:	eb1c 0404 	adds.w	r4, ip, r4
10018e54:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
10018e58:	d213      	bcs.n	10018e82 <__udivmoddi4+0x296>
10018e5a:	42a3      	cmp	r3, r4
10018e5c:	d911      	bls.n	10018e82 <__udivmoddi4+0x296>
10018e5e:	3902      	subs	r1, #2
10018e60:	4464      	add	r4, ip
10018e62:	1ae4      	subs	r4, r4, r3
10018e64:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
10018e68:	e739      	b.n	10018cde <__udivmoddi4+0xf2>
10018e6a:	4604      	mov	r4, r0
10018e6c:	e6f0      	b.n	10018c50 <__udivmoddi4+0x64>
10018e6e:	4608      	mov	r0, r1
10018e70:	e706      	b.n	10018c80 <__udivmoddi4+0x94>
10018e72:	45c8      	cmp	r8, r9
10018e74:	d2ae      	bcs.n	10018dd4 <__udivmoddi4+0x1e8>
10018e76:	ebb9 0e02 	subs.w	lr, r9, r2
10018e7a:	eb63 0c07 	sbc.w	ip, r3, r7
10018e7e:	3801      	subs	r0, #1
10018e80:	e7a8      	b.n	10018dd4 <__udivmoddi4+0x1e8>
10018e82:	4631      	mov	r1, r6
10018e84:	e7ed      	b.n	10018e62 <__udivmoddi4+0x276>
10018e86:	4603      	mov	r3, r0
10018e88:	e799      	b.n	10018dbe <__udivmoddi4+0x1d2>
10018e8a:	4630      	mov	r0, r6
10018e8c:	e7d4      	b.n	10018e38 <__udivmoddi4+0x24c>
10018e8e:	46d6      	mov	lr, sl
10018e90:	e77f      	b.n	10018d92 <__udivmoddi4+0x1a6>
10018e92:	4463      	add	r3, ip
10018e94:	3802      	subs	r0, #2
10018e96:	e74d      	b.n	10018d34 <__udivmoddi4+0x148>
10018e98:	4606      	mov	r6, r0
10018e9a:	4623      	mov	r3, r4
10018e9c:	4608      	mov	r0, r1
10018e9e:	e70f      	b.n	10018cc0 <__udivmoddi4+0xd4>
10018ea0:	3e02      	subs	r6, #2
10018ea2:	4463      	add	r3, ip
10018ea4:	e730      	b.n	10018d08 <__udivmoddi4+0x11c>
10018ea6:	bf00      	nop

10018ea8 <__aeabi_idiv0>:
10018ea8:	4770      	bx	lr
10018eaa:	bf00      	nop
10018eac:	746f6f62 	.word	0x746f6f62
10018eb0:	6d6f6320 	.word	0x6d6f6320
10018eb4:	00003270 	.word	0x00003270
10018eb8:	302f3230 	.word	0x302f3230
10018ebc:	34322f32 	.word	0x34322f32
10018ec0:	00000000 	.word	0x00000000
10018ec4:	616b6144 	.word	0x616b6144
10018ec8:	00000072 	.word	0x00000072
10018ecc:	3e434f4c 	.word	0x3e434f4c
10018ed0:	440a7325 	.word	0x440a7325
10018ed4:	3e455441 	.word	0x3e455441
10018ed8:	430a7325 	.word	0x430a7325
10018edc:	3e545355 	.word	0x3e545355
10018ee0:	000a7325 	.word	0x000a7325
10018ee4:	6f746166 	.word	0x6f746166
10018ee8:	00000075 	.word	0x00000075
10018eec:	6f727245 	.word	0x6f727245
10018ef0:	55203a72 	.word	0x55203a72
10018ef4:	6365726e 	.word	0x6365726e
10018ef8:	696e676f 	.word	0x696e676f
10018efc:	2064657a 	.word	0x2064657a
10018f00:	6d6d6f63 	.word	0x6d6d6f63
10018f04:	20646e61 	.word	0x20646e61
10018f08:	65636572 	.word	0x65636572
10018f0c:	64657669 	.word	0x64657669
10018f10:	0a642520 	.word	0x0a642520
10018f14:	00000000 	.word	0x00000000
10018f18:	6c696146 	.word	0x6c696146
10018f1c:	74206465 	.word	0x74206465
10018f20:	6e69206f 	.word	0x6e69206f
10018f24:	61697469 	.word	0x61697469
10018f28:	657a696c 	.word	0x657a696c
10018f2c:	43324920 	.word	0x43324920
10018f30:	0000002e 	.word	0x0000002e
10018f34:	5f43584d 	.word	0x5f43584d
10018f38:	45535341 	.word	0x45535341
10018f3c:	25205452 	.word	0x25205452
10018f40:	25232073 	.word	0x25232073
10018f44:	28203a64 	.word	0x28203a64
10018f48:	0a297325 	.word	0x0a297325
10018f4c:	00000000 	.word	0x00000000
10018f50:	6573552f 	.word	0x6573552f
10018f54:	732f7372 	.word	0x732f7372
10018f58:	6c696f70 	.word	0x6c696f70
10018f5c:	442f7265 	.word	0x442f7265
10018f60:	6d75636f 	.word	0x6d75636f
10018f64:	73746e65 	.word	0x73746e65
10018f68:	7469472f 	.word	0x7469472f
10018f6c:	2f627548 	.word	0x2f627548
10018f70:	2d544143 	.word	0x2d544143
10018f74:	66746365 	.word	0x66746365
10018f78:	3230322d 	.word	0x3230322d
10018f7c:	736d2f34 	.word	0x736d2f34
10018f80:	4c2f6b64 	.word	0x4c2f6b64
10018f84:	61726269 	.word	0x61726269
10018f88:	73656972 	.word	0x73656972
10018f8c:	616f422f 	.word	0x616f422f
10018f90:	2f736472 	.word	0x2f736472
10018f94:	3758414d 	.word	0x3758414d
10018f98:	30303038 	.word	0x30303038
10018f9c:	4854462f 	.word	0x4854462f
10018fa0:	65525f52 	.word	0x65525f52
10018fa4:	532f4176 	.word	0x532f4176
10018fa8:	6372756f 	.word	0x6372756f
10018fac:	6f622f65 	.word	0x6f622f65
10018fb0:	2e647261 	.word	0x2e647261
10018fb4:	00000063 	.word	0x00000063
10018fb8:	4c494146 	.word	0x4c494146
10018fbc:	00000000 	.word	0x00000000

10018fc0 <num_leds>:
10018fc0:	00000003                                ....

10018fc4 <led_pin>:
10018fc4:	40080400 00000001 00010001 40080400     ...@...........@
10018fd4:	00000002 00010001 40080400 00000004     ...........@....
10018fe4:	00010001                                ....

10018fe8 <num_pbs>:
10018fe8:	00000002                                ....

10018fec <pb_pin>:
10018fec:	40008000 00000004 00010100 40009000     ...@...........@
10018ffc:	00000080 00010100 6573552f 732f7372     ......../Users/s
1001900c:	6c696f70 442f7265 6d75636f 73746e65     poiler/Documents
1001901c:	7469472f 2f627548 2d544143 66746365     /GitHub/CAT-ectf
1001902c:	3230322d 736d2f34 4c2f6b64 61726269     -2024/msdk/Libra
1001903c:	73656972 73694d2f 69724463 73726576     ries/MiscDrivers
1001904c:	44454c2f 64656c2f 0000632e 20786469     /LED/led.c..idx 
1001905c:	756e203c 656c5f6d 00007364              < num_leds..

10019068 <gpio_cfg_uart3>:
10019068:	40080400 000000c0 00000003              ...@........

10019074 <gpio_cfg_uart2>:
10019074:	40009000 00000003 00000002              ...@........

10019080 <gpio_cfg_uart1>:
10019080:	40008000 00003000 00000002              ...@.0......

1001908c <gpio_cfg_uart0>:
1001908c:	40008000 00000003 00000002              ...@........

10019098 <gpio_cfg_i2c2>:
10019098:	40008000 c0000000 00000002              ...@........

100190a4 <gpio_cfg_i2c1>:
100190a4:	40008000 00030000 00000002              ...@........

100190b0 <gpio_cfg_i2c0>:
100190b0:	40008000 00000c00 00000002              ...@........

100190bc <gpio_cfg_extclk>:
100190bc:	40008000 00000008 00000002 6573552f     ...@......../Use
100190cc:	732f7372 6c696f70 442f7265 6d75636f     rs/spoiler/Docum
100190dc:	73746e65 7469472f 2f627548 2d544143     ents/GitHub/CAT-
100190ec:	66746365 3230322d 736d2f34 4c2f6b64     ectf-2024/msdk/L
100190fc:	61726269 73656972 534d432f 2e2f5349     ibraries/CMSIS/.
1001910c:	65502f2e 68706972 76697244 2f737265     ./PeriphDrivers/
1001911c:	72756f53 472f6563 2f4f4950 6f697067     Source/GPIO/gpio
1001912c:	6d6f635f 2e6e6f6d 00000063 74726f70     _common.c...port
1001913c:	4d203c20 435f4358 475f4746 5f4f4950      < MXC_CFG_GPIO_
1001914c:	54534e49 45434e41 00000053              INSTANCES...

10019158 <CSWTCH.16>:
10019158:	40009000 40080400 40080600 00464e49     ...@...@...@INF.
10019168:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
10019178:	37363534 62613938 66656463 00000000     456789abcdef....
10019188:	33323130 37363534 42413938 46454443     0123456789ABCDEF
10019198:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

100191a8 <zeroes.0>:
100191a8:	30303030 30303030 30303030 30303030     0000000000000000

100191b8 <blanks.1>:
100191b8:	20202020 20202020 20202020 20202020                     

100191c8 <zeroes.0>:
100191c8:	30303030 30303030 30303030 30303030     0000000000000000

100191d8 <blanks.1>:
100191d8:	20202020 20202020 20202020 20202020                     
100191e8:	0000000a 435f434c 414c4c4f 00004554     ....LC_COLLATE..
100191f8:	435f434c 45505954 00000000 4d5f434c     LC_CTYPE....LC_M
10019208:	54454e4f 00595241 4e5f434c 52454d55     ONETARY.LC_NUMER
10019218:	00004349 545f434c 00454d49 4d5f434c     IC..LC_TIME.LC_M
10019228:	41535345 00534547                       ESSAGES.

10019230 <_ctype_>:
10019230:	20202000 20202020 28282020 20282828     .         ((((( 
10019240:	20202020 20202020 20202020 20202020                     
10019250:	10108820 10101010 10101010 10101010      ...............
10019260:	04040410 04040404 10040404 10101010     ................
10019270:	41411010 41414141 01010101 01010101     ..AAAAAA........
10019280:	01010101 01010101 01010101 10101010     ................
10019290:	42421010 42424242 02020202 02020202     ..BBBBBB........
100192a0:	02020202 02020202 02020202 10101010     ................
100192b0:	00000020 00000000 00000000 00000000      ...............
	...
10019334:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
10019344:	6c6c6142 7320636f 65636375 64656465     Balloc succeeded
10019354:	00000000 6c6f562f 73656d75 7461642f     ..../Volumes/dat
10019364:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
10019374:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
10019384:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
10019394:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
100193a4:	696c2f62 732f6362 696c6474 74642f62     b/libc/stdlib/dt
100193b4:	632e616f 00000000                       oa.c....

100193bc <zeroes.0>:
100193bc:	30303030 30303030 30303030 30303030     0000000000000000

100193cc <blanks.1>:
100193cc:	20202020 20202020 20202020 20202020                     
100193dc:	6c6f562f 73656d75 7461642f 656a2f61     /Volumes/data/je
100193ec:	6e696b6e 6f772f73 70736b72 2f656361     nkins/workspace/
100193fc:	2d554e47 6c6f6f74 69616863 72612f6e     GNU-toolchain/ar
1001940c:	32312d6d 6372732f 77656e2f 2d62696c     m-12/src/newlib-
1001941c:	77677963 6e2f6e69 696c7765 696c2f62     cygwin/newlib/li
1001942c:	732f6362 696c6474 706d2f62 2e636572     bc/stdlib/mprec.
1001943c:	00000063                                c...

10019440 <p05.0>:
10019440:	00000005 00000019 0000007d 00000000     ........}.......

10019450 <__mprec_bigtens>:
10019450:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
10019460:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
10019470:	7f73bf3c 75154fdd                       <.s..O.u

10019478 <__mprec_tens>:
10019478:	00000000 3ff00000 00000000 40240000     .......?......$@
10019488:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
10019498:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
100194a8:	00000000 412e8480 00000000 416312d0     .......A......cA
100194b8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
100194c8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
100194d8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
100194e8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
100194f8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
10019508:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
10019518:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
10019528:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
10019538:	79d99db4 44ea7843 7566202c 6974636e     ...yCx.D, functi
10019548:	203a6e6f 00000000 65737361 6f697472     on: ....assertio
10019558:	2522206e 66202273 656c6961 66203a64     n "%s" failed: f
10019568:	20656c69 22732522 696c202c 2520656e     ile "%s", line %
10019578:	25732564 00000a73                       d%s%s...

10019580 <_init>:
10019580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10019582:	bf00      	nop
10019584:	bcf8      	pop	{r3, r4, r5, r6, r7}
10019586:	bc08      	pop	{r3}
10019588:	469e      	mov	lr, r3
1001958a:	4770      	bx	lr

1001958c <_fini>:
1001958c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001958e:	bf00      	nop
10019590:	bcf8      	pop	{r3, r4, r5, r6, r7}
10019592:	bc08      	pop	{r3}
10019594:	469e      	mov	lr, r3
10019596:	4770      	bx	lr

10019598 <__EH_FRAME_BEGIN__>:
10019598:	0010 0000 0000 0000 7a01 0052 7c02 010e     .........zR..|..
100195a8:	0c1b 000d 0038 0000 0018 0000 ac4c ffff     ....8.......L...
100195b8:	009e 0000 5100 100e 0484 0385 0286 0187     .....Q..........
100195c8:	c75b c5c6 0ec4 4c00 420a 0a0b 0b42 100e     [......L.B..B...
100195d8:	0484 0385 0286 0187 c751 c5c6 0ec4 0000     ........Q.......
100195e8:	0010 0000 0000 0000 7a01 0052 7c02 010e     .........zR..|..
100195f8:	0c1b 000d 0014 0000 0018 0000 ac9c ffff     ................
10019608:	0134 0000 0200 0a71 0b43 0000 0010 0000     4.....q.C.......
10019618:	0000 0000 7a01 0052 7c02 010e 0c1b 000d     .....zR..|......
10019628:	001c 0000 0018 0000 add0 ffff 00d8 0000     ................
10019638:	4100 080e 0185 0284 4902 4a0a c4c5 0b41     .A.......I.J..A.

10019648 <__FRAME_END__>:
10019648:	0000 0000                                   ....
