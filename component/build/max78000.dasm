
/Users/spoiler/Documents/GitHub/CAT-ectf-2024/component/build/max78000.elf:     file format elf32-littlearm


Disassembly of section .text:

1000e000 <__isr_vector>:
1000e000:	20020000 	.word	0x20020000
1000e004:	1000fd09 	.word	0x1000fd09
1000e008:	1000fb3d 	.word	0x1000fb3d
1000e00c:	1000fd47 	.word	0x1000fd47
1000e010:	1000fd49 	.word	0x1000fd49
1000e014:	1000fd4b 	.word	0x1000fd4b
1000e018:	1000fd4d 	.word	0x1000fd4d
	...
1000e02c:	1000fd4f 	.word	0x1000fd4f
1000e030:	1000fd51 	.word	0x1000fd51
1000e034:	00000000 	.word	0x00000000
1000e038:	1000fd53 	.word	0x1000fd53
1000e03c:	1000fd55 	.word	0x1000fd55
1000e040:	1000fd59 	.word	0x1000fd59
1000e044:	1000fd5b 	.word	0x1000fd5b
1000e048:	1000fd5d 	.word	0x1000fd5d
1000e04c:	1000fd5f 	.word	0x1000fd5f
1000e050:	1000fd61 	.word	0x1000fd61
1000e054:	1000fd63 	.word	0x1000fd63
1000e058:	1000fd65 	.word	0x1000fd65
1000e05c:	1000fd67 	.word	0x1000fd67
1000e060:	1000fd69 	.word	0x1000fd69
1000e064:	1000fd6b 	.word	0x1000fd6b
1000e068:	1000fd6d 	.word	0x1000fd6d
1000e06c:	1000fd6f 	.word	0x1000fd6f
1000e070:	1000fd71 	.word	0x1000fd71
1000e074:	1000fd73 	.word	0x1000fd73
1000e078:	1000fd75 	.word	0x1000fd75
1000e07c:	1000fd77 	.word	0x1000fd77
1000e080:	1000fd79 	.word	0x1000fd79
1000e084:	1000fd7b 	.word	0x1000fd7b
1000e088:	1000fd7d 	.word	0x1000fd7d
1000e08c:	1000fd7f 	.word	0x1000fd7f
1000e090:	1000fd81 	.word	0x1000fd81
1000e094:	1000fd83 	.word	0x1000fd83
1000e098:	1000fd85 	.word	0x1000fd85
1000e09c:	1000fd87 	.word	0x1000fd87
1000e0a0:	1000fac1 	.word	0x1000fac1
1000e0a4:	1000fac9 	.word	0x1000fac9
1000e0a8:	1000fd8d 	.word	0x1000fd8d
1000e0ac:	1000fd8f 	.word	0x1000fd8f
1000e0b0:	1000fd91 	.word	0x1000fd91
1000e0b4:	1000fd93 	.word	0x1000fd93
1000e0b8:	1000fd95 	.word	0x1000fd95
1000e0bc:	1000fd97 	.word	0x1000fd97
1000e0c0:	1000fd99 	.word	0x1000fd99
1000e0c4:	1000fd9b 	.word	0x1000fd9b
1000e0c8:	1000fd9d 	.word	0x1000fd9d
1000e0cc:	1000fd9f 	.word	0x1000fd9f
1000e0d0:	1000fda1 	.word	0x1000fda1
1000e0d4:	1000fda3 	.word	0x1000fda3
1000e0d8:	1000fda5 	.word	0x1000fda5
1000e0dc:	1000fda7 	.word	0x1000fda7
1000e0e0:	1000fda9 	.word	0x1000fda9
1000e0e4:	1000fdab 	.word	0x1000fdab
1000e0e8:	1000fdad 	.word	0x1000fdad
1000e0ec:	1000fdaf 	.word	0x1000fdaf
1000e0f0:	1000fdb1 	.word	0x1000fdb1
1000e0f4:	1000fdb3 	.word	0x1000fdb3
1000e0f8:	1000fdb5 	.word	0x1000fdb5
1000e0fc:	1000fdb7 	.word	0x1000fdb7
1000e100:	1000fdb9 	.word	0x1000fdb9
1000e104:	1000fdbb 	.word	0x1000fdbb
1000e108:	1000fdbd 	.word	0x1000fdbd
1000e10c:	1000fdbf 	.word	0x1000fdbf
1000e110:	1000fdc1 	.word	0x1000fdc1
1000e114:	1000fdc3 	.word	0x1000fdc3
1000e118:	1000fdc5 	.word	0x1000fdc5
1000e11c:	1000fdc7 	.word	0x1000fdc7
1000e120:	1000fdc9 	.word	0x1000fdc9
1000e124:	1000fdcb 	.word	0x1000fdcb
1000e128:	1000fdcd 	.word	0x1000fdcd
1000e12c:	1000fdcf 	.word	0x1000fdcf
1000e130:	1000fdd1 	.word	0x1000fdd1
1000e134:	1000fdd3 	.word	0x1000fdd3
1000e138:	1000fdd5 	.word	0x1000fdd5
1000e13c:	1000fdd7 	.word	0x1000fdd7
1000e140:	1000fdd9 	.word	0x1000fdd9
1000e144:	1000fddb 	.word	0x1000fddb
1000e148:	1000fddd 	.word	0x1000fddd
1000e14c:	1000fddf 	.word	0x1000fddf
1000e150:	1000fde1 	.word	0x1000fde1
1000e154:	1000fde3 	.word	0x1000fde3
1000e158:	1000fde5 	.word	0x1000fde5
1000e15c:	1000fde7 	.word	0x1000fde7
1000e160:	1000fde9 	.word	0x1000fde9
1000e164:	1000fdeb 	.word	0x1000fdeb
1000e168:	1000fded 	.word	0x1000fded
1000e16c:	1000fdef 	.word	0x1000fdef
1000e170:	1000fdf1 	.word	0x1000fdf1
1000e174:	1000fdf3 	.word	0x1000fdf3
1000e178:	1000fdf5 	.word	0x1000fdf5
1000e17c:	1000fdf7 	.word	0x1000fdf7
1000e180:	1000fdf9 	.word	0x1000fdf9
1000e184:	1000fdfb 	.word	0x1000fdfb
1000e188:	1000fdfd 	.word	0x1000fdfd
1000e18c:	1000fdff 	.word	0x1000fdff
1000e190:	1000fe01 	.word	0x1000fe01
1000e194:	1000fe03 	.word	0x1000fe03
1000e198:	1000fe05 	.word	0x1000fe05
1000e19c:	1000fe07 	.word	0x1000fe07
1000e1a0:	1000fe09 	.word	0x1000fe09
1000e1a4:	1000fe0b 	.word	0x1000fe0b
1000e1a8:	1000fe0d 	.word	0x1000fe0d
1000e1ac:	1000fe0f 	.word	0x1000fe0f
1000e1b0:	1000fe11 	.word	0x1000fe11
1000e1b4:	1000fe13 	.word	0x1000fe13
1000e1b8:	1000fe15 	.word	0x1000fe15
1000e1bc:	1000fe17 	.word	0x1000fe17
1000e1c0:	1000fe19 	.word	0x1000fe19
1000e1c4:	1000fe1b 	.word	0x1000fe1b
1000e1c8:	1000fe1d 	.word	0x1000fe1d
1000e1cc:	1000fe1f 	.word	0x1000fe1f
1000e1d0:	1000fe21 	.word	0x1000fe21
1000e1d4:	1000fe23 	.word	0x1000fe23
1000e1d8:	1000fe25 	.word	0x1000fe25
1000e1dc:	1000fe27 	.word	0x1000fe27
	...

1000e200 <firmware_startup>:
1000e200:	4800      	ldr	r0, [pc, #0]	@ (1000e204 <firmware_startup+0x4>)
1000e202:	4780      	blx	r0
1000e204:	1000fd09 	.word	0x1000fd09

1000e208 <deregister_tm_clones>:
1000e208:	4803      	ldr	r0, [pc, #12]	@ (1000e218 <deregister_tm_clones+0x10>)
1000e20a:	4b04      	ldr	r3, [pc, #16]	@ (1000e21c <deregister_tm_clones+0x14>)
1000e20c:	4283      	cmp	r3, r0
1000e20e:	d002      	beq.n	1000e216 <deregister_tm_clones+0xe>
1000e210:	4b03      	ldr	r3, [pc, #12]	@ (1000e220 <deregister_tm_clones+0x18>)
1000e212:	b103      	cbz	r3, 1000e216 <deregister_tm_clones+0xe>
1000e214:	4718      	bx	r3
1000e216:	4770      	bx	lr
1000e218:	200006f8 	.word	0x200006f8
1000e21c:	200006f8 	.word	0x200006f8
1000e220:	00000000 	.word	0x00000000

1000e224 <register_tm_clones>:
1000e224:	4805      	ldr	r0, [pc, #20]	@ (1000e23c <register_tm_clones+0x18>)
1000e226:	4b06      	ldr	r3, [pc, #24]	@ (1000e240 <register_tm_clones+0x1c>)
1000e228:	1a1b      	subs	r3, r3, r0
1000e22a:	0fd9      	lsrs	r1, r3, #31
1000e22c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
1000e230:	1049      	asrs	r1, r1, #1
1000e232:	d002      	beq.n	1000e23a <register_tm_clones+0x16>
1000e234:	4b03      	ldr	r3, [pc, #12]	@ (1000e244 <register_tm_clones+0x20>)
1000e236:	b103      	cbz	r3, 1000e23a <register_tm_clones+0x16>
1000e238:	4718      	bx	r3
1000e23a:	4770      	bx	lr
1000e23c:	200006f8 	.word	0x200006f8
1000e240:	200006f8 	.word	0x200006f8
1000e244:	00000000 	.word	0x00000000

1000e248 <__do_global_dtors_aux>:
1000e248:	b510      	push	{r4, lr}
1000e24a:	4c06      	ldr	r4, [pc, #24]	@ (1000e264 <__do_global_dtors_aux+0x1c>)
1000e24c:	7823      	ldrb	r3, [r4, #0]
1000e24e:	b943      	cbnz	r3, 1000e262 <__do_global_dtors_aux+0x1a>
1000e250:	f7ff ffda 	bl	1000e208 <deregister_tm_clones>
1000e254:	4b04      	ldr	r3, [pc, #16]	@ (1000e268 <__do_global_dtors_aux+0x20>)
1000e256:	b113      	cbz	r3, 1000e25e <__do_global_dtors_aux+0x16>
1000e258:	4804      	ldr	r0, [pc, #16]	@ (1000e26c <__do_global_dtors_aux+0x24>)
1000e25a:	f3af 8000 	nop.w
1000e25e:	2301      	movs	r3, #1
1000e260:	7023      	strb	r3, [r4, #0]
1000e262:	bd10      	pop	{r4, pc}
1000e264:	20000800 	.word	0x20000800
1000e268:	00000000 	.word	0x00000000
1000e26c:	1001c950 	.word	0x1001c950

1000e270 <frame_dummy>:
1000e270:	b508      	push	{r3, lr}
1000e272:	4b05      	ldr	r3, [pc, #20]	@ (1000e288 <frame_dummy+0x18>)
1000e274:	b11b      	cbz	r3, 1000e27e <frame_dummy+0xe>
1000e276:	4905      	ldr	r1, [pc, #20]	@ (1000e28c <frame_dummy+0x1c>)
1000e278:	4805      	ldr	r0, [pc, #20]	@ (1000e290 <frame_dummy+0x20>)
1000e27a:	f3af 8000 	nop.w
1000e27e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
1000e282:	f7ff bfcf 	b.w	1000e224 <register_tm_clones>
1000e286:	bf00      	nop
1000e288:	00000000 	.word	0x00000000
1000e28c:	20000804 	.word	0x20000804
1000e290:	1001c950 	.word	0x1001c950

1000e294 <board_link_init>:
 * @return int: negative if error, zero if successful
 *
 * Initialized the underlying i2c_simple interface
*/
int board_link_init(i2c_addr_t addr) {
    return i2c_simple_peripheral_init(addr);
1000e294:	f000 ba30 	b.w	1000e6f8 <i2c_simple_peripheral_init>

1000e298 <component_id_to_i2c_addr>:
 * 
 * @return i2c_addr_t, i2c address
*/
i2c_addr_t component_id_to_i2c_addr(uint32_t component_id) {
    return (uint8_t) component_id & COMPONENT_ADDR_MASK;
}
1000e298:	b2c0      	uxtb	r0, r0
1000e29a:	4770      	bx	lr

1000e29c <send_packet_and_ack>:
 * @param message: uint8_t*, message to be sent
 * 
 * This function utilizes the simple_i2c_peripheral library to
 * send a packet to the AP and wait for the message to be received
*/
void send_packet_and_ack(uint8_t len, uint8_t* packet) {
1000e29c:	b510      	push	{r4, lr}
    I2C_REGS[TRANSMIT_LEN][0] = len;
1000e29e:	4c09      	ldr	r4, [pc, #36]	@ (1000e2c4 <send_packet_and_ack+0x28>)
1000e2a0:	6963      	ldr	r3, [r4, #20]
1000e2a2:	7018      	strb	r0, [r3, #0]
void send_packet_and_ack(uint8_t len, uint8_t* packet) {
1000e2a4:	4602      	mov	r2, r0
    memcpy((void*)I2C_REGS[TRANSMIT], (void*)packet, len);
1000e2a6:	68e0      	ldr	r0, [r4, #12]
1000e2a8:	f007 f9ca 	bl	10015640 <memcpy>
    I2C_REGS[TRANSMIT_DONE][0] = false;
1000e2ac:	6923      	ldr	r3, [r4, #16]
1000e2ae:	2200      	movs	r2, #0
1000e2b0:	701a      	strb	r2, [r3, #0]

    // Wait for ack from AP
    while(!I2C_REGS[TRANSMIT_DONE][0]);
1000e2b2:	6922      	ldr	r2, [r4, #16]
1000e2b4:	7813      	ldrb	r3, [r2, #0]
1000e2b6:	2b00      	cmp	r3, #0
1000e2b8:	d0fc      	beq.n	1000e2b4 <send_packet_and_ack+0x18>
    I2C_REGS[RECEIVE_DONE][0] = false;
1000e2ba:	6863      	ldr	r3, [r4, #4]
1000e2bc:	2200      	movs	r2, #0
1000e2be:	701a      	strb	r2, [r3, #0]
}
1000e2c0:	bd10      	pop	{r4, pc}
1000e2c2:	bf00      	nop
1000e2c4:	20000018 	.word	0x20000018

1000e2c8 <wait_and_receive_packet>:
 * @param packet: uint8_t*, message received
 * 
 * This function waits for a new message to be available from the AP,
 * once the message is available it is returned in the buffer pointer to by packet 
*/
uint8_t wait_and_receive_packet(uint8_t* packet) {
1000e2c8:	b510      	push	{r4, lr}
    while(!I2C_REGS[RECEIVE_DONE][0]);
1000e2ca:	4907      	ldr	r1, [pc, #28]	@ (1000e2e8 <wait_and_receive_packet+0x20>)
1000e2cc:	684a      	ldr	r2, [r1, #4]
1000e2ce:	7813      	ldrb	r3, [r2, #0]
1000e2d0:	2b00      	cmp	r3, #0
1000e2d2:	d0fc      	beq.n	1000e2ce <wait_and_receive_packet+0x6>

    uint8_t len = I2C_REGS[RECEIVE_LEN][0];
1000e2d4:	688b      	ldr	r3, [r1, #8]
    memcpy(packet, (void*)I2C_REGS[RECEIVE], len);
1000e2d6:	6809      	ldr	r1, [r1, #0]
    uint8_t len = I2C_REGS[RECEIVE_LEN][0];
1000e2d8:	781c      	ldrb	r4, [r3, #0]
1000e2da:	b2e4      	uxtb	r4, r4
    memcpy(packet, (void*)I2C_REGS[RECEIVE], len);
1000e2dc:	4622      	mov	r2, r4
1000e2de:	f007 f9af 	bl	10015640 <memcpy>

    return len;
}
1000e2e2:	4620      	mov	r0, r4
1000e2e4:	bd10      	pop	{r4, pc}
1000e2e6:	bf00      	nop
1000e2e8:	20000018 	.word	0x20000018

1000e2ec <boot>:

/******************************* FUNCTION DEFINITIONS *********************************/

// Example boot sequence
// Your design does not need to change this
void boot() {
1000e2ec:	b508      	push	{r3, lr}
    #ifdef POST_BOOT
        POST_BOOT
    #else
    // Anything after this macro can be changed by your design
    // but will not be run on provisioned systems
    LED_Off(LED1);
1000e2ee:	2000      	movs	r0, #0
1000e2f0:	f001 fcce 	bl	1000fc90 <LED_Off>
    LED_Off(LED2);
1000e2f4:	2001      	movs	r0, #1
1000e2f6:	f001 fccb 	bl	1000fc90 <LED_Off>
    LED_Off(LED3);
1000e2fa:	2002      	movs	r0, #2
1000e2fc:	f001 fcc8 	bl	1000fc90 <LED_Off>
    // LED loop to show that boot occurred
    while (1) {
        LED_On(LED1);
        MXC_Delay(500000);
1000e300:	4c12      	ldr	r4, [pc, #72]	@ (1000e34c <boot+0x60>)
        LED_On(LED1);
1000e302:	2000      	movs	r0, #0
1000e304:	f001 fca4 	bl	1000fc50 <LED_On>
        MXC_Delay(500000);
1000e308:	4620      	mov	r0, r4
1000e30a:	f001 febf 	bl	1001008c <MXC_Delay>
        LED_On(LED2);
1000e30e:	2001      	movs	r0, #1
1000e310:	f001 fc9e 	bl	1000fc50 <LED_On>
        MXC_Delay(500000);
1000e314:	4620      	mov	r0, r4
1000e316:	f001 feb9 	bl	1001008c <MXC_Delay>
        LED_On(LED3);
1000e31a:	2002      	movs	r0, #2
1000e31c:	f001 fc98 	bl	1000fc50 <LED_On>
        MXC_Delay(500000);
1000e320:	4620      	mov	r0, r4
1000e322:	f001 feb3 	bl	1001008c <MXC_Delay>
        LED_Off(LED1);
1000e326:	2000      	movs	r0, #0
1000e328:	f001 fcb2 	bl	1000fc90 <LED_Off>
        MXC_Delay(500000);
1000e32c:	4620      	mov	r0, r4
1000e32e:	f001 fead 	bl	1001008c <MXC_Delay>
        LED_Off(LED2);
1000e332:	2001      	movs	r0, #1
1000e334:	f001 fcac 	bl	1000fc90 <LED_Off>
        MXC_Delay(500000);
1000e338:	4620      	mov	r0, r4
1000e33a:	f001 fea7 	bl	1001008c <MXC_Delay>
        LED_Off(LED3);
1000e33e:	2002      	movs	r0, #2
1000e340:	f001 fca6 	bl	1000fc90 <LED_Off>
        MXC_Delay(500000);
1000e344:	4620      	mov	r0, r4
1000e346:	f001 fea1 	bl	1001008c <MXC_Delay>
    while (1) {
1000e34a:	e7da      	b.n	1000e302 <boot+0x16>
1000e34c:	0007a120 	.word	0x0007a120

1000e350 <process_boot>:

void process_boot() {
    // The AP requested a boot. Set `component_boot` for the main loop and
    // respond with the boot message
    uint8_t len = strlen(COMPONENT_BOOT_MSG) + 1;
    memcpy((void*)transmit_buffer, COMPONENT_BOOT_MSG, len);
1000e350:	4a06      	ldr	r2, [pc, #24]	@ (1000e36c <process_boot+0x1c>)
1000e352:	e892 0003 	ldmia.w	r2, {r0, r1}
void process_boot() {
1000e356:	b508      	push	{r3, lr}
    memcpy((void*)transmit_buffer, COMPONENT_BOOT_MSG, len);
1000e358:	4b05      	ldr	r3, [pc, #20]	@ (1000e370 <process_boot+0x20>)
1000e35a:	6018      	str	r0, [r3, #0]
1000e35c:	8099      	strh	r1, [r3, #4]
    send_packet_and_ack(len, transmit_buffer);
1000e35e:	2006      	movs	r0, #6
1000e360:	4619      	mov	r1, r3
1000e362:	f7ff ff9b 	bl	1000e29c <send_packet_and_ack>
    // Call the boot function
    boot();
1000e366:	f7ff ffc1 	bl	1000e2ec <boot>
1000e36a:	bf00      	nop
1000e36c:	1001a22c 	.word	0x1001a22c
1000e370:	2000081c 	.word	0x2000081c

1000e374 <process_attest>:
    validate_message* packet = (validate_message*) transmit_buffer;
    packet->component_id = COMPONENT_ID;
    send_packet_and_ack(sizeof(validate_message), transmit_buffer);
}

void process_attest() {
1000e374:	b530      	push	{r4, r5, lr}
    // The AP requested attestation. Respond with the attestation data
    
    // print_debug("Encrypted data: ");
    // print_hex_debug(ciphertext, BLOCK_SIZE);
    uint8_t ciphertext[16];
    uint8_t len = sprintf((char*)transmit_buffer, "LOC>%s\nDATE>%s\nCUST>%s\n",
1000e376:	4d0e      	ldr	r5, [pc, #56]	@ (1000e3b0 <process_attest+0x3c>)
1000e378:	480e      	ldr	r0, [pc, #56]	@ (1000e3b4 <process_attest+0x40>)
1000e37a:	4b0f      	ldr	r3, [pc, #60]	@ (1000e3b8 <process_attest+0x44>)
1000e37c:	4a0f      	ldr	r2, [pc, #60]	@ (1000e3bc <process_attest+0x48>)
1000e37e:	4910      	ldr	r1, [pc, #64]	@ (1000e3c0 <process_attest+0x4c>)
void process_attest() {
1000e380:	b08b      	sub	sp, #44	@ 0x2c
                ATTESTATION_LOC, ATTESTATION_DATE, ATTESTATION_CUSTOMER) + 1;
    uint8_t key[16];
    // Zero out the key
    bzero(key, 16);
    // Encrypt example data and print out
    encrypt_sym((uint8_t*)len, 16, key, ciphertext); 
1000e382:	ac02      	add	r4, sp, #8
    uint8_t len = sprintf((char*)transmit_buffer, "LOC>%s\nDATE>%s\nCUST>%s\n",
1000e384:	9000      	str	r0, [sp, #0]
1000e386:	4628      	mov	r0, r5
1000e388:	f006 fc2a 	bl	10014be0 <sprintf>
    bzero(key, 16);
1000e38c:	2200      	movs	r2, #0
1000e38e:	e9cd 2206 	strd	r2, r2, [sp, #24]
1000e392:	e9cd 2208 	strd	r2, r2, [sp, #32]
    encrypt_sym((uint8_t*)len, 16, key, ciphertext); 
1000e396:	4623      	mov	r3, r4
1000e398:	aa06      	add	r2, sp, #24
1000e39a:	2110      	movs	r1, #16
1000e39c:	2027      	movs	r0, #39	@ 0x27
1000e39e:	f000 f851 	bl	1000e444 <encrypt_sym>

    send_packet_and_ack(ciphertext, transmit_buffer);
1000e3a2:	4629      	mov	r1, r5
1000e3a4:	f004 00f8 	and.w	r0, r4, #248	@ 0xf8
1000e3a8:	f7ff ff78 	bl	1000e29c <send_packet_and_ack>
}
1000e3ac:	b00b      	add	sp, #44	@ 0x2c
1000e3ae:	bd30      	pop	{r4, r5, pc}
1000e3b0:	2000081c 	.word	0x2000081c
1000e3b4:	1001a260 	.word	0x1001a260
1000e3b8:	1001a234 	.word	0x1001a234
1000e3bc:	1001a240 	.word	0x1001a240
1000e3c0:	1001a248 	.word	0x1001a248

1000e3c4 <component_process_cmd>:
void component_process_cmd() {
1000e3c4:	b508      	push	{r3, lr}
    switch (command->opcode) {
1000e3c6:	4b0e      	ldr	r3, [pc, #56]	@ (1000e400 <component_process_cmd+0x3c>)
1000e3c8:	7819      	ldrb	r1, [r3, #0]
1000e3ca:	1e4b      	subs	r3, r1, #1
1000e3cc:	2b03      	cmp	r3, #3
1000e3ce:	d811      	bhi.n	1000e3f4 <component_process_cmd+0x30>
1000e3d0:	e8df f003 	tbb	[pc, r3]
1000e3d4:	0a0e0202 	.word	0x0a0e0202
    packet->component_id = COMPONENT_ID;
1000e3d8:	490a      	ldr	r1, [pc, #40]	@ (1000e404 <component_process_cmd+0x40>)
1000e3da:	4b0b      	ldr	r3, [pc, #44]	@ (1000e408 <component_process_cmd+0x44>)
1000e3dc:	600b      	str	r3, [r1, #0]
    send_packet_and_ack(sizeof(validate_message), transmit_buffer);
1000e3de:	2004      	movs	r0, #4
}
1000e3e0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    send_packet_and_ack(sizeof(validate_message), transmit_buffer);
1000e3e4:	f7ff bf5a 	b.w	1000e29c <send_packet_and_ack>
}
1000e3e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        process_attest();
1000e3ec:	f7ff bfc2 	b.w	1000e374 <process_attest>
        process_boot();
1000e3f0:	f7ff ffae 	bl	1000e350 <process_boot>
}
1000e3f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        printf("Error: Unrecognized command received %d\n", command->opcode);
1000e3f8:	4804      	ldr	r0, [pc, #16]	@ (1000e40c <component_process_cmd+0x48>)
1000e3fa:	f003 b9ef 	b.w	100117dc <printf>
1000e3fe:	bf00      	nop
1000e400:	2000091c 	.word	0x2000091c
1000e404:	2000081c 	.word	0x2000081c
1000e408:	11111112 	.word	0x11111112
1000e40c:	1001a268 	.word	0x1001a268

1000e410 <main>:

/*********************************** MAIN *************************************/

int main(void) {
1000e410:	b510      	push	{r4, lr}
    printf("Component Started\n");
1000e412:	4809      	ldr	r0, [pc, #36]	@ (1000e438 <main+0x28>)
1000e414:	f006 f914 	bl	10014640 <puts>
  \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
1000e418:	b662      	cpsie	i
    
    // Enable Global Interrupts
    __enable_irq();
    
    // Initialize Component
    i2c_addr_t addr = component_id_to_i2c_addr(COMPONENT_ID);
1000e41a:	4808      	ldr	r0, [pc, #32]	@ (1000e43c <main+0x2c>)
    board_link_init(addr);
    
    LED_On(LED2);

    while (1) {
        wait_and_receive_packet(receive_buffer);
1000e41c:	4c08      	ldr	r4, [pc, #32]	@ (1000e440 <main+0x30>)
    i2c_addr_t addr = component_id_to_i2c_addr(COMPONENT_ID);
1000e41e:	f7ff ff3b 	bl	1000e298 <component_id_to_i2c_addr>
    board_link_init(addr);
1000e422:	f7ff ff37 	bl	1000e294 <board_link_init>
    LED_On(LED2);
1000e426:	2001      	movs	r0, #1
1000e428:	f001 fc12 	bl	1000fc50 <LED_On>
        wait_and_receive_packet(receive_buffer);
1000e42c:	4620      	mov	r0, r4
1000e42e:	f7ff ff4b 	bl	1000e2c8 <wait_and_receive_packet>

        component_process_cmd();
1000e432:	f7ff ffc7 	bl	1000e3c4 <component_process_cmd>
    while (1) {
1000e436:	e7f9      	b.n	1000e42c <main+0x1c>
1000e438:	1001a294 	.word	0x1001a294
1000e43c:	11111112 	.word	0x11111112
1000e440:	2000091c 	.word	0x2000091c

1000e444 <encrypt_sym>:
 * @param ciphertext A pointer to a buffer of length len where the resulting
 *          ciphertext will be written to
 *
 * @return 0 on success, -1 on bad length, other non-zero for other error
 */
int encrypt_sym(uint8_t *plaintext, size_t len, uint8_t *key, uint8_t *ciphertext) {
1000e444:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1000e448:	460c      	mov	r4, r1
1000e44a:	b0dc      	sub	sp, #368	@ 0x170
    Aes ctx; // Context for encryption
    int result; // Library result

    // Ensure valid length
    if (len <= 0 || len % BLOCK_SIZE)
1000e44c:	b309      	cbz	r1, 1000e492 <encrypt_sym+0x4e>
1000e44e:	461e      	mov	r6, r3
1000e450:	f011 030f 	ands.w	r3, r1, #15
1000e454:	d11d      	bne.n	1000e492 <encrypt_sym+0x4e>
        return -1;

    // Set the key for encryption
    result = wc_AesSetKey(&ctx, key, 16, NULL, AES_ENCRYPTION);
1000e456:	4611      	mov	r1, r2
1000e458:	4605      	mov	r5, r0
1000e45a:	9300      	str	r3, [sp, #0]
1000e45c:	2210      	movs	r2, #16
1000e45e:	a803      	add	r0, sp, #12
1000e460:	f001 fafe 	bl	1000fa60 <wc_AesSetKey>
    if (result != 0)
1000e464:	4680      	mov	r8, r0
1000e466:	b980      	cbnz	r0, 1000e48a <encrypt_sym+0x46>
        return result; // Report error


    // Encrypt each block
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000e468:	2c01      	cmp	r4, #1
1000e46a:	f104 37ff 	add.w	r7, r4, #4294967295	@ 0xffffffff
1000e46e:	d00c      	beq.n	1000e48a <encrypt_sym+0x46>
1000e470:	4604      	mov	r4, r0
1000e472:	e001      	b.n	1000e478 <encrypt_sym+0x34>
1000e474:	42a7      	cmp	r7, r4
1000e476:	d908      	bls.n	1000e48a <encrypt_sym+0x46>
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000e478:	192a      	adds	r2, r5, r4
1000e47a:	1931      	adds	r1, r6, r4
1000e47c:	a803      	add	r0, sp, #12
    for (int i = 0; i < len - 1; i += BLOCK_SIZE) {
1000e47e:	3410      	adds	r4, #16
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000e480:	f001 fafe 	bl	1000fa80 <wc_AesEncryptDirect>
        if (result != 0)
1000e484:	2800      	cmp	r0, #0
1000e486:	d0f5      	beq.n	1000e474 <encrypt_sym+0x30>
        result = wc_AesEncryptDirect(&ctx, ciphertext + i, plaintext + i);
1000e488:	4680      	mov	r8, r0
            return result; // Report error
    }
    return 0;
}
1000e48a:	4640      	mov	r0, r8
1000e48c:	b05c      	add	sp, #368	@ 0x170
1000e48e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return -1;
1000e492:	f04f 38ff 	mov.w	r8, #4294967295	@ 0xffffffff
1000e496:	e7f8      	b.n	1000e48a <encrypt_sym+0x46>

1000e498 <i2c_simple_isr>:
    static int READ_INDEX = 0;
    static int WRITE_INDEX = 0;
    static ECTF_I2C_REGS ACTIVE_REG = RECEIVE;

    // Read interrupt flags
    uint32_t Flags = I2C_INTERFACE->intfl0;
1000e498:	4890      	ldr	r0, [pc, #576]	@ (1000e6dc <i2c_simple_isr+0x244>)
void i2c_simple_isr (void) {
1000e49a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t Flags = I2C_INTERFACE->intfl0;
1000e49c:	6884      	ldr	r4, [r0, #8]
    
    // Transaction over interrupt
    if (Flags & MXC_F_I2C_INTFL0_STOP) {
1000e49e:	0663      	lsls	r3, r4, #25
1000e4a0:	d549      	bpl.n	1000e536 <i2c_simple_isr+0x9e>
        
        // Ready any remaining data
        if (WRITE_START == true) {
1000e4a2:	4e8f      	ldr	r6, [pc, #572]	@ (1000e6e0 <i2c_simple_isr+0x248>)
1000e4a4:	7833      	ldrb	r3, [r6, #0]
1000e4a6:	2b00      	cmp	r3, #0
1000e4a8:	f040 80cb 	bne.w	1000e642 <i2c_simple_isr+0x1aa>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
            WRITE_START = false;
        }
        if (ACTIVE_REG <= MAX_REG) {
1000e4ac:	4d8d      	ldr	r5, [pc, #564]	@ (1000e6e4 <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e4ae:	488b      	ldr	r0, [pc, #556]	@ (1000e6dc <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e4b0:	782b      	ldrb	r3, [r5, #0]
1000e4b2:	2b05      	cmp	r3, #5
1000e4b4:	d81b      	bhi.n	1000e4ee <i2c_simple_isr+0x56>
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e4b6:	f002 f969 	bl	1001078c <MXC_I2C_GetRXFIFOAvailable>
            if (available < (I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX)) {
1000e4ba:	7829      	ldrb	r1, [r5, #0]
1000e4bc:	4b8a      	ldr	r3, [pc, #552]	@ (1000e6e8 <i2c_simple_isr+0x250>)
1000e4be:	4d8b      	ldr	r5, [pc, #556]	@ (1000e6ec <i2c_simple_isr+0x254>)
1000e4c0:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
1000e4c4:	682b      	ldr	r3, [r5, #0]
1000e4c6:	1ad2      	subs	r2, r2, r3
1000e4c8:	4282      	cmp	r2, r0
1000e4ca:	f340 80da 	ble.w	1000e682 <i2c_simple_isr+0x1ea>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e4ce:	4a88      	ldr	r2, [pc, #544]	@ (1000e6f0 <i2c_simple_isr+0x258>)
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e4d0:	4882      	ldr	r0, [pc, #520]	@ (1000e6dc <i2c_simple_isr+0x244>)
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e4d2:	f852 7021 	ldr.w	r7, [r2, r1, lsl #2]
1000e4d6:	441f      	add	r7, r3
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e4d8:	f002 f958 	bl	1001078c <MXC_I2C_GetRXFIFOAvailable>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e4dc:	4639      	mov	r1, r7
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e4de:	4602      	mov	r2, r0
            }
            else {
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e4e0:	487e      	ldr	r0, [pc, #504]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e4e2:	f002 f951 	bl	10010788 <MXC_I2C_ReadRXFIFO>
1000e4e6:	682b      	ldr	r3, [r5, #0]
1000e4e8:	4403      	add	r3, r0
1000e4ea:	602b      	str	r3, [r5, #0]
1000e4ec:	e002      	b.n	1000e4f4 <i2c_simple_isr+0x5c>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
                    I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX);
            }
        } else {
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e4ee:	f002 f953 	bl	10010798 <MXC_I2C_ClearRXFIFO>
1000e4f2:	4d7e      	ldr	r5, [pc, #504]	@ (1000e6ec <i2c_simple_isr+0x254>)
        }

        // Disable bulk send/receive interrupts
        MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000e4f4:	4879      	ldr	r0, [pc, #484]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e4f6:	2200      	movs	r2, #0
1000e4f8:	2110      	movs	r1, #16
1000e4fa:	f002 f955 	bl	100107a8 <MXC_I2C_DisableInt>
        MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000e4fe:	4877      	ldr	r0, [pc, #476]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e500:	2200      	movs	r2, #0
1000e502:	2120      	movs	r1, #32
1000e504:	f002 f950 	bl	100107a8 <MXC_I2C_DisableInt>

        // Clear FIFOs if full
        if (MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE) != 0) {
1000e508:	4874      	ldr	r0, [pc, #464]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e50a:	f002 f93f 	bl	1001078c <MXC_I2C_GetRXFIFOAvailable>
1000e50e:	2800      	cmp	r0, #0
1000e510:	f040 80df 	bne.w	1000e6d2 <i2c_simple_isr+0x23a>
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
        }
        if (MXC_I2C_GetTXFIFOAvailable(I2C_INTERFACE) != 8) {
1000e514:	4871      	ldr	r0, [pc, #452]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e516:	f002 f93d 	bl	10010794 <MXC_I2C_GetTXFIFOAvailable>
1000e51a:	2808      	cmp	r0, #8
1000e51c:	d002      	beq.n	1000e524 <i2c_simple_isr+0x8c>
            MXC_I2C_ClearTXFIFO(I2C_INTERFACE);
1000e51e:	486f      	ldr	r0, [pc, #444]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e520:	f002 f93c 	bl	1001079c <MXC_I2C_ClearTXFIFO>
        }

        // Reset state
        READ_INDEX = 0;
1000e524:	4b73      	ldr	r3, [pc, #460]	@ (1000e6f4 <i2c_simple_isr+0x25c>)
        WRITE_INDEX = 0;
        WRITE_START = false;

        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e526:	486d      	ldr	r0, [pc, #436]	@ (1000e6dc <i2c_simple_isr+0x244>)
        READ_INDEX = 0;
1000e528:	2200      	movs	r2, #0
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e52a:	2140      	movs	r1, #64	@ 0x40
        WRITE_INDEX = 0;
1000e52c:	602a      	str	r2, [r5, #0]
        READ_INDEX = 0;
1000e52e:	601a      	str	r2, [r3, #0]
        WRITE_START = false;
1000e530:	7032      	strb	r2, [r6, #0]
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e532:	f002 f935 	bl	100107a0 <MXC_I2C_ClearFlags>
    }

    // TX Fifo Threshold Met on Read
    if (Flags & MXC_F_I2C_INTEN0_TX_THD && (I2C_INTERFACE->inten0 & MXC_F_I2C_INTEN0_TX_THD)) {
1000e536:	06a7      	lsls	r7, r4, #26
1000e538:	d503      	bpl.n	1000e542 <i2c_simple_isr+0xaa>
1000e53a:	4868      	ldr	r0, [pc, #416]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e53c:	68c3      	ldr	r3, [r0, #12]
1000e53e:	069e      	lsls	r6, r3, #26
1000e540:	d433      	bmi.n	1000e5aa <i2c_simple_isr+0x112>
        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_THD, 0);
    }

    // Read from Peripheral from Controller Match
    if (Flags & MXC_F_I2C_INTFL0_WR_ADDR_MATCH) {
1000e542:	0220      	lsls	r0, r4, #8
1000e544:	d43f      	bmi.n	1000e5c6 <i2c_simple_isr+0x12e>
            }
        }
    }

    // Write to Peripheral from Controller Match
    if (Flags & MXC_F_I2C_INTFL0_RD_ADDR_MATCH) {
1000e546:	0262      	lsls	r2, r4, #9
1000e548:	d46c      	bmi.n	1000e624 <i2c_simple_isr+0x18c>
        // Clear flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
    }

    // RX Fifo Threshold Met on Write
    if (Flags & MXC_F_I2C_INTEN0_RX_THD) {
1000e54a:	06e3      	lsls	r3, r4, #27
1000e54c:	d511      	bpl.n	1000e572 <i2c_simple_isr+0xda>
        // We always write a register before writing data so select register
        if (WRITE_START == true) {
1000e54e:	4c64      	ldr	r4, [pc, #400]	@ (1000e6e0 <i2c_simple_isr+0x248>)
1000e550:	7823      	ldrb	r3, [r4, #0]
1000e552:	2b00      	cmp	r3, #0
1000e554:	d17c      	bne.n	1000e650 <i2c_simple_isr+0x1b8>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
            WRITE_START = false;
        }
        // Read remaining data
        if (ACTIVE_REG <= MAX_REG) {
1000e556:	4c63      	ldr	r4, [pc, #396]	@ (1000e6e4 <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e558:	4860      	ldr	r0, [pc, #384]	@ (1000e6dc <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e55a:	7823      	ldrb	r3, [r4, #0]
1000e55c:	2b05      	cmp	r3, #5
1000e55e:	d909      	bls.n	1000e574 <i2c_simple_isr+0xdc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
                    I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX);
            }
        // Clear out FIFO if invalid register specified
        } else {
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e560:	f002 f91a 	bl	10010798 <MXC_I2C_ClearRXFIFO>
        }

        // Clear ISR flag
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RX_THD, 0);
    }
}
1000e564:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RX_THD, 0);
1000e568:	485c      	ldr	r0, [pc, #368]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e56a:	2200      	movs	r2, #0
1000e56c:	2110      	movs	r1, #16
1000e56e:	f002 b917 	b.w	100107a0 <MXC_I2C_ClearFlags>
}
1000e572:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e574:	f002 f90a 	bl	1001078c <MXC_I2C_GetRXFIFOAvailable>
            if (available < (I2C_REGS_LEN[ACTIVE_REG]-WRITE_INDEX)) {
1000e578:	7821      	ldrb	r1, [r4, #0]
1000e57a:	4a5b      	ldr	r2, [pc, #364]	@ (1000e6e8 <i2c_simple_isr+0x250>)
1000e57c:	4c5b      	ldr	r4, [pc, #364]	@ (1000e6ec <i2c_simple_isr+0x254>)
1000e57e:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
1000e582:	6823      	ldr	r3, [r4, #0]
1000e584:	1ad2      	subs	r2, r2, r3
1000e586:	4282      	cmp	r2, r0
1000e588:	dd70      	ble.n	1000e66c <i2c_simple_isr+0x1d4>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e58a:	4a59      	ldr	r2, [pc, #356]	@ (1000e6f0 <i2c_simple_isr+0x258>)
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e58c:	4853      	ldr	r0, [pc, #332]	@ (1000e6dc <i2c_simple_isr+0x244>)
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e58e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
1000e592:	441d      	add	r5, r3
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e594:	f002 f8fa 	bl	1001078c <MXC_I2C_GetRXFIFOAvailable>
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e598:	4629      	mov	r1, r5
                    MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE));
1000e59a:	4602      	mov	r2, r0
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e59c:	484f      	ldr	r0, [pc, #316]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e59e:	f002 f8f3 	bl	10010788 <MXC_I2C_ReadRXFIFO>
1000e5a2:	6823      	ldr	r3, [r4, #0]
1000e5a4:	4403      	add	r3, r0
1000e5a6:	6023      	str	r3, [r4, #0]
1000e5a8:	e7dc      	b.n	1000e564 <i2c_simple_isr+0xcc>
        if (Flags & MXC_F_I2C_INTFL0_TX_LOCKOUT) {
1000e5aa:	0425      	lsls	r5, r4, #16
1000e5ac:	f100 808b 	bmi.w	1000e6c6 <i2c_simple_isr+0x22e>
        if (ACTIVE_REG <= MAX_REG) {
1000e5b0:	4d4c      	ldr	r5, [pc, #304]	@ (1000e6e4 <i2c_simple_isr+0x24c>)
1000e5b2:	782b      	ldrb	r3, [r5, #0]
1000e5b4:	2b05      	cmp	r3, #5
1000e5b6:	d969      	bls.n	1000e68c <i2c_simple_isr+0x1f4>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_THD, 0);
1000e5b8:	4848      	ldr	r0, [pc, #288]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e5ba:	2200      	movs	r2, #0
1000e5bc:	2120      	movs	r1, #32
1000e5be:	f002 f8ef 	bl	100107a0 <MXC_I2C_ClearFlags>
    if (Flags & MXC_F_I2C_INTFL0_WR_ADDR_MATCH) {
1000e5c2:	0220      	lsls	r0, r4, #8
1000e5c4:	d5bf      	bpl.n	1000e546 <i2c_simple_isr+0xae>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_WR_ADDR_MATCH, 0);
1000e5c6:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
1000e5ca:	4844      	ldr	r0, [pc, #272]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e5cc:	2200      	movs	r2, #0
1000e5ce:	f002 f8e7 	bl	100107a0 <MXC_I2C_ClearFlags>
        if (Flags & MXC_F_I2C_INTFL0_TX_LOCKOUT) {
1000e5d2:	0421      	lsls	r1, r4, #16
1000e5d4:	d5b7      	bpl.n	1000e546 <i2c_simple_isr+0xae>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e5d6:	4d43      	ldr	r5, [pc, #268]	@ (1000e6e4 <i2c_simple_isr+0x24c>)
            MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_LOCKOUT, 0);
1000e5d8:	4840      	ldr	r0, [pc, #256]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e5da:	2200      	movs	r2, #0
1000e5dc:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
1000e5e0:	f002 f8de 	bl	100107a0 <MXC_I2C_ClearFlags>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e5e4:	483d      	ldr	r0, [pc, #244]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e5e6:	2201      	movs	r2, #1
1000e5e8:	4629      	mov	r1, r5
1000e5ea:	f002 f8cd 	bl	10010788 <MXC_I2C_ReadRXFIFO>
            if (ACTIVE_REG <= MAX_REG) {
1000e5ee:	782b      	ldrb	r3, [r5, #0]
1000e5f0:	2b05      	cmp	r3, #5
1000e5f2:	d8a8      	bhi.n	1000e546 <i2c_simple_isr+0xae>
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e5f4:	4e3c      	ldr	r6, [pc, #240]	@ (1000e6e8 <i2c_simple_isr+0x250>)
1000e5f6:	4a3e      	ldr	r2, [pc, #248]	@ (1000e6f0 <i2c_simple_isr+0x258>)
1000e5f8:	4838      	ldr	r0, [pc, #224]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e5fa:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
1000e5fe:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
1000e602:	f002 f8c5 	bl	10010790 <MXC_I2C_WriteTXFIFO>
1000e606:	4b3b      	ldr	r3, [pc, #236]	@ (1000e6f4 <i2c_simple_isr+0x25c>)
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e608:	782a      	ldrb	r2, [r5, #0]
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e60a:	6819      	ldr	r1, [r3, #0]
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e60c:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e610:	4408      	add	r0, r1
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e612:	4290      	cmp	r0, r2
                READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE, (volatile unsigned char*)I2C_REGS[ACTIVE_REG], I2C_REGS_LEN[ACTIVE_REG]);
1000e614:	6018      	str	r0, [r3, #0]
                if (READ_INDEX < I2C_REGS_LEN[ACTIVE_REG]) {
1000e616:	da96      	bge.n	1000e546 <i2c_simple_isr+0xae>
                    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000e618:	4830      	ldr	r0, [pc, #192]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e61a:	2200      	movs	r2, #0
1000e61c:	2120      	movs	r1, #32
1000e61e:	f002 f8c1 	bl	100107a4 <MXC_I2C_EnableInt>
1000e622:	e790      	b.n	1000e546 <i2c_simple_isr+0xae>
        WRITE_START = true;
1000e624:	4b2e      	ldr	r3, [pc, #184]	@ (1000e6e0 <i2c_simple_isr+0x248>)
        MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000e626:	482d      	ldr	r0, [pc, #180]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e628:	2200      	movs	r2, #0
1000e62a:	2110      	movs	r1, #16
        WRITE_START = true;
1000e62c:	2501      	movs	r5, #1
1000e62e:	701d      	strb	r5, [r3, #0]
        MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_RX_THD, 0);
1000e630:	f002 f8b8 	bl	100107a4 <MXC_I2C_EnableInt>
        MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
1000e634:	4829      	ldr	r0, [pc, #164]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e636:	2200      	movs	r2, #0
1000e638:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
1000e63c:	f002 f8b0 	bl	100107a0 <MXC_I2C_ClearFlags>
1000e640:	e783      	b.n	1000e54a <i2c_simple_isr+0xb2>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e642:	4928      	ldr	r1, [pc, #160]	@ (1000e6e4 <i2c_simple_isr+0x24c>)
1000e644:	2201      	movs	r2, #1
1000e646:	f002 f89f 	bl	10010788 <MXC_I2C_ReadRXFIFO>
            WRITE_START = false;
1000e64a:	2300      	movs	r3, #0
1000e64c:	7033      	strb	r3, [r6, #0]
1000e64e:	e72d      	b.n	1000e4ac <i2c_simple_isr+0x14>
            MXC_I2C_ReadRXFIFO(I2C_INTERFACE, (volatile unsigned char*) &ACTIVE_REG, 1);
1000e650:	4924      	ldr	r1, [pc, #144]	@ (1000e6e4 <i2c_simple_isr+0x24c>)
1000e652:	4822      	ldr	r0, [pc, #136]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e654:	2201      	movs	r2, #1
1000e656:	f002 f897 	bl	10010788 <MXC_I2C_ReadRXFIFO>
            WRITE_START = false;
1000e65a:	2300      	movs	r3, #0
1000e65c:	7023      	strb	r3, [r4, #0]
        if (ACTIVE_REG <= MAX_REG) {
1000e65e:	4c21      	ldr	r4, [pc, #132]	@ (1000e6e4 <i2c_simple_isr+0x24c>)
            int available = MXC_I2C_GetRXFIFOAvailable(I2C_INTERFACE);
1000e660:	481e      	ldr	r0, [pc, #120]	@ (1000e6dc <i2c_simple_isr+0x244>)
        if (ACTIVE_REG <= MAX_REG) {
1000e662:	7823      	ldrb	r3, [r4, #0]
1000e664:	2b05      	cmp	r3, #5
1000e666:	f63f af7b 	bhi.w	1000e560 <i2c_simple_isr+0xc8>
1000e66a:	e783      	b.n	1000e574 <i2c_simple_isr+0xdc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e66c:	4820      	ldr	r0, [pc, #128]	@ (1000e6f0 <i2c_simple_isr+0x258>)
1000e66e:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e672:	481a      	ldr	r0, [pc, #104]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e674:	4419      	add	r1, r3
1000e676:	f002 f887 	bl	10010788 <MXC_I2C_ReadRXFIFO>
1000e67a:	6823      	ldr	r3, [r4, #0]
1000e67c:	4403      	add	r3, r0
1000e67e:	6023      	str	r3, [r4, #0]
1000e680:	e770      	b.n	1000e564 <i2c_simple_isr+0xcc>
                    &I2C_REGS[ACTIVE_REG][WRITE_INDEX],
1000e682:	481b      	ldr	r0, [pc, #108]	@ (1000e6f0 <i2c_simple_isr+0x258>)
1000e684:	f850 1021 	ldr.w	r1, [r0, r1, lsl #2]
                WRITE_INDEX += MXC_I2C_ReadRXFIFO(I2C_INTERFACE,
1000e688:	4419      	add	r1, r3
1000e68a:	e729      	b.n	1000e4e0 <i2c_simple_isr+0x48>
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e68c:	4e19      	ldr	r6, [pc, #100]	@ (1000e6f4 <i2c_simple_isr+0x25c>)
                I2C_REGS_LEN[ACTIVE_REG]-READ_INDEX);
1000e68e:	4f16      	ldr	r7, [pc, #88]	@ (1000e6e8 <i2c_simple_isr+0x250>)
                (volatile unsigned char*)&I2C_REGS[ACTIVE_REG][READ_INDEX],
1000e690:	4917      	ldr	r1, [pc, #92]	@ (1000e6f0 <i2c_simple_isr+0x258>)
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e692:	6832      	ldr	r2, [r6, #0]
                (volatile unsigned char*)&I2C_REGS[ACTIVE_REG][READ_INDEX],
1000e694:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
                I2C_REGS_LEN[ACTIVE_REG]-READ_INDEX);
1000e698:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e69c:	480f      	ldr	r0, [pc, #60]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e69e:	4411      	add	r1, r2
1000e6a0:	1a9a      	subs	r2, r3, r2
1000e6a2:	f002 f875 	bl	10010790 <MXC_I2C_WriteTXFIFO>
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e6a6:	782b      	ldrb	r3, [r5, #0]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e6a8:	6832      	ldr	r2, [r6, #0]
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e6aa:	f857 3023 	ldr.w	r3, [r7, r3, lsl #2]
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e6ae:	4410      	add	r0, r2
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e6b0:	3b01      	subs	r3, #1
1000e6b2:	4298      	cmp	r0, r3
            READ_INDEX += MXC_I2C_WriteTXFIFO(I2C_INTERFACE,
1000e6b4:	6030      	str	r0, [r6, #0]
            if (I2C_REGS_LEN[ACTIVE_REG]-1 == READ_INDEX) {
1000e6b6:	f47f af7f 	bne.w	1000e5b8 <i2c_simple_isr+0x120>
                MXC_I2C_DisableInt(I2C_INTERFACE, MXC_F_I2C_INTEN0_TX_THD, 0);
1000e6ba:	4808      	ldr	r0, [pc, #32]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e6bc:	2200      	movs	r2, #0
1000e6be:	2120      	movs	r1, #32
1000e6c0:	f002 f872 	bl	100107a8 <MXC_I2C_DisableInt>
1000e6c4:	e778      	b.n	1000e5b8 <i2c_simple_isr+0x120>
            MXC_I2C_ClearFlags(I2C_INTERFACE, MXC_F_I2C_INTFL0_TX_LOCKOUT, 0);
1000e6c6:	2200      	movs	r2, #0
1000e6c8:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
1000e6cc:	f002 f868 	bl	100107a0 <MXC_I2C_ClearFlags>
1000e6d0:	e76e      	b.n	1000e5b0 <i2c_simple_isr+0x118>
            MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e6d2:	4802      	ldr	r0, [pc, #8]	@ (1000e6dc <i2c_simple_isr+0x244>)
1000e6d4:	f002 f860 	bl	10010798 <MXC_I2C_ClearRXFIFO>
1000e6d8:	e71c      	b.n	1000e514 <i2c_simple_isr+0x7c>
1000e6da:	bf00      	nop
1000e6dc:	4001e000 	.word	0x4001e000
1000e6e0:	20000a25 	.word	0x20000a25
1000e6e4:	20000a24 	.word	0x20000a24
1000e6e8:	20000000 	.word	0x20000000
1000e6ec:	20000a20 	.word	0x20000a20
1000e6f0:	20000018 	.word	0x20000018
1000e6f4:	20000a1c 	.word	0x20000a1c

1000e6f8 <i2c_simple_peripheral_init>:
int i2c_simple_peripheral_init(uint8_t addr) {
1000e6f8:	b510      	push	{r4, lr}
1000e6fa:	4602      	mov	r2, r0
    error = MXC_I2C_Init(I2C_INTERFACE, false, addr);
1000e6fc:	2100      	movs	r1, #0
1000e6fe:	481b      	ldr	r0, [pc, #108]	@ (1000e76c <i2c_simple_peripheral_init+0x74>)
1000e700:	f001 fff4 	bl	100106ec <MXC_I2C_Init>
    if (error != E_NO_ERROR) {
1000e704:	4604      	mov	r4, r0
1000e706:	bb60      	cbnz	r0, 1000e762 <i2c_simple_peripheral_init+0x6a>
    MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_FREQ);
1000e708:	4919      	ldr	r1, [pc, #100]	@ (1000e770 <i2c_simple_peripheral_init+0x78>)
1000e70a:	4818      	ldr	r0, [pc, #96]	@ (1000e76c <i2c_simple_peripheral_init+0x74>)
1000e70c:	f002 f838 	bl	10010780 <MXC_I2C_SetFrequency>
    MXC_I2C_ClearRXFIFO(I2C_INTERFACE);
1000e710:	4816      	ldr	r0, [pc, #88]	@ (1000e76c <i2c_simple_peripheral_init+0x74>)
1000e712:	f002 f841 	bl	10010798 <MXC_I2C_ClearRXFIFO>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_RD_ADDR_MATCH, 0);
1000e716:	4622      	mov	r2, r4
1000e718:	4814      	ldr	r0, [pc, #80]	@ (1000e76c <i2c_simple_peripheral_init+0x74>)
1000e71a:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
1000e71e:	f002 f841 	bl	100107a4 <MXC_I2C_EnableInt>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_WR_ADDR_MATCH, 0);
1000e722:	4622      	mov	r2, r4
1000e724:	4811      	ldr	r0, [pc, #68]	@ (1000e76c <i2c_simple_peripheral_init+0x74>)
1000e726:	f44f 0100 	mov.w	r1, #8388608	@ 0x800000
1000e72a:	f002 f83b 	bl	100107a4 <MXC_I2C_EnableInt>
    MXC_I2C_EnableInt(I2C_INTERFACE, MXC_F_I2C_INTFL0_STOP, 0);
1000e72e:	4622      	mov	r2, r4
1000e730:	480e      	ldr	r0, [pc, #56]	@ (1000e76c <i2c_simple_peripheral_init+0x74>)
1000e732:	2140      	movs	r1, #64	@ 0x40
1000e734:	f002 f836 	bl	100107a4 <MXC_I2C_EnableInt>
    MXC_NVIC_SetVector(MXC_I2C_GET_IRQ(MXC_I2C_GET_IDX(I2C_INTERFACE)), i2c_simple_isr);
1000e738:	490e      	ldr	r1, [pc, #56]	@ (1000e774 <i2c_simple_peripheral_init+0x7c>)
1000e73a:	2024      	movs	r0, #36	@ 0x24
1000e73c:	f001 fce0 	bl	10010100 <MXC_NVIC_SetVector>
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1000e740:	4b0d      	ldr	r3, [pc, #52]	@ (1000e778 <i2c_simple_peripheral_init+0x80>)
1000e742:	2210      	movs	r2, #16
1000e744:	605a      	str	r2, [r3, #4]
    MXC_I2C_ClearFlags(I2C_INTERFACE, 0xFFFFFFFF, 0xFFFFFFFF);
1000e746:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1000e74a:	4611      	mov	r1, r2
1000e74c:	4807      	ldr	r0, [pc, #28]	@ (1000e76c <i2c_simple_peripheral_init+0x74>)
1000e74e:	f002 f827 	bl	100107a0 <MXC_I2C_ClearFlags>
    I2C_REGS[RECEIVE_DONE][0] = false;
1000e752:	4b0a      	ldr	r3, [pc, #40]	@ (1000e77c <i2c_simple_peripheral_init+0x84>)
1000e754:	6859      	ldr	r1, [r3, #4]
1000e756:	700c      	strb	r4, [r1, #0]
    I2C_REGS[TRANSMIT_DONE][0] = true;
1000e758:	691b      	ldr	r3, [r3, #16]
1000e75a:	2201      	movs	r2, #1
1000e75c:	701a      	strb	r2, [r3, #0]
}
1000e75e:	4620      	mov	r0, r4
1000e760:	bd10      	pop	{r4, pc}
        printf("Failed to initialize I2C.\n");
1000e762:	4807      	ldr	r0, [pc, #28]	@ (1000e780 <i2c_simple_peripheral_init+0x88>)
1000e764:	f005 ff6c 	bl	10014640 <puts>
}
1000e768:	4620      	mov	r0, r4
1000e76a:	bd10      	pop	{r4, pc}
1000e76c:	4001e000 	.word	0x4001e000
1000e770:	000186a0 	.word	0x000186a0
1000e774:	1000e499 	.word	0x1000e499
1000e778:	e000e100 	.word	0xe000e100
1000e77c:	20000018 	.word	0x20000018
1000e780:	1001a2a8 	.word	0x1001a2a8

1000e784 <AesEncrypt_C>:
 * @param [out] outBlock  Encrypted block.
 * @param [in]  r         Rounds divided by 2.
 */
static void AesEncrypt_C(Aes* aes, const byte* inBlock, byte* outBlock,
        word32 r)
{
1000e784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000e788:	b087      	sub	sp, #28
1000e78a:	680d      	ldr	r5, [r1, #0]
1000e78c:	684f      	ldr	r7, [r1, #4]
1000e78e:	688e      	ldr	r6, [r1, #8]
1000e790:	68cc      	ldr	r4, [r1, #12]
1000e792:	e9cd 3200 	strd	r3, r2, [sp]
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    /* AddRoundKey */
    s0 ^= rk[0];
1000e796:	6803      	ldr	r3, [r0, #0]
1000e798:	ba2d      	rev	r5, r5
1000e79a:	405d      	eors	r5, r3
    s1 ^= rk[1];
1000e79c:	6843      	ldr	r3, [r0, #4]
1000e79e:	ba3f      	rev	r7, r7
1000e7a0:	405f      	eors	r7, r3
    s2 ^= rk[2];
1000e7a2:	6883      	ldr	r3, [r0, #8]
1000e7a4:	ba36      	rev	r6, r6
1000e7a6:	405e      	eors	r6, r3
    s3 ^= rk[3];
1000e7a8:	68c3      	ldr	r3, [r0, #12]
    s0 ^= rk[(o)+0]; s1 ^= rk[(o)+1]; s2 ^= rk[(o)+2]; s3 ^= rk[(o)+3];
#endif

#ifndef WOLFSSL_AES_NO_UNROLL
/* Unroll the loop. */
                       ENC_ROUND_T_S( 0);
1000e7aa:	b2f9      	uxtb	r1, r7
1000e7ac:	b2f2      	uxtb	r2, r6
1000e7ae:	ba24      	rev	r4, r4
    s3 ^= rk[3];
1000e7b0:	405c      	eors	r4, r3
                       ENC_ROUND_T_S( 0);
1000e7b2:	f501 7140 	add.w	r1, r1, #768	@ 0x300
1000e7b6:	4bea      	ldr	r3, [pc, #936]	@ (1000eb60 <AesEncrypt_C+0x3dc>)
1000e7b8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000e7bc:	fa5f fe84 	uxtb.w	lr, r4
1000e7c0:	f853 8021 	ldr.w	r8, [r3, r1, lsl #2]
1000e7c4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000e7c8:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000e7cc:	0e2a      	lsrs	r2, r5, #24
1000e7ce:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000e7d2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000e7d6:	fa5f fc85 	uxtb.w	ip, r5
1000e7da:	ea82 020e 	eor.w	r2, r2, lr
1000e7de:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000e7e2:	ea4f 6e17 	mov.w	lr, r7, lsr #24
1000e7e6:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000e7ea:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
1000e7ee:	ea8e 0e0c 	eor.w	lr, lr, ip
1000e7f2:	ea4f 6c16 	mov.w	ip, r6, lsr #24
1000e7f6:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000e7fa:	ea8c 0c08 	eor.w	ip, ip, r8
1000e7fe:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000e802:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000e806:	ea88 0101 	eor.w	r1, r8, r1
1000e80a:	f3c7 4807 	ubfx	r8, r7, #16, #8
1000e80e:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000e812:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000e816:	9102      	str	r1, [sp, #8]
1000e818:	f853 b027 	ldr.w	fp, [r3, r7, lsl #2]
1000e81c:	6901      	ldr	r1, [r0, #16]
1000e81e:	f3c6 4707 	ubfx	r7, r6, #16, #8
1000e822:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000e826:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000e82a:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000e82e:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000e832:	f853 a028 	ldr.w	sl, [r3, r8, lsl #2]
1000e836:	f3c4 4607 	ubfx	r6, r4, #16, #8
1000e83a:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000e83e:	f507 7780 	add.w	r7, r7, #256	@ 0x100
1000e842:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000e846:	404a      	eors	r2, r1
1000e848:	6941      	ldr	r1, [r0, #20]
1000e84a:	f853 8027 	ldr.w	r8, [r3, r7, lsl #2]
1000e84e:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
1000e852:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000e856:	f3c5 4407 	ubfx	r4, r5, #16, #8
1000e85a:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000e85e:	ea8e 0e01 	eor.w	lr, lr, r1
1000e862:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000e866:	6981      	ldr	r1, [r0, #24]
1000e868:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000e86c:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000e870:	ea8c 0c01 	eor.w	ip, ip, r1
1000e874:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000e878:	ea8c 0c06 	eor.w	ip, ip, r6
1000e87c:	ea8c 0c05 	eor.w	ip, ip, r5
1000e880:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000e884:	69c5      	ldr	r5, [r0, #28]
1000e886:	9902      	ldr	r1, [sp, #8]
1000e888:	4069      	eors	r1, r5
1000e88a:	4061      	eors	r1, r4
1000e88c:	ea81 010b 	eor.w	r1, r1, fp
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000e890:	b2cc      	uxtb	r4, r1
                       ENC_ROUND_T_S( 0);
1000e892:	ea8e 0e08 	eor.w	lr, lr, r8
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000e896:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                       ENC_ROUND_T_S( 0);
1000e89a:	ea8e 0e07 	eor.w	lr, lr, r7
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000e89e:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
1000e8a2:	f3ce 4407 	ubfx	r4, lr, #16, #8
1000e8a6:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                       ENC_ROUND_T_S( 0);
1000e8aa:	ea82 020a 	eor.w	r2, r2, sl
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000e8ae:	f853 7024 	ldr.w	r7, [r3, r4, lsl #2]
1000e8b2:	fa5f f48e 	uxtb.w	r4, lr
1000e8b6:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                       ENC_ROUND_T_S( 0);
1000e8ba:	ea82 0209 	eor.w	r2, r2, r9
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000e8be:	9403      	str	r4, [sp, #12]
1000e8c0:	fa5f f48c 	uxtb.w	r4, ip
1000e8c4:	f504 7940 	add.w	r9, r4, #768	@ 0x300
1000e8c8:	0e14      	lsrs	r4, r2, #24
1000e8ca:	b2d6      	uxtb	r6, r2
1000e8cc:	f3c2 4b07 	ubfx	fp, r2, #16, #8
1000e8d0:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000e8d4:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000e8d8:	f8cd 9014 	str.w	r9, [sp, #20]
1000e8dc:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000e8e0:	9204      	str	r2, [sp, #16]
1000e8e2:	f3cc 2807 	ubfx	r8, ip, #8, #8
1000e8e6:	6a02      	ldr	r2, [r0, #32]
1000e8e8:	f508 7800 	add.w	r8, r8, #512	@ 0x200
1000e8ec:	406c      	eors	r4, r5
1000e8ee:	4054      	eors	r4, r2
1000e8f0:	ea4f 691e 	mov.w	r9, lr, lsr #24
1000e8f4:	407c      	eors	r4, r7
1000e8f6:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000e8fa:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000e8fe:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000e902:	4067      	eors	r7, r4
1000e904:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
1000e908:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000e90c:	ea84 0206 	eor.w	r2, r4, r6
1000e910:	f50e 7a00 	add.w	sl, lr, #512	@ 0x200
1000e914:	9c03      	ldr	r4, [sp, #12]
1000e916:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
1000e91a:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
1000e91e:	f3cc 4c07 	ubfx	ip, ip, #16, #8
1000e922:	f853 602e 	ldr.w	r6, [r3, lr, lsl #2]
1000e926:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000e92a:	9c05      	ldr	r4, [sp, #20]
1000e92c:	f50c 7580 	add.w	r5, ip, #256	@ 0x100
1000e930:	ea4f 6c11 	mov.w	ip, r1, lsr #24
1000e934:	9502      	str	r5, [sp, #8]
1000e936:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000e93a:	ea86 060e 	eor.w	r6, r6, lr
1000e93e:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000e942:	9c02      	ldr	r4, [sp, #8]
1000e944:	f3c1 4507 	ubfx	r5, r1, #16, #8
1000e948:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000e94c:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000e950:	ea8c 0c0e 	eor.w	ip, ip, lr
1000e954:	f853 e024 	ldr.w	lr, [r3, r4, lsl #2]
1000e958:	6a44      	ldr	r4, [r0, #36]	@ 0x24
1000e95a:	f853 9021 	ldr.w	r9, [r3, r1, lsl #2]
1000e95e:	9904      	ldr	r1, [sp, #16]
1000e960:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000e964:	4054      	eors	r4, r2
1000e966:	6a82      	ldr	r2, [r0, #40]	@ 0x28
1000e968:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1000e96c:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000e970:	4056      	eors	r6, r2
1000e972:	f50b 7b80 	add.w	fp, fp, #256	@ 0x100
1000e976:	ea86 0608 	eor.w	r6, r6, r8
1000e97a:	404e      	eors	r6, r1
1000e97c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000e97e:	f853 502b 	ldr.w	r5, [r3, fp, lsl #2]
1000e982:	ea8c 0c01 	eor.w	ip, ip, r1
1000e986:	ea8c 0c05 	eor.w	ip, ip, r5
1000e98a:	ea8c 0c0a 	eor.w	ip, ip, sl
1000e98e:	fa5f f28c 	uxtb.w	r2, ip
1000e992:	ea84 040e 	eor.w	r4, r4, lr
1000e996:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000e99a:	ea84 0409 	eor.w	r4, r4, r9
1000e99e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000e9a2:	f3c4 4207 	ubfx	r2, r4, #16, #8
1000e9a6:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000e9aa:	fa5f fe86 	uxtb.w	lr, r6
1000e9ae:	f853 a022 	ldr.w	sl, [r3, r2, lsl #2]
1000e9b2:	f3c6 2207 	ubfx	r2, r6, #8, #8
1000e9b6:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000e9ba:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000e9be:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000e9c2:	9202      	str	r2, [sp, #8]
1000e9c4:	b2fa      	uxtb	r2, r7
1000e9c6:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000e9ca:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000e9ce:	f3c6 4207 	ubfx	r2, r6, #16, #8
1000e9d2:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000e9d6:	0e36      	lsrs	r6, r6, #24
1000e9d8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000e9dc:	9203      	str	r2, [sp, #12]
1000e9de:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000e9e2:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000e9e6:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000e9ea:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000e9ee:	9204      	str	r2, [sp, #16]
1000e9f0:	b2e2      	uxtb	r2, r4
1000e9f2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000e9f6:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000e9fa:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000e9fe:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000ea02:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000ea06:	f853 9022 	ldr.w	r9, [r3, r2, lsl #2]
1000ea0a:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000ea0e:	f3c7 2c07 	ubfx	ip, r7, #8, #8
1000ea12:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000ea16:	ea86 060b 	eor.w	r6, r6, fp
1000ea1a:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000ea1e:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000ea22:	f3c7 4707 	ubfx	r7, r7, #16, #8
1000ea26:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000ea2a:	ea8b 0b01 	eor.w	fp, fp, r1
1000ea2e:	f507 7180 	add.w	r1, r7, #256	@ 0x100
1000ea32:	0e27      	lsrs	r7, r4, #24
1000ea34:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000ea38:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000ea3c:	ea87 0c05 	eor.w	ip, r7, r5
1000ea40:	6b05      	ldr	r5, [r0, #48]	@ 0x30
1000ea42:	ea8b 0b05 	eor.w	fp, fp, r5
1000ea46:	9d02      	ldr	r5, [sp, #8]
1000ea48:	ea8b 070a 	eor.w	r7, fp, sl
1000ea4c:	406f      	eors	r7, r5
1000ea4e:	6b45      	ldr	r5, [r0, #52]	@ 0x34
1000ea50:	ea8c 0c05 	eor.w	ip, ip, r5
1000ea54:	9d03      	ldr	r5, [sp, #12]
1000ea56:	ea8c 0c05 	eor.w	ip, ip, r5
1000ea5a:	9d04      	ldr	r5, [sp, #16]
1000ea5c:	ea8c 0c05 	eor.w	ip, ip, r5
1000ea60:	6b85      	ldr	r5, [r0, #56]	@ 0x38
1000ea62:	406e      	eors	r6, r5
1000ea64:	f853 502e 	ldr.w	r5, [r3, lr, lsl #2]
1000ea68:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000ea6c:	ea82 0e05 	eor.w	lr, r2, r5
1000ea70:	f853 5021 	ldr.w	r5, [r3, r1, lsl #2]
1000ea74:	6bc1      	ldr	r1, [r0, #60]	@ 0x3c
1000ea76:	f853 2024 	ldr.w	r2, [r3, r4, lsl #2]
1000ea7a:	ea8e 0e01 	eor.w	lr, lr, r1
1000ea7e:	ea8e 0e05 	eor.w	lr, lr, r5
1000ea82:	ea8e 0e02 	eor.w	lr, lr, r2
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000ea86:	fa5f f28e 	uxtb.w	r2, lr
1000ea8a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000ea8e:	ea86 0609 	eor.w	r6, r6, r9
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000ea92:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000ea96:	b2fa      	uxtb	r2, r7
1000ea98:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T( 8); ENC_ROUND_T_S( 8);
1000ea9c:	ea86 0608 	eor.w	r6, r6, r8
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000eaa0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000eaa4:	fa5f f28c 	uxtb.w	r2, ip
1000eaa8:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000eaac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000eab0:	b2f2      	uxtb	r2, r6
1000eab2:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000eab6:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000eaba:	0e3a      	lsrs	r2, r7, #24
1000eabc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000eac0:	4051      	eors	r1, r2
1000eac2:	ea4f 621c 	mov.w	r2, ip, lsr #24
1000eac6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000eaca:	ea82 0208 	eor.w	r2, r2, r8
1000eace:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000ead2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ead6:	ea88 0505 	eor.w	r5, r8, r5
1000eada:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000eade:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000eae2:	ea88 0404 	eor.w	r4, r8, r4
1000eae6:	f3cc 4807 	ubfx	r8, ip, #16, #8
1000eaea:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000eaee:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000eaf2:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000eaf6:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000eafa:	9402      	str	r4, [sp, #8]
1000eafc:	f853 402c 	ldr.w	r4, [r3, ip, lsl #2]
1000eb00:	9403      	str	r4, [sp, #12]
1000eb02:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000eb06:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000eb0a:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000eb0e:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000eb12:	f853 902c 	ldr.w	r9, [r3, ip, lsl #2]
1000eb16:	6c04      	ldr	r4, [r0, #64]	@ 0x40
1000eb18:	f853 a026 	ldr.w	sl, [r3, r6, lsl #2]
1000eb1c:	f3ce 4c07 	ubfx	ip, lr, #16, #8
1000eb20:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000eb24:	f50e 7600 	add.w	r6, lr, #512	@ 0x200
1000eb28:	4061      	eors	r1, r4
1000eb2a:	6c44      	ldr	r4, [r0, #68]	@ 0x44
1000eb2c:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000eb30:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000eb34:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000eb38:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000eb3c:	4062      	eors	r2, r4
1000eb3e:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000eb42:	6c84      	ldr	r4, [r0, #72]	@ 0x48
1000eb44:	f853 e02c 	ldr.w	lr, [r3, ip, lsl #2]
1000eb48:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000eb4c:	4065      	eors	r5, r4
1000eb4e:	ea85 050e 	eor.w	r5, r5, lr
1000eb52:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000eb56:	407d      	eors	r5, r7
1000eb58:	9c02      	ldr	r4, [sp, #8]
1000eb5a:	6cc7      	ldr	r7, [r0, #76]	@ 0x4c
1000eb5c:	e002      	b.n	1000eb64 <AesEncrypt_C+0x3e0>
1000eb5e:	bf00      	nop
1000eb60:	1001b2c4 	.word	0x1001b2c4
1000eb64:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000eb68:	407c      	eors	r4, r7
1000eb6a:	9f03      	ldr	r7, [sp, #12]
1000eb6c:	4074      	eors	r4, r6
1000eb6e:	407c      	eors	r4, r7
1000eb70:	b2e6      	uxtb	r6, r4
1000eb72:	ea82 0209 	eor.w	r2, r2, r9
1000eb76:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000eb7a:	ea82 0208 	eor.w	r2, r2, r8
1000eb7e:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000eb82:	f3c2 4607 	ubfx	r6, r2, #16, #8
1000eb86:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000eb8a:	f3c5 4c07 	ubfx	ip, r5, #16, #8
1000eb8e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000eb92:	9602      	str	r6, [sp, #8]
1000eb94:	ea81 010b 	eor.w	r1, r1, fp
1000eb98:	f50c 7b80 	add.w	fp, ip, #256	@ 0x100
1000eb9c:	fa5f fc82 	uxtb.w	ip, r2
1000eba0:	ea81 010a 	eor.w	r1, r1, sl
1000eba4:	f3c5 2607 	ubfx	r6, r5, #8, #8
1000eba8:	f50c 7940 	add.w	r9, ip, #768	@ 0x300
1000ebac:	fa5f fc85 	uxtb.w	ip, r5
1000ebb0:	0e2d      	lsrs	r5, r5, #24
1000ebb2:	9504      	str	r5, [sp, #16]
1000ebb4:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000ebb8:	0e0d      	lsrs	r5, r1, #24
1000ebba:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ebbe:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000ebc2:	9603      	str	r6, [sp, #12]
1000ebc4:	b2ce      	uxtb	r6, r1
1000ebc6:	406f      	eors	r7, r5
1000ebc8:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000ebcc:	0e15      	lsrs	r5, r2, #24
1000ebce:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ebd2:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000ebd6:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
1000ebda:	4075      	eors	r5, r6
1000ebdc:	6d06      	ldr	r6, [r0, #80]	@ 0x50
1000ebde:	4077      	eors	r7, r6
1000ebe0:	9e02      	ldr	r6, [sp, #8]
1000ebe2:	4077      	eors	r7, r6
1000ebe4:	9e03      	ldr	r6, [sp, #12]
1000ebe6:	4077      	eors	r7, r6
1000ebe8:	6d46      	ldr	r6, [r0, #84]	@ 0x54
1000ebea:	4075      	eors	r5, r6
1000ebec:	f853 602b 	ldr.w	r6, [r3, fp, lsl #2]
1000ebf0:	4075      	eors	r5, r6
1000ebf2:	9e04      	ldr	r6, [sp, #16]
1000ebf4:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000ebf8:	f3c4 4e07 	ubfx	lr, r4, #16, #8
1000ebfc:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000ec00:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ec04:	f50c 7a40 	add.w	sl, ip, #768	@ 0x300
1000ec08:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000ec0c:	f3c1 4c07 	ubfx	ip, r1, #16, #8
1000ec10:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000ec14:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000ec18:	ea86 0909 	eor.w	r9, r6, r9
1000ec1c:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000ec20:	f853 6028 	ldr.w	r6, [r3, r8, lsl #2]
1000ec24:	f853 802a 	ldr.w	r8, [r3, sl, lsl #2]
1000ec28:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000ec2c:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000ec30:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000ec34:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000ec38:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000ec3c:	ea85 0e04 	eor.w	lr, r5, r4
1000ec40:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000ec44:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000ec48:	6d82      	ldr	r2, [r0, #88]	@ 0x58
1000ec4a:	ea86 0608 	eor.w	r6, r6, r8
1000ec4e:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000ec52:	ea89 0c02 	eor.w	ip, r9, r2
1000ec56:	6dc2      	ldr	r2, [r0, #92]	@ 0x5c
1000ec58:	4056      	eors	r6, r2
1000ec5a:	ea86 0608 	eor.w	r6, r6, r8
1000ec5e:	404e      	eors	r6, r1
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000ec60:	b2f2      	uxtb	r2, r6
1000ec62:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000ec66:	ea8c 0c0a 	eor.w	ip, ip, sl
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000ec6a:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
1000ec6e:	b2fa      	uxtb	r2, r7
1000ec70:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(16); ENC_ROUND_T_S(16);
1000ec74:	ea8c 0c04 	eor.w	ip, ip, r4
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000ec78:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000ec7c:	fa5f f28e 	uxtb.w	r2, lr
1000ec80:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ec84:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000ec88:	fa5f f28c 	uxtb.w	r2, ip
1000ec8c:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ec90:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000ec94:	0e3a      	lsrs	r2, r7, #24
1000ec96:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ec9a:	ea82 0208 	eor.w	r2, r2, r8
1000ec9e:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000eca2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000eca6:	ea88 0505 	eor.w	r5, r8, r5
1000ecaa:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000ecae:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ecb2:	ea88 0404 	eor.w	r4, r8, r4
1000ecb6:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000ecba:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ecbe:	ea88 0101 	eor.w	r1, r8, r1
1000ecc2:	f3ce 4807 	ubfx	r8, lr, #16, #8
1000ecc6:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000ecca:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
1000ecce:	9102      	str	r1, [sp, #8]
1000ecd0:	f853 102e 	ldr.w	r1, [r3, lr, lsl #2]
1000ecd4:	9103      	str	r1, [sp, #12]
1000ecd6:	f3cc 4e07 	ubfx	lr, ip, #16, #8
1000ecda:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000ecde:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000ece2:	6e01      	ldr	r1, [r0, #96]	@ 0x60
1000ece4:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000ece8:	f3c6 4c07 	ubfx	ip, r6, #16, #8
1000ecec:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000ecf0:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000ecf4:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000ecf8:	404a      	eors	r2, r1
1000ecfa:	6e41      	ldr	r1, [r0, #100]	@ 0x64
1000ecfc:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000ed00:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000ed04:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000ed08:	f50c 7c80 	add.w	ip, ip, #256	@ 0x100
1000ed0c:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000ed10:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000ed14:	404d      	eors	r5, r1
1000ed16:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000ed1a:	6e81      	ldr	r1, [r0, #104]	@ 0x68
1000ed1c:	f853 902e 	ldr.w	r9, [r3, lr, lsl #2]
1000ed20:	f853 e02c 	ldr.w	lr, [r3, ip, lsl #2]
1000ed24:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000ed28:	404c      	eors	r4, r1
1000ed2a:	ea84 040e 	eor.w	r4, r4, lr
1000ed2e:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000ed32:	407c      	eors	r4, r7
1000ed34:	9902      	ldr	r1, [sp, #8]
1000ed36:	6ec7      	ldr	r7, [r0, #108]	@ 0x6c
1000ed38:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ed3c:	4079      	eors	r1, r7
1000ed3e:	9f03      	ldr	r7, [sp, #12]
1000ed40:	4071      	eors	r1, r6
1000ed42:	4079      	eors	r1, r7
1000ed44:	ea82 020b 	eor.w	r2, r2, fp
1000ed48:	ea85 0509 	eor.w	r5, r5, r9
1000ed4c:	ea82 020a 	eor.w	r2, r2, sl
1000ed50:	ea85 0508 	eor.w	r5, r5, r8
1000ed54:	fa5f f881 	uxtb.w	r8, r1
1000ed58:	0e17      	lsrs	r7, r2, #24
1000ed5a:	f508 7840 	add.w	r8, r8, #768	@ 0x300
1000ed5e:	fa5f fe82 	uxtb.w	lr, r2
1000ed62:	b2e6      	uxtb	r6, r4
1000ed64:	f853 9027 	ldr.w	r9, [r3, r7, lsl #2]
1000ed68:	f853 7028 	ldr.w	r7, [r3, r8, lsl #2]
1000ed6c:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000ed70:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000ed74:	fa5f fc85 	uxtb.w	ip, r5
1000ed78:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000ed7c:	f50c 7c40 	add.w	ip, ip, #768	@ 0x300
1000ed80:	ea89 0707 	eor.w	r7, r9, r7
1000ed84:	0e2e      	lsrs	r6, r5, #24
1000ed86:	f853 902e 	ldr.w	r9, [r3, lr, lsl #2]
1000ed8a:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000ed8e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000ed92:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000ed96:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000ed9a:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000ed9e:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000eda2:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000eda6:	9502      	str	r5, [sp, #8]
1000eda8:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000edac:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000edb0:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000edb4:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000edb8:	ea8c 0c08 	eor.w	ip, ip, r8
1000edbc:	ea4f 6811 	mov.w	r8, r1, lsr #24
1000edc0:	ea86 0609 	eor.w	r6, r6, r9
1000edc4:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000edc8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000edcc:	f3c1 4407 	ubfx	r4, r1, #16, #8
1000edd0:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000edd4:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000edd8:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000eddc:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000ede0:	ea88 0b0b 	eor.w	fp, r8, fp
1000ede4:	f853 8025 	ldr.w	r8, [r3, r5, lsl #2]
1000ede8:	f853 5024 	ldr.w	r5, [r3, r4, lsl #2]
1000edec:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
1000edf0:	f3c2 4107 	ubfx	r1, r2, #16, #8
1000edf4:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000edf8:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000edfc:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000ee00:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000ee04:	f853 e022 	ldr.w	lr, [r3, r2, lsl #2]
1000ee08:	6f02      	ldr	r2, [r0, #112]	@ 0x70
1000ee0a:	4057      	eors	r7, r2
1000ee0c:	6f42      	ldr	r2, [r0, #116]	@ 0x74
1000ee0e:	4056      	eors	r6, r2
1000ee10:	ea86 0608 	eor.w	r6, r6, r8
1000ee14:	4066      	eors	r6, r4
1000ee16:	6f84      	ldr	r4, [r0, #120]	@ 0x78
1000ee18:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000ee1c:	ea8c 0c04 	eor.w	ip, ip, r4
1000ee20:	6fc4      	ldr	r4, [r0, #124]	@ 0x7c
1000ee22:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000ee26:	ea8c 0c05 	eor.w	ip, ip, r5
1000ee2a:	ea8b 0404 	eor.w	r4, fp, r4
1000ee2e:	9d02      	ldr	r5, [sp, #8]
1000ee30:	404c      	eors	r4, r1
1000ee32:	406c      	eors	r4, r5
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000ee34:	b2e2      	uxtb	r2, r4
1000ee36:	f502 7240 	add.w	r2, r2, #768	@ 0x300
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000ee3a:	ea8c 0c0e 	eor.w	ip, ip, lr
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000ee3e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000ee42:	f3c6 4207 	ubfx	r2, r6, #16, #8
1000ee46:	f502 7280 	add.w	r2, r2, #256	@ 0x100
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000ee4a:	ea87 070a 	eor.w	r7, r7, sl
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000ee4e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ee52:	9202      	str	r2, [sp, #8]
1000ee54:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000ee58:	f502 7200 	add.w	r2, r2, #512	@ 0x200
    ENC_ROUND_S_T(24); ENC_ROUND_T_S(24);
1000ee5c:	ea87 0709 	eor.w	r7, r7, r9
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000ee60:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000ee64:	9103      	str	r1, [sp, #12]
1000ee66:	b2fa      	uxtb	r2, r7
1000ee68:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ee6c:	fa5f fe8c 	uxtb.w	lr, ip
1000ee70:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000ee74:	f3cc 4207 	ubfx	r2, ip, #16, #8
1000ee78:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000ee7c:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000ee80:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ee84:	9204      	str	r2, [sp, #16]
1000ee86:	f3c4 2207 	ubfx	r2, r4, #8, #8
1000ee8a:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000ee8e:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000ee92:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ee96:	9205      	str	r2, [sp, #20]
1000ee98:	b2f2      	uxtb	r2, r6
1000ee9a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ee9e:	ea4f 6814 	mov.w	r8, r4, lsr #24
1000eea2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000eea6:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000eeaa:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000eeae:	ea8c 0202 	eor.w	r2, ip, r2
1000eeb2:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000eeb6:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000eeba:	f853 b02c 	ldr.w	fp, [r3, ip, lsl #2]
1000eebe:	ea8b 0b05 	eor.w	fp, fp, r5
1000eec2:	0e35      	lsrs	r5, r6, #24
1000eec4:	f507 7c00 	add.w	ip, r7, #512	@ 0x200
1000eec8:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000eecc:	ea85 0a01 	eor.w	sl, r5, r1
1000eed0:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
1000eed4:	ea8b 0b05 	eor.w	fp, fp, r5
1000eed8:	9d02      	ldr	r5, [sp, #8]
1000eeda:	ea8b 0705 	eor.w	r7, fp, r5
1000eede:	9d03      	ldr	r5, [sp, #12]
1000eee0:	406f      	eors	r7, r5
1000eee2:	f8d0 5084 	ldr.w	r5, [r0, #132]	@ 0x84
1000eee6:	ea8a 0a05 	eor.w	sl, sl, r5
1000eeea:	9d04      	ldr	r5, [sp, #16]
1000eeec:	f3c4 4407 	ubfx	r4, r4, #16, #8
1000eef0:	ea8a 0a05 	eor.w	sl, sl, r5
1000eef4:	9d05      	ldr	r5, [sp, #20]
1000eef6:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000eefa:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000eefe:	f506 7100 	add.w	r1, r6, #512	@ 0x200
1000ef02:	ea8a 0605 	eor.w	r6, sl, r5
1000ef06:	f8d0 5088 	ldr.w	r5, [r0, #136]	@ 0x88
1000ef0a:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000ef0e:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
1000ef12:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000ef16:	406a      	eors	r2, r5
1000ef18:	f853 502e 	ldr.w	r5, [r3, lr, lsl #2]
1000ef1c:	ea82 0e04 	eor.w	lr, r2, r4
1000ef20:	f853 202c 	ldr.w	r2, [r3, ip, lsl #2]
1000ef24:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000ef28:	ea8e 0e02 	eor.w	lr, lr, r2
1000ef2c:	f8d0 208c 	ldr.w	r2, [r0, #140]	@ 0x8c
1000ef30:	f853 4029 	ldr.w	r4, [r3, r9, lsl #2]
1000ef34:	ea88 0505 	eor.w	r5, r8, r5
1000ef38:	ea85 0c02 	eor.w	ip, r5, r2
1000ef3c:	ea8c 0c04 	eor.w	ip, ip, r4
1000ef40:	ea8c 0c01 	eor.w	ip, ip, r1
1000ef44:	fa5f f28c 	uxtb.w	r2, ip
1000ef48:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ef4c:	ea4f 6817 	mov.w	r8, r7, lsr #24
1000ef50:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000ef54:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ef58:	b2fa      	uxtb	r2, r7
1000ef5a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ef5e:	ea88 0101 	eor.w	r1, r8, r1
1000ef62:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000ef66:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000ef6a:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ef6e:	b2f2      	uxtb	r2, r6
1000ef70:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ef74:	ea88 0505 	eor.w	r5, r8, r5
1000ef78:	ea4f 681e 	mov.w	r8, lr, lsr #24
1000ef7c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
1000ef80:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ef84:	fa5f f28e 	uxtb.w	r2, lr
1000ef88:	ea88 0404 	eor.w	r4, r8, r4
1000ef8c:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000ef90:	ea4f 681c 	mov.w	r8, ip, lsr #24
1000ef94:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000ef98:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000ef9c:	ea88 0202 	eor.w	r2, r8, r2
1000efa0:	f3c6 4807 	ubfx	r8, r6, #16, #8
1000efa4:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000efa8:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000efac:	f508 7880 	add.w	r8, r8, #256	@ 0x100
1000efb0:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000efb4:	9603      	str	r6, [sp, #12]
1000efb6:	f3ce 4607 	ubfx	r6, lr, #16, #8
1000efba:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000efbe:	f3ce 2e07 	ubfx	lr, lr, #8, #8
1000efc2:	f853 9026 	ldr.w	r9, [r3, r6, lsl #2]
1000efc6:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
1000efca:	9202      	str	r2, [sp, #8]
1000efcc:	f3cc 4607 	ubfx	r6, ip, #16, #8
1000efd0:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
1000efd4:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000efd8:	f853 a02e 	ldr.w	sl, [r3, lr, lsl #2]
1000efdc:	f853 e026 	ldr.w	lr, [r3, r6, lsl #2]
1000efe0:	f8d0 2090 	ldr.w	r2, [r0, #144]	@ 0x90
1000efe4:	4051      	eors	r1, r2
1000efe6:	f8d0 2094 	ldr.w	r2, [r0, #148]	@ 0x94
1000efea:	f3c7 4607 	ubfx	r6, r7, #16, #8
1000efee:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000eff2:	4055      	eors	r5, r2
1000eff4:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000eff8:	f8d0 2098 	ldr.w	r2, [r0, #152]	@ 0x98
1000effc:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
1000f000:	4054      	eors	r4, r2
1000f002:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f006:	ea84 040e 	eor.w	r4, r4, lr
1000f00a:	9a02      	ldr	r2, [sp, #8]
1000f00c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f010:	407c      	eors	r4, r7
1000f012:	f8d0 709c 	ldr.w	r7, [r0, #156]	@ 0x9c
1000f016:	f3cc 2c07 	ubfx	ip, ip, #8, #8
1000f01a:	407a      	eors	r2, r7
1000f01c:	f50c 7c00 	add.w	ip, ip, #512	@ 0x200
1000f020:	4072      	eors	r2, r6
    if (r > 5) {
1000f022:	9e00      	ldr	r6, [sp, #0]
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f024:	f853 802c 	ldr.w	r8, [r3, ip, lsl #2]
1000f028:	9f03      	ldr	r7, [sp, #12]
1000f02a:	ea81 010b 	eor.w	r1, r1, fp
1000f02e:	ea85 0509 	eor.w	r5, r5, r9
    if (r > 5) {
1000f032:	2e05      	cmp	r6, #5
    ENC_ROUND_S_T(32); ENC_ROUND_T_S(32);
1000f034:	ea81 010a 	eor.w	r1, r1, sl
1000f038:	ea85 0508 	eor.w	r5, r5, r8
1000f03c:	ea82 0207 	eor.w	r2, r2, r7
    if (r > 5) {
1000f040:	f240 81e9 	bls.w	1000f416 <AesEncrypt_C+0xc92>
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000f044:	b2d6      	uxtb	r6, r2
1000f046:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f04a:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f04e:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000f052:	b2ce      	uxtb	r6, r1
1000f054:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f058:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f05c:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000f060:	b2ee      	uxtb	r6, r5
1000f062:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f066:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f06a:	b2e6      	uxtb	r6, r4
1000f06c:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f070:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f074:	0e0e      	lsrs	r6, r1, #24
1000f076:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f07a:	4077      	eors	r7, r6
1000f07c:	0e2e      	lsrs	r6, r5, #24
1000f07e:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f082:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f086:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f08a:	ea86 060c 	eor.w	r6, r6, ip
1000f08e:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f092:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f096:	9502      	str	r5, [sp, #8]
1000f098:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f09c:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f0a0:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f0a4:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f0a8:	ea8c 0c08 	eor.w	ip, ip, r8
1000f0ac:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000f0b0:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000f0b4:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f0b8:	f3c2 4407 	ubfx	r4, r2, #16, #8
1000f0bc:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f0c0:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f0c4:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f0c8:	ea88 0b0b 	eor.w	fp, r8, fp
1000f0cc:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000f0d0:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000f0d4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f0d8:	f3c1 4207 	ubfx	r2, r1, #16, #8
1000f0dc:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f0e0:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f0e4:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f0e8:	f853 a021 	ldr.w	sl, [r3, r1, lsl #2]
1000f0ec:	f8d0 10a0 	ldr.w	r1, [r0, #160]	@ 0xa0
1000f0f0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f0f4:	404f      	eors	r7, r1
1000f0f6:	f8d0 10a4 	ldr.w	r1, [r0, #164]	@ 0xa4
1000f0fa:	404e      	eors	r6, r1
1000f0fc:	ea86 060e 	eor.w	r6, r6, lr
1000f100:	4075      	eors	r5, r6
1000f102:	f8d0 10ac 	ldr.w	r1, [r0, #172]	@ 0xac
1000f106:	f8d0 60a8 	ldr.w	r6, [r0, #168]	@ 0xa8
1000f10a:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f10e:	ea8c 0c06 	eor.w	ip, ip, r6
1000f112:	ea8b 0601 	eor.w	r6, fp, r1
1000f116:	4056      	eors	r6, r2
1000f118:	9a02      	ldr	r2, [sp, #8]
1000f11a:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f11e:	4056      	eors	r6, r2
1000f120:	ea8c 0c04 	eor.w	ip, ip, r4
1000f124:	b2f2      	uxtb	r2, r6
1000f126:	ea8c 0c0a 	eor.w	ip, ip, sl
1000f12a:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f12e:	f3cc 4407 	ubfx	r4, ip, #16, #8
1000f132:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f136:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f13a:	f3c5 4207 	ubfx	r2, r5, #16, #8
1000f13e:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f142:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f146:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000f14a:	9403      	str	r4, [sp, #12]
1000f14c:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f150:	f3c6 2407 	ubfx	r4, r6, #8, #8
1000f154:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f158:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f15c:	ea87 0708 	eor.w	r7, r7, r8
1000f160:	ea87 0709 	eor.w	r7, r7, r9
1000f164:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f168:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f16c:	9202      	str	r2, [sp, #8]
1000f16e:	9404      	str	r4, [sp, #16]
1000f170:	b2fa      	uxtb	r2, r7
1000f172:	b2ec      	uxtb	r4, r5
1000f174:	fa5f fe8c 	uxtb.w	lr, ip
1000f178:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f17c:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1000f180:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f184:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f188:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f18c:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f190:	ea8c 0404 	eor.w	r4, ip, r4
1000f194:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f198:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f19c:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f1a0:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f1a4:	ea8c 0101 	eor.w	r1, ip, r1
1000f1a8:	ea4f 6c15 	mov.w	ip, r5, lsr #24
1000f1ac:	f3c6 4607 	ubfx	r6, r6, #16, #8
1000f1b0:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000f1b4:	ea8a 0a02 	eor.w	sl, sl, r2
1000f1b8:	f8d0 20b0 	ldr.w	r2, [r0, #176]	@ 0xb0
1000f1bc:	4051      	eors	r1, r2
1000f1be:	9a02      	ldr	r2, [sp, #8]
1000f1c0:	ea81 010b 	eor.w	r1, r1, fp
1000f1c4:	4051      	eors	r1, r2
1000f1c6:	f8d0 20b4 	ldr.w	r2, [r0, #180]	@ 0xb4
1000f1ca:	ea8a 0a02 	eor.w	sl, sl, r2
1000f1ce:	9a03      	ldr	r2, [sp, #12]
1000f1d0:	ea8a 0a02 	eor.w	sl, sl, r2
1000f1d4:	9a04      	ldr	r2, [sp, #16]
1000f1d6:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f1da:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f1de:	f505 7c00 	add.w	ip, r5, #512	@ 0x200
1000f1e2:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000f1e6:	ea8a 0502 	eor.w	r5, sl, r2
1000f1ea:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f1ee:	f8d0 20b8 	ldr.w	r2, [r0, #184]	@ 0xb8
1000f1f2:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f1f6:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f1fa:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f1fe:	4054      	eors	r4, r2
1000f200:	4074      	eors	r4, r6
1000f202:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
1000f206:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
1000f20a:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
1000f20e:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000f212:	4074      	eors	r4, r6
1000f214:	f8d0 60bc 	ldr.w	r6, [r0, #188]	@ 0xbc
1000f218:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000f21c:	ea88 0202 	eor.w	r2, r8, r2
1000f220:	4072      	eors	r2, r6
        if (r > 6) {
1000f222:	9e00      	ldr	r6, [sp, #0]
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000f224:	ea82 020e 	eor.w	r2, r2, lr
        if (r > 6) {
1000f228:	2e06      	cmp	r6, #6
        ENC_ROUND_S_T(40); ENC_ROUND_T_S(40);
1000f22a:	ea82 0207 	eor.w	r2, r2, r7
        if (r > 6) {
1000f22e:	f000 80f2 	beq.w	1000f416 <AesEncrypt_C+0xc92>
            ENC_ROUND_S_T(48); ENC_ROUND_T_S(48);
1000f232:	b2d6      	uxtb	r6, r2
1000f234:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f238:	f3c5 4e07 	ubfx	lr, r5, #16, #8
1000f23c:	f853 7026 	ldr.w	r7, [r3, r6, lsl #2]
1000f240:	b2ce      	uxtb	r6, r1
1000f242:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f246:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
1000f24a:	f853 c026 	ldr.w	ip, [r3, r6, lsl #2]
1000f24e:	b2ee      	uxtb	r6, r5
1000f250:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f254:	f853 8026 	ldr.w	r8, [r3, r6, lsl #2]
1000f258:	b2e6      	uxtb	r6, r4
1000f25a:	f506 7640 	add.w	r6, r6, #768	@ 0x300
1000f25e:	f853 b026 	ldr.w	fp, [r3, r6, lsl #2]
1000f262:	0e0e      	lsrs	r6, r1, #24
1000f264:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f268:	4077      	eors	r7, r6
1000f26a:	0e2e      	lsrs	r6, r5, #24
1000f26c:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f270:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f274:	f505 7500 	add.w	r5, r5, #512	@ 0x200
1000f278:	ea86 060c 	eor.w	r6, r6, ip
1000f27c:	ea4f 6c14 	mov.w	ip, r4, lsr #24
1000f280:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f284:	9502      	str	r5, [sp, #8]
1000f286:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f28a:	f3c4 4507 	ubfx	r5, r4, #16, #8
1000f28e:	f3c4 2407 	ubfx	r4, r4, #8, #8
1000f292:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f296:	ea8c 0c08 	eor.w	ip, ip, r8
1000f29a:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000f29e:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
1000f2a2:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f2a6:	f3c2 4407 	ubfx	r4, r2, #16, #8
1000f2aa:	f3c2 2207 	ubfx	r2, r2, #8, #8
1000f2ae:	f505 7580 	add.w	r5, r5, #256	@ 0x100
1000f2b2:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f2b6:	ea88 0b0b 	eor.w	fp, r8, fp
1000f2ba:	f853 802e 	ldr.w	r8, [r3, lr, lsl #2]
1000f2be:	f853 e025 	ldr.w	lr, [r3, r5, lsl #2]
1000f2c2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1000f2c6:	f3c1 4207 	ubfx	r2, r1, #16, #8
1000f2ca:	f3c1 2107 	ubfx	r1, r1, #8, #8
1000f2ce:	f501 7100 	add.w	r1, r1, #512	@ 0x200
1000f2d2:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f2d6:	f853 a021 	ldr.w	sl, [r3, r1, lsl #2]
1000f2da:	f8d0 10c0 	ldr.w	r1, [r0, #192]	@ 0xc0
1000f2de:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f2e2:	404f      	eors	r7, r1
1000f2e4:	f8d0 10c4 	ldr.w	r1, [r0, #196]	@ 0xc4
1000f2e8:	404e      	eors	r6, r1
1000f2ea:	ea86 060e 	eor.w	r6, r6, lr
1000f2ee:	4075      	eors	r5, r6
1000f2f0:	f8d0 10cc 	ldr.w	r1, [r0, #204]	@ 0xcc
1000f2f4:	f8d0 60c8 	ldr.w	r6, [r0, #200]	@ 0xc8
1000f2f8:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f2fc:	ea8c 0c06 	eor.w	ip, ip, r6
1000f300:	ea8b 0601 	eor.w	r6, fp, r1
1000f304:	4056      	eors	r6, r2
1000f306:	9a02      	ldr	r2, [sp, #8]
1000f308:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f30c:	4056      	eors	r6, r2
1000f30e:	ea8c 0c04 	eor.w	ip, ip, r4
1000f312:	b2f2      	uxtb	r2, r6
1000f314:	ea8c 0c0a 	eor.w	ip, ip, sl
1000f318:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f31c:	f3cc 4407 	ubfx	r4, ip, #16, #8
1000f320:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
1000f324:	f504 7480 	add.w	r4, r4, #256	@ 0x100
1000f328:	f3c5 4207 	ubfx	r2, r5, #16, #8
1000f32c:	f502 7280 	add.w	r2, r2, #256	@ 0x100
1000f330:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f334:	f853 b022 	ldr.w	fp, [r3, r2, lsl #2]
1000f338:	9403      	str	r4, [sp, #12]
1000f33a:	f3cc 2207 	ubfx	r2, ip, #8, #8
1000f33e:	f3c6 2407 	ubfx	r4, r6, #8, #8
1000f342:	f502 7200 	add.w	r2, r2, #512	@ 0x200
1000f346:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f34a:	ea87 0708 	eor.w	r7, r7, r8
1000f34e:	ea87 0709 	eor.w	r7, r7, r9
1000f352:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f356:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f35a:	9202      	str	r2, [sp, #8]
1000f35c:	9404      	str	r4, [sp, #16]
1000f35e:	b2fa      	uxtb	r2, r7
1000f360:	b2ec      	uxtb	r4, r5
1000f362:	fa5f fe8c 	uxtb.w	lr, ip
1000f366:	f502 7240 	add.w	r2, r2, #768	@ 0x300
1000f36a:	f504 7440 	add.w	r4, r4, #768	@ 0x300
1000f36e:	ea4f 6c1c 	mov.w	ip, ip, lsr #24
1000f372:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
1000f376:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
1000f37a:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f37e:	ea8c 0404 	eor.w	r4, ip, r4
1000f382:	ea4f 6c17 	mov.w	ip, r7, lsr #24
1000f386:	ea4f 6816 	mov.w	r8, r6, lsr #24
1000f38a:	f853 c02c 	ldr.w	ip, [r3, ip, lsl #2]
1000f38e:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f392:	ea8c 0101 	eor.w	r1, ip, r1
1000f396:	ea4f 6c15 	mov.w	ip, r5, lsr #24
1000f39a:	f3c6 4607 	ubfx	r6, r6, #16, #8
1000f39e:	f853 a02c 	ldr.w	sl, [r3, ip, lsl #2]
1000f3a2:	ea8a 0a02 	eor.w	sl, sl, r2
1000f3a6:	f8d0 20d0 	ldr.w	r2, [r0, #208]	@ 0xd0
1000f3aa:	4051      	eors	r1, r2
1000f3ac:	9a02      	ldr	r2, [sp, #8]
1000f3ae:	ea81 010b 	eor.w	r1, r1, fp
1000f3b2:	4051      	eors	r1, r2
1000f3b4:	f8d0 20d4 	ldr.w	r2, [r0, #212]	@ 0xd4
1000f3b8:	ea8a 0a02 	eor.w	sl, sl, r2
1000f3bc:	9a03      	ldr	r2, [sp, #12]
1000f3be:	ea8a 0a02 	eor.w	sl, sl, r2
1000f3c2:	9a04      	ldr	r2, [sp, #16]
1000f3c4:	f3c5 2507 	ubfx	r5, r5, #8, #8
1000f3c8:	f506 7680 	add.w	r6, r6, #256	@ 0x100
1000f3cc:	f505 7c00 	add.w	ip, r5, #512	@ 0x200
1000f3d0:	f3c7 4907 	ubfx	r9, r7, #16, #8
1000f3d4:	ea8a 0502 	eor.w	r5, sl, r2
1000f3d8:	f3c7 2707 	ubfx	r7, r7, #8, #8
1000f3dc:	f8d0 20d8 	ldr.w	r2, [r0, #216]	@ 0xd8
1000f3e0:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f3e4:	f507 7700 	add.w	r7, r7, #512	@ 0x200
1000f3e8:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000f3ec:	4054      	eors	r4, r2
1000f3ee:	4074      	eors	r4, r6
1000f3f0:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
1000f3f4:	f853 202e 	ldr.w	r2, [r3, lr, lsl #2]
1000f3f8:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
1000f3fc:	f509 7980 	add.w	r9, r9, #256	@ 0x100
1000f400:	4074      	eors	r4, r6
1000f402:	f8d0 60dc 	ldr.w	r6, [r0, #220]	@ 0xdc
1000f406:	f853 e029 	ldr.w	lr, [r3, r9, lsl #2]
1000f40a:	ea88 0202 	eor.w	r2, r8, r2
1000f40e:	4072      	eors	r2, r6
1000f410:	ea82 020e 	eor.w	r2, r2, lr
1000f414:	407a      	eors	r2, r7
#ifndef WOLFSSL_AES_TOUCH_LINES
    s0 =
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000f416:	b2d6      	uxtb	r6, r2
1000f418:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
        rk[1];
    s2 =
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000f41c:	ea4f 6914 	mov.w	r9, r4, lsr #24
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000f420:	f813 c026 	ldrb.w	ip, [r3, r6, lsl #2]
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000f424:	f3c5 4607 	ubfx	r6, r5, #16, #8
1000f428:	f506 7640 	add.w	r6, r6, #768	@ 0x300
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000f42c:	f509 7900 	add.w	r9, r9, #512	@ 0x200
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000f430:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000f434:	f853 9029 	ldr.w	r9, [r3, r9, lsl #2]
        (GetTable(Te[3], GETBYTE(t1, 2)) & 0x00ff0000) ^
1000f438:	f406 087f 	and.w	r8, r6, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
1000f43c:	0e0e      	lsrs	r6, r1, #24
1000f43e:	f506 7600 	add.w	r6, r6, #512	@ 0x200
        rk[2];
    s3 =
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f442:	fa5f fa84 	uxtb.w	sl, r4
        (GetTable(Te[2], GETBYTE(t0, 3)) & 0xff000000) ^
1000f446:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f44a:	f006 467f 	and.w	r6, r6, #4278190080	@ 0xff000000
1000f44e:	ea48 0806 	orr.w	r8, r8, r6
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000f452:	b2ce      	uxtb	r6, r1
1000f454:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f458:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000f45c:	f813 7026 	ldrb.w	r7, [r3, r6, lsl #2]
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
1000f460:	f3c4 4607 	ubfx	r6, r4, #16, #8
1000f464:	f506 7640 	add.w	r6, r6, #768	@ 0x300
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000f468:	f3c4 2407 	ubfx	r4, r4, #8, #8
        (GetTable(Te[3], GETBYTE(t2, 2)) & 0x00ff0000) ^
1000f46c:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f470:	f406 0e7f 	and.w	lr, r6, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t1, 3)) & 0xff000000) ^
1000f474:	0e2e      	lsrs	r6, r5, #24
1000f476:	f506 7600 	add.w	r6, r6, #512	@ 0x200
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000f47a:	f009 497f 	and.w	r9, r9, #4278190080	@ 0xff000000
        (GetTable(Te[2], GETBYTE(t1, 3)) & 0xff000000) ^
1000f47e:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
1000f482:	f006 467f 	and.w	r6, r6, #4278190080	@ 0xff000000
1000f486:	ea4e 0e06 	orr.w	lr, lr, r6
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000f48a:	b2ee      	uxtb	r6, r5
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
1000f48c:	f3c5 2507 	ubfx	r5, r5, #8, #8
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000f490:	ea4f 6b12 	mov.w	fp, r2, lsr #24
        (GetTable(Te[0], GETBYTE(t1, 1)) & 0x0000ff00) ^
1000f494:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
1000f498:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
1000f49c:	9502      	str	r5, [sp, #8]
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000f49e:	f3c2 4507 	ubfx	r5, r2, #16, #8
1000f4a2:	f505 7540 	add.w	r5, r5, #768	@ 0x300
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000f4a6:	f3c2 2207 	ubfx	r2, r2, #8, #8
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000f4aa:	f853 5025 	ldr.w	r5, [r3, r5, lsl #2]
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000f4ae:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
        (GetTable(Te[3], GETBYTE(t3, 2)) & 0x00ff0000) ^
1000f4b2:	f405 057f 	and.w	r5, r5, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t2, 3)) & 0xff000000) ^
1000f4b6:	ea45 0509 	orr.w	r5, r5, r9
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000f4ba:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f4be:	f813 402a 	ldrb.w	r4, [r3, sl, lsl #2]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000f4c2:	f3c1 4a07 	ubfx	sl, r1, #16, #8
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000f4c6:	f50b 7b00 	add.w	fp, fp, #512	@ 0x200
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000f4ca:	f506 7680 	add.w	r6, r6, #256	@ 0x100
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000f4ce:	f3c1 2107 	ubfx	r1, r1, #8, #8
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000f4d2:	f50a 7a40 	add.w	sl, sl, #768	@ 0x300
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000f4d6:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000f4da:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000f4de:	f853 a02a 	ldr.w	sl, [r3, sl, lsl #2]
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000f4e2:	f853 302b 	ldr.w	r3, [r3, fp, lsl #2]
        (GetTable(Te[0], GETBYTE(t3, 1)) & 0x0000ff00) ^
1000f4e6:	f402 4b7f 	and.w	fp, r2, #65280	@ 0xff00
    rk += r * 8;
1000f4ea:	9a00      	ldr	r2, [sp, #0]
        (GetTable(Te[3], GETBYTE(t0, 2)) & 0x00ff0000) ^
1000f4ec:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
        (GetTable(Te[2], GETBYTE(t3, 3)) & 0xff000000) ^
1000f4f0:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
1000f4f4:	ea4a 0303 	orr.w	r3, sl, r3
    rk += r * 8;
1000f4f8:	eb00 1a42 	add.w	sl, r0, r2, lsl #5
1000f4fc:	0152      	lsls	r2, r2, #5
        (GetTable(Te[0], GETBYTE(t0, 1)) & 0x0000ff00) ^
1000f4fe:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000f502:	5882      	ldr	r2, [r0, r2]
1000f504:	ea8c 0c02 	eor.w	ip, ip, r2
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000f508:	f8da 2004 	ldr.w	r2, [sl, #4]
1000f50c:	4057      	eors	r7, r2
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000f50e:	f8da 2008 	ldr.w	r2, [sl, #8]
1000f512:	4056      	eors	r6, r2
1000f514:	404e      	eors	r6, r1
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f516:	f8da 200c 	ldr.w	r2, [sl, #12]
    s1 = ByteReverseWord32(s1);
    s2 = ByteReverseWord32(s2);
    s3 = ByteReverseWord32(s3);
#endif

    XMEMCPY(outBlock,                  &s0, sizeof(s0));
1000f51a:	9901      	ldr	r1, [sp, #4]
        (GetTable(Te[1], GETBYTE(t1, 0)) & 0x000000ff) ^
1000f51c:	406e      	eors	r6, r5
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f51e:	9d02      	ldr	r5, [sp, #8]
        (GetTable(Te[0], GETBYTE(t2, 1)) & 0x0000ff00) ^
1000f520:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f524:	4054      	eors	r4, r2
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000f526:	ea8c 0c09 	eor.w	ip, ip, r9
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000f52a:	ea87 070b 	eor.w	r7, r7, fp
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f52e:	406c      	eors	r4, r5
        (GetTable(Te[1], GETBYTE(t3, 0)) & 0x000000ff) ^
1000f530:	ea8c 0c08 	eor.w	ip, ip, r8
        (GetTable(Te[1], GETBYTE(t0, 0)) & 0x000000ff) ^
1000f534:	ea87 070e 	eor.w	r7, r7, lr
        (GetTable(Te[1], GETBYTE(t2, 0)) & 0x000000ff) ^
1000f538:	405c      	eors	r4, r3
1000f53a:	fa9c fc8c 	rev.w	ip, ip
    s1 = ByteReverseWord32(s1);
1000f53e:	ba3f      	rev	r7, r7
    s2 = ByteReverseWord32(s2);
1000f540:	ba36      	rev	r6, r6
    s3 = ByteReverseWord32(s3);
1000f542:	ba24      	rev	r4, r4
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
1000f544:	f8c1 c000 	str.w	ip, [r1]
    XMEMCPY(outBlock +     sizeof(s0), &s1, sizeof(s1));
1000f548:	604f      	str	r7, [r1, #4]
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
1000f54a:	608e      	str	r6, [r1, #8]
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
1000f54c:	60cc      	str	r4, [r1, #12]
}
1000f54e:	b007      	add	sp, #28
1000f550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

1000f554 <wc_AesSetKeyLocal.constprop.0>:
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        byte   local[32];
        word32 localSz = 32;
    #endif

        if (aes == NULL)
1000f554:	2800      	cmp	r0, #0
1000f556:	f000 8277 	beq.w	1000fa48 <wc_AesSetKeyLocal.constprop.0+0x4f4>
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
1000f55a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        ret = wc_debug_CipherLifecycleCheck(aes->CipherLifecycleTag, 0);
        if (ret < 0)
            return ret;
#endif

        switch (keylen) {
1000f55e:	f1a2 0510 	sub.w	r5, r2, #16
1000f562:	2d10      	cmp	r5, #16
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
1000f564:	b085      	sub	sp, #20
1000f566:	4692      	mov	sl, r2
        switch (keylen) {
1000f568:	d804      	bhi.n	1000f574 <wc_AesSetKeyLocal.constprop.0+0x20>
1000f56a:	461f      	mov	r7, r3
1000f56c:	4bd5      	ldr	r3, [pc, #852]	@ (1000f8c4 <wc_AesSetKeyLocal.constprop.0+0x370>)
1000f56e:	40eb      	lsrs	r3, r5
1000f570:	07db      	lsls	r3, r3, #31
1000f572:	d404      	bmi.n	1000f57e <wc_AesSetKeyLocal.constprop.0+0x2a>
1000f574:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
    #endif
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        ForceZero(local, sizeof(local));
    #endif
        return ret;
    } /* wc_AesSetKeyLocal */
1000f578:	b005      	add	sp, #20
1000f57a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        aes->rounds = (keylen/4) + 6;
1000f57e:	ea4f 0892 	mov.w	r8, r2, lsr #2
1000f582:	f108 0306 	add.w	r3, r8, #6
1000f586:	4689      	mov	r9, r1
1000f588:	4604      	mov	r4, r0
        aes->keylen = (int)keylen;
1000f58a:	f8c0 20f4 	str.w	r2, [r0, #244]	@ 0xf4
        aes->rounds = (keylen/4) + 6;
1000f58e:	f8c0 30f0 	str.w	r3, [r0, #240]	@ 0xf0
        XMEMCPY(aes->key, userKey, keylen);
1000f592:	4606      	mov	r6, r0
            return ret;
    }
#endif

    if (iv)
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
1000f594:	f100 0bf8 	add.w	fp, r0, #248	@ 0xf8
    if (iv)
1000f598:	2f00      	cmp	r7, #0
1000f59a:	d047      	beq.n	1000f62c <wc_AesSetKeyLocal.constprop.0+0xd8>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
1000f59c:	f8d7 e000 	ldr.w	lr, [r7]
1000f5a0:	f8d7 c004 	ldr.w	ip, [r7, #4]
1000f5a4:	68bd      	ldr	r5, [r7, #8]
1000f5a6:	68fb      	ldr	r3, [r7, #12]
1000f5a8:	f8c0 e0f8 	str.w	lr, [r0, #248]	@ 0xf8
1000f5ac:	f8cb c004 	str.w	ip, [fp, #4]
1000f5b0:	f8cb 5008 	str.w	r5, [fp, #8]
1000f5b4:	f8cb 300c 	str.w	r3, [fp, #12]
        XMEMCPY(aes->key, userKey, keylen);
1000f5b8:	f006 f842 	bl	10015640 <memcpy>
    if ((((size_t)in & 0x3) == 0) &&
        (((size_t)out & 0x3) == 0))
#endif
    {
        word32 count = byteCount/(word32)sizeof(word32);
        for (i = 0; i < count; i++)
1000f5bc:	eb04 0888 	add.w	r8, r4, r8, lsl #2
1000f5c0:	4625      	mov	r5, r4
    static WARN_UNUSED_RESULT int wc_AesSetKeyLocal(
1000f5c2:	4623      	mov	r3, r4
            out[i] = ByteReverseWord32(in[i]);
1000f5c4:	681a      	ldr	r2, [r3, #0]
1000f5c6:	ba12      	rev	r2, r2
1000f5c8:	f843 2b04 	str.w	r2, [r3], #4
        for (i = 0; i < count; i++)
1000f5cc:	4598      	cmp	r8, r3
1000f5ce:	d1f9      	bne.n	1000f5c4 <wc_AesSetKeyLocal.constprop.0+0x70>
    XMEMCPY(rk, key, keySz);
1000f5d0:	4649      	mov	r1, r9
1000f5d2:	4652      	mov	r2, sl
1000f5d4:	4620      	mov	r0, r4
1000f5d6:	f006 f833 	bl	10015640 <memcpy>
1000f5da:	4623      	mov	r3, r4
            out[i] = ByteReverseWord32(in[i]);
1000f5dc:	681a      	ldr	r2, [r3, #0]
1000f5de:	ba12      	rev	r2, r2
1000f5e0:	f843 2b04 	str.w	r2, [r3], #4
        for (i = 0; i < count; i++)
1000f5e4:	4598      	cmp	r8, r3
1000f5e6:	d1f9      	bne.n	1000f5dc <wc_AesSetKeyLocal.constprop.0+0x88>
    switch (keySz) {
1000f5e8:	f1ba 0f18 	cmp.w	sl, #24
1000f5ec:	f000 81e2 	beq.w	1000f9b4 <wc_AesSetKeyLocal.constprop.0+0x460>
1000f5f0:	f1ba 0f20 	cmp.w	sl, #32
1000f5f4:	f000 8157 	beq.w	1000f8a6 <wc_AesSetKeyLocal.constprop.0+0x352>
1000f5f8:	f1ba 0f10 	cmp.w	sl, #16
1000f5fc:	f000 8111 	beq.w	1000f822 <wc_AesSetKeyLocal.constprop.0+0x2ce>
    if (dir == AES_DECRYPTION) {
1000f600:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1000f602:	2b01      	cmp	r3, #1
1000f604:	d01d      	beq.n	1000f642 <wc_AesSetKeyLocal.constprop.0+0xee>
    if (iv)
1000f606:	2f00      	cmp	r7, #0
1000f608:	f000 8102 	beq.w	1000f810 <wc_AesSetKeyLocal.constprop.0+0x2bc>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
1000f60c:	6838      	ldr	r0, [r7, #0]
1000f60e:	6879      	ldr	r1, [r7, #4]
1000f610:	68ba      	ldr	r2, [r7, #8]
1000f612:	68fb      	ldr	r3, [r7, #12]
1000f614:	f8c4 00f8 	str.w	r0, [r4, #248]	@ 0xf8
1000f618:	f8cb 1004 	str.w	r1, [fp, #4]
1000f61c:	f8cb 2008 	str.w	r2, [fp, #8]
1000f620:	f8cb 300c 	str.w	r3, [fp, #12]
        return ret;
1000f624:	2000      	movs	r0, #0
    } /* wc_AesSetKeyLocal */
1000f626:	b005      	add	sp, #20
1000f628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    else
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
1000f62c:	f8c0 70f8 	str.w	r7, [r0, #248]	@ 0xf8
1000f630:	f8cb 7004 	str.w	r7, [fp, #4]
1000f634:	f8cb 7008 	str.w	r7, [fp, #8]
1000f638:	f8cb 700c 	str.w	r7, [fp, #12]
        XMEMCPY(aes->key, userKey, keylen);
1000f63c:	f006 f800 	bl	10015640 <memcpy>
1000f640:	e7bc      	b.n	1000f5bc <wc_AesSetKeyLocal.constprop.0+0x68>
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
1000f642:	f8d4 30f0 	ldr.w	r3, [r4, #240]	@ 0xf0
1000f646:	009e      	lsls	r6, r3, #2
1000f648:	d01f      	beq.n	1000f68a <wc_AesSetKeyLocal.constprop.0+0x136>
1000f64a:	eb04 1303 	add.w	r3, r4, r3, lsl #4
1000f64e:	4622      	mov	r2, r4
1000f650:	2100      	movs	r1, #0
1000f652:	46a4      	mov	ip, r4
            temp = rk[i    ]; rk[i    ] = rk[j    ]; rk[j    ] = temp;
1000f654:	6810      	ldr	r0, [r2, #0]
1000f656:	681c      	ldr	r4, [r3, #0]
1000f658:	6014      	str	r4, [r2, #0]
1000f65a:	6018      	str	r0, [r3, #0]
            temp = rk[i + 1]; rk[i + 1] = rk[j + 1]; rk[j + 1] = temp;
1000f65c:	6850      	ldr	r0, [r2, #4]
1000f65e:	685c      	ldr	r4, [r3, #4]
1000f660:	6054      	str	r4, [r2, #4]
1000f662:	6058      	str	r0, [r3, #4]
            temp = rk[i + 2]; rk[i + 2] = rk[j + 2]; rk[j + 2] = temp;
1000f664:	6890      	ldr	r0, [r2, #8]
1000f666:	689c      	ldr	r4, [r3, #8]
1000f668:	6094      	str	r4, [r2, #8]
1000f66a:	6098      	str	r0, [r3, #8]
            temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
1000f66c:	68d0      	ldr	r0, [r2, #12]
1000f66e:	68dc      	ldr	r4, [r3, #12]
1000f670:	60d4      	str	r4, [r2, #12]
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
1000f672:	3104      	adds	r1, #4
            temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
1000f674:	60d8      	str	r0, [r3, #12]
        for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
1000f676:	1a70      	subs	r0, r6, r1
1000f678:	4281      	cmp	r1, r0
1000f67a:	f102 0210 	add.w	r2, r2, #16
1000f67e:	f1a3 0310 	sub.w	r3, r3, #16
1000f682:	d3e7      	bcc.n	1000f654 <wc_AesSetKeyLocal.constprop.0+0x100>
        for (i = 1; i < aes->rounds; i++) {
1000f684:	f8dc 30f0 	ldr.w	r3, [ip, #240]	@ 0xf0
1000f688:	4664      	mov	r4, ip
1000f68a:	2b01      	cmp	r3, #1
1000f68c:	d9bb      	bls.n	1000f606 <wc_AesSetKeyLocal.constprop.0+0xb2>
1000f68e:	4b8e      	ldr	r3, [pc, #568]	@ (1000f8c8 <wc_AesSetKeyLocal.constprop.0+0x374>)
1000f690:	4a8e      	ldr	r2, [pc, #568]	@ (1000f8cc <wc_AesSetKeyLocal.constprop.0+0x378>)
1000f692:	f8cd b008 	str.w	fp, [sp, #8]
1000f696:	f04f 0e01 	mov.w	lr, #1
1000f69a:	46a3      	mov	fp, r4
1000f69c:	9703      	str	r7, [sp, #12]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
1000f69e:	e9d5 6004 	ldrd	r6, r0, [r5, #16]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[0], 0)) & 0xff);
1000f6a2:	b2f4      	uxtb	r4, r6
1000f6a4:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
1000f6a8:	69a9      	ldr	r1, [r5, #24]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[0], 0)) & 0xff);
1000f6aa:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
1000f6ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
1000f6b2:	ea4f 6a16 	mov.w	sl, r6, lsr #24
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
1000f6b6:	f852 9024 	ldr.w	r9, [r2, r4, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
1000f6ba:	b2c4      	uxtb	r4, r0
1000f6bc:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
1000f6c0:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
1000f6c4:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[0], 3)) & 0xff) ^
1000f6c8:	f813 a02a 	ldrb.w	sl, [r3, sl, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[1], 0)) & 0xff);
1000f6cc:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
1000f6d0:	f852 a02a 	ldr.w	sl, [r2, sl, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
1000f6d4:	f852 c024 	ldr.w	ip, [r2, r4, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[2], 0)) & 0xff);
1000f6d8:	b2cc      	uxtb	r4, r1
1000f6da:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
1000f6de:	ea8a 0a09 	eor.w	sl, sl, r9
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[2], 0)) & 0xff);
1000f6e2:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
1000f6e6:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
1000f6ea:	f3c1 4707 	ubfx	r7, r1, #16, #8
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
1000f6ee:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
1000f6f2:	9401      	str	r4, [sp, #4]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
1000f6f4:	f3c6 4407 	ubfx	r4, r6, #16, #8
1000f6f8:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
1000f6fc:	f3c6 2607 	ubfx	r6, r6, #8, #8
1000f700:	f506 7680 	add.w	r6, r6, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
1000f704:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
1000f708:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[0], 2)) & 0xff) ^
1000f70c:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
1000f710:	f506 7600 	add.w	r6, r6, #512	@ 0x200
1000f714:	f852 8024 	ldr.w	r8, [r2, r4, lsl #2]
1000f718:	f852 6026 	ldr.w	r6, [r2, r6, lsl #2]
1000f71c:	ea8a 0a08 	eor.w	sl, sl, r8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
1000f720:	f3c0 4407 	ubfx	r4, r0, #16, #8
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[0], 1)) & 0xff) ^
1000f724:	ea8a 0606 	eor.w	r6, sl, r6
            rk[0] =
1000f728:	612e      	str	r6, [r5, #16]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
1000f72a:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
1000f72e:	0e06      	lsrs	r6, r0, #24
1000f730:	f506 7680 	add.w	r6, r6, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
1000f734:	f3c0 2007 	ubfx	r0, r0, #8, #8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
1000f738:	f813 4024 	ldrb.w	r4, [r3, r4, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[1], 3)) & 0xff) ^
1000f73c:	f813 6026 	ldrb.w	r6, [r3, r6, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
1000f740:	f500 7080 	add.w	r0, r0, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[1], 2)) & 0xff) ^
1000f744:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[1], 1)) & 0xff) ^
1000f748:	f813 8020 	ldrb.w	r8, [r3, r0, lsl #2]
1000f74c:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
1000f750:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
1000f754:	f508 7800 	add.w	r8, r8, #512	@ 0x200
1000f758:	ea80 000c 	eor.w	r0, r0, ip
1000f75c:	4060      	eors	r0, r4
1000f75e:	f852 4028 	ldr.w	r4, [r2, r8, lsl #2]
1000f762:	4060      	eors	r0, r4
            rk[1] =
1000f764:	6168      	str	r0, [r5, #20]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
1000f766:	f507 7780 	add.w	r7, r7, #256	@ 0x100
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
1000f76a:	0e08      	lsrs	r0, r1, #24
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
1000f76c:	f3c1 2107 	ubfx	r1, r1, #8, #8
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
1000f770:	f500 7080 	add.w	r0, r0, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
1000f774:	f501 7180 	add.w	r1, r1, #256	@ 0x100
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
1000f778:	f813 7027 	ldrb.w	r7, [r3, r7, lsl #2]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[2], 3)) & 0xff) ^
1000f77c:	f813 4020 	ldrb.w	r4, [r3, r0, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
1000f780:	f813 0021 	ldrb.w	r0, [r3, r1, lsl #2]
1000f784:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
1000f788:	9c01      	ldr	r4, [sp, #4]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[2], 2)) & 0xff) ^
1000f78a:	f507 7780 	add.w	r7, r7, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[2], 1)) & 0xff) ^
1000f78e:	f500 7000 	add.w	r0, r0, #512	@ 0x200
1000f792:	f852 7027 	ldr.w	r7, [r2, r7, lsl #2]
1000f796:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
1000f79a:	4061      	eors	r1, r4
1000f79c:	4079      	eors	r1, r7
1000f79e:	4041      	eors	r1, r0
            rk[2] =
1000f7a0:	61a9      	str	r1, [r5, #24]
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[3], 3)) & 0xff) ^
1000f7a2:	69e9      	ldr	r1, [r5, #28]
1000f7a4:	0e08      	lsrs	r0, r1, #24
1000f7a6:	f500 7080 	add.w	r0, r0, #256	@ 0x100
        for (i = 1; i < aes->rounds; i++) {
1000f7aa:	3510      	adds	r5, #16
                GetTable(Td[0], GetTable(Te[1], GETBYTE(rk[3], 3)) & 0xff) ^
1000f7ac:	f813 6020 	ldrb.w	r6, [r3, r0, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
1000f7b0:	b2c8      	uxtb	r0, r1
1000f7b2:	f500 7080 	add.w	r0, r0, #256	@ 0x100
        for (i = 1; i < aes->rounds; i++) {
1000f7b6:	f10e 0e01 	add.w	lr, lr, #1
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
1000f7ba:	f813 4020 	ldrb.w	r4, [r3, r0, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
1000f7be:	f852 0026 	ldr.w	r0, [r2, r6, lsl #2]
                GetTable(Td[3], GetTable(Te[1], GETBYTE(rk[3], 0)) & 0xff);
1000f7c2:	f504 7440 	add.w	r4, r4, #768	@ 0x300
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
1000f7c6:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
1000f7ca:	4060      	eors	r0, r4
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
1000f7cc:	f3c1 4407 	ubfx	r4, r1, #16, #8
1000f7d0:	f504 7480 	add.w	r4, r4, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
1000f7d4:	f3c1 2107 	ubfx	r1, r1, #8, #8
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
1000f7d8:	f813 6024 	ldrb.w	r6, [r3, r4, lsl #2]
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
1000f7dc:	f501 7180 	add.w	r1, r1, #256	@ 0x100
1000f7e0:	f813 4021 	ldrb.w	r4, [r3, r1, lsl #2]
                GetTable(Td[1], GetTable(Te[1], GETBYTE(rk[3], 2)) & 0xff) ^
1000f7e4:	f506 7180 	add.w	r1, r6, #256	@ 0x100
                GetTable(Td[2], GetTable(Te[1], GETBYTE(rk[3], 1)) & 0xff) ^
1000f7e8:	f504 7400 	add.w	r4, r4, #512	@ 0x200
1000f7ec:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
1000f7f0:	4041      	eors	r1, r0
1000f7f2:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
1000f7f6:	4041      	eors	r1, r0
            rk[3] =
1000f7f8:	60e9      	str	r1, [r5, #12]
        for (i = 1; i < aes->rounds; i++) {
1000f7fa:	f8db 10f0 	ldr.w	r1, [fp, #240]	@ 0xf0
1000f7fe:	458e      	cmp	lr, r1
1000f800:	f4ff af4d 	bcc.w	1000f69e <wc_AesSetKeyLocal.constprop.0+0x14a>
1000f804:	465c      	mov	r4, fp
1000f806:	e9dd b702 	ldrd	fp, r7, [sp, #8]
    if (iv)
1000f80a:	2f00      	cmp	r7, #0
1000f80c:	f47f aefe 	bne.w	1000f60c <wc_AesSetKeyLocal.constprop.0+0xb8>
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
1000f810:	f8c4 70f8 	str.w	r7, [r4, #248]	@ 0xf8
1000f814:	f8cb 7004 	str.w	r7, [fp, #4]
1000f818:	f8cb 7008 	str.w	r7, [fp, #8]
1000f81c:	f8cb 700c 	str.w	r7, [fp, #12]
1000f820:	e700      	b.n	1000f624 <wc_AesSetKeyLocal.constprop.0+0xd0>
1000f822:	e9d4 ce01 	ldrd	ip, lr, [r4, #4]
1000f826:	4b28      	ldr	r3, [pc, #160]	@ (1000f8c8 <wc_AesSetKeyLocal.constprop.0+0x374>)
1000f828:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 1000f8d0 <wc_AesSetKeyLocal.constprop.0+0x37c>
1000f82c:	6820      	ldr	r0, [r4, #0]
1000f82e:	68e1      	ldr	r1, [r4, #12]
1000f830:	46a2      	mov	sl, r4
1000f832:	461a      	mov	r2, r3
1000f834:	4674      	mov	r4, lr
1000f836:	4663      	mov	r3, ip
1000f838:	f108 0928 	add.w	r9, r8, #40	@ 0x28
1000f83c:	4694      	mov	ip, r2
1000f83e:	46d6      	mov	lr, sl
1000f840:	e000      	b.n	1000f844 <wc_AesSetKeyLocal.constprop.0+0x2f0>
            rk += 4;
1000f842:	3610      	adds	r6, #16
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
1000f844:	b2ca      	uxtb	r2, r1
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f846:	ea4f 6a11 	mov.w	sl, r1, lsr #24
1000f84a:	f50a 7a80 	add.w	sl, sl, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
1000f84e:	f85c 2022 	ldr.w	r2, [ip, r2, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f852:	f81c a02a 	ldrb.w	sl, [ip, sl, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
1000f856:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f85a:	ea42 020a 	orr.w	r2, r2, sl
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
1000f85e:	f3c1 4a07 	ubfx	sl, r1, #16, #8
1000f862:	f50a 7a00 	add.w	sl, sl, #512	@ 0x200
1000f866:	f85c a02a 	ldr.w	sl, [ip, sl, lsl #2]
1000f86a:	f00a 4a7f 	and.w	sl, sl, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f86e:	ea82 020a 	eor.w	r2, r2, sl
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
1000f872:	f3c1 2a07 	ubfx	sl, r1, #8, #8
1000f876:	f50a 7a40 	add.w	sl, sl, #768	@ 0x300
1000f87a:	f85c a02a 	ldr.w	sl, [ip, sl, lsl #2]
1000f87e:	f40a 0a7f 	and.w	sl, sl, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f882:	ea82 020a 	eor.w	r2, r2, sl
                rcon[i];
1000f886:	f858 ab04 	ldr.w	sl, [r8], #4
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f88a:	ea82 020a 	eor.w	r2, r2, sl
1000f88e:	4050      	eors	r0, r2
            rk[5] = rk[1] ^ rk[4];
1000f890:	4043      	eors	r3, r0
            rk[6] = rk[2] ^ rk[5];
1000f892:	405c      	eors	r4, r3
            rk[7] = rk[3] ^ rk[6];
1000f894:	4061      	eors	r1, r4
            if (++i == 10)
1000f896:	45c1      	cmp	r9, r8
            rk[5] = rk[1] ^ rk[4];
1000f898:	e9c6 0304 	strd	r0, r3, [r6, #16]
            rk[7] = rk[3] ^ rk[6];
1000f89c:	e9c6 4106 	strd	r4, r1, [r6, #24]
            if (++i == 10)
1000f8a0:	d1cf      	bne.n	1000f842 <wc_AesSetKeyLocal.constprop.0+0x2ee>
1000f8a2:	4674      	mov	r4, lr
1000f8a4:	e6ac      	b.n	1000f600 <wc_AesSetKeyLocal.constprop.0+0xac>
1000f8a6:	e9d4 8e00 	ldrd	r8, lr, [r4]
1000f8aa:	e9d4 c102 	ldrd	ip, r1, [r4, #8]
1000f8ae:	4622      	mov	r2, r4
1000f8b0:	9501      	str	r5, [sp, #4]
1000f8b2:	4664      	mov	r4, ip
1000f8b4:	f8df 901c 	ldr.w	r9, [pc, #28]	@ 1000f8d4 <wc_AesSetKeyLocal.constprop.0+0x380>
1000f8b8:	4b03      	ldr	r3, [pc, #12]	@ (1000f8c8 <wc_AesSetKeyLocal.constprop.0+0x374>)
1000f8ba:	9702      	str	r7, [sp, #8]
1000f8bc:	4640      	mov	r0, r8
1000f8be:	4675      	mov	r5, lr
1000f8c0:	4694      	mov	ip, r2
1000f8c2:	e03d      	b.n	1000f940 <wc_AesSetKeyLocal.constprop.0+0x3ec>
1000f8c4:	00010101 	.word	0x00010101
1000f8c8:	1001b2c4 	.word	0x1001b2c4
1000f8cc:	1001a2c4 	.word	0x1001a2c4
1000f8d0:	1001c2c4 	.word	0x1001c2c4
1000f8d4:	1001c2c0 	.word	0x1001c2c0
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
1000f8d8:	f3c1 4e07 	ubfx	lr, r1, #16, #8
1000f8dc:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
1000f8e0:	f3c1 2807 	ubfx	r8, r1, #8, #8
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
1000f8e4:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
1000f8e8:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f8ec:	6937      	ldr	r7, [r6, #16]
1000f8ee:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
                (GetTable(Te[3], GETBYTE(temp, 2)) & 0x00ff0000) ^
1000f8f2:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
1000f8f6:	ea4e 0e08 	orr.w	lr, lr, r8
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
1000f8fa:	ea4f 6811 	mov.w	r8, r1, lsr #24
1000f8fe:	f508 7800 	add.w	r8, r8, #512	@ 0x200
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
1000f902:	ea8e 0e07 	eor.w	lr, lr, r7
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
1000f906:	f853 a028 	ldr.w	sl, [r3, r8, lsl #2]
            rk[13] = rk[ 5] ^ rk[12];
1000f90a:	6977      	ldr	r7, [r6, #20]
                (GetTable(Te[1], GETBYTE(temp, 0)) & 0x000000ff);
1000f90c:	fa5f f881 	uxtb.w	r8, r1
1000f910:	f508 7880 	add.w	r8, r8, #256	@ 0x100
                (GetTable(Te[2], GETBYTE(temp, 3)) & 0xff000000) ^
1000f914:	f00a 4a7f 	and.w	sl, sl, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 0)) & 0x000000ff);
1000f918:	f813 8028 	ldrb.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 1)) & 0x0000ff00) ^
1000f91c:	ea4a 0808 	orr.w	r8, sl, r8
1000f920:	ea8e 0e08 	eor.w	lr, lr, r8
            rk[12] = rk[ 4] ^
1000f924:	f8c6 e030 	str.w	lr, [r6, #48]	@ 0x30
            rk[13] = rk[ 5] ^ rk[12];
1000f928:	ea8e 0e07 	eor.w	lr, lr, r7
            rk[14] = rk[ 6] ^ rk[13];
1000f92c:	69b7      	ldr	r7, [r6, #24]
            rk[13] = rk[ 5] ^ rk[12];
1000f92e:	f8c6 e034 	str.w	lr, [r6, #52]	@ 0x34
            rk[14] = rk[ 6] ^ rk[13];
1000f932:	ea8e 0e07 	eor.w	lr, lr, r7
            rk[15] = rk[ 7] ^ rk[14];
1000f936:	ea82 020e 	eor.w	r2, r2, lr
1000f93a:	e9c6 e20e 	strd	lr, r2, [r6, #56]	@ 0x38
            rk += 8;
1000f93e:	3620      	adds	r6, #32
            temp = rk[ 7];
1000f940:	69f2      	ldr	r2, [r6, #28]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f942:	f859 af04 	ldr.w	sl, [r9, #4]!
            if (++i == 7)
1000f946:	4f42      	ldr	r7, [pc, #264]	@ (1000fa50 <wc_AesSetKeyLocal.constprop.0+0x4fc>)
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
1000f948:	fa5f fe82 	uxtb.w	lr, r2
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f94c:	ea4f 6812 	mov.w	r8, r2, lsr #24
1000f950:	f508 7880 	add.w	r8, r8, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
1000f954:	f853 e02e 	ldr.w	lr, [r3, lr, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f958:	f813 8028 	ldrb.w	r8, [r3, r8, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
1000f95c:	f40e 4e7f 	and.w	lr, lr, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f960:	ea4e 0e08 	orr.w	lr, lr, r8
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
1000f964:	f3c2 4807 	ubfx	r8, r2, #16, #8
1000f968:	f508 7800 	add.w	r8, r8, #512	@ 0x200
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f96c:	ea8e 0e0a 	eor.w	lr, lr, sl
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
1000f970:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f974:	f008 487f 	and.w	r8, r8, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f978:	ea8e 0e08 	eor.w	lr, lr, r8
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
1000f97c:	f3c2 2807 	ubfx	r8, r2, #8, #8
1000f980:	f508 7840 	add.w	r8, r8, #768	@ 0x300
            if (++i == 7)
1000f984:	454f      	cmp	r7, r9
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
1000f986:	f853 8028 	ldr.w	r8, [r3, r8, lsl #2]
1000f98a:	f408 087f 	and.w	r8, r8, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f98e:	ea8e 0e08 	eor.w	lr, lr, r8
1000f992:	ea80 000e 	eor.w	r0, r0, lr
            rk[ 9] = rk[ 1] ^ rk[ 8];
1000f996:	ea85 0500 	eor.w	r5, r5, r0
            rk[10] = rk[ 2] ^ rk[ 9];
1000f99a:	ea84 0405 	eor.w	r4, r4, r5
            rk[11] = rk[ 3] ^ rk[10];
1000f99e:	ea81 0104 	eor.w	r1, r1, r4
            rk[ 9] = rk[ 1] ^ rk[ 8];
1000f9a2:	e9c6 0508 	strd	r0, r5, [r6, #32]
            rk[11] = rk[ 3] ^ rk[10];
1000f9a6:	e9c6 410a 	strd	r4, r1, [r6, #40]	@ 0x28
            if (++i == 7)
1000f9aa:	d195      	bne.n	1000f8d8 <wc_AesSetKeyLocal.constprop.0+0x384>
1000f9ac:	9d01      	ldr	r5, [sp, #4]
1000f9ae:	9f02      	ldr	r7, [sp, #8]
1000f9b0:	4664      	mov	r4, ip
1000f9b2:	e625      	b.n	1000f600 <wc_AesSetKeyLocal.constprop.0+0xac>
1000f9b4:	e9d4 c902 	ldrd	ip, r9, [r4, #8]
1000f9b8:	4b26      	ldr	r3, [pc, #152]	@ (1000fa54 <wc_AesSetKeyLocal.constprop.0+0x500>)
1000f9ba:	f8d4 e000 	ldr.w	lr, [r4]
1000f9be:	6860      	ldr	r0, [r4, #4]
1000f9c0:	9501      	str	r5, [sp, #4]
1000f9c2:	461a      	mov	r2, r3
1000f9c4:	46a0      	mov	r8, r4
1000f9c6:	4663      	mov	r3, ip
1000f9c8:	f8df a090 	ldr.w	sl, [pc, #144]	@ 1000fa5c <wc_AesSetKeyLocal.constprop.0+0x508>
1000f9cc:	4675      	mov	r5, lr
1000f9ce:	464c      	mov	r4, r9
1000f9d0:	4694      	mov	ip, r2
1000f9d2:	e005      	b.n	1000f9e0 <wc_AesSetKeyLocal.constprop.0+0x48c>
            rk[10] = rk[ 4] ^ rk[ 9];
1000f9d4:	6932      	ldr	r2, [r6, #16]
1000f9d6:	4062      	eors	r2, r4
            rk[11] = rk[ 5] ^ rk[10];
1000f9d8:	4051      	eors	r1, r2
1000f9da:	e9c6 210a 	strd	r2, r1, [r6, #40]	@ 0x28
            rk += 6;
1000f9de:	3618      	adds	r6, #24
            temp = rk[ 5];
1000f9e0:	6971      	ldr	r1, [r6, #20]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f9e2:	f85a 9f04 	ldr.w	r9, [sl, #4]!
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
1000f9e6:	b2ca      	uxtb	r2, r1
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f9e8:	ea4f 6e11 	mov.w	lr, r1, lsr #24
1000f9ec:	f50e 7e80 	add.w	lr, lr, #256	@ 0x100
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
1000f9f0:	f85c 2022 	ldr.w	r2, [ip, r2, lsl #2]
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f9f4:	f81c e02e 	ldrb.w	lr, [ip, lr, lsl #2]
                (GetTable(Te[0], GETBYTE(temp, 0)) & 0x0000ff00) ^
1000f9f8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000f9fc:	ea42 020e 	orr.w	r2, r2, lr
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
1000fa00:	f3c1 4e07 	ubfx	lr, r1, #16, #8
1000fa04:	f50e 7e00 	add.w	lr, lr, #512	@ 0x200
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000fa08:	ea82 0209 	eor.w	r2, r2, r9
                (GetTable(Te[2], GETBYTE(temp, 2)) & 0xff000000) ^
1000fa0c:	f85c e02e 	ldr.w	lr, [ip, lr, lsl #2]
1000fa10:	f00e 4e7f 	and.w	lr, lr, #4278190080	@ 0xff000000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000fa14:	ea82 020e 	eor.w	r2, r2, lr
                (GetTable(Te[3], GETBYTE(temp, 1)) & 0x00ff0000) ^
1000fa18:	f3c1 2e07 	ubfx	lr, r1, #8, #8
1000fa1c:	f50e 7e40 	add.w	lr, lr, #768	@ 0x300
1000fa20:	f85c e02e 	ldr.w	lr, [ip, lr, lsl #2]
1000fa24:	f40e 0e7f 	and.w	lr, lr, #16711680	@ 0xff0000
                (GetTable(Te[1], GETBYTE(temp, 3)) & 0x000000ff) ^
1000fa28:	ea82 020e 	eor.w	r2, r2, lr
1000fa2c:	4055      	eors	r5, r2
            rk[ 7] = rk[ 1] ^ rk[ 6];
1000fa2e:	4068      	eors	r0, r5
            if (++i == 8)
1000fa30:	4a09      	ldr	r2, [pc, #36]	@ (1000fa58 <wc_AesSetKeyLocal.constprop.0+0x504>)
            rk[ 8] = rk[ 2] ^ rk[ 7];
1000fa32:	4043      	eors	r3, r0
            rk[ 9] = rk[ 3] ^ rk[ 8];
1000fa34:	405c      	eors	r4, r3
            if (++i == 8)
1000fa36:	4552      	cmp	r2, sl
            rk[ 7] = rk[ 1] ^ rk[ 6];
1000fa38:	e9c6 5006 	strd	r5, r0, [r6, #24]
            rk[ 9] = rk[ 3] ^ rk[ 8];
1000fa3c:	e9c6 3408 	strd	r3, r4, [r6, #32]
            if (++i == 8)
1000fa40:	d1c8      	bne.n	1000f9d4 <wc_AesSetKeyLocal.constprop.0+0x480>
1000fa42:	9d01      	ldr	r5, [sp, #4]
1000fa44:	4644      	mov	r4, r8
1000fa46:	e5db      	b.n	1000f600 <wc_AesSetKeyLocal.constprop.0+0xac>
1000fa48:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
    } /* wc_AesSetKeyLocal */
1000fa4c:	4770      	bx	lr
1000fa4e:	bf00      	nop
1000fa50:	1001c2dc 	.word	0x1001c2dc
1000fa54:	1001b2c4 	.word	0x1001b2c4
1000fa58:	1001c2e0 	.word	0x1001c2e0
1000fa5c:	1001c2c0 	.word	0x1001c2c0

1000fa60 <wc_AesSetKey>:
    {
1000fa60:	b410      	push	{r4}
1000fa62:	9c01      	ldr	r4, [sp, #4]
        if (aes == NULL) {
1000fa64:	b130      	cbz	r0, 1000fa74 <wc_AesSetKey+0x14>
        if (keylen > sizeof(aes->key)) {
1000fa66:	2af0      	cmp	r2, #240	@ 0xf0
1000fa68:	d804      	bhi.n	1000fa74 <wc_AesSetKey+0x14>
        return wc_AesSetKeyLocal(aes, userKey, keylen, iv, dir, 1);
1000fa6a:	9401      	str	r4, [sp, #4]
    } /* wc_AesSetKey() */
1000fa6c:	f85d 4b04 	ldr.w	r4, [sp], #4
        return wc_AesSetKeyLocal(aes, userKey, keylen, iv, dir, 1);
1000fa70:	f7ff bd70 	b.w	1000f554 <wc_AesSetKeyLocal.constprop.0>
    } /* wc_AesSetKey() */
1000fa74:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
1000fa78:	f85d 4b04 	ldr.w	r4, [sp], #4
1000fa7c:	4770      	bx	lr
1000fa7e:	bf00      	nop

1000fa80 <wc_AesEncryptDirect>:
        /* Allow direct access to one block encrypt */
        int wc_AesEncryptDirect(Aes* aes, byte* out, const byte* in)
        {
            int ret;

            if (aes == NULL)
1000fa80:	b190      	cbz	r0, 1000faa8 <wc_AesEncryptDirect+0x28>
        {
1000fa82:	b508      	push	{r3, lr}
1000fa84:	4613      	mov	r3, r2
1000fa86:	460a      	mov	r2, r1
1000fa88:	4619      	mov	r1, r3
    r = aes->rounds >> 1;
1000fa8a:	f8d0 30f0 	ldr.w	r3, [r0, #240]	@ 0xf0
1000fa8e:	085b      	lsrs	r3, r3, #1
    if (r > 7 || r == 0) {
1000fa90:	f103 3cff 	add.w	ip, r3, #4294967295	@ 0xffffffff
1000fa94:	f1bc 0f06 	cmp.w	ip, #6
1000fa98:	d803      	bhi.n	1000faa2 <wc_AesEncryptDirect+0x22>
    AesEncrypt_C(aes, inBlock, outBlock, r);
1000fa9a:	f7fe fe73 	bl	1000e784 <AesEncrypt_C>
    return 0;
1000fa9e:	2000      	movs	r0, #0
                return BAD_FUNC_ARG;
            VECTOR_REGISTERS_PUSH;
            ret = wc_AesEncrypt(aes, in, out);
            VECTOR_REGISTERS_POP;
            return ret;
        }
1000faa0:	bd08      	pop	{r3, pc}
        return KEYUSAGE_E;
1000faa2:	f06f 00e1 	mvn.w	r0, #225	@ 0xe1
        }
1000faa6:	bd08      	pop	{r3, pc}
                return BAD_FUNC_ARG;
1000faa8:	f06f 00ac 	mvn.w	r0, #172	@ 0xac
        }
1000faac:	4770      	bx	lr
1000faae:	bf00      	nop

1000fab0 <mxc_assert>:
};
const unsigned int num_leds = (sizeof(led_pin) / sizeof(mxc_gpio_cfg_t));

/******************************************************************************/
void mxc_assert(const char *expr, const char *file, int line)
{
1000fab0:	b508      	push	{r3, lr}
1000fab2:	4603      	mov	r3, r0
    printf("MXC_ASSERT %s #%d: (%s)\n", file, line, expr);
1000fab4:	4801      	ldr	r0, [pc, #4]	@ (1000fabc <mxc_assert+0xc>)
1000fab6:	f001 fe91 	bl	100117dc <printf>

    while (1) {}
1000faba:	e7fe      	b.n	1000faba <mxc_assert+0xa>
1000fabc:	1001c2ec 	.word	0x1001c2ec

1000fac0 <GPIO0_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 0 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO0_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO0));
1000fac0:	2000      	movs	r0, #0
1000fac2:	f000 bd79 	b.w	100105b8 <MXC_GPIO_Handler>
1000fac6:	bf00      	nop

1000fac8 <GPIO1_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 1 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO1_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO1));
1000fac8:	2001      	movs	r0, #1
1000faca:	f000 bd75 	b.w	100105b8 <MXC_GPIO_Handler>
1000face:	bf00      	nop

1000fad0 <Board_Init>:
}

/******************************************************************************/
int Board_Init(void)
{
1000fad0:	b510      	push	{r4, lr}
#ifndef __riscv
    int err;

    // Enable GPIO
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1000fad2:	2000      	movs	r0, #0
1000fad4:	f000 fb5c 	bl	10010190 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
1000fad8:	2001      	movs	r0, #1
1000fada:	f000 fb59 	bl	10010190 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1000fade:	2040      	movs	r0, #64	@ 0x40
1000fae0:	f000 fb56 	bl	10010190 <MXC_SYS_ClockEnable>
/******************************************************************************/
int Console_Init(void)
{
    int err;

    if ((err = MXC_UART_Init(ConsoleUart, CONSOLE_BAUD, MXC_UART_IBRO_CLK)) != E_NO_ERROR) {
1000fae4:	4b10      	ldr	r3, [pc, #64]	@ (1000fb28 <Board_Init+0x58>)
1000fae6:	2202      	movs	r2, #2
1000fae8:	6818      	ldr	r0, [r3, #0]
1000faea:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
1000faee:	f001 f891 	bl	10010c14 <MXC_UART_Init>
    if ((err = Console_Init()) < E_NO_ERROR) {
1000faf2:	1e04      	subs	r4, r0, #0
1000faf4:	db0c      	blt.n	1000fb10 <Board_Init+0x40>
    if ((err = PB_Init()) != E_NO_ERROR) {
1000faf6:	f000 f8eb 	bl	1000fcd0 <PB_Init>
1000fafa:	b958      	cbnz	r0, 1000fb14 <Board_Init+0x44>
    if ((err = LED_Init()) != E_NO_ERROR) {
1000fafc:	f000 f888 	bl	1000fc10 <LED_Init>
1000fb00:	4604      	mov	r4, r0
1000fb02:	b960      	cbnz	r0, 1000fb1e <Board_Init+0x4e>
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
1000fb04:	4b09      	ldr	r3, [pc, #36]	@ (1000fb2c <Board_Init+0x5c>)
    MXC_Delay(200000);
1000fb06:	480a      	ldr	r0, [pc, #40]	@ (1000fb30 <Board_Init+0x60>)
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
1000fb08:	2243      	movs	r2, #67	@ 0x43
1000fb0a:	60da      	str	r2, [r3, #12]
    MXC_Delay(200000);
1000fb0c:	f000 fabe 	bl	1001008c <MXC_Delay>
}
1000fb10:	4620      	mov	r0, r4
1000fb12:	bd10      	pop	{r4, pc}
        MXC_ASSERT_FAIL();
1000fb14:	4907      	ldr	r1, [pc, #28]	@ (1000fb34 <Board_Init+0x64>)
1000fb16:	4808      	ldr	r0, [pc, #32]	@ (1000fb38 <Board_Init+0x68>)
1000fb18:	226f      	movs	r2, #111	@ 0x6f
1000fb1a:	f7ff ffc9 	bl	1000fab0 <mxc_assert>
        MXC_ASSERT_FAIL();
1000fb1e:	4905      	ldr	r1, [pc, #20]	@ (1000fb34 <Board_Init+0x64>)
1000fb20:	4805      	ldr	r0, [pc, #20]	@ (1000fb38 <Board_Init+0x68>)
1000fb22:	2274      	movs	r2, #116	@ 0x74
1000fb24:	f7ff ffc4 	bl	1000fab0 <mxc_assert>
1000fb28:	20000030 	.word	0x20000030
1000fb2c:	40004400 	.word	0x40004400
1000fb30:	00030d40 	.word	0x00030d40
1000fb34:	1001c308 	.word	0x1001c308
1000fb38:	1001c370 	.word	0x1001c370

1000fb3c <NMI_Handler>:
}

/******************************************************************************/
void NMI_Handler(void)
{
    __NOP();
1000fb3c:	bf00      	nop
}
1000fb3e:	4770      	bx	lr

1000fb40 <_close>:
    return -1;
}
int _close(int file)
{
    return -1;
}
1000fb40:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000fb44:	4770      	bx	lr
1000fb46:	bf00      	nop

1000fb48 <_isatty>:
int _isatty(int file)
1000fb48:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000fb4c:	4770      	bx	lr
1000fb4e:	bf00      	nop

1000fb50 <_lseek>:
    return -1;
}
int _lseek(int file, off_t offset, int whence)
{
    return -1;
}
1000fb50:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000fb54:	4770      	bx	lr
1000fb56:	bf00      	nop

1000fb58 <_fstat>:
int _fstat(int file, struct stat *st)
{
    return -1;
}
1000fb58:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000fb5c:	4770      	bx	lr
1000fb5e:	bf00      	nop

1000fb60 <_read>:
   fgetc for stdio */
#if defined(__ICCARM__) || defined(__GNUC__)

#if defined(__GNUC__) // GNUC _read function prototype
int _read(int file, char *ptr, int len)
{
1000fb60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    size_t n;
#endif /*  */

    int num = 0; // count of number received.

    switch (file) {
1000fb62:	b9e0      	cbnz	r0, 1000fb9e <_read+0x3e>
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
1000fb64:	2a00      	cmp	r2, #0
1000fb66:	dd19      	ble.n	1000fb9c <_read+0x3c>
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
1000fb68:	4d10      	ldr	r5, [pc, #64]	@ (1000fbac <_read+0x4c>)
1000fb6a:	460e      	mov	r6, r1
1000fb6c:	188f      	adds	r7, r1, r2
        for (n = 0; n < len; n++) {
1000fb6e:	460c      	mov	r4, r1
1000fb70:	e002      	b.n	1000fb78 <_read+0x18>
1000fb72:	42bb      	cmp	r3, r7
1000fb74:	d00f      	beq.n	1000fb96 <_read+0x36>
                num++;
                ptr++;

                break;
            } else {
                ptr++;
1000fb76:	461c      	mov	r4, r3
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
1000fb78:	4628      	mov	r0, r5
1000fb7a:	f001 f943 	bl	10010e04 <MXC_UART_ReadCharacter>
1000fb7e:	b2c1      	uxtb	r1, r0
1000fb80:	7021      	strb	r1, [r4, #0]
            MXC_UART_WriteCharacter(MXC_UARTn, *ptr); // echo the byte.
1000fb82:	4628      	mov	r0, r5
1000fb84:	f001 f940 	bl	10010e08 <MXC_UART_WriteCharacter>
            if (*ptr == '\r') { // check for end of line.
1000fb88:	7822      	ldrb	r2, [r4, #0]
1000fb8a:	2a0d      	cmp	r2, #13
                ptr++;
1000fb8c:	f104 0301 	add.w	r3, r4, #1
            if (*ptr == '\r') { // check for end of line.
1000fb90:	d1ef      	bne.n	1000fb72 <_read+0x12>
                *ptr = '\n';
1000fb92:	230a      	movs	r3, #10
1000fb94:	7023      	strb	r3, [r4, #0]
                num++;
1000fb96:	f1c6 0601 	rsb	r6, r6, #1
1000fb9a:	19a0      	adds	r0, r4, r6
        errno = EBADF;
        return -1;
    }

    return num;
}
1000fb9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        errno = EBADF;
1000fb9e:	f005 fcb7 	bl	10015510 <__errno>
1000fba2:	2309      	movs	r3, #9
1000fba4:	6003      	str	r3, [r0, #0]
        return -1;
1000fba6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000fbaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000fbac:	40042000 	.word	0x40042000

1000fbb0 <_write>:

/* newlib/libc printf() will eventually call write() to get the data to the stdout */
#if defined(__GNUC__)
// GNUC _write function prototype
int _write(int file, char *ptr, int len)
{
1000fbb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
int __write(int file, const unsigned char *ptr, size_t len)
{
    size_t n;
#endif /* __GNUC__ */

    switch (file) {
1000fbb2:	1e43      	subs	r3, r0, #1
1000fbb4:	2b01      	cmp	r3, #1
1000fbb6:	d821      	bhi.n	1000fbfc <_write+0x4c>
    case STDOUT_FILENO:
    case STDERR_FILENO:

        // This function should be as fast as possible
        // So we'll forgo the UART driver for now
        for (n = 0; n < len; n++) {
1000fbb8:	2a00      	cmp	r2, #0
1000fbba:	4617      	mov	r7, r2
1000fbbc:	dd12      	ble.n	1000fbe4 <_write+0x34>
1000fbbe:	1e53      	subs	r3, r2, #1
            if (*ptr == '\n') {
                // Wait until there's room in the FIFO
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000fbc0:	4e12      	ldr	r6, [pc, #72]	@ (1000fc0c <_write+0x5c>)
1000fbc2:	1e4c      	subs	r4, r1, #1
1000fbc4:	18cd      	adds	r5, r1, r3
            if (*ptr == '\n') {
1000fbc6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1000fbca:	2b0a      	cmp	r3, #10
1000fbcc:	d00c      	beq.n	1000fbe8 <_write+0x38>

                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
            }

            // Wait until there's room in the FIFO
            while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000fbce:	480f      	ldr	r0, [pc, #60]	@ (1000fc0c <_write+0x5c>)
1000fbd0:	f001 f91e 	bl	10010e10 <MXC_UART_GetTXFIFOAvailable>
1000fbd4:	2800      	cmp	r0, #0
1000fbd6:	d0fa      	beq.n	1000fbce <_write+0x1e>

            MXC_UART_WriteCharacter(MXC_UARTn, *ptr++);
1000fbd8:	7821      	ldrb	r1, [r4, #0]
1000fbda:	4630      	mov	r0, r6
1000fbdc:	f001 f914 	bl	10010e08 <MXC_UART_WriteCharacter>
        for (n = 0; n < len; n++) {
1000fbe0:	42ac      	cmp	r4, r5
1000fbe2:	d1f0      	bne.n	1000fbc6 <_write+0x16>

        break;

    default:
        errno = EBADF;
        return -1;
1000fbe4:	4638      	mov	r0, r7
    }

    return len;
}
1000fbe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000fbe8:	4808      	ldr	r0, [pc, #32]	@ (1000fc0c <_write+0x5c>)
1000fbea:	f001 f911 	bl	10010e10 <MXC_UART_GetTXFIFOAvailable>
1000fbee:	2800      	cmp	r0, #0
1000fbf0:	d0fa      	beq.n	1000fbe8 <_write+0x38>
                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
1000fbf2:	210d      	movs	r1, #13
1000fbf4:	4630      	mov	r0, r6
1000fbf6:	f001 f907 	bl	10010e08 <MXC_UART_WriteCharacter>
1000fbfa:	e7e8      	b.n	1000fbce <_write+0x1e>
        errno = EBADF;
1000fbfc:	f005 fc88 	bl	10015510 <__errno>
1000fc00:	2309      	movs	r3, #9
1000fc02:	6003      	str	r3, [r0, #0]
        return -1;
1000fc04:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000fc08:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000fc0a:	bf00      	nop
1000fc0c:	40042000 	.word	0x40042000

1000fc10 <LED_Init>:
#include "led.h"
#include "mxc_device.h"

/******************************************************************************/
int LED_Init(void)
{
1000fc10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    /* setup GPIO for the LED */
    for (i = 0; i < num_leds; i++) {
1000fc12:	4b0d      	ldr	r3, [pc, #52]	@ (1000fc48 <LED_Init+0x38>)
1000fc14:	681f      	ldr	r7, [r3, #0]
1000fc16:	b1a7      	cbz	r7, 1000fc42 <LED_Init+0x32>
1000fc18:	2500      	movs	r5, #0
1000fc1a:	4c0c      	ldr	r4, [pc, #48]	@ (1000fc4c <LED_Init+0x3c>)
    int retval = E_NO_ERROR;
1000fc1c:	462e      	mov	r6, r5
//******************************************************************************
void LED_Off(unsigned int idx)
{
    MXC_ASSERT(idx < num_leds);
#if (LED_ON == 0)
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000fc1e:	e9d4 0100 	ldrd	r0, r1, [r4]
1000fc22:	f000 fc9b 	bl	1001055c <MXC_GPIO_OutSet>
        if (MXC_GPIO_Config(&led_pin[i]) != E_NO_ERROR) {
1000fc26:	4620      	mov	r0, r4
1000fc28:	f000 fb92 	bl	10010350 <MXC_GPIO_Config>
    for (i = 0; i < num_leds; i++) {
1000fc2c:	3501      	adds	r5, #1
            retval = E_UNKNOWN;
1000fc2e:	2800      	cmp	r0, #0
1000fc30:	bf18      	it	ne
1000fc32:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_leds; i++) {
1000fc36:	42af      	cmp	r7, r5
1000fc38:	f104 040c 	add.w	r4, r4, #12
1000fc3c:	d1ef      	bne.n	1000fc1e <LED_Init+0xe>
}
1000fc3e:	4630      	mov	r0, r6
1000fc40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1000fc42:	463e      	mov	r6, r7
}
1000fc44:	4630      	mov	r0, r6
1000fc46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000fc48:	1001c378 	.word	0x1001c378
1000fc4c:	1001c37c 	.word	0x1001c37c

1000fc50 <LED_On>:
    MXC_ASSERT(idx < num_leds);
1000fc50:	4b0b      	ldr	r3, [pc, #44]	@ (1000fc80 <LED_On+0x30>)
1000fc52:	681b      	ldr	r3, [r3, #0]
1000fc54:	4283      	cmp	r3, r0
{
1000fc56:	b510      	push	{r4, lr}
1000fc58:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
1000fc5a:	d90b      	bls.n	1000fc74 <LED_On+0x24>
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
1000fc5c:	4b09      	ldr	r3, [pc, #36]	@ (1000fc84 <LED_On+0x34>)
1000fc5e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000fc62:	eb03 0284 	add.w	r2, r3, r4, lsl #2
1000fc66:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1000fc6a:	6851      	ldr	r1, [r2, #4]
}
1000fc6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
1000fc70:	f000 bc8a 	b.w	10010588 <MXC_GPIO_OutClr>
    MXC_ASSERT(idx < num_leds);
1000fc74:	4904      	ldr	r1, [pc, #16]	@ (1000fc88 <LED_On+0x38>)
1000fc76:	4805      	ldr	r0, [pc, #20]	@ (1000fc8c <LED_On+0x3c>)
1000fc78:	223b      	movs	r2, #59	@ 0x3b
1000fc7a:	f7ff ff19 	bl	1000fab0 <mxc_assert>
1000fc7e:	e7ed      	b.n	1000fc5c <LED_On+0xc>
1000fc80:	1001c378 	.word	0x1001c378
1000fc84:	1001c37c 	.word	0x1001c37c
1000fc88:	1001c3bc 	.word	0x1001c3bc
1000fc8c:	1001c410 	.word	0x1001c410

1000fc90 <LED_Off>:
    MXC_ASSERT(idx < num_leds);
1000fc90:	4b0b      	ldr	r3, [pc, #44]	@ (1000fcc0 <LED_Off+0x30>)
1000fc92:	681b      	ldr	r3, [r3, #0]
1000fc94:	4283      	cmp	r3, r0
{
1000fc96:	b510      	push	{r4, lr}
1000fc98:	4604      	mov	r4, r0
    MXC_ASSERT(idx < num_leds);
1000fc9a:	d90b      	bls.n	1000fcb4 <LED_Off+0x24>
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000fc9c:	4b09      	ldr	r3, [pc, #36]	@ (1000fcc4 <LED_Off+0x34>)
1000fc9e:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000fca2:	eb03 0284 	add.w	r2, r3, r4, lsl #2
1000fca6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1000fcaa:	6851      	ldr	r1, [r2, #4]
#else
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
#endif
}
1000fcac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000fcb0:	f000 bc54 	b.w	1001055c <MXC_GPIO_OutSet>
    MXC_ASSERT(idx < num_leds);
1000fcb4:	4904      	ldr	r1, [pc, #16]	@ (1000fcc8 <LED_Off+0x38>)
1000fcb6:	4805      	ldr	r0, [pc, #20]	@ (1000fccc <LED_Off+0x3c>)
1000fcb8:	2246      	movs	r2, #70	@ 0x46
1000fcba:	f7ff fef9 	bl	1000fab0 <mxc_assert>
1000fcbe:	e7ed      	b.n	1000fc9c <LED_Off+0xc>
1000fcc0:	1001c378 	.word	0x1001c378
1000fcc4:	1001c37c 	.word	0x1001c37c
1000fcc8:	1001c3bc 	.word	0x1001c3bc
1000fccc:	1001c410 	.word	0x1001c410

1000fcd0 <PB_Init>:
#include "mxc_assert.h"
#include "pb.h"

/******************************************************************************/
int PB_Init(void)
{
1000fcd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    // Enable pushbutton inputs
    for (i = 0; i < num_pbs; i++) {
1000fcd2:	4b0b      	ldr	r3, [pc, #44]	@ (1000fd00 <PB_Init+0x30>)
1000fcd4:	681f      	ldr	r7, [r3, #0]
1000fcd6:	b187      	cbz	r7, 1000fcfa <PB_Init+0x2a>
1000fcd8:	2400      	movs	r4, #0
1000fcda:	4d0a      	ldr	r5, [pc, #40]	@ (1000fd04 <PB_Init+0x34>)
    int retval = E_NO_ERROR;
1000fcdc:	4626      	mov	r6, r4
        if (MXC_GPIO_Config(&pb_pin[i]) != E_NO_ERROR) {
1000fcde:	4628      	mov	r0, r5
1000fce0:	f000 fb36 	bl	10010350 <MXC_GPIO_Config>
    for (i = 0; i < num_pbs; i++) {
1000fce4:	3401      	adds	r4, #1
            retval = E_UNKNOWN;
1000fce6:	2800      	cmp	r0, #0
1000fce8:	bf18      	it	ne
1000fcea:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_pbs; i++) {
1000fcee:	42bc      	cmp	r4, r7
1000fcf0:	f105 050c 	add.w	r5, r5, #12
1000fcf4:	d1f3      	bne.n	1000fcde <PB_Init+0xe>
        }
    }

    return retval;
}
1000fcf6:	4630      	mov	r0, r6
1000fcf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1000fcfa:	463e      	mov	r6, r7
}
1000fcfc:	4630      	mov	r0, r6
1000fcfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000fd00:	1001c3a0 	.word	0x1001c3a0
1000fd04:	1001c3a4 	.word	0x1001c3a4

1000fd08 <Reset_Handler>:
1000fd08:	4847      	ldr	r0, [pc, #284]	@ (1000fe28 <LPCMP_IRQHandler+0x2>)
1000fd0a:	4685      	mov	sp, r0
1000fd0c:	4847      	ldr	r0, [pc, #284]	@ (1000fe2c <LPCMP_IRQHandler+0x6>)
1000fd0e:	4780      	blx	r0
1000fd10:	b980      	cbnz	r0, 1000fd34 <.SKIPRAMINIT>
1000fd12:	4947      	ldr	r1, [pc, #284]	@ (1000fe30 <LPCMP_IRQHandler+0xa>)
1000fd14:	4a47      	ldr	r2, [pc, #284]	@ (1000fe34 <LPCMP_IRQHandler+0xe>)
1000fd16:	4b48      	ldr	r3, [pc, #288]	@ (1000fe38 <LPCMP_IRQHandler+0x12>)
1000fd18:	1a9b      	subs	r3, r3, r2
1000fd1a:	dd03      	ble.n	1000fd24 <Reset_Handler+0x1c>
1000fd1c:	3b04      	subs	r3, #4
1000fd1e:	58c8      	ldr	r0, [r1, r3]
1000fd20:	50d0      	str	r0, [r2, r3]
1000fd22:	dcfb      	bgt.n	1000fd1c <Reset_Handler+0x14>
1000fd24:	4945      	ldr	r1, [pc, #276]	@ (1000fe3c <LPCMP_IRQHandler+0x16>)
1000fd26:	4a46      	ldr	r2, [pc, #280]	@ (1000fe40 <LPCMP_IRQHandler+0x1a>)
1000fd28:	2000      	movs	r0, #0
1000fd2a:	4291      	cmp	r1, r2
1000fd2c:	bfbc      	itt	lt
1000fd2e:	f841 0b04 	strlt.w	r0, [r1], #4
1000fd32:	e7fa      	blt.n	1000fd2a <Reset_Handler+0x22>

1000fd34 <.SKIPRAMINIT>:
1000fd34:	4843      	ldr	r0, [pc, #268]	@ (1000fe44 <LPCMP_IRQHandler+0x1e>)
1000fd36:	4780      	blx	r0
1000fd38:	4843      	ldr	r0, [pc, #268]	@ (1000fe48 <LPCMP_IRQHandler+0x22>)
1000fd3a:	4780      	blx	r0
1000fd3c:	4843      	ldr	r0, [pc, #268]	@ (1000fe4c <LPCMP_IRQHandler+0x26>)
1000fd3e:	4780      	blx	r0

1000fd40 <.SPIN>:
1000fd40:	f7ff fffe 	bl	1000fd40 <.SPIN>
1000fd44:	e7fe      	b.n	1000fd44 <.SPIN+0x4>

1000fd46 <HardFault_Handler>:
1000fd46:	e7fe      	b.n	1000fd46 <HardFault_Handler>

1000fd48 <MemManage_Handler>:
1000fd48:	e7fe      	b.n	1000fd48 <MemManage_Handler>

1000fd4a <BusFault_Handler>:
1000fd4a:	e7fe      	b.n	1000fd4a <BusFault_Handler>

1000fd4c <UsageFault_Handler>:
1000fd4c:	e7fe      	b.n	1000fd4c <UsageFault_Handler>

1000fd4e <SVC_Handler>:
1000fd4e:	e7fe      	b.n	1000fd4e <SVC_Handler>

1000fd50 <DebugMon_Handler>:
1000fd50:	e7fe      	b.n	1000fd50 <DebugMon_Handler>

1000fd52 <PendSV_Handler>:
1000fd52:	e7fe      	b.n	1000fd52 <PendSV_Handler>

1000fd54 <SysTick_Handler>:
1000fd54:	e7fe      	b.n	1000fd54 <SysTick_Handler>

1000fd56 <Default_Handler>:
1000fd56:	e7fe      	b.n	1000fd56 <Default_Handler>

1000fd58 <PF_IRQHandler>:
1000fd58:	e7fe      	b.n	1000fd58 <PF_IRQHandler>

1000fd5a <WDT0_IRQHandler>:
1000fd5a:	e7fe      	b.n	1000fd5a <WDT0_IRQHandler>

1000fd5c <RSV02_IRQHandler>:
1000fd5c:	e7fe      	b.n	1000fd5c <RSV02_IRQHandler>

1000fd5e <RTC_IRQHandler>:
1000fd5e:	e7fe      	b.n	1000fd5e <RTC_IRQHandler>

1000fd60 <TRNG_IRQHandler>:
1000fd60:	e7fe      	b.n	1000fd60 <TRNG_IRQHandler>

1000fd62 <TMR0_IRQHandler>:
1000fd62:	e7fe      	b.n	1000fd62 <TMR0_IRQHandler>

1000fd64 <TMR1_IRQHandler>:
1000fd64:	e7fe      	b.n	1000fd64 <TMR1_IRQHandler>

1000fd66 <TMR2_IRQHandler>:
1000fd66:	e7fe      	b.n	1000fd66 <TMR2_IRQHandler>

1000fd68 <TMR3_IRQHandler>:
1000fd68:	e7fe      	b.n	1000fd68 <TMR3_IRQHandler>

1000fd6a <TMR4_IRQHandler>:
1000fd6a:	e7fe      	b.n	1000fd6a <TMR4_IRQHandler>

1000fd6c <TMR5_IRQHandler>:
1000fd6c:	e7fe      	b.n	1000fd6c <TMR5_IRQHandler>

1000fd6e <RSV11_IRQHandler>:
1000fd6e:	e7fe      	b.n	1000fd6e <RSV11_IRQHandler>

1000fd70 <RSV12_IRQHandler>:
1000fd70:	e7fe      	b.n	1000fd70 <RSV12_IRQHandler>

1000fd72 <I2C0_IRQHandler>:
1000fd72:	e7fe      	b.n	1000fd72 <I2C0_IRQHandler>

1000fd74 <UART0_IRQHandler>:
1000fd74:	e7fe      	b.n	1000fd74 <UART0_IRQHandler>

1000fd76 <UART1_IRQHandler>:
1000fd76:	e7fe      	b.n	1000fd76 <UART1_IRQHandler>

1000fd78 <SPI1_IRQHandler>:
1000fd78:	e7fe      	b.n	1000fd78 <SPI1_IRQHandler>

1000fd7a <RSV17_IRQHandler>:
1000fd7a:	e7fe      	b.n	1000fd7a <RSV17_IRQHandler>

1000fd7c <RSV18_IRQHandler>:
1000fd7c:	e7fe      	b.n	1000fd7c <RSV18_IRQHandler>

1000fd7e <RSV19_IRQHandler>:
1000fd7e:	e7fe      	b.n	1000fd7e <RSV19_IRQHandler>

1000fd80 <ADC_IRQHandler>:
1000fd80:	e7fe      	b.n	1000fd80 <ADC_IRQHandler>

1000fd82 <RSV21_IRQHandler>:
1000fd82:	e7fe      	b.n	1000fd82 <RSV21_IRQHandler>

1000fd84 <RSV22_IRQHandler>:
1000fd84:	e7fe      	b.n	1000fd84 <RSV22_IRQHandler>

1000fd86 <FLC0_IRQHandler>:
1000fd86:	e7fe      	b.n	1000fd86 <FLC0_IRQHandler>
1000fd88:	e7fe      	b.n	1000fd88 <FLC0_IRQHandler+0x2>
1000fd8a:	e7fe      	b.n	1000fd8a <FLC0_IRQHandler+0x4>

1000fd8c <GPIO2_IRQHandler>:
1000fd8c:	e7fe      	b.n	1000fd8c <GPIO2_IRQHandler>

1000fd8e <RSV27_IRQHandler>:
1000fd8e:	e7fe      	b.n	1000fd8e <RSV27_IRQHandler>

1000fd90 <DMA0_IRQHandler>:
1000fd90:	e7fe      	b.n	1000fd90 <DMA0_IRQHandler>

1000fd92 <DMA1_IRQHandler>:
1000fd92:	e7fe      	b.n	1000fd92 <DMA1_IRQHandler>

1000fd94 <DMA2_IRQHandler>:
1000fd94:	e7fe      	b.n	1000fd94 <DMA2_IRQHandler>

1000fd96 <DMA3_IRQHandler>:
1000fd96:	e7fe      	b.n	1000fd96 <DMA3_IRQHandler>

1000fd98 <RSV32_IRQHandler>:
1000fd98:	e7fe      	b.n	1000fd98 <RSV32_IRQHandler>

1000fd9a <RSV33_IRQHandler>:
1000fd9a:	e7fe      	b.n	1000fd9a <RSV33_IRQHandler>

1000fd9c <UART2_IRQHandler>:
1000fd9c:	e7fe      	b.n	1000fd9c <UART2_IRQHandler>

1000fd9e <RSV35_IRQHandler>:
1000fd9e:	e7fe      	b.n	1000fd9e <RSV35_IRQHandler>

1000fda0 <I2C1_IRQHandler>:
1000fda0:	e7fe      	b.n	1000fda0 <I2C1_IRQHandler>

1000fda2 <RSV37_IRQHandler>:
1000fda2:	e7fe      	b.n	1000fda2 <RSV37_IRQHandler>

1000fda4 <RSV38_IRQHandler>:
1000fda4:	e7fe      	b.n	1000fda4 <RSV38_IRQHandler>

1000fda6 <RSV39_IRQHandler>:
1000fda6:	e7fe      	b.n	1000fda6 <RSV39_IRQHandler>

1000fda8 <RSV40_IRQHandler>:
1000fda8:	e7fe      	b.n	1000fda8 <RSV40_IRQHandler>

1000fdaa <RSV41_IRQHandler>:
1000fdaa:	e7fe      	b.n	1000fdaa <RSV41_IRQHandler>

1000fdac <RSV42_IRQHandler>:
1000fdac:	e7fe      	b.n	1000fdac <RSV42_IRQHandler>

1000fdae <RSV43_IRQHandler>:
1000fdae:	e7fe      	b.n	1000fdae <RSV43_IRQHandler>

1000fdb0 <RSV44_IRQHandler>:
1000fdb0:	e7fe      	b.n	1000fdb0 <RSV44_IRQHandler>

1000fdb2 <RSV45_IRQHandler>:
1000fdb2:	e7fe      	b.n	1000fdb2 <RSV45_IRQHandler>

1000fdb4 <RSV46_IRQHandler>:
1000fdb4:	e7fe      	b.n	1000fdb4 <RSV46_IRQHandler>

1000fdb6 <RSV47_IRQHandler>:
1000fdb6:	e7fe      	b.n	1000fdb6 <RSV47_IRQHandler>

1000fdb8 <RSV48_IRQHandler>:
1000fdb8:	e7fe      	b.n	1000fdb8 <RSV48_IRQHandler>

1000fdba <RSV49_IRQHandler>:
1000fdba:	e7fe      	b.n	1000fdba <RSV49_IRQHandler>

1000fdbc <RSV50_IRQHandler>:
1000fdbc:	e7fe      	b.n	1000fdbc <RSV50_IRQHandler>

1000fdbe <RSV51_IRQHandler>:
1000fdbe:	e7fe      	b.n	1000fdbe <RSV51_IRQHandler>

1000fdc0 <RSV52_IRQHandler>:
1000fdc0:	e7fe      	b.n	1000fdc0 <RSV52_IRQHandler>

1000fdc2 <WUT_IRQHandler>:
1000fdc2:	e7fe      	b.n	1000fdc2 <WUT_IRQHandler>

1000fdc4 <GPIOWAKE_IRQHandler>:
1000fdc4:	e7fe      	b.n	1000fdc4 <GPIOWAKE_IRQHandler>

1000fdc6 <RSV55_IRQHandler>:
1000fdc6:	e7fe      	b.n	1000fdc6 <RSV55_IRQHandler>

1000fdc8 <SPI0_IRQHandler>:
1000fdc8:	e7fe      	b.n	1000fdc8 <SPI0_IRQHandler>

1000fdca <WDT1_IRQHandler>:
1000fdca:	e7fe      	b.n	1000fdca <WDT1_IRQHandler>

1000fdcc <RSV58_IRQHandler>:
1000fdcc:	e7fe      	b.n	1000fdcc <RSV58_IRQHandler>

1000fdce <PT_IRQHandler>:
1000fdce:	e7fe      	b.n	1000fdce <PT_IRQHandler>

1000fdd0 <RSV60_IRQHandler>:
1000fdd0:	e7fe      	b.n	1000fdd0 <RSV60_IRQHandler>

1000fdd2 <RSV61_IRQHandler>:
1000fdd2:	e7fe      	b.n	1000fdd2 <RSV61_IRQHandler>

1000fdd4 <I2C2_IRQHandler>:
1000fdd4:	e7fe      	b.n	1000fdd4 <I2C2_IRQHandler>

1000fdd6 <RISCV_IRQHandler>:
1000fdd6:	e7fe      	b.n	1000fdd6 <RISCV_IRQHandler>

1000fdd8 <RSV64_IRQHandler>:
1000fdd8:	e7fe      	b.n	1000fdd8 <RSV64_IRQHandler>

1000fdda <RSV65_IRQHandler>:
1000fdda:	e7fe      	b.n	1000fdda <RSV65_IRQHandler>

1000fddc <RSV66_IRQHandler>:
1000fddc:	e7fe      	b.n	1000fddc <RSV66_IRQHandler>

1000fdde <OWM_IRQHandler>:
1000fdde:	e7fe      	b.n	1000fdde <OWM_IRQHandler>

1000fde0 <RSV68_IRQHandler>:
1000fde0:	e7fe      	b.n	1000fde0 <RSV68_IRQHandler>

1000fde2 <RSV69_IRQHandler>:
1000fde2:	e7fe      	b.n	1000fde2 <RSV69_IRQHandler>

1000fde4 <RSV70_IRQHandler>:
1000fde4:	e7fe      	b.n	1000fde4 <RSV70_IRQHandler>

1000fde6 <RSV71_IRQHandler>:
1000fde6:	e7fe      	b.n	1000fde6 <RSV71_IRQHandler>

1000fde8 <RSV72_IRQHandler>:
1000fde8:	e7fe      	b.n	1000fde8 <RSV72_IRQHandler>

1000fdea <RSV73_IRQHandler>:
1000fdea:	e7fe      	b.n	1000fdea <RSV73_IRQHandler>

1000fdec <RSV74_IRQHandler>:
1000fdec:	e7fe      	b.n	1000fdec <RSV74_IRQHandler>

1000fdee <RSV75_IRQHandler>:
1000fdee:	e7fe      	b.n	1000fdee <RSV75_IRQHandler>

1000fdf0 <RSV76_IRQHandler>:
1000fdf0:	e7fe      	b.n	1000fdf0 <RSV76_IRQHandler>

1000fdf2 <RSV77_IRQHandler>:
1000fdf2:	e7fe      	b.n	1000fdf2 <RSV77_IRQHandler>

1000fdf4 <RSV78_IRQHandler>:
1000fdf4:	e7fe      	b.n	1000fdf4 <RSV78_IRQHandler>

1000fdf6 <RSV79_IRQHandler>:
1000fdf6:	e7fe      	b.n	1000fdf6 <RSV79_IRQHandler>

1000fdf8 <RSV80_IRQHandler>:
1000fdf8:	e7fe      	b.n	1000fdf8 <RSV80_IRQHandler>

1000fdfa <RSV81_IRQHandler>:
1000fdfa:	e7fe      	b.n	1000fdfa <RSV81_IRQHandler>

1000fdfc <ECC_IRQHandler>:
1000fdfc:	e7fe      	b.n	1000fdfc <ECC_IRQHandler>

1000fdfe <DVS_IRQHandler>:
1000fdfe:	e7fe      	b.n	1000fdfe <DVS_IRQHandler>

1000fe00 <SIMO_IRQHandler>:
1000fe00:	e7fe      	b.n	1000fe00 <SIMO_IRQHandler>

1000fe02 <RSV85_IRQHandler>:
1000fe02:	e7fe      	b.n	1000fe02 <RSV85_IRQHandler>

1000fe04 <RSV86_IRQHandler>:
1000fe04:	e7fe      	b.n	1000fe04 <RSV86_IRQHandler>

1000fe06 <RSV87_IRQHandler>:
1000fe06:	e7fe      	b.n	1000fe06 <RSV87_IRQHandler>

1000fe08 <UART3_IRQHandler>:
1000fe08:	e7fe      	b.n	1000fe08 <UART3_IRQHandler>

1000fe0a <RSV89_IRQHandler>:
1000fe0a:	e7fe      	b.n	1000fe0a <RSV89_IRQHandler>

1000fe0c <RSV90_IRQHandler>:
1000fe0c:	e7fe      	b.n	1000fe0c <RSV90_IRQHandler>

1000fe0e <PCIF_IRQHandler>:
1000fe0e:	e7fe      	b.n	1000fe0e <PCIF_IRQHandler>

1000fe10 <RSV92_IRQHandler>:
1000fe10:	e7fe      	b.n	1000fe10 <RSV92_IRQHandler>

1000fe12 <RSV93_IRQHandler>:
1000fe12:	e7fe      	b.n	1000fe12 <RSV93_IRQHandler>

1000fe14 <RSV94_IRQHandler>:
1000fe14:	e7fe      	b.n	1000fe14 <RSV94_IRQHandler>

1000fe16 <RSV95_IRQHandler>:
1000fe16:	e7fe      	b.n	1000fe16 <RSV95_IRQHandler>

1000fe18 <RSV96_IRQHandler>:
1000fe18:	e7fe      	b.n	1000fe18 <RSV96_IRQHandler>

1000fe1a <AES_IRQHandler>:
1000fe1a:	e7fe      	b.n	1000fe1a <AES_IRQHandler>

1000fe1c <RSV98_IRQHandler>:
1000fe1c:	e7fe      	b.n	1000fe1c <RSV98_IRQHandler>

1000fe1e <I2S_IRQHandler>:
1000fe1e:	e7fe      	b.n	1000fe1e <I2S_IRQHandler>

1000fe20 <CNN_FIFO_IRQHandler>:
1000fe20:	e7fe      	b.n	1000fe20 <CNN_FIFO_IRQHandler>

1000fe22 <CNN_IRQHandler>:
1000fe22:	e7fe      	b.n	1000fe22 <CNN_IRQHandler>

1000fe24 <RSV102_IRQHandler>:
1000fe24:	e7fe      	b.n	1000fe24 <RSV102_IRQHandler>

1000fe26 <LPCMP_IRQHandler>:
1000fe26:	e7fe      	b.n	1000fe26 <LPCMP_IRQHandler>
1000fe28:	20020000 	.word	0x20020000
1000fe2c:	1000fef5 	.word	0x1000fef5
1000fe30:	1001ca18 	.word	0x1001ca18
1000fe34:	20000000 	.word	0x20000000
1000fe38:	200006f8 	.word	0x200006f8
1000fe3c:	20000800 	.word	0x20000800
1000fe40:	20001740 	.word	0x20001740
1000fe44:	1000fef9 	.word	0x1000fef9
1000fe48:	10015539 	.word	0x10015539
1000fe4c:	1000e411 	.word	0x1000e411

1000fe50 <_sbrk>:
extern unsigned int __HeapLimit;
caddr_t _sbrk(int incr)
{
    char *prev_heap_end;

    if (heap_end == 0) {
1000fe50:	4a0b      	ldr	r2, [pc, #44]	@ (1000fe80 <_sbrk+0x30>)
{
1000fe52:	b508      	push	{r3, lr}
1000fe54:	4603      	mov	r3, r0
    if (heap_end == 0) {
1000fe56:	6810      	ldr	r0, [r2, #0]
1000fe58:	b128      	cbz	r0, 1000fe66 <_sbrk+0x16>
        heap_end = (caddr_t)&__HeapBase;
    }
    prev_heap_end = heap_end;

    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000fe5a:	490a      	ldr	r1, [pc, #40]	@ (1000fe84 <_sbrk+0x34>)
1000fe5c:	4403      	add	r3, r0
1000fe5e:	428b      	cmp	r3, r1
1000fe60:	d807      	bhi.n	1000fe72 <_sbrk+0x22>
        errno = ENOMEM;
        return (caddr_t)-1;
    }

    heap_end += incr;
1000fe62:	6013      	str	r3, [r2, #0]

    return (caddr_t)prev_heap_end;
}
1000fe64:	bd08      	pop	{r3, pc}
        heap_end = (caddr_t)&__HeapBase;
1000fe66:	4808      	ldr	r0, [pc, #32]	@ (1000fe88 <_sbrk+0x38>)
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000fe68:	4906      	ldr	r1, [pc, #24]	@ (1000fe84 <_sbrk+0x34>)
        heap_end = (caddr_t)&__HeapBase;
1000fe6a:	6010      	str	r0, [r2, #0]
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000fe6c:	4403      	add	r3, r0
1000fe6e:	428b      	cmp	r3, r1
1000fe70:	d9f7      	bls.n	1000fe62 <_sbrk+0x12>
        errno = ENOMEM;
1000fe72:	f005 fb4d 	bl	10015510 <__errno>
1000fe76:	230c      	movs	r3, #12
1000fe78:	6003      	str	r3, [r0, #0]
        return (caddr_t)-1;
1000fe7a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000fe7e:	bd08      	pop	{r3, pc}
1000fe80:	20000c38 	.word	0x20000c38
1000fe84:	2001f000 	.word	0x2001f000
1000fe88:	20001748 	.word	0x20001748

1000fe8c <SystemCoreClockUpdate>:
__weak void SystemCoreClockUpdate(void)
{
    uint32_t base_freq, div, clk_src;

    // Get the clock source and frequency
    clk_src = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL);
1000fe8c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
1000fe90:	689a      	ldr	r2, [r3, #8]
1000fe92:	f402 6260 	and.w	r2, r2, #3584	@ 0xe00
    switch (clk_src) {
1000fe96:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
1000fe9a:	d020      	beq.n	1000fede <SystemCoreClockUpdate+0x52>
1000fe9c:	d911      	bls.n	1000fec2 <SystemCoreClockUpdate+0x36>
1000fe9e:	f5b2 6f40 	cmp.w	r2, #3072	@ 0xc00
1000fea2:	d017      	beq.n	1000fed4 <SystemCoreClockUpdate+0x48>
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_INRO:
        base_freq = INRO_FREQ;
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_IPO:
        base_freq = IPO_FREQ;
1000fea4:	4b0f      	ldr	r3, [pc, #60]	@ (1000fee4 <SystemCoreClockUpdate+0x58>)
1000fea6:	4910      	ldr	r1, [pc, #64]	@ (1000fee8 <SystemCoreClockUpdate+0x5c>)
1000fea8:	f5b2 6f60 	cmp.w	r2, #3584	@ 0xe00
1000feac:	bf18      	it	ne
1000feae:	460b      	movne	r3, r1
        // This code should never execute, however, initialize to safe value.
        base_freq = HIRC_FREQ;
        break;
    }

    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1000feb0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000

    SystemCoreClock = base_freq >> div;
1000feb4:	490d      	ldr	r1, [pc, #52]	@ (1000feec <SystemCoreClockUpdate+0x60>)
    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1000feb6:	6892      	ldr	r2, [r2, #8]
1000feb8:	f3c2 1282 	ubfx	r2, r2, #6, #3
    SystemCoreClock = base_freq >> div;
1000febc:	40d3      	lsrs	r3, r2
1000febe:	600b      	str	r3, [r1, #0]
}
1000fec0:	4770      	bx	lr
    switch (clk_src) {
1000fec2:	b152      	cbz	r2, 1000feda <SystemCoreClockUpdate+0x4e>
        base_freq = IPO_FREQ;
1000fec4:	4908      	ldr	r1, [pc, #32]	@ (1000fee8 <SystemCoreClockUpdate+0x5c>)
1000fec6:	f247 5330 	movw	r3, #30000	@ 0x7530
1000feca:	f5b2 6fc0 	cmp.w	r2, #1536	@ 0x600
1000fece:	bf18      	it	ne
1000fed0:	460b      	movne	r3, r1
1000fed2:	e7ed      	b.n	1000feb0 <SystemCoreClockUpdate+0x24>
        base_freq = ERTCO_FREQ;
1000fed4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
1000fed8:	e7ea      	b.n	1000feb0 <SystemCoreClockUpdate+0x24>
        base_freq = ISO_FREQ;
1000feda:	4b05      	ldr	r3, [pc, #20]	@ (1000fef0 <SystemCoreClockUpdate+0x64>)
1000fedc:	e7e8      	b.n	1000feb0 <SystemCoreClockUpdate+0x24>
        base_freq = IBRO_FREQ;
1000fede:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
1000fee2:	e7e5      	b.n	1000feb0 <SystemCoreClockUpdate+0x24>
1000fee4:	047868c0 	.word	0x047868c0
1000fee8:	05f5e100 	.word	0x05f5e100
1000feec:	20001740 	.word	0x20001740
1000fef0:	03938700 	.word	0x03938700

1000fef4 <PreInit>:
 */
__weak int PreInit(void)
{
    /* Do nothing */
    return 0;
}
1000fef4:	2000      	movs	r0, #0
1000fef6:	4770      	bx	lr

1000fef8 <SystemInit>:
 * You may over-ride this function in your program by defining a custom 
 *  SystemInit(), but care should be taken to reproduce the initialization
 *  steps or a non-functional system may result.
 */
__weak void SystemInit(void)
{
1000fef8:	b510      	push	{r4, lr}
    /* Configure the interrupt controller to use the application vector table in */
    /* the application space */
#if defined(__CC_ARM) || defined(__GNUC__)
    /* IAR sets the VTOR pointer incorrectly and causes stack corruption */
    SCB->VTOR = (uint32_t)__isr_vector;
1000fefa:	4c0a      	ldr	r4, [pc, #40]	@ (1000ff24 <SystemInit+0x2c>)
1000fefc:	4b0a      	ldr	r3, [pc, #40]	@ (1000ff28 <SystemInit+0x30>)
1000fefe:	60a3      	str	r3, [r4, #8]
#endif /* __CC_ARM || __GNUC__ */

    /* Enable instruction cache */
    MXC_ICC_Enable(MXC_ICC0);
1000ff00:	480a      	ldr	r0, [pc, #40]	@ (1000ff2c <SystemInit+0x34>)
1000ff02:	f000 fe37 	bl	10010b74 <MXC_ICC_Enable>

    /* Enable FPU on Cortex-M4, which occupies coprocessor slots 10 & 11 */
    /* Grant full access, per "Table B3-24 CPACR bit assignments". */
    /* DDI0403D "ARMv7-M Architecture Reference Manual" */
    SCB->CPACR |= SCB_CPACR_CP10_Msk | SCB_CPACR_CP11_Msk;
1000ff06:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
1000ff0a:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
1000ff0e:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
1000ff12:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
1000ff16:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();

    SystemCoreClockUpdate();
1000ff1a:	f7ff ffb7 	bl	1000fe8c <SystemCoreClockUpdate>

    Board_Init();
1000ff1e:	f7ff fdd7 	bl	1000fad0 <Board_Init>
}
1000ff22:	bd10      	pop	{r4, pc}
1000ff24:	e000ed00 	.word	0xe000ed00
1000ff28:	1000e000 	.word	0x1000e000
1000ff2c:	4002a000 	.word	0x4002a000

1000ff30 <MXC_DelayInit>:
    }
}

/* ************************************************************************** */
static void MXC_DelayInit(uint32_t us)
{
1000ff30:	b538      	push	{r3, r4, r5, lr}
    uint32_t starttick, reload, ticks, lastticks;

    // Record the current tick value and clear the overflow flag
    starttick = SysTick->VAL;
1000ff32:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000

    // Save the state of control register (and clear the overflow flag)
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1000ff36:	4918      	ldr	r1, [pc, #96]	@ (1000ff98 <MXC_DelayInit+0x68>)
    starttick = SysTick->VAL;
1000ff38:	699c      	ldr	r4, [r3, #24]
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1000ff3a:	691a      	ldr	r2, [r3, #16]
1000ff3c:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
1000ff40:	600a      	str	r2, [r1, #0]

    // If the SysTick is not running, configure and start it
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk)) {
1000ff42:	691a      	ldr	r2, [r3, #16]
1000ff44:	07d2      	lsls	r2, r2, #31
1000ff46:	d41f      	bmi.n	1000ff88 <MXC_DelayInit+0x58>
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
1000ff48:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1000ff4c:	2205      	movs	r2, #5
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
1000ff4e:	615c      	str	r4, [r3, #20]
        starttick = SysTick_VAL_CURRENT_Msk;
        reload = SysTick_LOAD_RELOAD_Msk + 1;
1000ff50:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
1000ff54:	619c      	str	r4, [r3, #24]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1000ff56:	611a      	str	r2, [r3, #16]
    } else {
        reload = SysTick->LOAD + 1; // get the current reload value
    }

    // Calculate the total number of ticks to delay
    ticks = (uint32_t)(((uint64_t)us * (uint64_t)SystemCoreClock) / 1000000);
1000ff58:	4b10      	ldr	r3, [pc, #64]	@ (1000ff9c <MXC_DelayInit+0x6c>)
1000ff5a:	4a11      	ldr	r2, [pc, #68]	@ (1000ffa0 <MXC_DelayInit+0x70>)
1000ff5c:	6819      	ldr	r1, [r3, #0]
1000ff5e:	2300      	movs	r3, #0
1000ff60:	fba0 0101 	umull	r0, r1, r0, r1
1000ff64:	f009 ffea 	bl	10019f3c <__aeabi_uldivmod>

    // How many overflows of the SysTick will occur
    overflows = ticks / reload;
1000ff68:	4b0e      	ldr	r3, [pc, #56]	@ (1000ffa4 <MXC_DelayInit+0x74>)
1000ff6a:	fbb0 f2f5 	udiv	r2, r0, r5

    // How many remaining ticks after the last overflow
    lastticks = ticks % reload;
1000ff6e:	fb05 0012 	mls	r0, r5, r2, r0

    // Check if there will be another overflow due to the current value of the SysTick
    if (lastticks >= starttick) {
1000ff72:	4284      	cmp	r4, r0
    overflows = ticks / reload;
1000ff74:	601a      	str	r2, [r3, #0]
    if (lastticks >= starttick) {
1000ff76:	d80a      	bhi.n	1000ff8e <MXC_DelayInit+0x5e>
        overflows++;
1000ff78:	681a      	ldr	r2, [r3, #0]
1000ff7a:	3201      	adds	r2, #1
1000ff7c:	601a      	str	r2, [r3, #0]
        endtick = reload - (lastticks - starttick);
1000ff7e:	4425      	add	r5, r4
1000ff80:	4b09      	ldr	r3, [pc, #36]	@ (1000ffa8 <MXC_DelayInit+0x78>)
1000ff82:	1a28      	subs	r0, r5, r0
1000ff84:	6018      	str	r0, [r3, #0]
    } else {
        endtick = starttick - lastticks;
    }
}
1000ff86:	bd38      	pop	{r3, r4, r5, pc}
        reload = SysTick->LOAD + 1; // get the current reload value
1000ff88:	695d      	ldr	r5, [r3, #20]
1000ff8a:	3501      	adds	r5, #1
1000ff8c:	e7e4      	b.n	1000ff58 <MXC_DelayInit+0x28>
        endtick = starttick - lastticks;
1000ff8e:	4b06      	ldr	r3, [pc, #24]	@ (1000ffa8 <MXC_DelayInit+0x78>)
1000ff90:	1a20      	subs	r0, r4, r0
1000ff92:	6018      	str	r0, [r3, #0]
}
1000ff94:	bd38      	pop	{r3, r4, r5, pc}
1000ff96:	bf00      	nop
1000ff98:	20000c40 	.word	0x20000c40
1000ff9c:	20001740 	.word	0x20001740
1000ffa0:	000f4240 	.word	0x000f4240
1000ffa4:	20000034 	.word	0x20000034
1000ffa8:	20000c44 	.word	0x20000c44

1000ffac <MXC_DelayAsync>:

/* ************************************************************************** */
int MXC_DelayAsync(uint32_t us, mxc_delay_complete_t callback)
{
1000ffac:	b510      	push	{r4, lr}
    cbFunc = callback;

    // Check if timeout currently ongoing
    if (overflows > 0) {
1000ffae:	4c0c      	ldr	r4, [pc, #48]	@ (1000ffe0 <MXC_DelayAsync+0x34>)
    cbFunc = callback;
1000ffb0:	4b0c      	ldr	r3, [pc, #48]	@ (1000ffe4 <MXC_DelayAsync+0x38>)
    if (overflows > 0) {
1000ffb2:	6822      	ldr	r2, [r4, #0]
    cbFunc = callback;
1000ffb4:	6019      	str	r1, [r3, #0]
    if (overflows > 0) {
1000ffb6:	2a00      	cmp	r2, #0
1000ffb8:	dc0e      	bgt.n	1000ffd8 <MXC_DelayAsync+0x2c>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1000ffba:	b908      	cbnz	r0, 1000ffc0 <MXC_DelayAsync+0x14>
        return E_NO_ERROR;
1000ffbc:	2000      	movs	r0, #0
    if (overflows > 0) {
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
    }

    return E_NO_ERROR;
}
1000ffbe:	bd10      	pop	{r4, pc}
    MXC_DelayInit(us);
1000ffc0:	f7ff ffb6 	bl	1000ff30 <MXC_DelayInit>
    if (overflows > 0) {
1000ffc4:	6823      	ldr	r3, [r4, #0]
1000ffc6:	2b00      	cmp	r3, #0
1000ffc8:	ddf8      	ble.n	1000ffbc <MXC_DelayAsync+0x10>
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
1000ffca:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1000ffce:	6913      	ldr	r3, [r2, #16]
1000ffd0:	f043 0302 	orr.w	r3, r3, #2
1000ffd4:	6113      	str	r3, [r2, #16]
1000ffd6:	e7f1      	b.n	1000ffbc <MXC_DelayAsync+0x10>
        return E_BUSY;
1000ffd8:	f06f 0005 	mvn.w	r0, #5
}
1000ffdc:	bd10      	pop	{r4, pc}
1000ffde:	bf00      	nop
1000ffe0:	20000034 	.word	0x20000034
1000ffe4:	20000c3c 	.word	0x20000c3c

1000ffe8 <MXC_DelayCheck>:

/* ************************************************************************** */
int MXC_DelayCheck(void)
{
1000ffe8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Check if timeout currently ongoing
    if (overflows < 0) {
1000ffea:	4c17      	ldr	r4, [pc, #92]	@ (10010048 <MXC_DelayCheck+0x60>)
1000ffec:	6823      	ldr	r3, [r4, #0]
1000ffee:	2b00      	cmp	r3, #0
1000fff0:	db1e      	blt.n	10010030 <MXC_DelayCheck+0x48>

        return E_NO_ERROR;
    }

    // Check the global values
    if ((overflows == 0) && (SysTick->VAL <= endtick)) {
1000fff2:	6826      	ldr	r6, [r4, #0]
1000fff4:	bb2e      	cbnz	r6, 10010042 <MXC_DelayCheck+0x5a>
1000fff6:	4b15      	ldr	r3, [pc, #84]	@ (1001004c <MXC_DelayCheck+0x64>)
1000fff8:	f04f 25e0 	mov.w	r5, #3758153728	@ 0xe000e000
1000fffc:	681b      	ldr	r3, [r3, #0]
1000fffe:	69aa      	ldr	r2, [r5, #24]
10010000:	429a      	cmp	r2, r3
10010002:	d81e      	bhi.n	10010042 <MXC_DelayCheck+0x5a>
}

/* ************************************************************************** */
void MXC_DelayAbort(void)
{
    if (cbFunc != NULL) {
10010004:	4f12      	ldr	r7, [pc, #72]	@ (10010050 <MXC_DelayCheck+0x68>)
10010006:	683b      	ldr	r3, [r7, #0]
10010008:	b15b      	cbz	r3, 10010022 <MXC_DelayCheck+0x3a>
        cbFunc(E_ABORT);
1001000a:	f06f 000f 	mvn.w	r0, #15
1001000e:	4798      	blx	r3
        cbFunc = NULL;
    }

    SysTick->CTRL = ctrl_save;
10010010:	4b10      	ldr	r3, [pc, #64]	@ (10010054 <MXC_DelayCheck+0x6c>)
        cbFunc = NULL;
10010012:	603e      	str	r6, [r7, #0]
    SysTick->CTRL = ctrl_save;
10010014:	681a      	ldr	r2, [r3, #0]
10010016:	612a      	str	r2, [r5, #16]
    overflows = -1;
10010018:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001001c:	6023      	str	r3, [r4, #0]
        return E_NO_ERROR;
1001001e:	2000      	movs	r0, #0
}
10010020:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SysTick->CTRL = ctrl_save;
10010022:	4a0c      	ldr	r2, [pc, #48]	@ (10010054 <MXC_DelayCheck+0x6c>)
    overflows = -1;
10010024:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
10010028:	6812      	ldr	r2, [r2, #0]
1001002a:	612a      	str	r2, [r5, #16]
    overflows = -1;
1001002c:	6023      	str	r3, [r4, #0]
        if (cbFunc != NULL) {
1001002e:	e7f6      	b.n	1001001e <MXC_DelayCheck+0x36>
        if (cbFunc != NULL) {
10010030:	4c07      	ldr	r4, [pc, #28]	@ (10010050 <MXC_DelayCheck+0x68>)
10010032:	6823      	ldr	r3, [r4, #0]
10010034:	2b00      	cmp	r3, #0
10010036:	d0f2      	beq.n	1001001e <MXC_DelayCheck+0x36>
            cbFunc(E_NO_ERROR);
10010038:	2000      	movs	r0, #0
1001003a:	4798      	blx	r3
            cbFunc = NULL;
1001003c:	2300      	movs	r3, #0
1001003e:	6023      	str	r3, [r4, #0]
10010040:	e7ed      	b.n	1001001e <MXC_DelayCheck+0x36>
    return E_BUSY;
10010042:	f06f 0005 	mvn.w	r0, #5
}
10010046:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10010048:	20000034 	.word	0x20000034
1001004c:	20000c44 	.word	0x20000c44
10010050:	20000c3c 	.word	0x20000c3c
10010054:	20000c40 	.word	0x20000c40

10010058 <MXC_DelayAbort>:
{
10010058:	b510      	push	{r4, lr}
    if (cbFunc != NULL) {
1001005a:	4c09      	ldr	r4, [pc, #36]	@ (10010080 <MXC_DelayAbort+0x28>)
1001005c:	6823      	ldr	r3, [r4, #0]
1001005e:	b123      	cbz	r3, 1001006a <MXC_DelayAbort+0x12>
        cbFunc(E_ABORT);
10010060:	f06f 000f 	mvn.w	r0, #15
10010064:	4798      	blx	r3
        cbFunc = NULL;
10010066:	2300      	movs	r3, #0
10010068:	6023      	str	r3, [r4, #0]
    SysTick->CTRL = ctrl_save;
1001006a:	4a06      	ldr	r2, [pc, #24]	@ (10010084 <MXC_DelayAbort+0x2c>)
    overflows = -1;
1001006c:	4b06      	ldr	r3, [pc, #24]	@ (10010088 <MXC_DelayAbort+0x30>)
    SysTick->CTRL = ctrl_save;
1001006e:	6810      	ldr	r0, [r2, #0]
10010070:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
    overflows = -1;
10010074:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
10010078:	6108      	str	r0, [r1, #16]
    overflows = -1;
1001007a:	601a      	str	r2, [r3, #0]
}
1001007c:	bd10      	pop	{r4, pc}
1001007e:	bf00      	nop
10010080:	20000c3c 	.word	0x20000c3c
10010084:	20000c40 	.word	0x20000c40
10010088:	20000034 	.word	0x20000034

1001008c <MXC_Delay>:

/* ************************************************************************** */
int MXC_Delay(uint32_t us)
{
1001008c:	b538      	push	{r3, r4, r5, lr}
    // Check if timeout currently ongoing
    if (overflows > 0) {
1001008e:	4c18      	ldr	r4, [pc, #96]	@ (100100f0 <MXC_Delay+0x64>)
10010090:	6822      	ldr	r2, [r4, #0]
10010092:	2a00      	cmp	r2, #0
10010094:	dc29      	bgt.n	100100ea <MXC_Delay+0x5e>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
10010096:	b908      	cbnz	r0, 1001009c <MXC_Delay+0x10>
        return E_NO_ERROR;
10010098:	2000      	movs	r0, #0
    // Wait for the counter value
    while (SysTick->VAL > endtick) {}

    MXC_DelayAbort();
    return E_NO_ERROR;
}
1001009a:	bd38      	pop	{r3, r4, r5, pc}
    MXC_DelayInit(us);
1001009c:	f7ff ff48 	bl	1000ff30 <MXC_DelayInit>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
100100a0:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    while (overflows > 0) {
100100a4:	e002      	b.n	100100ac <MXC_Delay+0x20>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
100100a6:	6913      	ldr	r3, [r2, #16]
100100a8:	03db      	lsls	r3, r3, #15
100100aa:	d41a      	bmi.n	100100e2 <MXC_Delay+0x56>
    while (overflows > 0) {
100100ac:	6823      	ldr	r3, [r4, #0]
100100ae:	2b00      	cmp	r3, #0
100100b0:	dcf9      	bgt.n	100100a6 <MXC_Delay+0x1a>
    while (SysTick->VAL > endtick) {}
100100b2:	4b10      	ldr	r3, [pc, #64]	@ (100100f4 <MXC_Delay+0x68>)
100100b4:	681a      	ldr	r2, [r3, #0]
100100b6:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
100100ba:	698b      	ldr	r3, [r1, #24]
100100bc:	4293      	cmp	r3, r2
100100be:	d8fc      	bhi.n	100100ba <MXC_Delay+0x2e>
    if (cbFunc != NULL) {
100100c0:	4d0d      	ldr	r5, [pc, #52]	@ (100100f8 <MXC_Delay+0x6c>)
100100c2:	682b      	ldr	r3, [r5, #0]
100100c4:	b123      	cbz	r3, 100100d0 <MXC_Delay+0x44>
        cbFunc(E_ABORT);
100100c6:	f06f 000f 	mvn.w	r0, #15
100100ca:	4798      	blx	r3
        cbFunc = NULL;
100100cc:	2300      	movs	r3, #0
100100ce:	602b      	str	r3, [r5, #0]
    SysTick->CTRL = ctrl_save;
100100d0:	4b0a      	ldr	r3, [pc, #40]	@ (100100fc <MXC_Delay+0x70>)
100100d2:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
100100d6:	6819      	ldr	r1, [r3, #0]
100100d8:	6111      	str	r1, [r2, #16]
    overflows = -1;
100100da:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100100de:	6023      	str	r3, [r4, #0]
}
100100e0:	e7da      	b.n	10010098 <MXC_Delay+0xc>
            overflows--;
100100e2:	6823      	ldr	r3, [r4, #0]
100100e4:	3b01      	subs	r3, #1
100100e6:	6023      	str	r3, [r4, #0]
100100e8:	e7e0      	b.n	100100ac <MXC_Delay+0x20>
        return E_BUSY;
100100ea:	f06f 0005 	mvn.w	r0, #5
}
100100ee:	bd38      	pop	{r3, r4, r5, pc}
100100f0:	20000034 	.word	0x20000034
100100f4:	20000c44 	.word	0x20000c44
100100f8:	20000c3c 	.word	0x20000c3c
100100fc:	20000c40 	.word	0x20000c40

10010100 <MXC_NVIC_SetVector>:
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
    SCB->VTOR = (uint32_t)&ramVectorTable;
}

void MXC_NVIC_SetVector(IRQn_Type irqn, void (*irq_handler)(void))
{
10010100:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int index = irqn + 16; /* offset for externals */

    /* If not copied, do copy */
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
10010102:	4e0f      	ldr	r6, [pc, #60]	@ (10010140 <MXC_NVIC_SetVector+0x40>)
10010104:	4b0f      	ldr	r3, [pc, #60]	@ (10010144 <MXC_NVIC_SetVector+0x44>)
10010106:	68b2      	ldr	r2, [r6, #8]
10010108:	429a      	cmp	r2, r3
{
1001010a:	4604      	mov	r4, r0
1001010c:	460d      	mov	r5, r1
    int index = irqn + 16; /* offset for externals */
1001010e:	f100 0710 	add.w	r7, r0, #16
    if (SCB->VTOR != (uint32_t)&ramVectorTable) {
10010112:	d007      	beq.n	10010124 <MXC_NVIC_SetVector+0x24>
    memcpy(&ramVectorTable, &__isr_vector, sizeof(ramVectorTable));
10010114:	4618      	mov	r0, r3
10010116:	490c      	ldr	r1, [pc, #48]	@ (10010148 <MXC_NVIC_SetVector+0x48>)
10010118:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
1001011c:	f005 fa90 	bl	10015640 <memcpy>
10010120:	4603      	mov	r3, r0
    SCB->VTOR = (uint32_t)&ramVectorTable;
10010122:	60b0      	str	r0, [r6, #8]
  if ((int32_t)(IRQn) >= 0)
10010124:	2c00      	cmp	r4, #0
        NVIC_SetRAM();
    }

    ramVectorTable[index] = irq_handler;
10010126:	f843 5027 	str.w	r5, [r3, r7, lsl #2]
1001012a:	db07      	blt.n	1001013c <MXC_NVIC_SetVector+0x3c>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1001012c:	4a07      	ldr	r2, [pc, #28]	@ (1001014c <MXC_NVIC_SetVector+0x4c>)
1001012e:	0961      	lsrs	r1, r4, #5
10010130:	2301      	movs	r3, #1
10010132:	f004 041f 	and.w	r4, r4, #31
10010136:	40a3      	lsls	r3, r4
10010138:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
    NVIC_EnableIRQ(irqn);
}
1001013c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1001013e:	bf00      	nop
10010140:	e000ed00 	.word	0xe000ed00
10010144:	20000e00 	.word	0x20000e00
10010148:	1000e000 	.word	0x1000e000
1001014c:	e000e100 	.word	0xe000e100

10010150 <MXC_SYS_ClockDisable>:

/* ************************************************************************** */
void MXC_SYS_ClockDisable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
10010150:	283f      	cmp	r0, #63	@ 0x3f
10010152:	d908      	bls.n	10010166 <MXC_SYS_ClockDisable+0x16>
        clock -= 64;
        MXC_LPGCR->pclkdis |= (0x1 << clock);
10010154:	4a0d      	ldr	r2, [pc, #52]	@ (1001018c <MXC_SYS_ClockDisable+0x3c>)
        clock -= 64;
10010156:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis |= (0x1 << clock);
10010158:	68d1      	ldr	r1, [r2, #12]
1001015a:	b2c0      	uxtb	r0, r0
1001015c:	2301      	movs	r3, #1
1001015e:	4083      	lsls	r3, r0
10010160:	430b      	orrs	r3, r1
10010162:	60d3      	str	r3, [r2, #12]
10010164:	4770      	bx	lr
    } else if (clock > 31) {
10010166:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 |= (0x1 << clock);
10010168:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    } else if (clock > 31) {
1001016c:	d907      	bls.n	1001017e <MXC_SYS_ClockDisable+0x2e>
        clock -= 32;
1001016e:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 |= (0x1 << clock);
10010170:	6c91      	ldr	r1, [r2, #72]	@ 0x48
10010172:	b2c0      	uxtb	r0, r0
10010174:	2301      	movs	r3, #1
10010176:	4083      	lsls	r3, r0
10010178:	430b      	orrs	r3, r1
1001017a:	6493      	str	r3, [r2, #72]	@ 0x48
1001017c:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 |= (0x1 << clock);
1001017e:	6a51      	ldr	r1, [r2, #36]	@ 0x24
10010180:	2301      	movs	r3, #1
10010182:	4083      	lsls	r3, r0
10010184:	430b      	orrs	r3, r1
10010186:	6253      	str	r3, [r2, #36]	@ 0x24
    }
}
10010188:	4770      	bx	lr
1001018a:	bf00      	nop
1001018c:	40080000 	.word	0x40080000

10010190 <MXC_SYS_ClockEnable>:

/* ************************************************************************** */
void MXC_SYS_ClockEnable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
10010190:	283f      	cmp	r0, #63	@ 0x3f
10010192:	d909      	bls.n	100101a8 <MXC_SYS_ClockEnable+0x18>
        clock -= 64;
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
10010194:	490e      	ldr	r1, [pc, #56]	@ (100101d0 <MXC_SYS_ClockEnable+0x40>)
        clock -= 64;
10010196:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
10010198:	68cb      	ldr	r3, [r1, #12]
1001019a:	b2c0      	uxtb	r0, r0
1001019c:	2201      	movs	r2, #1
1001019e:	4082      	lsls	r2, r0
100101a0:	ea23 0302 	bic.w	r3, r3, r2
100101a4:	60cb      	str	r3, [r1, #12]
100101a6:	4770      	bx	lr
    } else if (clock > 31) {
100101a8:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
100101aa:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
    } else if (clock > 31) {
100101ae:	d908      	bls.n	100101c2 <MXC_SYS_ClockEnable+0x32>
        clock -= 32;
100101b0:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
100101b2:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
100101b4:	b2c0      	uxtb	r0, r0
100101b6:	2201      	movs	r2, #1
100101b8:	4082      	lsls	r2, r0
100101ba:	ea23 0302 	bic.w	r3, r3, r2
100101be:	648b      	str	r3, [r1, #72]	@ 0x48
100101c0:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 &= ~(0x1 << clock);
100101c2:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
100101c4:	2201      	movs	r2, #1
100101c6:	4082      	lsls	r2, r0
100101c8:	ea23 0302 	bic.w	r3, r3, r2
100101cc:	624b      	str	r3, [r1, #36]	@ 0x24
    }
}
100101ce:	4770      	bx	lr
100101d0:	40080000 	.word	0x40080000

100101d4 <MXC_SYS_ClockSourceEnable>:
    }
}

/******************************************************************************/
int MXC_SYS_ClockSourceEnable(mxc_sys_system_clock_t clock)
{
100101d4:	b510      	push	{r4, lr}
    switch (clock) {
100101d6:	2807      	cmp	r0, #7
100101d8:	d80a      	bhi.n	100101f0 <MXC_SYS_ClockSourceEnable+0x1c>
100101da:	e8df f000 	tbb	[pc, r0]
100101de:	090c      	.short	0x090c
100101e0:	47332309 	.word	0x47332309
100101e4:	045b      	.short	0x045b

    default:
        return E_BAD_PARAM;
        break;
    }
}
100101e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return MXC_GPIO_Config(&gpio_cfg_extclk);
100101ea:	4836      	ldr	r0, [pc, #216]	@ (100102c4 <MXC_SYS_ClockSourceEnable+0xf0>)
100101ec:	f000 b8b0 	b.w	10010350 <MXC_GPIO_Config>
    switch (clock) {
100101f0:	f06f 0002 	mvn.w	r0, #2
}
100101f4:	bd10      	pop	{r4, pc}
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
100101f6:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    // We do not have access to a system tick in the RV core.
    while (!(MXC_GCR->clkctrl & ready)) {}
    return E_NO_ERROR;
#else
    // Start timeout, wait for ready
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100101fa:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
100101fc:	68a3      	ldr	r3, [r4, #8]
100101fe:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
10010202:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10010204:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
10010208:	f7ff fed0 	bl	1000ffac <MXC_DelayAsync>
1001020c:	e003      	b.n	10010216 <MXC_SYS_ClockSourceEnable+0x42>
    do {
        if (MXC_GCR->clkctrl & ready) {
            MXC_DelayAbort();
            return E_NO_ERROR;
        }
    } while (MXC_DelayCheck() == E_BUSY);
1001020e:	f7ff feeb 	bl	1000ffe8 <MXC_DelayCheck>
10010212:	3006      	adds	r0, #6
10010214:	d152      	bne.n	100102bc <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
10010216:	68a3      	ldr	r3, [r4, #8]
10010218:	0159      	lsls	r1, r3, #5
1001021a:	d5f8      	bpl.n	1001020e <MXC_SYS_ClockSourceEnable+0x3a>
            MXC_DelayAbort();
1001021c:	f7ff ff1c 	bl	10010058 <MXC_DelayAbort>
            return E_NO_ERROR;
10010220:	2000      	movs	r0, #0
}
10010222:	bd10      	pop	{r4, pc}
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10010224:	2100      	movs	r1, #0
10010226:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001022a:	f7ff febf 	bl	1000ffac <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
1001022e:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
10010232:	e003      	b.n	1001023c <MXC_SYS_ClockSourceEnable+0x68>
    } while (MXC_DelayCheck() == E_BUSY);
10010234:	f7ff fed8 	bl	1000ffe8 <MXC_DelayCheck>
10010238:	3006      	adds	r0, #6
1001023a:	d13f      	bne.n	100102bc <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001023c:	68a3      	ldr	r3, [r4, #8]
1001023e:	009a      	lsls	r2, r3, #2
10010240:	d4ec      	bmi.n	1001021c <MXC_SYS_ClockSourceEnable+0x48>
10010242:	e7f7      	b.n	10010234 <MXC_SYS_ClockSourceEnable+0x60>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
10010244:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10010248:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1001024a:	68a3      	ldr	r3, [r4, #8]
1001024c:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
10010250:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10010252:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
10010256:	f7ff fea9 	bl	1000ffac <MXC_DelayAsync>
1001025a:	e003      	b.n	10010264 <MXC_SYS_ClockSourceEnable+0x90>
    } while (MXC_DelayCheck() == E_BUSY);
1001025c:	f7ff fec4 	bl	1000ffe8 <MXC_DelayCheck>
10010260:	3006      	adds	r0, #6
10010262:	d12b      	bne.n	100102bc <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
10010264:	68a3      	ldr	r3, [r4, #8]
10010266:	011b      	lsls	r3, r3, #4
10010268:	d5f8      	bpl.n	1001025c <MXC_SYS_ClockSourceEnable+0x88>
1001026a:	e7d7      	b.n	1001021c <MXC_SYS_ClockSourceEnable+0x48>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1001026c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10010270:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
10010272:	68a3      	ldr	r3, [r4, #8]
10010274:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
10010278:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1001027a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1001027e:	f7ff fe95 	bl	1000ffac <MXC_DelayAsync>
10010282:	e003      	b.n	1001028c <MXC_SYS_ClockSourceEnable+0xb8>
    } while (MXC_DelayCheck() == E_BUSY);
10010284:	f7ff feb0 	bl	1000ffe8 <MXC_DelayCheck>
10010288:	3006      	adds	r0, #6
1001028a:	d117      	bne.n	100102bc <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1001028c:	68a3      	ldr	r3, [r4, #8]
1001028e:	00d8      	lsls	r0, r3, #3
10010290:	d4c4      	bmi.n	1001021c <MXC_SYS_ClockSourceEnable+0x48>
10010292:	e7f7      	b.n	10010284 <MXC_SYS_ClockSourceEnable+0xb0>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
10010294:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
10010298:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1001029a:	68a3      	ldr	r3, [r4, #8]
1001029c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
100102a0:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
100102a2:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
100102a6:	f7ff fe81 	bl	1000ffac <MXC_DelayAsync>
100102aa:	e003      	b.n	100102b4 <MXC_SYS_ClockSourceEnable+0xe0>
    } while (MXC_DelayCheck() == E_BUSY);
100102ac:	f7ff fe9c 	bl	1000ffe8 <MXC_DelayCheck>
100102b0:	3006      	adds	r0, #6
100102b2:	d103      	bne.n	100102bc <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
100102b4:	68a3      	ldr	r3, [r4, #8]
100102b6:	019b      	lsls	r3, r3, #6
100102b8:	d4b0      	bmi.n	1001021c <MXC_SYS_ClockSourceEnable+0x48>
100102ba:	e7f7      	b.n	100102ac <MXC_SYS_ClockSourceEnable+0xd8>

    return E_TIME_OUT;
100102bc:	f06f 0009 	mvn.w	r0, #9
}
100102c0:	bd10      	pop	{r4, pc}
100102c2:	bf00      	nop
100102c4:	1001c474 	.word	0x1001c474

100102c8 <MXC_SYS_Reset_Periph>:

/* ************************************************************************** */
void MXC_SYS_Reset_Periph(mxc_sys_reset_t reset)
{
    /* The mxc_sys_reset_t enum uses enum values that are the offset by 32 and 64 for the rst register. */
    if (reset > 63) {
100102c8:	283f      	cmp	r0, #63	@ 0x3f
100102ca:	d909      	bls.n	100102e0 <MXC_SYS_Reset_Periph+0x18>
        reset -= 64;
100102cc:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->rst = (0x1 << reset);
100102ce:	490f      	ldr	r1, [pc, #60]	@ (1001030c <MXC_SYS_Reset_Periph+0x44>)
100102d0:	b2c0      	uxtb	r0, r0
100102d2:	2201      	movs	r2, #1
100102d4:	4082      	lsls	r2, r0
100102d6:	608a      	str	r2, [r1, #8]
        while (MXC_LPGCR->rst & (0x1 << reset)) {}
100102d8:	688b      	ldr	r3, [r1, #8]
100102da:	421a      	tst	r2, r3
100102dc:	d1fc      	bne.n	100102d8 <MXC_SYS_Reset_Periph+0x10>
100102de:	4770      	bx	lr
    } else if (reset > 31) {
100102e0:	281f      	cmp	r0, #31
100102e2:	d90a      	bls.n	100102fa <MXC_SYS_Reset_Periph+0x32>
        reset -= 32;
100102e4:	3820      	subs	r0, #32
        MXC_GCR->rst1 = (0x1 << reset);
100102e6:	b2c0      	uxtb	r0, r0
100102e8:	2201      	movs	r2, #1
100102ea:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
100102ee:	4082      	lsls	r2, r0
100102f0:	644a      	str	r2, [r1, #68]	@ 0x44
        while (MXC_GCR->rst1 & (0x1 << reset)) {}
100102f2:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
100102f4:	421a      	tst	r2, r3
100102f6:	d1fc      	bne.n	100102f2 <MXC_SYS_Reset_Periph+0x2a>
100102f8:	4770      	bx	lr
    } else {
        MXC_GCR->rst0 = (0x1 << reset);
100102fa:	2201      	movs	r2, #1
100102fc:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
10010300:	4082      	lsls	r2, r0
10010302:	604a      	str	r2, [r1, #4]
        while (MXC_GCR->rst0 & (0x1 << reset)) {}
10010304:	684b      	ldr	r3, [r1, #4]
10010306:	421a      	tst	r2, r3
10010308:	d1fc      	bne.n	10010304 <MXC_SYS_Reset_Periph+0x3c>
    }
}
1001030a:	4770      	bx	lr
1001030c:	40080000 	.word	0x40080000

10010310 <MXC_GPIO_Init>:
/* **** Globals **** */

/* **** Functions **** */
int MXC_GPIO_Init(uint32_t portmask)
{
    if (portmask & 0x1) {
10010310:	07c1      	lsls	r1, r0, #31
{
10010312:	b510      	push	{r4, lr}
10010314:	4604      	mov	r4, r0
    if (portmask & 0x1) {
10010316:	d408      	bmi.n	1001032a <MXC_GPIO_Init+0x1a>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
    }

    if (portmask & 0x2) {
10010318:	07a2      	lsls	r2, r4, #30
1001031a:	d40b      	bmi.n	10010334 <MXC_GPIO_Init+0x24>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
    }

    if (portmask & 0x4) {
1001031c:	0763      	lsls	r3, r4, #29
1001031e:	d40e      	bmi.n	1001033e <MXC_GPIO_Init+0x2e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
    }

    return MXC_GPIO_Common_Init(portmask);
10010320:	4620      	mov	r0, r4
}
10010322:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
10010326:	f000 bf53 	b.w	100111d0 <MXC_GPIO_Common_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1001032a:	2000      	movs	r0, #0
1001032c:	f7ff ff30 	bl	10010190 <MXC_SYS_ClockEnable>
    if (portmask & 0x2) {
10010330:	07a2      	lsls	r2, r4, #30
10010332:	d5f3      	bpl.n	1001031c <MXC_GPIO_Init+0xc>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
10010334:	2001      	movs	r0, #1
10010336:	f7ff ff2b 	bl	10010190 <MXC_SYS_ClockEnable>
    if (portmask & 0x4) {
1001033a:	0763      	lsls	r3, r4, #29
1001033c:	d5f0      	bpl.n	10010320 <MXC_GPIO_Init+0x10>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1001033e:	2040      	movs	r0, #64	@ 0x40
10010340:	f7ff ff26 	bl	10010190 <MXC_SYS_ClockEnable>
    return MXC_GPIO_Common_Init(portmask);
10010344:	4620      	mov	r0, r4
}
10010346:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1001034a:	f000 bf41 	b.w	100111d0 <MXC_GPIO_Common_Init>
1001034e:	bf00      	nop

10010350 <MXC_GPIO_Config>:

    return E_NO_ERROR;
}

int MXC_GPIO_Config(const mxc_gpio_cfg_t *cfg)
{
10010350:	b570      	push	{r4, r5, r6, lr}
    int port, error;
    mxc_gpio_regs_t *gpio = cfg->port;

    port = MXC_GPIO_GET_IDX(cfg->port);
10010352:	4b7f      	ldr	r3, [pc, #508]	@ (10010550 <MXC_GPIO_Config+0x200>)
    mxc_gpio_regs_t *gpio = cfg->port;
10010354:	6805      	ldr	r5, [r0, #0]
    port = MXC_GPIO_GET_IDX(cfg->port);
10010356:	429d      	cmp	r5, r3
{
10010358:	4604      	mov	r4, r0
    port = MXC_GPIO_GET_IDX(cfg->port);
1001035a:	d037      	beq.n	100103cc <MXC_GPIO_Config+0x7c>
1001035c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010360:	429d      	cmp	r5, r3
10010362:	d020      	beq.n	100103a6 <MXC_GPIO_Config+0x56>
10010364:	f503 23ee 	add.w	r3, r3, #487424	@ 0x77000
10010368:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
1001036c:	429d      	cmp	r5, r3
1001036e:	d07f      	beq.n	10010470 <MXC_GPIO_Config+0x120>
10010370:	4878      	ldr	r0, [pc, #480]	@ (10010554 <MXC_GPIO_Config+0x204>)
10010372:	1a28      	subs	r0, r5, r0
10010374:	fab0 f080 	clz	r0, r0
10010378:	0940      	lsrs	r0, r0, #5
1001037a:	00c0      	lsls	r0, r0, #3

    MXC_GPIO_Init(1 << port);
1001037c:	f7ff ffc8 	bl	10010310 <MXC_GPIO_Init>

    if (cfg->port == MXC_GPIO3) {
10010380:	4b74      	ldr	r3, [pc, #464]	@ (10010554 <MXC_GPIO_Config+0x204>)
10010382:	6822      	ldr	r2, [r4, #0]
10010384:	429a      	cmp	r2, r3
10010386:	d015      	beq.n	100103b4 <MXC_GPIO_Config+0x64>
        default:
            return E_NOT_SUPPORTED;
        }
    } else {
        // Configure alternate function
        error = MXC_GPIO_RevA_SetAF((mxc_gpio_reva_regs_t *)gpio, cfg->func, cfg->mask);
10010388:	6862      	ldr	r2, [r4, #4]
1001038a:	7a21      	ldrb	r1, [r4, #8]
1001038c:	4628      	mov	r0, r5
1001038e:	f000 f94b 	bl	10010628 <MXC_GPIO_RevA_SetAF>
        if (error != E_NO_ERROR) {
10010392:	b9d0      	cbnz	r0, 100103ca <MXC_GPIO_Config+0x7a>
            return error;
        }

        // Configure the pad
        switch (cfg->pad) {
10010394:	7a63      	ldrb	r3, [r4, #9]
10010396:	2b04      	cmp	r3, #4
10010398:	f200 80d7 	bhi.w	1001054a <MXC_GPIO_Config+0x1fa>
1001039c:	e8df f003 	tbb	[pc, r3]
100103a0:	2f3e4c5a 	.word	0x2f3e4c5a
100103a4:	18          	.byte	0x18
100103a5:	00          	.byte	0x00
100103a6:	2002      	movs	r0, #2
    MXC_GPIO_Init(1 << port);
100103a8:	f7ff ffb2 	bl	10010310 <MXC_GPIO_Init>
    if (cfg->port == MXC_GPIO3) {
100103ac:	4b69      	ldr	r3, [pc, #420]	@ (10010554 <MXC_GPIO_Config+0x204>)
100103ae:	6822      	ldr	r2, [r4, #0]
100103b0:	429a      	cmp	r2, r3
100103b2:	d1e9      	bne.n	10010388 <MXC_GPIO_Config+0x38>
        switch (cfg->func) {
100103b4:	7a23      	ldrb	r3, [r4, #8]
100103b6:	2b01      	cmp	r3, #1
100103b8:	f000 80bb 	beq.w	10010532 <MXC_GPIO_Config+0x1e2>
100103bc:	2b02      	cmp	r3, #2
100103be:	f000 80a5 	beq.w	1001050c <MXC_GPIO_Config+0x1bc>
100103c2:	2b00      	cmp	r3, #0
100103c4:	d056      	beq.n	10010474 <MXC_GPIO_Config+0x124>
            return E_NOT_SUPPORTED;
100103c6:	f06f 0010 	mvn.w	r0, #16
        }
    }

    // Configure the vssel
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
}
100103ca:	bd70      	pop	{r4, r5, r6, pc}
100103cc:	2001      	movs	r0, #1
100103ce:	e7d5      	b.n	1001037c <MXC_GPIO_Config+0x2c>
            gpio->padctrl0 &= ~cfg->mask;
100103d0:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
100103d2:	6862      	ldr	r2, [r4, #4]
100103d4:	ea23 0302 	bic.w	r3, r3, r2
100103d8:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
100103da:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
100103dc:	4313      	orrs	r3, r2
100103de:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
100103e0:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
100103e4:	ea23 0302 	bic.w	r3, r3, r2
100103e8:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
}

/* ************************************************************************** */
int MXC_GPIO_SetVSSEL(mxc_gpio_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    if (port == MXC_GPIO3) {
100103ec:	4b59      	ldr	r3, [pc, #356]	@ (10010554 <MXC_GPIO_Config+0x204>)
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
100103ee:	7aa1      	ldrb	r1, [r4, #10]
    if (port == MXC_GPIO3) {
100103f0:	429d      	cmp	r5, r3
100103f2:	d039      	beq.n	10010468 <MXC_GPIO_Config+0x118>
        }

        return E_NO_ERROR;
    }

    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
100103f4:	4628      	mov	r0, r5
}
100103f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
100103fa:	f000 b8ff 	b.w	100105fc <MXC_GPIO_RevA_SetVSSEL>
            gpio->padctrl0 |= cfg->mask;
100103fe:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
10010400:	6862      	ldr	r2, [r4, #4]
10010402:	4313      	orrs	r3, r2
10010404:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10010406:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10010408:	ea23 0302 	bic.w	r3, r3, r2
1001040c:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
1001040e:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10010412:	ea23 0302 	bic.w	r3, r3, r2
10010416:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1001041a:	e7e7      	b.n	100103ec <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1001041c:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1001041e:	6862      	ldr	r2, [r4, #4]
10010420:	ea23 0302 	bic.w	r3, r3, r2
10010424:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
10010426:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10010428:	4313      	orrs	r3, r2
1001042a:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1001042c:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
10010430:	4313      	orrs	r3, r2
10010432:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
10010436:	e7d9      	b.n	100103ec <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 |= cfg->mask;
10010438:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1001043a:	6862      	ldr	r2, [r4, #4]
1001043c:	4313      	orrs	r3, r2
1001043e:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
10010440:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10010442:	ea23 0302 	bic.w	r3, r3, r2
10010446:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
10010448:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1001044c:	4313      	orrs	r3, r2
1001044e:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
10010452:	e7cb      	b.n	100103ec <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
10010454:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
10010456:	6862      	ldr	r2, [r4, #4]
10010458:	ea23 0302 	bic.w	r3, r3, r2
1001045c:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1001045e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
10010460:	ea23 0302 	bic.w	r3, r3, r2
10010464:	666b      	str	r3, [r5, #100]	@ 0x64
            break;
10010466:	e7c1      	b.n	100103ec <MXC_GPIO_Config+0x9c>
        if (vssel == MXC_GPIO_VSSEL_VDDIO) {
10010468:	2900      	cmp	r1, #0
1001046a:	d0ac      	beq.n	100103c6 <MXC_GPIO_Config+0x76>
        return E_NO_ERROR;
1001046c:	2000      	movs	r0, #0
}
1001046e:	bd70      	pop	{r4, r5, r6, pc}
10010470:	2004      	movs	r0, #4
10010472:	e783      	b.n	1001037c <MXC_GPIO_Config+0x2c>
            MXC_MCR->gpio3_ctrl &= ~(P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask));
10010474:	6863      	ldr	r3, [r4, #4]
10010476:	4938      	ldr	r1, [pc, #224]	@ (10010558 <MXC_GPIO_Config+0x208>)
10010478:	0058      	lsls	r0, r3, #1
1001047a:	011a      	lsls	r2, r3, #4
1001047c:	6a0e      	ldr	r6, [r1, #32]
1001047e:	f000 0002 	and.w	r0, r0, #2
10010482:	f002 0220 	and.w	r2, r2, #32
10010486:	4302      	orrs	r2, r0
10010488:	ea26 0202 	bic.w	r2, r6, r2
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1001048c:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen &= ~(SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask));
1001048e:	688a      	ldr	r2, [r1, #8]
10010490:	f3c3 0340 	ubfx	r3, r3, #1, #1
10010494:	4303      	orrs	r3, r0
10010496:	ea22 0303 	bic.w	r3, r2, r3
1001049a:	608b      	str	r3, [r1, #8]
        switch (cfg->pad) {
1001049c:	7a63      	ldrb	r3, [r4, #9]
1001049e:	2b04      	cmp	r3, #4
100104a0:	d891      	bhi.n	100103c6 <MXC_GPIO_Config+0x76>
100104a2:	e8df f003 	tbb	[pc, r3]
100104a6:	1b26      	.short	0x1b26
100104a8:	1b03      	.short	0x1b03
100104aa:	03          	.byte	0x03
100104ab:	00          	.byte	0x00
            MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask));
100104ac:	6862      	ldr	r2, [r4, #4]
100104ae:	492a      	ldr	r1, [pc, #168]	@ (10010558 <MXC_GPIO_Config+0x208>)
100104b0:	00d3      	lsls	r3, r2, #3
100104b2:	6a08      	ldr	r0, [r1, #32]
100104b4:	f003 0310 	and.w	r3, r3, #16
100104b8:	f002 0601 	and.w	r6, r2, #1
100104bc:	4333      	orrs	r3, r6
100104be:	ea20 0303 	bic.w	r3, r0, r3
100104c2:	620b      	str	r3, [r1, #32]
            MXC_MCR->gpio3_ctrl &= ~(P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask));
100104c4:	0156      	lsls	r6, r2, #5
100104c6:	0093      	lsls	r3, r2, #2
100104c8:	6a08      	ldr	r0, [r1, #32]
100104ca:	f003 0304 	and.w	r3, r3, #4
100104ce:	f006 0640 	and.w	r6, r6, #64	@ 0x40
100104d2:	4333      	orrs	r3, r6
100104d4:	ea20 0303 	bic.w	r3, r0, r3
100104d8:	620b      	str	r3, [r1, #32]
            break;
100104da:	e787      	b.n	100103ec <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask);
100104dc:	491e      	ldr	r1, [pc, #120]	@ (10010558 <MXC_GPIO_Config+0x208>)
100104de:	6862      	ldr	r2, [r4, #4]
100104e0:	6a0e      	ldr	r6, [r1, #32]
100104e2:	00d3      	lsls	r3, r2, #3
100104e4:	f002 0001 	and.w	r0, r2, #1
100104e8:	f003 0310 	and.w	r3, r3, #16
100104ec:	4330      	orrs	r0, r6
100104ee:	4303      	orrs	r3, r0
100104f0:	e7e7      	b.n	100104c2 <MXC_GPIO_Config+0x172>
            MXC_MCR->gpio3_ctrl |= P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask);
100104f2:	6862      	ldr	r2, [r4, #4]
100104f4:	4818      	ldr	r0, [pc, #96]	@ (10010558 <MXC_GPIO_Config+0x208>)
100104f6:	0093      	lsls	r3, r2, #2
100104f8:	0151      	lsls	r1, r2, #5
100104fa:	6a06      	ldr	r6, [r0, #32]
100104fc:	f003 0304 	and.w	r3, r3, #4
10010500:	f001 0140 	and.w	r1, r1, #64	@ 0x40
10010504:	430b      	orrs	r3, r1
10010506:	4333      	orrs	r3, r6
10010508:	6203      	str	r3, [r0, #32]
            break;
1001050a:	e76f      	b.n	100103ec <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1001050c:	6863      	ldr	r3, [r4, #4]
1001050e:	4912      	ldr	r1, [pc, #72]	@ (10010558 <MXC_GPIO_Config+0x208>)
10010510:	0058      	lsls	r0, r3, #1
10010512:	011a      	lsls	r2, r3, #4
10010514:	6a0e      	ldr	r6, [r1, #32]
10010516:	f000 0002 	and.w	r0, r0, #2
1001051a:	f002 0220 	and.w	r2, r2, #32
1001051e:	4302      	orrs	r2, r0
10010520:	4332      	orrs	r2, r6
10010522:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen |= SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask);
10010524:	688a      	ldr	r2, [r1, #8]
10010526:	f3c3 0340 	ubfx	r3, r3, #1, #1
1001052a:	4303      	orrs	r3, r0
1001052c:	4313      	orrs	r3, r2
1001052e:	608b      	str	r3, [r1, #8]
            break;
10010530:	e7b4      	b.n	1001049c <MXC_GPIO_Config+0x14c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
10010532:	6863      	ldr	r3, [r4, #4]
10010534:	4908      	ldr	r1, [pc, #32]	@ (10010558 <MXC_GPIO_Config+0x208>)
10010536:	0058      	lsls	r0, r3, #1
10010538:	011a      	lsls	r2, r3, #4
1001053a:	6a0e      	ldr	r6, [r1, #32]
1001053c:	f000 0002 	and.w	r0, r0, #2
10010540:	f002 0220 	and.w	r2, r2, #32
10010544:	4302      	orrs	r2, r0
10010546:	4332      	orrs	r2, r6
10010548:	e7a0      	b.n	1001048c <MXC_GPIO_Config+0x13c>
        switch (cfg->pad) {
1001054a:	f06f 0002 	mvn.w	r0, #2
}
1001054e:	bd70      	pop	{r4, r5, r6, pc}
10010550:	40008000 	.word	0x40008000
10010554:	40080600 	.word	0x40080600
10010558:	40006c00 	.word	0x40006c00

1001055c <MXC_GPIO_OutSet>:
    if (port == MXC_GPIO3) {
1001055c:	4a08      	ldr	r2, [pc, #32]	@ (10010580 <MXC_GPIO_OutSet+0x24>)
1001055e:	4290      	cmp	r0, r2
10010560:	d001      	beq.n	10010566 <MXC_GPIO_OutSet+0xa>
    MXC_GPIO_RevA_OutSet((mxc_gpio_reva_regs_t *)port, mask);
10010562:	f000 b843 	b.w	100105ec <MXC_GPIO_RevA_OutSet>
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
10010566:	4807      	ldr	r0, [pc, #28]	@ (10010584 <MXC_GPIO_OutSet+0x28>)
{
10010568:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1001056a:	6a04      	ldr	r4, [r0, #32]
1001056c:	00ca      	lsls	r2, r1, #3
1001056e:	f001 0101 	and.w	r1, r1, #1
10010572:	4321      	orrs	r1, r4
10010574:	f002 0310 	and.w	r3, r2, #16
10010578:	430b      	orrs	r3, r1
}
1001057a:	bc10      	pop	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1001057c:	6203      	str	r3, [r0, #32]
}
1001057e:	4770      	bx	lr
10010580:	40080600 	.word	0x40080600
10010584:	40006c00 	.word	0x40006c00

10010588 <MXC_GPIO_OutClr>:
    if (port == MXC_GPIO3) {
10010588:	4a09      	ldr	r2, [pc, #36]	@ (100105b0 <MXC_GPIO_OutClr+0x28>)
1001058a:	4290      	cmp	r0, r2
1001058c:	d001      	beq.n	10010592 <MXC_GPIO_OutClr+0xa>
    MXC_GPIO_RevA_OutClr((mxc_gpio_reva_regs_t *)port, mask);
1001058e:	f000 b82f 	b.w	100105f0 <MXC_GPIO_RevA_OutClr>
{
10010592:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(mask) | P31_DATA_OUT(mask));
10010594:	4c07      	ldr	r4, [pc, #28]	@ (100105b4 <MXC_GPIO_OutClr+0x2c>)
10010596:	00ca      	lsls	r2, r1, #3
10010598:	6a20      	ldr	r0, [r4, #32]
1001059a:	f002 0210 	and.w	r2, r2, #16
1001059e:	f001 0101 	and.w	r1, r1, #1
100105a2:	ea42 0301 	orr.w	r3, r2, r1
100105a6:	ea20 0303 	bic.w	r3, r0, r3
100105aa:	6223      	str	r3, [r4, #32]
}
100105ac:	bc10      	pop	{r4}
100105ae:	4770      	bx	lr
100105b0:	40080600 	.word	0x40080600
100105b4:	40006c00 	.word	0x40006c00

100105b8 <MXC_GPIO_Handler>:
    MXC_GPIO_Common_Handler(port);
100105b8:	f000 be1c 	b.w	100111f4 <MXC_GPIO_Common_Handler>

100105bc <MXC_GPIO_ClearFlags>:
    if (port == MXC_GPIO3) {
100105bc:	4a03      	ldr	r2, [pc, #12]	@ (100105cc <MXC_GPIO_ClearFlags+0x10>)
100105be:	4290      	cmp	r0, r2
100105c0:	d001      	beq.n	100105c6 <MXC_GPIO_ClearFlags+0xa>
    MXC_GPIO_RevA_ClearFlags((mxc_gpio_reva_regs_t *)port, flags);
100105c2:	f000 b817 	b.w	100105f4 <MXC_GPIO_RevA_ClearFlags>
        MXC_PWRSEQ->lpwkst3 = flags;
100105c6:	4a02      	ldr	r2, [pc, #8]	@ (100105d0 <MXC_GPIO_ClearFlags+0x14>)
100105c8:	61d1      	str	r1, [r2, #28]
}
100105ca:	4770      	bx	lr
100105cc:	40080600 	.word	0x40080600
100105d0:	40006800 	.word	0x40006800

100105d4 <MXC_GPIO_GetFlags>:
    if (port == MXC_GPIO3) {
100105d4:	4b03      	ldr	r3, [pc, #12]	@ (100105e4 <MXC_GPIO_GetFlags+0x10>)
100105d6:	4298      	cmp	r0, r3
100105d8:	d001      	beq.n	100105de <MXC_GPIO_GetFlags+0xa>
    return MXC_GPIO_RevA_GetFlags((mxc_gpio_reva_regs_t *)port);
100105da:	f000 b80d 	b.w	100105f8 <MXC_GPIO_RevA_GetFlags>
        return MXC_PWRSEQ->lpwkst3;
100105de:	4b02      	ldr	r3, [pc, #8]	@ (100105e8 <MXC_GPIO_GetFlags+0x14>)
100105e0:	69d8      	ldr	r0, [r3, #28]
}
100105e2:	4770      	bx	lr
100105e4:	40080600 	.word	0x40080600
100105e8:	40006800 	.word	0x40006800

100105ec <MXC_GPIO_RevA_OutSet>:
    return (port->in & mask);
}

void MXC_GPIO_RevA_OutSet(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_set = mask;
100105ec:	61c1      	str	r1, [r0, #28]
}
100105ee:	4770      	bx	lr

100105f0 <MXC_GPIO_RevA_OutClr>:

void MXC_GPIO_RevA_OutClr(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_clr = mask;
100105f0:	6201      	str	r1, [r0, #32]
}
100105f2:	4770      	bx	lr

100105f4 <MXC_GPIO_RevA_ClearFlags>:
    port->inten_clr = mask;
}

void MXC_GPIO_RevA_ClearFlags(mxc_gpio_reva_regs_t *port, uint32_t flags)
{
    port->intfl_clr = flags;
100105f4:	6481      	str	r1, [r0, #72]	@ 0x48
}
100105f6:	4770      	bx	lr

100105f8 <MXC_GPIO_RevA_GetFlags>:

uint32_t MXC_GPIO_RevA_GetFlags(mxc_gpio_reva_regs_t *port)
{
    return port->intfl;
100105f8:	6c00      	ldr	r0, [r0, #64]	@ 0x40
}
100105fa:	4770      	bx	lr

100105fc <MXC_GPIO_RevA_SetVSSEL>:

int MXC_GPIO_RevA_SetVSSEL(mxc_gpio_reva_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    // Configure the vssel
    switch (vssel) {
100105fc:	b159      	cbz	r1, 10010616 <MXC_GPIO_RevA_SetVSSEL+0x1a>
100105fe:	2901      	cmp	r1, #1
10010600:	d106      	bne.n	10010610 <MXC_GPIO_RevA_SetVSSEL+0x14>
    case MXC_GPIO_VSSEL_VDDIO:
        port->vssel &= ~mask;
        break;

    case MXC_GPIO_VSSEL_VDDIOH:
        port->vssel |= mask;
10010602:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
10010606:	4313      	orrs	r3, r2
10010608:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1001060c:	2000      	movs	r0, #0
}
1001060e:	4770      	bx	lr
    switch (vssel) {
10010610:	f06f 0002 	mvn.w	r0, #2
10010614:	4770      	bx	lr
        port->vssel &= ~mask;
10010616:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1001061a:	ea23 0302 	bic.w	r3, r3, r2
1001061e:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    return E_NO_ERROR;
10010622:	2000      	movs	r0, #0
}
10010624:	4770      	bx	lr
10010626:	bf00      	nop

10010628 <MXC_GPIO_RevA_SetAF>:

int MXC_GPIO_RevA_SetAF(mxc_gpio_reva_regs_t *port, mxc_gpio_func_t func, uint32_t mask)
{
    //This is required for new devices going forward.
    port->inen |= mask;
10010628:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1001062a:	4313      	orrs	r3, r2
1001062c:	6303      	str	r3, [r0, #48]	@ 0x30

    //Switch to I/O mode first
    port->en0_set = mask;
1001062e:	6042      	str	r2, [r0, #4]

    switch (func) {
10010630:	2905      	cmp	r1, #5
10010632:	d82c      	bhi.n	1001068e <MXC_GPIO_RevA_SetAF+0x66>
10010634:	e8df f001 	tbb	[pc, r1]
10010638:	1f19120a 	.word	0x1f19120a
1001063c:	0325      	.short	0x0325
        port->en1_clr = mask;
        port->en0_clr = mask;
        break;

    case MXC_GPIO_FUNC_ALT4:
        port->en3_clr = mask;
1001063e:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
10010642:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_set = mask;
10010644:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
10010646:	6082      	str	r2, [r0, #8]
#endif
    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10010648:	2000      	movs	r0, #0
1001064a:	4770      	bx	lr
        port->outen_clr = mask;
1001064c:	6142      	str	r2, [r0, #20]
        port->en0_set = mask;
1001064e:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10010650:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
10010652:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
10010654:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    return E_NO_ERROR;
10010658:	2000      	movs	r0, #0
1001065a:	4770      	bx	lr
        port->outen_set = mask;
1001065c:	6102      	str	r2, [r0, #16]
        port->en0_set = mask;
1001065e:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
10010660:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
10010662:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
10010664:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        break;
10010668:	e7ee      	b.n	10010648 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1001066a:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1001066e:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_clr = mask;
10010670:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
10010672:	6082      	str	r2, [r0, #8]
        break;
10010674:	e7e8      	b.n	10010648 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
10010676:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1001067a:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_set = mask;
1001067c:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1001067e:	6082      	str	r2, [r0, #8]
        break;
10010680:	e7e2      	b.n	10010648 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
10010682:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
10010686:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_clr = mask;
10010688:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1001068a:	6082      	str	r2, [r0, #8]
        break;
1001068c:	e7dc      	b.n	10010648 <MXC_GPIO_RevA_SetAF+0x20>
    switch (func) {
1001068e:	f06f 0002 	mvn.w	r0, #2
}
10010692:	4770      	bx	lr

10010694 <MXC_I2C_SetSlaveAddr>:
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
}

int MXC_I2C_SetSlaveAddr(mxc_i2c_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    return MXC_I2C_RevA_SetSlaveAddr((mxc_i2c_reva_regs_t *)i2c, slaveAddr, idx);
10010694:	f000 b8f6 	b.w	10010884 <MXC_I2C_RevA_SetSlaveAddr>

10010698 <MXC_I2C_Shutdown>:
}

int MXC_I2C_Shutdown(mxc_i2c_regs_t *i2c)
{
10010698:	b508      	push	{r3, lr}
    // Configure GPIO for I2C
    if (i2c == MXC_I2C0) {
1001069a:	4b11      	ldr	r3, [pc, #68]	@ (100106e0 <MXC_I2C_Shutdown+0x48>)
1001069c:	4298      	cmp	r0, r3
1001069e:	d00d      	beq.n	100106bc <MXC_I2C_Shutdown+0x24>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
    } else if (i2c == MXC_I2C1) {
100106a0:	4b10      	ldr	r3, [pc, #64]	@ (100106e4 <MXC_I2C_Shutdown+0x4c>)
100106a2:	4298      	cmp	r0, r3
100106a4:	d011      	beq.n	100106ca <MXC_I2C_Shutdown+0x32>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
    } else if (i2c == MXC_I2C2) {
100106a6:	4b10      	ldr	r3, [pc, #64]	@ (100106e8 <MXC_I2C_Shutdown+0x50>)
100106a8:	4298      	cmp	r0, r3
100106aa:	d115      	bne.n	100106d8 <MXC_I2C_Shutdown+0x40>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C2);
100106ac:	2038      	movs	r0, #56	@ 0x38
100106ae:	f7ff fd4f 	bl	10010150 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C2);
100106b2:	2034      	movs	r0, #52	@ 0x34
100106b4:	f7ff fe08 	bl	100102c8 <MXC_SYS_Reset_Periph>
    } else {
        return E_NO_DEVICE;
    }

    return E_NO_ERROR;
100106b8:	2000      	movs	r0, #0
}
100106ba:	bd08      	pop	{r3, pc}
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
100106bc:	200d      	movs	r0, #13
100106be:	f7ff fd47 	bl	10010150 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
100106c2:	2010      	movs	r0, #16
100106c4:	f7ff fe00 	bl	100102c8 <MXC_SYS_Reset_Periph>
100106c8:	e7f6      	b.n	100106b8 <MXC_I2C_Shutdown+0x20>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
100106ca:	201c      	movs	r0, #28
100106cc:	f7ff fd40 	bl	10010150 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
100106d0:	2020      	movs	r0, #32
100106d2:	f7ff fdf9 	bl	100102c8 <MXC_SYS_Reset_Periph>
100106d6:	e7ef      	b.n	100106b8 <MXC_I2C_Shutdown+0x20>
        return E_NO_DEVICE;
100106d8:	f06f 0001 	mvn.w	r0, #1
}
100106dc:	bd08      	pop	{r3, pc}
100106de:	bf00      	nop
100106e0:	4001d000 	.word	0x4001d000
100106e4:	4001e000 	.word	0x4001e000
100106e8:	4001f000 	.word	0x4001f000

100106ec <MXC_I2C_Init>:
    if (i2c == NULL) {
100106ec:	b3c0      	cbz	r0, 10010760 <MXC_I2C_Init+0x74>
{
100106ee:	b570      	push	{r4, r5, r6, lr}
100106f0:	4604      	mov	r4, r0
    MXC_I2C_Shutdown(i2c); // Clear everything out
100106f2:	460d      	mov	r5, r1
100106f4:	4616      	mov	r6, r2
100106f6:	f7ff ffcf 	bl	10010698 <MXC_I2C_Shutdown>
    if (i2c == MXC_I2C0) {
100106fa:	4b1b      	ldr	r3, [pc, #108]	@ (10010768 <MXC_I2C_Init+0x7c>)
100106fc:	429c      	cmp	r4, r3
100106fe:	d012      	beq.n	10010726 <MXC_I2C_Init+0x3a>
    } else if (i2c == MXC_I2C1) {
10010700:	4b1a      	ldr	r3, [pc, #104]	@ (1001076c <MXC_I2C_Init+0x80>)
10010702:	429c      	cmp	r4, r3
10010704:	d01c      	beq.n	10010740 <MXC_I2C_Init+0x54>
    } else if (i2c == MXC_I2C2) {
10010706:	4b1a      	ldr	r3, [pc, #104]	@ (10010770 <MXC_I2C_Init+0x84>)
10010708:	429c      	cmp	r4, r3
1001070a:	d126      	bne.n	1001075a <MXC_I2C_Init+0x6e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C2);
1001070c:	2038      	movs	r0, #56	@ 0x38
1001070e:	f7ff fd3f 	bl	10010190 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c2);
10010712:	4818      	ldr	r0, [pc, #96]	@ (10010774 <MXC_I2C_Init+0x88>)
10010714:	f7ff fe1c 	bl	10010350 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10010718:	4632      	mov	r2, r6
1001071a:	4629      	mov	r1, r5
1001071c:	4620      	mov	r0, r4
}
1001071e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10010722:	f000 b849 	b.w	100107b8 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C0);
10010726:	200d      	movs	r0, #13
10010728:	f7ff fd32 	bl	10010190 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c0);
1001072c:	4812      	ldr	r0, [pc, #72]	@ (10010778 <MXC_I2C_Init+0x8c>)
1001072e:	f7ff fe0f 	bl	10010350 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10010732:	4632      	mov	r2, r6
10010734:	4629      	mov	r1, r5
10010736:	4620      	mov	r0, r4
}
10010738:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1001073c:	f000 b83c 	b.w	100107b8 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C1);
10010740:	201c      	movs	r0, #28
10010742:	f7ff fd25 	bl	10010190 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c1);
10010746:	480d      	ldr	r0, [pc, #52]	@ (1001077c <MXC_I2C_Init+0x90>)
10010748:	f7ff fe02 	bl	10010350 <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1001074c:	4632      	mov	r2, r6
1001074e:	4629      	mov	r1, r5
10010750:	4620      	mov	r0, r4
}
10010752:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
10010756:	f000 b82f 	b.w	100107b8 <MXC_I2C_RevA_Init>
        return E_NO_DEVICE;
1001075a:	f06f 0001 	mvn.w	r0, #1
}
1001075e:	bd70      	pop	{r4, r5, r6, pc}
        return E_NULL_PTR;
10010760:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10010764:	4770      	bx	lr
10010766:	bf00      	nop
10010768:	4001d000 	.word	0x4001d000
1001076c:	4001e000 	.word	0x4001e000
10010770:	4001f000 	.word	0x4001f000
10010774:	1001c450 	.word	0x1001c450
10010778:	1001c468 	.word	0x1001c468
1001077c:	1001c45c 	.word	0x1001c45c

10010780 <MXC_I2C_SetFrequency>:
    return E_NO_ERROR;
}

int MXC_I2C_SetFrequency(mxc_i2c_regs_t *i2c, unsigned int hz)
{
    return MXC_I2C_RevA_SetFrequency((mxc_i2c_reva_regs_t *)i2c, hz);
10010780:	f000 b89a 	b.w	100108b8 <MXC_I2C_RevA_SetFrequency>

10010784 <MXC_I2C_GetFrequency>:
}

int MXC_I2C_GetFrequency(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetFrequency((mxc_i2c_reva_regs_t *)i2c);
10010784:	f000 b8e8 	b.w	10010958 <MXC_I2C_RevA_GetFrequency>

10010788 <MXC_I2C_ReadRXFIFO>:
    return MXC_I2C_RevA_Read((mxc_i2c_reva_regs_t *)i2c, bytes, len, ack);
}

int MXC_I2C_ReadRXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_ReadRXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
10010788:	f000 b8f6 	b.w	10010978 <MXC_I2C_RevA_ReadRXFIFO>

1001078c <MXC_I2C_GetRXFIFOAvailable>:
                                      (mxc_i2c_reva_dma_complete_cb_t)callback, config, MXC_DMA);
}

int MXC_I2C_GetRXFIFOAvailable(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetRXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
1001078c:	f000 b912 	b.w	100109b4 <MXC_I2C_RevA_GetRXFIFOAvailable>

10010790 <MXC_I2C_WriteTXFIFO>:
}

int MXC_I2C_WriteTXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_WriteTXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
10010790:	f000 b918 	b.w	100109c4 <MXC_I2C_RevA_WriteTXFIFO>

10010794 <MXC_I2C_GetTXFIFOAvailable>:
                                       (mxc_i2c_reva_dma_complete_cb_t)callback, config, MXC_DMA);
}

int MXC_I2C_GetTXFIFOAvailable(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetTXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
10010794:	f000 b92e 	b.w	100109f4 <MXC_I2C_RevA_GetTXFIFOAvailable>

10010798 <MXC_I2C_ClearRXFIFO>:
}

void MXC_I2C_ClearRXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearRXFIFO((mxc_i2c_reva_regs_t *)i2c);
10010798:	f000 b938 	b.w	10010a0c <MXC_I2C_RevA_ClearRXFIFO>

1001079c <MXC_I2C_ClearTXFIFO>:
}

void MXC_I2C_ClearTXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearTXFIFO((mxc_i2c_reva_regs_t *)i2c);
1001079c:	f000 b93e 	b.w	10010a1c <MXC_I2C_RevA_ClearTXFIFO>

100107a0 <MXC_I2C_ClearFlags>:
    return MXC_I2C_RevA_GetFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
}

void MXC_I2C_ClearFlags(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_ClearFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
100107a0:	f000 b944 	b.w	10010a2c <MXC_I2C_RevA_ClearFlags>

100107a4 <MXC_I2C_EnableInt>:
}

void MXC_I2C_EnableInt(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_EnableInt((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
100107a4:	f000 b946 	b.w	10010a34 <MXC_I2C_RevA_EnableInt>

100107a8 <MXC_I2C_DisableInt>:
}

void MXC_I2C_DisableInt(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_DisableInt((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
100107a8:	f000 b94c 	b.w	10010a44 <MXC_I2C_RevA_DisableInt>

100107ac <MXC_I2C_Recover>:
    return MXC_I2C_RevA_GetTimeout((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_Recover(mxc_i2c_regs_t *i2c, unsigned int retries)
{
    return MXC_I2C_RevA_Recover((mxc_i2c_reva_regs_t *)i2c, retries);
100107ac:	f000 b954 	b.w	10010a58 <MXC_I2C_RevA_Recover>

100107b0 <MXC_I2C_SetRXThreshold>:
        (mxc_i2c_reva_regs_t *)i2c, (mxc_i2c_reva_slave_handler_t)callback, interruptCheck);
}

int MXC_I2C_SetRXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetRXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
100107b0:	f000 b9be 	b.w	10010b30 <MXC_I2C_RevA_SetRXThreshold>

100107b4 <MXC_I2C_SetTXThreshold>:
    return MXC_I2C_RevA_GetRXThreshold((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_SetTXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetTXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
100107b4:	f000 b9cc 	b.w	10010b50 <MXC_I2C_RevA_SetTXThreshold>

100107b8 <MXC_I2C_RevA_Init>:

/* ************************************************************************* */
/* Control/Configuration functions                                           */
/* ************************************************************************* */
int MXC_I2C_RevA_Init(mxc_i2c_reva_regs_t *i2c, int masterMode, unsigned int slaveAddr)
{
100107b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int err;

    if (i2c == NULL) {
100107ba:	2800      	cmp	r0, #0
100107bc:	d057      	beq.n	1001086e <MXC_I2C_RevA_Init+0xb6>
        return E_NULL_PTR;
    }

    if ((err = MXC_I2C_Recover((mxc_i2c_regs_t *)i2c, 16)) != E_NO_ERROR) {
100107be:	460f      	mov	r7, r1
100107c0:	2110      	movs	r1, #16
100107c2:	4615      	mov	r5, r2
100107c4:	4604      	mov	r4, r0
100107c6:	f7ff fff1 	bl	100107ac <MXC_I2C_Recover>
100107ca:	4606      	mov	r6, r0
100107cc:	b108      	cbz	r0, 100107d2 <MXC_I2C_RevA_Init+0x1a>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
    }

    return E_NO_ERROR;
}
100107ce:	4630      	mov	r0, r6
100107d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
100107d2:	6823      	ldr	r3, [r4, #0]
100107d4:	f043 0301 	orr.w	r3, r3, #1
100107d8:	6023      	str	r3, [r4, #0]
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
100107da:	4620      	mov	r0, r4
100107dc:	f7ff ffdc 	bl	10010798 <MXC_I2C_ClearRXFIFO>
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
100107e0:	4620      	mov	r0, r4
100107e2:	f7ff ffdb 	bl	1001079c <MXC_I2C_ClearTXFIFO>
    MXC_I2C_SetTXThreshold((mxc_i2c_regs_t *)i2c, 2); // set TX threshold to 2 bytes
100107e6:	2102      	movs	r1, #2
100107e8:	4620      	mov	r0, r4
100107ea:	f7ff ffe3 	bl	100107b4 <MXC_I2C_SetTXThreshold>
    MXC_I2C_SetRXThreshold((mxc_i2c_regs_t *)i2c, 6); // set RX threshold to 6 bytes
100107ee:	2106      	movs	r1, #6
100107f0:	4620      	mov	r0, r4
100107f2:	f7ff ffdd 	bl	100107b0 <MXC_I2C_SetRXThreshold>
    if (!masterMode) {
100107f6:	b1df      	cbz	r7, 10010830 <MXC_I2C_RevA_Init+0x78>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
100107f8:	6823      	ldr	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
100107fa:	4a1e      	ldr	r2, [pc, #120]	@ (10010874 <MXC_I2C_RevA_Init+0xbc>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
100107fc:	f043 0302 	orr.w	r3, r3, #2
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10010800:	4294      	cmp	r4, r2
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
10010802:	6023      	str	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10010804:	d02f      	beq.n	10010866 <MXC_I2C_RevA_Init+0xae>
10010806:	4b1c      	ldr	r3, [pc, #112]	@ (10010878 <MXC_I2C_RevA_Init+0xc0>)
10010808:	429c      	cmp	r4, r3
1001080a:	d00f      	beq.n	1001082c <MXC_I2C_RevA_Init+0x74>
1001080c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010810:	429c      	cmp	r4, r3
10010812:	bf14      	ite	ne
10010814:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
10010818:	2402      	moveq	r4, #2
1001081a:	4b18      	ldr	r3, [pc, #96]	@ (1001087c <MXC_I2C_RevA_Init+0xc4>)
1001081c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
10010820:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
10010824:	2201      	movs	r2, #1
10010826:	605a      	str	r2, [r3, #4]
}
10010828:	4630      	mov	r0, r6
1001082a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1001082c:	2401      	movs	r4, #1
1001082e:	e7f4      	b.n	1001081a <MXC_I2C_RevA_Init+0x62>
        MXC_I2C_SetSlaveAddr((mxc_i2c_regs_t *)i2c, slaveAddr, 0);
10010830:	463a      	mov	r2, r7
10010832:	4629      	mov	r1, r5
10010834:	4620      	mov	r0, r4
10010836:	f7ff ff2d 	bl	10010694 <MXC_I2C_SetSlaveAddr>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
1001083a:	4b0e      	ldr	r3, [pc, #56]	@ (10010874 <MXC_I2C_RevA_Init+0xbc>)
1001083c:	429c      	cmp	r4, r3
1001083e:	d009      	beq.n	10010854 <MXC_I2C_RevA_Init+0x9c>
10010840:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010844:	429c      	cmp	r4, r3
10010846:	d010      	beq.n	1001086a <MXC_I2C_RevA_Init+0xb2>
10010848:	4f0d      	ldr	r7, [pc, #52]	@ (10010880 <MXC_I2C_RevA_Init+0xc8>)
1001084a:	42bc      	cmp	r4, r7
1001084c:	bf14      	ite	ne
1001084e:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
10010852:	2702      	moveq	r7, #2
10010854:	4b09      	ldr	r3, [pc, #36]	@ (1001087c <MXC_I2C_RevA_Init+0xc4>)
10010856:	eb07 0147 	add.w	r1, r7, r7, lsl #1
1001085a:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
1001085e:	2200      	movs	r2, #0
10010860:	605a      	str	r2, [r3, #4]
}
10010862:	4630      	mov	r0, r6
10010864:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
10010866:	4634      	mov	r4, r6
10010868:	e7d7      	b.n	1001081a <MXC_I2C_RevA_Init+0x62>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
1001086a:	2701      	movs	r7, #1
1001086c:	e7f2      	b.n	10010854 <MXC_I2C_RevA_Init+0x9c>
        return E_NULL_PTR;
1001086e:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
10010872:	e7ac      	b.n	100107ce <MXC_I2C_RevA_Init+0x16>
10010874:	4001d000 	.word	0x4001d000
10010878:	4001e000 	.word	0x4001e000
1001087c:	20000fe0 	.word	0x20000fe0
10010880:	4001f000 	.word	0x4001f000

10010884 <MXC_I2C_RevA_SetSlaveAddr>:

int MXC_I2C_RevA_SetSlaveAddr(mxc_i2c_reva_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    if (i2c == NULL) {
10010884:	4603      	mov	r3, r0
10010886:	b1a0      	cbz	r0, 100108b2 <MXC_I2C_RevA_SetSlaveAddr+0x2e>
        return E_NULL_PTR;
    }

    if (idx != 0) {
10010888:	b96a      	cbnz	r2, 100108a6 <MXC_I2C_RevA_SetSlaveAddr+0x22>
        // Multiple slaves are not supported yet
        return E_NOT_SUPPORTED;
    }

    if (slaveAddr > MXC_F_I2C_REVA_SLAVE_ADDR) {
1001088a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
1001088e:	d20d      	bcs.n	100108ac <MXC_I2C_RevA_SetSlaveAddr+0x28>
        return E_BAD_PARAM;
    }

    i2c->slave = 0;

    if (slaveAddr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
10010890:	297f      	cmp	r1, #127	@ 0x7f
    i2c->slave = 0;
10010892:	64c2      	str	r2, [r0, #76]	@ 0x4c
        // Set for 10bit addressing mode
        i2c->slave = MXC_F_I2C_REVA_SLAVE_EXT_ADDR_EN;
10010894:	bf84      	itt	hi
10010896:	f44f 4200 	movhi.w	r2, #32768	@ 0x8000
1001089a:	64c2      	strhi	r2, [r0, #76]	@ 0x4c
    }

    i2c->slave |= slaveAddr;
1001089c:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
1001089e:	430a      	orrs	r2, r1

    return E_NO_ERROR;
100108a0:	2000      	movs	r0, #0
    i2c->slave |= slaveAddr;
100108a2:	64da      	str	r2, [r3, #76]	@ 0x4c
    return E_NO_ERROR;
100108a4:	4770      	bx	lr
        return E_NOT_SUPPORTED;
100108a6:	f06f 0010 	mvn.w	r0, #16
100108aa:	4770      	bx	lr
        return E_BAD_PARAM;
100108ac:	f06f 0002 	mvn.w	r0, #2
}
100108b0:	4770      	bx	lr
        return E_NULL_PTR;
100108b2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100108b6:	4770      	bx	lr

100108b8 <MXC_I2C_RevA_SetFrequency>:

int MXC_I2C_RevA_SetFrequency(mxc_i2c_reva_regs_t *i2c, unsigned int hz)
{
    unsigned int ticksTotal, hiClks, lowClks;

    if (i2c == NULL) {
100108b8:	2800      	cmp	r0, #0
100108ba:	d03f      	beq.n	1001093c <MXC_I2C_RevA_SetFrequency+0x84>
{
100108bc:	b410      	push	{r4}
        return E_NULL_PTR;
    }

    if (hz > MXC_I2C_REVA_FASTPLUS_SPEED && hz <= MXC_I2C_REVA_HIGH_SPEED) {
100108be:	4a21      	ldr	r2, [pc, #132]	@ (10010944 <MXC_I2C_RevA_SetFrequency+0x8c>)
100108c0:	f5a1 2374 	sub.w	r3, r1, #999424	@ 0xf4000
100108c4:	f46f 7410 	mvn.w	r4, #576	@ 0x240
100108c8:	4423      	add	r3, r4
100108ca:	4293      	cmp	r3, r2
100108cc:	d313      	bcc.n	100108f6 <MXC_I2C_RevA_SetFrequency+0x3e>

        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;

        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz

    } else if (hz > MXC_I2C_REVA_HIGH_SPEED) {
100108ce:	4b1e      	ldr	r3, [pc, #120]	@ (10010948 <MXC_I2C_RevA_SetFrequency+0x90>)
100108d0:	4299      	cmp	r1, r3
100108d2:	d82f      	bhi.n	10010934 <MXC_I2C_RevA_SetFrequency+0x7c>
        ticksTotal = PeripheralClock / hz;
100108d4:	4b1d      	ldr	r3, [pc, #116]	@ (1001094c <MXC_I2C_RevA_SetFrequency+0x94>)
        return E_BAD_PARAM;
    }

    // Calculate the period of SCL, 50% duty cycle
    ticksTotal = PeripheralClock / hz;
100108d6:	681b      	ldr	r3, [r3, #0]
100108d8:	085b      	lsrs	r3, r3, #1
100108da:	fbb3 f3f1 	udiv	r3, r3, r1
    hiClks = (ticksTotal >> 1) - 1;
100108de:	085b      	lsrs	r3, r3, #1
    if (ticksTotal % 1) {
        hiClks++;
    }

    // Check for maximum/minimum supported speeds
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
100108e0:	1e9a      	subs	r2, r3, #2
100108e2:	f5b2 7fff 	cmp.w	r2, #510	@ 0x1fe
    hiClks = (ticksTotal >> 1) - 1;
100108e6:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
100108ea:	d823      	bhi.n	10010934 <MXC_I2C_RevA_SetFrequency+0x7c>
        return E_BAD_PARAM;
    }

    i2c->clklo = lowClks & MXC_F_I2C_REVA_CLKLO_LO;
100108ec:	6343      	str	r3, [r0, #52]	@ 0x34
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;

    // Return the actual speed set, since it won't be exactly what's requested
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
}
100108ee:	bc10      	pop	{r4}
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;
100108f0:	6383      	str	r3, [r0, #56]	@ 0x38
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
100108f2:	f7ff bf47 	b.w	10010784 <MXC_I2C_GetFrequency>
        ticksTotal = PeripheralClock / hz;
100108f6:	4b15      	ldr	r3, [pc, #84]	@ (1001094c <MXC_I2C_RevA_SetFrequency+0x94>)
        hsLowClks = (ticksTotal * 2) / 3 - 1;
100108f8:	4c15      	ldr	r4, [pc, #84]	@ (10010950 <MXC_I2C_RevA_SetFrequency+0x98>)
        ticksTotal = PeripheralClock / hz;
100108fa:	681b      	ldr	r3, [r3, #0]
100108fc:	085b      	lsrs	r3, r3, #1
100108fe:	fbb3 f1f1 	udiv	r1, r3, r1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10010902:	004a      	lsls	r2, r1, #1
        hsHiClks = ticksTotal / 3 - 1;
10010904:	fba4 c101 	umull	ip, r1, r4, r1
10010908:	0849      	lsrs	r1, r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1001090a:	fba4 4202 	umull	r4, r2, r4, r2
        hsHiClks = ticksTotal / 3 - 1;
1001090e:	3901      	subs	r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10010910:	0852      	lsrs	r2, r2, #1
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
10010912:	290f      	cmp	r1, #15
        hsLowClks = (ticksTotal * 2) / 3 - 1;
10010914:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
10010918:	dc0c      	bgt.n	10010934 <MXC_I2C_RevA_SetFrequency+0x7c>
1001091a:	2a0f      	cmp	r2, #15
1001091c:	dc0a      	bgt.n	10010934 <MXC_I2C_RevA_SetFrequency+0x7c>
        hsHiClks = (hsHiClks << MXC_F_I2C_REVA_HSCLK_HI_POS) & MXC_F_I2C_REVA_HSCLK_HI;
1001091e:	0209      	lsls	r1, r1, #8
10010920:	b289      	uxth	r1, r1
        i2c->hsclk = (hsLowClks | hsHiClks);
10010922:	b2d2      	uxtb	r2, r2
10010924:	430a      	orrs	r2, r1
10010926:	63c2      	str	r2, [r0, #60]	@ 0x3c
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
10010928:	6802      	ldr	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
1001092a:	490a      	ldr	r1, [pc, #40]	@ (10010954 <MXC_I2C_RevA_SetFrequency+0x9c>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
1001092c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
10010930:	6002      	str	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
10010932:	e7d2      	b.n	100108da <MXC_I2C_RevA_SetFrequency+0x22>
            return E_BAD_PARAM;
10010934:	f06f 0002 	mvn.w	r0, #2
}
10010938:	bc10      	pop	{r4}
1001093a:	4770      	bx	lr
        return E_NULL_PTR;
1001093c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10010940:	4770      	bx	lr
10010942:	bf00      	nop
10010944:	00249f00 	.word	0x00249f00
10010948:	0033e140 	.word	0x0033e140
1001094c:	20001740 	.word	0x20001740
10010950:	aaaaaaab 	.word	0xaaaaaaab
10010954:	00061a80 	.word	0x00061a80

10010958 <MXC_I2C_RevA_GetFrequency>:
    unsigned int sclCycles = 0;

    // Calculate the speed based on what we've written into registers
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);

    return PeripheralClock / sclCycles;
10010958:	4906      	ldr	r1, [pc, #24]	@ (10010974 <MXC_I2C_RevA_GetFrequency+0x1c>)
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1001095a:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001095c:	6b82      	ldr	r2, [r0, #56]	@ 0x38
    return PeripheralClock / sclCycles;
1001095e:	6808      	ldr	r0, [r1, #0]
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
10010960:	f3c2 0208 	ubfx	r2, r2, #0, #9
10010964:	f3c3 0308 	ubfx	r3, r3, #0, #9
10010968:	4413      	add	r3, r2
    return PeripheralClock / sclCycles;
1001096a:	0840      	lsrs	r0, r0, #1
}
1001096c:	fbb0 f0f3 	udiv	r0, r0, r3
10010970:	4770      	bx	lr
10010972:	bf00      	nop
10010974:	20001740 	.word	0x20001740

10010978 <MXC_I2C_RevA_ReadRXFIFO>:
int MXC_I2C_RevA_ReadRXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                            unsigned int len)
{
    unsigned read = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
10010978:	b1c8      	cbz	r0, 100109ae <MXC_I2C_RevA_ReadRXFIFO+0x36>
1001097a:	b1c1      	cbz	r1, 100109ae <MXC_I2C_RevA_ReadRXFIFO+0x36>
        return E_NULL_PTR;
    }

    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1001097c:	b1aa      	cbz	r2, 100109aa <MXC_I2C_RevA_ReadRXFIFO+0x32>
{
1001097e:	b500      	push	{lr}
    unsigned read = 0;
10010980:	2300      	movs	r3, #0
        bytes[read++] = i2c->fifo;
10010982:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10010986:	e007      	b.n	10010998 <MXC_I2C_RevA_ReadRXFIFO+0x20>
10010988:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1001098a:	3301      	adds	r3, #1
1001098c:	fa5f fc81 	uxtb.w	ip, r1
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10010990:	429a      	cmp	r2, r3
        bytes[read++] = i2c->fifo;
10010992:	f80e c003 	strb.w	ip, [lr, r3]
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
10010996:	d005      	beq.n	100109a4 <MXC_I2C_RevA_ReadRXFIFO+0x2c>
10010998:	6841      	ldr	r1, [r0, #4]
1001099a:	0789      	lsls	r1, r1, #30
1001099c:	d5f4      	bpl.n	10010988 <MXC_I2C_RevA_ReadRXFIFO+0x10>
    }

    return read;
1001099e:	4618      	mov	r0, r3
}
100109a0:	f85d fb04 	ldr.w	pc, [sp], #4
    return read;
100109a4:	4610      	mov	r0, r2
}
100109a6:	f85d fb04 	ldr.w	pc, [sp], #4
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
100109aa:	4610      	mov	r0, r2
100109ac:	4770      	bx	lr
        return E_NULL_PTR;
100109ae:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
100109b2:	4770      	bx	lr

100109b4 <MXC_I2C_RevA_GetRXFIFOAvailable>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_GetRXFIFOAvailable(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
100109b4:	b118      	cbz	r0, 100109be <MXC_I2C_RevA_GetRXFIFOAvailable+0xa>
        return E_NULL_PTR;
    }

    return (i2c->rxctrl1 & MXC_F_I2C_REVA_RXCTRL1_LVL) >> MXC_F_I2C_REVA_RXCTRL1_LVL_POS;
100109b6:	6a00      	ldr	r0, [r0, #32]
100109b8:	f3c0 2003 	ubfx	r0, r0, #8, #4
100109bc:	4770      	bx	lr
        return E_NULL_PTR;
100109be:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
100109c2:	4770      	bx	lr

100109c4 <MXC_I2C_RevA_WriteTXFIFO>:
int MXC_I2C_RevA_WriteTXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                             unsigned int len)
{
    unsigned written = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
100109c4:	b198      	cbz	r0, 100109ee <MXC_I2C_RevA_WriteTXFIFO+0x2a>
100109c6:	b191      	cbz	r1, 100109ee <MXC_I2C_RevA_WriteTXFIFO+0x2a>
        return E_NULL_PTR;
    }

    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
100109c8:	b17a      	cbz	r2, 100109ea <MXC_I2C_RevA_WriteTXFIFO+0x26>
    unsigned written = 0;
100109ca:	2300      	movs	r3, #0
        i2c->fifo = bytes[written++];
100109cc:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
100109d0:	e006      	b.n	100109e0 <MXC_I2C_RevA_WriteTXFIFO+0x1c>
100109d2:	3301      	adds	r3, #1
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
100109d4:	429a      	cmp	r2, r3
        i2c->fifo = bytes[written++];
100109d6:	f81c 1003 	ldrb.w	r1, [ip, r3]
100109da:	b2c9      	uxtb	r1, r1
100109dc:	62c1      	str	r1, [r0, #44]	@ 0x2c
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
100109de:	d004      	beq.n	100109ea <MXC_I2C_RevA_WriteTXFIFO+0x26>
100109e0:	6841      	ldr	r1, [r0, #4]
100109e2:	06c9      	lsls	r1, r1, #27
100109e4:	d5f5      	bpl.n	100109d2 <MXC_I2C_RevA_WriteTXFIFO+0xe>
    }

    return written;
100109e6:	4618      	mov	r0, r3
100109e8:	4770      	bx	lr
100109ea:	4610      	mov	r0, r2
100109ec:	4770      	bx	lr
        return E_NULL_PTR;
100109ee:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
100109f2:	4770      	bx	lr

100109f4 <MXC_I2C_RevA_GetTXFIFOAvailable>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_GetTXFIFOAvailable(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
100109f4:	b138      	cbz	r0, 10010a06 <MXC_I2C_RevA_GetTXFIFOAvailable+0x12>
        return E_NULL_PTR;
    }

    int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
100109f6:	6983      	ldr	r3, [r0, #24]
                    MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;
    return txFIFOlen -
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
100109f8:	6a82      	ldr	r2, [r0, #40]	@ 0x28
    return txFIFOlen -
100109fa:	f3c3 2007 	ubfx	r0, r3, #8, #8
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
100109fe:	f3c2 2303 	ubfx	r3, r2, #8, #4
    return txFIFOlen -
10010a02:	1ac0      	subs	r0, r0, r3
10010a04:	4770      	bx	lr
        return E_NULL_PTR;
10010a06:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10010a0a:	4770      	bx	lr

10010a0c <MXC_I2C_RevA_ClearRXFIFO>:

void MXC_I2C_RevA_ClearRXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
10010a0c:	69c3      	ldr	r3, [r0, #28]
10010a0e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10010a12:	61c3      	str	r3, [r0, #28]

    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
10010a14:	69c3      	ldr	r3, [r0, #28]
10010a16:	061b      	lsls	r3, r3, #24
10010a18:	d4fc      	bmi.n	10010a14 <MXC_I2C_RevA_ClearRXFIFO+0x8>
}
10010a1a:	4770      	bx	lr

10010a1c <MXC_I2C_RevA_ClearTXFIFO>:

void MXC_I2C_RevA_ClearTXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
10010a1c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10010a1e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10010a22:	6243      	str	r3, [r0, #36]	@ 0x24

    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
10010a24:	6a43      	ldr	r3, [r0, #36]	@ 0x24
10010a26:	061b      	lsls	r3, r3, #24
10010a28:	d4fc      	bmi.n	10010a24 <MXC_I2C_RevA_ClearTXFIFO+0x8>
}
10010a2a:	4770      	bx	lr

10010a2c <MXC_I2C_RevA_ClearFlags>:
    return E_NO_ERROR;
}

void MXC_I2C_RevA_ClearFlags(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->intfl0 = flags0;
10010a2c:	6081      	str	r1, [r0, #8]
    i2c->intfl1 = flags1;
10010a2e:	6102      	str	r2, [r0, #16]
}
10010a30:	4770      	bx	lr
10010a32:	bf00      	nop

10010a34 <MXC_I2C_RevA_EnableInt>:

void MXC_I2C_RevA_EnableInt(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->inten0 |= flags0;
10010a34:	68c3      	ldr	r3, [r0, #12]
10010a36:	430b      	orrs	r3, r1
10010a38:	60c3      	str	r3, [r0, #12]
    i2c->inten1 |= flags1;
10010a3a:	6943      	ldr	r3, [r0, #20]
10010a3c:	4313      	orrs	r3, r2
10010a3e:	6143      	str	r3, [r0, #20]
}
10010a40:	4770      	bx	lr
10010a42:	bf00      	nop

10010a44 <MXC_I2C_RevA_DisableInt>:

void MXC_I2C_RevA_DisableInt(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->inten0 &= ~flags0;
10010a44:	68c3      	ldr	r3, [r0, #12]
10010a46:	ea23 0301 	bic.w	r3, r3, r1
10010a4a:	60c3      	str	r3, [r0, #12]
    i2c->inten1 &= ~flags1;
10010a4c:	6943      	ldr	r3, [r0, #20]
10010a4e:	ea23 0302 	bic.w	r3, r3, r2
10010a52:	6143      	str	r3, [r0, #20]
}
10010a54:	4770      	bx	lr
10010a56:	bf00      	nop

10010a58 <MXC_I2C_RevA_Recover>:
int MXC_I2C_RevA_Recover(mxc_i2c_reva_regs_t *i2c, unsigned int retries)
{
    int err;
    unsigned int i;

    if (i2c == NULL) {
10010a58:	2800      	cmp	r0, #0
10010a5a:	d065      	beq.n	10010b28 <MXC_I2C_RevA_Recover+0xd0>
        return E_NULL_PTR;
    }

    err = E_COMM_ERR;

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10010a5c:	6803      	ldr	r3, [r0, #0]
10010a5e:	f043 0301 	orr.w	r3, r3, #1
{
10010a62:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
10010a66:	6003      	str	r3, [r0, #0]
    int swBit = i2c->ctrl & MXC_F_I2C_REVA_CTRL_BB_MODE;
10010a68:	6807      	ldr	r7, [r0, #0]

    if (i2c == NULL) {
        return E_NULL_PTR;
    }

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_BB_MODE;
10010a6a:	6803      	ldr	r3, [r0, #0]
10010a6c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
10010a70:	460e      	mov	r6, r1
10010a72:	4604      	mov	r4, r0
10010a74:	f407 6780 	and.w	r7, r7, #1024	@ 0x400
10010a78:	6003      	str	r3, [r0, #0]

    // Follow the procedure detailed in the header file
    // Delay 10uS between each step to give the line/slaves time to react
    for (i = 0; i < retries; i++) {
10010a7a:	2900      	cmp	r1, #0
10010a7c:	d043      	beq.n	10010b06 <MXC_I2C_RevA_Recover+0xae>
10010a7e:	2500      	movs	r5, #0
10010a80:	e02b      	b.n	10010ada <MXC_I2C_RevA_Recover+0x82>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10010a82:	f7ff fb03 	bl	1001008c <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SDA_OUT;
10010a86:	6823      	ldr	r3, [r4, #0]
10010a88:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10010a8c:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10010a8e:	200a      	movs	r0, #10
10010a90:	f7ff fafc 	bl	1001008c <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10010a94:	6823      	ldr	r3, [r4, #0]
10010a96:	f413 7800 	ands.w	r8, r3, #512	@ 0x200
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10010a9a:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
10010a9e:	d12b      	bne.n	10010af8 <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10010aa0:	f7ff faf4 	bl	1001008c <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SDA_OUT;
10010aa4:	6823      	ldr	r3, [r4, #0]
10010aa6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10010aaa:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10010aac:	200a      	movs	r0, #10
10010aae:	f7ff faed 	bl	1001008c <MXC_Delay>

        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10010ab2:	6823      	ldr	r3, [r4, #0]
10010ab4:	059a      	lsls	r2, r3, #22
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
10010ab6:	f04f 000a 	mov.w	r0, #10
        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
10010aba:	d51d      	bpl.n	10010af8 <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
10010abc:	f7ff fae6 	bl	1001008c <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT;
10010ac0:	6823      	ldr	r3, [r4, #0]
10010ac2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10010ac6:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
10010ac8:	200a      	movs	r0, #10
10010aca:	f7ff fadf 	bl	1001008c <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10010ace:	6823      	ldr	r3, [r4, #0]
10010ad0:	05db      	lsls	r3, r3, #23
10010ad2:	d425      	bmi.n	10010b20 <MXC_I2C_RevA_Recover+0xc8>
    for (i = 0; i < retries; i++) {
10010ad4:	3501      	adds	r5, #1
10010ad6:	42ae      	cmp	r6, r5
10010ad8:	d015      	beq.n	10010b06 <MXC_I2C_RevA_Recover+0xae>
        MXC_Delay(10);
10010ada:	200a      	movs	r0, #10
10010adc:	f7ff fad6 	bl	1001008c <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SCL_OUT;
10010ae0:	6823      	ldr	r3, [r4, #0]
10010ae2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
10010ae6:	6023      	str	r3, [r4, #0]
        MXC_Delay(10);
10010ae8:	200a      	movs	r0, #10
10010aea:	f7ff facf 	bl	1001008c <MXC_Delay>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10010aee:	6823      	ldr	r3, [r4, #0]
10010af0:	05d9      	lsls	r1, r3, #23
        MXC_Delay(10);
10010af2:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
10010af6:	d5c4      	bpl.n	10010a82 <MXC_I2C_RevA_Recover+0x2a>
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10010af8:	6823      	ldr	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10010afa:	3501      	adds	r5, #1
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10010afc:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
    for (i = 0; i < retries; i++) {
10010b00:	42ae      	cmp	r6, r5
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
10010b02:	6023      	str	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
10010b04:	d1e9      	bne.n	10010ada <MXC_I2C_RevA_Recover+0x82>
    err = E_COMM_ERR;
10010b06:	f06f 0008 	mvn.w	r0, #8
            err = E_NO_ERROR; // We have control
            break;
        }
    }

    if (swBit == 0) {
10010b0a:	b91f      	cbnz	r7, 10010b14 <MXC_I2C_RevA_Recover+0xbc>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_BB_MODE;
10010b0c:	6823      	ldr	r3, [r4, #0]
10010b0e:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10010b12:	6023      	str	r3, [r4, #0]
    }

    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_EN;
10010b14:	6823      	ldr	r3, [r4, #0]
10010b16:	f023 0301 	bic.w	r3, r3, #1
10010b1a:	6023      	str	r3, [r4, #0]

    return err;
}
10010b1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            err = E_NO_ERROR; // We have control
10010b20:	4640      	mov	r0, r8
    if (swBit == 0) {
10010b22:	2f00      	cmp	r7, #0
10010b24:	d1f6      	bne.n	10010b14 <MXC_I2C_RevA_Recover+0xbc>
10010b26:	e7f1      	b.n	10010b0c <MXC_I2C_RevA_Recover+0xb4>
        return E_NULL_PTR;
10010b28:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
10010b2c:	4770      	bx	lr
10010b2e:	bf00      	nop

10010b30 <MXC_I2C_RevA_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_SetRXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int rxFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH) >>
10010b30:	6982      	ldr	r2, [r0, #24]
10010b32:	b2d2      	uxtb	r2, r2
                             MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH_POS;

    if (numBytes > rxFIFOlen) {
10010b34:	428a      	cmp	r2, r1
{
10010b36:	4603      	mov	r3, r0
    if (numBytes > rxFIFOlen) {
10010b38:	d307      	bcc.n	10010b4a <MXC_I2C_RevA_SetRXThreshold+0x1a>
        return E_BAD_PARAM;
    }

    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
10010b3a:	69c2      	ldr	r2, [r0, #28]
10010b3c:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10010b40:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10010b44:	2000      	movs	r0, #0
    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
10010b46:	61d9      	str	r1, [r3, #28]
    return E_NO_ERROR;
10010b48:	4770      	bx	lr
        return E_BAD_PARAM;
10010b4a:	f06f 0002 	mvn.w	r0, #2
}
10010b4e:	4770      	bx	lr

10010b50 <MXC_I2C_RevA_SetTXThreshold>:
    return (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_THD_LVL) >> MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS;
}

int MXC_I2C_RevA_SetTXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
10010b50:	6982      	ldr	r2, [r0, #24]
10010b52:	f3c2 2207 	ubfx	r2, r2, #8, #8
                             MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;

    if (numBytes > txFIFOlen) {
10010b56:	428a      	cmp	r2, r1
{
10010b58:	4603      	mov	r3, r0
    if (numBytes > txFIFOlen) {
10010b5a:	d307      	bcc.n	10010b6c <MXC_I2C_RevA_SetTXThreshold+0x1c>
        return E_BAD_PARAM;
    }

    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
10010b5c:	6a42      	ldr	r2, [r0, #36]	@ 0x24
10010b5e:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
10010b62:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_TXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
10010b66:	2000      	movs	r0, #0
    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
10010b68:	6259      	str	r1, [r3, #36]	@ 0x24
    return E_NO_ERROR;
10010b6a:	4770      	bx	lr
        return E_BAD_PARAM;
10010b6c:	f06f 0002 	mvn.w	r0, #2
}
10010b70:	4770      	bx	lr
10010b72:	bf00      	nop

10010b74 <MXC_ICC_Enable>:
    return MXC_ICC_RevA_ID((mxc_icc_reva_regs_t *)icc, cid);
}

void MXC_ICC_Enable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Enable((mxc_icc_reva_regs_t *)icc);
10010b74:	f000 b800 	b.w	10010b78 <MXC_ICC_RevA_Enable>

10010b78 <MXC_ICC_RevA_Enable>:
}

void MXC_ICC_RevA_Enable(mxc_icc_reva_regs_t *icc)
{
    // Invalidate cache and wait until ready
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10010b78:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
10010b7c:	2201      	movs	r2, #1
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
10010b7e:	f023 0301 	bic.w	r3, r3, #1
10010b82:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
10010b86:	f8c0 2700 	str.w	r2, [r0, #1792]	@ 0x700
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10010b8a:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100

    while (!(MXC_ICC_Ready(icc))) {}
10010b8e:	03da      	lsls	r2, r3, #15
10010b90:	d5fb      	bpl.n	10010b8a <MXC_ICC_RevA_Enable+0x12>

    // Enable Cache
    icc->ctrl |= MXC_F_ICC_REVA_CTRL_EN;
10010b92:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
10010b96:	f043 0301 	orr.w	r3, r3, #1
10010b9a:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
10010b9e:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    while (!(MXC_ICC_Ready(icc))) {}
10010ba2:	03db      	lsls	r3, r3, #15
10010ba4:	d5fb      	bpl.n	10010b9e <MXC_ICC_RevA_Enable+0x26>
}
10010ba6:	4770      	bx	lr

10010ba8 <MXC_UART_Shutdown>:

    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
}

int MXC_UART_Shutdown(mxc_uart_regs_t *uart)
{
10010ba8:	b508      	push	{r3, lr}
    switch (MXC_UART_GET_IDX(uart)) {
10010baa:	4b16      	ldr	r3, [pc, #88]	@ (10010c04 <MXC_UART_Shutdown+0x5c>)
10010bac:	4298      	cmp	r0, r3
10010bae:	d010      	beq.n	10010bd2 <MXC_UART_Shutdown+0x2a>
10010bb0:	4b15      	ldr	r3, [pc, #84]	@ (10010c08 <MXC_UART_Shutdown+0x60>)
10010bb2:	4298      	cmp	r0, r3
10010bb4:	d014      	beq.n	10010be0 <MXC_UART_Shutdown+0x38>
10010bb6:	4b15      	ldr	r3, [pc, #84]	@ (10010c0c <MXC_UART_Shutdown+0x64>)
10010bb8:	4298      	cmp	r0, r3
10010bba:	d018      	beq.n	10010bee <MXC_UART_Shutdown+0x46>
10010bbc:	4b14      	ldr	r3, [pc, #80]	@ (10010c10 <MXC_UART_Shutdown+0x68>)
10010bbe:	4298      	cmp	r0, r3
10010bc0:	d11c      	bne.n	10010bfc <MXC_UART_Shutdown+0x54>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
        break;

    case 3:
        MXC_SYS_Reset_Periph(MXC_SYS_RESET_UART3);
10010bc2:	2044      	movs	r0, #68	@ 0x44
10010bc4:	f7ff fb80 	bl	100102c8 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART3);
10010bc8:	2044      	movs	r0, #68	@ 0x44
10010bca:	f7ff fac1 	bl	10010150 <MXC_SYS_ClockDisable>

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
10010bce:	2000      	movs	r0, #0
}
10010bd0:	bd08      	pop	{r3, pc}
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART0);
10010bd2:	200b      	movs	r0, #11
10010bd4:	f7ff fb78 	bl	100102c8 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART0);
10010bd8:	2009      	movs	r0, #9
10010bda:	f7ff fab9 	bl	10010150 <MXC_SYS_ClockDisable>
        break;
10010bde:	e7f6      	b.n	10010bce <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART1);
10010be0:	200c      	movs	r0, #12
10010be2:	f7ff fb71 	bl	100102c8 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART1);
10010be6:	200a      	movs	r0, #10
10010be8:	f7ff fab2 	bl	10010150 <MXC_SYS_ClockDisable>
        break;
10010bec:	e7ef      	b.n	10010bce <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
10010bee:	201c      	movs	r0, #28
10010bf0:	f7ff fb6a 	bl	100102c8 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
10010bf4:	2021      	movs	r0, #33	@ 0x21
10010bf6:	f7ff faab 	bl	10010150 <MXC_SYS_ClockDisable>
        break;
10010bfa:	e7e8      	b.n	10010bce <MXC_UART_Shutdown+0x26>
        return E_BAD_PARAM;
10010bfc:	f06f 0002 	mvn.w	r0, #2
}
10010c00:	bd08      	pop	{r3, pc}
10010c02:	bf00      	nop
10010c04:	40042000 	.word	0x40042000
10010c08:	40043000 	.word	0x40043000
10010c0c:	40044000 	.word	0x40044000
10010c10:	40081400 	.word	0x40081400

10010c14 <MXC_UART_Init>:
{
10010c14:	b570      	push	{r4, r5, r6, lr}
10010c16:	4604      	mov	r4, r0
10010c18:	460e      	mov	r6, r1
10010c1a:	4615      	mov	r5, r2
    retval = MXC_UART_Shutdown(uart);
10010c1c:	f7ff ffc4 	bl	10010ba8 <MXC_UART_Shutdown>
    if (retval) {
10010c20:	bba8      	cbnz	r0, 10010c8e <MXC_UART_Init+0x7a>
    switch (clock) {
10010c22:	2d02      	cmp	r5, #2
10010c24:	d02d      	beq.n	10010c82 <MXC_UART_Init+0x6e>
10010c26:	2d04      	cmp	r5, #4
10010c28:	d018      	beq.n	10010c5c <MXC_UART_Init+0x48>
    switch (MXC_UART_GET_IDX(uart)) {
10010c2a:	4b20      	ldr	r3, [pc, #128]	@ (10010cac <MXC_UART_Init+0x98>)
10010c2c:	429c      	cmp	r4, r3
10010c2e:	d01b      	beq.n	10010c68 <MXC_UART_Init+0x54>
10010c30:	4b1f      	ldr	r3, [pc, #124]	@ (10010cb0 <MXC_UART_Init+0x9c>)
10010c32:	429c      	cmp	r4, r3
10010c34:	d02c      	beq.n	10010c90 <MXC_UART_Init+0x7c>
10010c36:	4b1f      	ldr	r3, [pc, #124]	@ (10010cb4 <MXC_UART_Init+0xa0>)
10010c38:	429c      	cmp	r4, r3
10010c3a:	d030      	beq.n	10010c9e <MXC_UART_Init+0x8a>
10010c3c:	4b1e      	ldr	r3, [pc, #120]	@ (10010cb8 <MXC_UART_Init+0xa4>)
10010c3e:	429c      	cmp	r4, r3
10010c40:	d123      	bne.n	10010c8a <MXC_UART_Init+0x76>
        MXC_GPIO_Config(&gpio_cfg_uart3);
10010c42:	481e      	ldr	r0, [pc, #120]	@ (10010cbc <MXC_UART_Init+0xa8>)
10010c44:	f7ff fb84 	bl	10010350 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART3);
10010c48:	2044      	movs	r0, #68	@ 0x44
10010c4a:	f7ff faa1 	bl	10010190 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10010c4e:	462a      	mov	r2, r5
10010c50:	4631      	mov	r1, r6
10010c52:	4620      	mov	r0, r4
}
10010c54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10010c58:	f000 b8f8 	b.w	10010e4c <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_ERTCO);
10010c5c:	2006      	movs	r0, #6
10010c5e:	f7ff fab9 	bl	100101d4 <MXC_SYS_ClockSourceEnable>
    switch (MXC_UART_GET_IDX(uart)) {
10010c62:	4b12      	ldr	r3, [pc, #72]	@ (10010cac <MXC_UART_Init+0x98>)
10010c64:	429c      	cmp	r4, r3
10010c66:	d1e3      	bne.n	10010c30 <MXC_UART_Init+0x1c>
        MXC_GPIO_Config(&gpio_cfg_uart0);
10010c68:	4815      	ldr	r0, [pc, #84]	@ (10010cc0 <MXC_UART_Init+0xac>)
10010c6a:	f7ff fb71 	bl	10010350 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART0);
10010c6e:	2009      	movs	r0, #9
10010c70:	f7ff fa8e 	bl	10010190 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10010c74:	462a      	mov	r2, r5
10010c76:	4631      	mov	r1, r6
10010c78:	4620      	mov	r0, r4
}
10010c7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
10010c7e:	f000 b8e5 	b.w	10010e4c <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_IBRO);
10010c82:	2005      	movs	r0, #5
10010c84:	f7ff faa6 	bl	100101d4 <MXC_SYS_ClockSourceEnable>
        break;
10010c88:	e7cf      	b.n	10010c2a <MXC_UART_Init+0x16>
        return E_BAD_PARAM;
10010c8a:	f06f 0002 	mvn.w	r0, #2
}
10010c8e:	bd70      	pop	{r4, r5, r6, pc}
        MXC_GPIO_Config(&gpio_cfg_uart1);
10010c90:	480c      	ldr	r0, [pc, #48]	@ (10010cc4 <MXC_UART_Init+0xb0>)
10010c92:	f7ff fb5d 	bl	10010350 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART1);
10010c96:	200a      	movs	r0, #10
10010c98:	f7ff fa7a 	bl	10010190 <MXC_SYS_ClockEnable>
        break;
10010c9c:	e7d7      	b.n	10010c4e <MXC_UART_Init+0x3a>
        MXC_GPIO_Config(&gpio_cfg_uart2);
10010c9e:	480a      	ldr	r0, [pc, #40]	@ (10010cc8 <MXC_UART_Init+0xb4>)
10010ca0:	f7ff fb56 	bl	10010350 <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART2);
10010ca4:	2021      	movs	r0, #33	@ 0x21
10010ca6:	f7ff fa73 	bl	10010190 <MXC_SYS_ClockEnable>
        break;
10010caa:	e7d0      	b.n	10010c4e <MXC_UART_Init+0x3a>
10010cac:	40042000 	.word	0x40042000
10010cb0:	40043000 	.word	0x40043000
10010cb4:	40044000 	.word	0x40044000
10010cb8:	40081400 	.word	0x40081400
10010cbc:	1001c420 	.word	0x1001c420
10010cc0:	1001c444 	.word	0x1001c444
10010cc4:	1001c438 	.word	0x1001c438
10010cc8:	1001c42c 	.word	0x1001c42c

10010ccc <MXC_UART_SetFrequency>:
}

int MXC_UART_SetFrequency(mxc_uart_regs_t *uart, unsigned int baud, mxc_uart_clock_t clock)
{
    int frequency, clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX(uart) < 0) {
10010ccc:	4b31      	ldr	r3, [pc, #196]	@ (10010d94 <MXC_UART_SetFrequency+0xc8>)
10010cce:	4298      	cmp	r0, r3
{
10010cd0:	b510      	push	{r4, lr}
10010cd2:	4604      	mov	r4, r0
    if (MXC_UART_GET_IDX(uart) < 0) {
10010cd4:	d015      	beq.n	10010d02 <MXC_UART_SetFrequency+0x36>
10010cd6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010cda:	4298      	cmp	r0, r3
10010cdc:	d011      	beq.n	10010d02 <MXC_UART_SetFrequency+0x36>
10010cde:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010ce2:	4298      	cmp	r0, r3
10010ce4:	d00d      	beq.n	10010d02 <MXC_UART_SetFrequency+0x36>
10010ce6:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010cea:	4298      	cmp	r0, r3
10010cec:	d106      	bne.n	10010cfc <MXC_UART_SetFrequency+0x30>
    }

    // check if the uart is LPUART
    if (uart == MXC_UART3) {
        // OSR default value
        uart->osr = 5;
10010cee:	2305      	movs	r3, #5

        switch (clock) {
10010cf0:	2a02      	cmp	r2, #2
        uart->osr = 5;
10010cf2:	6143      	str	r3, [r0, #20]
        switch (clock) {
10010cf4:	d014      	beq.n	10010d20 <MXC_UART_SetFrequency+0x54>
10010cf6:	2a04      	cmp	r2, #4
10010cf8:	d032      	beq.n	10010d60 <MXC_UART_SetFrequency+0x94>
10010cfa:	b18a      	cbz	r2, 10010d20 <MXC_UART_SetFrequency+0x54>
        return E_BAD_PARAM;
10010cfc:	f06f 0002 	mvn.w	r0, #2
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
    }

    return frequency;
}
10010d00:	bd10      	pop	{r4, pc}
        if (clock == MXC_UART_ERTCO_CLK) {
10010d02:	2a04      	cmp	r2, #4
10010d04:	d0fa      	beq.n	10010cfc <MXC_UART_SetFrequency+0x30>
        frequency = MXC_UART_RevB_SetFrequency((mxc_uart_revb_regs_t *)uart, baud, clock);
10010d06:	4620      	mov	r0, r4
10010d08:	f000 f8d8 	bl	10010ebc <MXC_UART_RevB_SetFrequency>
    if (frequency > 0) {
10010d0c:	2800      	cmp	r0, #0
10010d0e:	ddf7      	ble.n	10010d00 <MXC_UART_SetFrequency+0x34>
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
10010d10:	6823      	ldr	r3, [r4, #0]
10010d12:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
10010d16:	6023      	str	r3, [r4, #0]
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
10010d18:	6823      	ldr	r3, [r4, #0]
10010d1a:	031b      	lsls	r3, r3, #12
10010d1c:	d5fc      	bpl.n	10010d18 <MXC_UART_SetFrequency+0x4c>
}
10010d1e:	bd10      	pop	{r4, pc}
            clkDiv = ((IBRO_FREQ) / baud);
10010d20:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
10010d24:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((IBRO_FREQ) % baud);
10010d28:	fb01 f203 	mul.w	r2, r1, r3
10010d2c:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        if (!clkDiv || mod > (baud / 2)) {
10010d30:	b113      	cbz	r3, 10010d38 <MXC_UART_SetFrequency+0x6c>
10010d32:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
10010d36:	d900      	bls.n	10010d3a <MXC_UART_SetFrequency+0x6e>
            clkDiv++;
10010d38:	3301      	adds	r3, #1
        uart->clkdiv = clkDiv;
10010d3a:	4a17      	ldr	r2, [pc, #92]	@ (10010d98 <MXC_UART_SetFrequency+0xcc>)
10010d3c:	6113      	str	r3, [r2, #16]
        return E_BAD_PARAM;
    }

    // check if UARt is LP UART
    if (uart == MXC_UART3) {
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
10010d3e:	6810      	ldr	r0, [r2, #0]
10010d40:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
10010d44:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
10010d48:	d005      	beq.n	10010d56 <MXC_UART_SetFrequency+0x8a>
            periphClock = ERTCO_FREQ * 2;
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
10010d4a:	6813      	ldr	r3, [r2, #0]
10010d4c:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10010d50:	d1d4      	bne.n	10010cfc <MXC_UART_SetFrequency+0x30>
10010d52:	f44f 00e1 	mov.w	r0, #7372800	@ 0x708000
                   MXC_S_UART_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
            periphClock = IBRO_FREQ;
        } else {
            return E_BAD_PARAM;
        }
        return (periphClock / uart->clkdiv);
10010d56:	4b10      	ldr	r3, [pc, #64]	@ (10010d98 <MXC_UART_SetFrequency+0xcc>)
10010d58:	691b      	ldr	r3, [r3, #16]
10010d5a:	fbb0 f0f3 	udiv	r0, r0, r3
10010d5e:	e7d5      	b.n	10010d0c <MXC_UART_SetFrequency+0x40>
            uart->ctrl |= MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10010d60:	6803      	ldr	r3, [r0, #0]
10010d62:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
10010d66:	6003      	str	r3, [r0, #0]
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
10010d68:	6803      	ldr	r3, [r0, #0]
            if (baud > 2400) {
10010d6a:	f5b1 6f16 	cmp.w	r1, #2400	@ 0x960
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
10010d6e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
10010d72:	6003      	str	r3, [r0, #0]
            if (baud > 2400) {
10010d74:	d90a      	bls.n	10010d8c <MXC_UART_SetFrequency+0xc0>
                uart->osr = 0;
10010d76:	2300      	movs	r3, #0
10010d78:	6143      	str	r3, [r0, #20]
            clkDiv = ((ERTCO_FREQ * 2) / baud);
10010d7a:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
10010d7e:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((ERTCO_FREQ * 2) % baud);
10010d82:	fb01 f203 	mul.w	r2, r1, r3
10010d86:	f5c2 3280 	rsb	r2, r2, #65536	@ 0x10000
10010d8a:	e7d1      	b.n	10010d30 <MXC_UART_SetFrequency+0x64>
                uart->osr = 1;
10010d8c:	2301      	movs	r3, #1
10010d8e:	6143      	str	r3, [r0, #20]
10010d90:	e7f3      	b.n	10010d7a <MXC_UART_SetFrequency+0xae>
10010d92:	bf00      	nop
10010d94:	40042000 	.word	0x40042000
10010d98:	40081400 	.word	0x40081400

10010d9c <MXC_UART_GetFrequency>:
    if (MXC_UART_GET_IDX(uart) < 0) {
10010d9c:	4b12      	ldr	r3, [pc, #72]	@ (10010de8 <MXC_UART_GetFrequency+0x4c>)
10010d9e:	4298      	cmp	r0, r3
10010da0:	d01c      	beq.n	10010ddc <MXC_UART_GetFrequency+0x40>
10010da2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010da6:	4298      	cmp	r0, r3
10010da8:	d018      	beq.n	10010ddc <MXC_UART_GetFrequency+0x40>
10010daa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010dae:	4298      	cmp	r0, r3
10010db0:	d014      	beq.n	10010ddc <MXC_UART_GetFrequency+0x40>
10010db2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010db6:	4298      	cmp	r0, r3
10010db8:	d112      	bne.n	10010de0 <MXC_UART_GetFrequency+0x44>
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
10010dba:	6803      	ldr	r3, [r0, #0]
10010dbc:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10010dc0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
10010dc4:	d005      	beq.n	10010dd2 <MXC_UART_GetFrequency+0x36>
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
10010dc6:	6803      	ldr	r3, [r0, #0]
10010dc8:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10010dcc:	d108      	bne.n	10010de0 <MXC_UART_GetFrequency+0x44>
10010dce:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        return (periphClock / uart->clkdiv);
10010dd2:	4a06      	ldr	r2, [pc, #24]	@ (10010dec <MXC_UART_GetFrequency+0x50>)
10010dd4:	6910      	ldr	r0, [r2, #16]
10010dd6:	fbb3 f0f0 	udiv	r0, r3, r0
10010dda:	4770      	bx	lr
    } else {
        return MXC_UART_RevB_GetFrequency((mxc_uart_revb_regs_t *)uart);
10010ddc:	f000 b8ba 	b.w	10010f54 <MXC_UART_RevB_GetFrequency>
        return E_BAD_PARAM;
10010de0:	f06f 0002 	mvn.w	r0, #2
    }
}
10010de4:	4770      	bx	lr
10010de6:	bf00      	nop
10010de8:	40042000 	.word	0x40042000
10010dec:	40081400 	.word	0x40081400

10010df0 <MXC_UART_SetDataSize>:

int MXC_UART_SetDataSize(mxc_uart_regs_t *uart, int dataSize)
{
    return MXC_UART_RevB_SetDataSize((mxc_uart_revb_regs_t *)uart, dataSize);
10010df0:	f000 b8f0 	b.w	10010fd4 <MXC_UART_RevB_SetDataSize>

10010df4 <MXC_UART_SetStopBits>:
}

int MXC_UART_SetStopBits(mxc_uart_regs_t *uart, mxc_uart_stop_t stopBits)
{
    return MXC_UART_RevB_SetStopBits((mxc_uart_revb_regs_t *)uart, stopBits);
10010df4:	f000 b90e 	b.w	10011014 <MXC_UART_RevB_SetStopBits>

10010df8 <MXC_UART_SetParity>:
}

int MXC_UART_SetParity(mxc_uart_regs_t *uart, mxc_uart_parity_t parity)
{
    return MXC_UART_RevB_SetParity((mxc_uart_revb_regs_t *)uart, parity);
10010df8:	f000 b930 	b.w	1001105c <MXC_UART_RevB_SetParity>

10010dfc <MXC_UART_ReadCharacterRaw>:
    return MXC_UART_RevB_AbortTransmission((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_ReadCharacterRaw(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_ReadCharacterRaw((mxc_uart_revb_regs_t *)uart);
10010dfc:	f000 b984 	b.w	10011108 <MXC_UART_RevB_ReadCharacterRaw>

10010e00 <MXC_UART_WriteCharacterRaw>:
}

int MXC_UART_WriteCharacterRaw(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_RevB_WriteCharacterRaw((mxc_uart_revb_regs_t *)uart, character);
10010e00:	f000 b99e 	b.w	10011140 <MXC_UART_RevB_WriteCharacterRaw>

10010e04 <MXC_UART_ReadCharacter>:
}

int MXC_UART_ReadCharacter(mxc_uart_regs_t *uart)
{
    return MXC_UART_Common_ReadCharacter(uart);
10010e04:	f000 b808 	b.w	10010e18 <MXC_UART_Common_ReadCharacter>

10010e08 <MXC_UART_WriteCharacter>:
}

int MXC_UART_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_Common_WriteCharacter(uart, character);
10010e08:	f000 b812 	b.w	10010e30 <MXC_UART_Common_WriteCharacter>

10010e0c <MXC_UART_GetRXFIFOAvailable>:
    return MXC_UART_RevB_ReadRXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetRXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetRXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10010e0c:	f000 b9b6 	b.w	1001117c <MXC_UART_RevB_GetRXFIFOAvailable>

10010e10 <MXC_UART_GetTXFIFOAvailable>:
    return MXC_UART_RevB_WriteTXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetTXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetTXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
10010e10:	f000 b9b8 	b.w	10011184 <MXC_UART_RevB_GetTXFIFOAvailable>

10010e14 <MXC_UART_SetRXThreshold>:
    return MXC_UART_RevB_ClearTXFIFO((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_SetRXThreshold(mxc_uart_regs_t *uart, unsigned int numBytes)
{
    return MXC_UART_RevB_SetRXThreshold((mxc_uart_revb_regs_t *)uart, numBytes);
10010e14:	f000 b9bc 	b.w	10011190 <MXC_UART_RevB_SetRXThreshold>

10010e18 <MXC_UART_Common_ReadCharacter>:

#include "uart_common.h"
#include "uart.h"

int MXC_UART_Common_ReadCharacter(mxc_uart_regs_t *uart)
{
10010e18:	b510      	push	{r4, lr}
10010e1a:	4604      	mov	r4, r0
    // Wait until FIFO has a character ready.
    while (MXC_UART_GetRXFIFOAvailable(uart) < 1) {}
10010e1c:	4620      	mov	r0, r4
10010e1e:	f7ff fff5 	bl	10010e0c <MXC_UART_GetRXFIFOAvailable>
10010e22:	2800      	cmp	r0, #0
10010e24:	d0fa      	beq.n	10010e1c <MXC_UART_Common_ReadCharacter+0x4>

    // Read the character using the non-blocking function.
    return MXC_UART_ReadCharacterRaw(uart);
10010e26:	4620      	mov	r0, r4
}
10010e28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_UART_ReadCharacterRaw(uart);
10010e2c:	f7ff bfe6 	b.w	10010dfc <MXC_UART_ReadCharacterRaw>

10010e30 <MXC_UART_Common_WriteCharacter>:

int MXC_UART_Common_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
10010e30:	b538      	push	{r3, r4, r5, lr}
10010e32:	4604      	mov	r4, r0
10010e34:	460d      	mov	r5, r1
    // Wait until FIFO has space for the character.
    while (MXC_UART_GetTXFIFOAvailable(uart) < 1) {}
10010e36:	4620      	mov	r0, r4
10010e38:	f7ff ffea 	bl	10010e10 <MXC_UART_GetTXFIFOAvailable>
10010e3c:	2800      	cmp	r0, #0
10010e3e:	d0fa      	beq.n	10010e36 <MXC_UART_Common_WriteCharacter+0x6>

    // Write the character using the non-blocking function.
    return MXC_UART_WriteCharacterRaw(uart, character);
10010e40:	4629      	mov	r1, r5
10010e42:	4620      	mov	r0, r4
}
10010e44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    return MXC_UART_WriteCharacterRaw(uart, character);
10010e48:	f7ff bfda 	b.w	10010e00 <MXC_UART_WriteCharacterRaw>

10010e4c <MXC_UART_RevB_Init>:
/* ************************************************************************* */
int MXC_UART_RevB_Init(mxc_uart_revb_regs_t *uart, unsigned int baud, mxc_uart_revb_clock_t clock)
{
    int err;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010e4c:	4b1a      	ldr	r3, [pc, #104]	@ (10010eb8 <MXC_UART_RevB_Init+0x6c>)
10010e4e:	4298      	cmp	r0, r3
{
10010e50:	b570      	push	{r4, r5, r6, lr}
10010e52:	4604      	mov	r4, r0
10010e54:	460d      	mov	r5, r1
10010e56:	4616      	mov	r6, r2
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010e58:	d00b      	beq.n	10010e72 <MXC_UART_RevB_Init+0x26>
10010e5a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010e5e:	4298      	cmp	r0, r3
10010e60:	d007      	beq.n	10010e72 <MXC_UART_RevB_Init+0x26>
10010e62:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010e66:	4298      	cmp	r0, r3
10010e68:	d003      	beq.n	10010e72 <MXC_UART_RevB_Init+0x26>
10010e6a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010e6e:	4298      	cmp	r0, r3
10010e70:	d11f      	bne.n	10010eb2 <MXC_UART_RevB_Init+0x66>
        return E_BAD_PARAM;
    }

    // Initialize UART
    if ((err = MXC_UART_SetRXThreshold((mxc_uart_regs_t *)uart, 1)) !=
10010e72:	2101      	movs	r1, #1
10010e74:	4620      	mov	r0, r4
10010e76:	f7ff ffcd 	bl	10010e14 <MXC_UART_SetRXThreshold>
10010e7a:	b100      	cbz	r0, 10010e7e <MXC_UART_RevB_Init+0x32>
        E_NO_ERROR) {
        return err;
    }

    return E_NO_ERROR;
}
10010e7c:	bd70      	pop	{r4, r5, r6, pc}
    if ((err = MXC_UART_SetDataSize((mxc_uart_regs_t *)uart, 8)) !=
10010e7e:	2108      	movs	r1, #8
10010e80:	4620      	mov	r0, r4
10010e82:	f7ff ffb5 	bl	10010df0 <MXC_UART_SetDataSize>
10010e86:	2800      	cmp	r0, #0
10010e88:	d1f8      	bne.n	10010e7c <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetParity((mxc_uart_regs_t *)uart, MXC_UART_PARITY_DISABLE)) !=
10010e8a:	4601      	mov	r1, r0
10010e8c:	4620      	mov	r0, r4
10010e8e:	f7ff ffb3 	bl	10010df8 <MXC_UART_SetParity>
10010e92:	2800      	cmp	r0, #0
10010e94:	d1f2      	bne.n	10010e7c <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetStopBits((mxc_uart_regs_t *)uart, MXC_UART_STOP_1)) != E_NO_ERROR) {
10010e96:	4601      	mov	r1, r0
10010e98:	4620      	mov	r0, r4
10010e9a:	f7ff ffab 	bl	10010df4 <MXC_UART_SetStopBits>
10010e9e:	2800      	cmp	r0, #0
10010ea0:	d1ec      	bne.n	10010e7c <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetFrequency((mxc_uart_regs_t *)uart, baud, (mxc_uart_clock_t)clock)) <
10010ea2:	4632      	mov	r2, r6
10010ea4:	4629      	mov	r1, r5
10010ea6:	4620      	mov	r0, r4
10010ea8:	f7ff ff10 	bl	10010ccc <MXC_UART_SetFrequency>
10010eac:	ea00 70e0 	and.w	r0, r0, r0, asr #31
}
10010eb0:	bd70      	pop	{r4, r5, r6, pc}
        return E_BAD_PARAM;
10010eb2:	f06f 0002 	mvn.w	r0, #2
}
10010eb6:	bd70      	pop	{r4, r5, r6, pc}
10010eb8:	40042000 	.word	0x40042000

10010ebc <MXC_UART_RevB_SetFrequency>:

int MXC_UART_RevB_SetFrequency(mxc_uart_revb_regs_t *uart, unsigned int baud,
                               mxc_uart_revb_clock_t clock)
{
    unsigned clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010ebc:	4b22      	ldr	r3, [pc, #136]	@ (10010f48 <MXC_UART_RevB_SetFrequency+0x8c>)
10010ebe:	4298      	cmp	r0, r3
10010ec0:	d00b      	beq.n	10010eda <MXC_UART_RevB_SetFrequency+0x1e>
10010ec2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010ec6:	4298      	cmp	r0, r3
10010ec8:	d007      	beq.n	10010eda <MXC_UART_RevB_SetFrequency+0x1e>
10010eca:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010ece:	4298      	cmp	r0, r3
10010ed0:	d003      	beq.n	10010eda <MXC_UART_RevB_SetFrequency+0x1e>
10010ed2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010ed6:	4298      	cmp	r0, r3
10010ed8:	d132      	bne.n	10010f40 <MXC_UART_RevB_SetFrequency+0x84>
        return E_BAD_PARAM;
    }

    // OSR default value
    uart->osr = 5;
10010eda:	2305      	movs	r3, #5

    switch (clock) {
10010edc:	2a01      	cmp	r2, #1
{
10010ede:	b410      	push	{r4}
    uart->osr = 5;
10010ee0:	6143      	str	r3, [r0, #20]
    switch (clock) {
10010ee2:	d023      	beq.n	10010f2c <MXC_UART_RevB_SetFrequency+0x70>
10010ee4:	2a02      	cmp	r2, #2
10010ee6:	d014      	beq.n	10010f12 <MXC_UART_RevB_SetFrequency+0x56>
10010ee8:	b11a      	cbz	r2, 10010ef2 <MXC_UART_RevB_SetFrequency+0x36>
    if (!clkDiv || mod > (baud / 2)) {
        clkDiv++;
    }
    uart->clkdiv = clkDiv;
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
}
10010eea:	f06f 0002 	mvn.w	r0, #2
10010eee:	bc10      	pop	{r4}
10010ef0:	4770      	bx	lr
        clkDiv = (PeripheralClock / baud);
10010ef2:	4b16      	ldr	r3, [pc, #88]	@ (10010f4c <MXC_UART_RevB_SetFrequency+0x90>)
10010ef4:	681a      	ldr	r2, [r3, #0]
10010ef6:	0852      	lsrs	r2, r2, #1
10010ef8:	fbb2 f3f1 	udiv	r3, r2, r1
        mod = (PeripheralClock % baud);
10010efc:	fb01 2213 	mls	r2, r1, r3, r2
    if (!clkDiv || mod > (baud / 2)) {
10010f00:	b113      	cbz	r3, 10010f08 <MXC_UART_RevB_SetFrequency+0x4c>
10010f02:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
10010f06:	d900      	bls.n	10010f0a <MXC_UART_RevB_SetFrequency+0x4e>
        clkDiv++;
10010f08:	3301      	adds	r3, #1
}
10010f0a:	bc10      	pop	{r4}
    uart->clkdiv = clkDiv;
10010f0c:	6103      	str	r3, [r0, #16]
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
10010f0e:	f7ff bf45 	b.w	10010d9c <MXC_UART_GetFrequency>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10010f12:	6804      	ldr	r4, [r0, #0]
        clkDiv = (IBRO_FREQ / baud);
10010f14:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10010f18:	f444 3400 	orr.w	r4, r4, #131072	@ 0x20000
        clkDiv = (IBRO_FREQ / baud);
10010f1c:	fbb3 f3f1 	udiv	r3, r3, r1
        mod = (IBRO_FREQ % baud);
10010f20:	fb01 f203 	mul.w	r2, r1, r3
10010f24:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
10010f28:	6004      	str	r4, [r0, #0]
        break;
10010f2a:	e7e9      	b.n	10010f00 <MXC_UART_RevB_SetFrequency+0x44>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10010f2c:	6804      	ldr	r4, [r0, #0]
        clkDiv = UART_EXTCLK_FREQ / baud;
10010f2e:	4a08      	ldr	r2, [pc, #32]	@ (10010f50 <MXC_UART_RevB_SetFrequency+0x94>)
10010f30:	fbb2 f3f1 	udiv	r3, r2, r1
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
10010f34:	f444 3480 	orr.w	r4, r4, #65536	@ 0x10000
10010f38:	6004      	str	r4, [r0, #0]
        mod = UART_EXTCLK_FREQ % baud;
10010f3a:	fb01 2213 	mls	r2, r1, r3, r2
        break;
10010f3e:	e7df      	b.n	10010f00 <MXC_UART_RevB_SetFrequency+0x44>
}
10010f40:	f06f 0002 	mvn.w	r0, #2
10010f44:	4770      	bx	lr
10010f46:	bf00      	nop
10010f48:	40042000 	.word	0x40042000
10010f4c:	20001740 	.word	0x20001740
10010f50:	047868c0 	.word	0x047868c0

10010f54 <MXC_UART_RevB_GetFrequency>:

int MXC_UART_RevB_GetFrequency(mxc_uart_revb_regs_t *uart)
{
    int periphClock = 0;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010f54:	4b1c      	ldr	r3, [pc, #112]	@ (10010fc8 <MXC_UART_RevB_GetFrequency+0x74>)
10010f56:	4298      	cmp	r0, r3
10010f58:	d00b      	beq.n	10010f72 <MXC_UART_RevB_GetFrequency+0x1e>
10010f5a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010f5e:	4298      	cmp	r0, r3
10010f60:	d007      	beq.n	10010f72 <MXC_UART_RevB_GetFrequency+0x1e>
10010f62:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10010f66:	4298      	cmp	r0, r3
10010f68:	d003      	beq.n	10010f72 <MXC_UART_RevB_GetFrequency+0x1e>
10010f6a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10010f6e:	4298      	cmp	r0, r3
10010f70:	d122      	bne.n	10010fb8 <MXC_UART_RevB_GetFrequency+0x64>
        return E_BAD_PARAM;
    }

    if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10010f72:	6803      	ldr	r3, [r0, #0]
10010f74:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10010f78:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
10010f7c:	d017      	beq.n	10010fae <MXC_UART_RevB_GetFrequency+0x5a>
        MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
        periphClock = UART_EXTCLK_FREQ;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
10010f7e:	6803      	ldr	r3, [r0, #0]
10010f80:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
10010f84:	d00c      	beq.n	10010fa0 <MXC_UART_RevB_GetFrequency+0x4c>
               MXC_S_UART_REVB_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
        periphClock = PeripheralClock;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2) {
10010f86:	6803      	ldr	r3, [r0, #0]
10010f88:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
10010f8c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
10010f90:	bf08      	it	eq
10010f92:	f44f 03e1 	moveq.w	r3, #7372800	@ 0x708000
10010f96:	d112      	bne.n	10010fbe <MXC_UART_RevB_GetFrequency+0x6a>
#endif
    } else {
        return E_BAD_PARAM;
    }

    return (periphClock / uart->clkdiv);
10010f98:	6900      	ldr	r0, [r0, #16]
10010f9a:	fbb3 f0f0 	udiv	r0, r3, r0
10010f9e:	4770      	bx	lr
        periphClock = PeripheralClock;
10010fa0:	4b0a      	ldr	r3, [pc, #40]	@ (10010fcc <MXC_UART_RevB_GetFrequency+0x78>)
    return (periphClock / uart->clkdiv);
10010fa2:	6900      	ldr	r0, [r0, #16]
        periphClock = PeripheralClock;
10010fa4:	681b      	ldr	r3, [r3, #0]
10010fa6:	085b      	lsrs	r3, r3, #1
    return (periphClock / uart->clkdiv);
10010fa8:	fbb3 f0f0 	udiv	r0, r3, r0
10010fac:	4770      	bx	lr
10010fae:	4b08      	ldr	r3, [pc, #32]	@ (10010fd0 <MXC_UART_RevB_GetFrequency+0x7c>)
10010fb0:	6900      	ldr	r0, [r0, #16]
10010fb2:	fbb3 f0f0 	udiv	r0, r3, r0
10010fb6:	4770      	bx	lr
        return E_BAD_PARAM;
10010fb8:	f06f 0002 	mvn.w	r0, #2
}
10010fbc:	4770      	bx	lr
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK3) {
10010fbe:	6803      	ldr	r3, [r0, #0]
        return E_BAD_PARAM;
10010fc0:	f06f 0002 	mvn.w	r0, #2
        return E_BAD_PARAM;
10010fc4:	4770      	bx	lr
10010fc6:	bf00      	nop
10010fc8:	40042000 	.word	0x40042000
10010fcc:	20001740 	.word	0x20001740
10010fd0:	047868c0 	.word	0x047868c0

10010fd4 <MXC_UART_RevB_SetDataSize>:

int MXC_UART_RevB_SetDataSize(mxc_uart_revb_regs_t *uart, int dataSize)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010fd4:	4a0e      	ldr	r2, [pc, #56]	@ (10011010 <MXC_UART_RevB_SetDataSize+0x3c>)
10010fd6:	4290      	cmp	r0, r2
{
10010fd8:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10010fda:	d00b      	beq.n	10010ff4 <MXC_UART_RevB_SetDataSize+0x20>
10010fdc:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10010fe0:	4290      	cmp	r0, r2
10010fe2:	d007      	beq.n	10010ff4 <MXC_UART_RevB_SetDataSize+0x20>
10010fe4:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10010fe8:	4290      	cmp	r0, r2
10010fea:	d003      	beq.n	10010ff4 <MXC_UART_RevB_SetDataSize+0x20>
10010fec:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
10010ff0:	4290      	cmp	r0, r2
10010ff2:	d10a      	bne.n	1001100a <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    if (dataSize < 5 || dataSize > 8) {
10010ff4:	3905      	subs	r1, #5
10010ff6:	2903      	cmp	r1, #3
10010ff8:	d807      	bhi.n	1001100a <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    dataSize = (dataSize - 5) << MXC_F_UART_REVB_CTRL_CHAR_SIZE_POS;

    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
10010ffa:	681a      	ldr	r2, [r3, #0]
10010ffc:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
10011000:	ea42 2281 	orr.w	r2, r2, r1, lsl #10

    return E_NO_ERROR;
10011004:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
10011006:	601a      	str	r2, [r3, #0]
    return E_NO_ERROR;
10011008:	4770      	bx	lr
        return E_BAD_PARAM;
1001100a:	f06f 0002 	mvn.w	r0, #2
}
1001100e:	4770      	bx	lr
10011010:	40042000 	.word	0x40042000

10011014 <MXC_UART_RevB_SetStopBits>:

int MXC_UART_RevB_SetStopBits(mxc_uart_revb_regs_t *uart, mxc_uart_stop_t stopBits)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10011014:	4b10      	ldr	r3, [pc, #64]	@ (10011058 <MXC_UART_RevB_SetStopBits+0x44>)
10011016:	4298      	cmp	r0, r3
10011018:	d00b      	beq.n	10011032 <MXC_UART_RevB_SetStopBits+0x1e>
1001101a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001101e:	4298      	cmp	r0, r3
10011020:	d007      	beq.n	10011032 <MXC_UART_RevB_SetStopBits+0x1e>
10011022:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011026:	4298      	cmp	r0, r3
10011028:	d003      	beq.n	10011032 <MXC_UART_RevB_SetStopBits+0x1e>
1001102a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1001102e:	4298      	cmp	r0, r3
10011030:	d108      	bne.n	10011044 <MXC_UART_RevB_SetStopBits+0x30>
        return E_BAD_PARAM;
    }

    switch (stopBits) {
10011032:	b151      	cbz	r1, 1001104a <MXC_UART_RevB_SetStopBits+0x36>
10011034:	2901      	cmp	r1, #1
10011036:	d105      	bne.n	10011044 <MXC_UART_RevB_SetStopBits+0x30>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
                     0 << MXC_F_UART_REVB_CTRL_STOPBITS_POS);
        break;

    case MXC_UART_STOP_2:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
10011038:	6803      	ldr	r3, [r0, #0]
1001103a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
1001103e:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
10011040:	2000      	movs	r0, #0
10011042:	4770      	bx	lr
10011044:	f06f 0002 	mvn.w	r0, #2
}
10011048:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
1001104a:	6803      	ldr	r3, [r0, #0]
1001104c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10011050:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
10011052:	2000      	movs	r0, #0
10011054:	4770      	bx	lr
10011056:	bf00      	nop
10011058:	40042000 	.word	0x40042000

1001105c <MXC_UART_RevB_SetParity>:

int MXC_UART_RevB_SetParity(mxc_uart_revb_regs_t *uart, mxc_uart_parity_t parity)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1001105c:	4b29      	ldr	r3, [pc, #164]	@ (10011104 <MXC_UART_RevB_SetParity+0xa8>)
1001105e:	4298      	cmp	r0, r3
10011060:	d00b      	beq.n	1001107a <MXC_UART_RevB_SetParity+0x1e>
10011062:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011066:	4298      	cmp	r0, r3
10011068:	d007      	beq.n	1001107a <MXC_UART_RevB_SetParity+0x1e>
1001106a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001106e:	4298      	cmp	r0, r3
10011070:	d003      	beq.n	1001107a <MXC_UART_RevB_SetParity+0x1e>
10011072:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10011076:	4298      	cmp	r0, r3
10011078:	d141      	bne.n	100110fe <MXC_UART_RevB_SetParity+0xa2>
        return E_BAD_PARAM;
    }

    switch (parity) {
1001107a:	2904      	cmp	r1, #4
1001107c:	d83f      	bhi.n	100110fe <MXC_UART_RevB_SetParity+0xa2>
1001107e:	e8df f001 	tbb	[pc, r1]
10011082:	1711      	.short	0x1711
10011084:	3124      	.short	0x3124
10011086:	03          	.byte	0x03
10011087:	00          	.byte	0x00
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
        break;

    case MXC_UART_PARITY_ODD_1:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
10011088:	6803      	ldr	r3, [r0, #0]
1001108a:	f043 0310 	orr.w	r3, r3, #16
1001108e:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
10011090:	6803      	ldr	r3, [r0, #0]
10011092:	f043 0320 	orr.w	r3, r3, #32
10011096:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
10011098:	6803      	ldr	r3, [r0, #0]
1001109a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001109e:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
100110a0:	2000      	movs	r0, #0
100110a2:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 0 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100110a4:	6803      	ldr	r3, [r0, #0]
100110a6:	f023 0310 	bic.w	r3, r3, #16
100110aa:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
100110ac:	2000      	movs	r0, #0
100110ae:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100110b0:	6803      	ldr	r3, [r0, #0]
100110b2:	f043 0310 	orr.w	r3, r3, #16
100110b6:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
100110b8:	6803      	ldr	r3, [r0, #0]
100110ba:	f023 0320 	bic.w	r3, r3, #32
100110be:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
100110c0:	6803      	ldr	r3, [r0, #0]
100110c2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
100110c6:	6003      	str	r3, [r0, #0]
        break;
100110c8:	e7ea      	b.n	100110a0 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100110ca:	6803      	ldr	r3, [r0, #0]
100110cc:	f043 0310 	orr.w	r3, r3, #16
100110d0:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
100110d2:	6803      	ldr	r3, [r0, #0]
100110d4:	f023 0320 	bic.w	r3, r3, #32
100110d8:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
100110da:	6803      	ldr	r3, [r0, #0]
100110dc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100110e0:	6003      	str	r3, [r0, #0]
        break;
100110e2:	e7dd      	b.n	100110a0 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
100110e4:	6803      	ldr	r3, [r0, #0]
100110e6:	f043 0310 	orr.w	r3, r3, #16
100110ea:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
100110ec:	6803      	ldr	r3, [r0, #0]
100110ee:	f043 0320 	orr.w	r3, r3, #32
100110f2:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
100110f4:	6803      	ldr	r3, [r0, #0]
100110f6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
100110fa:	6003      	str	r3, [r0, #0]
        break;
100110fc:	e7d0      	b.n	100110a0 <MXC_UART_RevB_SetParity+0x44>
    switch (parity) {
100110fe:	f06f 0002 	mvn.w	r0, #2
}
10011102:	4770      	bx	lr
10011104:	40042000 	.word	0x40042000

10011108 <MXC_UART_RevB_ReadCharacterRaw>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_ReadCharacterRaw(mxc_uart_revb_regs_t *uart)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10011108:	4b0c      	ldr	r3, [pc, #48]	@ (1001113c <MXC_UART_RevB_ReadCharacterRaw+0x34>)
1001110a:	4298      	cmp	r0, r3
1001110c:	d00b      	beq.n	10011126 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1001110e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
10011112:	4298      	cmp	r0, r3
10011114:	d007      	beq.n	10011126 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
10011116:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1001111a:	4298      	cmp	r0, r3
1001111c:	d003      	beq.n	10011126 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1001111e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
10011122:	4298      	cmp	r0, r3
10011124:	d104      	bne.n	10011130 <MXC_UART_RevB_ReadCharacterRaw+0x28>
        return E_BAD_PARAM;
    }

    if (uart->status & MXC_F_UART_REVB_STATUS_RX_EM) {
10011126:	6843      	ldr	r3, [r0, #4]
10011128:	06db      	lsls	r3, r3, #27
1001112a:	d404      	bmi.n	10011136 <MXC_UART_RevB_ReadCharacterRaw+0x2e>
        return E_UNDERFLOW;
    }

    return uart->fifo;
1001112c:	6a00      	ldr	r0, [r0, #32]
1001112e:	4770      	bx	lr
        return E_BAD_PARAM;
10011130:	f06f 0002 	mvn.w	r0, #2
10011134:	4770      	bx	lr
        return E_UNDERFLOW;
10011136:	f06f 000c 	mvn.w	r0, #12
}
1001113a:	4770      	bx	lr
1001113c:	40042000 	.word	0x40042000

10011140 <MXC_UART_RevB_WriteCharacterRaw>:

int MXC_UART_RevB_WriteCharacterRaw(mxc_uart_revb_regs_t *uart, uint8_t character)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10011140:	4a0d      	ldr	r2, [pc, #52]	@ (10011178 <MXC_UART_RevB_WriteCharacterRaw+0x38>)
10011142:	4290      	cmp	r0, r2
{
10011144:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10011146:	d00b      	beq.n	10011160 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10011148:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1001114c:	4290      	cmp	r0, r2
1001114e:	d007      	beq.n	10011160 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10011150:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
10011154:	4290      	cmp	r0, r2
10011156:	d003      	beq.n	10011160 <MXC_UART_RevB_WriteCharacterRaw+0x20>
10011158:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
1001115c:	4290      	cmp	r0, r2
1001115e:	d105      	bne.n	1001116c <MXC_UART_RevB_WriteCharacterRaw+0x2c>
        return E_BAD_PARAM;
    }

    // Require the TX FIFO to be empty, so that we write out the expected character
    // Return error if the FIFO is full
    if (uart->status & MXC_F_UART_REVB_STATUS_TX_FULL) {
10011160:	6858      	ldr	r0, [r3, #4]
10011162:	f010 0080 	ands.w	r0, r0, #128	@ 0x80
10011166:	d104      	bne.n	10011172 <MXC_UART_RevB_WriteCharacterRaw+0x32>
        return E_OVERFLOW;
    }

    uart->fifo = character;
10011168:	6219      	str	r1, [r3, #32]

    return E_NO_ERROR;
1001116a:	4770      	bx	lr
        return E_BAD_PARAM;
1001116c:	f06f 0002 	mvn.w	r0, #2
10011170:	4770      	bx	lr
        return E_OVERFLOW;
10011172:	f06f 000b 	mvn.w	r0, #11
}
10011176:	4770      	bx	lr
10011178:	40042000 	.word	0x40042000

1001117c <MXC_UART_RevB_GetRXFIFOAvailable>:
    return read;
}

unsigned int MXC_UART_RevB_GetRXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    return (uart->status & MXC_F_UART_REVB_STATUS_RX_LVL) >> MXC_F_UART_REVB_STATUS_RX_LVL_POS;
1001117c:	6840      	ldr	r0, [r0, #4]
}
1001117e:	f3c0 2003 	ubfx	r0, r0, #8, #4
10011182:	4770      	bx	lr

10011184 <MXC_UART_RevB_GetTXFIFOAvailable>:
    return written;
}

unsigned int MXC_UART_RevB_GetTXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    int txCnt = (uart->status & MXC_F_UART_REVB_STATUS_TX_LVL) >> MXC_F_UART_REVB_STATUS_TX_LVL_POS;
10011184:	6840      	ldr	r0, [r0, #4]
10011186:	f3c0 3003 	ubfx	r0, r0, #12, #4
    return MXC_UART_FIFO_DEPTH - txCnt;
}
1001118a:	f1c0 0008 	rsb	r0, r0, #8
1001118e:	4770      	bx	lr

10011190 <MXC_UART_RevB_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_SetRXThreshold(mxc_uart_revb_regs_t *uart, unsigned int numBytes)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10011190:	4a0e      	ldr	r2, [pc, #56]	@ (100111cc <MXC_UART_RevB_SetRXThreshold+0x3c>)
10011192:	4290      	cmp	r0, r2
{
10011194:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
10011196:	d00b      	beq.n	100111b0 <MXC_UART_RevB_SetRXThreshold+0x20>
10011198:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1001119c:	4290      	cmp	r0, r2
1001119e:	d007      	beq.n	100111b0 <MXC_UART_RevB_SetRXThreshold+0x20>
100111a0:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
100111a4:	4290      	cmp	r0, r2
100111a6:	d003      	beq.n	100111b0 <MXC_UART_RevB_SetRXThreshold+0x20>
100111a8:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
100111ac:	4290      	cmp	r0, r2
100111ae:	d109      	bne.n	100111c4 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    if (numBytes < 1 || numBytes > MXC_UART_FIFO_DEPTH) {
100111b0:	1e4a      	subs	r2, r1, #1
100111b2:	2a07      	cmp	r2, #7
100111b4:	d806      	bhi.n	100111c4 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    numBytes <<= MXC_F_UART_REVB_CTRL_RX_THD_VAL_POS;
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
100111b6:	681a      	ldr	r2, [r3, #0]
100111b8:	f022 020f 	bic.w	r2, r2, #15
100111bc:	4311      	orrs	r1, r2

    return E_NO_ERROR;
100111be:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
100111c0:	6019      	str	r1, [r3, #0]
    return E_NO_ERROR;
100111c2:	4770      	bx	lr
        return E_BAD_PARAM;
100111c4:	f06f 0002 	mvn.w	r0, #2
}
100111c8:	4770      	bx	lr
100111ca:	bf00      	nop
100111cc:	40042000 	.word	0x40042000

100111d0 <MXC_GPIO_Common_Init>:
static void *cbparam[MXC_CFG_GPIO_INSTANCES][MXC_CFG_GPIO_PINS_PORT];
static uint8_t initialized = 0;

/* **** Functions **** */
int MXC_GPIO_Common_Init(uint32_t portmask)
{
100111d0:	b510      	push	{r4, lr}
    if (!initialized) {
100111d2:	4c06      	ldr	r4, [pc, #24]	@ (100111ec <MXC_GPIO_Common_Init+0x1c>)
100111d4:	7821      	ldrb	r1, [r4, #0]
100111d6:	b931      	cbnz	r1, 100111e6 <MXC_GPIO_Common_Init+0x16>
        int i, j;

        for (i = 0; i < MXC_CFG_GPIO_INSTANCES; i++) {
            // Initialize call back arrays
            for (j = 0; j < MXC_CFG_GPIO_PINS_PORT; j++) {
                callback[i][j] = NULL;
100111d8:	4805      	ldr	r0, [pc, #20]	@ (100111f0 <MXC_GPIO_Common_Init+0x20>)
100111da:	f44f 7200 	mov.w	r2, #512	@ 0x200
100111de:	f004 f8df 	bl	100153a0 <memset>
            }
        }

        initialized = 1;
100111e2:	2301      	movs	r3, #1
100111e4:	7023      	strb	r3, [r4, #0]
    }

    return E_NO_ERROR;
}
100111e6:	2000      	movs	r0, #0
100111e8:	bd10      	pop	{r4, pc}
100111ea:	bf00      	nop
100111ec:	20001028 	.word	0x20001028
100111f0:	2000122c 	.word	0x2000122c

100111f4 <MXC_GPIO_Common_Handler>:
void MXC_GPIO_Common_Handler(unsigned int port)
{
    uint32_t stat;
    unsigned int pin;

    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
100111f4:	2803      	cmp	r0, #3
{
100111f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100111f8:	4607      	mov	r7, r0
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
100111fa:	d81d      	bhi.n	10011238 <MXC_GPIO_Common_Handler+0x44>

    mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(port);
100111fc:	bb18      	cbnz	r0, 10011246 <MXC_GPIO_Common_Handler+0x52>
100111fe:	4d14      	ldr	r5, [pc, #80]	@ (10011250 <MXC_GPIO_Common_Handler+0x5c>)

    stat = MXC_GPIO_GetFlags(gpio);
10011200:	4628      	mov	r0, r5
10011202:	f7ff f9e7 	bl	100105d4 <MXC_GPIO_GetFlags>
10011206:	4604      	mov	r4, r0
    MXC_GPIO_ClearFlags(gpio, stat);
10011208:	4601      	mov	r1, r0
1001120a:	4628      	mov	r0, r5
1001120c:	f7ff f9d6 	bl	100105bc <MXC_GPIO_ClearFlags>

    pin = 0;

    while (stat) {
10011210:	b18c      	cbz	r4, 10011236 <MXC_GPIO_Common_Handler+0x42>
10011212:	4e10      	ldr	r6, [pc, #64]	@ (10011254 <MXC_GPIO_Common_Handler+0x60>)
10011214:	4d10      	ldr	r5, [pc, #64]	@ (10011258 <MXC_GPIO_Common_Handler+0x64>)
10011216:	eb06 16c7 	add.w	r6, r6, r7, lsl #7
1001121a:	eb05 15c7 	add.w	r5, r5, r7, lsl #7
        if (stat & 1) {
1001121e:	07e3      	lsls	r3, r4, #31
10011220:	d503      	bpl.n	1001122a <MXC_GPIO_Common_Handler+0x36>
            if (callback[port][pin]) {
10011222:	682b      	ldr	r3, [r5, #0]
10011224:	b10b      	cbz	r3, 1001122a <MXC_GPIO_Common_Handler+0x36>
                callback[port][pin](cbparam[port][pin]);
10011226:	6830      	ldr	r0, [r6, #0]
10011228:	4798      	blx	r3
    while (stat) {
1001122a:	0864      	lsrs	r4, r4, #1
1001122c:	f106 0604 	add.w	r6, r6, #4
10011230:	f105 0504 	add.w	r5, r5, #4
10011234:	d1f3      	bne.n	1001121e <MXC_GPIO_Common_Handler+0x2a>
        }

        pin++;
        stat >>= 1;
    }
}
10011236:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);
10011238:	4908      	ldr	r1, [pc, #32]	@ (1001125c <MXC_GPIO_Common_Handler+0x68>)
1001123a:	4809      	ldr	r0, [pc, #36]	@ (10011260 <MXC_GPIO_Common_Handler+0x6c>)
1001123c:	225a      	movs	r2, #90	@ 0x5a
1001123e:	f7fe fc37 	bl	1000fab0 <mxc_assert>
10011242:	2500      	movs	r5, #0
10011244:	e7dc      	b.n	10011200 <MXC_GPIO_Common_Handler+0xc>
10011246:	4b07      	ldr	r3, [pc, #28]	@ (10011264 <MXC_GPIO_Common_Handler+0x70>)
10011248:	1e42      	subs	r2, r0, #1
1001124a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
1001124e:	e7d7      	b.n	10011200 <MXC_GPIO_Common_Handler+0xc>
10011250:	40008000 	.word	0x40008000
10011254:	2000102c 	.word	0x2000102c
10011258:	2000122c 	.word	0x2000122c
1001125c:	1001c480 	.word	0x1001c480
10011260:	1001c4f0 	.word	0x1001c4f0
10011264:	1001c510 	.word	0x1001c510

10011268 <_malloc_r>:
10011268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001126c:	f101 050b 	add.w	r5, r1, #11
10011270:	2d16      	cmp	r5, #22
10011272:	b085      	sub	sp, #20
10011274:	4606      	mov	r6, r0
10011276:	d824      	bhi.n	100112c2 <_malloc_r+0x5a>
10011278:	2910      	cmp	r1, #16
1001127a:	f200 80b1 	bhi.w	100113e0 <_malloc_r+0x178>
1001127e:	f003 f987 	bl	10014590 <__malloc_lock>
10011282:	2510      	movs	r5, #16
10011284:	2318      	movs	r3, #24
10011286:	f04f 0c02 	mov.w	ip, #2
1001128a:	4fba      	ldr	r7, [pc, #744]	@ (10011574 <_malloc_r+0x30c>)
1001128c:	443b      	add	r3, r7
1001128e:	f1a3 0208 	sub.w	r2, r3, #8
10011292:	685c      	ldr	r4, [r3, #4]
10011294:	4294      	cmp	r4, r2
10011296:	f000 8122 	beq.w	100114de <_malloc_r+0x276>
1001129a:	6863      	ldr	r3, [r4, #4]
1001129c:	68e2      	ldr	r2, [r4, #12]
1001129e:	68a1      	ldr	r1, [r4, #8]
100112a0:	f023 0303 	bic.w	r3, r3, #3
100112a4:	60ca      	str	r2, [r1, #12]
100112a6:	4423      	add	r3, r4
100112a8:	4630      	mov	r0, r6
100112aa:	6091      	str	r1, [r2, #8]
100112ac:	685a      	ldr	r2, [r3, #4]
100112ae:	f042 0201 	orr.w	r2, r2, #1
100112b2:	605a      	str	r2, [r3, #4]
100112b4:	3408      	adds	r4, #8
100112b6:	f003 f971 	bl	1001459c <__malloc_unlock>
100112ba:	4620      	mov	r0, r4
100112bc:	b005      	add	sp, #20
100112be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100112c2:	f035 0507 	bics.w	r5, r5, #7
100112c6:	f100 808b 	bmi.w	100113e0 <_malloc_r+0x178>
100112ca:	42a9      	cmp	r1, r5
100112cc:	f200 8088 	bhi.w	100113e0 <_malloc_r+0x178>
100112d0:	f003 f95e 	bl	10014590 <__malloc_lock>
100112d4:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
100112d8:	f0c0 8173 	bcc.w	100115c2 <_malloc_r+0x35a>
100112dc:	0a6b      	lsrs	r3, r5, #9
100112de:	f000 8083 	beq.w	100113e8 <_malloc_r+0x180>
100112e2:	2b04      	cmp	r3, #4
100112e4:	f200 8122 	bhi.w	1001152c <_malloc_r+0x2c4>
100112e8:	09ab      	lsrs	r3, r5, #6
100112ea:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
100112ee:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
100112f2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
100112f6:	4f9f      	ldr	r7, [pc, #636]	@ (10011574 <_malloc_r+0x30c>)
100112f8:	443b      	add	r3, r7
100112fa:	f1a3 0008 	sub.w	r0, r3, #8
100112fe:	685c      	ldr	r4, [r3, #4]
10011300:	42a0      	cmp	r0, r4
10011302:	d107      	bne.n	10011314 <_malloc_r+0xac>
10011304:	e00d      	b.n	10011322 <_malloc_r+0xba>
10011306:	2a00      	cmp	r2, #0
10011308:	68e1      	ldr	r1, [r4, #12]
1001130a:	f280 80e2 	bge.w	100114d2 <_malloc_r+0x26a>
1001130e:	4288      	cmp	r0, r1
10011310:	d007      	beq.n	10011322 <_malloc_r+0xba>
10011312:	460c      	mov	r4, r1
10011314:	6863      	ldr	r3, [r4, #4]
10011316:	f023 0303 	bic.w	r3, r3, #3
1001131a:	1b5a      	subs	r2, r3, r5
1001131c:	2a0f      	cmp	r2, #15
1001131e:	ddf2      	ble.n	10011306 <_malloc_r+0x9e>
10011320:	46f4      	mov	ip, lr
10011322:	f8df 8264 	ldr.w	r8, [pc, #612]	@ 10011588 <_malloc_r+0x320>
10011326:	693c      	ldr	r4, [r7, #16]
10011328:	4544      	cmp	r4, r8
1001132a:	f000 80bf 	beq.w	100114ac <_malloc_r+0x244>
1001132e:	6863      	ldr	r3, [r4, #4]
10011330:	f023 0903 	bic.w	r9, r3, #3
10011334:	eba9 0305 	sub.w	r3, r9, r5
10011338:	2b0f      	cmp	r3, #15
1001133a:	f300 8147 	bgt.w	100115cc <_malloc_r+0x364>
1001133e:	2b00      	cmp	r3, #0
10011340:	e9c7 8804 	strd	r8, r8, [r7, #16]
10011344:	f280 8131 	bge.w	100115aa <_malloc_r+0x342>
10011348:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
1001134c:	f8d7 e004 	ldr.w	lr, [r7, #4]
10011350:	f080 80cc 	bcs.w	100114ec <_malloc_r+0x284>
10011354:	ea4f 01d9 	mov.w	r1, r9, lsr #3
10011358:	3101      	adds	r1, #1
1001135a:	ea4f 1959 	mov.w	r9, r9, lsr #5
1001135e:	2301      	movs	r3, #1
10011360:	fa03 f309 	lsl.w	r3, r3, r9
10011364:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
10011368:	60a2      	str	r2, [r4, #8]
1001136a:	ea4e 0e03 	orr.w	lr, lr, r3
1001136e:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
10011372:	3b08      	subs	r3, #8
10011374:	60e3      	str	r3, [r4, #12]
10011376:	f8c7 e004 	str.w	lr, [r7, #4]
1001137a:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
1001137e:	60d4      	str	r4, [r2, #12]
10011380:	ea4f 03ac 	mov.w	r3, ip, asr #2
10011384:	2001      	movs	r0, #1
10011386:	4098      	lsls	r0, r3
10011388:	4570      	cmp	r0, lr
1001138a:	d834      	bhi.n	100113f6 <_malloc_r+0x18e>
1001138c:	ea10 0f0e 	tst.w	r0, lr
10011390:	d107      	bne.n	100113a2 <_malloc_r+0x13a>
10011392:	f02c 0c03 	bic.w	ip, ip, #3
10011396:	0040      	lsls	r0, r0, #1
10011398:	ea10 0f0e 	tst.w	r0, lr
1001139c:	f10c 0c04 	add.w	ip, ip, #4
100113a0:	d0f9      	beq.n	10011396 <_malloc_r+0x12e>
100113a2:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
100113a6:	4652      	mov	r2, sl
100113a8:	46e1      	mov	r9, ip
100113aa:	68d1      	ldr	r1, [r2, #12]
100113ac:	e00e      	b.n	100113cc <_malloc_r+0x164>
100113ae:	684b      	ldr	r3, [r1, #4]
100113b0:	f023 0303 	bic.w	r3, r3, #3
100113b4:	eba3 0e05 	sub.w	lr, r3, r5
100113b8:	f1be 0f0f 	cmp.w	lr, #15
100113bc:	460c      	mov	r4, r1
100113be:	68c9      	ldr	r1, [r1, #12]
100113c0:	f300 80c1 	bgt.w	10011546 <_malloc_r+0x2de>
100113c4:	f1be 0f00 	cmp.w	lr, #0
100113c8:	f280 80e2 	bge.w	10011590 <_malloc_r+0x328>
100113cc:	428a      	cmp	r2, r1
100113ce:	d1ee      	bne.n	100113ae <_malloc_r+0x146>
100113d0:	f109 0901 	add.w	r9, r9, #1
100113d4:	f019 0f03 	tst.w	r9, #3
100113d8:	f102 0208 	add.w	r2, r2, #8
100113dc:	d1e5      	bne.n	100113aa <_malloc_r+0x142>
100113de:	e121      	b.n	10011624 <_malloc_r+0x3bc>
100113e0:	230c      	movs	r3, #12
100113e2:	6033      	str	r3, [r6, #0]
100113e4:	2400      	movs	r4, #0
100113e6:	e768      	b.n	100112ba <_malloc_r+0x52>
100113e8:	f44f 7300 	mov.w	r3, #512	@ 0x200
100113ec:	f04f 0c40 	mov.w	ip, #64	@ 0x40
100113f0:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
100113f4:	e77f      	b.n	100112f6 <_malloc_r+0x8e>
100113f6:	68bc      	ldr	r4, [r7, #8]
100113f8:	6863      	ldr	r3, [r4, #4]
100113fa:	f023 0903 	bic.w	r9, r3, #3
100113fe:	45a9      	cmp	r9, r5
10011400:	d303      	bcc.n	1001140a <_malloc_r+0x1a2>
10011402:	eba9 0305 	sub.w	r3, r9, r5
10011406:	2b0f      	cmp	r3, #15
10011408:	dc53      	bgt.n	100114b2 <_malloc_r+0x24a>
1001140a:	4b5b      	ldr	r3, [pc, #364]	@ (10011578 <_malloc_r+0x310>)
1001140c:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 1001158c <_malloc_r+0x324>
10011410:	681b      	ldr	r3, [r3, #0]
10011412:	2008      	movs	r0, #8
10011414:	f103 0810 	add.w	r8, r3, #16
10011418:	f004 f880 	bl	1001551c <sysconf>
1001141c:	f8db 3000 	ldr.w	r3, [fp]
10011420:	9001      	str	r0, [sp, #4]
10011422:	3301      	adds	r3, #1
10011424:	44a8      	add	r8, r5
10011426:	eb04 0209 	add.w	r2, r4, r9
1001142a:	d005      	beq.n	10011438 <_malloc_r+0x1d0>
1001142c:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
10011430:	4480      	add	r8, r0
10011432:	4243      	negs	r3, r0
10011434:	ea03 0808 	and.w	r8, r3, r8
10011438:	4641      	mov	r1, r8
1001143a:	4630      	mov	r0, r6
1001143c:	9202      	str	r2, [sp, #8]
1001143e:	f004 f855 	bl	100154ec <_sbrk_r>
10011442:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10011446:	9a02      	ldr	r2, [sp, #8]
10011448:	4682      	mov	sl, r0
1001144a:	f000 80dc 	beq.w	10011606 <_malloc_r+0x39e>
1001144e:	4282      	cmp	r2, r0
10011450:	f200 80d7 	bhi.w	10011602 <_malloc_r+0x39a>
10011454:	4b49      	ldr	r3, [pc, #292]	@ (1001157c <_malloc_r+0x314>)
10011456:	9901      	ldr	r1, [sp, #4]
10011458:	6818      	ldr	r0, [r3, #0]
1001145a:	4440      	add	r0, r8
1001145c:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
10011460:	6018      	str	r0, [r3, #0]
10011462:	4684      	mov	ip, r0
10011464:	f040 80fc 	bne.w	10011660 <_malloc_r+0x3f8>
10011468:	ea1a 0f01 	tst.w	sl, r1
1001146c:	f040 80f8 	bne.w	10011660 <_malloc_r+0x3f8>
10011470:	f8d7 a008 	ldr.w	sl, [r7, #8]
10011474:	44c8      	add	r8, r9
10011476:	f048 0201 	orr.w	r2, r8, #1
1001147a:	f8ca 2004 	str.w	r2, [sl, #4]
1001147e:	4b40      	ldr	r3, [pc, #256]	@ (10011580 <_malloc_r+0x318>)
10011480:	6819      	ldr	r1, [r3, #0]
10011482:	4281      	cmp	r1, r0
10011484:	bf38      	it	cc
10011486:	6018      	strcc	r0, [r3, #0]
10011488:	4b3e      	ldr	r3, [pc, #248]	@ (10011584 <_malloc_r+0x31c>)
1001148a:	6819      	ldr	r1, [r3, #0]
1001148c:	4281      	cmp	r1, r0
1001148e:	bf38      	it	cc
10011490:	6018      	strcc	r0, [r3, #0]
10011492:	4654      	mov	r4, sl
10011494:	f022 0803 	bic.w	r8, r2, #3
10011498:	45a8      	cmp	r8, r5
1001149a:	eba8 0305 	sub.w	r3, r8, r5
1001149e:	d301      	bcc.n	100114a4 <_malloc_r+0x23c>
100114a0:	2b0f      	cmp	r3, #15
100114a2:	dc06      	bgt.n	100114b2 <_malloc_r+0x24a>
100114a4:	4630      	mov	r0, r6
100114a6:	f003 f879 	bl	1001459c <__malloc_unlock>
100114aa:	e79b      	b.n	100113e4 <_malloc_r+0x17c>
100114ac:	f8d7 e004 	ldr.w	lr, [r7, #4]
100114b0:	e766      	b.n	10011380 <_malloc_r+0x118>
100114b2:	1962      	adds	r2, r4, r5
100114b4:	f043 0301 	orr.w	r3, r3, #1
100114b8:	f045 0501 	orr.w	r5, r5, #1
100114bc:	6065      	str	r5, [r4, #4]
100114be:	4630      	mov	r0, r6
100114c0:	60ba      	str	r2, [r7, #8]
100114c2:	6053      	str	r3, [r2, #4]
100114c4:	f003 f86a 	bl	1001459c <__malloc_unlock>
100114c8:	3408      	adds	r4, #8
100114ca:	4620      	mov	r0, r4
100114cc:	b005      	add	sp, #20
100114ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100114d2:	68a2      	ldr	r2, [r4, #8]
100114d4:	4423      	add	r3, r4
100114d6:	60d1      	str	r1, [r2, #12]
100114d8:	4630      	mov	r0, r6
100114da:	608a      	str	r2, [r1, #8]
100114dc:	e6e6      	b.n	100112ac <_malloc_r+0x44>
100114de:	68dc      	ldr	r4, [r3, #12]
100114e0:	42a3      	cmp	r3, r4
100114e2:	f47f aeda 	bne.w	1001129a <_malloc_r+0x32>
100114e6:	f10c 0c02 	add.w	ip, ip, #2
100114ea:	e71a      	b.n	10011322 <_malloc_r+0xba>
100114ec:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
100114f0:	ea4f 2259 	mov.w	r2, r9, lsr #9
100114f4:	d37e      	bcc.n	100115f4 <_malloc_r+0x38c>
100114f6:	2a14      	cmp	r2, #20
100114f8:	f200 8115 	bhi.w	10011726 <_malloc_r+0x4be>
100114fc:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
10011500:	00db      	lsls	r3, r3, #3
10011502:	325b      	adds	r2, #91	@ 0x5b
10011504:	18f9      	adds	r1, r7, r3
10011506:	58fb      	ldr	r3, [r7, r3]
10011508:	3908      	subs	r1, #8
1001150a:	4299      	cmp	r1, r3
1001150c:	d103      	bne.n	10011516 <_malloc_r+0x2ae>
1001150e:	e0f0      	b.n	100116f2 <_malloc_r+0x48a>
10011510:	689b      	ldr	r3, [r3, #8]
10011512:	4299      	cmp	r1, r3
10011514:	d004      	beq.n	10011520 <_malloc_r+0x2b8>
10011516:	685a      	ldr	r2, [r3, #4]
10011518:	f022 0203 	bic.w	r2, r2, #3
1001151c:	454a      	cmp	r2, r9
1001151e:	d8f7      	bhi.n	10011510 <_malloc_r+0x2a8>
10011520:	68d9      	ldr	r1, [r3, #12]
10011522:	e9c4 3102 	strd	r3, r1, [r4, #8]
10011526:	608c      	str	r4, [r1, #8]
10011528:	60dc      	str	r4, [r3, #12]
1001152a:	e729      	b.n	10011380 <_malloc_r+0x118>
1001152c:	2b14      	cmp	r3, #20
1001152e:	d96d      	bls.n	1001160c <_malloc_r+0x3a4>
10011530:	2b54      	cmp	r3, #84	@ 0x54
10011532:	f200 8101 	bhi.w	10011738 <_malloc_r+0x4d0>
10011536:	0b2b      	lsrs	r3, r5, #12
10011538:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
1001153c:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
10011540:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10011544:	e6d7      	b.n	100112f6 <_malloc_r+0x8e>
10011546:	4630      	mov	r0, r6
10011548:	68a6      	ldr	r6, [r4, #8]
1001154a:	1962      	adds	r2, r4, r5
1001154c:	f045 0501 	orr.w	r5, r5, #1
10011550:	6065      	str	r5, [r4, #4]
10011552:	60f1      	str	r1, [r6, #12]
10011554:	608e      	str	r6, [r1, #8]
10011556:	f04e 0101 	orr.w	r1, lr, #1
1001155a:	e9c7 2204 	strd	r2, r2, [r7, #16]
1001155e:	f8c2 8008 	str.w	r8, [r2, #8]
10011562:	f8c2 800c 	str.w	r8, [r2, #12]
10011566:	6051      	str	r1, [r2, #4]
10011568:	f844 e003 	str.w	lr, [r4, r3]
1001156c:	f003 f816 	bl	1001459c <__malloc_unlock>
10011570:	3408      	adds	r4, #8
10011572:	e6a2      	b.n	100112ba <_malloc_r+0x52>
10011574:	20000040 	.word	0x20000040
10011578:	2000145c 	.word	0x2000145c
1001157c:	2000142c 	.word	0x2000142c
10011580:	20001458 	.word	0x20001458
10011584:	20001454 	.word	0x20001454
10011588:	20000048 	.word	0x20000048
1001158c:	20000038 	.word	0x20000038
10011590:	4423      	add	r3, r4
10011592:	4630      	mov	r0, r6
10011594:	685a      	ldr	r2, [r3, #4]
10011596:	f042 0201 	orr.w	r2, r2, #1
1001159a:	605a      	str	r2, [r3, #4]
1001159c:	f854 3f08 	ldr.w	r3, [r4, #8]!
100115a0:	60d9      	str	r1, [r3, #12]
100115a2:	608b      	str	r3, [r1, #8]
100115a4:	f002 fffa 	bl	1001459c <__malloc_unlock>
100115a8:	e687      	b.n	100112ba <_malloc_r+0x52>
100115aa:	44a1      	add	r9, r4
100115ac:	4630      	mov	r0, r6
100115ae:	f8d9 3004 	ldr.w	r3, [r9, #4]
100115b2:	f043 0301 	orr.w	r3, r3, #1
100115b6:	f8c9 3004 	str.w	r3, [r9, #4]
100115ba:	3408      	adds	r4, #8
100115bc:	f002 ffee 	bl	1001459c <__malloc_unlock>
100115c0:	e67b      	b.n	100112ba <_malloc_r+0x52>
100115c2:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
100115c6:	f105 0308 	add.w	r3, r5, #8
100115ca:	e65e      	b.n	1001128a <_malloc_r+0x22>
100115cc:	1962      	adds	r2, r4, r5
100115ce:	f043 0101 	orr.w	r1, r3, #1
100115d2:	f045 0501 	orr.w	r5, r5, #1
100115d6:	6065      	str	r5, [r4, #4]
100115d8:	4630      	mov	r0, r6
100115da:	e9c7 2204 	strd	r2, r2, [r7, #16]
100115de:	f8c2 8008 	str.w	r8, [r2, #8]
100115e2:	f8c2 800c 	str.w	r8, [r2, #12]
100115e6:	6051      	str	r1, [r2, #4]
100115e8:	f844 3009 	str.w	r3, [r4, r9]
100115ec:	f002 ffd6 	bl	1001459c <__malloc_unlock>
100115f0:	3408      	adds	r4, #8
100115f2:	e662      	b.n	100112ba <_malloc_r+0x52>
100115f4:	ea4f 1299 	mov.w	r2, r9, lsr #6
100115f8:	f102 0339 	add.w	r3, r2, #57	@ 0x39
100115fc:	00db      	lsls	r3, r3, #3
100115fe:	3238      	adds	r2, #56	@ 0x38
10011600:	e780      	b.n	10011504 <_malloc_r+0x29c>
10011602:	42bc      	cmp	r4, r7
10011604:	d024      	beq.n	10011650 <_malloc_r+0x3e8>
10011606:	68bc      	ldr	r4, [r7, #8]
10011608:	6862      	ldr	r2, [r4, #4]
1001160a:	e743      	b.n	10011494 <_malloc_r+0x22c>
1001160c:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
10011610:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
10011614:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10011618:	e66d      	b.n	100112f6 <_malloc_r+0x8e>
1001161a:	f85a 3908 	ldr.w	r3, [sl], #-8
1001161e:	4553      	cmp	r3, sl
10011620:	f040 80d8 	bne.w	100117d4 <_malloc_r+0x56c>
10011624:	f01c 0f03 	tst.w	ip, #3
10011628:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
1001162c:	d1f5      	bne.n	1001161a <_malloc_r+0x3b2>
1001162e:	687b      	ldr	r3, [r7, #4]
10011630:	ea23 0300 	bic.w	r3, r3, r0
10011634:	607b      	str	r3, [r7, #4]
10011636:	0040      	lsls	r0, r0, #1
10011638:	4298      	cmp	r0, r3
1001163a:	f63f aedc 	bhi.w	100113f6 <_malloc_r+0x18e>
1001163e:	b918      	cbnz	r0, 10011648 <_malloc_r+0x3e0>
10011640:	e6d9      	b.n	100113f6 <_malloc_r+0x18e>
10011642:	0040      	lsls	r0, r0, #1
10011644:	f109 0904 	add.w	r9, r9, #4
10011648:	4218      	tst	r0, r3
1001164a:	d0fa      	beq.n	10011642 <_malloc_r+0x3da>
1001164c:	46cc      	mov	ip, r9
1001164e:	e6a8      	b.n	100113a2 <_malloc_r+0x13a>
10011650:	4b61      	ldr	r3, [pc, #388]	@ (100117d8 <_malloc_r+0x570>)
10011652:	9901      	ldr	r1, [sp, #4]
10011654:	6818      	ldr	r0, [r3, #0]
10011656:	eb08 0c00 	add.w	ip, r8, r0
1001165a:	3901      	subs	r1, #1
1001165c:	f8c3 c000 	str.w	ip, [r3]
10011660:	f8db 0000 	ldr.w	r0, [fp]
10011664:	3001      	adds	r0, #1
10011666:	bf1b      	ittet	ne
10011668:	ebaa 0202 	subne.w	r2, sl, r2
1001166c:	4462      	addne	r2, ip
1001166e:	f8cb a000 	streq.w	sl, [fp]
10011672:	601a      	strne	r2, [r3, #0]
10011674:	f01a 0207 	ands.w	r2, sl, #7
10011678:	e9cd 2302 	strd	r2, r3, [sp, #8]
1001167c:	d042      	beq.n	10011704 <_malloc_r+0x49c>
1001167e:	f1c2 0208 	rsb	r2, r2, #8
10011682:	9b01      	ldr	r3, [sp, #4]
10011684:	4492      	add	sl, r2
10011686:	44d0      	add	r8, sl
10011688:	4413      	add	r3, r2
1001168a:	ea08 0001 	and.w	r0, r8, r1
1001168e:	1a1a      	subs	r2, r3, r0
10011690:	ea02 0b01 	and.w	fp, r2, r1
10011694:	4659      	mov	r1, fp
10011696:	4630      	mov	r0, r6
10011698:	f003 ff28 	bl	100154ec <_sbrk_r>
1001169c:	1c42      	adds	r2, r0, #1
1001169e:	9b03      	ldr	r3, [sp, #12]
100116a0:	d07a      	beq.n	10011798 <_malloc_r+0x530>
100116a2:	eba0 000a 	sub.w	r0, r0, sl
100116a6:	eb00 080b 	add.w	r8, r0, fp
100116aa:	6818      	ldr	r0, [r3, #0]
100116ac:	f8c7 a008 	str.w	sl, [r7, #8]
100116b0:	f048 0201 	orr.w	r2, r8, #1
100116b4:	4458      	add	r0, fp
100116b6:	42bc      	cmp	r4, r7
100116b8:	f8ca 2004 	str.w	r2, [sl, #4]
100116bc:	6018      	str	r0, [r3, #0]
100116be:	f43f aede 	beq.w	1001147e <_malloc_r+0x216>
100116c2:	f1b9 0f0f 	cmp.w	r9, #15
100116c6:	d942      	bls.n	1001174e <_malloc_r+0x4e6>
100116c8:	6861      	ldr	r1, [r4, #4]
100116ca:	f1a9 020c 	sub.w	r2, r9, #12
100116ce:	f022 0207 	bic.w	r2, r2, #7
100116d2:	f001 0101 	and.w	r1, r1, #1
100116d6:	4311      	orrs	r1, r2
100116d8:	6061      	str	r1, [r4, #4]
100116da:	18a1      	adds	r1, r4, r2
100116dc:	f04f 0c05 	mov.w	ip, #5
100116e0:	2a0f      	cmp	r2, #15
100116e2:	f8c1 c004 	str.w	ip, [r1, #4]
100116e6:	f8c1 c008 	str.w	ip, [r1, #8]
100116ea:	d84a      	bhi.n	10011782 <_malloc_r+0x51a>
100116ec:	f8da 2004 	ldr.w	r2, [sl, #4]
100116f0:	e6c5      	b.n	1001147e <_malloc_r+0x216>
100116f2:	1092      	asrs	r2, r2, #2
100116f4:	2001      	movs	r0, #1
100116f6:	fa00 f202 	lsl.w	r2, r0, r2
100116fa:	ea4e 0e02 	orr.w	lr, lr, r2
100116fe:	f8c7 e004 	str.w	lr, [r7, #4]
10011702:	e70e      	b.n	10011522 <_malloc_r+0x2ba>
10011704:	9b01      	ldr	r3, [sp, #4]
10011706:	eb0a 0208 	add.w	r2, sl, r8
1001170a:	400a      	ands	r2, r1
1001170c:	1a9a      	subs	r2, r3, r2
1001170e:	ea02 0b01 	and.w	fp, r2, r1
10011712:	4659      	mov	r1, fp
10011714:	4630      	mov	r0, r6
10011716:	f003 fee9 	bl	100154ec <_sbrk_r>
1001171a:	1c43      	adds	r3, r0, #1
1001171c:	9b03      	ldr	r3, [sp, #12]
1001171e:	d1c0      	bne.n	100116a2 <_malloc_r+0x43a>
10011720:	f8dd b008 	ldr.w	fp, [sp, #8]
10011724:	e7c1      	b.n	100116aa <_malloc_r+0x442>
10011726:	2a54      	cmp	r2, #84	@ 0x54
10011728:	d815      	bhi.n	10011756 <_malloc_r+0x4ee>
1001172a:	ea4f 3219 	mov.w	r2, r9, lsr #12
1001172e:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
10011732:	00db      	lsls	r3, r3, #3
10011734:	326e      	adds	r2, #110	@ 0x6e
10011736:	e6e5      	b.n	10011504 <_malloc_r+0x29c>
10011738:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
1001173c:	d815      	bhi.n	1001176a <_malloc_r+0x502>
1001173e:	0beb      	lsrs	r3, r5, #15
10011740:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
10011744:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
10011748:	ea4f 03cc 	mov.w	r3, ip, lsl #3
1001174c:	e5d3      	b.n	100112f6 <_malloc_r+0x8e>
1001174e:	2301      	movs	r3, #1
10011750:	f8ca 3004 	str.w	r3, [sl, #4]
10011754:	e6a6      	b.n	100114a4 <_malloc_r+0x23c>
10011756:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
1001175a:	d825      	bhi.n	100117a8 <_malloc_r+0x540>
1001175c:	ea4f 32d9 	mov.w	r2, r9, lsr #15
10011760:	f102 0378 	add.w	r3, r2, #120	@ 0x78
10011764:	00db      	lsls	r3, r3, #3
10011766:	3277      	adds	r2, #119	@ 0x77
10011768:	e6cc      	b.n	10011504 <_malloc_r+0x29c>
1001176a:	f240 5254 	movw	r2, #1364	@ 0x554
1001176e:	4293      	cmp	r3, r2
10011770:	d825      	bhi.n	100117be <_malloc_r+0x556>
10011772:	0cab      	lsrs	r3, r5, #18
10011774:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
10011778:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
1001177c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10011780:	e5b9      	b.n	100112f6 <_malloc_r+0x8e>
10011782:	4630      	mov	r0, r6
10011784:	f104 0108 	add.w	r1, r4, #8
10011788:	9301      	str	r3, [sp, #4]
1001178a:	f005 f8f3 	bl	10016974 <_free_r>
1001178e:	9b01      	ldr	r3, [sp, #4]
10011790:	f8d7 a008 	ldr.w	sl, [r7, #8]
10011794:	6818      	ldr	r0, [r3, #0]
10011796:	e7a9      	b.n	100116ec <_malloc_r+0x484>
10011798:	9a02      	ldr	r2, [sp, #8]
1001179a:	3a08      	subs	r2, #8
1001179c:	4490      	add	r8, r2
1001179e:	eba8 080a 	sub.w	r8, r8, sl
100117a2:	f04f 0b00 	mov.w	fp, #0
100117a6:	e780      	b.n	100116aa <_malloc_r+0x442>
100117a8:	f240 5354 	movw	r3, #1364	@ 0x554
100117ac:	429a      	cmp	r2, r3
100117ae:	d80d      	bhi.n	100117cc <_malloc_r+0x564>
100117b0:	ea4f 4299 	mov.w	r2, r9, lsr #18
100117b4:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
100117b8:	00db      	lsls	r3, r3, #3
100117ba:	327c      	adds	r2, #124	@ 0x7c
100117bc:	e6a2      	b.n	10011504 <_malloc_r+0x29c>
100117be:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100117c2:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
100117c6:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
100117ca:	e594      	b.n	100112f6 <_malloc_r+0x8e>
100117cc:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100117d0:	227e      	movs	r2, #126	@ 0x7e
100117d2:	e697      	b.n	10011504 <_malloc_r+0x29c>
100117d4:	687b      	ldr	r3, [r7, #4]
100117d6:	e72e      	b.n	10011636 <_malloc_r+0x3ce>
100117d8:	2000142c 	.word	0x2000142c

100117dc <printf>:
100117dc:	b40f      	push	{r0, r1, r2, r3}
100117de:	b500      	push	{lr}
100117e0:	4907      	ldr	r1, [pc, #28]	@ (10011800 <printf+0x24>)
100117e2:	b083      	sub	sp, #12
100117e4:	ab04      	add	r3, sp, #16
100117e6:	6808      	ldr	r0, [r1, #0]
100117e8:	f853 2b04 	ldr.w	r2, [r3], #4
100117ec:	6881      	ldr	r1, [r0, #8]
100117ee:	9301      	str	r3, [sp, #4]
100117f0:	f000 f80a 	bl	10011808 <_vfprintf_r>
100117f4:	b003      	add	sp, #12
100117f6:	f85d eb04 	ldr.w	lr, [sp], #4
100117fa:	b004      	add	sp, #16
100117fc:	4770      	bx	lr
100117fe:	bf00      	nop
10011800:	200005c0 	.word	0x200005c0
10011804:	00000000 	.word	0x00000000

10011808 <_vfprintf_r>:
10011808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001180c:	b0df      	sub	sp, #380	@ 0x17c
1001180e:	461c      	mov	r4, r3
10011810:	9107      	str	r1, [sp, #28]
10011812:	4691      	mov	r9, r2
10011814:	4683      	mov	fp, r0
10011816:	f003 fe4f 	bl	100154b8 <_localeconv_r>
1001181a:	6803      	ldr	r3, [r0, #0]
1001181c:	9319      	str	r3, [sp, #100]	@ 0x64
1001181e:	4618      	mov	r0, r3
10011820:	f003 ffae 	bl	10015780 <strlen>
10011824:	2208      	movs	r2, #8
10011826:	9018      	str	r0, [sp, #96]	@ 0x60
10011828:	2100      	movs	r1, #0
1001182a:	a82e      	add	r0, sp, #184	@ 0xb8
1001182c:	940d      	str	r4, [sp, #52]	@ 0x34
1001182e:	f003 fdb7 	bl	100153a0 <memset>
10011832:	f1bb 0f00 	cmp.w	fp, #0
10011836:	d004      	beq.n	10011842 <_vfprintf_r+0x3a>
10011838:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
1001183c:	2b00      	cmp	r3, #0
1001183e:	f001 8087 	beq.w	10012950 <_vfprintf_r+0x1148>
10011842:	9b07      	ldr	r3, [sp, #28]
10011844:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
10011846:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001184a:	07d1      	lsls	r1, r2, #31
1001184c:	d402      	bmi.n	10011854 <_vfprintf_r+0x4c>
1001184e:	059a      	lsls	r2, r3, #22
10011850:	f140 86a7 	bpl.w	100125a2 <_vfprintf_r+0xd9a>
10011854:	049f      	lsls	r7, r3, #18
10011856:	d407      	bmi.n	10011868 <_vfprintf_r+0x60>
10011858:	9907      	ldr	r1, [sp, #28]
1001185a:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
1001185c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10011860:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10011864:	818b      	strh	r3, [r1, #12]
10011866:	664a      	str	r2, [r1, #100]	@ 0x64
10011868:	071e      	lsls	r6, r3, #28
1001186a:	f140 80cc 	bpl.w	10011a06 <_vfprintf_r+0x1fe>
1001186e:	9a07      	ldr	r2, [sp, #28]
10011870:	6912      	ldr	r2, [r2, #16]
10011872:	2a00      	cmp	r2, #0
10011874:	f000 80c7 	beq.w	10011a06 <_vfprintf_r+0x1fe>
10011878:	f003 021a 	and.w	r2, r3, #26
1001187c:	2a0a      	cmp	r2, #10
1001187e:	f000 80d1 	beq.w	10011a24 <_vfprintf_r+0x21c>
10011882:	ed9f 7b99 	vldr	d7, [pc, #612]	@ 10011ae8 <_vfprintf_r+0x2e0>
10011886:	2300      	movs	r3, #0
10011888:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
1001188c:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10011890:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
10011894:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
10011898:	aa35      	add	r2, sp, #212	@ 0xd4
1001189a:	9313      	str	r3, [sp, #76]	@ 0x4c
1001189c:	9232      	str	r2, [sp, #200]	@ 0xc8
1001189e:	4690      	mov	r8, r2
100118a0:	931a      	str	r3, [sp, #104]	@ 0x68
100118a2:	930a      	str	r3, [sp, #40]	@ 0x28
100118a4:	f8cd b020 	str.w	fp, [sp, #32]
100118a8:	464d      	mov	r5, r9
100118aa:	9f08      	ldr	r7, [sp, #32]
100118ac:	462e      	mov	r6, r5
100118ae:	4b90      	ldr	r3, [pc, #576]	@ (10011af0 <_vfprintf_r+0x2e8>)
100118b0:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
100118b4:	f003 fdfa 	bl	100154ac <__locale_mb_cur_max>
100118b8:	4603      	mov	r3, r0
100118ba:	a82e      	add	r0, sp, #184	@ 0xb8
100118bc:	9000      	str	r0, [sp, #0]
100118be:	4632      	mov	r2, r6
100118c0:	a92a      	add	r1, sp, #168	@ 0xa8
100118c2:	4638      	mov	r0, r7
100118c4:	47a0      	blx	r4
100118c6:	2800      	cmp	r0, #0
100118c8:	f000 80cb 	beq.w	10011a62 <_vfprintf_r+0x25a>
100118cc:	f2c0 80c1 	blt.w	10011a52 <_vfprintf_r+0x24a>
100118d0:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
100118d2:	2a25      	cmp	r2, #37	@ 0x25
100118d4:	4603      	mov	r3, r0
100118d6:	d001      	beq.n	100118dc <_vfprintf_r+0xd4>
100118d8:	441e      	add	r6, r3
100118da:	e7e8      	b.n	100118ae <_vfprintf_r+0xa6>
100118dc:	1b77      	subs	r7, r6, r5
100118de:	4604      	mov	r4, r0
100118e0:	f040 80c2 	bne.w	10011a68 <_vfprintf_r+0x260>
100118e4:	2300      	movs	r3, #0
100118e6:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
100118ea:	4699      	mov	r9, r3
100118ec:	930b      	str	r3, [sp, #44]	@ 0x2c
100118ee:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
100118f2:	7873      	ldrb	r3, [r6, #1]
100118f4:	9209      	str	r2, [sp, #36]	@ 0x24
100118f6:	1c74      	adds	r4, r6, #1
100118f8:	3401      	adds	r4, #1
100118fa:	f1a3 0220 	sub.w	r2, r3, #32
100118fe:	2a5a      	cmp	r2, #90	@ 0x5a
10011900:	f200 80f8 	bhi.w	10011af4 <_vfprintf_r+0x2ec>
10011904:	e8df f012 	tbh	[pc, r2, lsl #1]
10011908:	00f602d0 	.word	0x00f602d0
1001190c:	02cc00f6 	.word	0x02cc00f6
10011910:	00f600f6 	.word	0x00f600f6
10011914:	006a00f6 	.word	0x006a00f6
10011918:	00f600f6 	.word	0x00f600f6
1001191c:	02a90286 	.word	0x02a90286
10011920:	029100f6 	.word	0x029100f6
10011924:	00f602b2 	.word	0x00f602b2
10011928:	005b02ae 	.word	0x005b02ae
1001192c:	005b005b 	.word	0x005b005b
10011930:	005b005b 	.word	0x005b005b
10011934:	005b005b 	.word	0x005b005b
10011938:	005b005b 	.word	0x005b005b
1001193c:	00f600f6 	.word	0x00f600f6
10011940:	00f600f6 	.word	0x00f600f6
10011944:	00f600f6 	.word	0x00f600f6
10011948:	017700f6 	.word	0x017700f6
1001194c:	021100f6 	.word	0x021100f6
10011950:	0177032a 	.word	0x0177032a
10011954:	01770177 	.word	0x01770177
10011958:	00f600f6 	.word	0x00f600f6
1001195c:	00f600f6 	.word	0x00f600f6
10011960:	00f60326 	.word	0x00f60326
10011964:	02e200f6 	.word	0x02e200f6
10011968:	00f600f6 	.word	0x00f600f6
1001196c:	022f00f6 	.word	0x022f00f6
10011970:	031300f6 	.word	0x031300f6
10011974:	00f600f6 	.word	0x00f600f6
10011978:	00f6071f 	.word	0x00f6071f
1001197c:	00f600f6 	.word	0x00f600f6
10011980:	00f600f6 	.word	0x00f600f6
10011984:	00f600f6 	.word	0x00f600f6
10011988:	017700f6 	.word	0x017700f6
1001198c:	021100f6 	.word	0x021100f6
10011990:	01770261 	.word	0x01770261
10011994:	01770177 	.word	0x01770177
10011998:	0261029f 	.word	0x0261029f
1001199c:	00f6020d 	.word	0x00f6020d
100119a0:	00f60295 	.word	0x00f60295
100119a4:	07470355 	.word	0x07470355
100119a8:	020d0343 	.word	0x020d0343
100119ac:	022f00f6 	.word	0x022f00f6
100119b0:	0742007d 	.word	0x0742007d
100119b4:	00f600f6 	.word	0x00f600f6
100119b8:	00f6074b 	.word	0x00f6074b
100119bc:	007d      	.short	0x007d
100119be:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100119c2:	2100      	movs	r1, #0
100119c4:	f814 3b01 	ldrb.w	r3, [r4], #1
100119c8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100119cc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
100119d0:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100119d4:	2a09      	cmp	r2, #9
100119d6:	d9f5      	bls.n	100119c4 <_vfprintf_r+0x1bc>
100119d8:	910b      	str	r1, [sp, #44]	@ 0x2c
100119da:	e78e      	b.n	100118fa <_vfprintf_r+0xf2>
100119dc:	9f08      	ldr	r7, [sp, #32]
100119de:	4638      	mov	r0, r7
100119e0:	f003 fd6a 	bl	100154b8 <_localeconv_r>
100119e4:	6843      	ldr	r3, [r0, #4]
100119e6:	931d      	str	r3, [sp, #116]	@ 0x74
100119e8:	4618      	mov	r0, r3
100119ea:	f003 fec9 	bl	10015780 <strlen>
100119ee:	901e      	str	r0, [sp, #120]	@ 0x78
100119f0:	4606      	mov	r6, r0
100119f2:	4638      	mov	r0, r7
100119f4:	f003 fd60 	bl	100154b8 <_localeconv_r>
100119f8:	6883      	ldr	r3, [r0, #8]
100119fa:	931b      	str	r3, [sp, #108]	@ 0x6c
100119fc:	2e00      	cmp	r6, #0
100119fe:	f040 8629 	bne.w	10012654 <_vfprintf_r+0xe4c>
10011a02:	7823      	ldrb	r3, [r4, #0]
10011a04:	e778      	b.n	100118f8 <_vfprintf_r+0xf0>
10011a06:	9d07      	ldr	r5, [sp, #28]
10011a08:	4658      	mov	r0, fp
10011a0a:	4629      	mov	r1, r5
10011a0c:	f003 fb7a 	bl	10015104 <__swsetup_r>
10011a10:	2800      	cmp	r0, #0
10011a12:	f041 83ac 	bne.w	1001316e <_vfprintf_r+0x1966>
10011a16:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
10011a1a:	f003 021a 	and.w	r2, r3, #26
10011a1e:	2a0a      	cmp	r2, #10
10011a20:	f47f af2f 	bne.w	10011882 <_vfprintf_r+0x7a>
10011a24:	9907      	ldr	r1, [sp, #28]
10011a26:	f9b1 200e 	ldrsh.w	r2, [r1, #14]
10011a2a:	2a00      	cmp	r2, #0
10011a2c:	f6ff af29 	blt.w	10011882 <_vfprintf_r+0x7a>
10011a30:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
10011a32:	07d0      	lsls	r0, r2, #31
10011a34:	d402      	bmi.n	10011a3c <_vfprintf_r+0x234>
10011a36:	059a      	lsls	r2, r3, #22
10011a38:	f141 81c5 	bpl.w	10012dc6 <_vfprintf_r+0x15be>
10011a3c:	9907      	ldr	r1, [sp, #28]
10011a3e:	4623      	mov	r3, r4
10011a40:	464a      	mov	r2, r9
10011a42:	4658      	mov	r0, fp
10011a44:	f001 fd08 	bl	10013458 <__sbprintf>
10011a48:	900a      	str	r0, [sp, #40]	@ 0x28
10011a4a:	980a      	ldr	r0, [sp, #40]	@ 0x28
10011a4c:	b05f      	add	sp, #380	@ 0x17c
10011a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10011a52:	2208      	movs	r2, #8
10011a54:	2100      	movs	r1, #0
10011a56:	a82e      	add	r0, sp, #184	@ 0xb8
10011a58:	f003 fca2 	bl	100153a0 <memset>
10011a5c:	2301      	movs	r3, #1
10011a5e:	441e      	add	r6, r3
10011a60:	e725      	b.n	100118ae <_vfprintf_r+0xa6>
10011a62:	1b77      	subs	r7, r6, r5
10011a64:	4604      	mov	r4, r0
10011a66:	d011      	beq.n	10011a8c <_vfprintf_r+0x284>
10011a68:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10011a6a:	443b      	add	r3, r7
10011a6c:	9334      	str	r3, [sp, #208]	@ 0xd0
10011a6e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011a70:	3301      	adds	r3, #1
10011a72:	2b07      	cmp	r3, #7
10011a74:	e9c8 5700 	strd	r5, r7, [r8]
10011a78:	9333      	str	r3, [sp, #204]	@ 0xcc
10011a7a:	dc13      	bgt.n	10011aa4 <_vfprintf_r+0x29c>
10011a7c:	f108 0808 	add.w	r8, r8, #8
10011a80:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10011a82:	443b      	add	r3, r7
10011a84:	930a      	str	r3, [sp, #40]	@ 0x28
10011a86:	2c00      	cmp	r4, #0
10011a88:	f47f af2c 	bne.w	100118e4 <_vfprintf_r+0xdc>
10011a8c:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10011a8e:	f8dd b020 	ldr.w	fp, [sp, #32]
10011a92:	2b00      	cmp	r3, #0
10011a94:	f041 80dc 	bne.w	10012c50 <_vfprintf_r+0x1448>
10011a98:	9b07      	ldr	r3, [sp, #28]
10011a9a:	2200      	movs	r2, #0
10011a9c:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10011aa0:	9233      	str	r2, [sp, #204]	@ 0xcc
10011aa2:	e012      	b.n	10011aca <_vfprintf_r+0x2c2>
10011aa4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011aa8:	aa32      	add	r2, sp, #200	@ 0xc8
10011aaa:	f001 fd51 	bl	10013550 <__sprint_r>
10011aae:	b948      	cbnz	r0, 10011ac4 <_vfprintf_r+0x2bc>
10011ab0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011ab4:	e7e4      	b.n	10011a80 <_vfprintf_r+0x278>
10011ab6:	46bb      	mov	fp, r7
10011ab8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10011aba:	b11b      	cbz	r3, 10011ac4 <_vfprintf_r+0x2bc>
10011abc:	990c      	ldr	r1, [sp, #48]	@ 0x30
10011abe:	4658      	mov	r0, fp
10011ac0:	f004 ff58 	bl	10016974 <_free_r>
10011ac4:	9b07      	ldr	r3, [sp, #28]
10011ac6:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10011aca:	9a07      	ldr	r2, [sp, #28]
10011acc:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10011ace:	07d4      	lsls	r4, r2, #31
10011ad0:	f140 811d 	bpl.w	10011d0e <_vfprintf_r+0x506>
10011ad4:	0659      	lsls	r1, r3, #25
10011ad6:	f101 8356 	bmi.w	10013186 <_vfprintf_r+0x197e>
10011ada:	980a      	ldr	r0, [sp, #40]	@ 0x28
10011adc:	b05f      	add	sp, #380	@ 0x17c
10011ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10011ae2:	bf00      	nop
10011ae4:	f3af 8000 	nop.w
	...
10011af0:	20000454 	.word	0x20000454
10011af4:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011af8:	2b00      	cmp	r3, #0
10011afa:	d0c7      	beq.n	10011a8c <_vfprintf_r+0x284>
10011afc:	2200      	movs	r2, #0
10011afe:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10011b02:	2301      	movs	r3, #1
10011b04:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10011b08:	9306      	str	r3, [sp, #24]
10011b0a:	920c      	str	r2, [sp, #48]	@ 0x30
10011b0c:	469b      	mov	fp, r3
10011b0e:	9209      	str	r2, [sp, #36]	@ 0x24
10011b10:	9214      	str	r2, [sp, #80]	@ 0x50
10011b12:	9210      	str	r2, [sp, #64]	@ 0x40
10011b14:	9212      	str	r2, [sp, #72]	@ 0x48
10011b16:	ad45      	add	r5, sp, #276	@ 0x114
10011b18:	f019 0302 	ands.w	r3, r9, #2
10011b1c:	d002      	beq.n	10011b24 <_vfprintf_r+0x31c>
10011b1e:	9906      	ldr	r1, [sp, #24]
10011b20:	3102      	adds	r1, #2
10011b22:	9106      	str	r1, [sp, #24]
10011b24:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10011b28:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011b2a:	d105      	bne.n	10011b38 <_vfprintf_r+0x330>
10011b2c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10011b2e:	9806      	ldr	r0, [sp, #24]
10011b30:	1a0e      	subs	r6, r1, r0
10011b32:	2e00      	cmp	r6, #0
10011b34:	f300 80aa 	bgt.w	10011c8c <_vfprintf_r+0x484>
10011b38:	b182      	cbz	r2, 10011b5c <_vfprintf_r+0x354>
10011b3a:	2201      	movs	r2, #1
10011b3c:	f8c8 2004 	str.w	r2, [r8, #4]
10011b40:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10011b42:	3201      	adds	r2, #1
10011b44:	3401      	adds	r4, #1
10011b46:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
10011b4a:	2a07      	cmp	r2, #7
10011b4c:	9434      	str	r4, [sp, #208]	@ 0xd0
10011b4e:	9233      	str	r2, [sp, #204]	@ 0xcc
10011b50:	f8c8 1000 	str.w	r1, [r8]
10011b54:	f300 83e3 	bgt.w	1001231e <_vfprintf_r+0xb16>
10011b58:	f108 0808 	add.w	r8, r8, #8
10011b5c:	b183      	cbz	r3, 10011b80 <_vfprintf_r+0x378>
10011b5e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011b60:	aa28      	add	r2, sp, #160	@ 0xa0
10011b62:	3301      	adds	r3, #1
10011b64:	3402      	adds	r4, #2
10011b66:	f8c8 2000 	str.w	r2, [r8]
10011b6a:	2b07      	cmp	r3, #7
10011b6c:	f04f 0202 	mov.w	r2, #2
10011b70:	9434      	str	r4, [sp, #208]	@ 0xd0
10011b72:	9333      	str	r3, [sp, #204]	@ 0xcc
10011b74:	f8c8 2004 	str.w	r2, [r8, #4]
10011b78:	f300 83df 	bgt.w	1001233a <_vfprintf_r+0xb32>
10011b7c:	f108 0808 	add.w	r8, r8, #8
10011b80:	2f80      	cmp	r7, #128	@ 0x80
10011b82:	f000 82c0 	beq.w	10012106 <_vfprintf_r+0x8fe>
10011b86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011b88:	eba3 060b 	sub.w	r6, r3, fp
10011b8c:	2e00      	cmp	r6, #0
10011b8e:	f300 82ff 	bgt.w	10012190 <_vfprintf_r+0x988>
10011b92:	f419 7f80 	tst.w	r9, #256	@ 0x100
10011b96:	f040 821b 	bne.w	10011fd0 <_vfprintf_r+0x7c8>
10011b9a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011b9c:	f8c8 5000 	str.w	r5, [r8]
10011ba0:	3301      	adds	r3, #1
10011ba2:	445c      	add	r4, fp
10011ba4:	2b07      	cmp	r3, #7
10011ba6:	f8c8 b004 	str.w	fp, [r8, #4]
10011baa:	9434      	str	r4, [sp, #208]	@ 0xd0
10011bac:	9333      	str	r3, [sp, #204]	@ 0xcc
10011bae:	f300 834f 	bgt.w	10012250 <_vfprintf_r+0xa48>
10011bb2:	f108 0808 	add.w	r8, r8, #8
10011bb6:	f019 0f04 	tst.w	r9, #4
10011bba:	d005      	beq.n	10011bc8 <_vfprintf_r+0x3c0>
10011bbc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10011bbe:	9a06      	ldr	r2, [sp, #24]
10011bc0:	1a9d      	subs	r5, r3, r2
10011bc2:	2d00      	cmp	r5, #0
10011bc4:	f300 83c5 	bgt.w	10012352 <_vfprintf_r+0xb4a>
10011bc8:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10011bcc:	9906      	ldr	r1, [sp, #24]
10011bce:	428a      	cmp	r2, r1
10011bd0:	bfac      	ite	ge
10011bd2:	189b      	addge	r3, r3, r2
10011bd4:	185b      	addlt	r3, r3, r1
10011bd6:	930a      	str	r3, [sp, #40]	@ 0x28
10011bd8:	2c00      	cmp	r4, #0
10011bda:	f040 8311 	bne.w	10012200 <_vfprintf_r+0x9f8>
10011bde:	2300      	movs	r3, #0
10011be0:	9333      	str	r3, [sp, #204]	@ 0xcc
10011be2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10011be4:	b11b      	cbz	r3, 10011bee <_vfprintf_r+0x3e6>
10011be6:	990c      	ldr	r1, [sp, #48]	@ 0x30
10011be8:	9808      	ldr	r0, [sp, #32]
10011bea:	f004 fec3 	bl	10016974 <_free_r>
10011bee:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011bf2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10011bf4:	e659      	b.n	100118aa <_vfprintf_r+0xa2>
10011bf6:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011bfa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011bfc:	3307      	adds	r3, #7
10011bfe:	f023 0307 	bic.w	r3, r3, #7
10011c02:	ecb3 7b02 	vldmia	r3!, {d7}
10011c06:	ec57 6b17 	vmov	r6, r7, d7
10011c0a:	930d      	str	r3, [sp, #52]	@ 0x34
10011c0c:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10011c10:	9323      	str	r3, [sp, #140]	@ 0x8c
10011c12:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
10011c16:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
10011c1a:	4ba8      	ldr	r3, [pc, #672]	@ (10011ebc <_vfprintf_r+0x6b4>)
10011c1c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10011c20:	4650      	mov	r0, sl
10011c22:	4659      	mov	r1, fp
10011c24:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
10011c28:	f008 f94a 	bl	10019ec0 <__aeabi_dcmpun>
10011c2c:	2800      	cmp	r0, #0
10011c2e:	f040 852f 	bne.w	10012690 <_vfprintf_r+0xe88>
10011c32:	4ba2      	ldr	r3, [pc, #648]	@ (10011ebc <_vfprintf_r+0x6b4>)
10011c34:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10011c38:	4650      	mov	r0, sl
10011c3a:	4659      	mov	r1, fp
10011c3c:	f008 f922 	bl	10019e84 <__aeabi_dcmple>
10011c40:	2800      	cmp	r0, #0
10011c42:	f040 8525 	bne.w	10012690 <_vfprintf_r+0xe88>
10011c46:	2200      	movs	r2, #0
10011c48:	2300      	movs	r3, #0
10011c4a:	4630      	mov	r0, r6
10011c4c:	4639      	mov	r1, r7
10011c4e:	f008 f90f 	bl	10019e70 <__aeabi_dcmplt>
10011c52:	2800      	cmp	r0, #0
10011c54:	f041 810c 	bne.w	10012e70 <_vfprintf_r+0x1668>
10011c58:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011c5c:	4d98      	ldr	r5, [pc, #608]	@ (10011ec0 <_vfprintf_r+0x6b8>)
10011c5e:	4b99      	ldr	r3, [pc, #612]	@ (10011ec4 <_vfprintf_r+0x6bc>)
10011c60:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10011c64:	990e      	ldr	r1, [sp, #56]	@ 0x38
10011c66:	2947      	cmp	r1, #71	@ 0x47
10011c68:	bfc8      	it	gt
10011c6a:	461d      	movgt	r5, r3
10011c6c:	2300      	movs	r3, #0
10011c6e:	2103      	movs	r1, #3
10011c70:	930c      	str	r3, [sp, #48]	@ 0x30
10011c72:	9106      	str	r1, [sp, #24]
10011c74:	468b      	mov	fp, r1
10011c76:	9309      	str	r3, [sp, #36]	@ 0x24
10011c78:	9314      	str	r3, [sp, #80]	@ 0x50
10011c7a:	9310      	str	r3, [sp, #64]	@ 0x40
10011c7c:	9312      	str	r3, [sp, #72]	@ 0x48
10011c7e:	2a00      	cmp	r2, #0
10011c80:	f43f af4a 	beq.w	10011b18 <_vfprintf_r+0x310>
10011c84:	9b06      	ldr	r3, [sp, #24]
10011c86:	3301      	adds	r3, #1
10011c88:	9306      	str	r3, [sp, #24]
10011c8a:	e745      	b.n	10011b18 <_vfprintf_r+0x310>
10011c8c:	2e10      	cmp	r6, #16
10011c8e:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10011c90:	f341 823a 	ble.w	10013108 <_vfprintf_r+0x1900>
10011c94:	488c      	ldr	r0, [pc, #560]	@ (10011ec8 <_vfprintf_r+0x6c0>)
10011c96:	9521      	str	r5, [sp, #132]	@ 0x84
10011c98:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
10011c9c:	4621      	mov	r1, r4
10011c9e:	9d07      	ldr	r5, [sp, #28]
10011ca0:	9c08      	ldr	r4, [sp, #32]
10011ca2:	9015      	str	r0, [sp, #84]	@ 0x54
10011ca4:	f04f 0a10 	mov.w	sl, #16
10011ca8:	4607      	mov	r7, r0
10011caa:	e004      	b.n	10011cb6 <_vfprintf_r+0x4ae>
10011cac:	3e10      	subs	r6, #16
10011cae:	2e10      	cmp	r6, #16
10011cb0:	f108 0808 	add.w	r8, r8, #8
10011cb4:	dd16      	ble.n	10011ce4 <_vfprintf_r+0x4dc>
10011cb6:	3201      	adds	r2, #1
10011cb8:	3110      	adds	r1, #16
10011cba:	2a07      	cmp	r2, #7
10011cbc:	e9c8 7a00 	strd	r7, sl, [r8]
10011cc0:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10011cc4:	ddf2      	ble.n	10011cac <_vfprintf_r+0x4a4>
10011cc6:	aa32      	add	r2, sp, #200	@ 0xc8
10011cc8:	4629      	mov	r1, r5
10011cca:	4620      	mov	r0, r4
10011ccc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011cd0:	f001 fc3e 	bl	10013550 <__sprint_r>
10011cd4:	2800      	cmp	r0, #0
10011cd6:	f040 8635 	bne.w	10012944 <_vfprintf_r+0x113c>
10011cda:	3e10      	subs	r6, #16
10011cdc:	2e10      	cmp	r6, #16
10011cde:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10011ce2:	dce8      	bgt.n	10011cb6 <_vfprintf_r+0x4ae>
10011ce4:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10011ce8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
10011cea:	460c      	mov	r4, r1
10011cec:	3201      	adds	r2, #1
10011cee:	9915      	ldr	r1, [sp, #84]	@ 0x54
10011cf0:	f8c8 1000 	str.w	r1, [r8]
10011cf4:	4434      	add	r4, r6
10011cf6:	2a07      	cmp	r2, #7
10011cf8:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
10011cfc:	f8c8 6004 	str.w	r6, [r8, #4]
10011d00:	f300 860f 	bgt.w	10012922 <_vfprintf_r+0x111a>
10011d04:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011d08:	f108 0808 	add.w	r8, r8, #8
10011d0c:	e714      	b.n	10011b38 <_vfprintf_r+0x330>
10011d0e:	0598      	lsls	r0, r3, #22
10011d10:	f53f aee0 	bmi.w	10011ad4 <_vfprintf_r+0x2cc>
10011d14:	9c07      	ldr	r4, [sp, #28]
10011d16:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10011d18:	f003 fc3c 	bl	10015594 <__retarget_lock_release_recursive>
10011d1c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10011d20:	e6d8      	b.n	10011ad4 <_vfprintf_r+0x2cc>
10011d22:	7823      	ldrb	r3, [r4, #0]
10011d24:	f049 0920 	orr.w	r9, r9, #32
10011d28:	e5e6      	b.n	100118f8 <_vfprintf_r+0xf0>
10011d2a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10011d2c:	2b43      	cmp	r3, #67	@ 0x43
10011d2e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011d32:	f102 0404 	add.w	r4, r2, #4
10011d36:	f000 8561 	beq.w	100127fc <_vfprintf_r+0xff4>
10011d3a:	f019 0f10 	tst.w	r9, #16
10011d3e:	f040 855d 	bne.w	100127fc <_vfprintf_r+0xff4>
10011d42:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011d44:	681b      	ldr	r3, [r3, #0]
10011d46:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10011d4a:	2301      	movs	r3, #1
10011d4c:	9306      	str	r3, [sp, #24]
10011d4e:	469b      	mov	fp, r3
10011d50:	ad45      	add	r5, sp, #276	@ 0x114
10011d52:	2200      	movs	r2, #0
10011d54:	940d      	str	r4, [sp, #52]	@ 0x34
10011d56:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10011d5a:	920c      	str	r2, [sp, #48]	@ 0x30
10011d5c:	9209      	str	r2, [sp, #36]	@ 0x24
10011d5e:	9214      	str	r2, [sp, #80]	@ 0x50
10011d60:	9210      	str	r2, [sp, #64]	@ 0x40
10011d62:	9212      	str	r2, [sp, #72]	@ 0x48
10011d64:	e6d8      	b.n	10011b18 <_vfprintf_r+0x310>
10011d66:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10011d68:	f856 5b04 	ldr.w	r5, [r6], #4
10011d6c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011d70:	2300      	movs	r3, #0
10011d72:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10011d76:	2d00      	cmp	r5, #0
10011d78:	f000 852f 	beq.w	100127da <_vfprintf_r+0xfd2>
10011d7c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011d7e:	2b53      	cmp	r3, #83	@ 0x53
10011d80:	f000 8600 	beq.w	10012984 <_vfprintf_r+0x117c>
10011d84:	f019 0310 	ands.w	r3, r9, #16
10011d88:	9312      	str	r3, [sp, #72]	@ 0x48
10011d8a:	f040 85fb 	bne.w	10012984 <_vfprintf_r+0x117c>
10011d8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011d90:	1c5a      	adds	r2, r3, #1
10011d92:	f000 8767 	beq.w	10012c64 <_vfprintf_r+0x145c>
10011d96:	9912      	ldr	r1, [sp, #72]	@ 0x48
10011d98:	461a      	mov	r2, r3
10011d9a:	4628      	mov	r0, r5
10011d9c:	f003 fc00 	bl	100155a0 <memchr>
10011da0:	900c      	str	r0, [sp, #48]	@ 0x30
10011da2:	2800      	cmp	r0, #0
10011da4:	f001 82c2 	beq.w	1001332c <_vfprintf_r+0x1b24>
10011da8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10011daa:	960d      	str	r6, [sp, #52]	@ 0x34
10011dac:	eba3 0b05 	sub.w	fp, r3, r5
10011db0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10011db2:	9309      	str	r3, [sp, #36]	@ 0x24
10011db4:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10011db8:	9314      	str	r3, [sp, #80]	@ 0x50
10011dba:	9310      	str	r3, [sp, #64]	@ 0x40
10011dbc:	930c      	str	r3, [sp, #48]	@ 0x30
10011dbe:	2373      	movs	r3, #115	@ 0x73
10011dc0:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011dc4:	9106      	str	r1, [sp, #24]
10011dc6:	930e      	str	r3, [sp, #56]	@ 0x38
10011dc8:	e759      	b.n	10011c7e <_vfprintf_r+0x476>
10011dca:	f019 0f20 	tst.w	r9, #32
10011dce:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011dd2:	f000 80cb 	beq.w	10011f6c <_vfprintf_r+0x764>
10011dd6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011dd8:	3307      	adds	r3, #7
10011dda:	f023 0307 	bic.w	r3, r3, #7
10011dde:	461a      	mov	r2, r3
10011de0:	6859      	ldr	r1, [r3, #4]
10011de2:	f852 3b08 	ldr.w	r3, [r2], #8
10011de6:	920d      	str	r2, [sp, #52]	@ 0x34
10011de8:	460a      	mov	r2, r1
10011dea:	2900      	cmp	r1, #0
10011dec:	f2c0 8424 	blt.w	10012638 <_vfprintf_r+0xe30>
10011df0:	9909      	ldr	r1, [sp, #36]	@ 0x24
10011df2:	3101      	adds	r1, #1
10011df4:	f000 8284 	beq.w	10012300 <_vfprintf_r+0xaf8>
10011df8:	ea53 0102 	orrs.w	r1, r3, r2
10011dfc:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10011e00:	f040 827f 	bne.w	10012302 <_vfprintf_r+0xafa>
10011e04:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10011e06:	2a00      	cmp	r2, #0
10011e08:	f040 8280 	bne.w	1001230c <_vfprintf_r+0xb04>
10011e0c:	46a1      	mov	r9, r4
10011e0e:	4693      	mov	fp, r2
10011e10:	ad5e      	add	r5, sp, #376	@ 0x178
10011e12:	e14f      	b.n	100120b4 <_vfprintf_r+0x8ac>
10011e14:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011e16:	f853 2b04 	ldr.w	r2, [r3], #4
10011e1a:	920b      	str	r2, [sp, #44]	@ 0x2c
10011e1c:	2a00      	cmp	r2, #0
10011e1e:	f280 83cd 	bge.w	100125bc <_vfprintf_r+0xdb4>
10011e22:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10011e24:	930d      	str	r3, [sp, #52]	@ 0x34
10011e26:	4252      	negs	r2, r2
10011e28:	920b      	str	r2, [sp, #44]	@ 0x2c
10011e2a:	7823      	ldrb	r3, [r4, #0]
10011e2c:	f049 0904 	orr.w	r9, r9, #4
10011e30:	e562      	b.n	100118f8 <_vfprintf_r+0xf0>
10011e32:	7823      	ldrb	r3, [r4, #0]
10011e34:	2b6c      	cmp	r3, #108	@ 0x6c
10011e36:	bf03      	ittte	eq
10011e38:	7863      	ldrbeq	r3, [r4, #1]
10011e3a:	f049 0920 	orreq.w	r9, r9, #32
10011e3e:	3401      	addeq	r4, #1
10011e40:	f049 0910 	orrne.w	r9, r9, #16
10011e44:	e558      	b.n	100118f8 <_vfprintf_r+0xf0>
10011e46:	7823      	ldrb	r3, [r4, #0]
10011e48:	2b68      	cmp	r3, #104	@ 0x68
10011e4a:	bf03      	ittte	eq
10011e4c:	7863      	ldrbeq	r3, [r4, #1]
10011e4e:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10011e52:	3401      	addeq	r4, #1
10011e54:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
10011e58:	e54e      	b.n	100118f8 <_vfprintf_r+0xf0>
10011e5a:	232b      	movs	r3, #43	@ 0x2b
10011e5c:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10011e60:	7823      	ldrb	r3, [r4, #0]
10011e62:	e549      	b.n	100118f8 <_vfprintf_r+0xf0>
10011e64:	7823      	ldrb	r3, [r4, #0]
10011e66:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
10011e6a:	e545      	b.n	100118f8 <_vfprintf_r+0xf0>
10011e6c:	4621      	mov	r1, r4
10011e6e:	f811 3b01 	ldrb.w	r3, [r1], #1
10011e72:	2b2a      	cmp	r3, #42	@ 0x2a
10011e74:	f001 82d7 	beq.w	10013426 <_vfprintf_r+0x1c1e>
10011e78:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10011e7c:	2a09      	cmp	r2, #9
10011e7e:	460c      	mov	r4, r1
10011e80:	bf98      	it	ls
10011e82:	2100      	movls	r1, #0
10011e84:	f201 816f 	bhi.w	10013166 <_vfprintf_r+0x195e>
10011e88:	f814 3b01 	ldrb.w	r3, [r4], #1
10011e8c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10011e90:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10011e94:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10011e98:	2a09      	cmp	r2, #9
10011e9a:	d9f5      	bls.n	10011e88 <_vfprintf_r+0x680>
10011e9c:	9109      	str	r1, [sp, #36]	@ 0x24
10011e9e:	e52c      	b.n	100118fa <_vfprintf_r+0xf2>
10011ea0:	7823      	ldrb	r3, [r4, #0]
10011ea2:	f049 0901 	orr.w	r9, r9, #1
10011ea6:	e527      	b.n	100118f8 <_vfprintf_r+0xf0>
10011ea8:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10011eac:	7823      	ldrb	r3, [r4, #0]
10011eae:	2a00      	cmp	r2, #0
10011eb0:	f47f ad22 	bne.w	100118f8 <_vfprintf_r+0xf0>
10011eb4:	2220      	movs	r2, #32
10011eb6:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10011eba:	e51d      	b.n	100118f8 <_vfprintf_r+0xf0>
10011ebc:	7fefffff 	.word	0x7fefffff
10011ec0:	1001c51c 	.word	0x1001c51c
10011ec4:	1001c520 	.word	0x1001c520
10011ec8:	1001c570 	.word	0x1001c570
10011ecc:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011ed0:	f049 0910 	orr.w	r9, r9, #16
10011ed4:	f019 0220 	ands.w	r2, r9, #32
10011ed8:	f000 8354 	beq.w	10012584 <_vfprintf_r+0xd7c>
10011edc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011ede:	3307      	adds	r3, #7
10011ee0:	f023 0307 	bic.w	r3, r3, #7
10011ee4:	4619      	mov	r1, r3
10011ee6:	685a      	ldr	r2, [r3, #4]
10011ee8:	f851 3b08 	ldr.w	r3, [r1], #8
10011eec:	910d      	str	r1, [sp, #52]	@ 0x34
10011eee:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10011ef2:	2100      	movs	r1, #0
10011ef4:	2000      	movs	r0, #0
10011ef6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10011ef8:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
10011efc:	1c6f      	adds	r7, r5, #1
10011efe:	f000 80c2 	beq.w	10012086 <_vfprintf_r+0x87e>
10011f02:	ea53 0002 	orrs.w	r0, r3, r2
10011f06:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
10011f0a:	f040 80bb 	bne.w	10012084 <_vfprintf_r+0x87c>
10011f0e:	2d00      	cmp	r5, #0
10011f10:	f040 8523 	bne.w	1001295a <_vfprintf_r+0x1152>
10011f14:	2900      	cmp	r1, #0
10011f16:	f040 8496 	bne.w	10012846 <_vfprintf_r+0x103e>
10011f1a:	f014 0b01 	ands.w	fp, r4, #1
10011f1e:	f000 8351 	beq.w	100125c4 <_vfprintf_r+0xdbc>
10011f22:	2330      	movs	r3, #48	@ 0x30
10011f24:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10011f28:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10011f2c:	e0c2      	b.n	100120b4 <_vfprintf_r+0x8ac>
10011f2e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011f32:	f049 0410 	orr.w	r4, r9, #16
10011f36:	f014 0220 	ands.w	r2, r4, #32
10011f3a:	f000 8315 	beq.w	10012568 <_vfprintf_r+0xd60>
10011f3e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011f40:	3307      	adds	r3, #7
10011f42:	f023 0307 	bic.w	r3, r3, #7
10011f46:	4619      	mov	r1, r3
10011f48:	685a      	ldr	r2, [r3, #4]
10011f4a:	f851 3b08 	ldr.w	r3, [r1], #8
10011f4e:	910d      	str	r1, [sp, #52]	@ 0x34
10011f50:	2101      	movs	r1, #1
10011f52:	e7cf      	b.n	10011ef4 <_vfprintf_r+0x6ec>
10011f54:	7823      	ldrb	r3, [r4, #0]
10011f56:	f049 0908 	orr.w	r9, r9, #8
10011f5a:	e4cd      	b.n	100118f8 <_vfprintf_r+0xf0>
10011f5c:	f049 0910 	orr.w	r9, r9, #16
10011f60:	f019 0f20 	tst.w	r9, #32
10011f64:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011f68:	f47f af35 	bne.w	10011dd6 <_vfprintf_r+0x5ce>
10011f6c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10011f6e:	f019 0f10 	tst.w	r9, #16
10011f72:	f852 3b04 	ldr.w	r3, [r2], #4
10011f76:	920d      	str	r2, [sp, #52]	@ 0x34
10011f78:	f040 8359 	bne.w	1001262e <_vfprintf_r+0xe26>
10011f7c:	f019 0f40 	tst.w	r9, #64	@ 0x40
10011f80:	f000 8351 	beq.w	10012626 <_vfprintf_r+0xe1e>
10011f84:	f343 32c0 	sbfx	r2, r3, #15, #1
10011f88:	4611      	mov	r1, r2
10011f8a:	b21b      	sxth	r3, r3
10011f8c:	e72d      	b.n	10011dea <_vfprintf_r+0x5e2>
10011f8e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10011f90:	940f      	str	r4, [sp, #60]	@ 0x3c
10011f92:	f852 3b04 	ldr.w	r3, [r2], #4
10011f96:	920d      	str	r2, [sp, #52]	@ 0x34
10011f98:	f647 0230 	movw	r2, #30768	@ 0x7830
10011f9c:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
10011fa0:	2078      	movs	r0, #120	@ 0x78
10011fa2:	4ab1      	ldr	r2, [pc, #708]	@ (10012268 <_vfprintf_r+0xa60>)
10011fa4:	921a      	str	r2, [sp, #104]	@ 0x68
10011fa6:	f049 0402 	orr.w	r4, r9, #2
10011faa:	2200      	movs	r2, #0
10011fac:	2102      	movs	r1, #2
10011fae:	900e      	str	r0, [sp, #56]	@ 0x38
10011fb0:	e7a0      	b.n	10011ef4 <_vfprintf_r+0x6ec>
10011fb2:	f019 0f20 	tst.w	r9, #32
10011fb6:	940f      	str	r4, [sp, #60]	@ 0x3c
10011fb8:	f000 8359 	beq.w	1001266e <_vfprintf_r+0xe66>
10011fbc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011fbe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10011fc0:	681b      	ldr	r3, [r3, #0]
10011fc2:	601a      	str	r2, [r3, #0]
10011fc4:	17d2      	asrs	r2, r2, #31
10011fc6:	605a      	str	r2, [r3, #4]
10011fc8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011fca:	3304      	adds	r3, #4
10011fcc:	930d      	str	r3, [sp, #52]	@ 0x34
10011fce:	e610      	b.n	10011bf2 <_vfprintf_r+0x3ea>
10011fd0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011fd2:	2b65      	cmp	r3, #101	@ 0x65
10011fd4:	f340 814e 	ble.w	10012274 <_vfprintf_r+0xa6c>
10011fd8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10011fdc:	2200      	movs	r2, #0
10011fde:	2300      	movs	r3, #0
10011fe0:	f007 ff3c 	bl	10019e5c <__aeabi_dcmpeq>
10011fe4:	2800      	cmp	r0, #0
10011fe6:	f000 81ee 	beq.w	100123c6 <_vfprintf_r+0xbbe>
10011fea:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011fec:	4a9f      	ldr	r2, [pc, #636]	@ (1001226c <_vfprintf_r+0xa64>)
10011fee:	f8c8 2000 	str.w	r2, [r8]
10011ff2:	3301      	adds	r3, #1
10011ff4:	3401      	adds	r4, #1
10011ff6:	2201      	movs	r2, #1
10011ff8:	2b07      	cmp	r3, #7
10011ffa:	9434      	str	r4, [sp, #208]	@ 0xd0
10011ffc:	9333      	str	r3, [sp, #204]	@ 0xcc
10011ffe:	f8c8 2004 	str.w	r2, [r8, #4]
10012002:	f300 84af 	bgt.w	10012964 <_vfprintf_r+0x115c>
10012006:	f108 0808 	add.w	r8, r8, #8
1001200a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001200c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001200e:	4293      	cmp	r3, r2
10012010:	f280 82cf 	bge.w	100125b2 <_vfprintf_r+0xdaa>
10012014:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012016:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10012018:	441c      	add	r4, r3
1001201a:	e9c8 2300 	strd	r2, r3, [r8]
1001201e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012020:	9434      	str	r4, [sp, #208]	@ 0xd0
10012022:	3301      	adds	r3, #1
10012024:	2b07      	cmp	r3, #7
10012026:	9333      	str	r3, [sp, #204]	@ 0xcc
10012028:	f300 83cb 	bgt.w	100127c2 <_vfprintf_r+0xfba>
1001202c:	f108 0808 	add.w	r8, r8, #8
10012030:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012032:	1e5d      	subs	r5, r3, #1
10012034:	2d00      	cmp	r5, #0
10012036:	f77f adbe 	ble.w	10011bb6 <_vfprintf_r+0x3ae>
1001203a:	2d10      	cmp	r5, #16
1001203c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001203e:	f340 84f9 	ble.w	10012a34 <_vfprintf_r+0x122c>
10012042:	4f8b      	ldr	r7, [pc, #556]	@ (10012270 <_vfprintf_r+0xa68>)
10012044:	9715      	str	r7, [sp, #84]	@ 0x54
10012046:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
1001204a:	2610      	movs	r6, #16
1001204c:	e005      	b.n	1001205a <_vfprintf_r+0x852>
1001204e:	f108 0808 	add.w	r8, r8, #8
10012052:	3d10      	subs	r5, #16
10012054:	2d10      	cmp	r5, #16
10012056:	f340 84ef 	ble.w	10012a38 <_vfprintf_r+0x1230>
1001205a:	3301      	adds	r3, #1
1001205c:	3410      	adds	r4, #16
1001205e:	2b07      	cmp	r3, #7
10012060:	e9c8 7600 	strd	r7, r6, [r8]
10012064:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012068:	ddf1      	ble.n	1001204e <_vfprintf_r+0x846>
1001206a:	aa32      	add	r2, sp, #200	@ 0xc8
1001206c:	4651      	mov	r1, sl
1001206e:	4658      	mov	r0, fp
10012070:	f001 fa6e 	bl	10013550 <__sprint_r>
10012074:	2800      	cmp	r0, #0
10012076:	f47f ad1f 	bne.w	10011ab8 <_vfprintf_r+0x2b0>
1001207a:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001207e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012082:	e7e6      	b.n	10012052 <_vfprintf_r+0x84a>
10012084:	464c      	mov	r4, r9
10012086:	2901      	cmp	r1, #1
10012088:	f000 813b 	beq.w	10012302 <_vfprintf_r+0xafa>
1001208c:	2902      	cmp	r1, #2
1001208e:	ad5e      	add	r5, sp, #376	@ 0x178
10012090:	d11e      	bne.n	100120d0 <_vfprintf_r+0x8c8>
10012092:	981a      	ldr	r0, [sp, #104]	@ 0x68
10012094:	f003 010f 	and.w	r1, r3, #15
10012098:	091b      	lsrs	r3, r3, #4
1001209a:	5c41      	ldrb	r1, [r0, r1]
1001209c:	f805 1d01 	strb.w	r1, [r5, #-1]!
100120a0:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
100120a4:	0912      	lsrs	r2, r2, #4
100120a6:	ea53 0102 	orrs.w	r1, r3, r2
100120aa:	d1f3      	bne.n	10012094 <_vfprintf_r+0x88c>
100120ac:	ab5e      	add	r3, sp, #376	@ 0x178
100120ae:	46a1      	mov	r9, r4
100120b0:	eba3 0b05 	sub.w	fp, r3, r5
100120b4:	9909      	ldr	r1, [sp, #36]	@ 0x24
100120b6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100120ba:	4559      	cmp	r1, fp
100120bc:	f04f 0300 	mov.w	r3, #0
100120c0:	bfb8      	it	lt
100120c2:	4659      	movlt	r1, fp
100120c4:	930c      	str	r3, [sp, #48]	@ 0x30
100120c6:	9106      	str	r1, [sp, #24]
100120c8:	9314      	str	r3, [sp, #80]	@ 0x50
100120ca:	9310      	str	r3, [sp, #64]	@ 0x40
100120cc:	9312      	str	r3, [sp, #72]	@ 0x48
100120ce:	e5d6      	b.n	10011c7e <_vfprintf_r+0x476>
100120d0:	f003 0107 	and.w	r1, r3, #7
100120d4:	08db      	lsrs	r3, r3, #3
100120d6:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
100120da:	08d2      	lsrs	r2, r2, #3
100120dc:	3130      	adds	r1, #48	@ 0x30
100120de:	ea53 0602 	orrs.w	r6, r3, r2
100120e2:	4628      	mov	r0, r5
100120e4:	f805 1d01 	strb.w	r1, [r5, #-1]!
100120e8:	d1f2      	bne.n	100120d0 <_vfprintf_r+0x8c8>
100120ea:	07e6      	lsls	r6, r4, #31
100120ec:	d5de      	bpl.n	100120ac <_vfprintf_r+0x8a4>
100120ee:	2930      	cmp	r1, #48	@ 0x30
100120f0:	d0dc      	beq.n	100120ac <_vfprintf_r+0x8a4>
100120f2:	2330      	movs	r3, #48	@ 0x30
100120f4:	3802      	subs	r0, #2
100120f6:	f805 3c01 	strb.w	r3, [r5, #-1]
100120fa:	ab5e      	add	r3, sp, #376	@ 0x178
100120fc:	46a1      	mov	r9, r4
100120fe:	eba3 0b00 	sub.w	fp, r3, r0
10012102:	4605      	mov	r5, r0
10012104:	e7d6      	b.n	100120b4 <_vfprintf_r+0x8ac>
10012106:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10012108:	9a06      	ldr	r2, [sp, #24]
1001210a:	1a9e      	subs	r6, r3, r2
1001210c:	2e00      	cmp	r6, #0
1001210e:	f77f ad3a 	ble.w	10011b86 <_vfprintf_r+0x37e>
10012112:	2e10      	cmp	r6, #16
10012114:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012116:	f341 80ab 	ble.w	10013270 <_vfprintf_r+0x1a68>
1001211a:	4855      	ldr	r0, [pc, #340]	@ (10012270 <_vfprintf_r+0xa68>)
1001211c:	f8dd a020 	ldr.w	sl, [sp, #32]
10012120:	9015      	str	r0, [sp, #84]	@ 0x54
10012122:	4621      	mov	r1, r4
10012124:	2710      	movs	r7, #16
10012126:	461a      	mov	r2, r3
10012128:	4604      	mov	r4, r0
1001212a:	e004      	b.n	10012136 <_vfprintf_r+0x92e>
1001212c:	3e10      	subs	r6, #16
1001212e:	2e10      	cmp	r6, #16
10012130:	f108 0808 	add.w	r8, r8, #8
10012134:	dd16      	ble.n	10012164 <_vfprintf_r+0x95c>
10012136:	3201      	adds	r2, #1
10012138:	3110      	adds	r1, #16
1001213a:	2a07      	cmp	r2, #7
1001213c:	e9c8 4700 	strd	r4, r7, [r8]
10012140:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10012144:	ddf2      	ble.n	1001212c <_vfprintf_r+0x924>
10012146:	9907      	ldr	r1, [sp, #28]
10012148:	aa32      	add	r2, sp, #200	@ 0xc8
1001214a:	4650      	mov	r0, sl
1001214c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012150:	f001 f9fe 	bl	10013550 <__sprint_r>
10012154:	2800      	cmp	r0, #0
10012156:	f040 83f8 	bne.w	1001294a <_vfprintf_r+0x1142>
1001215a:	3e10      	subs	r6, #16
1001215c:	2e10      	cmp	r6, #16
1001215e:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10012162:	dce8      	bgt.n	10012136 <_vfprintf_r+0x92e>
10012164:	460c      	mov	r4, r1
10012166:	4613      	mov	r3, r2
10012168:	3301      	adds	r3, #1
1001216a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001216c:	f8c8 2000 	str.w	r2, [r8]
10012170:	4434      	add	r4, r6
10012172:	2b07      	cmp	r3, #7
10012174:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012178:	f8c8 6004 	str.w	r6, [r8, #4]
1001217c:	f300 8314 	bgt.w	100127a8 <_vfprintf_r+0xfa0>
10012180:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012182:	eba3 060b 	sub.w	r6, r3, fp
10012186:	2e00      	cmp	r6, #0
10012188:	f108 0808 	add.w	r8, r8, #8
1001218c:	f77f ad01 	ble.w	10011b92 <_vfprintf_r+0x38a>
10012190:	4a37      	ldr	r2, [pc, #220]	@ (10012270 <_vfprintf_r+0xa68>)
10012192:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012194:	9215      	str	r2, [sp, #84]	@ 0x54
10012196:	2e10      	cmp	r6, #16
10012198:	dd23      	ble.n	100121e2 <_vfprintf_r+0x9da>
1001219a:	4622      	mov	r2, r4
1001219c:	f04f 0a10 	mov.w	sl, #16
100121a0:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
100121a4:	e004      	b.n	100121b0 <_vfprintf_r+0x9a8>
100121a6:	3e10      	subs	r6, #16
100121a8:	2e10      	cmp	r6, #16
100121aa:	f108 0808 	add.w	r8, r8, #8
100121ae:	dd17      	ble.n	100121e0 <_vfprintf_r+0x9d8>
100121b0:	3301      	adds	r3, #1
100121b2:	492f      	ldr	r1, [pc, #188]	@ (10012270 <_vfprintf_r+0xa68>)
100121b4:	3210      	adds	r2, #16
100121b6:	2b07      	cmp	r3, #7
100121b8:	e9c8 1a00 	strd	r1, sl, [r8]
100121bc:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
100121c0:	ddf1      	ble.n	100121a6 <_vfprintf_r+0x99e>
100121c2:	aa32      	add	r2, sp, #200	@ 0xc8
100121c4:	4621      	mov	r1, r4
100121c6:	4638      	mov	r0, r7
100121c8:	f001 f9c2 	bl	10013550 <__sprint_r>
100121cc:	2800      	cmp	r0, #0
100121ce:	f47f ac72 	bne.w	10011ab6 <_vfprintf_r+0x2ae>
100121d2:	3e10      	subs	r6, #16
100121d4:	2e10      	cmp	r6, #16
100121d6:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
100121da:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100121de:	dce7      	bgt.n	100121b0 <_vfprintf_r+0x9a8>
100121e0:	4614      	mov	r4, r2
100121e2:	3301      	adds	r3, #1
100121e4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100121e6:	f8c8 2000 	str.w	r2, [r8]
100121ea:	4434      	add	r4, r6
100121ec:	2b07      	cmp	r3, #7
100121ee:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100121f2:	f8c8 6004 	str.w	r6, [r8, #4]
100121f6:	f300 81aa 	bgt.w	1001254e <_vfprintf_r+0xd46>
100121fa:	f108 0808 	add.w	r8, r8, #8
100121fe:	e4c8      	b.n	10011b92 <_vfprintf_r+0x38a>
10012200:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012204:	aa32      	add	r2, sp, #200	@ 0xc8
10012206:	f001 f9a3 	bl	10013550 <__sprint_r>
1001220a:	2800      	cmp	r0, #0
1001220c:	f43f ace7 	beq.w	10011bde <_vfprintf_r+0x3d6>
10012210:	f8dd b020 	ldr.w	fp, [sp, #32]
10012214:	e450      	b.n	10011ab8 <_vfprintf_r+0x2b0>
10012216:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012218:	9919      	ldr	r1, [sp, #100]	@ 0x64
1001221a:	441c      	add	r4, r3
1001221c:	e9c8 1300 	strd	r1, r3, [r8]
10012220:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012222:	9434      	str	r4, [sp, #208]	@ 0xd0
10012224:	3301      	adds	r3, #1
10012226:	2b07      	cmp	r3, #7
10012228:	9333      	str	r3, [sp, #204]	@ 0xcc
1001222a:	f300 85bd 	bgt.w	10012da8 <_vfprintf_r+0x15a0>
1001222e:	f108 0808 	add.w	r8, r8, #8
10012232:	2a00      	cmp	r2, #0
10012234:	f2c0 87ac 	blt.w	10013190 <_vfprintf_r+0x1988>
10012238:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001223a:	f8c8 5000 	str.w	r5, [r8]
1001223e:	3301      	adds	r3, #1
10012240:	4414      	add	r4, r2
10012242:	2b07      	cmp	r3, #7
10012244:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012248:	f8c8 2004 	str.w	r2, [r8, #4]
1001224c:	f77f acb1 	ble.w	10011bb2 <_vfprintf_r+0x3aa>
10012250:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012254:	aa32      	add	r2, sp, #200	@ 0xc8
10012256:	f001 f97b 	bl	10013550 <__sprint_r>
1001225a:	2800      	cmp	r0, #0
1001225c:	d1d8      	bne.n	10012210 <_vfprintf_r+0xa08>
1001225e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012260:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012264:	e4a7      	b.n	10011bb6 <_vfprintf_r+0x3ae>
10012266:	bf00      	nop
10012268:	1001c52c 	.word	0x1001c52c
1001226c:	1001c55c 	.word	0x1001c55c
10012270:	1001c560 	.word	0x1001c560
10012274:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012276:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10012278:	2b01      	cmp	r3, #1
1001227a:	f104 0401 	add.w	r4, r4, #1
1001227e:	f106 0601 	add.w	r6, r6, #1
10012282:	f108 0708 	add.w	r7, r8, #8
10012286:	f340 811d 	ble.w	100124c4 <_vfprintf_r+0xcbc>
1001228a:	2301      	movs	r3, #1
1001228c:	2e07      	cmp	r6, #7
1001228e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10012292:	f8c8 5000 	str.w	r5, [r8]
10012296:	f8c8 3004 	str.w	r3, [r8, #4]
1001229a:	f300 82e4 	bgt.w	10012866 <_vfprintf_r+0x105e>
1001229e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100122a0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
100122a2:	3601      	adds	r6, #1
100122a4:	441c      	add	r4, r3
100122a6:	2e07      	cmp	r6, #7
100122a8:	e9c7 2300 	strd	r2, r3, [r7]
100122ac:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100122b0:	f300 82cd 	bgt.w	1001284e <_vfprintf_r+0x1046>
100122b4:	3708      	adds	r7, #8
100122b6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100122b8:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100122bc:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
100122c0:	2200      	movs	r2, #0
100122c2:	2300      	movs	r3, #0
100122c4:	f007 fdca 	bl	10019e5c <__aeabi_dcmpeq>
100122c8:	2800      	cmp	r0, #0
100122ca:	f040 8115 	bne.w	100124f8 <_vfprintf_r+0xcf0>
100122ce:	3601      	adds	r6, #1
100122d0:	3501      	adds	r5, #1
100122d2:	4444      	add	r4, r8
100122d4:	2e07      	cmp	r6, #7
100122d6:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100122da:	603d      	str	r5, [r7, #0]
100122dc:	f8c7 8004 	str.w	r8, [r7, #4]
100122e0:	f300 80fe 	bgt.w	100124e0 <_vfprintf_r+0xcd8>
100122e4:	3708      	adds	r7, #8
100122e6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100122e8:	607b      	str	r3, [r7, #4]
100122ea:	3601      	adds	r6, #1
100122ec:	441c      	add	r4, r3
100122ee:	2e07      	cmp	r6, #7
100122f0:	ab2c      	add	r3, sp, #176	@ 0xb0
100122f2:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100122f6:	603b      	str	r3, [r7, #0]
100122f8:	dcaa      	bgt.n	10012250 <_vfprintf_r+0xa48>
100122fa:	f107 0808 	add.w	r8, r7, #8
100122fe:	e45a      	b.n	10011bb6 <_vfprintf_r+0x3ae>
10012300:	464c      	mov	r4, r9
10012302:	2b0a      	cmp	r3, #10
10012304:	f172 0100 	sbcs.w	r1, r2, #0
10012308:	f080 82b9 	bcs.w	1001287e <_vfprintf_r+0x1076>
1001230c:	3330      	adds	r3, #48	@ 0x30
1001230e:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10012312:	46a1      	mov	r9, r4
10012314:	f04f 0b01 	mov.w	fp, #1
10012318:	f20d 1577 	addw	r5, sp, #375	@ 0x177
1001231c:	e6ca      	b.n	100120b4 <_vfprintf_r+0x8ac>
1001231e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012322:	aa32      	add	r2, sp, #200	@ 0xc8
10012324:	9315      	str	r3, [sp, #84]	@ 0x54
10012326:	f001 f913 	bl	10013550 <__sprint_r>
1001232a:	2800      	cmp	r0, #0
1001232c:	f47f af70 	bne.w	10012210 <_vfprintf_r+0xa08>
10012330:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012332:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10012334:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012338:	e410      	b.n	10011b5c <_vfprintf_r+0x354>
1001233a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001233e:	aa32      	add	r2, sp, #200	@ 0xc8
10012340:	f001 f906 	bl	10013550 <__sprint_r>
10012344:	2800      	cmp	r0, #0
10012346:	f47f af63 	bne.w	10012210 <_vfprintf_r+0xa08>
1001234a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001234c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012350:	e416      	b.n	10011b80 <_vfprintf_r+0x378>
10012352:	2d10      	cmp	r5, #16
10012354:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012356:	f340 8750 	ble.w	100131fa <_vfprintf_r+0x19f2>
1001235a:	4fbb      	ldr	r7, [pc, #748]	@ (10012648 <_vfprintf_r+0xe40>)
1001235c:	9715      	str	r7, [sp, #84]	@ 0x54
1001235e:	e9dd a907 	ldrd	sl, r9, [sp, #28]
10012362:	2610      	movs	r6, #16
10012364:	e004      	b.n	10012370 <_vfprintf_r+0xb68>
10012366:	3d10      	subs	r5, #16
10012368:	2d10      	cmp	r5, #16
1001236a:	f108 0808 	add.w	r8, r8, #8
1001236e:	dd16      	ble.n	1001239e <_vfprintf_r+0xb96>
10012370:	3301      	adds	r3, #1
10012372:	3410      	adds	r4, #16
10012374:	2b07      	cmp	r3, #7
10012376:	e9c8 7600 	strd	r7, r6, [r8]
1001237a:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001237e:	ddf2      	ble.n	10012366 <_vfprintf_r+0xb5e>
10012380:	aa32      	add	r2, sp, #200	@ 0xc8
10012382:	4651      	mov	r1, sl
10012384:	4648      	mov	r0, r9
10012386:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001238a:	f001 f8e1 	bl	10013550 <__sprint_r>
1001238e:	2800      	cmp	r0, #0
10012390:	f040 82f5 	bne.w	1001297e <_vfprintf_r+0x1176>
10012394:	3d10      	subs	r5, #16
10012396:	2d10      	cmp	r5, #16
10012398:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001239c:	dce8      	bgt.n	10012370 <_vfprintf_r+0xb68>
1001239e:	3301      	adds	r3, #1
100123a0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100123a2:	442c      	add	r4, r5
100123a4:	2b07      	cmp	r3, #7
100123a6:	e9c8 2500 	strd	r2, r5, [r8]
100123aa:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100123ae:	f77f ac0b 	ble.w	10011bc8 <_vfprintf_r+0x3c0>
100123b2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100123b6:	aa32      	add	r2, sp, #200	@ 0xc8
100123b8:	f001 f8ca 	bl	10013550 <__sprint_r>
100123bc:	2800      	cmp	r0, #0
100123be:	f47f af27 	bne.w	10012210 <_vfprintf_r+0xa08>
100123c2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100123c4:	e400      	b.n	10011bc8 <_vfprintf_r+0x3c0>
100123c6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100123c8:	2a00      	cmp	r2, #0
100123ca:	f340 80fd 	ble.w	100125c8 <_vfprintf_r+0xdc0>
100123ce:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
100123d2:	429f      	cmp	r7, r3
100123d4:	bfa8      	it	ge
100123d6:	461f      	movge	r7, r3
100123d8:	2f00      	cmp	r7, #0
100123da:	eb05 0b03 	add.w	fp, r5, r3
100123de:	dd0b      	ble.n	100123f8 <_vfprintf_r+0xbf0>
100123e0:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100123e2:	3301      	adds	r3, #1
100123e4:	443c      	add	r4, r7
100123e6:	2b07      	cmp	r3, #7
100123e8:	e9c8 5700 	strd	r5, r7, [r8]
100123ec:	9434      	str	r4, [sp, #208]	@ 0xd0
100123ee:	9333      	str	r3, [sp, #204]	@ 0xcc
100123f0:	f300 866d 	bgt.w	100130ce <_vfprintf_r+0x18c6>
100123f4:	f108 0808 	add.w	r8, r8, #8
100123f8:	9e12      	ldr	r6, [sp, #72]	@ 0x48
100123fa:	2f00      	cmp	r7, #0
100123fc:	bfa8      	it	ge
100123fe:	1bf6      	subge	r6, r6, r7
10012400:	2e00      	cmp	r6, #0
10012402:	f300 8345 	bgt.w	10012a90 <_vfprintf_r+0x1288>
10012406:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10012408:	f419 6f80 	tst.w	r9, #1024	@ 0x400
1001240c:	442b      	add	r3, r5
1001240e:	469a      	mov	sl, r3
10012410:	f040 8578 	bne.w	10012f04 <_vfprintf_r+0x16fc>
10012414:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10012416:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012418:	429d      	cmp	r5, r3
1001241a:	db03      	blt.n	10012424 <_vfprintf_r+0xc1c>
1001241c:	f019 0f01 	tst.w	r9, #1
10012420:	f000 8402 	beq.w	10012c28 <_vfprintf_r+0x1420>
10012424:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012426:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10012428:	441c      	add	r4, r3
1001242a:	e9c8 2300 	strd	r2, r3, [r8]
1001242e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012430:	9434      	str	r4, [sp, #208]	@ 0xd0
10012432:	3301      	adds	r3, #1
10012434:	2b07      	cmp	r3, #7
10012436:	9333      	str	r3, [sp, #204]	@ 0xcc
10012438:	f300 8658 	bgt.w	100130ec <_vfprintf_r+0x18e4>
1001243c:	f108 0808 	add.w	r8, r8, #8
10012440:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012442:	ebab 060a 	sub.w	r6, fp, sl
10012446:	1b5d      	subs	r5, r3, r5
10012448:	42ae      	cmp	r6, r5
1001244a:	bfa8      	it	ge
1001244c:	462e      	movge	r6, r5
1001244e:	2e00      	cmp	r6, #0
10012450:	dd0d      	ble.n	1001246e <_vfprintf_r+0xc66>
10012452:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012454:	f8c8 a000 	str.w	sl, [r8]
10012458:	3301      	adds	r3, #1
1001245a:	4434      	add	r4, r6
1001245c:	2b07      	cmp	r3, #7
1001245e:	f8c8 6004 	str.w	r6, [r8, #4]
10012462:	9434      	str	r4, [sp, #208]	@ 0xd0
10012464:	9333      	str	r3, [sp, #204]	@ 0xcc
10012466:	f300 8653 	bgt.w	10013110 <_vfprintf_r+0x1908>
1001246a:	f108 0808 	add.w	r8, r8, #8
1001246e:	2e00      	cmp	r6, #0
10012470:	bfa8      	it	ge
10012472:	1bad      	subge	r5, r5, r6
10012474:	2d00      	cmp	r5, #0
10012476:	f77f ab9e 	ble.w	10011bb6 <_vfprintf_r+0x3ae>
1001247a:	2d10      	cmp	r5, #16
1001247c:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001247e:	f340 82d9 	ble.w	10012a34 <_vfprintf_r+0x122c>
10012482:	4f72      	ldr	r7, [pc, #456]	@ (1001264c <_vfprintf_r+0xe44>)
10012484:	9715      	str	r7, [sp, #84]	@ 0x54
10012486:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
1001248a:	2610      	movs	r6, #16
1001248c:	e005      	b.n	1001249a <_vfprintf_r+0xc92>
1001248e:	f108 0808 	add.w	r8, r8, #8
10012492:	3d10      	subs	r5, #16
10012494:	2d10      	cmp	r5, #16
10012496:	f340 82cf 	ble.w	10012a38 <_vfprintf_r+0x1230>
1001249a:	3301      	adds	r3, #1
1001249c:	3410      	adds	r4, #16
1001249e:	2b07      	cmp	r3, #7
100124a0:	e9c8 7600 	strd	r7, r6, [r8]
100124a4:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100124a8:	ddf1      	ble.n	1001248e <_vfprintf_r+0xc86>
100124aa:	aa32      	add	r2, sp, #200	@ 0xc8
100124ac:	4651      	mov	r1, sl
100124ae:	4658      	mov	r0, fp
100124b0:	f001 f84e 	bl	10013550 <__sprint_r>
100124b4:	2800      	cmp	r0, #0
100124b6:	f47f aaff 	bne.w	10011ab8 <_vfprintf_r+0x2b0>
100124ba:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100124be:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100124c2:	e7e6      	b.n	10012492 <_vfprintf_r+0xc8a>
100124c4:	f019 0f01 	tst.w	r9, #1
100124c8:	f47f aedf 	bne.w	1001228a <_vfprintf_r+0xa82>
100124cc:	2301      	movs	r3, #1
100124ce:	2e07      	cmp	r6, #7
100124d0:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100124d4:	f8c8 5000 	str.w	r5, [r8]
100124d8:	f8c8 3004 	str.w	r3, [r8, #4]
100124dc:	f77f af03 	ble.w	100122e6 <_vfprintf_r+0xade>
100124e0:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100124e4:	aa32      	add	r2, sp, #200	@ 0xc8
100124e6:	f001 f833 	bl	10013550 <__sprint_r>
100124ea:	2800      	cmp	r0, #0
100124ec:	f47f ae90 	bne.w	10012210 <_vfprintf_r+0xa08>
100124f0:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
100124f4:	af35      	add	r7, sp, #212	@ 0xd4
100124f6:	e6f6      	b.n	100122e6 <_vfprintf_r+0xade>
100124f8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100124fa:	2b01      	cmp	r3, #1
100124fc:	f77f aef3 	ble.w	100122e6 <_vfprintf_r+0xade>
10012500:	2b11      	cmp	r3, #17
10012502:	4b52      	ldr	r3, [pc, #328]	@ (1001264c <_vfprintf_r+0xe44>)
10012504:	9315      	str	r3, [sp, #84]	@ 0x54
10012506:	f340 82b7 	ble.w	10012a78 <_vfprintf_r+0x1270>
1001250a:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
1001250e:	e9dd ba07 	ldrd	fp, sl, [sp, #28]
10012512:	2510      	movs	r5, #16
10012514:	4699      	mov	r9, r3
10012516:	e006      	b.n	10012526 <_vfprintf_r+0xd1e>
10012518:	3708      	adds	r7, #8
1001251a:	f1a8 0810 	sub.w	r8, r8, #16
1001251e:	f1b8 0f10 	cmp.w	r8, #16
10012522:	f340 82a7 	ble.w	10012a74 <_vfprintf_r+0x126c>
10012526:	3601      	adds	r6, #1
10012528:	3410      	adds	r4, #16
1001252a:	2e07      	cmp	r6, #7
1001252c:	e9c7 9500 	strd	r9, r5, [r7]
10012530:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10012534:	ddf0      	ble.n	10012518 <_vfprintf_r+0xd10>
10012536:	aa32      	add	r2, sp, #200	@ 0xc8
10012538:	4659      	mov	r1, fp
1001253a:	4650      	mov	r0, sl
1001253c:	f001 f808 	bl	10013550 <__sprint_r>
10012540:	2800      	cmp	r0, #0
10012542:	f040 8202 	bne.w	1001294a <_vfprintf_r+0x1142>
10012546:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001254a:	af35      	add	r7, sp, #212	@ 0xd4
1001254c:	e7e5      	b.n	1001251a <_vfprintf_r+0xd12>
1001254e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012552:	aa32      	add	r2, sp, #200	@ 0xc8
10012554:	f000 fffc 	bl	10013550 <__sprint_r>
10012558:	2800      	cmp	r0, #0
1001255a:	f47f ae59 	bne.w	10012210 <_vfprintf_r+0xa08>
1001255e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012560:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012564:	f7ff bb15 	b.w	10011b92 <_vfprintf_r+0x38a>
10012568:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001256a:	f851 3b04 	ldr.w	r3, [r1], #4
1001256e:	910d      	str	r1, [sp, #52]	@ 0x34
10012570:	f014 0110 	ands.w	r1, r4, #16
10012574:	d155      	bne.n	10012622 <_vfprintf_r+0xe1a>
10012576:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
1001257a:	d04d      	beq.n	10012618 <_vfprintf_r+0xe10>
1001257c:	460a      	mov	r2, r1
1001257e:	b29b      	uxth	r3, r3
10012580:	2101      	movs	r1, #1
10012582:	e4b7      	b.n	10011ef4 <_vfprintf_r+0x6ec>
10012584:	990d      	ldr	r1, [sp, #52]	@ 0x34
10012586:	f851 3b04 	ldr.w	r3, [r1], #4
1001258a:	910d      	str	r1, [sp, #52]	@ 0x34
1001258c:	f019 0110 	ands.w	r1, r9, #16
10012590:	f47f acad 	bne.w	10011eee <_vfprintf_r+0x6e6>
10012594:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10012598:	f000 82a7 	beq.w	10012aea <_vfprintf_r+0x12e2>
1001259c:	b29b      	uxth	r3, r3
1001259e:	460a      	mov	r2, r1
100125a0:	e4a5      	b.n	10011eee <_vfprintf_r+0x6e6>
100125a2:	9d07      	ldr	r5, [sp, #28]
100125a4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
100125a6:	f002 fff3 	bl	10015590 <__retarget_lock_acquire_recursive>
100125aa:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
100125ae:	f7ff b951 	b.w	10011854 <_vfprintf_r+0x4c>
100125b2:	f019 0f01 	tst.w	r9, #1
100125b6:	f43f aafe 	beq.w	10011bb6 <_vfprintf_r+0x3ae>
100125ba:	e52b      	b.n	10012014 <_vfprintf_r+0x80c>
100125bc:	930d      	str	r3, [sp, #52]	@ 0x34
100125be:	7823      	ldrb	r3, [r4, #0]
100125c0:	f7ff b99a 	b.w	100118f8 <_vfprintf_r+0xf0>
100125c4:	ad5e      	add	r5, sp, #376	@ 0x178
100125c6:	e575      	b.n	100120b4 <_vfprintf_r+0x8ac>
100125c8:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100125ca:	4921      	ldr	r1, [pc, #132]	@ (10012650 <_vfprintf_r+0xe48>)
100125cc:	f8c8 1000 	str.w	r1, [r8]
100125d0:	3301      	adds	r3, #1
100125d2:	3401      	adds	r4, #1
100125d4:	2101      	movs	r1, #1
100125d6:	2b07      	cmp	r3, #7
100125d8:	9434      	str	r4, [sp, #208]	@ 0xd0
100125da:	9333      	str	r3, [sp, #204]	@ 0xcc
100125dc:	f8c8 1004 	str.w	r1, [r8, #4]
100125e0:	f300 854f 	bgt.w	10013082 <_vfprintf_r+0x187a>
100125e4:	f108 0808 	add.w	r8, r8, #8
100125e8:	2a00      	cmp	r2, #0
100125ea:	f47f ae14 	bne.w	10012216 <_vfprintf_r+0xa0e>
100125ee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100125f0:	f009 0301 	and.w	r3, r9, #1
100125f4:	4313      	orrs	r3, r2
100125f6:	f43f aade 	beq.w	10011bb6 <_vfprintf_r+0x3ae>
100125fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100125fc:	9a19      	ldr	r2, [sp, #100]	@ 0x64
100125fe:	441c      	add	r4, r3
10012600:	e9c8 2300 	strd	r2, r3, [r8]
10012604:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012606:	9434      	str	r4, [sp, #208]	@ 0xd0
10012608:	3301      	adds	r3, #1
1001260a:	2b07      	cmp	r3, #7
1001260c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001260e:	f300 83cb 	bgt.w	10012da8 <_vfprintf_r+0x15a0>
10012612:	f108 0808 	add.w	r8, r8, #8
10012616:	e60f      	b.n	10012238 <_vfprintf_r+0xa30>
10012618:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
1001261c:	bf1c      	itt	ne
1001261e:	b2db      	uxtbne	r3, r3
10012620:	4602      	movne	r2, r0
10012622:	2101      	movs	r1, #1
10012624:	e466      	b.n	10011ef4 <_vfprintf_r+0x6ec>
10012626:	f419 7f00 	tst.w	r9, #512	@ 0x200
1001262a:	f040 8305 	bne.w	10012c38 <_vfprintf_r+0x1430>
1001262e:	17da      	asrs	r2, r3, #31
10012630:	4611      	mov	r1, r2
10012632:	2900      	cmp	r1, #0
10012634:	f6bf abdc 	bge.w	10011df0 <_vfprintf_r+0x5e8>
10012638:	425b      	negs	r3, r3
1001263a:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
1001263e:	464c      	mov	r4, r9
10012640:	202d      	movs	r0, #45	@ 0x2d
10012642:	2101      	movs	r1, #1
10012644:	e457      	b.n	10011ef6 <_vfprintf_r+0x6ee>
10012646:	bf00      	nop
10012648:	1001c570 	.word	0x1001c570
1001264c:	1001c560 	.word	0x1001c560
10012650:	1001c55c 	.word	0x1001c55c
10012654:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
10012656:	7823      	ldrb	r3, [r4, #0]
10012658:	2a00      	cmp	r2, #0
1001265a:	f43f a94d 	beq.w	100118f8 <_vfprintf_r+0xf0>
1001265e:	7812      	ldrb	r2, [r2, #0]
10012660:	2a00      	cmp	r2, #0
10012662:	f43f a949 	beq.w	100118f8 <_vfprintf_r+0xf0>
10012666:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
1001266a:	f7ff b945 	b.w	100118f8 <_vfprintf_r+0xf0>
1001266e:	f019 0f10 	tst.w	r9, #16
10012672:	f040 81f9 	bne.w	10012a68 <_vfprintf_r+0x1260>
10012676:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001267a:	f040 82e3 	bne.w	10012c44 <_vfprintf_r+0x143c>
1001267e:	f419 7f00 	tst.w	r9, #512	@ 0x200
10012682:	f000 81f1 	beq.w	10012a68 <_vfprintf_r+0x1260>
10012686:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012688:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001268a:	681b      	ldr	r3, [r3, #0]
1001268c:	701a      	strb	r2, [r3, #0]
1001268e:	e49b      	b.n	10011fc8 <_vfprintf_r+0x7c0>
10012690:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10012694:	4602      	mov	r2, r0
10012696:	460b      	mov	r3, r1
10012698:	f007 fc12 	bl	10019ec0 <__aeabi_dcmpun>
1001269c:	2800      	cmp	r0, #0
1001269e:	f040 8636 	bne.w	1001330e <_vfprintf_r+0x1b06>
100126a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100126a4:	2b61      	cmp	r3, #97	@ 0x61
100126a6:	f000 851f 	beq.w	100130e8 <_vfprintf_r+0x18e0>
100126aa:	2b41      	cmp	r3, #65	@ 0x41
100126ac:	f000 82e1 	beq.w	10012c72 <_vfprintf_r+0x146a>
100126b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100126b2:	3301      	adds	r3, #1
100126b4:	f000 8615 	beq.w	100132e2 <_vfprintf_r+0x1ada>
100126b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100126ba:	f023 0320 	bic.w	r3, r3, #32
100126be:	2b47      	cmp	r3, #71	@ 0x47
100126c0:	d104      	bne.n	100126cc <_vfprintf_r+0xec4>
100126c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100126c4:	2b00      	cmp	r3, #0
100126c6:	bf08      	it	eq
100126c8:	2301      	moveq	r3, #1
100126ca:	9309      	str	r3, [sp, #36]	@ 0x24
100126cc:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100126d0:	f449 7280 	orr.w	r2, r9, #256	@ 0x100
100126d4:	2900      	cmp	r1, #0
100126d6:	9215      	str	r2, [sp, #84]	@ 0x54
100126d8:	f8cd 9018 	str.w	r9, [sp, #24]
100126dc:	f04f 0300 	mov.w	r3, #0
100126e0:	f2c0 84dd 	blt.w	1001309e <_vfprintf_r+0x1896>
100126e4:	e9cd 0124 	strd	r0, r1, [sp, #144]	@ 0x90
100126e8:	931f      	str	r3, [sp, #124]	@ 0x7c
100126ea:	930c      	str	r3, [sp, #48]	@ 0x30
100126ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100126ee:	3b41      	subs	r3, #65	@ 0x41
100126f0:	2b25      	cmp	r3, #37	@ 0x25
100126f2:	f200 8201 	bhi.w	10012af8 <_vfprintf_r+0x12f0>
100126f6:	e8df f013 	tbh	[pc, r3, lsl #1]
100126fa:	0372      	.short	0x0372
100126fc:	01ff01ff 	.word	0x01ff01ff
10012700:	036b01ff 	.word	0x036b01ff
10012704:	01ff036f 	.word	0x01ff036f
10012708:	01ff01ff 	.word	0x01ff01ff
1001270c:	01ff01ff 	.word	0x01ff01ff
10012710:	01ff01ff 	.word	0x01ff01ff
10012714:	01ff01ff 	.word	0x01ff01ff
10012718:	01ff01ff 	.word	0x01ff01ff
1001271c:	01ff01ff 	.word	0x01ff01ff
10012720:	01ff01ff 	.word	0x01ff01ff
10012724:	01ff01ff 	.word	0x01ff01ff
10012728:	01ff01ff 	.word	0x01ff01ff
1001272c:	01ff01ff 	.word	0x01ff01ff
10012730:	01ff01ff 	.word	0x01ff01ff
10012734:	01ff01ff 	.word	0x01ff01ff
10012738:	01ff01ff 	.word	0x01ff01ff
1001273c:	01ff01ff 	.word	0x01ff01ff
10012740:	036b01ff 	.word	0x036b01ff
10012744:	036f      	.short	0x036f
10012746:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001274a:	4bc2      	ldr	r3, [pc, #776]	@ (10012a54 <_vfprintf_r+0x124c>)
1001274c:	931a      	str	r3, [sp, #104]	@ 0x68
1001274e:	f019 0220 	ands.w	r2, r9, #32
10012752:	d06a      	beq.n	1001282a <_vfprintf_r+0x1022>
10012754:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012756:	3307      	adds	r3, #7
10012758:	f023 0307 	bic.w	r3, r3, #7
1001275c:	4619      	mov	r1, r3
1001275e:	685a      	ldr	r2, [r3, #4]
10012760:	f851 3b08 	ldr.w	r3, [r1], #8
10012764:	910d      	str	r1, [sp, #52]	@ 0x34
10012766:	f019 0f01 	tst.w	r9, #1
1001276a:	d00a      	beq.n	10012782 <_vfprintf_r+0xf7a>
1001276c:	ea53 0102 	orrs.w	r1, r3, r2
10012770:	d007      	beq.n	10012782 <_vfprintf_r+0xf7a>
10012772:	990e      	ldr	r1, [sp, #56]	@ 0x38
10012774:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
10012778:	2130      	movs	r1, #48	@ 0x30
1001277a:	f049 0902 	orr.w	r9, r9, #2
1001277e:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10012782:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10012786:	2102      	movs	r1, #2
10012788:	f7ff bbb4 	b.w	10011ef4 <_vfprintf_r+0x6ec>
1001278c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10012790:	464c      	mov	r4, r9
10012792:	f7ff bbd0 	b.w	10011f36 <_vfprintf_r+0x72e>
10012796:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001279a:	f7ff bb9b 	b.w	10011ed4 <_vfprintf_r+0x6cc>
1001279e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100127a2:	4bad      	ldr	r3, [pc, #692]	@ (10012a58 <_vfprintf_r+0x1250>)
100127a4:	931a      	str	r3, [sp, #104]	@ 0x68
100127a6:	e7d2      	b.n	1001274e <_vfprintf_r+0xf46>
100127a8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100127ac:	aa32      	add	r2, sp, #200	@ 0xc8
100127ae:	f000 fecf 	bl	10013550 <__sprint_r>
100127b2:	2800      	cmp	r0, #0
100127b4:	f47f ad2c 	bne.w	10012210 <_vfprintf_r+0xa08>
100127b8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100127ba:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100127be:	f7ff b9e2 	b.w	10011b86 <_vfprintf_r+0x37e>
100127c2:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100127c6:	aa32      	add	r2, sp, #200	@ 0xc8
100127c8:	f000 fec2 	bl	10013550 <__sprint_r>
100127cc:	2800      	cmp	r0, #0
100127ce:	f47f ad1f 	bne.w	10012210 <_vfprintf_r+0xa08>
100127d2:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100127d4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100127d8:	e42a      	b.n	10012030 <_vfprintf_r+0x828>
100127da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100127dc:	950c      	str	r5, [sp, #48]	@ 0x30
100127de:	2b06      	cmp	r3, #6
100127e0:	4629      	mov	r1, r5
100127e2:	bf28      	it	cs
100127e4:	2306      	movcs	r3, #6
100127e6:	9509      	str	r5, [sp, #36]	@ 0x24
100127e8:	462a      	mov	r2, r5
100127ea:	9306      	str	r3, [sp, #24]
100127ec:	4d9b      	ldr	r5, [pc, #620]	@ (10012a5c <_vfprintf_r+0x1254>)
100127ee:	960d      	str	r6, [sp, #52]	@ 0x34
100127f0:	469b      	mov	fp, r3
100127f2:	9114      	str	r1, [sp, #80]	@ 0x50
100127f4:	9110      	str	r1, [sp, #64]	@ 0x40
100127f6:	9112      	str	r1, [sp, #72]	@ 0x48
100127f8:	f7ff ba41 	b.w	10011c7e <_vfprintf_r+0x476>
100127fc:	2208      	movs	r2, #8
100127fe:	2100      	movs	r1, #0
10012800:	a830      	add	r0, sp, #192	@ 0xc0
10012802:	f002 fdcd 	bl	100153a0 <memset>
10012806:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012808:	9808      	ldr	r0, [sp, #32]
1001280a:	681a      	ldr	r2, [r3, #0]
1001280c:	ad45      	add	r5, sp, #276	@ 0x114
1001280e:	ab30      	add	r3, sp, #192	@ 0xc0
10012810:	4629      	mov	r1, r5
10012812:	f003 f821 	bl	10015858 <_wcrtomb_r>
10012816:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1001281a:	4683      	mov	fp, r0
1001281c:	f000 8542 	beq.w	100132a4 <_vfprintf_r+0x1a9c>
10012820:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10012824:	9306      	str	r3, [sp, #24]
10012826:	f7ff ba94 	b.w	10011d52 <_vfprintf_r+0x54a>
1001282a:	990d      	ldr	r1, [sp, #52]	@ 0x34
1001282c:	f851 3b04 	ldr.w	r3, [r1], #4
10012830:	910d      	str	r1, [sp, #52]	@ 0x34
10012832:	f019 0110 	ands.w	r1, r9, #16
10012836:	d196      	bne.n	10012766 <_vfprintf_r+0xf5e>
10012838:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
1001283c:	f000 814f 	beq.w	10012ade <_vfprintf_r+0x12d6>
10012840:	b29b      	uxth	r3, r3
10012842:	460a      	mov	r2, r1
10012844:	e78f      	b.n	10012766 <_vfprintf_r+0xf5e>
10012846:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001284a:	ad5e      	add	r5, sp, #376	@ 0x178
1001284c:	e432      	b.n	100120b4 <_vfprintf_r+0x8ac>
1001284e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012852:	aa32      	add	r2, sp, #200	@ 0xc8
10012854:	f000 fe7c 	bl	10013550 <__sprint_r>
10012858:	2800      	cmp	r0, #0
1001285a:	f47f acd9 	bne.w	10012210 <_vfprintf_r+0xa08>
1001285e:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10012862:	af35      	add	r7, sp, #212	@ 0xd4
10012864:	e527      	b.n	100122b6 <_vfprintf_r+0xaae>
10012866:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001286a:	aa32      	add	r2, sp, #200	@ 0xc8
1001286c:	f000 fe70 	bl	10013550 <__sprint_r>
10012870:	2800      	cmp	r0, #0
10012872:	f47f accd 	bne.w	10012210 <_vfprintf_r+0xa08>
10012876:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
1001287a:	af35      	add	r7, sp, #212	@ 0xd4
1001287c:	e50f      	b.n	1001229e <_vfprintf_r+0xa96>
1001287e:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10012882:	2100      	movs	r1, #0
10012884:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10012888:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 10012a64 <_vfprintf_r+0x125c>
1001288c:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10012890:	9406      	str	r4, [sp, #24]
10012892:	ad5e      	add	r5, sp, #376	@ 0x178
10012894:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10012898:	2705      	movs	r7, #5
1001289a:	468c      	mov	ip, r1
1001289c:	465e      	mov	r6, fp
1001289e:	e005      	b.n	100128ac <_vfprintf_r+0x10a4>
100128a0:	2b0a      	cmp	r3, #10
100128a2:	f172 0200 	sbcs.w	r2, r2, #0
100128a6:	d333      	bcc.n	10012910 <_vfprintf_r+0x1108>
100128a8:	465b      	mov	r3, fp
100128aa:	4622      	mov	r2, r4
100128ac:	1899      	adds	r1, r3, r2
100128ae:	f141 0100 	adc.w	r1, r1, #0
100128b2:	fba9 0401 	umull	r0, r4, r9, r1
100128b6:	f024 0003 	bic.w	r0, r4, #3
100128ba:	eb00 0094 	add.w	r0, r0, r4, lsr #2
100128be:	1a09      	subs	r1, r1, r0
100128c0:	1a58      	subs	r0, r3, r1
100128c2:	f162 0e00 	sbc.w	lr, r2, #0
100128c6:	fb0a f400 	mul.w	r4, sl, r0
100128ca:	fba0 b009 	umull	fp, r0, r0, r9
100128ce:	fb09 440e 	mla	r4, r9, lr, r4
100128d2:	f00b 0e01 	and.w	lr, fp, #1
100128d6:	4404      	add	r4, r0
100128d8:	fbae 0e07 	umull	r0, lr, lr, r7
100128dc:	1840      	adds	r0, r0, r1
100128de:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
100128e2:	3030      	adds	r0, #48	@ 0x30
100128e4:	f805 0c01 	strb.w	r0, [r5, #-1]
100128e8:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
100128ec:	f10c 0c01 	add.w	ip, ip, #1
100128f0:	3d01      	subs	r5, #1
100128f2:	0864      	lsrs	r4, r4, #1
100128f4:	2e00      	cmp	r6, #0
100128f6:	d0d3      	beq.n	100128a0 <_vfprintf_r+0x1098>
100128f8:	f898 1000 	ldrb.w	r1, [r8]
100128fc:	458c      	cmp	ip, r1
100128fe:	d1cf      	bne.n	100128a0 <_vfprintf_r+0x1098>
10012900:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10012904:	d0cc      	beq.n	100128a0 <_vfprintf_r+0x1098>
10012906:	2b0a      	cmp	r3, #10
10012908:	f172 0200 	sbcs.w	r2, r2, #0
1001290c:	f080 82c3 	bcs.w	10012e96 <_vfprintf_r+0x168e>
10012910:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
10012914:	9c06      	ldr	r4, [sp, #24]
10012916:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
1001291a:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
1001291e:	f7ff bbc5 	b.w	100120ac <_vfprintf_r+0x8a4>
10012922:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012926:	aa32      	add	r2, sp, #200	@ 0xc8
10012928:	9315      	str	r3, [sp, #84]	@ 0x54
1001292a:	f000 fe11 	bl	10013550 <__sprint_r>
1001292e:	2800      	cmp	r0, #0
10012930:	f47f ac6e 	bne.w	10012210 <_vfprintf_r+0xa08>
10012934:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012938:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001293a:	9b15      	ldr	r3, [sp, #84]	@ 0x54
1001293c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012940:	f7ff b8fa 	b.w	10011b38 <_vfprintf_r+0x330>
10012944:	46a3      	mov	fp, r4
10012946:	f7ff b8b7 	b.w	10011ab8 <_vfprintf_r+0x2b0>
1001294a:	46d3      	mov	fp, sl
1001294c:	f7ff b8b4 	b.w	10011ab8 <_vfprintf_r+0x2b0>
10012950:	4658      	mov	r0, fp
10012952:	f002 fa09 	bl	10014d68 <__sinit>
10012956:	f7fe bf74 	b.w	10011842 <_vfprintf_r+0x3a>
1001295a:	2901      	cmp	r1, #1
1001295c:	464c      	mov	r4, r9
1001295e:	f47f ab95 	bne.w	1001208c <_vfprintf_r+0x884>
10012962:	e4d3      	b.n	1001230c <_vfprintf_r+0xb04>
10012964:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012968:	aa32      	add	r2, sp, #200	@ 0xc8
1001296a:	f000 fdf1 	bl	10013550 <__sprint_r>
1001296e:	2800      	cmp	r0, #0
10012970:	f47f ac4e 	bne.w	10012210 <_vfprintf_r+0xa08>
10012974:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012976:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001297a:	f7ff bb46 	b.w	1001200a <_vfprintf_r+0x802>
1001297e:	46cb      	mov	fp, r9
10012980:	f7ff b89a 	b.w	10011ab8 <_vfprintf_r+0x2b0>
10012984:	af30      	add	r7, sp, #192	@ 0xc0
10012986:	2208      	movs	r2, #8
10012988:	2100      	movs	r1, #0
1001298a:	4638      	mov	r0, r7
1001298c:	952b      	str	r5, [sp, #172]	@ 0xac
1001298e:	f002 fd07 	bl	100153a0 <memset>
10012992:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012994:	1c58      	adds	r0, r3, #1
10012996:	f000 8270 	beq.w	10012e7a <_vfprintf_r+0x1672>
1001299a:	2400      	movs	r4, #0
1001299c:	f8cd 9018 	str.w	r9, [sp, #24]
100129a0:	46a3      	mov	fp, r4
100129a2:	f8dd 9020 	ldr.w	r9, [sp, #32]
100129a6:	469a      	mov	sl, r3
100129a8:	e00c      	b.n	100129c4 <_vfprintf_r+0x11bc>
100129aa:	a945      	add	r1, sp, #276	@ 0x114
100129ac:	4648      	mov	r0, r9
100129ae:	f002 ff53 	bl	10015858 <_wcrtomb_r>
100129b2:	1c41      	adds	r1, r0, #1
100129b4:	4458      	add	r0, fp
100129b6:	f000 8475 	beq.w	100132a4 <_vfprintf_r+0x1a9c>
100129ba:	4550      	cmp	r0, sl
100129bc:	dc08      	bgt.n	100129d0 <_vfprintf_r+0x11c8>
100129be:	f000 84c2 	beq.w	10013346 <_vfprintf_r+0x1b3e>
100129c2:	4683      	mov	fp, r0
100129c4:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
100129c6:	5912      	ldr	r2, [r2, r4]
100129c8:	463b      	mov	r3, r7
100129ca:	3404      	adds	r4, #4
100129cc:	2a00      	cmp	r2, #0
100129ce:	d1ec      	bne.n	100129aa <_vfprintf_r+0x11a2>
100129d0:	f8dd 9018 	ldr.w	r9, [sp, #24]
100129d4:	f1bb 0f00 	cmp.w	fp, #0
100129d8:	f000 8342 	beq.w	10013060 <_vfprintf_r+0x1858>
100129dc:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
100129e0:	f340 83f9 	ble.w	100131d6 <_vfprintf_r+0x19ce>
100129e4:	9808      	ldr	r0, [sp, #32]
100129e6:	f10b 0101 	add.w	r1, fp, #1
100129ea:	f7fe fc3d 	bl	10011268 <_malloc_r>
100129ee:	4605      	mov	r5, r0
100129f0:	2800      	cmp	r0, #0
100129f2:	f000 8457 	beq.w	100132a4 <_vfprintf_r+0x1a9c>
100129f6:	900c      	str	r0, [sp, #48]	@ 0x30
100129f8:	2208      	movs	r2, #8
100129fa:	2100      	movs	r1, #0
100129fc:	4638      	mov	r0, r7
100129fe:	f002 fccf 	bl	100153a0 <memset>
10012a02:	9808      	ldr	r0, [sp, #32]
10012a04:	9700      	str	r7, [sp, #0]
10012a06:	465b      	mov	r3, fp
10012a08:	aa2b      	add	r2, sp, #172	@ 0xac
10012a0a:	4629      	mov	r1, r5
10012a0c:	f002 ff4a 	bl	100158a4 <_wcsrtombs_r>
10012a10:	4583      	cmp	fp, r0
10012a12:	f040 8517 	bne.w	10013444 <_vfprintf_r+0x1c3c>
10012a16:	2300      	movs	r3, #0
10012a18:	f805 300b 	strb.w	r3, [r5, fp]
10012a1c:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10012a20:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012a24:	960d      	str	r6, [sp, #52]	@ 0x34
10012a26:	9309      	str	r3, [sp, #36]	@ 0x24
10012a28:	9106      	str	r1, [sp, #24]
10012a2a:	9314      	str	r3, [sp, #80]	@ 0x50
10012a2c:	9310      	str	r3, [sp, #64]	@ 0x40
10012a2e:	9312      	str	r3, [sp, #72]	@ 0x48
10012a30:	f7ff b925 	b.w	10011c7e <_vfprintf_r+0x476>
10012a34:	4a0a      	ldr	r2, [pc, #40]	@ (10012a60 <_vfprintf_r+0x1258>)
10012a36:	9215      	str	r2, [sp, #84]	@ 0x54
10012a38:	3301      	adds	r3, #1
10012a3a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10012a3c:	f8c8 2000 	str.w	r2, [r8]
10012a40:	442c      	add	r4, r5
10012a42:	2b07      	cmp	r3, #7
10012a44:	f8c8 5004 	str.w	r5, [r8, #4]
10012a48:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012a4c:	f77f a8b1 	ble.w	10011bb2 <_vfprintf_r+0x3aa>
10012a50:	f7ff bbfe 	b.w	10012250 <_vfprintf_r+0xa48>
10012a54:	1001c540 	.word	0x1001c540
10012a58:	1001c52c 	.word	0x1001c52c
10012a5c:	1001c554 	.word	0x1001c554
10012a60:	1001c560 	.word	0x1001c560
10012a64:	cccccccd 	.word	0xcccccccd
10012a68:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012a6a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10012a6c:	681b      	ldr	r3, [r3, #0]
10012a6e:	601a      	str	r2, [r3, #0]
10012a70:	f7ff baaa 	b.w	10011fc8 <_vfprintf_r+0x7c0>
10012a74:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
10012a78:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10012a7a:	603b      	str	r3, [r7, #0]
10012a7c:	3601      	adds	r6, #1
10012a7e:	4444      	add	r4, r8
10012a80:	2e07      	cmp	r6, #7
10012a82:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10012a86:	f8c7 8004 	str.w	r8, [r7, #4]
10012a8a:	f77f ac2b 	ble.w	100122e4 <_vfprintf_r+0xadc>
10012a8e:	e527      	b.n	100124e0 <_vfprintf_r+0xcd8>
10012a90:	2e10      	cmp	r6, #16
10012a92:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10012a94:	f340 84ad 	ble.w	100133f2 <_vfprintf_r+0x1bea>
10012a98:	4898      	ldr	r0, [pc, #608]	@ (10012cfc <_vfprintf_r+0x14f4>)
10012a9a:	9015      	str	r0, [sp, #84]	@ 0x54
10012a9c:	4642      	mov	r2, r8
10012a9e:	4621      	mov	r1, r4
10012aa0:	46a8      	mov	r8, r5
10012aa2:	e9dd 4a07 	ldrd	r4, sl, [sp, #28]
10012aa6:	2710      	movs	r7, #16
10012aa8:	4605      	mov	r5, r0
10012aaa:	e004      	b.n	10012ab6 <_vfprintf_r+0x12ae>
10012aac:	3208      	adds	r2, #8
10012aae:	3e10      	subs	r6, #16
10012ab0:	2e10      	cmp	r6, #16
10012ab2:	f340 81ca 	ble.w	10012e4a <_vfprintf_r+0x1642>
10012ab6:	3301      	adds	r3, #1
10012ab8:	3110      	adds	r1, #16
10012aba:	2b07      	cmp	r3, #7
10012abc:	e9c2 5700 	strd	r5, r7, [r2]
10012ac0:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
10012ac4:	ddf2      	ble.n	10012aac <_vfprintf_r+0x12a4>
10012ac6:	aa32      	add	r2, sp, #200	@ 0xc8
10012ac8:	4621      	mov	r1, r4
10012aca:	4650      	mov	r0, sl
10012acc:	f000 fd40 	bl	10013550 <__sprint_r>
10012ad0:	2800      	cmp	r0, #0
10012ad2:	f47f af3a 	bne.w	1001294a <_vfprintf_r+0x1142>
10012ad6:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
10012ada:	aa35      	add	r2, sp, #212	@ 0xd4
10012adc:	e7e7      	b.n	10012aae <_vfprintf_r+0x12a6>
10012ade:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10012ae2:	bf1c      	itt	ne
10012ae4:	b2db      	uxtbne	r3, r3
10012ae6:	4602      	movne	r2, r0
10012ae8:	e63d      	b.n	10012766 <_vfprintf_r+0xf5e>
10012aea:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10012aee:	bf1c      	itt	ne
10012af0:	b2db      	uxtbne	r3, r3
10012af2:	4602      	movne	r2, r0
10012af4:	f7ff b9fb 	b.w	10011eee <_vfprintf_r+0x6e6>
10012af8:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10012afa:	2302      	movs	r3, #2
10012afc:	e9cd 3600 	strd	r3, r6, [sp]
10012b00:	ab30      	add	r3, sp, #192	@ 0xc0
10012b02:	9304      	str	r3, [sp, #16]
10012b04:	ab2b      	add	r3, sp, #172	@ 0xac
10012b06:	9303      	str	r3, [sp, #12]
10012b08:	ab29      	add	r3, sp, #164	@ 0xa4
10012b0a:	9302      	str	r3, [sp, #8]
10012b0c:	9808      	ldr	r0, [sp, #32]
10012b0e:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
10012b12:	f002 ffb1 	bl	10015a78 <_dtoa_r>
10012b16:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012b18:	2b67      	cmp	r3, #103	@ 0x67
10012b1a:	4605      	mov	r5, r0
10012b1c:	f000 8177 	beq.w	10012e0e <_vfprintf_r+0x1606>
10012b20:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012b22:	2b47      	cmp	r3, #71	@ 0x47
10012b24:	f000 8173 	beq.w	10012e0e <_vfprintf_r+0x1606>
10012b28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012b2a:	f023 0720 	bic.w	r7, r3, #32
10012b2e:	2f46      	cmp	r7, #70	@ 0x46
10012b30:	eb00 0406 	add.w	r4, r0, r6
10012b34:	d105      	bne.n	10012b42 <_vfprintf_r+0x133a>
10012b36:	7803      	ldrb	r3, [r0, #0]
10012b38:	2b30      	cmp	r3, #48	@ 0x30
10012b3a:	f000 83db 	beq.w	100132f4 <_vfprintf_r+0x1aec>
10012b3e:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
10012b40:	4434      	add	r4, r6
10012b42:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10012b46:	2200      	movs	r2, #0
10012b48:	2300      	movs	r3, #0
10012b4a:	f007 f987 	bl	10019e5c <__aeabi_dcmpeq>
10012b4e:	2800      	cmp	r0, #0
10012b50:	f000 81cc 	beq.w	10012eec <_vfprintf_r+0x16e4>
10012b54:	4623      	mov	r3, r4
10012b56:	1b5b      	subs	r3, r3, r5
10012b58:	9313      	str	r3, [sp, #76]	@ 0x4c
10012b5a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10012b5c:	9212      	str	r2, [sp, #72]	@ 0x48
10012b5e:	2f47      	cmp	r7, #71	@ 0x47
10012b60:	f000 815d 	beq.w	10012e1e <_vfprintf_r+0x1616>
10012b64:	2f46      	cmp	r7, #70	@ 0x46
10012b66:	f000 82e3 	beq.w	10013130 <_vfprintf_r+0x1928>
10012b6a:	990e      	ldr	r1, [sp, #56]	@ 0x38
10012b6c:	1e53      	subs	r3, r2, #1
10012b6e:	2961      	cmp	r1, #97	@ 0x61
10012b70:	9329      	str	r3, [sp, #164]	@ 0xa4
10012b72:	f000 8441 	beq.w	100133f8 <_vfprintf_r+0x1bf0>
10012b76:	2941      	cmp	r1, #65	@ 0x41
10012b78:	f040 815c 	bne.w	10012e34 <_vfprintf_r+0x162c>
10012b7c:	2150      	movs	r1, #80	@ 0x50
10012b7e:	2001      	movs	r0, #1
10012b80:	2b00      	cmp	r3, #0
10012b82:	bfb6      	itet	lt
10012b84:	f1c2 0301 	rsblt	r3, r2, #1
10012b88:	222b      	movge	r2, #43	@ 0x2b
10012b8a:	222d      	movlt	r2, #45	@ 0x2d
10012b8c:	2b09      	cmp	r3, #9
10012b8e:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
10012b92:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
10012b96:	f340 8377 	ble.w	10013288 <_vfprintf_r+0x1a80>
10012b9a:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
10012b9e:	4e58      	ldr	r6, [pc, #352]	@ (10012d00 <_vfprintf_r+0x14f8>)
10012ba0:	4622      	mov	r2, r4
10012ba2:	4610      	mov	r0, r2
10012ba4:	fba6 1203 	umull	r1, r2, r6, r3
10012ba8:	08d2      	lsrs	r2, r2, #3
10012baa:	eb02 0182 	add.w	r1, r2, r2, lsl #2
10012bae:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
10012bb2:	3130      	adds	r1, #48	@ 0x30
10012bb4:	f800 1c01 	strb.w	r1, [r0, #-1]
10012bb8:	4619      	mov	r1, r3
10012bba:	2963      	cmp	r1, #99	@ 0x63
10012bbc:	4613      	mov	r3, r2
10012bbe:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
10012bc2:	dcee      	bgt.n	10012ba2 <_vfprintf_r+0x139a>
10012bc4:	3330      	adds	r3, #48	@ 0x30
10012bc6:	f802 3c01 	strb.w	r3, [r2, #-1]
10012bca:	1e83      	subs	r3, r0, #2
10012bcc:	42a3      	cmp	r3, r4
10012bce:	f080 840c 	bcs.w	100133ea <_vfprintf_r+0x1be2>
10012bd2:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
10012bd6:	f813 1b01 	ldrb.w	r1, [r3], #1
10012bda:	f802 1f01 	strb.w	r1, [r2, #1]!
10012bde:	42a3      	cmp	r3, r4
10012be0:	d1f9      	bne.n	10012bd6 <_vfprintf_r+0x13ce>
10012be2:	ab5e      	add	r3, sp, #376	@ 0x178
10012be4:	1a18      	subs	r0, r3, r0
10012be6:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
10012bea:	931c      	str	r3, [sp, #112]	@ 0x70
10012bec:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012bee:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10012bf0:	2b01      	cmp	r3, #1
10012bf2:	eb03 0b02 	add.w	fp, r3, r2
10012bf6:	f340 8378 	ble.w	100132ea <_vfprintf_r+0x1ae2>
10012bfa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012bfc:	449b      	add	fp, r3
10012bfe:	9b06      	ldr	r3, [sp, #24]
10012c00:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
10012c04:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
10012c08:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
10012c0c:	2300      	movs	r3, #0
10012c0e:	9314      	str	r3, [sp, #80]	@ 0x50
10012c10:	9206      	str	r2, [sp, #24]
10012c12:	9310      	str	r3, [sp, #64]	@ 0x40
10012c14:	9312      	str	r3, [sp, #72]	@ 0x48
10012c16:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
10012c18:	2b00      	cmp	r3, #0
10012c1a:	f040 810f 	bne.w	10012e3c <_vfprintf_r+0x1634>
10012c1e:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012c22:	9309      	str	r3, [sp, #36]	@ 0x24
10012c24:	f7ff b82b 	b.w	10011c7e <_vfprintf_r+0x476>
10012c28:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012c2a:	ebab 060a 	sub.w	r6, fp, sl
10012c2e:	1b5d      	subs	r5, r3, r5
10012c30:	42ae      	cmp	r6, r5
10012c32:	bfa8      	it	ge
10012c34:	462e      	movge	r6, r5
10012c36:	e41a      	b.n	1001246e <_vfprintf_r+0xc66>
10012c38:	f343 12c0 	sbfx	r2, r3, #7, #1
10012c3c:	4611      	mov	r1, r2
10012c3e:	b25b      	sxtb	r3, r3
10012c40:	f7ff b8d3 	b.w	10011dea <_vfprintf_r+0x5e2>
10012c44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012c46:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10012c48:	681b      	ldr	r3, [r3, #0]
10012c4a:	801a      	strh	r2, [r3, #0]
10012c4c:	f7ff b9bc 	b.w	10011fc8 <_vfprintf_r+0x7c0>
10012c50:	9907      	ldr	r1, [sp, #28]
10012c52:	aa32      	add	r2, sp, #200	@ 0xc8
10012c54:	4658      	mov	r0, fp
10012c56:	f000 fc7b 	bl	10013550 <__sprint_r>
10012c5a:	2800      	cmp	r0, #0
10012c5c:	f43e af1c 	beq.w	10011a98 <_vfprintf_r+0x290>
10012c60:	f7fe bf30 	b.w	10011ac4 <_vfprintf_r+0x2bc>
10012c64:	4628      	mov	r0, r5
10012c66:	960d      	str	r6, [sp, #52]	@ 0x34
10012c68:	f002 fd8a 	bl	10015780 <strlen>
10012c6c:	4683      	mov	fp, r0
10012c6e:	f7ff b89f 	b.w	10011db0 <_vfprintf_r+0x5a8>
10012c72:	2358      	movs	r3, #88	@ 0x58
10012c74:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
10012c78:	2330      	movs	r3, #48	@ 0x30
10012c7a:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
10012c7e:	f049 0302 	orr.w	r3, r9, #2
10012c82:	9306      	str	r3, [sp, #24]
10012c84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012c86:	2b63      	cmp	r3, #99	@ 0x63
10012c88:	f300 82f6 	bgt.w	10013278 <_vfprintf_r+0x1a70>
10012c8c:	2300      	movs	r3, #0
10012c8e:	930c      	str	r3, [sp, #48]	@ 0x30
10012c90:	ad45      	add	r5, sp, #276	@ 0x114
10012c92:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
10012c96:	9315      	str	r3, [sp, #84]	@ 0x54
10012c98:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10012c9a:	2b00      	cmp	r3, #0
10012c9c:	f2c0 8200 	blt.w	100130a0 <_vfprintf_r+0x1898>
10012ca0:	ed9d 7b16 	vldr	d7, [sp, #88]	@ 0x58
10012ca4:	ed8d 7b24 	vstr	d7, [sp, #144]	@ 0x90
10012ca8:	2300      	movs	r3, #0
10012caa:	931f      	str	r3, [sp, #124]	@ 0x7c
10012cac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012cae:	2b61      	cmp	r3, #97	@ 0x61
10012cb0:	f47f ad1c 	bne.w	100126ec <_vfprintf_r+0xee4>
10012cb4:	aa29      	add	r2, sp, #164	@ 0xa4
10012cb6:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10012cba:	f002 fdff 	bl	100158bc <frexp>
10012cbe:	2200      	movs	r2, #0
10012cc0:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10012cc4:	f006 fe62 	bl	1001998c <__aeabi_dmul>
10012cc8:	4602      	mov	r2, r0
10012cca:	460b      	mov	r3, r1
10012ccc:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10012cd0:	2200      	movs	r2, #0
10012cd2:	2300      	movs	r3, #0
10012cd4:	f007 f8c2 	bl	10019e5c <__aeabi_dcmpeq>
10012cd8:	2800      	cmp	r0, #0
10012cda:	f040 82f8 	bne.w	100132ce <_vfprintf_r+0x1ac6>
10012cde:	4b09      	ldr	r3, [pc, #36]	@ (10012d04 <_vfprintf_r+0x14fc>)
10012ce0:	9312      	str	r3, [sp, #72]	@ 0x48
10012ce2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012ce4:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
10012ce8:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
10012cec:	462e      	mov	r6, r5
10012cee:	9514      	str	r5, [sp, #80]	@ 0x50
10012cf0:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10012cf4:	464d      	mov	r5, r9
10012cf6:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10012cfa:	e00b      	b.n	10012d14 <_vfprintf_r+0x150c>
10012cfc:	1001c560 	.word	0x1001c560
10012d00:	cccccccd 	.word	0xcccccccd
10012d04:	1001c52c 	.word	0x1001c52c
10012d08:	2200      	movs	r2, #0
10012d0a:	2300      	movs	r3, #0
10012d0c:	f007 f8a6 	bl	10019e5c <__aeabi_dcmpeq>
10012d10:	b9f0      	cbnz	r0, 10012d50 <_vfprintf_r+0x1548>
10012d12:	463d      	mov	r5, r7
10012d14:	4ba9      	ldr	r3, [pc, #676]	@ (10012fbc <_vfprintf_r+0x17b4>)
10012d16:	2200      	movs	r2, #0
10012d18:	4640      	mov	r0, r8
10012d1a:	4649      	mov	r1, r9
10012d1c:	f006 fe36 	bl	1001998c <__aeabi_dmul>
10012d20:	4689      	mov	r9, r1
10012d22:	4680      	mov	r8, r0
10012d24:	f007 f8e2 	bl	10019eec <__aeabi_d2iz>
10012d28:	4604      	mov	r4, r0
10012d2a:	f006 fdc5 	bl	100198b8 <__aeabi_i2d>
10012d2e:	460b      	mov	r3, r1
10012d30:	4602      	mov	r2, r0
10012d32:	4649      	mov	r1, r9
10012d34:	4640      	mov	r0, r8
10012d36:	f006 fc71 	bl	1001961c <__aeabi_dsub>
10012d3a:	f81b 3004 	ldrb.w	r3, [fp, r4]
10012d3e:	46b2      	mov	sl, r6
10012d40:	f806 3b01 	strb.w	r3, [r6], #1
10012d44:	1c6b      	adds	r3, r5, #1
10012d46:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
10012d4a:	4680      	mov	r8, r0
10012d4c:	4689      	mov	r9, r1
10012d4e:	d1db      	bne.n	10012d08 <_vfprintf_r+0x1500>
10012d50:	46cb      	mov	fp, r9
10012d52:	4657      	mov	r7, sl
10012d54:	46c2      	mov	sl, r8
10012d56:	4b9a      	ldr	r3, [pc, #616]	@ (10012fc0 <_vfprintf_r+0x17b8>)
10012d58:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
10012d5c:	2200      	movs	r2, #0
10012d5e:	4650      	mov	r0, sl
10012d60:	4659      	mov	r1, fp
10012d62:	46a9      	mov	r9, r5
10012d64:	9d14      	ldr	r5, [sp, #80]	@ 0x50
10012d66:	f007 f8a1 	bl	10019eac <__aeabi_dcmpgt>
10012d6a:	2800      	cmp	r0, #0
10012d6c:	f040 8264 	bne.w	10013238 <_vfprintf_r+0x1a30>
10012d70:	4b93      	ldr	r3, [pc, #588]	@ (10012fc0 <_vfprintf_r+0x17b8>)
10012d72:	4650      	mov	r0, sl
10012d74:	4659      	mov	r1, fp
10012d76:	2200      	movs	r2, #0
10012d78:	f007 f870 	bl	10019e5c <__aeabi_dcmpeq>
10012d7c:	b110      	cbz	r0, 10012d84 <_vfprintf_r+0x157c>
10012d7e:	07e2      	lsls	r2, r4, #31
10012d80:	f100 825a 	bmi.w	10013238 <_vfprintf_r+0x1a30>
10012d84:	f1b9 0f00 	cmp.w	r9, #0
10012d88:	f2c0 8270 	blt.w	1001326c <_vfprintf_r+0x1a64>
10012d8c:	f109 0301 	add.w	r3, r9, #1
10012d90:	4433      	add	r3, r6
10012d92:	2230      	movs	r2, #48	@ 0x30
10012d94:	f806 2b01 	strb.w	r2, [r6], #1
10012d98:	42b3      	cmp	r3, r6
10012d9a:	d1fb      	bne.n	10012d94 <_vfprintf_r+0x158c>
10012d9c:	1b5b      	subs	r3, r3, r5
10012d9e:	9313      	str	r3, [sp, #76]	@ 0x4c
10012da0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012da2:	f023 0720 	bic.w	r7, r3, #32
10012da6:	e6d8      	b.n	10012b5a <_vfprintf_r+0x1352>
10012da8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012dac:	aa32      	add	r2, sp, #200	@ 0xc8
10012dae:	f000 fbcf 	bl	10013550 <__sprint_r>
10012db2:	2800      	cmp	r0, #0
10012db4:	f47f aa2c 	bne.w	10012210 <_vfprintf_r+0xa08>
10012db8:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10012dbc:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10012dbe:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012dc2:	f7ff ba36 	b.w	10012232 <_vfprintf_r+0xa2a>
10012dc6:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10012dc8:	f002 fbe4 	bl	10015594 <__retarget_lock_release_recursive>
10012dcc:	f7fe be36 	b.w	10011a3c <_vfprintf_r+0x234>
10012dd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012dd2:	1c5e      	adds	r6, r3, #1
10012dd4:	2302      	movs	r3, #2
10012dd6:	e691      	b.n	10012afc <_vfprintf_r+0x12f4>
10012dd8:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10012dda:	2303      	movs	r3, #3
10012ddc:	e68e      	b.n	10012afc <_vfprintf_r+0x12f4>
10012dde:	aa29      	add	r2, sp, #164	@ 0xa4
10012de0:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10012de4:	f002 fd6a 	bl	100158bc <frexp>
10012de8:	2200      	movs	r2, #0
10012dea:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10012dee:	f006 fdcd 	bl	1001998c <__aeabi_dmul>
10012df2:	4602      	mov	r2, r0
10012df4:	460b      	mov	r3, r1
10012df6:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10012dfa:	2200      	movs	r2, #0
10012dfc:	2300      	movs	r3, #0
10012dfe:	f007 f82d 	bl	10019e5c <__aeabi_dcmpeq>
10012e02:	2800      	cmp	r0, #0
10012e04:	f040 8263 	bne.w	100132ce <_vfprintf_r+0x1ac6>
10012e08:	4b6e      	ldr	r3, [pc, #440]	@ (10012fc4 <_vfprintf_r+0x17bc>)
10012e0a:	9312      	str	r3, [sp, #72]	@ 0x48
10012e0c:	e769      	b.n	10012ce2 <_vfprintf_r+0x14da>
10012e0e:	9b06      	ldr	r3, [sp, #24]
10012e10:	07db      	lsls	r3, r3, #31
10012e12:	f100 81e4 	bmi.w	100131de <_vfprintf_r+0x19d6>
10012e16:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012e18:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10012e1a:	1b5b      	subs	r3, r3, r5
10012e1c:	9313      	str	r3, [sp, #76]	@ 0x4c
10012e1e:	1cd3      	adds	r3, r2, #3
10012e20:	9212      	str	r2, [sp, #72]	@ 0x48
10012e22:	db02      	blt.n	10012e2a <_vfprintf_r+0x1622>
10012e24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012e26:	4293      	cmp	r3, r2
10012e28:	da44      	bge.n	10012eb4 <_vfprintf_r+0x16ac>
10012e2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012e2c:	3b02      	subs	r3, #2
10012e2e:	930e      	str	r3, [sp, #56]	@ 0x38
10012e30:	1e53      	subs	r3, r2, #1
10012e32:	9329      	str	r3, [sp, #164]	@ 0xa4
10012e34:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
10012e38:	2000      	movs	r0, #0
10012e3a:	e6a1      	b.n	10012b80 <_vfprintf_r+0x1378>
10012e3c:	222d      	movs	r2, #45	@ 0x2d
10012e3e:	2300      	movs	r3, #0
10012e40:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10012e44:	9309      	str	r3, [sp, #36]	@ 0x24
10012e46:	f7fe bf1d 	b.w	10011c84 <_vfprintf_r+0x47c>
10012e4a:	4645      	mov	r5, r8
10012e4c:	460c      	mov	r4, r1
10012e4e:	4690      	mov	r8, r2
10012e50:	3301      	adds	r3, #1
10012e52:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10012e54:	f8c8 2000 	str.w	r2, [r8]
10012e58:	4434      	add	r4, r6
10012e5a:	2b07      	cmp	r3, #7
10012e5c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012e60:	f8c8 6004 	str.w	r6, [r8, #4]
10012e64:	f300 8226 	bgt.w	100132b4 <_vfprintf_r+0x1aac>
10012e68:	f108 0808 	add.w	r8, r8, #8
10012e6c:	f7ff bacb 	b.w	10012406 <_vfprintf_r+0xbfe>
10012e70:	222d      	movs	r2, #45	@ 0x2d
10012e72:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10012e76:	f7fe bef1 	b.w	10011c5c <_vfprintf_r+0x454>
10012e7a:	2300      	movs	r3, #0
10012e7c:	9808      	ldr	r0, [sp, #32]
10012e7e:	9700      	str	r7, [sp, #0]
10012e80:	aa2b      	add	r2, sp, #172	@ 0xac
10012e82:	4619      	mov	r1, r3
10012e84:	f002 fd0e 	bl	100158a4 <_wcsrtombs_r>
10012e88:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10012e8c:	4683      	mov	fp, r0
10012e8e:	f000 8209 	beq.w	100132a4 <_vfprintf_r+0x1a9c>
10012e92:	952b      	str	r5, [sp, #172]	@ 0xac
10012e94:	e59e      	b.n	100129d4 <_vfprintf_r+0x11cc>
10012e96:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10012e98:	991d      	ldr	r1, [sp, #116]	@ 0x74
10012e9a:	1aed      	subs	r5, r5, r3
10012e9c:	461a      	mov	r2, r3
10012e9e:	4628      	mov	r0, r5
10012ea0:	f002 fad0 	bl	10015444 <strncpy>
10012ea4:	f898 3001 	ldrb.w	r3, [r8, #1]
10012ea8:	b10b      	cbz	r3, 10012eae <_vfprintf_r+0x16a6>
10012eaa:	f108 0801 	add.w	r8, r8, #1
10012eae:	f04f 0c00 	mov.w	ip, #0
10012eb2:	e4f9      	b.n	100128a8 <_vfprintf_r+0x10a0>
10012eb4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012eb6:	4293      	cmp	r3, r2
10012eb8:	f300 8194 	bgt.w	100131e4 <_vfprintf_r+0x19dc>
10012ebc:	9b06      	ldr	r3, [sp, #24]
10012ebe:	07de      	lsls	r6, r3, #31
10012ec0:	f140 824a 	bpl.w	10013358 <_vfprintf_r+0x1b50>
10012ec4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012ec6:	eb02 0b03 	add.w	fp, r2, r3
10012eca:	9b06      	ldr	r3, [sp, #24]
10012ecc:	055c      	lsls	r4, r3, #21
10012ece:	d502      	bpl.n	10012ed6 <_vfprintf_r+0x16ce>
10012ed0:	2a00      	cmp	r2, #0
10012ed2:	f300 824a 	bgt.w	1001336a <_vfprintf_r+0x1b62>
10012ed6:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10012eda:	9306      	str	r3, [sp, #24]
10012edc:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10012ee0:	2367      	movs	r3, #103	@ 0x67
10012ee2:	930e      	str	r3, [sp, #56]	@ 0x38
10012ee4:	2300      	movs	r3, #0
10012ee6:	9314      	str	r3, [sp, #80]	@ 0x50
10012ee8:	9310      	str	r3, [sp, #64]	@ 0x40
10012eea:	e694      	b.n	10012c16 <_vfprintf_r+0x140e>
10012eec:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012eee:	42a3      	cmp	r3, r4
10012ef0:	f4bf ae31 	bcs.w	10012b56 <_vfprintf_r+0x134e>
10012ef4:	2130      	movs	r1, #48	@ 0x30
10012ef6:	1c5a      	adds	r2, r3, #1
10012ef8:	9230      	str	r2, [sp, #192]	@ 0xc0
10012efa:	7019      	strb	r1, [r3, #0]
10012efc:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012efe:	429c      	cmp	r4, r3
10012f00:	d8f9      	bhi.n	10012ef6 <_vfprintf_r+0x16ee>
10012f02:	e628      	b.n	10012b56 <_vfprintf_r+0x134e>
10012f04:	4621      	mov	r1, r4
10012f06:	461c      	mov	r4, r3
10012f08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10012f0a:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10012f0e:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
10012f12:	4642      	mov	r2, r8
10012f14:	4f2c      	ldr	r7, [pc, #176]	@ (10012fc8 <_vfprintf_r+0x17c0>)
10012f16:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
10012f1a:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
10012f1e:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
10012f22:	f8dd b020 	ldr.w	fp, [sp, #32]
10012f26:	b37b      	cbz	r3, 10012f88 <_vfprintf_r+0x1780>
10012f28:	f1b9 0f00 	cmp.w	r9, #0
10012f2c:	f000 8085 	beq.w	1001303a <_vfprintf_r+0x1832>
10012f30:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10012f34:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10012f36:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10012f38:	3001      	adds	r0, #1
10012f3a:	4441      	add	r1, r8
10012f3c:	2807      	cmp	r0, #7
10012f3e:	e9c2 3800 	strd	r3, r8, [r2]
10012f42:	9134      	str	r1, [sp, #208]	@ 0xd0
10012f44:	9033      	str	r0, [sp, #204]	@ 0xcc
10012f46:	dc6d      	bgt.n	10013024 <_vfprintf_r+0x181c>
10012f48:	3208      	adds	r2, #8
10012f4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012f4c:	f89a 0000 	ldrb.w	r0, [sl]
10012f50:	1b1e      	subs	r6, r3, r4
10012f52:	4286      	cmp	r6, r0
10012f54:	bfa8      	it	ge
10012f56:	4606      	movge	r6, r0
10012f58:	2e00      	cmp	r6, #0
10012f5a:	dd0b      	ble.n	10012f74 <_vfprintf_r+0x176c>
10012f5c:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10012f5e:	3001      	adds	r0, #1
10012f60:	4431      	add	r1, r6
10012f62:	2807      	cmp	r0, #7
10012f64:	e9c2 4600 	strd	r4, r6, [r2]
10012f68:	9134      	str	r1, [sp, #208]	@ 0xd0
10012f6a:	9033      	str	r0, [sp, #204]	@ 0xcc
10012f6c:	dc6b      	bgt.n	10013046 <_vfprintf_r+0x183e>
10012f6e:	f89a 0000 	ldrb.w	r0, [sl]
10012f72:	3208      	adds	r2, #8
10012f74:	2e00      	cmp	r6, #0
10012f76:	bfac      	ite	ge
10012f78:	1b85      	subge	r5, r0, r6
10012f7a:	4605      	movlt	r5, r0
10012f7c:	2d00      	cmp	r5, #0
10012f7e:	dc14      	bgt.n	10012faa <_vfprintf_r+0x17a2>
10012f80:	4404      	add	r4, r0
10012f82:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10012f84:	2b00      	cmp	r3, #0
10012f86:	d1cf      	bne.n	10012f28 <_vfprintf_r+0x1720>
10012f88:	f1b9 0f00 	cmp.w	r9, #0
10012f8c:	d1d0      	bne.n	10012f30 <_vfprintf_r+0x1728>
10012f8e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10012f92:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
10012f96:	46a2      	mov	sl, r4
10012f98:	45da      	cmp	sl, fp
10012f9a:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
10012f9e:	4690      	mov	r8, r2
10012fa0:	460c      	mov	r4, r1
10012fa2:	bf28      	it	cs
10012fa4:	46da      	movcs	sl, fp
10012fa6:	f7ff ba35 	b.w	10012414 <_vfprintf_r+0xc0c>
10012faa:	2d10      	cmp	r5, #16
10012fac:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10012fae:	f340 821a 	ble.w	100133e6 <_vfprintf_r+0x1bde>
10012fb2:	4623      	mov	r3, r4
10012fb4:	463e      	mov	r6, r7
10012fb6:	462c      	mov	r4, r5
10012fb8:	461d      	mov	r5, r3
10012fba:	e00c      	b.n	10012fd6 <_vfprintf_r+0x17ce>
10012fbc:	40300000 	.word	0x40300000
10012fc0:	3fe00000 	.word	0x3fe00000
10012fc4:	1001c540 	.word	0x1001c540
10012fc8:	1001c560 	.word	0x1001c560
10012fcc:	3c10      	subs	r4, #16
10012fce:	2c10      	cmp	r4, #16
10012fd0:	f102 0208 	add.w	r2, r2, #8
10012fd4:	dd16      	ble.n	10013004 <_vfprintf_r+0x17fc>
10012fd6:	3001      	adds	r0, #1
10012fd8:	3110      	adds	r1, #16
10012fda:	2310      	movs	r3, #16
10012fdc:	2807      	cmp	r0, #7
10012fde:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10012fe2:	6017      	str	r7, [r2, #0]
10012fe4:	6053      	str	r3, [r2, #4]
10012fe6:	ddf1      	ble.n	10012fcc <_vfprintf_r+0x17c4>
10012fe8:	9907      	ldr	r1, [sp, #28]
10012fea:	aa32      	add	r2, sp, #200	@ 0xc8
10012fec:	4658      	mov	r0, fp
10012fee:	f000 faaf 	bl	10013550 <__sprint_r>
10012ff2:	2800      	cmp	r0, #0
10012ff4:	f47e ad60 	bne.w	10011ab8 <_vfprintf_r+0x2b0>
10012ff8:	3c10      	subs	r4, #16
10012ffa:	2c10      	cmp	r4, #16
10012ffc:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
10013000:	aa35      	add	r2, sp, #212	@ 0xd4
10013002:	dce8      	bgt.n	10012fd6 <_vfprintf_r+0x17ce>
10013004:	462b      	mov	r3, r5
10013006:	4625      	mov	r5, r4
10013008:	461c      	mov	r4, r3
1001300a:	3001      	adds	r0, #1
1001300c:	4429      	add	r1, r5
1001300e:	2807      	cmp	r0, #7
10013010:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10013014:	6016      	str	r6, [r2, #0]
10013016:	6055      	str	r5, [r2, #4]
10013018:	dc4b      	bgt.n	100130b2 <_vfprintf_r+0x18aa>
1001301a:	f89a 0000 	ldrb.w	r0, [sl]
1001301e:	3208      	adds	r2, #8
10013020:	4404      	add	r4, r0
10013022:	e7ae      	b.n	10012f82 <_vfprintf_r+0x177a>
10013024:	9907      	ldr	r1, [sp, #28]
10013026:	aa32      	add	r2, sp, #200	@ 0xc8
10013028:	4658      	mov	r0, fp
1001302a:	f000 fa91 	bl	10013550 <__sprint_r>
1001302e:	2800      	cmp	r0, #0
10013030:	f47e ad42 	bne.w	10011ab8 <_vfprintf_r+0x2b0>
10013034:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10013036:	aa35      	add	r2, sp, #212	@ 0xd4
10013038:	e787      	b.n	10012f4a <_vfprintf_r+0x1742>
1001303a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001303c:	3b01      	subs	r3, #1
1001303e:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
10013042:	9310      	str	r3, [sp, #64]	@ 0x40
10013044:	e776      	b.n	10012f34 <_vfprintf_r+0x172c>
10013046:	9907      	ldr	r1, [sp, #28]
10013048:	aa32      	add	r2, sp, #200	@ 0xc8
1001304a:	4658      	mov	r0, fp
1001304c:	f000 fa80 	bl	10013550 <__sprint_r>
10013050:	2800      	cmp	r0, #0
10013052:	f47e ad31 	bne.w	10011ab8 <_vfprintf_r+0x2b0>
10013056:	f89a 0000 	ldrb.w	r0, [sl]
1001305a:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001305c:	aa35      	add	r2, sp, #212	@ 0xd4
1001305e:	e789      	b.n	10012f74 <_vfprintf_r+0x176c>
10013060:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10013064:	960d      	str	r6, [sp, #52]	@ 0x34
10013066:	f8cd b018 	str.w	fp, [sp, #24]
1001306a:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
1001306e:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10013072:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
10013076:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
1001307a:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
1001307e:	f7fe bdfe 	b.w	10011c7e <_vfprintf_r+0x476>
10013082:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10013086:	aa32      	add	r2, sp, #200	@ 0xc8
10013088:	f000 fa62 	bl	10013550 <__sprint_r>
1001308c:	2800      	cmp	r0, #0
1001308e:	f47f a8bf 	bne.w	10012210 <_vfprintf_r+0xa08>
10013092:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10013094:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10013096:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001309a:	f7ff baa5 	b.w	100125e8 <_vfprintf_r+0xde0>
1001309e:	930c      	str	r3, [sp, #48]	@ 0x30
100130a0:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
100130a4:	f102 4300 	add.w	r3, r2, #2147483648	@ 0x80000000
100130a8:	9325      	str	r3, [sp, #148]	@ 0x94
100130aa:	232d      	movs	r3, #45	@ 0x2d
100130ac:	9124      	str	r1, [sp, #144]	@ 0x90
100130ae:	931f      	str	r3, [sp, #124]	@ 0x7c
100130b0:	e5fc      	b.n	10012cac <_vfprintf_r+0x14a4>
100130b2:	9907      	ldr	r1, [sp, #28]
100130b4:	aa32      	add	r2, sp, #200	@ 0xc8
100130b6:	4658      	mov	r0, fp
100130b8:	f000 fa4a 	bl	10013550 <__sprint_r>
100130bc:	2800      	cmp	r0, #0
100130be:	f47e acfb 	bne.w	10011ab8 <_vfprintf_r+0x2b0>
100130c2:	f89a 0000 	ldrb.w	r0, [sl]
100130c6:	9934      	ldr	r1, [sp, #208]	@ 0xd0
100130c8:	aa35      	add	r2, sp, #212	@ 0xd4
100130ca:	4404      	add	r4, r0
100130cc:	e759      	b.n	10012f82 <_vfprintf_r+0x177a>
100130ce:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100130d2:	aa32      	add	r2, sp, #200	@ 0xc8
100130d4:	f000 fa3c 	bl	10013550 <__sprint_r>
100130d8:	2800      	cmp	r0, #0
100130da:	f47f a899 	bne.w	10012210 <_vfprintf_r+0xa08>
100130de:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100130e0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100130e4:	f7ff b988 	b.w	100123f8 <_vfprintf_r+0xbf0>
100130e8:	2378      	movs	r3, #120	@ 0x78
100130ea:	e5c3      	b.n	10012c74 <_vfprintf_r+0x146c>
100130ec:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100130f0:	aa32      	add	r2, sp, #200	@ 0xc8
100130f2:	f000 fa2d 	bl	10013550 <__sprint_r>
100130f6:	2800      	cmp	r0, #0
100130f8:	f47f a88a 	bne.w	10012210 <_vfprintf_r+0xa08>
100130fc:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
100130fe:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10013100:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013104:	f7ff b99c 	b.w	10012440 <_vfprintf_r+0xc38>
10013108:	49ab      	ldr	r1, [pc, #684]	@ (100133b8 <_vfprintf_r+0x1bb0>)
1001310a:	9115      	str	r1, [sp, #84]	@ 0x54
1001310c:	f7fe bdee 	b.w	10011cec <_vfprintf_r+0x4e4>
10013110:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10013114:	aa32      	add	r2, sp, #200	@ 0xc8
10013116:	f000 fa1b 	bl	10013550 <__sprint_r>
1001311a:	2800      	cmp	r0, #0
1001311c:	f47f a878 	bne.w	10012210 <_vfprintf_r+0xa08>
10013120:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10013122:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10013124:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10013126:	1b5d      	subs	r5, r3, r5
10013128:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001312c:	f7ff b99f 	b.w	1001246e <_vfprintf_r+0xc66>
10013130:	9b06      	ldr	r3, [sp, #24]
10013132:	9912      	ldr	r1, [sp, #72]	@ 0x48
10013134:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10013136:	f003 0301 	and.w	r3, r3, #1
1001313a:	2900      	cmp	r1, #0
1001313c:	ea43 0302 	orr.w	r3, r3, r2
10013140:	f340 815d 	ble.w	100133fe <_vfprintf_r+0x1bf6>
10013144:	2b00      	cmp	r3, #0
10013146:	f040 8109 	bne.w	1001335c <_vfprintf_r+0x1b54>
1001314a:	2366      	movs	r3, #102	@ 0x66
1001314c:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10013150:	930e      	str	r3, [sp, #56]	@ 0x38
10013152:	9b06      	ldr	r3, [sp, #24]
10013154:	055a      	lsls	r2, r3, #21
10013156:	f100 810a 	bmi.w	1001336e <_vfprintf_r+0x1b66>
1001315a:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
1001315e:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10013162:	9306      	str	r3, [sp, #24]
10013164:	e6be      	b.n	10012ee4 <_vfprintf_r+0x16dc>
10013166:	2200      	movs	r2, #0
10013168:	9209      	str	r2, [sp, #36]	@ 0x24
1001316a:	f7fe bbc6 	b.w	100118fa <_vfprintf_r+0xf2>
1001316e:	9b07      	ldr	r3, [sp, #28]
10013170:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10013172:	07dd      	lsls	r5, r3, #31
10013174:	d407      	bmi.n	10013186 <_vfprintf_r+0x197e>
10013176:	9b07      	ldr	r3, [sp, #28]
10013178:	899b      	ldrh	r3, [r3, #12]
1001317a:	059c      	lsls	r4, r3, #22
1001317c:	d403      	bmi.n	10013186 <_vfprintf_r+0x197e>
1001317e:	9b07      	ldr	r3, [sp, #28]
10013180:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10013182:	f002 fa07 	bl	10015594 <__retarget_lock_release_recursive>
10013186:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1001318a:	930a      	str	r3, [sp, #40]	@ 0x28
1001318c:	f7fe bca5 	b.w	10011ada <_vfprintf_r+0x2d2>
10013190:	4256      	negs	r6, r2
10013192:	3210      	adds	r2, #16
10013194:	4a89      	ldr	r2, [pc, #548]	@ (100133bc <_vfprintf_r+0x1bb4>)
10013196:	9215      	str	r2, [sp, #84]	@ 0x54
10013198:	da34      	bge.n	10013204 <_vfprintf_r+0x19fc>
1001319a:	46aa      	mov	sl, r5
1001319c:	2710      	movs	r7, #16
1001319e:	4615      	mov	r5, r2
100131a0:	e004      	b.n	100131ac <_vfprintf_r+0x19a4>
100131a2:	f108 0808 	add.w	r8, r8, #8
100131a6:	3e10      	subs	r6, #16
100131a8:	2e10      	cmp	r6, #16
100131aa:	dd2a      	ble.n	10013202 <_vfprintf_r+0x19fa>
100131ac:	3301      	adds	r3, #1
100131ae:	3410      	adds	r4, #16
100131b0:	2b07      	cmp	r3, #7
100131b2:	e9c8 5700 	strd	r5, r7, [r8]
100131b6:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100131ba:	ddf2      	ble.n	100131a2 <_vfprintf_r+0x199a>
100131bc:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100131c0:	aa32      	add	r2, sp, #200	@ 0xc8
100131c2:	f000 f9c5 	bl	10013550 <__sprint_r>
100131c6:	2800      	cmp	r0, #0
100131c8:	f47f a822 	bne.w	10012210 <_vfprintf_r+0xa08>
100131cc:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100131d0:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100131d4:	e7e7      	b.n	100131a6 <_vfprintf_r+0x199e>
100131d6:	2300      	movs	r3, #0
100131d8:	930c      	str	r3, [sp, #48]	@ 0x30
100131da:	ad45      	add	r5, sp, #276	@ 0x114
100131dc:	e40c      	b.n	100129f8 <_vfprintf_r+0x11f0>
100131de:	19ac      	adds	r4, r5, r6
100131e0:	2747      	movs	r7, #71	@ 0x47
100131e2:	e4ae      	b.n	10012b42 <_vfprintf_r+0x133a>
100131e4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100131e6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
100131e8:	eb03 0b02 	add.w	fp, r3, r2
100131ec:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100131ee:	2b00      	cmp	r3, #0
100131f0:	f340 80ee 	ble.w	100133d0 <_vfprintf_r+0x1bc8>
100131f4:	2367      	movs	r3, #103	@ 0x67
100131f6:	930e      	str	r3, [sp, #56]	@ 0x38
100131f8:	e7ab      	b.n	10013152 <_vfprintf_r+0x194a>
100131fa:	4a6f      	ldr	r2, [pc, #444]	@ (100133b8 <_vfprintf_r+0x1bb0>)
100131fc:	9215      	str	r2, [sp, #84]	@ 0x54
100131fe:	f7ff b8ce 	b.w	1001239e <_vfprintf_r+0xb96>
10013202:	4655      	mov	r5, sl
10013204:	3301      	adds	r3, #1
10013206:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10013208:	f8c8 2000 	str.w	r2, [r8]
1001320c:	4434      	add	r4, r6
1001320e:	2b07      	cmp	r3, #7
10013210:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10013214:	f8c8 6004 	str.w	r6, [r8, #4]
10013218:	f77f a9fb 	ble.w	10012612 <_vfprintf_r+0xe0a>
1001321c:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10013220:	aa32      	add	r2, sp, #200	@ 0xc8
10013222:	f000 f995 	bl	10013550 <__sprint_r>
10013226:	2800      	cmp	r0, #0
10013228:	f47e aff2 	bne.w	10012210 <_vfprintf_r+0xa08>
1001322c:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10013230:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10013234:	f7ff b800 	b.w	10012238 <_vfprintf_r+0xa30>
10013238:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001323a:	9730      	str	r7, [sp, #192]	@ 0xc0
1001323c:	7bd9      	ldrb	r1, [r3, #15]
1001323e:	f816 2c01 	ldrb.w	r2, [r6, #-1]
10013242:	428a      	cmp	r2, r1
10013244:	4633      	mov	r3, r6
10013246:	d109      	bne.n	1001325c <_vfprintf_r+0x1a54>
10013248:	2030      	movs	r0, #48	@ 0x30
1001324a:	f803 0c01 	strb.w	r0, [r3, #-1]
1001324e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10013250:	1e5a      	subs	r2, r3, #1
10013252:	9230      	str	r2, [sp, #192]	@ 0xc0
10013254:	f813 2c01 	ldrb.w	r2, [r3, #-1]
10013258:	4291      	cmp	r1, r2
1001325a:	d0f6      	beq.n	1001324a <_vfprintf_r+0x1a42>
1001325c:	2a39      	cmp	r2, #57	@ 0x39
1001325e:	bf0b      	itete	eq
10013260:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
10013262:	3201      	addne	r2, #1
10013264:	7a92      	ldrbeq	r2, [r2, #10]
10013266:	b2d2      	uxtbne	r2, r2
10013268:	f803 2c01 	strb.w	r2, [r3, #-1]
1001326c:	4633      	mov	r3, r6
1001326e:	e595      	b.n	10012d9c <_vfprintf_r+0x1594>
10013270:	4a52      	ldr	r2, [pc, #328]	@ (100133bc <_vfprintf_r+0x1bb4>)
10013272:	9215      	str	r2, [sp, #84]	@ 0x54
10013274:	f7fe bf78 	b.w	10012168 <_vfprintf_r+0x960>
10013278:	9808      	ldr	r0, [sp, #32]
1001327a:	1c59      	adds	r1, r3, #1
1001327c:	f7fd fff4 	bl	10011268 <_malloc_r>
10013280:	4605      	mov	r5, r0
10013282:	b178      	cbz	r0, 100132a4 <_vfprintf_r+0x1a9c>
10013284:	900c      	str	r0, [sp, #48]	@ 0x30
10013286:	e504      	b.n	10012c92 <_vfprintf_r+0x148a>
10013288:	2800      	cmp	r0, #0
1001328a:	d162      	bne.n	10013352 <_vfprintf_r+0x1b4a>
1001328c:	2230      	movs	r2, #48	@ 0x30
1001328e:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
10013292:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
10013296:	3330      	adds	r3, #48	@ 0x30
10013298:	f802 3b01 	strb.w	r3, [r2], #1
1001329c:	ab2c      	add	r3, sp, #176	@ 0xb0
1001329e:	1ad3      	subs	r3, r2, r3
100132a0:	931c      	str	r3, [sp, #112]	@ 0x70
100132a2:	e4a3      	b.n	10012bec <_vfprintf_r+0x13e4>
100132a4:	9a07      	ldr	r2, [sp, #28]
100132a6:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
100132aa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100132ae:	8193      	strh	r3, [r2, #12]
100132b0:	f7fe bc0b 	b.w	10011aca <_vfprintf_r+0x2c2>
100132b4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100132b8:	aa32      	add	r2, sp, #200	@ 0xc8
100132ba:	f000 f949 	bl	10013550 <__sprint_r>
100132be:	2800      	cmp	r0, #0
100132c0:	f47e afa6 	bne.w	10012210 <_vfprintf_r+0xa08>
100132c4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100132c6:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100132ca:	f7ff b89c 	b.w	10012406 <_vfprintf_r+0xbfe>
100132ce:	4b3c      	ldr	r3, [pc, #240]	@ (100133c0 <_vfprintf_r+0x1bb8>)
100132d0:	4a3c      	ldr	r2, [pc, #240]	@ (100133c4 <_vfprintf_r+0x1bbc>)
100132d2:	990e      	ldr	r1, [sp, #56]	@ 0x38
100132d4:	2961      	cmp	r1, #97	@ 0x61
100132d6:	bf18      	it	ne
100132d8:	461a      	movne	r2, r3
100132da:	2301      	movs	r3, #1
100132dc:	9212      	str	r2, [sp, #72]	@ 0x48
100132de:	9329      	str	r3, [sp, #164]	@ 0xa4
100132e0:	e4ff      	b.n	10012ce2 <_vfprintf_r+0x14da>
100132e2:	2306      	movs	r3, #6
100132e4:	9309      	str	r3, [sp, #36]	@ 0x24
100132e6:	f7ff b9f1 	b.w	100126cc <_vfprintf_r+0xec4>
100132ea:	9b06      	ldr	r3, [sp, #24]
100132ec:	07df      	lsls	r7, r3, #31
100132ee:	f57f ac86 	bpl.w	10012bfe <_vfprintf_r+0x13f6>
100132f2:	e482      	b.n	10012bfa <_vfprintf_r+0x13f2>
100132f4:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100132f8:	2200      	movs	r2, #0
100132fa:	2300      	movs	r3, #0
100132fc:	f006 fdae 	bl	10019e5c <__aeabi_dcmpeq>
10013300:	2800      	cmp	r0, #0
10013302:	f47f ac1c 	bne.w	10012b3e <_vfprintf_r+0x1336>
10013306:	f1c6 0601 	rsb	r6, r6, #1
1001330a:	9629      	str	r6, [sp, #164]	@ 0xa4
1001330c:	e418      	b.n	10012b40 <_vfprintf_r+0x1338>
1001330e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10013310:	4d2d      	ldr	r5, [pc, #180]	@ (100133c8 <_vfprintf_r+0x1bc0>)
10013312:	2b00      	cmp	r3, #0
10013314:	bfb4      	ite	lt
10013316:	222d      	movlt	r2, #45	@ 0x2d
10013318:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
1001331c:	4b2b      	ldr	r3, [pc, #172]	@ (100133cc <_vfprintf_r+0x1bc4>)
1001331e:	bfb8      	it	lt
10013320:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
10013324:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10013328:	f7fe bc9c 	b.w	10011c64 <_vfprintf_r+0x45c>
1001332c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001332e:	9306      	str	r3, [sp, #24]
10013330:	469b      	mov	fp, r3
10013332:	2373      	movs	r3, #115	@ 0x73
10013334:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10013338:	960d      	str	r6, [sp, #52]	@ 0x34
1001333a:	9009      	str	r0, [sp, #36]	@ 0x24
1001333c:	9014      	str	r0, [sp, #80]	@ 0x50
1001333e:	9010      	str	r0, [sp, #64]	@ 0x40
10013340:	930e      	str	r3, [sp, #56]	@ 0x38
10013342:	f7fe bc9c 	b.w	10011c7e <_vfprintf_r+0x476>
10013346:	f8dd 9018 	ldr.w	r9, [sp, #24]
1001334a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001334e:	f7ff bb41 	b.w	100129d4 <_vfprintf_r+0x11cc>
10013352:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10013356:	e79e      	b.n	10013296 <_vfprintf_r+0x1a8e>
10013358:	4693      	mov	fp, r2
1001335a:	e5b6      	b.n	10012eca <_vfprintf_r+0x16c2>
1001335c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001335e:	18cf      	adds	r7, r1, r3
10013360:	443a      	add	r2, r7
10013362:	2366      	movs	r3, #102	@ 0x66
10013364:	4693      	mov	fp, r2
10013366:	930e      	str	r3, [sp, #56]	@ 0x38
10013368:	e6f3      	b.n	10013152 <_vfprintf_r+0x194a>
1001336a:	2367      	movs	r3, #103	@ 0x67
1001336c:	930e      	str	r3, [sp, #56]	@ 0x38
1001336e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10013370:	780b      	ldrb	r3, [r1, #0]
10013372:	2bff      	cmp	r3, #255	@ 0xff
10013374:	d062      	beq.n	1001343c <_vfprintf_r+0x1c34>
10013376:	2400      	movs	r4, #0
10013378:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1001337a:	4620      	mov	r0, r4
1001337c:	e003      	b.n	10013386 <_vfprintf_r+0x1b7e>
1001337e:	3001      	adds	r0, #1
10013380:	3101      	adds	r1, #1
10013382:	2bff      	cmp	r3, #255	@ 0xff
10013384:	d008      	beq.n	10013398 <_vfprintf_r+0x1b90>
10013386:	4293      	cmp	r3, r2
10013388:	da06      	bge.n	10013398 <_vfprintf_r+0x1b90>
1001338a:	1ad2      	subs	r2, r2, r3
1001338c:	784b      	ldrb	r3, [r1, #1]
1001338e:	2b00      	cmp	r3, #0
10013390:	d1f5      	bne.n	1001337e <_vfprintf_r+0x1b76>
10013392:	780b      	ldrb	r3, [r1, #0]
10013394:	3401      	adds	r4, #1
10013396:	e7f4      	b.n	10013382 <_vfprintf_r+0x1b7a>
10013398:	911b      	str	r1, [sp, #108]	@ 0x6c
1001339a:	9212      	str	r2, [sp, #72]	@ 0x48
1001339c:	9010      	str	r0, [sp, #64]	@ 0x40
1001339e:	9414      	str	r4, [sp, #80]	@ 0x50
100133a0:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
100133a4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
100133a6:	4413      	add	r3, r2
100133a8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
100133aa:	fb02 bb03 	mla	fp, r2, r3, fp
100133ae:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100133b2:	9306      	str	r3, [sp, #24]
100133b4:	e42f      	b.n	10012c16 <_vfprintf_r+0x140e>
100133b6:	bf00      	nop
100133b8:	1001c570 	.word	0x1001c570
100133bc:	1001c560 	.word	0x1001c560
100133c0:	1001c540 	.word	0x1001c540
100133c4:	1001c52c 	.word	0x1001c52c
100133c8:	1001c524 	.word	0x1001c524
100133cc:	1001c528 	.word	0x1001c528
100133d0:	f1c3 0301 	rsb	r3, r3, #1
100133d4:	449b      	add	fp, r3
100133d6:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100133da:	9306      	str	r3, [sp, #24]
100133dc:	2367      	movs	r3, #103	@ 0x67
100133de:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
100133e2:	930e      	str	r3, [sp, #56]	@ 0x38
100133e4:	e57e      	b.n	10012ee4 <_vfprintf_r+0x16dc>
100133e6:	4e1b      	ldr	r6, [pc, #108]	@ (10013454 <_vfprintf_r+0x1c4c>)
100133e8:	e60f      	b.n	1001300a <_vfprintf_r+0x1802>
100133ea:	2302      	movs	r3, #2
100133ec:	931c      	str	r3, [sp, #112]	@ 0x70
100133ee:	f7ff bbfd 	b.w	10012bec <_vfprintf_r+0x13e4>
100133f2:	4a18      	ldr	r2, [pc, #96]	@ (10013454 <_vfprintf_r+0x1c4c>)
100133f4:	9215      	str	r2, [sp, #84]	@ 0x54
100133f6:	e52b      	b.n	10012e50 <_vfprintf_r+0x1648>
100133f8:	2170      	movs	r1, #112	@ 0x70
100133fa:	f7ff bbc0 	b.w	10012b7e <_vfprintf_r+0x1376>
100133fe:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10013402:	b92b      	cbnz	r3, 10013410 <_vfprintf_r+0x1c08>
10013404:	2301      	movs	r3, #1
10013406:	2266      	movs	r2, #102	@ 0x66
10013408:	9306      	str	r3, [sp, #24]
1001340a:	920e      	str	r2, [sp, #56]	@ 0x38
1001340c:	469b      	mov	fp, r3
1001340e:	e569      	b.n	10012ee4 <_vfprintf_r+0x16dc>
10013410:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10013412:	1c5f      	adds	r7, r3, #1
10013414:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10013416:	443b      	add	r3, r7
10013418:	469b      	mov	fp, r3
1001341a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1001341e:	9306      	str	r3, [sp, #24]
10013420:	2366      	movs	r3, #102	@ 0x66
10013422:	930e      	str	r3, [sp, #56]	@ 0x38
10013424:	e55e      	b.n	10012ee4 <_vfprintf_r+0x16dc>
10013426:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10013428:	7863      	ldrb	r3, [r4, #1]
1001342a:	460c      	mov	r4, r1
1001342c:	f852 1b04 	ldr.w	r1, [r2], #4
10013430:	920d      	str	r2, [sp, #52]	@ 0x34
10013432:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10013436:	9109      	str	r1, [sp, #36]	@ 0x24
10013438:	f7fe ba5e 	b.w	100118f8 <_vfprintf_r+0xf0>
1001343c:	2300      	movs	r3, #0
1001343e:	9314      	str	r3, [sp, #80]	@ 0x50
10013440:	9310      	str	r3, [sp, #64]	@ 0x40
10013442:	e7ad      	b.n	100133a0 <_vfprintf_r+0x1b98>
10013444:	e9dd 2b07 	ldrd	r2, fp, [sp, #28]
10013448:	8993      	ldrh	r3, [r2, #12]
1001344a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001344e:	8193      	strh	r3, [r2, #12]
10013450:	f7fe bb32 	b.w	10011ab8 <_vfprintf_r+0x2b0>
10013454:	1001c560 	.word	0x1001c560

10013458 <__sbprintf>:
10013458:	b5f0      	push	{r4, r5, r6, r7, lr}
1001345a:	461f      	mov	r7, r3
1001345c:	898b      	ldrh	r3, [r1, #12]
1001345e:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
10013462:	f023 0302 	bic.w	r3, r3, #2
10013466:	f8ad 300c 	strh.w	r3, [sp, #12]
1001346a:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001346c:	9319      	str	r3, [sp, #100]	@ 0x64
1001346e:	89cb      	ldrh	r3, [r1, #14]
10013470:	f8ad 300e 	strh.w	r3, [sp, #14]
10013474:	69cb      	ldr	r3, [r1, #28]
10013476:	9307      	str	r3, [sp, #28]
10013478:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1001347a:	9309      	str	r3, [sp, #36]	@ 0x24
1001347c:	ab1a      	add	r3, sp, #104	@ 0x68
1001347e:	9300      	str	r3, [sp, #0]
10013480:	9304      	str	r3, [sp, #16]
10013482:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10013486:	4615      	mov	r5, r2
10013488:	4606      	mov	r6, r0
1001348a:	9302      	str	r3, [sp, #8]
1001348c:	9305      	str	r3, [sp, #20]
1001348e:	a816      	add	r0, sp, #88	@ 0x58
10013490:	2300      	movs	r3, #0
10013492:	460c      	mov	r4, r1
10013494:	9306      	str	r3, [sp, #24]
10013496:	f002 f877 	bl	10015588 <__retarget_lock_init_recursive>
1001349a:	462a      	mov	r2, r5
1001349c:	463b      	mov	r3, r7
1001349e:	4669      	mov	r1, sp
100134a0:	4630      	mov	r0, r6
100134a2:	f7fe f9b1 	bl	10011808 <_vfprintf_r>
100134a6:	1e05      	subs	r5, r0, #0
100134a8:	db07      	blt.n	100134ba <__sbprintf+0x62>
100134aa:	4669      	mov	r1, sp
100134ac:	4630      	mov	r0, r6
100134ae:	f001 fb6d 	bl	10014b8c <_fflush_r>
100134b2:	2800      	cmp	r0, #0
100134b4:	bf18      	it	ne
100134b6:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
100134ba:	f8bd 300c 	ldrh.w	r3, [sp, #12]
100134be:	065b      	lsls	r3, r3, #25
100134c0:	d503      	bpl.n	100134ca <__sbprintf+0x72>
100134c2:	89a3      	ldrh	r3, [r4, #12]
100134c4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100134c8:	81a3      	strh	r3, [r4, #12]
100134ca:	9816      	ldr	r0, [sp, #88]	@ 0x58
100134cc:	f002 f85e 	bl	1001558c <__retarget_lock_close_recursive>
100134d0:	4628      	mov	r0, r5
100134d2:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
100134d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

100134d8 <__sprint_r.part.0>:
100134d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
100134dc:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
100134de:	049c      	lsls	r4, r3, #18
100134e0:	4690      	mov	r8, r2
100134e2:	d52e      	bpl.n	10013542 <__sprint_r.part.0+0x6a>
100134e4:	6893      	ldr	r3, [r2, #8]
100134e6:	6812      	ldr	r2, [r2, #0]
100134e8:	b34b      	cbz	r3, 1001353e <__sprint_r.part.0+0x66>
100134ea:	460d      	mov	r5, r1
100134ec:	4606      	mov	r6, r0
100134ee:	f102 0908 	add.w	r9, r2, #8
100134f2:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
100134f6:	ea5f 079a 	movs.w	r7, sl, lsr #2
100134fa:	d016      	beq.n	1001352a <__sprint_r.part.0+0x52>
100134fc:	f1a2 0b04 	sub.w	fp, r2, #4
10013500:	2400      	movs	r4, #0
10013502:	e001      	b.n	10013508 <__sprint_r.part.0+0x30>
10013504:	42a7      	cmp	r7, r4
10013506:	d00e      	beq.n	10013526 <__sprint_r.part.0+0x4e>
10013508:	f85b 1f04 	ldr.w	r1, [fp, #4]!
1001350c:	462a      	mov	r2, r5
1001350e:	4630      	mov	r0, r6
10013510:	f001 fe96 	bl	10015240 <_fputwc_r>
10013514:	1c43      	adds	r3, r0, #1
10013516:	f104 0401 	add.w	r4, r4, #1
1001351a:	d1f3      	bne.n	10013504 <__sprint_r.part.0+0x2c>
1001351c:	2300      	movs	r3, #0
1001351e:	e9c8 3301 	strd	r3, r3, [r8, #4]
10013522:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013526:	f8d8 3008 	ldr.w	r3, [r8, #8]
1001352a:	f02a 0a03 	bic.w	sl, sl, #3
1001352e:	eba3 030a 	sub.w	r3, r3, sl
10013532:	f8c8 3008 	str.w	r3, [r8, #8]
10013536:	f109 0908 	add.w	r9, r9, #8
1001353a:	2b00      	cmp	r3, #0
1001353c:	d1d9      	bne.n	100134f2 <__sprint_r.part.0+0x1a>
1001353e:	2000      	movs	r0, #0
10013540:	e7ec      	b.n	1001351c <__sprint_r.part.0+0x44>
10013542:	f001 fc3b 	bl	10014dbc <__sfvwrite_r>
10013546:	2300      	movs	r3, #0
10013548:	e9c8 3301 	strd	r3, r3, [r8, #4]
1001354c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

10013550 <__sprint_r>:
10013550:	b410      	push	{r4}
10013552:	6894      	ldr	r4, [r2, #8]
10013554:	b11c      	cbz	r4, 1001355e <__sprint_r+0xe>
10013556:	f85d 4b04 	ldr.w	r4, [sp], #4
1001355a:	f7ff bfbd 	b.w	100134d8 <__sprint_r.part.0>
1001355e:	4620      	mov	r0, r4
10013560:	6054      	str	r4, [r2, #4]
10013562:	f85d 4b04 	ldr.w	r4, [sp], #4
10013566:	4770      	bx	lr

10013568 <_vfiprintf_r>:
10013568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001356c:	b0c7      	sub	sp, #284	@ 0x11c
1001356e:	af16      	add	r7, sp, #88	@ 0x58
10013570:	4683      	mov	fp, r0
10013572:	9103      	str	r1, [sp, #12]
10013574:	9206      	str	r2, [sp, #24]
10013576:	2100      	movs	r1, #0
10013578:	2208      	movs	r2, #8
1001357a:	4638      	mov	r0, r7
1001357c:	461c      	mov	r4, r3
1001357e:	930a      	str	r3, [sp, #40]	@ 0x28
10013580:	f001 ff0e 	bl	100153a0 <memset>
10013584:	f1bb 0f00 	cmp.w	fp, #0
10013588:	d004      	beq.n	10013594 <_vfiprintf_r+0x2c>
1001358a:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
1001358e:	2b00      	cmp	r3, #0
10013590:	f000 86b8 	beq.w	10014304 <_vfiprintf_r+0xd9c>
10013594:	9a03      	ldr	r2, [sp, #12]
10013596:	6e53      	ldr	r3, [r2, #100]	@ 0x64
10013598:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
1001359c:	07db      	lsls	r3, r3, #31
1001359e:	d402      	bmi.n	100135a6 <_vfiprintf_r+0x3e>
100135a0:	0596      	lsls	r6, r2, #22
100135a2:	f140 859d 	bpl.w	100140e0 <_vfiprintf_r+0xb78>
100135a6:	0495      	lsls	r5, r2, #18
100135a8:	d407      	bmi.n	100135ba <_vfiprintf_r+0x52>
100135aa:	9903      	ldr	r1, [sp, #12]
100135ac:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
100135ae:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
100135b2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
100135b6:	818a      	strh	r2, [r1, #12]
100135b8:	664b      	str	r3, [r1, #100]	@ 0x64
100135ba:	0710      	lsls	r0, r2, #28
100135bc:	f140 80c9 	bpl.w	10013752 <_vfiprintf_r+0x1ea>
100135c0:	9b03      	ldr	r3, [sp, #12]
100135c2:	691b      	ldr	r3, [r3, #16]
100135c4:	2b00      	cmp	r3, #0
100135c6:	f000 80c4 	beq.w	10013752 <_vfiprintf_r+0x1ea>
100135ca:	f002 031a 	and.w	r3, r2, #26
100135ce:	2b0a      	cmp	r3, #10
100135d0:	f000 80ce 	beq.w	10013770 <_vfiprintf_r+0x208>
100135d4:	2300      	movs	r3, #0
100135d6:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
100135da:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
100135de:	aa1d      	add	r2, sp, #116	@ 0x74
100135e0:	f8df a904 	ldr.w	sl, [pc, #2308]	@ 10013ee8 <_vfiprintf_r+0x980>
100135e4:	930d      	str	r3, [sp, #52]	@ 0x34
100135e6:	921a      	str	r2, [sp, #104]	@ 0x68
100135e8:	4691      	mov	r9, r2
100135ea:	9310      	str	r3, [sp, #64]	@ 0x40
100135ec:	9307      	str	r3, [sp, #28]
100135ee:	9d06      	ldr	r5, [sp, #24]
100135f0:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
100135f4:	f001 ff5a 	bl	100154ac <__locale_mb_cur_max>
100135f8:	462a      	mov	r2, r5
100135fa:	4603      	mov	r3, r0
100135fc:	a914      	add	r1, sp, #80	@ 0x50
100135fe:	9700      	str	r7, [sp, #0]
10013600:	4658      	mov	r0, fp
10013602:	47a0      	blx	r4
10013604:	2800      	cmp	r0, #0
10013606:	f000 80d2 	beq.w	100137ae <_vfiprintf_r+0x246>
1001360a:	f2c0 80c8 	blt.w	1001379e <_vfiprintf_r+0x236>
1001360e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
10013610:	2a25      	cmp	r2, #37	@ 0x25
10013612:	4603      	mov	r3, r0
10013614:	d001      	beq.n	1001361a <_vfiprintf_r+0xb2>
10013616:	441d      	add	r5, r3
10013618:	e7ea      	b.n	100135f0 <_vfiprintf_r+0x88>
1001361a:	9b06      	ldr	r3, [sp, #24]
1001361c:	1aee      	subs	r6, r5, r3
1001361e:	4604      	mov	r4, r0
10013620:	f040 80c9 	bne.w	100137b6 <_vfiprintf_r+0x24e>
10013624:	2300      	movs	r3, #0
10013626:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
1001362a:	786a      	ldrb	r2, [r5, #1]
1001362c:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10013630:	9308      	str	r3, [sp, #32]
10013632:	1c6c      	adds	r4, r5, #1
10013634:	9105      	str	r1, [sp, #20]
10013636:	9302      	str	r3, [sp, #8]
10013638:	3401      	adds	r4, #1
1001363a:	f1a2 0320 	sub.w	r3, r2, #32
1001363e:	2b5a      	cmp	r3, #90	@ 0x5a
10013640:	f200 80ff 	bhi.w	10013842 <_vfiprintf_r+0x2da>
10013644:	e8df f013 	tbh	[pc, r3, lsl #1]
10013648:	00fd0300 	.word	0x00fd0300
1001364c:	02fa00fd 	.word	0x02fa00fd
10013650:	00fd00fd 	.word	0x00fd00fd
10013654:	006b00fd 	.word	0x006b00fd
10013658:	00fd00fd 	.word	0x00fd00fd
1001365c:	032a0215 	.word	0x032a0215
10013660:	022000fd 	.word	0x022000fd
10013664:	00fd0310 	.word	0x00fd0310
10013668:	005b030a 	.word	0x005b030a
1001366c:	005b005b 	.word	0x005b005b
10013670:	005b005b 	.word	0x005b005b
10013674:	005b005b 	.word	0x005b005b
10013678:	005b005b 	.word	0x005b005b
1001367c:	00fd00fd 	.word	0x00fd00fd
10013680:	00fd00fd 	.word	0x00fd00fd
10013684:	00fd00fd 	.word	0x00fd00fd
10013688:	00fd00fd 	.word	0x00fd00fd
1001368c:	01cb00fd 	.word	0x01cb00fd
10013690:	00fd025a 	.word	0x00fd025a
10013694:	00fd00fd 	.word	0x00fd00fd
10013698:	00fd00fd 	.word	0x00fd00fd
1001369c:	00fd00fd 	.word	0x00fd00fd
100136a0:	00fd00fd 	.word	0x00fd00fd
100136a4:	022600fd 	.word	0x022600fd
100136a8:	00fd00fd 	.word	0x00fd00fd
100136ac:	01a300fd 	.word	0x01a300fd
100136b0:	027300fd 	.word	0x027300fd
100136b4:	00fd00fd 	.word	0x00fd00fd
100136b8:	00fd058c 	.word	0x00fd058c
100136bc:	00fd00fd 	.word	0x00fd00fd
100136c0:	00fd00fd 	.word	0x00fd00fd
100136c4:	00fd00fd 	.word	0x00fd00fd
100136c8:	00fd00fd 	.word	0x00fd00fd
100136cc:	01cb00fd 	.word	0x01cb00fd
100136d0:	00fd01f0 	.word	0x00fd01f0
100136d4:	00fd00fd 	.word	0x00fd00fd
100136d8:	01f002c1 	.word	0x01f002c1
100136dc:	00fd007f 	.word	0x00fd007f
100136e0:	00fd032f 	.word	0x00fd032f
100136e4:	058902eb 	.word	0x058902eb
100136e8:	007f02ca 	.word	0x007f02ca
100136ec:	01a300fd 	.word	0x01a300fd
100136f0:	0586007d 	.word	0x0586007d
100136f4:	00fd00fd 	.word	0x00fd00fd
100136f8:	00fd05af 	.word	0x00fd05af
100136fc:	007d      	.short	0x007d
100136fe:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10013702:	2200      	movs	r2, #0
10013704:	4611      	mov	r1, r2
10013706:	f814 2b01 	ldrb.w	r2, [r4], #1
1001370a:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001370e:	eb03 0141 	add.w	r1, r3, r1, lsl #1
10013712:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10013716:	2b09      	cmp	r3, #9
10013718:	d9f5      	bls.n	10013706 <_vfiprintf_r+0x19e>
1001371a:	9108      	str	r1, [sp, #32]
1001371c:	e78d      	b.n	1001363a <_vfiprintf_r+0xd2>
1001371e:	4658      	mov	r0, fp
10013720:	f001 feca 	bl	100154b8 <_localeconv_r>
10013724:	6843      	ldr	r3, [r0, #4]
10013726:	9310      	str	r3, [sp, #64]	@ 0x40
10013728:	4618      	mov	r0, r3
1001372a:	f002 f829 	bl	10015780 <strlen>
1001372e:	900f      	str	r0, [sp, #60]	@ 0x3c
10013730:	4605      	mov	r5, r0
10013732:	4658      	mov	r0, fp
10013734:	f001 fec0 	bl	100154b8 <_localeconv_r>
10013738:	6883      	ldr	r3, [r0, #8]
1001373a:	930e      	str	r3, [sp, #56]	@ 0x38
1001373c:	2d00      	cmp	r5, #0
1001373e:	f040 84e3 	bne.w	10014108 <_vfiprintf_r+0xba0>
10013742:	7822      	ldrb	r2, [r4, #0]
10013744:	e778      	b.n	10013638 <_vfiprintf_r+0xd0>
10013746:	9b02      	ldr	r3, [sp, #8]
10013748:	7822      	ldrb	r2, [r4, #0]
1001374a:	f043 0320 	orr.w	r3, r3, #32
1001374e:	9302      	str	r3, [sp, #8]
10013750:	e772      	b.n	10013638 <_vfiprintf_r+0xd0>
10013752:	9d03      	ldr	r5, [sp, #12]
10013754:	4658      	mov	r0, fp
10013756:	4629      	mov	r1, r5
10013758:	f001 fcd4 	bl	10015104 <__swsetup_r>
1001375c:	2800      	cmp	r0, #0
1001375e:	f040 86a3 	bne.w	100144a8 <_vfiprintf_r+0xf40>
10013762:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
10013766:	f002 031a 	and.w	r3, r2, #26
1001376a:	2b0a      	cmp	r3, #10
1001376c:	f47f af32 	bne.w	100135d4 <_vfiprintf_r+0x6c>
10013770:	9903      	ldr	r1, [sp, #12]
10013772:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
10013776:	2b00      	cmp	r3, #0
10013778:	f6ff af2c 	blt.w	100135d4 <_vfiprintf_r+0x6c>
1001377c:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
1001377e:	07db      	lsls	r3, r3, #31
10013780:	d402      	bmi.n	10013788 <_vfiprintf_r+0x220>
10013782:	0597      	lsls	r7, r2, #22
10013784:	f140 865b 	bpl.w	1001443e <_vfiprintf_r+0xed6>
10013788:	9a06      	ldr	r2, [sp, #24]
1001378a:	9903      	ldr	r1, [sp, #12]
1001378c:	4623      	mov	r3, r4
1001378e:	4658      	mov	r0, fp
10013790:	f000 febe 	bl	10014510 <__sbprintf>
10013794:	9007      	str	r0, [sp, #28]
10013796:	9807      	ldr	r0, [sp, #28]
10013798:	b047      	add	sp, #284	@ 0x11c
1001379a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001379e:	2208      	movs	r2, #8
100137a0:	2100      	movs	r1, #0
100137a2:	4638      	mov	r0, r7
100137a4:	f001 fdfc 	bl	100153a0 <memset>
100137a8:	2301      	movs	r3, #1
100137aa:	441d      	add	r5, r3
100137ac:	e720      	b.n	100135f0 <_vfiprintf_r+0x88>
100137ae:	9b06      	ldr	r3, [sp, #24]
100137b0:	1aee      	subs	r6, r5, r3
100137b2:	4604      	mov	r4, r0
100137b4:	d012      	beq.n	100137dc <_vfiprintf_r+0x274>
100137b6:	9b06      	ldr	r3, [sp, #24]
100137b8:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
100137ba:	e9c9 3600 	strd	r3, r6, [r9]
100137be:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
100137c0:	3301      	adds	r3, #1
100137c2:	4432      	add	r2, r6
100137c4:	2b07      	cmp	r3, #7
100137c6:	921c      	str	r2, [sp, #112]	@ 0x70
100137c8:	931b      	str	r3, [sp, #108]	@ 0x6c
100137ca:	dc11      	bgt.n	100137f0 <_vfiprintf_r+0x288>
100137cc:	f109 0908 	add.w	r9, r9, #8
100137d0:	9b07      	ldr	r3, [sp, #28]
100137d2:	4433      	add	r3, r6
100137d4:	9307      	str	r3, [sp, #28]
100137d6:	2c00      	cmp	r4, #0
100137d8:	f47f af24 	bne.w	10013624 <_vfiprintf_r+0xbc>
100137dc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100137de:	2b00      	cmp	r3, #0
100137e0:	f040 864d 	bne.w	1001447e <_vfiprintf_r+0xf16>
100137e4:	9b03      	ldr	r3, [sp, #12]
100137e6:	2200      	movs	r2, #0
100137e8:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100137ec:	921b      	str	r2, [sp, #108]	@ 0x6c
100137ee:	e01c      	b.n	1001382a <_vfiprintf_r+0x2c2>
100137f0:	2a00      	cmp	r2, #0
100137f2:	f000 842d 	beq.w	10014050 <_vfiprintf_r+0xae8>
100137f6:	9903      	ldr	r1, [sp, #12]
100137f8:	aa1a      	add	r2, sp, #104	@ 0x68
100137fa:	4658      	mov	r0, fp
100137fc:	f7ff fe6c 	bl	100134d8 <__sprint_r.part.0>
10013800:	b980      	cbnz	r0, 10013824 <_vfiprintf_r+0x2bc>
10013802:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013806:	e7e3      	b.n	100137d0 <_vfiprintf_r+0x268>
10013808:	9903      	ldr	r1, [sp, #12]
1001380a:	aa1a      	add	r2, sp, #104	@ 0x68
1001380c:	4658      	mov	r0, fp
1001380e:	f7ff fe63 	bl	100134d8 <__sprint_r.part.0>
10013812:	2800      	cmp	r0, #0
10013814:	f000 80a6 	beq.w	10013964 <_vfiprintf_r+0x3fc>
10013818:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001381a:	b11b      	cbz	r3, 10013824 <_vfiprintf_r+0x2bc>
1001381c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1001381e:	4658      	mov	r0, fp
10013820:	f003 f8a8 	bl	10016974 <_free_r>
10013824:	9b03      	ldr	r3, [sp, #12]
10013826:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
1001382a:	9a03      	ldr	r2, [sp, #12]
1001382c:	6e52      	ldr	r2, [r2, #100]	@ 0x64
1001382e:	07d1      	lsls	r1, r2, #31
10013830:	f140 80a3 	bpl.w	1001397a <_vfiprintf_r+0x412>
10013834:	065b      	lsls	r3, r3, #25
10013836:	f100 8643 	bmi.w	100144c0 <_vfiprintf_r+0xf58>
1001383a:	9807      	ldr	r0, [sp, #28]
1001383c:	b047      	add	sp, #284	@ 0x11c
1001383e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10013842:	9406      	str	r4, [sp, #24]
10013844:	2a00      	cmp	r2, #0
10013846:	d0c9      	beq.n	100137dc <_vfiprintf_r+0x274>
10013848:	2300      	movs	r3, #0
1001384a:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001384e:	2301      	movs	r3, #1
10013850:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
10013854:	9304      	str	r3, [sp, #16]
10013856:	9309      	str	r3, [sp, #36]	@ 0x24
10013858:	ac2d      	add	r4, sp, #180	@ 0xb4
1001385a:	2300      	movs	r3, #0
1001385c:	930b      	str	r3, [sp, #44]	@ 0x2c
1001385e:	9305      	str	r3, [sp, #20]
10013860:	9b02      	ldr	r3, [sp, #8]
10013862:	f013 0302 	ands.w	r3, r3, #2
10013866:	d002      	beq.n	1001386e <_vfiprintf_r+0x306>
10013868:	9a04      	ldr	r2, [sp, #16]
1001386a:	3202      	adds	r2, #2
1001386c:	9204      	str	r2, [sp, #16]
1001386e:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10013872:	9d02      	ldr	r5, [sp, #8]
10013874:	1c50      	adds	r0, r2, #1
10013876:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
1001387a:	4601      	mov	r1, r0
1001387c:	950c      	str	r5, [sp, #48]	@ 0x30
1001387e:	d105      	bne.n	1001388c <_vfiprintf_r+0x324>
10013880:	9d08      	ldr	r5, [sp, #32]
10013882:	9e04      	ldr	r6, [sp, #16]
10013884:	1bad      	subs	r5, r5, r6
10013886:	2d00      	cmp	r5, #0
10013888:	f300 8332 	bgt.w	10013ef0 <_vfiprintf_r+0x988>
1001388c:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
10013890:	b188      	cbz	r0, 100138b6 <_vfiprintf_r+0x34e>
10013892:	2201      	movs	r2, #1
10013894:	f10c 0c01 	add.w	ip, ip, #1
10013898:	f8c9 2004 	str.w	r2, [r9, #4]
1001389c:	2907      	cmp	r1, #7
1001389e:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
100138a2:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
100138a6:	f8c9 2000 	str.w	r2, [r9]
100138aa:	f300 82e1 	bgt.w	10013e70 <_vfiprintf_r+0x908>
100138ae:	460a      	mov	r2, r1
100138b0:	f109 0908 	add.w	r9, r9, #8
100138b4:	3101      	adds	r1, #1
100138b6:	b1eb      	cbz	r3, 100138f4 <_vfiprintf_r+0x38c>
100138b8:	ab13      	add	r3, sp, #76	@ 0x4c
100138ba:	f10c 0c02 	add.w	ip, ip, #2
100138be:	f8c9 3000 	str.w	r3, [r9]
100138c2:	2907      	cmp	r1, #7
100138c4:	f04f 0302 	mov.w	r3, #2
100138c8:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
100138cc:	f8c9 3004 	str.w	r3, [r9, #4]
100138d0:	f340 82ec 	ble.w	10013eac <_vfiprintf_r+0x944>
100138d4:	f1bc 0f00 	cmp.w	ip, #0
100138d8:	f000 83db 	beq.w	10014092 <_vfiprintf_r+0xb2a>
100138dc:	9903      	ldr	r1, [sp, #12]
100138de:	aa1a      	add	r2, sp, #104	@ 0x68
100138e0:	4658      	mov	r0, fp
100138e2:	f7ff fdf9 	bl	100134d8 <__sprint_r.part.0>
100138e6:	2800      	cmp	r0, #0
100138e8:	d196      	bne.n	10013818 <_vfiprintf_r+0x2b0>
100138ea:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
100138ee:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100138f2:	1c51      	adds	r1, r2, #1
100138f4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100138f6:	2b80      	cmp	r3, #128	@ 0x80
100138f8:	f000 8213 	beq.w	10013d22 <_vfiprintf_r+0x7ba>
100138fc:	9b05      	ldr	r3, [sp, #20]
100138fe:	9809      	ldr	r0, [sp, #36]	@ 0x24
10013900:	1a1d      	subs	r5, r3, r0
10013902:	2d00      	cmp	r5, #0
10013904:	f300 8268 	bgt.w	10013dd8 <_vfiprintf_r+0x870>
10013908:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001390a:	f8c9 4000 	str.w	r4, [r9]
1001390e:	eb02 030c 	add.w	r3, r2, ip
10013912:	2907      	cmp	r1, #7
10013914:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
10013918:	f8c9 2004 	str.w	r2, [r9, #4]
1001391c:	f340 81fe 	ble.w	10013d1c <_vfiprintf_r+0x7b4>
10013920:	2b00      	cmp	r3, #0
10013922:	f000 832c 	beq.w	10013f7e <_vfiprintf_r+0xa16>
10013926:	9903      	ldr	r1, [sp, #12]
10013928:	aa1a      	add	r2, sp, #104	@ 0x68
1001392a:	4658      	mov	r0, fp
1001392c:	f7ff fdd4 	bl	100134d8 <__sprint_r.part.0>
10013930:	2800      	cmp	r0, #0
10013932:	f47f af71 	bne.w	10013818 <_vfiprintf_r+0x2b0>
10013936:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10013938:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001393c:	9a02      	ldr	r2, [sp, #8]
1001393e:	0750      	lsls	r0, r2, #29
10013940:	d505      	bpl.n	1001394e <_vfiprintf_r+0x3e6>
10013942:	9a08      	ldr	r2, [sp, #32]
10013944:	9904      	ldr	r1, [sp, #16]
10013946:	1a54      	subs	r4, r2, r1
10013948:	2c00      	cmp	r4, #0
1001394a:	f300 8323 	bgt.w	10013f94 <_vfiprintf_r+0xa2c>
1001394e:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
10013952:	9804      	ldr	r0, [sp, #16]
10013954:	4281      	cmp	r1, r0
10013956:	bfac      	ite	ge
10013958:	1852      	addge	r2, r2, r1
1001395a:	1812      	addlt	r2, r2, r0
1001395c:	9207      	str	r2, [sp, #28]
1001395e:	2b00      	cmp	r3, #0
10013960:	f47f af52 	bne.w	10013808 <_vfiprintf_r+0x2a0>
10013964:	2300      	movs	r3, #0
10013966:	931b      	str	r3, [sp, #108]	@ 0x6c
10013968:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001396a:	b11b      	cbz	r3, 10013974 <_vfiprintf_r+0x40c>
1001396c:	4619      	mov	r1, r3
1001396e:	4658      	mov	r0, fp
10013970:	f003 f800 	bl	10016974 <_free_r>
10013974:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013978:	e639      	b.n	100135ee <_vfiprintf_r+0x86>
1001397a:	059a      	lsls	r2, r3, #22
1001397c:	f53f af5a 	bmi.w	10013834 <_vfiprintf_r+0x2cc>
10013980:	9c03      	ldr	r4, [sp, #12]
10013982:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013984:	f001 fe06 	bl	10015594 <__retarget_lock_release_recursive>
10013988:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001398c:	e752      	b.n	10013834 <_vfiprintf_r+0x2cc>
1001398e:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10013990:	9406      	str	r4, [sp, #24]
10013992:	f856 4b04 	ldr.w	r4, [r6], #4
10013996:	2300      	movs	r3, #0
10013998:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
1001399c:	2c00      	cmp	r4, #0
1001399e:	f000 84c9 	beq.w	10014334 <_vfiprintf_r+0xdcc>
100139a2:	2a53      	cmp	r2, #83	@ 0x53
100139a4:	f000 8422 	beq.w	100141ec <_vfiprintf_r+0xc84>
100139a8:	9b02      	ldr	r3, [sp, #8]
100139aa:	f013 0510 	ands.w	r5, r3, #16
100139ae:	f040 841d 	bne.w	100141ec <_vfiprintf_r+0xc84>
100139b2:	9b05      	ldr	r3, [sp, #20]
100139b4:	1c5a      	adds	r2, r3, #1
100139b6:	f000 854e 	beq.w	10014456 <_vfiprintf_r+0xeee>
100139ba:	461a      	mov	r2, r3
100139bc:	4629      	mov	r1, r5
100139be:	4620      	mov	r0, r4
100139c0:	f001 fdee 	bl	100155a0 <memchr>
100139c4:	900b      	str	r0, [sp, #44]	@ 0x2c
100139c6:	2800      	cmp	r0, #0
100139c8:	f000 853e 	beq.w	10014448 <_vfiprintf_r+0xee0>
100139cc:	1b03      	subs	r3, r0, r4
100139ce:	9309      	str	r3, [sp, #36]	@ 0x24
100139d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
100139d4:	9505      	str	r5, [sp, #20]
100139d6:	960a      	str	r6, [sp, #40]	@ 0x28
100139d8:	9304      	str	r3, [sp, #16]
100139da:	950b      	str	r5, [sp, #44]	@ 0x2c
100139dc:	e18d      	b.n	10013cfa <_vfiprintf_r+0x792>
100139de:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100139e0:	9406      	str	r4, [sp, #24]
100139e2:	2a43      	cmp	r2, #67	@ 0x43
100139e4:	f103 0504 	add.w	r5, r3, #4
100139e8:	d003      	beq.n	100139f2 <_vfiprintf_r+0x48a>
100139ea:	9b02      	ldr	r3, [sp, #8]
100139ec:	06de      	lsls	r6, r3, #27
100139ee:	f140 83e5 	bpl.w	100141bc <_vfiprintf_r+0xc54>
100139f2:	2208      	movs	r2, #8
100139f4:	2100      	movs	r1, #0
100139f6:	a818      	add	r0, sp, #96	@ 0x60
100139f8:	f001 fcd2 	bl	100153a0 <memset>
100139fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100139fe:	ac2d      	add	r4, sp, #180	@ 0xb4
10013a00:	681a      	ldr	r2, [r3, #0]
10013a02:	4621      	mov	r1, r4
10013a04:	ab18      	add	r3, sp, #96	@ 0x60
10013a06:	4658      	mov	r0, fp
10013a08:	f001 ff26 	bl	10015858 <_wcrtomb_r>
10013a0c:	4603      	mov	r3, r0
10013a0e:	3301      	adds	r3, #1
10013a10:	9009      	str	r0, [sp, #36]	@ 0x24
10013a12:	f000 8541 	beq.w	10014498 <_vfiprintf_r+0xf30>
10013a16:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10013a18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10013a1c:	9304      	str	r3, [sp, #16]
10013a1e:	2300      	movs	r3, #0
10013a20:	950a      	str	r5, [sp, #40]	@ 0x28
10013a22:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10013a26:	e718      	b.n	1001385a <_vfiprintf_r+0x2f2>
10013a28:	9b02      	ldr	r3, [sp, #8]
10013a2a:	9406      	str	r4, [sp, #24]
10013a2c:	069c      	lsls	r4, r3, #26
10013a2e:	d56d      	bpl.n	10013b0c <_vfiprintf_r+0x5a4>
10013a30:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013a32:	3307      	adds	r3, #7
10013a34:	f023 0307 	bic.w	r3, r3, #7
10013a38:	4619      	mov	r1, r3
10013a3a:	685a      	ldr	r2, [r3, #4]
10013a3c:	f851 3b08 	ldr.w	r3, [r1], #8
10013a40:	910a      	str	r1, [sp, #40]	@ 0x28
10013a42:	4611      	mov	r1, r2
10013a44:	2a00      	cmp	r2, #0
10013a46:	f2c0 8137 	blt.w	10013cb8 <_vfiprintf_r+0x750>
10013a4a:	9a05      	ldr	r2, [sp, #20]
10013a4c:	3201      	adds	r2, #1
10013a4e:	f000 8140 	beq.w	10013cd2 <_vfiprintf_r+0x76a>
10013a52:	9a02      	ldr	r2, [sp, #8]
10013a54:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
10013a58:	9202      	str	r2, [sp, #8]
10013a5a:	ea53 0201 	orrs.w	r2, r3, r1
10013a5e:	f040 8138 	bne.w	10013cd2 <_vfiprintf_r+0x76a>
10013a62:	9b05      	ldr	r3, [sp, #20]
10013a64:	2b00      	cmp	r3, #0
10013a66:	f040 8508 	bne.w	1001447a <_vfiprintf_r+0xf12>
10013a6a:	9304      	str	r3, [sp, #16]
10013a6c:	9309      	str	r3, [sp, #36]	@ 0x24
10013a6e:	ac46      	add	r4, sp, #280	@ 0x118
10013a70:	e141      	b.n	10013cf6 <_vfiprintf_r+0x78e>
10013a72:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013a74:	f853 2b04 	ldr.w	r2, [r3], #4
10013a78:	9208      	str	r2, [sp, #32]
10013a7a:	2a00      	cmp	r2, #0
10013a7c:	f280 8328 	bge.w	100140d0 <_vfiprintf_r+0xb68>
10013a80:	9a08      	ldr	r2, [sp, #32]
10013a82:	930a      	str	r3, [sp, #40]	@ 0x28
10013a84:	4252      	negs	r2, r2
10013a86:	9208      	str	r2, [sp, #32]
10013a88:	9b02      	ldr	r3, [sp, #8]
10013a8a:	7822      	ldrb	r2, [r4, #0]
10013a8c:	f043 0304 	orr.w	r3, r3, #4
10013a90:	9302      	str	r3, [sp, #8]
10013a92:	e5d1      	b.n	10013638 <_vfiprintf_r+0xd0>
10013a94:	9b02      	ldr	r3, [sp, #8]
10013a96:	9406      	str	r4, [sp, #24]
10013a98:	f043 0210 	orr.w	r2, r3, #16
10013a9c:	f012 0120 	ands.w	r1, r2, #32
10013aa0:	f000 82e8 	beq.w	10014074 <_vfiprintf_r+0xb0c>
10013aa4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013aa6:	3307      	adds	r3, #7
10013aa8:	f023 0307 	bic.w	r3, r3, #7
10013aac:	4618      	mov	r0, r3
10013aae:	6859      	ldr	r1, [r3, #4]
10013ab0:	f850 3b08 	ldr.w	r3, [r0], #8
10013ab4:	900a      	str	r0, [sp, #40]	@ 0x28
10013ab6:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
10013aba:	9402      	str	r4, [sp, #8]
10013abc:	9c05      	ldr	r4, [sp, #20]
10013abe:	2000      	movs	r0, #0
10013ac0:	3401      	adds	r4, #1
10013ac2:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
10013ac6:	d05d      	beq.n	10013b84 <_vfiprintf_r+0x61c>
10013ac8:	ea53 0401 	orrs.w	r4, r3, r1
10013acc:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10013ad0:	f040 8414 	bne.w	100142fc <_vfiprintf_r+0xd94>
10013ad4:	9c02      	ldr	r4, [sp, #8]
10013ad6:	9202      	str	r2, [sp, #8]
10013ad8:	9b05      	ldr	r3, [sp, #20]
10013ada:	2b00      	cmp	r3, #0
10013adc:	d14a      	bne.n	10013b74 <_vfiprintf_r+0x60c>
10013ade:	2800      	cmp	r0, #0
10013ae0:	f040 82f1 	bne.w	100140c6 <_vfiprintf_r+0xb5e>
10013ae4:	f014 0201 	ands.w	r2, r4, #1
10013ae8:	9209      	str	r2, [sp, #36]	@ 0x24
10013aea:	f000 82f5 	beq.w	100140d8 <_vfiprintf_r+0xb70>
10013aee:	2330      	movs	r3, #48	@ 0x30
10013af0:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10013af4:	9204      	str	r2, [sp, #16]
10013af6:	f20d 1417 	addw	r4, sp, #279	@ 0x117
10013afa:	e0fc      	b.n	10013cf6 <_vfiprintf_r+0x78e>
10013afc:	9b02      	ldr	r3, [sp, #8]
10013afe:	9406      	str	r4, [sp, #24]
10013b00:	f043 0310 	orr.w	r3, r3, #16
10013b04:	9302      	str	r3, [sp, #8]
10013b06:	9b02      	ldr	r3, [sp, #8]
10013b08:	069c      	lsls	r4, r3, #26
10013b0a:	d491      	bmi.n	10013a30 <_vfiprintf_r+0x4c8>
10013b0c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10013b0e:	f852 3b04 	ldr.w	r3, [r2], #4
10013b12:	920a      	str	r2, [sp, #40]	@ 0x28
10013b14:	9a02      	ldr	r2, [sp, #8]
10013b16:	06d0      	lsls	r0, r2, #27
10013b18:	f100 82f3 	bmi.w	10014102 <_vfiprintf_r+0xb9a>
10013b1c:	9a02      	ldr	r2, [sp, #8]
10013b1e:	0651      	lsls	r1, r2, #25
10013b20:	f140 82eb 	bpl.w	100140fa <_vfiprintf_r+0xb92>
10013b24:	f343 31c0 	sbfx	r1, r3, #15, #1
10013b28:	460a      	mov	r2, r1
10013b2a:	b21b      	sxth	r3, r3
10013b2c:	e78a      	b.n	10013a44 <_vfiprintf_r+0x4dc>
10013b2e:	9b02      	ldr	r3, [sp, #8]
10013b30:	9406      	str	r4, [sp, #24]
10013b32:	f043 0410 	orr.w	r4, r3, #16
10013b36:	f014 0120 	ands.w	r1, r4, #32
10013b3a:	f000 828c 	beq.w	10014056 <_vfiprintf_r+0xaee>
10013b3e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013b40:	3307      	adds	r3, #7
10013b42:	f023 0307 	bic.w	r3, r3, #7
10013b46:	461a      	mov	r2, r3
10013b48:	6859      	ldr	r1, [r3, #4]
10013b4a:	f852 3b08 	ldr.w	r3, [r2], #8
10013b4e:	920a      	str	r2, [sp, #40]	@ 0x28
10013b50:	2200      	movs	r2, #0
10013b52:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
10013b56:	9a05      	ldr	r2, [sp, #20]
10013b58:	3201      	adds	r2, #1
10013b5a:	f000 83d1 	beq.w	10014300 <_vfiprintf_r+0xd98>
10013b5e:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
10013b62:	9202      	str	r2, [sp, #8]
10013b64:	ea53 0201 	orrs.w	r2, r3, r1
10013b68:	f040 80b3 	bne.w	10013cd2 <_vfiprintf_r+0x76a>
10013b6c:	9b05      	ldr	r3, [sp, #20]
10013b6e:	2001      	movs	r0, #1
10013b70:	2b00      	cmp	r3, #0
10013b72:	d0b4      	beq.n	10013ade <_vfiprintf_r+0x576>
10013b74:	2801      	cmp	r0, #1
10013b76:	f000 8480 	beq.w	1001447a <_vfiprintf_r+0xf12>
10013b7a:	2300      	movs	r3, #0
10013b7c:	2802      	cmp	r0, #2
10013b7e:	4619      	mov	r1, r3
10013b80:	f000 8199 	beq.w	10013eb6 <_vfiprintf_r+0x94e>
10013b84:	ac46      	add	r4, sp, #280	@ 0x118
10013b86:	f003 0207 	and.w	r2, r3, #7
10013b8a:	08db      	lsrs	r3, r3, #3
10013b8c:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
10013b90:	08c9      	lsrs	r1, r1, #3
10013b92:	3230      	adds	r2, #48	@ 0x30
10013b94:	ea53 0501 	orrs.w	r5, r3, r1
10013b98:	4620      	mov	r0, r4
10013b9a:	f804 2d01 	strb.w	r2, [r4, #-1]!
10013b9e:	d1f2      	bne.n	10013b86 <_vfiprintf_r+0x61e>
10013ba0:	9b02      	ldr	r3, [sp, #8]
10013ba2:	07dd      	lsls	r5, r3, #31
10013ba4:	f140 8195 	bpl.w	10013ed2 <_vfiprintf_r+0x96a>
10013ba8:	2a30      	cmp	r2, #48	@ 0x30
10013baa:	f000 8192 	beq.w	10013ed2 <_vfiprintf_r+0x96a>
10013bae:	2330      	movs	r3, #48	@ 0x30
10013bb0:	9a05      	ldr	r2, [sp, #20]
10013bb2:	f804 3c01 	strb.w	r3, [r4, #-1]
10013bb6:	3802      	subs	r0, #2
10013bb8:	ab46      	add	r3, sp, #280	@ 0x118
10013bba:	1a1b      	subs	r3, r3, r0
10013bbc:	429a      	cmp	r2, r3
10013bbe:	bfb8      	it	lt
10013bc0:	461a      	movlt	r2, r3
10013bc2:	9309      	str	r3, [sp, #36]	@ 0x24
10013bc4:	4604      	mov	r4, r0
10013bc6:	9204      	str	r2, [sp, #16]
10013bc8:	e095      	b.n	10013cf6 <_vfiprintf_r+0x78e>
10013bca:	7822      	ldrb	r2, [r4, #0]
10013bcc:	9b02      	ldr	r3, [sp, #8]
10013bce:	2a68      	cmp	r2, #104	@ 0x68
10013bd0:	f000 839d 	beq.w	1001430e <_vfiprintf_r+0xda6>
10013bd4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013bd8:	9302      	str	r3, [sp, #8]
10013bda:	e52d      	b.n	10013638 <_vfiprintf_r+0xd0>
10013bdc:	9b02      	ldr	r3, [sp, #8]
10013bde:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10013be0:	9406      	str	r4, [sp, #24]
10013be2:	f043 0302 	orr.w	r3, r3, #2
10013be6:	9302      	str	r3, [sp, #8]
10013be8:	f852 3b04 	ldr.w	r3, [r2], #4
10013bec:	920a      	str	r2, [sp, #40]	@ 0x28
10013bee:	f647 0230 	movw	r2, #30768	@ 0x7830
10013bf2:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
10013bf6:	4abb      	ldr	r2, [pc, #748]	@ (10013ee4 <_vfiprintf_r+0x97c>)
10013bf8:	920d      	str	r2, [sp, #52]	@ 0x34
10013bfa:	2100      	movs	r1, #0
10013bfc:	2200      	movs	r2, #0
10013bfe:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
10013c02:	9a05      	ldr	r2, [sp, #20]
10013c04:	3201      	adds	r2, #1
10013c06:	f000 8156 	beq.w	10013eb6 <_vfiprintf_r+0x94e>
10013c0a:	9c02      	ldr	r4, [sp, #8]
10013c0c:	ea53 0001 	orrs.w	r0, r3, r1
10013c10:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
10013c14:	9202      	str	r2, [sp, #8]
10013c16:	f040 814e 	bne.w	10013eb6 <_vfiprintf_r+0x94e>
10013c1a:	2002      	movs	r0, #2
10013c1c:	e75c      	b.n	10013ad8 <_vfiprintf_r+0x570>
10013c1e:	9b02      	ldr	r3, [sp, #8]
10013c20:	9406      	str	r4, [sp, #24]
10013c22:	069b      	lsls	r3, r3, #26
10013c24:	f140 827f 	bpl.w	10014126 <_vfiprintf_r+0xbbe>
10013c28:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013c2a:	9a07      	ldr	r2, [sp, #28]
10013c2c:	681b      	ldr	r3, [r3, #0]
10013c2e:	601a      	str	r2, [r3, #0]
10013c30:	17d2      	asrs	r2, r2, #31
10013c32:	605a      	str	r2, [r3, #4]
10013c34:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013c36:	3304      	adds	r3, #4
10013c38:	930a      	str	r3, [sp, #40]	@ 0x28
10013c3a:	e4d8      	b.n	100135ee <_vfiprintf_r+0x86>
10013c3c:	9b02      	ldr	r3, [sp, #8]
10013c3e:	7822      	ldrb	r2, [r4, #0]
10013c40:	f043 0301 	orr.w	r3, r3, #1
10013c44:	9302      	str	r3, [sp, #8]
10013c46:	e4f7      	b.n	10013638 <_vfiprintf_r+0xd0>
10013c48:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
10013c4c:	7822      	ldrb	r2, [r4, #0]
10013c4e:	2b00      	cmp	r3, #0
10013c50:	f47f acf2 	bne.w	10013638 <_vfiprintf_r+0xd0>
10013c54:	2320      	movs	r3, #32
10013c56:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10013c5a:	e4ed      	b.n	10013638 <_vfiprintf_r+0xd0>
10013c5c:	9b02      	ldr	r3, [sp, #8]
10013c5e:	7822      	ldrb	r2, [r4, #0]
10013c60:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10013c64:	9302      	str	r3, [sp, #8]
10013c66:	e4e7      	b.n	10013638 <_vfiprintf_r+0xd0>
10013c68:	4621      	mov	r1, r4
10013c6a:	f811 2b01 	ldrb.w	r2, [r1], #1
10013c6e:	2a2a      	cmp	r2, #42	@ 0x2a
10013c70:	f000 8433 	beq.w	100144da <_vfiprintf_r+0xf72>
10013c74:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10013c78:	2b09      	cmp	r3, #9
10013c7a:	460c      	mov	r4, r1
10013c7c:	f200 83f6 	bhi.w	1001446c <_vfiprintf_r+0xf04>
10013c80:	2200      	movs	r2, #0
10013c82:	4611      	mov	r1, r2
10013c84:	f814 2b01 	ldrb.w	r2, [r4], #1
10013c88:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10013c8c:	eb03 0141 	add.w	r1, r3, r1, lsl #1
10013c90:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10013c94:	2b09      	cmp	r3, #9
10013c96:	d9f5      	bls.n	10013c84 <_vfiprintf_r+0x71c>
10013c98:	9105      	str	r1, [sp, #20]
10013c9a:	e4ce      	b.n	1001363a <_vfiprintf_r+0xd2>
10013c9c:	232b      	movs	r3, #43	@ 0x2b
10013c9e:	7822      	ldrb	r2, [r4, #0]
10013ca0:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10013ca4:	e4c8      	b.n	10013638 <_vfiprintf_r+0xd0>
10013ca6:	7822      	ldrb	r2, [r4, #0]
10013ca8:	9b02      	ldr	r3, [sp, #8]
10013caa:	2a6c      	cmp	r2, #108	@ 0x6c
10013cac:	f000 8336 	beq.w	1001431c <_vfiprintf_r+0xdb4>
10013cb0:	f043 0310 	orr.w	r3, r3, #16
10013cb4:	9302      	str	r3, [sp, #8]
10013cb6:	e4bf      	b.n	10013638 <_vfiprintf_r+0xd0>
10013cb8:	222d      	movs	r2, #45	@ 0x2d
10013cba:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
10013cbe:	9a05      	ldr	r2, [sp, #20]
10013cc0:	425b      	negs	r3, r3
10013cc2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10013cc6:	3201      	adds	r2, #1
10013cc8:	d003      	beq.n	10013cd2 <_vfiprintf_r+0x76a>
10013cca:	9a02      	ldr	r2, [sp, #8]
10013ccc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
10013cd0:	9202      	str	r2, [sp, #8]
10013cd2:	2b0a      	cmp	r3, #10
10013cd4:	f171 0200 	sbcs.w	r2, r1, #0
10013cd8:	f080 82bd 	bcs.w	10014256 <_vfiprintf_r+0xcee>
10013cdc:	3330      	adds	r3, #48	@ 0x30
10013cde:	b2db      	uxtb	r3, r3
10013ce0:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10013ce4:	9b05      	ldr	r3, [sp, #20]
10013ce6:	2b01      	cmp	r3, #1
10013ce8:	bfb8      	it	lt
10013cea:	2301      	movlt	r3, #1
10013cec:	9304      	str	r3, [sp, #16]
10013cee:	2301      	movs	r3, #1
10013cf0:	9309      	str	r3, [sp, #36]	@ 0x24
10013cf2:	f20d 1417 	addw	r4, sp, #279	@ 0x117
10013cf6:	2300      	movs	r3, #0
10013cf8:	930b      	str	r3, [sp, #44]	@ 0x2c
10013cfa:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
10013cfe:	2b00      	cmp	r3, #0
10013d00:	f43f adae 	beq.w	10013860 <_vfiprintf_r+0x2f8>
10013d04:	9b04      	ldr	r3, [sp, #16]
10013d06:	3301      	adds	r3, #1
10013d08:	9304      	str	r3, [sp, #16]
10013d0a:	e5a9      	b.n	10013860 <_vfiprintf_r+0x2f8>
10013d0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10013d0e:	941d      	str	r4, [sp, #116]	@ 0x74
10013d10:	2201      	movs	r2, #1
10013d12:	931e      	str	r3, [sp, #120]	@ 0x78
10013d14:	931c      	str	r3, [sp, #112]	@ 0x70
10013d16:	921b      	str	r2, [sp, #108]	@ 0x6c
10013d18:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013d1c:	f109 0908 	add.w	r9, r9, #8
10013d20:	e60c      	b.n	1001393c <_vfiprintf_r+0x3d4>
10013d22:	9b08      	ldr	r3, [sp, #32]
10013d24:	9804      	ldr	r0, [sp, #16]
10013d26:	1a1d      	subs	r5, r3, r0
10013d28:	2d00      	cmp	r5, #0
10013d2a:	f77f ade7 	ble.w	100138fc <_vfiprintf_r+0x394>
10013d2e:	2d10      	cmp	r5, #16
10013d30:	f340 83cb 	ble.w	100144ca <_vfiprintf_r+0xf62>
10013d34:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 10013eec <_vfiprintf_r+0x984>
10013d38:	4643      	mov	r3, r8
10013d3a:	2610      	movs	r6, #16
10013d3c:	46a0      	mov	r8, r4
10013d3e:	4661      	mov	r1, ip
10013d40:	461c      	mov	r4, r3
10013d42:	e007      	b.n	10013d54 <_vfiprintf_r+0x7ec>
10013d44:	f102 0c02 	add.w	ip, r2, #2
10013d48:	f109 0908 	add.w	r9, r9, #8
10013d4c:	4602      	mov	r2, r0
10013d4e:	3d10      	subs	r5, #16
10013d50:	2d10      	cmp	r5, #16
10013d52:	dd1a      	ble.n	10013d8a <_vfiprintf_r+0x822>
10013d54:	1c50      	adds	r0, r2, #1
10013d56:	3110      	adds	r1, #16
10013d58:	2807      	cmp	r0, #7
10013d5a:	e9c9 4600 	strd	r4, r6, [r9]
10013d5e:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
10013d62:	ddef      	ble.n	10013d44 <_vfiprintf_r+0x7dc>
10013d64:	aa1a      	add	r2, sp, #104	@ 0x68
10013d66:	2900      	cmp	r1, #0
10013d68:	d07c      	beq.n	10013e64 <_vfiprintf_r+0x8fc>
10013d6a:	9903      	ldr	r1, [sp, #12]
10013d6c:	4658      	mov	r0, fp
10013d6e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013d72:	f7ff fbb1 	bl	100134d8 <__sprint_r.part.0>
10013d76:	2800      	cmp	r0, #0
10013d78:	f47f ad4e 	bne.w	10013818 <_vfiprintf_r+0x2b0>
10013d7c:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
10013d80:	3d10      	subs	r5, #16
10013d82:	2d10      	cmp	r5, #16
10013d84:	f102 0c01 	add.w	ip, r2, #1
10013d88:	dce4      	bgt.n	10013d54 <_vfiprintf_r+0x7ec>
10013d8a:	4623      	mov	r3, r4
10013d8c:	4660      	mov	r0, ip
10013d8e:	4644      	mov	r4, r8
10013d90:	468c      	mov	ip, r1
10013d92:	4698      	mov	r8, r3
10013d94:	44ac      	add	ip, r5
10013d96:	2807      	cmp	r0, #7
10013d98:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
10013d9c:	f8c9 8000 	str.w	r8, [r9]
10013da0:	f8c9 5004 	str.w	r5, [r9, #4]
10013da4:	f340 81a4 	ble.w	100140f0 <_vfiprintf_r+0xb88>
10013da8:	f1bc 0f00 	cmp.w	ip, #0
10013dac:	f000 8327 	beq.w	100143fe <_vfiprintf_r+0xe96>
10013db0:	9903      	ldr	r1, [sp, #12]
10013db2:	aa1a      	add	r2, sp, #104	@ 0x68
10013db4:	4658      	mov	r0, fp
10013db6:	f7ff fb8f 	bl	100134d8 <__sprint_r.part.0>
10013dba:	2800      	cmp	r0, #0
10013dbc:	f47f ad2c 	bne.w	10013818 <_vfiprintf_r+0x2b0>
10013dc0:	9b05      	ldr	r3, [sp, #20]
10013dc2:	9809      	ldr	r0, [sp, #36]	@ 0x24
10013dc4:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10013dc8:	1a1d      	subs	r5, r3, r0
10013dca:	2d00      	cmp	r5, #0
10013dcc:	f102 0101 	add.w	r1, r2, #1
10013dd0:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013dd4:	f77f ad98 	ble.w	10013908 <_vfiprintf_r+0x3a0>
10013dd8:	2d10      	cmp	r5, #16
10013dda:	f8df 8110 	ldr.w	r8, [pc, #272]	@ 10013eec <_vfiprintf_r+0x984>
10013dde:	dd2d      	ble.n	10013e3c <_vfiprintf_r+0x8d4>
10013de0:	462b      	mov	r3, r5
10013de2:	2610      	movs	r6, #16
10013de4:	4625      	mov	r5, r4
10013de6:	4660      	mov	r0, ip
10013de8:	461c      	mov	r4, r3
10013dea:	e007      	b.n	10013dfc <_vfiprintf_r+0x894>
10013dec:	f102 0c02 	add.w	ip, r2, #2
10013df0:	f109 0908 	add.w	r9, r9, #8
10013df4:	460a      	mov	r2, r1
10013df6:	3c10      	subs	r4, #16
10013df8:	2c10      	cmp	r4, #16
10013dfa:	dd1a      	ble.n	10013e32 <_vfiprintf_r+0x8ca>
10013dfc:	1c51      	adds	r1, r2, #1
10013dfe:	4b3b      	ldr	r3, [pc, #236]	@ (10013eec <_vfiprintf_r+0x984>)
10013e00:	3010      	adds	r0, #16
10013e02:	2907      	cmp	r1, #7
10013e04:	e9c9 3600 	strd	r3, r6, [r9]
10013e08:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
10013e0c:	ddee      	ble.n	10013dec <_vfiprintf_r+0x884>
10013e0e:	aa1a      	add	r2, sp, #104	@ 0x68
10013e10:	b310      	cbz	r0, 10013e58 <_vfiprintf_r+0x8f0>
10013e12:	9903      	ldr	r1, [sp, #12]
10013e14:	4658      	mov	r0, fp
10013e16:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013e1a:	f7ff fb5d 	bl	100134d8 <__sprint_r.part.0>
10013e1e:	2800      	cmp	r0, #0
10013e20:	f47f acfa 	bne.w	10013818 <_vfiprintf_r+0x2b0>
10013e24:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
10013e28:	3c10      	subs	r4, #16
10013e2a:	2c10      	cmp	r4, #16
10013e2c:	f102 0c01 	add.w	ip, r2, #1
10013e30:	dce4      	bgt.n	10013dfc <_vfiprintf_r+0x894>
10013e32:	4623      	mov	r3, r4
10013e34:	4661      	mov	r1, ip
10013e36:	462c      	mov	r4, r5
10013e38:	4684      	mov	ip, r0
10013e3a:	461d      	mov	r5, r3
10013e3c:	44ac      	add	ip, r5
10013e3e:	2907      	cmp	r1, #7
10013e40:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10013e44:	f8c9 8000 	str.w	r8, [r9]
10013e48:	f8c9 5004 	str.w	r5, [r9, #4]
10013e4c:	f300 80ed 	bgt.w	1001402a <_vfiprintf_r+0xac2>
10013e50:	f109 0908 	add.w	r9, r9, #8
10013e54:	3101      	adds	r1, #1
10013e56:	e557      	b.n	10013908 <_vfiprintf_r+0x3a0>
10013e58:	f04f 0c01 	mov.w	ip, #1
10013e5c:	4602      	mov	r2, r0
10013e5e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013e62:	e7c8      	b.n	10013df6 <_vfiprintf_r+0x88e>
10013e64:	f04f 0c01 	mov.w	ip, #1
10013e68:	460a      	mov	r2, r1
10013e6a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013e6e:	e76e      	b.n	10013d4e <_vfiprintf_r+0x7e6>
10013e70:	f1bc 0f00 	cmp.w	ip, #0
10013e74:	d00f      	beq.n	10013e96 <_vfiprintf_r+0x92e>
10013e76:	9903      	ldr	r1, [sp, #12]
10013e78:	9311      	str	r3, [sp, #68]	@ 0x44
10013e7a:	aa1a      	add	r2, sp, #104	@ 0x68
10013e7c:	4658      	mov	r0, fp
10013e7e:	f7ff fb2b 	bl	100134d8 <__sprint_r.part.0>
10013e82:	2800      	cmp	r0, #0
10013e84:	f47f acc8 	bne.w	10013818 <_vfiprintf_r+0x2b0>
10013e88:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10013e8c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10013e8e:	1c51      	adds	r1, r2, #1
10013e90:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013e94:	e50f      	b.n	100138b6 <_vfiprintf_r+0x34e>
10013e96:	2b00      	cmp	r3, #0
10013e98:	f000 8156 	beq.w	10014148 <_vfiprintf_r+0xbe0>
10013e9c:	2302      	movs	r3, #2
10013e9e:	931e      	str	r3, [sp, #120]	@ 0x78
10013ea0:	469c      	mov	ip, r3
10013ea2:	ab13      	add	r3, sp, #76	@ 0x4c
10013ea4:	931d      	str	r3, [sp, #116]	@ 0x74
10013ea6:	2101      	movs	r1, #1
10013ea8:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013eac:	460a      	mov	r2, r1
10013eae:	f109 0908 	add.w	r9, r9, #8
10013eb2:	3101      	adds	r1, #1
10013eb4:	e51e      	b.n	100138f4 <_vfiprintf_r+0x38c>
10013eb6:	980d      	ldr	r0, [sp, #52]	@ 0x34
10013eb8:	ac46      	add	r4, sp, #280	@ 0x118
10013eba:	f003 020f 	and.w	r2, r3, #15
10013ebe:	091b      	lsrs	r3, r3, #4
10013ec0:	5c82      	ldrb	r2, [r0, r2]
10013ec2:	f804 2d01 	strb.w	r2, [r4, #-1]!
10013ec6:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
10013eca:	0909      	lsrs	r1, r1, #4
10013ecc:	ea53 0201 	orrs.w	r2, r3, r1
10013ed0:	d1f3      	bne.n	10013eba <_vfiprintf_r+0x952>
10013ed2:	9a05      	ldr	r2, [sp, #20]
10013ed4:	ab46      	add	r3, sp, #280	@ 0x118
10013ed6:	1b1b      	subs	r3, r3, r4
10013ed8:	429a      	cmp	r2, r3
10013eda:	bfb8      	it	lt
10013edc:	461a      	movlt	r2, r3
10013ede:	9309      	str	r3, [sp, #36]	@ 0x24
10013ee0:	9204      	str	r2, [sp, #16]
10013ee2:	e708      	b.n	10013cf6 <_vfiprintf_r+0x78e>
10013ee4:	1001c52c 	.word	0x1001c52c
10013ee8:	20000454 	.word	0x20000454
10013eec:	1001c580 	.word	0x1001c580
10013ef0:	2d10      	cmp	r5, #16
10013ef2:	f340 82bf 	ble.w	10014474 <_vfiprintf_r+0xf0c>
10013ef6:	4eae      	ldr	r6, [pc, #696]	@ (100141b0 <_vfiprintf_r+0xc48>)
10013ef8:	9311      	str	r3, [sp, #68]	@ 0x44
10013efa:	4649      	mov	r1, r9
10013efc:	f04f 0810 	mov.w	r8, #16
10013f00:	46a1      	mov	r9, r4
10013f02:	4634      	mov	r4, r6
10013f04:	4666      	mov	r6, ip
10013f06:	e007      	b.n	10013f18 <_vfiprintf_r+0x9b0>
10013f08:	f102 0e02 	add.w	lr, r2, #2
10013f0c:	3108      	adds	r1, #8
10013f0e:	4602      	mov	r2, r0
10013f10:	3d10      	subs	r5, #16
10013f12:	2d10      	cmp	r5, #16
10013f14:	dd18      	ble.n	10013f48 <_vfiprintf_r+0x9e0>
10013f16:	1c50      	adds	r0, r2, #1
10013f18:	3610      	adds	r6, #16
10013f1a:	2807      	cmp	r0, #7
10013f1c:	e9c1 4800 	strd	r4, r8, [r1]
10013f20:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
10013f24:	ddf0      	ble.n	10013f08 <_vfiprintf_r+0x9a0>
10013f26:	9903      	ldr	r1, [sp, #12]
10013f28:	aa1a      	add	r2, sp, #104	@ 0x68
10013f2a:	4658      	mov	r0, fp
10013f2c:	b316      	cbz	r6, 10013f74 <_vfiprintf_r+0xa0c>
10013f2e:	f7ff fad3 	bl	100134d8 <__sprint_r.part.0>
10013f32:	2800      	cmp	r0, #0
10013f34:	f47f ac70 	bne.w	10013818 <_vfiprintf_r+0x2b0>
10013f38:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
10013f3c:	3d10      	subs	r5, #16
10013f3e:	2d10      	cmp	r5, #16
10013f40:	f102 0e01 	add.w	lr, r2, #1
10013f44:	a91d      	add	r1, sp, #116	@ 0x74
10013f46:	dce6      	bgt.n	10013f16 <_vfiprintf_r+0x9ae>
10013f48:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10013f4a:	46b4      	mov	ip, r6
10013f4c:	4626      	mov	r6, r4
10013f4e:	464c      	mov	r4, r9
10013f50:	4689      	mov	r9, r1
10013f52:	44ac      	add	ip, r5
10013f54:	f1be 0f07 	cmp.w	lr, #7
10013f58:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
10013f5c:	f8c9 6000 	str.w	r6, [r9]
10013f60:	f8c9 5004 	str.w	r5, [r9, #4]
10013f64:	f300 809a 	bgt.w	1001409c <_vfiprintf_r+0xb34>
10013f68:	f109 0908 	add.w	r9, r9, #8
10013f6c:	f10e 0101 	add.w	r1, lr, #1
10013f70:	4672      	mov	r2, lr
10013f72:	e48b      	b.n	1001388c <_vfiprintf_r+0x324>
10013f74:	4632      	mov	r2, r6
10013f76:	f04f 0e01 	mov.w	lr, #1
10013f7a:	a91d      	add	r1, sp, #116	@ 0x74
10013f7c:	e7c8      	b.n	10013f10 <_vfiprintf_r+0x9a8>
10013f7e:	9a02      	ldr	r2, [sp, #8]
10013f80:	931b      	str	r3, [sp, #108]	@ 0x6c
10013f82:	0754      	lsls	r4, r2, #29
10013f84:	d548      	bpl.n	10014018 <_vfiprintf_r+0xab0>
10013f86:	9a08      	ldr	r2, [sp, #32]
10013f88:	9904      	ldr	r1, [sp, #16]
10013f8a:	1a54      	subs	r4, r2, r1
10013f8c:	2c00      	cmp	r4, #0
10013f8e:	dd43      	ble.n	10014018 <_vfiprintf_r+0xab0>
10013f90:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013f94:	2c10      	cmp	r4, #16
10013f96:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10013f98:	f340 827b 	ble.w	10014492 <_vfiprintf_r+0xf2a>
10013f9c:	4e84      	ldr	r6, [pc, #528]	@ (100141b0 <_vfiprintf_r+0xc48>)
10013f9e:	f8dd 800c 	ldr.w	r8, [sp, #12]
10013fa2:	2510      	movs	r5, #16
10013fa4:	e006      	b.n	10013fb4 <_vfiprintf_r+0xa4c>
10013fa6:	1c88      	adds	r0, r1, #2
10013fa8:	f109 0908 	add.w	r9, r9, #8
10013fac:	4611      	mov	r1, r2
10013fae:	3c10      	subs	r4, #16
10013fb0:	2c10      	cmp	r4, #16
10013fb2:	dd19      	ble.n	10013fe8 <_vfiprintf_r+0xa80>
10013fb4:	1c4a      	adds	r2, r1, #1
10013fb6:	3310      	adds	r3, #16
10013fb8:	2a07      	cmp	r2, #7
10013fba:	e9c9 6500 	strd	r6, r5, [r9]
10013fbe:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
10013fc2:	ddf0      	ble.n	10013fa6 <_vfiprintf_r+0xa3e>
10013fc4:	aa1a      	add	r2, sp, #104	@ 0x68
10013fc6:	b313      	cbz	r3, 1001400e <_vfiprintf_r+0xaa6>
10013fc8:	4641      	mov	r1, r8
10013fca:	4658      	mov	r0, fp
10013fcc:	f7ff fa84 	bl	100134d8 <__sprint_r.part.0>
10013fd0:	2800      	cmp	r0, #0
10013fd2:	f47f ac21 	bne.w	10013818 <_vfiprintf_r+0x2b0>
10013fd6:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
10013fda:	3c10      	subs	r4, #16
10013fdc:	2c10      	cmp	r4, #16
10013fde:	f101 0001 	add.w	r0, r1, #1
10013fe2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013fe6:	dce5      	bgt.n	10013fb4 <_vfiprintf_r+0xa4c>
10013fe8:	4423      	add	r3, r4
10013fea:	2807      	cmp	r0, #7
10013fec:	e9c9 6400 	strd	r6, r4, [r9]
10013ff0:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
10013ff4:	f77f acab 	ble.w	1001394e <_vfiprintf_r+0x3e6>
10013ff8:	b173      	cbz	r3, 10014018 <_vfiprintf_r+0xab0>
10013ffa:	9903      	ldr	r1, [sp, #12]
10013ffc:	aa1a      	add	r2, sp, #104	@ 0x68
10013ffe:	4658      	mov	r0, fp
10014000:	f7ff fa6a 	bl	100134d8 <__sprint_r.part.0>
10014004:	2800      	cmp	r0, #0
10014006:	f47f ac07 	bne.w	10013818 <_vfiprintf_r+0x2b0>
1001400a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
1001400c:	e49f      	b.n	1001394e <_vfiprintf_r+0x3e6>
1001400e:	2001      	movs	r0, #1
10014010:	4619      	mov	r1, r3
10014012:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10014016:	e7ca      	b.n	10013fae <_vfiprintf_r+0xa46>
10014018:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
1001401c:	9904      	ldr	r1, [sp, #16]
1001401e:	428a      	cmp	r2, r1
10014020:	bfac      	ite	ge
10014022:	189b      	addge	r3, r3, r2
10014024:	185b      	addlt	r3, r3, r1
10014026:	9307      	str	r3, [sp, #28]
10014028:	e49c      	b.n	10013964 <_vfiprintf_r+0x3fc>
1001402a:	f1bc 0f00 	cmp.w	ip, #0
1001402e:	f43f ae6d 	beq.w	10013d0c <_vfiprintf_r+0x7a4>
10014032:	9903      	ldr	r1, [sp, #12]
10014034:	aa1a      	add	r2, sp, #104	@ 0x68
10014036:	4658      	mov	r0, fp
10014038:	f7ff fa4e 	bl	100134d8 <__sprint_r.part.0>
1001403c:	2800      	cmp	r0, #0
1001403e:	f47f abeb 	bne.w	10013818 <_vfiprintf_r+0x2b0>
10014042:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10014044:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
10014048:	3101      	adds	r1, #1
1001404a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001404e:	e45b      	b.n	10013908 <_vfiprintf_r+0x3a0>
10014050:	921b      	str	r2, [sp, #108]	@ 0x6c
10014052:	f7ff bbd6 	b.w	10013802 <_vfiprintf_r+0x29a>
10014056:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014058:	f852 3b04 	ldr.w	r3, [r2], #4
1001405c:	920a      	str	r2, [sp, #40]	@ 0x28
1001405e:	f014 0210 	ands.w	r2, r4, #16
10014062:	f47f ad75 	bne.w	10013b50 <_vfiprintf_r+0x5e8>
10014066:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
1001406a:	f000 816d 	beq.w	10014348 <_vfiprintf_r+0xde0>
1001406e:	b29b      	uxth	r3, r3
10014070:	4611      	mov	r1, r2
10014072:	e56d      	b.n	10013b50 <_vfiprintf_r+0x5e8>
10014074:	980a      	ldr	r0, [sp, #40]	@ 0x28
10014076:	f850 3b04 	ldr.w	r3, [r0], #4
1001407a:	900a      	str	r0, [sp, #40]	@ 0x28
1001407c:	f012 0010 	ands.w	r0, r2, #16
10014080:	f47f ad19 	bne.w	10013ab6 <_vfiprintf_r+0x54e>
10014084:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
10014088:	f000 8166 	beq.w	10014358 <_vfiprintf_r+0xdf0>
1001408c:	b29b      	uxth	r3, r3
1001408e:	4601      	mov	r1, r0
10014090:	e511      	b.n	10013ab6 <_vfiprintf_r+0x54e>
10014092:	2101      	movs	r1, #1
10014094:	4662      	mov	r2, ip
10014096:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001409a:	e42b      	b.n	100138f4 <_vfiprintf_r+0x38c>
1001409c:	f1bc 0f00 	cmp.w	ip, #0
100140a0:	f000 8095 	beq.w	100141ce <_vfiprintf_r+0xc66>
100140a4:	9903      	ldr	r1, [sp, #12]
100140a6:	9311      	str	r3, [sp, #68]	@ 0x44
100140a8:	aa1a      	add	r2, sp, #104	@ 0x68
100140aa:	4658      	mov	r0, fp
100140ac:	f7ff fa14 	bl	100134d8 <__sprint_r.part.0>
100140b0:	2800      	cmp	r0, #0
100140b2:	f47f abb1 	bne.w	10013818 <_vfiprintf_r+0x2b0>
100140b6:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
100140ba:	9b11      	ldr	r3, [sp, #68]	@ 0x44
100140bc:	1c51      	adds	r1, r2, #1
100140be:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100140c2:	f7ff bbe3 	b.w	1001388c <_vfiprintf_r+0x324>
100140c6:	9b05      	ldr	r3, [sp, #20]
100140c8:	9304      	str	r3, [sp, #16]
100140ca:	9309      	str	r3, [sp, #36]	@ 0x24
100140cc:	ac46      	add	r4, sp, #280	@ 0x118
100140ce:	e612      	b.n	10013cf6 <_vfiprintf_r+0x78e>
100140d0:	7822      	ldrb	r2, [r4, #0]
100140d2:	930a      	str	r3, [sp, #40]	@ 0x28
100140d4:	f7ff bab0 	b.w	10013638 <_vfiprintf_r+0xd0>
100140d8:	9b05      	ldr	r3, [sp, #20]
100140da:	9304      	str	r3, [sp, #16]
100140dc:	ac46      	add	r4, sp, #280	@ 0x118
100140de:	e60a      	b.n	10013cf6 <_vfiprintf_r+0x78e>
100140e0:	9d03      	ldr	r5, [sp, #12]
100140e2:	6da8      	ldr	r0, [r5, #88]	@ 0x58
100140e4:	f001 fa54 	bl	10015590 <__retarget_lock_acquire_recursive>
100140e8:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
100140ec:	f7ff ba5b 	b.w	100135a6 <_vfiprintf_r+0x3e>
100140f0:	f109 0908 	add.w	r9, r9, #8
100140f4:	1c41      	adds	r1, r0, #1
100140f6:	4602      	mov	r2, r0
100140f8:	e400      	b.n	100138fc <_vfiprintf_r+0x394>
100140fa:	9a02      	ldr	r2, [sp, #8]
100140fc:	0592      	lsls	r2, r2, #22
100140fe:	f100 8184 	bmi.w	1001440a <_vfiprintf_r+0xea2>
10014102:	17d9      	asrs	r1, r3, #31
10014104:	460a      	mov	r2, r1
10014106:	e49d      	b.n	10013a44 <_vfiprintf_r+0x4dc>
10014108:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001410a:	7822      	ldrb	r2, [r4, #0]
1001410c:	2b00      	cmp	r3, #0
1001410e:	f43f aa93 	beq.w	10013638 <_vfiprintf_r+0xd0>
10014112:	781b      	ldrb	r3, [r3, #0]
10014114:	2b00      	cmp	r3, #0
10014116:	f43f aa8f 	beq.w	10013638 <_vfiprintf_r+0xd0>
1001411a:	9b02      	ldr	r3, [sp, #8]
1001411c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
10014120:	9302      	str	r3, [sp, #8]
10014122:	f7ff ba89 	b.w	10013638 <_vfiprintf_r+0xd0>
10014126:	9b02      	ldr	r3, [sp, #8]
10014128:	06de      	lsls	r6, r3, #27
1001412a:	f100 80fe 	bmi.w	1001432a <_vfiprintf_r+0xdc2>
1001412e:	9b02      	ldr	r3, [sp, #8]
10014130:	065d      	lsls	r5, r3, #25
10014132:	f100 8176 	bmi.w	10014422 <_vfiprintf_r+0xeba>
10014136:	9b02      	ldr	r3, [sp, #8]
10014138:	059c      	lsls	r4, r3, #22
1001413a:	f140 80f6 	bpl.w	1001432a <_vfiprintf_r+0xdc2>
1001413e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10014140:	9a07      	ldr	r2, [sp, #28]
10014142:	681b      	ldr	r3, [r3, #0]
10014144:	701a      	strb	r2, [r3, #0]
10014146:	e575      	b.n	10013c34 <_vfiprintf_r+0x6cc>
10014148:	4662      	mov	r2, ip
1001414a:	2101      	movs	r1, #1
1001414c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10014150:	f7ff bbd0 	b.w	100138f4 <_vfiprintf_r+0x38c>
10014154:	9406      	str	r4, [sp, #24]
10014156:	9c02      	ldr	r4, [sp, #8]
10014158:	e4ed      	b.n	10013b36 <_vfiprintf_r+0x5ce>
1001415a:	9a02      	ldr	r2, [sp, #8]
1001415c:	9406      	str	r4, [sp, #24]
1001415e:	e49d      	b.n	10013a9c <_vfiprintf_r+0x534>
10014160:	4b14      	ldr	r3, [pc, #80]	@ (100141b4 <_vfiprintf_r+0xc4c>)
10014162:	9406      	str	r4, [sp, #24]
10014164:	930d      	str	r3, [sp, #52]	@ 0x34
10014166:	9b02      	ldr	r3, [sp, #8]
10014168:	f013 0120 	ands.w	r1, r3, #32
1001416c:	d063      	beq.n	10014236 <_vfiprintf_r+0xcce>
1001416e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10014170:	3307      	adds	r3, #7
10014172:	f023 0307 	bic.w	r3, r3, #7
10014176:	4618      	mov	r0, r3
10014178:	6859      	ldr	r1, [r3, #4]
1001417a:	f850 3b08 	ldr.w	r3, [r0], #8
1001417e:	900a      	str	r0, [sp, #40]	@ 0x28
10014180:	9c02      	ldr	r4, [sp, #8]
10014182:	07e6      	lsls	r6, r4, #31
10014184:	d50a      	bpl.n	1001419c <_vfiprintf_r+0xc34>
10014186:	ea53 0001 	orrs.w	r0, r3, r1
1001418a:	d007      	beq.n	1001419c <_vfiprintf_r+0xc34>
1001418c:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
10014190:	f044 0202 	orr.w	r2, r4, #2
10014194:	9202      	str	r2, [sp, #8]
10014196:	2230      	movs	r2, #48	@ 0x30
10014198:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
1001419c:	9a02      	ldr	r2, [sp, #8]
1001419e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
100141a2:	9202      	str	r2, [sp, #8]
100141a4:	e52a      	b.n	10013bfc <_vfiprintf_r+0x694>
100141a6:	4b04      	ldr	r3, [pc, #16]	@ (100141b8 <_vfiprintf_r+0xc50>)
100141a8:	9406      	str	r4, [sp, #24]
100141aa:	930d      	str	r3, [sp, #52]	@ 0x34
100141ac:	e7db      	b.n	10014166 <_vfiprintf_r+0xbfe>
100141ae:	bf00      	nop
100141b0:	1001c590 	.word	0x1001c590
100141b4:	1001c540 	.word	0x1001c540
100141b8:	1001c52c 	.word	0x1001c52c
100141bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100141be:	681b      	ldr	r3, [r3, #0]
100141c0:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
100141c4:	2301      	movs	r3, #1
100141c6:	9304      	str	r3, [sp, #16]
100141c8:	9309      	str	r3, [sp, #36]	@ 0x24
100141ca:	ac2d      	add	r4, sp, #180	@ 0xb4
100141cc:	e427      	b.n	10013a1e <_vfiprintf_r+0x4b6>
100141ce:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
100141d2:	2a00      	cmp	r2, #0
100141d4:	f000 811f 	beq.w	10014416 <_vfiprintf_r+0xeae>
100141d8:	2101      	movs	r1, #1
100141da:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
100141de:	911e      	str	r1, [sp, #120]	@ 0x78
100141e0:	921d      	str	r2, [sp, #116]	@ 0x74
100141e2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100141e6:	468c      	mov	ip, r1
100141e8:	f7ff bb61 	b.w	100138ae <_vfiprintf_r+0x346>
100141ec:	2208      	movs	r2, #8
100141ee:	2100      	movs	r1, #0
100141f0:	a818      	add	r0, sp, #96	@ 0x60
100141f2:	9415      	str	r4, [sp, #84]	@ 0x54
100141f4:	f001 f8d4 	bl	100153a0 <memset>
100141f8:	9b05      	ldr	r3, [sp, #20]
100141fa:	1c58      	adds	r0, r3, #1
100141fc:	f000 80ba 	beq.w	10014374 <_vfiprintf_r+0xe0c>
10014200:	2500      	movs	r5, #0
10014202:	9404      	str	r4, [sp, #16]
10014204:	4698      	mov	r8, r3
10014206:	462c      	mov	r4, r5
10014208:	e00c      	b.n	10014224 <_vfiprintf_r+0xcbc>
1001420a:	a92d      	add	r1, sp, #180	@ 0xb4
1001420c:	4658      	mov	r0, fp
1001420e:	f001 fb23 	bl	10015858 <_wcrtomb_r>
10014212:	1c41      	adds	r1, r0, #1
10014214:	4420      	add	r0, r4
10014216:	f000 813f 	beq.w	10014498 <_vfiprintf_r+0xf30>
1001421a:	4540      	cmp	r0, r8
1001421c:	dc08      	bgt.n	10014230 <_vfiprintf_r+0xcc8>
1001421e:	f000 8158 	beq.w	100144d2 <_vfiprintf_r+0xf6a>
10014222:	4604      	mov	r4, r0
10014224:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10014226:	5952      	ldr	r2, [r2, r5]
10014228:	ab18      	add	r3, sp, #96	@ 0x60
1001422a:	3504      	adds	r5, #4
1001422c:	2a00      	cmp	r2, #0
1001422e:	d1ec      	bne.n	1001420a <_vfiprintf_r+0xca2>
10014230:	9409      	str	r4, [sp, #36]	@ 0x24
10014232:	9c04      	ldr	r4, [sp, #16]
10014234:	e0ac      	b.n	10014390 <_vfiprintf_r+0xe28>
10014236:	980a      	ldr	r0, [sp, #40]	@ 0x28
10014238:	f850 3b04 	ldr.w	r3, [r0], #4
1001423c:	900a      	str	r0, [sp, #40]	@ 0x28
1001423e:	9802      	ldr	r0, [sp, #8]
10014240:	f010 0010 	ands.w	r0, r0, #16
10014244:	d19c      	bne.n	10014180 <_vfiprintf_r+0xc18>
10014246:	9902      	ldr	r1, [sp, #8]
10014248:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
1001424c:	f000 808b 	beq.w	10014366 <_vfiprintf_r+0xdfe>
10014250:	b29b      	uxth	r3, r3
10014252:	4601      	mov	r1, r0
10014254:	e794      	b.n	10014180 <_vfiprintf_r+0xc18>
10014256:	9a02      	ldr	r2, [sp, #8]
10014258:	f8cd 9010 	str.w	r9, [sp, #16]
1001425c:	ac46      	add	r4, sp, #280	@ 0x118
1001425e:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
10014262:	46a1      	mov	r9, r4
10014264:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10014268:	4ea5      	ldr	r6, [pc, #660]	@ (10014500 <_vfiprintf_r+0xf98>)
1001426a:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
1001426e:	f04f 0c00 	mov.w	ip, #0
10014272:	4614      	mov	r4, r2
10014274:	e005      	b.n	10014282 <_vfiprintf_r+0xd1a>
10014276:	2b0a      	cmp	r3, #10
10014278:	f171 0100 	sbcs.w	r1, r1, #0
1001427c:	d336      	bcc.n	100142ec <_vfiprintf_r+0xd84>
1001427e:	4643      	mov	r3, r8
10014280:	4629      	mov	r1, r5
10014282:	185a      	adds	r2, r3, r1
10014284:	f142 0200 	adc.w	r2, r2, #0
10014288:	fba6 0502 	umull	r0, r5, r6, r2
1001428c:	f025 0003 	bic.w	r0, r5, #3
10014290:	eb00 0095 	add.w	r0, r0, r5, lsr #2
10014294:	1a12      	subs	r2, r2, r0
10014296:	1a98      	subs	r0, r3, r2
10014298:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
1001429c:	f161 0e00 	sbc.w	lr, r1, #0
100142a0:	fb05 f500 	mul.w	r5, r5, r0
100142a4:	fb06 550e 	mla	r5, r6, lr, r5
100142a8:	fba0 8006 	umull	r8, r0, r0, r6
100142ac:	4405      	add	r5, r0
100142ae:	f008 0e01 	and.w	lr, r8, #1
100142b2:	2005      	movs	r0, #5
100142b4:	fbae 0e00 	umull	r0, lr, lr, r0
100142b8:	1880      	adds	r0, r0, r2
100142ba:	ea4f 0858 	mov.w	r8, r8, lsr #1
100142be:	3030      	adds	r0, #48	@ 0x30
100142c0:	f809 0c01 	strb.w	r0, [r9, #-1]
100142c4:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
100142c8:	f10c 0c01 	add.w	ip, ip, #1
100142cc:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
100142d0:	086d      	lsrs	r5, r5, #1
100142d2:	2c00      	cmp	r4, #0
100142d4:	d0cf      	beq.n	10014276 <_vfiprintf_r+0xd0e>
100142d6:	f89b 2000 	ldrb.w	r2, [fp]
100142da:	4562      	cmp	r2, ip
100142dc:	d1cb      	bne.n	10014276 <_vfiprintf_r+0xd0e>
100142de:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
100142e2:	d0c8      	beq.n	10014276 <_vfiprintf_r+0xd0e>
100142e4:	2b0a      	cmp	r3, #10
100142e6:	f171 0100 	sbcs.w	r1, r1, #0
100142ea:	d272      	bcs.n	100143d2 <_vfiprintf_r+0xe6a>
100142ec:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
100142f0:	464c      	mov	r4, r9
100142f2:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
100142f6:	f8dd 9010 	ldr.w	r9, [sp, #16]
100142fa:	e5ea      	b.n	10013ed2 <_vfiprintf_r+0x96a>
100142fc:	9202      	str	r2, [sp, #8]
100142fe:	e441      	b.n	10013b84 <_vfiprintf_r+0x61c>
10014300:	9402      	str	r4, [sp, #8]
10014302:	e4e6      	b.n	10013cd2 <_vfiprintf_r+0x76a>
10014304:	4658      	mov	r0, fp
10014306:	f000 fd2f 	bl	10014d68 <__sinit>
1001430a:	f7ff b943 	b.w	10013594 <_vfiprintf_r+0x2c>
1001430e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
10014312:	7862      	ldrb	r2, [r4, #1]
10014314:	9302      	str	r3, [sp, #8]
10014316:	3401      	adds	r4, #1
10014318:	f7ff b98e 	b.w	10013638 <_vfiprintf_r+0xd0>
1001431c:	f043 0320 	orr.w	r3, r3, #32
10014320:	7862      	ldrb	r2, [r4, #1]
10014322:	9302      	str	r3, [sp, #8]
10014324:	3401      	adds	r4, #1
10014326:	f7ff b987 	b.w	10013638 <_vfiprintf_r+0xd0>
1001432a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001432c:	9a07      	ldr	r2, [sp, #28]
1001432e:	681b      	ldr	r3, [r3, #0]
10014330:	601a      	str	r2, [r3, #0]
10014332:	e47f      	b.n	10013c34 <_vfiprintf_r+0x6cc>
10014334:	9b05      	ldr	r3, [sp, #20]
10014336:	4c73      	ldr	r4, [pc, #460]	@ (10014504 <_vfiprintf_r+0xf9c>)
10014338:	2b06      	cmp	r3, #6
1001433a:	bf28      	it	cs
1001433c:	2306      	movcs	r3, #6
1001433e:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
10014342:	9304      	str	r3, [sp, #16]
10014344:	f7ff ba89 	b.w	1001385a <_vfiprintf_r+0x2f2>
10014348:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
1001434c:	f43f ac00 	beq.w	10013b50 <_vfiprintf_r+0x5e8>
10014350:	b2db      	uxtb	r3, r3
10014352:	4601      	mov	r1, r0
10014354:	f7ff bbfc 	b.w	10013b50 <_vfiprintf_r+0x5e8>
10014358:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
1001435c:	bf1c      	itt	ne
1001435e:	b2db      	uxtbne	r3, r3
10014360:	4621      	movne	r1, r4
10014362:	f7ff bba8 	b.w	10013ab6 <_vfiprintf_r+0x54e>
10014366:	9902      	ldr	r1, [sp, #8]
10014368:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
1001436c:	bf1c      	itt	ne
1001436e:	b2db      	uxtbne	r3, r3
10014370:	4621      	movne	r1, r4
10014372:	e705      	b.n	10014180 <_vfiprintf_r+0xc18>
10014374:	ab18      	add	r3, sp, #96	@ 0x60
10014376:	9300      	str	r3, [sp, #0]
10014378:	2300      	movs	r3, #0
1001437a:	4619      	mov	r1, r3
1001437c:	aa15      	add	r2, sp, #84	@ 0x54
1001437e:	4658      	mov	r0, fp
10014380:	f001 fa90 	bl	100158a4 <_wcsrtombs_r>
10014384:	4603      	mov	r3, r0
10014386:	3301      	adds	r3, #1
10014388:	9009      	str	r0, [sp, #36]	@ 0x24
1001438a:	f000 8085 	beq.w	10014498 <_vfiprintf_r+0xf30>
1001438e:	9415      	str	r4, [sp, #84]	@ 0x54
10014390:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10014392:	b373      	cbz	r3, 100143f2 <_vfiprintf_r+0xe8a>
10014394:	2b63      	cmp	r3, #99	@ 0x63
10014396:	dc49      	bgt.n	1001442c <_vfiprintf_r+0xec4>
10014398:	2300      	movs	r3, #0
1001439a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001439c:	ac2d      	add	r4, sp, #180	@ 0xb4
1001439e:	2208      	movs	r2, #8
100143a0:	2100      	movs	r1, #0
100143a2:	a818      	add	r0, sp, #96	@ 0x60
100143a4:	f000 fffc 	bl	100153a0 <memset>
100143a8:	9d09      	ldr	r5, [sp, #36]	@ 0x24
100143aa:	ab18      	add	r3, sp, #96	@ 0x60
100143ac:	9300      	str	r3, [sp, #0]
100143ae:	aa15      	add	r2, sp, #84	@ 0x54
100143b0:	462b      	mov	r3, r5
100143b2:	4621      	mov	r1, r4
100143b4:	4658      	mov	r0, fp
100143b6:	f001 fa75 	bl	100158a4 <_wcsrtombs_r>
100143ba:	4285      	cmp	r5, r0
100143bc:	f040 8098 	bne.w	100144f0 <_vfiprintf_r+0xf88>
100143c0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100143c2:	960a      	str	r6, [sp, #40]	@ 0x28
100143c4:	2300      	movs	r3, #0
100143c6:	54a3      	strb	r3, [r4, r2]
100143c8:	9305      	str	r3, [sp, #20]
100143ca:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
100143ce:	9304      	str	r3, [sp, #16]
100143d0:	e493      	b.n	10013cfa <_vfiprintf_r+0x792>
100143d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100143d4:	9910      	ldr	r1, [sp, #64]	@ 0x40
100143d6:	eba9 0903 	sub.w	r9, r9, r3
100143da:	461a      	mov	r2, r3
100143dc:	4648      	mov	r0, r9
100143de:	f001 f831 	bl	10015444 <strncpy>
100143e2:	f89b 3001 	ldrb.w	r3, [fp, #1]
100143e6:	b10b      	cbz	r3, 100143ec <_vfiprintf_r+0xe84>
100143e8:	f10b 0b01 	add.w	fp, fp, #1
100143ec:	f04f 0c00 	mov.w	ip, #0
100143f0:	e745      	b.n	1001427e <_vfiprintf_r+0xd16>
100143f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100143f4:	960a      	str	r6, [sp, #40]	@ 0x28
100143f6:	e9cd 3304 	strd	r3, r3, [sp, #16]
100143fa:	930b      	str	r3, [sp, #44]	@ 0x2c
100143fc:	e47d      	b.n	10013cfa <_vfiprintf_r+0x792>
100143fe:	2101      	movs	r1, #1
10014400:	4662      	mov	r2, ip
10014402:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10014406:	f7ff ba79 	b.w	100138fc <_vfiprintf_r+0x394>
1001440a:	f343 11c0 	sbfx	r1, r3, #7, #1
1001440e:	460a      	mov	r2, r1
10014410:	b25b      	sxtb	r3, r3
10014412:	f7ff bb17 	b.w	10013a44 <_vfiprintf_r+0x4dc>
10014416:	4662      	mov	r2, ip
10014418:	2101      	movs	r1, #1
1001441a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001441e:	f7ff ba4a 	b.w	100138b6 <_vfiprintf_r+0x34e>
10014422:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10014424:	9a07      	ldr	r2, [sp, #28]
10014426:	681b      	ldr	r3, [r3, #0]
10014428:	801a      	strh	r2, [r3, #0]
1001442a:	e403      	b.n	10013c34 <_vfiprintf_r+0x6cc>
1001442c:	1c59      	adds	r1, r3, #1
1001442e:	4658      	mov	r0, fp
10014430:	f7fc ff1a 	bl	10011268 <_malloc_r>
10014434:	4604      	mov	r4, r0
10014436:	2800      	cmp	r0, #0
10014438:	d02e      	beq.n	10014498 <_vfiprintf_r+0xf30>
1001443a:	900b      	str	r0, [sp, #44]	@ 0x2c
1001443c:	e7af      	b.n	1001439e <_vfiprintf_r+0xe36>
1001443e:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10014440:	f001 f8a8 	bl	10015594 <__retarget_lock_release_recursive>
10014444:	f7ff b9a0 	b.w	10013788 <_vfiprintf_r+0x220>
10014448:	9b05      	ldr	r3, [sp, #20]
1001444a:	9304      	str	r3, [sp, #16]
1001444c:	9309      	str	r3, [sp, #36]	@ 0x24
1001444e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10014450:	960a      	str	r6, [sp, #40]	@ 0x28
10014452:	9305      	str	r3, [sp, #20]
10014454:	e451      	b.n	10013cfa <_vfiprintf_r+0x792>
10014456:	4620      	mov	r0, r4
10014458:	9505      	str	r5, [sp, #20]
1001445a:	960a      	str	r6, [sp, #40]	@ 0x28
1001445c:	f001 f990 	bl	10015780 <strlen>
10014460:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10014464:	9009      	str	r0, [sp, #36]	@ 0x24
10014466:	9304      	str	r3, [sp, #16]
10014468:	950b      	str	r5, [sp, #44]	@ 0x2c
1001446a:	e446      	b.n	10013cfa <_vfiprintf_r+0x792>
1001446c:	2300      	movs	r3, #0
1001446e:	9305      	str	r3, [sp, #20]
10014470:	f7ff b8e3 	b.w	1001363a <_vfiprintf_r+0xd2>
10014474:	4e24      	ldr	r6, [pc, #144]	@ (10014508 <_vfiprintf_r+0xfa0>)
10014476:	4686      	mov	lr, r0
10014478:	e56b      	b.n	10013f52 <_vfiprintf_r+0x9ea>
1001447a:	2330      	movs	r3, #48	@ 0x30
1001447c:	e430      	b.n	10013ce0 <_vfiprintf_r+0x778>
1001447e:	9903      	ldr	r1, [sp, #12]
10014480:	aa1a      	add	r2, sp, #104	@ 0x68
10014482:	4658      	mov	r0, fp
10014484:	f7ff f828 	bl	100134d8 <__sprint_r.part.0>
10014488:	2800      	cmp	r0, #0
1001448a:	f43f a9ab 	beq.w	100137e4 <_vfiprintf_r+0x27c>
1001448e:	f7ff b9c9 	b.w	10013824 <_vfiprintf_r+0x2bc>
10014492:	4e1d      	ldr	r6, [pc, #116]	@ (10014508 <_vfiprintf_r+0xfa0>)
10014494:	1c48      	adds	r0, r1, #1
10014496:	e5a7      	b.n	10013fe8 <_vfiprintf_r+0xa80>
10014498:	9a03      	ldr	r2, [sp, #12]
1001449a:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
1001449e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100144a2:	8193      	strh	r3, [r2, #12]
100144a4:	f7ff b9c1 	b.w	1001382a <_vfiprintf_r+0x2c2>
100144a8:	9b03      	ldr	r3, [sp, #12]
100144aa:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
100144ac:	07d9      	lsls	r1, r3, #31
100144ae:	d407      	bmi.n	100144c0 <_vfiprintf_r+0xf58>
100144b0:	9b03      	ldr	r3, [sp, #12]
100144b2:	899b      	ldrh	r3, [r3, #12]
100144b4:	059a      	lsls	r2, r3, #22
100144b6:	d403      	bmi.n	100144c0 <_vfiprintf_r+0xf58>
100144b8:	9b03      	ldr	r3, [sp, #12]
100144ba:	6d98      	ldr	r0, [r3, #88]	@ 0x58
100144bc:	f001 f86a 	bl	10015594 <__retarget_lock_release_recursive>
100144c0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100144c4:	9307      	str	r3, [sp, #28]
100144c6:	f7ff b9b8 	b.w	1001383a <_vfiprintf_r+0x2d2>
100144ca:	f8df 8040 	ldr.w	r8, [pc, #64]	@ 1001450c <_vfiprintf_r+0xfa4>
100144ce:	4608      	mov	r0, r1
100144d0:	e460      	b.n	10013d94 <_vfiprintf_r+0x82c>
100144d2:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
100144d6:	9309      	str	r3, [sp, #36]	@ 0x24
100144d8:	e75a      	b.n	10014390 <_vfiprintf_r+0xe28>
100144da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100144dc:	7862      	ldrb	r2, [r4, #1]
100144de:	460c      	mov	r4, r1
100144e0:	f853 1b04 	ldr.w	r1, [r3], #4
100144e4:	930a      	str	r3, [sp, #40]	@ 0x28
100144e6:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
100144ea:	9105      	str	r1, [sp, #20]
100144ec:	f7ff b8a4 	b.w	10013638 <_vfiprintf_r+0xd0>
100144f0:	9a03      	ldr	r2, [sp, #12]
100144f2:	8993      	ldrh	r3, [r2, #12]
100144f4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100144f8:	8193      	strh	r3, [r2, #12]
100144fa:	f7ff b98d 	b.w	10013818 <_vfiprintf_r+0x2b0>
100144fe:	bf00      	nop
10014500:	cccccccd 	.word	0xcccccccd
10014504:	1001c554 	.word	0x1001c554
10014508:	1001c590 	.word	0x1001c590
1001450c:	1001c580 	.word	0x1001c580

10014510 <__sbprintf>:
10014510:	b5f0      	push	{r4, r5, r6, r7, lr}
10014512:	461f      	mov	r7, r3
10014514:	898b      	ldrh	r3, [r1, #12]
10014516:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
1001451a:	f023 0302 	bic.w	r3, r3, #2
1001451e:	f8ad 300c 	strh.w	r3, [sp, #12]
10014522:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10014524:	9319      	str	r3, [sp, #100]	@ 0x64
10014526:	89cb      	ldrh	r3, [r1, #14]
10014528:	f8ad 300e 	strh.w	r3, [sp, #14]
1001452c:	69cb      	ldr	r3, [r1, #28]
1001452e:	9307      	str	r3, [sp, #28]
10014530:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10014532:	9309      	str	r3, [sp, #36]	@ 0x24
10014534:	ab1a      	add	r3, sp, #104	@ 0x68
10014536:	9300      	str	r3, [sp, #0]
10014538:	9304      	str	r3, [sp, #16]
1001453a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
1001453e:	4615      	mov	r5, r2
10014540:	4606      	mov	r6, r0
10014542:	9302      	str	r3, [sp, #8]
10014544:	9305      	str	r3, [sp, #20]
10014546:	a816      	add	r0, sp, #88	@ 0x58
10014548:	2300      	movs	r3, #0
1001454a:	460c      	mov	r4, r1
1001454c:	9306      	str	r3, [sp, #24]
1001454e:	f001 f81b 	bl	10015588 <__retarget_lock_init_recursive>
10014552:	462a      	mov	r2, r5
10014554:	463b      	mov	r3, r7
10014556:	4669      	mov	r1, sp
10014558:	4630      	mov	r0, r6
1001455a:	f7ff f805 	bl	10013568 <_vfiprintf_r>
1001455e:	1e05      	subs	r5, r0, #0
10014560:	db07      	blt.n	10014572 <__sbprintf+0x62>
10014562:	4669      	mov	r1, sp
10014564:	4630      	mov	r0, r6
10014566:	f000 fb11 	bl	10014b8c <_fflush_r>
1001456a:	2800      	cmp	r0, #0
1001456c:	bf18      	it	ne
1001456e:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10014572:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10014576:	065b      	lsls	r3, r3, #25
10014578:	d503      	bpl.n	10014582 <__sbprintf+0x72>
1001457a:	89a3      	ldrh	r3, [r4, #12]
1001457c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10014580:	81a3      	strh	r3, [r4, #12]
10014582:	9816      	ldr	r0, [sp, #88]	@ 0x58
10014584:	f001 f802 	bl	1001558c <__retarget_lock_close_recursive>
10014588:	4628      	mov	r0, r5
1001458a:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
1001458e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10014590 <__malloc_lock>:
10014590:	4801      	ldr	r0, [pc, #4]	@ (10014598 <__malloc_lock+0x8>)
10014592:	f000 bffd 	b.w	10015590 <__retarget_lock_acquire_recursive>
10014596:	bf00      	nop
10014598:	2000159c 	.word	0x2000159c

1001459c <__malloc_unlock>:
1001459c:	4801      	ldr	r0, [pc, #4]	@ (100145a4 <__malloc_unlock+0x8>)
1001459e:	f000 bff9 	b.w	10015594 <__retarget_lock_release_recursive>
100145a2:	bf00      	nop
100145a4:	2000159c 	.word	0x2000159c

100145a8 <_puts_r>:
100145a8:	b570      	push	{r4, r5, r6, lr}
100145aa:	4605      	mov	r5, r0
100145ac:	b088      	sub	sp, #32
100145ae:	4608      	mov	r0, r1
100145b0:	460c      	mov	r4, r1
100145b2:	f001 f8e5 	bl	10015780 <strlen>
100145b6:	4e21      	ldr	r6, [pc, #132]	@ (1001463c <_puts_r+0x94>)
100145b8:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
100145ba:	9005      	str	r0, [sp, #20]
100145bc:	2101      	movs	r1, #1
100145be:	1843      	adds	r3, r0, r1
100145c0:	e9cd 6106 	strd	r6, r1, [sp, #24]
100145c4:	a804      	add	r0, sp, #16
100145c6:	2102      	movs	r1, #2
100145c8:	9404      	str	r4, [sp, #16]
100145ca:	9303      	str	r3, [sp, #12]
100145cc:	68ac      	ldr	r4, [r5, #8]
100145ce:	9001      	str	r0, [sp, #4]
100145d0:	9102      	str	r1, [sp, #8]
100145d2:	2a00      	cmp	r2, #0
100145d4:	d02e      	beq.n	10014634 <_puts_r+0x8c>
100145d6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
100145d8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100145dc:	07d6      	lsls	r6, r2, #31
100145de:	d401      	bmi.n	100145e4 <_puts_r+0x3c>
100145e0:	0598      	lsls	r0, r3, #22
100145e2:	d521      	bpl.n	10014628 <_puts_r+0x80>
100145e4:	0499      	lsls	r1, r3, #18
100145e6:	d406      	bmi.n	100145f6 <_puts_r+0x4e>
100145e8:	6e62      	ldr	r2, [r4, #100]	@ 0x64
100145ea:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
100145ee:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
100145f2:	81a3      	strh	r3, [r4, #12]
100145f4:	6662      	str	r2, [r4, #100]	@ 0x64
100145f6:	4628      	mov	r0, r5
100145f8:	aa01      	add	r2, sp, #4
100145fa:	4621      	mov	r1, r4
100145fc:	f000 fbde 	bl	10014dbc <__sfvwrite_r>
10014600:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014602:	2800      	cmp	r0, #0
10014604:	bf0c      	ite	eq
10014606:	250a      	moveq	r5, #10
10014608:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
1001460c:	07da      	lsls	r2, r3, #31
1001460e:	d402      	bmi.n	10014616 <_puts_r+0x6e>
10014610:	89a3      	ldrh	r3, [r4, #12]
10014612:	059b      	lsls	r3, r3, #22
10014614:	d502      	bpl.n	1001461c <_puts_r+0x74>
10014616:	4628      	mov	r0, r5
10014618:	b008      	add	sp, #32
1001461a:	bd70      	pop	{r4, r5, r6, pc}
1001461c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001461e:	f000 ffb9 	bl	10015594 <__retarget_lock_release_recursive>
10014622:	4628      	mov	r0, r5
10014624:	b008      	add	sp, #32
10014626:	bd70      	pop	{r4, r5, r6, pc}
10014628:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001462a:	f000 ffb1 	bl	10015590 <__retarget_lock_acquire_recursive>
1001462e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014632:	e7d7      	b.n	100145e4 <_puts_r+0x3c>
10014634:	4628      	mov	r0, r5
10014636:	f000 fb97 	bl	10014d68 <__sinit>
1001463a:	e7cc      	b.n	100145d6 <_puts_r+0x2e>
1001463c:	1001c5a0 	.word	0x1001c5a0

10014640 <puts>:
10014640:	4b02      	ldr	r3, [pc, #8]	@ (1001464c <puts+0xc>)
10014642:	4601      	mov	r1, r0
10014644:	6818      	ldr	r0, [r3, #0]
10014646:	f7ff bfaf 	b.w	100145a8 <_puts_r>
1001464a:	bf00      	nop
1001464c:	200005c0 	.word	0x200005c0

10014650 <_fclose_r>:
10014650:	b570      	push	{r4, r5, r6, lr}
10014652:	2900      	cmp	r1, #0
10014654:	d03f      	beq.n	100146d6 <_fclose_r+0x86>
10014656:	4605      	mov	r5, r0
10014658:	460c      	mov	r4, r1
1001465a:	b110      	cbz	r0, 10014662 <_fclose_r+0x12>
1001465c:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1001465e:	2b00      	cmp	r3, #0
10014660:	d03c      	beq.n	100146dc <_fclose_r+0x8c>
10014662:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014664:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10014668:	07de      	lsls	r6, r3, #31
1001466a:	d432      	bmi.n	100146d2 <_fclose_r+0x82>
1001466c:	0590      	lsls	r0, r2, #22
1001466e:	d538      	bpl.n	100146e2 <_fclose_r+0x92>
10014670:	4621      	mov	r1, r4
10014672:	4628      	mov	r0, r5
10014674:	f000 f9ee 	bl	10014a54 <__sflush_r>
10014678:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
1001467a:	4606      	mov	r6, r0
1001467c:	b133      	cbz	r3, 1001468c <_fclose_r+0x3c>
1001467e:	69e1      	ldr	r1, [r4, #28]
10014680:	4628      	mov	r0, r5
10014682:	4798      	blx	r3
10014684:	2800      	cmp	r0, #0
10014686:	bfb8      	it	lt
10014688:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
1001468c:	89a3      	ldrh	r3, [r4, #12]
1001468e:	061a      	lsls	r2, r3, #24
10014690:	d439      	bmi.n	10014706 <_fclose_r+0xb6>
10014692:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10014694:	b141      	cbz	r1, 100146a8 <_fclose_r+0x58>
10014696:	f104 0340 	add.w	r3, r4, #64	@ 0x40
1001469a:	4299      	cmp	r1, r3
1001469c:	d002      	beq.n	100146a4 <_fclose_r+0x54>
1001469e:	4628      	mov	r0, r5
100146a0:	f002 f968 	bl	10016974 <_free_r>
100146a4:	2300      	movs	r3, #0
100146a6:	6323      	str	r3, [r4, #48]	@ 0x30
100146a8:	6c61      	ldr	r1, [r4, #68]	@ 0x44
100146aa:	b121      	cbz	r1, 100146b6 <_fclose_r+0x66>
100146ac:	4628      	mov	r0, r5
100146ae:	f002 f961 	bl	10016974 <_free_r>
100146b2:	2300      	movs	r3, #0
100146b4:	6463      	str	r3, [r4, #68]	@ 0x44
100146b6:	f000 fb75 	bl	10014da4 <__sfp_lock_acquire>
100146ba:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100146bc:	2200      	movs	r2, #0
100146be:	07db      	lsls	r3, r3, #31
100146c0:	81a2      	strh	r2, [r4, #12]
100146c2:	d51c      	bpl.n	100146fe <_fclose_r+0xae>
100146c4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100146c6:	f000 ff61 	bl	1001558c <__retarget_lock_close_recursive>
100146ca:	f000 fb71 	bl	10014db0 <__sfp_lock_release>
100146ce:	4630      	mov	r0, r6
100146d0:	bd70      	pop	{r4, r5, r6, pc}
100146d2:	2a00      	cmp	r2, #0
100146d4:	d1cc      	bne.n	10014670 <_fclose_r+0x20>
100146d6:	2600      	movs	r6, #0
100146d8:	4630      	mov	r0, r6
100146da:	bd70      	pop	{r4, r5, r6, pc}
100146dc:	f000 fb44 	bl	10014d68 <__sinit>
100146e0:	e7bf      	b.n	10014662 <_fclose_r+0x12>
100146e2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100146e4:	f000 ff54 	bl	10015590 <__retarget_lock_acquire_recursive>
100146e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100146ec:	2b00      	cmp	r3, #0
100146ee:	d1bf      	bne.n	10014670 <_fclose_r+0x20>
100146f0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100146f2:	07d9      	lsls	r1, r3, #31
100146f4:	d4ef      	bmi.n	100146d6 <_fclose_r+0x86>
100146f6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100146f8:	f000 ff4c 	bl	10015594 <__retarget_lock_release_recursive>
100146fc:	e7eb      	b.n	100146d6 <_fclose_r+0x86>
100146fe:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014700:	f000 ff48 	bl	10015594 <__retarget_lock_release_recursive>
10014704:	e7de      	b.n	100146c4 <_fclose_r+0x74>
10014706:	6921      	ldr	r1, [r4, #16]
10014708:	4628      	mov	r0, r5
1001470a:	f002 f933 	bl	10016974 <_free_r>
1001470e:	e7c0      	b.n	10014692 <_fclose_r+0x42>

10014710 <_realloc_r>:
10014710:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10014714:	4616      	mov	r6, r2
10014716:	2900      	cmp	r1, #0
10014718:	f000 8096 	beq.w	10014848 <_realloc_r+0x138>
1001471c:	460c      	mov	r4, r1
1001471e:	4680      	mov	r8, r0
10014720:	f106 050b 	add.w	r5, r6, #11
10014724:	f7ff ff34 	bl	10014590 <__malloc_lock>
10014728:	f854 1c04 	ldr.w	r1, [r4, #-4]
1001472c:	2d16      	cmp	r5, #22
1001472e:	f1a4 0908 	sub.w	r9, r4, #8
10014732:	f021 0703 	bic.w	r7, r1, #3
10014736:	d858      	bhi.n	100147ea <_realloc_r+0xda>
10014738:	2510      	movs	r5, #16
1001473a:	42ae      	cmp	r6, r5
1001473c:	d858      	bhi.n	100147f0 <_realloc_r+0xe0>
1001473e:	42af      	cmp	r7, r5
10014740:	da60      	bge.n	10014804 <_realloc_r+0xf4>
10014742:	4bbe      	ldr	r3, [pc, #760]	@ (10014a3c <_realloc_r+0x32c>)
10014744:	689a      	ldr	r2, [r3, #8]
10014746:	eb09 0c07 	add.w	ip, r9, r7
1001474a:	4562      	cmp	r2, ip
1001474c:	f8dc 0004 	ldr.w	r0, [ip, #4]
10014750:	f000 8090 	beq.w	10014874 <_realloc_r+0x164>
10014754:	f020 0301 	bic.w	r3, r0, #1
10014758:	4463      	add	r3, ip
1001475a:	685b      	ldr	r3, [r3, #4]
1001475c:	07da      	lsls	r2, r3, #31
1001475e:	d468      	bmi.n	10014832 <_realloc_r+0x122>
10014760:	f020 0003 	bic.w	r0, r0, #3
10014764:	183b      	adds	r3, r7, r0
10014766:	429d      	cmp	r5, r3
10014768:	dd47      	ble.n	100147fa <_realloc_r+0xea>
1001476a:	07cb      	lsls	r3, r1, #31
1001476c:	d412      	bmi.n	10014794 <_realloc_r+0x84>
1001476e:	f854 3c08 	ldr.w	r3, [r4, #-8]
10014772:	eba9 0b03 	sub.w	fp, r9, r3
10014776:	f8db 3004 	ldr.w	r3, [fp, #4]
1001477a:	f023 0203 	bic.w	r2, r3, #3
1001477e:	4410      	add	r0, r2
10014780:	eb00 0a07 	add.w	sl, r0, r7
10014784:	4555      	cmp	r5, sl
10014786:	f340 80f6 	ble.w	10014976 <_realloc_r+0x266>
1001478a:	eb07 0a02 	add.w	sl, r7, r2
1001478e:	4555      	cmp	r5, sl
10014790:	f340 80cc 	ble.w	1001492c <_realloc_r+0x21c>
10014794:	4631      	mov	r1, r6
10014796:	4640      	mov	r0, r8
10014798:	f7fc fd66 	bl	10011268 <_malloc_r>
1001479c:	4606      	mov	r6, r0
1001479e:	2800      	cmp	r0, #0
100147a0:	f000 8120 	beq.w	100149e4 <_realloc_r+0x2d4>
100147a4:	f854 3c04 	ldr.w	r3, [r4, #-4]
100147a8:	f023 0301 	bic.w	r3, r3, #1
100147ac:	444b      	add	r3, r9
100147ae:	f1a0 0208 	sub.w	r2, r0, #8
100147b2:	4293      	cmp	r3, r2
100147b4:	f000 80b4 	beq.w	10014920 <_realloc_r+0x210>
100147b8:	1f3a      	subs	r2, r7, #4
100147ba:	2a24      	cmp	r2, #36	@ 0x24
100147bc:	f200 80d7 	bhi.w	1001496e <_realloc_r+0x25e>
100147c0:	2a13      	cmp	r2, #19
100147c2:	f200 80a2 	bhi.w	1001490a <_realloc_r+0x1fa>
100147c6:	4603      	mov	r3, r0
100147c8:	4622      	mov	r2, r4
100147ca:	6811      	ldr	r1, [r2, #0]
100147cc:	6019      	str	r1, [r3, #0]
100147ce:	6851      	ldr	r1, [r2, #4]
100147d0:	6059      	str	r1, [r3, #4]
100147d2:	6892      	ldr	r2, [r2, #8]
100147d4:	609a      	str	r2, [r3, #8]
100147d6:	4621      	mov	r1, r4
100147d8:	4640      	mov	r0, r8
100147da:	f002 f8cb 	bl	10016974 <_free_r>
100147de:	4640      	mov	r0, r8
100147e0:	f7ff fedc 	bl	1001459c <__malloc_unlock>
100147e4:	4630      	mov	r0, r6
100147e6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
100147ea:	f035 0507 	bics.w	r5, r5, #7
100147ee:	d5a4      	bpl.n	1001473a <_realloc_r+0x2a>
100147f0:	230c      	movs	r3, #12
100147f2:	f8c8 3000 	str.w	r3, [r8]
100147f6:	2600      	movs	r6, #0
100147f8:	e018      	b.n	1001482c <_realloc_r+0x11c>
100147fa:	461f      	mov	r7, r3
100147fc:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
10014800:	60d3      	str	r3, [r2, #12]
10014802:	609a      	str	r2, [r3, #8]
10014804:	f8d9 3004 	ldr.w	r3, [r9, #4]
10014808:	1b7a      	subs	r2, r7, r5
1001480a:	2a0f      	cmp	r2, #15
1001480c:	f003 0301 	and.w	r3, r3, #1
10014810:	eb09 0007 	add.w	r0, r9, r7
10014814:	d81d      	bhi.n	10014852 <_realloc_r+0x142>
10014816:	433b      	orrs	r3, r7
10014818:	f8c9 3004 	str.w	r3, [r9, #4]
1001481c:	6843      	ldr	r3, [r0, #4]
1001481e:	f043 0301 	orr.w	r3, r3, #1
10014822:	6043      	str	r3, [r0, #4]
10014824:	4640      	mov	r0, r8
10014826:	f7ff feb9 	bl	1001459c <__malloc_unlock>
1001482a:	4626      	mov	r6, r4
1001482c:	4630      	mov	r0, r6
1001482e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014832:	07c9      	lsls	r1, r1, #31
10014834:	d4ae      	bmi.n	10014794 <_realloc_r+0x84>
10014836:	f854 3c08 	ldr.w	r3, [r4, #-8]
1001483a:	eba9 0b03 	sub.w	fp, r9, r3
1001483e:	f8db 3004 	ldr.w	r3, [fp, #4]
10014842:	f023 0203 	bic.w	r2, r3, #3
10014846:	e7a0      	b.n	1001478a <_realloc_r+0x7a>
10014848:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001484c:	4611      	mov	r1, r2
1001484e:	f7fc bd0b 	b.w	10011268 <_malloc_r>
10014852:	eb09 0105 	add.w	r1, r9, r5
10014856:	432b      	orrs	r3, r5
10014858:	f042 0201 	orr.w	r2, r2, #1
1001485c:	f8c9 3004 	str.w	r3, [r9, #4]
10014860:	604a      	str	r2, [r1, #4]
10014862:	6843      	ldr	r3, [r0, #4]
10014864:	f043 0301 	orr.w	r3, r3, #1
10014868:	6043      	str	r3, [r0, #4]
1001486a:	3108      	adds	r1, #8
1001486c:	4640      	mov	r0, r8
1001486e:	f002 f881 	bl	10016974 <_free_r>
10014872:	e7d7      	b.n	10014824 <_realloc_r+0x114>
10014874:	f020 0003 	bic.w	r0, r0, #3
10014878:	19c2      	adds	r2, r0, r7
1001487a:	f105 0c10 	add.w	ip, r5, #16
1001487e:	4562      	cmp	r2, ip
10014880:	f280 8091 	bge.w	100149a6 <_realloc_r+0x296>
10014884:	07ca      	lsls	r2, r1, #31
10014886:	d485      	bmi.n	10014794 <_realloc_r+0x84>
10014888:	f854 2c08 	ldr.w	r2, [r4, #-8]
1001488c:	eba9 0b02 	sub.w	fp, r9, r2
10014890:	f8db 2004 	ldr.w	r2, [fp, #4]
10014894:	f022 0203 	bic.w	r2, r2, #3
10014898:	4410      	add	r0, r2
1001489a:	eb00 0a07 	add.w	sl, r0, r7
1001489e:	45d4      	cmp	ip, sl
100148a0:	f73f af73 	bgt.w	1001478a <_realloc_r+0x7a>
100148a4:	465e      	mov	r6, fp
100148a6:	f8db 100c 	ldr.w	r1, [fp, #12]
100148aa:	f856 0f08 	ldr.w	r0, [r6, #8]!
100148ae:	1f3a      	subs	r2, r7, #4
100148b0:	2a24      	cmp	r2, #36	@ 0x24
100148b2:	60c1      	str	r1, [r0, #12]
100148b4:	6088      	str	r0, [r1, #8]
100148b6:	f200 80ae 	bhi.w	10014a16 <_realloc_r+0x306>
100148ba:	2a13      	cmp	r2, #19
100148bc:	f240 80a9 	bls.w	10014a12 <_realloc_r+0x302>
100148c0:	6821      	ldr	r1, [r4, #0]
100148c2:	f8cb 1008 	str.w	r1, [fp, #8]
100148c6:	6861      	ldr	r1, [r4, #4]
100148c8:	f8cb 100c 	str.w	r1, [fp, #12]
100148cc:	2a1b      	cmp	r2, #27
100148ce:	f200 80a8 	bhi.w	10014a22 <_realloc_r+0x312>
100148d2:	3408      	adds	r4, #8
100148d4:	f10b 0210 	add.w	r2, fp, #16
100148d8:	6821      	ldr	r1, [r4, #0]
100148da:	6011      	str	r1, [r2, #0]
100148dc:	6861      	ldr	r1, [r4, #4]
100148de:	6051      	str	r1, [r2, #4]
100148e0:	68a1      	ldr	r1, [r4, #8]
100148e2:	6091      	str	r1, [r2, #8]
100148e4:	eb0b 0105 	add.w	r1, fp, r5
100148e8:	ebaa 0205 	sub.w	r2, sl, r5
100148ec:	f042 0201 	orr.w	r2, r2, #1
100148f0:	6099      	str	r1, [r3, #8]
100148f2:	604a      	str	r2, [r1, #4]
100148f4:	f8db 3004 	ldr.w	r3, [fp, #4]
100148f8:	f003 0301 	and.w	r3, r3, #1
100148fc:	432b      	orrs	r3, r5
100148fe:	4640      	mov	r0, r8
10014900:	f8cb 3004 	str.w	r3, [fp, #4]
10014904:	f7ff fe4a 	bl	1001459c <__malloc_unlock>
10014908:	e790      	b.n	1001482c <_realloc_r+0x11c>
1001490a:	6823      	ldr	r3, [r4, #0]
1001490c:	6003      	str	r3, [r0, #0]
1001490e:	6863      	ldr	r3, [r4, #4]
10014910:	6043      	str	r3, [r0, #4]
10014912:	2a1b      	cmp	r2, #27
10014914:	d83c      	bhi.n	10014990 <_realloc_r+0x280>
10014916:	f104 0208 	add.w	r2, r4, #8
1001491a:	f100 0308 	add.w	r3, r0, #8
1001491e:	e754      	b.n	100147ca <_realloc_r+0xba>
10014920:	f850 3c04 	ldr.w	r3, [r0, #-4]
10014924:	f023 0303 	bic.w	r3, r3, #3
10014928:	441f      	add	r7, r3
1001492a:	e76b      	b.n	10014804 <_realloc_r+0xf4>
1001492c:	1f3a      	subs	r2, r7, #4
1001492e:	465e      	mov	r6, fp
10014930:	f8db 300c 	ldr.w	r3, [fp, #12]
10014934:	f856 1f08 	ldr.w	r1, [r6, #8]!
10014938:	2a24      	cmp	r2, #36	@ 0x24
1001493a:	60cb      	str	r3, [r1, #12]
1001493c:	6099      	str	r1, [r3, #8]
1001493e:	d822      	bhi.n	10014986 <_realloc_r+0x276>
10014940:	2a13      	cmp	r2, #19
10014942:	d91e      	bls.n	10014982 <_realloc_r+0x272>
10014944:	6823      	ldr	r3, [r4, #0]
10014946:	f8cb 3008 	str.w	r3, [fp, #8]
1001494a:	6863      	ldr	r3, [r4, #4]
1001494c:	f8cb 300c 	str.w	r3, [fp, #12]
10014950:	2a1b      	cmp	r2, #27
10014952:	d83b      	bhi.n	100149cc <_realloc_r+0x2bc>
10014954:	3408      	adds	r4, #8
10014956:	f10b 0310 	add.w	r3, fp, #16
1001495a:	6822      	ldr	r2, [r4, #0]
1001495c:	601a      	str	r2, [r3, #0]
1001495e:	6862      	ldr	r2, [r4, #4]
10014960:	605a      	str	r2, [r3, #4]
10014962:	68a2      	ldr	r2, [r4, #8]
10014964:	609a      	str	r2, [r3, #8]
10014966:	4634      	mov	r4, r6
10014968:	4657      	mov	r7, sl
1001496a:	46d9      	mov	r9, fp
1001496c:	e74a      	b.n	10014804 <_realloc_r+0xf4>
1001496e:	4621      	mov	r1, r4
10014970:	f000 fc96 	bl	100152a0 <memmove>
10014974:	e72f      	b.n	100147d6 <_realloc_r+0xc6>
10014976:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
1001497a:	1f3a      	subs	r2, r7, #4
1001497c:	60cb      	str	r3, [r1, #12]
1001497e:	6099      	str	r1, [r3, #8]
10014980:	e7d5      	b.n	1001492e <_realloc_r+0x21e>
10014982:	4633      	mov	r3, r6
10014984:	e7e9      	b.n	1001495a <_realloc_r+0x24a>
10014986:	4621      	mov	r1, r4
10014988:	4630      	mov	r0, r6
1001498a:	f000 fc89 	bl	100152a0 <memmove>
1001498e:	e7ea      	b.n	10014966 <_realloc_r+0x256>
10014990:	68a3      	ldr	r3, [r4, #8]
10014992:	6083      	str	r3, [r0, #8]
10014994:	68e3      	ldr	r3, [r4, #12]
10014996:	60c3      	str	r3, [r0, #12]
10014998:	2a24      	cmp	r2, #36	@ 0x24
1001499a:	d027      	beq.n	100149ec <_realloc_r+0x2dc>
1001499c:	f104 0210 	add.w	r2, r4, #16
100149a0:	f100 0310 	add.w	r3, r0, #16
100149a4:	e711      	b.n	100147ca <_realloc_r+0xba>
100149a6:	eb09 0105 	add.w	r1, r9, r5
100149aa:	6099      	str	r1, [r3, #8]
100149ac:	1b53      	subs	r3, r2, r5
100149ae:	f043 0301 	orr.w	r3, r3, #1
100149b2:	604b      	str	r3, [r1, #4]
100149b4:	f854 3c04 	ldr.w	r3, [r4, #-4]
100149b8:	f003 0301 	and.w	r3, r3, #1
100149bc:	432b      	orrs	r3, r5
100149be:	4640      	mov	r0, r8
100149c0:	f844 3c04 	str.w	r3, [r4, #-4]
100149c4:	f7ff fdea 	bl	1001459c <__malloc_unlock>
100149c8:	4626      	mov	r6, r4
100149ca:	e72f      	b.n	1001482c <_realloc_r+0x11c>
100149cc:	68a3      	ldr	r3, [r4, #8]
100149ce:	f8cb 3010 	str.w	r3, [fp, #16]
100149d2:	68e3      	ldr	r3, [r4, #12]
100149d4:	f8cb 3014 	str.w	r3, [fp, #20]
100149d8:	2a24      	cmp	r2, #36	@ 0x24
100149da:	d010      	beq.n	100149fe <_realloc_r+0x2ee>
100149dc:	3410      	adds	r4, #16
100149de:	f10b 0318 	add.w	r3, fp, #24
100149e2:	e7ba      	b.n	1001495a <_realloc_r+0x24a>
100149e4:	4640      	mov	r0, r8
100149e6:	f7ff fdd9 	bl	1001459c <__malloc_unlock>
100149ea:	e704      	b.n	100147f6 <_realloc_r+0xe6>
100149ec:	6923      	ldr	r3, [r4, #16]
100149ee:	6103      	str	r3, [r0, #16]
100149f0:	6961      	ldr	r1, [r4, #20]
100149f2:	6141      	str	r1, [r0, #20]
100149f4:	f104 0218 	add.w	r2, r4, #24
100149f8:	f100 0318 	add.w	r3, r0, #24
100149fc:	e6e5      	b.n	100147ca <_realloc_r+0xba>
100149fe:	6923      	ldr	r3, [r4, #16]
10014a00:	f8cb 3018 	str.w	r3, [fp, #24]
10014a04:	6963      	ldr	r3, [r4, #20]
10014a06:	f8cb 301c 	str.w	r3, [fp, #28]
10014a0a:	3418      	adds	r4, #24
10014a0c:	f10b 0320 	add.w	r3, fp, #32
10014a10:	e7a3      	b.n	1001495a <_realloc_r+0x24a>
10014a12:	4632      	mov	r2, r6
10014a14:	e760      	b.n	100148d8 <_realloc_r+0x1c8>
10014a16:	4621      	mov	r1, r4
10014a18:	4630      	mov	r0, r6
10014a1a:	f000 fc41 	bl	100152a0 <memmove>
10014a1e:	4b07      	ldr	r3, [pc, #28]	@ (10014a3c <_realloc_r+0x32c>)
10014a20:	e760      	b.n	100148e4 <_realloc_r+0x1d4>
10014a22:	68a1      	ldr	r1, [r4, #8]
10014a24:	f8cb 1010 	str.w	r1, [fp, #16]
10014a28:	68e1      	ldr	r1, [r4, #12]
10014a2a:	f8cb 1014 	str.w	r1, [fp, #20]
10014a2e:	2a24      	cmp	r2, #36	@ 0x24
10014a30:	d006      	beq.n	10014a40 <_realloc_r+0x330>
10014a32:	3410      	adds	r4, #16
10014a34:	f10b 0218 	add.w	r2, fp, #24
10014a38:	e74e      	b.n	100148d8 <_realloc_r+0x1c8>
10014a3a:	bf00      	nop
10014a3c:	20000040 	.word	0x20000040
10014a40:	6922      	ldr	r2, [r4, #16]
10014a42:	f8cb 2018 	str.w	r2, [fp, #24]
10014a46:	6962      	ldr	r2, [r4, #20]
10014a48:	f8cb 201c 	str.w	r2, [fp, #28]
10014a4c:	3418      	adds	r4, #24
10014a4e:	f10b 0220 	add.w	r2, fp, #32
10014a52:	e741      	b.n	100148d8 <_realloc_r+0x1c8>

10014a54 <__sflush_r>:
10014a54:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
10014a58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10014a5c:	460c      	mov	r4, r1
10014a5e:	0711      	lsls	r1, r2, #28
10014a60:	4680      	mov	r8, r0
10014a62:	d44b      	bmi.n	10014afc <__sflush_r+0xa8>
10014a64:	6861      	ldr	r1, [r4, #4]
10014a66:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
10014a6a:	2900      	cmp	r1, #0
10014a6c:	81a3      	strh	r3, [r4, #12]
10014a6e:	dd60      	ble.n	10014b32 <__sflush_r+0xde>
10014a70:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10014a72:	2d00      	cmp	r5, #0
10014a74:	d03f      	beq.n	10014af6 <__sflush_r+0xa2>
10014a76:	2100      	movs	r1, #0
10014a78:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
10014a7c:	f8d8 6000 	ldr.w	r6, [r8]
10014a80:	f8c8 1000 	str.w	r1, [r8]
10014a84:	69e1      	ldr	r1, [r4, #28]
10014a86:	d161      	bne.n	10014b4c <__sflush_r+0xf8>
10014a88:	2301      	movs	r3, #1
10014a8a:	4640      	mov	r0, r8
10014a8c:	47a8      	blx	r5
10014a8e:	1c43      	adds	r3, r0, #1
10014a90:	4602      	mov	r2, r0
10014a92:	d06b      	beq.n	10014b6c <__sflush_r+0x118>
10014a94:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014a98:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
10014a9a:	69e1      	ldr	r1, [r4, #28]
10014a9c:	075f      	lsls	r7, r3, #29
10014a9e:	d505      	bpl.n	10014aac <__sflush_r+0x58>
10014aa0:	6863      	ldr	r3, [r4, #4]
10014aa2:	1ad2      	subs	r2, r2, r3
10014aa4:	6b23      	ldr	r3, [r4, #48]	@ 0x30
10014aa6:	b10b      	cbz	r3, 10014aac <__sflush_r+0x58>
10014aa8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
10014aaa:	1ad2      	subs	r2, r2, r3
10014aac:	2300      	movs	r3, #0
10014aae:	4640      	mov	r0, r8
10014ab0:	47a8      	blx	r5
10014ab2:	1c45      	adds	r5, r0, #1
10014ab4:	d14c      	bne.n	10014b50 <__sflush_r+0xfc>
10014ab6:	f8d8 1000 	ldr.w	r1, [r8]
10014aba:	291d      	cmp	r1, #29
10014abc:	d83d      	bhi.n	10014b3a <__sflush_r+0xe6>
10014abe:	4a32      	ldr	r2, [pc, #200]	@ (10014b88 <__sflush_r+0x134>)
10014ac0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014ac4:	410a      	asrs	r2, r1
10014ac6:	f012 0201 	ands.w	r2, r2, #1
10014aca:	d138      	bne.n	10014b3e <__sflush_r+0xea>
10014acc:	6062      	str	r2, [r4, #4]
10014ace:	6922      	ldr	r2, [r4, #16]
10014ad0:	6022      	str	r2, [r4, #0]
10014ad2:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10014ad6:	81a2      	strh	r2, [r4, #12]
10014ad8:	04da      	lsls	r2, r3, #19
10014ada:	d452      	bmi.n	10014b82 <__sflush_r+0x12e>
10014adc:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10014ade:	f8c8 6000 	str.w	r6, [r8]
10014ae2:	b141      	cbz	r1, 10014af6 <__sflush_r+0xa2>
10014ae4:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10014ae8:	4299      	cmp	r1, r3
10014aea:	d002      	beq.n	10014af2 <__sflush_r+0x9e>
10014aec:	4640      	mov	r0, r8
10014aee:	f001 ff41 	bl	10016974 <_free_r>
10014af2:	2300      	movs	r3, #0
10014af4:	6323      	str	r3, [r4, #48]	@ 0x30
10014af6:	2000      	movs	r0, #0
10014af8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10014afc:	6926      	ldr	r6, [r4, #16]
10014afe:	2e00      	cmp	r6, #0
10014b00:	d0f9      	beq.n	10014af6 <__sflush_r+0xa2>
10014b02:	6825      	ldr	r5, [r4, #0]
10014b04:	6026      	str	r6, [r4, #0]
10014b06:	0791      	lsls	r1, r2, #30
10014b08:	bf0c      	ite	eq
10014b0a:	6963      	ldreq	r3, [r4, #20]
10014b0c:	2300      	movne	r3, #0
10014b0e:	1bad      	subs	r5, r5, r6
10014b10:	60a3      	str	r3, [r4, #8]
10014b12:	e00b      	b.n	10014b2c <__sflush_r+0xd8>
10014b14:	462b      	mov	r3, r5
10014b16:	4632      	mov	r2, r6
10014b18:	69e1      	ldr	r1, [r4, #28]
10014b1a:	6a67      	ldr	r7, [r4, #36]	@ 0x24
10014b1c:	4640      	mov	r0, r8
10014b1e:	47b8      	blx	r7
10014b20:	f1b0 0c00 	subs.w	ip, r0, #0
10014b24:	eba5 050c 	sub.w	r5, r5, ip
10014b28:	4466      	add	r6, ip
10014b2a:	dd06      	ble.n	10014b3a <__sflush_r+0xe6>
10014b2c:	2d00      	cmp	r5, #0
10014b2e:	dcf1      	bgt.n	10014b14 <__sflush_r+0xc0>
10014b30:	e7e1      	b.n	10014af6 <__sflush_r+0xa2>
10014b32:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
10014b34:	2900      	cmp	r1, #0
10014b36:	dc9b      	bgt.n	10014a70 <__sflush_r+0x1c>
10014b38:	e7dd      	b.n	10014af6 <__sflush_r+0xa2>
10014b3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014b3e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10014b42:	81a3      	strh	r3, [r4, #12]
10014b44:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10014b48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10014b4c:	6d22      	ldr	r2, [r4, #80]	@ 0x50
10014b4e:	e7a5      	b.n	10014a9c <__sflush_r+0x48>
10014b50:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014b54:	6922      	ldr	r2, [r4, #16]
10014b56:	6022      	str	r2, [r4, #0]
10014b58:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10014b5c:	81a2      	strh	r2, [r4, #12]
10014b5e:	04db      	lsls	r3, r3, #19
10014b60:	f04f 0200 	mov.w	r2, #0
10014b64:	6062      	str	r2, [r4, #4]
10014b66:	d5b9      	bpl.n	10014adc <__sflush_r+0x88>
10014b68:	6520      	str	r0, [r4, #80]	@ 0x50
10014b6a:	e7b7      	b.n	10014adc <__sflush_r+0x88>
10014b6c:	f8d8 3000 	ldr.w	r3, [r8]
10014b70:	2b00      	cmp	r3, #0
10014b72:	d08f      	beq.n	10014a94 <__sflush_r+0x40>
10014b74:	2b1d      	cmp	r3, #29
10014b76:	d001      	beq.n	10014b7c <__sflush_r+0x128>
10014b78:	2b16      	cmp	r3, #22
10014b7a:	d1de      	bne.n	10014b3a <__sflush_r+0xe6>
10014b7c:	f8c8 6000 	str.w	r6, [r8]
10014b80:	e7b9      	b.n	10014af6 <__sflush_r+0xa2>
10014b82:	2900      	cmp	r1, #0
10014b84:	d1aa      	bne.n	10014adc <__sflush_r+0x88>
10014b86:	e7ef      	b.n	10014b68 <__sflush_r+0x114>
10014b88:	dfbffffe 	.word	0xdfbffffe

10014b8c <_fflush_r>:
10014b8c:	b538      	push	{r3, r4, r5, lr}
10014b8e:	460c      	mov	r4, r1
10014b90:	4605      	mov	r5, r0
10014b92:	b108      	cbz	r0, 10014b98 <_fflush_r+0xc>
10014b94:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10014b96:	b303      	cbz	r3, 10014bda <_fflush_r+0x4e>
10014b98:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
10014b9c:	b188      	cbz	r0, 10014bc2 <_fflush_r+0x36>
10014b9e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014ba0:	07db      	lsls	r3, r3, #31
10014ba2:	d401      	bmi.n	10014ba8 <_fflush_r+0x1c>
10014ba4:	0581      	lsls	r1, r0, #22
10014ba6:	d50f      	bpl.n	10014bc8 <_fflush_r+0x3c>
10014ba8:	4628      	mov	r0, r5
10014baa:	4621      	mov	r1, r4
10014bac:	f7ff ff52 	bl	10014a54 <__sflush_r>
10014bb0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10014bb2:	07da      	lsls	r2, r3, #31
10014bb4:	4605      	mov	r5, r0
10014bb6:	d402      	bmi.n	10014bbe <_fflush_r+0x32>
10014bb8:	89a3      	ldrh	r3, [r4, #12]
10014bba:	059b      	lsls	r3, r3, #22
10014bbc:	d508      	bpl.n	10014bd0 <_fflush_r+0x44>
10014bbe:	4628      	mov	r0, r5
10014bc0:	bd38      	pop	{r3, r4, r5, pc}
10014bc2:	4605      	mov	r5, r0
10014bc4:	4628      	mov	r0, r5
10014bc6:	bd38      	pop	{r3, r4, r5, pc}
10014bc8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014bca:	f000 fce1 	bl	10015590 <__retarget_lock_acquire_recursive>
10014bce:	e7eb      	b.n	10014ba8 <_fflush_r+0x1c>
10014bd0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10014bd2:	f000 fcdf 	bl	10015594 <__retarget_lock_release_recursive>
10014bd6:	4628      	mov	r0, r5
10014bd8:	bd38      	pop	{r3, r4, r5, pc}
10014bda:	f000 f8c5 	bl	10014d68 <__sinit>
10014bde:	e7db      	b.n	10014b98 <_fflush_r+0xc>

10014be0 <sprintf>:
10014be0:	b40e      	push	{r1, r2, r3}
10014be2:	b510      	push	{r4, lr}
10014be4:	b09d      	sub	sp, #116	@ 0x74
10014be6:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
10014bea:	ab1f      	add	r3, sp, #124	@ 0x7c
10014bec:	9104      	str	r1, [sp, #16]
10014bee:	9107      	str	r1, [sp, #28]
10014bf0:	4909      	ldr	r1, [pc, #36]	@ (10014c18 <sprintf+0x38>)
10014bf2:	f853 2b04 	ldr.w	r2, [r3], #4
10014bf6:	9002      	str	r0, [sp, #8]
10014bf8:	9006      	str	r0, [sp, #24]
10014bfa:	4c08      	ldr	r4, [pc, #32]	@ (10014c1c <sprintf+0x3c>)
10014bfc:	6808      	ldr	r0, [r1, #0]
10014bfe:	9301      	str	r3, [sp, #4]
10014c00:	a902      	add	r1, sp, #8
10014c02:	9405      	str	r4, [sp, #20]
10014c04:	f001 ffcc 	bl	10016ba0 <_svfprintf_r>
10014c08:	9b02      	ldr	r3, [sp, #8]
10014c0a:	2200      	movs	r2, #0
10014c0c:	701a      	strb	r2, [r3, #0]
10014c0e:	b01d      	add	sp, #116	@ 0x74
10014c10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10014c14:	b003      	add	sp, #12
10014c16:	4770      	bx	lr
10014c18:	200005c0 	.word	0x200005c0
10014c1c:	ffff0208 	.word	0xffff0208

10014c20 <stdio_exit_handler>:
10014c20:	4a02      	ldr	r2, [pc, #8]	@ (10014c2c <stdio_exit_handler+0xc>)
10014c22:	4903      	ldr	r1, [pc, #12]	@ (10014c30 <stdio_exit_handler+0x10>)
10014c24:	4803      	ldr	r0, [pc, #12]	@ (10014c34 <stdio_exit_handler+0x14>)
10014c26:	f000 ba49 	b.w	100150bc <_fwalk_sglue>
10014c2a:	bf00      	nop
10014c2c:	20000448 	.word	0x20000448
10014c30:	10014651 	.word	0x10014651
10014c34:	200005c8 	.word	0x200005c8

10014c38 <cleanup_stdio>:
10014c38:	4b0c      	ldr	r3, [pc, #48]	@ (10014c6c <cleanup_stdio+0x34>)
10014c3a:	6841      	ldr	r1, [r0, #4]
10014c3c:	4299      	cmp	r1, r3
10014c3e:	b510      	push	{r4, lr}
10014c40:	4604      	mov	r4, r0
10014c42:	d001      	beq.n	10014c48 <cleanup_stdio+0x10>
10014c44:	f7ff fd04 	bl	10014650 <_fclose_r>
10014c48:	68a1      	ldr	r1, [r4, #8]
10014c4a:	4b09      	ldr	r3, [pc, #36]	@ (10014c70 <cleanup_stdio+0x38>)
10014c4c:	4299      	cmp	r1, r3
10014c4e:	d002      	beq.n	10014c56 <cleanup_stdio+0x1e>
10014c50:	4620      	mov	r0, r4
10014c52:	f7ff fcfd 	bl	10014650 <_fclose_r>
10014c56:	68e1      	ldr	r1, [r4, #12]
10014c58:	4b06      	ldr	r3, [pc, #24]	@ (10014c74 <cleanup_stdio+0x3c>)
10014c5a:	4299      	cmp	r1, r3
10014c5c:	d004      	beq.n	10014c68 <cleanup_stdio+0x30>
10014c5e:	4620      	mov	r0, r4
10014c60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10014c64:	f7ff bcf4 	b.w	10014650 <_fclose_r>
10014c68:	bd10      	pop	{r4, pc}
10014c6a:	bf00      	nop
10014c6c:	20001460 	.word	0x20001460
10014c70:	200014c8 	.word	0x200014c8
10014c74:	20001530 	.word	0x20001530

10014c78 <global_stdio_init.part.0>:
10014c78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10014c7c:	4c31      	ldr	r4, [pc, #196]	@ (10014d44 <global_stdio_init.part.0+0xcc>)
10014c7e:	4b32      	ldr	r3, [pc, #200]	@ (10014d48 <global_stdio_init.part.0+0xd0>)
10014c80:	4832      	ldr	r0, [pc, #200]	@ (10014d4c <global_stdio_init.part.0+0xd4>)
10014c82:	f8df 90dc 	ldr.w	r9, [pc, #220]	@ 10014d60 <global_stdio_init.part.0+0xe8>
10014c86:	f8df 80dc 	ldr.w	r8, [pc, #220]	@ 10014d64 <global_stdio_init.part.0+0xec>
10014c8a:	4f31      	ldr	r7, [pc, #196]	@ (10014d50 <global_stdio_init.part.0+0xd8>)
10014c8c:	6018      	str	r0, [r3, #0]
10014c8e:	2500      	movs	r5, #0
10014c90:	4629      	mov	r1, r5
10014c92:	2304      	movs	r3, #4
10014c94:	2208      	movs	r2, #8
10014c96:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
10014c9a:	4e2e      	ldr	r6, [pc, #184]	@ (10014d54 <global_stdio_init.part.0+0xdc>)
10014c9c:	60e3      	str	r3, [r4, #12]
10014c9e:	e9c4 5500 	strd	r5, r5, [r4]
10014ca2:	e9c4 5504 	strd	r5, r5, [r4, #16]
10014ca6:	60a5      	str	r5, [r4, #8]
10014ca8:	6665      	str	r5, [r4, #100]	@ 0x64
10014caa:	61a5      	str	r5, [r4, #24]
10014cac:	f000 fb78 	bl	100153a0 <memset>
10014cb0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
10014cb4:	e9c4 4907 	strd	r4, r9, [r4, #28]
10014cb8:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
10014cbc:	62e6      	str	r6, [r4, #44]	@ 0x2c
10014cbe:	f000 fc63 	bl	10015588 <__retarget_lock_init_recursive>
10014cc2:	4629      	mov	r1, r5
10014cc4:	4b24      	ldr	r3, [pc, #144]	@ (10014d58 <global_stdio_init.part.0+0xe0>)
10014cc6:	6763      	str	r3, [r4, #116]	@ 0x74
10014cc8:	2208      	movs	r2, #8
10014cca:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
10014cce:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
10014cd2:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
10014cd6:	6725      	str	r5, [r4, #112]	@ 0x70
10014cd8:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
10014cdc:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
10014ce0:	f000 fb5e 	bl	100153a0 <memset>
10014ce4:	f104 0368 	add.w	r3, r4, #104	@ 0x68
10014ce8:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
10014cec:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
10014cf0:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
10014cf4:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
10014cf8:	f000 fc46 	bl	10015588 <__retarget_lock_init_recursive>
10014cfc:	4b17      	ldr	r3, [pc, #92]	@ (10014d5c <global_stdio_init.part.0+0xe4>)
10014cfe:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
10014d02:	4629      	mov	r1, r5
10014d04:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
10014d08:	2208      	movs	r2, #8
10014d0a:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
10014d0e:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
10014d12:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
10014d16:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
10014d1a:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
10014d1e:	f000 fb3f 	bl	100153a0 <memset>
10014d22:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
10014d26:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
10014d2a:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
10014d2e:	f504 7094 	add.w	r0, r4, #296	@ 0x128
10014d32:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
10014d36:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
10014d3a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10014d3e:	f000 bc23 	b.w	10015588 <__retarget_lock_init_recursive>
10014d42:	bf00      	nop
10014d44:	20001460 	.word	0x20001460
10014d48:	20001598 	.word	0x20001598
10014d4c:	10014c21 	.word	0x10014c21
10014d50:	10018ff5 	.word	0x10018ff5
10014d54:	10019019 	.word	0x10019019
10014d58:	00010009 	.word	0x00010009
10014d5c:	00020012 	.word	0x00020012
10014d60:	10018f91 	.word	0x10018f91
10014d64:	10018fb5 	.word	0x10018fb5

10014d68 <__sinit>:
10014d68:	b510      	push	{r4, lr}
10014d6a:	4604      	mov	r4, r0
10014d6c:	480a      	ldr	r0, [pc, #40]	@ (10014d98 <__sinit+0x30>)
10014d6e:	f000 fc0f 	bl	10015590 <__retarget_lock_acquire_recursive>
10014d72:	6b63      	ldr	r3, [r4, #52]	@ 0x34
10014d74:	b923      	cbnz	r3, 10014d80 <__sinit+0x18>
10014d76:	4b09      	ldr	r3, [pc, #36]	@ (10014d9c <__sinit+0x34>)
10014d78:	4a09      	ldr	r2, [pc, #36]	@ (10014da0 <__sinit+0x38>)
10014d7a:	681b      	ldr	r3, [r3, #0]
10014d7c:	6362      	str	r2, [r4, #52]	@ 0x34
10014d7e:	b123      	cbz	r3, 10014d8a <__sinit+0x22>
10014d80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10014d84:	4804      	ldr	r0, [pc, #16]	@ (10014d98 <__sinit+0x30>)
10014d86:	f000 bc05 	b.w	10015594 <__retarget_lock_release_recursive>
10014d8a:	f7ff ff75 	bl	10014c78 <global_stdio_init.part.0>
10014d8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10014d92:	4801      	ldr	r0, [pc, #4]	@ (10014d98 <__sinit+0x30>)
10014d94:	f000 bbfe 	b.w	10015594 <__retarget_lock_release_recursive>
10014d98:	200015a4 	.word	0x200015a4
10014d9c:	20001598 	.word	0x20001598
10014da0:	10014c39 	.word	0x10014c39

10014da4 <__sfp_lock_acquire>:
10014da4:	4801      	ldr	r0, [pc, #4]	@ (10014dac <__sfp_lock_acquire+0x8>)
10014da6:	f000 bbf3 	b.w	10015590 <__retarget_lock_acquire_recursive>
10014daa:	bf00      	nop
10014dac:	200015a4 	.word	0x200015a4

10014db0 <__sfp_lock_release>:
10014db0:	4801      	ldr	r0, [pc, #4]	@ (10014db8 <__sfp_lock_release+0x8>)
10014db2:	f000 bbef 	b.w	10015594 <__retarget_lock_release_recursive>
10014db6:	bf00      	nop
10014db8:	200015a4 	.word	0x200015a4

10014dbc <__sfvwrite_r>:
10014dbc:	6893      	ldr	r3, [r2, #8]
10014dbe:	2b00      	cmp	r3, #0
10014dc0:	f000 80f8 	beq.w	10014fb4 <__sfvwrite_r+0x1f8>
10014dc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10014dc8:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
10014dcc:	f01c 0f08 	tst.w	ip, #8
10014dd0:	b083      	sub	sp, #12
10014dd2:	4690      	mov	r8, r2
10014dd4:	4681      	mov	r9, r0
10014dd6:	460c      	mov	r4, r1
10014dd8:	d031      	beq.n	10014e3e <__sfvwrite_r+0x82>
10014dda:	690b      	ldr	r3, [r1, #16]
10014ddc:	b37b      	cbz	r3, 10014e3e <__sfvwrite_r+0x82>
10014dde:	f01c 0702 	ands.w	r7, ip, #2
10014de2:	f8d8 6000 	ldr.w	r6, [r8]
10014de6:	d038      	beq.n	10014e5a <__sfvwrite_r+0x9e>
10014de8:	2700      	movs	r7, #0
10014dea:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10014dee:	69e1      	ldr	r1, [r4, #28]
10014df0:	f8df a2c4 	ldr.w	sl, [pc, #708]	@ 100150b8 <__sfvwrite_r+0x2fc>
10014df4:	463d      	mov	r5, r7
10014df6:	4555      	cmp	r5, sl
10014df8:	462b      	mov	r3, r5
10014dfa:	463a      	mov	r2, r7
10014dfc:	bf28      	it	cs
10014dfe:	4653      	movcs	r3, sl
10014e00:	4648      	mov	r0, r9
10014e02:	b1c5      	cbz	r5, 10014e36 <__sfvwrite_r+0x7a>
10014e04:	47d8      	blx	fp
10014e06:	2800      	cmp	r0, #0
10014e08:	f340 80ca 	ble.w	10014fa0 <__sfvwrite_r+0x1e4>
10014e0c:	f8d8 3008 	ldr.w	r3, [r8, #8]
10014e10:	1a1b      	subs	r3, r3, r0
10014e12:	4407      	add	r7, r0
10014e14:	1a2d      	subs	r5, r5, r0
10014e16:	f8c8 3008 	str.w	r3, [r8, #8]
10014e1a:	2b00      	cmp	r3, #0
10014e1c:	f000 80b6 	beq.w	10014f8c <__sfvwrite_r+0x1d0>
10014e20:	4555      	cmp	r5, sl
10014e22:	462b      	mov	r3, r5
10014e24:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10014e28:	69e1      	ldr	r1, [r4, #28]
10014e2a:	bf28      	it	cs
10014e2c:	4653      	movcs	r3, sl
10014e2e:	463a      	mov	r2, r7
10014e30:	4648      	mov	r0, r9
10014e32:	2d00      	cmp	r5, #0
10014e34:	d1e6      	bne.n	10014e04 <__sfvwrite_r+0x48>
10014e36:	e9d6 7500 	ldrd	r7, r5, [r6]
10014e3a:	3608      	adds	r6, #8
10014e3c:	e7db      	b.n	10014df6 <__sfvwrite_r+0x3a>
10014e3e:	4621      	mov	r1, r4
10014e40:	4648      	mov	r0, r9
10014e42:	f000 f95f 	bl	10015104 <__swsetup_r>
10014e46:	2800      	cmp	r0, #0
10014e48:	f040 80af 	bne.w	10014faa <__sfvwrite_r+0x1ee>
10014e4c:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10014e50:	f8d8 6000 	ldr.w	r6, [r8]
10014e54:	f01c 0702 	ands.w	r7, ip, #2
10014e58:	d1c6      	bne.n	10014de8 <__sfvwrite_r+0x2c>
10014e5a:	f01c 0a01 	ands.w	sl, ip, #1
10014e5e:	d163      	bne.n	10014f28 <__sfvwrite_r+0x16c>
10014e60:	6823      	ldr	r3, [r4, #0]
10014e62:	68a1      	ldr	r1, [r4, #8]
10014e64:	4657      	mov	r7, sl
10014e66:	4618      	mov	r0, r3
10014e68:	468b      	mov	fp, r1
10014e6a:	2f00      	cmp	r7, #0
10014e6c:	d058      	beq.n	10014f20 <__sfvwrite_r+0x164>
10014e6e:	f41c 7f00 	tst.w	ip, #512	@ 0x200
10014e72:	f000 80b5 	beq.w	10014fe0 <__sfvwrite_r+0x224>
10014e76:	42b9      	cmp	r1, r7
10014e78:	460a      	mov	r2, r1
10014e7a:	f200 80e1 	bhi.w	10015040 <__sfvwrite_r+0x284>
10014e7e:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
10014e82:	d02f      	beq.n	10014ee4 <__sfvwrite_r+0x128>
10014e84:	6921      	ldr	r1, [r4, #16]
10014e86:	6962      	ldr	r2, [r4, #20]
10014e88:	1a5d      	subs	r5, r3, r1
10014e8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
10014e8e:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
10014e92:	1c6b      	adds	r3, r5, #1
10014e94:	1052      	asrs	r2, r2, #1
10014e96:	443b      	add	r3, r7
10014e98:	4293      	cmp	r3, r2
10014e9a:	bf92      	itee	ls
10014e9c:	4693      	movls	fp, r2
10014e9e:	469b      	movhi	fp, r3
10014ea0:	461a      	movhi	r2, r3
10014ea2:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
10014ea6:	f000 80ea 	beq.w	1001507e <__sfvwrite_r+0x2c2>
10014eaa:	4611      	mov	r1, r2
10014eac:	4648      	mov	r0, r9
10014eae:	f7fc f9db 	bl	10011268 <_malloc_r>
10014eb2:	2800      	cmp	r0, #0
10014eb4:	f000 80f9 	beq.w	100150aa <__sfvwrite_r+0x2ee>
10014eb8:	462a      	mov	r2, r5
10014eba:	6921      	ldr	r1, [r4, #16]
10014ebc:	9000      	str	r0, [sp, #0]
10014ebe:	f000 fbbf 	bl	10015640 <memcpy>
10014ec2:	89a2      	ldrh	r2, [r4, #12]
10014ec4:	9b00      	ldr	r3, [sp, #0]
10014ec6:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10014eca:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
10014ece:	81a2      	strh	r2, [r4, #12]
10014ed0:	1958      	adds	r0, r3, r5
10014ed2:	ebab 0505 	sub.w	r5, fp, r5
10014ed6:	f8c4 b014 	str.w	fp, [r4, #20]
10014eda:	6123      	str	r3, [r4, #16]
10014edc:	60a5      	str	r5, [r4, #8]
10014ede:	6020      	str	r0, [r4, #0]
10014ee0:	46bb      	mov	fp, r7
10014ee2:	463a      	mov	r2, r7
10014ee4:	4651      	mov	r1, sl
10014ee6:	9200      	str	r2, [sp, #0]
10014ee8:	f000 f9da 	bl	100152a0 <memmove>
10014eec:	68a1      	ldr	r1, [r4, #8]
10014eee:	6823      	ldr	r3, [r4, #0]
10014ef0:	9a00      	ldr	r2, [sp, #0]
10014ef2:	eba1 010b 	sub.w	r1, r1, fp
10014ef6:	441a      	add	r2, r3
10014ef8:	463d      	mov	r5, r7
10014efa:	60a1      	str	r1, [r4, #8]
10014efc:	6022      	str	r2, [r4, #0]
10014efe:	2700      	movs	r7, #0
10014f00:	f8d8 3008 	ldr.w	r3, [r8, #8]
10014f04:	1b5b      	subs	r3, r3, r5
10014f06:	44aa      	add	sl, r5
10014f08:	f8c8 3008 	str.w	r3, [r8, #8]
10014f0c:	2b00      	cmp	r3, #0
10014f0e:	d03d      	beq.n	10014f8c <__sfvwrite_r+0x1d0>
10014f10:	6823      	ldr	r3, [r4, #0]
10014f12:	68a1      	ldr	r1, [r4, #8]
10014f14:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10014f18:	4618      	mov	r0, r3
10014f1a:	468b      	mov	fp, r1
10014f1c:	2f00      	cmp	r7, #0
10014f1e:	d1a6      	bne.n	10014e6e <__sfvwrite_r+0xb2>
10014f20:	e9d6 a700 	ldrd	sl, r7, [r6]
10014f24:	3608      	adds	r6, #8
10014f26:	e79e      	b.n	10014e66 <__sfvwrite_r+0xaa>
10014f28:	4638      	mov	r0, r7
10014f2a:	46bb      	mov	fp, r7
10014f2c:	463d      	mov	r5, r7
10014f2e:	9700      	str	r7, [sp, #0]
10014f30:	2d00      	cmp	r5, #0
10014f32:	d041      	beq.n	10014fb8 <__sfvwrite_r+0x1fc>
10014f34:	2800      	cmp	r0, #0
10014f36:	d046      	beq.n	10014fc6 <__sfvwrite_r+0x20a>
10014f38:	9a00      	ldr	r2, [sp, #0]
10014f3a:	6820      	ldr	r0, [r4, #0]
10014f3c:	68a1      	ldr	r1, [r4, #8]
10014f3e:	e9d4 7304 	ldrd	r7, r3, [r4, #16]
10014f42:	42aa      	cmp	r2, r5
10014f44:	bf28      	it	cs
10014f46:	462a      	movcs	r2, r5
10014f48:	42b8      	cmp	r0, r7
10014f4a:	d904      	bls.n	10014f56 <__sfvwrite_r+0x19a>
10014f4c:	eb01 0a03 	add.w	sl, r1, r3
10014f50:	4552      	cmp	r2, sl
10014f52:	f300 8085 	bgt.w	10015060 <__sfvwrite_r+0x2a4>
10014f56:	4293      	cmp	r3, r2
10014f58:	dc75      	bgt.n	10015046 <__sfvwrite_r+0x28a>
10014f5a:	69e1      	ldr	r1, [r4, #28]
10014f5c:	6a67      	ldr	r7, [r4, #36]	@ 0x24
10014f5e:	465a      	mov	r2, fp
10014f60:	4648      	mov	r0, r9
10014f62:	47b8      	blx	r7
10014f64:	f1b0 0a00 	subs.w	sl, r0, #0
10014f68:	dd1a      	ble.n	10014fa0 <__sfvwrite_r+0x1e4>
10014f6a:	9b00      	ldr	r3, [sp, #0]
10014f6c:	ebb3 030a 	subs.w	r3, r3, sl
10014f70:	9300      	str	r3, [sp, #0]
10014f72:	d00f      	beq.n	10014f94 <__sfvwrite_r+0x1d8>
10014f74:	2001      	movs	r0, #1
10014f76:	f8d8 3008 	ldr.w	r3, [r8, #8]
10014f7a:	eba3 030a 	sub.w	r3, r3, sl
10014f7e:	44d3      	add	fp, sl
10014f80:	eba5 050a 	sub.w	r5, r5, sl
10014f84:	f8c8 3008 	str.w	r3, [r8, #8]
10014f88:	2b00      	cmp	r3, #0
10014f8a:	d1d1      	bne.n	10014f30 <__sfvwrite_r+0x174>
10014f8c:	2000      	movs	r0, #0
10014f8e:	b003      	add	sp, #12
10014f90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014f94:	4621      	mov	r1, r4
10014f96:	4648      	mov	r0, r9
10014f98:	f7ff fdf8 	bl	10014b8c <_fflush_r>
10014f9c:	2800      	cmp	r0, #0
10014f9e:	d0ea      	beq.n	10014f76 <__sfvwrite_r+0x1ba>
10014fa0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014fa4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10014fa8:	81a3      	strh	r3, [r4, #12]
10014faa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10014fae:	b003      	add	sp, #12
10014fb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014fb4:	2000      	movs	r0, #0
10014fb6:	4770      	bx	lr
10014fb8:	6875      	ldr	r5, [r6, #4]
10014fba:	4633      	mov	r3, r6
10014fbc:	3608      	adds	r6, #8
10014fbe:	2d00      	cmp	r5, #0
10014fc0:	d0fa      	beq.n	10014fb8 <__sfvwrite_r+0x1fc>
10014fc2:	f8d3 b000 	ldr.w	fp, [r3]
10014fc6:	462a      	mov	r2, r5
10014fc8:	210a      	movs	r1, #10
10014fca:	4658      	mov	r0, fp
10014fcc:	f000 fae8 	bl	100155a0 <memchr>
10014fd0:	2800      	cmp	r0, #0
10014fd2:	d067      	beq.n	100150a4 <__sfvwrite_r+0x2e8>
10014fd4:	3001      	adds	r0, #1
10014fd6:	eba0 030b 	sub.w	r3, r0, fp
10014fda:	9300      	str	r3, [sp, #0]
10014fdc:	461a      	mov	r2, r3
10014fde:	e7ac      	b.n	10014f3a <__sfvwrite_r+0x17e>
10014fe0:	6922      	ldr	r2, [r4, #16]
10014fe2:	429a      	cmp	r2, r3
10014fe4:	d314      	bcc.n	10015010 <__sfvwrite_r+0x254>
10014fe6:	6962      	ldr	r2, [r4, #20]
10014fe8:	42ba      	cmp	r2, r7
10014fea:	d811      	bhi.n	10015010 <__sfvwrite_r+0x254>
10014fec:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10014ff0:	42bb      	cmp	r3, r7
10014ff2:	bf28      	it	cs
10014ff4:	463b      	movcs	r3, r7
10014ff6:	6a65      	ldr	r5, [r4, #36]	@ 0x24
10014ff8:	fb93 f3f2 	sdiv	r3, r3, r2
10014ffc:	69e1      	ldr	r1, [r4, #28]
10014ffe:	fb02 f303 	mul.w	r3, r2, r3
10015002:	4648      	mov	r0, r9
10015004:	4652      	mov	r2, sl
10015006:	47a8      	blx	r5
10015008:	1e05      	subs	r5, r0, #0
1001500a:	ddc9      	ble.n	10014fa0 <__sfvwrite_r+0x1e4>
1001500c:	1b7f      	subs	r7, r7, r5
1001500e:	e777      	b.n	10014f00 <__sfvwrite_r+0x144>
10015010:	42b9      	cmp	r1, r7
10015012:	bf28      	it	cs
10015014:	4639      	movcs	r1, r7
10015016:	460d      	mov	r5, r1
10015018:	4618      	mov	r0, r3
1001501a:	460a      	mov	r2, r1
1001501c:	4651      	mov	r1, sl
1001501e:	f000 f93f 	bl	100152a0 <memmove>
10015022:	68a1      	ldr	r1, [r4, #8]
10015024:	6823      	ldr	r3, [r4, #0]
10015026:	1b49      	subs	r1, r1, r5
10015028:	442b      	add	r3, r5
1001502a:	60a1      	str	r1, [r4, #8]
1001502c:	6023      	str	r3, [r4, #0]
1001502e:	2900      	cmp	r1, #0
10015030:	d1ec      	bne.n	1001500c <__sfvwrite_r+0x250>
10015032:	4621      	mov	r1, r4
10015034:	4648      	mov	r0, r9
10015036:	f7ff fda9 	bl	10014b8c <_fflush_r>
1001503a:	2800      	cmp	r0, #0
1001503c:	d0e6      	beq.n	1001500c <__sfvwrite_r+0x250>
1001503e:	e7af      	b.n	10014fa0 <__sfvwrite_r+0x1e4>
10015040:	46bb      	mov	fp, r7
10015042:	463a      	mov	r2, r7
10015044:	e74e      	b.n	10014ee4 <__sfvwrite_r+0x128>
10015046:	4659      	mov	r1, fp
10015048:	9201      	str	r2, [sp, #4]
1001504a:	f000 f929 	bl	100152a0 <memmove>
1001504e:	9a01      	ldr	r2, [sp, #4]
10015050:	68a3      	ldr	r3, [r4, #8]
10015052:	1a9b      	subs	r3, r3, r2
10015054:	60a3      	str	r3, [r4, #8]
10015056:	6823      	ldr	r3, [r4, #0]
10015058:	4413      	add	r3, r2
1001505a:	6023      	str	r3, [r4, #0]
1001505c:	4692      	mov	sl, r2
1001505e:	e784      	b.n	10014f6a <__sfvwrite_r+0x1ae>
10015060:	4659      	mov	r1, fp
10015062:	4652      	mov	r2, sl
10015064:	f000 f91c 	bl	100152a0 <memmove>
10015068:	6823      	ldr	r3, [r4, #0]
1001506a:	4453      	add	r3, sl
1001506c:	6023      	str	r3, [r4, #0]
1001506e:	4621      	mov	r1, r4
10015070:	4648      	mov	r0, r9
10015072:	f7ff fd8b 	bl	10014b8c <_fflush_r>
10015076:	2800      	cmp	r0, #0
10015078:	f43f af77 	beq.w	10014f6a <__sfvwrite_r+0x1ae>
1001507c:	e790      	b.n	10014fa0 <__sfvwrite_r+0x1e4>
1001507e:	4648      	mov	r0, r9
10015080:	f7ff fb46 	bl	10014710 <_realloc_r>
10015084:	4603      	mov	r3, r0
10015086:	2800      	cmp	r0, #0
10015088:	f47f af22 	bne.w	10014ed0 <__sfvwrite_r+0x114>
1001508c:	6921      	ldr	r1, [r4, #16]
1001508e:	4648      	mov	r0, r9
10015090:	f001 fc70 	bl	10016974 <_free_r>
10015094:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015098:	220c      	movs	r2, #12
1001509a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
1001509e:	f8c9 2000 	str.w	r2, [r9]
100150a2:	e77f      	b.n	10014fa4 <__sfvwrite_r+0x1e8>
100150a4:	1c6a      	adds	r2, r5, #1
100150a6:	9200      	str	r2, [sp, #0]
100150a8:	e747      	b.n	10014f3a <__sfvwrite_r+0x17e>
100150aa:	220c      	movs	r2, #12
100150ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100150b0:	f8c9 2000 	str.w	r2, [r9]
100150b4:	e776      	b.n	10014fa4 <__sfvwrite_r+0x1e8>
100150b6:	bf00      	nop
100150b8:	7ffffc00 	.word	0x7ffffc00

100150bc <_fwalk_sglue>:
100150bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100150c0:	4680      	mov	r8, r0
100150c2:	460f      	mov	r7, r1
100150c4:	4616      	mov	r6, r2
100150c6:	f04f 0900 	mov.w	r9, #0
100150ca:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
100150ce:	3d01      	subs	r5, #1
100150d0:	d411      	bmi.n	100150f6 <_fwalk_sglue+0x3a>
100150d2:	89a3      	ldrh	r3, [r4, #12]
100150d4:	2b01      	cmp	r3, #1
100150d6:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
100150da:	d908      	bls.n	100150ee <_fwalk_sglue+0x32>
100150dc:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
100150e0:	3301      	adds	r3, #1
100150e2:	4621      	mov	r1, r4
100150e4:	d003      	beq.n	100150ee <_fwalk_sglue+0x32>
100150e6:	4640      	mov	r0, r8
100150e8:	47b8      	blx	r7
100150ea:	ea49 0900 	orr.w	r9, r9, r0
100150ee:	1c6b      	adds	r3, r5, #1
100150f0:	f104 0468 	add.w	r4, r4, #104	@ 0x68
100150f4:	d1ed      	bne.n	100150d2 <_fwalk_sglue+0x16>
100150f6:	6836      	ldr	r6, [r6, #0]
100150f8:	2e00      	cmp	r6, #0
100150fa:	d1e6      	bne.n	100150ca <_fwalk_sglue+0xe>
100150fc:	4648      	mov	r0, r9
100150fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10015102:	bf00      	nop

10015104 <__swsetup_r>:
10015104:	b538      	push	{r3, r4, r5, lr}
10015106:	4b2e      	ldr	r3, [pc, #184]	@ (100151c0 <__swsetup_r+0xbc>)
10015108:	681b      	ldr	r3, [r3, #0]
1001510a:	4605      	mov	r5, r0
1001510c:	460c      	mov	r4, r1
1001510e:	b113      	cbz	r3, 10015116 <__swsetup_r+0x12>
10015110:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
10015112:	2a00      	cmp	r2, #0
10015114:	d04b      	beq.n	100151ae <__swsetup_r+0xaa>
10015116:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001511a:	0718      	lsls	r0, r3, #28
1001511c:	d51c      	bpl.n	10015158 <__swsetup_r+0x54>
1001511e:	6922      	ldr	r2, [r4, #16]
10015120:	b322      	cbz	r2, 1001516c <__swsetup_r+0x68>
10015122:	f013 0101 	ands.w	r1, r3, #1
10015126:	d007      	beq.n	10015138 <__swsetup_r+0x34>
10015128:	6961      	ldr	r1, [r4, #20]
1001512a:	2000      	movs	r0, #0
1001512c:	4249      	negs	r1, r1
1001512e:	60a0      	str	r0, [r4, #8]
10015130:	61a1      	str	r1, [r4, #24]
10015132:	b13a      	cbz	r2, 10015144 <__swsetup_r+0x40>
10015134:	2000      	movs	r0, #0
10015136:	bd38      	pop	{r3, r4, r5, pc}
10015138:	0798      	lsls	r0, r3, #30
1001513a:	bf58      	it	pl
1001513c:	6961      	ldrpl	r1, [r4, #20]
1001513e:	60a1      	str	r1, [r4, #8]
10015140:	2a00      	cmp	r2, #0
10015142:	d1f7      	bne.n	10015134 <__swsetup_r+0x30>
10015144:	0619      	lsls	r1, r3, #24
10015146:	bf58      	it	pl
10015148:	4610      	movpl	r0, r2
1001514a:	d5f4      	bpl.n	10015136 <__swsetup_r+0x32>
1001514c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015150:	81a3      	strh	r3, [r4, #12]
10015152:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10015156:	bd38      	pop	{r3, r4, r5, pc}
10015158:	06d9      	lsls	r1, r3, #27
1001515a:	d52c      	bpl.n	100151b6 <__swsetup_r+0xb2>
1001515c:	075a      	lsls	r2, r3, #29
1001515e:	d412      	bmi.n	10015186 <__swsetup_r+0x82>
10015160:	6922      	ldr	r2, [r4, #16]
10015162:	f043 0308 	orr.w	r3, r3, #8
10015166:	81a3      	strh	r3, [r4, #12]
10015168:	2a00      	cmp	r2, #0
1001516a:	d1da      	bne.n	10015122 <__swsetup_r+0x1e>
1001516c:	f403 7120 	and.w	r1, r3, #640	@ 0x280
10015170:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10015174:	d0d5      	beq.n	10015122 <__swsetup_r+0x1e>
10015176:	4621      	mov	r1, r4
10015178:	4628      	mov	r0, r5
1001517a:	f003 fae1 	bl	10018740 <__smakebuf_r>
1001517e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015182:	6922      	ldr	r2, [r4, #16]
10015184:	e7cd      	b.n	10015122 <__swsetup_r+0x1e>
10015186:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10015188:	b151      	cbz	r1, 100151a0 <__swsetup_r+0x9c>
1001518a:	f104 0240 	add.w	r2, r4, #64	@ 0x40
1001518e:	4291      	cmp	r1, r2
10015190:	d004      	beq.n	1001519c <__swsetup_r+0x98>
10015192:	4628      	mov	r0, r5
10015194:	f001 fbee 	bl	10016974 <_free_r>
10015198:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001519c:	2200      	movs	r2, #0
1001519e:	6322      	str	r2, [r4, #48]	@ 0x30
100151a0:	6922      	ldr	r2, [r4, #16]
100151a2:	2100      	movs	r1, #0
100151a4:	e9c4 2100 	strd	r2, r1, [r4]
100151a8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
100151ac:	e7d9      	b.n	10015162 <__swsetup_r+0x5e>
100151ae:	4618      	mov	r0, r3
100151b0:	f7ff fdda 	bl	10014d68 <__sinit>
100151b4:	e7af      	b.n	10015116 <__swsetup_r+0x12>
100151b6:	2209      	movs	r2, #9
100151b8:	602a      	str	r2, [r5, #0]
100151ba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100151be:	e7c7      	b.n	10015150 <__swsetup_r+0x4c>
100151c0:	200005c0 	.word	0x200005c0

100151c4 <__fputwc>:
100151c4:	b570      	push	{r4, r5, r6, lr}
100151c6:	b082      	sub	sp, #8
100151c8:	4606      	mov	r6, r0
100151ca:	460d      	mov	r5, r1
100151cc:	4614      	mov	r4, r2
100151ce:	f000 f96d 	bl	100154ac <__locale_mb_cur_max>
100151d2:	2801      	cmp	r0, #1
100151d4:	d102      	bne.n	100151dc <__fputwc+0x18>
100151d6:	1e6b      	subs	r3, r5, #1
100151d8:	2bfe      	cmp	r3, #254	@ 0xfe
100151da:	d926      	bls.n	1001522a <__fputwc+0x66>
100151dc:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
100151e0:	462a      	mov	r2, r5
100151e2:	a901      	add	r1, sp, #4
100151e4:	4630      	mov	r0, r6
100151e6:	f000 fb37 	bl	10015858 <_wcrtomb_r>
100151ea:	1c43      	adds	r3, r0, #1
100151ec:	d020      	beq.n	10015230 <__fputwc+0x6c>
100151ee:	b178      	cbz	r0, 10015210 <__fputwc+0x4c>
100151f0:	68a3      	ldr	r3, [r4, #8]
100151f2:	f89d 1004 	ldrb.w	r1, [sp, #4]
100151f6:	3b01      	subs	r3, #1
100151f8:	2b00      	cmp	r3, #0
100151fa:	60a3      	str	r3, [r4, #8]
100151fc:	da04      	bge.n	10015208 <__fputwc+0x44>
100151fe:	69a2      	ldr	r2, [r4, #24]
10015200:	4293      	cmp	r3, r2
10015202:	db08      	blt.n	10015216 <__fputwc+0x52>
10015204:	290a      	cmp	r1, #10
10015206:	d006      	beq.n	10015216 <__fputwc+0x52>
10015208:	6823      	ldr	r3, [r4, #0]
1001520a:	1c5a      	adds	r2, r3, #1
1001520c:	6022      	str	r2, [r4, #0]
1001520e:	7019      	strb	r1, [r3, #0]
10015210:	4628      	mov	r0, r5
10015212:	b002      	add	sp, #8
10015214:	bd70      	pop	{r4, r5, r6, pc}
10015216:	4622      	mov	r2, r4
10015218:	4630      	mov	r0, r6
1001521a:	f003 ff0f 	bl	1001903c <__swbuf_r>
1001521e:	3001      	adds	r0, #1
10015220:	d1f6      	bne.n	10015210 <__fputwc+0x4c>
10015222:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10015226:	b002      	add	sp, #8
10015228:	bd70      	pop	{r4, r5, r6, pc}
1001522a:	f88d 5004 	strb.w	r5, [sp, #4]
1001522e:	e7df      	b.n	100151f0 <__fputwc+0x2c>
10015230:	89a3      	ldrh	r3, [r4, #12]
10015232:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015236:	81a3      	strh	r3, [r4, #12]
10015238:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001523c:	e7f3      	b.n	10015226 <__fputwc+0x62>
1001523e:	bf00      	nop

10015240 <_fputwc_r>:
10015240:	b530      	push	{r4, r5, lr}
10015242:	4614      	mov	r4, r2
10015244:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10015246:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001524a:	4605      	mov	r5, r0
1001524c:	07d0      	lsls	r0, r2, #31
1001524e:	b083      	sub	sp, #12
10015250:	d401      	bmi.n	10015256 <_fputwc_r+0x16>
10015252:	059a      	lsls	r2, r3, #22
10015254:	d51c      	bpl.n	10015290 <_fputwc_r+0x50>
10015256:	0498      	lsls	r0, r3, #18
10015258:	d406      	bmi.n	10015268 <_fputwc_r+0x28>
1001525a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001525c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10015260:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10015264:	81a3      	strh	r3, [r4, #12]
10015266:	6662      	str	r2, [r4, #100]	@ 0x64
10015268:	4622      	mov	r2, r4
1001526a:	4628      	mov	r0, r5
1001526c:	f7ff ffaa 	bl	100151c4 <__fputwc>
10015270:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015272:	07da      	lsls	r2, r3, #31
10015274:	4605      	mov	r5, r0
10015276:	d402      	bmi.n	1001527e <_fputwc_r+0x3e>
10015278:	89a3      	ldrh	r3, [r4, #12]
1001527a:	059b      	lsls	r3, r3, #22
1001527c:	d502      	bpl.n	10015284 <_fputwc_r+0x44>
1001527e:	4628      	mov	r0, r5
10015280:	b003      	add	sp, #12
10015282:	bd30      	pop	{r4, r5, pc}
10015284:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015286:	f000 f985 	bl	10015594 <__retarget_lock_release_recursive>
1001528a:	4628      	mov	r0, r5
1001528c:	b003      	add	sp, #12
1001528e:	bd30      	pop	{r4, r5, pc}
10015290:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015292:	9101      	str	r1, [sp, #4]
10015294:	f000 f97c 	bl	10015590 <__retarget_lock_acquire_recursive>
10015298:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001529c:	9901      	ldr	r1, [sp, #4]
1001529e:	e7da      	b.n	10015256 <_fputwc_r+0x16>

100152a0 <memmove>:
100152a0:	4288      	cmp	r0, r1
100152a2:	d90e      	bls.n	100152c2 <memmove+0x22>
100152a4:	188b      	adds	r3, r1, r2
100152a6:	4283      	cmp	r3, r0
100152a8:	d90b      	bls.n	100152c2 <memmove+0x22>
100152aa:	eb00 0c02 	add.w	ip, r0, r2
100152ae:	2a00      	cmp	r2, #0
100152b0:	d06e      	beq.n	10015390 <memmove+0xf0>
100152b2:	4662      	mov	r2, ip
100152b4:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
100152b8:	f802 cd01 	strb.w	ip, [r2, #-1]!
100152bc:	4299      	cmp	r1, r3
100152be:	d1f9      	bne.n	100152b4 <memmove+0x14>
100152c0:	4770      	bx	lr
100152c2:	2a0f      	cmp	r2, #15
100152c4:	d80f      	bhi.n	100152e6 <memmove+0x46>
100152c6:	4603      	mov	r3, r0
100152c8:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
100152cc:	2a00      	cmp	r2, #0
100152ce:	d05f      	beq.n	10015390 <memmove+0xf0>
100152d0:	f10c 0c01 	add.w	ip, ip, #1
100152d4:	3b01      	subs	r3, #1
100152d6:	448c      	add	ip, r1
100152d8:	f811 2b01 	ldrb.w	r2, [r1], #1
100152dc:	f803 2f01 	strb.w	r2, [r3, #1]!
100152e0:	4561      	cmp	r1, ip
100152e2:	d1f9      	bne.n	100152d8 <memmove+0x38>
100152e4:	4770      	bx	lr
100152e6:	ea40 0301 	orr.w	r3, r0, r1
100152ea:	079b      	lsls	r3, r3, #30
100152ec:	d151      	bne.n	10015392 <memmove+0xf2>
100152ee:	f1a2 0310 	sub.w	r3, r2, #16
100152f2:	b570      	push	{r4, r5, r6, lr}
100152f4:	f101 0c20 	add.w	ip, r1, #32
100152f8:	f023 050f 	bic.w	r5, r3, #15
100152fc:	f101 0e10 	add.w	lr, r1, #16
10015300:	f100 0410 	add.w	r4, r0, #16
10015304:	44ac      	add	ip, r5
10015306:	091b      	lsrs	r3, r3, #4
10015308:	f85e 5c10 	ldr.w	r5, [lr, #-16]
1001530c:	f844 5c10 	str.w	r5, [r4, #-16]
10015310:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
10015314:	f844 5c0c 	str.w	r5, [r4, #-12]
10015318:	f85e 5c08 	ldr.w	r5, [lr, #-8]
1001531c:	f844 5c08 	str.w	r5, [r4, #-8]
10015320:	f85e 5c04 	ldr.w	r5, [lr, #-4]
10015324:	f844 5c04 	str.w	r5, [r4, #-4]
10015328:	f10e 0e10 	add.w	lr, lr, #16
1001532c:	45e6      	cmp	lr, ip
1001532e:	f104 0410 	add.w	r4, r4, #16
10015332:	d1e9      	bne.n	10015308 <memmove+0x68>
10015334:	3301      	adds	r3, #1
10015336:	f012 0f0c 	tst.w	r2, #12
1001533a:	eb01 1103 	add.w	r1, r1, r3, lsl #4
1001533e:	f002 040f 	and.w	r4, r2, #15
10015342:	eb00 1303 	add.w	r3, r0, r3, lsl #4
10015346:	d028      	beq.n	1001539a <memmove+0xfa>
10015348:	3c04      	subs	r4, #4
1001534a:	f024 0603 	bic.w	r6, r4, #3
1001534e:	ea4f 0c94 	mov.w	ip, r4, lsr #2
10015352:	441e      	add	r6, r3
10015354:	1f1c      	subs	r4, r3, #4
10015356:	468e      	mov	lr, r1
10015358:	f85e 5b04 	ldr.w	r5, [lr], #4
1001535c:	f844 5f04 	str.w	r5, [r4, #4]!
10015360:	42b4      	cmp	r4, r6
10015362:	d1f9      	bne.n	10015358 <memmove+0xb8>
10015364:	f10c 0401 	add.w	r4, ip, #1
10015368:	f002 0203 	and.w	r2, r2, #3
1001536c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
10015370:	eb01 0184 	add.w	r1, r1, r4, lsl #2
10015374:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10015378:	b14a      	cbz	r2, 1001538e <memmove+0xee>
1001537a:	f10c 0c01 	add.w	ip, ip, #1
1001537e:	3b01      	subs	r3, #1
10015380:	448c      	add	ip, r1
10015382:	f811 2b01 	ldrb.w	r2, [r1], #1
10015386:	f803 2f01 	strb.w	r2, [r3, #1]!
1001538a:	4561      	cmp	r1, ip
1001538c:	d1f9      	bne.n	10015382 <memmove+0xe2>
1001538e:	bd70      	pop	{r4, r5, r6, pc}
10015390:	4770      	bx	lr
10015392:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10015396:	4603      	mov	r3, r0
10015398:	e79a      	b.n	100152d0 <memmove+0x30>
1001539a:	4622      	mov	r2, r4
1001539c:	e7ea      	b.n	10015374 <memmove+0xd4>
1001539e:	bf00      	nop

100153a0 <memset>:
100153a0:	0783      	lsls	r3, r0, #30
100153a2:	b530      	push	{r4, r5, lr}
100153a4:	d047      	beq.n	10015436 <memset+0x96>
100153a6:	1e54      	subs	r4, r2, #1
100153a8:	2a00      	cmp	r2, #0
100153aa:	d03e      	beq.n	1001542a <memset+0x8a>
100153ac:	b2ca      	uxtb	r2, r1
100153ae:	4603      	mov	r3, r0
100153b0:	e001      	b.n	100153b6 <memset+0x16>
100153b2:	3c01      	subs	r4, #1
100153b4:	d339      	bcc.n	1001542a <memset+0x8a>
100153b6:	f803 2b01 	strb.w	r2, [r3], #1
100153ba:	079d      	lsls	r5, r3, #30
100153bc:	d1f9      	bne.n	100153b2 <memset+0x12>
100153be:	2c03      	cmp	r4, #3
100153c0:	d92c      	bls.n	1001541c <memset+0x7c>
100153c2:	b2cd      	uxtb	r5, r1
100153c4:	eb05 2505 	add.w	r5, r5, r5, lsl #8
100153c8:	2c0f      	cmp	r4, #15
100153ca:	eb05 4505 	add.w	r5, r5, r5, lsl #16
100153ce:	d935      	bls.n	1001543c <memset+0x9c>
100153d0:	f1a4 0210 	sub.w	r2, r4, #16
100153d4:	f022 0c0f 	bic.w	ip, r2, #15
100153d8:	f103 0e10 	add.w	lr, r3, #16
100153dc:	44e6      	add	lr, ip
100153de:	ea4f 1c12 	mov.w	ip, r2, lsr #4
100153e2:	461a      	mov	r2, r3
100153e4:	6015      	str	r5, [r2, #0]
100153e6:	6055      	str	r5, [r2, #4]
100153e8:	6095      	str	r5, [r2, #8]
100153ea:	60d5      	str	r5, [r2, #12]
100153ec:	3210      	adds	r2, #16
100153ee:	4572      	cmp	r2, lr
100153f0:	d1f8      	bne.n	100153e4 <memset+0x44>
100153f2:	f10c 0201 	add.w	r2, ip, #1
100153f6:	f014 0f0c 	tst.w	r4, #12
100153fa:	eb03 1202 	add.w	r2, r3, r2, lsl #4
100153fe:	f004 0c0f 	and.w	ip, r4, #15
10015402:	d013      	beq.n	1001542c <memset+0x8c>
10015404:	f1ac 0304 	sub.w	r3, ip, #4
10015408:	f023 0303 	bic.w	r3, r3, #3
1001540c:	3304      	adds	r3, #4
1001540e:	4413      	add	r3, r2
10015410:	f842 5b04 	str.w	r5, [r2], #4
10015414:	429a      	cmp	r2, r3
10015416:	d1fb      	bne.n	10015410 <memset+0x70>
10015418:	f00c 0403 	and.w	r4, ip, #3
1001541c:	b12c      	cbz	r4, 1001542a <memset+0x8a>
1001541e:	b2c9      	uxtb	r1, r1
10015420:	441c      	add	r4, r3
10015422:	f803 1b01 	strb.w	r1, [r3], #1
10015426:	429c      	cmp	r4, r3
10015428:	d1fb      	bne.n	10015422 <memset+0x82>
1001542a:	bd30      	pop	{r4, r5, pc}
1001542c:	4664      	mov	r4, ip
1001542e:	4613      	mov	r3, r2
10015430:	2c00      	cmp	r4, #0
10015432:	d1f4      	bne.n	1001541e <memset+0x7e>
10015434:	e7f9      	b.n	1001542a <memset+0x8a>
10015436:	4603      	mov	r3, r0
10015438:	4614      	mov	r4, r2
1001543a:	e7c0      	b.n	100153be <memset+0x1e>
1001543c:	461a      	mov	r2, r3
1001543e:	46a4      	mov	ip, r4
10015440:	e7e0      	b.n	10015404 <memset+0x64>
10015442:	bf00      	nop

10015444 <strncpy>:
10015444:	ea40 0301 	orr.w	r3, r0, r1
10015448:	079b      	lsls	r3, r3, #30
1001544a:	b510      	push	{r4, lr}
1001544c:	d101      	bne.n	10015452 <strncpy+0xe>
1001544e:	2a03      	cmp	r2, #3
10015450:	d817      	bhi.n	10015482 <strncpy+0x3e>
10015452:	4684      	mov	ip, r0
10015454:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10015458:	e007      	b.n	1001546a <strncpy+0x26>
1001545a:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
1001545e:	f803 1b01 	strb.w	r1, [r3], #1
10015462:	1e54      	subs	r4, r2, #1
10015464:	b129      	cbz	r1, 10015472 <strncpy+0x2e>
10015466:	469c      	mov	ip, r3
10015468:	4622      	mov	r2, r4
1001546a:	4663      	mov	r3, ip
1001546c:	2a00      	cmp	r2, #0
1001546e:	d1f4      	bne.n	1001545a <strncpy+0x16>
10015470:	bd10      	pop	{r4, pc}
10015472:	4494      	add	ip, r2
10015474:	2c00      	cmp	r4, #0
10015476:	d0fb      	beq.n	10015470 <strncpy+0x2c>
10015478:	f803 1b01 	strb.w	r1, [r3], #1
1001547c:	4563      	cmp	r3, ip
1001547e:	d1fb      	bne.n	10015478 <strncpy+0x34>
10015480:	bd10      	pop	{r4, pc}
10015482:	468e      	mov	lr, r1
10015484:	4684      	mov	ip, r0
10015486:	f8de 4000 	ldr.w	r4, [lr]
1001548a:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
1001548e:	ea23 0304 	bic.w	r3, r3, r4
10015492:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
10015496:	4671      	mov	r1, lr
10015498:	f10e 0e04 	add.w	lr, lr, #4
1001549c:	d1da      	bne.n	10015454 <strncpy+0x10>
1001549e:	3a04      	subs	r2, #4
100154a0:	2a03      	cmp	r2, #3
100154a2:	f84c 4b04 	str.w	r4, [ip], #4
100154a6:	d8ee      	bhi.n	10015486 <strncpy+0x42>
100154a8:	4671      	mov	r1, lr
100154aa:	e7d3      	b.n	10015454 <strncpy+0x10>

100154ac <__locale_mb_cur_max>:
100154ac:	4b01      	ldr	r3, [pc, #4]	@ (100154b4 <__locale_mb_cur_max+0x8>)
100154ae:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
100154b2:	4770      	bx	lr
100154b4:	20000454 	.word	0x20000454

100154b8 <_localeconv_r>:
100154b8:	4800      	ldr	r0, [pc, #0]	@ (100154bc <_localeconv_r+0x4>)
100154ba:	4770      	bx	lr
100154bc:	20000544 	.word	0x20000544

100154c0 <_fstat_r>:
100154c0:	b570      	push	{r4, r5, r6, lr}
100154c2:	460c      	mov	r4, r1
100154c4:	4d08      	ldr	r5, [pc, #32]	@ (100154e8 <_fstat_r+0x28>)
100154c6:	4603      	mov	r3, r0
100154c8:	2600      	movs	r6, #0
100154ca:	4620      	mov	r0, r4
100154cc:	4611      	mov	r1, r2
100154ce:	461c      	mov	r4, r3
100154d0:	602e      	str	r6, [r5, #0]
100154d2:	f7fa fb41 	bl	1000fb58 <_fstat>
100154d6:	1c43      	adds	r3, r0, #1
100154d8:	d000      	beq.n	100154dc <_fstat_r+0x1c>
100154da:	bd70      	pop	{r4, r5, r6, pc}
100154dc:	682b      	ldr	r3, [r5, #0]
100154de:	2b00      	cmp	r3, #0
100154e0:	d0fb      	beq.n	100154da <_fstat_r+0x1a>
100154e2:	6023      	str	r3, [r4, #0]
100154e4:	bd70      	pop	{r4, r5, r6, pc}
100154e6:	bf00      	nop
100154e8:	200015ac 	.word	0x200015ac

100154ec <_sbrk_r>:
100154ec:	b538      	push	{r3, r4, r5, lr}
100154ee:	4d07      	ldr	r5, [pc, #28]	@ (1001550c <_sbrk_r+0x20>)
100154f0:	2200      	movs	r2, #0
100154f2:	4604      	mov	r4, r0
100154f4:	4608      	mov	r0, r1
100154f6:	602a      	str	r2, [r5, #0]
100154f8:	f7fa fcaa 	bl	1000fe50 <_sbrk>
100154fc:	1c43      	adds	r3, r0, #1
100154fe:	d000      	beq.n	10015502 <_sbrk_r+0x16>
10015500:	bd38      	pop	{r3, r4, r5, pc}
10015502:	682b      	ldr	r3, [r5, #0]
10015504:	2b00      	cmp	r3, #0
10015506:	d0fb      	beq.n	10015500 <_sbrk_r+0x14>
10015508:	6023      	str	r3, [r4, #0]
1001550a:	bd38      	pop	{r3, r4, r5, pc}
1001550c:	200015ac 	.word	0x200015ac

10015510 <__errno>:
10015510:	4b01      	ldr	r3, [pc, #4]	@ (10015518 <__errno+0x8>)
10015512:	6818      	ldr	r0, [r3, #0]
10015514:	4770      	bx	lr
10015516:	bf00      	nop
10015518:	200005c0 	.word	0x200005c0

1001551c <sysconf>:
1001551c:	2808      	cmp	r0, #8
1001551e:	d102      	bne.n	10015526 <sysconf+0xa>
10015520:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
10015524:	4770      	bx	lr
10015526:	b508      	push	{r3, lr}
10015528:	f7ff fff2 	bl	10015510 <__errno>
1001552c:	2316      	movs	r3, #22
1001552e:	6003      	str	r3, [r0, #0]
10015530:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10015534:	bd08      	pop	{r3, pc}
10015536:	bf00      	nop

10015538 <__libc_init_array>:
10015538:	b570      	push	{r4, r5, r6, lr}
1001553a:	4b0f      	ldr	r3, [pc, #60]	@ (10015578 <__libc_init_array+0x40>)
1001553c:	4d0f      	ldr	r5, [pc, #60]	@ (1001557c <__libc_init_array+0x44>)
1001553e:	42ab      	cmp	r3, r5
10015540:	eba3 0605 	sub.w	r6, r3, r5
10015544:	d007      	beq.n	10015556 <__libc_init_array+0x1e>
10015546:	10b6      	asrs	r6, r6, #2
10015548:	2400      	movs	r4, #0
1001554a:	f855 3b04 	ldr.w	r3, [r5], #4
1001554e:	3401      	adds	r4, #1
10015550:	4798      	blx	r3
10015552:	42a6      	cmp	r6, r4
10015554:	d8f9      	bhi.n	1001554a <__libc_init_array+0x12>
10015556:	f007 f9ef 	bl	1001c938 <_init>
1001555a:	4d09      	ldr	r5, [pc, #36]	@ (10015580 <__libc_init_array+0x48>)
1001555c:	4b09      	ldr	r3, [pc, #36]	@ (10015584 <__libc_init_array+0x4c>)
1001555e:	1b5e      	subs	r6, r3, r5
10015560:	42ab      	cmp	r3, r5
10015562:	ea4f 06a6 	mov.w	r6, r6, asr #2
10015566:	d006      	beq.n	10015576 <__libc_init_array+0x3e>
10015568:	2400      	movs	r4, #0
1001556a:	f855 3b04 	ldr.w	r3, [r5], #4
1001556e:	3401      	adds	r4, #1
10015570:	4798      	blx	r3
10015572:	42a6      	cmp	r6, r4
10015574:	d8f9      	bhi.n	1001556a <__libc_init_array+0x32>
10015576:	bd70      	pop	{r4, r5, r6, pc}
10015578:	200006ec 	.word	0x200006ec
1001557c:	200006ec 	.word	0x200006ec
10015580:	200006ec 	.word	0x200006ec
10015584:	200006f4 	.word	0x200006f4

10015588 <__retarget_lock_init_recursive>:
10015588:	4770      	bx	lr
1001558a:	bf00      	nop

1001558c <__retarget_lock_close_recursive>:
1001558c:	4770      	bx	lr
1001558e:	bf00      	nop

10015590 <__retarget_lock_acquire_recursive>:
10015590:	4770      	bx	lr
10015592:	bf00      	nop

10015594 <__retarget_lock_release_recursive>:
10015594:	4770      	bx	lr
10015596:	bf00      	nop
	...

100155a0 <memchr>:
100155a0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
100155a4:	2a10      	cmp	r2, #16
100155a6:	db2b      	blt.n	10015600 <memchr+0x60>
100155a8:	f010 0f07 	tst.w	r0, #7
100155ac:	d008      	beq.n	100155c0 <memchr+0x20>
100155ae:	f810 3b01 	ldrb.w	r3, [r0], #1
100155b2:	3a01      	subs	r2, #1
100155b4:	428b      	cmp	r3, r1
100155b6:	d02d      	beq.n	10015614 <memchr+0x74>
100155b8:	f010 0f07 	tst.w	r0, #7
100155bc:	b342      	cbz	r2, 10015610 <memchr+0x70>
100155be:	d1f6      	bne.n	100155ae <memchr+0xe>
100155c0:	b4f0      	push	{r4, r5, r6, r7}
100155c2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
100155c6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
100155ca:	f022 0407 	bic.w	r4, r2, #7
100155ce:	f07f 0700 	mvns.w	r7, #0
100155d2:	2300      	movs	r3, #0
100155d4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
100155d8:	3c08      	subs	r4, #8
100155da:	ea85 0501 	eor.w	r5, r5, r1
100155de:	ea86 0601 	eor.w	r6, r6, r1
100155e2:	fa85 f547 	uadd8	r5, r5, r7
100155e6:	faa3 f587 	sel	r5, r3, r7
100155ea:	fa86 f647 	uadd8	r6, r6, r7
100155ee:	faa5 f687 	sel	r6, r5, r7
100155f2:	b98e      	cbnz	r6, 10015618 <memchr+0x78>
100155f4:	d1ee      	bne.n	100155d4 <memchr+0x34>
100155f6:	bcf0      	pop	{r4, r5, r6, r7}
100155f8:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
100155fc:	f002 0207 	and.w	r2, r2, #7
10015600:	b132      	cbz	r2, 10015610 <memchr+0x70>
10015602:	f810 3b01 	ldrb.w	r3, [r0], #1
10015606:	3a01      	subs	r2, #1
10015608:	ea83 0301 	eor.w	r3, r3, r1
1001560c:	b113      	cbz	r3, 10015614 <memchr+0x74>
1001560e:	d1f8      	bne.n	10015602 <memchr+0x62>
10015610:	2000      	movs	r0, #0
10015612:	4770      	bx	lr
10015614:	3801      	subs	r0, #1
10015616:	4770      	bx	lr
10015618:	2d00      	cmp	r5, #0
1001561a:	bf06      	itte	eq
1001561c:	4635      	moveq	r5, r6
1001561e:	3803      	subeq	r0, #3
10015620:	3807      	subne	r0, #7
10015622:	f015 0f01 	tst.w	r5, #1
10015626:	d107      	bne.n	10015638 <memchr+0x98>
10015628:	3001      	adds	r0, #1
1001562a:	f415 7f80 	tst.w	r5, #256	@ 0x100
1001562e:	bf02      	ittt	eq
10015630:	3001      	addeq	r0, #1
10015632:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
10015636:	3001      	addeq	r0, #1
10015638:	bcf0      	pop	{r4, r5, r6, r7}
1001563a:	3801      	subs	r0, #1
1001563c:	4770      	bx	lr
1001563e:	bf00      	nop

10015640 <memcpy>:
10015640:	4684      	mov	ip, r0
10015642:	ea41 0300 	orr.w	r3, r1, r0
10015646:	f013 0303 	ands.w	r3, r3, #3
1001564a:	d16d      	bne.n	10015728 <memcpy+0xe8>
1001564c:	3a40      	subs	r2, #64	@ 0x40
1001564e:	d341      	bcc.n	100156d4 <memcpy+0x94>
10015650:	f851 3b04 	ldr.w	r3, [r1], #4
10015654:	f840 3b04 	str.w	r3, [r0], #4
10015658:	f851 3b04 	ldr.w	r3, [r1], #4
1001565c:	f840 3b04 	str.w	r3, [r0], #4
10015660:	f851 3b04 	ldr.w	r3, [r1], #4
10015664:	f840 3b04 	str.w	r3, [r0], #4
10015668:	f851 3b04 	ldr.w	r3, [r1], #4
1001566c:	f840 3b04 	str.w	r3, [r0], #4
10015670:	f851 3b04 	ldr.w	r3, [r1], #4
10015674:	f840 3b04 	str.w	r3, [r0], #4
10015678:	f851 3b04 	ldr.w	r3, [r1], #4
1001567c:	f840 3b04 	str.w	r3, [r0], #4
10015680:	f851 3b04 	ldr.w	r3, [r1], #4
10015684:	f840 3b04 	str.w	r3, [r0], #4
10015688:	f851 3b04 	ldr.w	r3, [r1], #4
1001568c:	f840 3b04 	str.w	r3, [r0], #4
10015690:	f851 3b04 	ldr.w	r3, [r1], #4
10015694:	f840 3b04 	str.w	r3, [r0], #4
10015698:	f851 3b04 	ldr.w	r3, [r1], #4
1001569c:	f840 3b04 	str.w	r3, [r0], #4
100156a0:	f851 3b04 	ldr.w	r3, [r1], #4
100156a4:	f840 3b04 	str.w	r3, [r0], #4
100156a8:	f851 3b04 	ldr.w	r3, [r1], #4
100156ac:	f840 3b04 	str.w	r3, [r0], #4
100156b0:	f851 3b04 	ldr.w	r3, [r1], #4
100156b4:	f840 3b04 	str.w	r3, [r0], #4
100156b8:	f851 3b04 	ldr.w	r3, [r1], #4
100156bc:	f840 3b04 	str.w	r3, [r0], #4
100156c0:	f851 3b04 	ldr.w	r3, [r1], #4
100156c4:	f840 3b04 	str.w	r3, [r0], #4
100156c8:	f851 3b04 	ldr.w	r3, [r1], #4
100156cc:	f840 3b04 	str.w	r3, [r0], #4
100156d0:	3a40      	subs	r2, #64	@ 0x40
100156d2:	d2bd      	bcs.n	10015650 <memcpy+0x10>
100156d4:	3230      	adds	r2, #48	@ 0x30
100156d6:	d311      	bcc.n	100156fc <memcpy+0xbc>
100156d8:	f851 3b04 	ldr.w	r3, [r1], #4
100156dc:	f840 3b04 	str.w	r3, [r0], #4
100156e0:	f851 3b04 	ldr.w	r3, [r1], #4
100156e4:	f840 3b04 	str.w	r3, [r0], #4
100156e8:	f851 3b04 	ldr.w	r3, [r1], #4
100156ec:	f840 3b04 	str.w	r3, [r0], #4
100156f0:	f851 3b04 	ldr.w	r3, [r1], #4
100156f4:	f840 3b04 	str.w	r3, [r0], #4
100156f8:	3a10      	subs	r2, #16
100156fa:	d2ed      	bcs.n	100156d8 <memcpy+0x98>
100156fc:	320c      	adds	r2, #12
100156fe:	d305      	bcc.n	1001570c <memcpy+0xcc>
10015700:	f851 3b04 	ldr.w	r3, [r1], #4
10015704:	f840 3b04 	str.w	r3, [r0], #4
10015708:	3a04      	subs	r2, #4
1001570a:	d2f9      	bcs.n	10015700 <memcpy+0xc0>
1001570c:	3204      	adds	r2, #4
1001570e:	d008      	beq.n	10015722 <memcpy+0xe2>
10015710:	07d2      	lsls	r2, r2, #31
10015712:	bf1c      	itt	ne
10015714:	f811 3b01 	ldrbne.w	r3, [r1], #1
10015718:	f800 3b01 	strbne.w	r3, [r0], #1
1001571c:	d301      	bcc.n	10015722 <memcpy+0xe2>
1001571e:	880b      	ldrh	r3, [r1, #0]
10015720:	8003      	strh	r3, [r0, #0]
10015722:	4660      	mov	r0, ip
10015724:	4770      	bx	lr
10015726:	bf00      	nop
10015728:	2a08      	cmp	r2, #8
1001572a:	d313      	bcc.n	10015754 <memcpy+0x114>
1001572c:	078b      	lsls	r3, r1, #30
1001572e:	d08d      	beq.n	1001564c <memcpy+0xc>
10015730:	f010 0303 	ands.w	r3, r0, #3
10015734:	d08a      	beq.n	1001564c <memcpy+0xc>
10015736:	f1c3 0304 	rsb	r3, r3, #4
1001573a:	1ad2      	subs	r2, r2, r3
1001573c:	07db      	lsls	r3, r3, #31
1001573e:	bf1c      	itt	ne
10015740:	f811 3b01 	ldrbne.w	r3, [r1], #1
10015744:	f800 3b01 	strbne.w	r3, [r0], #1
10015748:	d380      	bcc.n	1001564c <memcpy+0xc>
1001574a:	f831 3b02 	ldrh.w	r3, [r1], #2
1001574e:	f820 3b02 	strh.w	r3, [r0], #2
10015752:	e77b      	b.n	1001564c <memcpy+0xc>
10015754:	3a04      	subs	r2, #4
10015756:	d3d9      	bcc.n	1001570c <memcpy+0xcc>
10015758:	3a01      	subs	r2, #1
1001575a:	f811 3b01 	ldrb.w	r3, [r1], #1
1001575e:	f800 3b01 	strb.w	r3, [r0], #1
10015762:	d2f9      	bcs.n	10015758 <memcpy+0x118>
10015764:	780b      	ldrb	r3, [r1, #0]
10015766:	7003      	strb	r3, [r0, #0]
10015768:	784b      	ldrb	r3, [r1, #1]
1001576a:	7043      	strb	r3, [r0, #1]
1001576c:	788b      	ldrb	r3, [r1, #2]
1001576e:	7083      	strb	r3, [r0, #2]
10015770:	4660      	mov	r0, ip
10015772:	4770      	bx	lr
	...

10015780 <strlen>:
10015780:	b430      	push	{r4, r5}
10015782:	f890 f000 	pld	[r0]
10015786:	f020 0107 	bic.w	r1, r0, #7
1001578a:	f06f 0c00 	mvn.w	ip, #0
1001578e:	f010 0407 	ands.w	r4, r0, #7
10015792:	f891 f020 	pld	[r1, #32]
10015796:	f040 8048 	bne.w	1001582a <strlen+0xaa>
1001579a:	f04f 0400 	mov.w	r4, #0
1001579e:	f06f 0007 	mvn.w	r0, #7
100157a2:	e9d1 2300 	ldrd	r2, r3, [r1]
100157a6:	f891 f040 	pld	[r1, #64]	@ 0x40
100157aa:	f100 0008 	add.w	r0, r0, #8
100157ae:	fa82 f24c 	uadd8	r2, r2, ip
100157b2:	faa4 f28c 	sel	r2, r4, ip
100157b6:	fa83 f34c 	uadd8	r3, r3, ip
100157ba:	faa2 f38c 	sel	r3, r2, ip
100157be:	bb4b      	cbnz	r3, 10015814 <strlen+0x94>
100157c0:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
100157c4:	fa82 f24c 	uadd8	r2, r2, ip
100157c8:	f100 0008 	add.w	r0, r0, #8
100157cc:	faa4 f28c 	sel	r2, r4, ip
100157d0:	fa83 f34c 	uadd8	r3, r3, ip
100157d4:	faa2 f38c 	sel	r3, r2, ip
100157d8:	b9e3      	cbnz	r3, 10015814 <strlen+0x94>
100157da:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
100157de:	fa82 f24c 	uadd8	r2, r2, ip
100157e2:	f100 0008 	add.w	r0, r0, #8
100157e6:	faa4 f28c 	sel	r2, r4, ip
100157ea:	fa83 f34c 	uadd8	r3, r3, ip
100157ee:	faa2 f38c 	sel	r3, r2, ip
100157f2:	b97b      	cbnz	r3, 10015814 <strlen+0x94>
100157f4:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
100157f8:	f101 0120 	add.w	r1, r1, #32
100157fc:	fa82 f24c 	uadd8	r2, r2, ip
10015800:	f100 0008 	add.w	r0, r0, #8
10015804:	faa4 f28c 	sel	r2, r4, ip
10015808:	fa83 f34c 	uadd8	r3, r3, ip
1001580c:	faa2 f38c 	sel	r3, r2, ip
10015810:	2b00      	cmp	r3, #0
10015812:	d0c6      	beq.n	100157a2 <strlen+0x22>
10015814:	2a00      	cmp	r2, #0
10015816:	bf04      	itt	eq
10015818:	3004      	addeq	r0, #4
1001581a:	461a      	moveq	r2, r3
1001581c:	ba12      	rev	r2, r2
1001581e:	fab2 f282 	clz	r2, r2
10015822:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
10015826:	bc30      	pop	{r4, r5}
10015828:	4770      	bx	lr
1001582a:	e9d1 2300 	ldrd	r2, r3, [r1]
1001582e:	f004 0503 	and.w	r5, r4, #3
10015832:	f1c4 0000 	rsb	r0, r4, #0
10015836:	ea4f 05c5 	mov.w	r5, r5, lsl #3
1001583a:	f014 0f04 	tst.w	r4, #4
1001583e:	f891 f040 	pld	[r1, #64]	@ 0x40
10015842:	fa0c f505 	lsl.w	r5, ip, r5
10015846:	ea62 0205 	orn	r2, r2, r5
1001584a:	bf1c      	itt	ne
1001584c:	ea63 0305 	ornne	r3, r3, r5
10015850:	4662      	movne	r2, ip
10015852:	f04f 0400 	mov.w	r4, #0
10015856:	e7aa      	b.n	100157ae <strlen+0x2e>

10015858 <_wcrtomb_r>:
10015858:	b570      	push	{r4, r5, r6, lr}
1001585a:	4605      	mov	r5, r0
1001585c:	b084      	sub	sp, #16
1001585e:	b15b      	cbz	r3, 10015878 <_wcrtomb_r+0x20>
10015860:	461c      	mov	r4, r3
10015862:	4b0f      	ldr	r3, [pc, #60]	@ (100158a0 <_wcrtomb_r+0x48>)
10015864:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10015868:	4623      	mov	r3, r4
1001586a:	b169      	cbz	r1, 10015888 <_wcrtomb_r+0x30>
1001586c:	4628      	mov	r0, r5
1001586e:	47b0      	blx	r6
10015870:	1c43      	adds	r3, r0, #1
10015872:	d00f      	beq.n	10015894 <_wcrtomb_r+0x3c>
10015874:	b004      	add	sp, #16
10015876:	bd70      	pop	{r4, r5, r6, pc}
10015878:	4b09      	ldr	r3, [pc, #36]	@ (100158a0 <_wcrtomb_r+0x48>)
1001587a:	f500 7482 	add.w	r4, r0, #260	@ 0x104
1001587e:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10015882:	4623      	mov	r3, r4
10015884:	2900      	cmp	r1, #0
10015886:	d1f1      	bne.n	1001586c <_wcrtomb_r+0x14>
10015888:	460a      	mov	r2, r1
1001588a:	4628      	mov	r0, r5
1001588c:	a901      	add	r1, sp, #4
1001588e:	47b0      	blx	r6
10015890:	1c43      	adds	r3, r0, #1
10015892:	d1ef      	bne.n	10015874 <_wcrtomb_r+0x1c>
10015894:	2200      	movs	r2, #0
10015896:	238a      	movs	r3, #138	@ 0x8a
10015898:	6022      	str	r2, [r4, #0]
1001589a:	602b      	str	r3, [r5, #0]
1001589c:	b004      	add	sp, #16
1001589e:	bd70      	pop	{r4, r5, r6, pc}
100158a0:	20000454 	.word	0x20000454

100158a4 <_wcsrtombs_r>:
100158a4:	b510      	push	{r4, lr}
100158a6:	b082      	sub	sp, #8
100158a8:	9c04      	ldr	r4, [sp, #16]
100158aa:	e9cd 3400 	strd	r3, r4, [sp]
100158ae:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100158b2:	f003 fd11 	bl	100192d8 <_wcsnrtombs_r>
100158b6:	b002      	add	sp, #8
100158b8:	bd10      	pop	{r4, pc}
100158ba:	bf00      	nop

100158bc <frexp>:
100158bc:	f8df c064 	ldr.w	ip, [pc, #100]	@ 10015924 <frexp+0x68>
100158c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100158c2:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
100158c6:	2700      	movs	r7, #0
100158c8:	4563      	cmp	r3, ip
100158ca:	4604      	mov	r4, r0
100158cc:	460d      	mov	r5, r1
100158ce:	4616      	mov	r6, r2
100158d0:	6017      	str	r7, [r2, #0]
100158d2:	d822      	bhi.n	1001591a <frexp+0x5e>
100158d4:	4684      	mov	ip, r0
100158d6:	ea53 0c0c 	orrs.w	ip, r3, ip
100158da:	d01e      	beq.n	1001591a <frexp+0x5e>
100158dc:	f8df c048 	ldr.w	ip, [pc, #72]	@ 10015928 <frexp+0x6c>
100158e0:	ea01 0c0c 	and.w	ip, r1, ip
100158e4:	460a      	mov	r2, r1
100158e6:	f1bc 0f00 	cmp.w	ip, #0
100158ea:	d109      	bne.n	10015900 <frexp+0x44>
100158ec:	4b0c      	ldr	r3, [pc, #48]	@ (10015920 <frexp+0x64>)
100158ee:	2200      	movs	r2, #0
100158f0:	f004 f84c 	bl	1001998c <__aeabi_dmul>
100158f4:	f06f 0735 	mvn.w	r7, #53	@ 0x35
100158f8:	4604      	mov	r4, r0
100158fa:	460a      	mov	r2, r1
100158fc:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
10015900:	f022 42ff 	bic.w	r2, r2, #2139095040	@ 0x7f800000
10015904:	151b      	asrs	r3, r3, #20
10015906:	f422 02e0 	bic.w	r2, r2, #7340032	@ 0x700000
1001590a:	f2a3 33fe 	subw	r3, r3, #1022	@ 0x3fe
1001590e:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
10015912:	443b      	add	r3, r7
10015914:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
10015918:	6033      	str	r3, [r6, #0]
1001591a:	4620      	mov	r0, r4
1001591c:	4629      	mov	r1, r5
1001591e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10015920:	43500000 	.word	0x43500000
10015924:	7fefffff 	.word	0x7fefffff
10015928:	7ff00000 	.word	0x7ff00000

1001592c <register_fini>:
1001592c:	4b02      	ldr	r3, [pc, #8]	@ (10015938 <register_fini+0xc>)
1001592e:	b113      	cbz	r3, 10015936 <register_fini+0xa>
10015930:	4802      	ldr	r0, [pc, #8]	@ (1001593c <register_fini+0x10>)
10015932:	f000 b805 	b.w	10015940 <atexit>
10015936:	4770      	bx	lr
10015938:	00000000 	.word	0x00000000
1001593c:	100191b5 	.word	0x100191b5

10015940 <atexit>:
10015940:	2300      	movs	r3, #0
10015942:	4601      	mov	r1, r0
10015944:	461a      	mov	r2, r3
10015946:	4618      	mov	r0, r3
10015948:	f003 bcd8 	b.w	100192fc <__register_exitproc>

1001594c <quorem>:
1001594c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015950:	6903      	ldr	r3, [r0, #16]
10015952:	690c      	ldr	r4, [r1, #16]
10015954:	42a3      	cmp	r3, r4
10015956:	b083      	sub	sp, #12
10015958:	f2c0 808a 	blt.w	10015a70 <quorem+0x124>
1001595c:	3c01      	subs	r4, #1
1001595e:	f101 0514 	add.w	r5, r1, #20
10015962:	f100 0814 	add.w	r8, r0, #20
10015966:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
1001596a:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
1001596e:	3301      	adds	r3, #1
10015970:	429a      	cmp	r2, r3
10015972:	468e      	mov	lr, r1
10015974:	4681      	mov	r9, r0
10015976:	ea4f 0184 	mov.w	r1, r4, lsl #2
1001597a:	eb05 0784 	add.w	r7, r5, r4, lsl #2
1001597e:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
10015982:	fbb2 f6f3 	udiv	r6, r2, r3
10015986:	d33a      	bcc.n	100159fe <quorem+0xb2>
10015988:	e9cd 1500 	strd	r1, r5, [sp]
1001598c:	2200      	movs	r2, #0
1001598e:	46ac      	mov	ip, r5
10015990:	4640      	mov	r0, r8
10015992:	4613      	mov	r3, r2
10015994:	f85c 1b04 	ldr.w	r1, [ip], #4
10015998:	6805      	ldr	r5, [r0, #0]
1001599a:	fa1f fb81 	uxth.w	fp, r1
1001599e:	fb06 220b 	mla	r2, r6, fp, r2
100159a2:	0c09      	lsrs	r1, r1, #16
100159a4:	ea4f 4b12 	mov.w	fp, r2, lsr #16
100159a8:	fb06 bb01 	mla	fp, r6, r1, fp
100159ac:	b292      	uxth	r2, r2
100159ae:	b2a9      	uxth	r1, r5
100159b0:	1a89      	subs	r1, r1, r2
100159b2:	4419      	add	r1, r3
100159b4:	fa1f f38b 	uxth.w	r3, fp
100159b8:	ebc3 4321 	rsb	r3, r3, r1, asr #16
100159bc:	eb03 4315 	add.w	r3, r3, r5, lsr #16
100159c0:	b289      	uxth	r1, r1
100159c2:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
100159c6:	4567      	cmp	r7, ip
100159c8:	f840 1b04 	str.w	r1, [r0], #4
100159cc:	ea4f 421b 	mov.w	r2, fp, lsr #16
100159d0:	ea4f 4323 	mov.w	r3, r3, asr #16
100159d4:	d2de      	bcs.n	10015994 <quorem+0x48>
100159d6:	e9dd 1500 	ldrd	r1, r5, [sp]
100159da:	f858 3001 	ldr.w	r3, [r8, r1]
100159de:	b973      	cbnz	r3, 100159fe <quorem+0xb2>
100159e0:	f1aa 0a04 	sub.w	sl, sl, #4
100159e4:	45d0      	cmp	r8, sl
100159e6:	d304      	bcc.n	100159f2 <quorem+0xa6>
100159e8:	e007      	b.n	100159fa <quorem+0xae>
100159ea:	45d0      	cmp	r8, sl
100159ec:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
100159f0:	d203      	bcs.n	100159fa <quorem+0xae>
100159f2:	f85a 3904 	ldr.w	r3, [sl], #-4
100159f6:	2b00      	cmp	r3, #0
100159f8:	d0f7      	beq.n	100159ea <quorem+0x9e>
100159fa:	f8c9 4010 	str.w	r4, [r9, #16]
100159fe:	4671      	mov	r1, lr
10015a00:	4648      	mov	r0, r9
10015a02:	f003 f993 	bl	10018d2c <__mcmp>
10015a06:	2800      	cmp	r0, #0
10015a08:	db2e      	blt.n	10015a68 <quorem+0x11c>
10015a0a:	4641      	mov	r1, r8
10015a0c:	2200      	movs	r2, #0
10015a0e:	f855 0b04 	ldr.w	r0, [r5], #4
10015a12:	f8d1 c000 	ldr.w	ip, [r1]
10015a16:	fa1f fe80 	uxth.w	lr, r0
10015a1a:	fa1f f38c 	uxth.w	r3, ip
10015a1e:	eba3 030e 	sub.w	r3, r3, lr
10015a22:	4413      	add	r3, r2
10015a24:	0c02      	lsrs	r2, r0, #16
10015a26:	ebc2 4223 	rsb	r2, r2, r3, asr #16
10015a2a:	eb02 421c 	add.w	r2, r2, ip, lsr #16
10015a2e:	b29b      	uxth	r3, r3
10015a30:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
10015a34:	42af      	cmp	r7, r5
10015a36:	f841 3b04 	str.w	r3, [r1], #4
10015a3a:	ea4f 4222 	mov.w	r2, r2, asr #16
10015a3e:	d2e6      	bcs.n	10015a0e <quorem+0xc2>
10015a40:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
10015a44:	eb08 0384 	add.w	r3, r8, r4, lsl #2
10015a48:	b96a      	cbnz	r2, 10015a66 <quorem+0x11a>
10015a4a:	3b04      	subs	r3, #4
10015a4c:	4598      	cmp	r8, r3
10015a4e:	d304      	bcc.n	10015a5a <quorem+0x10e>
10015a50:	e007      	b.n	10015a62 <quorem+0x116>
10015a52:	4598      	cmp	r8, r3
10015a54:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
10015a58:	d203      	bcs.n	10015a62 <quorem+0x116>
10015a5a:	f853 2904 	ldr.w	r2, [r3], #-4
10015a5e:	2a00      	cmp	r2, #0
10015a60:	d0f7      	beq.n	10015a52 <quorem+0x106>
10015a62:	f8c9 4010 	str.w	r4, [r9, #16]
10015a66:	3601      	adds	r6, #1
10015a68:	4630      	mov	r0, r6
10015a6a:	b003      	add	sp, #12
10015a6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015a70:	2000      	movs	r0, #0
10015a72:	b003      	add	sp, #12
10015a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

10015a78 <_dtoa_r>:
10015a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015a7c:	6b81      	ldr	r1, [r0, #56]	@ 0x38
10015a7e:	b09d      	sub	sp, #116	@ 0x74
10015a80:	4616      	mov	r6, r2
10015a82:	461f      	mov	r7, r3
10015a84:	e9cd 6704 	strd	r6, r7, [sp, #16]
10015a88:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10015a8a:	9002      	str	r0, [sp, #8]
10015a8c:	b149      	cbz	r1, 10015aa2 <_dtoa_r+0x2a>
10015a8e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
10015a90:	604a      	str	r2, [r1, #4]
10015a92:	2301      	movs	r3, #1
10015a94:	4093      	lsls	r3, r2
10015a96:	4604      	mov	r4, r0
10015a98:	608b      	str	r3, [r1, #8]
10015a9a:	f002 fee5 	bl	10018868 <_Bfree>
10015a9e:	2300      	movs	r3, #0
10015aa0:	63a3      	str	r3, [r4, #56]	@ 0x38
10015aa2:	f1b7 0900 	subs.w	r9, r7, #0
10015aa6:	bfb4      	ite	lt
10015aa8:	2301      	movlt	r3, #1
10015aaa:	2300      	movge	r3, #0
10015aac:	602b      	str	r3, [r5, #0]
10015aae:	4b76      	ldr	r3, [pc, #472]	@ (10015c88 <_dtoa_r+0x210>)
10015ab0:	bfbc      	itt	lt
10015ab2:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
10015ab6:	f8cd 9014 	strlt.w	r9, [sp, #20]
10015aba:	ea33 0309 	bics.w	r3, r3, r9
10015abe:	f000 80aa 	beq.w	10015c16 <_dtoa_r+0x19e>
10015ac2:	ed9d 7b04 	vldr	d7, [sp, #16]
10015ac6:	2200      	movs	r2, #0
10015ac8:	ec51 0b17 	vmov	r0, r1, d7
10015acc:	2300      	movs	r3, #0
10015ace:	ed8d 7b06 	vstr	d7, [sp, #24]
10015ad2:	f004 f9c3 	bl	10019e5c <__aeabi_dcmpeq>
10015ad6:	4680      	mov	r8, r0
10015ad8:	b168      	cbz	r0, 10015af6 <_dtoa_r+0x7e>
10015ada:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10015adc:	2301      	movs	r3, #1
10015ade:	6013      	str	r3, [r2, #0]
10015ae0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10015ae2:	b113      	cbz	r3, 10015aea <_dtoa_r+0x72>
10015ae4:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10015ae6:	4b69      	ldr	r3, [pc, #420]	@ (10015c8c <_dtoa_r+0x214>)
10015ae8:	6013      	str	r3, [r2, #0]
10015aea:	4b69      	ldr	r3, [pc, #420]	@ (10015c90 <_dtoa_r+0x218>)
10015aec:	9303      	str	r3, [sp, #12]
10015aee:	9803      	ldr	r0, [sp, #12]
10015af0:	b01d      	add	sp, #116	@ 0x74
10015af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015af6:	ab1a      	add	r3, sp, #104	@ 0x68
10015af8:	9301      	str	r3, [sp, #4]
10015afa:	ab1b      	add	r3, sp, #108	@ 0x6c
10015afc:	9300      	str	r3, [sp, #0]
10015afe:	9802      	ldr	r0, [sp, #8]
10015b00:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10015b04:	f003 f9e6 	bl	10018ed4 <__d2b>
10015b08:	ea5f 5519 	movs.w	r5, r9, lsr #20
10015b0c:	4682      	mov	sl, r0
10015b0e:	f040 8098 	bne.w	10015c42 <_dtoa_r+0x1ca>
10015b12:	e9dd 851a 	ldrd	r8, r5, [sp, #104]	@ 0x68
10015b16:	4445      	add	r5, r8
10015b18:	f205 4332 	addw	r3, r5, #1074	@ 0x432
10015b1c:	2b20      	cmp	r3, #32
10015b1e:	f340 8381 	ble.w	10016224 <_dtoa_r+0x7ac>
10015b22:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
10015b26:	fa09 f903 	lsl.w	r9, r9, r3
10015b2a:	f205 4312 	addw	r3, r5, #1042	@ 0x412
10015b2e:	fa26 f303 	lsr.w	r3, r6, r3
10015b32:	ea49 0003 	orr.w	r0, r9, r3
10015b36:	f003 feaf 	bl	10019898 <__aeabi_ui2d>
10015b3a:	2301      	movs	r3, #1
10015b3c:	3d01      	subs	r5, #1
10015b3e:	930f      	str	r3, [sp, #60]	@ 0x3c
10015b40:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
10015b44:	4b53      	ldr	r3, [pc, #332]	@ (10015c94 <_dtoa_r+0x21c>)
10015b46:	2200      	movs	r2, #0
10015b48:	f003 fd68 	bl	1001961c <__aeabi_dsub>
10015b4c:	a348      	add	r3, pc, #288	@ (adr r3, 10015c70 <_dtoa_r+0x1f8>)
10015b4e:	e9d3 2300 	ldrd	r2, r3, [r3]
10015b52:	f003 ff1b 	bl	1001998c <__aeabi_dmul>
10015b56:	a348      	add	r3, pc, #288	@ (adr r3, 10015c78 <_dtoa_r+0x200>)
10015b58:	e9d3 2300 	ldrd	r2, r3, [r3]
10015b5c:	f003 fd60 	bl	10019620 <__adddf3>
10015b60:	4606      	mov	r6, r0
10015b62:	4628      	mov	r0, r5
10015b64:	460f      	mov	r7, r1
10015b66:	f003 fea7 	bl	100198b8 <__aeabi_i2d>
10015b6a:	a345      	add	r3, pc, #276	@ (adr r3, 10015c80 <_dtoa_r+0x208>)
10015b6c:	e9d3 2300 	ldrd	r2, r3, [r3]
10015b70:	f003 ff0c 	bl	1001998c <__aeabi_dmul>
10015b74:	4602      	mov	r2, r0
10015b76:	460b      	mov	r3, r1
10015b78:	4630      	mov	r0, r6
10015b7a:	4639      	mov	r1, r7
10015b7c:	f003 fd50 	bl	10019620 <__adddf3>
10015b80:	4606      	mov	r6, r0
10015b82:	460f      	mov	r7, r1
10015b84:	f004 f9b2 	bl	10019eec <__aeabi_d2iz>
10015b88:	2200      	movs	r2, #0
10015b8a:	4683      	mov	fp, r0
10015b8c:	2300      	movs	r3, #0
10015b8e:	4630      	mov	r0, r6
10015b90:	4639      	mov	r1, r7
10015b92:	f004 f96d 	bl	10019e70 <__aeabi_dcmplt>
10015b96:	2800      	cmp	r0, #0
10015b98:	f040 8318 	bne.w	100161cc <_dtoa_r+0x754>
10015b9c:	eba8 0805 	sub.w	r8, r8, r5
10015ba0:	f1bb 0f16 	cmp.w	fp, #22
10015ba4:	f108 34ff 	add.w	r4, r8, #4294967295	@ 0xffffffff
10015ba8:	f200 818a 	bhi.w	10015ec0 <_dtoa_r+0x448>
10015bac:	4d3a      	ldr	r5, [pc, #232]	@ (10015c98 <_dtoa_r+0x220>)
10015bae:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
10015bb2:	e9d5 2300 	ldrd	r2, r3, [r5]
10015bb6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10015bba:	f004 f959 	bl	10019e70 <__aeabi_dcmplt>
10015bbe:	2800      	cmp	r0, #0
10015bc0:	d070      	beq.n	10015ca4 <_dtoa_r+0x22c>
10015bc2:	2300      	movs	r3, #0
10015bc4:	2c00      	cmp	r4, #0
10015bc6:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10015bca:	930e      	str	r3, [sp, #56]	@ 0x38
10015bcc:	f2c0 817d 	blt.w	10015eca <_dtoa_r+0x452>
10015bd0:	2300      	movs	r3, #0
10015bd2:	9309      	str	r3, [sp, #36]	@ 0x24
10015bd4:	f1bb 0f00 	cmp.w	fp, #0
10015bd8:	da6a      	bge.n	10015cb0 <_dtoa_r+0x238>
10015bda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10015bdc:	eba3 030b 	sub.w	r3, r3, fp
10015be0:	9309      	str	r3, [sp, #36]	@ 0x24
10015be2:	f1cb 0300 	rsb	r3, fp, #0
10015be6:	e9cd b30c 	strd	fp, r3, [sp, #48]	@ 0x30
10015bea:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10015bec:	2b09      	cmp	r3, #9
10015bee:	f04f 0b00 	mov.w	fp, #0
10015bf2:	d865      	bhi.n	10015cc0 <_dtoa_r+0x248>
10015bf4:	2b05      	cmp	r3, #5
10015bf6:	f340 831a 	ble.w	1001622e <_dtoa_r+0x7b6>
10015bfa:	3b04      	subs	r3, #4
10015bfc:	9326      	str	r3, [sp, #152]	@ 0x98
10015bfe:	2500      	movs	r5, #0
10015c00:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10015c02:	3b02      	subs	r3, #2
10015c04:	2b03      	cmp	r3, #3
10015c06:	f200 8621 	bhi.w	1001684c <_dtoa_r+0xdd4>
10015c0a:	e8df f013 	tbh	[pc, r3, lsl #1]
10015c0e:	045e      	.short	0x045e
10015c10:	0452045b 	.word	0x0452045b
10015c14:	0436      	.short	0x0436
10015c16:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10015c18:	f3c9 0913 	ubfx	r9, r9, #0, #20
10015c1c:	f242 730f 	movw	r3, #9999	@ 0x270f
10015c20:	ea59 0906 	orrs.w	r9, r9, r6
10015c24:	6013      	str	r3, [r2, #0]
10015c26:	d11c      	bne.n	10015c62 <_dtoa_r+0x1ea>
10015c28:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10015c2a:	2b00      	cmp	r3, #0
10015c2c:	f000 8629 	beq.w	10016882 <_dtoa_r+0xe0a>
10015c30:	4b1a      	ldr	r3, [pc, #104]	@ (10015c9c <_dtoa_r+0x224>)
10015c32:	9303      	str	r3, [sp, #12]
10015c34:	3308      	adds	r3, #8
10015c36:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10015c38:	9803      	ldr	r0, [sp, #12]
10015c3a:	6013      	str	r3, [r2, #0]
10015c3c:	b01d      	add	sp, #116	@ 0x74
10015c3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015c42:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
10015c46:	f3c2 0313 	ubfx	r3, r2, #0, #20
10015c4a:	4608      	mov	r0, r1
10015c4c:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
10015c50:	f8cd 803c 	str.w	r8, [sp, #60]	@ 0x3c
10015c54:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
10015c58:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
10015c5c:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
10015c60:	e770      	b.n	10015b44 <_dtoa_r+0xcc>
10015c62:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10015c64:	2b00      	cmp	r3, #0
10015c66:	f040 83e5 	bne.w	10016434 <_dtoa_r+0x9bc>
10015c6a:	4b0d      	ldr	r3, [pc, #52]	@ (10015ca0 <_dtoa_r+0x228>)
10015c6c:	9303      	str	r3, [sp, #12]
10015c6e:	e73e      	b.n	10015aee <_dtoa_r+0x76>
10015c70:	636f4361 	.word	0x636f4361
10015c74:	3fd287a7 	.word	0x3fd287a7
10015c78:	8b60c8b3 	.word	0x8b60c8b3
10015c7c:	3fc68a28 	.word	0x3fc68a28
10015c80:	509f79fb 	.word	0x509f79fb
10015c84:	3fd34413 	.word	0x3fd34413
10015c88:	7ff00000 	.word	0x7ff00000
10015c8c:	1001c55d 	.word	0x1001c55d
10015c90:	1001c55c 	.word	0x1001c55c
10015c94:	3ff80000 	.word	0x3ff80000
10015c98:	1001c830 	.word	0x1001c830
10015c9c:	1001c6ec 	.word	0x1001c6ec
10015ca0:	1001c6f8 	.word	0x1001c6f8
10015ca4:	f1b8 0f00 	cmp.w	r8, #0
10015ca8:	f340 845e 	ble.w	10016568 <_dtoa_r+0xaf0>
10015cac:	900e      	str	r0, [sp, #56]	@ 0x38
10015cae:	9009      	str	r0, [sp, #36]	@ 0x24
10015cb0:	2300      	movs	r3, #0
10015cb2:	930d      	str	r3, [sp, #52]	@ 0x34
10015cb4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10015cb6:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10015cba:	2b09      	cmp	r3, #9
10015cbc:	445c      	add	r4, fp
10015cbe:	d999      	bls.n	10015bf4 <_dtoa_r+0x17c>
10015cc0:	2300      	movs	r3, #0
10015cc2:	e9cd 3326 	strd	r3, r3, [sp, #152]	@ 0x98
10015cc6:	2501      	movs	r5, #1
10015cc8:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10015ccc:	950a      	str	r5, [sp, #40]	@ 0x28
10015cce:	9308      	str	r3, [sp, #32]
10015cd0:	9b02      	ldr	r3, [sp, #8]
10015cd2:	2100      	movs	r1, #0
10015cd4:	63d9      	str	r1, [r3, #60]	@ 0x3c
10015cd6:	9b08      	ldr	r3, [sp, #32]
10015cd8:	9316      	str	r3, [sp, #88]	@ 0x58
10015cda:	9802      	ldr	r0, [sp, #8]
10015cdc:	f002 fd9e 	bl	1001881c <_Balloc>
10015ce0:	9003      	str	r0, [sp, #12]
10015ce2:	2800      	cmp	r0, #0
10015ce4:	f000 85bb 	beq.w	1001685e <_dtoa_r+0xde6>
10015ce8:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
10015cec:	639a      	str	r2, [r3, #56]	@ 0x38
10015cee:	9b08      	ldr	r3, [sp, #32]
10015cf0:	2b0e      	cmp	r3, #14
10015cf2:	f200 8114 	bhi.w	10015f1e <_dtoa_r+0x4a6>
10015cf6:	2d00      	cmp	r5, #0
10015cf8:	f000 8111 	beq.w	10015f1e <_dtoa_r+0x4a6>
10015cfc:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10015cfe:	2a00      	cmp	r2, #0
10015d00:	f340 8439 	ble.w	10016576 <_dtoa_r+0xafe>
10015d04:	4db1      	ldr	r5, [pc, #708]	@ (10015fcc <_dtoa_r+0x554>)
10015d06:	f002 030f 	and.w	r3, r2, #15
10015d0a:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10015d0e:	1115      	asrs	r5, r2, #4
10015d10:	05d2      	lsls	r2, r2, #23
10015d12:	e9d3 8900 	ldrd	r8, r9, [r3]
10015d16:	f140 83f9 	bpl.w	1001650c <_dtoa_r+0xa94>
10015d1a:	4bad      	ldr	r3, [pc, #692]	@ (10015fd0 <_dtoa_r+0x558>)
10015d1c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10015d20:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
10015d24:	f003 ff5c 	bl	10019be0 <__aeabi_ddiv>
10015d28:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
10015d2c:	f005 050f 	and.w	r5, r5, #15
10015d30:	2703      	movs	r7, #3
10015d32:	b17d      	cbz	r5, 10015d54 <_dtoa_r+0x2dc>
10015d34:	4ea6      	ldr	r6, [pc, #664]	@ (10015fd0 <_dtoa_r+0x558>)
10015d36:	07eb      	lsls	r3, r5, #31
10015d38:	d508      	bpl.n	10015d4c <_dtoa_r+0x2d4>
10015d3a:	4640      	mov	r0, r8
10015d3c:	4649      	mov	r1, r9
10015d3e:	e9d6 2300 	ldrd	r2, r3, [r6]
10015d42:	f003 fe23 	bl	1001998c <__aeabi_dmul>
10015d46:	3701      	adds	r7, #1
10015d48:	4680      	mov	r8, r0
10015d4a:	4689      	mov	r9, r1
10015d4c:	106d      	asrs	r5, r5, #1
10015d4e:	f106 0608 	add.w	r6, r6, #8
10015d52:	d1f0      	bne.n	10015d36 <_dtoa_r+0x2be>
10015d54:	4642      	mov	r2, r8
10015d56:	464b      	mov	r3, r9
10015d58:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
10015d5c:	f003 ff40 	bl	10019be0 <__aeabi_ddiv>
10015d60:	4680      	mov	r8, r0
10015d62:	4689      	mov	r9, r1
10015d64:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10015d66:	b143      	cbz	r3, 10015d7a <_dtoa_r+0x302>
10015d68:	4b9a      	ldr	r3, [pc, #616]	@ (10015fd4 <_dtoa_r+0x55c>)
10015d6a:	2200      	movs	r2, #0
10015d6c:	4640      	mov	r0, r8
10015d6e:	4649      	mov	r1, r9
10015d70:	f004 f87e 	bl	10019e70 <__aeabi_dcmplt>
10015d74:	2800      	cmp	r0, #0
10015d76:	f040 84f0 	bne.w	1001675a <_dtoa_r+0xce2>
10015d7a:	4638      	mov	r0, r7
10015d7c:	f003 fd9c 	bl	100198b8 <__aeabi_i2d>
10015d80:	4642      	mov	r2, r8
10015d82:	464b      	mov	r3, r9
10015d84:	f003 fe02 	bl	1001998c <__aeabi_dmul>
10015d88:	4b93      	ldr	r3, [pc, #588]	@ (10015fd8 <_dtoa_r+0x560>)
10015d8a:	2200      	movs	r2, #0
10015d8c:	f003 fc48 	bl	10019620 <__adddf3>
10015d90:	9b08      	ldr	r3, [sp, #32]
10015d92:	4606      	mov	r6, r0
10015d94:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10015d98:	2b00      	cmp	r3, #0
10015d9a:	f000 80a9 	beq.w	10015ef0 <_dtoa_r+0x478>
10015d9e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10015da0:	9317      	str	r3, [sp, #92]	@ 0x5c
10015da2:	9b08      	ldr	r3, [sp, #32]
10015da4:	9310      	str	r3, [sp, #64]	@ 0x40
10015da6:	9b03      	ldr	r3, [sp, #12]
10015da8:	4d88      	ldr	r5, [pc, #544]	@ (10015fcc <_dtoa_r+0x554>)
10015daa:	4649      	mov	r1, r9
10015dac:	4640      	mov	r0, r8
10015dae:	e9cd 6712 	strd	r6, r7, [sp, #72]	@ 0x48
10015db2:	1c5e      	adds	r6, r3, #1
10015db4:	f004 f89a 	bl	10019eec <__aeabi_d2iz>
10015db8:	9910      	ldr	r1, [sp, #64]	@ 0x40
10015dba:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
10015dbe:	ed13 7b02 	vldr	d7, [r3, #-8]
10015dc2:	4607      	mov	r7, r0
10015dc4:	ed8d 7b14 	vstr	d7, [sp, #80]	@ 0x50
10015dc8:	f003 fd76 	bl	100198b8 <__aeabi_i2d>
10015dcc:	4602      	mov	r2, r0
10015dce:	460b      	mov	r3, r1
10015dd0:	4640      	mov	r0, r8
10015dd2:	4649      	mov	r1, r9
10015dd4:	f003 fc22 	bl	1001961c <__aeabi_dsub>
10015dd8:	4689      	mov	r9, r1
10015dda:	990a      	ldr	r1, [sp, #40]	@ 0x28
10015ddc:	3730      	adds	r7, #48	@ 0x30
10015dde:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
10015de2:	4680      	mov	r8, r0
10015de4:	b2ff      	uxtb	r7, r7
10015de6:	2900      	cmp	r1, #0
10015de8:	f000 8452 	beq.w	10016690 <_dtoa_r+0xc18>
10015dec:	497b      	ldr	r1, [pc, #492]	@ (10015fdc <_dtoa_r+0x564>)
10015dee:	2000      	movs	r0, #0
10015df0:	f003 fef6 	bl	10019be0 <__aeabi_ddiv>
10015df4:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	@ 0x48
10015df8:	f003 fc10 	bl	1001961c <__aeabi_dsub>
10015dfc:	9d03      	ldr	r5, [sp, #12]
10015dfe:	4602      	mov	r2, r0
10015e00:	460b      	mov	r3, r1
10015e02:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
10015e06:	702f      	strb	r7, [r5, #0]
10015e08:	4642      	mov	r2, r8
10015e0a:	464b      	mov	r3, r9
10015e0c:	f004 f84e 	bl	10019eac <__aeabi_dcmpgt>
10015e10:	2800      	cmp	r0, #0
10015e12:	f040 8496 	bne.w	10016742 <_dtoa_r+0xcca>
10015e16:	e9cd b418 	strd	fp, r4, [sp, #96]	@ 0x60
10015e1a:	f8cd a050 	str.w	sl, [sp, #80]	@ 0x50
10015e1e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
10015e20:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	@ 0x48
10015e24:	2700      	movs	r7, #0
10015e26:	e02a      	b.n	10015e7e <_dtoa_r+0x406>
10015e28:	3701      	adds	r7, #1
10015e2a:	42af      	cmp	r7, r5
10015e2c:	f280 84dd 	bge.w	100167ea <_dtoa_r+0xd72>
10015e30:	4b6b      	ldr	r3, [pc, #428]	@ (10015fe0 <_dtoa_r+0x568>)
10015e32:	4650      	mov	r0, sl
10015e34:	4659      	mov	r1, fp
10015e36:	2200      	movs	r2, #0
10015e38:	f003 fda8 	bl	1001998c <__aeabi_dmul>
10015e3c:	4b68      	ldr	r3, [pc, #416]	@ (10015fe0 <_dtoa_r+0x568>)
10015e3e:	2200      	movs	r2, #0
10015e40:	4682      	mov	sl, r0
10015e42:	468b      	mov	fp, r1
10015e44:	4640      	mov	r0, r8
10015e46:	4649      	mov	r1, r9
10015e48:	f003 fda0 	bl	1001998c <__aeabi_dmul>
10015e4c:	4689      	mov	r9, r1
10015e4e:	4680      	mov	r8, r0
10015e50:	f004 f84c 	bl	10019eec <__aeabi_d2iz>
10015e54:	4604      	mov	r4, r0
10015e56:	f003 fd2f 	bl	100198b8 <__aeabi_i2d>
10015e5a:	4602      	mov	r2, r0
10015e5c:	460b      	mov	r3, r1
10015e5e:	4640      	mov	r0, r8
10015e60:	4649      	mov	r1, r9
10015e62:	f003 fbdb 	bl	1001961c <__aeabi_dsub>
10015e66:	3430      	adds	r4, #48	@ 0x30
10015e68:	f806 4b01 	strb.w	r4, [r6], #1
10015e6c:	4652      	mov	r2, sl
10015e6e:	465b      	mov	r3, fp
10015e70:	4680      	mov	r8, r0
10015e72:	4689      	mov	r9, r1
10015e74:	f003 fffc 	bl	10019e70 <__aeabi_dcmplt>
10015e78:	2800      	cmp	r0, #0
10015e7a:	f040 84b3 	bne.w	100167e4 <_dtoa_r+0xd6c>
10015e7e:	4642      	mov	r2, r8
10015e80:	464b      	mov	r3, r9
10015e82:	4954      	ldr	r1, [pc, #336]	@ (10015fd4 <_dtoa_r+0x55c>)
10015e84:	2000      	movs	r0, #0
10015e86:	f003 fbc9 	bl	1001961c <__aeabi_dsub>
10015e8a:	4652      	mov	r2, sl
10015e8c:	465b      	mov	r3, fp
10015e8e:	f003 ffef 	bl	10019e70 <__aeabi_dcmplt>
10015e92:	2800      	cmp	r0, #0
10015e94:	d0c8      	beq.n	10015e28 <_dtoa_r+0x3b0>
10015e96:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10015e98:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
10015e9c:	9a03      	ldr	r2, [sp, #12]
10015e9e:	4637      	mov	r7, r6
10015ea0:	f103 0801 	add.w	r8, r3, #1
10015ea4:	e002      	b.n	10015eac <_dtoa_r+0x434>
10015ea6:	4297      	cmp	r7, r2
10015ea8:	f000 847b 	beq.w	100167a2 <_dtoa_r+0xd2a>
10015eac:	463e      	mov	r6, r7
10015eae:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
10015eb2:	2b39      	cmp	r3, #57	@ 0x39
10015eb4:	d0f7      	beq.n	10015ea6 <_dtoa_r+0x42e>
10015eb6:	3301      	adds	r3, #1
10015eb8:	b2db      	uxtb	r3, r3
10015eba:	703b      	strb	r3, [r7, #0]
10015ebc:	4645      	mov	r5, r8
10015ebe:	e174      	b.n	100161aa <_dtoa_r+0x732>
10015ec0:	2301      	movs	r3, #1
10015ec2:	2c00      	cmp	r4, #0
10015ec4:	930e      	str	r3, [sp, #56]	@ 0x38
10015ec6:	f6bf ae83 	bge.w	10015bd0 <_dtoa_r+0x158>
10015eca:	f1c8 0301 	rsb	r3, r8, #1
10015ece:	9309      	str	r3, [sp, #36]	@ 0x24
10015ed0:	2400      	movs	r4, #0
10015ed2:	e67f      	b.n	10015bd4 <_dtoa_r+0x15c>
10015ed4:	4638      	mov	r0, r7
10015ed6:	f003 fcef 	bl	100198b8 <__aeabi_i2d>
10015eda:	4642      	mov	r2, r8
10015edc:	464b      	mov	r3, r9
10015ede:	f003 fd55 	bl	1001998c <__aeabi_dmul>
10015ee2:	4b3d      	ldr	r3, [pc, #244]	@ (10015fd8 <_dtoa_r+0x560>)
10015ee4:	2200      	movs	r2, #0
10015ee6:	f003 fb9b 	bl	10019620 <__adddf3>
10015eea:	4606      	mov	r6, r0
10015eec:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10015ef0:	4b3c      	ldr	r3, [pc, #240]	@ (10015fe4 <_dtoa_r+0x56c>)
10015ef2:	4640      	mov	r0, r8
10015ef4:	4649      	mov	r1, r9
10015ef6:	2200      	movs	r2, #0
10015ef8:	f003 fb90 	bl	1001961c <__aeabi_dsub>
10015efc:	4632      	mov	r2, r6
10015efe:	463b      	mov	r3, r7
10015f00:	4680      	mov	r8, r0
10015f02:	4689      	mov	r9, r1
10015f04:	f003 ffd2 	bl	10019eac <__aeabi_dcmpgt>
10015f08:	2800      	cmp	r0, #0
10015f0a:	f040 8459 	bne.w	100167c0 <_dtoa_r+0xd48>
10015f0e:	4640      	mov	r0, r8
10015f10:	4649      	mov	r1, r9
10015f12:	4632      	mov	r2, r6
10015f14:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
10015f18:	f003 ffaa 	bl	10019e70 <__aeabi_dcmplt>
10015f1c:	bb28      	cbnz	r0, 10015f6a <_dtoa_r+0x4f2>
10015f1e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10015f20:	2b00      	cmp	r3, #0
10015f22:	f2c0 8091 	blt.w	10016048 <_dtoa_r+0x5d0>
10015f26:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10015f28:	2a0e      	cmp	r2, #14
10015f2a:	f300 808d 	bgt.w	10016048 <_dtoa_r+0x5d0>
10015f2e:	4d27      	ldr	r5, [pc, #156]	@ (10015fcc <_dtoa_r+0x554>)
10015f30:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10015f32:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
10015f36:	ed95 7b00 	vldr	d7, [r5]
10015f3a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
10015f3c:	2b00      	cmp	r3, #0
10015f3e:	ed8d 7b04 	vstr	d7, [sp, #16]
10015f42:	da19      	bge.n	10015f78 <_dtoa_r+0x500>
10015f44:	9b08      	ldr	r3, [sp, #32]
10015f46:	2b00      	cmp	r3, #0
10015f48:	dc16      	bgt.n	10015f78 <_dtoa_r+0x500>
10015f4a:	d10e      	bne.n	10015f6a <_dtoa_r+0x4f2>
10015f4c:	4b25      	ldr	r3, [pc, #148]	@ (10015fe4 <_dtoa_r+0x56c>)
10015f4e:	2200      	movs	r2, #0
10015f50:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10015f54:	f003 fd1a 	bl	1001998c <__aeabi_dmul>
10015f58:	4602      	mov	r2, r0
10015f5a:	460b      	mov	r3, r1
10015f5c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10015f60:	f003 ff90 	bl	10019e84 <__aeabi_dcmple>
10015f64:	2800      	cmp	r0, #0
10015f66:	f000 842b 	beq.w	100167c0 <_dtoa_r+0xd48>
10015f6a:	f04f 0900 	mov.w	r9, #0
10015f6e:	9e03      	ldr	r6, [sp, #12]
10015f70:	464f      	mov	r7, r9
10015f72:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
10015f74:	43dd      	mvns	r5, r3
10015f76:	e224      	b.n	100163c2 <_dtoa_r+0x94a>
10015f78:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
10015f7c:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10015f80:	4622      	mov	r2, r4
10015f82:	462b      	mov	r3, r5
10015f84:	4640      	mov	r0, r8
10015f86:	4649      	mov	r1, r9
10015f88:	f003 fe2a 	bl	10019be0 <__aeabi_ddiv>
10015f8c:	f003 ffae 	bl	10019eec <__aeabi_d2iz>
10015f90:	4606      	mov	r6, r0
10015f92:	f003 fc91 	bl	100198b8 <__aeabi_i2d>
10015f96:	4622      	mov	r2, r4
10015f98:	462b      	mov	r3, r5
10015f9a:	f003 fcf7 	bl	1001998c <__aeabi_dmul>
10015f9e:	9f03      	ldr	r7, [sp, #12]
10015fa0:	460b      	mov	r3, r1
10015fa2:	4602      	mov	r2, r0
10015fa4:	4649      	mov	r1, r9
10015fa6:	4640      	mov	r0, r8
10015fa8:	f003 fb38 	bl	1001961c <__aeabi_dsub>
10015fac:	f106 0330 	add.w	r3, r6, #48	@ 0x30
10015fb0:	f807 3b01 	strb.w	r3, [r7], #1
10015fb4:	9b08      	ldr	r3, [sp, #32]
10015fb6:	2b01      	cmp	r3, #1
10015fb8:	f000 8311 	beq.w	100165de <_dtoa_r+0xb66>
10015fbc:	2501      	movs	r5, #1
10015fbe:	f8cd a018 	str.w	sl, [sp, #24]
10015fc2:	4699      	mov	r9, r3
10015fc4:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
10015fc8:	46a8      	mov	r8, r5
10015fca:	e02b      	b.n	10016024 <_dtoa_r+0x5ac>
10015fcc:	1001c830 	.word	0x1001c830
10015fd0:	1001c808 	.word	0x1001c808
10015fd4:	3ff00000 	.word	0x3ff00000
10015fd8:	401c0000 	.word	0x401c0000
10015fdc:	3fe00000 	.word	0x3fe00000
10015fe0:	40240000 	.word	0x40240000
10015fe4:	40140000 	.word	0x40140000
10015fe8:	4652      	mov	r2, sl
10015fea:	465b      	mov	r3, fp
10015fec:	4620      	mov	r0, r4
10015fee:	4629      	mov	r1, r5
10015ff0:	f003 fdf6 	bl	10019be0 <__aeabi_ddiv>
10015ff4:	f003 ff7a 	bl	10019eec <__aeabi_d2iz>
10015ff8:	4606      	mov	r6, r0
10015ffa:	f003 fc5d 	bl	100198b8 <__aeabi_i2d>
10015ffe:	4652      	mov	r2, sl
10016000:	465b      	mov	r3, fp
10016002:	f003 fcc3 	bl	1001998c <__aeabi_dmul>
10016006:	f108 0801 	add.w	r8, r8, #1
1001600a:	460b      	mov	r3, r1
1001600c:	4602      	mov	r2, r0
1001600e:	4629      	mov	r1, r5
10016010:	4620      	mov	r0, r4
10016012:	f003 fb03 	bl	1001961c <__aeabi_dsub>
10016016:	f106 0330 	add.w	r3, r6, #48	@ 0x30
1001601a:	45c8      	cmp	r8, r9
1001601c:	f807 3b01 	strb.w	r3, [r7], #1
10016020:	f000 82db 	beq.w	100165da <_dtoa_r+0xb62>
10016024:	4bb9      	ldr	r3, [pc, #740]	@ (1001630c <_dtoa_r+0x894>)
10016026:	2200      	movs	r2, #0
10016028:	f003 fcb0 	bl	1001998c <__aeabi_dmul>
1001602c:	2200      	movs	r2, #0
1001602e:	2300      	movs	r3, #0
10016030:	4604      	mov	r4, r0
10016032:	460d      	mov	r5, r1
10016034:	f003 ff12 	bl	10019e5c <__aeabi_dcmpeq>
10016038:	2800      	cmp	r0, #0
1001603a:	d0d5      	beq.n	10015fe8 <_dtoa_r+0x570>
1001603c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
1001603e:	f8dd a018 	ldr.w	sl, [sp, #24]
10016042:	3501      	adds	r5, #1
10016044:	463e      	mov	r6, r7
10016046:	e0b0      	b.n	100161aa <_dtoa_r+0x732>
10016048:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001604a:	2a00      	cmp	r2, #0
1001604c:	f040 80d2 	bne.w	100161f4 <_dtoa_r+0x77c>
10016050:	2300      	movs	r3, #0
10016052:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
10016054:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10016056:	930a      	str	r3, [sp, #40]	@ 0x28
10016058:	461f      	mov	r7, r3
1001605a:	b156      	cbz	r6, 10016072 <_dtoa_r+0x5fa>
1001605c:	2c00      	cmp	r4, #0
1001605e:	dd08      	ble.n	10016072 <_dtoa_r+0x5fa>
10016060:	42a6      	cmp	r6, r4
10016062:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10016064:	4633      	mov	r3, r6
10016066:	bfa8      	it	ge
10016068:	4623      	movge	r3, r4
1001606a:	1ad2      	subs	r2, r2, r3
1001606c:	9209      	str	r2, [sp, #36]	@ 0x24
1001606e:	1af6      	subs	r6, r6, r3
10016070:	1ae4      	subs	r4, r4, r3
10016072:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10016074:	b153      	cbz	r3, 1001608c <_dtoa_r+0x614>
10016076:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016078:	b113      	cbz	r3, 10016080 <_dtoa_r+0x608>
1001607a:	2d00      	cmp	r5, #0
1001607c:	f040 82e8 	bne.w	10016650 <_dtoa_r+0xbd8>
10016080:	4651      	mov	r1, sl
10016082:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10016084:	9802      	ldr	r0, [sp, #8]
10016086:	f002 fd7f 	bl	10018b88 <__pow5mult>
1001608a:	4682      	mov	sl, r0
1001608c:	9802      	ldr	r0, [sp, #8]
1001608e:	2101      	movs	r1, #1
10016090:	f002 fc96 	bl	100189c0 <__i2b>
10016094:	4681      	mov	r9, r0
10016096:	f1bb 0f00 	cmp.w	fp, #0
1001609a:	f040 81b6 	bne.w	1001640a <_dtoa_r+0x992>
1001609e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
100160a0:	2b01      	cmp	r3, #1
100160a2:	f340 81cc 	ble.w	1001643e <_dtoa_r+0x9c6>
100160a6:	2001      	movs	r0, #1
100160a8:	4420      	add	r0, r4
100160aa:	f010 001f 	ands.w	r0, r0, #31
100160ae:	f000 809a 	beq.w	100161e6 <_dtoa_r+0x76e>
100160b2:	f1c0 0320 	rsb	r3, r0, #32
100160b6:	2b04      	cmp	r3, #4
100160b8:	f340 81da 	ble.w	10016470 <_dtoa_r+0x9f8>
100160bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100160be:	f1c0 001c 	rsb	r0, r0, #28
100160c2:	4403      	add	r3, r0
100160c4:	9309      	str	r3, [sp, #36]	@ 0x24
100160c6:	4406      	add	r6, r0
100160c8:	4404      	add	r4, r0
100160ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100160cc:	2b00      	cmp	r3, #0
100160ce:	dd05      	ble.n	100160dc <_dtoa_r+0x664>
100160d0:	4651      	mov	r1, sl
100160d2:	9802      	ldr	r0, [sp, #8]
100160d4:	461a      	mov	r2, r3
100160d6:	f002 fdb1 	bl	10018c3c <__lshift>
100160da:	4682      	mov	sl, r0
100160dc:	2c00      	cmp	r4, #0
100160de:	dd05      	ble.n	100160ec <_dtoa_r+0x674>
100160e0:	4649      	mov	r1, r9
100160e2:	9802      	ldr	r0, [sp, #8]
100160e4:	4622      	mov	r2, r4
100160e6:	f002 fda9 	bl	10018c3c <__lshift>
100160ea:	4681      	mov	r9, r0
100160ec:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100160ee:	2b00      	cmp	r3, #0
100160f0:	f040 8170 	bne.w	100163d4 <_dtoa_r+0x95c>
100160f4:	9b08      	ldr	r3, [sp, #32]
100160f6:	2b00      	cmp	r3, #0
100160f8:	f340 8148 	ble.w	1001638c <_dtoa_r+0x914>
100160fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100160fe:	2b00      	cmp	r3, #0
10016100:	f040 80a4 	bne.w	1001624c <_dtoa_r+0x7d4>
10016104:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10016106:	3501      	adds	r5, #1
10016108:	f8dd 800c 	ldr.w	r8, [sp, #12]
1001610c:	9c08      	ldr	r4, [sp, #32]
1001610e:	f8dd b008 	ldr.w	fp, [sp, #8]
10016112:	2601      	movs	r6, #1
10016114:	e007      	b.n	10016126 <_dtoa_r+0x6ae>
10016116:	4651      	mov	r1, sl
10016118:	2300      	movs	r3, #0
1001611a:	220a      	movs	r2, #10
1001611c:	4658      	mov	r0, fp
1001611e:	f002 fbad 	bl	1001887c <__multadd>
10016122:	3601      	adds	r6, #1
10016124:	4682      	mov	sl, r0
10016126:	4649      	mov	r1, r9
10016128:	4650      	mov	r0, sl
1001612a:	f7ff fc0f 	bl	1001594c <quorem>
1001612e:	42a6      	cmp	r6, r4
10016130:	f100 0330 	add.w	r3, r0, #48	@ 0x30
10016134:	f808 3b01 	strb.w	r3, [r8], #1
10016138:	dbed      	blt.n	10016116 <_dtoa_r+0x69e>
1001613a:	9a08      	ldr	r2, [sp, #32]
1001613c:	2a00      	cmp	r2, #0
1001613e:	bfc8      	it	gt
10016140:	4616      	movgt	r6, r2
10016142:	9a03      	ldr	r2, [sp, #12]
10016144:	bfd8      	it	le
10016146:	2601      	movle	r6, #1
10016148:	eb02 0b06 	add.w	fp, r2, r6
1001614c:	2400      	movs	r4, #0
1001614e:	4651      	mov	r1, sl
10016150:	2201      	movs	r2, #1
10016152:	9802      	ldr	r0, [sp, #8]
10016154:	9304      	str	r3, [sp, #16]
10016156:	f002 fd71 	bl	10018c3c <__lshift>
1001615a:	4649      	mov	r1, r9
1001615c:	4682      	mov	sl, r0
1001615e:	f002 fde5 	bl	10018d2c <__mcmp>
10016162:	2800      	cmp	r0, #0
10016164:	f340 81e3 	ble.w	1001652e <_dtoa_r+0xab6>
10016168:	9a03      	ldr	r2, [sp, #12]
1001616a:	e002      	b.n	10016172 <_dtoa_r+0x6fa>
1001616c:	455a      	cmp	r2, fp
1001616e:	f000 81e9 	beq.w	10016544 <_dtoa_r+0xacc>
10016172:	465e      	mov	r6, fp
10016174:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10016178:	f816 3c01 	ldrb.w	r3, [r6, #-1]
1001617c:	2b39      	cmp	r3, #57	@ 0x39
1001617e:	d0f5      	beq.n	1001616c <_dtoa_r+0x6f4>
10016180:	3301      	adds	r3, #1
10016182:	f88b 3000 	strb.w	r3, [fp]
10016186:	f8dd 8008 	ldr.w	r8, [sp, #8]
1001618a:	4649      	mov	r1, r9
1001618c:	4640      	mov	r0, r8
1001618e:	f002 fb6b 	bl	10018868 <_Bfree>
10016192:	b157      	cbz	r7, 100161aa <_dtoa_r+0x732>
10016194:	b12c      	cbz	r4, 100161a2 <_dtoa_r+0x72a>
10016196:	42bc      	cmp	r4, r7
10016198:	d003      	beq.n	100161a2 <_dtoa_r+0x72a>
1001619a:	4621      	mov	r1, r4
1001619c:	4640      	mov	r0, r8
1001619e:	f002 fb63 	bl	10018868 <_Bfree>
100161a2:	9802      	ldr	r0, [sp, #8]
100161a4:	4639      	mov	r1, r7
100161a6:	f002 fb5f 	bl	10018868 <_Bfree>
100161aa:	9802      	ldr	r0, [sp, #8]
100161ac:	4651      	mov	r1, sl
100161ae:	f002 fb5b 	bl	10018868 <_Bfree>
100161b2:	2300      	movs	r3, #0
100161b4:	7033      	strb	r3, [r6, #0]
100161b6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
100161b8:	601d      	str	r5, [r3, #0]
100161ba:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
100161bc:	2b00      	cmp	r3, #0
100161be:	f43f ac96 	beq.w	10015aee <_dtoa_r+0x76>
100161c2:	9803      	ldr	r0, [sp, #12]
100161c4:	601e      	str	r6, [r3, #0]
100161c6:	b01d      	add	sp, #116	@ 0x74
100161c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100161cc:	4658      	mov	r0, fp
100161ce:	f003 fb73 	bl	100198b8 <__aeabi_i2d>
100161d2:	4632      	mov	r2, r6
100161d4:	463b      	mov	r3, r7
100161d6:	f003 fe41 	bl	10019e5c <__aeabi_dcmpeq>
100161da:	2800      	cmp	r0, #0
100161dc:	f47f acde 	bne.w	10015b9c <_dtoa_r+0x124>
100161e0:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
100161e4:	e4da      	b.n	10015b9c <_dtoa_r+0x124>
100161e6:	231c      	movs	r3, #28
100161e8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100161ea:	441a      	add	r2, r3
100161ec:	9209      	str	r2, [sp, #36]	@ 0x24
100161ee:	441e      	add	r6, r3
100161f0:	441c      	add	r4, r3
100161f2:	e76a      	b.n	100160ca <_dtoa_r+0x652>
100161f4:	9a26      	ldr	r2, [sp, #152]	@ 0x98
100161f6:	2a01      	cmp	r2, #1
100161f8:	f340 81a9 	ble.w	1001654e <_dtoa_r+0xad6>
100161fc:	9b08      	ldr	r3, [sp, #32]
100161fe:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10016200:	1e5d      	subs	r5, r3, #1
10016202:	42aa      	cmp	r2, r5
10016204:	f2c0 816b 	blt.w	100164de <_dtoa_r+0xa66>
10016208:	2b00      	cmp	r3, #0
1001620a:	eba2 0505 	sub.w	r5, r2, r5
1001620e:	f280 82dd 	bge.w	100167cc <_dtoa_r+0xd54>
10016212:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10016216:	1a9e      	subs	r6, r3, r2
10016218:	9802      	ldr	r0, [sp, #8]
1001621a:	2101      	movs	r1, #1
1001621c:	f002 fbd0 	bl	100189c0 <__i2b>
10016220:	4607      	mov	r7, r0
10016222:	e71a      	b.n	1001605a <_dtoa_r+0x5e2>
10016224:	f1c3 0320 	rsb	r3, r3, #32
10016228:	fa06 f003 	lsl.w	r0, r6, r3
1001622c:	e483      	b.n	10015b36 <_dtoa_r+0xbe>
1001622e:	2501      	movs	r5, #1
10016230:	e4e6      	b.n	10015c00 <_dtoa_r+0x188>
10016232:	4639      	mov	r1, r7
10016234:	2300      	movs	r3, #0
10016236:	9802      	ldr	r0, [sp, #8]
10016238:	220a      	movs	r2, #10
1001623a:	f002 fb1f 	bl	1001887c <__multadd>
1001623e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10016240:	2b00      	cmp	r3, #0
10016242:	4607      	mov	r7, r0
10016244:	f340 82ef 	ble.w	10016826 <_dtoa_r+0xdae>
10016248:	950c      	str	r5, [sp, #48]	@ 0x30
1001624a:	9308      	str	r3, [sp, #32]
1001624c:	2e00      	cmp	r6, #0
1001624e:	f300 813f 	bgt.w	100164d0 <_dtoa_r+0xa58>
10016252:	f1bb 0f00 	cmp.w	fp, #0
10016256:	f040 81df 	bne.w	10016618 <_dtoa_r+0xba0>
1001625a:	46b8      	mov	r8, r7
1001625c:	9e03      	ldr	r6, [sp, #12]
1001625e:	9c08      	ldr	r4, [sp, #32]
10016260:	1e73      	subs	r3, r6, #1
10016262:	441c      	add	r4, r3
10016264:	9b04      	ldr	r3, [sp, #16]
10016266:	940a      	str	r4, [sp, #40]	@ 0x28
10016268:	f003 0301 	and.w	r3, r3, #1
1001626c:	9c02      	ldr	r4, [sp, #8]
1001626e:	930d      	str	r3, [sp, #52]	@ 0x34
10016270:	4649      	mov	r1, r9
10016272:	4650      	mov	r0, sl
10016274:	f7ff fb6a 	bl	1001594c <quorem>
10016278:	4639      	mov	r1, r7
1001627a:	4683      	mov	fp, r0
1001627c:	4650      	mov	r0, sl
1001627e:	f002 fd55 	bl	10018d2c <__mcmp>
10016282:	4642      	mov	r2, r8
10016284:	4649      	mov	r1, r9
10016286:	4605      	mov	r5, r0
10016288:	4620      	mov	r0, r4
1001628a:	f002 fd71 	bl	10018d70 <__mdiff>
1001628e:	68c2      	ldr	r2, [r0, #12]
10016290:	4601      	mov	r1, r0
10016292:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
10016296:	2a00      	cmp	r2, #0
10016298:	d13a      	bne.n	10016310 <_dtoa_r+0x898>
1001629a:	e9cd 0308 	strd	r0, r3, [sp, #32]
1001629e:	4650      	mov	r0, sl
100162a0:	f002 fd44 	bl	10018d2c <__mcmp>
100162a4:	9908      	ldr	r1, [sp, #32]
100162a6:	9006      	str	r0, [sp, #24]
100162a8:	4620      	mov	r0, r4
100162aa:	f002 fadd 	bl	10018868 <_Bfree>
100162ae:	9a06      	ldr	r2, [sp, #24]
100162b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100162b2:	2a00      	cmp	r2, #0
100162b4:	d15a      	bne.n	1001636c <_dtoa_r+0x8f4>
100162b6:	9a26      	ldr	r2, [sp, #152]	@ 0x98
100162b8:	b91a      	cbnz	r2, 100162c2 <_dtoa_r+0x84a>
100162ba:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100162bc:	2a00      	cmp	r2, #0
100162be:	f000 829a 	beq.w	100167f6 <_dtoa_r+0xd7e>
100162c2:	2d00      	cmp	r5, #0
100162c4:	db45      	blt.n	10016352 <_dtoa_r+0x8da>
100162c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100162c8:	46b3      	mov	fp, r6
100162ca:	42b2      	cmp	r2, r6
100162cc:	f80b 3b01 	strb.w	r3, [fp], #1
100162d0:	f000 81b9 	beq.w	10016646 <_dtoa_r+0xbce>
100162d4:	4651      	mov	r1, sl
100162d6:	2300      	movs	r3, #0
100162d8:	220a      	movs	r2, #10
100162da:	4620      	mov	r0, r4
100162dc:	f002 face 	bl	1001887c <__multadd>
100162e0:	4547      	cmp	r7, r8
100162e2:	4682      	mov	sl, r0
100162e4:	4639      	mov	r1, r7
100162e6:	f04f 0300 	mov.w	r3, #0
100162ea:	f04f 020a 	mov.w	r2, #10
100162ee:	4620      	mov	r0, r4
100162f0:	d036      	beq.n	10016360 <_dtoa_r+0x8e8>
100162f2:	f002 fac3 	bl	1001887c <__multadd>
100162f6:	4641      	mov	r1, r8
100162f8:	4607      	mov	r7, r0
100162fa:	2300      	movs	r3, #0
100162fc:	220a      	movs	r2, #10
100162fe:	4620      	mov	r0, r4
10016300:	f002 fabc 	bl	1001887c <__multadd>
10016304:	465e      	mov	r6, fp
10016306:	4680      	mov	r8, r0
10016308:	e7b2      	b.n	10016270 <_dtoa_r+0x7f8>
1001630a:	bf00      	nop
1001630c:	40240000 	.word	0x40240000
10016310:	9802      	ldr	r0, [sp, #8]
10016312:	9306      	str	r3, [sp, #24]
10016314:	f002 faa8 	bl	10018868 <_Bfree>
10016318:	2d00      	cmp	r5, #0
1001631a:	9b06      	ldr	r3, [sp, #24]
1001631c:	db06      	blt.n	1001632c <_dtoa_r+0x8b4>
1001631e:	9a04      	ldr	r2, [sp, #16]
10016320:	9926      	ldr	r1, [sp, #152]	@ 0x98
10016322:	f002 0201 	and.w	r2, r2, #1
10016326:	430d      	orrs	r5, r1
10016328:	432a      	orrs	r2, r5
1001632a:	d12a      	bne.n	10016382 <_dtoa_r+0x90a>
1001632c:	4651      	mov	r1, sl
1001632e:	2201      	movs	r2, #1
10016330:	9802      	ldr	r0, [sp, #8]
10016332:	9304      	str	r3, [sp, #16]
10016334:	f002 fc82 	bl	10018c3c <__lshift>
10016338:	4649      	mov	r1, r9
1001633a:	4682      	mov	sl, r0
1001633c:	f002 fcf6 	bl	10018d2c <__mcmp>
10016340:	2800      	cmp	r0, #0
10016342:	9b04      	ldr	r3, [sp, #16]
10016344:	f340 80e8 	ble.w	10016518 <_dtoa_r+0xaa0>
10016348:	2b39      	cmp	r3, #57	@ 0x39
1001634a:	f000 822f 	beq.w	100167ac <_dtoa_r+0xd34>
1001634e:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
10016352:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10016354:	f806 3b01 	strb.w	r3, [r6], #1
10016358:	463c      	mov	r4, r7
1001635a:	3501      	adds	r5, #1
1001635c:	4647      	mov	r7, r8
1001635e:	e712      	b.n	10016186 <_dtoa_r+0x70e>
10016360:	f002 fa8c 	bl	1001887c <__multadd>
10016364:	465e      	mov	r6, fp
10016366:	4607      	mov	r7, r0
10016368:	4680      	mov	r8, r0
1001636a:	e781      	b.n	10016270 <_dtoa_r+0x7f8>
1001636c:	2d00      	cmp	r5, #0
1001636e:	f2c0 827d 	blt.w	1001686c <_dtoa_r+0xdf4>
10016372:	9926      	ldr	r1, [sp, #152]	@ 0x98
10016374:	430d      	orrs	r5, r1
10016376:	990d      	ldr	r1, [sp, #52]	@ 0x34
10016378:	430d      	orrs	r5, r1
1001637a:	f000 8277 	beq.w	1001686c <_dtoa_r+0xdf4>
1001637e:	2a00      	cmp	r2, #0
10016380:	dda1      	ble.n	100162c6 <_dtoa_r+0x84e>
10016382:	2b39      	cmp	r3, #57	@ 0x39
10016384:	f000 8212 	beq.w	100167ac <_dtoa_r+0xd34>
10016388:	3301      	adds	r3, #1
1001638a:	e7e2      	b.n	10016352 <_dtoa_r+0x8da>
1001638c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
1001638e:	2b02      	cmp	r3, #2
10016390:	f77f aeb4 	ble.w	100160fc <_dtoa_r+0x684>
10016394:	9b08      	ldr	r3, [sp, #32]
10016396:	2b00      	cmp	r3, #0
10016398:	f040 811d 	bne.w	100165d6 <_dtoa_r+0xb5e>
1001639c:	4649      	mov	r1, r9
1001639e:	2205      	movs	r2, #5
100163a0:	9802      	ldr	r0, [sp, #8]
100163a2:	f002 fa6b 	bl	1001887c <__multadd>
100163a6:	4601      	mov	r1, r0
100163a8:	4681      	mov	r9, r0
100163aa:	4650      	mov	r0, sl
100163ac:	f002 fcbe 	bl	10018d2c <__mcmp>
100163b0:	2800      	cmp	r0, #0
100163b2:	f340 8110 	ble.w	100165d6 <_dtoa_r+0xb5e>
100163b6:	9e03      	ldr	r6, [sp, #12]
100163b8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
100163ba:	2331      	movs	r3, #49	@ 0x31
100163bc:	f806 3b01 	strb.w	r3, [r6], #1
100163c0:	3501      	adds	r5, #1
100163c2:	9802      	ldr	r0, [sp, #8]
100163c4:	4649      	mov	r1, r9
100163c6:	3501      	adds	r5, #1
100163c8:	f002 fa4e 	bl	10018868 <_Bfree>
100163cc:	2f00      	cmp	r7, #0
100163ce:	f47f aee8 	bne.w	100161a2 <_dtoa_r+0x72a>
100163d2:	e6ea      	b.n	100161aa <_dtoa_r+0x732>
100163d4:	4649      	mov	r1, r9
100163d6:	4650      	mov	r0, sl
100163d8:	f002 fca8 	bl	10018d2c <__mcmp>
100163dc:	2800      	cmp	r0, #0
100163de:	f6bf ae89 	bge.w	100160f4 <_dtoa_r+0x67c>
100163e2:	4651      	mov	r1, sl
100163e4:	2300      	movs	r3, #0
100163e6:	9802      	ldr	r0, [sp, #8]
100163e8:	220a      	movs	r2, #10
100163ea:	f002 fa47 	bl	1001887c <__multadd>
100163ee:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100163f0:	1e5d      	subs	r5, r3, #1
100163f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100163f4:	4682      	mov	sl, r0
100163f6:	2b00      	cmp	r3, #0
100163f8:	f47f af1b 	bne.w	10016232 <_dtoa_r+0x7ba>
100163fc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
100163fe:	2b00      	cmp	r3, #0
10016400:	f340 81ff 	ble.w	10016802 <_dtoa_r+0xd8a>
10016404:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10016406:	9308      	str	r3, [sp, #32]
10016408:	e67e      	b.n	10016108 <_dtoa_r+0x690>
1001640a:	4601      	mov	r1, r0
1001640c:	465a      	mov	r2, fp
1001640e:	9802      	ldr	r0, [sp, #8]
10016410:	f002 fbba 	bl	10018b88 <__pow5mult>
10016414:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10016416:	2b01      	cmp	r3, #1
10016418:	4681      	mov	r9, r0
1001641a:	dd6c      	ble.n	100164f6 <_dtoa_r+0xa7e>
1001641c:	f04f 0b00 	mov.w	fp, #0
10016420:	f8d9 3010 	ldr.w	r3, [r9, #16]
10016424:	eb09 0383 	add.w	r3, r9, r3, lsl #2
10016428:	6918      	ldr	r0, [r3, #16]
1001642a:	f002 fa77 	bl	1001891c <__hi0bits>
1001642e:	f1c0 0020 	rsb	r0, r0, #32
10016432:	e639      	b.n	100160a8 <_dtoa_r+0x630>
10016434:	4b92      	ldr	r3, [pc, #584]	@ (10016680 <_dtoa_r+0xc08>)
10016436:	9303      	str	r3, [sp, #12]
10016438:	3303      	adds	r3, #3
1001643a:	f7ff bbfc 	b.w	10015c36 <_dtoa_r+0x1be>
1001643e:	9b04      	ldr	r3, [sp, #16]
10016440:	2b00      	cmp	r3, #0
10016442:	f47f ae30 	bne.w	100160a6 <_dtoa_r+0x62e>
10016446:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
1001644a:	f3c2 0313 	ubfx	r3, r2, #0, #20
1001644e:	2b00      	cmp	r3, #0
10016450:	f47f ae29 	bne.w	100160a6 <_dtoa_r+0x62e>
10016454:	4b8b      	ldr	r3, [pc, #556]	@ (10016684 <_dtoa_r+0xc0c>)
10016456:	4013      	ands	r3, r2
10016458:	b123      	cbz	r3, 10016464 <_dtoa_r+0x9ec>
1001645a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001645c:	3301      	adds	r3, #1
1001645e:	9309      	str	r3, [sp, #36]	@ 0x24
10016460:	3401      	adds	r4, #1
10016462:	2301      	movs	r3, #1
10016464:	f1bb 0f00 	cmp.w	fp, #0
10016468:	f040 81ae 	bne.w	100167c8 <_dtoa_r+0xd50>
1001646c:	469b      	mov	fp, r3
1001646e:	e61a      	b.n	100160a6 <_dtoa_r+0x62e>
10016470:	f43f ae2b 	beq.w	100160ca <_dtoa_r+0x652>
10016474:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
10016478:	e6b6      	b.n	100161e8 <_dtoa_r+0x770>
1001647a:	2301      	movs	r3, #1
1001647c:	930a      	str	r3, [sp, #40]	@ 0x28
1001647e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
10016480:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10016482:	4413      	add	r3, r2
10016484:	9316      	str	r3, [sp, #88]	@ 0x58
10016486:	3301      	adds	r3, #1
10016488:	2b01      	cmp	r3, #1
1001648a:	461e      	mov	r6, r3
1001648c:	9308      	str	r3, [sp, #32]
1001648e:	bfb8      	it	lt
10016490:	2601      	movlt	r6, #1
10016492:	2e17      	cmp	r6, #23
10016494:	f340 81d5 	ble.w	10016842 <_dtoa_r+0xdca>
10016498:	2201      	movs	r2, #1
1001649a:	2304      	movs	r3, #4
1001649c:	005b      	lsls	r3, r3, #1
1001649e:	f103 0014 	add.w	r0, r3, #20
100164a2:	42b0      	cmp	r0, r6
100164a4:	4611      	mov	r1, r2
100164a6:	f102 0201 	add.w	r2, r2, #1
100164aa:	d9f7      	bls.n	1001649c <_dtoa_r+0xa24>
100164ac:	9b02      	ldr	r3, [sp, #8]
100164ae:	63d9      	str	r1, [r3, #60]	@ 0x3c
100164b0:	e413      	b.n	10015cda <_dtoa_r+0x262>
100164b2:	2301      	movs	r3, #1
100164b4:	930a      	str	r3, [sp, #40]	@ 0x28
100164b6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
100164b8:	2b00      	cmp	r3, #0
100164ba:	dd33      	ble.n	10016524 <_dtoa_r+0xaac>
100164bc:	9316      	str	r3, [sp, #88]	@ 0x58
100164be:	9308      	str	r3, [sp, #32]
100164c0:	461e      	mov	r6, r3
100164c2:	e7e6      	b.n	10016492 <_dtoa_r+0xa1a>
100164c4:	2300      	movs	r3, #0
100164c6:	930a      	str	r3, [sp, #40]	@ 0x28
100164c8:	e7d9      	b.n	1001647e <_dtoa_r+0xa06>
100164ca:	2300      	movs	r3, #0
100164cc:	930a      	str	r3, [sp, #40]	@ 0x28
100164ce:	e7f2      	b.n	100164b6 <_dtoa_r+0xa3e>
100164d0:	4639      	mov	r1, r7
100164d2:	9802      	ldr	r0, [sp, #8]
100164d4:	4632      	mov	r2, r6
100164d6:	f002 fbb1 	bl	10018c3c <__lshift>
100164da:	4607      	mov	r7, r0
100164dc:	e6b9      	b.n	10016252 <_dtoa_r+0x7da>
100164de:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100164e0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100164e2:	950d      	str	r5, [sp, #52]	@ 0x34
100164e4:	1aeb      	subs	r3, r5, r3
100164e6:	449b      	add	fp, r3
100164e8:	9b08      	ldr	r3, [sp, #32]
100164ea:	4616      	mov	r6, r2
100164ec:	441a      	add	r2, r3
100164ee:	441c      	add	r4, r3
100164f0:	9209      	str	r2, [sp, #36]	@ 0x24
100164f2:	2500      	movs	r5, #0
100164f4:	e690      	b.n	10016218 <_dtoa_r+0x7a0>
100164f6:	9b04      	ldr	r3, [sp, #16]
100164f8:	2b00      	cmp	r3, #0
100164fa:	d18f      	bne.n	1001641c <_dtoa_r+0x9a4>
100164fc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10016500:	f3c1 0313 	ubfx	r3, r1, #0, #20
10016504:	460a      	mov	r2, r1
10016506:	2b00      	cmp	r3, #0
10016508:	d188      	bne.n	1001641c <_dtoa_r+0x9a4>
1001650a:	e7a3      	b.n	10016454 <_dtoa_r+0x9dc>
1001650c:	ed9d 7b06 	vldr	d7, [sp, #24]
10016510:	2702      	movs	r7, #2
10016512:	ed8d 7b10 	vstr	d7, [sp, #64]	@ 0x40
10016516:	e40c      	b.n	10015d32 <_dtoa_r+0x2ba>
10016518:	f47f af1b 	bne.w	10016352 <_dtoa_r+0x8da>
1001651c:	07da      	lsls	r2, r3, #31
1001651e:	f57f af18 	bpl.w	10016352 <_dtoa_r+0x8da>
10016522:	e711      	b.n	10016348 <_dtoa_r+0x8d0>
10016524:	2301      	movs	r3, #1
10016526:	9327      	str	r3, [sp, #156]	@ 0x9c
10016528:	9308      	str	r3, [sp, #32]
1001652a:	f7ff bbd1 	b.w	10015cd0 <_dtoa_r+0x258>
1001652e:	d103      	bne.n	10016538 <_dtoa_r+0xac0>
10016530:	9b04      	ldr	r3, [sp, #16]
10016532:	07db      	lsls	r3, r3, #31
10016534:	f53f ae18 	bmi.w	10016168 <_dtoa_r+0x6f0>
10016538:	465e      	mov	r6, fp
1001653a:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
1001653e:	2b30      	cmp	r3, #48	@ 0x30
10016540:	d0fa      	beq.n	10016538 <_dtoa_r+0xac0>
10016542:	e620      	b.n	10016186 <_dtoa_r+0x70e>
10016544:	9a03      	ldr	r2, [sp, #12]
10016546:	2331      	movs	r3, #49	@ 0x31
10016548:	3501      	adds	r5, #1
1001654a:	7013      	strb	r3, [r2, #0]
1001654c:	e61b      	b.n	10016186 <_dtoa_r+0x70e>
1001654e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10016550:	2a00      	cmp	r2, #0
10016552:	f000 80f9 	beq.w	10016748 <_dtoa_r+0xcd0>
10016556:	f203 4333 	addw	r3, r3, #1075	@ 0x433
1001655a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001655c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
1001655e:	4616      	mov	r6, r2
10016560:	441a      	add	r2, r3
10016562:	441c      	add	r4, r3
10016564:	9209      	str	r2, [sp, #36]	@ 0x24
10016566:	e657      	b.n	10016218 <_dtoa_r+0x7a0>
10016568:	f1c8 0301 	rsb	r3, r8, #1
1001656c:	4604      	mov	r4, r0
1001656e:	9309      	str	r3, [sp, #36]	@ 0x24
10016570:	900e      	str	r0, [sp, #56]	@ 0x38
10016572:	f7ff bb9d 	b.w	10015cb0 <_dtoa_r+0x238>
10016576:	f000 80eb 	beq.w	10016750 <_dtoa_r+0xcd8>
1001657a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001657c:	4d42      	ldr	r5, [pc, #264]	@ (10016688 <_dtoa_r+0xc10>)
1001657e:	425e      	negs	r6, r3
10016580:	f006 030f 	and.w	r3, r6, #15
10016584:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10016588:	e9d3 2300 	ldrd	r2, r3, [r3]
1001658c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10016590:	f003 f9fc 	bl	1001998c <__aeabi_dmul>
10016594:	1135      	asrs	r5, r6, #4
10016596:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
1001659a:	f000 814d 	beq.w	10016838 <_dtoa_r+0xdc0>
1001659e:	4e3b      	ldr	r6, [pc, #236]	@ (1001668c <_dtoa_r+0xc14>)
100165a0:	2300      	movs	r3, #0
100165a2:	2702      	movs	r7, #2
100165a4:	4680      	mov	r8, r0
100165a6:	4689      	mov	r9, r1
100165a8:	07e8      	lsls	r0, r5, #31
100165aa:	d509      	bpl.n	100165c0 <_dtoa_r+0xb48>
100165ac:	e9d6 2300 	ldrd	r2, r3, [r6]
100165b0:	4640      	mov	r0, r8
100165b2:	4649      	mov	r1, r9
100165b4:	f003 f9ea 	bl	1001998c <__aeabi_dmul>
100165b8:	3701      	adds	r7, #1
100165ba:	4680      	mov	r8, r0
100165bc:	4689      	mov	r9, r1
100165be:	2301      	movs	r3, #1
100165c0:	106d      	asrs	r5, r5, #1
100165c2:	f106 0608 	add.w	r6, r6, #8
100165c6:	d1ef      	bne.n	100165a8 <_dtoa_r+0xb30>
100165c8:	2b00      	cmp	r3, #0
100165ca:	f47f abcb 	bne.w	10015d64 <_dtoa_r+0x2ec>
100165ce:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
100165d2:	f7ff bbc7 	b.w	10015d64 <_dtoa_r+0x2ec>
100165d6:	9e03      	ldr	r6, [sp, #12]
100165d8:	e4cb      	b.n	10015f72 <_dtoa_r+0x4fa>
100165da:	f8dd a018 	ldr.w	sl, [sp, #24]
100165de:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
100165e0:	4602      	mov	r2, r0
100165e2:	460b      	mov	r3, r1
100165e4:	f003 f81c 	bl	10019620 <__adddf3>
100165e8:	4602      	mov	r2, r0
100165ea:	460b      	mov	r3, r1
100165ec:	e9cd 2306 	strd	r2, r3, [sp, #24]
100165f0:	3501      	adds	r5, #1
100165f2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
100165f6:	46a8      	mov	r8, r5
100165f8:	f003 fc58 	bl	10019eac <__aeabi_dcmpgt>
100165fc:	b940      	cbnz	r0, 10016610 <_dtoa_r+0xb98>
100165fe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10016602:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10016606:	f003 fc29 	bl	10019e5c <__aeabi_dcmpeq>
1001660a:	b118      	cbz	r0, 10016614 <_dtoa_r+0xb9c>
1001660c:	07f1      	lsls	r1, r6, #31
1001660e:	d501      	bpl.n	10016614 <_dtoa_r+0xb9c>
10016610:	9a03      	ldr	r2, [sp, #12]
10016612:	e44b      	b.n	10015eac <_dtoa_r+0x434>
10016614:	463e      	mov	r6, r7
10016616:	e5c8      	b.n	100161aa <_dtoa_r+0x732>
10016618:	6879      	ldr	r1, [r7, #4]
1001661a:	9802      	ldr	r0, [sp, #8]
1001661c:	f002 f8fe 	bl	1001881c <_Balloc>
10016620:	4605      	mov	r5, r0
10016622:	2800      	cmp	r0, #0
10016624:	f000 8126 	beq.w	10016874 <_dtoa_r+0xdfc>
10016628:	693b      	ldr	r3, [r7, #16]
1001662a:	3302      	adds	r3, #2
1001662c:	009a      	lsls	r2, r3, #2
1001662e:	f107 010c 	add.w	r1, r7, #12
10016632:	300c      	adds	r0, #12
10016634:	f7ff f804 	bl	10015640 <memcpy>
10016638:	9802      	ldr	r0, [sp, #8]
1001663a:	4629      	mov	r1, r5
1001663c:	2201      	movs	r2, #1
1001663e:	f002 fafd 	bl	10018c3c <__lshift>
10016642:	4680      	mov	r8, r0
10016644:	e60a      	b.n	1001625c <_dtoa_r+0x7e4>
10016646:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10016648:	463c      	mov	r4, r7
1001664a:	3501      	adds	r5, #1
1001664c:	4647      	mov	r7, r8
1001664e:	e57e      	b.n	1001614e <_dtoa_r+0x6d6>
10016650:	f8dd 8008 	ldr.w	r8, [sp, #8]
10016654:	4639      	mov	r1, r7
10016656:	462a      	mov	r2, r5
10016658:	4640      	mov	r0, r8
1001665a:	f002 fa95 	bl	10018b88 <__pow5mult>
1001665e:	4652      	mov	r2, sl
10016660:	4601      	mov	r1, r0
10016662:	4607      	mov	r7, r0
10016664:	4640      	mov	r0, r8
10016666:	f002 f9d9 	bl	10018a1c <__multiply>
1001666a:	4651      	mov	r1, sl
1001666c:	4682      	mov	sl, r0
1001666e:	4640      	mov	r0, r8
10016670:	f002 f8fa 	bl	10018868 <_Bfree>
10016674:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10016676:	1b5b      	subs	r3, r3, r5
10016678:	930d      	str	r3, [sp, #52]	@ 0x34
1001667a:	f43f ad07 	beq.w	1001608c <_dtoa_r+0x614>
1001667e:	e4ff      	b.n	10016080 <_dtoa_r+0x608>
10016680:	1001c6f8 	.word	0x1001c6f8
10016684:	7ff00000 	.word	0x7ff00000
10016688:	1001c830 	.word	0x1001c830
1001668c:	1001c808 	.word	0x1001c808
10016690:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
10016694:	f003 f97a 	bl	1001998c <__aeabi_dmul>
10016698:	9b03      	ldr	r3, [sp, #12]
1001669a:	701f      	strb	r7, [r3, #0]
1001669c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001669e:	2b01      	cmp	r3, #1
100166a0:	e9cd 010a 	strd	r0, r1, [sp, #40]	@ 0x28
100166a4:	f000 80c6 	beq.w	10016834 <_dtoa_r+0xdbc>
100166a8:	9f10      	ldr	r7, [sp, #64]	@ 0x40
100166aa:	9b03      	ldr	r3, [sp, #12]
100166ac:	f8cd b03c 	str.w	fp, [sp, #60]	@ 0x3c
100166b0:	441f      	add	r7, r3
100166b2:	4b7c      	ldr	r3, [pc, #496]	@ (100168a4 <_dtoa_r+0xe2c>)
100166b4:	2200      	movs	r2, #0
100166b6:	4640      	mov	r0, r8
100166b8:	4649      	mov	r1, r9
100166ba:	f003 f967 	bl	1001998c <__aeabi_dmul>
100166be:	4689      	mov	r9, r1
100166c0:	4680      	mov	r8, r0
100166c2:	f003 fc13 	bl	10019eec <__aeabi_d2iz>
100166c6:	4683      	mov	fp, r0
100166c8:	f003 f8f6 	bl	100198b8 <__aeabi_i2d>
100166cc:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
100166d0:	4602      	mov	r2, r0
100166d2:	460b      	mov	r3, r1
100166d4:	4640      	mov	r0, r8
100166d6:	4649      	mov	r1, r9
100166d8:	f002 ffa0 	bl	1001961c <__aeabi_dsub>
100166dc:	f806 bb01 	strb.w	fp, [r6], #1
100166e0:	42b7      	cmp	r7, r6
100166e2:	4680      	mov	r8, r0
100166e4:	4689      	mov	r9, r1
100166e6:	d1e4      	bne.n	100166b2 <_dtoa_r+0xc3a>
100166e8:	f8dd b03c 	ldr.w	fp, [sp, #60]	@ 0x3c
100166ec:	4b6e      	ldr	r3, [pc, #440]	@ (100168a8 <_dtoa_r+0xe30>)
100166ee:	2200      	movs	r2, #0
100166f0:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
100166f4:	f002 ff94 	bl	10019620 <__adddf3>
100166f8:	4602      	mov	r2, r0
100166fa:	460b      	mov	r3, r1
100166fc:	4640      	mov	r0, r8
100166fe:	4649      	mov	r1, r9
10016700:	f003 fbd4 	bl	10019eac <__aeabi_dcmpgt>
10016704:	2800      	cmp	r0, #0
10016706:	d167      	bne.n	100167d8 <_dtoa_r+0xd60>
10016708:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
1001670c:	4966      	ldr	r1, [pc, #408]	@ (100168a8 <_dtoa_r+0xe30>)
1001670e:	2000      	movs	r0, #0
10016710:	f002 ff84 	bl	1001961c <__aeabi_dsub>
10016714:	4602      	mov	r2, r0
10016716:	460b      	mov	r3, r1
10016718:	4640      	mov	r0, r8
1001671a:	4649      	mov	r1, r9
1001671c:	f003 fba8 	bl	10019e70 <__aeabi_dcmplt>
10016720:	b948      	cbnz	r0, 10016736 <_dtoa_r+0xcbe>
10016722:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10016724:	2b00      	cmp	r3, #0
10016726:	f6ff ac93 	blt.w	10016050 <_dtoa_r+0x5d8>
1001672a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1001672c:	2b0e      	cmp	r3, #14
1001672e:	f73f ac8f 	bgt.w	10016050 <_dtoa_r+0x5d8>
10016732:	f7ff bbfd 	b.w	10015f30 <_dtoa_r+0x4b8>
10016736:	463e      	mov	r6, r7
10016738:	3f01      	subs	r7, #1
1001673a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
1001673e:	2b30      	cmp	r3, #48	@ 0x30
10016740:	d0f9      	beq.n	10016736 <_dtoa_r+0xcbe>
10016742:	9d17      	ldr	r5, [sp, #92]	@ 0x5c
10016744:	3501      	adds	r5, #1
10016746:	e530      	b.n	100161aa <_dtoa_r+0x732>
10016748:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
1001674a:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
1001674e:	e704      	b.n	1001655a <_dtoa_r+0xae2>
10016750:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10016754:	2702      	movs	r7, #2
10016756:	f7ff bb05 	b.w	10015d64 <_dtoa_r+0x2ec>
1001675a:	9b08      	ldr	r3, [sp, #32]
1001675c:	2b00      	cmp	r3, #0
1001675e:	f43f abb9 	beq.w	10015ed4 <_dtoa_r+0x45c>
10016762:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10016764:	2b00      	cmp	r3, #0
10016766:	f77f abda 	ble.w	10015f1e <_dtoa_r+0x4a6>
1001676a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1001676c:	9310      	str	r3, [sp, #64]	@ 0x40
1001676e:	3a01      	subs	r2, #1
10016770:	4b4c      	ldr	r3, [pc, #304]	@ (100168a4 <_dtoa_r+0xe2c>)
10016772:	9217      	str	r2, [sp, #92]	@ 0x5c
10016774:	4640      	mov	r0, r8
10016776:	2200      	movs	r2, #0
10016778:	4649      	mov	r1, r9
1001677a:	f003 f907 	bl	1001998c <__aeabi_dmul>
1001677e:	4680      	mov	r8, r0
10016780:	4689      	mov	r9, r1
10016782:	1c78      	adds	r0, r7, #1
10016784:	f003 f898 	bl	100198b8 <__aeabi_i2d>
10016788:	4642      	mov	r2, r8
1001678a:	464b      	mov	r3, r9
1001678c:	f003 f8fe 	bl	1001998c <__aeabi_dmul>
10016790:	4b46      	ldr	r3, [pc, #280]	@ (100168ac <_dtoa_r+0xe34>)
10016792:	2200      	movs	r2, #0
10016794:	f002 ff44 	bl	10019620 <__adddf3>
10016798:	4606      	mov	r6, r0
1001679a:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
1001679e:	f7ff bb02 	b.w	10015da6 <_dtoa_r+0x32e>
100167a2:	f108 0801 	add.w	r8, r8, #1
100167a6:	2331      	movs	r3, #49	@ 0x31
100167a8:	f7ff bb87 	b.w	10015eba <_dtoa_r+0x442>
100167ac:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
100167ae:	9a03      	ldr	r2, [sp, #12]
100167b0:	46b3      	mov	fp, r6
100167b2:	2339      	movs	r3, #57	@ 0x39
100167b4:	463c      	mov	r4, r7
100167b6:	f80b 3b01 	strb.w	r3, [fp], #1
100167ba:	3501      	adds	r5, #1
100167bc:	4647      	mov	r7, r8
100167be:	e4d8      	b.n	10016172 <_dtoa_r+0x6fa>
100167c0:	f04f 0900 	mov.w	r9, #0
100167c4:	464f      	mov	r7, r9
100167c6:	e5f6      	b.n	100163b6 <_dtoa_r+0x93e>
100167c8:	469b      	mov	fp, r3
100167ca:	e629      	b.n	10016420 <_dtoa_r+0x9a8>
100167cc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100167ce:	4616      	mov	r6, r2
100167d0:	441a      	add	r2, r3
100167d2:	441c      	add	r4, r3
100167d4:	9209      	str	r2, [sp, #36]	@ 0x24
100167d6:	e51f      	b.n	10016218 <_dtoa_r+0x7a0>
100167d8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
100167da:	9a03      	ldr	r2, [sp, #12]
100167dc:	f103 0801 	add.w	r8, r3, #1
100167e0:	f7ff bb64 	b.w	10015eac <_dtoa_r+0x434>
100167e4:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
100167e8:	e7ab      	b.n	10016742 <_dtoa_r+0xcca>
100167ea:	e9dd b418 	ldrd	fp, r4, [sp, #96]	@ 0x60
100167ee:	f8dd a050 	ldr.w	sl, [sp, #80]	@ 0x50
100167f2:	f7ff bb94 	b.w	10015f1e <_dtoa_r+0x4a6>
100167f6:	2b39      	cmp	r3, #57	@ 0x39
100167f8:	d0d8      	beq.n	100167ac <_dtoa_r+0xd34>
100167fa:	2d00      	cmp	r5, #0
100167fc:	f73f ada7 	bgt.w	1001634e <_dtoa_r+0x8d6>
10016800:	e5a7      	b.n	10016352 <_dtoa_r+0x8da>
10016802:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10016804:	2b02      	cmp	r3, #2
10016806:	dc0a      	bgt.n	1001681e <_dtoa_r+0xda6>
10016808:	9b16      	ldr	r3, [sp, #88]	@ 0x58
1001680a:	9308      	str	r3, [sp, #32]
1001680c:	4649      	mov	r1, r9
1001680e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10016810:	f7ff f89c 	bl	1001594c <quorem>
10016814:	9a03      	ldr	r2, [sp, #12]
10016816:	f100 0330 	add.w	r3, r0, #48	@ 0x30
1001681a:	7013      	strb	r3, [r2, #0]
1001681c:	e48d      	b.n	1001613a <_dtoa_r+0x6c2>
1001681e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
10016820:	9308      	str	r3, [sp, #32]
10016822:	950c      	str	r5, [sp, #48]	@ 0x30
10016824:	e5b6      	b.n	10016394 <_dtoa_r+0x91c>
10016826:	9b26      	ldr	r3, [sp, #152]	@ 0x98
10016828:	2b02      	cmp	r3, #2
1001682a:	dcf8      	bgt.n	1001681e <_dtoa_r+0xda6>
1001682c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
1001682e:	950c      	str	r5, [sp, #48]	@ 0x30
10016830:	9308      	str	r3, [sp, #32]
10016832:	e50b      	b.n	1001624c <_dtoa_r+0x7d4>
10016834:	4637      	mov	r7, r6
10016836:	e759      	b.n	100166ec <_dtoa_r+0xc74>
10016838:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001683c:	2702      	movs	r7, #2
1001683e:	f7ff ba91 	b.w	10015d64 <_dtoa_r+0x2ec>
10016842:	9b02      	ldr	r3, [sp, #8]
10016844:	2100      	movs	r1, #0
10016846:	63d9      	str	r1, [r3, #60]	@ 0x3c
10016848:	f7ff ba47 	b.w	10015cda <_dtoa_r+0x262>
1001684c:	9b02      	ldr	r3, [sp, #8]
1001684e:	2500      	movs	r5, #0
10016850:	63dd      	str	r5, [r3, #60]	@ 0x3c
10016852:	4629      	mov	r1, r5
10016854:	4618      	mov	r0, r3
10016856:	f001 ffe1 	bl	1001881c <_Balloc>
1001685a:	9003      	str	r0, [sp, #12]
1001685c:	b9a8      	cbnz	r0, 1001688a <_dtoa_r+0xe12>
1001685e:	4b14      	ldr	r3, [pc, #80]	@ (100168b0 <_dtoa_r+0xe38>)
10016860:	4814      	ldr	r0, [pc, #80]	@ (100168b4 <_dtoa_r+0xe3c>)
10016862:	2200      	movs	r2, #0
10016864:	f240 11af 	movw	r1, #431	@ 0x1af
10016868:	f002 fd88 	bl	1001937c <__assert_func>
1001686c:	2a00      	cmp	r2, #0
1001686e:	f77f ad70 	ble.w	10016352 <_dtoa_r+0x8da>
10016872:	e55b      	b.n	1001632c <_dtoa_r+0x8b4>
10016874:	4b0e      	ldr	r3, [pc, #56]	@ (100168b0 <_dtoa_r+0xe38>)
10016876:	480f      	ldr	r0, [pc, #60]	@ (100168b4 <_dtoa_r+0xe3c>)
10016878:	462a      	mov	r2, r5
1001687a:	f240 21ef 	movw	r1, #751	@ 0x2ef
1001687e:	f002 fd7d 	bl	1001937c <__assert_func>
10016882:	4b0d      	ldr	r3, [pc, #52]	@ (100168b8 <_dtoa_r+0xe40>)
10016884:	9303      	str	r3, [sp, #12]
10016886:	f7ff b932 	b.w	10015aee <_dtoa_r+0x76>
1001688a:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
1001688e:	639a      	str	r2, [r3, #56]	@ 0x38
10016890:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10016894:	2201      	movs	r2, #1
10016896:	9527      	str	r5, [sp, #156]	@ 0x9c
10016898:	9316      	str	r3, [sp, #88]	@ 0x58
1001689a:	920a      	str	r2, [sp, #40]	@ 0x28
1001689c:	9308      	str	r3, [sp, #32]
1001689e:	f7ff bb3e 	b.w	10015f1e <_dtoa_r+0x4a6>
100168a2:	bf00      	nop
100168a4:	40240000 	.word	0x40240000
100168a8:	3fe00000 	.word	0x3fe00000
100168ac:	401c0000 	.word	0x401c0000
100168b0:	1001c6fc 	.word	0x1001c6fc
100168b4:	1001c710 	.word	0x1001c710
100168b8:	1001c6ec 	.word	0x1001c6ec

100168bc <_malloc_trim_r>:
100168bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100168c0:	4606      	mov	r6, r0
100168c2:	2008      	movs	r0, #8
100168c4:	4689      	mov	r9, r1
100168c6:	f7fe fe29 	bl	1001551c <sysconf>
100168ca:	f8df 80a4 	ldr.w	r8, [pc, #164]	@ 10016970 <_malloc_trim_r+0xb4>
100168ce:	4605      	mov	r5, r0
100168d0:	4630      	mov	r0, r6
100168d2:	f7fd fe5d 	bl	10014590 <__malloc_lock>
100168d6:	f8d8 3008 	ldr.w	r3, [r8, #8]
100168da:	685f      	ldr	r7, [r3, #4]
100168dc:	f027 0703 	bic.w	r7, r7, #3
100168e0:	f1a7 0411 	sub.w	r4, r7, #17
100168e4:	eba4 0409 	sub.w	r4, r4, r9
100168e8:	442c      	add	r4, r5
100168ea:	fbb4 f4f5 	udiv	r4, r4, r5
100168ee:	3c01      	subs	r4, #1
100168f0:	fb05 f404 	mul.w	r4, r5, r4
100168f4:	42a5      	cmp	r5, r4
100168f6:	dc08      	bgt.n	1001690a <_malloc_trim_r+0x4e>
100168f8:	2100      	movs	r1, #0
100168fa:	4630      	mov	r0, r6
100168fc:	f7fe fdf6 	bl	100154ec <_sbrk_r>
10016900:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016904:	443b      	add	r3, r7
10016906:	4298      	cmp	r0, r3
10016908:	d005      	beq.n	10016916 <_malloc_trim_r+0x5a>
1001690a:	4630      	mov	r0, r6
1001690c:	f7fd fe46 	bl	1001459c <__malloc_unlock>
10016910:	2000      	movs	r0, #0
10016912:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10016916:	4261      	negs	r1, r4
10016918:	4630      	mov	r0, r6
1001691a:	f7fe fde7 	bl	100154ec <_sbrk_r>
1001691e:	3001      	adds	r0, #1
10016920:	d00f      	beq.n	10016942 <_malloc_trim_r+0x86>
10016922:	4a11      	ldr	r2, [pc, #68]	@ (10016968 <_malloc_trim_r+0xac>)
10016924:	f8d8 3008 	ldr.w	r3, [r8, #8]
10016928:	1b3f      	subs	r7, r7, r4
1001692a:	f047 0701 	orr.w	r7, r7, #1
1001692e:	605f      	str	r7, [r3, #4]
10016930:	6813      	ldr	r3, [r2, #0]
10016932:	4630      	mov	r0, r6
10016934:	1b1b      	subs	r3, r3, r4
10016936:	6013      	str	r3, [r2, #0]
10016938:	f7fd fe30 	bl	1001459c <__malloc_unlock>
1001693c:	2001      	movs	r0, #1
1001693e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10016942:	2100      	movs	r1, #0
10016944:	4630      	mov	r0, r6
10016946:	f7fe fdd1 	bl	100154ec <_sbrk_r>
1001694a:	f8d8 2008 	ldr.w	r2, [r8, #8]
1001694e:	1a83      	subs	r3, r0, r2
10016950:	2b0f      	cmp	r3, #15
10016952:	ddda      	ble.n	1001690a <_malloc_trim_r+0x4e>
10016954:	f043 0301 	orr.w	r3, r3, #1
10016958:	6053      	str	r3, [r2, #4]
1001695a:	4b04      	ldr	r3, [pc, #16]	@ (1001696c <_malloc_trim_r+0xb0>)
1001695c:	4902      	ldr	r1, [pc, #8]	@ (10016968 <_malloc_trim_r+0xac>)
1001695e:	681b      	ldr	r3, [r3, #0]
10016960:	1ac0      	subs	r0, r0, r3
10016962:	6008      	str	r0, [r1, #0]
10016964:	e7d1      	b.n	1001690a <_malloc_trim_r+0x4e>
10016966:	bf00      	nop
10016968:	2000142c 	.word	0x2000142c
1001696c:	20000038 	.word	0x20000038
10016970:	20000040 	.word	0x20000040

10016974 <_free_r>:
10016974:	2900      	cmp	r1, #0
10016976:	d07c      	beq.n	10016a72 <_free_r+0xfe>
10016978:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
1001697c:	460c      	mov	r4, r1
1001697e:	4680      	mov	r8, r0
10016980:	f7fd fe06 	bl	10014590 <__malloc_lock>
10016984:	f854 3c04 	ldr.w	r3, [r4, #-4]
10016988:	4f76      	ldr	r7, [pc, #472]	@ (10016b64 <_free_r+0x1f0>)
1001698a:	f1a4 0508 	sub.w	r5, r4, #8
1001698e:	f023 0101 	bic.w	r1, r3, #1
10016992:	1868      	adds	r0, r5, r1
10016994:	68be      	ldr	r6, [r7, #8]
10016996:	6842      	ldr	r2, [r0, #4]
10016998:	4286      	cmp	r6, r0
1001699a:	f022 0203 	bic.w	r2, r2, #3
1001699e:	f000 8083 	beq.w	10016aa8 <_free_r+0x134>
100169a2:	07de      	lsls	r6, r3, #31
100169a4:	6042      	str	r2, [r0, #4]
100169a6:	eb00 0c02 	add.w	ip, r0, r2
100169aa:	d433      	bmi.n	10016a14 <_free_r+0xa0>
100169ac:	f854 4c08 	ldr.w	r4, [r4, #-8]
100169b0:	f8dc 3004 	ldr.w	r3, [ip, #4]
100169b4:	1b2d      	subs	r5, r5, r4
100169b6:	4421      	add	r1, r4
100169b8:	68ac      	ldr	r4, [r5, #8]
100169ba:	f107 0c08 	add.w	ip, r7, #8
100169be:	4564      	cmp	r4, ip
100169c0:	f003 0301 	and.w	r3, r3, #1
100169c4:	d064      	beq.n	10016a90 <_free_r+0x11c>
100169c6:	f8d5 e00c 	ldr.w	lr, [r5, #12]
100169ca:	f8c4 e00c 	str.w	lr, [r4, #12]
100169ce:	f8ce 4008 	str.w	r4, [lr, #8]
100169d2:	2b00      	cmp	r3, #0
100169d4:	f000 8081 	beq.w	10016ada <_free_r+0x166>
100169d8:	f041 0301 	orr.w	r3, r1, #1
100169dc:	606b      	str	r3, [r5, #4]
100169de:	6001      	str	r1, [r0, #0]
100169e0:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
100169e4:	d222      	bcs.n	10016a2c <_free_r+0xb8>
100169e6:	6878      	ldr	r0, [r7, #4]
100169e8:	08cb      	lsrs	r3, r1, #3
100169ea:	2201      	movs	r2, #1
100169ec:	0949      	lsrs	r1, r1, #5
100169ee:	3301      	adds	r3, #1
100169f0:	408a      	lsls	r2, r1
100169f2:	4302      	orrs	r2, r0
100169f4:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
100169f8:	607a      	str	r2, [r7, #4]
100169fa:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
100169fe:	3a08      	subs	r2, #8
10016a00:	e9c5 1202 	strd	r1, r2, [r5, #8]
10016a04:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
10016a08:	60cd      	str	r5, [r1, #12]
10016a0a:	4640      	mov	r0, r8
10016a0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10016a10:	f7fd bdc4 	b.w	1001459c <__malloc_unlock>
10016a14:	f8dc 3004 	ldr.w	r3, [ip, #4]
10016a18:	07db      	lsls	r3, r3, #31
10016a1a:	d52b      	bpl.n	10016a74 <_free_r+0x100>
10016a1c:	f041 0301 	orr.w	r3, r1, #1
10016a20:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10016a24:	f844 3c04 	str.w	r3, [r4, #-4]
10016a28:	6001      	str	r1, [r0, #0]
10016a2a:	d3dc      	bcc.n	100169e6 <_free_r+0x72>
10016a2c:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
10016a30:	ea4f 2351 	mov.w	r3, r1, lsr #9
10016a34:	d253      	bcs.n	10016ade <_free_r+0x16a>
10016a36:	098b      	lsrs	r3, r1, #6
10016a38:	f103 0039 	add.w	r0, r3, #57	@ 0x39
10016a3c:	f103 0238 	add.w	r2, r3, #56	@ 0x38
10016a40:	00c3      	lsls	r3, r0, #3
10016a42:	18f8      	adds	r0, r7, r3
10016a44:	58fb      	ldr	r3, [r7, r3]
10016a46:	3808      	subs	r0, #8
10016a48:	4298      	cmp	r0, r3
10016a4a:	d103      	bne.n	10016a54 <_free_r+0xe0>
10016a4c:	e063      	b.n	10016b16 <_free_r+0x1a2>
10016a4e:	689b      	ldr	r3, [r3, #8]
10016a50:	4298      	cmp	r0, r3
10016a52:	d004      	beq.n	10016a5e <_free_r+0xea>
10016a54:	685a      	ldr	r2, [r3, #4]
10016a56:	f022 0203 	bic.w	r2, r2, #3
10016a5a:	428a      	cmp	r2, r1
10016a5c:	d8f7      	bhi.n	10016a4e <_free_r+0xda>
10016a5e:	68d8      	ldr	r0, [r3, #12]
10016a60:	e9c5 3002 	strd	r3, r0, [r5, #8]
10016a64:	6085      	str	r5, [r0, #8]
10016a66:	60dd      	str	r5, [r3, #12]
10016a68:	4640      	mov	r0, r8
10016a6a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10016a6e:	f7fd bd95 	b.w	1001459c <__malloc_unlock>
10016a72:	4770      	bx	lr
10016a74:	4411      	add	r1, r2
10016a76:	f107 0c08 	add.w	ip, r7, #8
10016a7a:	6883      	ldr	r3, [r0, #8]
10016a7c:	4563      	cmp	r3, ip
10016a7e:	d03f      	beq.n	10016b00 <_free_r+0x18c>
10016a80:	68c2      	ldr	r2, [r0, #12]
10016a82:	60da      	str	r2, [r3, #12]
10016a84:	6093      	str	r3, [r2, #8]
10016a86:	f041 0301 	orr.w	r3, r1, #1
10016a8a:	606b      	str	r3, [r5, #4]
10016a8c:	5069      	str	r1, [r5, r1]
10016a8e:	e7a7      	b.n	100169e0 <_free_r+0x6c>
10016a90:	2b00      	cmp	r3, #0
10016a92:	d161      	bne.n	10016b58 <_free_r+0x1e4>
10016a94:	440a      	add	r2, r1
10016a96:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
10016a9a:	60cb      	str	r3, [r1, #12]
10016a9c:	6099      	str	r1, [r3, #8]
10016a9e:	f042 0301 	orr.w	r3, r2, #1
10016aa2:	606b      	str	r3, [r5, #4]
10016aa4:	50aa      	str	r2, [r5, r2]
10016aa6:	e7b0      	b.n	10016a0a <_free_r+0x96>
10016aa8:	07db      	lsls	r3, r3, #31
10016aaa:	440a      	add	r2, r1
10016aac:	d407      	bmi.n	10016abe <_free_r+0x14a>
10016aae:	f854 3c08 	ldr.w	r3, [r4, #-8]
10016ab2:	1aed      	subs	r5, r5, r3
10016ab4:	441a      	add	r2, r3
10016ab6:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
10016aba:	60cb      	str	r3, [r1, #12]
10016abc:	6099      	str	r1, [r3, #8]
10016abe:	f042 0301 	orr.w	r3, r2, #1
10016ac2:	606b      	str	r3, [r5, #4]
10016ac4:	4b28      	ldr	r3, [pc, #160]	@ (10016b68 <_free_r+0x1f4>)
10016ac6:	60bd      	str	r5, [r7, #8]
10016ac8:	681b      	ldr	r3, [r3, #0]
10016aca:	4293      	cmp	r3, r2
10016acc:	d89d      	bhi.n	10016a0a <_free_r+0x96>
10016ace:	4b27      	ldr	r3, [pc, #156]	@ (10016b6c <_free_r+0x1f8>)
10016ad0:	4640      	mov	r0, r8
10016ad2:	6819      	ldr	r1, [r3, #0]
10016ad4:	f7ff fef2 	bl	100168bc <_malloc_trim_r>
10016ad8:	e797      	b.n	10016a0a <_free_r+0x96>
10016ada:	4411      	add	r1, r2
10016adc:	e7cd      	b.n	10016a7a <_free_r+0x106>
10016ade:	2b14      	cmp	r3, #20
10016ae0:	d908      	bls.n	10016af4 <_free_r+0x180>
10016ae2:	2b54      	cmp	r3, #84	@ 0x54
10016ae4:	d81f      	bhi.n	10016b26 <_free_r+0x1b2>
10016ae6:	0b0b      	lsrs	r3, r1, #12
10016ae8:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
10016aec:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
10016af0:	00c3      	lsls	r3, r0, #3
10016af2:	e7a6      	b.n	10016a42 <_free_r+0xce>
10016af4:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
10016af8:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
10016afc:	00c3      	lsls	r3, r0, #3
10016afe:	e7a0      	b.n	10016a42 <_free_r+0xce>
10016b00:	f041 0301 	orr.w	r3, r1, #1
10016b04:	613d      	str	r5, [r7, #16]
10016b06:	617d      	str	r5, [r7, #20]
10016b08:	f8c5 c008 	str.w	ip, [r5, #8]
10016b0c:	f8c5 c00c 	str.w	ip, [r5, #12]
10016b10:	606b      	str	r3, [r5, #4]
10016b12:	5069      	str	r1, [r5, r1]
10016b14:	e779      	b.n	10016a0a <_free_r+0x96>
10016b16:	6879      	ldr	r1, [r7, #4]
10016b18:	1092      	asrs	r2, r2, #2
10016b1a:	2401      	movs	r4, #1
10016b1c:	fa04 f202 	lsl.w	r2, r4, r2
10016b20:	430a      	orrs	r2, r1
10016b22:	607a      	str	r2, [r7, #4]
10016b24:	e79c      	b.n	10016a60 <_free_r+0xec>
10016b26:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10016b2a:	d806      	bhi.n	10016b3a <_free_r+0x1c6>
10016b2c:	0bcb      	lsrs	r3, r1, #15
10016b2e:	f103 0078 	add.w	r0, r3, #120	@ 0x78
10016b32:	f103 0277 	add.w	r2, r3, #119	@ 0x77
10016b36:	00c3      	lsls	r3, r0, #3
10016b38:	e783      	b.n	10016a42 <_free_r+0xce>
10016b3a:	f240 5254 	movw	r2, #1364	@ 0x554
10016b3e:	4293      	cmp	r3, r2
10016b40:	d806      	bhi.n	10016b50 <_free_r+0x1dc>
10016b42:	0c8b      	lsrs	r3, r1, #18
10016b44:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
10016b48:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
10016b4c:	00c3      	lsls	r3, r0, #3
10016b4e:	e778      	b.n	10016a42 <_free_r+0xce>
10016b50:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10016b54:	227e      	movs	r2, #126	@ 0x7e
10016b56:	e774      	b.n	10016a42 <_free_r+0xce>
10016b58:	f041 0301 	orr.w	r3, r1, #1
10016b5c:	606b      	str	r3, [r5, #4]
10016b5e:	6001      	str	r1, [r0, #0]
10016b60:	e753      	b.n	10016a0a <_free_r+0x96>
10016b62:	bf00      	nop
10016b64:	20000040 	.word	0x20000040
10016b68:	2000003c 	.word	0x2000003c
10016b6c:	2000145c 	.word	0x2000145c

10016b70 <__ascii_mbtowc>:
10016b70:	b082      	sub	sp, #8
10016b72:	b149      	cbz	r1, 10016b88 <__ascii_mbtowc+0x18>
10016b74:	b15a      	cbz	r2, 10016b8e <__ascii_mbtowc+0x1e>
10016b76:	b16b      	cbz	r3, 10016b94 <__ascii_mbtowc+0x24>
10016b78:	7813      	ldrb	r3, [r2, #0]
10016b7a:	600b      	str	r3, [r1, #0]
10016b7c:	7812      	ldrb	r2, [r2, #0]
10016b7e:	1e10      	subs	r0, r2, #0
10016b80:	bf18      	it	ne
10016b82:	2001      	movne	r0, #1
10016b84:	b002      	add	sp, #8
10016b86:	4770      	bx	lr
10016b88:	a901      	add	r1, sp, #4
10016b8a:	2a00      	cmp	r2, #0
10016b8c:	d1f3      	bne.n	10016b76 <__ascii_mbtowc+0x6>
10016b8e:	4610      	mov	r0, r2
10016b90:	b002      	add	sp, #8
10016b92:	4770      	bx	lr
10016b94:	f06f 0001 	mvn.w	r0, #1
10016b98:	e7f4      	b.n	10016b84 <__ascii_mbtowc+0x14>
10016b9a:	bf00      	nop
10016b9c:	0000      	movs	r0, r0
	...

10016ba0 <_svfprintf_r>:
10016ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016ba4:	b0df      	sub	sp, #380	@ 0x17c
10016ba6:	460c      	mov	r4, r1
10016ba8:	9109      	str	r1, [sp, #36]	@ 0x24
10016baa:	4691      	mov	r9, r2
10016bac:	930d      	str	r3, [sp, #52]	@ 0x34
10016bae:	4683      	mov	fp, r0
10016bb0:	f7fe fc82 	bl	100154b8 <_localeconv_r>
10016bb4:	6803      	ldr	r3, [r0, #0]
10016bb6:	931a      	str	r3, [sp, #104]	@ 0x68
10016bb8:	4618      	mov	r0, r3
10016bba:	f7fe fde1 	bl	10015780 <strlen>
10016bbe:	2208      	movs	r2, #8
10016bc0:	9018      	str	r0, [sp, #96]	@ 0x60
10016bc2:	2100      	movs	r1, #0
10016bc4:	a82e      	add	r0, sp, #184	@ 0xb8
10016bc6:	f7fe fbeb 	bl	100153a0 <memset>
10016bca:	89a3      	ldrh	r3, [r4, #12]
10016bcc:	061a      	lsls	r2, r3, #24
10016bce:	d503      	bpl.n	10016bd8 <_svfprintf_r+0x38>
10016bd0:	6923      	ldr	r3, [r4, #16]
10016bd2:	2b00      	cmp	r3, #0
10016bd4:	f000 8790 	beq.w	10017af8 <_svfprintf_r+0xf58>
10016bd8:	ed9f 7b7f 	vldr	d7, [pc, #508]	@ 10016dd8 <_svfprintf_r+0x238>
10016bdc:	2300      	movs	r3, #0
10016bde:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10016be2:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10016be6:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
10016bea:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
10016bee:	aa35      	add	r2, sp, #212	@ 0xd4
10016bf0:	9313      	str	r3, [sp, #76]	@ 0x4c
10016bf2:	9232      	str	r2, [sp, #200]	@ 0xc8
10016bf4:	4690      	mov	r8, r2
10016bf6:	9319      	str	r3, [sp, #100]	@ 0x64
10016bf8:	930a      	str	r3, [sp, #40]	@ 0x28
10016bfa:	f8cd b01c 	str.w	fp, [sp, #28]
10016bfe:	464d      	mov	r5, r9
10016c00:	9f07      	ldr	r7, [sp, #28]
10016c02:	462e      	mov	r6, r5
10016c04:	4b76      	ldr	r3, [pc, #472]	@ (10016de0 <_svfprintf_r+0x240>)
10016c06:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10016c0a:	f7fe fc4f 	bl	100154ac <__locale_mb_cur_max>
10016c0e:	4603      	mov	r3, r0
10016c10:	a82e      	add	r0, sp, #184	@ 0xb8
10016c12:	9000      	str	r0, [sp, #0]
10016c14:	4632      	mov	r2, r6
10016c16:	a92a      	add	r1, sp, #168	@ 0xa8
10016c18:	4638      	mov	r0, r7
10016c1a:	47a0      	blx	r4
10016c1c:	2800      	cmp	r0, #0
10016c1e:	f000 80a9 	beq.w	10016d74 <_svfprintf_r+0x1d4>
10016c22:	f2c0 809f 	blt.w	10016d64 <_svfprintf_r+0x1c4>
10016c26:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10016c28:	2a25      	cmp	r2, #37	@ 0x25
10016c2a:	4603      	mov	r3, r0
10016c2c:	d001      	beq.n	10016c32 <_svfprintf_r+0x92>
10016c2e:	441e      	add	r6, r3
10016c30:	e7e8      	b.n	10016c04 <_svfprintf_r+0x64>
10016c32:	1b77      	subs	r7, r6, r5
10016c34:	4604      	mov	r4, r0
10016c36:	f040 80a0 	bne.w	10016d7a <_svfprintf_r+0x1da>
10016c3a:	2300      	movs	r3, #0
10016c3c:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10016c40:	4699      	mov	r9, r3
10016c42:	930b      	str	r3, [sp, #44]	@ 0x2c
10016c44:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10016c48:	7873      	ldrb	r3, [r6, #1]
10016c4a:	9208      	str	r2, [sp, #32]
10016c4c:	1c74      	adds	r4, r6, #1
10016c4e:	3401      	adds	r4, #1
10016c50:	f1a3 0220 	sub.w	r2, r3, #32
10016c54:	2a5a      	cmp	r2, #90	@ 0x5a
10016c56:	f200 80c5 	bhi.w	10016de4 <_svfprintf_r+0x244>
10016c5a:	e8df f012 	tbh	[pc, r2, lsl #1]
10016c5e:	02ee      	.short	0x02ee
10016c60:	00c300c3 	.word	0x00c300c3
10016c64:	00c302ea 	.word	0x00c302ea
10016c68:	00c300c3 	.word	0x00c300c3
10016c6c:	00c3006a 	.word	0x00c3006a
10016c70:	025100c3 	.word	0x025100c3
10016c74:	00c30260 	.word	0x00c30260
10016c78:	02fc025c 	.word	0x02fc025c
10016c7c:	02f800c3 	.word	0x02f800c3
10016c80:	005b005b 	.word	0x005b005b
10016c84:	005b005b 	.word	0x005b005b
10016c88:	005b005b 	.word	0x005b005b
10016c8c:	005b005b 	.word	0x005b005b
10016c90:	00c3005b 	.word	0x00c3005b
10016c94:	00c300c3 	.word	0x00c300c3
10016c98:	00c300c3 	.word	0x00c300c3
10016c9c:	00c300c3 	.word	0x00c300c3
10016ca0:	00c30144 	.word	0x00c30144
10016ca4:	031601d0 	.word	0x031601d0
10016ca8:	01440144 	.word	0x01440144
10016cac:	00c30144 	.word	0x00c30144
10016cb0:	00c300c3 	.word	0x00c300c3
10016cb4:	02e600c3 	.word	0x02e600c3
10016cb8:	00c300c3 	.word	0x00c300c3
10016cbc:	00c30265 	.word	0x00c30265
10016cc0:	00c300c3 	.word	0x00c300c3
10016cc4:	00c301fa 	.word	0x00c301fa
10016cc8:	00c302d3 	.word	0x00c302d3
10016ccc:	070e00c3 	.word	0x070e00c3
10016cd0:	00c300c3 	.word	0x00c300c3
10016cd4:	00c300c3 	.word	0x00c300c3
10016cd8:	00c300c3 	.word	0x00c300c3
10016cdc:	00c300c3 	.word	0x00c300c3
10016ce0:	00c30144 	.word	0x00c30144
10016ce4:	022c01d0 	.word	0x022c01d0
10016ce8:	01440144 	.word	0x01440144
10016cec:	02960144 	.word	0x02960144
10016cf0:	007f022c 	.word	0x007f022c
10016cf4:	02af00c3 	.word	0x02af00c3
10016cf8:	02a000c3 	.word	0x02a000c3
10016cfc:	02c10703 	.word	0x02c10703
10016d00:	00c3007f 	.word	0x00c3007f
10016d04:	007d01fa 	.word	0x007d01fa
10016d08:	00c30709 	.word	0x00c30709
10016d0c:	073200c3 	.word	0x073200c3
10016d10:	007d00c3 	.word	0x007d00c3
10016d14:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10016d18:	2100      	movs	r1, #0
10016d1a:	f814 3b01 	ldrb.w	r3, [r4], #1
10016d1e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10016d22:	eb02 0141 	add.w	r1, r2, r1, lsl #1
10016d26:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10016d2a:	2a09      	cmp	r2, #9
10016d2c:	d9f5      	bls.n	10016d1a <_svfprintf_r+0x17a>
10016d2e:	910b      	str	r1, [sp, #44]	@ 0x2c
10016d30:	e78e      	b.n	10016c50 <_svfprintf_r+0xb0>
10016d32:	9f07      	ldr	r7, [sp, #28]
10016d34:	4638      	mov	r0, r7
10016d36:	f7fe fbbf 	bl	100154b8 <_localeconv_r>
10016d3a:	6843      	ldr	r3, [r0, #4]
10016d3c:	931d      	str	r3, [sp, #116]	@ 0x74
10016d3e:	4618      	mov	r0, r3
10016d40:	f7fe fd1e 	bl	10015780 <strlen>
10016d44:	901e      	str	r0, [sp, #120]	@ 0x78
10016d46:	4606      	mov	r6, r0
10016d48:	4638      	mov	r0, r7
10016d4a:	f7fe fbb5 	bl	100154b8 <_localeconv_r>
10016d4e:	6883      	ldr	r3, [r0, #8]
10016d50:	931b      	str	r3, [sp, #108]	@ 0x6c
10016d52:	2e00      	cmp	r6, #0
10016d54:	f040 861e 	bne.w	10017994 <_svfprintf_r+0xdf4>
10016d58:	7823      	ldrb	r3, [r4, #0]
10016d5a:	e778      	b.n	10016c4e <_svfprintf_r+0xae>
10016d5c:	7823      	ldrb	r3, [r4, #0]
10016d5e:	f049 0920 	orr.w	r9, r9, #32
10016d62:	e774      	b.n	10016c4e <_svfprintf_r+0xae>
10016d64:	2208      	movs	r2, #8
10016d66:	2100      	movs	r1, #0
10016d68:	a82e      	add	r0, sp, #184	@ 0xb8
10016d6a:	f7fe fb19 	bl	100153a0 <memset>
10016d6e:	2301      	movs	r3, #1
10016d70:	441e      	add	r6, r3
10016d72:	e747      	b.n	10016c04 <_svfprintf_r+0x64>
10016d74:	1b77      	subs	r7, r6, r5
10016d76:	4604      	mov	r4, r0
10016d78:	d011      	beq.n	10016d9e <_svfprintf_r+0x1fe>
10016d7a:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10016d7c:	443b      	add	r3, r7
10016d7e:	9334      	str	r3, [sp, #208]	@ 0xd0
10016d80:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10016d82:	3301      	adds	r3, #1
10016d84:	2b07      	cmp	r3, #7
10016d86:	e9c8 5700 	strd	r5, r7, [r8]
10016d8a:	9333      	str	r3, [sp, #204]	@ 0xcc
10016d8c:	dc18      	bgt.n	10016dc0 <_svfprintf_r+0x220>
10016d8e:	f108 0808 	add.w	r8, r8, #8
10016d92:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10016d94:	443b      	add	r3, r7
10016d96:	930a      	str	r3, [sp, #40]	@ 0x28
10016d98:	2c00      	cmp	r4, #0
10016d9a:	f47f af4e 	bne.w	10016c3a <_svfprintf_r+0x9a>
10016d9e:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
10016da0:	f8dd b01c 	ldr.w	fp, [sp, #28]
10016da4:	2b00      	cmp	r3, #0
10016da6:	f041 81f3 	bne.w	10018190 <_svfprintf_r+0x15f0>
10016daa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10016dac:	899b      	ldrh	r3, [r3, #12]
10016dae:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10016db2:	2b00      	cmp	r3, #0
10016db4:	f041 83c3 	bne.w	1001853e <_svfprintf_r+0x199e>
10016db8:	980a      	ldr	r0, [sp, #40]	@ 0x28
10016dba:	b05f      	add	sp, #380	@ 0x17c
10016dbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016dc0:	9909      	ldr	r1, [sp, #36]	@ 0x24
10016dc2:	9807      	ldr	r0, [sp, #28]
10016dc4:	aa32      	add	r2, sp, #200	@ 0xc8
10016dc6:	f002 fb43 	bl	10019450 <__ssprint_r>
10016dca:	2800      	cmp	r0, #0
10016dcc:	d1ed      	bne.n	10016daa <_svfprintf_r+0x20a>
10016dce:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016dd2:	e7de      	b.n	10016d92 <_svfprintf_r+0x1f2>
10016dd4:	f3af 8000 	nop.w
	...
10016de0:	20000454 	.word	0x20000454
10016de4:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10016de8:	2b00      	cmp	r3, #0
10016dea:	d0d8      	beq.n	10016d9e <_svfprintf_r+0x1fe>
10016dec:	2200      	movs	r2, #0
10016dee:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10016df2:	2301      	movs	r3, #1
10016df4:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10016df8:	9306      	str	r3, [sp, #24]
10016dfa:	920c      	str	r2, [sp, #48]	@ 0x30
10016dfc:	469b      	mov	fp, r3
10016dfe:	9208      	str	r2, [sp, #32]
10016e00:	9214      	str	r2, [sp, #80]	@ 0x50
10016e02:	9210      	str	r2, [sp, #64]	@ 0x40
10016e04:	9212      	str	r2, [sp, #72]	@ 0x48
10016e06:	ad45      	add	r5, sp, #276	@ 0x114
10016e08:	f019 0302 	ands.w	r3, r9, #2
10016e0c:	d002      	beq.n	10016e14 <_svfprintf_r+0x274>
10016e0e:	9906      	ldr	r1, [sp, #24]
10016e10:	3102      	adds	r1, #2
10016e12:	9106      	str	r1, [sp, #24]
10016e14:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10016e18:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10016e1a:	d105      	bne.n	10016e28 <_svfprintf_r+0x288>
10016e1c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10016e1e:	9806      	ldr	r0, [sp, #24]
10016e20:	1a0e      	subs	r6, r1, r0
10016e22:	2e00      	cmp	r6, #0
10016e24:	f300 80aa 	bgt.w	10016f7c <_svfprintf_r+0x3dc>
10016e28:	b182      	cbz	r2, 10016e4c <_svfprintf_r+0x2ac>
10016e2a:	2201      	movs	r2, #1
10016e2c:	f8c8 2004 	str.w	r2, [r8, #4]
10016e30:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10016e32:	3201      	adds	r2, #1
10016e34:	3401      	adds	r4, #1
10016e36:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
10016e3a:	2a07      	cmp	r2, #7
10016e3c:	9434      	str	r4, [sp, #208]	@ 0xd0
10016e3e:	9233      	str	r2, [sp, #204]	@ 0xcc
10016e40:	f8c8 1000 	str.w	r1, [r8]
10016e44:	f300 8405 	bgt.w	10017652 <_svfprintf_r+0xab2>
10016e48:	f108 0808 	add.w	r8, r8, #8
10016e4c:	b183      	cbz	r3, 10016e70 <_svfprintf_r+0x2d0>
10016e4e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10016e50:	aa28      	add	r2, sp, #160	@ 0xa0
10016e52:	3301      	adds	r3, #1
10016e54:	3402      	adds	r4, #2
10016e56:	f8c8 2000 	str.w	r2, [r8]
10016e5a:	2b07      	cmp	r3, #7
10016e5c:	f04f 0202 	mov.w	r2, #2
10016e60:	9434      	str	r4, [sp, #208]	@ 0xd0
10016e62:	9333      	str	r3, [sp, #204]	@ 0xcc
10016e64:	f8c8 2004 	str.w	r2, [r8, #4]
10016e68:	f300 83e7 	bgt.w	1001763a <_svfprintf_r+0xa9a>
10016e6c:	f108 0808 	add.w	r8, r8, #8
10016e70:	2f80      	cmp	r7, #128	@ 0x80
10016e72:	f000 82c0 	beq.w	100173f6 <_svfprintf_r+0x856>
10016e76:	9b08      	ldr	r3, [sp, #32]
10016e78:	eba3 060b 	sub.w	r6, r3, fp
10016e7c:	2e00      	cmp	r6, #0
10016e7e:	f300 82ff 	bgt.w	10017480 <_svfprintf_r+0x8e0>
10016e82:	f419 7f80 	tst.w	r9, #256	@ 0x100
10016e86:	f040 8219 	bne.w	100172bc <_svfprintf_r+0x71c>
10016e8a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10016e8c:	f8c8 5000 	str.w	r5, [r8]
10016e90:	3301      	adds	r3, #1
10016e92:	445c      	add	r4, fp
10016e94:	2b07      	cmp	r3, #7
10016e96:	f8c8 b004 	str.w	fp, [r8, #4]
10016e9a:	9434      	str	r4, [sp, #208]	@ 0xd0
10016e9c:	9333      	str	r3, [sp, #204]	@ 0xcc
10016e9e:	f300 836c 	bgt.w	1001757a <_svfprintf_r+0x9da>
10016ea2:	f108 0808 	add.w	r8, r8, #8
10016ea6:	f019 0f04 	tst.w	r9, #4
10016eaa:	d005      	beq.n	10016eb8 <_svfprintf_r+0x318>
10016eac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10016eae:	9a06      	ldr	r2, [sp, #24]
10016eb0:	1a9d      	subs	r5, r3, r2
10016eb2:	2d00      	cmp	r5, #0
10016eb4:	f300 83dc 	bgt.w	10017670 <_svfprintf_r+0xad0>
10016eb8:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
10016ebc:	9906      	ldr	r1, [sp, #24]
10016ebe:	428a      	cmp	r2, r1
10016ec0:	bfac      	ite	ge
10016ec2:	189b      	addge	r3, r3, r2
10016ec4:	185b      	addlt	r3, r3, r1
10016ec6:	930a      	str	r3, [sp, #40]	@ 0x28
10016ec8:	2c00      	cmp	r4, #0
10016eca:	f040 8318 	bne.w	100174fe <_svfprintf_r+0x95e>
10016ece:	2300      	movs	r3, #0
10016ed0:	9333      	str	r3, [sp, #204]	@ 0xcc
10016ed2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10016ed4:	b11b      	cbz	r3, 10016ede <_svfprintf_r+0x33e>
10016ed6:	990c      	ldr	r1, [sp, #48]	@ 0x30
10016ed8:	9807      	ldr	r0, [sp, #28]
10016eda:	f7ff fd4b 	bl	10016974 <_free_r>
10016ede:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016ee2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10016ee4:	e68c      	b.n	10016c00 <_svfprintf_r+0x60>
10016ee6:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10016eea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10016eec:	3307      	adds	r3, #7
10016eee:	f023 0307 	bic.w	r3, r3, #7
10016ef2:	ecb3 7b02 	vldmia	r3!, {d7}
10016ef6:	ec57 6b17 	vmov	r6, r7, d7
10016efa:	930d      	str	r3, [sp, #52]	@ 0x34
10016efc:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10016f00:	9323      	str	r3, [sp, #140]	@ 0x8c
10016f02:	ed8d 7a22 	vstr	s14, [sp, #136]	@ 0x88
10016f06:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
10016f0a:	4bb1      	ldr	r3, [pc, #708]	@ (100171d0 <_svfprintf_r+0x630>)
10016f0c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10016f10:	4650      	mov	r0, sl
10016f12:	4659      	mov	r1, fp
10016f14:	ed8d 7b16 	vstr	d7, [sp, #88]	@ 0x58
10016f18:	f002 ffd2 	bl	10019ec0 <__aeabi_dcmpun>
10016f1c:	2800      	cmp	r0, #0
10016f1e:	f040 8546 	bne.w	100179ae <_svfprintf_r+0xe0e>
10016f22:	4bab      	ldr	r3, [pc, #684]	@ (100171d0 <_svfprintf_r+0x630>)
10016f24:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10016f28:	4650      	mov	r0, sl
10016f2a:	4659      	mov	r1, fp
10016f2c:	f002 ffaa 	bl	10019e84 <__aeabi_dcmple>
10016f30:	2800      	cmp	r0, #0
10016f32:	f040 853c 	bne.w	100179ae <_svfprintf_r+0xe0e>
10016f36:	2200      	movs	r2, #0
10016f38:	2300      	movs	r3, #0
10016f3a:	4630      	mov	r0, r6
10016f3c:	4639      	mov	r1, r7
10016f3e:	f002 ff97 	bl	10019e70 <__aeabi_dcmplt>
10016f42:	2800      	cmp	r0, #0
10016f44:	f041 8051 	bne.w	10017fea <_svfprintf_r+0x144a>
10016f48:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10016f4c:	4da1      	ldr	r5, [pc, #644]	@ (100171d4 <_svfprintf_r+0x634>)
10016f4e:	4ba2      	ldr	r3, [pc, #648]	@ (100171d8 <_svfprintf_r+0x638>)
10016f50:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10016f54:	990e      	ldr	r1, [sp, #56]	@ 0x38
10016f56:	2947      	cmp	r1, #71	@ 0x47
10016f58:	bfc8      	it	gt
10016f5a:	461d      	movgt	r5, r3
10016f5c:	2300      	movs	r3, #0
10016f5e:	2103      	movs	r1, #3
10016f60:	930c      	str	r3, [sp, #48]	@ 0x30
10016f62:	9106      	str	r1, [sp, #24]
10016f64:	468b      	mov	fp, r1
10016f66:	9308      	str	r3, [sp, #32]
10016f68:	9314      	str	r3, [sp, #80]	@ 0x50
10016f6a:	9310      	str	r3, [sp, #64]	@ 0x40
10016f6c:	9312      	str	r3, [sp, #72]	@ 0x48
10016f6e:	2a00      	cmp	r2, #0
10016f70:	f43f af4a 	beq.w	10016e08 <_svfprintf_r+0x268>
10016f74:	9b06      	ldr	r3, [sp, #24]
10016f76:	3301      	adds	r3, #1
10016f78:	9306      	str	r3, [sp, #24]
10016f7a:	e745      	b.n	10016e08 <_svfprintf_r+0x268>
10016f7c:	2e10      	cmp	r6, #16
10016f7e:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
10016f80:	f341 8276 	ble.w	10018470 <_svfprintf_r+0x18d0>
10016f84:	4895      	ldr	r0, [pc, #596]	@ (100171dc <_svfprintf_r+0x63c>)
10016f86:	9521      	str	r5, [sp, #132]	@ 0x84
10016f88:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
10016f8c:	4621      	mov	r1, r4
10016f8e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10016f90:	9c07      	ldr	r4, [sp, #28]
10016f92:	9015      	str	r0, [sp, #84]	@ 0x54
10016f94:	f04f 0a10 	mov.w	sl, #16
10016f98:	4607      	mov	r7, r0
10016f9a:	e004      	b.n	10016fa6 <_svfprintf_r+0x406>
10016f9c:	3e10      	subs	r6, #16
10016f9e:	2e10      	cmp	r6, #16
10016fa0:	f108 0808 	add.w	r8, r8, #8
10016fa4:	dd16      	ble.n	10016fd4 <_svfprintf_r+0x434>
10016fa6:	3201      	adds	r2, #1
10016fa8:	3110      	adds	r1, #16
10016faa:	2a07      	cmp	r2, #7
10016fac:	e9c8 7a00 	strd	r7, sl, [r8]
10016fb0:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10016fb4:	ddf2      	ble.n	10016f9c <_svfprintf_r+0x3fc>
10016fb6:	aa32      	add	r2, sp, #200	@ 0xc8
10016fb8:	4629      	mov	r1, r5
10016fba:	4620      	mov	r0, r4
10016fbc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10016fc0:	f002 fa46 	bl	10019450 <__ssprint_r>
10016fc4:	2800      	cmp	r0, #0
10016fc6:	f040 86f0 	bne.w	10017daa <_svfprintf_r+0x120a>
10016fca:	3e10      	subs	r6, #16
10016fcc:	2e10      	cmp	r6, #16
10016fce:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10016fd2:	dce8      	bgt.n	10016fa6 <_svfprintf_r+0x406>
10016fd4:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
10016fd8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
10016fda:	460c      	mov	r4, r1
10016fdc:	3201      	adds	r2, #1
10016fde:	9915      	ldr	r1, [sp, #84]	@ 0x54
10016fe0:	f8c8 1000 	str.w	r1, [r8]
10016fe4:	4434      	add	r4, r6
10016fe6:	2a07      	cmp	r2, #7
10016fe8:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
10016fec:	f8c8 6004 	str.w	r6, [r8, #4]
10016ff0:	f300 86ca 	bgt.w	10017d88 <_svfprintf_r+0x11e8>
10016ff4:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10016ff8:	f108 0808 	add.w	r8, r8, #8
10016ffc:	e714      	b.n	10016e28 <_svfprintf_r+0x288>
10016ffe:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10017000:	2b43      	cmp	r3, #67	@ 0x43
10017002:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017006:	f102 0404 	add.w	r4, r2, #4
1001700a:	d003      	beq.n	10017014 <_svfprintf_r+0x474>
1001700c:	f019 0f10 	tst.w	r9, #16
10017010:	f000 855c 	beq.w	10017acc <_svfprintf_r+0xf2c>
10017014:	2208      	movs	r2, #8
10017016:	2100      	movs	r1, #0
10017018:	a830      	add	r0, sp, #192	@ 0xc0
1001701a:	f7fe f9c1 	bl	100153a0 <memset>
1001701e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017020:	9807      	ldr	r0, [sp, #28]
10017022:	681a      	ldr	r2, [r3, #0]
10017024:	ad45      	add	r5, sp, #276	@ 0x114
10017026:	ab30      	add	r3, sp, #192	@ 0xc0
10017028:	4629      	mov	r1, r5
1001702a:	f7fe fc15 	bl	10015858 <_wcrtomb_r>
1001702e:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10017032:	4683      	mov	fp, r0
10017034:	f001 827e 	beq.w	10018534 <_svfprintf_r+0x1994>
10017038:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
1001703c:	9306      	str	r3, [sp, #24]
1001703e:	2200      	movs	r2, #0
10017040:	940d      	str	r4, [sp, #52]	@ 0x34
10017042:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10017046:	920c      	str	r2, [sp, #48]	@ 0x30
10017048:	9208      	str	r2, [sp, #32]
1001704a:	9214      	str	r2, [sp, #80]	@ 0x50
1001704c:	9210      	str	r2, [sp, #64]	@ 0x40
1001704e:	9212      	str	r2, [sp, #72]	@ 0x48
10017050:	e6da      	b.n	10016e08 <_svfprintf_r+0x268>
10017052:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10017054:	f856 5b04 	ldr.w	r5, [r6], #4
10017058:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001705c:	2300      	movs	r3, #0
1001705e:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10017062:	2d00      	cmp	r5, #0
10017064:	f000 8557 	beq.w	10017b16 <_svfprintf_r+0xf76>
10017068:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001706a:	2b53      	cmp	r3, #83	@ 0x53
1001706c:	f000 86b9 	beq.w	10017de2 <_svfprintf_r+0x1242>
10017070:	f019 0310 	ands.w	r3, r9, #16
10017074:	9312      	str	r3, [sp, #72]	@ 0x48
10017076:	f040 86b4 	bne.w	10017de2 <_svfprintf_r+0x1242>
1001707a:	9b08      	ldr	r3, [sp, #32]
1001707c:	1c5a      	adds	r2, r3, #1
1001707e:	f001 8092 	beq.w	100181a6 <_svfprintf_r+0x1606>
10017082:	9912      	ldr	r1, [sp, #72]	@ 0x48
10017084:	461a      	mov	r2, r3
10017086:	4628      	mov	r0, r5
10017088:	f7fe fa8a 	bl	100155a0 <memchr>
1001708c:	900c      	str	r0, [sp, #48]	@ 0x30
1001708e:	2800      	cmp	r0, #0
10017090:	f001 82ed 	beq.w	1001866e <_svfprintf_r+0x1ace>
10017094:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10017096:	960d      	str	r6, [sp, #52]	@ 0x34
10017098:	eba3 0b05 	sub.w	fp, r3, r5
1001709c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001709e:	9308      	str	r3, [sp, #32]
100170a0:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
100170a4:	9314      	str	r3, [sp, #80]	@ 0x50
100170a6:	9310      	str	r3, [sp, #64]	@ 0x40
100170a8:	930c      	str	r3, [sp, #48]	@ 0x30
100170aa:	2373      	movs	r3, #115	@ 0x73
100170ac:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100170b0:	9106      	str	r1, [sp, #24]
100170b2:	930e      	str	r3, [sp, #56]	@ 0x38
100170b4:	e75b      	b.n	10016f6e <_svfprintf_r+0x3ce>
100170b6:	f019 0f20 	tst.w	r9, #32
100170ba:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100170be:	f000 80ec 	beq.w	1001729a <_svfprintf_r+0x6fa>
100170c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100170c4:	3307      	adds	r3, #7
100170c6:	f023 0307 	bic.w	r3, r3, #7
100170ca:	461a      	mov	r2, r3
100170cc:	6859      	ldr	r1, [r3, #4]
100170ce:	f852 3b08 	ldr.w	r3, [r2], #8
100170d2:	920d      	str	r2, [sp, #52]	@ 0x34
100170d4:	460a      	mov	r2, r1
100170d6:	2900      	cmp	r1, #0
100170d8:	f2c0 8419 	blt.w	1001790e <_svfprintf_r+0xd6e>
100170dc:	9908      	ldr	r1, [sp, #32]
100170de:	3101      	adds	r1, #1
100170e0:	f000 829c 	beq.w	1001761c <_svfprintf_r+0xa7c>
100170e4:	ea53 0102 	orrs.w	r1, r3, r2
100170e8:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
100170ec:	f040 8297 	bne.w	1001761e <_svfprintf_r+0xa7e>
100170f0:	9a08      	ldr	r2, [sp, #32]
100170f2:	2a00      	cmp	r2, #0
100170f4:	f040 8298 	bne.w	10017628 <_svfprintf_r+0xa88>
100170f8:	46a1      	mov	r9, r4
100170fa:	4693      	mov	fp, r2
100170fc:	ad5e      	add	r5, sp, #376	@ 0x178
100170fe:	e151      	b.n	100173a4 <_svfprintf_r+0x804>
10017100:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017102:	f853 2b04 	ldr.w	r2, [r3], #4
10017106:	920b      	str	r2, [sp, #44]	@ 0x2c
10017108:	2a00      	cmp	r2, #0
1001710a:	f280 8424 	bge.w	10017956 <_svfprintf_r+0xdb6>
1001710e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10017110:	930d      	str	r3, [sp, #52]	@ 0x34
10017112:	4252      	negs	r2, r2
10017114:	920b      	str	r2, [sp, #44]	@ 0x2c
10017116:	7823      	ldrb	r3, [r4, #0]
10017118:	f049 0904 	orr.w	r9, r9, #4
1001711c:	e597      	b.n	10016c4e <_svfprintf_r+0xae>
1001711e:	232b      	movs	r3, #43	@ 0x2b
10017120:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10017124:	7823      	ldrb	r3, [r4, #0]
10017126:	e592      	b.n	10016c4e <_svfprintf_r+0xae>
10017128:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001712c:	f049 0910 	orr.w	r9, r9, #16
10017130:	f019 0220 	ands.w	r2, r9, #32
10017134:	f000 83b4 	beq.w	100178a0 <_svfprintf_r+0xd00>
10017138:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001713a:	3307      	adds	r3, #7
1001713c:	f023 0307 	bic.w	r3, r3, #7
10017140:	4619      	mov	r1, r3
10017142:	685a      	ldr	r2, [r3, #4]
10017144:	f851 3b08 	ldr.w	r3, [r1], #8
10017148:	910d      	str	r1, [sp, #52]	@ 0x34
1001714a:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
1001714e:	2100      	movs	r1, #0
10017150:	2000      	movs	r0, #0
10017152:	9d08      	ldr	r5, [sp, #32]
10017154:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
10017158:	1c6f      	adds	r7, r5, #1
1001715a:	f000 810c 	beq.w	10017376 <_svfprintf_r+0x7d6>
1001715e:	ea53 0002 	orrs.w	r0, r3, r2
10017162:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
10017166:	f040 8105 	bne.w	10017374 <_svfprintf_r+0x7d4>
1001716a:	2d00      	cmp	r5, #0
1001716c:	f040 8627 	bne.w	10017dbe <_svfprintf_r+0x121e>
10017170:	2900      	cmp	r1, #0
10017172:	f040 83c8 	bne.w	10017906 <_svfprintf_r+0xd66>
10017176:	f014 0b01 	ands.w	fp, r4, #1
1001717a:	f000 83f0 	beq.w	1001795e <_svfprintf_r+0xdbe>
1001717e:	2330      	movs	r3, #48	@ 0x30
10017180:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10017184:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10017188:	e10c      	b.n	100173a4 <_svfprintf_r+0x804>
1001718a:	7823      	ldrb	r3, [r4, #0]
1001718c:	2b68      	cmp	r3, #104	@ 0x68
1001718e:	bf03      	ittte	eq
10017190:	7863      	ldrbeq	r3, [r4, #1]
10017192:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10017196:	3401      	addeq	r4, #1
10017198:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
1001719c:	e557      	b.n	10016c4e <_svfprintf_r+0xae>
1001719e:	f019 0f20 	tst.w	r9, #32
100171a2:	940f      	str	r4, [sp, #60]	@ 0x3c
100171a4:	f000 83e5 	beq.w	10017972 <_svfprintf_r+0xdd2>
100171a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100171aa:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100171ac:	681b      	ldr	r3, [r3, #0]
100171ae:	601a      	str	r2, [r3, #0]
100171b0:	17d2      	asrs	r2, r2, #31
100171b2:	605a      	str	r2, [r3, #4]
100171b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100171b6:	3304      	adds	r3, #4
100171b8:	930d      	str	r3, [sp, #52]	@ 0x34
100171ba:	e692      	b.n	10016ee2 <_svfprintf_r+0x342>
100171bc:	7823      	ldrb	r3, [r4, #0]
100171be:	2b6c      	cmp	r3, #108	@ 0x6c
100171c0:	bf03      	ittte	eq
100171c2:	7863      	ldrbeq	r3, [r4, #1]
100171c4:	f049 0920 	orreq.w	r9, r9, #32
100171c8:	3401      	addeq	r4, #1
100171ca:	f049 0910 	orrne.w	r9, r9, #16
100171ce:	e53e      	b.n	10016c4e <_svfprintf_r+0xae>
100171d0:	7fefffff 	.word	0x7fefffff
100171d4:	1001c51c 	.word	0x1001c51c
100171d8:	1001c520 	.word	0x1001c520
100171dc:	1001c784 	.word	0x1001c784
100171e0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100171e2:	940f      	str	r4, [sp, #60]	@ 0x3c
100171e4:	f852 3b04 	ldr.w	r3, [r2], #4
100171e8:	920d      	str	r2, [sp, #52]	@ 0x34
100171ea:	f647 0230 	movw	r2, #30768	@ 0x7830
100171ee:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
100171f2:	2078      	movs	r0, #120	@ 0x78
100171f4:	4aa8      	ldr	r2, [pc, #672]	@ (10017498 <_svfprintf_r+0x8f8>)
100171f6:	9219      	str	r2, [sp, #100]	@ 0x64
100171f8:	f049 0402 	orr.w	r4, r9, #2
100171fc:	2200      	movs	r2, #0
100171fe:	2102      	movs	r1, #2
10017200:	900e      	str	r0, [sp, #56]	@ 0x38
10017202:	e7a5      	b.n	10017150 <_svfprintf_r+0x5b0>
10017204:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017208:	f049 0410 	orr.w	r4, r9, #16
1001720c:	f014 0220 	ands.w	r2, r4, #32
10017210:	f000 8355 	beq.w	100178be <_svfprintf_r+0xd1e>
10017214:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017216:	3307      	adds	r3, #7
10017218:	f023 0307 	bic.w	r3, r3, #7
1001721c:	4619      	mov	r1, r3
1001721e:	685a      	ldr	r2, [r3, #4]
10017220:	f851 3b08 	ldr.w	r3, [r1], #8
10017224:	910d      	str	r1, [sp, #52]	@ 0x34
10017226:	2101      	movs	r1, #1
10017228:	e792      	b.n	10017150 <_svfprintf_r+0x5b0>
1001722a:	7823      	ldrb	r3, [r4, #0]
1001722c:	f049 0908 	orr.w	r9, r9, #8
10017230:	e50d      	b.n	10016c4e <_svfprintf_r+0xae>
10017232:	7823      	ldrb	r3, [r4, #0]
10017234:	f049 0901 	orr.w	r9, r9, #1
10017238:	e509      	b.n	10016c4e <_svfprintf_r+0xae>
1001723a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001723e:	7823      	ldrb	r3, [r4, #0]
10017240:	2a00      	cmp	r2, #0
10017242:	f47f ad04 	bne.w	10016c4e <_svfprintf_r+0xae>
10017246:	2220      	movs	r2, #32
10017248:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001724c:	e4ff      	b.n	10016c4e <_svfprintf_r+0xae>
1001724e:	7823      	ldrb	r3, [r4, #0]
10017250:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
10017254:	e4fb      	b.n	10016c4e <_svfprintf_r+0xae>
10017256:	4621      	mov	r1, r4
10017258:	f811 3b01 	ldrb.w	r3, [r1], #1
1001725c:	2b2a      	cmp	r3, #42	@ 0x2a
1001725e:	f001 8229 	beq.w	100186b4 <_svfprintf_r+0x1b14>
10017262:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10017266:	2a09      	cmp	r2, #9
10017268:	460c      	mov	r4, r1
1001726a:	bf98      	it	ls
1001726c:	2100      	movls	r1, #0
1001726e:	f201 8130 	bhi.w	100184d2 <_svfprintf_r+0x1932>
10017272:	f814 3b01 	ldrb.w	r3, [r4], #1
10017276:	eb01 0181 	add.w	r1, r1, r1, lsl #2
1001727a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
1001727e:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
10017282:	2a09      	cmp	r2, #9
10017284:	d9f5      	bls.n	10017272 <_svfprintf_r+0x6d2>
10017286:	9108      	str	r1, [sp, #32]
10017288:	e4e2      	b.n	10016c50 <_svfprintf_r+0xb0>
1001728a:	f049 0910 	orr.w	r9, r9, #16
1001728e:	f019 0f20 	tst.w	r9, #32
10017292:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017296:	f47f af14 	bne.w	100170c2 <_svfprintf_r+0x522>
1001729a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001729c:	f019 0f10 	tst.w	r9, #16
100172a0:	f852 3b04 	ldr.w	r3, [r2], #4
100172a4:	920d      	str	r2, [sp, #52]	@ 0x34
100172a6:	f040 8360 	bne.w	1001796a <_svfprintf_r+0xdca>
100172aa:	f019 0f40 	tst.w	r9, #64	@ 0x40
100172ae:	f000 8358 	beq.w	10017962 <_svfprintf_r+0xdc2>
100172b2:	f343 32c0 	sbfx	r2, r3, #15, #1
100172b6:	4611      	mov	r1, r2
100172b8:	b21b      	sxth	r3, r3
100172ba:	e70c      	b.n	100170d6 <_svfprintf_r+0x536>
100172bc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100172be:	2b65      	cmp	r3, #101	@ 0x65
100172c0:	f340 8166 	ble.w	10017590 <_svfprintf_r+0x9f0>
100172c4:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100172c8:	2200      	movs	r2, #0
100172ca:	2300      	movs	r3, #0
100172cc:	f002 fdc6 	bl	10019e5c <__aeabi_dcmpeq>
100172d0:	2800      	cmp	r0, #0
100172d2:	f000 8211 	beq.w	100176f8 <_svfprintf_r+0xb58>
100172d6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100172d8:	4a70      	ldr	r2, [pc, #448]	@ (1001749c <_svfprintf_r+0x8fc>)
100172da:	f8c8 2000 	str.w	r2, [r8]
100172de:	3301      	adds	r3, #1
100172e0:	3401      	adds	r4, #1
100172e2:	2201      	movs	r2, #1
100172e4:	2b07      	cmp	r3, #7
100172e6:	9434      	str	r4, [sp, #208]	@ 0xd0
100172e8:	9333      	str	r3, [sp, #204]	@ 0xcc
100172ea:	f8c8 2004 	str.w	r2, [r8, #4]
100172ee:	f300 856b 	bgt.w	10017dc8 <_svfprintf_r+0x1228>
100172f2:	f108 0808 	add.w	r8, r8, #8
100172f6:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
100172f8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
100172fa:	4293      	cmp	r3, r2
100172fc:	f280 8326 	bge.w	1001794c <_svfprintf_r+0xdac>
10017300:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10017302:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10017304:	441c      	add	r4, r3
10017306:	e9c8 2300 	strd	r2, r3, [r8]
1001730a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001730c:	9434      	str	r4, [sp, #208]	@ 0xd0
1001730e:	3301      	adds	r3, #1
10017310:	2b07      	cmp	r3, #7
10017312:	9333      	str	r3, [sp, #204]	@ 0xcc
10017314:	f300 83e4 	bgt.w	10017ae0 <_svfprintf_r+0xf40>
10017318:	f108 0808 	add.w	r8, r8, #8
1001731c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001731e:	1e5d      	subs	r5, r3, #1
10017320:	2d00      	cmp	r5, #0
10017322:	f77f adc0 	ble.w	10016ea6 <_svfprintf_r+0x306>
10017326:	2d10      	cmp	r5, #16
10017328:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001732a:	f340 85ad 	ble.w	10017e88 <_svfprintf_r+0x12e8>
1001732e:	4f5c      	ldr	r7, [pc, #368]	@ (100174a0 <_svfprintf_r+0x900>)
10017330:	f8dd b01c 	ldr.w	fp, [sp, #28]
10017334:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10017338:	9715      	str	r7, [sp, #84]	@ 0x54
1001733a:	2610      	movs	r6, #16
1001733c:	e005      	b.n	1001734a <_svfprintf_r+0x7aa>
1001733e:	f108 0808 	add.w	r8, r8, #8
10017342:	3d10      	subs	r5, #16
10017344:	2d10      	cmp	r5, #16
10017346:	f340 85a1 	ble.w	10017e8c <_svfprintf_r+0x12ec>
1001734a:	3301      	adds	r3, #1
1001734c:	3410      	adds	r4, #16
1001734e:	2b07      	cmp	r3, #7
10017350:	e9c8 7600 	strd	r7, r6, [r8]
10017354:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017358:	ddf1      	ble.n	1001733e <_svfprintf_r+0x79e>
1001735a:	aa32      	add	r2, sp, #200	@ 0xc8
1001735c:	4651      	mov	r1, sl
1001735e:	4658      	mov	r0, fp
10017360:	f002 f876 	bl	10019450 <__ssprint_r>
10017364:	2800      	cmp	r0, #0
10017366:	f040 82c0 	bne.w	100178ea <_svfprintf_r+0xd4a>
1001736a:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001736e:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017372:	e7e6      	b.n	10017342 <_svfprintf_r+0x7a2>
10017374:	464c      	mov	r4, r9
10017376:	2901      	cmp	r1, #1
10017378:	f000 8151 	beq.w	1001761e <_svfprintf_r+0xa7e>
1001737c:	2902      	cmp	r1, #2
1001737e:	ad5e      	add	r5, sp, #376	@ 0x178
10017380:	d11e      	bne.n	100173c0 <_svfprintf_r+0x820>
10017382:	9819      	ldr	r0, [sp, #100]	@ 0x64
10017384:	f003 010f 	and.w	r1, r3, #15
10017388:	091b      	lsrs	r3, r3, #4
1001738a:	5c41      	ldrb	r1, [r0, r1]
1001738c:	f805 1d01 	strb.w	r1, [r5, #-1]!
10017390:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
10017394:	0912      	lsrs	r2, r2, #4
10017396:	ea53 0102 	orrs.w	r1, r3, r2
1001739a:	d1f3      	bne.n	10017384 <_svfprintf_r+0x7e4>
1001739c:	ab5e      	add	r3, sp, #376	@ 0x178
1001739e:	46a1      	mov	r9, r4
100173a0:	eba3 0b05 	sub.w	fp, r3, r5
100173a4:	9908      	ldr	r1, [sp, #32]
100173a6:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100173aa:	4559      	cmp	r1, fp
100173ac:	f04f 0300 	mov.w	r3, #0
100173b0:	bfb8      	it	lt
100173b2:	4659      	movlt	r1, fp
100173b4:	930c      	str	r3, [sp, #48]	@ 0x30
100173b6:	9106      	str	r1, [sp, #24]
100173b8:	9314      	str	r3, [sp, #80]	@ 0x50
100173ba:	9310      	str	r3, [sp, #64]	@ 0x40
100173bc:	9312      	str	r3, [sp, #72]	@ 0x48
100173be:	e5d6      	b.n	10016f6e <_svfprintf_r+0x3ce>
100173c0:	f003 0107 	and.w	r1, r3, #7
100173c4:	08db      	lsrs	r3, r3, #3
100173c6:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
100173ca:	08d2      	lsrs	r2, r2, #3
100173cc:	3130      	adds	r1, #48	@ 0x30
100173ce:	ea53 0602 	orrs.w	r6, r3, r2
100173d2:	4628      	mov	r0, r5
100173d4:	f805 1d01 	strb.w	r1, [r5, #-1]!
100173d8:	d1f2      	bne.n	100173c0 <_svfprintf_r+0x820>
100173da:	07e6      	lsls	r6, r4, #31
100173dc:	d5de      	bpl.n	1001739c <_svfprintf_r+0x7fc>
100173de:	2930      	cmp	r1, #48	@ 0x30
100173e0:	d0dc      	beq.n	1001739c <_svfprintf_r+0x7fc>
100173e2:	2330      	movs	r3, #48	@ 0x30
100173e4:	3802      	subs	r0, #2
100173e6:	f805 3c01 	strb.w	r3, [r5, #-1]
100173ea:	ab5e      	add	r3, sp, #376	@ 0x178
100173ec:	46a1      	mov	r9, r4
100173ee:	eba3 0b00 	sub.w	fp, r3, r0
100173f2:	4605      	mov	r5, r0
100173f4:	e7d6      	b.n	100173a4 <_svfprintf_r+0x804>
100173f6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100173f8:	9a06      	ldr	r2, [sp, #24]
100173fa:	1a9e      	subs	r6, r3, r2
100173fc:	2e00      	cmp	r6, #0
100173fe:	f77f ad3a 	ble.w	10016e76 <_svfprintf_r+0x2d6>
10017402:	2e10      	cmp	r6, #16
10017404:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017406:	f341 809f 	ble.w	10018548 <_svfprintf_r+0x19a8>
1001740a:	4825      	ldr	r0, [pc, #148]	@ (100174a0 <_svfprintf_r+0x900>)
1001740c:	f8dd a01c 	ldr.w	sl, [sp, #28]
10017410:	9015      	str	r0, [sp, #84]	@ 0x54
10017412:	4621      	mov	r1, r4
10017414:	2710      	movs	r7, #16
10017416:	461a      	mov	r2, r3
10017418:	4604      	mov	r4, r0
1001741a:	e004      	b.n	10017426 <_svfprintf_r+0x886>
1001741c:	3e10      	subs	r6, #16
1001741e:	2e10      	cmp	r6, #16
10017420:	f108 0808 	add.w	r8, r8, #8
10017424:	dd16      	ble.n	10017454 <_svfprintf_r+0x8b4>
10017426:	3201      	adds	r2, #1
10017428:	3110      	adds	r1, #16
1001742a:	2a07      	cmp	r2, #7
1001742c:	e9c8 4700 	strd	r4, r7, [r8]
10017430:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10017434:	ddf2      	ble.n	1001741c <_svfprintf_r+0x87c>
10017436:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017438:	aa32      	add	r2, sp, #200	@ 0xc8
1001743a:	4650      	mov	r0, sl
1001743c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017440:	f002 f806 	bl	10019450 <__ssprint_r>
10017444:	2800      	cmp	r0, #0
10017446:	f040 84b2 	bne.w	10017dae <_svfprintf_r+0x120e>
1001744a:	3e10      	subs	r6, #16
1001744c:	2e10      	cmp	r6, #16
1001744e:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10017452:	dce8      	bgt.n	10017426 <_svfprintf_r+0x886>
10017454:	460c      	mov	r4, r1
10017456:	4613      	mov	r3, r2
10017458:	3301      	adds	r3, #1
1001745a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001745c:	f8c8 2000 	str.w	r2, [r8]
10017460:	4434      	add	r4, r6
10017462:	2b07      	cmp	r3, #7
10017464:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017468:	f8c8 6004 	str.w	r6, [r8, #4]
1001746c:	f300 851c 	bgt.w	10017ea8 <_svfprintf_r+0x1308>
10017470:	9b08      	ldr	r3, [sp, #32]
10017472:	eba3 060b 	sub.w	r6, r3, fp
10017476:	2e00      	cmp	r6, #0
10017478:	f108 0808 	add.w	r8, r8, #8
1001747c:	f77f ad01 	ble.w	10016e82 <_svfprintf_r+0x2e2>
10017480:	4a07      	ldr	r2, [pc, #28]	@ (100174a0 <_svfprintf_r+0x900>)
10017482:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017484:	9215      	str	r2, [sp, #84]	@ 0x54
10017486:	2e10      	cmp	r6, #16
10017488:	dd2a      	ble.n	100174e0 <_svfprintf_r+0x940>
1001748a:	4622      	mov	r2, r4
1001748c:	9f07      	ldr	r7, [sp, #28]
1001748e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10017490:	f04f 0a10 	mov.w	sl, #16
10017494:	e00b      	b.n	100174ae <_svfprintf_r+0x90e>
10017496:	bf00      	nop
10017498:	1001c52c 	.word	0x1001c52c
1001749c:	1001c55c 	.word	0x1001c55c
100174a0:	1001c774 	.word	0x1001c774
100174a4:	3e10      	subs	r6, #16
100174a6:	2e10      	cmp	r6, #16
100174a8:	f108 0808 	add.w	r8, r8, #8
100174ac:	dd17      	ble.n	100174de <_svfprintf_r+0x93e>
100174ae:	3301      	adds	r3, #1
100174b0:	498e      	ldr	r1, [pc, #568]	@ (100176ec <_svfprintf_r+0xb4c>)
100174b2:	3210      	adds	r2, #16
100174b4:	2b07      	cmp	r3, #7
100174b6:	e9c8 1a00 	strd	r1, sl, [r8]
100174ba:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
100174be:	ddf1      	ble.n	100174a4 <_svfprintf_r+0x904>
100174c0:	aa32      	add	r2, sp, #200	@ 0xc8
100174c2:	4621      	mov	r1, r4
100174c4:	4638      	mov	r0, r7
100174c6:	f001 ffc3 	bl	10019450 <__ssprint_r>
100174ca:	2800      	cmp	r0, #0
100174cc:	f040 820c 	bne.w	100178e8 <_svfprintf_r+0xd48>
100174d0:	3e10      	subs	r6, #16
100174d2:	2e10      	cmp	r6, #16
100174d4:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
100174d8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100174dc:	dce7      	bgt.n	100174ae <_svfprintf_r+0x90e>
100174de:	4614      	mov	r4, r2
100174e0:	3301      	adds	r3, #1
100174e2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100174e4:	f8c8 2000 	str.w	r2, [r8]
100174e8:	4434      	add	r4, r6
100174ea:	2b07      	cmp	r3, #7
100174ec:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100174f0:	f8c8 6004 	str.w	r6, [r8, #4]
100174f4:	f300 81c7 	bgt.w	10017886 <_svfprintf_r+0xce6>
100174f8:	f108 0808 	add.w	r8, r8, #8
100174fc:	e4c1      	b.n	10016e82 <_svfprintf_r+0x2e2>
100174fe:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017500:	9807      	ldr	r0, [sp, #28]
10017502:	aa32      	add	r2, sp, #200	@ 0xc8
10017504:	f001 ffa4 	bl	10019450 <__ssprint_r>
10017508:	2800      	cmp	r0, #0
1001750a:	f43f ace0 	beq.w	10016ece <_svfprintf_r+0x32e>
1001750e:	f8dd b01c 	ldr.w	fp, [sp, #28]
10017512:	e1ea      	b.n	100178ea <_svfprintf_r+0xd4a>
10017514:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017516:	4976      	ldr	r1, [pc, #472]	@ (100176f0 <_svfprintf_r+0xb50>)
10017518:	f8c8 1000 	str.w	r1, [r8]
1001751c:	3301      	adds	r3, #1
1001751e:	3401      	adds	r4, #1
10017520:	2101      	movs	r1, #1
10017522:	2b07      	cmp	r3, #7
10017524:	9434      	str	r4, [sp, #208]	@ 0xd0
10017526:	9333      	str	r3, [sp, #204]	@ 0xcc
10017528:	f8c8 1004 	str.w	r1, [r8, #4]
1001752c:	f300 8573 	bgt.w	10018016 <_svfprintf_r+0x1476>
10017530:	f108 0808 	add.w	r8, r8, #8
10017534:	2a00      	cmp	r2, #0
10017536:	f040 84e5 	bne.w	10017f04 <_svfprintf_r+0x1364>
1001753a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001753c:	f009 0301 	and.w	r3, r9, #1
10017540:	4313      	orrs	r3, r2
10017542:	f43f acb0 	beq.w	10016ea6 <_svfprintf_r+0x306>
10017546:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10017548:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001754a:	441c      	add	r4, r3
1001754c:	e9c8 2300 	strd	r2, r3, [r8]
10017550:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017552:	9434      	str	r4, [sp, #208]	@ 0xd0
10017554:	3301      	adds	r3, #1
10017556:	2b07      	cmp	r3, #7
10017558:	9333      	str	r3, [sp, #204]	@ 0xcc
1001755a:	f300 8643 	bgt.w	100181e4 <_svfprintf_r+0x1644>
1001755e:	f108 0808 	add.w	r8, r8, #8
10017562:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10017564:	f8c8 5000 	str.w	r5, [r8]
10017568:	3301      	adds	r3, #1
1001756a:	4414      	add	r4, r2
1001756c:	2b07      	cmp	r3, #7
1001756e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017572:	f8c8 2004 	str.w	r2, [r8, #4]
10017576:	f77f ac94 	ble.w	10016ea2 <_svfprintf_r+0x302>
1001757a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001757c:	9807      	ldr	r0, [sp, #28]
1001757e:	aa32      	add	r2, sp, #200	@ 0xc8
10017580:	f001 ff66 	bl	10019450 <__ssprint_r>
10017584:	2800      	cmp	r0, #0
10017586:	d1c2      	bne.n	1001750e <_svfprintf_r+0x96e>
10017588:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001758a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001758e:	e48a      	b.n	10016ea6 <_svfprintf_r+0x306>
10017590:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10017592:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
10017594:	2b01      	cmp	r3, #1
10017596:	f104 0401 	add.w	r4, r4, #1
1001759a:	f106 0601 	add.w	r6, r6, #1
1001759e:	f108 0708 	add.w	r7, r8, #8
100175a2:	f340 8129 	ble.w	100177f8 <_svfprintf_r+0xc58>
100175a6:	2301      	movs	r3, #1
100175a8:	2e07      	cmp	r6, #7
100175aa:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100175ae:	f8c8 5000 	str.w	r5, [r8]
100175b2:	f8c8 3004 	str.w	r3, [r8, #4]
100175b6:	f300 81b1 	bgt.w	1001791c <_svfprintf_r+0xd7c>
100175ba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100175bc:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
100175be:	3601      	adds	r6, #1
100175c0:	441c      	add	r4, r3
100175c2:	2e07      	cmp	r6, #7
100175c4:	e9c7 2300 	strd	r2, r3, [r7]
100175c8:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100175cc:	f300 81b2 	bgt.w	10017934 <_svfprintf_r+0xd94>
100175d0:	3708      	adds	r7, #8
100175d2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100175d4:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100175d8:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
100175dc:	2200      	movs	r2, #0
100175de:	2300      	movs	r3, #0
100175e0:	f002 fc3c 	bl	10019e5c <__aeabi_dcmpeq>
100175e4:	2800      	cmp	r0, #0
100175e6:	f040 8121 	bne.w	1001782c <_svfprintf_r+0xc8c>
100175ea:	3601      	adds	r6, #1
100175ec:	3501      	adds	r5, #1
100175ee:	4444      	add	r4, r8
100175f0:	2e07      	cmp	r6, #7
100175f2:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100175f6:	603d      	str	r5, [r7, #0]
100175f8:	f8c7 8004 	str.w	r8, [r7, #4]
100175fc:	f300 810a 	bgt.w	10017814 <_svfprintf_r+0xc74>
10017600:	3708      	adds	r7, #8
10017602:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10017604:	607b      	str	r3, [r7, #4]
10017606:	3601      	adds	r6, #1
10017608:	441c      	add	r4, r3
1001760a:	2e07      	cmp	r6, #7
1001760c:	ab2c      	add	r3, sp, #176	@ 0xb0
1001760e:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017612:	603b      	str	r3, [r7, #0]
10017614:	dcb1      	bgt.n	1001757a <_svfprintf_r+0x9da>
10017616:	f107 0808 	add.w	r8, r7, #8
1001761a:	e444      	b.n	10016ea6 <_svfprintf_r+0x306>
1001761c:	464c      	mov	r4, r9
1001761e:	2b0a      	cmp	r3, #10
10017620:	f172 0100 	sbcs.w	r1, r2, #0
10017624:	f080 8353 	bcs.w	10017cce <_svfprintf_r+0x112e>
10017628:	3330      	adds	r3, #48	@ 0x30
1001762a:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001762e:	46a1      	mov	r9, r4
10017630:	f04f 0b01 	mov.w	fp, #1
10017634:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10017638:	e6b4      	b.n	100173a4 <_svfprintf_r+0x804>
1001763a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001763c:	9807      	ldr	r0, [sp, #28]
1001763e:	aa32      	add	r2, sp, #200	@ 0xc8
10017640:	f001 ff06 	bl	10019450 <__ssprint_r>
10017644:	2800      	cmp	r0, #0
10017646:	f47f af62 	bne.w	1001750e <_svfprintf_r+0x96e>
1001764a:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001764c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017650:	e40e      	b.n	10016e70 <_svfprintf_r+0x2d0>
10017652:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017654:	9807      	ldr	r0, [sp, #28]
10017656:	9315      	str	r3, [sp, #84]	@ 0x54
10017658:	aa32      	add	r2, sp, #200	@ 0xc8
1001765a:	f001 fef9 	bl	10019450 <__ssprint_r>
1001765e:	2800      	cmp	r0, #0
10017660:	f47f af55 	bne.w	1001750e <_svfprintf_r+0x96e>
10017664:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017666:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10017668:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001766c:	f7ff bbee 	b.w	10016e4c <_svfprintf_r+0x2ac>
10017670:	2d10      	cmp	r5, #16
10017672:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017674:	f340 8731 	ble.w	100184da <_svfprintf_r+0x193a>
10017678:	4f1e      	ldr	r7, [pc, #120]	@ (100176f4 <_svfprintf_r+0xb54>)
1001767a:	f8dd 901c 	ldr.w	r9, [sp, #28]
1001767e:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
10017682:	9715      	str	r7, [sp, #84]	@ 0x54
10017684:	2610      	movs	r6, #16
10017686:	e004      	b.n	10017692 <_svfprintf_r+0xaf2>
10017688:	3d10      	subs	r5, #16
1001768a:	2d10      	cmp	r5, #16
1001768c:	f108 0808 	add.w	r8, r8, #8
10017690:	dd16      	ble.n	100176c0 <_svfprintf_r+0xb20>
10017692:	3301      	adds	r3, #1
10017694:	3410      	adds	r4, #16
10017696:	2b07      	cmp	r3, #7
10017698:	e9c8 7600 	strd	r7, r6, [r8]
1001769c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100176a0:	ddf2      	ble.n	10017688 <_svfprintf_r+0xae8>
100176a2:	aa32      	add	r2, sp, #200	@ 0xc8
100176a4:	4651      	mov	r1, sl
100176a6:	4648      	mov	r0, r9
100176a8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100176ac:	f001 fed0 	bl	10019450 <__ssprint_r>
100176b0:	2800      	cmp	r0, #0
100176b2:	f040 83e7 	bne.w	10017e84 <_svfprintf_r+0x12e4>
100176b6:	3d10      	subs	r5, #16
100176b8:	2d10      	cmp	r5, #16
100176ba:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100176be:	dce8      	bgt.n	10017692 <_svfprintf_r+0xaf2>
100176c0:	3301      	adds	r3, #1
100176c2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100176c4:	442c      	add	r4, r5
100176c6:	2b07      	cmp	r3, #7
100176c8:	e9c8 2500 	strd	r2, r5, [r8]
100176cc:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100176d0:	f77f abf2 	ble.w	10016eb8 <_svfprintf_r+0x318>
100176d4:	9909      	ldr	r1, [sp, #36]	@ 0x24
100176d6:	9807      	ldr	r0, [sp, #28]
100176d8:	aa32      	add	r2, sp, #200	@ 0xc8
100176da:	f001 feb9 	bl	10019450 <__ssprint_r>
100176de:	2800      	cmp	r0, #0
100176e0:	f47f af15 	bne.w	1001750e <_svfprintf_r+0x96e>
100176e4:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100176e6:	f7ff bbe7 	b.w	10016eb8 <_svfprintf_r+0x318>
100176ea:	bf00      	nop
100176ec:	1001c774 	.word	0x1001c774
100176f0:	1001c55c 	.word	0x1001c55c
100176f4:	1001c784 	.word	0x1001c784
100176f8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100176fa:	2a00      	cmp	r2, #0
100176fc:	f77f af0a 	ble.w	10017514 <_svfprintf_r+0x974>
10017700:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10017704:	429f      	cmp	r7, r3
10017706:	bfa8      	it	ge
10017708:	461f      	movge	r7, r3
1001770a:	2f00      	cmp	r7, #0
1001770c:	eb05 0b03 	add.w	fp, r5, r3
10017710:	dd0b      	ble.n	1001772a <_svfprintf_r+0xb8a>
10017712:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017714:	3301      	adds	r3, #1
10017716:	443c      	add	r4, r7
10017718:	2b07      	cmp	r3, #7
1001771a:	e9c8 5700 	strd	r5, r7, [r8]
1001771e:	9434      	str	r4, [sp, #208]	@ 0xd0
10017720:	9333      	str	r3, [sp, #204]	@ 0xcc
10017722:	f300 8640 	bgt.w	100183a6 <_svfprintf_r+0x1806>
10017726:	f108 0808 	add.w	r8, r8, #8
1001772a:	9e12      	ldr	r6, [sp, #72]	@ 0x48
1001772c:	2f00      	cmp	r7, #0
1001772e:	bfa8      	it	ge
10017730:	1bf6      	subge	r6, r6, r7
10017732:	2e00      	cmp	r6, #0
10017734:	f300 8200 	bgt.w	10017b38 <_svfprintf_r+0xf98>
10017738:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001773a:	f419 6f80 	tst.w	r9, #1024	@ 0x400
1001773e:	442b      	add	r3, r5
10017740:	469a      	mov	sl, r3
10017742:	f040 8221 	bne.w	10017b88 <_svfprintf_r+0xfe8>
10017746:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10017748:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001774a:	429d      	cmp	r5, r3
1001774c:	db03      	blt.n	10017756 <_svfprintf_r+0xbb6>
1001774e:	f019 0f01 	tst.w	r9, #1
10017752:	f000 846e 	beq.w	10018032 <_svfprintf_r+0x1492>
10017756:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10017758:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
1001775a:	441c      	add	r4, r3
1001775c:	e9c8 2300 	strd	r2, r3, [r8]
10017760:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017762:	9434      	str	r4, [sp, #208]	@ 0xd0
10017764:	3301      	adds	r3, #1
10017766:	2b07      	cmp	r3, #7
10017768:	9333      	str	r3, [sp, #204]	@ 0xcc
1001776a:	f300 8673 	bgt.w	10018454 <_svfprintf_r+0x18b4>
1001776e:	f108 0808 	add.w	r8, r8, #8
10017772:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10017774:	ebab 060a 	sub.w	r6, fp, sl
10017778:	1b5d      	subs	r5, r3, r5
1001777a:	42ae      	cmp	r6, r5
1001777c:	bfa8      	it	ge
1001777e:	462e      	movge	r6, r5
10017780:	2e00      	cmp	r6, #0
10017782:	dd0d      	ble.n	100177a0 <_svfprintf_r+0xc00>
10017784:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017786:	f8c8 a000 	str.w	sl, [r8]
1001778a:	3301      	adds	r3, #1
1001778c:	4434      	add	r4, r6
1001778e:	2b07      	cmp	r3, #7
10017790:	f8c8 6004 	str.w	r6, [r8, #4]
10017794:	9434      	str	r4, [sp, #208]	@ 0xd0
10017796:	9333      	str	r3, [sp, #204]	@ 0xcc
10017798:	f300 866e 	bgt.w	10018478 <_svfprintf_r+0x18d8>
1001779c:	f108 0808 	add.w	r8, r8, #8
100177a0:	2e00      	cmp	r6, #0
100177a2:	bfa8      	it	ge
100177a4:	1bad      	subge	r5, r5, r6
100177a6:	2d00      	cmp	r5, #0
100177a8:	f77f ab7d 	ble.w	10016ea6 <_svfprintf_r+0x306>
100177ac:	2d10      	cmp	r5, #16
100177ae:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100177b0:	f340 836a 	ble.w	10017e88 <_svfprintf_r+0x12e8>
100177b4:	4fad      	ldr	r7, [pc, #692]	@ (10017a6c <_svfprintf_r+0xecc>)
100177b6:	f8dd b01c 	ldr.w	fp, [sp, #28]
100177ba:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
100177be:	9715      	str	r7, [sp, #84]	@ 0x54
100177c0:	2610      	movs	r6, #16
100177c2:	e005      	b.n	100177d0 <_svfprintf_r+0xc30>
100177c4:	f108 0808 	add.w	r8, r8, #8
100177c8:	3d10      	subs	r5, #16
100177ca:	2d10      	cmp	r5, #16
100177cc:	f340 835e 	ble.w	10017e8c <_svfprintf_r+0x12ec>
100177d0:	3301      	adds	r3, #1
100177d2:	3410      	adds	r4, #16
100177d4:	2b07      	cmp	r3, #7
100177d6:	e9c8 7600 	strd	r7, r6, [r8]
100177da:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100177de:	ddf1      	ble.n	100177c4 <_svfprintf_r+0xc24>
100177e0:	aa32      	add	r2, sp, #200	@ 0xc8
100177e2:	4651      	mov	r1, sl
100177e4:	4658      	mov	r0, fp
100177e6:	f001 fe33 	bl	10019450 <__ssprint_r>
100177ea:	2800      	cmp	r0, #0
100177ec:	d17d      	bne.n	100178ea <_svfprintf_r+0xd4a>
100177ee:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100177f2:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100177f6:	e7e7      	b.n	100177c8 <_svfprintf_r+0xc28>
100177f8:	f019 0f01 	tst.w	r9, #1
100177fc:	f47f aed3 	bne.w	100175a6 <_svfprintf_r+0xa06>
10017800:	2301      	movs	r3, #1
10017802:	2e07      	cmp	r6, #7
10017804:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017808:	f8c8 5000 	str.w	r5, [r8]
1001780c:	f8c8 3004 	str.w	r3, [r8, #4]
10017810:	f77f aef7 	ble.w	10017602 <_svfprintf_r+0xa62>
10017814:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017816:	9807      	ldr	r0, [sp, #28]
10017818:	aa32      	add	r2, sp, #200	@ 0xc8
1001781a:	f001 fe19 	bl	10019450 <__ssprint_r>
1001781e:	2800      	cmp	r0, #0
10017820:	f47f ae75 	bne.w	1001750e <_svfprintf_r+0x96e>
10017824:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017828:	af35      	add	r7, sp, #212	@ 0xd4
1001782a:	e6ea      	b.n	10017602 <_svfprintf_r+0xa62>
1001782c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001782e:	2b01      	cmp	r3, #1
10017830:	f77f aee7 	ble.w	10017602 <_svfprintf_r+0xa62>
10017834:	2b11      	cmp	r3, #17
10017836:	4b8d      	ldr	r3, [pc, #564]	@ (10017a6c <_svfprintf_r+0xecc>)
10017838:	9315      	str	r3, [sp, #84]	@ 0x54
1001783a:	f340 8357 	ble.w	10017eec <_svfprintf_r+0x134c>
1001783e:	f8cd 9020 	str.w	r9, [sp, #32]
10017842:	f8dd a01c 	ldr.w	sl, [sp, #28]
10017846:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
1001784a:	2510      	movs	r5, #16
1001784c:	4699      	mov	r9, r3
1001784e:	e006      	b.n	1001785e <_svfprintf_r+0xcbe>
10017850:	3708      	adds	r7, #8
10017852:	f1a8 0810 	sub.w	r8, r8, #16
10017856:	f1b8 0f10 	cmp.w	r8, #16
1001785a:	f340 8345 	ble.w	10017ee8 <_svfprintf_r+0x1348>
1001785e:	3601      	adds	r6, #1
10017860:	3410      	adds	r4, #16
10017862:	2e07      	cmp	r6, #7
10017864:	e9c7 9500 	strd	r9, r5, [r7]
10017868:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001786c:	ddf0      	ble.n	10017850 <_svfprintf_r+0xcb0>
1001786e:	aa32      	add	r2, sp, #200	@ 0xc8
10017870:	4659      	mov	r1, fp
10017872:	4650      	mov	r0, sl
10017874:	f001 fdec 	bl	10019450 <__ssprint_r>
10017878:	2800      	cmp	r0, #0
1001787a:	f040 8298 	bne.w	10017dae <_svfprintf_r+0x120e>
1001787e:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017882:	af35      	add	r7, sp, #212	@ 0xd4
10017884:	e7e5      	b.n	10017852 <_svfprintf_r+0xcb2>
10017886:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017888:	9807      	ldr	r0, [sp, #28]
1001788a:	aa32      	add	r2, sp, #200	@ 0xc8
1001788c:	f001 fde0 	bl	10019450 <__ssprint_r>
10017890:	2800      	cmp	r0, #0
10017892:	f47f ae3c 	bne.w	1001750e <_svfprintf_r+0x96e>
10017896:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017898:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001789c:	f7ff baf1 	b.w	10016e82 <_svfprintf_r+0x2e2>
100178a0:	990d      	ldr	r1, [sp, #52]	@ 0x34
100178a2:	f851 3b04 	ldr.w	r3, [r1], #4
100178a6:	910d      	str	r1, [sp, #52]	@ 0x34
100178a8:	f019 0110 	ands.w	r1, r9, #16
100178ac:	f47f ac4d 	bne.w	1001714a <_svfprintf_r+0x5aa>
100178b0:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
100178b4:	f000 8362 	beq.w	10017f7c <_svfprintf_r+0x13dc>
100178b8:	b29b      	uxth	r3, r3
100178ba:	460a      	mov	r2, r1
100178bc:	e445      	b.n	1001714a <_svfprintf_r+0x5aa>
100178be:	990d      	ldr	r1, [sp, #52]	@ 0x34
100178c0:	f851 3b04 	ldr.w	r3, [r1], #4
100178c4:	910d      	str	r1, [sp, #52]	@ 0x34
100178c6:	f014 0110 	ands.w	r1, r4, #16
100178ca:	d10b      	bne.n	100178e4 <_svfprintf_r+0xd44>
100178cc:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
100178d0:	d003      	beq.n	100178da <_svfprintf_r+0xd3a>
100178d2:	460a      	mov	r2, r1
100178d4:	b29b      	uxth	r3, r3
100178d6:	2101      	movs	r1, #1
100178d8:	e43a      	b.n	10017150 <_svfprintf_r+0x5b0>
100178da:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
100178de:	bf1c      	itt	ne
100178e0:	b2db      	uxtbne	r3, r3
100178e2:	4602      	movne	r2, r0
100178e4:	2101      	movs	r1, #1
100178e6:	e433      	b.n	10017150 <_svfprintf_r+0x5b0>
100178e8:	46bb      	mov	fp, r7
100178ea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100178ec:	2b00      	cmp	r3, #0
100178ee:	f43f aa5c 	beq.w	10016daa <_svfprintf_r+0x20a>
100178f2:	990c      	ldr	r1, [sp, #48]	@ 0x30
100178f4:	4658      	mov	r0, fp
100178f6:	f7ff f83d 	bl	10016974 <_free_r>
100178fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100178fc:	899b      	ldrh	r3, [r3, #12]
100178fe:	f003 0340 	and.w	r3, r3, #64	@ 0x40
10017902:	f7ff ba56 	b.w	10016db2 <_svfprintf_r+0x212>
10017906:	f8dd b020 	ldr.w	fp, [sp, #32]
1001790a:	ad5e      	add	r5, sp, #376	@ 0x178
1001790c:	e54a      	b.n	100173a4 <_svfprintf_r+0x804>
1001790e:	425b      	negs	r3, r3
10017910:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
10017914:	464c      	mov	r4, r9
10017916:	202d      	movs	r0, #45	@ 0x2d
10017918:	2101      	movs	r1, #1
1001791a:	e41a      	b.n	10017152 <_svfprintf_r+0x5b2>
1001791c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001791e:	9807      	ldr	r0, [sp, #28]
10017920:	aa32      	add	r2, sp, #200	@ 0xc8
10017922:	f001 fd95 	bl	10019450 <__ssprint_r>
10017926:	2800      	cmp	r0, #0
10017928:	f47f adf1 	bne.w	1001750e <_svfprintf_r+0x96e>
1001792c:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017930:	af35      	add	r7, sp, #212	@ 0xd4
10017932:	e642      	b.n	100175ba <_svfprintf_r+0xa1a>
10017934:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017936:	9807      	ldr	r0, [sp, #28]
10017938:	aa32      	add	r2, sp, #200	@ 0xc8
1001793a:	f001 fd89 	bl	10019450 <__ssprint_r>
1001793e:	2800      	cmp	r0, #0
10017940:	f47f ade5 	bne.w	1001750e <_svfprintf_r+0x96e>
10017944:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10017948:	af35      	add	r7, sp, #212	@ 0xd4
1001794a:	e642      	b.n	100175d2 <_svfprintf_r+0xa32>
1001794c:	f019 0f01 	tst.w	r9, #1
10017950:	f43f aaa9 	beq.w	10016ea6 <_svfprintf_r+0x306>
10017954:	e4d4      	b.n	10017300 <_svfprintf_r+0x760>
10017956:	930d      	str	r3, [sp, #52]	@ 0x34
10017958:	7823      	ldrb	r3, [r4, #0]
1001795a:	f7ff b978 	b.w	10016c4e <_svfprintf_r+0xae>
1001795e:	ad5e      	add	r5, sp, #376	@ 0x178
10017960:	e520      	b.n	100173a4 <_svfprintf_r+0x804>
10017962:	f419 7f00 	tst.w	r9, #512	@ 0x200
10017966:	f040 8373 	bne.w	10018050 <_svfprintf_r+0x14b0>
1001796a:	17da      	asrs	r2, r3, #31
1001796c:	4611      	mov	r1, r2
1001796e:	f7ff bbb2 	b.w	100170d6 <_svfprintf_r+0x536>
10017972:	f019 0f10 	tst.w	r9, #16
10017976:	f040 82b1 	bne.w	10017edc <_svfprintf_r+0x133c>
1001797a:	f019 0f40 	tst.w	r9, #64	@ 0x40
1001797e:	f040 8361 	bne.w	10018044 <_svfprintf_r+0x14a4>
10017982:	f419 7f00 	tst.w	r9, #512	@ 0x200
10017986:	f000 82a9 	beq.w	10017edc <_svfprintf_r+0x133c>
1001798a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001798c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001798e:	681b      	ldr	r3, [r3, #0]
10017990:	701a      	strb	r2, [r3, #0]
10017992:	e40f      	b.n	100171b4 <_svfprintf_r+0x614>
10017994:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
10017996:	7823      	ldrb	r3, [r4, #0]
10017998:	2a00      	cmp	r2, #0
1001799a:	f43f a958 	beq.w	10016c4e <_svfprintf_r+0xae>
1001799e:	7812      	ldrb	r2, [r2, #0]
100179a0:	2a00      	cmp	r2, #0
100179a2:	f43f a954 	beq.w	10016c4e <_svfprintf_r+0xae>
100179a6:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
100179aa:	f7ff b950 	b.w	10016c4e <_svfprintf_r+0xae>
100179ae:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100179b2:	4602      	mov	r2, r0
100179b4:	460b      	mov	r3, r1
100179b6:	f002 fa83 	bl	10019ec0 <__aeabi_dcmpun>
100179ba:	2800      	cmp	r0, #0
100179bc:	f040 860d 	bne.w	100185da <_svfprintf_r+0x1a3a>
100179c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100179c2:	2b61      	cmp	r3, #97	@ 0x61
100179c4:	f000 8504 	beq.w	100183d0 <_svfprintf_r+0x1830>
100179c8:	2b41      	cmp	r3, #65	@ 0x41
100179ca:	f000 8580 	beq.w	100184ce <_svfprintf_r+0x192e>
100179ce:	9b08      	ldr	r3, [sp, #32]
100179d0:	3301      	adds	r3, #1
100179d2:	f000 8415 	beq.w	10018200 <_svfprintf_r+0x1660>
100179d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100179d8:	f023 0320 	bic.w	r3, r3, #32
100179dc:	2b47      	cmp	r3, #71	@ 0x47
100179de:	d104      	bne.n	100179ea <_svfprintf_r+0xe4a>
100179e0:	9b08      	ldr	r3, [sp, #32]
100179e2:	2b00      	cmp	r3, #0
100179e4:	bf08      	it	eq
100179e6:	2301      	moveq	r3, #1
100179e8:	9308      	str	r3, [sp, #32]
100179ea:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100179ee:	f449 7280 	orr.w	r2, r9, #256	@ 0x100
100179f2:	2900      	cmp	r1, #0
100179f4:	9215      	str	r2, [sp, #84]	@ 0x54
100179f6:	f8cd 9018 	str.w	r9, [sp, #24]
100179fa:	f04f 0300 	mov.w	r3, #0
100179fe:	f2c0 851f 	blt.w	10018440 <_svfprintf_r+0x18a0>
10017a02:	e9cd 0124 	strd	r0, r1, [sp, #144]	@ 0x90
10017a06:	931f      	str	r3, [sp, #124]	@ 0x7c
10017a08:	930c      	str	r3, [sp, #48]	@ 0x30
10017a0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10017a0c:	3b41      	subs	r3, #65	@ 0x41
10017a0e:	2b25      	cmp	r3, #37	@ 0x25
10017a10:	f200 8326 	bhi.w	10018060 <_svfprintf_r+0x14c0>
10017a14:	e8df f013 	tbh	[pc, r3, lsl #1]
10017a18:	032403ff 	.word	0x032403ff
10017a1c:	03240324 	.word	0x03240324
10017a20:	03fc03f8 	.word	0x03fc03f8
10017a24:	03240324 	.word	0x03240324
10017a28:	03240324 	.word	0x03240324
10017a2c:	03240324 	.word	0x03240324
10017a30:	03240324 	.word	0x03240324
10017a34:	03240324 	.word	0x03240324
10017a38:	03240324 	.word	0x03240324
10017a3c:	03240324 	.word	0x03240324
10017a40:	03240324 	.word	0x03240324
10017a44:	03240324 	.word	0x03240324
10017a48:	03240324 	.word	0x03240324
10017a4c:	03240324 	.word	0x03240324
10017a50:	03240324 	.word	0x03240324
10017a54:	03240324 	.word	0x03240324
10017a58:	03240324 	.word	0x03240324
10017a5c:	03240324 	.word	0x03240324
10017a60:	03fc03f8 	.word	0x03fc03f8
10017a64:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017a68:	f7ff bb62 	b.w	10017130 <_svfprintf_r+0x590>
10017a6c:	1001c774 	.word	0x1001c774
10017a70:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017a74:	464c      	mov	r4, r9
10017a76:	f7ff bbc9 	b.w	1001720c <_svfprintf_r+0x66c>
10017a7a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017a7e:	4bbd      	ldr	r3, [pc, #756]	@ (10017d74 <_svfprintf_r+0x11d4>)
10017a80:	9319      	str	r3, [sp, #100]	@ 0x64
10017a82:	f019 0220 	ands.w	r2, r9, #32
10017a86:	f000 8108 	beq.w	10017c9a <_svfprintf_r+0x10fa>
10017a8a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017a8c:	3307      	adds	r3, #7
10017a8e:	f023 0307 	bic.w	r3, r3, #7
10017a92:	4619      	mov	r1, r3
10017a94:	685a      	ldr	r2, [r3, #4]
10017a96:	f851 3b08 	ldr.w	r3, [r1], #8
10017a9a:	910d      	str	r1, [sp, #52]	@ 0x34
10017a9c:	f019 0f01 	tst.w	r9, #1
10017aa0:	d00a      	beq.n	10017ab8 <_svfprintf_r+0xf18>
10017aa2:	ea53 0102 	orrs.w	r1, r3, r2
10017aa6:	d007      	beq.n	10017ab8 <_svfprintf_r+0xf18>
10017aa8:	990e      	ldr	r1, [sp, #56]	@ 0x38
10017aaa:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
10017aae:	2130      	movs	r1, #48	@ 0x30
10017ab0:	f049 0902 	orr.w	r9, r9, #2
10017ab4:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10017ab8:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10017abc:	2102      	movs	r1, #2
10017abe:	f7ff bb47 	b.w	10017150 <_svfprintf_r+0x5b0>
10017ac2:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10017ac6:	4bac      	ldr	r3, [pc, #688]	@ (10017d78 <_svfprintf_r+0x11d8>)
10017ac8:	9319      	str	r3, [sp, #100]	@ 0x64
10017aca:	e7da      	b.n	10017a82 <_svfprintf_r+0xee2>
10017acc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017ace:	681b      	ldr	r3, [r3, #0]
10017ad0:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
10017ad4:	2301      	movs	r3, #1
10017ad6:	9306      	str	r3, [sp, #24]
10017ad8:	469b      	mov	fp, r3
10017ada:	ad45      	add	r5, sp, #276	@ 0x114
10017adc:	f7ff baaf 	b.w	1001703e <_svfprintf_r+0x49e>
10017ae0:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017ae2:	9807      	ldr	r0, [sp, #28]
10017ae4:	aa32      	add	r2, sp, #200	@ 0xc8
10017ae6:	f001 fcb3 	bl	10019450 <__ssprint_r>
10017aea:	2800      	cmp	r0, #0
10017aec:	f47f ad0f 	bne.w	1001750e <_svfprintf_r+0x96e>
10017af0:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017af2:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017af6:	e411      	b.n	1001731c <_svfprintf_r+0x77c>
10017af8:	2140      	movs	r1, #64	@ 0x40
10017afa:	4658      	mov	r0, fp
10017afc:	f7f9 fbb4 	bl	10011268 <_malloc_r>
10017b00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10017b02:	6018      	str	r0, [r3, #0]
10017b04:	6118      	str	r0, [r3, #16]
10017b06:	2800      	cmp	r0, #0
10017b08:	f000 8610 	beq.w	1001872c <_svfprintf_r+0x1b8c>
10017b0c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10017b0e:	2340      	movs	r3, #64	@ 0x40
10017b10:	6153      	str	r3, [r2, #20]
10017b12:	f7ff b861 	b.w	10016bd8 <_svfprintf_r+0x38>
10017b16:	9b08      	ldr	r3, [sp, #32]
10017b18:	950c      	str	r5, [sp, #48]	@ 0x30
10017b1a:	2b06      	cmp	r3, #6
10017b1c:	4629      	mov	r1, r5
10017b1e:	bf28      	it	cs
10017b20:	2306      	movcs	r3, #6
10017b22:	9508      	str	r5, [sp, #32]
10017b24:	462a      	mov	r2, r5
10017b26:	9306      	str	r3, [sp, #24]
10017b28:	4d94      	ldr	r5, [pc, #592]	@ (10017d7c <_svfprintf_r+0x11dc>)
10017b2a:	960d      	str	r6, [sp, #52]	@ 0x34
10017b2c:	469b      	mov	fp, r3
10017b2e:	9114      	str	r1, [sp, #80]	@ 0x50
10017b30:	9110      	str	r1, [sp, #64]	@ 0x40
10017b32:	9112      	str	r1, [sp, #72]	@ 0x48
10017b34:	f7ff ba1b 	b.w	10016f6e <_svfprintf_r+0x3ce>
10017b38:	2e10      	cmp	r6, #16
10017b3a:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017b3c:	f340 85e7 	ble.w	1001870e <_svfprintf_r+0x1b6e>
10017b40:	488f      	ldr	r0, [pc, #572]	@ (10017d80 <_svfprintf_r+0x11e0>)
10017b42:	f8dd a01c 	ldr.w	sl, [sp, #28]
10017b46:	9015      	str	r0, [sp, #84]	@ 0x54
10017b48:	4642      	mov	r2, r8
10017b4a:	4621      	mov	r1, r4
10017b4c:	46a8      	mov	r8, r5
10017b4e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10017b50:	2710      	movs	r7, #16
10017b52:	4605      	mov	r5, r0
10017b54:	e004      	b.n	10017b60 <_svfprintf_r+0xfc0>
10017b56:	3208      	adds	r2, #8
10017b58:	3e10      	subs	r6, #16
10017b5a:	2e10      	cmp	r6, #16
10017b5c:	f340 8223 	ble.w	10017fa6 <_svfprintf_r+0x1406>
10017b60:	3301      	adds	r3, #1
10017b62:	3110      	adds	r1, #16
10017b64:	2b07      	cmp	r3, #7
10017b66:	e9c2 5700 	strd	r5, r7, [r2]
10017b6a:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
10017b6e:	ddf2      	ble.n	10017b56 <_svfprintf_r+0xfb6>
10017b70:	aa32      	add	r2, sp, #200	@ 0xc8
10017b72:	4621      	mov	r1, r4
10017b74:	4650      	mov	r0, sl
10017b76:	f001 fc6b 	bl	10019450 <__ssprint_r>
10017b7a:	2800      	cmp	r0, #0
10017b7c:	f040 8117 	bne.w	10017dae <_svfprintf_r+0x120e>
10017b80:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
10017b84:	aa35      	add	r2, sp, #212	@ 0xd4
10017b86:	e7e7      	b.n	10017b58 <_svfprintf_r+0xfb8>
10017b88:	4621      	mov	r1, r4
10017b8a:	461c      	mov	r4, r3
10017b8c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10017b8e:	f8cd b020 	str.w	fp, [sp, #32]
10017b92:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
10017b96:	4642      	mov	r2, r8
10017b98:	4f79      	ldr	r7, [pc, #484]	@ (10017d80 <_svfprintf_r+0x11e0>)
10017b9a:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
10017b9e:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
10017ba2:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
10017ba6:	f8dd b01c 	ldr.w	fp, [sp, #28]
10017baa:	b383      	cbz	r3, 10017c0e <_svfprintf_r+0x106e>
10017bac:	f1b9 0f00 	cmp.w	r9, #0
10017bb0:	f000 80ff 	beq.w	10017db2 <_svfprintf_r+0x1212>
10017bb4:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
10017bb8:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10017bba:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10017bbc:	3001      	adds	r0, #1
10017bbe:	4441      	add	r1, r8
10017bc0:	2807      	cmp	r0, #7
10017bc2:	e9c2 3800 	strd	r3, r8, [r2]
10017bc6:	9134      	str	r1, [sp, #208]	@ 0xd0
10017bc8:	9033      	str	r0, [sp, #204]	@ 0xcc
10017bca:	dc75      	bgt.n	10017cb8 <_svfprintf_r+0x1118>
10017bcc:	3208      	adds	r2, #8
10017bce:	9b08      	ldr	r3, [sp, #32]
10017bd0:	f89a 0000 	ldrb.w	r0, [sl]
10017bd4:	1b1e      	subs	r6, r3, r4
10017bd6:	4286      	cmp	r6, r0
10017bd8:	bfa8      	it	ge
10017bda:	4606      	movge	r6, r0
10017bdc:	2e00      	cmp	r6, #0
10017bde:	dd0c      	ble.n	10017bfa <_svfprintf_r+0x105a>
10017be0:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10017be2:	3001      	adds	r0, #1
10017be4:	4431      	add	r1, r6
10017be6:	2807      	cmp	r0, #7
10017be8:	e9c2 4600 	strd	r4, r6, [r2]
10017bec:	9134      	str	r1, [sp, #208]	@ 0xd0
10017bee:	9033      	str	r0, [sp, #204]	@ 0xcc
10017bf0:	f300 8167 	bgt.w	10017ec2 <_svfprintf_r+0x1322>
10017bf4:	f89a 0000 	ldrb.w	r0, [sl]
10017bf8:	3208      	adds	r2, #8
10017bfa:	2e00      	cmp	r6, #0
10017bfc:	bfac      	ite	ge
10017bfe:	1b85      	subge	r5, r0, r6
10017c00:	4605      	movlt	r5, r0
10017c02:	2d00      	cmp	r5, #0
10017c04:	dc13      	bgt.n	10017c2e <_svfprintf_r+0x108e>
10017c06:	4404      	add	r4, r0
10017c08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10017c0a:	2b00      	cmp	r3, #0
10017c0c:	d1ce      	bne.n	10017bac <_svfprintf_r+0x100c>
10017c0e:	f1b9 0f00 	cmp.w	r9, #0
10017c12:	d1cf      	bne.n	10017bb4 <_svfprintf_r+0x1014>
10017c14:	f8dd b020 	ldr.w	fp, [sp, #32]
10017c18:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
10017c1c:	46a2      	mov	sl, r4
10017c1e:	45da      	cmp	sl, fp
10017c20:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
10017c24:	4690      	mov	r8, r2
10017c26:	460c      	mov	r4, r1
10017c28:	bf28      	it	cs
10017c2a:	46da      	movcs	sl, fp
10017c2c:	e58b      	b.n	10017746 <_svfprintf_r+0xba6>
10017c2e:	2d10      	cmp	r5, #16
10017c30:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10017c32:	f340 853c 	ble.w	100186ae <_svfprintf_r+0x1b0e>
10017c36:	4623      	mov	r3, r4
10017c38:	463e      	mov	r6, r7
10017c3a:	462c      	mov	r4, r5
10017c3c:	461d      	mov	r5, r3
10017c3e:	e004      	b.n	10017c4a <_svfprintf_r+0x10aa>
10017c40:	3c10      	subs	r4, #16
10017c42:	2c10      	cmp	r4, #16
10017c44:	f102 0208 	add.w	r2, r2, #8
10017c48:	dd16      	ble.n	10017c78 <_svfprintf_r+0x10d8>
10017c4a:	3001      	adds	r0, #1
10017c4c:	3110      	adds	r1, #16
10017c4e:	2310      	movs	r3, #16
10017c50:	2807      	cmp	r0, #7
10017c52:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10017c56:	6017      	str	r7, [r2, #0]
10017c58:	6053      	str	r3, [r2, #4]
10017c5a:	ddf1      	ble.n	10017c40 <_svfprintf_r+0x10a0>
10017c5c:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017c5e:	aa32      	add	r2, sp, #200	@ 0xc8
10017c60:	4658      	mov	r0, fp
10017c62:	f001 fbf5 	bl	10019450 <__ssprint_r>
10017c66:	2800      	cmp	r0, #0
10017c68:	f47f ae3f 	bne.w	100178ea <_svfprintf_r+0xd4a>
10017c6c:	3c10      	subs	r4, #16
10017c6e:	2c10      	cmp	r4, #16
10017c70:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
10017c74:	aa35      	add	r2, sp, #212	@ 0xd4
10017c76:	dce8      	bgt.n	10017c4a <_svfprintf_r+0x10aa>
10017c78:	462b      	mov	r3, r5
10017c7a:	4625      	mov	r5, r4
10017c7c:	461c      	mov	r4, r3
10017c7e:	3001      	adds	r0, #1
10017c80:	4429      	add	r1, r5
10017c82:	2807      	cmp	r0, #7
10017c84:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
10017c88:	6016      	str	r6, [r2, #0]
10017c8a:	6055      	str	r5, [r2, #4]
10017c8c:	f300 837d 	bgt.w	1001838a <_svfprintf_r+0x17ea>
10017c90:	f89a 0000 	ldrb.w	r0, [sl]
10017c94:	3208      	adds	r2, #8
10017c96:	4404      	add	r4, r0
10017c98:	e7b6      	b.n	10017c08 <_svfprintf_r+0x1068>
10017c9a:	990d      	ldr	r1, [sp, #52]	@ 0x34
10017c9c:	f851 3b04 	ldr.w	r3, [r1], #4
10017ca0:	910d      	str	r1, [sp, #52]	@ 0x34
10017ca2:	f019 0110 	ands.w	r1, r9, #16
10017ca6:	f47f aef9 	bne.w	10017a9c <_svfprintf_r+0xefc>
10017caa:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10017cae:	f000 815f 	beq.w	10017f70 <_svfprintf_r+0x13d0>
10017cb2:	b29b      	uxth	r3, r3
10017cb4:	460a      	mov	r2, r1
10017cb6:	e6f1      	b.n	10017a9c <_svfprintf_r+0xefc>
10017cb8:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017cba:	aa32      	add	r2, sp, #200	@ 0xc8
10017cbc:	4658      	mov	r0, fp
10017cbe:	f001 fbc7 	bl	10019450 <__ssprint_r>
10017cc2:	2800      	cmp	r0, #0
10017cc4:	f47f ae11 	bne.w	100178ea <_svfprintf_r+0xd4a>
10017cc8:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10017cca:	aa35      	add	r2, sp, #212	@ 0xd4
10017ccc:	e77f      	b.n	10017bce <_svfprintf_r+0x102e>
10017cce:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10017cd2:	2100      	movs	r1, #0
10017cd4:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10017cd8:	f8df 90a8 	ldr.w	r9, [pc, #168]	@ 10017d84 <_svfprintf_r+0x11e4>
10017cdc:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10017ce0:	9406      	str	r4, [sp, #24]
10017ce2:	ad5e      	add	r5, sp, #376	@ 0x178
10017ce4:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10017ce8:	2705      	movs	r7, #5
10017cea:	468c      	mov	ip, r1
10017cec:	465e      	mov	r6, fp
10017cee:	e005      	b.n	10017cfc <_svfprintf_r+0x115c>
10017cf0:	2b0a      	cmp	r3, #10
10017cf2:	f172 0200 	sbcs.w	r2, r2, #0
10017cf6:	d333      	bcc.n	10017d60 <_svfprintf_r+0x11c0>
10017cf8:	465b      	mov	r3, fp
10017cfa:	4622      	mov	r2, r4
10017cfc:	1899      	adds	r1, r3, r2
10017cfe:	f141 0100 	adc.w	r1, r1, #0
10017d02:	fba9 0401 	umull	r0, r4, r9, r1
10017d06:	f024 0003 	bic.w	r0, r4, #3
10017d0a:	eb00 0094 	add.w	r0, r0, r4, lsr #2
10017d0e:	1a09      	subs	r1, r1, r0
10017d10:	1a58      	subs	r0, r3, r1
10017d12:	f162 0e00 	sbc.w	lr, r2, #0
10017d16:	fb0a f400 	mul.w	r4, sl, r0
10017d1a:	fba0 b009 	umull	fp, r0, r0, r9
10017d1e:	fb09 440e 	mla	r4, r9, lr, r4
10017d22:	f00b 0e01 	and.w	lr, fp, #1
10017d26:	4404      	add	r4, r0
10017d28:	fbae 0e07 	umull	r0, lr, lr, r7
10017d2c:	1840      	adds	r0, r0, r1
10017d2e:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
10017d32:	3030      	adds	r0, #48	@ 0x30
10017d34:	f805 0c01 	strb.w	r0, [r5, #-1]
10017d38:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
10017d3c:	f10c 0c01 	add.w	ip, ip, #1
10017d40:	3d01      	subs	r5, #1
10017d42:	0864      	lsrs	r4, r4, #1
10017d44:	2e00      	cmp	r6, #0
10017d46:	d0d3      	beq.n	10017cf0 <_svfprintf_r+0x1150>
10017d48:	f898 1000 	ldrb.w	r1, [r8]
10017d4c:	458c      	cmp	ip, r1
10017d4e:	d1cf      	bne.n	10017cf0 <_svfprintf_r+0x1150>
10017d50:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10017d54:	d0cc      	beq.n	10017cf0 <_svfprintf_r+0x1150>
10017d56:	2b0a      	cmp	r3, #10
10017d58:	f172 0200 	sbcs.w	r2, r2, #0
10017d5c:	f080 8136 	bcs.w	10017fcc <_svfprintf_r+0x142c>
10017d60:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
10017d64:	9c06      	ldr	r4, [sp, #24]
10017d66:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
10017d6a:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
10017d6e:	f7ff bb15 	b.w	1001739c <_svfprintf_r+0x7fc>
10017d72:	bf00      	nop
10017d74:	1001c540 	.word	0x1001c540
10017d78:	1001c52c 	.word	0x1001c52c
10017d7c:	1001c554 	.word	0x1001c554
10017d80:	1001c774 	.word	0x1001c774
10017d84:	cccccccd 	.word	0xcccccccd
10017d88:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017d8a:	9807      	ldr	r0, [sp, #28]
10017d8c:	9315      	str	r3, [sp, #84]	@ 0x54
10017d8e:	aa32      	add	r2, sp, #200	@ 0xc8
10017d90:	f001 fb5e 	bl	10019450 <__ssprint_r>
10017d94:	2800      	cmp	r0, #0
10017d96:	f47f abba 	bne.w	1001750e <_svfprintf_r+0x96e>
10017d9a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10017d9e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017da0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10017da2:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017da6:	f7ff b83f 	b.w	10016e28 <_svfprintf_r+0x288>
10017daa:	46a3      	mov	fp, r4
10017dac:	e59d      	b.n	100178ea <_svfprintf_r+0xd4a>
10017dae:	46d3      	mov	fp, sl
10017db0:	e59b      	b.n	100178ea <_svfprintf_r+0xd4a>
10017db2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10017db4:	3b01      	subs	r3, #1
10017db6:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
10017dba:	9310      	str	r3, [sp, #64]	@ 0x40
10017dbc:	e6fc      	b.n	10017bb8 <_svfprintf_r+0x1018>
10017dbe:	2901      	cmp	r1, #1
10017dc0:	464c      	mov	r4, r9
10017dc2:	f47f aadb 	bne.w	1001737c <_svfprintf_r+0x7dc>
10017dc6:	e42f      	b.n	10017628 <_svfprintf_r+0xa88>
10017dc8:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017dca:	9807      	ldr	r0, [sp, #28]
10017dcc:	aa32      	add	r2, sp, #200	@ 0xc8
10017dce:	f001 fb3f 	bl	10019450 <__ssprint_r>
10017dd2:	2800      	cmp	r0, #0
10017dd4:	f47f ab9b 	bne.w	1001750e <_svfprintf_r+0x96e>
10017dd8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017dda:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017dde:	f7ff ba8a 	b.w	100172f6 <_svfprintf_r+0x756>
10017de2:	af30      	add	r7, sp, #192	@ 0xc0
10017de4:	2208      	movs	r2, #8
10017de6:	2100      	movs	r1, #0
10017de8:	4638      	mov	r0, r7
10017dea:	952b      	str	r5, [sp, #172]	@ 0xac
10017dec:	f7fd fad8 	bl	100153a0 <memset>
10017df0:	9b08      	ldr	r3, [sp, #32]
10017df2:	1c58      	adds	r0, r3, #1
10017df4:	f000 80c9 	beq.w	10017f8a <_svfprintf_r+0x13ea>
10017df8:	2400      	movs	r4, #0
10017dfa:	f8cd 9018 	str.w	r9, [sp, #24]
10017dfe:	46a3      	mov	fp, r4
10017e00:	f8dd 901c 	ldr.w	r9, [sp, #28]
10017e04:	469a      	mov	sl, r3
10017e06:	e00c      	b.n	10017e22 <_svfprintf_r+0x1282>
10017e08:	a945      	add	r1, sp, #276	@ 0x114
10017e0a:	4648      	mov	r0, r9
10017e0c:	f7fd fd24 	bl	10015858 <_wcrtomb_r>
10017e10:	1c41      	adds	r1, r0, #1
10017e12:	4458      	add	r0, fp
10017e14:	f000 838e 	beq.w	10018534 <_svfprintf_r+0x1994>
10017e18:	4550      	cmp	r0, sl
10017e1a:	dc08      	bgt.n	10017e2e <_svfprintf_r+0x128e>
10017e1c:	f000 8441 	beq.w	100186a2 <_svfprintf_r+0x1b02>
10017e20:	4683      	mov	fp, r0
10017e22:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
10017e24:	5912      	ldr	r2, [r2, r4]
10017e26:	463b      	mov	r3, r7
10017e28:	3404      	adds	r4, #4
10017e2a:	2a00      	cmp	r2, #0
10017e2c:	d1ec      	bne.n	10017e08 <_svfprintf_r+0x1268>
10017e2e:	f8dd 9018 	ldr.w	r9, [sp, #24]
10017e32:	f1bb 0f00 	cmp.w	fp, #0
10017e36:	f000 80dd 	beq.w	10017ff4 <_svfprintf_r+0x1454>
10017e3a:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
10017e3e:	f300 81b9 	bgt.w	100181b4 <_svfprintf_r+0x1614>
10017e42:	2300      	movs	r3, #0
10017e44:	930c      	str	r3, [sp, #48]	@ 0x30
10017e46:	ad45      	add	r5, sp, #276	@ 0x114
10017e48:	2208      	movs	r2, #8
10017e4a:	2100      	movs	r1, #0
10017e4c:	4638      	mov	r0, r7
10017e4e:	f7fd faa7 	bl	100153a0 <memset>
10017e52:	9807      	ldr	r0, [sp, #28]
10017e54:	9700      	str	r7, [sp, #0]
10017e56:	465b      	mov	r3, fp
10017e58:	aa2b      	add	r2, sp, #172	@ 0xac
10017e5a:	4629      	mov	r1, r5
10017e5c:	f7fd fd22 	bl	100158a4 <_wcsrtombs_r>
10017e60:	4583      	cmp	fp, r0
10017e62:	f040 845a 	bne.w	1001871a <_svfprintf_r+0x1b7a>
10017e66:	2300      	movs	r3, #0
10017e68:	f805 300b 	strb.w	r3, [r5, fp]
10017e6c:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10017e70:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10017e74:	960d      	str	r6, [sp, #52]	@ 0x34
10017e76:	9308      	str	r3, [sp, #32]
10017e78:	9106      	str	r1, [sp, #24]
10017e7a:	9314      	str	r3, [sp, #80]	@ 0x50
10017e7c:	9310      	str	r3, [sp, #64]	@ 0x40
10017e7e:	9312      	str	r3, [sp, #72]	@ 0x48
10017e80:	f7ff b875 	b.w	10016f6e <_svfprintf_r+0x3ce>
10017e84:	46cb      	mov	fp, r9
10017e86:	e530      	b.n	100178ea <_svfprintf_r+0xd4a>
10017e88:	4a74      	ldr	r2, [pc, #464]	@ (1001805c <_svfprintf_r+0x14bc>)
10017e8a:	9215      	str	r2, [sp, #84]	@ 0x54
10017e8c:	3301      	adds	r3, #1
10017e8e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10017e90:	f8c8 2000 	str.w	r2, [r8]
10017e94:	442c      	add	r4, r5
10017e96:	2b07      	cmp	r3, #7
10017e98:	f8c8 5004 	str.w	r5, [r8, #4]
10017e9c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017ea0:	f77e afff 	ble.w	10016ea2 <_svfprintf_r+0x302>
10017ea4:	f7ff bb69 	b.w	1001757a <_svfprintf_r+0x9da>
10017ea8:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017eaa:	9807      	ldr	r0, [sp, #28]
10017eac:	aa32      	add	r2, sp, #200	@ 0xc8
10017eae:	f001 facf 	bl	10019450 <__ssprint_r>
10017eb2:	2800      	cmp	r0, #0
10017eb4:	f47f ab2b 	bne.w	1001750e <_svfprintf_r+0x96e>
10017eb8:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10017eba:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017ebe:	f7fe bfda 	b.w	10016e76 <_svfprintf_r+0x2d6>
10017ec2:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017ec4:	aa32      	add	r2, sp, #200	@ 0xc8
10017ec6:	4658      	mov	r0, fp
10017ec8:	f001 fac2 	bl	10019450 <__ssprint_r>
10017ecc:	2800      	cmp	r0, #0
10017ece:	f47f ad0c 	bne.w	100178ea <_svfprintf_r+0xd4a>
10017ed2:	f89a 0000 	ldrb.w	r0, [sl]
10017ed6:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10017ed8:	aa35      	add	r2, sp, #212	@ 0xd4
10017eda:	e68e      	b.n	10017bfa <_svfprintf_r+0x105a>
10017edc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10017ede:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10017ee0:	681b      	ldr	r3, [r3, #0]
10017ee2:	601a      	str	r2, [r3, #0]
10017ee4:	f7ff b966 	b.w	100171b4 <_svfprintf_r+0x614>
10017ee8:	f8dd 9020 	ldr.w	r9, [sp, #32]
10017eec:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10017eee:	603b      	str	r3, [r7, #0]
10017ef0:	3601      	adds	r6, #1
10017ef2:	4444      	add	r4, r8
10017ef4:	2e07      	cmp	r6, #7
10017ef6:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10017efa:	f8c7 8004 	str.w	r8, [r7, #4]
10017efe:	f77f ab7f 	ble.w	10017600 <_svfprintf_r+0xa60>
10017f02:	e487      	b.n	10017814 <_svfprintf_r+0xc74>
10017f04:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10017f06:	991a      	ldr	r1, [sp, #104]	@ 0x68
10017f08:	441c      	add	r4, r3
10017f0a:	e9c8 1300 	strd	r1, r3, [r8]
10017f0e:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10017f10:	9434      	str	r4, [sp, #208]	@ 0xd0
10017f12:	3301      	adds	r3, #1
10017f14:	2b07      	cmp	r3, #7
10017f16:	9333      	str	r3, [sp, #204]	@ 0xcc
10017f18:	f300 8164 	bgt.w	100181e4 <_svfprintf_r+0x1644>
10017f1c:	f108 0808 	add.w	r8, r8, #8
10017f20:	2a00      	cmp	r2, #0
10017f22:	f6bf ab1e 	bge.w	10017562 <_svfprintf_r+0x9c2>
10017f26:	4256      	negs	r6, r2
10017f28:	3210      	adds	r2, #16
10017f2a:	4a4c      	ldr	r2, [pc, #304]	@ (1001805c <_svfprintf_r+0x14bc>)
10017f2c:	9215      	str	r2, [sp, #84]	@ 0x54
10017f2e:	f280 82e7 	bge.w	10018500 <_svfprintf_r+0x1960>
10017f32:	46aa      	mov	sl, r5
10017f34:	2710      	movs	r7, #16
10017f36:	4615      	mov	r5, r2
10017f38:	e005      	b.n	10017f46 <_svfprintf_r+0x13a6>
10017f3a:	f108 0808 	add.w	r8, r8, #8
10017f3e:	3e10      	subs	r6, #16
10017f40:	2e10      	cmp	r6, #16
10017f42:	f340 82dc 	ble.w	100184fe <_svfprintf_r+0x195e>
10017f46:	3301      	adds	r3, #1
10017f48:	3410      	adds	r4, #16
10017f4a:	2b07      	cmp	r3, #7
10017f4c:	e9c8 5700 	strd	r5, r7, [r8]
10017f50:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017f54:	ddf1      	ble.n	10017f3a <_svfprintf_r+0x139a>
10017f56:	9909      	ldr	r1, [sp, #36]	@ 0x24
10017f58:	9807      	ldr	r0, [sp, #28]
10017f5a:	aa32      	add	r2, sp, #200	@ 0xc8
10017f5c:	f001 fa78 	bl	10019450 <__ssprint_r>
10017f60:	2800      	cmp	r0, #0
10017f62:	f47f aad4 	bne.w	1001750e <_svfprintf_r+0x96e>
10017f66:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10017f6a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10017f6e:	e7e6      	b.n	10017f3e <_svfprintf_r+0x139e>
10017f70:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10017f74:	bf1c      	itt	ne
10017f76:	b2db      	uxtbne	r3, r3
10017f78:	4602      	movne	r2, r0
10017f7a:	e58f      	b.n	10017a9c <_svfprintf_r+0xefc>
10017f7c:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10017f80:	bf1c      	itt	ne
10017f82:	b2db      	uxtbne	r3, r3
10017f84:	4602      	movne	r2, r0
10017f86:	f7ff b8e0 	b.w	1001714a <_svfprintf_r+0x5aa>
10017f8a:	2300      	movs	r3, #0
10017f8c:	9807      	ldr	r0, [sp, #28]
10017f8e:	9700      	str	r7, [sp, #0]
10017f90:	aa2b      	add	r2, sp, #172	@ 0xac
10017f92:	4619      	mov	r1, r3
10017f94:	f7fd fc86 	bl	100158a4 <_wcsrtombs_r>
10017f98:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10017f9c:	4683      	mov	fp, r0
10017f9e:	f000 82c9 	beq.w	10018534 <_svfprintf_r+0x1994>
10017fa2:	952b      	str	r5, [sp, #172]	@ 0xac
10017fa4:	e745      	b.n	10017e32 <_svfprintf_r+0x1292>
10017fa6:	4645      	mov	r5, r8
10017fa8:	460c      	mov	r4, r1
10017faa:	4690      	mov	r8, r2
10017fac:	3301      	adds	r3, #1
10017fae:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10017fb0:	f8c8 2000 	str.w	r2, [r8]
10017fb4:	4434      	add	r4, r6
10017fb6:	2b07      	cmp	r3, #7
10017fb8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10017fbc:	f8c8 6004 	str.w	r6, [r8, #4]
10017fc0:	f300 8103 	bgt.w	100181ca <_svfprintf_r+0x162a>
10017fc4:	f108 0808 	add.w	r8, r8, #8
10017fc8:	f7ff bbb6 	b.w	10017738 <_svfprintf_r+0xb98>
10017fcc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
10017fce:	991d      	ldr	r1, [sp, #116]	@ 0x74
10017fd0:	1aed      	subs	r5, r5, r3
10017fd2:	461a      	mov	r2, r3
10017fd4:	4628      	mov	r0, r5
10017fd6:	f7fd fa35 	bl	10015444 <strncpy>
10017fda:	f898 3001 	ldrb.w	r3, [r8, #1]
10017fde:	b10b      	cbz	r3, 10017fe4 <_svfprintf_r+0x1444>
10017fe0:	f108 0801 	add.w	r8, r8, #1
10017fe4:	f04f 0c00 	mov.w	ip, #0
10017fe8:	e686      	b.n	10017cf8 <_svfprintf_r+0x1158>
10017fea:	222d      	movs	r2, #45	@ 0x2d
10017fec:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10017ff0:	f7fe bfac 	b.w	10016f4c <_svfprintf_r+0x3ac>
10017ff4:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10017ff8:	960d      	str	r6, [sp, #52]	@ 0x34
10017ffa:	f8cd b018 	str.w	fp, [sp, #24]
10017ffe:	f8cd b020 	str.w	fp, [sp, #32]
10018002:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
10018006:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
1001800a:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
1001800e:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10018012:	f7fe bfac 	b.w	10016f6e <_svfprintf_r+0x3ce>
10018016:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018018:	9807      	ldr	r0, [sp, #28]
1001801a:	aa32      	add	r2, sp, #200	@ 0xc8
1001801c:	f001 fa18 	bl	10019450 <__ssprint_r>
10018020:	2800      	cmp	r0, #0
10018022:	f47f aa74 	bne.w	1001750e <_svfprintf_r+0x96e>
10018026:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10018028:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001802a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001802e:	f7ff ba81 	b.w	10017534 <_svfprintf_r+0x994>
10018032:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10018034:	ebab 060a 	sub.w	r6, fp, sl
10018038:	1b5d      	subs	r5, r3, r5
1001803a:	42ae      	cmp	r6, r5
1001803c:	bfa8      	it	ge
1001803e:	462e      	movge	r6, r5
10018040:	f7ff bbae 	b.w	100177a0 <_svfprintf_r+0xc00>
10018044:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10018046:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10018048:	681b      	ldr	r3, [r3, #0]
1001804a:	801a      	strh	r2, [r3, #0]
1001804c:	f7ff b8b2 	b.w	100171b4 <_svfprintf_r+0x614>
10018050:	f343 12c0 	sbfx	r2, r3, #7, #1
10018054:	4611      	mov	r1, r2
10018056:	b25b      	sxtb	r3, r3
10018058:	f7ff b83d 	b.w	100170d6 <_svfprintf_r+0x536>
1001805c:	1001c774 	.word	0x1001c774
10018060:	9e08      	ldr	r6, [sp, #32]
10018062:	2302      	movs	r3, #2
10018064:	e9cd 3600 	strd	r3, r6, [sp]
10018068:	ab30      	add	r3, sp, #192	@ 0xc0
1001806a:	9304      	str	r3, [sp, #16]
1001806c:	ab2b      	add	r3, sp, #172	@ 0xac
1001806e:	9303      	str	r3, [sp, #12]
10018070:	ab29      	add	r3, sp, #164	@ 0xa4
10018072:	9302      	str	r3, [sp, #8]
10018074:	9807      	ldr	r0, [sp, #28]
10018076:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
1001807a:	f7fd fcfd 	bl	10015a78 <_dtoa_r>
1001807e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018080:	2b67      	cmp	r3, #103	@ 0x67
10018082:	4605      	mov	r5, r0
10018084:	f000 813b 	beq.w	100182fe <_svfprintf_r+0x175e>
10018088:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001808a:	2b47      	cmp	r3, #71	@ 0x47
1001808c:	f000 8137 	beq.w	100182fe <_svfprintf_r+0x175e>
10018090:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10018092:	f023 0720 	bic.w	r7, r3, #32
10018096:	2f46      	cmp	r7, #70	@ 0x46
10018098:	eb00 0406 	add.w	r4, r0, r6
1001809c:	d105      	bne.n	100180aa <_svfprintf_r+0x150a>
1001809e:	7803      	ldrb	r3, [r0, #0]
100180a0:	2b30      	cmp	r3, #48	@ 0x30
100180a2:	f000 82f1 	beq.w	10018688 <_svfprintf_r+0x1ae8>
100180a6:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
100180a8:	4434      	add	r4, r6
100180aa:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100180ae:	2200      	movs	r2, #0
100180b0:	2300      	movs	r3, #0
100180b2:	f001 fed3 	bl	10019e5c <__aeabi_dcmpeq>
100180b6:	2800      	cmp	r0, #0
100180b8:	f000 813f 	beq.w	1001833a <_svfprintf_r+0x179a>
100180bc:	4623      	mov	r3, r4
100180be:	1b5b      	subs	r3, r3, r5
100180c0:	9313      	str	r3, [sp, #76]	@ 0x4c
100180c2:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100180c4:	9212      	str	r2, [sp, #72]	@ 0x48
100180c6:	2f47      	cmp	r7, #71	@ 0x47
100180c8:	f000 8121 	beq.w	1001830e <_svfprintf_r+0x176e>
100180cc:	2f46      	cmp	r7, #70	@ 0x46
100180ce:	f000 81e3 	beq.w	10018498 <_svfprintf_r+0x18f8>
100180d2:	990e      	ldr	r1, [sp, #56]	@ 0x38
100180d4:	1e53      	subs	r3, r2, #1
100180d6:	2961      	cmp	r1, #97	@ 0x61
100180d8:	9329      	str	r3, [sp, #164]	@ 0xa4
100180da:	f000 8316 	beq.w	1001870a <_svfprintf_r+0x1b6a>
100180de:	2941      	cmp	r1, #65	@ 0x41
100180e0:	f040 8120 	bne.w	10018324 <_svfprintf_r+0x1784>
100180e4:	2150      	movs	r1, #80	@ 0x50
100180e6:	2001      	movs	r0, #1
100180e8:	2b00      	cmp	r3, #0
100180ea:	bfb6      	itet	lt
100180ec:	f1c2 0301 	rsblt	r3, r2, #1
100180f0:	222b      	movge	r2, #43	@ 0x2b
100180f2:	222d      	movlt	r2, #45	@ 0x2d
100180f4:	2b09      	cmp	r3, #9
100180f6:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
100180fa:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
100180fe:	f340 8227 	ble.w	10018550 <_svfprintf_r+0x19b0>
10018102:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
10018106:	4eae      	ldr	r6, [pc, #696]	@ (100183c0 <_svfprintf_r+0x1820>)
10018108:	4622      	mov	r2, r4
1001810a:	4610      	mov	r0, r2
1001810c:	fba6 1203 	umull	r1, r2, r6, r3
10018110:	08d2      	lsrs	r2, r2, #3
10018112:	eb02 0182 	add.w	r1, r2, r2, lsl #2
10018116:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
1001811a:	3130      	adds	r1, #48	@ 0x30
1001811c:	f800 1c01 	strb.w	r1, [r0, #-1]
10018120:	4619      	mov	r1, r3
10018122:	2963      	cmp	r1, #99	@ 0x63
10018124:	4613      	mov	r3, r2
10018126:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
1001812a:	dcee      	bgt.n	1001810a <_svfprintf_r+0x156a>
1001812c:	3330      	adds	r3, #48	@ 0x30
1001812e:	f802 3c01 	strb.w	r3, [r2, #-1]
10018132:	1e83      	subs	r3, r0, #2
10018134:	42a3      	cmp	r3, r4
10018136:	f080 82ed 	bcs.w	10018714 <_svfprintf_r+0x1b74>
1001813a:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
1001813e:	f813 1b01 	ldrb.w	r1, [r3], #1
10018142:	f802 1f01 	strb.w	r1, [r2, #1]!
10018146:	42a3      	cmp	r3, r4
10018148:	d1f9      	bne.n	1001813e <_svfprintf_r+0x159e>
1001814a:	ab5e      	add	r3, sp, #376	@ 0x178
1001814c:	1a18      	subs	r0, r3, r0
1001814e:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
10018152:	931c      	str	r3, [sp, #112]	@ 0x70
10018154:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10018156:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10018158:	2b01      	cmp	r3, #1
1001815a:	eb03 0b02 	add.w	fp, r3, r2
1001815e:	f340 822a 	ble.w	100185b6 <_svfprintf_r+0x1a16>
10018162:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10018164:	449b      	add	fp, r3
10018166:	9b06      	ldr	r3, [sp, #24]
10018168:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1001816c:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
10018170:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
10018174:	2300      	movs	r3, #0
10018176:	9314      	str	r3, [sp, #80]	@ 0x50
10018178:	9206      	str	r2, [sp, #24]
1001817a:	9310      	str	r3, [sp, #64]	@ 0x40
1001817c:	9312      	str	r3, [sp, #72]	@ 0x48
1001817e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
10018180:	2b00      	cmp	r3, #0
10018182:	f040 80d3 	bne.w	1001832c <_svfprintf_r+0x178c>
10018186:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001818a:	9308      	str	r3, [sp, #32]
1001818c:	f7fe beef 	b.w	10016f6e <_svfprintf_r+0x3ce>
10018190:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10018192:	aa32      	add	r2, sp, #200	@ 0xc8
10018194:	4621      	mov	r1, r4
10018196:	4658      	mov	r0, fp
10018198:	f001 f95a 	bl	10019450 <__ssprint_r>
1001819c:	89a3      	ldrh	r3, [r4, #12]
1001819e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
100181a2:	f7fe be06 	b.w	10016db2 <_svfprintf_r+0x212>
100181a6:	4628      	mov	r0, r5
100181a8:	960d      	str	r6, [sp, #52]	@ 0x34
100181aa:	f7fd fae9 	bl	10015780 <strlen>
100181ae:	4683      	mov	fp, r0
100181b0:	f7fe bf74 	b.w	1001709c <_svfprintf_r+0x4fc>
100181b4:	9807      	ldr	r0, [sp, #28]
100181b6:	f10b 0101 	add.w	r1, fp, #1
100181ba:	f7f9 f855 	bl	10011268 <_malloc_r>
100181be:	4605      	mov	r5, r0
100181c0:	2800      	cmp	r0, #0
100181c2:	f000 81b7 	beq.w	10018534 <_svfprintf_r+0x1994>
100181c6:	900c      	str	r0, [sp, #48]	@ 0x30
100181c8:	e63e      	b.n	10017e48 <_svfprintf_r+0x12a8>
100181ca:	9909      	ldr	r1, [sp, #36]	@ 0x24
100181cc:	9807      	ldr	r0, [sp, #28]
100181ce:	aa32      	add	r2, sp, #200	@ 0xc8
100181d0:	f001 f93e 	bl	10019450 <__ssprint_r>
100181d4:	2800      	cmp	r0, #0
100181d6:	f47f a99a 	bne.w	1001750e <_svfprintf_r+0x96e>
100181da:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100181dc:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100181e0:	f7ff baaa 	b.w	10017738 <_svfprintf_r+0xb98>
100181e4:	9909      	ldr	r1, [sp, #36]	@ 0x24
100181e6:	9807      	ldr	r0, [sp, #28]
100181e8:	aa32      	add	r2, sp, #200	@ 0xc8
100181ea:	f001 f931 	bl	10019450 <__ssprint_r>
100181ee:	2800      	cmp	r0, #0
100181f0:	f47f a98d 	bne.w	1001750e <_svfprintf_r+0x96e>
100181f4:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100181f8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100181fa:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100181fe:	e68f      	b.n	10017f20 <_svfprintf_r+0x1380>
10018200:	2306      	movs	r3, #6
10018202:	9308      	str	r3, [sp, #32]
10018204:	f7ff bbf1 	b.w	100179ea <_svfprintf_r+0xe4a>
10018208:	9b08      	ldr	r3, [sp, #32]
1001820a:	1c5e      	adds	r6, r3, #1
1001820c:	2302      	movs	r3, #2
1001820e:	e729      	b.n	10018064 <_svfprintf_r+0x14c4>
10018210:	9e08      	ldr	r6, [sp, #32]
10018212:	2303      	movs	r3, #3
10018214:	e726      	b.n	10018064 <_svfprintf_r+0x14c4>
10018216:	aa29      	add	r2, sp, #164	@ 0xa4
10018218:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001821c:	f7fd fb4e 	bl	100158bc <frexp>
10018220:	2200      	movs	r2, #0
10018222:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10018226:	f001 fbb1 	bl	1001998c <__aeabi_dmul>
1001822a:	4602      	mov	r2, r0
1001822c:	460b      	mov	r3, r1
1001822e:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10018232:	2200      	movs	r2, #0
10018234:	2300      	movs	r3, #0
10018236:	f001 fe11 	bl	10019e5c <__aeabi_dcmpeq>
1001823a:	2800      	cmp	r0, #0
1001823c:	f040 81c0 	bne.w	100185c0 <_svfprintf_r+0x1a20>
10018240:	4b60      	ldr	r3, [pc, #384]	@ (100183c4 <_svfprintf_r+0x1824>)
10018242:	9312      	str	r3, [sp, #72]	@ 0x48
10018244:	9b08      	ldr	r3, [sp, #32]
10018246:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
1001824a:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
1001824e:	462e      	mov	r6, r5
10018250:	9514      	str	r5, [sp, #80]	@ 0x50
10018252:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10018256:	464d      	mov	r5, r9
10018258:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
1001825c:	e005      	b.n	1001826a <_svfprintf_r+0x16ca>
1001825e:	2200      	movs	r2, #0
10018260:	2300      	movs	r3, #0
10018262:	f001 fdfb 	bl	10019e5c <__aeabi_dcmpeq>
10018266:	b9f0      	cbnz	r0, 100182a6 <_svfprintf_r+0x1706>
10018268:	463d      	mov	r5, r7
1001826a:	4b57      	ldr	r3, [pc, #348]	@ (100183c8 <_svfprintf_r+0x1828>)
1001826c:	2200      	movs	r2, #0
1001826e:	4640      	mov	r0, r8
10018270:	4649      	mov	r1, r9
10018272:	f001 fb8b 	bl	1001998c <__aeabi_dmul>
10018276:	4689      	mov	r9, r1
10018278:	4680      	mov	r8, r0
1001827a:	f001 fe37 	bl	10019eec <__aeabi_d2iz>
1001827e:	4604      	mov	r4, r0
10018280:	f001 fb1a 	bl	100198b8 <__aeabi_i2d>
10018284:	460b      	mov	r3, r1
10018286:	4602      	mov	r2, r0
10018288:	4649      	mov	r1, r9
1001828a:	4640      	mov	r0, r8
1001828c:	f001 f9c6 	bl	1001961c <__aeabi_dsub>
10018290:	f81b 3004 	ldrb.w	r3, [fp, r4]
10018294:	46b2      	mov	sl, r6
10018296:	f806 3b01 	strb.w	r3, [r6], #1
1001829a:	1c6b      	adds	r3, r5, #1
1001829c:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
100182a0:	4680      	mov	r8, r0
100182a2:	4689      	mov	r9, r1
100182a4:	d1db      	bne.n	1001825e <_svfprintf_r+0x16be>
100182a6:	46cb      	mov	fp, r9
100182a8:	4657      	mov	r7, sl
100182aa:	46c2      	mov	sl, r8
100182ac:	4b47      	ldr	r3, [pc, #284]	@ (100183cc <_svfprintf_r+0x182c>)
100182ae:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
100182b2:	2200      	movs	r2, #0
100182b4:	4650      	mov	r0, sl
100182b6:	4659      	mov	r1, fp
100182b8:	46a9      	mov	r9, r5
100182ba:	9d14      	ldr	r5, [sp, #80]	@ 0x50
100182bc:	f001 fdf6 	bl	10019eac <__aeabi_dcmpgt>
100182c0:	2800      	cmp	r0, #0
100182c2:	f040 8153 	bne.w	1001856c <_svfprintf_r+0x19cc>
100182c6:	4b41      	ldr	r3, [pc, #260]	@ (100183cc <_svfprintf_r+0x182c>)
100182c8:	4650      	mov	r0, sl
100182ca:	4659      	mov	r1, fp
100182cc:	2200      	movs	r2, #0
100182ce:	f001 fdc5 	bl	10019e5c <__aeabi_dcmpeq>
100182d2:	b110      	cbz	r0, 100182da <_svfprintf_r+0x173a>
100182d4:	07e2      	lsls	r2, r4, #31
100182d6:	f100 8149 	bmi.w	1001856c <_svfprintf_r+0x19cc>
100182da:	f1b9 0f00 	cmp.w	r9, #0
100182de:	f2c0 815f 	blt.w	100185a0 <_svfprintf_r+0x1a00>
100182e2:	f109 0301 	add.w	r3, r9, #1
100182e6:	4433      	add	r3, r6
100182e8:	2230      	movs	r2, #48	@ 0x30
100182ea:	f806 2b01 	strb.w	r2, [r6], #1
100182ee:	42b3      	cmp	r3, r6
100182f0:	d1fb      	bne.n	100182ea <_svfprintf_r+0x174a>
100182f2:	1b5b      	subs	r3, r3, r5
100182f4:	9313      	str	r3, [sp, #76]	@ 0x4c
100182f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100182f8:	f023 0720 	bic.w	r7, r3, #32
100182fc:	e6e1      	b.n	100180c2 <_svfprintf_r+0x1522>
100182fe:	9b06      	ldr	r3, [sp, #24]
10018300:	07db      	lsls	r3, r3, #31
10018302:	f100 80f9 	bmi.w	100184f8 <_svfprintf_r+0x1958>
10018306:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10018308:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
1001830a:	1b5b      	subs	r3, r3, r5
1001830c:	9313      	str	r3, [sp, #76]	@ 0x4c
1001830e:	1cd3      	adds	r3, r2, #3
10018310:	9212      	str	r2, [sp, #72]	@ 0x48
10018312:	db02      	blt.n	1001831a <_svfprintf_r+0x177a>
10018314:	9b08      	ldr	r3, [sp, #32]
10018316:	4293      	cmp	r3, r2
10018318:	da1b      	bge.n	10018352 <_svfprintf_r+0x17b2>
1001831a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001831c:	3b02      	subs	r3, #2
1001831e:	930e      	str	r3, [sp, #56]	@ 0x38
10018320:	1e53      	subs	r3, r2, #1
10018322:	9329      	str	r3, [sp, #164]	@ 0xa4
10018324:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
10018328:	2000      	movs	r0, #0
1001832a:	e6dd      	b.n	100180e8 <_svfprintf_r+0x1548>
1001832c:	222d      	movs	r2, #45	@ 0x2d
1001832e:	2300      	movs	r3, #0
10018330:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10018334:	9308      	str	r3, [sp, #32]
10018336:	f7fe be1d 	b.w	10016f74 <_svfprintf_r+0x3d4>
1001833a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001833c:	42a3      	cmp	r3, r4
1001833e:	f4bf aebe 	bcs.w	100180be <_svfprintf_r+0x151e>
10018342:	2130      	movs	r1, #48	@ 0x30
10018344:	1c5a      	adds	r2, r3, #1
10018346:	9230      	str	r2, [sp, #192]	@ 0xc0
10018348:	7019      	strb	r1, [r3, #0]
1001834a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1001834c:	429c      	cmp	r4, r3
1001834e:	d8f9      	bhi.n	10018344 <_svfprintf_r+0x17a4>
10018350:	e6b5      	b.n	100180be <_svfprintf_r+0x151e>
10018352:	9913      	ldr	r1, [sp, #76]	@ 0x4c
10018354:	428a      	cmp	r2, r1
10018356:	f2c0 80c4 	blt.w	100184e2 <_svfprintf_r+0x1942>
1001835a:	9b06      	ldr	r3, [sp, #24]
1001835c:	07de      	lsls	r6, r3, #31
1001835e:	f140 8184 	bpl.w	1001866a <_svfprintf_r+0x1aca>
10018362:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10018364:	eb02 0b03 	add.w	fp, r2, r3
10018368:	9b06      	ldr	r3, [sp, #24]
1001836a:	055c      	lsls	r4, r3, #21
1001836c:	d502      	bpl.n	10018374 <_svfprintf_r+0x17d4>
1001836e:	2a00      	cmp	r2, #0
10018370:	f300 814d 	bgt.w	1001860e <_svfprintf_r+0x1a6e>
10018374:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10018378:	9306      	str	r3, [sp, #24]
1001837a:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001837e:	2367      	movs	r3, #103	@ 0x67
10018380:	930e      	str	r3, [sp, #56]	@ 0x38
10018382:	2300      	movs	r3, #0
10018384:	9314      	str	r3, [sp, #80]	@ 0x50
10018386:	9310      	str	r3, [sp, #64]	@ 0x40
10018388:	e6f9      	b.n	1001817e <_svfprintf_r+0x15de>
1001838a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001838c:	aa32      	add	r2, sp, #200	@ 0xc8
1001838e:	4658      	mov	r0, fp
10018390:	f001 f85e 	bl	10019450 <__ssprint_r>
10018394:	2800      	cmp	r0, #0
10018396:	f47f aaa8 	bne.w	100178ea <_svfprintf_r+0xd4a>
1001839a:	f89a 0000 	ldrb.w	r0, [sl]
1001839e:	9934      	ldr	r1, [sp, #208]	@ 0xd0
100183a0:	aa35      	add	r2, sp, #212	@ 0xd4
100183a2:	4404      	add	r4, r0
100183a4:	e430      	b.n	10017c08 <_svfprintf_r+0x1068>
100183a6:	9909      	ldr	r1, [sp, #36]	@ 0x24
100183a8:	9807      	ldr	r0, [sp, #28]
100183aa:	aa32      	add	r2, sp, #200	@ 0xc8
100183ac:	f001 f850 	bl	10019450 <__ssprint_r>
100183b0:	2800      	cmp	r0, #0
100183b2:	f47f a8ac 	bne.w	1001750e <_svfprintf_r+0x96e>
100183b6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100183b8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100183bc:	f7ff b9b5 	b.w	1001772a <_svfprintf_r+0xb8a>
100183c0:	cccccccd 	.word	0xcccccccd
100183c4:	1001c540 	.word	0x1001c540
100183c8:	40300000 	.word	0x40300000
100183cc:	3fe00000 	.word	0x3fe00000
100183d0:	2378      	movs	r3, #120	@ 0x78
100183d2:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
100183d6:	2330      	movs	r3, #48	@ 0x30
100183d8:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
100183dc:	f049 0302 	orr.w	r3, r9, #2
100183e0:	9306      	str	r3, [sp, #24]
100183e2:	9b08      	ldr	r3, [sp, #32]
100183e4:	2b63      	cmp	r3, #99	@ 0x63
100183e6:	f300 80dd 	bgt.w	100185a4 <_svfprintf_r+0x1a04>
100183ea:	2300      	movs	r3, #0
100183ec:	930c      	str	r3, [sp, #48]	@ 0x30
100183ee:	ad45      	add	r5, sp, #276	@ 0x114
100183f0:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
100183f4:	9315      	str	r3, [sp, #84]	@ 0x54
100183f6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
100183f8:	2b00      	cmp	r3, #0
100183fa:	db22      	blt.n	10018442 <_svfprintf_r+0x18a2>
100183fc:	ed9d 7b16 	vldr	d7, [sp, #88]	@ 0x58
10018400:	ed8d 7b24 	vstr	d7, [sp, #144]	@ 0x90
10018404:	2300      	movs	r3, #0
10018406:	931f      	str	r3, [sp, #124]	@ 0x7c
10018408:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001840a:	2b61      	cmp	r3, #97	@ 0x61
1001840c:	f47f aafd 	bne.w	10017a0a <_svfprintf_r+0xe6a>
10018410:	aa29      	add	r2, sp, #164	@ 0xa4
10018412:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10018416:	f7fd fa51 	bl	100158bc <frexp>
1001841a:	2200      	movs	r2, #0
1001841c:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10018420:	f001 fab4 	bl	1001998c <__aeabi_dmul>
10018424:	4602      	mov	r2, r0
10018426:	460b      	mov	r3, r1
10018428:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
1001842c:	2200      	movs	r2, #0
1001842e:	2300      	movs	r3, #0
10018430:	f001 fd14 	bl	10019e5c <__aeabi_dcmpeq>
10018434:	2800      	cmp	r0, #0
10018436:	f040 80c3 	bne.w	100185c0 <_svfprintf_r+0x1a20>
1001843a:	4ba8      	ldr	r3, [pc, #672]	@ (100186dc <_svfprintf_r+0x1b3c>)
1001843c:	9312      	str	r3, [sp, #72]	@ 0x48
1001843e:	e701      	b.n	10018244 <_svfprintf_r+0x16a4>
10018440:	930c      	str	r3, [sp, #48]	@ 0x30
10018442:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
10018446:	f102 4300 	add.w	r3, r2, #2147483648	@ 0x80000000
1001844a:	9325      	str	r3, [sp, #148]	@ 0x94
1001844c:	232d      	movs	r3, #45	@ 0x2d
1001844e:	9124      	str	r1, [sp, #144]	@ 0x90
10018450:	931f      	str	r3, [sp, #124]	@ 0x7c
10018452:	e7d9      	b.n	10018408 <_svfprintf_r+0x1868>
10018454:	9909      	ldr	r1, [sp, #36]	@ 0x24
10018456:	9807      	ldr	r0, [sp, #28]
10018458:	aa32      	add	r2, sp, #200	@ 0xc8
1001845a:	f000 fff9 	bl	10019450 <__ssprint_r>
1001845e:	2800      	cmp	r0, #0
10018460:	f47f a855 	bne.w	1001750e <_svfprintf_r+0x96e>
10018464:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10018466:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10018468:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001846c:	f7ff b981 	b.w	10017772 <_svfprintf_r+0xbd2>
10018470:	499b      	ldr	r1, [pc, #620]	@ (100186e0 <_svfprintf_r+0x1b40>)
10018472:	9115      	str	r1, [sp, #84]	@ 0x54
10018474:	f7fe bdb2 	b.w	10016fdc <_svfprintf_r+0x43c>
10018478:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001847a:	9807      	ldr	r0, [sp, #28]
1001847c:	aa32      	add	r2, sp, #200	@ 0xc8
1001847e:	f000 ffe7 	bl	10019450 <__ssprint_r>
10018482:	2800      	cmp	r0, #0
10018484:	f47f a843 	bne.w	1001750e <_svfprintf_r+0x96e>
10018488:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001848a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001848c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001848e:	1b5d      	subs	r5, r3, r5
10018490:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018494:	f7ff b984 	b.w	100177a0 <_svfprintf_r+0xc00>
10018498:	9b06      	ldr	r3, [sp, #24]
1001849a:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001849c:	9a08      	ldr	r2, [sp, #32]
1001849e:	f003 0301 	and.w	r3, r3, #1
100184a2:	2900      	cmp	r1, #0
100184a4:	ea43 0302 	orr.w	r3, r3, r2
100184a8:	f340 810f 	ble.w	100186ca <_svfprintf_r+0x1b2a>
100184ac:	2b00      	cmp	r3, #0
100184ae:	f040 80d5 	bne.w	1001865c <_svfprintf_r+0x1abc>
100184b2:	2366      	movs	r3, #102	@ 0x66
100184b4:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
100184b8:	930e      	str	r3, [sp, #56]	@ 0x38
100184ba:	9b06      	ldr	r3, [sp, #24]
100184bc:	055a      	lsls	r2, r3, #21
100184be:	f100 80a8 	bmi.w	10018612 <_svfprintf_r+0x1a72>
100184c2:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100184c6:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
100184ca:	9306      	str	r3, [sp, #24]
100184cc:	e759      	b.n	10018382 <_svfprintf_r+0x17e2>
100184ce:	2358      	movs	r3, #88	@ 0x58
100184d0:	e77f      	b.n	100183d2 <_svfprintf_r+0x1832>
100184d2:	2200      	movs	r2, #0
100184d4:	9208      	str	r2, [sp, #32]
100184d6:	f7fe bbbb 	b.w	10016c50 <_svfprintf_r+0xb0>
100184da:	4a81      	ldr	r2, [pc, #516]	@ (100186e0 <_svfprintf_r+0x1b40>)
100184dc:	9215      	str	r2, [sp, #84]	@ 0x54
100184de:	f7ff b8ef 	b.w	100176c0 <_svfprintf_r+0xb20>
100184e2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100184e4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
100184e6:	eb03 0b02 	add.w	fp, r3, r2
100184ea:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100184ec:	2b00      	cmp	r3, #0
100184ee:	f340 8083 	ble.w	100185f8 <_svfprintf_r+0x1a58>
100184f2:	2367      	movs	r3, #103	@ 0x67
100184f4:	930e      	str	r3, [sp, #56]	@ 0x38
100184f6:	e7e0      	b.n	100184ba <_svfprintf_r+0x191a>
100184f8:	19ac      	adds	r4, r5, r6
100184fa:	2747      	movs	r7, #71	@ 0x47
100184fc:	e5d5      	b.n	100180aa <_svfprintf_r+0x150a>
100184fe:	4655      	mov	r5, sl
10018500:	3301      	adds	r3, #1
10018502:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10018504:	f8c8 2000 	str.w	r2, [r8]
10018508:	4434      	add	r4, r6
1001850a:	2b07      	cmp	r3, #7
1001850c:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10018510:	f8c8 6004 	str.w	r6, [r8, #4]
10018514:	f77f a823 	ble.w	1001755e <_svfprintf_r+0x9be>
10018518:	9909      	ldr	r1, [sp, #36]	@ 0x24
1001851a:	9807      	ldr	r0, [sp, #28]
1001851c:	aa32      	add	r2, sp, #200	@ 0xc8
1001851e:	f000 ff97 	bl	10019450 <__ssprint_r>
10018522:	2800      	cmp	r0, #0
10018524:	f47e aff3 	bne.w	1001750e <_svfprintf_r+0x96e>
10018528:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
1001852c:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10018530:	f7ff b817 	b.w	10017562 <_svfprintf_r+0x9c2>
10018534:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10018536:	8993      	ldrh	r3, [r2, #12]
10018538:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001853c:	8193      	strh	r3, [r2, #12]
1001853e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10018542:	930a      	str	r3, [sp, #40]	@ 0x28
10018544:	f7fe bc38 	b.w	10016db8 <_svfprintf_r+0x218>
10018548:	4a66      	ldr	r2, [pc, #408]	@ (100186e4 <_svfprintf_r+0x1b44>)
1001854a:	9215      	str	r2, [sp, #84]	@ 0x54
1001854c:	f7fe bf84 	b.w	10017458 <_svfprintf_r+0x8b8>
10018550:	2800      	cmp	r0, #0
10018552:	d13f      	bne.n	100185d4 <_svfprintf_r+0x1a34>
10018554:	2230      	movs	r2, #48	@ 0x30
10018556:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
1001855a:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
1001855e:	3330      	adds	r3, #48	@ 0x30
10018560:	f802 3b01 	strb.w	r3, [r2], #1
10018564:	ab2c      	add	r3, sp, #176	@ 0xb0
10018566:	1ad3      	subs	r3, r2, r3
10018568:	931c      	str	r3, [sp, #112]	@ 0x70
1001856a:	e5f3      	b.n	10018154 <_svfprintf_r+0x15b4>
1001856c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001856e:	9730      	str	r7, [sp, #192]	@ 0xc0
10018570:	7bd9      	ldrb	r1, [r3, #15]
10018572:	f816 2c01 	ldrb.w	r2, [r6, #-1]
10018576:	428a      	cmp	r2, r1
10018578:	4633      	mov	r3, r6
1001857a:	d109      	bne.n	10018590 <_svfprintf_r+0x19f0>
1001857c:	2030      	movs	r0, #48	@ 0x30
1001857e:	f803 0c01 	strb.w	r0, [r3, #-1]
10018582:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10018584:	1e5a      	subs	r2, r3, #1
10018586:	9230      	str	r2, [sp, #192]	@ 0xc0
10018588:	f813 2c01 	ldrb.w	r2, [r3, #-1]
1001858c:	4291      	cmp	r1, r2
1001858e:	d0f6      	beq.n	1001857e <_svfprintf_r+0x19de>
10018590:	2a39      	cmp	r2, #57	@ 0x39
10018592:	bf0b      	itete	eq
10018594:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
10018596:	3201      	addne	r2, #1
10018598:	7a92      	ldrbeq	r2, [r2, #10]
1001859a:	b2d2      	uxtbne	r2, r2
1001859c:	f803 2c01 	strb.w	r2, [r3, #-1]
100185a0:	4633      	mov	r3, r6
100185a2:	e6a6      	b.n	100182f2 <_svfprintf_r+0x1752>
100185a4:	9807      	ldr	r0, [sp, #28]
100185a6:	1c59      	adds	r1, r3, #1
100185a8:	f7f8 fe5e 	bl	10011268 <_malloc_r>
100185ac:	4605      	mov	r5, r0
100185ae:	2800      	cmp	r0, #0
100185b0:	d0c0      	beq.n	10018534 <_svfprintf_r+0x1994>
100185b2:	900c      	str	r0, [sp, #48]	@ 0x30
100185b4:	e71c      	b.n	100183f0 <_svfprintf_r+0x1850>
100185b6:	9b06      	ldr	r3, [sp, #24]
100185b8:	07df      	lsls	r7, r3, #31
100185ba:	f57f add4 	bpl.w	10018166 <_svfprintf_r+0x15c6>
100185be:	e5d0      	b.n	10018162 <_svfprintf_r+0x15c2>
100185c0:	4b49      	ldr	r3, [pc, #292]	@ (100186e8 <_svfprintf_r+0x1b48>)
100185c2:	4a46      	ldr	r2, [pc, #280]	@ (100186dc <_svfprintf_r+0x1b3c>)
100185c4:	990e      	ldr	r1, [sp, #56]	@ 0x38
100185c6:	2961      	cmp	r1, #97	@ 0x61
100185c8:	bf18      	it	ne
100185ca:	461a      	movne	r2, r3
100185cc:	2301      	movs	r3, #1
100185ce:	9212      	str	r2, [sp, #72]	@ 0x48
100185d0:	9329      	str	r3, [sp, #164]	@ 0xa4
100185d2:	e637      	b.n	10018244 <_svfprintf_r+0x16a4>
100185d4:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
100185d8:	e7c1      	b.n	1001855e <_svfprintf_r+0x19be>
100185da:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
100185dc:	4d43      	ldr	r5, [pc, #268]	@ (100186ec <_svfprintf_r+0x1b4c>)
100185de:	2b00      	cmp	r3, #0
100185e0:	bfb4      	ite	lt
100185e2:	222d      	movlt	r2, #45	@ 0x2d
100185e4:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
100185e8:	4b41      	ldr	r3, [pc, #260]	@ (100186f0 <_svfprintf_r+0x1b50>)
100185ea:	bfb8      	it	lt
100185ec:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
100185f0:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
100185f4:	f7fe bcae 	b.w	10016f54 <_svfprintf_r+0x3b4>
100185f8:	f1c3 0301 	rsb	r3, r3, #1
100185fc:	449b      	add	fp, r3
100185fe:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10018602:	9306      	str	r3, [sp, #24]
10018604:	2367      	movs	r3, #103	@ 0x67
10018606:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001860a:	930e      	str	r3, [sp, #56]	@ 0x38
1001860c:	e6b9      	b.n	10018382 <_svfprintf_r+0x17e2>
1001860e:	2367      	movs	r3, #103	@ 0x67
10018610:	930e      	str	r3, [sp, #56]	@ 0x38
10018612:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10018614:	780b      	ldrb	r3, [r1, #0]
10018616:	2bff      	cmp	r3, #255	@ 0xff
10018618:	f000 808c 	beq.w	10018734 <_svfprintf_r+0x1b94>
1001861c:	2400      	movs	r4, #0
1001861e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
10018620:	4620      	mov	r0, r4
10018622:	e003      	b.n	1001862c <_svfprintf_r+0x1a8c>
10018624:	3001      	adds	r0, #1
10018626:	3101      	adds	r1, #1
10018628:	2bff      	cmp	r3, #255	@ 0xff
1001862a:	d008      	beq.n	1001863e <_svfprintf_r+0x1a9e>
1001862c:	4293      	cmp	r3, r2
1001862e:	da06      	bge.n	1001863e <_svfprintf_r+0x1a9e>
10018630:	1ad2      	subs	r2, r2, r3
10018632:	784b      	ldrb	r3, [r1, #1]
10018634:	2b00      	cmp	r3, #0
10018636:	d1f5      	bne.n	10018624 <_svfprintf_r+0x1a84>
10018638:	780b      	ldrb	r3, [r1, #0]
1001863a:	3401      	adds	r4, #1
1001863c:	e7f4      	b.n	10018628 <_svfprintf_r+0x1a88>
1001863e:	911b      	str	r1, [sp, #108]	@ 0x6c
10018640:	9010      	str	r0, [sp, #64]	@ 0x40
10018642:	9414      	str	r4, [sp, #80]	@ 0x50
10018644:	9212      	str	r2, [sp, #72]	@ 0x48
10018646:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
1001864a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1001864c:	4413      	add	r3, r2
1001864e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
10018650:	fb02 bb03 	mla	fp, r2, r3, fp
10018654:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10018658:	9306      	str	r3, [sp, #24]
1001865a:	e590      	b.n	1001817e <_svfprintf_r+0x15de>
1001865c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001865e:	18cf      	adds	r7, r1, r3
10018660:	443a      	add	r2, r7
10018662:	2366      	movs	r3, #102	@ 0x66
10018664:	4693      	mov	fp, r2
10018666:	930e      	str	r3, [sp, #56]	@ 0x38
10018668:	e727      	b.n	100184ba <_svfprintf_r+0x191a>
1001866a:	4693      	mov	fp, r2
1001866c:	e67c      	b.n	10018368 <_svfprintf_r+0x17c8>
1001866e:	9b08      	ldr	r3, [sp, #32]
10018670:	9306      	str	r3, [sp, #24]
10018672:	469b      	mov	fp, r3
10018674:	2373      	movs	r3, #115	@ 0x73
10018676:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001867a:	960d      	str	r6, [sp, #52]	@ 0x34
1001867c:	9008      	str	r0, [sp, #32]
1001867e:	9014      	str	r0, [sp, #80]	@ 0x50
10018680:	9010      	str	r0, [sp, #64]	@ 0x40
10018682:	930e      	str	r3, [sp, #56]	@ 0x38
10018684:	f7fe bc73 	b.w	10016f6e <_svfprintf_r+0x3ce>
10018688:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001868c:	2200      	movs	r2, #0
1001868e:	2300      	movs	r3, #0
10018690:	f001 fbe4 	bl	10019e5c <__aeabi_dcmpeq>
10018694:	2800      	cmp	r0, #0
10018696:	f47f ad06 	bne.w	100180a6 <_svfprintf_r+0x1506>
1001869a:	f1c6 0601 	rsb	r6, r6, #1
1001869e:	9629      	str	r6, [sp, #164]	@ 0xa4
100186a0:	e502      	b.n	100180a8 <_svfprintf_r+0x1508>
100186a2:	f8dd 9018 	ldr.w	r9, [sp, #24]
100186a6:	f8dd b020 	ldr.w	fp, [sp, #32]
100186aa:	f7ff bbc2 	b.w	10017e32 <_svfprintf_r+0x1292>
100186ae:	4e0d      	ldr	r6, [pc, #52]	@ (100186e4 <_svfprintf_r+0x1b44>)
100186b0:	f7ff bae5 	b.w	10017c7e <_svfprintf_r+0x10de>
100186b4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100186b6:	7863      	ldrb	r3, [r4, #1]
100186b8:	460c      	mov	r4, r1
100186ba:	f852 1b04 	ldr.w	r1, [r2], #4
100186be:	920d      	str	r2, [sp, #52]	@ 0x34
100186c0:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
100186c4:	9108      	str	r1, [sp, #32]
100186c6:	f7fe bac2 	b.w	10016c4e <_svfprintf_r+0xae>
100186ca:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
100186ce:	b98b      	cbnz	r3, 100186f4 <_svfprintf_r+0x1b54>
100186d0:	2301      	movs	r3, #1
100186d2:	2266      	movs	r2, #102	@ 0x66
100186d4:	9306      	str	r3, [sp, #24]
100186d6:	920e      	str	r2, [sp, #56]	@ 0x38
100186d8:	469b      	mov	fp, r3
100186da:	e652      	b.n	10018382 <_svfprintf_r+0x17e2>
100186dc:	1001c52c 	.word	0x1001c52c
100186e0:	1001c784 	.word	0x1001c784
100186e4:	1001c774 	.word	0x1001c774
100186e8:	1001c540 	.word	0x1001c540
100186ec:	1001c524 	.word	0x1001c524
100186f0:	1001c528 	.word	0x1001c528
100186f4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100186f6:	1c5f      	adds	r7, r3, #1
100186f8:	9b08      	ldr	r3, [sp, #32]
100186fa:	443b      	add	r3, r7
100186fc:	469b      	mov	fp, r3
100186fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
10018702:	9306      	str	r3, [sp, #24]
10018704:	2366      	movs	r3, #102	@ 0x66
10018706:	930e      	str	r3, [sp, #56]	@ 0x38
10018708:	e63b      	b.n	10018382 <_svfprintf_r+0x17e2>
1001870a:	2170      	movs	r1, #112	@ 0x70
1001870c:	e4eb      	b.n	100180e6 <_svfprintf_r+0x1546>
1001870e:	4a0b      	ldr	r2, [pc, #44]	@ (1001873c <_svfprintf_r+0x1b9c>)
10018710:	9215      	str	r2, [sp, #84]	@ 0x54
10018712:	e44b      	b.n	10017fac <_svfprintf_r+0x140c>
10018714:	2302      	movs	r3, #2
10018716:	931c      	str	r3, [sp, #112]	@ 0x70
10018718:	e51c      	b.n	10018154 <_svfprintf_r+0x15b4>
1001871a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001871c:	f8dd b01c 	ldr.w	fp, [sp, #28]
10018720:	8993      	ldrh	r3, [r2, #12]
10018722:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10018726:	8193      	strh	r3, [r2, #12]
10018728:	f7ff b8df 	b.w	100178ea <_svfprintf_r+0xd4a>
1001872c:	230c      	movs	r3, #12
1001872e:	f8cb 3000 	str.w	r3, [fp]
10018732:	e704      	b.n	1001853e <_svfprintf_r+0x199e>
10018734:	2300      	movs	r3, #0
10018736:	9314      	str	r3, [sp, #80]	@ 0x50
10018738:	9310      	str	r3, [sp, #64]	@ 0x40
1001873a:	e784      	b.n	10018646 <_svfprintf_r+0x1aa6>
1001873c:	1001c774 	.word	0x1001c774

10018740 <__smakebuf_r>:
10018740:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10018744:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
10018748:	460c      	mov	r4, r1
1001874a:	0799      	lsls	r1, r3, #30
1001874c:	b096      	sub	sp, #88	@ 0x58
1001874e:	d508      	bpl.n	10018762 <__smakebuf_r+0x22>
10018750:	f104 0343 	add.w	r3, r4, #67	@ 0x43
10018754:	2201      	movs	r2, #1
10018756:	e9c4 3204 	strd	r3, r2, [r4, #16]
1001875a:	6023      	str	r3, [r4, #0]
1001875c:	b016      	add	sp, #88	@ 0x58
1001875e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10018762:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10018766:	2900      	cmp	r1, #0
10018768:	4606      	mov	r6, r0
1001876a:	db26      	blt.n	100187ba <__smakebuf_r+0x7a>
1001876c:	466a      	mov	r2, sp
1001876e:	f7fc fea7 	bl	100154c0 <_fstat_r>
10018772:	2800      	cmp	r0, #0
10018774:	db1f      	blt.n	100187b6 <__smakebuf_r+0x76>
10018776:	9d01      	ldr	r5, [sp, #4]
10018778:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
1001877c:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
10018780:	fab5 f585 	clz	r5, r5
10018784:	f44f 6880 	mov.w	r8, #1024	@ 0x400
10018788:	096d      	lsrs	r5, r5, #5
1001878a:	f44f 6700 	mov.w	r7, #2048	@ 0x800
1001878e:	4641      	mov	r1, r8
10018790:	4630      	mov	r0, r6
10018792:	f7f8 fd69 	bl	10011268 <_malloc_r>
10018796:	b1e8      	cbz	r0, 100187d4 <__smakebuf_r+0x94>
10018798:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001879c:	f8c4 8014 	str.w	r8, [r4, #20]
100187a0:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
100187a4:	6020      	str	r0, [r4, #0]
100187a6:	6120      	str	r0, [r4, #16]
100187a8:	81a3      	strh	r3, [r4, #12]
100187aa:	bb3d      	cbnz	r5, 100187fc <__smakebuf_r+0xbc>
100187ac:	433b      	orrs	r3, r7
100187ae:	81a3      	strh	r3, [r4, #12]
100187b0:	b016      	add	sp, #88	@ 0x58
100187b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
100187b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100187ba:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
100187be:	d019      	beq.n	100187f4 <__smakebuf_r+0xb4>
100187c0:	f04f 0840 	mov.w	r8, #64	@ 0x40
100187c4:	2500      	movs	r5, #0
100187c6:	4641      	mov	r1, r8
100187c8:	4630      	mov	r0, r6
100187ca:	462f      	mov	r7, r5
100187cc:	f7f8 fd4c 	bl	10011268 <_malloc_r>
100187d0:	2800      	cmp	r0, #0
100187d2:	d1e1      	bne.n	10018798 <__smakebuf_r+0x58>
100187d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100187d8:	059a      	lsls	r2, r3, #22
100187da:	d4bf      	bmi.n	1001875c <__smakebuf_r+0x1c>
100187dc:	f023 0303 	bic.w	r3, r3, #3
100187e0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
100187e4:	f043 0302 	orr.w	r3, r3, #2
100187e8:	2101      	movs	r1, #1
100187ea:	e9c4 2104 	strd	r2, r1, [r4, #16]
100187ee:	81a3      	strh	r3, [r4, #12]
100187f0:	6022      	str	r2, [r4, #0]
100187f2:	e7b3      	b.n	1001875c <__smakebuf_r+0x1c>
100187f4:	f44f 6880 	mov.w	r8, #1024	@ 0x400
100187f8:	462f      	mov	r7, r5
100187fa:	e7c8      	b.n	1001878e <__smakebuf_r+0x4e>
100187fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10018800:	4630      	mov	r0, r6
10018802:	f000 fc83 	bl	1001910c <_isatty_r>
10018806:	b910      	cbnz	r0, 1001880e <__smakebuf_r+0xce>
10018808:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001880c:	e7ce      	b.n	100187ac <__smakebuf_r+0x6c>
1001880e:	89a3      	ldrh	r3, [r4, #12]
10018810:	f023 0303 	bic.w	r3, r3, #3
10018814:	f043 0301 	orr.w	r3, r3, #1
10018818:	b21b      	sxth	r3, r3
1001881a:	e7c7      	b.n	100187ac <__smakebuf_r+0x6c>

1001881c <_Balloc>:
1001881c:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001881e:	b570      	push	{r4, r5, r6, lr}
10018820:	4605      	mov	r5, r0
10018822:	460c      	mov	r4, r1
10018824:	b14b      	cbz	r3, 1001883a <_Balloc+0x1e>
10018826:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
1001882a:	b180      	cbz	r0, 1001884e <_Balloc+0x32>
1001882c:	6802      	ldr	r2, [r0, #0]
1001882e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
10018832:	2300      	movs	r3, #0
10018834:	60c3      	str	r3, [r0, #12]
10018836:	6103      	str	r3, [r0, #16]
10018838:	bd70      	pop	{r4, r5, r6, pc}
1001883a:	2221      	movs	r2, #33	@ 0x21
1001883c:	2104      	movs	r1, #4
1001883e:	f000 fdbd 	bl	100193bc <_calloc_r>
10018842:	4603      	mov	r3, r0
10018844:	6468      	str	r0, [r5, #68]	@ 0x44
10018846:	2800      	cmp	r0, #0
10018848:	d1ed      	bne.n	10018826 <_Balloc+0xa>
1001884a:	2000      	movs	r0, #0
1001884c:	bd70      	pop	{r4, r5, r6, pc}
1001884e:	2101      	movs	r1, #1
10018850:	fa01 f604 	lsl.w	r6, r1, r4
10018854:	1d72      	adds	r2, r6, #5
10018856:	0092      	lsls	r2, r2, #2
10018858:	4628      	mov	r0, r5
1001885a:	f000 fdaf 	bl	100193bc <_calloc_r>
1001885e:	2800      	cmp	r0, #0
10018860:	d0f3      	beq.n	1001884a <_Balloc+0x2e>
10018862:	e9c0 4601 	strd	r4, r6, [r0, #4]
10018866:	e7e4      	b.n	10018832 <_Balloc+0x16>

10018868 <_Bfree>:
10018868:	b131      	cbz	r1, 10018878 <_Bfree+0x10>
1001886a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
1001886c:	684a      	ldr	r2, [r1, #4]
1001886e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
10018872:	6008      	str	r0, [r1, #0]
10018874:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
10018878:	4770      	bx	lr
1001887a:	bf00      	nop

1001887c <__multadd>:
1001887c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10018880:	690d      	ldr	r5, [r1, #16]
10018882:	4607      	mov	r7, r0
10018884:	460e      	mov	r6, r1
10018886:	461c      	mov	r4, r3
10018888:	f101 0e14 	add.w	lr, r1, #20
1001888c:	2000      	movs	r0, #0
1001888e:	f8de 1000 	ldr.w	r1, [lr]
10018892:	b28b      	uxth	r3, r1
10018894:	fb02 4303 	mla	r3, r2, r3, r4
10018898:	ea4f 4c13 	mov.w	ip, r3, lsr #16
1001889c:	0c09      	lsrs	r1, r1, #16
1001889e:	fb02 cc01 	mla	ip, r2, r1, ip
100188a2:	3001      	adds	r0, #1
100188a4:	b29b      	uxth	r3, r3
100188a6:	eb03 430c 	add.w	r3, r3, ip, lsl #16
100188aa:	4285      	cmp	r5, r0
100188ac:	f84e 3b04 	str.w	r3, [lr], #4
100188b0:	ea4f 441c 	mov.w	r4, ip, lsr #16
100188b4:	dceb      	bgt.n	1001888e <__multadd+0x12>
100188b6:	b13c      	cbz	r4, 100188c8 <__multadd+0x4c>
100188b8:	68b3      	ldr	r3, [r6, #8]
100188ba:	42ab      	cmp	r3, r5
100188bc:	dd07      	ble.n	100188ce <__multadd+0x52>
100188be:	eb06 0385 	add.w	r3, r6, r5, lsl #2
100188c2:	3501      	adds	r5, #1
100188c4:	615c      	str	r4, [r3, #20]
100188c6:	6135      	str	r5, [r6, #16]
100188c8:	4630      	mov	r0, r6
100188ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
100188ce:	6871      	ldr	r1, [r6, #4]
100188d0:	4638      	mov	r0, r7
100188d2:	3101      	adds	r1, #1
100188d4:	f7ff ffa2 	bl	1001881c <_Balloc>
100188d8:	4680      	mov	r8, r0
100188da:	b1a8      	cbz	r0, 10018908 <__multadd+0x8c>
100188dc:	6932      	ldr	r2, [r6, #16]
100188de:	3202      	adds	r2, #2
100188e0:	f106 010c 	add.w	r1, r6, #12
100188e4:	0092      	lsls	r2, r2, #2
100188e6:	300c      	adds	r0, #12
100188e8:	f7fc feaa 	bl	10015640 <memcpy>
100188ec:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
100188ee:	6872      	ldr	r2, [r6, #4]
100188f0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
100188f4:	6031      	str	r1, [r6, #0]
100188f6:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
100188fa:	4646      	mov	r6, r8
100188fc:	eb06 0385 	add.w	r3, r6, r5, lsl #2
10018900:	3501      	adds	r5, #1
10018902:	615c      	str	r4, [r3, #20]
10018904:	6135      	str	r5, [r6, #16]
10018906:	e7df      	b.n	100188c8 <__multadd+0x4c>
10018908:	4b02      	ldr	r3, [pc, #8]	@ (10018914 <__multadd+0x98>)
1001890a:	4803      	ldr	r0, [pc, #12]	@ (10018918 <__multadd+0x9c>)
1001890c:	4642      	mov	r2, r8
1001890e:	21ba      	movs	r1, #186	@ 0xba
10018910:	f000 fd34 	bl	1001937c <__assert_func>
10018914:	1001c6fc 	.word	0x1001c6fc
10018918:	1001c794 	.word	0x1001c794

1001891c <__hi0bits>:
1001891c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
10018920:	4603      	mov	r3, r0
10018922:	bf36      	itet	cc
10018924:	0403      	lslcc	r3, r0, #16
10018926:	2000      	movcs	r0, #0
10018928:	2010      	movcc	r0, #16
1001892a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
1001892e:	bf3c      	itt	cc
10018930:	021b      	lslcc	r3, r3, #8
10018932:	3008      	addcc	r0, #8
10018934:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
10018938:	bf3c      	itt	cc
1001893a:	011b      	lslcc	r3, r3, #4
1001893c:	3004      	addcc	r0, #4
1001893e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
10018942:	d303      	bcc.n	1001894c <__hi0bits+0x30>
10018944:	2b00      	cmp	r3, #0
10018946:	db06      	blt.n	10018956 <__hi0bits+0x3a>
10018948:	3001      	adds	r0, #1
1001894a:	4770      	bx	lr
1001894c:	009b      	lsls	r3, r3, #2
1001894e:	d403      	bmi.n	10018958 <__hi0bits+0x3c>
10018950:	005b      	lsls	r3, r3, #1
10018952:	d403      	bmi.n	1001895c <__hi0bits+0x40>
10018954:	2020      	movs	r0, #32
10018956:	4770      	bx	lr
10018958:	3002      	adds	r0, #2
1001895a:	4770      	bx	lr
1001895c:	3003      	adds	r0, #3
1001895e:	4770      	bx	lr

10018960 <__lo0bits>:
10018960:	6803      	ldr	r3, [r0, #0]
10018962:	f013 0207 	ands.w	r2, r3, #7
10018966:	4601      	mov	r1, r0
10018968:	d007      	beq.n	1001897a <__lo0bits+0x1a>
1001896a:	07da      	lsls	r2, r3, #31
1001896c:	d41f      	bmi.n	100189ae <__lo0bits+0x4e>
1001896e:	0798      	lsls	r0, r3, #30
10018970:	d521      	bpl.n	100189b6 <__lo0bits+0x56>
10018972:	085b      	lsrs	r3, r3, #1
10018974:	600b      	str	r3, [r1, #0]
10018976:	2001      	movs	r0, #1
10018978:	4770      	bx	lr
1001897a:	b298      	uxth	r0, r3
1001897c:	b1a0      	cbz	r0, 100189a8 <__lo0bits+0x48>
1001897e:	4610      	mov	r0, r2
10018980:	b2da      	uxtb	r2, r3
10018982:	b90a      	cbnz	r2, 10018988 <__lo0bits+0x28>
10018984:	3008      	adds	r0, #8
10018986:	0a1b      	lsrs	r3, r3, #8
10018988:	071a      	lsls	r2, r3, #28
1001898a:	bf04      	itt	eq
1001898c:	091b      	lsreq	r3, r3, #4
1001898e:	3004      	addeq	r0, #4
10018990:	079a      	lsls	r2, r3, #30
10018992:	bf04      	itt	eq
10018994:	089b      	lsreq	r3, r3, #2
10018996:	3002      	addeq	r0, #2
10018998:	07da      	lsls	r2, r3, #31
1001899a:	d403      	bmi.n	100189a4 <__lo0bits+0x44>
1001899c:	085b      	lsrs	r3, r3, #1
1001899e:	f100 0001 	add.w	r0, r0, #1
100189a2:	d006      	beq.n	100189b2 <__lo0bits+0x52>
100189a4:	600b      	str	r3, [r1, #0]
100189a6:	4770      	bx	lr
100189a8:	0c1b      	lsrs	r3, r3, #16
100189aa:	2010      	movs	r0, #16
100189ac:	e7e8      	b.n	10018980 <__lo0bits+0x20>
100189ae:	2000      	movs	r0, #0
100189b0:	4770      	bx	lr
100189b2:	2020      	movs	r0, #32
100189b4:	4770      	bx	lr
100189b6:	089b      	lsrs	r3, r3, #2
100189b8:	600b      	str	r3, [r1, #0]
100189ba:	2002      	movs	r0, #2
100189bc:	4770      	bx	lr
100189be:	bf00      	nop

100189c0 <__i2b>:
100189c0:	b538      	push	{r3, r4, r5, lr}
100189c2:	6c43      	ldr	r3, [r0, #68]	@ 0x44
100189c4:	4604      	mov	r4, r0
100189c6:	460d      	mov	r5, r1
100189c8:	b14b      	cbz	r3, 100189de <__i2b+0x1e>
100189ca:	6858      	ldr	r0, [r3, #4]
100189cc:	b1b0      	cbz	r0, 100189fc <__i2b+0x3c>
100189ce:	6802      	ldr	r2, [r0, #0]
100189d0:	605a      	str	r2, [r3, #4]
100189d2:	2200      	movs	r2, #0
100189d4:	2301      	movs	r3, #1
100189d6:	6145      	str	r5, [r0, #20]
100189d8:	60c2      	str	r2, [r0, #12]
100189da:	6103      	str	r3, [r0, #16]
100189dc:	bd38      	pop	{r3, r4, r5, pc}
100189de:	2221      	movs	r2, #33	@ 0x21
100189e0:	2104      	movs	r1, #4
100189e2:	f000 fceb 	bl	100193bc <_calloc_r>
100189e6:	4603      	mov	r3, r0
100189e8:	6460      	str	r0, [r4, #68]	@ 0x44
100189ea:	2800      	cmp	r0, #0
100189ec:	d1ed      	bne.n	100189ca <__i2b+0xa>
100189ee:	4b09      	ldr	r3, [pc, #36]	@ (10018a14 <__i2b+0x54>)
100189f0:	4809      	ldr	r0, [pc, #36]	@ (10018a18 <__i2b+0x58>)
100189f2:	2200      	movs	r2, #0
100189f4:	f240 1145 	movw	r1, #325	@ 0x145
100189f8:	f000 fcc0 	bl	1001937c <__assert_func>
100189fc:	221c      	movs	r2, #28
100189fe:	2101      	movs	r1, #1
10018a00:	4620      	mov	r0, r4
10018a02:	f000 fcdb 	bl	100193bc <_calloc_r>
10018a06:	2800      	cmp	r0, #0
10018a08:	d0f1      	beq.n	100189ee <__i2b+0x2e>
10018a0a:	2201      	movs	r2, #1
10018a0c:	2302      	movs	r3, #2
10018a0e:	6042      	str	r2, [r0, #4]
10018a10:	6083      	str	r3, [r0, #8]
10018a12:	e7de      	b.n	100189d2 <__i2b+0x12>
10018a14:	1001c6fc 	.word	0x1001c6fc
10018a18:	1001c794 	.word	0x1001c794

10018a1c <__multiply>:
10018a1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018a20:	f8d1 8010 	ldr.w	r8, [r1, #16]
10018a24:	6915      	ldr	r5, [r2, #16]
10018a26:	45a8      	cmp	r8, r5
10018a28:	b085      	sub	sp, #20
10018a2a:	460e      	mov	r6, r1
10018a2c:	4692      	mov	sl, r2
10018a2e:	db05      	blt.n	10018a3c <__multiply+0x20>
10018a30:	462a      	mov	r2, r5
10018a32:	4653      	mov	r3, sl
10018a34:	4645      	mov	r5, r8
10018a36:	468a      	mov	sl, r1
10018a38:	4690      	mov	r8, r2
10018a3a:	461e      	mov	r6, r3
10018a3c:	f8da 3008 	ldr.w	r3, [sl, #8]
10018a40:	f8da 1004 	ldr.w	r1, [sl, #4]
10018a44:	eb05 0408 	add.w	r4, r5, r8
10018a48:	42a3      	cmp	r3, r4
10018a4a:	bfb8      	it	lt
10018a4c:	3101      	addlt	r1, #1
10018a4e:	f7ff fee5 	bl	1001881c <_Balloc>
10018a52:	4684      	mov	ip, r0
10018a54:	2800      	cmp	r0, #0
10018a56:	f000 808b 	beq.w	10018b70 <__multiply+0x154>
10018a5a:	f100 0714 	add.w	r7, r0, #20
10018a5e:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
10018a62:	4577      	cmp	r7, lr
10018a64:	d205      	bcs.n	10018a72 <__multiply+0x56>
10018a66:	463b      	mov	r3, r7
10018a68:	2200      	movs	r2, #0
10018a6a:	f843 2b04 	str.w	r2, [r3], #4
10018a6e:	459e      	cmp	lr, r3
10018a70:	d8fb      	bhi.n	10018a6a <__multiply+0x4e>
10018a72:	3614      	adds	r6, #20
10018a74:	eb06 0888 	add.w	r8, r6, r8, lsl #2
10018a78:	f10a 0914 	add.w	r9, sl, #20
10018a7c:	4546      	cmp	r6, r8
10018a7e:	eb09 0585 	add.w	r5, r9, r5, lsl #2
10018a82:	d266      	bcs.n	10018b52 <__multiply+0x136>
10018a84:	eba5 030a 	sub.w	r3, r5, sl
10018a88:	3b15      	subs	r3, #21
10018a8a:	f023 0303 	bic.w	r3, r3, #3
10018a8e:	f10a 0a15 	add.w	sl, sl, #21
10018a92:	3304      	adds	r3, #4
10018a94:	4555      	cmp	r5, sl
10018a96:	bf2c      	ite	cs
10018a98:	469b      	movcs	fp, r3
10018a9a:	f04f 0b04 	movcc.w	fp, #4
10018a9e:	f8cd e008 	str.w	lr, [sp, #8]
10018aa2:	9403      	str	r4, [sp, #12]
10018aa4:	46ae      	mov	lr, r5
10018aa6:	46e2      	mov	sl, ip
10018aa8:	e005      	b.n	10018ab6 <__multiply+0x9a>
10018aaa:	0c09      	lsrs	r1, r1, #16
10018aac:	d12a      	bne.n	10018b04 <__multiply+0xe8>
10018aae:	45b0      	cmp	r8, r6
10018ab0:	f107 0704 	add.w	r7, r7, #4
10018ab4:	d94a      	bls.n	10018b4c <__multiply+0x130>
10018ab6:	f856 1b04 	ldr.w	r1, [r6], #4
10018aba:	b28d      	uxth	r5, r1
10018abc:	2d00      	cmp	r5, #0
10018abe:	d0f4      	beq.n	10018aaa <__multiply+0x8e>
10018ac0:	46cc      	mov	ip, r9
10018ac2:	463c      	mov	r4, r7
10018ac4:	2300      	movs	r3, #0
10018ac6:	9601      	str	r6, [sp, #4]
10018ac8:	f85c 0b04 	ldr.w	r0, [ip], #4
10018acc:	6821      	ldr	r1, [r4, #0]
10018ace:	b286      	uxth	r6, r0
10018ad0:	b28a      	uxth	r2, r1
10018ad2:	0c00      	lsrs	r0, r0, #16
10018ad4:	fb05 2206 	mla	r2, r5, r6, r2
10018ad8:	0c09      	lsrs	r1, r1, #16
10018ada:	441a      	add	r2, r3
10018adc:	fb05 1100 	mla	r1, r5, r0, r1
10018ae0:	eb01 4112 	add.w	r1, r1, r2, lsr #16
10018ae4:	b292      	uxth	r2, r2
10018ae6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
10018aea:	45e6      	cmp	lr, ip
10018aec:	f844 2b04 	str.w	r2, [r4], #4
10018af0:	ea4f 4311 	mov.w	r3, r1, lsr #16
10018af4:	d8e8      	bhi.n	10018ac8 <__multiply+0xac>
10018af6:	9e01      	ldr	r6, [sp, #4]
10018af8:	f847 300b 	str.w	r3, [r7, fp]
10018afc:	f856 1c04 	ldr.w	r1, [r6, #-4]
10018b00:	0c09      	lsrs	r1, r1, #16
10018b02:	d0d4      	beq.n	10018aae <__multiply+0x92>
10018b04:	683b      	ldr	r3, [r7, #0]
10018b06:	2200      	movs	r2, #0
10018b08:	4648      	mov	r0, r9
10018b0a:	461d      	mov	r5, r3
10018b0c:	463c      	mov	r4, r7
10018b0e:	4694      	mov	ip, r2
10018b10:	8802      	ldrh	r2, [r0, #0]
10018b12:	fb01 c202 	mla	r2, r1, r2, ip
10018b16:	eb02 4215 	add.w	r2, r2, r5, lsr #16
10018b1a:	b29b      	uxth	r3, r3
10018b1c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
10018b20:	f844 3b04 	str.w	r3, [r4], #4
10018b24:	f850 3b04 	ldr.w	r3, [r0], #4
10018b28:	6825      	ldr	r5, [r4, #0]
10018b2a:	ea4f 4c13 	mov.w	ip, r3, lsr #16
10018b2e:	b2ab      	uxth	r3, r5
10018b30:	fb01 330c 	mla	r3, r1, ip, r3
10018b34:	eb03 4312 	add.w	r3, r3, r2, lsr #16
10018b38:	4586      	cmp	lr, r0
10018b3a:	ea4f 4c13 	mov.w	ip, r3, lsr #16
10018b3e:	d8e7      	bhi.n	10018b10 <__multiply+0xf4>
10018b40:	45b0      	cmp	r8, r6
10018b42:	f847 300b 	str.w	r3, [r7, fp]
10018b46:	f107 0704 	add.w	r7, r7, #4
10018b4a:	d8b4      	bhi.n	10018ab6 <__multiply+0x9a>
10018b4c:	e9dd e402 	ldrd	lr, r4, [sp, #8]
10018b50:	46d4      	mov	ip, sl
10018b52:	2c00      	cmp	r4, #0
10018b54:	dc02      	bgt.n	10018b5c <__multiply+0x140>
10018b56:	e005      	b.n	10018b64 <__multiply+0x148>
10018b58:	3c01      	subs	r4, #1
10018b5a:	d003      	beq.n	10018b64 <__multiply+0x148>
10018b5c:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
10018b60:	2b00      	cmp	r3, #0
10018b62:	d0f9      	beq.n	10018b58 <__multiply+0x13c>
10018b64:	4660      	mov	r0, ip
10018b66:	f8cc 4010 	str.w	r4, [ip, #16]
10018b6a:	b005      	add	sp, #20
10018b6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018b70:	4b03      	ldr	r3, [pc, #12]	@ (10018b80 <__multiply+0x164>)
10018b72:	4804      	ldr	r0, [pc, #16]	@ (10018b84 <__multiply+0x168>)
10018b74:	4662      	mov	r2, ip
10018b76:	f44f 71b1 	mov.w	r1, #354	@ 0x162
10018b7a:	f000 fbff 	bl	1001937c <__assert_func>
10018b7e:	bf00      	nop
10018b80:	1001c6fc 	.word	0x1001c6fc
10018b84:	1001c794 	.word	0x1001c794

10018b88 <__pow5mult>:
10018b88:	f012 0303 	ands.w	r3, r2, #3
10018b8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10018b90:	4614      	mov	r4, r2
10018b92:	4607      	mov	r7, r0
10018b94:	d12c      	bne.n	10018bf0 <__pow5mult+0x68>
10018b96:	460d      	mov	r5, r1
10018b98:	10a4      	asrs	r4, r4, #2
10018b9a:	d01c      	beq.n	10018bd6 <__pow5mult+0x4e>
10018b9c:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
10018b9e:	b386      	cbz	r6, 10018c02 <__pow5mult+0x7a>
10018ba0:	07e3      	lsls	r3, r4, #31
10018ba2:	f04f 0800 	mov.w	r8, #0
10018ba6:	d406      	bmi.n	10018bb6 <__pow5mult+0x2e>
10018ba8:	1064      	asrs	r4, r4, #1
10018baa:	d014      	beq.n	10018bd6 <__pow5mult+0x4e>
10018bac:	6830      	ldr	r0, [r6, #0]
10018bae:	b1a8      	cbz	r0, 10018bdc <__pow5mult+0x54>
10018bb0:	4606      	mov	r6, r0
10018bb2:	07e3      	lsls	r3, r4, #31
10018bb4:	d5f8      	bpl.n	10018ba8 <__pow5mult+0x20>
10018bb6:	4632      	mov	r2, r6
10018bb8:	4629      	mov	r1, r5
10018bba:	4638      	mov	r0, r7
10018bbc:	f7ff ff2e 	bl	10018a1c <__multiply>
10018bc0:	b135      	cbz	r5, 10018bd0 <__pow5mult+0x48>
10018bc2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10018bc4:	6869      	ldr	r1, [r5, #4]
10018bc6:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
10018bca:	602a      	str	r2, [r5, #0]
10018bcc:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
10018bd0:	1064      	asrs	r4, r4, #1
10018bd2:	4605      	mov	r5, r0
10018bd4:	d1ea      	bne.n	10018bac <__pow5mult+0x24>
10018bd6:	4628      	mov	r0, r5
10018bd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10018bdc:	4632      	mov	r2, r6
10018bde:	4631      	mov	r1, r6
10018be0:	4638      	mov	r0, r7
10018be2:	f7ff ff1b 	bl	10018a1c <__multiply>
10018be6:	6030      	str	r0, [r6, #0]
10018be8:	f8c0 8000 	str.w	r8, [r0]
10018bec:	4606      	mov	r6, r0
10018bee:	e7e0      	b.n	10018bb2 <__pow5mult+0x2a>
10018bf0:	3b01      	subs	r3, #1
10018bf2:	4a0f      	ldr	r2, [pc, #60]	@ (10018c30 <__pow5mult+0xa8>)
10018bf4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
10018bf8:	2300      	movs	r3, #0
10018bfa:	f7ff fe3f 	bl	1001887c <__multadd>
10018bfe:	4605      	mov	r5, r0
10018c00:	e7ca      	b.n	10018b98 <__pow5mult+0x10>
10018c02:	2101      	movs	r1, #1
10018c04:	4638      	mov	r0, r7
10018c06:	f7ff fe09 	bl	1001881c <_Balloc>
10018c0a:	4606      	mov	r6, r0
10018c0c:	b140      	cbz	r0, 10018c20 <__pow5mult+0x98>
10018c0e:	2301      	movs	r3, #1
10018c10:	f240 2271 	movw	r2, #625	@ 0x271
10018c14:	e9c0 3204 	strd	r3, r2, [r0, #16]
10018c18:	2300      	movs	r3, #0
10018c1a:	6438      	str	r0, [r7, #64]	@ 0x40
10018c1c:	6003      	str	r3, [r0, #0]
10018c1e:	e7bf      	b.n	10018ba0 <__pow5mult+0x18>
10018c20:	4b04      	ldr	r3, [pc, #16]	@ (10018c34 <__pow5mult+0xac>)
10018c22:	4805      	ldr	r0, [pc, #20]	@ (10018c38 <__pow5mult+0xb0>)
10018c24:	4632      	mov	r2, r6
10018c26:	f240 1145 	movw	r1, #325	@ 0x145
10018c2a:	f000 fba7 	bl	1001937c <__assert_func>
10018c2e:	bf00      	nop
10018c30:	1001c7f8 	.word	0x1001c7f8
10018c34:	1001c6fc 	.word	0x1001c6fc
10018c38:	1001c794 	.word	0x1001c794

10018c3c <__lshift>:
10018c3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10018c40:	460c      	mov	r4, r1
10018c42:	4690      	mov	r8, r2
10018c44:	6927      	ldr	r7, [r4, #16]
10018c46:	68a3      	ldr	r3, [r4, #8]
10018c48:	6849      	ldr	r1, [r1, #4]
10018c4a:	eb07 1762 	add.w	r7, r7, r2, asr #5
10018c4e:	1c7d      	adds	r5, r7, #1
10018c50:	429d      	cmp	r5, r3
10018c52:	4606      	mov	r6, r0
10018c54:	ea4f 1962 	mov.w	r9, r2, asr #5
10018c58:	dd04      	ble.n	10018c64 <__lshift+0x28>
10018c5a:	005b      	lsls	r3, r3, #1
10018c5c:	429d      	cmp	r5, r3
10018c5e:	f101 0101 	add.w	r1, r1, #1
10018c62:	dcfa      	bgt.n	10018c5a <__lshift+0x1e>
10018c64:	4630      	mov	r0, r6
10018c66:	f7ff fdd9 	bl	1001881c <_Balloc>
10018c6a:	4684      	mov	ip, r0
10018c6c:	2800      	cmp	r0, #0
10018c6e:	d051      	beq.n	10018d14 <__lshift+0xd8>
10018c70:	f1b9 0f00 	cmp.w	r9, #0
10018c74:	f100 0014 	add.w	r0, r0, #20
10018c78:	dd0e      	ble.n	10018c98 <__lshift+0x5c>
10018c7a:	f109 0205 	add.w	r2, r9, #5
10018c7e:	ea4f 0e82 	mov.w	lr, r2, lsl #2
10018c82:	4603      	mov	r3, r0
10018c84:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
10018c88:	2100      	movs	r1, #0
10018c8a:	f843 1b04 	str.w	r1, [r3], #4
10018c8e:	4293      	cmp	r3, r2
10018c90:	d1fb      	bne.n	10018c8a <__lshift+0x4e>
10018c92:	f1ae 0314 	sub.w	r3, lr, #20
10018c96:	4418      	add	r0, r3
10018c98:	6921      	ldr	r1, [r4, #16]
10018c9a:	f104 0314 	add.w	r3, r4, #20
10018c9e:	f018 081f 	ands.w	r8, r8, #31
10018ca2:	eb03 0181 	add.w	r1, r3, r1, lsl #2
10018ca6:	d02d      	beq.n	10018d04 <__lshift+0xc8>
10018ca8:	f1c8 0920 	rsb	r9, r8, #32
10018cac:	4686      	mov	lr, r0
10018cae:	f04f 0a00 	mov.w	sl, #0
10018cb2:	681a      	ldr	r2, [r3, #0]
10018cb4:	fa02 f208 	lsl.w	r2, r2, r8
10018cb8:	ea42 020a 	orr.w	r2, r2, sl
10018cbc:	f84e 2b04 	str.w	r2, [lr], #4
10018cc0:	f853 2b04 	ldr.w	r2, [r3], #4
10018cc4:	4299      	cmp	r1, r3
10018cc6:	fa22 fa09 	lsr.w	sl, r2, r9
10018cca:	d8f2      	bhi.n	10018cb2 <__lshift+0x76>
10018ccc:	1b0b      	subs	r3, r1, r4
10018cce:	3b15      	subs	r3, #21
10018cd0:	f023 0303 	bic.w	r3, r3, #3
10018cd4:	3304      	adds	r3, #4
10018cd6:	f104 0215 	add.w	r2, r4, #21
10018cda:	4291      	cmp	r1, r2
10018cdc:	bf38      	it	cc
10018cde:	2304      	movcc	r3, #4
10018ce0:	f840 a003 	str.w	sl, [r0, r3]
10018ce4:	f1ba 0f00 	cmp.w	sl, #0
10018ce8:	d100      	bne.n	10018cec <__lshift+0xb0>
10018cea:	463d      	mov	r5, r7
10018cec:	6c73      	ldr	r3, [r6, #68]	@ 0x44
10018cee:	6862      	ldr	r2, [r4, #4]
10018cf0:	f8cc 5010 	str.w	r5, [ip, #16]
10018cf4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10018cf8:	6021      	str	r1, [r4, #0]
10018cfa:	4660      	mov	r0, ip
10018cfc:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
10018d00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10018d04:	3804      	subs	r0, #4
10018d06:	f853 2b04 	ldr.w	r2, [r3], #4
10018d0a:	f840 2f04 	str.w	r2, [r0, #4]!
10018d0e:	4299      	cmp	r1, r3
10018d10:	d8f9      	bhi.n	10018d06 <__lshift+0xca>
10018d12:	e7ea      	b.n	10018cea <__lshift+0xae>
10018d14:	4b03      	ldr	r3, [pc, #12]	@ (10018d24 <__lshift+0xe8>)
10018d16:	4804      	ldr	r0, [pc, #16]	@ (10018d28 <__lshift+0xec>)
10018d18:	4662      	mov	r2, ip
10018d1a:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
10018d1e:	f000 fb2d 	bl	1001937c <__assert_func>
10018d22:	bf00      	nop
10018d24:	1001c6fc 	.word	0x1001c6fc
10018d28:	1001c794 	.word	0x1001c794

10018d2c <__mcmp>:
10018d2c:	690b      	ldr	r3, [r1, #16]
10018d2e:	4684      	mov	ip, r0
10018d30:	6900      	ldr	r0, [r0, #16]
10018d32:	1ac0      	subs	r0, r0, r3
10018d34:	d116      	bne.n	10018d64 <__mcmp+0x38>
10018d36:	f10c 0c14 	add.w	ip, ip, #20
10018d3a:	3114      	adds	r1, #20
10018d3c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
10018d40:	b410      	push	{r4}
10018d42:	eb01 0383 	add.w	r3, r1, r3, lsl #2
10018d46:	e001      	b.n	10018d4c <__mcmp+0x20>
10018d48:	4594      	cmp	ip, r2
10018d4a:	d208      	bcs.n	10018d5e <__mcmp+0x32>
10018d4c:	f852 4d04 	ldr.w	r4, [r2, #-4]!
10018d50:	f853 1d04 	ldr.w	r1, [r3, #-4]!
10018d54:	428c      	cmp	r4, r1
10018d56:	d0f7      	beq.n	10018d48 <__mcmp+0x1c>
10018d58:	d205      	bcs.n	10018d66 <__mcmp+0x3a>
10018d5a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10018d5e:	f85d 4b04 	ldr.w	r4, [sp], #4
10018d62:	4770      	bx	lr
10018d64:	4770      	bx	lr
10018d66:	2001      	movs	r0, #1
10018d68:	f85d 4b04 	ldr.w	r4, [sp], #4
10018d6c:	4770      	bx	lr
10018d6e:	bf00      	nop

10018d70 <__mdiff>:
10018d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10018d74:	6913      	ldr	r3, [r2, #16]
10018d76:	690f      	ldr	r7, [r1, #16]
10018d78:	1aff      	subs	r7, r7, r3
10018d7a:	2f00      	cmp	r7, #0
10018d7c:	b083      	sub	sp, #12
10018d7e:	460d      	mov	r5, r1
10018d80:	4690      	mov	r8, r2
10018d82:	d115      	bne.n	10018db0 <__mdiff+0x40>
10018d84:	f101 0614 	add.w	r6, r1, #20
10018d88:	3214      	adds	r2, #20
10018d8a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
10018d8e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
10018d92:	e001      	b.n	10018d98 <__mdiff+0x28>
10018d94:	429e      	cmp	r6, r3
10018d96:	d276      	bcs.n	10018e86 <__mdiff+0x116>
10018d98:	f853 4d04 	ldr.w	r4, [r3, #-4]!
10018d9c:	f852 1d04 	ldr.w	r1, [r2, #-4]!
10018da0:	428c      	cmp	r4, r1
10018da2:	d0f7      	beq.n	10018d94 <__mdiff+0x24>
10018da4:	d206      	bcs.n	10018db4 <__mdiff+0x44>
10018da6:	462b      	mov	r3, r5
10018da8:	2701      	movs	r7, #1
10018daa:	4645      	mov	r5, r8
10018dac:	4698      	mov	r8, r3
10018dae:	e001      	b.n	10018db4 <__mdiff+0x44>
10018db0:	dbf9      	blt.n	10018da6 <__mdiff+0x36>
10018db2:	2700      	movs	r7, #0
10018db4:	6869      	ldr	r1, [r5, #4]
10018db6:	f7ff fd31 	bl	1001881c <_Balloc>
10018dba:	4681      	mov	r9, r0
10018dbc:	2800      	cmp	r0, #0
10018dbe:	d076      	beq.n	10018eae <__mdiff+0x13e>
10018dc0:	692e      	ldr	r6, [r5, #16]
10018dc2:	60c7      	str	r7, [r0, #12]
10018dc4:	f8d8 0010 	ldr.w	r0, [r8, #16]
10018dc8:	f105 0b14 	add.w	fp, r5, #20
10018dcc:	f108 0e14 	add.w	lr, r8, #20
10018dd0:	f109 0a14 	add.w	sl, r9, #20
10018dd4:	f105 0110 	add.w	r1, r5, #16
10018dd8:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
10018ddc:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
10018de0:	4657      	mov	r7, sl
10018de2:	f04f 0c00 	mov.w	ip, #0
10018de6:	f8cd b004 	str.w	fp, [sp, #4]
10018dea:	f85e 4b04 	ldr.w	r4, [lr], #4
10018dee:	f851 5f04 	ldr.w	r5, [r1, #4]!
10018df2:	fa1f fb84 	uxth.w	fp, r4
10018df6:	b2ab      	uxth	r3, r5
10018df8:	eba3 030b 	sub.w	r3, r3, fp
10018dfc:	0c24      	lsrs	r4, r4, #16
10018dfe:	4463      	add	r3, ip
10018e00:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
10018e04:	eb04 4423 	add.w	r4, r4, r3, asr #16
10018e08:	b29b      	uxth	r3, r3
10018e0a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10018e0e:	4570      	cmp	r0, lr
10018e10:	f847 3b04 	str.w	r3, [r7], #4
10018e14:	ea4f 4c24 	mov.w	ip, r4, asr #16
10018e18:	d8e7      	bhi.n	10018dea <__mdiff+0x7a>
10018e1a:	eba0 0108 	sub.w	r1, r0, r8
10018e1e:	3915      	subs	r1, #21
10018e20:	0889      	lsrs	r1, r1, #2
10018e22:	1c4c      	adds	r4, r1, #1
10018e24:	f8dd b004 	ldr.w	fp, [sp, #4]
10018e28:	f108 0815 	add.w	r8, r8, #21
10018e2c:	00a4      	lsls	r4, r4, #2
10018e2e:	4540      	cmp	r0, r8
10018e30:	bf38      	it	cc
10018e32:	2404      	movcc	r4, #4
10018e34:	eb0b 0504 	add.w	r5, fp, r4
10018e38:	42aa      	cmp	r2, r5
10018e3a:	4454      	add	r4, sl
10018e3c:	d930      	bls.n	10018ea0 <__mdiff+0x130>
10018e3e:	4627      	mov	r7, r4
10018e40:	4628      	mov	r0, r5
10018e42:	f850 3b04 	ldr.w	r3, [r0], #4
10018e46:	fa1c fe83 	uxtah	lr, ip, r3
10018e4a:	0c19      	lsrs	r1, r3, #16
10018e4c:	4463      	add	r3, ip
10018e4e:	eb01 412e 	add.w	r1, r1, lr, asr #16
10018e52:	b29b      	uxth	r3, r3
10018e54:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10018e58:	4282      	cmp	r2, r0
10018e5a:	f847 3b04 	str.w	r3, [r7], #4
10018e5e:	ea4f 4c21 	mov.w	ip, r1, asr #16
10018e62:	d8ee      	bhi.n	10018e42 <__mdiff+0xd2>
10018e64:	3a01      	subs	r2, #1
10018e66:	1b52      	subs	r2, r2, r5
10018e68:	f022 0203 	bic.w	r2, r2, #3
10018e6c:	4414      	add	r4, r2
10018e6e:	b923      	cbnz	r3, 10018e7a <__mdiff+0x10a>
10018e70:	f854 3d04 	ldr.w	r3, [r4, #-4]!
10018e74:	3e01      	subs	r6, #1
10018e76:	2b00      	cmp	r3, #0
10018e78:	d0fa      	beq.n	10018e70 <__mdiff+0x100>
10018e7a:	4648      	mov	r0, r9
10018e7c:	f8c9 6010 	str.w	r6, [r9, #16]
10018e80:	b003      	add	sp, #12
10018e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018e86:	2100      	movs	r1, #0
10018e88:	f7ff fcc8 	bl	1001881c <_Balloc>
10018e8c:	4681      	mov	r9, r0
10018e8e:	b1a8      	cbz	r0, 10018ebc <__mdiff+0x14c>
10018e90:	2201      	movs	r2, #1
10018e92:	2300      	movs	r3, #0
10018e94:	e9c0 2304 	strd	r2, r3, [r0, #16]
10018e98:	4648      	mov	r0, r9
10018e9a:	b003      	add	sp, #12
10018e9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10018ea0:	0089      	lsls	r1, r1, #2
10018ea2:	4540      	cmp	r0, r8
10018ea4:	bf38      	it	cc
10018ea6:	2100      	movcc	r1, #0
10018ea8:	eb0a 0401 	add.w	r4, sl, r1
10018eac:	e7df      	b.n	10018e6e <__mdiff+0xfe>
10018eae:	4b07      	ldr	r3, [pc, #28]	@ (10018ecc <__mdiff+0x15c>)
10018eb0:	4807      	ldr	r0, [pc, #28]	@ (10018ed0 <__mdiff+0x160>)
10018eb2:	464a      	mov	r2, r9
10018eb4:	f240 2145 	movw	r1, #581	@ 0x245
10018eb8:	f000 fa60 	bl	1001937c <__assert_func>
10018ebc:	4b03      	ldr	r3, [pc, #12]	@ (10018ecc <__mdiff+0x15c>)
10018ebe:	4804      	ldr	r0, [pc, #16]	@ (10018ed0 <__mdiff+0x160>)
10018ec0:	464a      	mov	r2, r9
10018ec2:	f240 2137 	movw	r1, #567	@ 0x237
10018ec6:	f000 fa59 	bl	1001937c <__assert_func>
10018eca:	bf00      	nop
10018ecc:	1001c6fc 	.word	0x1001c6fc
10018ed0:	1001c794 	.word	0x1001c794

10018ed4 <__d2b>:
10018ed4:	b5f0      	push	{r4, r5, r6, r7, lr}
10018ed6:	2101      	movs	r1, #1
10018ed8:	b083      	sub	sp, #12
10018eda:	4616      	mov	r6, r2
10018edc:	461f      	mov	r7, r3
10018ede:	f7ff fc9d 	bl	1001881c <_Balloc>
10018ee2:	4605      	mov	r5, r0
10018ee4:	2800      	cmp	r0, #0
10018ee6:	d047      	beq.n	10018f78 <__d2b+0xa4>
10018ee8:	f3c7 540a 	ubfx	r4, r7, #20, #11
10018eec:	f3c7 0313 	ubfx	r3, r7, #0, #20
10018ef0:	b10c      	cbz	r4, 10018ef6 <__d2b+0x22>
10018ef2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
10018ef6:	2e00      	cmp	r6, #0
10018ef8:	9301      	str	r3, [sp, #4]
10018efa:	d114      	bne.n	10018f26 <__d2b+0x52>
10018efc:	a801      	add	r0, sp, #4
10018efe:	f7ff fd2f 	bl	10018960 <__lo0bits>
10018f02:	9b01      	ldr	r3, [sp, #4]
10018f04:	616b      	str	r3, [r5, #20]
10018f06:	2201      	movs	r2, #1
10018f08:	3020      	adds	r0, #32
10018f0a:	612a      	str	r2, [r5, #16]
10018f0c:	b314      	cbz	r4, 10018f54 <__d2b+0x80>
10018f0e:	9b08      	ldr	r3, [sp, #32]
10018f10:	f2a4 4433 	subw	r4, r4, #1075	@ 0x433
10018f14:	4404      	add	r4, r0
10018f16:	601c      	str	r4, [r3, #0]
10018f18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10018f1a:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
10018f1e:	6018      	str	r0, [r3, #0]
10018f20:	4628      	mov	r0, r5
10018f22:	b003      	add	sp, #12
10018f24:	bdf0      	pop	{r4, r5, r6, r7, pc}
10018f26:	4668      	mov	r0, sp
10018f28:	9600      	str	r6, [sp, #0]
10018f2a:	f7ff fd19 	bl	10018960 <__lo0bits>
10018f2e:	9b01      	ldr	r3, [sp, #4]
10018f30:	b300      	cbz	r0, 10018f74 <__d2b+0xa0>
10018f32:	9900      	ldr	r1, [sp, #0]
10018f34:	f1c0 0220 	rsb	r2, r0, #32
10018f38:	fa03 f202 	lsl.w	r2, r3, r2
10018f3c:	40c3      	lsrs	r3, r0
10018f3e:	9301      	str	r3, [sp, #4]
10018f40:	430a      	orrs	r2, r1
10018f42:	2b00      	cmp	r3, #0
10018f44:	e9c5 2305 	strd	r2, r3, [r5, #20]
10018f48:	bf0c      	ite	eq
10018f4a:	2201      	moveq	r2, #1
10018f4c:	2202      	movne	r2, #2
10018f4e:	612a      	str	r2, [r5, #16]
10018f50:	2c00      	cmp	r4, #0
10018f52:	d1dc      	bne.n	10018f0e <__d2b+0x3a>
10018f54:	eb05 0182 	add.w	r1, r5, r2, lsl #2
10018f58:	f2a0 4332 	subw	r3, r0, #1074	@ 0x432
10018f5c:	6908      	ldr	r0, [r1, #16]
10018f5e:	9908      	ldr	r1, [sp, #32]
10018f60:	600b      	str	r3, [r1, #0]
10018f62:	f7ff fcdb 	bl	1001891c <__hi0bits>
10018f66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10018f68:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
10018f6c:	6018      	str	r0, [r3, #0]
10018f6e:	4628      	mov	r0, r5
10018f70:	b003      	add	sp, #12
10018f72:	bdf0      	pop	{r4, r5, r6, r7, pc}
10018f74:	9a00      	ldr	r2, [sp, #0]
10018f76:	e7e4      	b.n	10018f42 <__d2b+0x6e>
10018f78:	4b03      	ldr	r3, [pc, #12]	@ (10018f88 <__d2b+0xb4>)
10018f7a:	4804      	ldr	r0, [pc, #16]	@ (10018f8c <__d2b+0xb8>)
10018f7c:	462a      	mov	r2, r5
10018f7e:	f240 310f 	movw	r1, #783	@ 0x30f
10018f82:	f000 f9fb 	bl	1001937c <__assert_func>
10018f86:	bf00      	nop
10018f88:	1001c6fc 	.word	0x1001c6fc
10018f8c:	1001c794 	.word	0x1001c794

10018f90 <__sread>:
10018f90:	b510      	push	{r4, lr}
10018f92:	460c      	mov	r4, r1
10018f94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10018f98:	f000 f8e0 	bl	1001915c <_read_r>
10018f9c:	2800      	cmp	r0, #0
10018f9e:	db03      	blt.n	10018fa8 <__sread+0x18>
10018fa0:	6d23      	ldr	r3, [r4, #80]	@ 0x50
10018fa2:	4403      	add	r3, r0
10018fa4:	6523      	str	r3, [r4, #80]	@ 0x50
10018fa6:	bd10      	pop	{r4, pc}
10018fa8:	89a3      	ldrh	r3, [r4, #12]
10018faa:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10018fae:	81a3      	strh	r3, [r4, #12]
10018fb0:	bd10      	pop	{r4, pc}
10018fb2:	bf00      	nop

10018fb4 <__swrite>:
10018fb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10018fb8:	460c      	mov	r4, r1
10018fba:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10018fbe:	461f      	mov	r7, r3
10018fc0:	05cb      	lsls	r3, r1, #23
10018fc2:	4605      	mov	r5, r0
10018fc4:	4616      	mov	r6, r2
10018fc6:	d40b      	bmi.n	10018fe0 <__swrite+0x2c>
10018fc8:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
10018fcc:	81a1      	strh	r1, [r4, #12]
10018fce:	463b      	mov	r3, r7
10018fd0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10018fd4:	4632      	mov	r2, r6
10018fd6:	4628      	mov	r0, r5
10018fd8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10018fdc:	f000 b8d4 	b.w	10019188 <_write_r>
10018fe0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10018fe4:	2302      	movs	r3, #2
10018fe6:	2200      	movs	r2, #0
10018fe8:	f000 f8a2 	bl	10019130 <_lseek_r>
10018fec:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
10018ff0:	e7ea      	b.n	10018fc8 <__swrite+0x14>
10018ff2:	bf00      	nop

10018ff4 <__sseek>:
10018ff4:	b510      	push	{r4, lr}
10018ff6:	460c      	mov	r4, r1
10018ff8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10018ffc:	f000 f898 	bl	10019130 <_lseek_r>
10019000:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10019004:	1c42      	adds	r2, r0, #1
10019006:	bf0e      	itee	eq
10019008:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
1001900c:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
10019010:	6520      	strne	r0, [r4, #80]	@ 0x50
10019012:	81a3      	strh	r3, [r4, #12]
10019014:	bd10      	pop	{r4, pc}
10019016:	bf00      	nop

10019018 <__sclose>:
10019018:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
1001901c:	f000 b864 	b.w	100190e8 <_close_r>

10019020 <__ascii_wctomb>:
10019020:	b149      	cbz	r1, 10019036 <__ascii_wctomb+0x16>
10019022:	2aff      	cmp	r2, #255	@ 0xff
10019024:	d802      	bhi.n	1001902c <__ascii_wctomb+0xc>
10019026:	700a      	strb	r2, [r1, #0]
10019028:	2001      	movs	r0, #1
1001902a:	4770      	bx	lr
1001902c:	238a      	movs	r3, #138	@ 0x8a
1001902e:	6003      	str	r3, [r0, #0]
10019030:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10019034:	4770      	bx	lr
10019036:	4608      	mov	r0, r1
10019038:	4770      	bx	lr
1001903a:	bf00      	nop

1001903c <__swbuf_r>:
1001903c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001903e:	460d      	mov	r5, r1
10019040:	4614      	mov	r4, r2
10019042:	4606      	mov	r6, r0
10019044:	b110      	cbz	r0, 1001904c <__swbuf_r+0x10>
10019046:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10019048:	2b00      	cmp	r3, #0
1001904a:	d04a      	beq.n	100190e2 <__swbuf_r+0xa6>
1001904c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10019050:	69a3      	ldr	r3, [r4, #24]
10019052:	60a3      	str	r3, [r4, #8]
10019054:	0710      	lsls	r0, r2, #28
10019056:	d51b      	bpl.n	10019090 <__swbuf_r+0x54>
10019058:	6923      	ldr	r3, [r4, #16]
1001905a:	b1cb      	cbz	r3, 10019090 <__swbuf_r+0x54>
1001905c:	b2ed      	uxtb	r5, r5
1001905e:	0491      	lsls	r1, r2, #18
10019060:	462f      	mov	r7, r5
10019062:	d521      	bpl.n	100190a8 <__swbuf_r+0x6c>
10019064:	6822      	ldr	r2, [r4, #0]
10019066:	6961      	ldr	r1, [r4, #20]
10019068:	1ad3      	subs	r3, r2, r3
1001906a:	4299      	cmp	r1, r3
1001906c:	dd28      	ble.n	100190c0 <__swbuf_r+0x84>
1001906e:	3301      	adds	r3, #1
10019070:	68a1      	ldr	r1, [r4, #8]
10019072:	3901      	subs	r1, #1
10019074:	60a1      	str	r1, [r4, #8]
10019076:	1c51      	adds	r1, r2, #1
10019078:	6021      	str	r1, [r4, #0]
1001907a:	7015      	strb	r5, [r2, #0]
1001907c:	6962      	ldr	r2, [r4, #20]
1001907e:	429a      	cmp	r2, r3
10019080:	d026      	beq.n	100190d0 <__swbuf_r+0x94>
10019082:	89a3      	ldrh	r3, [r4, #12]
10019084:	07db      	lsls	r3, r3, #31
10019086:	d501      	bpl.n	1001908c <__swbuf_r+0x50>
10019088:	2d0a      	cmp	r5, #10
1001908a:	d021      	beq.n	100190d0 <__swbuf_r+0x94>
1001908c:	4638      	mov	r0, r7
1001908e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10019090:	4621      	mov	r1, r4
10019092:	4630      	mov	r0, r6
10019094:	f7fc f836 	bl	10015104 <__swsetup_r>
10019098:	bb00      	cbnz	r0, 100190dc <__swbuf_r+0xa0>
1001909a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
1001909e:	6923      	ldr	r3, [r4, #16]
100190a0:	b2ed      	uxtb	r5, r5
100190a2:	0491      	lsls	r1, r2, #18
100190a4:	462f      	mov	r7, r5
100190a6:	d4dd      	bmi.n	10019064 <__swbuf_r+0x28>
100190a8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
100190ac:	81a2      	strh	r2, [r4, #12]
100190ae:	6e62      	ldr	r2, [r4, #100]	@ 0x64
100190b0:	6961      	ldr	r1, [r4, #20]
100190b2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
100190b6:	6662      	str	r2, [r4, #100]	@ 0x64
100190b8:	6822      	ldr	r2, [r4, #0]
100190ba:	1ad3      	subs	r3, r2, r3
100190bc:	4299      	cmp	r1, r3
100190be:	dcd6      	bgt.n	1001906e <__swbuf_r+0x32>
100190c0:	4621      	mov	r1, r4
100190c2:	4630      	mov	r0, r6
100190c4:	f7fb fd62 	bl	10014b8c <_fflush_r>
100190c8:	b940      	cbnz	r0, 100190dc <__swbuf_r+0xa0>
100190ca:	6822      	ldr	r2, [r4, #0]
100190cc:	2301      	movs	r3, #1
100190ce:	e7cf      	b.n	10019070 <__swbuf_r+0x34>
100190d0:	4621      	mov	r1, r4
100190d2:	4630      	mov	r0, r6
100190d4:	f7fb fd5a 	bl	10014b8c <_fflush_r>
100190d8:	2800      	cmp	r0, #0
100190da:	d0d7      	beq.n	1001908c <__swbuf_r+0x50>
100190dc:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
100190e0:	e7d4      	b.n	1001908c <__swbuf_r+0x50>
100190e2:	f7fb fe41 	bl	10014d68 <__sinit>
100190e6:	e7b1      	b.n	1001904c <__swbuf_r+0x10>

100190e8 <_close_r>:
100190e8:	b538      	push	{r3, r4, r5, lr}
100190ea:	4d07      	ldr	r5, [pc, #28]	@ (10019108 <_close_r+0x20>)
100190ec:	2200      	movs	r2, #0
100190ee:	4604      	mov	r4, r0
100190f0:	4608      	mov	r0, r1
100190f2:	602a      	str	r2, [r5, #0]
100190f4:	f7f6 fd24 	bl	1000fb40 <_close>
100190f8:	1c43      	adds	r3, r0, #1
100190fa:	d000      	beq.n	100190fe <_close_r+0x16>
100190fc:	bd38      	pop	{r3, r4, r5, pc}
100190fe:	682b      	ldr	r3, [r5, #0]
10019100:	2b00      	cmp	r3, #0
10019102:	d0fb      	beq.n	100190fc <_close_r+0x14>
10019104:	6023      	str	r3, [r4, #0]
10019106:	bd38      	pop	{r3, r4, r5, pc}
10019108:	200015ac 	.word	0x200015ac

1001910c <_isatty_r>:
1001910c:	b538      	push	{r3, r4, r5, lr}
1001910e:	4d07      	ldr	r5, [pc, #28]	@ (1001912c <_isatty_r+0x20>)
10019110:	2200      	movs	r2, #0
10019112:	4604      	mov	r4, r0
10019114:	4608      	mov	r0, r1
10019116:	602a      	str	r2, [r5, #0]
10019118:	f7f6 fd16 	bl	1000fb48 <_isatty>
1001911c:	1c43      	adds	r3, r0, #1
1001911e:	d000      	beq.n	10019122 <_isatty_r+0x16>
10019120:	bd38      	pop	{r3, r4, r5, pc}
10019122:	682b      	ldr	r3, [r5, #0]
10019124:	2b00      	cmp	r3, #0
10019126:	d0fb      	beq.n	10019120 <_isatty_r+0x14>
10019128:	6023      	str	r3, [r4, #0]
1001912a:	bd38      	pop	{r3, r4, r5, pc}
1001912c:	200015ac 	.word	0x200015ac

10019130 <_lseek_r>:
10019130:	b538      	push	{r3, r4, r5, lr}
10019132:	460c      	mov	r4, r1
10019134:	4d08      	ldr	r5, [pc, #32]	@ (10019158 <_lseek_r+0x28>)
10019136:	4684      	mov	ip, r0
10019138:	4611      	mov	r1, r2
1001913a:	4620      	mov	r0, r4
1001913c:	461a      	mov	r2, r3
1001913e:	2300      	movs	r3, #0
10019140:	602b      	str	r3, [r5, #0]
10019142:	4664      	mov	r4, ip
10019144:	f7f6 fd04 	bl	1000fb50 <_lseek>
10019148:	1c43      	adds	r3, r0, #1
1001914a:	d000      	beq.n	1001914e <_lseek_r+0x1e>
1001914c:	bd38      	pop	{r3, r4, r5, pc}
1001914e:	682b      	ldr	r3, [r5, #0]
10019150:	2b00      	cmp	r3, #0
10019152:	d0fb      	beq.n	1001914c <_lseek_r+0x1c>
10019154:	6023      	str	r3, [r4, #0]
10019156:	bd38      	pop	{r3, r4, r5, pc}
10019158:	200015ac 	.word	0x200015ac

1001915c <_read_r>:
1001915c:	b538      	push	{r3, r4, r5, lr}
1001915e:	460c      	mov	r4, r1
10019160:	4d08      	ldr	r5, [pc, #32]	@ (10019184 <_read_r+0x28>)
10019162:	4684      	mov	ip, r0
10019164:	4611      	mov	r1, r2
10019166:	4620      	mov	r0, r4
10019168:	461a      	mov	r2, r3
1001916a:	2300      	movs	r3, #0
1001916c:	602b      	str	r3, [r5, #0]
1001916e:	4664      	mov	r4, ip
10019170:	f7f6 fcf6 	bl	1000fb60 <_read>
10019174:	1c43      	adds	r3, r0, #1
10019176:	d000      	beq.n	1001917a <_read_r+0x1e>
10019178:	bd38      	pop	{r3, r4, r5, pc}
1001917a:	682b      	ldr	r3, [r5, #0]
1001917c:	2b00      	cmp	r3, #0
1001917e:	d0fb      	beq.n	10019178 <_read_r+0x1c>
10019180:	6023      	str	r3, [r4, #0]
10019182:	bd38      	pop	{r3, r4, r5, pc}
10019184:	200015ac 	.word	0x200015ac

10019188 <_write_r>:
10019188:	b538      	push	{r3, r4, r5, lr}
1001918a:	460c      	mov	r4, r1
1001918c:	4d08      	ldr	r5, [pc, #32]	@ (100191b0 <_write_r+0x28>)
1001918e:	4684      	mov	ip, r0
10019190:	4611      	mov	r1, r2
10019192:	4620      	mov	r0, r4
10019194:	461a      	mov	r2, r3
10019196:	2300      	movs	r3, #0
10019198:	602b      	str	r3, [r5, #0]
1001919a:	4664      	mov	r4, ip
1001919c:	f7f6 fd08 	bl	1000fbb0 <_write>
100191a0:	1c43      	adds	r3, r0, #1
100191a2:	d000      	beq.n	100191a6 <_write_r+0x1e>
100191a4:	bd38      	pop	{r3, r4, r5, pc}
100191a6:	682b      	ldr	r3, [r5, #0]
100191a8:	2b00      	cmp	r3, #0
100191aa:	d0fb      	beq.n	100191a4 <_write_r+0x1c>
100191ac:	6023      	str	r3, [r4, #0]
100191ae:	bd38      	pop	{r3, r4, r5, pc}
100191b0:	200015ac 	.word	0x200015ac

100191b4 <__libc_fini_array>:
100191b4:	b538      	push	{r3, r4, r5, lr}
100191b6:	4d07      	ldr	r5, [pc, #28]	@ (100191d4 <__libc_fini_array+0x20>)
100191b8:	4c07      	ldr	r4, [pc, #28]	@ (100191d8 <__libc_fini_array+0x24>)
100191ba:	1b2c      	subs	r4, r5, r4
100191bc:	10a4      	asrs	r4, r4, #2
100191be:	d005      	beq.n	100191cc <__libc_fini_array+0x18>
100191c0:	3c01      	subs	r4, #1
100191c2:	f855 3d04 	ldr.w	r3, [r5, #-4]!
100191c6:	4798      	blx	r3
100191c8:	2c00      	cmp	r4, #0
100191ca:	d1f9      	bne.n	100191c0 <__libc_fini_array+0xc>
100191cc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100191d0:	f003 bbb8 	b.w	1001c944 <_fini>
100191d4:	200006f8 	.word	0x200006f8
100191d8:	200006f4 	.word	0x200006f4

100191dc <_wcsnrtombs_l>:
100191dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100191e0:	b08b      	sub	sp, #44	@ 0x2c
100191e2:	e9dd 7a15 	ldrd	r7, sl, [sp, #84]	@ 0x54
100191e6:	4686      	mov	lr, r0
100191e8:	461e      	mov	r6, r3
100191ea:	2f00      	cmp	r7, #0
100191ec:	d05a      	beq.n	100192a4 <_wcsnrtombs_l+0xc8>
100191ee:	6815      	ldr	r5, [r2, #0]
100191f0:	2900      	cmp	r1, #0
100191f2:	d05c      	beq.n	100192ae <_wcsnrtombs_l+0xd2>
100191f4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
100191f6:	2b00      	cmp	r3, #0
100191f8:	d069      	beq.n	100192ce <_wcsnrtombs_l+0xf2>
100191fa:	1e74      	subs	r4, r6, #1
100191fc:	b34e      	cbz	r6, 10019252 <_wcsnrtombs_l+0x76>
100191fe:	3d04      	subs	r5, #4
10019200:	e9cd 5e01 	strd	r5, lr, [sp, #4]
10019204:	f8dd b050 	ldr.w	fp, [sp, #80]	@ 0x50
10019208:	9104      	str	r1, [sp, #16]
1001920a:	2600      	movs	r6, #0
1001920c:	9103      	str	r1, [sp, #12]
1001920e:	9205      	str	r2, [sp, #20]
10019210:	e00b      	b.n	1001922a <_wcsnrtombs_l+0x4e>
10019212:	9b03      	ldr	r3, [sp, #12]
10019214:	bb0b      	cbnz	r3, 1001925a <_wcsnrtombs_l+0x7e>
10019216:	9b01      	ldr	r3, [sp, #4]
10019218:	6818      	ldr	r0, [r3, #0]
1001921a:	2800      	cmp	r0, #0
1001921c:	d036      	beq.n	1001928c <_wcsnrtombs_l+0xb0>
1001921e:	45dc      	cmp	ip, fp
10019220:	d257      	bcs.n	100192d2 <_wcsnrtombs_l+0xf6>
10019222:	3c01      	subs	r4, #1
10019224:	1c63      	adds	r3, r4, #1
10019226:	4666      	mov	r6, ip
10019228:	d013      	beq.n	10019252 <_wcsnrtombs_l+0x76>
1001922a:	9b01      	ldr	r3, [sp, #4]
1001922c:	9802      	ldr	r0, [sp, #8]
1001922e:	f853 2f04 	ldr.w	r2, [r3, #4]!
10019232:	9301      	str	r3, [sp, #4]
10019234:	f8da 50e0 	ldr.w	r5, [sl, #224]	@ 0xe0
10019238:	463b      	mov	r3, r7
1001923a:	a907      	add	r1, sp, #28
1001923c:	e9d7 9800 	ldrd	r9, r8, [r7]
10019240:	47a8      	blx	r5
10019242:	1c42      	adds	r2, r0, #1
10019244:	d037      	beq.n	100192b6 <_wcsnrtombs_l+0xda>
10019246:	eb00 0c06 	add.w	ip, r0, r6
1001924a:	45dc      	cmp	ip, fp
1001924c:	d9e1      	bls.n	10019212 <_wcsnrtombs_l+0x36>
1001924e:	e9c7 9800 	strd	r9, r8, [r7]
10019252:	4630      	mov	r0, r6
10019254:	b00b      	add	sp, #44	@ 0x2c
10019256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001925a:	2800      	cmp	r0, #0
1001925c:	dd0e      	ble.n	1001927c <_wcsnrtombs_l+0xa0>
1001925e:	9b04      	ldr	r3, [sp, #16]
10019260:	9d01      	ldr	r5, [sp, #4]
10019262:	4418      	add	r0, r3
10019264:	1e5a      	subs	r2, r3, #1
10019266:	a907      	add	r1, sp, #28
10019268:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
1001926c:	f811 3b01 	ldrb.w	r3, [r1], #1
10019270:	f802 3f01 	strb.w	r3, [r2, #1]!
10019274:	4596      	cmp	lr, r2
10019276:	d1f9      	bne.n	1001926c <_wcsnrtombs_l+0x90>
10019278:	9501      	str	r5, [sp, #4]
1001927a:	9004      	str	r0, [sp, #16]
1001927c:	9b05      	ldr	r3, [sp, #20]
1001927e:	681a      	ldr	r2, [r3, #0]
10019280:	3204      	adds	r2, #4
10019282:	601a      	str	r2, [r3, #0]
10019284:	9b01      	ldr	r3, [sp, #4]
10019286:	6818      	ldr	r0, [r3, #0]
10019288:	2800      	cmp	r0, #0
1001928a:	d1c8      	bne.n	1001921e <_wcsnrtombs_l+0x42>
1001928c:	9903      	ldr	r1, [sp, #12]
1001928e:	9a05      	ldr	r2, [sp, #20]
10019290:	b101      	cbz	r1, 10019294 <_wcsnrtombs_l+0xb8>
10019292:	6010      	str	r0, [r2, #0]
10019294:	f10c 36ff 	add.w	r6, ip, #4294967295	@ 0xffffffff
10019298:	2200      	movs	r2, #0
1001929a:	4630      	mov	r0, r6
1001929c:	603a      	str	r2, [r7, #0]
1001929e:	b00b      	add	sp, #44	@ 0x2c
100192a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100192a4:	6815      	ldr	r5, [r2, #0]
100192a6:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
100192aa:	2900      	cmp	r1, #0
100192ac:	d1a2      	bne.n	100191f4 <_wcsnrtombs_l+0x18>
100192ae:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100192b2:	9314      	str	r3, [sp, #80]	@ 0x50
100192b4:	e7a1      	b.n	100191fa <_wcsnrtombs_l+0x1e>
100192b6:	f8dd e008 	ldr.w	lr, [sp, #8]
100192ba:	4606      	mov	r6, r0
100192bc:	218a      	movs	r1, #138	@ 0x8a
100192be:	2200      	movs	r2, #0
100192c0:	4630      	mov	r0, r6
100192c2:	f8ce 1000 	str.w	r1, [lr]
100192c6:	603a      	str	r2, [r7, #0]
100192c8:	b00b      	add	sp, #44	@ 0x2c
100192ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100192ce:	9e14      	ldr	r6, [sp, #80]	@ 0x50
100192d0:	e7bf      	b.n	10019252 <_wcsnrtombs_l+0x76>
100192d2:	4666      	mov	r6, ip
100192d4:	e7bd      	b.n	10019252 <_wcsnrtombs_l+0x76>
100192d6:	bf00      	nop

100192d8 <_wcsnrtombs_r>:
100192d8:	b510      	push	{r4, lr}
100192da:	b084      	sub	sp, #16
100192dc:	4c05      	ldr	r4, [pc, #20]	@ (100192f4 <_wcsnrtombs_r+0x1c>)
100192de:	9806      	ldr	r0, [sp, #24]
100192e0:	9000      	str	r0, [sp, #0]
100192e2:	9807      	ldr	r0, [sp, #28]
100192e4:	9001      	str	r0, [sp, #4]
100192e6:	4804      	ldr	r0, [pc, #16]	@ (100192f8 <_wcsnrtombs_r+0x20>)
100192e8:	6800      	ldr	r0, [r0, #0]
100192ea:	9402      	str	r4, [sp, #8]
100192ec:	f7ff ff76 	bl	100191dc <_wcsnrtombs_l>
100192f0:	b004      	add	sp, #16
100192f2:	bd10      	pop	{r4, pc}
100192f4:	20000454 	.word	0x20000454
100192f8:	200005c0 	.word	0x200005c0

100192fc <__register_exitproc>:
100192fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10019300:	4d1b      	ldr	r5, [pc, #108]	@ (10019370 <__register_exitproc+0x74>)
10019302:	4606      	mov	r6, r0
10019304:	6828      	ldr	r0, [r5, #0]
10019306:	4698      	mov	r8, r3
10019308:	460f      	mov	r7, r1
1001930a:	4691      	mov	r9, r2
1001930c:	f7fc f940 	bl	10015590 <__retarget_lock_acquire_recursive>
10019310:	4b18      	ldr	r3, [pc, #96]	@ (10019374 <__register_exitproc+0x78>)
10019312:	681c      	ldr	r4, [r3, #0]
10019314:	b31c      	cbz	r4, 1001935e <__register_exitproc+0x62>
10019316:	6828      	ldr	r0, [r5, #0]
10019318:	6865      	ldr	r5, [r4, #4]
1001931a:	2d1f      	cmp	r5, #31
1001931c:	dc22      	bgt.n	10019364 <__register_exitproc+0x68>
1001931e:	b94e      	cbnz	r6, 10019334 <__register_exitproc+0x38>
10019320:	1c6b      	adds	r3, r5, #1
10019322:	3502      	adds	r5, #2
10019324:	6063      	str	r3, [r4, #4]
10019326:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
1001932a:	f7fc f933 	bl	10015594 <__retarget_lock_release_recursive>
1001932e:	2000      	movs	r0, #0
10019330:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10019334:	eb04 0185 	add.w	r1, r4, r5, lsl #2
10019338:	2301      	movs	r3, #1
1001933a:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
1001933e:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
10019342:	40ab      	lsls	r3, r5
10019344:	431a      	orrs	r2, r3
10019346:	2e02      	cmp	r6, #2
10019348:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
1001934c:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
10019350:	d1e6      	bne.n	10019320 <__register_exitproc+0x24>
10019352:	f8d4 218c 	ldr.w	r2, [r4, #396]	@ 0x18c
10019356:	431a      	orrs	r2, r3
10019358:	f8c4 218c 	str.w	r2, [r4, #396]	@ 0x18c
1001935c:	e7e0      	b.n	10019320 <__register_exitproc+0x24>
1001935e:	4c06      	ldr	r4, [pc, #24]	@ (10019378 <__register_exitproc+0x7c>)
10019360:	601c      	str	r4, [r3, #0]
10019362:	e7d8      	b.n	10019316 <__register_exitproc+0x1a>
10019364:	f7fc f916 	bl	10015594 <__retarget_lock_release_recursive>
10019368:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001936c:	e7e0      	b.n	10019330 <__register_exitproc+0x34>
1001936e:	bf00      	nop
10019370:	200006e8 	.word	0x200006e8
10019374:	200015a8 	.word	0x200015a8
10019378:	200015b0 	.word	0x200015b0

1001937c <__assert_func>:
1001937c:	b500      	push	{lr}
1001937e:	4c0b      	ldr	r4, [pc, #44]	@ (100193ac <__assert_func+0x30>)
10019380:	6825      	ldr	r5, [r4, #0]
10019382:	4614      	mov	r4, r2
10019384:	68ee      	ldr	r6, [r5, #12]
10019386:	461a      	mov	r2, r3
10019388:	b085      	sub	sp, #20
1001938a:	4603      	mov	r3, r0
1001938c:	460d      	mov	r5, r1
1001938e:	b14c      	cbz	r4, 100193a4 <__assert_func+0x28>
10019390:	4907      	ldr	r1, [pc, #28]	@ (100193b0 <__assert_func+0x34>)
10019392:	9500      	str	r5, [sp, #0]
10019394:	e9cd 1401 	strd	r1, r4, [sp, #4]
10019398:	4630      	mov	r0, r6
1001939a:	4906      	ldr	r1, [pc, #24]	@ (100193b4 <__assert_func+0x38>)
1001939c:	f000 f844 	bl	10019428 <fiprintf>
100193a0:	f000 f8da 	bl	10019558 <abort>
100193a4:	4904      	ldr	r1, [pc, #16]	@ (100193b8 <__assert_func+0x3c>)
100193a6:	460c      	mov	r4, r1
100193a8:	e7f3      	b.n	10019392 <__assert_func+0x16>
100193aa:	bf00      	nop
100193ac:	200005c0 	.word	0x200005c0
100193b0:	1001c8f8 	.word	0x1001c8f8
100193b4:	1001c908 	.word	0x1001c908
100193b8:	1001c304 	.word	0x1001c304

100193bc <_calloc_r>:
100193bc:	b538      	push	{r3, r4, r5, lr}
100193be:	fba1 1402 	umull	r1, r4, r1, r2
100193c2:	bb54      	cbnz	r4, 1001941a <_calloc_r+0x5e>
100193c4:	f7f7 ff50 	bl	10011268 <_malloc_r>
100193c8:	4605      	mov	r5, r0
100193ca:	b350      	cbz	r0, 10019422 <_calloc_r+0x66>
100193cc:	f850 2c04 	ldr.w	r2, [r0, #-4]
100193d0:	f022 0203 	bic.w	r2, r2, #3
100193d4:	3a04      	subs	r2, #4
100193d6:	2a24      	cmp	r2, #36	@ 0x24
100193d8:	d810      	bhi.n	100193fc <_calloc_r+0x40>
100193da:	2a13      	cmp	r2, #19
100193dc:	d913      	bls.n	10019406 <_calloc_r+0x4a>
100193de:	2a1b      	cmp	r2, #27
100193e0:	6004      	str	r4, [r0, #0]
100193e2:	6044      	str	r4, [r0, #4]
100193e4:	d916      	bls.n	10019414 <_calloc_r+0x58>
100193e6:	2a24      	cmp	r2, #36	@ 0x24
100193e8:	6084      	str	r4, [r0, #8]
100193ea:	60c4      	str	r4, [r0, #12]
100193ec:	bf11      	iteee	ne
100193ee:	f100 0210 	addne.w	r2, r0, #16
100193f2:	f100 0218 	addeq.w	r2, r0, #24
100193f6:	6104      	streq	r4, [r0, #16]
100193f8:	6144      	streq	r4, [r0, #20]
100193fa:	e005      	b.n	10019408 <_calloc_r+0x4c>
100193fc:	4621      	mov	r1, r4
100193fe:	f7fb ffcf 	bl	100153a0 <memset>
10019402:	4628      	mov	r0, r5
10019404:	bd38      	pop	{r3, r4, r5, pc}
10019406:	4602      	mov	r2, r0
10019408:	2300      	movs	r3, #0
1001940a:	6013      	str	r3, [r2, #0]
1001940c:	6053      	str	r3, [r2, #4]
1001940e:	6093      	str	r3, [r2, #8]
10019410:	4628      	mov	r0, r5
10019412:	bd38      	pop	{r3, r4, r5, pc}
10019414:	f100 0208 	add.w	r2, r0, #8
10019418:	e7f6      	b.n	10019408 <_calloc_r+0x4c>
1001941a:	f7fc f879 	bl	10015510 <__errno>
1001941e:	230c      	movs	r3, #12
10019420:	6003      	str	r3, [r0, #0]
10019422:	2500      	movs	r5, #0
10019424:	4628      	mov	r0, r5
10019426:	bd38      	pop	{r3, r4, r5, pc}

10019428 <fiprintf>:
10019428:	b40e      	push	{r1, r2, r3}
1001942a:	b510      	push	{r4, lr}
1001942c:	b083      	sub	sp, #12
1001942e:	ab05      	add	r3, sp, #20
10019430:	4c06      	ldr	r4, [pc, #24]	@ (1001944c <fiprintf+0x24>)
10019432:	f853 2b04 	ldr.w	r2, [r3], #4
10019436:	9301      	str	r3, [sp, #4]
10019438:	4601      	mov	r1, r0
1001943a:	6820      	ldr	r0, [r4, #0]
1001943c:	f7fa f894 	bl	10013568 <_vfiprintf_r>
10019440:	b003      	add	sp, #12
10019442:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10019446:	b003      	add	sp, #12
10019448:	4770      	bx	lr
1001944a:	bf00      	nop
1001944c:	200005c0 	.word	0x200005c0

10019450 <__ssprint_r>:
10019450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10019454:	6893      	ldr	r3, [r2, #8]
10019456:	6817      	ldr	r7, [r2, #0]
10019458:	b083      	sub	sp, #12
1001945a:	4692      	mov	sl, r2
1001945c:	2b00      	cmp	r3, #0
1001945e:	d074      	beq.n	1001954a <__ssprint_r+0xfa>
10019460:	f04f 0b00 	mov.w	fp, #0
10019464:	688b      	ldr	r3, [r1, #8]
10019466:	680a      	ldr	r2, [r1, #0]
10019468:	4681      	mov	r9, r0
1001946a:	460c      	mov	r4, r1
1001946c:	465d      	mov	r5, fp
1001946e:	e045      	b.n	100194fc <__ssprint_r+0xac>
10019470:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10019474:	f413 6f90 	tst.w	r3, #1152	@ 0x480
10019478:	d02c      	beq.n	100194d4 <__ssprint_r+0x84>
1001947a:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
1001947e:	1a16      	subs	r6, r2, r0
10019480:	eb01 0241 	add.w	r2, r1, r1, lsl #1
10019484:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
10019488:	1c71      	adds	r1, r6, #1
1001948a:	1052      	asrs	r2, r2, #1
1001948c:	4429      	add	r1, r5
1001948e:	4291      	cmp	r1, r2
10019490:	bf92      	itee	ls
10019492:	4690      	movls	r8, r2
10019494:	4688      	movhi	r8, r1
10019496:	460a      	movhi	r2, r1
10019498:	055b      	lsls	r3, r3, #21
1001949a:	d539      	bpl.n	10019510 <__ssprint_r+0xc0>
1001949c:	4611      	mov	r1, r2
1001949e:	4648      	mov	r0, r9
100194a0:	f7f7 fee2 	bl	10011268 <_malloc_r>
100194a4:	9001      	str	r0, [sp, #4]
100194a6:	2800      	cmp	r0, #0
100194a8:	d03d      	beq.n	10019526 <__ssprint_r+0xd6>
100194aa:	4632      	mov	r2, r6
100194ac:	6921      	ldr	r1, [r4, #16]
100194ae:	f7fc f8c7 	bl	10015640 <memcpy>
100194b2:	89a2      	ldrh	r2, [r4, #12]
100194b4:	9b01      	ldr	r3, [sp, #4]
100194b6:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
100194ba:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
100194be:	81a2      	strh	r2, [r4, #12]
100194c0:	1998      	adds	r0, r3, r6
100194c2:	eba8 0606 	sub.w	r6, r8, r6
100194c6:	60a6      	str	r6, [r4, #8]
100194c8:	f8c4 8014 	str.w	r8, [r4, #20]
100194cc:	6123      	str	r3, [r4, #16]
100194ce:	6020      	str	r0, [r4, #0]
100194d0:	46a8      	mov	r8, r5
100194d2:	462e      	mov	r6, r5
100194d4:	4632      	mov	r2, r6
100194d6:	4659      	mov	r1, fp
100194d8:	f7fb fee2 	bl	100152a0 <memmove>
100194dc:	f8da 1008 	ldr.w	r1, [sl, #8]
100194e0:	68a3      	ldr	r3, [r4, #8]
100194e2:	6822      	ldr	r2, [r4, #0]
100194e4:	eba3 0308 	sub.w	r3, r3, r8
100194e8:	4432      	add	r2, r6
100194ea:	1b49      	subs	r1, r1, r5
100194ec:	60a3      	str	r3, [r4, #8]
100194ee:	6022      	str	r2, [r4, #0]
100194f0:	f8ca 1008 	str.w	r1, [sl, #8]
100194f4:	b349      	cbz	r1, 1001954a <__ssprint_r+0xfa>
100194f6:	e9d7 b500 	ldrd	fp, r5, [r7]
100194fa:	3708      	adds	r7, #8
100194fc:	4698      	mov	r8, r3
100194fe:	4610      	mov	r0, r2
10019500:	2d00      	cmp	r5, #0
10019502:	d0f8      	beq.n	100194f6 <__ssprint_r+0xa6>
10019504:	429d      	cmp	r5, r3
10019506:	461e      	mov	r6, r3
10019508:	d2b2      	bcs.n	10019470 <__ssprint_r+0x20>
1001950a:	46a8      	mov	r8, r5
1001950c:	462e      	mov	r6, r5
1001950e:	e7e1      	b.n	100194d4 <__ssprint_r+0x84>
10019510:	4601      	mov	r1, r0
10019512:	4648      	mov	r0, r9
10019514:	f7fb f8fc 	bl	10014710 <_realloc_r>
10019518:	4603      	mov	r3, r0
1001951a:	2800      	cmp	r0, #0
1001951c:	d1d0      	bne.n	100194c0 <__ssprint_r+0x70>
1001951e:	6921      	ldr	r1, [r4, #16]
10019520:	4648      	mov	r0, r9
10019522:	f7fd fa27 	bl	10016974 <_free_r>
10019526:	89a3      	ldrh	r3, [r4, #12]
10019528:	220c      	movs	r2, #12
1001952a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1001952e:	f8c9 2000 	str.w	r2, [r9]
10019532:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10019536:	81a3      	strh	r3, [r4, #12]
10019538:	2200      	movs	r2, #0
1001953a:	2300      	movs	r3, #0
1001953c:	f8ca 2008 	str.w	r2, [sl, #8]
10019540:	f8ca 3004 	str.w	r3, [sl, #4]
10019544:	b003      	add	sp, #12
10019546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001954a:	2000      	movs	r0, #0
1001954c:	2300      	movs	r3, #0
1001954e:	f8ca 3004 	str.w	r3, [sl, #4]
10019552:	b003      	add	sp, #12
10019554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

10019558 <abort>:
10019558:	b508      	push	{r3, lr}
1001955a:	2006      	movs	r0, #6
1001955c:	f000 f804 	bl	10019568 <raise>
10019560:	2001      	movs	r0, #1
10019562:	f000 f855 	bl	10019610 <_exit>
10019566:	bf00      	nop

10019568 <raise>:
10019568:	b538      	push	{r3, r4, r5, lr}
1001956a:	4b14      	ldr	r3, [pc, #80]	@ (100195bc <raise+0x54>)
1001956c:	281f      	cmp	r0, #31
1001956e:	681d      	ldr	r5, [r3, #0]
10019570:	d81e      	bhi.n	100195b0 <raise+0x48>
10019572:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
10019576:	4604      	mov	r4, r0
10019578:	b162      	cbz	r2, 10019594 <raise+0x2c>
1001957a:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
1001957e:	b14b      	cbz	r3, 10019594 <raise+0x2c>
10019580:	2b01      	cmp	r3, #1
10019582:	d005      	beq.n	10019590 <raise+0x28>
10019584:	1c59      	adds	r1, r3, #1
10019586:	d00f      	beq.n	100195a8 <raise+0x40>
10019588:	2100      	movs	r1, #0
1001958a:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
1001958e:	4798      	blx	r3
10019590:	2000      	movs	r0, #0
10019592:	bd38      	pop	{r3, r4, r5, pc}
10019594:	4628      	mov	r0, r5
10019596:	f000 f829 	bl	100195ec <_getpid_r>
1001959a:	4622      	mov	r2, r4
1001959c:	4601      	mov	r1, r0
1001959e:	4628      	mov	r0, r5
100195a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100195a4:	f000 b80c 	b.w	100195c0 <_kill_r>
100195a8:	2316      	movs	r3, #22
100195aa:	602b      	str	r3, [r5, #0]
100195ac:	2001      	movs	r0, #1
100195ae:	bd38      	pop	{r3, r4, r5, pc}
100195b0:	2316      	movs	r3, #22
100195b2:	602b      	str	r3, [r5, #0]
100195b4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100195b8:	bd38      	pop	{r3, r4, r5, pc}
100195ba:	bf00      	nop
100195bc:	200005c0 	.word	0x200005c0

100195c0 <_kill_r>:
100195c0:	b570      	push	{r4, r5, r6, lr}
100195c2:	460c      	mov	r4, r1
100195c4:	4d08      	ldr	r5, [pc, #32]	@ (100195e8 <_kill_r+0x28>)
100195c6:	4603      	mov	r3, r0
100195c8:	2600      	movs	r6, #0
100195ca:	4620      	mov	r0, r4
100195cc:	4611      	mov	r1, r2
100195ce:	461c      	mov	r4, r3
100195d0:	602e      	str	r6, [r5, #0]
100195d2:	f000 f815 	bl	10019600 <_kill>
100195d6:	1c43      	adds	r3, r0, #1
100195d8:	d000      	beq.n	100195dc <_kill_r+0x1c>
100195da:	bd70      	pop	{r4, r5, r6, pc}
100195dc:	682b      	ldr	r3, [r5, #0]
100195de:	2b00      	cmp	r3, #0
100195e0:	d0fb      	beq.n	100195da <_kill_r+0x1a>
100195e2:	6023      	str	r3, [r4, #0]
100195e4:	bd70      	pop	{r4, r5, r6, pc}
100195e6:	bf00      	nop
100195e8:	200015ac 	.word	0x200015ac

100195ec <_getpid_r>:
100195ec:	f000 b800 	b.w	100195f0 <_getpid>

100195f0 <_getpid>:
100195f0:	4b02      	ldr	r3, [pc, #8]	@ (100195fc <_getpid+0xc>)
100195f2:	2258      	movs	r2, #88	@ 0x58
100195f4:	601a      	str	r2, [r3, #0]
100195f6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100195fa:	4770      	bx	lr
100195fc:	200015ac 	.word	0x200015ac

10019600 <_kill>:
10019600:	4b02      	ldr	r3, [pc, #8]	@ (1001960c <_kill+0xc>)
10019602:	2258      	movs	r2, #88	@ 0x58
10019604:	601a      	str	r2, [r3, #0]
10019606:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001960a:	4770      	bx	lr
1001960c:	200015ac 	.word	0x200015ac

10019610 <_exit>:
10019610:	e7fe      	b.n	10019610 <_exit>
10019612:	bf00      	nop

10019614 <__aeabi_drsub>:
10019614:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
10019618:	e002      	b.n	10019620 <__adddf3>
1001961a:	bf00      	nop

1001961c <__aeabi_dsub>:
1001961c:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

10019620 <__adddf3>:
10019620:	b530      	push	{r4, r5, lr}
10019622:	ea4f 0441 	mov.w	r4, r1, lsl #1
10019626:	ea4f 0543 	mov.w	r5, r3, lsl #1
1001962a:	ea94 0f05 	teq	r4, r5
1001962e:	bf08      	it	eq
10019630:	ea90 0f02 	teqeq	r0, r2
10019634:	bf1f      	itttt	ne
10019636:	ea54 0c00 	orrsne.w	ip, r4, r0
1001963a:	ea55 0c02 	orrsne.w	ip, r5, r2
1001963e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10019642:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10019646:	f000 80e2 	beq.w	1001980e <__adddf3+0x1ee>
1001964a:	ea4f 5454 	mov.w	r4, r4, lsr #21
1001964e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10019652:	bfb8      	it	lt
10019654:	426d      	neglt	r5, r5
10019656:	dd0c      	ble.n	10019672 <__adddf3+0x52>
10019658:	442c      	add	r4, r5
1001965a:	ea80 0202 	eor.w	r2, r0, r2
1001965e:	ea81 0303 	eor.w	r3, r1, r3
10019662:	ea82 0000 	eor.w	r0, r2, r0
10019666:	ea83 0101 	eor.w	r1, r3, r1
1001966a:	ea80 0202 	eor.w	r2, r0, r2
1001966e:	ea81 0303 	eor.w	r3, r1, r3
10019672:	2d36      	cmp	r5, #54	@ 0x36
10019674:	bf88      	it	hi
10019676:	bd30      	pophi	{r4, r5, pc}
10019678:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
1001967c:	ea4f 3101 	mov.w	r1, r1, lsl #12
10019680:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
10019684:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10019688:	d002      	beq.n	10019690 <__adddf3+0x70>
1001968a:	4240      	negs	r0, r0
1001968c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10019690:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
10019694:	ea4f 3303 	mov.w	r3, r3, lsl #12
10019698:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
1001969c:	d002      	beq.n	100196a4 <__adddf3+0x84>
1001969e:	4252      	negs	r2, r2
100196a0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
100196a4:	ea94 0f05 	teq	r4, r5
100196a8:	f000 80a7 	beq.w	100197fa <__adddf3+0x1da>
100196ac:	f1a4 0401 	sub.w	r4, r4, #1
100196b0:	f1d5 0e20 	rsbs	lr, r5, #32
100196b4:	db0d      	blt.n	100196d2 <__adddf3+0xb2>
100196b6:	fa02 fc0e 	lsl.w	ip, r2, lr
100196ba:	fa22 f205 	lsr.w	r2, r2, r5
100196be:	1880      	adds	r0, r0, r2
100196c0:	f141 0100 	adc.w	r1, r1, #0
100196c4:	fa03 f20e 	lsl.w	r2, r3, lr
100196c8:	1880      	adds	r0, r0, r2
100196ca:	fa43 f305 	asr.w	r3, r3, r5
100196ce:	4159      	adcs	r1, r3
100196d0:	e00e      	b.n	100196f0 <__adddf3+0xd0>
100196d2:	f1a5 0520 	sub.w	r5, r5, #32
100196d6:	f10e 0e20 	add.w	lr, lr, #32
100196da:	2a01      	cmp	r2, #1
100196dc:	fa03 fc0e 	lsl.w	ip, r3, lr
100196e0:	bf28      	it	cs
100196e2:	f04c 0c02 	orrcs.w	ip, ip, #2
100196e6:	fa43 f305 	asr.w	r3, r3, r5
100196ea:	18c0      	adds	r0, r0, r3
100196ec:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
100196f0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
100196f4:	d507      	bpl.n	10019706 <__adddf3+0xe6>
100196f6:	f04f 0e00 	mov.w	lr, #0
100196fa:	f1dc 0c00 	rsbs	ip, ip, #0
100196fe:	eb7e 0000 	sbcs.w	r0, lr, r0
10019702:	eb6e 0101 	sbc.w	r1, lr, r1
10019706:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
1001970a:	d31b      	bcc.n	10019744 <__adddf3+0x124>
1001970c:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
10019710:	d30c      	bcc.n	1001972c <__adddf3+0x10c>
10019712:	0849      	lsrs	r1, r1, #1
10019714:	ea5f 0030 	movs.w	r0, r0, rrx
10019718:	ea4f 0c3c 	mov.w	ip, ip, rrx
1001971c:	f104 0401 	add.w	r4, r4, #1
10019720:	ea4f 5244 	mov.w	r2, r4, lsl #21
10019724:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
10019728:	f080 809a 	bcs.w	10019860 <__adddf3+0x240>
1001972c:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
10019730:	bf08      	it	eq
10019732:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10019736:	f150 0000 	adcs.w	r0, r0, #0
1001973a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001973e:	ea41 0105 	orr.w	r1, r1, r5
10019742:	bd30      	pop	{r4, r5, pc}
10019744:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10019748:	4140      	adcs	r0, r0
1001974a:	eb41 0101 	adc.w	r1, r1, r1
1001974e:	3c01      	subs	r4, #1
10019750:	bf28      	it	cs
10019752:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
10019756:	d2e9      	bcs.n	1001972c <__adddf3+0x10c>
10019758:	f091 0f00 	teq	r1, #0
1001975c:	bf04      	itt	eq
1001975e:	4601      	moveq	r1, r0
10019760:	2000      	moveq	r0, #0
10019762:	fab1 f381 	clz	r3, r1
10019766:	bf08      	it	eq
10019768:	3320      	addeq	r3, #32
1001976a:	f1a3 030b 	sub.w	r3, r3, #11
1001976e:	f1b3 0220 	subs.w	r2, r3, #32
10019772:	da0c      	bge.n	1001978e <__adddf3+0x16e>
10019774:	320c      	adds	r2, #12
10019776:	dd08      	ble.n	1001978a <__adddf3+0x16a>
10019778:	f102 0c14 	add.w	ip, r2, #20
1001977c:	f1c2 020c 	rsb	r2, r2, #12
10019780:	fa01 f00c 	lsl.w	r0, r1, ip
10019784:	fa21 f102 	lsr.w	r1, r1, r2
10019788:	e00c      	b.n	100197a4 <__adddf3+0x184>
1001978a:	f102 0214 	add.w	r2, r2, #20
1001978e:	bfd8      	it	le
10019790:	f1c2 0c20 	rsble	ip, r2, #32
10019794:	fa01 f102 	lsl.w	r1, r1, r2
10019798:	fa20 fc0c 	lsr.w	ip, r0, ip
1001979c:	bfdc      	itt	le
1001979e:	ea41 010c 	orrle.w	r1, r1, ip
100197a2:	4090      	lslle	r0, r2
100197a4:	1ae4      	subs	r4, r4, r3
100197a6:	bfa2      	ittt	ge
100197a8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
100197ac:	4329      	orrge	r1, r5
100197ae:	bd30      	popge	{r4, r5, pc}
100197b0:	ea6f 0404 	mvn.w	r4, r4
100197b4:	3c1f      	subs	r4, #31
100197b6:	da1c      	bge.n	100197f2 <__adddf3+0x1d2>
100197b8:	340c      	adds	r4, #12
100197ba:	dc0e      	bgt.n	100197da <__adddf3+0x1ba>
100197bc:	f104 0414 	add.w	r4, r4, #20
100197c0:	f1c4 0220 	rsb	r2, r4, #32
100197c4:	fa20 f004 	lsr.w	r0, r0, r4
100197c8:	fa01 f302 	lsl.w	r3, r1, r2
100197cc:	ea40 0003 	orr.w	r0, r0, r3
100197d0:	fa21 f304 	lsr.w	r3, r1, r4
100197d4:	ea45 0103 	orr.w	r1, r5, r3
100197d8:	bd30      	pop	{r4, r5, pc}
100197da:	f1c4 040c 	rsb	r4, r4, #12
100197de:	f1c4 0220 	rsb	r2, r4, #32
100197e2:	fa20 f002 	lsr.w	r0, r0, r2
100197e6:	fa01 f304 	lsl.w	r3, r1, r4
100197ea:	ea40 0003 	orr.w	r0, r0, r3
100197ee:	4629      	mov	r1, r5
100197f0:	bd30      	pop	{r4, r5, pc}
100197f2:	fa21 f004 	lsr.w	r0, r1, r4
100197f6:	4629      	mov	r1, r5
100197f8:	bd30      	pop	{r4, r5, pc}
100197fa:	f094 0f00 	teq	r4, #0
100197fe:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
10019802:	bf06      	itte	eq
10019804:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
10019808:	3401      	addeq	r4, #1
1001980a:	3d01      	subne	r5, #1
1001980c:	e74e      	b.n	100196ac <__adddf3+0x8c>
1001980e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10019812:	bf18      	it	ne
10019814:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10019818:	d029      	beq.n	1001986e <__adddf3+0x24e>
1001981a:	ea94 0f05 	teq	r4, r5
1001981e:	bf08      	it	eq
10019820:	ea90 0f02 	teqeq	r0, r2
10019824:	d005      	beq.n	10019832 <__adddf3+0x212>
10019826:	ea54 0c00 	orrs.w	ip, r4, r0
1001982a:	bf04      	itt	eq
1001982c:	4619      	moveq	r1, r3
1001982e:	4610      	moveq	r0, r2
10019830:	bd30      	pop	{r4, r5, pc}
10019832:	ea91 0f03 	teq	r1, r3
10019836:	bf1e      	ittt	ne
10019838:	2100      	movne	r1, #0
1001983a:	2000      	movne	r0, #0
1001983c:	bd30      	popne	{r4, r5, pc}
1001983e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10019842:	d105      	bne.n	10019850 <__adddf3+0x230>
10019844:	0040      	lsls	r0, r0, #1
10019846:	4149      	adcs	r1, r1
10019848:	bf28      	it	cs
1001984a:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
1001984e:	bd30      	pop	{r4, r5, pc}
10019850:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
10019854:	bf3c      	itt	cc
10019856:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
1001985a:	bd30      	popcc	{r4, r5, pc}
1001985c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10019860:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
10019864:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
10019868:	f04f 0000 	mov.w	r0, #0
1001986c:	bd30      	pop	{r4, r5, pc}
1001986e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10019872:	bf1a      	itte	ne
10019874:	4619      	movne	r1, r3
10019876:	4610      	movne	r0, r2
10019878:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
1001987c:	bf1c      	itt	ne
1001987e:	460b      	movne	r3, r1
10019880:	4602      	movne	r2, r0
10019882:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10019886:	bf06      	itte	eq
10019888:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
1001988c:	ea91 0f03 	teqeq	r1, r3
10019890:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
10019894:	bd30      	pop	{r4, r5, pc}
10019896:	bf00      	nop

10019898 <__aeabi_ui2d>:
10019898:	f090 0f00 	teq	r0, #0
1001989c:	bf04      	itt	eq
1001989e:	2100      	moveq	r1, #0
100198a0:	4770      	bxeq	lr
100198a2:	b530      	push	{r4, r5, lr}
100198a4:	f44f 6480 	mov.w	r4, #1024	@ 0x400
100198a8:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100198ac:	f04f 0500 	mov.w	r5, #0
100198b0:	f04f 0100 	mov.w	r1, #0
100198b4:	e750      	b.n	10019758 <__adddf3+0x138>
100198b6:	bf00      	nop

100198b8 <__aeabi_i2d>:
100198b8:	f090 0f00 	teq	r0, #0
100198bc:	bf04      	itt	eq
100198be:	2100      	moveq	r1, #0
100198c0:	4770      	bxeq	lr
100198c2:	b530      	push	{r4, r5, lr}
100198c4:	f44f 6480 	mov.w	r4, #1024	@ 0x400
100198c8:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100198cc:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
100198d0:	bf48      	it	mi
100198d2:	4240      	negmi	r0, r0
100198d4:	f04f 0100 	mov.w	r1, #0
100198d8:	e73e      	b.n	10019758 <__adddf3+0x138>
100198da:	bf00      	nop

100198dc <__aeabi_f2d>:
100198dc:	0042      	lsls	r2, r0, #1
100198de:	ea4f 01e2 	mov.w	r1, r2, asr #3
100198e2:	ea4f 0131 	mov.w	r1, r1, rrx
100198e6:	ea4f 7002 	mov.w	r0, r2, lsl #28
100198ea:	bf1f      	itttt	ne
100198ec:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
100198f0:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
100198f4:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
100198f8:	4770      	bxne	lr
100198fa:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
100198fe:	bf08      	it	eq
10019900:	4770      	bxeq	lr
10019902:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
10019906:	bf04      	itt	eq
10019908:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
1001990c:	4770      	bxeq	lr
1001990e:	b530      	push	{r4, r5, lr}
10019910:	f44f 7460 	mov.w	r4, #896	@ 0x380
10019914:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10019918:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1001991c:	e71c      	b.n	10019758 <__adddf3+0x138>
1001991e:	bf00      	nop

10019920 <__aeabi_ul2d>:
10019920:	ea50 0201 	orrs.w	r2, r0, r1
10019924:	bf08      	it	eq
10019926:	4770      	bxeq	lr
10019928:	b530      	push	{r4, r5, lr}
1001992a:	f04f 0500 	mov.w	r5, #0
1001992e:	e00a      	b.n	10019946 <__aeabi_l2d+0x16>

10019930 <__aeabi_l2d>:
10019930:	ea50 0201 	orrs.w	r2, r0, r1
10019934:	bf08      	it	eq
10019936:	4770      	bxeq	lr
10019938:	b530      	push	{r4, r5, lr}
1001993a:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
1001993e:	d502      	bpl.n	10019946 <__aeabi_l2d+0x16>
10019940:	4240      	negs	r0, r0
10019942:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10019946:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001994a:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001994e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10019952:	f43f aed8 	beq.w	10019706 <__adddf3+0xe6>
10019956:	f04f 0203 	mov.w	r2, #3
1001995a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1001995e:	bf18      	it	ne
10019960:	3203      	addne	r2, #3
10019962:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10019966:	bf18      	it	ne
10019968:	3203      	addne	r2, #3
1001996a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1001996e:	f1c2 0320 	rsb	r3, r2, #32
10019972:	fa00 fc03 	lsl.w	ip, r0, r3
10019976:	fa20 f002 	lsr.w	r0, r0, r2
1001997a:	fa01 fe03 	lsl.w	lr, r1, r3
1001997e:	ea40 000e 	orr.w	r0, r0, lr
10019982:	fa21 f102 	lsr.w	r1, r1, r2
10019986:	4414      	add	r4, r2
10019988:	e6bd      	b.n	10019706 <__adddf3+0xe6>
1001998a:	bf00      	nop

1001998c <__aeabi_dmul>:
1001998c:	b570      	push	{r4, r5, r6, lr}
1001998e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
10019992:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
10019996:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001999a:	bf1d      	ittte	ne
1001999c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100199a0:	ea94 0f0c 	teqne	r4, ip
100199a4:	ea95 0f0c 	teqne	r5, ip
100199a8:	f000 f8de 	bleq	10019b68 <__aeabi_dmul+0x1dc>
100199ac:	442c      	add	r4, r5
100199ae:	ea81 0603 	eor.w	r6, r1, r3
100199b2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
100199b6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
100199ba:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
100199be:	bf18      	it	ne
100199c0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
100199c4:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
100199c8:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
100199cc:	d038      	beq.n	10019a40 <__aeabi_dmul+0xb4>
100199ce:	fba0 ce02 	umull	ip, lr, r0, r2
100199d2:	f04f 0500 	mov.w	r5, #0
100199d6:	fbe1 e502 	umlal	lr, r5, r1, r2
100199da:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
100199de:	fbe0 e503 	umlal	lr, r5, r0, r3
100199e2:	f04f 0600 	mov.w	r6, #0
100199e6:	fbe1 5603 	umlal	r5, r6, r1, r3
100199ea:	f09c 0f00 	teq	ip, #0
100199ee:	bf18      	it	ne
100199f0:	f04e 0e01 	orrne.w	lr, lr, #1
100199f4:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
100199f8:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
100199fc:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
10019a00:	d204      	bcs.n	10019a0c <__aeabi_dmul+0x80>
10019a02:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
10019a06:	416d      	adcs	r5, r5
10019a08:	eb46 0606 	adc.w	r6, r6, r6
10019a0c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10019a10:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10019a14:	ea4f 20c5 	mov.w	r0, r5, lsl #11
10019a18:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10019a1c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10019a20:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10019a24:	bf88      	it	hi
10019a26:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
10019a2a:	d81e      	bhi.n	10019a6a <__aeabi_dmul+0xde>
10019a2c:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
10019a30:	bf08      	it	eq
10019a32:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10019a36:	f150 0000 	adcs.w	r0, r0, #0
10019a3a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10019a3e:	bd70      	pop	{r4, r5, r6, pc}
10019a40:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
10019a44:	ea46 0101 	orr.w	r1, r6, r1
10019a48:	ea40 0002 	orr.w	r0, r0, r2
10019a4c:	ea81 0103 	eor.w	r1, r1, r3
10019a50:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10019a54:	bfc2      	ittt	gt
10019a56:	ebd4 050c 	rsbsgt	r5, r4, ip
10019a5a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10019a5e:	bd70      	popgt	{r4, r5, r6, pc}
10019a60:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10019a64:	f04f 0e00 	mov.w	lr, #0
10019a68:	3c01      	subs	r4, #1
10019a6a:	f300 80ab 	bgt.w	10019bc4 <__aeabi_dmul+0x238>
10019a6e:	f114 0f36 	cmn.w	r4, #54	@ 0x36
10019a72:	bfde      	ittt	le
10019a74:	2000      	movle	r0, #0
10019a76:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
10019a7a:	bd70      	pople	{r4, r5, r6, pc}
10019a7c:	f1c4 0400 	rsb	r4, r4, #0
10019a80:	3c20      	subs	r4, #32
10019a82:	da35      	bge.n	10019af0 <__aeabi_dmul+0x164>
10019a84:	340c      	adds	r4, #12
10019a86:	dc1b      	bgt.n	10019ac0 <__aeabi_dmul+0x134>
10019a88:	f104 0414 	add.w	r4, r4, #20
10019a8c:	f1c4 0520 	rsb	r5, r4, #32
10019a90:	fa00 f305 	lsl.w	r3, r0, r5
10019a94:	fa20 f004 	lsr.w	r0, r0, r4
10019a98:	fa01 f205 	lsl.w	r2, r1, r5
10019a9c:	ea40 0002 	orr.w	r0, r0, r2
10019aa0:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
10019aa4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
10019aa8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10019aac:	fa21 f604 	lsr.w	r6, r1, r4
10019ab0:	eb42 0106 	adc.w	r1, r2, r6
10019ab4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10019ab8:	bf08      	it	eq
10019aba:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10019abe:	bd70      	pop	{r4, r5, r6, pc}
10019ac0:	f1c4 040c 	rsb	r4, r4, #12
10019ac4:	f1c4 0520 	rsb	r5, r4, #32
10019ac8:	fa00 f304 	lsl.w	r3, r0, r4
10019acc:	fa20 f005 	lsr.w	r0, r0, r5
10019ad0:	fa01 f204 	lsl.w	r2, r1, r4
10019ad4:	ea40 0002 	orr.w	r0, r0, r2
10019ad8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10019adc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10019ae0:	f141 0100 	adc.w	r1, r1, #0
10019ae4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10019ae8:	bf08      	it	eq
10019aea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10019aee:	bd70      	pop	{r4, r5, r6, pc}
10019af0:	f1c4 0520 	rsb	r5, r4, #32
10019af4:	fa00 f205 	lsl.w	r2, r0, r5
10019af8:	ea4e 0e02 	orr.w	lr, lr, r2
10019afc:	fa20 f304 	lsr.w	r3, r0, r4
10019b00:	fa01 f205 	lsl.w	r2, r1, r5
10019b04:	ea43 0302 	orr.w	r3, r3, r2
10019b08:	fa21 f004 	lsr.w	r0, r1, r4
10019b0c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10019b10:	fa21 f204 	lsr.w	r2, r1, r4
10019b14:	ea20 0002 	bic.w	r0, r0, r2
10019b18:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
10019b1c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10019b20:	bf08      	it	eq
10019b22:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10019b26:	bd70      	pop	{r4, r5, r6, pc}
10019b28:	f094 0f00 	teq	r4, #0
10019b2c:	d10f      	bne.n	10019b4e <__aeabi_dmul+0x1c2>
10019b2e:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
10019b32:	0040      	lsls	r0, r0, #1
10019b34:	eb41 0101 	adc.w	r1, r1, r1
10019b38:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10019b3c:	bf08      	it	eq
10019b3e:	3c01      	subeq	r4, #1
10019b40:	d0f7      	beq.n	10019b32 <__aeabi_dmul+0x1a6>
10019b42:	ea41 0106 	orr.w	r1, r1, r6
10019b46:	f095 0f00 	teq	r5, #0
10019b4a:	bf18      	it	ne
10019b4c:	4770      	bxne	lr
10019b4e:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
10019b52:	0052      	lsls	r2, r2, #1
10019b54:	eb43 0303 	adc.w	r3, r3, r3
10019b58:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
10019b5c:	bf08      	it	eq
10019b5e:	3d01      	subeq	r5, #1
10019b60:	d0f7      	beq.n	10019b52 <__aeabi_dmul+0x1c6>
10019b62:	ea43 0306 	orr.w	r3, r3, r6
10019b66:	4770      	bx	lr
10019b68:	ea94 0f0c 	teq	r4, ip
10019b6c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10019b70:	bf18      	it	ne
10019b72:	ea95 0f0c 	teqne	r5, ip
10019b76:	d00c      	beq.n	10019b92 <__aeabi_dmul+0x206>
10019b78:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10019b7c:	bf18      	it	ne
10019b7e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10019b82:	d1d1      	bne.n	10019b28 <__aeabi_dmul+0x19c>
10019b84:	ea81 0103 	eor.w	r1, r1, r3
10019b88:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10019b8c:	f04f 0000 	mov.w	r0, #0
10019b90:	bd70      	pop	{r4, r5, r6, pc}
10019b92:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10019b96:	bf06      	itte	eq
10019b98:	4610      	moveq	r0, r2
10019b9a:	4619      	moveq	r1, r3
10019b9c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10019ba0:	d019      	beq.n	10019bd6 <__aeabi_dmul+0x24a>
10019ba2:	ea94 0f0c 	teq	r4, ip
10019ba6:	d102      	bne.n	10019bae <__aeabi_dmul+0x222>
10019ba8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10019bac:	d113      	bne.n	10019bd6 <__aeabi_dmul+0x24a>
10019bae:	ea95 0f0c 	teq	r5, ip
10019bb2:	d105      	bne.n	10019bc0 <__aeabi_dmul+0x234>
10019bb4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10019bb8:	bf1c      	itt	ne
10019bba:	4610      	movne	r0, r2
10019bbc:	4619      	movne	r1, r3
10019bbe:	d10a      	bne.n	10019bd6 <__aeabi_dmul+0x24a>
10019bc0:	ea81 0103 	eor.w	r1, r1, r3
10019bc4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10019bc8:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
10019bcc:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
10019bd0:	f04f 0000 	mov.w	r0, #0
10019bd4:	bd70      	pop	{r4, r5, r6, pc}
10019bd6:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
10019bda:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
10019bde:	bd70      	pop	{r4, r5, r6, pc}

10019be0 <__aeabi_ddiv>:
10019be0:	b570      	push	{r4, r5, r6, lr}
10019be2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
10019be6:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
10019bea:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10019bee:	bf1d      	ittte	ne
10019bf0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10019bf4:	ea94 0f0c 	teqne	r4, ip
10019bf8:	ea95 0f0c 	teqne	r5, ip
10019bfc:	f000 f8a7 	bleq	10019d4e <__aeabi_ddiv+0x16e>
10019c00:	eba4 0405 	sub.w	r4, r4, r5
10019c04:	ea81 0e03 	eor.w	lr, r1, r3
10019c08:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10019c0c:	ea4f 3101 	mov.w	r1, r1, lsl #12
10019c10:	f000 8088 	beq.w	10019d24 <__aeabi_ddiv+0x144>
10019c14:	ea4f 3303 	mov.w	r3, r3, lsl #12
10019c18:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
10019c1c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10019c20:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10019c24:	ea4f 2202 	mov.w	r2, r2, lsl #8
10019c28:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
10019c2c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10019c30:	ea4f 2600 	mov.w	r6, r0, lsl #8
10019c34:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
10019c38:	429d      	cmp	r5, r3
10019c3a:	bf08      	it	eq
10019c3c:	4296      	cmpeq	r6, r2
10019c3e:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
10019c42:	f504 7440 	add.w	r4, r4, #768	@ 0x300
10019c46:	d202      	bcs.n	10019c4e <__aeabi_ddiv+0x6e>
10019c48:	085b      	lsrs	r3, r3, #1
10019c4a:	ea4f 0232 	mov.w	r2, r2, rrx
10019c4e:	1ab6      	subs	r6, r6, r2
10019c50:	eb65 0503 	sbc.w	r5, r5, r3
10019c54:	085b      	lsrs	r3, r3, #1
10019c56:	ea4f 0232 	mov.w	r2, r2, rrx
10019c5a:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
10019c5e:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
10019c62:	ebb6 0e02 	subs.w	lr, r6, r2
10019c66:	eb75 0e03 	sbcs.w	lr, r5, r3
10019c6a:	bf22      	ittt	cs
10019c6c:	1ab6      	subcs	r6, r6, r2
10019c6e:	4675      	movcs	r5, lr
10019c70:	ea40 000c 	orrcs.w	r0, r0, ip
10019c74:	085b      	lsrs	r3, r3, #1
10019c76:	ea4f 0232 	mov.w	r2, r2, rrx
10019c7a:	ebb6 0e02 	subs.w	lr, r6, r2
10019c7e:	eb75 0e03 	sbcs.w	lr, r5, r3
10019c82:	bf22      	ittt	cs
10019c84:	1ab6      	subcs	r6, r6, r2
10019c86:	4675      	movcs	r5, lr
10019c88:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10019c8c:	085b      	lsrs	r3, r3, #1
10019c8e:	ea4f 0232 	mov.w	r2, r2, rrx
10019c92:	ebb6 0e02 	subs.w	lr, r6, r2
10019c96:	eb75 0e03 	sbcs.w	lr, r5, r3
10019c9a:	bf22      	ittt	cs
10019c9c:	1ab6      	subcs	r6, r6, r2
10019c9e:	4675      	movcs	r5, lr
10019ca0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
10019ca4:	085b      	lsrs	r3, r3, #1
10019ca6:	ea4f 0232 	mov.w	r2, r2, rrx
10019caa:	ebb6 0e02 	subs.w	lr, r6, r2
10019cae:	eb75 0e03 	sbcs.w	lr, r5, r3
10019cb2:	bf22      	ittt	cs
10019cb4:	1ab6      	subcs	r6, r6, r2
10019cb6:	4675      	movcs	r5, lr
10019cb8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10019cbc:	ea55 0e06 	orrs.w	lr, r5, r6
10019cc0:	d018      	beq.n	10019cf4 <__aeabi_ddiv+0x114>
10019cc2:	ea4f 1505 	mov.w	r5, r5, lsl #4
10019cc6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
10019cca:	ea4f 1606 	mov.w	r6, r6, lsl #4
10019cce:	ea4f 03c3 	mov.w	r3, r3, lsl #3
10019cd2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
10019cd6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
10019cda:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
10019cde:	d1c0      	bne.n	10019c62 <__aeabi_ddiv+0x82>
10019ce0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10019ce4:	d10b      	bne.n	10019cfe <__aeabi_ddiv+0x11e>
10019ce6:	ea41 0100 	orr.w	r1, r1, r0
10019cea:	f04f 0000 	mov.w	r0, #0
10019cee:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
10019cf2:	e7b6      	b.n	10019c62 <__aeabi_ddiv+0x82>
10019cf4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10019cf8:	bf04      	itt	eq
10019cfa:	4301      	orreq	r1, r0
10019cfc:	2000      	moveq	r0, #0
10019cfe:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10019d02:	bf88      	it	hi
10019d04:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
10019d08:	f63f aeaf 	bhi.w	10019a6a <__aeabi_dmul+0xde>
10019d0c:	ebb5 0c03 	subs.w	ip, r5, r3
10019d10:	bf04      	itt	eq
10019d12:	ebb6 0c02 	subseq.w	ip, r6, r2
10019d16:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10019d1a:	f150 0000 	adcs.w	r0, r0, #0
10019d1e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10019d22:	bd70      	pop	{r4, r5, r6, pc}
10019d24:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
10019d28:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10019d2c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10019d30:	bfc2      	ittt	gt
10019d32:	ebd4 050c 	rsbsgt	r5, r4, ip
10019d36:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10019d3a:	bd70      	popgt	{r4, r5, r6, pc}
10019d3c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10019d40:	f04f 0e00 	mov.w	lr, #0
10019d44:	3c01      	subs	r4, #1
10019d46:	e690      	b.n	10019a6a <__aeabi_dmul+0xde>
10019d48:	ea45 0e06 	orr.w	lr, r5, r6
10019d4c:	e68d      	b.n	10019a6a <__aeabi_dmul+0xde>
10019d4e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10019d52:	ea94 0f0c 	teq	r4, ip
10019d56:	bf08      	it	eq
10019d58:	ea95 0f0c 	teqeq	r5, ip
10019d5c:	f43f af3b 	beq.w	10019bd6 <__aeabi_dmul+0x24a>
10019d60:	ea94 0f0c 	teq	r4, ip
10019d64:	d10a      	bne.n	10019d7c <__aeabi_ddiv+0x19c>
10019d66:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10019d6a:	f47f af34 	bne.w	10019bd6 <__aeabi_dmul+0x24a>
10019d6e:	ea95 0f0c 	teq	r5, ip
10019d72:	f47f af25 	bne.w	10019bc0 <__aeabi_dmul+0x234>
10019d76:	4610      	mov	r0, r2
10019d78:	4619      	mov	r1, r3
10019d7a:	e72c      	b.n	10019bd6 <__aeabi_dmul+0x24a>
10019d7c:	ea95 0f0c 	teq	r5, ip
10019d80:	d106      	bne.n	10019d90 <__aeabi_ddiv+0x1b0>
10019d82:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10019d86:	f43f aefd 	beq.w	10019b84 <__aeabi_dmul+0x1f8>
10019d8a:	4610      	mov	r0, r2
10019d8c:	4619      	mov	r1, r3
10019d8e:	e722      	b.n	10019bd6 <__aeabi_dmul+0x24a>
10019d90:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10019d94:	bf18      	it	ne
10019d96:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10019d9a:	f47f aec5 	bne.w	10019b28 <__aeabi_dmul+0x19c>
10019d9e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10019da2:	f47f af0d 	bne.w	10019bc0 <__aeabi_dmul+0x234>
10019da6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10019daa:	f47f aeeb 	bne.w	10019b84 <__aeabi_dmul+0x1f8>
10019dae:	e712      	b.n	10019bd6 <__aeabi_dmul+0x24a>

10019db0 <__gedf2>:
10019db0:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
10019db4:	e006      	b.n	10019dc4 <__cmpdf2+0x4>
10019db6:	bf00      	nop

10019db8 <__ledf2>:
10019db8:	f04f 0c01 	mov.w	ip, #1
10019dbc:	e002      	b.n	10019dc4 <__cmpdf2+0x4>
10019dbe:	bf00      	nop

10019dc0 <__cmpdf2>:
10019dc0:	f04f 0c01 	mov.w	ip, #1
10019dc4:	f84d cd04 	str.w	ip, [sp, #-4]!
10019dc8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10019dcc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10019dd0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10019dd4:	bf18      	it	ne
10019dd6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
10019dda:	d01b      	beq.n	10019e14 <__cmpdf2+0x54>
10019ddc:	b001      	add	sp, #4
10019dde:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10019de2:	bf0c      	ite	eq
10019de4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
10019de8:	ea91 0f03 	teqne	r1, r3
10019dec:	bf02      	ittt	eq
10019dee:	ea90 0f02 	teqeq	r0, r2
10019df2:	2000      	moveq	r0, #0
10019df4:	4770      	bxeq	lr
10019df6:	f110 0f00 	cmn.w	r0, #0
10019dfa:	ea91 0f03 	teq	r1, r3
10019dfe:	bf58      	it	pl
10019e00:	4299      	cmppl	r1, r3
10019e02:	bf08      	it	eq
10019e04:	4290      	cmpeq	r0, r2
10019e06:	bf2c      	ite	cs
10019e08:	17d8      	asrcs	r0, r3, #31
10019e0a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10019e0e:	f040 0001 	orr.w	r0, r0, #1
10019e12:	4770      	bx	lr
10019e14:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10019e18:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10019e1c:	d102      	bne.n	10019e24 <__cmpdf2+0x64>
10019e1e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10019e22:	d107      	bne.n	10019e34 <__cmpdf2+0x74>
10019e24:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10019e28:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10019e2c:	d1d6      	bne.n	10019ddc <__cmpdf2+0x1c>
10019e2e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10019e32:	d0d3      	beq.n	10019ddc <__cmpdf2+0x1c>
10019e34:	f85d 0b04 	ldr.w	r0, [sp], #4
10019e38:	4770      	bx	lr
10019e3a:	bf00      	nop

10019e3c <__aeabi_cdrcmple>:
10019e3c:	4684      	mov	ip, r0
10019e3e:	4610      	mov	r0, r2
10019e40:	4662      	mov	r2, ip
10019e42:	468c      	mov	ip, r1
10019e44:	4619      	mov	r1, r3
10019e46:	4663      	mov	r3, ip
10019e48:	e000      	b.n	10019e4c <__aeabi_cdcmpeq>
10019e4a:	bf00      	nop

10019e4c <__aeabi_cdcmpeq>:
10019e4c:	b501      	push	{r0, lr}
10019e4e:	f7ff ffb7 	bl	10019dc0 <__cmpdf2>
10019e52:	2800      	cmp	r0, #0
10019e54:	bf48      	it	mi
10019e56:	f110 0f00 	cmnmi.w	r0, #0
10019e5a:	bd01      	pop	{r0, pc}

10019e5c <__aeabi_dcmpeq>:
10019e5c:	f84d ed08 	str.w	lr, [sp, #-8]!
10019e60:	f7ff fff4 	bl	10019e4c <__aeabi_cdcmpeq>
10019e64:	bf0c      	ite	eq
10019e66:	2001      	moveq	r0, #1
10019e68:	2000      	movne	r0, #0
10019e6a:	f85d fb08 	ldr.w	pc, [sp], #8
10019e6e:	bf00      	nop

10019e70 <__aeabi_dcmplt>:
10019e70:	f84d ed08 	str.w	lr, [sp, #-8]!
10019e74:	f7ff ffea 	bl	10019e4c <__aeabi_cdcmpeq>
10019e78:	bf34      	ite	cc
10019e7a:	2001      	movcc	r0, #1
10019e7c:	2000      	movcs	r0, #0
10019e7e:	f85d fb08 	ldr.w	pc, [sp], #8
10019e82:	bf00      	nop

10019e84 <__aeabi_dcmple>:
10019e84:	f84d ed08 	str.w	lr, [sp, #-8]!
10019e88:	f7ff ffe0 	bl	10019e4c <__aeabi_cdcmpeq>
10019e8c:	bf94      	ite	ls
10019e8e:	2001      	movls	r0, #1
10019e90:	2000      	movhi	r0, #0
10019e92:	f85d fb08 	ldr.w	pc, [sp], #8
10019e96:	bf00      	nop

10019e98 <__aeabi_dcmpge>:
10019e98:	f84d ed08 	str.w	lr, [sp, #-8]!
10019e9c:	f7ff ffce 	bl	10019e3c <__aeabi_cdrcmple>
10019ea0:	bf94      	ite	ls
10019ea2:	2001      	movls	r0, #1
10019ea4:	2000      	movhi	r0, #0
10019ea6:	f85d fb08 	ldr.w	pc, [sp], #8
10019eaa:	bf00      	nop

10019eac <__aeabi_dcmpgt>:
10019eac:	f84d ed08 	str.w	lr, [sp, #-8]!
10019eb0:	f7ff ffc4 	bl	10019e3c <__aeabi_cdrcmple>
10019eb4:	bf34      	ite	cc
10019eb6:	2001      	movcc	r0, #1
10019eb8:	2000      	movcs	r0, #0
10019eba:	f85d fb08 	ldr.w	pc, [sp], #8
10019ebe:	bf00      	nop

10019ec0 <__aeabi_dcmpun>:
10019ec0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10019ec4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10019ec8:	d102      	bne.n	10019ed0 <__aeabi_dcmpun+0x10>
10019eca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10019ece:	d10a      	bne.n	10019ee6 <__aeabi_dcmpun+0x26>
10019ed0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10019ed4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10019ed8:	d102      	bne.n	10019ee0 <__aeabi_dcmpun+0x20>
10019eda:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10019ede:	d102      	bne.n	10019ee6 <__aeabi_dcmpun+0x26>
10019ee0:	f04f 0000 	mov.w	r0, #0
10019ee4:	4770      	bx	lr
10019ee6:	f04f 0001 	mov.w	r0, #1
10019eea:	4770      	bx	lr

10019eec <__aeabi_d2iz>:
10019eec:	ea4f 0241 	mov.w	r2, r1, lsl #1
10019ef0:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
10019ef4:	d215      	bcs.n	10019f22 <__aeabi_d2iz+0x36>
10019ef6:	d511      	bpl.n	10019f1c <__aeabi_d2iz+0x30>
10019ef8:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10019efc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10019f00:	d912      	bls.n	10019f28 <__aeabi_d2iz+0x3c>
10019f02:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10019f06:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10019f0a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10019f0e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
10019f12:	fa23 f002 	lsr.w	r0, r3, r2
10019f16:	bf18      	it	ne
10019f18:	4240      	negne	r0, r0
10019f1a:	4770      	bx	lr
10019f1c:	f04f 0000 	mov.w	r0, #0
10019f20:	4770      	bx	lr
10019f22:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10019f26:	d105      	bne.n	10019f34 <__aeabi_d2iz+0x48>
10019f28:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
10019f2c:	bf08      	it	eq
10019f2e:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
10019f32:	4770      	bx	lr
10019f34:	f04f 0000 	mov.w	r0, #0
10019f38:	4770      	bx	lr
10019f3a:	bf00      	nop

10019f3c <__aeabi_uldivmod>:
10019f3c:	b953      	cbnz	r3, 10019f54 <__aeabi_uldivmod+0x18>
10019f3e:	b94a      	cbnz	r2, 10019f54 <__aeabi_uldivmod+0x18>
10019f40:	2900      	cmp	r1, #0
10019f42:	bf08      	it	eq
10019f44:	2800      	cmpeq	r0, #0
10019f46:	bf1c      	itt	ne
10019f48:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
10019f4c:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
10019f50:	f000 b96a 	b.w	1001a228 <__aeabi_idiv0>
10019f54:	f1ad 0c08 	sub.w	ip, sp, #8
10019f58:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10019f5c:	f000 f806 	bl	10019f6c <__udivmoddi4>
10019f60:	f8dd e004 	ldr.w	lr, [sp, #4]
10019f64:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10019f68:	b004      	add	sp, #16
10019f6a:	4770      	bx	lr

10019f6c <__udivmoddi4>:
10019f6c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10019f70:	9d08      	ldr	r5, [sp, #32]
10019f72:	460c      	mov	r4, r1
10019f74:	2b00      	cmp	r3, #0
10019f76:	d14e      	bne.n	1001a016 <__udivmoddi4+0xaa>
10019f78:	4694      	mov	ip, r2
10019f7a:	458c      	cmp	ip, r1
10019f7c:	4686      	mov	lr, r0
10019f7e:	fab2 f282 	clz	r2, r2
10019f82:	d962      	bls.n	1001a04a <__udivmoddi4+0xde>
10019f84:	b14a      	cbz	r2, 10019f9a <__udivmoddi4+0x2e>
10019f86:	f1c2 0320 	rsb	r3, r2, #32
10019f8a:	4091      	lsls	r1, r2
10019f8c:	fa20 f303 	lsr.w	r3, r0, r3
10019f90:	fa0c fc02 	lsl.w	ip, ip, r2
10019f94:	4319      	orrs	r1, r3
10019f96:	fa00 fe02 	lsl.w	lr, r0, r2
10019f9a:	ea4f 471c 	mov.w	r7, ip, lsr #16
10019f9e:	fa1f f68c 	uxth.w	r6, ip
10019fa2:	fbb1 f4f7 	udiv	r4, r1, r7
10019fa6:	ea4f 431e 	mov.w	r3, lr, lsr #16
10019faa:	fb07 1114 	mls	r1, r7, r4, r1
10019fae:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10019fb2:	fb04 f106 	mul.w	r1, r4, r6
10019fb6:	4299      	cmp	r1, r3
10019fb8:	d90a      	bls.n	10019fd0 <__udivmoddi4+0x64>
10019fba:	eb1c 0303 	adds.w	r3, ip, r3
10019fbe:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
10019fc2:	f080 8112 	bcs.w	1001a1ea <__udivmoddi4+0x27e>
10019fc6:	4299      	cmp	r1, r3
10019fc8:	f240 810f 	bls.w	1001a1ea <__udivmoddi4+0x27e>
10019fcc:	3c02      	subs	r4, #2
10019fce:	4463      	add	r3, ip
10019fd0:	1a59      	subs	r1, r3, r1
10019fd2:	fa1f f38e 	uxth.w	r3, lr
10019fd6:	fbb1 f0f7 	udiv	r0, r1, r7
10019fda:	fb07 1110 	mls	r1, r7, r0, r1
10019fde:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10019fe2:	fb00 f606 	mul.w	r6, r0, r6
10019fe6:	429e      	cmp	r6, r3
10019fe8:	d90a      	bls.n	1001a000 <__udivmoddi4+0x94>
10019fea:	eb1c 0303 	adds.w	r3, ip, r3
10019fee:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
10019ff2:	f080 80fc 	bcs.w	1001a1ee <__udivmoddi4+0x282>
10019ff6:	429e      	cmp	r6, r3
10019ff8:	f240 80f9 	bls.w	1001a1ee <__udivmoddi4+0x282>
10019ffc:	4463      	add	r3, ip
10019ffe:	3802      	subs	r0, #2
1001a000:	1b9b      	subs	r3, r3, r6
1001a002:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
1001a006:	2100      	movs	r1, #0
1001a008:	b11d      	cbz	r5, 1001a012 <__udivmoddi4+0xa6>
1001a00a:	40d3      	lsrs	r3, r2
1001a00c:	2200      	movs	r2, #0
1001a00e:	e9c5 3200 	strd	r3, r2, [r5]
1001a012:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1001a016:	428b      	cmp	r3, r1
1001a018:	d905      	bls.n	1001a026 <__udivmoddi4+0xba>
1001a01a:	b10d      	cbz	r5, 1001a020 <__udivmoddi4+0xb4>
1001a01c:	e9c5 0100 	strd	r0, r1, [r5]
1001a020:	2100      	movs	r1, #0
1001a022:	4608      	mov	r0, r1
1001a024:	e7f5      	b.n	1001a012 <__udivmoddi4+0xa6>
1001a026:	fab3 f183 	clz	r1, r3
1001a02a:	2900      	cmp	r1, #0
1001a02c:	d146      	bne.n	1001a0bc <__udivmoddi4+0x150>
1001a02e:	42a3      	cmp	r3, r4
1001a030:	d302      	bcc.n	1001a038 <__udivmoddi4+0xcc>
1001a032:	4290      	cmp	r0, r2
1001a034:	f0c0 80f0 	bcc.w	1001a218 <__udivmoddi4+0x2ac>
1001a038:	1a86      	subs	r6, r0, r2
1001a03a:	eb64 0303 	sbc.w	r3, r4, r3
1001a03e:	2001      	movs	r0, #1
1001a040:	2d00      	cmp	r5, #0
1001a042:	d0e6      	beq.n	1001a012 <__udivmoddi4+0xa6>
1001a044:	e9c5 6300 	strd	r6, r3, [r5]
1001a048:	e7e3      	b.n	1001a012 <__udivmoddi4+0xa6>
1001a04a:	2a00      	cmp	r2, #0
1001a04c:	f040 8090 	bne.w	1001a170 <__udivmoddi4+0x204>
1001a050:	eba1 040c 	sub.w	r4, r1, ip
1001a054:	ea4f 481c 	mov.w	r8, ip, lsr #16
1001a058:	fa1f f78c 	uxth.w	r7, ip
1001a05c:	2101      	movs	r1, #1
1001a05e:	fbb4 f6f8 	udiv	r6, r4, r8
1001a062:	ea4f 431e 	mov.w	r3, lr, lsr #16
1001a066:	fb08 4416 	mls	r4, r8, r6, r4
1001a06a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001a06e:	fb07 f006 	mul.w	r0, r7, r6
1001a072:	4298      	cmp	r0, r3
1001a074:	d908      	bls.n	1001a088 <__udivmoddi4+0x11c>
1001a076:	eb1c 0303 	adds.w	r3, ip, r3
1001a07a:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
1001a07e:	d202      	bcs.n	1001a086 <__udivmoddi4+0x11a>
1001a080:	4298      	cmp	r0, r3
1001a082:	f200 80cd 	bhi.w	1001a220 <__udivmoddi4+0x2b4>
1001a086:	4626      	mov	r6, r4
1001a088:	1a1c      	subs	r4, r3, r0
1001a08a:	fa1f f38e 	uxth.w	r3, lr
1001a08e:	fbb4 f0f8 	udiv	r0, r4, r8
1001a092:	fb08 4410 	mls	r4, r8, r0, r4
1001a096:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
1001a09a:	fb00 f707 	mul.w	r7, r0, r7
1001a09e:	429f      	cmp	r7, r3
1001a0a0:	d908      	bls.n	1001a0b4 <__udivmoddi4+0x148>
1001a0a2:	eb1c 0303 	adds.w	r3, ip, r3
1001a0a6:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
1001a0aa:	d202      	bcs.n	1001a0b2 <__udivmoddi4+0x146>
1001a0ac:	429f      	cmp	r7, r3
1001a0ae:	f200 80b0 	bhi.w	1001a212 <__udivmoddi4+0x2a6>
1001a0b2:	4620      	mov	r0, r4
1001a0b4:	1bdb      	subs	r3, r3, r7
1001a0b6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
1001a0ba:	e7a5      	b.n	1001a008 <__udivmoddi4+0x9c>
1001a0bc:	f1c1 0620 	rsb	r6, r1, #32
1001a0c0:	408b      	lsls	r3, r1
1001a0c2:	fa22 f706 	lsr.w	r7, r2, r6
1001a0c6:	431f      	orrs	r7, r3
1001a0c8:	fa20 fc06 	lsr.w	ip, r0, r6
1001a0cc:	fa04 f301 	lsl.w	r3, r4, r1
1001a0d0:	ea43 030c 	orr.w	r3, r3, ip
1001a0d4:	40f4      	lsrs	r4, r6
1001a0d6:	fa00 f801 	lsl.w	r8, r0, r1
1001a0da:	0c38      	lsrs	r0, r7, #16
1001a0dc:	ea4f 4913 	mov.w	r9, r3, lsr #16
1001a0e0:	fbb4 fef0 	udiv	lr, r4, r0
1001a0e4:	fa1f fc87 	uxth.w	ip, r7
1001a0e8:	fb00 441e 	mls	r4, r0, lr, r4
1001a0ec:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
1001a0f0:	fb0e f90c 	mul.w	r9, lr, ip
1001a0f4:	45a1      	cmp	r9, r4
1001a0f6:	fa02 f201 	lsl.w	r2, r2, r1
1001a0fa:	d90a      	bls.n	1001a112 <__udivmoddi4+0x1a6>
1001a0fc:	193c      	adds	r4, r7, r4
1001a0fe:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
1001a102:	f080 8084 	bcs.w	1001a20e <__udivmoddi4+0x2a2>
1001a106:	45a1      	cmp	r9, r4
1001a108:	f240 8081 	bls.w	1001a20e <__udivmoddi4+0x2a2>
1001a10c:	f1ae 0e02 	sub.w	lr, lr, #2
1001a110:	443c      	add	r4, r7
1001a112:	eba4 0409 	sub.w	r4, r4, r9
1001a116:	fa1f f983 	uxth.w	r9, r3
1001a11a:	fbb4 f3f0 	udiv	r3, r4, r0
1001a11e:	fb00 4413 	mls	r4, r0, r3, r4
1001a122:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
1001a126:	fb03 fc0c 	mul.w	ip, r3, ip
1001a12a:	45a4      	cmp	ip, r4
1001a12c:	d907      	bls.n	1001a13e <__udivmoddi4+0x1d2>
1001a12e:	193c      	adds	r4, r7, r4
1001a130:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
1001a134:	d267      	bcs.n	1001a206 <__udivmoddi4+0x29a>
1001a136:	45a4      	cmp	ip, r4
1001a138:	d965      	bls.n	1001a206 <__udivmoddi4+0x29a>
1001a13a:	3b02      	subs	r3, #2
1001a13c:	443c      	add	r4, r7
1001a13e:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
1001a142:	fba0 9302 	umull	r9, r3, r0, r2
1001a146:	eba4 040c 	sub.w	r4, r4, ip
1001a14a:	429c      	cmp	r4, r3
1001a14c:	46ce      	mov	lr, r9
1001a14e:	469c      	mov	ip, r3
1001a150:	d351      	bcc.n	1001a1f6 <__udivmoddi4+0x28a>
1001a152:	d04e      	beq.n	1001a1f2 <__udivmoddi4+0x286>
1001a154:	b155      	cbz	r5, 1001a16c <__udivmoddi4+0x200>
1001a156:	ebb8 030e 	subs.w	r3, r8, lr
1001a15a:	eb64 040c 	sbc.w	r4, r4, ip
1001a15e:	fa04 f606 	lsl.w	r6, r4, r6
1001a162:	40cb      	lsrs	r3, r1
1001a164:	431e      	orrs	r6, r3
1001a166:	40cc      	lsrs	r4, r1
1001a168:	e9c5 6400 	strd	r6, r4, [r5]
1001a16c:	2100      	movs	r1, #0
1001a16e:	e750      	b.n	1001a012 <__udivmoddi4+0xa6>
1001a170:	f1c2 0320 	rsb	r3, r2, #32
1001a174:	fa20 f103 	lsr.w	r1, r0, r3
1001a178:	fa0c fc02 	lsl.w	ip, ip, r2
1001a17c:	fa24 f303 	lsr.w	r3, r4, r3
1001a180:	4094      	lsls	r4, r2
1001a182:	430c      	orrs	r4, r1
1001a184:	ea4f 481c 	mov.w	r8, ip, lsr #16
1001a188:	fa00 fe02 	lsl.w	lr, r0, r2
1001a18c:	fa1f f78c 	uxth.w	r7, ip
1001a190:	fbb3 f0f8 	udiv	r0, r3, r8
1001a194:	fb08 3110 	mls	r1, r8, r0, r3
1001a198:	0c23      	lsrs	r3, r4, #16
1001a19a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
1001a19e:	fb00 f107 	mul.w	r1, r0, r7
1001a1a2:	4299      	cmp	r1, r3
1001a1a4:	d908      	bls.n	1001a1b8 <__udivmoddi4+0x24c>
1001a1a6:	eb1c 0303 	adds.w	r3, ip, r3
1001a1aa:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
1001a1ae:	d22c      	bcs.n	1001a20a <__udivmoddi4+0x29e>
1001a1b0:	4299      	cmp	r1, r3
1001a1b2:	d92a      	bls.n	1001a20a <__udivmoddi4+0x29e>
1001a1b4:	3802      	subs	r0, #2
1001a1b6:	4463      	add	r3, ip
1001a1b8:	1a5b      	subs	r3, r3, r1
1001a1ba:	b2a4      	uxth	r4, r4
1001a1bc:	fbb3 f1f8 	udiv	r1, r3, r8
1001a1c0:	fb08 3311 	mls	r3, r8, r1, r3
1001a1c4:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
1001a1c8:	fb01 f307 	mul.w	r3, r1, r7
1001a1cc:	42a3      	cmp	r3, r4
1001a1ce:	d908      	bls.n	1001a1e2 <__udivmoddi4+0x276>
1001a1d0:	eb1c 0404 	adds.w	r4, ip, r4
1001a1d4:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
1001a1d8:	d213      	bcs.n	1001a202 <__udivmoddi4+0x296>
1001a1da:	42a3      	cmp	r3, r4
1001a1dc:	d911      	bls.n	1001a202 <__udivmoddi4+0x296>
1001a1de:	3902      	subs	r1, #2
1001a1e0:	4464      	add	r4, ip
1001a1e2:	1ae4      	subs	r4, r4, r3
1001a1e4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
1001a1e8:	e739      	b.n	1001a05e <__udivmoddi4+0xf2>
1001a1ea:	4604      	mov	r4, r0
1001a1ec:	e6f0      	b.n	10019fd0 <__udivmoddi4+0x64>
1001a1ee:	4608      	mov	r0, r1
1001a1f0:	e706      	b.n	1001a000 <__udivmoddi4+0x94>
1001a1f2:	45c8      	cmp	r8, r9
1001a1f4:	d2ae      	bcs.n	1001a154 <__udivmoddi4+0x1e8>
1001a1f6:	ebb9 0e02 	subs.w	lr, r9, r2
1001a1fa:	eb63 0c07 	sbc.w	ip, r3, r7
1001a1fe:	3801      	subs	r0, #1
1001a200:	e7a8      	b.n	1001a154 <__udivmoddi4+0x1e8>
1001a202:	4631      	mov	r1, r6
1001a204:	e7ed      	b.n	1001a1e2 <__udivmoddi4+0x276>
1001a206:	4603      	mov	r3, r0
1001a208:	e799      	b.n	1001a13e <__udivmoddi4+0x1d2>
1001a20a:	4630      	mov	r0, r6
1001a20c:	e7d4      	b.n	1001a1b8 <__udivmoddi4+0x24c>
1001a20e:	46d6      	mov	lr, sl
1001a210:	e77f      	b.n	1001a112 <__udivmoddi4+0x1a6>
1001a212:	4463      	add	r3, ip
1001a214:	3802      	subs	r0, #2
1001a216:	e74d      	b.n	1001a0b4 <__udivmoddi4+0x148>
1001a218:	4606      	mov	r6, r0
1001a21a:	4623      	mov	r3, r4
1001a21c:	4608      	mov	r0, r1
1001a21e:	e70f      	b.n	1001a040 <__udivmoddi4+0xd4>
1001a220:	3e02      	subs	r6, #2
1001a222:	4463      	add	r3, ip
1001a224:	e730      	b.n	1001a088 <__udivmoddi4+0x11c>
1001a226:	bf00      	nop

1001a228 <__aeabi_idiv0>:
1001a228:	4770      	bx	lr
1001a22a:	bf00      	nop
1001a22c:	706d6f63 	.word	0x706d6f63
1001a230:	00000032 	.word	0x00000032
1001a234:	312f3131 	.word	0x312f3131
1001a238:	31312f31 	.word	0x31312f31
1001a23c:	00003131 	.word	0x00003131
1001a240:	616b6164 	.word	0x616b6164
1001a244:	00000072 	.word	0x00000072
1001a248:	3e434f4c 	.word	0x3e434f4c
1001a24c:	440a7325 	.word	0x440a7325
1001a250:	3e455441 	.word	0x3e455441
1001a254:	430a7325 	.word	0x430a7325
1001a258:	3e545355 	.word	0x3e545355
1001a25c:	000a7325 	.word	0x000a7325
1001a260:	686b6f73 	.word	0x686b6f73
1001a264:	0000616e 	.word	0x0000616e
1001a268:	6f727245 	.word	0x6f727245
1001a26c:	55203a72 	.word	0x55203a72
1001a270:	6365726e 	.word	0x6365726e
1001a274:	696e676f 	.word	0x696e676f
1001a278:	2064657a 	.word	0x2064657a
1001a27c:	6d6d6f63 	.word	0x6d6d6f63
1001a280:	20646e61 	.word	0x20646e61
1001a284:	65636572 	.word	0x65636572
1001a288:	64657669 	.word	0x64657669
1001a28c:	0a642520 	.word	0x0a642520
1001a290:	00000000 	.word	0x00000000
1001a294:	706d6f43 	.word	0x706d6f43
1001a298:	6e656e6f 	.word	0x6e656e6f
1001a29c:	74532074 	.word	0x74532074
1001a2a0:	65747261 	.word	0x65747261
1001a2a4:	00000064 	.word	0x00000064
1001a2a8:	6c696146 	.word	0x6c696146
1001a2ac:	74206465 	.word	0x74206465
1001a2b0:	6e69206f 	.word	0x6e69206f
1001a2b4:	61697469 	.word	0x61697469
1001a2b8:	657a696c 	.word	0x657a696c
1001a2bc:	43324920 	.word	0x43324920
1001a2c0:	0000002e 	.word	0x0000002e

1001a2c4 <Td>:
1001a2c4:	51f4a750 7e416553 1a17a4c3 3a275e96     P..QSeA~.....^':
1001a2d4:	3bab6bcb 1f9d45f1 acfa58ab 4be30393     .k.;.E...X.....K
1001a2e4:	2030fa55 ad766df6 88cc7691 f5024c25     U.0 .mv..v..%L..
1001a2f4:	4fe5d7fc c52acbd7 26354480 b562a38f     ...O..*..D5&..b.
1001a304:	deb15a49 25ba1b67 45ea0e98 5dfec0e1     IZ..g..%...E...]
1001a314:	c32f7502 814cf012 8d4697a3 6bd3f9c6     .u/...L...F....k
1001a324:	038f5fe7 15929c95 bf6d7aeb 955259da     ._.......zm..YR.
1001a334:	d4be832d 587421d3 49e06929 8ec9c844     -....!tX)i.ID...
1001a344:	75c2896a f48e7978 99583e6b 27b971dd     j..uxy..k>X..q.'
1001a354:	bee14fb6 f088ad17 c920ac66 7dce3ab4     .O......f. ..:.}
1001a364:	63df4a18 e51a3182 97513360 62537f45     .J.c.1..`3Q.E.Sb
1001a374:	b16477e0 bb6bae84 fe81a01c f9082b94     .wd...k......+..
1001a384:	70486858 8f45fd19 94de6c87 527bf8b7     XhHp..E..l....{R
1001a394:	ab73d323 724b02e2 e31f8f57 6655ab2a     #.s...KrW...*.Uf
1001a3a4:	b2eb2807 2fb5c203 86c57b9a d33708a5     .(...../.{....7.
1001a3b4:	302887f2 23bfa5b2 02036aba ed16825c     ..(0...#.j..\...
1001a3c4:	8acf1c2b a779b492 f307f2f0 4e69e2a1     +.....y.......iN
1001a3d4:	65daf4cd 0605bed5 d134621f c4a6fe8a     ...e.....b4.....
1001a3e4:	342e539d a2f355a0 058ae132 a4f6eb75     .S.4.U..2...u...
1001a3f4:	0b83ec39 4060efaa 5e719f06 bd6e1051     9.....`@..q^Q.n.
1001a404:	3e218af9 96dd063d dd3e05ae 4de6bd46     ..!>=.....>.F..M
1001a414:	91548db5 71c45d05 0406d46f 605015ff     ..T..].qo.....P`
1001a424:	1998fb24 d6bde997 894043cc 67d99e77     $........C@.w..g
1001a434:	b0e842bd 07898b88 e7195b38 79c8eedb     .B......8[.....y
1001a444:	a17c0a47 7c420fe9 f8841ec9 00000000     G.|...B|........
1001a454:	09808683 322bed48 1e1170ac 6c5a724e     ....H.+2.p..NrZl
1001a464:	fd0efffb 0f853856 3daed51e 362d3927     ....V8.....='9-6
1001a474:	0a0fd964 685ca621 9b5b54d1 24362e3a     d...!.\h.T[.:.6$
1001a484:	0c0a67b1 9357e70f b4ee96d2 1b9b919e     .g....W.........
1001a494:	80c0c54f 61dc20a2 5a774b69 1c121a16     O.... .aiKwZ....
1001a4a4:	e293ba0a c0a02ae5 3c22e043 121b171d     .....*..C."<....
1001a4b4:	0e090d0b f28bc7ad 2db6a8b9 141ea9c8     ...........-....
1001a4c4:	57f11985 af75074c ee99ddbb a37f60fd     ...WL.u......`..
1001a4d4:	f701269f 5c72f5bc 44663bc5 5bfb7e34     .&....r\.;fD4~.[
1001a4e4:	8b432976 cb23c6dc b6edfc68 b8e4f163     v)C...#.h...c...
1001a4f4:	d731dcca 42638510 13972240 84c61120     ..1...cB@".. ...
1001a504:	854a247d d2bb3df8 aef93211 c729a16d     }$J..=...2..m.).
1001a514:	1d9e2f4b dcb230f3 0d8652ec 77c1e3d0     K/...0...R.....w
1001a524:	2bb3166c a970b999 119448fa 47e96422     l..+..p..H.."d.G
1001a534:	a8fc8cc4 a0f03f1a 567d2cd8 223390ef     .....?...,}V..3"
1001a544:	87494ec7 d938d1c1 8ccaa2fe 98d40b36     .NI...8.....6...
1001a554:	a6f581cf a57ade28 dab78e26 3fadbfa4     ....(.z.&......?
1001a564:	2c3a9de4 5078920d 6a5fcc9b 547e4662     ..:,..xP.._jbF~T
1001a574:	f68d13c2 90d8b8e8 2e39f75e 82c3aff5     ........^.9.....
1001a584:	9f5d80be 69d0937c 6fd52da9 cf2512b3     ..].|..i.-.o..%.
1001a594:	c8ac993b 10187da7 e89c636e db3bbb7b     ;....}..nc..{.;.
1001a5a4:	cd267809 6e5918f4 ec9ab701 834f9aa8     .x&...Yn......O.
1001a5b4:	e6956e65 aaffe67e 21bccf08 ef15e8e6     en..~......!....
1001a5c4:	bae79bd9 4a6f36ce ea9f09d4 29b07cd6     .....6oJ.....|.)
1001a5d4:	31a4b2af 2a3f2331 c6a59430 35a266c0     ...11#?*0....f.5
1001a5e4:	744ebc37 fc82caa6 e090d0b0 33a7d815     7.Nt...........3
1001a5f4:	f104984a 41ecdaf7 7fcd500e 1791f62f     J......A.P../...
1001a604:	764dd68d 43efb04d ccaa4d54 e49604df     ..MvM..CTM......
1001a614:	9ed1b5e3 4c6a881b c12c1fb8 4665517f     ......jL..,..QeF
1001a624:	9d5eea04 018c355d fa877473 fb0b412e     ..^.]5..st...A..
1001a634:	b3671d5a 92dbd252 e9105633 6dd64713     Z.g.R...3V...G.m
1001a644:	9ad7618c 37a10c7a 59f8148e eb133c89     .a..z..7...Y.<..
1001a654:	cea927ee b761c935 e11ce5ed 7a47b13c     .'..5.a.....<.Gz
1001a664:	9cd2df59 55f2733f 1814ce79 73c737bf     Y...?s.Uy....7.s
1001a674:	53f7cdea 5ffdaa5b df3d6f14 7844db86     ...S[.._.o=...Dx
1001a684:	caaff381 b968c43e 3824342c c2a3405f     ....>.h.,4$8_@..
1001a694:	161dc372 bce2250c 283c498b ff0d9541     r....%...I<(A...
1001a6a4:	39a80171 080cb3de d8b4e49c 6456c190     q..9..........Vd
1001a6b4:	7bcb8461 d532b670 486c5c74 d0b85742     a..{p.2.t\lHBW..
1001a6c4:	5051f4a7 537e4165 c31a17a4 963a275e     ..QPeA~S....^':.
1001a6d4:	cb3bab6b f11f9d45 abacfa58 934be303     k.;.E...X.....K.
1001a6e4:	552030fa f6ad766d 9188cc76 25f5024c     .0 Umv..v...L..%
1001a6f4:	fc4fe5d7 d7c52acb 80263544 8fb562a3     ..O..*..D5&..b..
1001a704:	49deb15a 6725ba1b 9845ea0e e15dfec0     Z..I..%g..E...].
1001a714:	02c32f75 12814cf0 a38d4697 c66bd3f9     u/...L...F....k.
1001a724:	e7038f5f 9515929c ebbf6d7a da955259     _.......zm..YR..
1001a734:	2dd4be83 d3587421 2949e069 448ec9c8     ...-!tX.i.I)...D
1001a744:	6a75c289 78f48e79 6b99583e dd27b971     ..ujy..x>X.kq.'.
1001a754:	b6bee14f 17f088ad 66c920ac b47dce3a     O........ .f:.}.
1001a764:	1863df4a 82e51a31 60975133 4562537f     J.c.1...3Q.`.SbE
1001a774:	e0b16477 84bb6bae 1cfe81a0 94f9082b     wd...k......+...
1001a784:	58704868 198f45fd 8794de6c b7527bf8     hHpX.E..l....{R.
1001a794:	23ab73d3 e2724b02 57e31f8f 2a6655ab     .s.#.Kr....W.Uf*
1001a7a4:	07b2eb28 032fb5c2 9a86c57b a5d33708     (...../.{....7..
1001a7b4:	f2302887 b223bfa5 ba02036a 5ced1682     .(0...#.j......\
1001a7c4:	2b8acf1c 92a779b4 f0f307f2 a14e69e2     ...+.y.......iN.
1001a7d4:	cd65daf4 d50605be 1fd13462 8ac4a6fe     ..e.....b4......
1001a7e4:	9d342e53 a0a2f355 32058ae1 75a4f6eb     S.4.U......2...u
1001a7f4:	390b83ec aa4060ef 065e719f 51bd6e10     ...9.`@..q^..n.Q
1001a804:	f93e218a 3d96dd06 aedd3e05 464de6bd     .!>....=.>....MF
1001a814:	b591548d 0571c45d 6f0406d4 ff605015     .T..].q....o.P`.
1001a824:	241998fb 97d6bde9 cc894043 7767d99e     ...$....C@....gw
1001a834:	bdb0e842 8807898b 38e7195b db79c8ee     B.......[..8..y.
1001a844:	47a17c0a e97c420f c9f8841e 00000000     .|.G.B|.........
1001a854:	83098086 48322bed ac1e1170 4e6c5a72     .....+2Hp...rZlN
1001a864:	fbfd0eff 560f8538 1e3daed5 27362d39     ....8..V..=.9-6'
1001a874:	640a0fd9 21685ca6 d19b5b54 3a24362e     ...d.\h!T[...6$:
1001a884:	b10c0a67 0f9357e7 d2b4ee96 9e1b9b91     g....W..........
1001a894:	4f80c0c5 a261dc20 695a774b 161c121a     ...O .a.KwZi....
1001a8a4:	0ae293ba e5c0a02a 433c22e0 1d121b17     ....*...."<C....
1001a8b4:	0b0e090d adf28bc7 b92db6a8 c8141ea9     ..........-.....
1001a8c4:	8557f119 4caf7507 bbee99dd fda37f60     ..W..u.L....`...
1001a8d4:	9ff70126 bc5c72f5 c544663b 345bfb7e     &....r\.;fD.~.[4
1001a8e4:	768b4329 dccb23c6 68b6edfc 63b8e4f1     )C.v.#.....h...c
1001a8f4:	cad731dc 10426385 40139722 2084c611     .1...cB."..@... 
1001a904:	7d854a24 f8d2bb3d 11aef932 6dc729a1     $J.}=...2....).m
1001a914:	4b1d9e2f f3dcb230 ec0d8652 d077c1e3     /..K0...R.....w.
1001a924:	6c2bb316 99a970b9 fa119448 2247e964     ..+l.p..H...d.G"
1001a934:	c4a8fc8c 1aa0f03f d8567d2c ef223390     ....?...,}V..3".
1001a944:	c787494e c1d938d1 fe8ccaa2 3698d40b     NI...8.........6
1001a954:	cfa6f581 28a57ade 26dab78e a43fadbf     .....z.(...&..?.
1001a964:	e42c3a9d 0d507892 9b6a5fcc 62547e46     .:,..xP.._j.F~Tb
1001a974:	c2f68d13 e890d8b8 5e2e39f7 f582c3af     .........9.^....
1001a984:	be9f5d80 7c69d093 a96fd52d b3cf2512     .]....i|-.o..%..
1001a994:	3bc8ac99 a710187d 6ee89c63 7bdb3bbb     ...;}...c..n.;.{
1001a9a4:	09cd2678 f46e5918 01ec9ab7 a8834f9a     x&...Yn......O..
1001a9b4:	65e6956e 7eaaffe6 0821bccf e6ef15e8     n..e...~..!.....
1001a9c4:	d9bae79b ce4a6f36 d4ea9f09 d629b07c     ....6oJ.....|.).
1001a9d4:	af31a4b2 312a3f23 30c6a594 c035a266     ..1.#?*1...0f.5.
1001a9e4:	37744ebc a6fc82ca b0e090d0 1533a7d8     .Nt7..........3.
1001a9f4:	4af10498 f741ecda 0e7fcd50 2f1791f6     ...J..A.P....../
1001aa04:	8d764dd6 4d43efb0 54ccaa4d dfe49604     .Mv...CMM..T....
1001aa14:	e39ed1b5 1b4c6a88 b8c12c1f 7f466551     .....jL..,..QeF.
1001aa24:	049d5eea 5d018c35 73fa8774 2efb0b41     .^..5..]t..sA...
1001aa34:	5ab3671d 5292dbd2 33e91056 136dd647     .g.Z...RV..3G.m.
1001aa44:	8c9ad761 7a37a10c 8e59f814 89eb133c     a.....7z..Y.<...
1001aa54:	eecea927 35b761c9 ede11ce5 3c7a47b1     '....a.5.....Gz<
1001aa64:	599cd2df 3f55f273 791814ce bf73c737     ...Ys.U?...y7.s.
1001aa74:	ea53f7cd 5b5ffdaa 14df3d6f 867844db     ..S..._[o=...Dx.
1001aa84:	81caaff3 3eb968c4 2c382434 5fc2a340     .....h.>4$8,@.._
1001aa94:	72161dc3 0cbce225 8b283c49 41ff0d95     ...r%...I<(....A
1001aaa4:	7139a801 de080cb3 9cd8b4e4 906456c1     ..9q.........Vd.
1001aab4:	617bcb84 70d532b6 74486c5c 42d0b857     ..{a.2.p\lHtW..B
1001aac4:	a75051f4 65537e41 a4c31a17 5e963a27     .QP.A~Se....':.^
1001aad4:	6bcb3bab 45f11f9d 58abacfa 03934be3     .;.k...E...X.K..
1001aae4:	fa552030 6df6ad76 769188cc 4c25f502     0 U.v..m...v..%L
1001aaf4:	d7fc4fe5 cbd7c52a 44802635 a38fb562     .O..*...5&.Db...
1001ab04:	5a49deb1 1b6725ba 0e9845ea c0e15dfe     ..IZ.%g..E...]..
1001ab14:	7502c32f f012814c 97a38d46 f9c66bd3     /..uL...F....k..
1001ab24:	5fe7038f 9c951592 7aebbf6d 59da9552     ..._....m..zR..Y
1001ab34:	832dd4be 21d35874 692949e0 c8448ec9     ..-.tX.!.I)i..D.
1001ab44:	896a75c2 7978f48e 3e6b9958 71dd27b9     .uj...xyX.k>.'.q
1001ab54:	4fb6bee1 ad17f088 ac66c920 3ab47dce     ...O.... .f..}.:
1001ab64:	4a1863df 3182e51a 33609751 7f456253     .c.J...1Q.`3SbE.
1001ab74:	77e0b164 ae84bb6b a01cfe81 2b94f908     d..wk..........+
1001ab84:	68587048 fd198f45 6c8794de f8b7527b     HpXhE......l{R..
1001ab94:	d323ab73 02e2724b 8f57e31f ab2a6655     s.#.Kr....W.Uf*.
1001aba4:	2807b2eb c2032fb5 7b9a86c5 08a5d337     ...(./.....{7...
1001abb4:	87f23028 a5b223bf 6aba0203 825ced16     (0...#.....j..\.
1001abc4:	1c2b8acf b492a779 f2f0f307 e2a14e69     ..+.y.......iN..
1001abd4:	f4cd65da bed50605 621fd134 fe8ac4a6     .e......4..b....
1001abe4:	539d342e 55a0a2f3 e132058a eb75a4f6     .4.S...U..2...u.
1001abf4:	ec390b83 efaa4060 9f065e71 1051bd6e     ..9.`@..q^..n.Q.
1001ac04:	8af93e21 063d96dd 05aedd3e bd464de6     !>....=.>....MF.
1001ac14:	8db59154 5d0571c4 d46f0406 15ff6050     T....q.]..o.P`..
1001ac24:	fb241998 e997d6bd 43cc8940 9e7767d9     ..$.....@..C.gw.
1001ac34:	42bdb0e8 8b880789 5b38e719 eedb79c8     ...B......8[.y..
1001ac44:	0a47a17c 0fe97c42 1ec9f884 00000000     |.G.B|..........
1001ac54:	86830980 ed48322b 70ac1e11 724e6c5a     ....+2H....pZlNr
1001ac64:	fffbfd0e 38560f85 d51e3dae 3927362d     ......V8.=..-6'9
1001ac74:	d9640a0f a621685c 54d19b5b 2e3a2436     ..d.\h!.[..T6$:.
1001ac84:	67b10c0a e70f9357 96d2b4ee 919e1b9b     ...gW...........
1001ac94:	c54f80c0 20a261dc 4b695a77 1a161c12     ..O..a. wZiK....
1001aca4:	ba0ae293 2ae5c0a0 e0433c22 171d121b     .......*"<C.....
1001acb4:	0d0b0e09 c7adf28b a8b92db6 a9c8141e     .........-......
1001acc4:	198557f1 074caf75 ddbbee99 60fda37f     .W..u.L........`
1001acd4:	269ff701 f5bc5c72 3bc54466 7e345bfb     ...&r\..fD.;.[4~
1001ace4:	29768b43 c6dccb23 fc68b6ed f163b8e4     C.v)#.....h...c.
1001acf4:	dccad731 85104263 22401397 112084c6     1...cB....@".. .
1001ad04:	247d854a 3df8d2bb 3211aef9 a16dc729     J.}$...=...2).m.
1001ad14:	2f4b1d9e 30f3dcb2 52ec0d86 e3d077c1     ..K/...0...R.w..
1001ad24:	166c2bb3 b999a970 48fa1194 642247e9     .+l.p......H.G"d
1001ad34:	8cc4a8fc 3f1aa0f0 2cd8567d 90ef2233     .......?}V.,3"..
1001ad44:	4ec78749 d1c1d938 a2fe8cca 0b3698d4     I..N8.........6.
1001ad54:	81cfa6f5 de28a57a 8e26dab7 bfa43fad     ....z.(...&..?..
1001ad64:	9de42c3a 920d5078 cc9b6a5f 4662547e     :,..xP.._j..~TbF
1001ad74:	13c2f68d b8e890d8 f75e2e39 aff582c3     ........9.^.....
1001ad84:	80be9f5d 937c69d0 2da96fd5 12b3cf25     ]....i|..o.-%...
1001ad94:	993bc8ac 7da71018 636ee89c bb7bdb3b     ..;....}..nc;.{.
1001ada4:	7809cd26 18f46e59 b701ec9a 9aa8834f     &..xYn......O...
1001adb4:	6e65e695 e67eaaff cf0821bc e8e6ef15     ..en..~..!......
1001adc4:	9bd9bae7 36ce4a6f 09d4ea9f 7cd629b0     ....oJ.6.....).|
1001add4:	b2af31a4 23312a3f 9430c6a5 66c035a2     .1..?*1#..0..5.f
1001ade4:	bc37744e caa6fc82 d0b0e090 d81533a7     Nt7..........3..
1001adf4:	984af104 daf741ec 500e7fcd f62f1791     ..J..A.....P../.
1001ae04:	d68d764d b04d43ef 4d54ccaa 04dfe496     Mv...CM...TM....
1001ae14:	b5e39ed1 881b4c6a 1fb8c12c 517f4665     ....jL..,...eF.Q
1001ae24:	ea049d5e 355d018c 7473fa87 412efb0b     ^.....]5..st...A
1001ae34:	1d5ab367 d25292db 5633e910 47136dd6     g.Z...R...3V.m.G
1001ae44:	618c9ad7 0c7a37a1 148e59f8 3c89eb13     ...a.7z..Y.....<
1001ae54:	27eecea9 c935b761 e5ede11c b13c7a47     ...'a.5.....Gz<.
1001ae64:	df599cd2 733f55f2 ce791814 37bf73c7     ..Y..U?s..y..s.7
1001ae74:	cdea53f7 aa5b5ffd 6f14df3d db867844     .S..._[.=..oDx..
1001ae84:	f381caaf c43eb968 342c3824 405fc2a3     ....h.>.$8,4.._@
1001ae94:	c372161d 250cbce2 498b283c 9541ff0d     ..r....%<(.I..A.
1001aea4:	017139a8 b3de080c e49cd8b4 c1906456     .9q.........Vd..
1001aeb4:	84617bcb b670d532 5c74486c 5742d0b8     .{a.2.p.lHt\..BW
1001aec4:	f4a75051 4165537e 17a4c31a 275e963a     QP..~SeA....:.^'
1001aed4:	ab6bcb3b 9d45f11f fa58abac e303934b     ;.k...E...X.K...
1001aee4:	30fa5520 766df6ad cc769188 024c25f5      U.0..mv..v..%L.
1001aef4:	e5d7fc4f 2acbd7c5 35448026 62a38fb5     O......*&.D5...b
1001af04:	b15a49de ba1b6725 ea0e9845 fec0e15d     .IZ.%g..E...]...
1001af14:	2f7502c3 4cf01281 4697a38d d3f9c66b     ..u/...L...Fk...
1001af24:	8f5fe703 929c9515 6d7aebbf 5259da95     .._.......zm..YR
1001af34:	be832dd4 7421d358 e0692949 c9c8448e     .-..X.!tI)i..D..
1001af44:	c2896a75 8e7978f4 583e6b99 b971dd27     uj...xy..k>X'.q.
1001af54:	e14fb6be 88ad17f0 20ac66c9 ce3ab47d     ..O......f. }.:.
1001af64:	df4a1863 1a3182e5 51336097 537f4562     c.J...1..`3QbE.S
1001af74:	6477e0b1 6bae84bb 81a01cfe 082b94f9     ..wd...k......+.
1001af84:	48685870 45fd198f de6c8794 7bf8b752     pXhH...E..l.R..{
1001af94:	73d323ab 4b02e272 1f8f57e3 55ab2a66     .#.sr..K.W..f*.U
1001afa4:	eb2807b2 b5c2032f c57b9a86 3708a5d3     ..(./.....{....7
1001afb4:	2887f230 bfa5b223 036aba02 16825ced     0..(#.....j..\..
1001afc4:	cf1c2b8a 79b492a7 07f2f0f3 69e2a14e     .+.....y....N..i
1001afd4:	daf4cd65 05bed506 34621fd1 a6fe8ac4     e.........b4....
1001afe4:	2e539d34 f355a0a2 8ae13205 f6eb75a4     4.S...U..2...u..
1001aff4:	83ec390b 60efaa40 719f065e 6e1051bd     .9..@..`^..q.Q.n
1001b004:	218af93e dd063d96 3e05aedd e6bd464d     >..!.=.....>MF..
1001b014:	548db591 c45d0571 06d46f04 5015ff60     ...Tq.]..o..`..P
1001b024:	98fb2419 bde997d6 4043cc89 d99e7767     .$........C@gw..
1001b034:	e842bdb0 898b8807 195b38e7 c8eedb79     ..B......8[.y...
1001b044:	7c0a47a1 420fe97c 841ec9f8 00000000     .G.||..B........
1001b054:	80868309 2bed4832 1170ac1e 5a724e6c     ....2H.+..p.lNrZ
1001b064:	0efffbfd 8538560f aed51e3d 2d392736     .....V8.=...6'9-
1001b074:	0fd9640a 5ca62168 5b54d19b 362e3a24     .d..h!.\..T[$:.6
1001b084:	0a67b10c 57e70f93 ee96d2b4 9b919e1b     ..g....W........
1001b094:	c0c54f80 dc20a261 774b695a 121a161c     .O..a. .ZiKw....
1001b0a4:	93ba0ae2 a02ae5c0 22e0433c 1b171d12     ......*.<C."....
1001b0b4:	090d0b0e 8bc7adf2 b6a8b92d 1ea9c814     ........-.......
1001b0c4:	f1198557 75074caf 99ddbbee 7f60fda3     W....L.u......`.
1001b0d4:	01269ff7 72f5bc5c 663bc544 fb7e345b     ..&.\..rD.;f[4~.
1001b0e4:	4329768b 23c6dccb edfc68b6 e4f163b8     .v)C...#.h...c..
1001b0f4:	31dccad7 63851042 97224013 c6112084     ...1B..c.@".. ..
1001b104:	4a247d85 bb3df8d2 f93211ae 29a16dc7     .}$J..=...2..m.)
1001b114:	9e2f4b1d b230f3dc 8652ec0d c1e3d077     .K/...0...R.w...
1001b124:	b3166c2b 70b999a9 9448fa11 e9642247     +l.....p..H.G"d.
1001b134:	fc8cc4a8 f03f1aa0 7d2cd856 3390ef22     ......?.V.,}"..3
1001b144:	494ec787 38d1c1d9 caa2fe8c d40b3698     ..NI...8.....6..
1001b154:	f581cfa6 7ade28a5 b78e26da adbfa43f     .....(.z.&..?...
1001b164:	3a9de42c 78920d50 5fcc9b6a 7e466254     ,..:P..xj.._TbF~
1001b174:	8d13c2f6 d8b8e890 39f75e2e c3aff582     .........^.9....
1001b184:	5d80be9f d0937c69 d52da96f 2512b3cf     ...]i|..o.-....%
1001b194:	ac993bc8 187da710 9c636ee8 3bbb7bdb     .;....}..nc..{.;
1001b1a4:	267809cd 5918f46e 9ab701ec 4f9aa883     ..x&n..Y.......O
1001b1b4:	956e65e6 ffe67eaa bccf0821 15e8e6ef     .en..~..!.......
1001b1c4:	e79bd9ba 6f36ce4a 9f09d4ea b07cd629     ....J.6o....).|.
1001b1d4:	a4b2af31 3f23312a a59430c6 a266c035     1...*1#?.0..5.f.
1001b1e4:	4ebc3774 82caa6fc 90d0b0e0 a7d81533     t7.N........3...
1001b1f4:	04984af1 ecdaf741 cd500e7f 91f62f17     .J..A.....P../..
1001b204:	4dd68d76 efb04d43 aa4d54cc 9604dfe4     v..MCM...TM.....
1001b214:	d1b5e39e 6a881b4c 2c1fb8c1 65517f46     ....L..j...,F.Qe
1001b224:	5eea049d 8c355d01 877473fa 0b412efb     ...^.]5..st...A.
1001b234:	671d5ab3 dbd25292 105633e9 d647136d     .Z.g.R...3V.m.G.
1001b244:	d7618c9a a10c7a37 f8148e59 133c89eb     ..a.7z..Y.....<.
1001b254:	a927eece 61c935b7 1ce5ede1 47b13c7a     ..'..5.a....z<.G
1001b264:	d2df599c f2733f55 14ce7918 c737bf73     .Y..U?s..y..s.7.
1001b274:	f7cdea53 fdaa5b5f 3d6f14df 44db8678     S..._[....o=x..D
1001b284:	aff381ca 68c43eb9 24342c38 a3405fc2     .....>.h8,4$._@.
1001b294:	1dc37216 e2250cbc 3c498b28 0d9541ff     .r....%.(.I<.A..
1001b2a4:	a8017139 0cb3de08 b4e49cd8 56c19064     9q..........d..V
1001b2b4:	cb84617b 32b670d5 6c5c7448 b85742d0     {a...p.2Ht\l.BW.

1001b2c4 <Te>:
1001b2c4:	c66363a5 f87c7c84 ee777799 f67b7b8d     .cc..||..ww..{{.
1001b2d4:	fff2f20d d66b6bbd de6f6fb1 91c5c554     .....kk..oo.T...
1001b2e4:	60303050 02010103 ce6767a9 562b2b7d     P00`.....gg.}++V
1001b2f4:	e7fefe19 b5d7d762 4dababe6 ec76769a     ....b......M.vv.
1001b304:	8fcaca45 1f82829d 89c9c940 fa7d7d87     E.......@....}}.
1001b314:	effafa15 b25959eb 8e4747c9 fbf0f00b     .....YY..GG.....
1001b324:	41adadec b3d4d467 5fa2a2fd 45afafea     ...Ag......_...E
1001b334:	239c9cbf 53a4a4f7 e4727296 9bc0c05b     ...#...S.rr.[...
1001b344:	75b7b7c2 e1fdfd1c 3d9393ae 4c26266a     ...u.......=j&&L
1001b354:	6c36365a 7e3f3f41 f5f7f702 83cccc4f     Z66lA??~....O...
1001b364:	6834345c 51a5a5f4 d1e5e534 f9f1f108     \44h...Q4.......
1001b374:	e2717193 abd8d873 62313153 2a15153f     .qq.s...S11b?..*
1001b384:	0804040c 95c7c752 46232365 9dc3c35e     ....R...e##F^...
1001b394:	30181828 379696a1 0a05050f 2f9a9ab5     (..0...7......./
1001b3a4:	0e070709 24121236 1b80809b dfe2e23d     ....6..$....=...
1001b3b4:	cdebeb26 4e272769 7fb2b2cd ea75759f     &...i''N.....uu.
1001b3c4:	1209091b 1d83839e 582c2c74 341a1a2e     ........t,,X...4
1001b3d4:	361b1b2d dc6e6eb2 b45a5aee 5ba0a0fb     -..6.nn..ZZ....[
1001b3e4:	a45252f6 763b3b4d b7d6d661 7db3b3ce     .RR.M;;va......}
1001b3f4:	5229297b dde3e33e 5e2f2f71 13848497     {))R>...q//^....
1001b404:	a65353f5 b9d1d168 00000000 c1eded2c     .SS.h.......,...
1001b414:	40202060 e3fcfc1f 79b1b1c8 b65b5bed     `  @.......y.[[.
1001b424:	d46a6abe 8dcbcb46 67bebed9 7239394b     .jj.F......gK99r
1001b434:	944a4ade 984c4cd4 b05858e8 85cfcf4a     .JJ..LL..XX.J...
1001b444:	bbd0d06b c5efef2a 4faaaae5 edfbfb16     k...*......O....
1001b454:	864343c5 9a4d4dd7 66333355 11858594     .CC..MM.U33f....
1001b464:	8a4545cf e9f9f910 04020206 fe7f7f81     .EE.............
1001b474:	a05050f0 783c3c44 259f9fba 4ba8a8e3     .PP.D<<x...%...K
1001b484:	a25151f3 5da3a3fe 804040c0 058f8f8a     .QQ....].@@.....
1001b494:	3f9292ad 219d9dbc 70383848 f1f5f504     ...?...!H88p....
1001b4a4:	63bcbcdf 77b6b6c1 afdada75 42212163     ...c...wu...c!!B
1001b4b4:	20101030 e5ffff1a fdf3f30e bfd2d26d     0.. ........m...
1001b4c4:	81cdcd4c 180c0c14 26131335 c3ecec2f     L.......5..&/...
1001b4d4:	be5f5fe1 359797a2 884444cc 2e171739     .__....5.DD.9...
1001b4e4:	93c4c457 55a7a7f2 fc7e7e82 7a3d3d47     W......U.~~.G==z
1001b4f4:	c86464ac ba5d5de7 3219192b e6737395     .dd..]].+..2.ss.
1001b504:	c06060a0 19818198 9e4f4fd1 a3dcdc7f     .``......OO.....
1001b514:	44222266 542a2a7e 3b9090ab 0b888883     f""D~**T...;....
1001b524:	8c4646ca c7eeee29 6bb8b8d3 2814143c     .FF.)......k<..(
1001b534:	a7dede79 bc5e5ee2 160b0b1d addbdb76     y....^^.....v...
1001b544:	dbe0e03b 64323256 743a3a4e 140a0a1e     ;...V22dN::t....
1001b554:	924949db 0c06060a 4824246c b85c5ce4     .II.....l$$H.\\.
1001b564:	9fc2c25d bdd3d36e 43acacef c46262a6     ]...n......C.bb.
1001b574:	399191a8 319595a4 d3e4e437 f279798b     ...9...17....yy.
1001b584:	d5e7e732 8bc8c843 6e373759 da6d6db7     2...C...Y77n.mm.
1001b594:	018d8d8c b1d5d564 9c4e4ed2 49a9a9e0     ....d....NN....I
1001b5a4:	d86c6cb4 ac5656fa f3f4f407 cfeaea25     .ll..VV.....%...
1001b5b4:	ca6565af f47a7a8e 47aeaee9 10080818     .ee..zz....G....
1001b5c4:	6fbabad5 f0787888 4a25256f 5c2e2e72     ...o.xx.o%%Jr..\
1001b5d4:	381c1c24 57a6a6f1 73b4b4c7 97c6c651     $..8...W...sQ...
1001b5e4:	cbe8e823 a1dddd7c e874749c 3e1f1f21     #...|....tt.!..>
1001b5f4:	964b4bdd 61bdbddc 0d8b8b86 0f8a8a85     .KK....a........
1001b604:	e0707090 7c3e3e42 71b5b5c4 cc6666aa     .pp.B>>|...q.ff.
1001b614:	904848d8 06030305 f7f6f601 1c0e0e12     .HH.............
1001b624:	c26161a3 6a35355f ae5757f9 69b9b9d0     .aa._55j.WW....i
1001b634:	17868691 99c1c158 3a1d1d27 279e9eb9     ....X...'..:...'
1001b644:	d9e1e138 ebf8f813 2b9898b3 22111133     8..........+3.."
1001b654:	d26969bb a9d9d970 078e8e89 339494a7     .ii.p..........3
1001b664:	2d9b9bb6 3c1e1e22 15878792 c9e9e920     ...-"..<.... ...
1001b674:	87cece49 aa5555ff 50282878 a5dfdf7a     I....UU.x((Pz...
1001b684:	038c8c8f 59a1a1f8 09898980 1a0d0d17     .......Y........
1001b694:	65bfbfda d7e6e631 844242c6 d06868b8     ...e1....BB..hh.
1001b6a4:	824141c3 299999b0 5a2d2d77 1e0f0f11     .AA....)w--Z....
1001b6b4:	7bb0b0cb a85454fc 6dbbbbd6 2c16163a     ...{.TT....m:..,
1001b6c4:	a5c66363 84f87c7c 99ee7777 8df67b7b     cc..||..ww..{{..
1001b6d4:	0dfff2f2 bdd66b6b b1de6f6f 5491c5c5     ....kk..oo.....T
1001b6e4:	50603030 03020101 a9ce6767 7d562b2b     00`P....gg..++V}
1001b6f4:	19e7fefe 62b5d7d7 e64dabab 9aec7676     .......b..M.vv..
1001b704:	458fcaca 9d1f8282 4089c9c9 87fa7d7d     ...E.......@}}..
1001b714:	15effafa ebb25959 c98e4747 0bfbf0f0     ....YY..GG......
1001b724:	ec41adad 67b3d4d4 fd5fa2a2 ea45afaf     ..A....g.._...E.
1001b734:	bf239c9c f753a4a4 96e47272 5b9bc0c0     ..#...S.rr.....[
1001b744:	c275b7b7 1ce1fdfd ae3d9393 6a4c2626     ..u.......=.&&Lj
1001b754:	5a6c3636 417e3f3f 02f5f7f7 4f83cccc     66lZ??~A.......O
1001b764:	5c683434 f451a5a5 34d1e5e5 08f9f1f1     44h\..Q....4....
1001b774:	93e27171 73abd8d8 53623131 3f2a1515     qq.....s11bS..*?
1001b784:	0c080404 5295c7c7 65462323 5e9dc3c3     .......R##Fe...^
1001b794:	28301818 a1379696 0f0a0505 b52f9a9a     ..0(..7......./.
1001b7a4:	090e0707 36241212 9b1b8080 3ddfe2e2     ......$6.......=
1001b7b4:	26cdebeb 694e2727 cd7fb2b2 9fea7575     ...&''Ni....uu..
1001b7c4:	1b120909 9e1d8383 74582c2c 2e341a1a     ........,,Xt..4.
1001b7d4:	2d361b1b b2dc6e6e eeb45a5a fb5ba0a0     ..6-nn..ZZ....[.
1001b7e4:	f6a45252 4d763b3b 61b7d6d6 ce7db3b3     RR..;;vM...a..}.
1001b7f4:	7b522929 3edde3e3 715e2f2f 97138484     ))R{...>//^q....
1001b804:	f5a65353 68b9d1d1 00000000 2cc1eded     SS.....h.......,
1001b814:	60402020 1fe3fcfc c879b1b1 edb65b5b       @`......y.[[..
1001b824:	bed46a6a 468dcbcb d967bebe 4b723939     jj.....F..g.99rK
1001b834:	de944a4a d4984c4c e8b05858 4a85cfcf     JJ..LL..XX.....J
1001b844:	6bbbd0d0 2ac5efef e54faaaa 16edfbfb     ...k...*..O.....
1001b854:	c5864343 d79a4d4d 55663333 94118585     CC..MM..33fU....
1001b864:	cf8a4545 10e9f9f9 06040202 81fe7f7f     EE..............
1001b874:	f0a05050 44783c3c ba259f9f e34ba8a8     PP..<<xD..%...K.
1001b884:	f3a25151 fe5da3a3 c0804040 8a058f8f     QQ....].@@......
1001b894:	ad3f9292 bc219d9d 48703838 04f1f5f5     ..?...!.88pH....
1001b8a4:	df63bcbc c177b6b6 75afdada 63422121     ..c...w....u!!Bc
1001b8b4:	30201010 1ae5ffff 0efdf3f3 6dbfd2d2     .. 0...........m
1001b8c4:	4c81cdcd 14180c0c 35261313 2fc3ecec     ...L......&5.../
1001b8d4:	e1be5f5f a2359797 cc884444 392e1717     __....5.DD.....9
1001b8e4:	5793c4c4 f255a7a7 82fc7e7e 477a3d3d     ...W..U.~~..==zG
1001b8f4:	acc86464 e7ba5d5d 2b321919 95e67373     dd..]]....2+ss..
1001b904:	a0c06060 98198181 d19e4f4f 7fa3dcdc     ``......OO......
1001b914:	66442222 7e542a2a ab3b9090 830b8888     ""Df**T~..;.....
1001b924:	ca8c4646 29c7eeee d36bb8b8 3c281414     FF.....)..k...(<
1001b934:	79a7dede e2bc5e5e 1d160b0b 76addbdb     ...y^^.........v
1001b944:	3bdbe0e0 56643232 4e743a3a 1e140a0a     ...;22dV::tN....
1001b954:	db924949 0a0c0606 6c482424 e4b85c5c     II......$$Hl\\..
1001b964:	5d9fc2c2 6ebdd3d3 ef43acac a6c46262     ...]...n..C.bb..
1001b974:	a8399191 a4319595 37d3e4e4 8bf27979     ..9...1....7yy..
1001b984:	32d5e7e7 438bc8c8 596e3737 b7da6d6d     ...2...C77nYmm..
1001b994:	8c018d8d 64b1d5d5 d29c4e4e e049a9a9     .......dNN....I.
1001b9a4:	b4d86c6c faac5656 07f3f4f4 25cfeaea     ll..VV.........%
1001b9b4:	afca6565 8ef47a7a e947aeae 18100808     ee..zz....G.....
1001b9c4:	d56fbaba 88f07878 6f4a2525 725c2e2e     ..o.xx..%%Jo..\r
1001b9d4:	24381c1c f157a6a6 c773b4b4 5197c6c6     ..8$..W...s....Q
1001b9e4:	23cbe8e8 7ca1dddd 9ce87474 213e1f1f     ...#...|tt....>!
1001b9f4:	dd964b4b dc61bdbd 860d8b8b 850f8a8a     KK....a.........
1001ba04:	90e07070 427c3e3e c471b5b5 aacc6666     pp..>>|B..q.ff..
1001ba14:	d8904848 05060303 01f7f6f6 121c0e0e     HH..............
1001ba24:	a3c26161 5f6a3535 f9ae5757 d069b9b9     aa..55j_WW....i.
1001ba34:	91178686 5899c1c1 273a1d1d b9279e9e     .......X..:'..'.
1001ba44:	38d9e1e1 13ebf8f8 b32b9898 33221111     ...8......+..."3
1001ba54:	bbd26969 70a9d9d9 89078e8e a7339494     ii.....p......3.
1001ba64:	b62d9b9b 223c1e1e 92158787 20c9e9e9     ..-...<"....... 
1001ba74:	4987cece ffaa5555 78502828 7aa5dfdf     ...IUU..((Px...z
1001ba84:	8f038c8c f859a1a1 80098989 171a0d0d     ......Y.........
1001ba94:	da65bfbf 31d7e6e6 c6844242 b8d06868     ..e....1BB..hh..
1001baa4:	c3824141 b0299999 775a2d2d 111e0f0f     AA....).--Zw....
1001bab4:	cb7bb0b0 fca85454 d66dbbbb 3a2c1616     ..{.TT....m...,:
1001bac4:	63a5c663 7c84f87c 7799ee77 7b8df67b     c..c|..|w..w{..{
1001bad4:	f20dfff2 6bbdd66b 6fb1de6f c55491c5     ....k..ko..o..T.
1001bae4:	30506030 01030201 67a9ce67 2b7d562b     0`P0....g..g+V}+
1001baf4:	fe19e7fe d762b5d7 abe64dab 769aec76     ......b..M..v..v
1001bb04:	ca458fca 829d1f82 c94089c9 7d87fa7d     ..E.......@.}..}
1001bb14:	fa15effa 59ebb259 47c98e47 f00bfbf0     ....Y..YG..G....
1001bb24:	adec41ad d467b3d4 a2fd5fa2 afea45af     .A....g.._...E..
1001bb34:	9cbf239c a4f753a4 7296e472 c05b9bc0     .#...S..r..r..[.
1001bb44:	b7c275b7 fd1ce1fd 93ae3d93 266a4c26     .u.......=..&Lj&
1001bb54:	365a6c36 3f417e3f f702f5f7 cc4f83cc     6lZ6?~A?......O.
1001bb64:	345c6834 a5f451a5 e534d1e5 f108f9f1     4h\4.Q....4.....
1001bb74:	7193e271 d873abd8 31536231 153f2a15     q..q..s.1bS1.*?.
1001bb84:	040c0804 c75295c7 23654623 c35e9dc3     ......R.#Fe#..^.
1001bb94:	18283018 96a13796 050f0a05 9ab52f9a     .0(..7......./..
1001bba4:	07090e07 12362412 809b1b80 e23ddfe2     .....$6.......=.
1001bbb4:	eb26cdeb 27694e27 b2cd7fb2 759fea75     ..&.'Ni'....u..u
1001bbc4:	091b1209 839e1d83 2c74582c 1a2e341a     ........,Xt,.4..
1001bbd4:	1b2d361b 6eb2dc6e 5aeeb45a a0fb5ba0     .6-.n..nZ..Z.[..
1001bbe4:	52f6a452 3b4d763b d661b7d6 b3ce7db3     R..R;vM;..a..}..
1001bbf4:	297b5229 e33edde3 2f715e2f 84971384     )R{)..>./^q/....
1001bc04:	53f5a653 d168b9d1 00000000 ed2cc1ed     S..S..h.......,.
1001bc14:	20604020 fc1fe3fc b1c879b1 5bedb65b      @` .....y..[..[
1001bc24:	6abed46a cb468dcb bed967be 394b7239     j..j..F..g..9rK9
1001bc34:	4ade944a 4cd4984c 58e8b058 cf4a85cf     J..JL..LX..X..J.
1001bc44:	d06bbbd0 ef2ac5ef aae54faa fb16edfb     ..k...*..O......
1001bc54:	43c58643 4dd79a4d 33556633 85941185     C..CM..M3fU3....
1001bc64:	45cf8a45 f910e9f9 02060402 7f81fe7f     E..E............
1001bc74:	50f0a050 3c44783c 9fba259f a8e34ba8     P..P<xD<.%...K..
1001bc84:	51f3a251 a3fe5da3 40c08040 8f8a058f     Q..Q.]..@..@....
1001bc94:	92ad3f92 9dbc219d 38487038 f504f1f5     .?...!..8pH8....
1001bca4:	bcdf63bc b6c177b6 da75afda 21634221     .c...w....u.!Bc!
1001bcb4:	10302010 ff1ae5ff f30efdf3 d26dbfd2     . 0...........m.
1001bcc4:	cd4c81cd 0c14180c 13352613 ec2fc3ec     ..L......&5.../.
1001bcd4:	5fe1be5f 97a23597 44cc8844 17392e17     _.._.5..D..D..9.
1001bce4:	c45793c4 a7f255a7 7e82fc7e 3d477a3d     ..W..U..~..~=zG=
1001bcf4:	64acc864 5de7ba5d 192b3219 7395e673     d..d]..].2+.s..s
1001bd04:	60a0c060 81981981 4fd19e4f dc7fa3dc     `..`....O..O....
1001bd14:	22664422 2a7e542a 90ab3b90 88830b88     "Df"*T~*.;......
1001bd24:	46ca8c46 ee29c7ee b8d36bb8 143c2814     F..F..)..k...(<.
1001bd34:	de79a7de 5ee2bc5e 0b1d160b db76addb     ..y.^..^......v.
1001bd44:	e03bdbe0 32566432 3a4e743a 0a1e140a     ..;.2dV2:tN:....
1001bd54:	49db9249 060a0c06 246c4824 5ce4b85c     I..I....$Hl$\..\
1001bd64:	c25d9fc2 d36ebdd3 acef43ac 62a6c462     ..]...n..C..b..b
1001bd74:	91a83991 95a43195 e437d3e4 798bf279     .9...1....7.y..y
1001bd84:	e732d5e7 c8438bc8 37596e37 6db7da6d     ..2...C.7nY7m..m
1001bd94:	8d8c018d d564b1d5 4ed29c4e a9e049a9     ......d.N..N.I..
1001bda4:	6cb4d86c 56faac56 f407f3f4 ea25cfea     l..lV..V......%.
1001bdb4:	65afca65 7a8ef47a aee947ae 08181008     e..ez..z.G......
1001bdc4:	bad56fba 7888f078 256f4a25 2e725c2e     .o..x..x%Jo%.\r.
1001bdd4:	1c24381c a6f157a6 b4c773b4 c65197c6     .8$..W...s....Q.
1001bde4:	e823cbe8 dd7ca1dd 749ce874 1f213e1f     ..#...|.t..t.>!.
1001bdf4:	4bdd964b bddc61bd 8b860d8b 8a850f8a     K..K.a..........
1001be04:	7090e070 3e427c3e b5c471b5 66aacc66     p..p>|B>.q..f..f
1001be14:	48d89048 03050603 f601f7f6 0e121c0e     H..H............
1001be24:	61a3c261 355f6a35 57f9ae57 b9d069b9     a..a5j_5W..W.i..
1001be34:	86911786 c15899c1 1d273a1d 9eb9279e     ......X..:'..'..
1001be44:	e138d9e1 f813ebf8 98b32b98 11332211     ..8......+..."3.
1001be54:	69bbd269 d970a9d9 8e89078e 94a73394     i..i..p......3..
1001be64:	9bb62d9b 1e223c1e 87921587 e920c9e9     .-...<"....... .
1001be74:	ce4987ce 55ffaa55 28785028 df7aa5df     ..I.U..U(Px(..z.
1001be84:	8c8f038c a1f859a1 89800989 0d171a0d     .....Y..........
1001be94:	bfda65bf e631d7e6 42c68442 68b8d068     .e....1.B..Bh..h
1001bea4:	41c38241 99b02999 2d775a2d 0f111e0f     A..A.)..-Zw-....
1001beb4:	b0cb7bb0 54fca854 bbd66dbb 163a2c16     .{..T..T.m...,:.
1001bec4:	6363a5c6 7c7c84f8 777799ee 7b7b8df6     ..cc..||..ww..{{
1001bed4:	f2f20dff 6b6bbdd6 6f6fb1de c5c55491     ......kk..oo.T..
1001bee4:	30305060 01010302 6767a9ce 2b2b7d56     `P00......ggV}++
1001bef4:	fefe19e7 d7d762b5 ababe64d 76769aec     .....b..M.....vv
1001bf04:	caca458f 82829d1f c9c94089 7d7d87fa     .E.......@....}}
1001bf14:	fafa15ef 5959ebb2 4747c98e f0f00bfb     ......YY..GG....
1001bf24:	adadec41 d4d467b3 a2a2fd5f afafea45     A....g.._...E...
1001bf34:	9c9cbf23 a4a4f753 727296e4 c0c05b9b     #...S.....rr.[..
1001bf44:	b7b7c275 fdfd1ce1 9393ae3d 26266a4c     u.......=...Lj&&
1001bf54:	36365a6c 3f3f417e f7f702f5 cccc4f83     lZ66~A??.....O..
1001bf64:	34345c68 a5a5f451 e5e534d1 f1f108f9     h\44Q....4......
1001bf74:	717193e2 d8d873ab 31315362 15153f2a     ..qq.s..bS11*?..
1001bf84:	04040c08 c7c75295 23236546 c3c35e9d     .....R..Fe##.^..
1001bf94:	18182830 9696a137 05050f0a 9a9ab52f     0(..7......./...
1001bfa4:	0707090e 12123624 80809b1b e2e23ddf     ....$6.......=..
1001bfb4:	ebeb26cd 2727694e b2b2cd7f 75759fea     .&..Ni''......uu
1001bfc4:	09091b12 83839e1d 2c2c7458 1a1a2e34     ........Xt,,4...
1001bfd4:	1b1b2d36 6e6eb2dc 5a5aeeb4 a0a0fb5b     6-....nn..ZZ[...
1001bfe4:	5252f6a4 3b3b4d76 d6d661b7 b3b3ce7d     ..RRvM;;.a..}...
1001bff4:	29297b52 e3e33edd 2f2f715e 84849713     R{)).>..^q//....
1001c004:	5353f5a6 d1d168b9 00000000 eded2cc1     ..SS.h.......,..
1001c014:	20206040 fcfc1fe3 b1b1c879 5b5bedb6     @`  ....y.....[[
1001c024:	6a6abed4 cbcb468d bebed967 39394b72     ..jj.F..g...rK99
1001c034:	4a4ade94 4c4cd498 5858e8b0 cfcf4a85     ..JJ..LL..XX.J..
1001c044:	d0d06bbb efef2ac5 aaaae54f fbfb16ed     .k...*..O.......
1001c054:	4343c586 4d4dd79a 33335566 85859411     ..CC..MMfU33....
1001c064:	4545cf8a f9f910e9 02020604 7f7f81fe     ..EE............
1001c074:	5050f0a0 3c3c4478 9f9fba25 a8a8e34b     ..PPxD<<%...K...
1001c084:	5151f3a2 a3a3fe5d 4040c080 8f8f8a05     ..QQ].....@@....
1001c094:	9292ad3f 9d9dbc21 38384870 f5f504f1     ?...!...pH88....
1001c0a4:	bcbcdf63 b6b6c177 dada75af 21216342     c...w....u..Bc!!
1001c0b4:	10103020 ffff1ae5 f3f30efd d2d26dbf      0...........m..
1001c0c4:	cdcd4c81 0c0c1418 13133526 ecec2fc3     .L......&5.../..
1001c0d4:	5f5fe1be 9797a235 4444cc88 1717392e     ..__5.....DD.9..
1001c0e4:	c4c45793 a7a7f255 7e7e82fc 3d3d477a     .W..U.....~~zG==
1001c0f4:	6464acc8 5d5de7ba 19192b32 737395e6     ..dd..]]2+....ss
1001c104:	6060a0c0 81819819 4f4fd19e dcdc7fa3     ..``......OO....
1001c114:	22226644 2a2a7e54 9090ab3b 8888830b     Df""T~**;.......
1001c124:	4646ca8c eeee29c7 b8b8d36b 14143c28     ..FF.)..k...(<..
1001c134:	dede79a7 5e5ee2bc 0b0b1d16 dbdb76ad     .y....^^.....v..
1001c144:	e0e03bdb 32325664 3a3a4e74 0a0a1e14     .;..dV22tN::....
1001c154:	4949db92 06060a0c 24246c48 5c5ce4b8     ..II....Hl$$..\\
1001c164:	c2c25d9f d3d36ebd acacef43 6262a6c4     .]...n..C.....bb
1001c174:	9191a839 9595a431 e4e437d3 79798bf2     9...1....7....yy
1001c184:	e7e732d5 c8c8438b 3737596e 6d6db7da     .2...C..nY77..mm
1001c194:	8d8d8c01 d5d564b1 4e4ed29c a9a9e049     .....d....NNI...
1001c1a4:	6c6cb4d8 5656faac f4f407f3 eaea25cf     ..ll..VV.....%..
1001c1b4:	6565afca 7a7a8ef4 aeaee947 08081810     ..ee..zzG.......
1001c1c4:	babad56f 787888f0 25256f4a 2e2e725c     o.....xxJo%%\r..
1001c1d4:	1c1c2438 a6a6f157 b4b4c773 c6c65197     8$..W...s....Q..
1001c1e4:	e8e823cb dddd7ca1 74749ce8 1f1f213e     .#...|....tt>!..
1001c1f4:	4b4bdd96 bdbddc61 8b8b860d 8a8a850f     ..KKa...........
1001c204:	707090e0 3e3e427c b5b5c471 6666aacc     ..pp|B>>q.....ff
1001c214:	4848d890 03030506 f6f601f7 0e0e121c     ..HH............
1001c224:	6161a3c2 35355f6a 5757f9ae b9b9d069     ..aaj_55..WWi...
1001c234:	86869117 c1c15899 1d1d273a 9e9eb927     .....X..:'..'...
1001c244:	e1e138d9 f8f813eb 9898b32b 11113322     .8......+..."3..
1001c254:	6969bbd2 d9d970a9 8e8e8907 9494a733     ..ii.p......3...
1001c264:	9b9bb62d 1e1e223c 87879215 e9e920c9     -...<"....... ..
1001c274:	cece4987 5555ffaa 28287850 dfdf7aa5     .I....UUPx((.z..
1001c284:	8c8c8f03 a1a1f859 89898009 0d0d171a     ....Y...........
1001c294:	bfbfda65 e6e631d7 4242c684 6868b8d0     e....1....BB..hh
1001c2a4:	4141c382 9999b029 2d2d775a 0f0f111e     ..AA)...Zw--....
1001c2b4:	b0b0cb7b 5454fca8 bbbbd66d 16163a2c     {.....TTm...,:..

1001c2c4 <rcon>:
1001c2c4:	01000000 02000000 04000000 08000000     ................
1001c2d4:	10000000 20000000 40000000 80000000     ....... ...@....
1001c2e4:	1b000000 36000000 5f43584d 45535341     .......6MXC_ASSE
1001c2f4:	25205452 25232073 28203a64 0a297325     RT %s #%d: (%s).
1001c304:	00000000 6573552f 732f7372 6c696f70     ..../Users/spoil
1001c314:	442f7265 6d75636f 73746e65 7469472f     er/Documents/Git
1001c324:	2f627548 2d544143 66746365 3230322d     Hub/CAT-ectf-202
1001c334:	736d2f34 4c2f6b64 61726269 73656972     4/msdk/Libraries
1001c344:	616f422f 2f736472 3758414d 30303038     /Boards/MAX78000
1001c354:	4854462f 65525f52 532f4176 6372756f     /FTHR_RevA/Sourc
1001c364:	6f622f65 2e647261 00000063 4c494146     e/board.c...FAIL
1001c374:	00000000                                ....

1001c378 <num_leds>:
1001c378:	00000003                                ....

1001c37c <led_pin>:
1001c37c:	40080400 00000001 00010001 40080400     ...@...........@
1001c38c:	00000002 00010001 40080400 00000004     ...........@....
1001c39c:	00010001                                ....

1001c3a0 <num_pbs>:
1001c3a0:	00000002                                ....

1001c3a4 <pb_pin>:
1001c3a4:	40008000 00000004 00010100 40009000     ...@...........@
1001c3b4:	00000080 00010100 6573552f 732f7372     ......../Users/s
1001c3c4:	6c696f70 442f7265 6d75636f 73746e65     poiler/Documents
1001c3d4:	7469472f 2f627548 2d544143 66746365     /GitHub/CAT-ectf
1001c3e4:	3230322d 736d2f34 4c2f6b64 61726269     -2024/msdk/Libra
1001c3f4:	73656972 73694d2f 69724463 73726576     ries/MiscDrivers
1001c404:	44454c2f 64656c2f 0000632e 20786469     /LED/led.c..idx 
1001c414:	756e203c 656c5f6d 00007364              < num_leds..

1001c420 <gpio_cfg_uart3>:
1001c420:	40080400 000000c0 00000003              ...@........

1001c42c <gpio_cfg_uart2>:
1001c42c:	40009000 00000003 00000002              ...@........

1001c438 <gpio_cfg_uart1>:
1001c438:	40008000 00003000 00000002              ...@.0......

1001c444 <gpio_cfg_uart0>:
1001c444:	40008000 00000003 00000002              ...@........

1001c450 <gpio_cfg_i2c2>:
1001c450:	40008000 c0000000 00000002              ...@........

1001c45c <gpio_cfg_i2c1>:
1001c45c:	40008000 00030000 00000002              ...@........

1001c468 <gpio_cfg_i2c0>:
1001c468:	40008000 00000c00 00000002              ...@........

1001c474 <gpio_cfg_extclk>:
1001c474:	40008000 00000008 00000002 6573552f     ...@......../Use
1001c484:	732f7372 6c696f70 442f7265 6d75636f     rs/spoiler/Docum
1001c494:	73746e65 7469472f 2f627548 2d544143     ents/GitHub/CAT-
1001c4a4:	66746365 3230322d 736d2f34 4c2f6b64     ectf-2024/msdk/L
1001c4b4:	61726269 73656972 534d432f 2e2f5349     ibraries/CMSIS/.
1001c4c4:	65502f2e 68706972 76697244 2f737265     ./PeriphDrivers/
1001c4d4:	72756f53 472f6563 2f4f4950 6f697067     Source/GPIO/gpio
1001c4e4:	6d6f635f 2e6e6f6d 00000063 74726f70     _common.c...port
1001c4f4:	4d203c20 435f4358 475f4746 5f4f4950      < MXC_CFG_GPIO_
1001c504:	54534e49 45434e41 00000053              INSTANCES...

1001c510 <CSWTCH.16>:
1001c510:	40009000 40080400 40080600 00464e49     ...@...@...@INF.
1001c520:	00666e69 004e414e 006e616e 33323130     inf.NAN.nan.0123
1001c530:	37363534 62613938 66656463 00000000     456789abcdef....
1001c540:	33323130 37363534 42413938 46454443     0123456789ABCDEF
1001c550:	00000000 6c756e28 0000296c 00000030     ....(null)..0...

1001c560 <zeroes.0>:
1001c560:	30303030 30303030 30303030 30303030     0000000000000000

1001c570 <blanks.1>:
1001c570:	20202020 20202020 20202020 20202020                     

1001c580 <zeroes.0>:
1001c580:	30303030 30303030 30303030 30303030     0000000000000000

1001c590 <blanks.1>:
1001c590:	20202020 20202020 20202020 20202020                     
1001c5a0:	0000000a 435f434c 414c4c4f 00004554     ....LC_COLLATE..
1001c5b0:	435f434c 45505954 00000000 4d5f434c     LC_CTYPE....LC_M
1001c5c0:	54454e4f 00595241 4e5f434c 52454d55     ONETARY.LC_NUMER
1001c5d0:	00004349 545f434c 00454d49 4d5f434c     IC..LC_TIME.LC_M
1001c5e0:	41535345 00534547                       ESSAGES.

1001c5e8 <_ctype_>:
1001c5e8:	20202000 20202020 28282020 20282828     .         ((((( 
1001c5f8:	20202020 20202020 20202020 20202020                     
1001c608:	10108820 10101010 10101010 10101010      ...............
1001c618:	04040410 04040404 10040404 10101010     ................
1001c628:	41411010 41414141 01010101 01010101     ..AAAAAA........
1001c638:	01010101 01010101 01010101 10101010     ................
1001c648:	42421010 42424242 02020202 02020202     ..BBBBBB........
1001c658:	02020202 02020202 02020202 10101010     ................
1001c668:	00000020 00000000 00000000 00000000      ...............
	...
1001c6ec:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
1001c6fc:	6c6c6142 7320636f 65636375 64656465     Balloc succeeded
1001c70c:	00000000 6c6f562f 73656d75 7461642f     ..../Volumes/dat
1001c71c:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
1001c72c:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
1001c73c:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
1001c74c:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
1001c75c:	696c2f62 732f6362 696c6474 74642f62     b/libc/stdlib/dt
1001c76c:	632e616f 00000000                       oa.c....

1001c774 <zeroes.0>:
1001c774:	30303030 30303030 30303030 30303030     0000000000000000

1001c784 <blanks.1>:
1001c784:	20202020 20202020 20202020 20202020                     
1001c794:	6c6f562f 73656d75 7461642f 656a2f61     /Volumes/data/je
1001c7a4:	6e696b6e 6f772f73 70736b72 2f656361     nkins/workspace/
1001c7b4:	2d554e47 6c6f6f74 69616863 72612f6e     GNU-toolchain/ar
1001c7c4:	32312d6d 6372732f 77656e2f 2d62696c     m-12/src/newlib-
1001c7d4:	77677963 6e2f6e69 696c7765 696c2f62     cygwin/newlib/li
1001c7e4:	732f6362 696c6474 706d2f62 2e636572     bc/stdlib/mprec.
1001c7f4:	00000063                                c...

1001c7f8 <p05.0>:
1001c7f8:	00000005 00000019 0000007d 00000000     ........}.......

1001c808 <__mprec_bigtens>:
1001c808:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
1001c818:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
1001c828:	7f73bf3c 75154fdd                       <.s..O.u

1001c830 <__mprec_tens>:
1001c830:	00000000 3ff00000 00000000 40240000     .......?......$@
1001c840:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
1001c850:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
1001c860:	00000000 412e8480 00000000 416312d0     .......A......cA
1001c870:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
1001c880:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
1001c890:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
1001c8a0:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
1001c8b0:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
1001c8c0:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
1001c8d0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
1001c8e0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
1001c8f0:	79d99db4 44ea7843 7566202c 6974636e     ...yCx.D, functi
1001c900:	203a6e6f 00000000 65737361 6f697472     on: ....assertio
1001c910:	2522206e 66202273 656c6961 66203a64     n "%s" failed: f
1001c920:	20656c69 22732522 696c202c 2520656e     ile "%s", line %
1001c930:	25732564 00000a73                       d%s%s...

1001c938 <_init>:
1001c938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001c93a:	bf00      	nop
1001c93c:	bcf8      	pop	{r3, r4, r5, r6, r7}
1001c93e:	bc08      	pop	{r3}
1001c940:	469e      	mov	lr, r3
1001c942:	4770      	bx	lr

1001c944 <_fini>:
1001c944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001c946:	bf00      	nop
1001c948:	bcf8      	pop	{r3, r4, r5, r6, r7}
1001c94a:	bc08      	pop	{r3}
1001c94c:	469e      	mov	lr, r3
1001c94e:	4770      	bx	lr

1001c950 <__EH_FRAME_BEGIN__>:
1001c950:	0010 0000 0000 0000 7a01 0052 7c02 010e     .........zR..|..
1001c960:	0c1b 000d 0038 0000 0018 0000 8c34 ffff     ....8.......4...
1001c970:	009e 0000 5100 100e 0484 0385 0286 0187     .....Q..........
1001c980:	c75b c5c6 0ec4 4c00 420a 0a0b 0b42 100e     [......L.B..B...
1001c990:	0484 0385 0286 0187 c751 c5c6 0ec4 0000     ........Q.......
1001c9a0:	0010 0000 0000 0000 7a01 0052 7c02 010e     .........zR..|..
1001c9b0:	0c1b 000d 0014 0000 0018 0000 8c84 ffff     ................
1001c9c0:	0134 0000 0200 0a71 0b43 0000 0010 0000     4.....q.C.......
1001c9d0:	0000 0000 7a01 0052 7c02 010e 0c1b 000d     .....zR..|......
1001c9e0:	001c 0000 0018 0000 8d98 ffff 00d8 0000     ................
1001c9f0:	4100 080e 0185 0284 4902 4a0a c4c5 0b41     .A.......I.J..A.

1001ca00 <__FRAME_END__>:
1001ca00:	0000 0000                                   ....
